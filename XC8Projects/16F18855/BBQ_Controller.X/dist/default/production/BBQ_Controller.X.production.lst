

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Apr 04 23:49:10 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x620,48
    58                           	dabs	1,0x5A0,80
    59                           	dabs	1,0x550,32
    60                           	dabs	1,0x2350,0,_samples
    61                           	dabs	1,0x7E,2
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  001C                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  0110                     	;# 
   117  0110                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011C                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011E                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  018E                     	;# 
   156  018F                     	;# 
   157  0190                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0196                     	;# 
   161  0197                     	;# 
   162  0198                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019C                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  020F                     	;# 
   171  020F                     	;# 
   172  0210                     	;# 
   173  0210                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0213                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  0218                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021C                     	;# 
   192  021D                     	;# 
   193  021D                     	;# 
   194  021E                     	;# 
   195  021F                     	;# 
   196  028C                     	;# 
   197  028C                     	;# 
   198  028D                     	;# 
   199  028D                     	;# 
   200  028E                     	;# 
   201  028F                     	;# 
   202  0290                     	;# 
   203  0290                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0292                     	;# 
   207  0293                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0295                     	;# 
   211  0296                     	;# 
   212  0296                     	;# 
   213  0297                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029B                     	;# 
   220  029C                     	;# 
   221  029C                     	;# 
   222  029D                     	;# 
   223  030C                     	;# 
   224  030C                     	;# 
   225  030D                     	;# 
   226  030E                     	;# 
   227  030F                     	;# 
   228  0310                     	;# 
   229  0310                     	;# 
   230  0311                     	;# 
   231  0312                     	;# 
   232  0313                     	;# 
   233  0314                     	;# 
   234  0314                     	;# 
   235  0315                     	;# 
   236  0316                     	;# 
   237  0317                     	;# 
   238  0318                     	;# 
   239  0318                     	;# 
   240  0319                     	;# 
   241  031A                     	;# 
   242  031B                     	;# 
   243  031C                     	;# 
   244  031C                     	;# 
   245  031D                     	;# 
   246  031E                     	;# 
   247  031F                     	;# 
   248  038C                     	;# 
   249  038D                     	;# 
   250  038E                     	;# 
   251  0390                     	;# 
   252  0391                     	;# 
   253  0392                     	;# 
   254  040C                     	;# 
   255  040D                     	;# 
   256  040E                     	;# 
   257  040F                     	;# 
   258  0410                     	;# 
   259  0411                     	;# 
   260  0416                     	;# 
   261  0416                     	;# 
   262  0417                     	;# 
   263  0418                     	;# 
   264  0418                     	;# 
   265  0419                     	;# 
   266  041A                     	;# 
   267  041A                     	;# 
   268  041B                     	;# 
   269  041C                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  041F                     	;# 
   274  048C                     	;# 
   275  048C                     	;# 
   276  048D                     	;# 
   277  048E                     	;# 
   278  048F                     	;# 
   279  048F                     	;# 
   280  0490                     	;# 
   281  0491                     	;# 
   282  0492                     	;# 
   283  0492                     	;# 
   284  0493                     	;# 
   285  0494                     	;# 
   286  0495                     	;# 
   287  0495                     	;# 
   288  0496                     	;# 
   289  0497                     	;# 
   290  0498                     	;# 
   291  0499                     	;# 
   292  049A                     	;# 
   293  049B                     	;# 
   294  049C                     	;# 
   295  049D                     	;# 
   296  050C                     	;# 
   297  050C                     	;# 
   298  050D                     	;# 
   299  050E                     	;# 
   300  050F                     	;# 
   301  050F                     	;# 
   302  0510                     	;# 
   303  0511                     	;# 
   304  0512                     	;# 
   305  0512                     	;# 
   306  0513                     	;# 
   307  0514                     	;# 
   308  0515                     	;# 
   309  0515                     	;# 
   310  0516                     	;# 
   311  0517                     	;# 
   312  0518                     	;# 
   313  0519                     	;# 
   314  051A                     	;# 
   315  051B                     	;# 
   316  051C                     	;# 
   317  051D                     	;# 
   318  058C                     	;# 
   319  058C                     	;# 
   320  058D                     	;# 
   321  058E                     	;# 
   322  058F                     	;# 
   323  058F                     	;# 
   324  0590                     	;# 
   325  0591                     	;# 
   326  0592                     	;# 
   327  0593                     	;# 
   328  060C                     	;# 
   329  060D                     	;# 
   330  060E                     	;# 
   331  060F                     	;# 
   332  0610                     	;# 
   333  0611                     	;# 
   334  0612                     	;# 
   335  0613                     	;# 
   336  0614                     	;# 
   337  0616                     	;# 
   338  0617                     	;# 
   339  0618                     	;# 
   340  0619                     	;# 
   341  061A                     	;# 
   342  061B                     	;# 
   343  061C                     	;# 
   344  061D                     	;# 
   345  061E                     	;# 
   346  068C                     	;# 
   347  068D                     	;# 
   348  068E                     	;# 
   349  068F                     	;# 
   350  0690                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  070C                     	;# 
   356  070D                     	;# 
   357  070E                     	;# 
   358  070F                     	;# 
   359  0710                     	;# 
   360  0711                     	;# 
   361  0712                     	;# 
   362  0713                     	;# 
   363  0714                     	;# 
   364  0716                     	;# 
   365  0717                     	;# 
   366  0718                     	;# 
   367  0719                     	;# 
   368  071A                     	;# 
   369  071B                     	;# 
   370  071C                     	;# 
   371  071D                     	;# 
   372  071E                     	;# 
   373  0796                     	;# 
   374  0797                     	;# 
   375  0798                     	;# 
   376  0799                     	;# 
   377  079A                     	;# 
   378  079B                     	;# 
   379  080C                     	;# 
   380  080D                     	;# 
   381  080E                     	;# 
   382  080F                     	;# 
   383  0810                     	;# 
   384  0811                     	;# 
   385  0812                     	;# 
   386  0813                     	;# 
   387  0814                     	;# 
   388  081A                     	;# 
   389  081B                     	;# 
   390  081C                     	;# 
   391  081D                     	;# 
   392  081E                     	;# 
   393  081F                     	;# 
   394  088C                     	;# 
   395  088D                     	;# 
   396  088E                     	;# 
   397  088F                     	;# 
   398  0890                     	;# 
   399  0891                     	;# 
   400  0892                     	;# 
   401  0893                     	;# 
   402  0895                     	;# 
   403  0896                     	;# 
   404  0897                     	;# 
   405  0898                     	;# 
   406  0899                     	;# 
   407  089A                     	;# 
   408  089B                     	;# 
   409  090C                     	;# 
   410  090E                     	;# 
   411  090F                     	;# 
   412  091F                     	;# 
   413  091F                     	;# 
   414  098F                     	;# 
   415  098F                     	;# 
   416  0990                     	;# 
   417  0991                     	;# 
   418  0992                     	;# 
   419  0993                     	;# 
   420  0994                     	;# 
   421  0995                     	;# 
   422  0996                     	;# 
   423  0997                     	;# 
   424  0E0F                     	;# 
   425  0E10                     	;# 
   426  0E11                     	;# 
   427  0E12                     	;# 
   428  0E13                     	;# 
   429  0E14                     	;# 
   430  0E15                     	;# 
   431  0E16                     	;# 
   432  0E17                     	;# 
   433  0E18                     	;# 
   434  0E19                     	;# 
   435  0E1A                     	;# 
   436  0E1B                     	;# 
   437  0E1C                     	;# 
   438  0E1D                     	;# 
   439  0E1E                     	;# 
   440  0E1F                     	;# 
   441  0E20                     	;# 
   442  0E21                     	;# 
   443  0E22                     	;# 
   444  0E23                     	;# 
   445  0E24                     	;# 
   446  0E25                     	;# 
   447  0E26                     	;# 
   448  0E27                     	;# 
   449  0E28                     	;# 
   450  0E29                     	;# 
   451  0E2A                     	;# 
   452  0E2B                     	;# 
   453  0E2C                     	;# 
   454  0E2D                     	;# 
   455  0E2E                     	;# 
   456  0E2F                     	;# 
   457  0E30                     	;# 
   458  0E31                     	;# 
   459  0E32                     	;# 
   460  0E33                     	;# 
   461  0E34                     	;# 
   462  0E35                     	;# 
   463  0E36                     	;# 
   464  0E37                     	;# 
   465  0E8F                     	;# 
   466  0E90                     	;# 
   467  0E91                     	;# 
   468  0E92                     	;# 
   469  0E93                     	;# 
   470  0E94                     	;# 
   471  0E95                     	;# 
   472  0E96                     	;# 
   473  0E97                     	;# 
   474  0E9C                     	;# 
   475  0E9D                     	;# 
   476  0E9E                     	;# 
   477  0EA1                     	;# 
   478  0EA2                     	;# 
   479  0EA3                     	;# 
   480  0EA4                     	;# 
   481  0EA5                     	;# 
   482  0EA9                     	;# 
   483  0EAA                     	;# 
   484  0EAB                     	;# 
   485  0EAC                     	;# 
   486  0EB1                     	;# 
   487  0EB2                     	;# 
   488  0EB3                     	;# 
   489  0EB8                     	;# 
   490  0EB9                     	;# 
   491  0EBA                     	;# 
   492  0EBB                     	;# 
   493  0EBC                     	;# 
   494  0EBD                     	;# 
   495  0EBE                     	;# 
   496  0EC3                     	;# 
   497  0EC5                     	;# 
   498  0EC6                     	;# 
   499  0EC7                     	;# 
   500  0EC8                     	;# 
   501  0EC9                     	;# 
   502  0ECA                     	;# 
   503  0ECB                     	;# 
   504  0ECC                     	;# 
   505  0F10                     	;# 
   506  0F11                     	;# 
   507  0F12                     	;# 
   508  0F13                     	;# 
   509  0F14                     	;# 
   510  0F15                     	;# 
   511  0F16                     	;# 
   512  0F17                     	;# 
   513  0F18                     	;# 
   514  0F19                     	;# 
   515  0F1A                     	;# 
   516  0F1B                     	;# 
   517  0F1C                     	;# 
   518  0F1D                     	;# 
   519  0F1E                     	;# 
   520  0F1F                     	;# 
   521  0F20                     	;# 
   522  0F21                     	;# 
   523  0F22                     	;# 
   524  0F23                     	;# 
   525  0F24                     	;# 
   526  0F25                     	;# 
   527  0F26                     	;# 
   528  0F27                     	;# 
   529  0F38                     	;# 
   530  0F39                     	;# 
   531  0F3A                     	;# 
   532  0F3B                     	;# 
   533  0F3C                     	;# 
   534  0F3D                     	;# 
   535  0F3E                     	;# 
   536  0F3F                     	;# 
   537  0F40                     	;# 
   538  0F41                     	;# 
   539  0F43                     	;# 
   540  0F44                     	;# 
   541  0F45                     	;# 
   542  0F46                     	;# 
   543  0F47                     	;# 
   544  0F48                     	;# 
   545  0F49                     	;# 
   546  0F4A                     	;# 
   547  0F4B                     	;# 
   548  0F4C                     	;# 
   549  0F4E                     	;# 
   550  0F4F                     	;# 
   551  0F50                     	;# 
   552  0F51                     	;# 
   553  0F52                     	;# 
   554  0F53                     	;# 
   555  0F54                     	;# 
   556  0F55                     	;# 
   557  0F56                     	;# 
   558  0F57                     	;# 
   559  0F65                     	;# 
   560  0F68                     	;# 
   561  0F69                     	;# 
   562  0F6A                     	;# 
   563  0F6B                     	;# 
   564  0FE4                     	;# 
   565  0FE5                     	;# 
   566  0FE6                     	;# 
   567  0FE7                     	;# 
   568  0FE8                     	;# 
   569  0FE9                     	;# 
   570  0FEA                     	;# 
   571  0FEB                     	;# 
   572  0FED                     	;# 
   573  0FEE                     	;# 
   574  0FEF                     	;# 
   575  0000                     	;# 
   576  0001                     	;# 
   577  0002                     	;# 
   578  0003                     	;# 
   579  0004                     	;# 
   580  0005                     	;# 
   581  0006                     	;# 
   582  0007                     	;# 
   583  0008                     	;# 
   584  0009                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  000D                     	;# 
   589  000E                     	;# 
   590  0010                     	;# 
   591  0011                     	;# 
   592  0012                     	;# 
   593  0013                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  001C                     	;# 
   598  001C                     	;# 
   599  001D                     	;# 
   600  001D                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  008C                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  008E                     	;# 
   608  008F                     	;# 
   609  0090                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0093                     	;# 
   613  0094                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0097                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009A                     	;# 
   620  009B                     	;# 
   621  009C                     	;# 
   622  009D                     	;# 
   623  009E                     	;# 
   624  010C                     	;# 
   625  010D                     	;# 
   626  010E                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  0110                     	;# 
   630  0110                     	;# 
   631  0111                     	;# 
   632  0112                     	;# 
   633  0112                     	;# 
   634  0113                     	;# 
   635  0114                     	;# 
   636  0114                     	;# 
   637  0115                     	;# 
   638  0116                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0119                     	;# 
   642  0119                     	;# 
   643  0119                     	;# 
   644  011A                     	;# 
   645  011A                     	;# 
   646  011A                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011C                     	;# 
   653  011C                     	;# 
   654  011C                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011E                     	;# 
   659  011E                     	;# 
   660  011E                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  018C                     	;# 
   667  018D                     	;# 
   668  018E                     	;# 
   669  018F                     	;# 
   670  0190                     	;# 
   671  0191                     	;# 
   672  0192                     	;# 
   673  0196                     	;# 
   674  0197                     	;# 
   675  0198                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019B                     	;# 
   679  019C                     	;# 
   680  020C                     	;# 
   681  020D                     	;# 
   682  020E                     	;# 
   683  020F                     	;# 
   684  020F                     	;# 
   685  0210                     	;# 
   686  0210                     	;# 
   687  0211                     	;# 
   688  0211                     	;# 
   689  0212                     	;# 
   690  0213                     	;# 
   691  0214                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0216                     	;# 
   695  0216                     	;# 
   696  0217                     	;# 
   697  0217                     	;# 
   698  0218                     	;# 
   699  0219                     	;# 
   700  021A                     	;# 
   701  021B                     	;# 
   702  021B                     	;# 
   703  021C                     	;# 
   704  021C                     	;# 
   705  021D                     	;# 
   706  021D                     	;# 
   707  021E                     	;# 
   708  021F                     	;# 
   709  028C                     	;# 
   710  028C                     	;# 
   711  028D                     	;# 
   712  028D                     	;# 
   713  028E                     	;# 
   714  028F                     	;# 
   715  0290                     	;# 
   716  0290                     	;# 
   717  0291                     	;# 
   718  0292                     	;# 
   719  0292                     	;# 
   720  0293                     	;# 
   721  0293                     	;# 
   722  0294                     	;# 
   723  0295                     	;# 
   724  0296                     	;# 
   725  0296                     	;# 
   726  0297                     	;# 
   727  0298                     	;# 
   728  0298                     	;# 
   729  0299                     	;# 
   730  0299                     	;# 
   731  029A                     	;# 
   732  029B                     	;# 
   733  029C                     	;# 
   734  029C                     	;# 
   735  029D                     	;# 
   736  030C                     	;# 
   737  030C                     	;# 
   738  030D                     	;# 
   739  030E                     	;# 
   740  030F                     	;# 
   741  0310                     	;# 
   742  0310                     	;# 
   743  0311                     	;# 
   744  0312                     	;# 
   745  0313                     	;# 
   746  0314                     	;# 
   747  0314                     	;# 
   748  0315                     	;# 
   749  0316                     	;# 
   750  0317                     	;# 
   751  0318                     	;# 
   752  0318                     	;# 
   753  0319                     	;# 
   754  031A                     	;# 
   755  031B                     	;# 
   756  031C                     	;# 
   757  031C                     	;# 
   758  031D                     	;# 
   759  031E                     	;# 
   760  031F                     	;# 
   761  038C                     	;# 
   762  038D                     	;# 
   763  038E                     	;# 
   764  0390                     	;# 
   765  0391                     	;# 
   766  0392                     	;# 
   767  040C                     	;# 
   768  040D                     	;# 
   769  040E                     	;# 
   770  040F                     	;# 
   771  0410                     	;# 
   772  0411                     	;# 
   773  0416                     	;# 
   774  0416                     	;# 
   775  0417                     	;# 
   776  0418                     	;# 
   777  0418                     	;# 
   778  0419                     	;# 
   779  041A                     	;# 
   780  041A                     	;# 
   781  041B                     	;# 
   782  041C                     	;# 
   783  041C                     	;# 
   784  041D                     	;# 
   785  041E                     	;# 
   786  041F                     	;# 
   787  048C                     	;# 
   788  048C                     	;# 
   789  048D                     	;# 
   790  048E                     	;# 
   791  048F                     	;# 
   792  048F                     	;# 
   793  0490                     	;# 
   794  0491                     	;# 
   795  0492                     	;# 
   796  0492                     	;# 
   797  0493                     	;# 
   798  0494                     	;# 
   799  0495                     	;# 
   800  0495                     	;# 
   801  0496                     	;# 
   802  0497                     	;# 
   803  0498                     	;# 
   804  0499                     	;# 
   805  049A                     	;# 
   806  049B                     	;# 
   807  049C                     	;# 
   808  049D                     	;# 
   809  050C                     	;# 
   810  050C                     	;# 
   811  050D                     	;# 
   812  050E                     	;# 
   813  050F                     	;# 
   814  050F                     	;# 
   815  0510                     	;# 
   816  0511                     	;# 
   817  0512                     	;# 
   818  0512                     	;# 
   819  0513                     	;# 
   820  0514                     	;# 
   821  0515                     	;# 
   822  0515                     	;# 
   823  0516                     	;# 
   824  0517                     	;# 
   825  0518                     	;# 
   826  0519                     	;# 
   827  051A                     	;# 
   828  051B                     	;# 
   829  051C                     	;# 
   830  051D                     	;# 
   831  058C                     	;# 
   832  058C                     	;# 
   833  058D                     	;# 
   834  058E                     	;# 
   835  058F                     	;# 
   836  058F                     	;# 
   837  0590                     	;# 
   838  0591                     	;# 
   839  0592                     	;# 
   840  0593                     	;# 
   841  060C                     	;# 
   842  060D                     	;# 
   843  060E                     	;# 
   844  060F                     	;# 
   845  0610                     	;# 
   846  0611                     	;# 
   847  0612                     	;# 
   848  0613                     	;# 
   849  0614                     	;# 
   850  0616                     	;# 
   851  0617                     	;# 
   852  0618                     	;# 
   853  0619                     	;# 
   854  061A                     	;# 
   855  061B                     	;# 
   856  061C                     	;# 
   857  061D                     	;# 
   858  061E                     	;# 
   859  068C                     	;# 
   860  068D                     	;# 
   861  068E                     	;# 
   862  068F                     	;# 
   863  0690                     	;# 
   864  0691                     	;# 
   865  0692                     	;# 
   866  0693                     	;# 
   867  0694                     	;# 
   868  070C                     	;# 
   869  070D                     	;# 
   870  070E                     	;# 
   871  070F                     	;# 
   872  0710                     	;# 
   873  0711                     	;# 
   874  0712                     	;# 
   875  0713                     	;# 
   876  0714                     	;# 
   877  0716                     	;# 
   878  0717                     	;# 
   879  0718                     	;# 
   880  0719                     	;# 
   881  071A                     	;# 
   882  071B                     	;# 
   883  071C                     	;# 
   884  071D                     	;# 
   885  071E                     	;# 
   886  0796                     	;# 
   887  0797                     	;# 
   888  0798                     	;# 
   889  0799                     	;# 
   890  079A                     	;# 
   891  079B                     	;# 
   892  080C                     	;# 
   893  080D                     	;# 
   894  080E                     	;# 
   895  080F                     	;# 
   896  0810                     	;# 
   897  0811                     	;# 
   898  0812                     	;# 
   899  0813                     	;# 
   900  0814                     	;# 
   901  081A                     	;# 
   902  081B                     	;# 
   903  081C                     	;# 
   904  081D                     	;# 
   905  081E                     	;# 
   906  081F                     	;# 
   907  088C                     	;# 
   908  088D                     	;# 
   909  088E                     	;# 
   910  088F                     	;# 
   911  0890                     	;# 
   912  0891                     	;# 
   913  0892                     	;# 
   914  0893                     	;# 
   915  0895                     	;# 
   916  0896                     	;# 
   917  0897                     	;# 
   918  0898                     	;# 
   919  0899                     	;# 
   920  089A                     	;# 
   921  089B                     	;# 
   922  090C                     	;# 
   923  090E                     	;# 
   924  090F                     	;# 
   925  091F                     	;# 
   926  091F                     	;# 
   927  098F                     	;# 
   928  098F                     	;# 
   929  0990                     	;# 
   930  0991                     	;# 
   931  0992                     	;# 
   932  0993                     	;# 
   933  0994                     	;# 
   934  0995                     	;# 
   935  0996                     	;# 
   936  0997                     	;# 
   937  0E0F                     	;# 
   938  0E10                     	;# 
   939  0E11                     	;# 
   940  0E12                     	;# 
   941  0E13                     	;# 
   942  0E14                     	;# 
   943  0E15                     	;# 
   944  0E16                     	;# 
   945  0E17                     	;# 
   946  0E18                     	;# 
   947  0E19                     	;# 
   948  0E1A                     	;# 
   949  0E1B                     	;# 
   950  0E1C                     	;# 
   951  0E1D                     	;# 
   952  0E1E                     	;# 
   953  0E1F                     	;# 
   954  0E20                     	;# 
   955  0E21                     	;# 
   956  0E22                     	;# 
   957  0E23                     	;# 
   958  0E24                     	;# 
   959  0E25                     	;# 
   960  0E26                     	;# 
   961  0E27                     	;# 
   962  0E28                     	;# 
   963  0E29                     	;# 
   964  0E2A                     	;# 
   965  0E2B                     	;# 
   966  0E2C                     	;# 
   967  0E2D                     	;# 
   968  0E2E                     	;# 
   969  0E2F                     	;# 
   970  0E30                     	;# 
   971  0E31                     	;# 
   972  0E32                     	;# 
   973  0E33                     	;# 
   974  0E34                     	;# 
   975  0E35                     	;# 
   976  0E36                     	;# 
   977  0E37                     	;# 
   978  0E8F                     	;# 
   979  0E90                     	;# 
   980  0E91                     	;# 
   981  0E92                     	;# 
   982  0E93                     	;# 
   983  0E94                     	;# 
   984  0E95                     	;# 
   985  0E96                     	;# 
   986  0E97                     	;# 
   987  0E9C                     	;# 
   988  0E9D                     	;# 
   989  0E9E                     	;# 
   990  0EA1                     	;# 
   991  0EA2                     	;# 
   992  0EA3                     	;# 
   993  0EA4                     	;# 
   994  0EA5                     	;# 
   995  0EA9                     	;# 
   996  0EAA                     	;# 
   997  0EAB                     	;# 
   998  0EAC                     	;# 
   999  0EB1                     	;# 
  1000  0EB2                     	;# 
  1001  0EB3                     	;# 
  1002  0EB8                     	;# 
  1003  0EB9                     	;# 
  1004  0EBA                     	;# 
  1005  0EBB                     	;# 
  1006  0EBC                     	;# 
  1007  0EBD                     	;# 
  1008  0EBE                     	;# 
  1009  0EC3                     	;# 
  1010  0EC5                     	;# 
  1011  0EC6                     	;# 
  1012  0EC7                     	;# 
  1013  0EC8                     	;# 
  1014  0EC9                     	;# 
  1015  0ECA                     	;# 
  1016  0ECB                     	;# 
  1017  0ECC                     	;# 
  1018  0F10                     	;# 
  1019  0F11                     	;# 
  1020  0F12                     	;# 
  1021  0F13                     	;# 
  1022  0F14                     	;# 
  1023  0F15                     	;# 
  1024  0F16                     	;# 
  1025  0F17                     	;# 
  1026  0F18                     	;# 
  1027  0F19                     	;# 
  1028  0F1A                     	;# 
  1029  0F1B                     	;# 
  1030  0F1C                     	;# 
  1031  0F1D                     	;# 
  1032  0F1E                     	;# 
  1033  0F1F                     	;# 
  1034  0F20                     	;# 
  1035  0F21                     	;# 
  1036  0F22                     	;# 
  1037  0F23                     	;# 
  1038  0F24                     	;# 
  1039  0F25                     	;# 
  1040  0F26                     	;# 
  1041  0F27                     	;# 
  1042  0F38                     	;# 
  1043  0F39                     	;# 
  1044  0F3A                     	;# 
  1045  0F3B                     	;# 
  1046  0F3C                     	;# 
  1047  0F3D                     	;# 
  1048  0F3E                     	;# 
  1049  0F3F                     	;# 
  1050  0F40                     	;# 
  1051  0F41                     	;# 
  1052  0F43                     	;# 
  1053  0F44                     	;# 
  1054  0F45                     	;# 
  1055  0F46                     	;# 
  1056  0F47                     	;# 
  1057  0F48                     	;# 
  1058  0F49                     	;# 
  1059  0F4A                     	;# 
  1060  0F4B                     	;# 
  1061  0F4C                     	;# 
  1062  0F4E                     	;# 
  1063  0F4F                     	;# 
  1064  0F50                     	;# 
  1065  0F51                     	;# 
  1066  0F52                     	;# 
  1067  0F53                     	;# 
  1068  0F54                     	;# 
  1069  0F55                     	;# 
  1070  0F56                     	;# 
  1071  0F57                     	;# 
  1072  0F65                     	;# 
  1073  0F68                     	;# 
  1074  0F69                     	;# 
  1075  0F6A                     	;# 
  1076  0F6B                     	;# 
  1077  0FE4                     	;# 
  1078  0FE5                     	;# 
  1079  0FE6                     	;# 
  1080  0FE7                     	;# 
  1081  0FE8                     	;# 
  1082  0FE9                     	;# 
  1083  0FEA                     	;# 
  1084  0FEB                     	;# 
  1085  0FED                     	;# 
  1086  0FEE                     	;# 
  1087  0FEF                     	;# 
  1088  0000                     	;# 
  1089  0001                     	;# 
  1090  0002                     	;# 
  1091  0003                     	;# 
  1092  0004                     	;# 
  1093  0005                     	;# 
  1094  0006                     	;# 
  1095  0007                     	;# 
  1096  0008                     	;# 
  1097  0009                     	;# 
  1098  000A                     	;# 
  1099  000B                     	;# 
  1100  000C                     	;# 
  1101  000D                     	;# 
  1102  000E                     	;# 
  1103  0010                     	;# 
  1104  0011                     	;# 
  1105  0012                     	;# 
  1106  0013                     	;# 
  1107  0016                     	;# 
  1108  0017                     	;# 
  1109  0018                     	;# 
  1110  001C                     	;# 
  1111  001C                     	;# 
  1112  001D                     	;# 
  1113  001D                     	;# 
  1114  001E                     	;# 
  1115  001F                     	;# 
  1116  008C                     	;# 
  1117  008C                     	;# 
  1118  008D                     	;# 
  1119  008E                     	;# 
  1120  008E                     	;# 
  1121  008F                     	;# 
  1122  0090                     	;# 
  1123  0090                     	;# 
  1124  0091                     	;# 
  1125  0093                     	;# 
  1126  0094                     	;# 
  1127  0095                     	;# 
  1128  0096                     	;# 
  1129  0097                     	;# 
  1130  0098                     	;# 
  1131  0099                     	;# 
  1132  009A                     	;# 
  1133  009B                     	;# 
  1134  009C                     	;# 
  1135  009D                     	;# 
  1136  009E                     	;# 
  1137  010C                     	;# 
  1138  010D                     	;# 
  1139  010E                     	;# 
  1140  010E                     	;# 
  1141  010F                     	;# 
  1142  0110                     	;# 
  1143  0110                     	;# 
  1144  0111                     	;# 
  1145  0112                     	;# 
  1146  0112                     	;# 
  1147  0113                     	;# 
  1148  0114                     	;# 
  1149  0114                     	;# 
  1150  0115                     	;# 
  1151  0116                     	;# 
  1152  0116                     	;# 
  1153  0117                     	;# 
  1154  0119                     	;# 
  1155  0119                     	;# 
  1156  0119                     	;# 
  1157  011A                     	;# 
  1158  011A                     	;# 
  1159  011A                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011C                     	;# 
  1166  011C                     	;# 
  1167  011C                     	;# 
  1168  011D                     	;# 
  1169  011D                     	;# 
  1170  011D                     	;# 
  1171  011E                     	;# 
  1172  011E                     	;# 
  1173  011E                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  018C                     	;# 
  1180  018D                     	;# 
  1181  018E                     	;# 
  1182  018F                     	;# 
  1183  0190                     	;# 
  1184  0191                     	;# 
  1185  0192                     	;# 
  1186  0196                     	;# 
  1187  0197                     	;# 
  1188  0198                     	;# 
  1189  0199                     	;# 
  1190  019A                     	;# 
  1191  019B                     	;# 
  1192  019C                     	;# 
  1193  020C                     	;# 
  1194  020D                     	;# 
  1195  020E                     	;# 
  1196  020F                     	;# 
  1197  020F                     	;# 
  1198  0210                     	;# 
  1199  0210                     	;# 
  1200  0211                     	;# 
  1201  0211                     	;# 
  1202  0212                     	;# 
  1203  0213                     	;# 
  1204  0214                     	;# 
  1205  0215                     	;# 
  1206  0215                     	;# 
  1207  0216                     	;# 
  1208  0216                     	;# 
  1209  0217                     	;# 
  1210  0217                     	;# 
  1211  0218                     	;# 
  1212  0219                     	;# 
  1213  021A                     	;# 
  1214  021B                     	;# 
  1215  021B                     	;# 
  1216  021C                     	;# 
  1217  021C                     	;# 
  1218  021D                     	;# 
  1219  021D                     	;# 
  1220  021E                     	;# 
  1221  021F                     	;# 
  1222  028C                     	;# 
  1223  028C                     	;# 
  1224  028D                     	;# 
  1225  028D                     	;# 
  1226  028E                     	;# 
  1227  028F                     	;# 
  1228  0290                     	;# 
  1229  0290                     	;# 
  1230  0291                     	;# 
  1231  0292                     	;# 
  1232  0292                     	;# 
  1233  0293                     	;# 
  1234  0293                     	;# 
  1235  0294                     	;# 
  1236  0295                     	;# 
  1237  0296                     	;# 
  1238  0296                     	;# 
  1239  0297                     	;# 
  1240  0298                     	;# 
  1241  0298                     	;# 
  1242  0299                     	;# 
  1243  0299                     	;# 
  1244  029A                     	;# 
  1245  029B                     	;# 
  1246  029C                     	;# 
  1247  029C                     	;# 
  1248  029D                     	;# 
  1249  030C                     	;# 
  1250  030C                     	;# 
  1251  030D                     	;# 
  1252  030E                     	;# 
  1253  030F                     	;# 
  1254  0310                     	;# 
  1255  0310                     	;# 
  1256  0311                     	;# 
  1257  0312                     	;# 
  1258  0313                     	;# 
  1259  0314                     	;# 
  1260  0314                     	;# 
  1261  0315                     	;# 
  1262  0316                     	;# 
  1263  0317                     	;# 
  1264  0318                     	;# 
  1265  0318                     	;# 
  1266  0319                     	;# 
  1267  031A                     	;# 
  1268  031B                     	;# 
  1269  031C                     	;# 
  1270  031C                     	;# 
  1271  031D                     	;# 
  1272  031E                     	;# 
  1273  031F                     	;# 
  1274  038C                     	;# 
  1275  038D                     	;# 
  1276  038E                     	;# 
  1277  0390                     	;# 
  1278  0391                     	;# 
  1279  0392                     	;# 
  1280  040C                     	;# 
  1281  040D                     	;# 
  1282  040E                     	;# 
  1283  040F                     	;# 
  1284  0410                     	;# 
  1285  0411                     	;# 
  1286  0416                     	;# 
  1287  0416                     	;# 
  1288  0417                     	;# 
  1289  0418                     	;# 
  1290  0418                     	;# 
  1291  0419                     	;# 
  1292  041A                     	;# 
  1293  041A                     	;# 
  1294  041B                     	;# 
  1295  041C                     	;# 
  1296  041C                     	;# 
  1297  041D                     	;# 
  1298  041E                     	;# 
  1299  041F                     	;# 
  1300  048C                     	;# 
  1301  048C                     	;# 
  1302  048D                     	;# 
  1303  048E                     	;# 
  1304  048F                     	;# 
  1305  048F                     	;# 
  1306  0490                     	;# 
  1307  0491                     	;# 
  1308  0492                     	;# 
  1309  0492                     	;# 
  1310  0493                     	;# 
  1311  0494                     	;# 
  1312  0495                     	;# 
  1313  0495                     	;# 
  1314  0496                     	;# 
  1315  0497                     	;# 
  1316  0498                     	;# 
  1317  0499                     	;# 
  1318  049A                     	;# 
  1319  049B                     	;# 
  1320  049C                     	;# 
  1321  049D                     	;# 
  1322  050C                     	;# 
  1323  050C                     	;# 
  1324  050D                     	;# 
  1325  050E                     	;# 
  1326  050F                     	;# 
  1327  050F                     	;# 
  1328  0510                     	;# 
  1329  0511                     	;# 
  1330  0512                     	;# 
  1331  0512                     	;# 
  1332  0513                     	;# 
  1333  0514                     	;# 
  1334  0515                     	;# 
  1335  0515                     	;# 
  1336  0516                     	;# 
  1337  0517                     	;# 
  1338  0518                     	;# 
  1339  0519                     	;# 
  1340  051A                     	;# 
  1341  051B                     	;# 
  1342  051C                     	;# 
  1343  051D                     	;# 
  1344  058C                     	;# 
  1345  058C                     	;# 
  1346  058D                     	;# 
  1347  058E                     	;# 
  1348  058F                     	;# 
  1349  058F                     	;# 
  1350  0590                     	;# 
  1351  0591                     	;# 
  1352  0592                     	;# 
  1353  0593                     	;# 
  1354  060C                     	;# 
  1355  060D                     	;# 
  1356  060E                     	;# 
  1357  060F                     	;# 
  1358  0610                     	;# 
  1359  0611                     	;# 
  1360  0612                     	;# 
  1361  0613                     	;# 
  1362  0614                     	;# 
  1363  0616                     	;# 
  1364  0617                     	;# 
  1365  0618                     	;# 
  1366  0619                     	;# 
  1367  061A                     	;# 
  1368  061B                     	;# 
  1369  061C                     	;# 
  1370  061D                     	;# 
  1371  061E                     	;# 
  1372  068C                     	;# 
  1373  068D                     	;# 
  1374  068E                     	;# 
  1375  068F                     	;# 
  1376  0690                     	;# 
  1377  0691                     	;# 
  1378  0692                     	;# 
  1379  0693                     	;# 
  1380  0694                     	;# 
  1381  070C                     	;# 
  1382  070D                     	;# 
  1383  070E                     	;# 
  1384  070F                     	;# 
  1385  0710                     	;# 
  1386  0711                     	;# 
  1387  0712                     	;# 
  1388  0713                     	;# 
  1389  0714                     	;# 
  1390  0716                     	;# 
  1391  0717                     	;# 
  1392  0718                     	;# 
  1393  0719                     	;# 
  1394  071A                     	;# 
  1395  071B                     	;# 
  1396  071C                     	;# 
  1397  071D                     	;# 
  1398  071E                     	;# 
  1399  0796                     	;# 
  1400  0797                     	;# 
  1401  0798                     	;# 
  1402  0799                     	;# 
  1403  079A                     	;# 
  1404  079B                     	;# 
  1405  080C                     	;# 
  1406  080D                     	;# 
  1407  080E                     	;# 
  1408  080F                     	;# 
  1409  0810                     	;# 
  1410  0811                     	;# 
  1411  0812                     	;# 
  1412  0813                     	;# 
  1413  0814                     	;# 
  1414  081A                     	;# 
  1415  081B                     	;# 
  1416  081C                     	;# 
  1417  081D                     	;# 
  1418  081E                     	;# 
  1419  081F                     	;# 
  1420  088C                     	;# 
  1421  088D                     	;# 
  1422  088E                     	;# 
  1423  088F                     	;# 
  1424  0890                     	;# 
  1425  0891                     	;# 
  1426  0892                     	;# 
  1427  0893                     	;# 
  1428  0895                     	;# 
  1429  0896                     	;# 
  1430  0897                     	;# 
  1431  0898                     	;# 
  1432  0899                     	;# 
  1433  089A                     	;# 
  1434  089B                     	;# 
  1435  090C                     	;# 
  1436  090E                     	;# 
  1437  090F                     	;# 
  1438  091F                     	;# 
  1439  091F                     	;# 
  1440  098F                     	;# 
  1441  098F                     	;# 
  1442  0990                     	;# 
  1443  0991                     	;# 
  1444  0992                     	;# 
  1445  0993                     	;# 
  1446  0994                     	;# 
  1447  0995                     	;# 
  1448  0996                     	;# 
  1449  0997                     	;# 
  1450  0E0F                     	;# 
  1451  0E10                     	;# 
  1452  0E11                     	;# 
  1453  0E12                     	;# 
  1454  0E13                     	;# 
  1455  0E14                     	;# 
  1456  0E15                     	;# 
  1457  0E16                     	;# 
  1458  0E17                     	;# 
  1459  0E18                     	;# 
  1460  0E19                     	;# 
  1461  0E1A                     	;# 
  1462  0E1B                     	;# 
  1463  0E1C                     	;# 
  1464  0E1D                     	;# 
  1465  0E1E                     	;# 
  1466  0E1F                     	;# 
  1467  0E20                     	;# 
  1468  0E21                     	;# 
  1469  0E22                     	;# 
  1470  0E23                     	;# 
  1471  0E24                     	;# 
  1472  0E25                     	;# 
  1473  0E26                     	;# 
  1474  0E27                     	;# 
  1475  0E28                     	;# 
  1476  0E29                     	;# 
  1477  0E2A                     	;# 
  1478  0E2B                     	;# 
  1479  0E2C                     	;# 
  1480  0E2D                     	;# 
  1481  0E2E                     	;# 
  1482  0E2F                     	;# 
  1483  0E30                     	;# 
  1484  0E31                     	;# 
  1485  0E32                     	;# 
  1486  0E33                     	;# 
  1487  0E34                     	;# 
  1488  0E35                     	;# 
  1489  0E36                     	;# 
  1490  0E37                     	;# 
  1491  0E8F                     	;# 
  1492  0E90                     	;# 
  1493  0E91                     	;# 
  1494  0E92                     	;# 
  1495  0E93                     	;# 
  1496  0E94                     	;# 
  1497  0E95                     	;# 
  1498  0E96                     	;# 
  1499  0E97                     	;# 
  1500  0E9C                     	;# 
  1501  0E9D                     	;# 
  1502  0E9E                     	;# 
  1503  0EA1                     	;# 
  1504  0EA2                     	;# 
  1505  0EA3                     	;# 
  1506  0EA4                     	;# 
  1507  0EA5                     	;# 
  1508  0EA9                     	;# 
  1509  0EAA                     	;# 
  1510  0EAB                     	;# 
  1511  0EAC                     	;# 
  1512  0EB1                     	;# 
  1513  0EB2                     	;# 
  1514  0EB3                     	;# 
  1515  0EB8                     	;# 
  1516  0EB9                     	;# 
  1517  0EBA                     	;# 
  1518  0EBB                     	;# 
  1519  0EBC                     	;# 
  1520  0EBD                     	;# 
  1521  0EBE                     	;# 
  1522  0EC3                     	;# 
  1523  0EC5                     	;# 
  1524  0EC6                     	;# 
  1525  0EC7                     	;# 
  1526  0EC8                     	;# 
  1527  0EC9                     	;# 
  1528  0ECA                     	;# 
  1529  0ECB                     	;# 
  1530  0ECC                     	;# 
  1531  0F10                     	;# 
  1532  0F11                     	;# 
  1533  0F12                     	;# 
  1534  0F13                     	;# 
  1535  0F14                     	;# 
  1536  0F15                     	;# 
  1537  0F16                     	;# 
  1538  0F17                     	;# 
  1539  0F18                     	;# 
  1540  0F19                     	;# 
  1541  0F1A                     	;# 
  1542  0F1B                     	;# 
  1543  0F1C                     	;# 
  1544  0F1D                     	;# 
  1545  0F1E                     	;# 
  1546  0F1F                     	;# 
  1547  0F20                     	;# 
  1548  0F21                     	;# 
  1549  0F22                     	;# 
  1550  0F23                     	;# 
  1551  0F24                     	;# 
  1552  0F25                     	;# 
  1553  0F26                     	;# 
  1554  0F27                     	;# 
  1555  0F38                     	;# 
  1556  0F39                     	;# 
  1557  0F3A                     	;# 
  1558  0F3B                     	;# 
  1559  0F3C                     	;# 
  1560  0F3D                     	;# 
  1561  0F3E                     	;# 
  1562  0F3F                     	;# 
  1563  0F40                     	;# 
  1564  0F41                     	;# 
  1565  0F43                     	;# 
  1566  0F44                     	;# 
  1567  0F45                     	;# 
  1568  0F46                     	;# 
  1569  0F47                     	;# 
  1570  0F48                     	;# 
  1571  0F49                     	;# 
  1572  0F4A                     	;# 
  1573  0F4B                     	;# 
  1574  0F4C                     	;# 
  1575  0F4E                     	;# 
  1576  0F4F                     	;# 
  1577  0F50                     	;# 
  1578  0F51                     	;# 
  1579  0F52                     	;# 
  1580  0F53                     	;# 
  1581  0F54                     	;# 
  1582  0F55                     	;# 
  1583  0F56                     	;# 
  1584  0F57                     	;# 
  1585  0F65                     	;# 
  1586  0F68                     	;# 
  1587  0F69                     	;# 
  1588  0F6A                     	;# 
  1589  0F6B                     	;# 
  1590  0FE4                     	;# 
  1591  0FE5                     	;# 
  1592  0FE6                     	;# 
  1593  0FE7                     	;# 
  1594  0FE8                     	;# 
  1595  0FE9                     	;# 
  1596  0FEA                     	;# 
  1597  0FEB                     	;# 
  1598  0FED                     	;# 
  1599  0FEE                     	;# 
  1600  0FEF                     	;# 
  1601  0000                     	;# 
  1602  0001                     	;# 
  1603  0002                     	;# 
  1604  0003                     	;# 
  1605  0004                     	;# 
  1606  0005                     	;# 
  1607  0006                     	;# 
  1608  0007                     	;# 
  1609  0008                     	;# 
  1610  0009                     	;# 
  1611  000A                     	;# 
  1612  000B                     	;# 
  1613  000C                     	;# 
  1614  000D                     	;# 
  1615  000E                     	;# 
  1616  0010                     	;# 
  1617  0011                     	;# 
  1618  0012                     	;# 
  1619  0013                     	;# 
  1620  0016                     	;# 
  1621  0017                     	;# 
  1622  0018                     	;# 
  1623  001C                     	;# 
  1624  001C                     	;# 
  1625  001D                     	;# 
  1626  001D                     	;# 
  1627  001E                     	;# 
  1628  001F                     	;# 
  1629  008C                     	;# 
  1630  008C                     	;# 
  1631  008D                     	;# 
  1632  008E                     	;# 
  1633  008E                     	;# 
  1634  008F                     	;# 
  1635  0090                     	;# 
  1636  0090                     	;# 
  1637  0091                     	;# 
  1638  0093                     	;# 
  1639  0094                     	;# 
  1640  0095                     	;# 
  1641  0096                     	;# 
  1642  0097                     	;# 
  1643  0098                     	;# 
  1644  0099                     	;# 
  1645  009A                     	;# 
  1646  009B                     	;# 
  1647  009C                     	;# 
  1648  009D                     	;# 
  1649  009E                     	;# 
  1650  010C                     	;# 
  1651  010D                     	;# 
  1652  010E                     	;# 
  1653  010E                     	;# 
  1654  010F                     	;# 
  1655  0110                     	;# 
  1656  0110                     	;# 
  1657  0111                     	;# 
  1658  0112                     	;# 
  1659  0112                     	;# 
  1660  0113                     	;# 
  1661  0114                     	;# 
  1662  0114                     	;# 
  1663  0115                     	;# 
  1664  0116                     	;# 
  1665  0116                     	;# 
  1666  0117                     	;# 
  1667  0119                     	;# 
  1668  0119                     	;# 
  1669  0119                     	;# 
  1670  011A                     	;# 
  1671  011A                     	;# 
  1672  011A                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011C                     	;# 
  1679  011C                     	;# 
  1680  011C                     	;# 
  1681  011D                     	;# 
  1682  011D                     	;# 
  1683  011D                     	;# 
  1684  011E                     	;# 
  1685  011E                     	;# 
  1686  011E                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  018C                     	;# 
  1693  018D                     	;# 
  1694  018E                     	;# 
  1695  018F                     	;# 
  1696  0190                     	;# 
  1697  0191                     	;# 
  1698  0192                     	;# 
  1699  0196                     	;# 
  1700  0197                     	;# 
  1701  0198                     	;# 
  1702  0199                     	;# 
  1703  019A                     	;# 
  1704  019B                     	;# 
  1705  019C                     	;# 
  1706  020C                     	;# 
  1707  020D                     	;# 
  1708  020E                     	;# 
  1709  020F                     	;# 
  1710  020F                     	;# 
  1711  0210                     	;# 
  1712  0210                     	;# 
  1713  0211                     	;# 
  1714  0211                     	;# 
  1715  0212                     	;# 
  1716  0213                     	;# 
  1717  0214                     	;# 
  1718  0215                     	;# 
  1719  0215                     	;# 
  1720  0216                     	;# 
  1721  0216                     	;# 
  1722  0217                     	;# 
  1723  0217                     	;# 
  1724  0218                     	;# 
  1725  0219                     	;# 
  1726  021A                     	;# 
  1727  021B                     	;# 
  1728  021B                     	;# 
  1729  021C                     	;# 
  1730  021C                     	;# 
  1731  021D                     	;# 
  1732  021D                     	;# 
  1733  021E                     	;# 
  1734  021F                     	;# 
  1735  028C                     	;# 
  1736  028C                     	;# 
  1737  028D                     	;# 
  1738  028D                     	;# 
  1739  028E                     	;# 
  1740  028F                     	;# 
  1741  0290                     	;# 
  1742  0290                     	;# 
  1743  0291                     	;# 
  1744  0292                     	;# 
  1745  0292                     	;# 
  1746  0293                     	;# 
  1747  0293                     	;# 
  1748  0294                     	;# 
  1749  0295                     	;# 
  1750  0296                     	;# 
  1751  0296                     	;# 
  1752  0297                     	;# 
  1753  0298                     	;# 
  1754  0298                     	;# 
  1755  0299                     	;# 
  1756  0299                     	;# 
  1757  029A                     	;# 
  1758  029B                     	;# 
  1759  029C                     	;# 
  1760  029C                     	;# 
  1761  029D                     	;# 
  1762  030C                     	;# 
  1763  030C                     	;# 
  1764  030D                     	;# 
  1765  030E                     	;# 
  1766  030F                     	;# 
  1767  0310                     	;# 
  1768  0310                     	;# 
  1769  0311                     	;# 
  1770  0312                     	;# 
  1771  0313                     	;# 
  1772  0314                     	;# 
  1773  0314                     	;# 
  1774  0315                     	;# 
  1775  0316                     	;# 
  1776  0317                     	;# 
  1777  0318                     	;# 
  1778  0318                     	;# 
  1779  0319                     	;# 
  1780  031A                     	;# 
  1781  031B                     	;# 
  1782  031C                     	;# 
  1783  031C                     	;# 
  1784  031D                     	;# 
  1785  031E                     	;# 
  1786  031F                     	;# 
  1787  038C                     	;# 
  1788  038D                     	;# 
  1789  038E                     	;# 
  1790  0390                     	;# 
  1791  0391                     	;# 
  1792  0392                     	;# 
  1793  040C                     	;# 
  1794  040D                     	;# 
  1795  040E                     	;# 
  1796  040F                     	;# 
  1797  0410                     	;# 
  1798  0411                     	;# 
  1799  0416                     	;# 
  1800  0416                     	;# 
  1801  0417                     	;# 
  1802  0418                     	;# 
  1803  0418                     	;# 
  1804  0419                     	;# 
  1805  041A                     	;# 
  1806  041A                     	;# 
  1807  041B                     	;# 
  1808  041C                     	;# 
  1809  041C                     	;# 
  1810  041D                     	;# 
  1811  041E                     	;# 
  1812  041F                     	;# 
  1813  048C                     	;# 
  1814  048C                     	;# 
  1815  048D                     	;# 
  1816  048E                     	;# 
  1817  048F                     	;# 
  1818  048F                     	;# 
  1819  0490                     	;# 
  1820  0491                     	;# 
  1821  0492                     	;# 
  1822  0492                     	;# 
  1823  0493                     	;# 
  1824  0494                     	;# 
  1825  0495                     	;# 
  1826  0495                     	;# 
  1827  0496                     	;# 
  1828  0497                     	;# 
  1829  0498                     	;# 
  1830  0499                     	;# 
  1831  049A                     	;# 
  1832  049B                     	;# 
  1833  049C                     	;# 
  1834  049D                     	;# 
  1835  050C                     	;# 
  1836  050C                     	;# 
  1837  050D                     	;# 
  1838  050E                     	;# 
  1839  050F                     	;# 
  1840  050F                     	;# 
  1841  0510                     	;# 
  1842  0511                     	;# 
  1843  0512                     	;# 
  1844  0512                     	;# 
  1845  0513                     	;# 
  1846  0514                     	;# 
  1847  0515                     	;# 
  1848  0515                     	;# 
  1849  0516                     	;# 
  1850  0517                     	;# 
  1851  0518                     	;# 
  1852  0519                     	;# 
  1853  051A                     	;# 
  1854  051B                     	;# 
  1855  051C                     	;# 
  1856  051D                     	;# 
  1857  058C                     	;# 
  1858  058C                     	;# 
  1859  058D                     	;# 
  1860  058E                     	;# 
  1861  058F                     	;# 
  1862  058F                     	;# 
  1863  0590                     	;# 
  1864  0591                     	;# 
  1865  0592                     	;# 
  1866  0593                     	;# 
  1867  060C                     	;# 
  1868  060D                     	;# 
  1869  060E                     	;# 
  1870  060F                     	;# 
  1871  0610                     	;# 
  1872  0611                     	;# 
  1873  0612                     	;# 
  1874  0613                     	;# 
  1875  0614                     	;# 
  1876  0616                     	;# 
  1877  0617                     	;# 
  1878  0618                     	;# 
  1879  0619                     	;# 
  1880  061A                     	;# 
  1881  061B                     	;# 
  1882  061C                     	;# 
  1883  061D                     	;# 
  1884  061E                     	;# 
  1885  068C                     	;# 
  1886  068D                     	;# 
  1887  068E                     	;# 
  1888  068F                     	;# 
  1889  0690                     	;# 
  1890  0691                     	;# 
  1891  0692                     	;# 
  1892  0693                     	;# 
  1893  0694                     	;# 
  1894  070C                     	;# 
  1895  070D                     	;# 
  1896  070E                     	;# 
  1897  070F                     	;# 
  1898  0710                     	;# 
  1899  0711                     	;# 
  1900  0712                     	;# 
  1901  0713                     	;# 
  1902  0714                     	;# 
  1903  0716                     	;# 
  1904  0717                     	;# 
  1905  0718                     	;# 
  1906  0719                     	;# 
  1907  071A                     	;# 
  1908  071B                     	;# 
  1909  071C                     	;# 
  1910  071D                     	;# 
  1911  071E                     	;# 
  1912  0796                     	;# 
  1913  0797                     	;# 
  1914  0798                     	;# 
  1915  0799                     	;# 
  1916  079A                     	;# 
  1917  079B                     	;# 
  1918  080C                     	;# 
  1919  080D                     	;# 
  1920  080E                     	;# 
  1921  080F                     	;# 
  1922  0810                     	;# 
  1923  0811                     	;# 
  1924  0812                     	;# 
  1925  0813                     	;# 
  1926  0814                     	;# 
  1927  081A                     	;# 
  1928  081B                     	;# 
  1929  081C                     	;# 
  1930  081D                     	;# 
  1931  081E                     	;# 
  1932  081F                     	;# 
  1933  088C                     	;# 
  1934  088D                     	;# 
  1935  088E                     	;# 
  1936  088F                     	;# 
  1937  0890                     	;# 
  1938  0891                     	;# 
  1939  0892                     	;# 
  1940  0893                     	;# 
  1941  0895                     	;# 
  1942  0896                     	;# 
  1943  0897                     	;# 
  1944  0898                     	;# 
  1945  0899                     	;# 
  1946  089A                     	;# 
  1947  089B                     	;# 
  1948  090C                     	;# 
  1949  090E                     	;# 
  1950  090F                     	;# 
  1951  091F                     	;# 
  1952  091F                     	;# 
  1953  098F                     	;# 
  1954  098F                     	;# 
  1955  0990                     	;# 
  1956  0991                     	;# 
  1957  0992                     	;# 
  1958  0993                     	;# 
  1959  0994                     	;# 
  1960  0995                     	;# 
  1961  0996                     	;# 
  1962  0997                     	;# 
  1963  0E0F                     	;# 
  1964  0E10                     	;# 
  1965  0E11                     	;# 
  1966  0E12                     	;# 
  1967  0E13                     	;# 
  1968  0E14                     	;# 
  1969  0E15                     	;# 
  1970  0E16                     	;# 
  1971  0E17                     	;# 
  1972  0E18                     	;# 
  1973  0E19                     	;# 
  1974  0E1A                     	;# 
  1975  0E1B                     	;# 
  1976  0E1C                     	;# 
  1977  0E1D                     	;# 
  1978  0E1E                     	;# 
  1979  0E1F                     	;# 
  1980  0E20                     	;# 
  1981  0E21                     	;# 
  1982  0E22                     	;# 
  1983  0E23                     	;# 
  1984  0E24                     	;# 
  1985  0E25                     	;# 
  1986  0E26                     	;# 
  1987  0E27                     	;# 
  1988  0E28                     	;# 
  1989  0E29                     	;# 
  1990  0E2A                     	;# 
  1991  0E2B                     	;# 
  1992  0E2C                     	;# 
  1993  0E2D                     	;# 
  1994  0E2E                     	;# 
  1995  0E2F                     	;# 
  1996  0E30                     	;# 
  1997  0E31                     	;# 
  1998  0E32                     	;# 
  1999  0E33                     	;# 
  2000  0E34                     	;# 
  2001  0E35                     	;# 
  2002  0E36                     	;# 
  2003  0E37                     	;# 
  2004  0E8F                     	;# 
  2005  0E90                     	;# 
  2006  0E91                     	;# 
  2007  0E92                     	;# 
  2008  0E93                     	;# 
  2009  0E94                     	;# 
  2010  0E95                     	;# 
  2011  0E96                     	;# 
  2012  0E97                     	;# 
  2013  0E9C                     	;# 
  2014  0E9D                     	;# 
  2015  0E9E                     	;# 
  2016  0EA1                     	;# 
  2017  0EA2                     	;# 
  2018  0EA3                     	;# 
  2019  0EA4                     	;# 
  2020  0EA5                     	;# 
  2021  0EA9                     	;# 
  2022  0EAA                     	;# 
  2023  0EAB                     	;# 
  2024  0EAC                     	;# 
  2025  0EB1                     	;# 
  2026  0EB2                     	;# 
  2027  0EB3                     	;# 
  2028  0EB8                     	;# 
  2029  0EB9                     	;# 
  2030  0EBA                     	;# 
  2031  0EBB                     	;# 
  2032  0EBC                     	;# 
  2033  0EBD                     	;# 
  2034  0EBE                     	;# 
  2035  0EC3                     	;# 
  2036  0EC5                     	;# 
  2037  0EC6                     	;# 
  2038  0EC7                     	;# 
  2039  0EC8                     	;# 
  2040  0EC9                     	;# 
  2041  0ECA                     	;# 
  2042  0ECB                     	;# 
  2043  0ECC                     	;# 
  2044  0F10                     	;# 
  2045  0F11                     	;# 
  2046  0F12                     	;# 
  2047  0F13                     	;# 
  2048  0F14                     	;# 
  2049  0F15                     	;# 
  2050  0F16                     	;# 
  2051  0F17                     	;# 
  2052  0F18                     	;# 
  2053  0F19                     	;# 
  2054  0F1A                     	;# 
  2055  0F1B                     	;# 
  2056  0F1C                     	;# 
  2057  0F1D                     	;# 
  2058  0F1E                     	;# 
  2059  0F1F                     	;# 
  2060  0F20                     	;# 
  2061  0F21                     	;# 
  2062  0F22                     	;# 
  2063  0F23                     	;# 
  2064  0F24                     	;# 
  2065  0F25                     	;# 
  2066  0F26                     	;# 
  2067  0F27                     	;# 
  2068  0F38                     	;# 
  2069  0F39                     	;# 
  2070  0F3A                     	;# 
  2071  0F3B                     	;# 
  2072  0F3C                     	;# 
  2073  0F3D                     	;# 
  2074  0F3E                     	;# 
  2075  0F3F                     	;# 
  2076  0F40                     	;# 
  2077  0F41                     	;# 
  2078  0F43                     	;# 
  2079  0F44                     	;# 
  2080  0F45                     	;# 
  2081  0F46                     	;# 
  2082  0F47                     	;# 
  2083  0F48                     	;# 
  2084  0F49                     	;# 
  2085  0F4A                     	;# 
  2086  0F4B                     	;# 
  2087  0F4C                     	;# 
  2088  0F4E                     	;# 
  2089  0F4F                     	;# 
  2090  0F50                     	;# 
  2091  0F51                     	;# 
  2092  0F52                     	;# 
  2093  0F53                     	;# 
  2094  0F54                     	;# 
  2095  0F55                     	;# 
  2096  0F56                     	;# 
  2097  0F57                     	;# 
  2098  0F65                     	;# 
  2099  0F68                     	;# 
  2100  0F69                     	;# 
  2101  0F6A                     	;# 
  2102  0F6B                     	;# 
  2103  0FE4                     	;# 
  2104  0FE5                     	;# 
  2105  0FE6                     	;# 
  2106  0FE7                     	;# 
  2107  0FE8                     	;# 
  2108  0FE9                     	;# 
  2109  0FEA                     	;# 
  2110  0FEB                     	;# 
  2111  0FED                     	;# 
  2112  0FEE                     	;# 
  2113  0FEF                     	;# 
  2114  0000                     	;# 
  2115  0001                     	;# 
  2116  0002                     	;# 
  2117  0003                     	;# 
  2118  0004                     	;# 
  2119  0005                     	;# 
  2120  0006                     	;# 
  2121  0007                     	;# 
  2122  0008                     	;# 
  2123  0009                     	;# 
  2124  000A                     	;# 
  2125  000B                     	;# 
  2126  000C                     	;# 
  2127  000D                     	;# 
  2128  000E                     	;# 
  2129  0010                     	;# 
  2130  0011                     	;# 
  2131  0012                     	;# 
  2132  0013                     	;# 
  2133  0016                     	;# 
  2134  0017                     	;# 
  2135  0018                     	;# 
  2136  001C                     	;# 
  2137  001C                     	;# 
  2138  001D                     	;# 
  2139  001D                     	;# 
  2140  001E                     	;# 
  2141  001F                     	;# 
  2142  008C                     	;# 
  2143  008C                     	;# 
  2144  008D                     	;# 
  2145  008E                     	;# 
  2146  008E                     	;# 
  2147  008F                     	;# 
  2148  0090                     	;# 
  2149  0090                     	;# 
  2150  0091                     	;# 
  2151  0093                     	;# 
  2152  0094                     	;# 
  2153  0095                     	;# 
  2154  0096                     	;# 
  2155  0097                     	;# 
  2156  0098                     	;# 
  2157  0099                     	;# 
  2158  009A                     	;# 
  2159  009B                     	;# 
  2160  009C                     	;# 
  2161  009D                     	;# 
  2162  009E                     	;# 
  2163  010C                     	;# 
  2164  010D                     	;# 
  2165  010E                     	;# 
  2166  010E                     	;# 
  2167  010F                     	;# 
  2168  0110                     	;# 
  2169  0110                     	;# 
  2170  0111                     	;# 
  2171  0112                     	;# 
  2172  0112                     	;# 
  2173  0113                     	;# 
  2174  0114                     	;# 
  2175  0114                     	;# 
  2176  0115                     	;# 
  2177  0116                     	;# 
  2178  0116                     	;# 
  2179  0117                     	;# 
  2180  0119                     	;# 
  2181  0119                     	;# 
  2182  0119                     	;# 
  2183  011A                     	;# 
  2184  011A                     	;# 
  2185  011A                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011C                     	;# 
  2192  011C                     	;# 
  2193  011C                     	;# 
  2194  011D                     	;# 
  2195  011D                     	;# 
  2196  011D                     	;# 
  2197  011E                     	;# 
  2198  011E                     	;# 
  2199  011E                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  018C                     	;# 
  2206  018D                     	;# 
  2207  018E                     	;# 
  2208  018F                     	;# 
  2209  0190                     	;# 
  2210  0191                     	;# 
  2211  0192                     	;# 
  2212  0196                     	;# 
  2213  0197                     	;# 
  2214  0198                     	;# 
  2215  0199                     	;# 
  2216  019A                     	;# 
  2217  019B                     	;# 
  2218  019C                     	;# 
  2219  020C                     	;# 
  2220  020D                     	;# 
  2221  020E                     	;# 
  2222  020F                     	;# 
  2223  020F                     	;# 
  2224  0210                     	;# 
  2225  0210                     	;# 
  2226  0211                     	;# 
  2227  0211                     	;# 
  2228  0212                     	;# 
  2229  0213                     	;# 
  2230  0214                     	;# 
  2231  0215                     	;# 
  2232  0215                     	;# 
  2233  0216                     	;# 
  2234  0216                     	;# 
  2235  0217                     	;# 
  2236  0217                     	;# 
  2237  0218                     	;# 
  2238  0219                     	;# 
  2239  021A                     	;# 
  2240  021B                     	;# 
  2241  021B                     	;# 
  2242  021C                     	;# 
  2243  021C                     	;# 
  2244  021D                     	;# 
  2245  021D                     	;# 
  2246  021E                     	;# 
  2247  021F                     	;# 
  2248  028C                     	;# 
  2249  028C                     	;# 
  2250  028D                     	;# 
  2251  028D                     	;# 
  2252  028E                     	;# 
  2253  028F                     	;# 
  2254  0290                     	;# 
  2255  0290                     	;# 
  2256  0291                     	;# 
  2257  0292                     	;# 
  2258  0292                     	;# 
  2259  0293                     	;# 
  2260  0293                     	;# 
  2261  0294                     	;# 
  2262  0295                     	;# 
  2263  0296                     	;# 
  2264  0296                     	;# 
  2265  0297                     	;# 
  2266  0298                     	;# 
  2267  0298                     	;# 
  2268  0299                     	;# 
  2269  0299                     	;# 
  2270  029A                     	;# 
  2271  029B                     	;# 
  2272  029C                     	;# 
  2273  029C                     	;# 
  2274  029D                     	;# 
  2275  030C                     	;# 
  2276  030C                     	;# 
  2277  030D                     	;# 
  2278  030E                     	;# 
  2279  030F                     	;# 
  2280  0310                     	;# 
  2281  0310                     	;# 
  2282  0311                     	;# 
  2283  0312                     	;# 
  2284  0313                     	;# 
  2285  0314                     	;# 
  2286  0314                     	;# 
  2287  0315                     	;# 
  2288  0316                     	;# 
  2289  0317                     	;# 
  2290  0318                     	;# 
  2291  0318                     	;# 
  2292  0319                     	;# 
  2293  031A                     	;# 
  2294  031B                     	;# 
  2295  031C                     	;# 
  2296  031C                     	;# 
  2297  031D                     	;# 
  2298  031E                     	;# 
  2299  031F                     	;# 
  2300  038C                     	;# 
  2301  038D                     	;# 
  2302  038E                     	;# 
  2303  0390                     	;# 
  2304  0391                     	;# 
  2305  0392                     	;# 
  2306  040C                     	;# 
  2307  040D                     	;# 
  2308  040E                     	;# 
  2309  040F                     	;# 
  2310  0410                     	;# 
  2311  0411                     	;# 
  2312  0416                     	;# 
  2313  0416                     	;# 
  2314  0417                     	;# 
  2315  0418                     	;# 
  2316  0418                     	;# 
  2317  0419                     	;# 
  2318  041A                     	;# 
  2319  041A                     	;# 
  2320  041B                     	;# 
  2321  041C                     	;# 
  2322  041C                     	;# 
  2323  041D                     	;# 
  2324  041E                     	;# 
  2325  041F                     	;# 
  2326  048C                     	;# 
  2327  048C                     	;# 
  2328  048D                     	;# 
  2329  048E                     	;# 
  2330  048F                     	;# 
  2331  048F                     	;# 
  2332  0490                     	;# 
  2333  0491                     	;# 
  2334  0492                     	;# 
  2335  0492                     	;# 
  2336  0493                     	;# 
  2337  0494                     	;# 
  2338  0495                     	;# 
  2339  0495                     	;# 
  2340  0496                     	;# 
  2341  0497                     	;# 
  2342  0498                     	;# 
  2343  0499                     	;# 
  2344  049A                     	;# 
  2345  049B                     	;# 
  2346  049C                     	;# 
  2347  049D                     	;# 
  2348  050C                     	;# 
  2349  050C                     	;# 
  2350  050D                     	;# 
  2351  050E                     	;# 
  2352  050F                     	;# 
  2353  050F                     	;# 
  2354  0510                     	;# 
  2355  0511                     	;# 
  2356  0512                     	;# 
  2357  0512                     	;# 
  2358  0513                     	;# 
  2359  0514                     	;# 
  2360  0515                     	;# 
  2361  0515                     	;# 
  2362  0516                     	;# 
  2363  0517                     	;# 
  2364  0518                     	;# 
  2365  0519                     	;# 
  2366  051A                     	;# 
  2367  051B                     	;# 
  2368  051C                     	;# 
  2369  051D                     	;# 
  2370  058C                     	;# 
  2371  058C                     	;# 
  2372  058D                     	;# 
  2373  058E                     	;# 
  2374  058F                     	;# 
  2375  058F                     	;# 
  2376  0590                     	;# 
  2377  0591                     	;# 
  2378  0592                     	;# 
  2379  0593                     	;# 
  2380  060C                     	;# 
  2381  060D                     	;# 
  2382  060E                     	;# 
  2383  060F                     	;# 
  2384  0610                     	;# 
  2385  0611                     	;# 
  2386  0612                     	;# 
  2387  0613                     	;# 
  2388  0614                     	;# 
  2389  0616                     	;# 
  2390  0617                     	;# 
  2391  0618                     	;# 
  2392  0619                     	;# 
  2393  061A                     	;# 
  2394  061B                     	;# 
  2395  061C                     	;# 
  2396  061D                     	;# 
  2397  061E                     	;# 
  2398  068C                     	;# 
  2399  068D                     	;# 
  2400  068E                     	;# 
  2401  068F                     	;# 
  2402  0690                     	;# 
  2403  0691                     	;# 
  2404  0692                     	;# 
  2405  0693                     	;# 
  2406  0694                     	;# 
  2407  070C                     	;# 
  2408  070D                     	;# 
  2409  070E                     	;# 
  2410  070F                     	;# 
  2411  0710                     	;# 
  2412  0711                     	;# 
  2413  0712                     	;# 
  2414  0713                     	;# 
  2415  0714                     	;# 
  2416  0716                     	;# 
  2417  0717                     	;# 
  2418  0718                     	;# 
  2419  0719                     	;# 
  2420  071A                     	;# 
  2421  071B                     	;# 
  2422  071C                     	;# 
  2423  071D                     	;# 
  2424  071E                     	;# 
  2425  0796                     	;# 
  2426  0797                     	;# 
  2427  0798                     	;# 
  2428  0799                     	;# 
  2429  079A                     	;# 
  2430  079B                     	;# 
  2431  080C                     	;# 
  2432  080D                     	;# 
  2433  080E                     	;# 
  2434  080F                     	;# 
  2435  0810                     	;# 
  2436  0811                     	;# 
  2437  0812                     	;# 
  2438  0813                     	;# 
  2439  0814                     	;# 
  2440  081A                     	;# 
  2441  081B                     	;# 
  2442  081C                     	;# 
  2443  081D                     	;# 
  2444  081E                     	;# 
  2445  081F                     	;# 
  2446  088C                     	;# 
  2447  088D                     	;# 
  2448  088E                     	;# 
  2449  088F                     	;# 
  2450  0890                     	;# 
  2451  0891                     	;# 
  2452  0892                     	;# 
  2453  0893                     	;# 
  2454  0895                     	;# 
  2455  0896                     	;# 
  2456  0897                     	;# 
  2457  0898                     	;# 
  2458  0899                     	;# 
  2459  089A                     	;# 
  2460  089B                     	;# 
  2461  090C                     	;# 
  2462  090E                     	;# 
  2463  090F                     	;# 
  2464  091F                     	;# 
  2465  091F                     	;# 
  2466  098F                     	;# 
  2467  098F                     	;# 
  2468  0990                     	;# 
  2469  0991                     	;# 
  2470  0992                     	;# 
  2471  0993                     	;# 
  2472  0994                     	;# 
  2473  0995                     	;# 
  2474  0996                     	;# 
  2475  0997                     	;# 
  2476  0E0F                     	;# 
  2477  0E10                     	;# 
  2478  0E11                     	;# 
  2479  0E12                     	;# 
  2480  0E13                     	;# 
  2481  0E14                     	;# 
  2482  0E15                     	;# 
  2483  0E16                     	;# 
  2484  0E17                     	;# 
  2485  0E18                     	;# 
  2486  0E19                     	;# 
  2487  0E1A                     	;# 
  2488  0E1B                     	;# 
  2489  0E1C                     	;# 
  2490  0E1D                     	;# 
  2491  0E1E                     	;# 
  2492  0E1F                     	;# 
  2493  0E20                     	;# 
  2494  0E21                     	;# 
  2495  0E22                     	;# 
  2496  0E23                     	;# 
  2497  0E24                     	;# 
  2498  0E25                     	;# 
  2499  0E26                     	;# 
  2500  0E27                     	;# 
  2501  0E28                     	;# 
  2502  0E29                     	;# 
  2503  0E2A                     	;# 
  2504  0E2B                     	;# 
  2505  0E2C                     	;# 
  2506  0E2D                     	;# 
  2507  0E2E                     	;# 
  2508  0E2F                     	;# 
  2509  0E30                     	;# 
  2510  0E31                     	;# 
  2511  0E32                     	;# 
  2512  0E33                     	;# 
  2513  0E34                     	;# 
  2514  0E35                     	;# 
  2515  0E36                     	;# 
  2516  0E37                     	;# 
  2517  0E8F                     	;# 
  2518  0E90                     	;# 
  2519  0E91                     	;# 
  2520  0E92                     	;# 
  2521  0E93                     	;# 
  2522  0E94                     	;# 
  2523  0E95                     	;# 
  2524  0E96                     	;# 
  2525  0E97                     	;# 
  2526  0E9C                     	;# 
  2527  0E9D                     	;# 
  2528  0E9E                     	;# 
  2529  0EA1                     	;# 
  2530  0EA2                     	;# 
  2531  0EA3                     	;# 
  2532  0EA4                     	;# 
  2533  0EA5                     	;# 
  2534  0EA9                     	;# 
  2535  0EAA                     	;# 
  2536  0EAB                     	;# 
  2537  0EAC                     	;# 
  2538  0EB1                     	;# 
  2539  0EB2                     	;# 
  2540  0EB3                     	;# 
  2541  0EB8                     	;# 
  2542  0EB9                     	;# 
  2543  0EBA                     	;# 
  2544  0EBB                     	;# 
  2545  0EBC                     	;# 
  2546  0EBD                     	;# 
  2547  0EBE                     	;# 
  2548  0EC3                     	;# 
  2549  0EC5                     	;# 
  2550  0EC6                     	;# 
  2551  0EC7                     	;# 
  2552  0EC8                     	;# 
  2553  0EC9                     	;# 
  2554  0ECA                     	;# 
  2555  0ECB                     	;# 
  2556  0ECC                     	;# 
  2557  0F10                     	;# 
  2558  0F11                     	;# 
  2559  0F12                     	;# 
  2560  0F13                     	;# 
  2561  0F14                     	;# 
  2562  0F15                     	;# 
  2563  0F16                     	;# 
  2564  0F17                     	;# 
  2565  0F18                     	;# 
  2566  0F19                     	;# 
  2567  0F1A                     	;# 
  2568  0F1B                     	;# 
  2569  0F1C                     	;# 
  2570  0F1D                     	;# 
  2571  0F1E                     	;# 
  2572  0F1F                     	;# 
  2573  0F20                     	;# 
  2574  0F21                     	;# 
  2575  0F22                     	;# 
  2576  0F23                     	;# 
  2577  0F24                     	;# 
  2578  0F25                     	;# 
  2579  0F26                     	;# 
  2580  0F27                     	;# 
  2581  0F38                     	;# 
  2582  0F39                     	;# 
  2583  0F3A                     	;# 
  2584  0F3B                     	;# 
  2585  0F3C                     	;# 
  2586  0F3D                     	;# 
  2587  0F3E                     	;# 
  2588  0F3F                     	;# 
  2589  0F40                     	;# 
  2590  0F41                     	;# 
  2591  0F43                     	;# 
  2592  0F44                     	;# 
  2593  0F45                     	;# 
  2594  0F46                     	;# 
  2595  0F47                     	;# 
  2596  0F48                     	;# 
  2597  0F49                     	;# 
  2598  0F4A                     	;# 
  2599  0F4B                     	;# 
  2600  0F4C                     	;# 
  2601  0F4E                     	;# 
  2602  0F4F                     	;# 
  2603  0F50                     	;# 
  2604  0F51                     	;# 
  2605  0F52                     	;# 
  2606  0F53                     	;# 
  2607  0F54                     	;# 
  2608  0F55                     	;# 
  2609  0F56                     	;# 
  2610  0F57                     	;# 
  2611  0F65                     	;# 
  2612  0F68                     	;# 
  2613  0F69                     	;# 
  2614  0F6A                     	;# 
  2615  0F6B                     	;# 
  2616  0FE4                     	;# 
  2617  0FE5                     	;# 
  2618  0FE6                     	;# 
  2619  0FE7                     	;# 
  2620  0FE8                     	;# 
  2621  0FE9                     	;# 
  2622  0FEA                     	;# 
  2623  0FEB                     	;# 
  2624  0FED                     	;# 
  2625  0FEE                     	;# 
  2626  0FEF                     	;# 
  2627  0000                     	;# 
  2628  0001                     	;# 
  2629  0002                     	;# 
  2630  0003                     	;# 
  2631  0004                     	;# 
  2632  0005                     	;# 
  2633  0006                     	;# 
  2634  0007                     	;# 
  2635  0008                     	;# 
  2636  0009                     	;# 
  2637  000A                     	;# 
  2638  000B                     	;# 
  2639  000C                     	;# 
  2640  000D                     	;# 
  2641  000E                     	;# 
  2642  0010                     	;# 
  2643  0011                     	;# 
  2644  0012                     	;# 
  2645  0013                     	;# 
  2646  0016                     	;# 
  2647  0017                     	;# 
  2648  0018                     	;# 
  2649  001C                     	;# 
  2650  001C                     	;# 
  2651  001D                     	;# 
  2652  001D                     	;# 
  2653  001E                     	;# 
  2654  001F                     	;# 
  2655  008C                     	;# 
  2656  008C                     	;# 
  2657  008D                     	;# 
  2658  008E                     	;# 
  2659  008E                     	;# 
  2660  008F                     	;# 
  2661  0090                     	;# 
  2662  0090                     	;# 
  2663  0091                     	;# 
  2664  0093                     	;# 
  2665  0094                     	;# 
  2666  0095                     	;# 
  2667  0096                     	;# 
  2668  0097                     	;# 
  2669  0098                     	;# 
  2670  0099                     	;# 
  2671  009A                     	;# 
  2672  009B                     	;# 
  2673  009C                     	;# 
  2674  009D                     	;# 
  2675  009E                     	;# 
  2676  010C                     	;# 
  2677  010D                     	;# 
  2678  010E                     	;# 
  2679  010E                     	;# 
  2680  010F                     	;# 
  2681  0110                     	;# 
  2682  0110                     	;# 
  2683  0111                     	;# 
  2684  0112                     	;# 
  2685  0112                     	;# 
  2686  0113                     	;# 
  2687  0114                     	;# 
  2688  0114                     	;# 
  2689  0115                     	;# 
  2690  0116                     	;# 
  2691  0116                     	;# 
  2692  0117                     	;# 
  2693  0119                     	;# 
  2694  0119                     	;# 
  2695  0119                     	;# 
  2696  011A                     	;# 
  2697  011A                     	;# 
  2698  011A                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011C                     	;# 
  2705  011C                     	;# 
  2706  011C                     	;# 
  2707  011D                     	;# 
  2708  011D                     	;# 
  2709  011D                     	;# 
  2710  011E                     	;# 
  2711  011E                     	;# 
  2712  011E                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  018C                     	;# 
  2719  018D                     	;# 
  2720  018E                     	;# 
  2721  018F                     	;# 
  2722  0190                     	;# 
  2723  0191                     	;# 
  2724  0192                     	;# 
  2725  0196                     	;# 
  2726  0197                     	;# 
  2727  0198                     	;# 
  2728  0199                     	;# 
  2729  019A                     	;# 
  2730  019B                     	;# 
  2731  019C                     	;# 
  2732  020C                     	;# 
  2733  020D                     	;# 
  2734  020E                     	;# 
  2735  020F                     	;# 
  2736  020F                     	;# 
  2737  0210                     	;# 
  2738  0210                     	;# 
  2739  0211                     	;# 
  2740  0211                     	;# 
  2741  0212                     	;# 
  2742  0213                     	;# 
  2743  0214                     	;# 
  2744  0215                     	;# 
  2745  0215                     	;# 
  2746  0216                     	;# 
  2747  0216                     	;# 
  2748  0217                     	;# 
  2749  0217                     	;# 
  2750  0218                     	;# 
  2751  0219                     	;# 
  2752  021A                     	;# 
  2753  021B                     	;# 
  2754  021B                     	;# 
  2755  021C                     	;# 
  2756  021C                     	;# 
  2757  021D                     	;# 
  2758  021D                     	;# 
  2759  021E                     	;# 
  2760  021F                     	;# 
  2761  028C                     	;# 
  2762  028C                     	;# 
  2763  028D                     	;# 
  2764  028D                     	;# 
  2765  028E                     	;# 
  2766  028F                     	;# 
  2767  0290                     	;# 
  2768  0290                     	;# 
  2769  0291                     	;# 
  2770  0292                     	;# 
  2771  0292                     	;# 
  2772  0293                     	;# 
  2773  0293                     	;# 
  2774  0294                     	;# 
  2775  0295                     	;# 
  2776  0296                     	;# 
  2777  0296                     	;# 
  2778  0297                     	;# 
  2779  0298                     	;# 
  2780  0298                     	;# 
  2781  0299                     	;# 
  2782  0299                     	;# 
  2783  029A                     	;# 
  2784  029B                     	;# 
  2785  029C                     	;# 
  2786  029C                     	;# 
  2787  029D                     	;# 
  2788  030C                     	;# 
  2789  030C                     	;# 
  2790  030D                     	;# 
  2791  030E                     	;# 
  2792  030F                     	;# 
  2793  0310                     	;# 
  2794  0310                     	;# 
  2795  0311                     	;# 
  2796  0312                     	;# 
  2797  0313                     	;# 
  2798  0314                     	;# 
  2799  0314                     	;# 
  2800  0315                     	;# 
  2801  0316                     	;# 
  2802  0317                     	;# 
  2803  0318                     	;# 
  2804  0318                     	;# 
  2805  0319                     	;# 
  2806  031A                     	;# 
  2807  031B                     	;# 
  2808  031C                     	;# 
  2809  031C                     	;# 
  2810  031D                     	;# 
  2811  031E                     	;# 
  2812  031F                     	;# 
  2813  038C                     	;# 
  2814  038D                     	;# 
  2815  038E                     	;# 
  2816  0390                     	;# 
  2817  0391                     	;# 
  2818  0392                     	;# 
  2819  040C                     	;# 
  2820  040D                     	;# 
  2821  040E                     	;# 
  2822  040F                     	;# 
  2823  0410                     	;# 
  2824  0411                     	;# 
  2825  0416                     	;# 
  2826  0416                     	;# 
  2827  0417                     	;# 
  2828  0418                     	;# 
  2829  0418                     	;# 
  2830  0419                     	;# 
  2831  041A                     	;# 
  2832  041A                     	;# 
  2833  041B                     	;# 
  2834  041C                     	;# 
  2835  041C                     	;# 
  2836  041D                     	;# 
  2837  041E                     	;# 
  2838  041F                     	;# 
  2839  048C                     	;# 
  2840  048C                     	;# 
  2841  048D                     	;# 
  2842  048E                     	;# 
  2843  048F                     	;# 
  2844  048F                     	;# 
  2845  0490                     	;# 
  2846  0491                     	;# 
  2847  0492                     	;# 
  2848  0492                     	;# 
  2849  0493                     	;# 
  2850  0494                     	;# 
  2851  0495                     	;# 
  2852  0495                     	;# 
  2853  0496                     	;# 
  2854  0497                     	;# 
  2855  0498                     	;# 
  2856  0499                     	;# 
  2857  049A                     	;# 
  2858  049B                     	;# 
  2859  049C                     	;# 
  2860  049D                     	;# 
  2861  050C                     	;# 
  2862  050C                     	;# 
  2863  050D                     	;# 
  2864  050E                     	;# 
  2865  050F                     	;# 
  2866  050F                     	;# 
  2867  0510                     	;# 
  2868  0511                     	;# 
  2869  0512                     	;# 
  2870  0512                     	;# 
  2871  0513                     	;# 
  2872  0514                     	;# 
  2873  0515                     	;# 
  2874  0515                     	;# 
  2875  0516                     	;# 
  2876  0517                     	;# 
  2877  0518                     	;# 
  2878  0519                     	;# 
  2879  051A                     	;# 
  2880  051B                     	;# 
  2881  051C                     	;# 
  2882  051D                     	;# 
  2883  058C                     	;# 
  2884  058C                     	;# 
  2885  058D                     	;# 
  2886  058E                     	;# 
  2887  058F                     	;# 
  2888  058F                     	;# 
  2889  0590                     	;# 
  2890  0591                     	;# 
  2891  0592                     	;# 
  2892  0593                     	;# 
  2893  060C                     	;# 
  2894  060D                     	;# 
  2895  060E                     	;# 
  2896  060F                     	;# 
  2897  0610                     	;# 
  2898  0611                     	;# 
  2899  0612                     	;# 
  2900  0613                     	;# 
  2901  0614                     	;# 
  2902  0616                     	;# 
  2903  0617                     	;# 
  2904  0618                     	;# 
  2905  0619                     	;# 
  2906  061A                     	;# 
  2907  061B                     	;# 
  2908  061C                     	;# 
  2909  061D                     	;# 
  2910  061E                     	;# 
  2911  068C                     	;# 
  2912  068D                     	;# 
  2913  068E                     	;# 
  2914  068F                     	;# 
  2915  0690                     	;# 
  2916  0691                     	;# 
  2917  0692                     	;# 
  2918  0693                     	;# 
  2919  0694                     	;# 
  2920  070C                     	;# 
  2921  070D                     	;# 
  2922  070E                     	;# 
  2923  070F                     	;# 
  2924  0710                     	;# 
  2925  0711                     	;# 
  2926  0712                     	;# 
  2927  0713                     	;# 
  2928  0714                     	;# 
  2929  0716                     	;# 
  2930  0717                     	;# 
  2931  0718                     	;# 
  2932  0719                     	;# 
  2933  071A                     	;# 
  2934  071B                     	;# 
  2935  071C                     	;# 
  2936  071D                     	;# 
  2937  071E                     	;# 
  2938  0796                     	;# 
  2939  0797                     	;# 
  2940  0798                     	;# 
  2941  0799                     	;# 
  2942  079A                     	;# 
  2943  079B                     	;# 
  2944  080C                     	;# 
  2945  080D                     	;# 
  2946  080E                     	;# 
  2947  080F                     	;# 
  2948  0810                     	;# 
  2949  0811                     	;# 
  2950  0812                     	;# 
  2951  0813                     	;# 
  2952  0814                     	;# 
  2953  081A                     	;# 
  2954  081B                     	;# 
  2955  081C                     	;# 
  2956  081D                     	;# 
  2957  081E                     	;# 
  2958  081F                     	;# 
  2959  088C                     	;# 
  2960  088D                     	;# 
  2961  088E                     	;# 
  2962  088F                     	;# 
  2963  0890                     	;# 
  2964  0891                     	;# 
  2965  0892                     	;# 
  2966  0893                     	;# 
  2967  0895                     	;# 
  2968  0896                     	;# 
  2969  0897                     	;# 
  2970  0898                     	;# 
  2971  0899                     	;# 
  2972  089A                     	;# 
  2973  089B                     	;# 
  2974  090C                     	;# 
  2975  090E                     	;# 
  2976  090F                     	;# 
  2977  091F                     	;# 
  2978  091F                     	;# 
  2979  098F                     	;# 
  2980  098F                     	;# 
  2981  0990                     	;# 
  2982  0991                     	;# 
  2983  0992                     	;# 
  2984  0993                     	;# 
  2985  0994                     	;# 
  2986  0995                     	;# 
  2987  0996                     	;# 
  2988  0997                     	;# 
  2989  0E0F                     	;# 
  2990  0E10                     	;# 
  2991  0E11                     	;# 
  2992  0E12                     	;# 
  2993  0E13                     	;# 
  2994  0E14                     	;# 
  2995  0E15                     	;# 
  2996  0E16                     	;# 
  2997  0E17                     	;# 
  2998  0E18                     	;# 
  2999  0E19                     	;# 
  3000  0E1A                     	;# 
  3001  0E1B                     	;# 
  3002  0E1C                     	;# 
  3003  0E1D                     	;# 
  3004  0E1E                     	;# 
  3005  0E1F                     	;# 
  3006  0E20                     	;# 
  3007  0E21                     	;# 
  3008  0E22                     	;# 
  3009  0E23                     	;# 
  3010  0E24                     	;# 
  3011  0E25                     	;# 
  3012  0E26                     	;# 
  3013  0E27                     	;# 
  3014  0E28                     	;# 
  3015  0E29                     	;# 
  3016  0E2A                     	;# 
  3017  0E2B                     	;# 
  3018  0E2C                     	;# 
  3019  0E2D                     	;# 
  3020  0E2E                     	;# 
  3021  0E2F                     	;# 
  3022  0E30                     	;# 
  3023  0E31                     	;# 
  3024  0E32                     	;# 
  3025  0E33                     	;# 
  3026  0E34                     	;# 
  3027  0E35                     	;# 
  3028  0E36                     	;# 
  3029  0E37                     	;# 
  3030  0E8F                     	;# 
  3031  0E90                     	;# 
  3032  0E91                     	;# 
  3033  0E92                     	;# 
  3034  0E93                     	;# 
  3035  0E94                     	;# 
  3036  0E95                     	;# 
  3037  0E96                     	;# 
  3038  0E97                     	;# 
  3039  0E9C                     	;# 
  3040  0E9D                     	;# 
  3041  0E9E                     	;# 
  3042  0EA1                     	;# 
  3043  0EA2                     	;# 
  3044  0EA3                     	;# 
  3045  0EA4                     	;# 
  3046  0EA5                     	;# 
  3047  0EA9                     	;# 
  3048  0EAA                     	;# 
  3049  0EAB                     	;# 
  3050  0EAC                     	;# 
  3051  0EB1                     	;# 
  3052  0EB2                     	;# 
  3053  0EB3                     	;# 
  3054  0EB8                     	;# 
  3055  0EB9                     	;# 
  3056  0EBA                     	;# 
  3057  0EBB                     	;# 
  3058  0EBC                     	;# 
  3059  0EBD                     	;# 
  3060  0EBE                     	;# 
  3061  0EC3                     	;# 
  3062  0EC5                     	;# 
  3063  0EC6                     	;# 
  3064  0EC7                     	;# 
  3065  0EC8                     	;# 
  3066  0EC9                     	;# 
  3067  0ECA                     	;# 
  3068  0ECB                     	;# 
  3069  0ECC                     	;# 
  3070  0F10                     	;# 
  3071  0F11                     	;# 
  3072  0F12                     	;# 
  3073  0F13                     	;# 
  3074  0F14                     	;# 
  3075  0F15                     	;# 
  3076  0F16                     	;# 
  3077  0F17                     	;# 
  3078  0F18                     	;# 
  3079  0F19                     	;# 
  3080  0F1A                     	;# 
  3081  0F1B                     	;# 
  3082  0F1C                     	;# 
  3083  0F1D                     	;# 
  3084  0F1E                     	;# 
  3085  0F1F                     	;# 
  3086  0F20                     	;# 
  3087  0F21                     	;# 
  3088  0F22                     	;# 
  3089  0F23                     	;# 
  3090  0F24                     	;# 
  3091  0F25                     	;# 
  3092  0F26                     	;# 
  3093  0F27                     	;# 
  3094  0F38                     	;# 
  3095  0F39                     	;# 
  3096  0F3A                     	;# 
  3097  0F3B                     	;# 
  3098  0F3C                     	;# 
  3099  0F3D                     	;# 
  3100  0F3E                     	;# 
  3101  0F3F                     	;# 
  3102  0F40                     	;# 
  3103  0F41                     	;# 
  3104  0F43                     	;# 
  3105  0F44                     	;# 
  3106  0F45                     	;# 
  3107  0F46                     	;# 
  3108  0F47                     	;# 
  3109  0F48                     	;# 
  3110  0F49                     	;# 
  3111  0F4A                     	;# 
  3112  0F4B                     	;# 
  3113  0F4C                     	;# 
  3114  0F4E                     	;# 
  3115  0F4F                     	;# 
  3116  0F50                     	;# 
  3117  0F51                     	;# 
  3118  0F52                     	;# 
  3119  0F53                     	;# 
  3120  0F54                     	;# 
  3121  0F55                     	;# 
  3122  0F56                     	;# 
  3123  0F57                     	;# 
  3124  0F65                     	;# 
  3125  0F68                     	;# 
  3126  0F69                     	;# 
  3127  0F6A                     	;# 
  3128  0F6B                     	;# 
  3129  0FE4                     	;# 
  3130  0FE5                     	;# 
  3131  0FE6                     	;# 
  3132  0FE7                     	;# 
  3133  0FE8                     	;# 
  3134  0FE9                     	;# 
  3135  0FEA                     	;# 
  3136  0FEB                     	;# 
  3137  0FED                     	;# 
  3138  0FEE                     	;# 
  3139  0FEF                     	;# 
  3140  0000                     	;# 
  3141  0001                     	;# 
  3142  0002                     	;# 
  3143  0003                     	;# 
  3144  0004                     	;# 
  3145  0005                     	;# 
  3146  0006                     	;# 
  3147  0007                     	;# 
  3148  0008                     	;# 
  3149  0009                     	;# 
  3150  000A                     	;# 
  3151  000B                     	;# 
  3152  000C                     	;# 
  3153  000D                     	;# 
  3154  000E                     	;# 
  3155  0010                     	;# 
  3156  0011                     	;# 
  3157  0012                     	;# 
  3158  0013                     	;# 
  3159  0016                     	;# 
  3160  0017                     	;# 
  3161  0018                     	;# 
  3162  001C                     	;# 
  3163  001C                     	;# 
  3164  001D                     	;# 
  3165  001D                     	;# 
  3166  001E                     	;# 
  3167  001F                     	;# 
  3168  008C                     	;# 
  3169  008C                     	;# 
  3170  008D                     	;# 
  3171  008E                     	;# 
  3172  008E                     	;# 
  3173  008F                     	;# 
  3174  0090                     	;# 
  3175  0090                     	;# 
  3176  0091                     	;# 
  3177  0093                     	;# 
  3178  0094                     	;# 
  3179  0095                     	;# 
  3180  0096                     	;# 
  3181  0097                     	;# 
  3182  0098                     	;# 
  3183  0099                     	;# 
  3184  009A                     	;# 
  3185  009B                     	;# 
  3186  009C                     	;# 
  3187  009D                     	;# 
  3188  009E                     	;# 
  3189  010C                     	;# 
  3190  010D                     	;# 
  3191  010E                     	;# 
  3192  010E                     	;# 
  3193  010F                     	;# 
  3194  0110                     	;# 
  3195  0110                     	;# 
  3196  0111                     	;# 
  3197  0112                     	;# 
  3198  0112                     	;# 
  3199  0113                     	;# 
  3200  0114                     	;# 
  3201  0114                     	;# 
  3202  0115                     	;# 
  3203  0116                     	;# 
  3204  0116                     	;# 
  3205  0117                     	;# 
  3206  0119                     	;# 
  3207  0119                     	;# 
  3208  0119                     	;# 
  3209  011A                     	;# 
  3210  011A                     	;# 
  3211  011A                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011C                     	;# 
  3218  011C                     	;# 
  3219  011C                     	;# 
  3220  011D                     	;# 
  3221  011D                     	;# 
  3222  011D                     	;# 
  3223  011E                     	;# 
  3224  011E                     	;# 
  3225  011E                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  018C                     	;# 
  3232  018D                     	;# 
  3233  018E                     	;# 
  3234  018F                     	;# 
  3235  0190                     	;# 
  3236  0191                     	;# 
  3237  0192                     	;# 
  3238  0196                     	;# 
  3239  0197                     	;# 
  3240  0198                     	;# 
  3241  0199                     	;# 
  3242  019A                     	;# 
  3243  019B                     	;# 
  3244  019C                     	;# 
  3245  020C                     	;# 
  3246  020D                     	;# 
  3247  020E                     	;# 
  3248  020F                     	;# 
  3249  020F                     	;# 
  3250  0210                     	;# 
  3251  0210                     	;# 
  3252  0211                     	;# 
  3253  0211                     	;# 
  3254  0212                     	;# 
  3255  0213                     	;# 
  3256  0214                     	;# 
  3257  0215                     	;# 
  3258  0215                     	;# 
  3259  0216                     	;# 
  3260  0216                     	;# 
  3261  0217                     	;# 
  3262  0217                     	;# 
  3263  0218                     	;# 
  3264  0219                     	;# 
  3265  021A                     	;# 
  3266  021B                     	;# 
  3267  021B                     	;# 
  3268  021C                     	;# 
  3269  021C                     	;# 
  3270  021D                     	;# 
  3271  021D                     	;# 
  3272  021E                     	;# 
  3273  021F                     	;# 
  3274  028C                     	;# 
  3275  028C                     	;# 
  3276  028D                     	;# 
  3277  028D                     	;# 
  3278  028E                     	;# 
  3279  028F                     	;# 
  3280  0290                     	;# 
  3281  0290                     	;# 
  3282  0291                     	;# 
  3283  0292                     	;# 
  3284  0292                     	;# 
  3285  0293                     	;# 
  3286  0293                     	;# 
  3287  0294                     	;# 
  3288  0295                     	;# 
  3289  0296                     	;# 
  3290  0296                     	;# 
  3291  0297                     	;# 
  3292  0298                     	;# 
  3293  0298                     	;# 
  3294  0299                     	;# 
  3295  0299                     	;# 
  3296  029A                     	;# 
  3297  029B                     	;# 
  3298  029C                     	;# 
  3299  029C                     	;# 
  3300  029D                     	;# 
  3301  030C                     	;# 
  3302  030C                     	;# 
  3303  030D                     	;# 
  3304  030E                     	;# 
  3305  030F                     	;# 
  3306  0310                     	;# 
  3307  0310                     	;# 
  3308  0311                     	;# 
  3309  0312                     	;# 
  3310  0313                     	;# 
  3311  0314                     	;# 
  3312  0314                     	;# 
  3313  0315                     	;# 
  3314  0316                     	;# 
  3315  0317                     	;# 
  3316  0318                     	;# 
  3317  0318                     	;# 
  3318  0319                     	;# 
  3319  031A                     	;# 
  3320  031B                     	;# 
  3321  031C                     	;# 
  3322  031C                     	;# 
  3323  031D                     	;# 
  3324  031E                     	;# 
  3325  031F                     	;# 
  3326  038C                     	;# 
  3327  038D                     	;# 
  3328  038E                     	;# 
  3329  0390                     	;# 
  3330  0391                     	;# 
  3331  0392                     	;# 
  3332  040C                     	;# 
  3333  040D                     	;# 
  3334  040E                     	;# 
  3335  040F                     	;# 
  3336  0410                     	;# 
  3337  0411                     	;# 
  3338  0416                     	;# 
  3339  0416                     	;# 
  3340  0417                     	;# 
  3341  0418                     	;# 
  3342  0418                     	;# 
  3343  0419                     	;# 
  3344  041A                     	;# 
  3345  041A                     	;# 
  3346  041B                     	;# 
  3347  041C                     	;# 
  3348  041C                     	;# 
  3349  041D                     	;# 
  3350  041E                     	;# 
  3351  041F                     	;# 
  3352  048C                     	;# 
  3353  048C                     	;# 
  3354  048D                     	;# 
  3355  048E                     	;# 
  3356  048F                     	;# 
  3357  048F                     	;# 
  3358  0490                     	;# 
  3359  0491                     	;# 
  3360  0492                     	;# 
  3361  0492                     	;# 
  3362  0493                     	;# 
  3363  0494                     	;# 
  3364  0495                     	;# 
  3365  0495                     	;# 
  3366  0496                     	;# 
  3367  0497                     	;# 
  3368  0498                     	;# 
  3369  0499                     	;# 
  3370  049A                     	;# 
  3371  049B                     	;# 
  3372  049C                     	;# 
  3373  049D                     	;# 
  3374  050C                     	;# 
  3375  050C                     	;# 
  3376  050D                     	;# 
  3377  050E                     	;# 
  3378  050F                     	;# 
  3379  050F                     	;# 
  3380  0510                     	;# 
  3381  0511                     	;# 
  3382  0512                     	;# 
  3383  0512                     	;# 
  3384  0513                     	;# 
  3385  0514                     	;# 
  3386  0515                     	;# 
  3387  0515                     	;# 
  3388  0516                     	;# 
  3389  0517                     	;# 
  3390  0518                     	;# 
  3391  0519                     	;# 
  3392  051A                     	;# 
  3393  051B                     	;# 
  3394  051C                     	;# 
  3395  051D                     	;# 
  3396  058C                     	;# 
  3397  058C                     	;# 
  3398  058D                     	;# 
  3399  058E                     	;# 
  3400  058F                     	;# 
  3401  058F                     	;# 
  3402  0590                     	;# 
  3403  0591                     	;# 
  3404  0592                     	;# 
  3405  0593                     	;# 
  3406  060C                     	;# 
  3407  060D                     	;# 
  3408  060E                     	;# 
  3409  060F                     	;# 
  3410  0610                     	;# 
  3411  0611                     	;# 
  3412  0612                     	;# 
  3413  0613                     	;# 
  3414  0614                     	;# 
  3415  0616                     	;# 
  3416  0617                     	;# 
  3417  0618                     	;# 
  3418  0619                     	;# 
  3419  061A                     	;# 
  3420  061B                     	;# 
  3421  061C                     	;# 
  3422  061D                     	;# 
  3423  061E                     	;# 
  3424  068C                     	;# 
  3425  068D                     	;# 
  3426  068E                     	;# 
  3427  068F                     	;# 
  3428  0690                     	;# 
  3429  0691                     	;# 
  3430  0692                     	;# 
  3431  0693                     	;# 
  3432  0694                     	;# 
  3433  070C                     	;# 
  3434  070D                     	;# 
  3435  070E                     	;# 
  3436  070F                     	;# 
  3437  0710                     	;# 
  3438  0711                     	;# 
  3439  0712                     	;# 
  3440  0713                     	;# 
  3441  0714                     	;# 
  3442  0716                     	;# 
  3443  0717                     	;# 
  3444  0718                     	;# 
  3445  0719                     	;# 
  3446  071A                     	;# 
  3447  071B                     	;# 
  3448  071C                     	;# 
  3449  071D                     	;# 
  3450  071E                     	;# 
  3451  0796                     	;# 
  3452  0797                     	;# 
  3453  0798                     	;# 
  3454  0799                     	;# 
  3455  079A                     	;# 
  3456  079B                     	;# 
  3457  080C                     	;# 
  3458  080D                     	;# 
  3459  080E                     	;# 
  3460  080F                     	;# 
  3461  0810                     	;# 
  3462  0811                     	;# 
  3463  0812                     	;# 
  3464  0813                     	;# 
  3465  0814                     	;# 
  3466  081A                     	;# 
  3467  081B                     	;# 
  3468  081C                     	;# 
  3469  081D                     	;# 
  3470  081E                     	;# 
  3471  081F                     	;# 
  3472  088C                     	;# 
  3473  088D                     	;# 
  3474  088E                     	;# 
  3475  088F                     	;# 
  3476  0890                     	;# 
  3477  0891                     	;# 
  3478  0892                     	;# 
  3479  0893                     	;# 
  3480  0895                     	;# 
  3481  0896                     	;# 
  3482  0897                     	;# 
  3483  0898                     	;# 
  3484  0899                     	;# 
  3485  089A                     	;# 
  3486  089B                     	;# 
  3487  090C                     	;# 
  3488  090E                     	;# 
  3489  090F                     	;# 
  3490  091F                     	;# 
  3491  091F                     	;# 
  3492  098F                     	;# 
  3493  098F                     	;# 
  3494  0990                     	;# 
  3495  0991                     	;# 
  3496  0992                     	;# 
  3497  0993                     	;# 
  3498  0994                     	;# 
  3499  0995                     	;# 
  3500  0996                     	;# 
  3501  0997                     	;# 
  3502  0E0F                     	;# 
  3503  0E10                     	;# 
  3504  0E11                     	;# 
  3505  0E12                     	;# 
  3506  0E13                     	;# 
  3507  0E14                     	;# 
  3508  0E15                     	;# 
  3509  0E16                     	;# 
  3510  0E17                     	;# 
  3511  0E18                     	;# 
  3512  0E19                     	;# 
  3513  0E1A                     	;# 
  3514  0E1B                     	;# 
  3515  0E1C                     	;# 
  3516  0E1D                     	;# 
  3517  0E1E                     	;# 
  3518  0E1F                     	;# 
  3519  0E20                     	;# 
  3520  0E21                     	;# 
  3521  0E22                     	;# 
  3522  0E23                     	;# 
  3523  0E24                     	;# 
  3524  0E25                     	;# 
  3525  0E26                     	;# 
  3526  0E27                     	;# 
  3527  0E28                     	;# 
  3528  0E29                     	;# 
  3529  0E2A                     	;# 
  3530  0E2B                     	;# 
  3531  0E2C                     	;# 
  3532  0E2D                     	;# 
  3533  0E2E                     	;# 
  3534  0E2F                     	;# 
  3535  0E30                     	;# 
  3536  0E31                     	;# 
  3537  0E32                     	;# 
  3538  0E33                     	;# 
  3539  0E34                     	;# 
  3540  0E35                     	;# 
  3541  0E36                     	;# 
  3542  0E37                     	;# 
  3543  0E8F                     	;# 
  3544  0E90                     	;# 
  3545  0E91                     	;# 
  3546  0E92                     	;# 
  3547  0E93                     	;# 
  3548  0E94                     	;# 
  3549  0E95                     	;# 
  3550  0E96                     	;# 
  3551  0E97                     	;# 
  3552  0E9C                     	;# 
  3553  0E9D                     	;# 
  3554  0E9E                     	;# 
  3555  0EA1                     	;# 
  3556  0EA2                     	;# 
  3557  0EA3                     	;# 
  3558  0EA4                     	;# 
  3559  0EA5                     	;# 
  3560  0EA9                     	;# 
  3561  0EAA                     	;# 
  3562  0EAB                     	;# 
  3563  0EAC                     	;# 
  3564  0EB1                     	;# 
  3565  0EB2                     	;# 
  3566  0EB3                     	;# 
  3567  0EB8                     	;# 
  3568  0EB9                     	;# 
  3569  0EBA                     	;# 
  3570  0EBB                     	;# 
  3571  0EBC                     	;# 
  3572  0EBD                     	;# 
  3573  0EBE                     	;# 
  3574  0EC3                     	;# 
  3575  0EC5                     	;# 
  3576  0EC6                     	;# 
  3577  0EC7                     	;# 
  3578  0EC8                     	;# 
  3579  0EC9                     	;# 
  3580  0ECA                     	;# 
  3581  0ECB                     	;# 
  3582  0ECC                     	;# 
  3583  0F10                     	;# 
  3584  0F11                     	;# 
  3585  0F12                     	;# 
  3586  0F13                     	;# 
  3587  0F14                     	;# 
  3588  0F15                     	;# 
  3589  0F16                     	;# 
  3590  0F17                     	;# 
  3591  0F18                     	;# 
  3592  0F19                     	;# 
  3593  0F1A                     	;# 
  3594  0F1B                     	;# 
  3595  0F1C                     	;# 
  3596  0F1D                     	;# 
  3597  0F1E                     	;# 
  3598  0F1F                     	;# 
  3599  0F20                     	;# 
  3600  0F21                     	;# 
  3601  0F22                     	;# 
  3602  0F23                     	;# 
  3603  0F24                     	;# 
  3604  0F25                     	;# 
  3605  0F26                     	;# 
  3606  0F27                     	;# 
  3607  0F38                     	;# 
  3608  0F39                     	;# 
  3609  0F3A                     	;# 
  3610  0F3B                     	;# 
  3611  0F3C                     	;# 
  3612  0F3D                     	;# 
  3613  0F3E                     	;# 
  3614  0F3F                     	;# 
  3615  0F40                     	;# 
  3616  0F41                     	;# 
  3617  0F43                     	;# 
  3618  0F44                     	;# 
  3619  0F45                     	;# 
  3620  0F46                     	;# 
  3621  0F47                     	;# 
  3622  0F48                     	;# 
  3623  0F49                     	;# 
  3624  0F4A                     	;# 
  3625  0F4B                     	;# 
  3626  0F4C                     	;# 
  3627  0F4E                     	;# 
  3628  0F4F                     	;# 
  3629  0F50                     	;# 
  3630  0F51                     	;# 
  3631  0F52                     	;# 
  3632  0F53                     	;# 
  3633  0F54                     	;# 
  3634  0F55                     	;# 
  3635  0F56                     	;# 
  3636  0F57                     	;# 
  3637  0F65                     	;# 
  3638  0F68                     	;# 
  3639  0F69                     	;# 
  3640  0F6A                     	;# 
  3641  0F6B                     	;# 
  3642  0FE4                     	;# 
  3643  0FE5                     	;# 
  3644  0FE6                     	;# 
  3645  0FE7                     	;# 
  3646  0FE8                     	;# 
  3647  0FE9                     	;# 
  3648  0FEA                     	;# 
  3649  0FEB                     	;# 
  3650  0FED                     	;# 
  3651  0FEE                     	;# 
  3652  0FEF                     	;# 
  3653  0000                     	;# 
  3654  0001                     	;# 
  3655  0002                     	;# 
  3656  0003                     	;# 
  3657  0004                     	;# 
  3658  0005                     	;# 
  3659  0006                     	;# 
  3660  0007                     	;# 
  3661  0008                     	;# 
  3662  0009                     	;# 
  3663  000A                     	;# 
  3664  000B                     	;# 
  3665  000C                     	;# 
  3666  000D                     	;# 
  3667  000E                     	;# 
  3668  0010                     	;# 
  3669  0011                     	;# 
  3670  0012                     	;# 
  3671  0013                     	;# 
  3672  0016                     	;# 
  3673  0017                     	;# 
  3674  0018                     	;# 
  3675  001C                     	;# 
  3676  001C                     	;# 
  3677  001D                     	;# 
  3678  001D                     	;# 
  3679  001E                     	;# 
  3680  001F                     	;# 
  3681  008C                     	;# 
  3682  008C                     	;# 
  3683  008D                     	;# 
  3684  008E                     	;# 
  3685  008E                     	;# 
  3686  008F                     	;# 
  3687  0090                     	;# 
  3688  0090                     	;# 
  3689  0091                     	;# 
  3690  0093                     	;# 
  3691  0094                     	;# 
  3692  0095                     	;# 
  3693  0096                     	;# 
  3694  0097                     	;# 
  3695  0098                     	;# 
  3696  0099                     	;# 
  3697  009A                     	;# 
  3698  009B                     	;# 
  3699  009C                     	;# 
  3700  009D                     	;# 
  3701  009E                     	;# 
  3702  010C                     	;# 
  3703  010D                     	;# 
  3704  010E                     	;# 
  3705  010E                     	;# 
  3706  010F                     	;# 
  3707  0110                     	;# 
  3708  0110                     	;# 
  3709  0111                     	;# 
  3710  0112                     	;# 
  3711  0112                     	;# 
  3712  0113                     	;# 
  3713  0114                     	;# 
  3714  0114                     	;# 
  3715  0115                     	;# 
  3716  0116                     	;# 
  3717  0116                     	;# 
  3718  0117                     	;# 
  3719  0119                     	;# 
  3720  0119                     	;# 
  3721  0119                     	;# 
  3722  011A                     	;# 
  3723  011A                     	;# 
  3724  011A                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011C                     	;# 
  3731  011C                     	;# 
  3732  011C                     	;# 
  3733  011D                     	;# 
  3734  011D                     	;# 
  3735  011D                     	;# 
  3736  011E                     	;# 
  3737  011E                     	;# 
  3738  011E                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  018C                     	;# 
  3745  018D                     	;# 
  3746  018E                     	;# 
  3747  018F                     	;# 
  3748  0190                     	;# 
  3749  0191                     	;# 
  3750  0192                     	;# 
  3751  0196                     	;# 
  3752  0197                     	;# 
  3753  0198                     	;# 
  3754  0199                     	;# 
  3755  019A                     	;# 
  3756  019B                     	;# 
  3757  019C                     	;# 
  3758  020C                     	;# 
  3759  020D                     	;# 
  3760  020E                     	;# 
  3761  020F                     	;# 
  3762  020F                     	;# 
  3763  0210                     	;# 
  3764  0210                     	;# 
  3765  0211                     	;# 
  3766  0211                     	;# 
  3767  0212                     	;# 
  3768  0213                     	;# 
  3769  0214                     	;# 
  3770  0215                     	;# 
  3771  0215                     	;# 
  3772  0216                     	;# 
  3773  0216                     	;# 
  3774  0217                     	;# 
  3775  0217                     	;# 
  3776  0218                     	;# 
  3777  0219                     	;# 
  3778  021A                     	;# 
  3779  021B                     	;# 
  3780  021B                     	;# 
  3781  021C                     	;# 
  3782  021C                     	;# 
  3783  021D                     	;# 
  3784  021D                     	;# 
  3785  021E                     	;# 
  3786  021F                     	;# 
  3787  028C                     	;# 
  3788  028C                     	;# 
  3789  028D                     	;# 
  3790  028D                     	;# 
  3791  028E                     	;# 
  3792  028F                     	;# 
  3793  0290                     	;# 
  3794  0290                     	;# 
  3795  0291                     	;# 
  3796  0292                     	;# 
  3797  0292                     	;# 
  3798  0293                     	;# 
  3799  0293                     	;# 
  3800  0294                     	;# 
  3801  0295                     	;# 
  3802  0296                     	;# 
  3803  0296                     	;# 
  3804  0297                     	;# 
  3805  0298                     	;# 
  3806  0298                     	;# 
  3807  0299                     	;# 
  3808  0299                     	;# 
  3809  029A                     	;# 
  3810  029B                     	;# 
  3811  029C                     	;# 
  3812  029C                     	;# 
  3813  029D                     	;# 
  3814  030C                     	;# 
  3815  030C                     	;# 
  3816  030D                     	;# 
  3817  030E                     	;# 
  3818  030F                     	;# 
  3819  0310                     	;# 
  3820  0310                     	;# 
  3821  0311                     	;# 
  3822  0312                     	;# 
  3823  0313                     	;# 
  3824  0314                     	;# 
  3825  0314                     	;# 
  3826  0315                     	;# 
  3827  0316                     	;# 
  3828  0317                     	;# 
  3829  0318                     	;# 
  3830  0318                     	;# 
  3831  0319                     	;# 
  3832  031A                     	;# 
  3833  031B                     	;# 
  3834  031C                     	;# 
  3835  031C                     	;# 
  3836  031D                     	;# 
  3837  031E                     	;# 
  3838  031F                     	;# 
  3839  038C                     	;# 
  3840  038D                     	;# 
  3841  038E                     	;# 
  3842  0390                     	;# 
  3843  0391                     	;# 
  3844  0392                     	;# 
  3845  040C                     	;# 
  3846  040D                     	;# 
  3847  040E                     	;# 
  3848  040F                     	;# 
  3849  0410                     	;# 
  3850  0411                     	;# 
  3851  0416                     	;# 
  3852  0416                     	;# 
  3853  0417                     	;# 
  3854  0418                     	;# 
  3855  0418                     	;# 
  3856  0419                     	;# 
  3857  041A                     	;# 
  3858  041A                     	;# 
  3859  041B                     	;# 
  3860  041C                     	;# 
  3861  041C                     	;# 
  3862  041D                     	;# 
  3863  041E                     	;# 
  3864  041F                     	;# 
  3865  048C                     	;# 
  3866  048C                     	;# 
  3867  048D                     	;# 
  3868  048E                     	;# 
  3869  048F                     	;# 
  3870  048F                     	;# 
  3871  0490                     	;# 
  3872  0491                     	;# 
  3873  0492                     	;# 
  3874  0492                     	;# 
  3875  0493                     	;# 
  3876  0494                     	;# 
  3877  0495                     	;# 
  3878  0495                     	;# 
  3879  0496                     	;# 
  3880  0497                     	;# 
  3881  0498                     	;# 
  3882  0499                     	;# 
  3883  049A                     	;# 
  3884  049B                     	;# 
  3885  049C                     	;# 
  3886  049D                     	;# 
  3887  050C                     	;# 
  3888  050C                     	;# 
  3889  050D                     	;# 
  3890  050E                     	;# 
  3891  050F                     	;# 
  3892  050F                     	;# 
  3893  0510                     	;# 
  3894  0511                     	;# 
  3895  0512                     	;# 
  3896  0512                     	;# 
  3897  0513                     	;# 
  3898  0514                     	;# 
  3899  0515                     	;# 
  3900  0515                     	;# 
  3901  0516                     	;# 
  3902  0517                     	;# 
  3903  0518                     	;# 
  3904  0519                     	;# 
  3905  051A                     	;# 
  3906  051B                     	;# 
  3907  051C                     	;# 
  3908  051D                     	;# 
  3909  058C                     	;# 
  3910  058C                     	;# 
  3911  058D                     	;# 
  3912  058E                     	;# 
  3913  058F                     	;# 
  3914  058F                     	;# 
  3915  0590                     	;# 
  3916  0591                     	;# 
  3917  0592                     	;# 
  3918  0593                     	;# 
  3919  060C                     	;# 
  3920  060D                     	;# 
  3921  060E                     	;# 
  3922  060F                     	;# 
  3923  0610                     	;# 
  3924  0611                     	;# 
  3925  0612                     	;# 
  3926  0613                     	;# 
  3927  0614                     	;# 
  3928  0616                     	;# 
  3929  0617                     	;# 
  3930  0618                     	;# 
  3931  0619                     	;# 
  3932  061A                     	;# 
  3933  061B                     	;# 
  3934  061C                     	;# 
  3935  061D                     	;# 
  3936  061E                     	;# 
  3937  068C                     	;# 
  3938  068D                     	;# 
  3939  068E                     	;# 
  3940  068F                     	;# 
  3941  0690                     	;# 
  3942  0691                     	;# 
  3943  0692                     	;# 
  3944  0693                     	;# 
  3945  0694                     	;# 
  3946  070C                     	;# 
  3947  070D                     	;# 
  3948  070E                     	;# 
  3949  070F                     	;# 
  3950  0710                     	;# 
  3951  0711                     	;# 
  3952  0712                     	;# 
  3953  0713                     	;# 
  3954  0714                     	;# 
  3955  0716                     	;# 
  3956  0717                     	;# 
  3957  0718                     	;# 
  3958  0719                     	;# 
  3959  071A                     	;# 
  3960  071B                     	;# 
  3961  071C                     	;# 
  3962  071D                     	;# 
  3963  071E                     	;# 
  3964  0796                     	;# 
  3965  0797                     	;# 
  3966  0798                     	;# 
  3967  0799                     	;# 
  3968  079A                     	;# 
  3969  079B                     	;# 
  3970  080C                     	;# 
  3971  080D                     	;# 
  3972  080E                     	;# 
  3973  080F                     	;# 
  3974  0810                     	;# 
  3975  0811                     	;# 
  3976  0812                     	;# 
  3977  0813                     	;# 
  3978  0814                     	;# 
  3979  081A                     	;# 
  3980  081B                     	;# 
  3981  081C                     	;# 
  3982  081D                     	;# 
  3983  081E                     	;# 
  3984  081F                     	;# 
  3985  088C                     	;# 
  3986  088D                     	;# 
  3987  088E                     	;# 
  3988  088F                     	;# 
  3989  0890                     	;# 
  3990  0891                     	;# 
  3991  0892                     	;# 
  3992  0893                     	;# 
  3993  0895                     	;# 
  3994  0896                     	;# 
  3995  0897                     	;# 
  3996  0898                     	;# 
  3997  0899                     	;# 
  3998  089A                     	;# 
  3999  089B                     	;# 
  4000  090C                     	;# 
  4001  090E                     	;# 
  4002  090F                     	;# 
  4003  091F                     	;# 
  4004  091F                     	;# 
  4005  098F                     	;# 
  4006  098F                     	;# 
  4007  0990                     	;# 
  4008  0991                     	;# 
  4009  0992                     	;# 
  4010  0993                     	;# 
  4011  0994                     	;# 
  4012  0995                     	;# 
  4013  0996                     	;# 
  4014  0997                     	;# 
  4015  0E0F                     	;# 
  4016  0E10                     	;# 
  4017  0E11                     	;# 
  4018  0E12                     	;# 
  4019  0E13                     	;# 
  4020  0E14                     	;# 
  4021  0E15                     	;# 
  4022  0E16                     	;# 
  4023  0E17                     	;# 
  4024  0E18                     	;# 
  4025  0E19                     	;# 
  4026  0E1A                     	;# 
  4027  0E1B                     	;# 
  4028  0E1C                     	;# 
  4029  0E1D                     	;# 
  4030  0E1E                     	;# 
  4031  0E1F                     	;# 
  4032  0E20                     	;# 
  4033  0E21                     	;# 
  4034  0E22                     	;# 
  4035  0E23                     	;# 
  4036  0E24                     	;# 
  4037  0E25                     	;# 
  4038  0E26                     	;# 
  4039  0E27                     	;# 
  4040  0E28                     	;# 
  4041  0E29                     	;# 
  4042  0E2A                     	;# 
  4043  0E2B                     	;# 
  4044  0E2C                     	;# 
  4045  0E2D                     	;# 
  4046  0E2E                     	;# 
  4047  0E2F                     	;# 
  4048  0E30                     	;# 
  4049  0E31                     	;# 
  4050  0E32                     	;# 
  4051  0E33                     	;# 
  4052  0E34                     	;# 
  4053  0E35                     	;# 
  4054  0E36                     	;# 
  4055  0E37                     	;# 
  4056  0E8F                     	;# 
  4057  0E90                     	;# 
  4058  0E91                     	;# 
  4059  0E92                     	;# 
  4060  0E93                     	;# 
  4061  0E94                     	;# 
  4062  0E95                     	;# 
  4063  0E96                     	;# 
  4064  0E97                     	;# 
  4065  0E9C                     	;# 
  4066  0E9D                     	;# 
  4067  0E9E                     	;# 
  4068  0EA1                     	;# 
  4069  0EA2                     	;# 
  4070  0EA3                     	;# 
  4071  0EA4                     	;# 
  4072  0EA5                     	;# 
  4073  0EA9                     	;# 
  4074  0EAA                     	;# 
  4075  0EAB                     	;# 
  4076  0EAC                     	;# 
  4077  0EB1                     	;# 
  4078  0EB2                     	;# 
  4079  0EB3                     	;# 
  4080  0EB8                     	;# 
  4081  0EB9                     	;# 
  4082  0EBA                     	;# 
  4083  0EBB                     	;# 
  4084  0EBC                     	;# 
  4085  0EBD                     	;# 
  4086  0EBE                     	;# 
  4087  0EC3                     	;# 
  4088  0EC5                     	;# 
  4089  0EC6                     	;# 
  4090  0EC7                     	;# 
  4091  0EC8                     	;# 
  4092  0EC9                     	;# 
  4093  0ECA                     	;# 
  4094  0ECB                     	;# 
  4095  0ECC                     	;# 
  4096  0F10                     	;# 
  4097  0F11                     	;# 
  4098  0F12                     	;# 
  4099  0F13                     	;# 
  4100  0F14                     	;# 
  4101  0F15                     	;# 
  4102  0F16                     	;# 
  4103  0F17                     	;# 
  4104  0F18                     	;# 
  4105  0F19                     	;# 
  4106  0F1A                     	;# 
  4107  0F1B                     	;# 
  4108  0F1C                     	;# 
  4109  0F1D                     	;# 
  4110  0F1E                     	;# 
  4111  0F1F                     	;# 
  4112  0F20                     	;# 
  4113  0F21                     	;# 
  4114  0F22                     	;# 
  4115  0F23                     	;# 
  4116  0F24                     	;# 
  4117  0F25                     	;# 
  4118  0F26                     	;# 
  4119  0F27                     	;# 
  4120  0F38                     	;# 
  4121  0F39                     	;# 
  4122  0F3A                     	;# 
  4123  0F3B                     	;# 
  4124  0F3C                     	;# 
  4125  0F3D                     	;# 
  4126  0F3E                     	;# 
  4127  0F3F                     	;# 
  4128  0F40                     	;# 
  4129  0F41                     	;# 
  4130  0F43                     	;# 
  4131  0F44                     	;# 
  4132  0F45                     	;# 
  4133  0F46                     	;# 
  4134  0F47                     	;# 
  4135  0F48                     	;# 
  4136  0F49                     	;# 
  4137  0F4A                     	;# 
  4138  0F4B                     	;# 
  4139  0F4C                     	;# 
  4140  0F4E                     	;# 
  4141  0F4F                     	;# 
  4142  0F50                     	;# 
  4143  0F51                     	;# 
  4144  0F52                     	;# 
  4145  0F53                     	;# 
  4146  0F54                     	;# 
  4147  0F55                     	;# 
  4148  0F56                     	;# 
  4149  0F57                     	;# 
  4150  0F65                     	;# 
  4151  0F68                     	;# 
  4152  0F69                     	;# 
  4153  0F6A                     	;# 
  4154  0F6B                     	;# 
  4155  0FE4                     	;# 
  4156  0FE5                     	;# 
  4157  0FE6                     	;# 
  4158  0FE7                     	;# 
  4159  0FE8                     	;# 
  4160  0FE9                     	;# 
  4161  0FEA                     	;# 
  4162  0FEB                     	;# 
  4163  0FED                     	;# 
  4164  0FEE                     	;# 
  4165  0FEF                     	;# 
  4166  0000                     	;# 
  4167  0001                     	;# 
  4168  0002                     	;# 
  4169  0003                     	;# 
  4170  0004                     	;# 
  4171  0005                     	;# 
  4172  0006                     	;# 
  4173  0007                     	;# 
  4174  0008                     	;# 
  4175  0009                     	;# 
  4176  000A                     	;# 
  4177  000B                     	;# 
  4178  000C                     	;# 
  4179  000D                     	;# 
  4180  000E                     	;# 
  4181  0010                     	;# 
  4182  0011                     	;# 
  4183  0012                     	;# 
  4184  0013                     	;# 
  4185  0016                     	;# 
  4186  0017                     	;# 
  4187  0018                     	;# 
  4188  001C                     	;# 
  4189  001C                     	;# 
  4190  001D                     	;# 
  4191  001D                     	;# 
  4192  001E                     	;# 
  4193  001F                     	;# 
  4194  008C                     	;# 
  4195  008C                     	;# 
  4196  008D                     	;# 
  4197  008E                     	;# 
  4198  008E                     	;# 
  4199  008F                     	;# 
  4200  0090                     	;# 
  4201  0090                     	;# 
  4202  0091                     	;# 
  4203  0093                     	;# 
  4204  0094                     	;# 
  4205  0095                     	;# 
  4206  0096                     	;# 
  4207  0097                     	;# 
  4208  0098                     	;# 
  4209  0099                     	;# 
  4210  009A                     	;# 
  4211  009B                     	;# 
  4212  009C                     	;# 
  4213  009D                     	;# 
  4214  009E                     	;# 
  4215  010C                     	;# 
  4216  010D                     	;# 
  4217  010E                     	;# 
  4218  010E                     	;# 
  4219  010F                     	;# 
  4220  0110                     	;# 
  4221  0110                     	;# 
  4222  0111                     	;# 
  4223  0112                     	;# 
  4224  0112                     	;# 
  4225  0113                     	;# 
  4226  0114                     	;# 
  4227  0114                     	;# 
  4228  0115                     	;# 
  4229  0116                     	;# 
  4230  0116                     	;# 
  4231  0117                     	;# 
  4232  0119                     	;# 
  4233  0119                     	;# 
  4234  0119                     	;# 
  4235  011A                     	;# 
  4236  011A                     	;# 
  4237  011A                     	;# 
  4238  011B                     	;# 
  4239  011B                     	;# 
  4240  011B                     	;# 
  4241  011B                     	;# 
  4242  011B                     	;# 
  4243  011C                     	;# 
  4244  011C                     	;# 
  4245  011C                     	;# 
  4246  011D                     	;# 
  4247  011D                     	;# 
  4248  011D                     	;# 
  4249  011E                     	;# 
  4250  011E                     	;# 
  4251  011E                     	;# 
  4252  011F                     	;# 
  4253  011F                     	;# 
  4254  011F                     	;# 
  4255  011F                     	;# 
  4256  011F                     	;# 
  4257  018C                     	;# 
  4258  018D                     	;# 
  4259  018E                     	;# 
  4260  018F                     	;# 
  4261  0190                     	;# 
  4262  0191                     	;# 
  4263  0192                     	;# 
  4264  0196                     	;# 
  4265  0197                     	;# 
  4266  0198                     	;# 
  4267  0199                     	;# 
  4268  019A                     	;# 
  4269  019B                     	;# 
  4270  019C                     	;# 
  4271  020C                     	;# 
  4272  020D                     	;# 
  4273  020E                     	;# 
  4274  020F                     	;# 
  4275  020F                     	;# 
  4276  0210                     	;# 
  4277  0210                     	;# 
  4278  0211                     	;# 
  4279  0211                     	;# 
  4280  0212                     	;# 
  4281  0213                     	;# 
  4282  0214                     	;# 
  4283  0215                     	;# 
  4284  0215                     	;# 
  4285  0216                     	;# 
  4286  0216                     	;# 
  4287  0217                     	;# 
  4288  0217                     	;# 
  4289  0218                     	;# 
  4290  0219                     	;# 
  4291  021A                     	;# 
  4292  021B                     	;# 
  4293  021B                     	;# 
  4294  021C                     	;# 
  4295  021C                     	;# 
  4296  021D                     	;# 
  4297  021D                     	;# 
  4298  021E                     	;# 
  4299  021F                     	;# 
  4300  028C                     	;# 
  4301  028C                     	;# 
  4302  028D                     	;# 
  4303  028D                     	;# 
  4304  028E                     	;# 
  4305  028F                     	;# 
  4306  0290                     	;# 
  4307  0290                     	;# 
  4308  0291                     	;# 
  4309  0292                     	;# 
  4310  0292                     	;# 
  4311  0293                     	;# 
  4312  0293                     	;# 
  4313  0294                     	;# 
  4314  0295                     	;# 
  4315  0296                     	;# 
  4316  0296                     	;# 
  4317  0297                     	;# 
  4318  0298                     	;# 
  4319  0298                     	;# 
  4320  0299                     	;# 
  4321  0299                     	;# 
  4322  029A                     	;# 
  4323  029B                     	;# 
  4324  029C                     	;# 
  4325  029C                     	;# 
  4326  029D                     	;# 
  4327  030C                     	;# 
  4328  030C                     	;# 
  4329  030D                     	;# 
  4330  030E                     	;# 
  4331  030F                     	;# 
  4332  0310                     	;# 
  4333  0310                     	;# 
  4334  0311                     	;# 
  4335  0312                     	;# 
  4336  0313                     	;# 
  4337  0314                     	;# 
  4338  0314                     	;# 
  4339  0315                     	;# 
  4340  0316                     	;# 
  4341  0317                     	;# 
  4342  0318                     	;# 
  4343  0318                     	;# 
  4344  0319                     	;# 
  4345  031A                     	;# 
  4346  031B                     	;# 
  4347  031C                     	;# 
  4348  031C                     	;# 
  4349  031D                     	;# 
  4350  031E                     	;# 
  4351  031F                     	;# 
  4352  038C                     	;# 
  4353  038D                     	;# 
  4354  038E                     	;# 
  4355  0390                     	;# 
  4356  0391                     	;# 
  4357  0392                     	;# 
  4358  040C                     	;# 
  4359  040D                     	;# 
  4360  040E                     	;# 
  4361  040F                     	;# 
  4362  0410                     	;# 
  4363  0411                     	;# 
  4364  0416                     	;# 
  4365  0416                     	;# 
  4366  0417                     	;# 
  4367  0418                     	;# 
  4368  0418                     	;# 
  4369  0419                     	;# 
  4370  041A                     	;# 
  4371  041A                     	;# 
  4372  041B                     	;# 
  4373  041C                     	;# 
  4374  041C                     	;# 
  4375  041D                     	;# 
  4376  041E                     	;# 
  4377  041F                     	;# 
  4378  048C                     	;# 
  4379  048C                     	;# 
  4380  048D                     	;# 
  4381  048E                     	;# 
  4382  048F                     	;# 
  4383  048F                     	;# 
  4384  0490                     	;# 
  4385  0491                     	;# 
  4386  0492                     	;# 
  4387  0492                     	;# 
  4388  0493                     	;# 
  4389  0494                     	;# 
  4390  0495                     	;# 
  4391  0495                     	;# 
  4392  0496                     	;# 
  4393  0497                     	;# 
  4394  0498                     	;# 
  4395  0499                     	;# 
  4396  049A                     	;# 
  4397  049B                     	;# 
  4398  049C                     	;# 
  4399  049D                     	;# 
  4400  050C                     	;# 
  4401  050C                     	;# 
  4402  050D                     	;# 
  4403  050E                     	;# 
  4404  050F                     	;# 
  4405  050F                     	;# 
  4406  0510                     	;# 
  4407  0511                     	;# 
  4408  0512                     	;# 
  4409  0512                     	;# 
  4410  0513                     	;# 
  4411  0514                     	;# 
  4412  0515                     	;# 
  4413  0515                     	;# 
  4414  0516                     	;# 
  4415  0517                     	;# 
  4416  0518                     	;# 
  4417  0519                     	;# 
  4418  051A                     	;# 
  4419  051B                     	;# 
  4420  051C                     	;# 
  4421  051D                     	;# 
  4422  058C                     	;# 
  4423  058C                     	;# 
  4424  058D                     	;# 
  4425  058E                     	;# 
  4426  058F                     	;# 
  4427  058F                     	;# 
  4428  0590                     	;# 
  4429  0591                     	;# 
  4430  0592                     	;# 
  4431  0593                     	;# 
  4432  060C                     	;# 
  4433  060D                     	;# 
  4434  060E                     	;# 
  4435  060F                     	;# 
  4436  0610                     	;# 
  4437  0611                     	;# 
  4438  0612                     	;# 
  4439  0613                     	;# 
  4440  0614                     	;# 
  4441  0616                     	;# 
  4442  0617                     	;# 
  4443  0618                     	;# 
  4444  0619                     	;# 
  4445  061A                     	;# 
  4446  061B                     	;# 
  4447  061C                     	;# 
  4448  061D                     	;# 
  4449  061E                     	;# 
  4450  068C                     	;# 
  4451  068D                     	;# 
  4452  068E                     	;# 
  4453  068F                     	;# 
  4454  0690                     	;# 
  4455  0691                     	;# 
  4456  0692                     	;# 
  4457  0693                     	;# 
  4458  0694                     	;# 
  4459  070C                     	;# 
  4460  070D                     	;# 
  4461  070E                     	;# 
  4462  070F                     	;# 
  4463  0710                     	;# 
  4464  0711                     	;# 
  4465  0712                     	;# 
  4466  0713                     	;# 
  4467  0714                     	;# 
  4468  0716                     	;# 
  4469  0717                     	;# 
  4470  0718                     	;# 
  4471  0719                     	;# 
  4472  071A                     	;# 
  4473  071B                     	;# 
  4474  071C                     	;# 
  4475  071D                     	;# 
  4476  071E                     	;# 
  4477  0796                     	;# 
  4478  0797                     	;# 
  4479  0798                     	;# 
  4480  0799                     	;# 
  4481  079A                     	;# 
  4482  079B                     	;# 
  4483  080C                     	;# 
  4484  080D                     	;# 
  4485  080E                     	;# 
  4486  080F                     	;# 
  4487  0810                     	;# 
  4488  0811                     	;# 
  4489  0812                     	;# 
  4490  0813                     	;# 
  4491  0814                     	;# 
  4492  081A                     	;# 
  4493  081B                     	;# 
  4494  081C                     	;# 
  4495  081D                     	;# 
  4496  081E                     	;# 
  4497  081F                     	;# 
  4498  088C                     	;# 
  4499  088D                     	;# 
  4500  088E                     	;# 
  4501  088F                     	;# 
  4502  0890                     	;# 
  4503  0891                     	;# 
  4504  0892                     	;# 
  4505  0893                     	;# 
  4506  0895                     	;# 
  4507  0896                     	;# 
  4508  0897                     	;# 
  4509  0898                     	;# 
  4510  0899                     	;# 
  4511  089A                     	;# 
  4512  089B                     	;# 
  4513  090C                     	;# 
  4514  090E                     	;# 
  4515  090F                     	;# 
  4516  091F                     	;# 
  4517  091F                     	;# 
  4518  098F                     	;# 
  4519  098F                     	;# 
  4520  0990                     	;# 
  4521  0991                     	;# 
  4522  0992                     	;# 
  4523  0993                     	;# 
  4524  0994                     	;# 
  4525  0995                     	;# 
  4526  0996                     	;# 
  4527  0997                     	;# 
  4528  0E0F                     	;# 
  4529  0E10                     	;# 
  4530  0E11                     	;# 
  4531  0E12                     	;# 
  4532  0E13                     	;# 
  4533  0E14                     	;# 
  4534  0E15                     	;# 
  4535  0E16                     	;# 
  4536  0E17                     	;# 
  4537  0E18                     	;# 
  4538  0E19                     	;# 
  4539  0E1A                     	;# 
  4540  0E1B                     	;# 
  4541  0E1C                     	;# 
  4542  0E1D                     	;# 
  4543  0E1E                     	;# 
  4544  0E1F                     	;# 
  4545  0E20                     	;# 
  4546  0E21                     	;# 
  4547  0E22                     	;# 
  4548  0E23                     	;# 
  4549  0E24                     	;# 
  4550  0E25                     	;# 
  4551  0E26                     	;# 
  4552  0E27                     	;# 
  4553  0E28                     	;# 
  4554  0E29                     	;# 
  4555  0E2A                     	;# 
  4556  0E2B                     	;# 
  4557  0E2C                     	;# 
  4558  0E2D                     	;# 
  4559  0E2E                     	;# 
  4560  0E2F                     	;# 
  4561  0E30                     	;# 
  4562  0E31                     	;# 
  4563  0E32                     	;# 
  4564  0E33                     	;# 
  4565  0E34                     	;# 
  4566  0E35                     	;# 
  4567  0E36                     	;# 
  4568  0E37                     	;# 
  4569  0E8F                     	;# 
  4570  0E90                     	;# 
  4571  0E91                     	;# 
  4572  0E92                     	;# 
  4573  0E93                     	;# 
  4574  0E94                     	;# 
  4575  0E95                     	;# 
  4576  0E96                     	;# 
  4577  0E97                     	;# 
  4578  0E9C                     	;# 
  4579  0E9D                     	;# 
  4580  0E9E                     	;# 
  4581  0EA1                     	;# 
  4582  0EA2                     	;# 
  4583  0EA3                     	;# 
  4584  0EA4                     	;# 
  4585  0EA5                     	;# 
  4586  0EA9                     	;# 
  4587  0EAA                     	;# 
  4588  0EAB                     	;# 
  4589  0EAC                     	;# 
  4590  0EB1                     	;# 
  4591  0EB2                     	;# 
  4592  0EB3                     	;# 
  4593  0EB8                     	;# 
  4594  0EB9                     	;# 
  4595  0EBA                     	;# 
  4596  0EBB                     	;# 
  4597  0EBC                     	;# 
  4598  0EBD                     	;# 
  4599  0EBE                     	;# 
  4600  0EC3                     	;# 
  4601  0EC5                     	;# 
  4602  0EC6                     	;# 
  4603  0EC7                     	;# 
  4604  0EC8                     	;# 
  4605  0EC9                     	;# 
  4606  0ECA                     	;# 
  4607  0ECB                     	;# 
  4608  0ECC                     	;# 
  4609  0F10                     	;# 
  4610  0F11                     	;# 
  4611  0F12                     	;# 
  4612  0F13                     	;# 
  4613  0F14                     	;# 
  4614  0F15                     	;# 
  4615  0F16                     	;# 
  4616  0F17                     	;# 
  4617  0F18                     	;# 
  4618  0F19                     	;# 
  4619  0F1A                     	;# 
  4620  0F1B                     	;# 
  4621  0F1C                     	;# 
  4622  0F1D                     	;# 
  4623  0F1E                     	;# 
  4624  0F1F                     	;# 
  4625  0F20                     	;# 
  4626  0F21                     	;# 
  4627  0F22                     	;# 
  4628  0F23                     	;# 
  4629  0F24                     	;# 
  4630  0F25                     	;# 
  4631  0F26                     	;# 
  4632  0F27                     	;# 
  4633  0F38                     	;# 
  4634  0F39                     	;# 
  4635  0F3A                     	;# 
  4636  0F3B                     	;# 
  4637  0F3C                     	;# 
  4638  0F3D                     	;# 
  4639  0F3E                     	;# 
  4640  0F3F                     	;# 
  4641  0F40                     	;# 
  4642  0F41                     	;# 
  4643  0F43                     	;# 
  4644  0F44                     	;# 
  4645  0F45                     	;# 
  4646  0F46                     	;# 
  4647  0F47                     	;# 
  4648  0F48                     	;# 
  4649  0F49                     	;# 
  4650  0F4A                     	;# 
  4651  0F4B                     	;# 
  4652  0F4C                     	;# 
  4653  0F4E                     	;# 
  4654  0F4F                     	;# 
  4655  0F50                     	;# 
  4656  0F51                     	;# 
  4657  0F52                     	;# 
  4658  0F53                     	;# 
  4659  0F54                     	;# 
  4660  0F55                     	;# 
  4661  0F56                     	;# 
  4662  0F57                     	;# 
  4663  0F65                     	;# 
  4664  0F68                     	;# 
  4665  0F69                     	;# 
  4666  0F6A                     	;# 
  4667  0F6B                     	;# 
  4668  0FE4                     	;# 
  4669  0FE5                     	;# 
  4670  0FE6                     	;# 
  4671  0FE7                     	;# 
  4672  0FE8                     	;# 
  4673  0FE9                     	;# 
  4674  0FEA                     	;# 
  4675  0FEB                     	;# 
  4676  0FED                     	;# 
  4677  0FEE                     	;# 
  4678  0FEF                     	;# 
  4679  0000                     	;# 
  4680  0001                     	;# 
  4681  0002                     	;# 
  4682  0003                     	;# 
  4683  0004                     	;# 
  4684  0005                     	;# 
  4685  0006                     	;# 
  4686  0007                     	;# 
  4687  0008                     	;# 
  4688  0009                     	;# 
  4689  000A                     	;# 
  4690  000B                     	;# 
  4691  000C                     	;# 
  4692  000D                     	;# 
  4693  000E                     	;# 
  4694  0010                     	;# 
  4695  0011                     	;# 
  4696  0012                     	;# 
  4697  0013                     	;# 
  4698  0016                     	;# 
  4699  0017                     	;# 
  4700  0018                     	;# 
  4701  001C                     	;# 
  4702  001C                     	;# 
  4703  001D                     	;# 
  4704  001D                     	;# 
  4705  001E                     	;# 
  4706  001F                     	;# 
  4707  008C                     	;# 
  4708  008C                     	;# 
  4709  008D                     	;# 
  4710  008E                     	;# 
  4711  008E                     	;# 
  4712  008F                     	;# 
  4713  0090                     	;# 
  4714  0090                     	;# 
  4715  0091                     	;# 
  4716  0093                     	;# 
  4717  0094                     	;# 
  4718  0095                     	;# 
  4719  0096                     	;# 
  4720  0097                     	;# 
  4721  0098                     	;# 
  4722  0099                     	;# 
  4723  009A                     	;# 
  4724  009B                     	;# 
  4725  009C                     	;# 
  4726  009D                     	;# 
  4727  009E                     	;# 
  4728  010C                     	;# 
  4729  010D                     	;# 
  4730  010E                     	;# 
  4731  010E                     	;# 
  4732  010F                     	;# 
  4733  0110                     	;# 
  4734  0110                     	;# 
  4735  0111                     	;# 
  4736  0112                     	;# 
  4737  0112                     	;# 
  4738  0113                     	;# 
  4739  0114                     	;# 
  4740  0114                     	;# 
  4741  0115                     	;# 
  4742  0116                     	;# 
  4743  0116                     	;# 
  4744  0117                     	;# 
  4745  0119                     	;# 
  4746  0119                     	;# 
  4747  0119                     	;# 
  4748  011A                     	;# 
  4749  011A                     	;# 
  4750  011A                     	;# 
  4751  011B                     	;# 
  4752  011B                     	;# 
  4753  011B                     	;# 
  4754  011B                     	;# 
  4755  011B                     	;# 
  4756  011C                     	;# 
  4757  011C                     	;# 
  4758  011C                     	;# 
  4759  011D                     	;# 
  4760  011D                     	;# 
  4761  011D                     	;# 
  4762  011E                     	;# 
  4763  011E                     	;# 
  4764  011E                     	;# 
  4765  011F                     	;# 
  4766  011F                     	;# 
  4767  011F                     	;# 
  4768  011F                     	;# 
  4769  011F                     	;# 
  4770  018C                     	;# 
  4771  018D                     	;# 
  4772  018E                     	;# 
  4773  018F                     	;# 
  4774  0190                     	;# 
  4775  0191                     	;# 
  4776  0192                     	;# 
  4777  0196                     	;# 
  4778  0197                     	;# 
  4779  0198                     	;# 
  4780  0199                     	;# 
  4781  019A                     	;# 
  4782  019B                     	;# 
  4783  019C                     	;# 
  4784  020C                     	;# 
  4785  020D                     	;# 
  4786  020E                     	;# 
  4787  020F                     	;# 
  4788  020F                     	;# 
  4789  0210                     	;# 
  4790  0210                     	;# 
  4791  0211                     	;# 
  4792  0211                     	;# 
  4793  0212                     	;# 
  4794  0213                     	;# 
  4795  0214                     	;# 
  4796  0215                     	;# 
  4797  0215                     	;# 
  4798  0216                     	;# 
  4799  0216                     	;# 
  4800  0217                     	;# 
  4801  0217                     	;# 
  4802  0218                     	;# 
  4803  0219                     	;# 
  4804  021A                     	;# 
  4805  021B                     	;# 
  4806  021B                     	;# 
  4807  021C                     	;# 
  4808  021C                     	;# 
  4809  021D                     	;# 
  4810  021D                     	;# 
  4811  021E                     	;# 
  4812  021F                     	;# 
  4813  028C                     	;# 
  4814  028C                     	;# 
  4815  028D                     	;# 
  4816  028D                     	;# 
  4817  028E                     	;# 
  4818  028F                     	;# 
  4819  0290                     	;# 
  4820  0290                     	;# 
  4821  0291                     	;# 
  4822  0292                     	;# 
  4823  0292                     	;# 
  4824  0293                     	;# 
  4825  0293                     	;# 
  4826  0294                     	;# 
  4827  0295                     	;# 
  4828  0296                     	;# 
  4829  0296                     	;# 
  4830  0297                     	;# 
  4831  0298                     	;# 
  4832  0298                     	;# 
  4833  0299                     	;# 
  4834  0299                     	;# 
  4835  029A                     	;# 
  4836  029B                     	;# 
  4837  029C                     	;# 
  4838  029C                     	;# 
  4839  029D                     	;# 
  4840  030C                     	;# 
  4841  030C                     	;# 
  4842  030D                     	;# 
  4843  030E                     	;# 
  4844  030F                     	;# 
  4845  0310                     	;# 
  4846  0310                     	;# 
  4847  0311                     	;# 
  4848  0312                     	;# 
  4849  0313                     	;# 
  4850  0314                     	;# 
  4851  0314                     	;# 
  4852  0315                     	;# 
  4853  0316                     	;# 
  4854  0317                     	;# 
  4855  0318                     	;# 
  4856  0318                     	;# 
  4857  0319                     	;# 
  4858  031A                     	;# 
  4859  031B                     	;# 
  4860  031C                     	;# 
  4861  031C                     	;# 
  4862  031D                     	;# 
  4863  031E                     	;# 
  4864  031F                     	;# 
  4865  038C                     	;# 
  4866  038D                     	;# 
  4867  038E                     	;# 
  4868  0390                     	;# 
  4869  0391                     	;# 
  4870  0392                     	;# 
  4871  040C                     	;# 
  4872  040D                     	;# 
  4873  040E                     	;# 
  4874  040F                     	;# 
  4875  0410                     	;# 
  4876  0411                     	;# 
  4877  0416                     	;# 
  4878  0416                     	;# 
  4879  0417                     	;# 
  4880  0418                     	;# 
  4881  0418                     	;# 
  4882  0419                     	;# 
  4883  041A                     	;# 
  4884  041A                     	;# 
  4885  041B                     	;# 
  4886  041C                     	;# 
  4887  041C                     	;# 
  4888  041D                     	;# 
  4889  041E                     	;# 
  4890  041F                     	;# 
  4891  048C                     	;# 
  4892  048C                     	;# 
  4893  048D                     	;# 
  4894  048E                     	;# 
  4895  048F                     	;# 
  4896  048F                     	;# 
  4897  0490                     	;# 
  4898  0491                     	;# 
  4899  0492                     	;# 
  4900  0492                     	;# 
  4901  0493                     	;# 
  4902  0494                     	;# 
  4903  0495                     	;# 
  4904  0495                     	;# 
  4905  0496                     	;# 
  4906  0497                     	;# 
  4907  0498                     	;# 
  4908  0499                     	;# 
  4909  049A                     	;# 
  4910  049B                     	;# 
  4911  049C                     	;# 
  4912  049D                     	;# 
  4913  050C                     	;# 
  4914  050C                     	;# 
  4915  050D                     	;# 
  4916  050E                     	;# 
  4917  050F                     	;# 
  4918  050F                     	;# 
  4919  0510                     	;# 
  4920  0511                     	;# 
  4921  0512                     	;# 
  4922  0512                     	;# 
  4923  0513                     	;# 
  4924  0514                     	;# 
  4925  0515                     	;# 
  4926  0515                     	;# 
  4927  0516                     	;# 
  4928  0517                     	;# 
  4929  0518                     	;# 
  4930  0519                     	;# 
  4931  051A                     	;# 
  4932  051B                     	;# 
  4933  051C                     	;# 
  4934  051D                     	;# 
  4935  058C                     	;# 
  4936  058C                     	;# 
  4937  058D                     	;# 
  4938  058E                     	;# 
  4939  058F                     	;# 
  4940  058F                     	;# 
  4941  0590                     	;# 
  4942  0591                     	;# 
  4943  0592                     	;# 
  4944  0593                     	;# 
  4945  060C                     	;# 
  4946  060D                     	;# 
  4947  060E                     	;# 
  4948  060F                     	;# 
  4949  0610                     	;# 
  4950  0611                     	;# 
  4951  0612                     	;# 
  4952  0613                     	;# 
  4953  0614                     	;# 
  4954  0616                     	;# 
  4955  0617                     	;# 
  4956  0618                     	;# 
  4957  0619                     	;# 
  4958  061A                     	;# 
  4959  061B                     	;# 
  4960  061C                     	;# 
  4961  061D                     	;# 
  4962  061E                     	;# 
  4963  068C                     	;# 
  4964  068D                     	;# 
  4965  068E                     	;# 
  4966  068F                     	;# 
  4967  0690                     	;# 
  4968  0691                     	;# 
  4969  0692                     	;# 
  4970  0693                     	;# 
  4971  0694                     	;# 
  4972  070C                     	;# 
  4973  070D                     	;# 
  4974  070E                     	;# 
  4975  070F                     	;# 
  4976  0710                     	;# 
  4977  0711                     	;# 
  4978  0712                     	;# 
  4979  0713                     	;# 
  4980  0714                     	;# 
  4981  0716                     	;# 
  4982  0717                     	;# 
  4983  0718                     	;# 
  4984  0719                     	;# 
  4985  071A                     	;# 
  4986  071B                     	;# 
  4987  071C                     	;# 
  4988  071D                     	;# 
  4989  071E                     	;# 
  4990  0796                     	;# 
  4991  0797                     	;# 
  4992  0798                     	;# 
  4993  0799                     	;# 
  4994  079A                     	;# 
  4995  079B                     	;# 
  4996  080C                     	;# 
  4997  080D                     	;# 
  4998  080E                     	;# 
  4999  080F                     	;# 
  5000  0810                     	;# 
  5001  0811                     	;# 
  5002  0812                     	;# 
  5003  0813                     	;# 
  5004  0814                     	;# 
  5005  081A                     	;# 
  5006  081B                     	;# 
  5007  081C                     	;# 
  5008  081D                     	;# 
  5009  081E                     	;# 
  5010  081F                     	;# 
  5011  088C                     	;# 
  5012  088D                     	;# 
  5013  088E                     	;# 
  5014  088F                     	;# 
  5015  0890                     	;# 
  5016  0891                     	;# 
  5017  0892                     	;# 
  5018  0893                     	;# 
  5019  0895                     	;# 
  5020  0896                     	;# 
  5021  0897                     	;# 
  5022  0898                     	;# 
  5023  0899                     	;# 
  5024  089A                     	;# 
  5025  089B                     	;# 
  5026  090C                     	;# 
  5027  090E                     	;# 
  5028  090F                     	;# 
  5029  091F                     	;# 
  5030  091F                     	;# 
  5031  098F                     	;# 
  5032  098F                     	;# 
  5033  0990                     	;# 
  5034  0991                     	;# 
  5035  0992                     	;# 
  5036  0993                     	;# 
  5037  0994                     	;# 
  5038  0995                     	;# 
  5039  0996                     	;# 
  5040  0997                     	;# 
  5041  0E0F                     	;# 
  5042  0E10                     	;# 
  5043  0E11                     	;# 
  5044  0E12                     	;# 
  5045  0E13                     	;# 
  5046  0E14                     	;# 
  5047  0E15                     	;# 
  5048  0E16                     	;# 
  5049  0E17                     	;# 
  5050  0E18                     	;# 
  5051  0E19                     	;# 
  5052  0E1A                     	;# 
  5053  0E1B                     	;# 
  5054  0E1C                     	;# 
  5055  0E1D                     	;# 
  5056  0E1E                     	;# 
  5057  0E1F                     	;# 
  5058  0E20                     	;# 
  5059  0E21                     	;# 
  5060  0E22                     	;# 
  5061  0E23                     	;# 
  5062  0E24                     	;# 
  5063  0E25                     	;# 
  5064  0E26                     	;# 
  5065  0E27                     	;# 
  5066  0E28                     	;# 
  5067  0E29                     	;# 
  5068  0E2A                     	;# 
  5069  0E2B                     	;# 
  5070  0E2C                     	;# 
  5071  0E2D                     	;# 
  5072  0E2E                     	;# 
  5073  0E2F                     	;# 
  5074  0E30                     	;# 
  5075  0E31                     	;# 
  5076  0E32                     	;# 
  5077  0E33                     	;# 
  5078  0E34                     	;# 
  5079  0E35                     	;# 
  5080  0E36                     	;# 
  5081  0E37                     	;# 
  5082  0E8F                     	;# 
  5083  0E90                     	;# 
  5084  0E91                     	;# 
  5085  0E92                     	;# 
  5086  0E93                     	;# 
  5087  0E94                     	;# 
  5088  0E95                     	;# 
  5089  0E96                     	;# 
  5090  0E97                     	;# 
  5091  0E9C                     	;# 
  5092  0E9D                     	;# 
  5093  0E9E                     	;# 
  5094  0EA1                     	;# 
  5095  0EA2                     	;# 
  5096  0EA3                     	;# 
  5097  0EA4                     	;# 
  5098  0EA5                     	;# 
  5099  0EA9                     	;# 
  5100  0EAA                     	;# 
  5101  0EAB                     	;# 
  5102  0EAC                     	;# 
  5103  0EB1                     	;# 
  5104  0EB2                     	;# 
  5105  0EB3                     	;# 
  5106  0EB8                     	;# 
  5107  0EB9                     	;# 
  5108  0EBA                     	;# 
  5109  0EBB                     	;# 
  5110  0EBC                     	;# 
  5111  0EBD                     	;# 
  5112  0EBE                     	;# 
  5113  0EC3                     	;# 
  5114  0EC5                     	;# 
  5115  0EC6                     	;# 
  5116  0EC7                     	;# 
  5117  0EC8                     	;# 
  5118  0EC9                     	;# 
  5119  0ECA                     	;# 
  5120  0ECB                     	;# 
  5121  0ECC                     	;# 
  5122  0F10                     	;# 
  5123  0F11                     	;# 
  5124  0F12                     	;# 
  5125  0F13                     	;# 
  5126  0F14                     	;# 
  5127  0F15                     	;# 
  5128  0F16                     	;# 
  5129  0F17                     	;# 
  5130  0F18                     	;# 
  5131  0F19                     	;# 
  5132  0F1A                     	;# 
  5133  0F1B                     	;# 
  5134  0F1C                     	;# 
  5135  0F1D                     	;# 
  5136  0F1E                     	;# 
  5137  0F1F                     	;# 
  5138  0F20                     	;# 
  5139  0F21                     	;# 
  5140  0F22                     	;# 
  5141  0F23                     	;# 
  5142  0F24                     	;# 
  5143  0F25                     	;# 
  5144  0F26                     	;# 
  5145  0F27                     	;# 
  5146  0F38                     	;# 
  5147  0F39                     	;# 
  5148  0F3A                     	;# 
  5149  0F3B                     	;# 
  5150  0F3C                     	;# 
  5151  0F3D                     	;# 
  5152  0F3E                     	;# 
  5153  0F3F                     	;# 
  5154  0F40                     	;# 
  5155  0F41                     	;# 
  5156  0F43                     	;# 
  5157  0F44                     	;# 
  5158  0F45                     	;# 
  5159  0F46                     	;# 
  5160  0F47                     	;# 
  5161  0F48                     	;# 
  5162  0F49                     	;# 
  5163  0F4A                     	;# 
  5164  0F4B                     	;# 
  5165  0F4C                     	;# 
  5166  0F4E                     	;# 
  5167  0F4F                     	;# 
  5168  0F50                     	;# 
  5169  0F51                     	;# 
  5170  0F52                     	;# 
  5171  0F53                     	;# 
  5172  0F54                     	;# 
  5173  0F55                     	;# 
  5174  0F56                     	;# 
  5175  0F57                     	;# 
  5176  0F65                     	;# 
  5177  0F68                     	;# 
  5178  0F69                     	;# 
  5179  0F6A                     	;# 
  5180  0F6B                     	;# 
  5181  0FE4                     	;# 
  5182  0FE5                     	;# 
  5183  0FE6                     	;# 
  5184  0FE7                     	;# 
  5185  0FE8                     	;# 
  5186  0FE9                     	;# 
  5187  0FEA                     	;# 
  5188  0FEB                     	;# 
  5189  0FED                     	;# 
  5190  0FEE                     	;# 
  5191  0FEF                     	;_samples
  5192                           
  5193                           	psect	idataBANK1
  5194  1743                     __pidataBANK1:	
  5195                           
  5196                           ;initializer for _setpoint
  5197  1743  34CA               	retlw	202
  5198  1744  3408               	retlw	8
  5199  1745  340B               	retlw	11
  5200  1746  3402               	retlw	2
  5201                           
  5202                           ;initializer for _Kd
  5203  1747  3401               	retlw	1
  5204  1748  3400               	retlw	0
  5205                           
  5206                           ;initializer for _Ki
  5207  1749  3401               	retlw	1
  5208  174A  3400               	retlw	0
  5209                           
  5210                           ;initializer for _Kp
  5211  174B  3404               	retlw	4
  5212  174C  3400               	retlw	0
  5213                           
  5214                           ;initializer for _pidMaxOutput
  5215  174D  34FF               	retlw	255
  5216  174E  3407               	retlw	7
  5217                           
  5218                           ;initializer for _loop
  5219  174F  3440               	retlw	64
  5220                           
  5221                           	psect	idataBANK3
  5222  0853                     __pidataBANK3:	
  5223                           
  5224                           ;initializer for ___cgram
  5225  0853  340C               	retlw	12
  5226  0854  3412               	retlw	18
  5227  0855  3412               	retlw	18
  5228  0856  340C               	retlw	12
  5229  0857  3400               	retlw	0
  5230  0858  3400               	retlw	0
  5231  0859  3400               	retlw	0
  5232  085A  3400               	retlw	0
  5233  085B  3408               	retlw	8
  5234  085C  3404               	retlw	4
  5235  085D  3402               	retlw	2
  5236  085E  341F               	retlw	31
  5237  085F  3402               	retlw	2
  5238  0860  3404               	retlw	4
  5239  0861  3408               	retlw	8
  5240  0862  3400               	retlw	0
  5241                           
  5242                           ;initializer for _channels
  5243  0863  3401               	retlw	1
  5244  0864  3400               	retlw	0
  5245  0865  3403               	retlw	3
  5246  0866  3400               	retlw	0
  5247                           
  5248                           ;initializer for _desc
  5249  0867  345F               	retlw	low (STR_5| (0+32768))
  5250  0868  3490               	retlw	high (STR_5| (0+32768))
  5251  0869  346A               	retlw	low (STR_6| (0+32768))
  5252  086A  3490               	retlw	high (STR_6| (0+32768))
  5253                           
  5254                           ;initializer for _highRangeSet
  5255  086B  34BE               	retlw	190
  5256  086C  340A               	retlw	10
  5257  086D  34FF               	retlw	255
  5258  086E  3403               	retlw	3
  5259                           
  5260                           ;initializer for _lowRangeSet
  5261  086F  34EE               	retlw	238
  5262  0870  3402               	retlw	2
  5263  0871  3400               	retlw	0
  5264  0872  3400               	retlw	0
  5265                           
  5266                           	psect	stringtext
  5267  1000                     __pstringtext:	
  5268  1000                     log@coeff:	
  5269  1000  3400               	retlw	0
  5270  1001  3400               	retlw	0
  5271  1002  3400               	retlw	0
  5272  1003  3400               	retlw	0
  5273  1004  3480               	retlw	128
  5274  1005  343F               	retlw	63
  5275  1006  34F0               	retlw	240
  5276  1007  34FF               	retlw	255
  5277  1008  34BE               	retlw	190
  5278  1009  34E2               	retlw	226
  5279  100A  34A9               	retlw	169
  5280  100B  343E               	retlw	62
  5281  100C  3483               	retlw	131
  5282  100D  3476               	retlw	118
  5283  100E  34BE               	retlw	190
  5284  100F  34AE               	retlw	174
  5285  1010  342B               	retlw	43
  5286  1011  343E               	retlw	62
  5287  1012  343C               	retlw	60
  5288  1013  34C3               	retlw	195
  5289  1014  34BD               	retlw	189
  5290  1015  34D2               	retlw	210
  5291  1016  3413               	retlw	19
  5292  1017  343D               	retlw	61
  5293  1018  3478               	retlw	120
  5294  1019  34D3               	retlw	211
  5295  101A  34BB               	retlw	187
  5296  101B                     __end_oflog@coeff:	
  5297  0016                     _LATA	set	22
  5298  0017                     _LATB	set	23
  5299  0018                     _LATC	set	24
  5300  0011                     _TRISA	set	17
  5301  0012                     _TRISB	set	18
  5302  0013                     _TRISC	set	19
  5303  005F                     _GIE	set	95
  5304  00C2                     _LATC2	set	194
  5305  0060                     _RA0	set	96
  5306  0062                     _RA2	set	98
  5307  0066                     _RA6	set	102
  5308  0067                     _RA7	set	103
  5309  0068                     _RB0	set	104
  5310  0069                     _RB1	set	105
  5311  006A                     _RB2	set	106
  5312  0070                     _RC0	set	112
  5313  0071                     _RC1	set	113
  5314  009D                     _ADACQ	set	157
  5315  0099                     _ADACT	set	153
  5316  009B                     _ADCAP	set	155
  5317  0098                     _ADCLK	set	152
  5318  0093                     _ADCON0	set	147
  5319  0093                     _ADCON0bits	set	147
  5320  0094                     _ADCON1	set	148
  5321  0095                     _ADCON2	set	149
  5322  0096                     _ADCON3	set	150
  5323  009E                     _ADPCH	set	158
  5324  009C                     _ADPRE	set	156
  5325  009A                     _ADREF	set	154
  5326  008D                     _ADRESH	set	141
  5327  008C                     _ADRESL	set	140
  5328  0097                     _ADSTAT	set	151
  5329  010F                     _ADLTHH	set	271
  5330  010E                     _ADLTHL	set	270
  5331  010D                     _ADRPT	set	269
  5332  0113                     _ADSTPTH	set	275
  5333  0112                     _ADSTPTL	set	274
  5334  0111                     _ADUTHH	set	273
  5335  0110                     _ADUTHL	set	272
  5336  021F                     _CCPTMRS1bits	set	543
  5337  0290                     _T2CLKCON	set	656
  5338  028E                     _T2CON	set	654
  5339  028E                     _T2CONbits	set	654
  5340  028F                     _T2HLT	set	655
  5341  028D                     _T2PR	set	653
  5342  0291                     _T2RST	set	657
  5343  028C                     _T2TMR	set	652
  5344  0392                     _PWM7CON	set	914
  5345  0391                     _PWM7DCH	set	913
  5346  0390                     _PWM7DCL	set	912
  5347  0716                     _PIE0bits	set	1814
  5348  0710                     _PIR4bits	set	1808
  5349  088D                     _OSCCON1	set	2189
  5350  088F                     _OSCCON3	set	2191
  5351  0891                     _OSCEN	set	2193
  5352  0893                     _OSCFRQ	set	2195
  5353  0892                     _OSCTUNE	set	2194
  5354  090C                     _FVRCON	set	2316
  5355  0E8F                     _PPSLOCK	set	3727
  5356  0E8F                     _PPSLOCKbits	set	3727
  5357  0F38                     _ANSELA	set	3896
  5358  0F43                     _ANSELB	set	3907
  5359  0F4E                     _ANSELC	set	3918
  5360  0F23                     _RC3PPS	set	3875
  5361  0F39                     _WPUA	set	3897
  5362  0F44                     _WPUB	set	3908
  5363  0F4F                     _WPUC	set	3919
  5364  0F65                     _WPUE	set	3941
  5365  101B                     STR_8:	
  5366  101B  3445               	retlw	69	;'E'
  5367  101C  346E               	retlw	110	;'n'
  5368  101D  3474               	retlw	116	;'t'
  5369  101E  3465               	retlw	101	;'e'
  5370  101F  3472               	retlw	114	;'r'
  5371  1020  3420               	retlw	32	;' '
  5372  1021  3474               	retlw	116	;'t'
  5373  1022  346F               	retlw	111	;'o'
  5374  1023  3420               	retlw	32	;' '
  5375  1024  3453               	retlw	83	;'S'
  5376  1025  3465               	retlw	101	;'e'
  5377  1026  346C               	retlw	108	;'l'
  5378  1027  3465               	retlw	101	;'e'
  5379  1028  3463               	retlw	99	;'c'
  5380  1029  3474               	retlw	116	;'t'
  5381  102A  3420               	retlw	32	;' '
  5382  102B  3400               	retlw	0
  5383  102C                     STR_7:	
  5384  102C  3455               	retlw	85	;'U'
  5385  102D  3470               	retlw	112	;'p'
  5386  102E  342F               	retlw	47	;'/'
  5387  102F  3444               	retlw	68	;'D'
  5388  1030  346F               	retlw	111	;'o'
  5389  1031  3477               	retlw	119	;'w'
  5390  1032  346E               	retlw	110	;'n'
  5391  1033  3420               	retlw	32	;' '
  5392  1034  3474               	retlw	116	;'t'
  5393  1035  346F               	retlw	111	;'o'
  5394  1036  3420               	retlw	32	;' '
  5395  1037  3441               	retlw	65	;'A'
  5396  1038  346C               	retlw	108	;'l'
  5397  1039  3474               	retlw	116	;'t'
  5398  103A  3465               	retlw	101	;'e'
  5399  103B  3472               	retlw	114	;'r'
  5400  103C  3400               	retlw	0
  5401  103D                     STR_3:	
  5402  103D  3441               	retlw	65	;'A'
  5403  103E  346C               	retlw	108	;'l'
  5404  103F  3474               	retlw	116	;'t'
  5405  1040  3465               	retlw	101	;'e'
  5406  1041  3472               	retlw	114	;'r'
  5407  1042  3420               	retlw	32	;' '
  5408  1043  3477               	retlw	119	;'w'
  5409  1044  3469               	retlw	105	;'i'
  5410  1045  3474               	retlw	116	;'t'
  5411  1046  3468               	retlw	104	;'h'
  5412  1047  3420               	retlw	32	;' '
  5413  1048  3455               	retlw	85	;'U'
  5414  1049  3470               	retlw	112	;'p'
  5415  104A  342F               	retlw	47	;'/'
  5416  104B  3444               	retlw	68	;'D'
  5417  104C  346E               	retlw	110	;'n'
  5418  104D  3400               	retlw	0
  5419  104E                     STR_4:	
  5420  104E  3445               	retlw	69	;'E'
  5421  104F  346E               	retlw	110	;'n'
  5422  1050  3474               	retlw	116	;'t'
  5423  1051  3465               	retlw	101	;'e'
  5424  1052  3472               	retlw	114	;'r'
  5425  1053  3420               	retlw	32	;' '
  5426  1054  344B               	retlw	75	;'K'
  5427  1055  3465               	retlw	101	;'e'
  5428  1056  3479               	retlw	121	;'y'
  5429  1057  3420               	retlw	32	;' '
  5430  1058  3474               	retlw	116	;'t'
  5431  1059  346F               	retlw	111	;'o'
  5432  105A  3420               	retlw	32	;' '
  5433  105B  3453               	retlw	83	;'S'
  5434  105C  3465               	retlw	101	;'e'
  5435  105D  3474               	retlw	116	;'t'
  5436  105E  3400               	retlw	0
  5437  105F                     STR_5:	
  5438  105F  3420               	retlw	32	;' '
  5439  1060  3450               	retlw	80	;'P'
  5440  1061  3469               	retlw	105	;'i'
  5441  1062  3474               	retlw	116	;'t'
  5442  1063  3420               	retlw	32	;' '
  5443  1064  3454               	retlw	84	;'T'
  5444  1065  3465               	retlw	101	;'e'
  5445  1066  346D               	retlw	109	;'m'
  5446  1067  3470               	retlw	112	;'p'
  5447  1068  343A               	retlw	58	;':'
  5448  1069  3400               	retlw	0
  5449  106A                     STR_6:	
  5450  106A  3442               	retlw	66	;'B'
  5451  106B  3461               	retlw	97	;'a'
  5452  106C  3463               	retlw	99	;'c'
  5453  106D  346B               	retlw	107	;'k'
  5454  106E  344C               	retlw	76	;'L'
  5455  106F  3469               	retlw	105	;'i'
  5456  1070  3467               	retlw	103	;'g'
  5457  1071  3468               	retlw	104	;'h'
  5458  1072  3474               	retlw	116	;'t'
  5459  1073  343A               	retlw	58	;':'
  5460  1074  3400               	retlw	0
  5461  1075                     STR_2:	
  5462  1075  344F               	retlw	79	;'O'
  5463  1076  3475               	retlw	117	;'u'
  5464  1077  3474               	retlw	116	;'t'
  5465  1078  3470               	retlw	112	;'p'
  5466  1079  3475               	retlw	117	;'u'
  5467  107A  3474               	retlw	116	;'t'
  5468  107B  343A               	retlw	58	;':'
  5469  107C  3400               	retlw	0
  5470  107D                     STR_1:	
  5471  107D  3450               	retlw	80	;'P'
  5472  107E  3469               	retlw	105	;'i'
  5473  107F  3474               	retlw	116	;'t'
  5474  1080  343A               	retlw	58	;':'
  5475  1081  3400               	retlw	0
  5476                           
  5477                           ; #config settings
  5478  0000                     
  5479                           	psect	cinit
  5480  07B6                     start_initialization:	
  5481  07B6                     __initialization:		;BIGRAM
  5482                           
  5483                           ; Initialize objects allocated to BANK1
  5484  07B6  3043               	movlw	low __pidataBANK1
  5485  07B7  0084               	movwf	4
  5486  07B8  3097               	movlw	(high __pidataBANK1)| (0+128)
  5487  07B9  0085               	movwf	5
  5488  07BA  30E1               	movlw	low __pdataBANK1
  5489  07BB  0086               	movwf	6
  5490  07BC  3000               	movlw	high __pdataBANK1
  5491  07BD  0087               	movwf	7
  5492  07BE  3000               	movlw	0
  5493  07BF  00FF               	movwf	btemp+1
  5494  07C0  300D               	movlw	13
  5495  07C1  3197  2737  3187   	fcall	init_ram
  5496                           
  5497                           ; Initialize objects allocated to BANK3
  5498  07C4  3053               	movlw	low __pidataBANK3
  5499  07C5  0084               	movwf	4
  5500  07C6  3088               	movlw	(high __pidataBANK3)| (0+128)
  5501  07C7  0085               	movwf	5
  5502  07C8  30A0               	movlw	low __pdataBANK3
  5503  07C9  0086               	movwf	6
  5504  07CA  3001               	movlw	high __pdataBANK3
  5505  07CB  0087               	movwf	7
  5506  07CC  3000               	movlw	0
  5507  07CD  00FF               	movwf	btemp+1
  5508  07CE  3020               	movlw	32
  5509  07CF  3197  2737  3187   	fcall	init_ram
  5510                           
  5511                           ; Clear objects allocated to BIGRAM
  5512  07D2  3050               	movlw	low (0+9040)
  5513  07D3  0084               	movwf	4
  5514  07D4  3023               	movlw	high (0+9040)
  5515  07D5  0085               	movwf	5
  5516  07D6  30A0               	movlw	160
  5517  07D7  00FE               	movwf	btemp
  5518  07D8  3000               	movlw	0
  5519  07D9  00FF               	movwf	btemp+1
  5520  07DA  3197  272B  3187   	fcall	clear_ram0
  5521                           
  5522                           ; Clear objects allocated to BANK1
  5523  07DD  30C1               	movlw	low __pbssBANK1
  5524  07DE  0084               	movwf	4
  5525  07DF  3000               	movlw	high __pbssBANK1
  5526  07E0  0085               	movwf	5
  5527  07E1  3020               	movlw	32
  5528  07E2  00FE               	movwf	btemp
  5529  07E3  3000               	movlw	0
  5530  07E4  00FF               	movwf	btemp+1
  5531  07E5  3197  272B  3187   	fcall	clear_ram0
  5532                           
  5533                           ; Clear objects allocated to BANK3
  5534  07E8  30C0               	movlw	low __pbssBANK3
  5535  07E9  0084               	movwf	4
  5536  07EA  3001               	movlw	high __pbssBANK3
  5537  07EB  0085               	movwf	5
  5538  07EC  3011               	movlw	17
  5539  07ED  00FE               	movwf	btemp
  5540  07EE  3000               	movlw	0
  5541  07EF  00FF               	movwf	btemp+1
  5542  07F0  3197  272B  3187   	fcall	clear_ram0
  5543                           
  5544                           ; Clear objects allocated to BANK4
  5545  07F3  3020               	movlw	low __pbssBANK4
  5546  07F4  0084               	movwf	4
  5547  07F5  3002               	movlw	high __pbssBANK4
  5548  07F6  0085               	movwf	5
  5549  07F7  3050               	movlw	80
  5550  07F8  00FE               	movwf	btemp
  5551  07F9  3000               	movlw	0
  5552  07FA  00FF               	movwf	btemp+1
  5553  07FB  3197  272B         	fcall	clear_ram0
  5554  07FD                     end_of_initialization:	
  5555                           ;End of C runtime variable initialization code
  5556                           
  5557  07FD                     __end_of__initialization:	
  5558  07FD  0020               	movlb	0
  5559  07FE  3185  2D5D         	ljmp	_main	;jump to C main() function
  5560                           
  5561                           	psect	bssBANK1
  5562  00C1                     __pbssBANK1:	
  5563  00C1                     _Result:	
  5564  00C1                     	ds	2
  5565  00C3                     _derivativeValue:	
  5566  00C3                     	ds	2
  5567  00C5                     _errno:	
  5568  00C5                     	ds	2
  5569  00C7                     _error:	
  5570  00C7                     	ds	2
  5571  00C9                     _errorValue:	
  5572  00C9                     	ds	2
  5573  00CB                     _lastSign:	
  5574  00CB                     	ds	2
  5575  00CD                     _pidCount:	
  5576  00CD                     	ds	2
  5577  00CF                     _pidIntegrated:	
  5578  00CF                     	ds	2
  5579  00D1                     _pidMinOutput:	
  5580  00D1                     	ds	2
  5581  00D3                     _pidPrevError:	
  5582  00D3                     	ds	2
  5583  00D5                     _sampleIndex:	
  5584  00D5                     	ds	2
  5585  00D7                     _signPositive:	
  5586  00D7                     	ds	2
  5587  00D9                     _timer:	
  5588  00D9                     	ds	2
  5589  00DB                     _choice:	
  5590  00DB                     	ds	1
  5591  00DC                     _delayCount:	
  5592  00DC                     	ds	1
  5593  00DD                     _key:	
  5594  00DD                     	ds	1
  5595  00DE                     _menuDelay:	
  5596  00DE                     	ds	1
  5597  00DF                     _testKey:	
  5598  00DF                     	ds	1
  5599  00E0                     _timer2:	
  5600  00E0                     	ds	1
  5601                           
  5602                           	psect	dataBANK1
  5603  00E1                     __pdataBANK1:	
  5604  00E1                     _setpoint:	
  5605  00E1                     	ds	4
  5606  00E5                     _Kd:	
  5607  00E5                     	ds	2
  5608  00E7                     _Ki:	
  5609  00E7                     	ds	2
  5610  00E9                     _Kp:	
  5611  00E9                     	ds	2
  5612  00EB                     _pidMaxOutput:	
  5613  00EB                     	ds	2
  5614  00ED                     _loop:	
  5615  00ED                     	ds	1
  5616                           
  5617                           	psect	bssBANK3
  5618  01C0                     __pbssBANK3:	
  5619  01C0                     _totals:	
  5620  01C0                     	ds	8
  5621  01C8                     LCD_Write_Int@F13694:	
  5622  01C8                     	ds	5
  5623  01CD                     main@F13664:	
  5624  01CD                     	ds	4
  5625                           
  5626                           	psect	dataBANK3
  5627  01A0                     __pdataBANK3:	
  5628  01A0                     ___cgram:	
  5629  01A0                     	ds	16
  5630  01B0                     _channels:	
  5631  01B0                     	ds	4
  5632  01B4                     _desc:	
  5633  01B4                     	ds	4
  5634  01B8                     _highRangeSet:	
  5635  01B8                     	ds	4
  5636  01BC                     _lowRangeSet:	
  5637  01BC                     	ds	4
  5638                           
  5639                           	psect	bssBANK4
  5640  0220                     __pbssBANK4:	
  5641  0220                     main@F13671:	
  5642  0220                     	ds	80
  5643                           
  5644                           	psect	inittext
  5645  1737                     init_ram:	
  5646  1737  00FE               	movwf	126
  5647  1738                     initloop:	
  5648  1738  0012               	moviw fsr0++
  5649  1739  001E               	movwi fsr1++
  5650  173A  3001               	movlw	1
  5651  173B  02FE               	subwf	126,f
  5652  173C  3000               	movlw	0
  5653  173D  3BFF               	subwfb	127,f
  5654  173E  087F               	movf	127,w
  5655  173F  047E               	iorwf	126,w
  5656  1740  1903               	btfsc	3,2
  5657  1741  3400               	retlw	0
  5658  1742  2F38               	goto	initloop
  5659                           
  5660                           	psect	clrtext
  5661  172B                     clear_ram0:	
  5662                           ;	Called with FSR0 containing the base address, and
  5663                           ;	btemp/btemp+1 has the size to clear
  5664                           
  5665  172B  0064               	clrwdt	;clear the watchdog before getting into this loop
  5666  172C                     clrloop0:	
  5667  172C  0180               	clrf	0	;clear RAM location pointed to by FSR
  5668  172D  3101               	addfsr 0,1
  5669  172E  3001               	movlw	1
  5670  172F  02FE               	subwf	126,f
  5671  1730  3000               	movlw	0
  5672  1731  3BFF               	subwfb	127,f
  5673  1732  087F               	movf	127,w
  5674  1733  047E               	iorwf	126,w
  5675  1734  1903               	btfsc	3,2
  5676  1735  3400               	retlw	0	;all done for this memory range, return
  5677  1736  2F2C               	goto	clrloop0	;have we reached the end yet?
  5678                           
  5679                           	psect	cstackBANK2
  5680  0120                     __pcstackBANK2:	
  5681  0120                     main@outputSamples:	
  5682                           
  5683                           ; 80 bytes @ 0x0
  5684  0120                     	ds	80
  5685                           
  5686                           	psect	cstackBANK1
  5687  00A0                     __pcstackBANK1:	
  5688  00A0                     ??_main:	
  5689                           
  5690                           ; 1 bytes @ 0x0
  5691  00A0                     	ds	10
  5692  00AA                     main@tPadCount:	
  5693                           
  5694                           ; 1 bytes @ 0xA
  5695  00AA                     	ds	1
  5696  00AB                     main@output:	
  5697                           
  5698                           ; 2 bytes @ 0xB
  5699  00AB                     	ds	2
  5700  00AD                     main@holdOutput:	
  5701                           
  5702                           ; 1 bytes @ 0xD
  5703  00AD                     	ds	1
  5704  00AE                     main@lidOpenCount:	
  5705                           
  5706                           ; 1 bytes @ 0xE
  5707  00AE                     	ds	1
  5708  00AF                     main@lastTemperature:	
  5709                           
  5710                           ; 2 bytes @ 0xF
  5711  00AF                     	ds	2
  5712  00B1                     main@pidPeriodCounter:	
  5713                           
  5714                           ; 2 bytes @ 0x11
  5715  00B1                     	ds	2
  5716  00B3                     main@currentTemperature:	
  5717                           
  5718                           ; 2 bytes @ 0x13
  5719  00B3                     	ds	2
  5720  00B5                     main@outputTotal:	
  5721                           
  5722                           ; 4 bytes @ 0x15
  5723  00B5                     	ds	4
  5724  00B9                     main@dutyCycle6:	
  5725                           
  5726                           ; 2 bytes @ 0x19
  5727  00B9                     	ds	2
  5728  00BB                     main@analogs:	
  5729                           
  5730                           ; 4 bytes @ 0x1B
  5731  00BB                     	ds	4
  5732  00BF                     main@outputIndex:	
  5733                           
  5734                           ; 1 bytes @ 0x1F
  5735  00BF                     	ds	1
  5736  00C0                     main@j:	
  5737                           
  5738                           ; 1 bytes @ 0x20
  5739  00C0                     	ds	1
  5740                           
  5741                           	psect	cstackCOMMON
  5742  0070                     __pcstackCOMMON:	
  5743  0070                     ?___ftge:	
  5744  0070                     ?_LCD_Cmd:	
  5745                           ; 1 bit 
  5746                           
  5747  0070                     ?_LCD_Write_Char:	
  5748                           ; 1 bytes @ 0x0
  5749                           
  5750  0070                     ?_OSCILLATOR_Initialize:	
  5751                           ; 1 bytes @ 0x0
  5752                           
  5753  0070                     ??_OSCILLATOR_Initialize:	
  5754                           ; 1 bytes @ 0x0
  5755                           
  5756  0070                     ?_TMR2_Initialize:	
  5757                           ; 1 bytes @ 0x0
  5758                           
  5759  0070                     ??_TMR2_Initialize:	
  5760                           ; 1 bytes @ 0x0
  5761                           
  5762  0070                     ?_menuChoice:	
  5763                           ; 1 bytes @ 0x0
  5764                           
  5765  0070                     ?_ADCC_Initialize:	
  5766                           ; 1 bytes @ 0x0
  5767                           
  5768  0070                     ??_ADCC_Initialize:	
  5769                           ; 1 bytes @ 0x0
  5770                           
  5771  0070                     ?_InitCustomChars:	
  5772                           ; 1 bytes @ 0x0
  5773                           
  5774  0070                     ?_LCD_Port:	
  5775                           ; 1 bytes @ 0x0
  5776                           
  5777  0070                     ??_LCD_Port:	
  5778                           ; 1 bytes @ 0x0
  5779                           
  5780  0070                     ?_LCD_Clear:	
  5781                           ; 1 bytes @ 0x0
  5782                           
  5783  0070                     ?_LCD_Init:	
  5784                           ; 1 bytes @ 0x0
  5785                           
  5786  0070                     ?_PIN_MANAGER_Initialize:	
  5787                           ; 1 bytes @ 0x0
  5788                           
  5789  0070                     ??_PIN_MANAGER_Initialize:	
  5790                           ; 1 bytes @ 0x0
  5791                           
  5792  0070                     ?_PWM_Initialize:	
  5793                           ; 1 bytes @ 0x0
  5794                           
  5795  0070                     ??_PWM_Initialize:	
  5796                           ; 1 bytes @ 0x0
  5797                           
  5798  0070                     ?_PWM7_LoadDutyValue:	
  5799                           ; 1 bytes @ 0x0
  5800                           
  5801  0070                     ?_SYSTEM_Initialize:	
  5802                           ; 1 bytes @ 0x0
  5803                           
  5804  0070                     ?_main:	
  5805                           ; 1 bytes @ 0x0
  5806                           
  5807  0070                     ?_readKey:	
  5808                           ; 1 bytes @ 0x0
  5809                           
  5810  0070                     ??_readKey:	
  5811                           ; 1 bytes @ 0x0
  5812                           
  5813  0070                     ?_ADCRead:	
  5814                           ; 1 bytes @ 0x0
  5815                           
  5816  0070                     ?___wmul:	
  5817                           ; 2 bytes @ 0x0
  5818                           
  5819  0070                     ?___awdiv:	
  5820                           ; 2 bytes @ 0x0
  5821                           
  5822  0070                     ?___awmod:	
  5823                           ; 2 bytes @ 0x0
  5824                           
  5825  0070                     ?___ftpack:	
  5826                           ; 2 bytes @ 0x0
  5827                           
  5828  0070                     ?_frexp:	
  5829                           ; 3 bytes @ 0x0
  5830                           
  5831  0070                     ?___aldiv:	
  5832                           ; 3 bytes @ 0x0
  5833                           
  5834  0070                     ?___fttol:	
  5835                           ; 4 bytes @ 0x0
  5836                           
  5837  0070                     LCD_Port@a:	
  5838                           ; 4 bytes @ 0x0
  5839                           
  5840  0070                     PIN_MANAGER_Initialize@state:	
  5841                           ; 1 bytes @ 0x0
  5842                           
  5843  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5844                           ; 1 bytes @ 0x0
  5845                           
  5846  0070                     ___wmul@multiplier:	
  5847                           ; 2 bytes @ 0x0
  5848                           
  5849  0070                     ___awdiv@divisor:	
  5850                           ; 2 bytes @ 0x0
  5851                           
  5852  0070                     ___awmod@divisor:	
  5853                           ; 2 bytes @ 0x0
  5854                           
  5855  0070                     ___ftpack@arg:	
  5856                           ; 2 bytes @ 0x0
  5857                           
  5858  0070                     ___ftge@ff1:	
  5859                           ; 3 bytes @ 0x0
  5860                           
  5861  0070                     ___fttol@f1:	
  5862                           ; 3 bytes @ 0x0
  5863                           
  5864  0070                     frexp@value:	
  5865                           ; 3 bytes @ 0x0
  5866                           
  5867  0070                     ___aldiv@divisor:	
  5868                           ; 3 bytes @ 0x0
  5869                           
  5870                           
  5871                           ; 4 bytes @ 0x0
  5872  0070                     	ds	1
  5873  0071                     ??_LCD_Cmd:	
  5874  0071                     ??_LCD_Write_Char:	
  5875                           ; 1 bytes @ 0x1
  5876                           
  5877                           
  5878                           ; 1 bytes @ 0x1
  5879  0071                     	ds	1
  5880  0072                     ??_PWM7_LoadDutyValue:	
  5881  0072                     LCD_Write_Char@temp:	
  5882                           ; 1 bytes @ 0x2
  5883                           
  5884  0072                     ___wmul@multiplicand:	
  5885                           ; 1 bytes @ 0x2
  5886                           
  5887  0072                     ___awdiv@dividend:	
  5888                           ; 2 bytes @ 0x2
  5889                           
  5890  0072                     ___awmod@dividend:	
  5891                           ; 2 bytes @ 0x2
  5892                           
  5893                           
  5894                           ; 2 bytes @ 0x2
  5895  0072                     	ds	1
  5896  0073                     ??_ADCRead:	
  5897  0073                     ADCRead@channel:	
  5898                           ; 1 bytes @ 0x3
  5899                           
  5900  0073                     LCD_Cmd@a:	
  5901                           ; 1 bytes @ 0x3
  5902                           
  5903  0073                     LCD_Write_Char@y:	
  5904                           ; 1 bytes @ 0x3
  5905                           
  5906  0073                     ___ftpack@exp:	
  5907                           ; 1 bytes @ 0x3
  5908                           
  5909  0073                     frexp@eptr:	
  5910                           ; 1 bytes @ 0x3
  5911                           
  5912  0073                     ___ftge@ff2:	
  5913                           ; 1 bytes @ 0x3
  5914                           
  5915                           
  5916                           ; 3 bytes @ 0x3
  5917  0073                     	ds	1
  5918  0074                     ??_frexp:	
  5919  0074                     ??_LCD_Clear:	
  5920                           ; 1 bytes @ 0x4
  5921                           
  5922  0074                     ?_LCD_Set_Cursor:	
  5923                           ; 1 bytes @ 0x4
  5924                           
  5925  0074                     ??_LCD_Init:	
  5926                           ; 1 bytes @ 0x4
  5927                           
  5928  0074                     ??___wmul:	
  5929                           ; 1 bytes @ 0x4
  5930                           
  5931  0074                     ??___awdiv:	
  5932                           ; 1 bytes @ 0x4
  5933                           
  5934  0074                     ??___awmod:	
  5935                           ; 1 bytes @ 0x4
  5936                           
  5937  0074                     ??___fttol:	
  5938                           ; 1 bytes @ 0x4
  5939                           
  5940  0074                     LCD_Set_Cursor@y:	
  5941                           ; 1 bytes @ 0x4
  5942                           
  5943  0074                     LCD_Write_Char@a:	
  5944                           ; 1 bytes @ 0x4
  5945                           
  5946  0074                     ___ftpack@sign:	
  5947                           ; 1 bytes @ 0x4
  5948                           
  5949  0074                     ___wmul@product:	
  5950                           ; 1 bytes @ 0x4
  5951                           
  5952  0074                     ___aldiv@dividend:	
  5953                           ; 2 bytes @ 0x4
  5954                           
  5955                           
  5956                           ; 4 bytes @ 0x4
  5957  0074                     	ds	1
  5958  0075                     ??___ftpack:	
  5959  0075                     ??_InitCustomChars:	
  5960                           ; 1 bytes @ 0x5
  5961                           
  5962  0075                     ??_LCD_Set_Cursor:	
  5963                           ; 1 bytes @ 0x5
  5964                           
  5965  0075                     ?_LCD_Write_String:	
  5966                           ; 1 bytes @ 0x5
  5967                           
  5968  0075                     ___awdiv@counter:	
  5969                           ; 1 bytes @ 0x5
  5970                           
  5971  0075                     ___awmod@counter:	
  5972                           ; 1 bytes @ 0x5
  5973                           
  5974  0075                     LCD_Write_String@a:	
  5975                           ; 1 bytes @ 0x5
  5976                           
  5977                           
  5978                           ; 2 bytes @ 0x5
  5979  0075                     	ds	1
  5980  0076                     ??___ftge:	
  5981  0076                     ?_PID_Calculate:	
  5982                           ; 1 bytes @ 0x6
  5983                           
  5984  0076                     InitCustomChars@i:	
  5985                           ; 2 bytes @ 0x6
  5986                           
  5987  0076                     ___awdiv@sign:	
  5988                           ; 1 bytes @ 0x6
  5989                           
  5990  0076                     ___awmod@sign:	
  5991                           ; 1 bytes @ 0x6
  5992                           
  5993  0076                     PID_Calculate@setpoint:	
  5994                           ; 1 bytes @ 0x6
  5995                           
  5996                           
  5997                           ; 2 bytes @ 0x6
  5998  0076                     	ds	1
  5999  0077                     ??_LCD_Write_String:	
  6000  0077                     LCD_Set_Cursor@x:	
  6001                           ; 1 bytes @ 0x7
  6002                           
  6003  0077                     LCD_Init@style:	
  6004                           ; 1 bytes @ 0x7
  6005                           
  6006  0077                     ___awdiv@quotient:	
  6007                           ; 1 bytes @ 0x7
  6008                           
  6009                           
  6010                           ; 2 bytes @ 0x7
  6011  0077                     	ds	1
  6012  0078                     ??_SYSTEM_Initialize:	
  6013  0078                     ??___aldiv:	
  6014                           ; 1 bytes @ 0x8
  6015                           
  6016  0078                     ?___awtoft:	
  6017                           ; 1 bytes @ 0x8
  6018                           
  6019  0078                     LCD_Set_Cursor@z:	
  6020                           ; 3 bytes @ 0x8
  6021                           
  6022  0078                     ___fttol@sign1:	
  6023                           ; 1 bytes @ 0x8
  6024                           
  6025  0078                     LCD_Write_String@i:	
  6026                           ; 1 bytes @ 0x8
  6027                           
  6028  0078                     PID_Calculate@temp:	
  6029                           ; 2 bytes @ 0x8
  6030                           
  6031  0078                     ___awtoft@c:	
  6032                           ; 2 bytes @ 0x8
  6033                           
  6034                           
  6035                           ; 2 bytes @ 0x8
  6036  0078                     	ds	1
  6037  0079                     ?_LCD_Write_Int:	
  6038  0079                     LCD_Set_Cursor@w:	
  6039                           ; 1 bytes @ 0x9
  6040                           
  6041  0079                     readAnalog@analog_channel:	
  6042                           ; 1 bytes @ 0x9
  6043                           
  6044  0079                     LCD_Write_Int@value:	
  6045                           ; 2 bytes @ 0x9
  6046                           
  6047  0079                     ___fttol@lval:	
  6048                           ; 2 bytes @ 0x9
  6049                           
  6050                           
  6051                           ; 4 bytes @ 0x9
  6052  0079                     	ds	1
  6053  007A                     ??_PID_Calculate:	
  6054  007A                     LCD_Set_Cursor@temp:	
  6055                           ; 1 bytes @ 0xA
  6056                           
  6057                           
  6058                           ; 1 bytes @ 0xA
  6059  007A                     	ds	1
  6060  007B                     ??___awtoft:	
  6061  007B                     LCD_Write_Int@fieldLength:	
  6062                           ; 1 bytes @ 0xB
  6063                           
  6064  007B                     readAnalog@value:	
  6065                           ; 1 bytes @ 0xB
  6066                           
  6067                           
  6068                           ; 2 bytes @ 0xB
  6069  007B                     	ds	1
  6070  007C                     LCD_Write_Int@numPlaces:	
  6071                           
  6072                           ; 1 bytes @ 0xC
  6073  007C                     	ds	1
  6074  007D                     LCD_Write_Int@sign:	
  6075  007D                     ___awtoft@sign:	
  6076                           ; 1 bytes @ 0xD
  6077                           
  6078  007D                     ___fttol@exp1:	
  6079                           ; 1 bytes @ 0xD
  6080                           
  6081                           
  6082                           ; 1 bytes @ 0xD
  6083  007D                     	ds	1
  6084  007E                     ??_eval_poly:	
  6085  007E                     ??_tempCalc:	
  6086                           ; 1 bytes @ 0xE
  6087                           
  6088  007E                     ??___ftsub:	
  6089                           ; 1 bytes @ 0xE
  6090                           
  6091                           
  6092                           	psect	cstackBANK0
  6093  0020                     __pcstackBANK0:	
  6094                           ; 1 bytes @ 0xE
  6095                           
  6096  0020                     ??_LCD_Write_Int:	
  6097  0020                     ?___ftmul:	
  6098                           ; 1 bytes @ 0x0
  6099                           
  6100  0020                     ___aldiv@counter:	
  6101                           ; 3 bytes @ 0x0
  6102                           
  6103  0020                     ___ftmul@f1:	
  6104                           ; 1 bytes @ 0x0
  6105                           
  6106                           
  6107                           ; 3 bytes @ 0x0
  6108  0020                     	ds	1
  6109  0021                     ___aldiv@sign:	
  6110                           
  6111                           ; 1 bytes @ 0x1
  6112  0021                     	ds	1
  6113  0022                     ___aldiv@quotient:	
  6114                           
  6115                           ; 4 bytes @ 0x2
  6116  0022                     	ds	1
  6117  0023                     ___ftmul@f2:	
  6118                           
  6119                           ; 3 bytes @ 0x3
  6120  0023                     	ds	2
  6121  0025                     LCD_Write_Int@str:	
  6122                           
  6123                           ; 5 bytes @ 0x5
  6124  0025                     	ds	1
  6125  0026                     ??___ftmul:	
  6126  0026                     ?_readAnalog:	
  6127                           ; 1 bytes @ 0x6
  6128                           
  6129  0026                     readAnalog@channel:	
  6130                           ; 2 bytes @ 0x6
  6131                           
  6132                           
  6133                           ; 2 bytes @ 0x6
  6134  0026                     	ds	2
  6135  0028                     ??_readAnalog:	
  6136                           
  6137                           ; 1 bytes @ 0x8
  6138  0028                     	ds	2
  6139  002A                     ___ftmul@exp:	
  6140  002A                     LCD_Write_Int@j:	
  6141                           ; 1 bytes @ 0xA
  6142                           
  6143                           
  6144                           ; 2 bytes @ 0xA
  6145  002A                     	ds	1
  6146  002B                     ___ftmul@f3_as_product:	
  6147                           
  6148                           ; 3 bytes @ 0xB
  6149  002B                     	ds	1
  6150  002C                     LCD_Write_Int@i:	
  6151                           
  6152                           ; 2 bytes @ 0xC
  6153  002C                     	ds	2
  6154  002E                     ??_menuChoice:	
  6155  002E                     ___ftmul@cntr:	
  6156                           ; 1 bytes @ 0xE
  6157                           
  6158                           
  6159                           ; 1 bytes @ 0xE
  6160  002E                     	ds	1
  6161  002F                     ___ftmul@sign:	
  6162                           
  6163                           ; 1 bytes @ 0xF
  6164  002F                     	ds	1
  6165  0030                     ?___ftdiv:	
  6166  0030                     ___ftdiv@f2:	
  6167                           ; 3 bytes @ 0x10
  6168                           
  6169                           
  6170                           ; 3 bytes @ 0x10
  6171  0030                     	ds	3
  6172  0033                     ___ftdiv@f1:	
  6173                           
  6174                           ; 3 bytes @ 0x13
  6175  0033                     	ds	3
  6176  0036                     ??___ftdiv:	
  6177                           
  6178                           ; 1 bytes @ 0x16
  6179  0036                     	ds	4
  6180  003A                     ___ftdiv@cntr:	
  6181                           
  6182                           ; 1 bytes @ 0x1A
  6183  003A                     	ds	1
  6184  003B                     ___ftdiv@f3:	
  6185                           
  6186                           ; 3 bytes @ 0x1B
  6187  003B                     	ds	3
  6188  003E                     ___ftdiv@exp:	
  6189                           
  6190                           ; 1 bytes @ 0x1E
  6191  003E                     	ds	1
  6192  003F                     ___ftdiv@sign:	
  6193                           
  6194                           ; 1 bytes @ 0x1F
  6195  003F                     	ds	1
  6196  0040                     ?___ftadd:	
  6197  0040                     ___ftadd@f1:	
  6198                           ; 3 bytes @ 0x20
  6199                           
  6200                           
  6201                           ; 3 bytes @ 0x20
  6202  0040                     	ds	3
  6203  0043                     ___ftadd@f2:	
  6204                           
  6205                           ; 3 bytes @ 0x23
  6206  0043                     	ds	3
  6207  0046                     ??___ftadd:	
  6208                           
  6209                           ; 1 bytes @ 0x26
  6210  0046                     	ds	4
  6211  004A                     ___ftadd@sign:	
  6212                           
  6213                           ; 1 bytes @ 0x2A
  6214  004A                     	ds	1
  6215  004B                     ___ftadd@exp2:	
  6216                           
  6217                           ; 1 bytes @ 0x2B
  6218  004B                     	ds	1
  6219  004C                     ___ftadd@exp1:	
  6220                           
  6221                           ; 1 bytes @ 0x2C
  6222  004C                     	ds	1
  6223  004D                     ?_eval_poly:	
  6224  004D                     ?___ftsub:	
  6225                           ; 3 bytes @ 0x2D
  6226                           
  6227  004D                     ___ftsub@f2:	
  6228                           ; 3 bytes @ 0x2D
  6229                           
  6230  004D                     eval_poly@x:	
  6231                           ; 3 bytes @ 0x2D
  6232                           
  6233                           
  6234                           ; 3 bytes @ 0x2D
  6235  004D                     	ds	3
  6236  0050                     eval_poly@d:	
  6237  0050                     ___ftsub@f1:	
  6238                           ; 2 bytes @ 0x30
  6239                           
  6240                           
  6241                           ; 3 bytes @ 0x30
  6242  0050                     	ds	2
  6243  0052                     eval_poly@n:	
  6244                           
  6245                           ; 2 bytes @ 0x32
  6246  0052                     	ds	2
  6247  0054                     eval_poly@res:	
  6248                           
  6249                           ; 3 bytes @ 0x34
  6250  0054                     	ds	3
  6251  0057                     ?_log:	
  6252  0057                     log@x:	
  6253                           ; 3 bytes @ 0x37
  6254                           
  6255                           
  6256                           ; 3 bytes @ 0x37
  6257  0057                     	ds	3
  6258  005A                     ??_log:	
  6259                           
  6260                           ; 1 bytes @ 0x3A
  6261  005A                     	ds	1
  6262  005B                     log@exponent:	
  6263                           
  6264                           ; 2 bytes @ 0x3B
  6265  005B                     	ds	2
  6266  005D                     ?_tempCalc:	
  6267  005D                     tempCalc@analogValue:	
  6268                           ; 2 bytes @ 0x3D
  6269                           
  6270                           
  6271                           ; 2 bytes @ 0x3D
  6272  005D                     	ds	2
  6273  005F                     tempCalc@R:	
  6274                           
  6275                           ; 3 bytes @ 0x3F
  6276  005F                     	ds	3
  6277  0062                     _tempCalc$1018:	
  6278                           
  6279                           ; 3 bytes @ 0x42
  6280  0062                     	ds	3
  6281  0065                     tempCalc@steinhart:	
  6282                           
  6283                           ; 3 bytes @ 0x45
  6284  0065                     	ds	3
  6285  0068                     main@bCount:	
  6286                           
  6287                           ; 2 bytes @ 0x48
  6288  0068                     	ds	2
  6289  006A                     main@set:	
  6290                           
  6291                           ; 1 bytes @ 0x4A
  6292  006A                     	ds	1
  6293  006B                     main@x:	
  6294                           
  6295                           ; 1 bytes @ 0x4B
  6296  006B                     	ds	1
  6297  006C                     main@choice:	
  6298                           
  6299                           ; 1 bytes @ 0x4C
  6300  006C                     	ds	1
  6301  006D                     main@C_or_F:	
  6302                           
  6303                           ; 1 bytes @ 0x4D
  6304  006D                     	ds	1
  6305  006E                     main@startDelay:	
  6306                           
  6307                           ; 1 bytes @ 0x4E
  6308  006E                     	ds	1
  6309  006F                     main@resetDelay:	
  6310                           
  6311                           ; 1 bytes @ 0x4F
  6312  006F                     	ds	1
  6313                           
  6314                           	psect	maintext
  6315  055D                     __pmaintext:	
  6316 ;;
  6317 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6318 ;;
  6319 ;; *************** function _main *****************
  6320 ;; Defined at:
  6321 ;;		line 29 in file "main.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;  outputSample   80    0[BANK2 ] int [40]
  6326 ;;  analogs         4   27[BANK1 ] unsigned int [2]
  6327 ;;  outputTotal     4   21[BANK1 ] long 
  6328 ;;  displayTemp2    3    0        float 
  6329 ;;  displayTemp     3    0        float 
  6330 ;;  dutyCycle6      2   25[BANK1 ] unsigned int 
  6331 ;;  currentTempe    2   19[BANK1 ] int 
  6332 ;;  pidPeriodCou    2   17[BANK1 ] int 
  6333 ;;  lastTemperat    2   15[BANK1 ] int 
  6334 ;;  output          2   11[BANK1 ] int 
  6335 ;;  bCount          2   72[BANK0 ] unsigned int 
  6336 ;;  j               1   32[BANK1 ] unsigned char 
  6337 ;;  outputIndex     1   31[BANK1 ] unsigned char 
  6338 ;;  lidOpenCount    1   14[BANK1 ] unsigned char 
  6339 ;;  holdOutput      1   13[BANK1 ] unsigned char 
  6340 ;;  tPadCount       1   10[BANK1 ] unsigned char 
  6341 ;;  resetDelay      1   79[BANK0 ] unsigned char 
  6342 ;;  startDelay      1   78[BANK0 ] unsigned char 
  6343 ;;  C_or_F          1   77[BANK0 ] unsigned char 
  6344 ;;  choice          1   76[BANK0 ] unsigned char 
  6345 ;;  x               1   75[BANK0 ] unsigned char 
  6346 ;;  set             1   74[BANK0 ] unsigned char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : B1F/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Locals:         0       8      23      80       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;      Totals:         0       8      33      80       0       0       0       0       0       0       0       0       
      +0       0
  6360 ;;Total ram usage:      121 bytes
  6361 ;; Hardware stack levels required when called:    5
  6362 ;; This function calls:
  6363 ;;		_LCD_Clear
  6364 ;;		_LCD_Set_Cursor
  6365 ;;		_LCD_Write_Char
  6366 ;;		_LCD_Write_Int
  6367 ;;		_LCD_Write_String
  6368 ;;		_PID_Calculate
  6369 ;;		_PWM7_LoadDutyValue
  6370 ;;		_SYSTEM_Initialize
  6371 ;;		___aldiv
  6372 ;;		_menuChoice
  6373 ;;		_readAnalog
  6374 ;;		_tempCalc
  6375 ;; This function is called by:
  6376 ;;		Startup code after reset
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           
  6381                           ;psect for function _main
  6382  055D                     _main:	
  6383                           
  6384                           ;main.c: 31: SYSTEM_Initialize();
  6385                           
  6386                           ;incstack = 0
  6387                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6388  055D  3189  21AB  3185   	fcall	_SYSTEM_Initialize
  6389                           
  6390                           ;main.c: 33: uint16_t analogs[2] = {0};
  6391  0560  0023               	movlb	3	; select bank3
  6392  0561  0850               	movf	(main@F13664+3)^(0+384),w
  6393  0562  0021               	movlb	1	; select bank1
  6394  0563  00BE               	movwf	(main@analogs+3)^(0+128)
  6395  0564  0023               	movlb	3	; select bank3
  6396  0565  084F               	movf	(main@F13664+2)^(0+384),w
  6397  0566  0021               	movlb	1	; select bank1
  6398  0567  00BD               	movwf	(main@analogs+2)^(0+128)
  6399  0568  0023               	movlb	3	; select bank3
  6400  0569  084E               	movf	(main@F13664+1)^(0+384),w
  6401  056A  0021               	movlb	1	; select bank1
  6402  056B  00BC               	movwf	(main@analogs+1)^(0+128)
  6403  056C  0023               	movlb	3	; select bank3
  6404  056D  084D               	movf	main@F13664^(0+384),w
  6405  056E  0021               	movlb	1	; select bank1
  6406  056F  00BB               	movwf	main@analogs^(0+128)
  6407                           
  6408                           ;main.c: 35: extern volatile int16_t setpoint[2];
  6409                           ;main.c: 37: char set = 0;
  6410  0570  0020               	movlb	0	; select bank0
  6411  0571  01EA               	clrf	main@set
  6412                           
  6413                           ;main.c: 43: int output = 0;
  6414  0572  0021               	movlb	1	; select bank1
  6415  0573  01AB               	clrf	main@output^(0+128)
  6416  0574  01AC               	clrf	(main@output+1)^(0+128)
  6417                           
  6418                           ;main.c: 45: int32_t outputTotal = 0;
  6419  0575  3000               	movlw	0
  6420  0576  00B8               	movwf	(main@outputTotal+3)^(0+128)
  6421  0577  3000               	movlw	0
  6422  0578  00B7               	movwf	(main@outputTotal+2)^(0+128)
  6423  0579  3000               	movlw	0
  6424  057A  00B6               	movwf	(main@outputTotal+1)^(0+128)
  6425  057B  3000               	movlw	0
  6426  057C  00B5               	movwf	main@outputTotal^(0+128)
  6427                           
  6428                           ;main.c: 47: char outputIndex = 0;
  6429  057D  01BF               	clrf	main@outputIndex^(0+128)
  6430                           
  6431                           ;main.c: 49: int16_t outputSamples[40]= {0};
  6432  057E  3020               	movlw	low main@F13671
  6433  057F  0086               	movwf	6
  6434  0580  3002               	movlw	high main@F13671
  6435  0581  0087               	movwf	7
  6436  0582  3020               	movlw	low main@outputSamples
  6437  0583  0084               	movwf	4
  6438  0584  3001               	movlw	high main@outputSamples
  6439  0585  0085               	movwf	5
  6440  0586  3050               	movlw	80
  6441  0587  00A0               	movwf	??_main^(0+128)
  6442  0588                     u3500:	
  6443  0588  0016               	moviw fsr1++
  6444  0589  001A               	movwi fsr0++
  6445  058A  0BA0               	decfsz	??_main^(0+128),f
  6446  058B  2D88               	goto	u3500
  6447                           
  6448                           ;main.c: 51: char holdOutput = 0;
  6449  058C  01AD               	clrf	main@holdOutput^(0+128)
  6450                           
  6451                           ;main.c: 53: int currentTemperature = 750;
  6452  058D  30EE               	movlw	238
  6453  058E  00B3               	movwf	main@currentTemperature^(0+128)
  6454  058F  3002               	movlw	2
  6455  0590  00B4               	movwf	(main@currentTemperature^(0+128)+1)
  6456                           
  6457                           ;main.c: 55: int lastTemperature = 750;
  6458  0591  30EE               	movlw	238
  6459  0592  00AF               	movwf	main@lastTemperature^(0+128)
  6460  0593  3002               	movlw	2
  6461  0594  00B0               	movwf	(main@lastTemperature^(0+128)+1)
  6462                           
  6463                           ;main.c: 57: char lidOpenCount = 0;
  6464  0595  01AE               	clrf	main@lidOpenCount^(0+128)
  6465                           
  6466                           ;main.c: 59: float displayTemp, displayTemp2;
  6467                           ;main.c: 61: char j = 0;
  6468  0596  01C0               	clrf	main@j^(0+128)
  6469                           
  6470                           ;main.c: 63: char x = 0;
  6471  0597  0020               	movlb	0	; select bank0
  6472  0598  01EB               	clrf	main@x
  6473                           
  6474                           ;main.c: 65: int pidPeriodCounter = 0;
  6475  0599  0021               	movlb	1	; select bank1
  6476  059A  01B1               	clrf	main@pidPeriodCounter^(0+128)
  6477  059B  01B2               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6478                           
  6479                           ;main.c: 67: extern int pidMaxOutput;
  6480                           ;main.c: 69: extern unsigned char loop;
  6481                           ;main.c: 71: char choice = 2;
  6482  059C  3002               	movlw	2
  6483  059D  00A0               	movwf	??_main^(0+128)
  6484  059E  0820               	movf	??_main^(0+128),w
  6485  059F  0020               	movlb	0	; select bank0
  6486  05A0  00EC               	movwf	main@choice
  6487                           
  6488                           ;main.c: 73: char C_or_F = 1;
  6489  05A1  01ED               	clrf	main@C_or_F
  6490  05A2  0AED               	incf	main@C_or_F,f
  6491                           
  6492                           ;main.c: 75: unsigned int bCount = 0;
  6493  05A3  01E8               	clrf	main@bCount
  6494  05A4  01E9               	clrf	main@bCount+1
  6495                           
  6496                           ;main.c: 77: unsigned char startDelay = 0;
  6497  05A5  01EE               	clrf	main@startDelay
  6498                           
  6499                           ;main.c: 79: unsigned char resetDelay = 0;
  6500  05A6  01EF               	clrf	main@resetDelay
  6501                           
  6502                           ;main.c: 81: unsigned char tPadCount = 10;
  6503  05A7  300A               	movlw	10
  6504  05A8  0021               	movlb	1	; select bank1
  6505  05A9  00A0               	movwf	??_main^(0+128)
  6506  05AA  0820               	movf	??_main^(0+128),w
  6507  05AB  00AA               	movwf	main@tPadCount^(0+128)
  6508                           
  6509                           ;main.c: 84: uint16_t dutyCycle6 = 0;
  6510  05AC  01B9               	clrf	main@dutyCycle6^(0+128)
  6511  05AD  01BA               	clrf	(main@dutyCycle6+1)^(0+128)
  6512                           
  6513                           ;main.c: 90: PWM7_LoadDutyValue(setpoint[1]);
  6514  05AE  0864               	movf	((_setpoint+1)^(0+128)+2),w	;volatile
  6515  05AF  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6516  05B0  0863               	movf	(_setpoint^(0+128)+2),w	;volatile
  6517  05B1  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6518  05B2  3197  276C  3185   	fcall	_PWM7_LoadDutyValue
  6519                           
  6520                           ;main.c: 92: _delay((unsigned long)((300)*(32000000/4000.0)));
  6521  05B5  300D               	movlw	13
  6522  05B6  0021               	movlb	1	; select bank1
  6523  05B7  00A2               	movwf	(??_main^(0+128)+2)
  6524  05B8  302D               	movlw	45
  6525  05B9  00A1               	movwf	(??_main^(0+128)+1)
  6526  05BA  30E2               	movlw	226
  6527  05BB  00A0               	movwf	??_main^(0+128)
  6528  05BC                     u3637:	
  6529  05BC  0BA0               	decfsz	??_main^(0+128),f
  6530  05BD  2DBC               	goto	u3637
  6531  05BE  0BA1               	decfsz	(??_main^(0+128)+1),f
  6532  05BF  2DBC               	goto	u3637
  6533  05C0  0BA2               	decfsz	(??_main^(0+128)+2),f
  6534  05C1  2DBC               	goto	u3637
  6535  05C2  3200               	nop2
  6536                           
  6537                           ;main.c: 94: LCD_Clear();
  6538  05C3  3197  2718  3185   	fcall	_LCD_Clear
  6539  05C6                     l3074:	
  6540                           ;main.c: 96: while (1)
  6541                           
  6542                           
  6543                           ;main.c: 97: {
  6544                           ;main.c: 98: if(loop>253)
  6545  05C6  30FE               	movlw	254
  6546  05C7  0021               	movlb	1	; select bank1
  6547  05C8  026D               	subwf	_loop^(0+128),w
  6548  05C9  1C03               	skipc
  6549  05CA  2F16               	goto	l3142
  6550                           
  6551                           ;main.c: 99: {
  6552                           ;main.c: 100: PWM7_LoadDutyValue(setpoint[1]);
  6553  05CB  0864               	movf	((_setpoint+1)^(0+128)+2),w	;volatile
  6554  05CC  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6555  05CD  0863               	movf	(_setpoint^(0+128)+2),w	;volatile
  6556  05CE  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6557  05CF  3197  276C  3185   	fcall	_PWM7_LoadDutyValue
  6558                           
  6559                           ;main.c: 102: { LCD_Set_Cursor(0,0); LCD_Write_String("Pit:");};
  6560  05D2  01F4               	clrf	LCD_Set_Cursor@y
  6561  05D3  3000               	movlw	0
  6562  05D4  3189  216C  3185   	fcall	_LCD_Set_Cursor
  6563  05D7  307D               	movlw	low (STR_1| (0+32768))
  6564  05D8  00F5               	movwf	LCD_Write_String@a
  6565  05D9  3090               	movlw	high (STR_1| (0+32768))
  6566  05DA  00F6               	movwf	LCD_Write_String@a+1
  6567  05DB  3197  27CB  3185   	fcall	_LCD_Write_String
  6568                           
  6569                           ;main.c: 103: { LCD_Set_Cursor(5,0); LCD_Write_Int(analogs[1],-1, 1, 0);};
  6570  05DE  01F4               	clrf	LCD_Set_Cursor@y
  6571  05DF  3005               	movlw	5
  6572  05E0  3189  216C  3185   	fcall	_LCD_Set_Cursor
  6573  05E3  0021               	movlb	1	; select bank1
  6574  05E4  083E               	movf	((main@analogs+1)^(0+128)+2),w
  6575  05E5  00FA               	movwf	LCD_Write_Int@value+1
  6576  05E6  083D               	movf	(main@analogs^(0+128)+2),w
  6577  05E7  00F9               	movwf	LCD_Write_Int@value
  6578  05E8  01FB               	clrf	LCD_Write_Int@fieldLength
  6579  05E9  03FB               	decf	LCD_Write_Int@fieldLength,f
  6580  05EA  01FC               	clrf	LCD_Write_Int@numPlaces
  6581  05EB  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6582  05EC  01FD               	clrf	LCD_Write_Int@sign
  6583  05ED  318E  265C  3185   	fcall	_LCD_Write_Int
  6584                           
  6585                           ;main.c: 104: LCD_Write_Char(0);
  6586  05F0  3000               	movlw	0
  6587  05F1  3188  2099  3185   	fcall	_LCD_Write_Char
  6588                           
  6589                           ;main.c: 105: LCD_Write_Char(70);
  6590  05F4  3046               	movlw	70
  6591  05F5  3188  2099  3185   	fcall	_LCD_Write_Char
  6592                           
  6593                           ;main.c: 106: LCD_Write_Char(' ');
  6594  05F8  3020               	movlw	32
  6595  05F9  3188  2099  3185   	fcall	_LCD_Write_Char
  6596                           
  6597                           ;main.c: 107: LCD_Write_Char(' ');
  6598  05FC  3020               	movlw	32
  6599  05FD  3188  2099  3185   	fcall	_LCD_Write_Char
  6600                           
  6601                           ;main.c: 109: { LCD_Set_Cursor(0,1); LCD_Write_String("Output:");};
  6602  0600  01F4               	clrf	LCD_Set_Cursor@y
  6603  0601  0AF4               	incf	LCD_Set_Cursor@y,f
  6604  0602  3000               	movlw	0
  6605  0603  3189  216C  3185   	fcall	_LCD_Set_Cursor
  6606  0606  3075               	movlw	low (STR_2| (0+32768))
  6607  0607  00F5               	movwf	LCD_Write_String@a
  6608  0608  3090               	movlw	high (STR_2| (0+32768))
  6609  0609  00F6               	movwf	LCD_Write_String@a+1
  6610  060A  3197  27CB  3185   	fcall	_LCD_Write_String
  6611                           
  6612                           ;main.c: 110: LCD_Write_Char(' ');
  6613  060D  3020               	movlw	32
  6614  060E  3188  2099  3185   	fcall	_LCD_Write_Char
  6615                           
  6616                           ;main.c: 111: LCD_Write_Int(dutyCycle6,5,0,0);
  6617  0611  0021               	movlb	1	; select bank1
  6618  0612  083A               	movf	(main@dutyCycle6+1)^(0+128),w
  6619  0613  00FA               	movwf	LCD_Write_Int@value+1
  6620  0614  0839               	movf	main@dutyCycle6^(0+128),w
  6621  0615  00F9               	movwf	LCD_Write_Int@value
  6622  0616  3005               	movlw	5
  6623  0617  00A0               	movwf	??_main^(0+128)
  6624  0618  0820               	movf	??_main^(0+128),w
  6625  0619  00FB               	movwf	LCD_Write_Int@fieldLength
  6626  061A  01FC               	clrf	LCD_Write_Int@numPlaces
  6627  061B  01FD               	clrf	LCD_Write_Int@sign
  6628  061C  318E  265C  3185   	fcall	_LCD_Write_Int
  6629                           
  6630                           ;main.c: 116: if(holdOutput==0)
  6631  061F  0021               	movlb	1	; select bank1
  6632  0620  082D               	movf	main@holdOutput^(0+128),w
  6633  0621  1D03               	btfss	3,2
  6634  0622  2EBD               	goto	l3116
  6635                           
  6636                           ;main.c: 117: {
  6637                           ;main.c: 118: output = PID_Calculate(setpoint[0],analogs[1]);
  6638  0623  0862               	movf	(_setpoint+1)^(0+128),w	;volatile
  6639  0624  00F7               	movwf	PID_Calculate@setpoint+1
  6640  0625  0861               	movf	_setpoint^(0+128),w	;volatile
  6641  0626  00F6               	movwf	PID_Calculate@setpoint
  6642  0627  083E               	movf	((main@analogs+1)^(0+128)+2),w
  6643  0628  00F9               	movwf	PID_Calculate@temp+1
  6644  0629  083D               	movf	(main@analogs^(0+128)+2),w
  6645  062A  00F8               	movwf	PID_Calculate@temp
  6646  062B  318F  2725  3185   	fcall	_PID_Calculate
  6647  062E  0877               	movf	?_PID_Calculate+1,w
  6648  062F  0021               	movlb	1	; select bank1
  6649  0630  00AC               	movwf	(main@output+1)^(0+128)
  6650  0631  0876               	movf	?_PID_Calculate,w
  6651  0632  00AB               	movwf	main@output^(0+128)
  6652                           
  6653                           ;main.c: 119: outputTotal = outputTotal - outputSamples[outputIndex];
  6654  0633  0835               	movf	main@outputTotal^(0+128),w
  6655  0634  00A0               	movwf	??_main^(0+128)
  6656  0635  0836               	movf	(main@outputTotal+1)^(0+128),w
  6657  0636  00A1               	movwf	(??_main^(0+128)+1)
  6658  0637  0837               	movf	(main@outputTotal+2)^(0+128),w
  6659  0638  00A2               	movwf	(??_main^(0+128)+2)
  6660  0639  0838               	movf	(main@outputTotal+3)^(0+128),w
  6661  063A  00A3               	movwf	(??_main^(0+128)+3)
  6662  063B  353F               	lslf	main@outputIndex^(0+128),w
  6663  063C  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6664  063D  0086               	movwf	6
  6665  063E  3001               	movlw	1	; select bank2/3
  6666  063F  0087               	movwf	7
  6667  0640  3F40               	moviw [0]fsr1
  6668  0641  00A4               	movwf	(??_main+4)^(0+128)
  6669  0642  3F41               	moviw [1]fsr1
  6670  0643  00A5               	movwf	((??_main+4)^(0+128)+1)
  6671  0644  0824               	movf	(??_main+4)^(0+128),w
  6672  0645  00A6               	movwf	(??_main+6)^(0+128)
  6673  0646  0825               	movf	(??_main+5)^(0+128),w
  6674  0647  00A7               	movwf	((??_main+6)^(0+128)+1)
  6675  0648  3000               	movlw	0
  6676  0649  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6677  064A  30FF               	movlw	255
  6678  064B  00A8               	movwf	((??_main+6)^(0+128)+2)
  6679  064C  00A9               	movwf	((??_main+6)^(0+128)+3)
  6680  064D  09A6               	comf	(??_main+6)^(0+128),f
  6681  064E  09A7               	comf	((??_main+6)^(0+128)+1),f
  6682  064F  09A8               	comf	((??_main+6)^(0+128)+2),f
  6683  0650  09A9               	comf	((??_main+6)^(0+128)+3),f
  6684  0651  0AA6               	incf	(??_main+6)^(0+128),f
  6685  0652  1903               	skipnz
  6686  0653  0AA7               	incf	((??_main+6)^(0+128)+1),f
  6687  0654  1903               	skipnz
  6688  0655  0AA8               	incf	((??_main+6)^(0+128)+2),f
  6689  0656  1903               	skipnz
  6690  0657  0AA9               	incf	((??_main+6)^(0+128)+3),f
  6691  0658  0826               	movf	(??_main+6)^(0+128),w
  6692  0659  07A0               	addwf	??_main^(0+128),f
  6693  065A  0827               	movf	(??_main+7)^(0+128),w
  6694  065B  3DA1               	addwfc	(??_main^(0+128)+1),f
  6695  065C  0828               	movf	(??_main+8)^(0+128),w
  6696  065D  3DA2               	addwfc	(??_main^(0+128)+2),f
  6697  065E  0829               	movf	(??_main+9)^(0+128),w
  6698  065F  3DA3               	addwfc	(??_main^(0+128)+3),f
  6699  0660  0823               	movf	(??_main+3)^(0+128),w
  6700  0661  00B8               	movwf	(main@outputTotal+3)^(0+128)
  6701  0662  0822               	movf	(??_main+2)^(0+128),w
  6702  0663  00B7               	movwf	(main@outputTotal+2)^(0+128)
  6703  0664  0821               	movf	(??_main+1)^(0+128),w
  6704  0665  00B6               	movwf	(main@outputTotal+1)^(0+128)
  6705  0666  0820               	movf	??_main^(0+128),w
  6706  0667  00B5               	movwf	main@outputTotal^(0+128)
  6707                           
  6708                           ;main.c: 120: outputSamples[outputIndex] = output;
  6709  0668  353F               	lslf	main@outputIndex^(0+128),w
  6710  0669  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6711  066A  0086               	movwf	6
  6712  066B  3001               	movlw	1	; select bank2/3
  6713  066C  0087               	movwf	7
  6714  066D  082B               	movf	main@output^(0+128),w
  6715  066E  3FC0               	movwi [0]fsr1
  6716  066F  082C               	movf	(main@output+1)^(0+128),w
  6717  0670  3FC1               	movwi [1]fsr1
  6718                           
  6719                           ;main.c: 121: outputTotal = outputTotal + outputSamples[outputIndex];
  6720  0671  0835               	movf	main@outputTotal^(0+128),w
  6721  0672  00A0               	movwf	??_main^(0+128)
  6722  0673  0836               	movf	(main@outputTotal+1)^(0+128),w
  6723  0674  00A1               	movwf	(??_main^(0+128)+1)
  6724  0675  0837               	movf	(main@outputTotal+2)^(0+128),w
  6725  0676  00A2               	movwf	(??_main^(0+128)+2)
  6726  0677  0838               	movf	(main@outputTotal+3)^(0+128),w
  6727  0678  00A3               	movwf	(??_main^(0+128)+3)
  6728  0679  353F               	lslf	main@outputIndex^(0+128),w
  6729  067A  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6730  067B  0086               	movwf	6
  6731  067C  3001               	movlw	1	; select bank2/3
  6732  067D  0087               	movwf	7
  6733  067E  3F40               	moviw [0]fsr1
  6734  067F  00A4               	movwf	(??_main+4)^(0+128)
  6735  0680  3F41               	moviw [1]fsr1
  6736  0681  00A5               	movwf	((??_main+4)^(0+128)+1)
  6737  0682  0824               	movf	(??_main+4)^(0+128),w
  6738  0683  00A6               	movwf	(??_main+6)^(0+128)
  6739  0684  0825               	movf	(??_main+5)^(0+128),w
  6740  0685  00A7               	movwf	((??_main+6)^(0+128)+1)
  6741  0686  3000               	movlw	0
  6742  0687  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6743  0688  30FF               	movlw	255
  6744  0689  00A8               	movwf	((??_main+6)^(0+128)+2)
  6745  068A  00A9               	movwf	((??_main+6)^(0+128)+3)
  6746  068B  0826               	movf	(??_main+6)^(0+128),w
  6747  068C  07A0               	addwf	??_main^(0+128),f
  6748  068D  0827               	movf	(??_main+7)^(0+128),w
  6749  068E  3DA1               	addwfc	(??_main^(0+128)+1),f
  6750  068F  0828               	movf	(??_main+8)^(0+128),w
  6751  0690  3DA2               	addwfc	(??_main^(0+128)+2),f
  6752  0691  0829               	movf	(??_main+9)^(0+128),w
  6753  0692  3DA3               	addwfc	(??_main^(0+128)+3),f
  6754  0693  0823               	movf	(??_main+3)^(0+128),w
  6755  0694  00B8               	movwf	(main@outputTotal+3)^(0+128)
  6756  0695  0822               	movf	(??_main+2)^(0+128),w
  6757  0696  00B7               	movwf	(main@outputTotal+2)^(0+128)
  6758  0697  0821               	movf	(??_main+1)^(0+128),w
  6759  0698  00B6               	movwf	(main@outputTotal+1)^(0+128)
  6760  0699  0820               	movf	??_main^(0+128),w
  6761  069A  00B5               	movwf	main@outputTotal^(0+128)
  6762                           
  6763                           ;main.c: 122: dutyCycle6 = outputTotal/40;
  6764  069B  3000               	movlw	0
  6765  069C  00F3               	movwf	___aldiv@divisor+3
  6766  069D  3000               	movlw	0
  6767  069E  00F2               	movwf	___aldiv@divisor+2
  6768  069F  3000               	movlw	0
  6769  06A0  00F1               	movwf	___aldiv@divisor+1
  6770  06A1  3028               	movlw	40
  6771  06A2  00F0               	movwf	___aldiv@divisor
  6772  06A3  0838               	movf	(main@outputTotal+3)^(0+128),w
  6773  06A4  00F7               	movwf	___aldiv@dividend+3
  6774  06A5  0837               	movf	(main@outputTotal+2)^(0+128),w
  6775  06A6  00F6               	movwf	___aldiv@dividend+2
  6776  06A7  0836               	movf	(main@outputTotal+1)^(0+128),w
  6777  06A8  00F5               	movwf	___aldiv@dividend+1
  6778  06A9  0835               	movf	main@outputTotal^(0+128),w
  6779  06AA  00F4               	movwf	___aldiv@dividend
  6780  06AB  318B  2347  3185   	fcall	___aldiv
  6781  06AE  0871               	movf	?___aldiv+1,w
  6782  06AF  0021               	movlb	1	; select bank1
  6783  06B0  00BA               	movwf	(main@dutyCycle6+1)^(0+128)
  6784  06B1  0870               	movf	?___aldiv,w
  6785  06B2  00B9               	movwf	main@dutyCycle6^(0+128)
  6786                           
  6787                           ;main.c: 124: outputIndex+=1;
  6788  06B3  3001               	movlw	1
  6789  06B4  00A0               	movwf	??_main^(0+128)
  6790  06B5  0820               	movf	??_main^(0+128),w
  6791  06B6  07BF               	addwf	main@outputIndex^(0+128),f
  6792                           
  6793                           ;main.c: 125: if(outputIndex >= 40)outputIndex = 0;
  6794  06B7  3028               	movlw	40
  6795  06B8  023F               	subwf	main@outputIndex^(0+128),w
  6796  06B9  1C03               	skipc
  6797  06BA  2EC1               	goto	l3120
  6798  06BB  01BF               	clrf	main@outputIndex^(0+128)
  6799                           
  6800                           ;main.c: 126: }
  6801  06BC  2EC1               	goto	l3120
  6802  06BD                     l3116:	
  6803                           
  6804                           ;main.c: 127: else
  6805                           ;main.c: 128: {
  6806                           ;main.c: 129: dutyCycle6=0;
  6807  06BD  01B9               	clrf	main@dutyCycle6^(0+128)
  6808  06BE  01BA               	clrf	(main@dutyCycle6+1)^(0+128)
  6809                           
  6810                           ;main.c: 130: holdOutput-=1;
  6811  06BF  3001               	movlw	1
  6812  06C0  02AD               	subwf	main@holdOutput^(0+128),f
  6813  06C1                     l3120:	
  6814                           
  6815                           ;main.c: 131: }
  6816                           ;main.c: 133: currentTemperature=analogs[1];
  6817  06C1  083E               	movf	((main@analogs+1)^(0+128)+2),w
  6818  06C2  00B4               	movwf	(main@currentTemperature+1)^(0+128)
  6819  06C3  083D               	movf	(main@analogs^(0+128)+2),w
  6820  06C4  00B3               	movwf	main@currentTemperature^(0+128)
  6821                           
  6822                           ;main.c: 135: if(lidOpenCount<10)
  6823  06C5  300A               	movlw	10
  6824  06C6  022E               	subwf	main@lidOpenCount^(0+128),w
  6825  06C7  1803               	skipnc
  6826  06C8  2ECE               	goto	l3126
  6827                           
  6828                           ;main.c: 136: {
  6829                           ;main.c: 137: lidOpenCount+=1;
  6830  06C9  3001               	movlw	1
  6831  06CA  00A0               	movwf	??_main^(0+128)
  6832  06CB  0820               	movf	??_main^(0+128),w
  6833  06CC  07AE               	addwf	main@lidOpenCount^(0+128),f
  6834                           
  6835                           ;main.c: 138: }
  6836  06CD  2ED3               	goto	l3130
  6837  06CE                     l3126:	
  6838                           
  6839                           ;main.c: 139: else
  6840                           ;main.c: 140: {
  6841                           ;main.c: 141: lastTemperature=currentTemperature;
  6842  06CE  0834               	movf	(main@currentTemperature+1)^(0+128),w
  6843  06CF  00B0               	movwf	(main@lastTemperature+1)^(0+128)
  6844  06D0  0833               	movf	main@currentTemperature^(0+128),w
  6845  06D1  00AF               	movwf	main@lastTemperature^(0+128)
  6846                           
  6847                           ;main.c: 142: lidOpenCount=0;
  6848  06D2  01AE               	clrf	main@lidOpenCount^(0+128)
  6849  06D3                     l3130:	
  6850                           
  6851                           ;main.c: 143: }
  6852                           ;main.c: 145: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6853  06D3  0933               	comf	main@currentTemperature^(0+128),w
  6854  06D4  00A0               	movwf	??_main^(0+128)
  6855  06D5  0934               	comf	(main@currentTemperature+1)^(0+128),w
  6856  06D6  00A1               	movwf	(??_main^(0+128)+1)
  6857  06D7  0AA0               	incf	??_main^(0+128),f
  6858  06D8  1903               	skipnz
  6859  06D9  0AA1               	incf	(??_main^(0+128)+1),f
  6860  06DA  082F               	movf	main@lastTemperature^(0+128),w
  6861  06DB  0720               	addwf	??_main^(0+128),w
  6862  06DC  00A2               	movwf	(??_main+2)^(0+128)
  6863  06DD  0830               	movf	(main@lastTemperature+1)^(0+128),w
  6864  06DE  3D21               	addwfc	(??_main+1)^(0+128),w
  6865  06DF  00A3               	movwf	(??_main+3)^(0+128)
  6866  06E0  0823               	movf	(??_main+3)^(0+128),w
  6867  06E1  3A80               	xorlw	128
  6868  06E2  00A4               	movwf	(??_main+4)^(0+128)
  6869  06E3  3080               	movlw	128
  6870  06E4  0224               	subwf	(??_main+4)^(0+128),w
  6871  06E5  1D03               	skipz
  6872  06E6  2EE9               	goto	u3555
  6873  06E7  3065               	movlw	101
  6874  06E8  0222               	subwf	(??_main+2)^(0+128),w
  6875  06E9                     u3555:	
  6876  06E9  1803               	skipnc
  6877  06EA  2F04               	goto	l3134
  6878  06EB  0021               	movlb	1	; select bank1
  6879  06EC  0933               	comf	main@currentTemperature^(0+128),w
  6880  06ED  00A0               	movwf	??_main^(0+128)
  6881  06EE  0934               	comf	(main@currentTemperature+1)^(0+128),w
  6882  06EF  00A1               	movwf	(??_main^(0+128)+1)
  6883  06F0  0AA0               	incf	??_main^(0+128),f
  6884  06F1  1903               	skipnz
  6885  06F2  0AA1               	incf	(??_main^(0+128)+1),f
  6886  06F3  082F               	movf	main@lastTemperature^(0+128),w
  6887  06F4  0720               	addwf	??_main^(0+128),w
  6888  06F5  00A2               	movwf	(??_main+2)^(0+128)
  6889  06F6  0830               	movf	(main@lastTemperature+1)^(0+128),w
  6890  06F7  3D21               	addwfc	(??_main+1)^(0+128),w
  6891  06F8  00A3               	movwf	(??_main+3)^(0+128)
  6892  06F9  0823               	movf	(??_main+3)^(0+128),w
  6893  06FA  3A80               	xorlw	128
  6894  06FB  00A4               	movwf	(??_main+4)^(0+128)
  6895  06FC  307F               	movlw	127
  6896  06FD  0224               	subwf	(??_main+4)^(0+128),w
  6897  06FE  1D03               	skipz
  6898  06FF  2F02               	goto	u3565
  6899  0700  309C               	movlw	156
  6900  0701  0222               	subwf	(??_main+2)^(0+128),w
  6901  0702                     u3565:	
  6902  0702  1803               	skipnc
  6903  0703  2F0B               	goto	l3138
  6904  0704                     l3134:	
  6905                           
  6906                           ;main.c: 146: {
  6907                           ;main.c: 147: dutyCycle6=0;
  6908  0704  0021               	movlb	1	; select bank1
  6909  0705  01B9               	clrf	main@dutyCycle6^(0+128)
  6910  0706  01BA               	clrf	(main@dutyCycle6+1)^(0+128)
  6911                           
  6912                           ;main.c: 148: holdOutput=60;
  6913  0707  303C               	movlw	60
  6914  0708  00A0               	movwf	??_main^(0+128)
  6915  0709  0820               	movf	??_main^(0+128),w
  6916  070A  00AD               	movwf	main@holdOutput^(0+128)
  6917  070B                     l3138:	
  6918                           
  6919                           ;main.c: 149: }
  6920                           ;main.c: 151: if(dutyCycle6<50)dutyCycle6=0;
  6921  070B  3000               	movlw	0
  6922  070C  0021               	movlb	1	; select bank1
  6923  070D  023A               	subwf	(main@dutyCycle6+1)^(0+128),w
  6924  070E  3032               	movlw	50
  6925  070F  1903               	skipnz
  6926  0710  0239               	subwf	main@dutyCycle6^(0+128),w
  6927  0711  1803               	skipnc
  6928  0712  2F15               	goto	l350
  6929  0713  01B9               	clrf	main@dutyCycle6^(0+128)
  6930  0714  01BA               	clrf	(main@dutyCycle6+1)^(0+128)
  6931  0715                     l350:	
  6932                           
  6933                           ;main.c: 153: loop=0;
  6934  0715  01ED               	clrf	_loop^(0+128)
  6935  0716                     l3142:	
  6936                           
  6937                           ;main.c: 154: }
  6938                           ;main.c: 156: pidPeriodCounter+=1;
  6939  0716  3001               	movlw	1
  6940  0717  07B1               	addwf	main@pidPeriodCounter^(0+128),f
  6941  0718  3000               	movlw	0
  6942  0719  3DB2               	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  6943                           
  6944                           ;main.c: 158: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  6945  071A  086C               	movf	(_pidMaxOutput+1)^(0+128),w
  6946  071B  3A80               	xorlw	128
  6947  071C  00A0               	movwf	??_main^(0+128)
  6948  071D  0832               	movf	(main@pidPeriodCounter+1)^(0+128),w
  6949  071E  3A80               	xorlw	128
  6950  071F  0220               	subwf	??_main^(0+128),w
  6951  0720  1D03               	skipz
  6952  0721  2F24               	goto	u3585
  6953  0722  0831               	movf	main@pidPeriodCounter^(0+128),w
  6954  0723  026B               	subwf	_pidMaxOutput^(0+128),w
  6955  0724                     u3585:	
  6956  0724  1803               	skipnc
  6957  0725  2F29               	goto	l3148
  6958  0726  0021               	movlb	1	; select bank1
  6959  0727  01B1               	clrf	main@pidPeriodCounter^(0+128)
  6960  0728  01B2               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6961  0729                     l3148:	
  6962                           
  6963                           ;main.c: 160: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  6964  0729  0021               	movlb	1	; select bank1
  6965  072A  083A               	movf	(main@dutyCycle6+1)^(0+128),w
  6966  072B  0232               	subwf	(main@pidPeriodCounter+1)^(0+128),w
  6967  072C  1D03               	skipz
  6968  072D  2F30               	goto	u3595
  6969  072E  0839               	movf	main@dutyCycle6^(0+128),w
  6970  072F  0231               	subwf	main@pidPeriodCounter^(0+128),w
  6971  0730                     u3595:	
  6972  0730  1803               	skipnc
  6973  0731  2F35               	goto	l352
  6974  0732  0020               	movlb	0	; select bank0
  6975  0733  1518               	bsf	24,2	;volatile
  6976  0734  2F37               	goto	l3152
  6977  0735                     l352:	
  6978                           
  6979                           ;main.c: 161: else LATC2=0;
  6980  0735  0020               	movlb	0	; select bank0
  6981  0736  1118               	bcf	24,2	;volatile
  6982  0737                     l3152:	
  6983                           
  6984                           ;main.c: 163: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  6985  0737  0021               	movlb	1	; select bank1
  6986  0738  01C0               	clrf	main@j^(0+128)
  6987  0739  3002               	movlw	2
  6988  073A  0240               	subwf	main@j^(0+128),w
  6989  073B  1803               	btfsc	3,0
  6990  073C  2F5D               	goto	l3164
  6991  073D                     l3158:	
  6992  073D  0840               	movf	main@j^(0+128),w
  6993  073E  00A0               	movwf	??_main^(0+128)
  6994  073F  01A1               	clrf	(??_main^(0+128)+1)
  6995  0740  0820               	movf	??_main^(0+128),w
  6996  0741  0020               	movlb	0	; select bank0
  6997  0742  00A6               	movwf	readAnalog@channel
  6998  0743  0021               	movlb	1	; select bank1
  6999  0744  0821               	movf	(??_main+1)^(0+128),w
  7000  0745  0020               	movlb	0	; select bank0
  7001  0746  00A7               	movwf	readAnalog@channel+1
  7002  0747  3182  22A7  3185   	fcall	_readAnalog
  7003  074A  0021               	movlb	1	; select bank1
  7004  074B  3540               	lslf	main@j^(0+128),w
  7005  074C  3EBB               	addlw	(low (main@analogs| 0))& (0+255)
  7006  074D  0086               	movwf	6
  7007  074E  0187               	clrf	7
  7008  074F  0020               	movlb	0	; select bank0
  7009  0750  0826               	movf	?_readAnalog,w
  7010  0751  3FC0               	movwi [0]fsr1
  7011  0752  0827               	movf	?_readAnalog+1,w
  7012  0753  3FC1               	movwi [1]fsr1
  7013  0754  3001               	movlw	1
  7014  0755  0021               	movlb	1	; select bank1
  7015  0756  00A0               	movwf	??_main^(0+128)
  7016  0757  0820               	movf	??_main^(0+128),w
  7017  0758  07C0               	addwf	main@j^(0+128),f
  7018  0759  3002               	movlw	2
  7019  075A  0240               	subwf	main@j^(0+128),w
  7020  075B  1C03               	skipc
  7021  075C  2F3D               	goto	l3158
  7022  075D                     l3164:	
  7023                           
  7024                           ;main.c: 165: analogs[0]=tempCalc(analogs[0]);
  7025  075D  083C               	movf	(main@analogs+1)^(0+128),w
  7026  075E  0020               	movlb	0	; select bank0
  7027  075F  00DE               	movwf	tempCalc@analogValue+1
  7028  0760  0021               	movlb	1	; select bank1
  7029  0761  083B               	movf	main@analogs^(0+128),w
  7030  0762  0020               	movlb	0	; select bank0
  7031  0763  00DD               	movwf	tempCalc@analogValue
  7032  0764  3181  218A  3185   	fcall	_tempCalc
  7033  0767  0020               	movlb	0	; select bank0
  7034  0768  085E               	movf	?_tempCalc+1,w
  7035  0769  0021               	movlb	1	; select bank1
  7036  076A  00BC               	movwf	(main@analogs+1)^(0+128)
  7037  076B  0020               	movlb	0	; select bank0
  7038  076C  085D               	movf	?_tempCalc,w
  7039  076D  0021               	movlb	1	; select bank1
  7040  076E  00BB               	movwf	main@analogs^(0+128)
  7041                           
  7042                           ;main.c: 167: analogs[1]=tempCalc(analogs[1]);
  7043  076F  083E               	movf	((main@analogs+1)^(0+128)+2),w
  7044  0770  0020               	movlb	0	; select bank0
  7045  0771  00DE               	movwf	tempCalc@analogValue+1
  7046  0772  0021               	movlb	1	; select bank1
  7047  0773  083D               	movf	(main@analogs^(0+128)+2),w
  7048  0774  0020               	movlb	0	; select bank0
  7049  0775  00DD               	movwf	tempCalc@analogValue
  7050  0776  3181  218A  3185   	fcall	_tempCalc
  7051  0779  0020               	movlb	0	; select bank0
  7052  077A  085E               	movf	?_tempCalc+1,w
  7053  077B  0021               	movlb	1	; select bank1
  7054  077C  00BE               	movwf	((main@analogs+1)^(0+128)+2)
  7055  077D  0020               	movlb	0	; select bank0
  7056  077E  085D               	movf	?_tempCalc,w
  7057  077F  0021               	movlb	1	; select bank1
  7058  0780  00BD               	movwf	(main@analogs^(0+128)+2)
  7059                           
  7060                           ;main.c: 170: if(RB2==1)
  7061  0781  0020               	movlb	0	; select bank0
  7062  0782  1D0D               	btfss	13,2	;volatile
  7063  0783  2FB0               	goto	l3178
  7064                           
  7065                           ;main.c: 171: {
  7066                           ;main.c: 172: LCD_Clear();
  7067  0784  3197  2718  3185   	fcall	_LCD_Clear
  7068                           
  7069                           ;main.c: 173: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7070  0787  01F4               	clrf	LCD_Set_Cursor@y
  7071  0788  3000               	movlw	0
  7072  0789  3189  216C  3185   	fcall	_LCD_Set_Cursor
  7073  078C  303D               	movlw	low (STR_3| (0+32768))
  7074  078D  00F5               	movwf	LCD_Write_String@a
  7075  078E  3090               	movlw	high (STR_3| (0+32768))
  7076  078F  00F6               	movwf	LCD_Write_String@a+1
  7077  0790  3197  27CB  3185   	fcall	_LCD_Write_String
  7078                           
  7079                           ;main.c: 174: { LCD_Set_Cursor(1,0); LCD_Write_String("Enter Key to Set");};
  7080  0793  01F4               	clrf	LCD_Set_Cursor@y
  7081  0794  3001               	movlw	1
  7082  0795  3189  216C  3185   	fcall	_LCD_Set_Cursor
  7083  0798  304E               	movlw	low (STR_4| (0+32768))
  7084  0799  00F5               	movwf	LCD_Write_String@a
  7085  079A  3090               	movlw	high (STR_4| (0+32768))
  7086  079B  00F6               	movwf	LCD_Write_String@a+1
  7087  079C  3197  27CB  3185   	fcall	_LCD_Write_String
  7088                           
  7089                           ;main.c: 175: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7090  079F  303D               	movlw	61
  7091  07A0  0021               	movlb	1	; select bank1
  7092  07A1  00A2               	movwf	(??_main^(0+128)+2)
  7093  07A2  30E1               	movlw	225
  7094  07A3  00A1               	movwf	(??_main^(0+128)+1)
  7095  07A4  307A               	movlw	122
  7096  07A5  00A0               	movwf	??_main^(0+128)
  7097  07A6                     u3647:	
  7098  07A6  0BA0               	decfsz	??_main^(0+128),f
  7099  07A7  2FA6               	goto	u3647
  7100  07A8  0BA1               	decfsz	(??_main^(0+128)+1),f
  7101  07A9  2FA6               	goto	u3647
  7102  07AA  0BA2               	decfsz	(??_main^(0+128)+2),f
  7103  07AB  2FA6               	goto	u3647
  7104  07AC  3200               	nop2
  7105                           
  7106                           ;main.c: 176: menuChoice();
  7107  07AD  3183  23E9  3185   	fcall	_menuChoice
  7108  07B0                     l3178:	
  7109                           
  7110                           ;main.c: 177: }
  7111                           ;main.c: 413: loop+=1;
  7112  07B0  3001               	movlw	1
  7113  07B1  0021               	movlb	1	; select bank1
  7114  07B2  00A0               	movwf	??_main^(0+128)
  7115  07B3  0820               	movf	??_main^(0+128),w
  7116  07B4  07ED               	addwf	_loop^(0+128),f
  7117  07B5  2DC6               	goto	l3074
  7118  07B6                     __end_of_main:	
  7119                           
  7120                           	psect	text1
  7121  018A                     __ptext1:	
  7122 ;; *************** function _tempCalc *****************
  7123 ;; Defined at:
  7124 ;;		line 4 in file "tempCalc.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;  analogValue     2   61[BANK0 ] int 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  steinhart       3   69[BANK0 ] float 
  7129 ;;  R               3   63[BANK0 ] float 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  2   61[BANK0 ] int 
  7132 ;; Registers used:
  7133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7139 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7140 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7142 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;Total ram usage:       11 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:    4
  7146 ;; This function calls:
  7147 ;;		___awtoft
  7148 ;;		___ftadd
  7149 ;;		___ftdiv
  7150 ;;		___ftmul
  7151 ;;		___ftsub
  7152 ;;		___fttol
  7153 ;;		_log
  7154 ;; This function is called by:
  7155 ;;		_main
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           
  7160                           ;psect for function _tempCalc
  7161  018A                     _tempCalc:	
  7162                           
  7163                           ;tempCalc.c: 6: float R, steinhart;
  7164                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  7165                           
  7166                           ;incstack = 0
  7167                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7168  018A  3000               	movlw	0
  7169  018B  0020               	movlb	0	; select bank0
  7170  018C  00C0               	movwf	___ftadd@f1
  7171  018D  3080               	movlw	128
  7172  018E  00C1               	movwf	___ftadd@f1+1
  7173  018F  30BF               	movlw	191
  7174  0190  00C2               	movwf	___ftadd@f1+2
  7175  0191  085E               	movf	tempCalc@analogValue+1,w
  7176  0192  00F9               	movwf	___awtoft@c+1
  7177  0193  085D               	movf	tempCalc@analogValue,w
  7178  0194  00F8               	movwf	___awtoft@c
  7179  0195  3188  2033  3181   	fcall	___awtoft
  7180  0198  0878               	movf	?___awtoft,w
  7181  0199  0020               	movlb	0	; select bank0
  7182  019A  00B0               	movwf	___ftdiv@f2
  7183  019B  0879               	movf	?___awtoft+1,w
  7184  019C  00B1               	movwf	___ftdiv@f2+1
  7185  019D  087A               	movf	?___awtoft+2,w
  7186  019E  00B2               	movwf	___ftdiv@f2+2
  7187  019F  30C0               	movlw	192
  7188  01A0  00B3               	movwf	___ftdiv@f1
  7189  01A1  307F               	movlw	127
  7190  01A2  00B4               	movwf	___ftdiv@f1+1
  7191  01A3  3044               	movlw	68
  7192  01A4  00B5               	movwf	___ftdiv@f1+2
  7193  01A5  318C  244F  3181   	fcall	___ftdiv
  7194  01A8  0020               	movlb	0	; select bank0
  7195  01A9  0830               	movf	?___ftdiv,w
  7196  01AA  00C3               	movwf	___ftadd@f2
  7197  01AB  0831               	movf	?___ftdiv+1,w
  7198  01AC  00C4               	movwf	___ftadd@f2+1
  7199  01AD  0832               	movf	?___ftdiv+2,w
  7200  01AE  00C5               	movwf	___ftadd@f2+2
  7201  01AF  3180  2094  3181   	fcall	___ftadd
  7202  01B2  0020               	movlb	0	; select bank0
  7203  01B3  0840               	movf	?___ftadd,w
  7204  01B4  00E2               	movwf	_tempCalc$1018
  7205  01B5  0841               	movf	?___ftadd+1,w
  7206  01B6  00E3               	movwf	_tempCalc$1018+1
  7207  01B7  0842               	movf	?___ftadd+2,w
  7208  01B8  00E4               	movwf	_tempCalc$1018+2
  7209                           
  7210                           ;tempCalc.c: 6: float R, steinhart;
  7211                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  7212  01B9  0862               	movf	_tempCalc$1018,w
  7213  01BA  00B0               	movwf	___ftdiv@f2
  7214  01BB  0863               	movf	_tempCalc$1018+1,w
  7215  01BC  00B1               	movwf	___ftdiv@f2+1
  7216  01BD  0864               	movf	_tempCalc$1018+2,w
  7217  01BE  00B2               	movwf	___ftdiv@f2+2
  7218  01BF  3060               	movlw	96
  7219  01C0  00B3               	movwf	___ftdiv@f1
  7220  01C1  301A               	movlw	26
  7221  01C2  00B4               	movwf	___ftdiv@f1+1
  7222  01C3  3046               	movlw	70
  7223  01C4  00B5               	movwf	___ftdiv@f1+2
  7224  01C5  318C  244F  3181   	fcall	___ftdiv
  7225  01C8  0020               	movlb	0	; select bank0
  7226  01C9  0830               	movf	?___ftdiv,w
  7227  01CA  00DF               	movwf	tempCalc@R
  7228  01CB  0831               	movf	?___ftdiv+1,w
  7229  01CC  00E0               	movwf	tempCalc@R+1
  7230  01CD  0832               	movf	?___ftdiv+2,w
  7231  01CE  00E1               	movwf	tempCalc@R+2
  7232                           
  7233                           ;tempCalc.c: 10: steinhart = R /10000;
  7234  01CF  3040               	movlw	64
  7235  01D0  00B0               	movwf	___ftdiv@f2
  7236  01D1  301C               	movlw	28
  7237  01D2  00B1               	movwf	___ftdiv@f2+1
  7238  01D3  3046               	movlw	70
  7239  01D4  00B2               	movwf	___ftdiv@f2+2
  7240  01D5  085F               	movf	tempCalc@R,w
  7241  01D6  00B3               	movwf	___ftdiv@f1
  7242  01D7  0860               	movf	tempCalc@R+1,w
  7243  01D8  00B4               	movwf	___ftdiv@f1+1
  7244  01D9  0861               	movf	tempCalc@R+2,w
  7245  01DA  00B5               	movwf	___ftdiv@f1+2
  7246  01DB  318C  244F  3181   	fcall	___ftdiv
  7247  01DE  0020               	movlb	0	; select bank0
  7248  01DF  0830               	movf	?___ftdiv,w
  7249  01E0  00E5               	movwf	tempCalc@steinhart
  7250  01E1  0831               	movf	?___ftdiv+1,w
  7251  01E2  00E6               	movwf	tempCalc@steinhart+1
  7252  01E3  0832               	movf	?___ftdiv+2,w
  7253  01E4  00E7               	movwf	tempCalc@steinhart+2
  7254                           
  7255                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7256  01E5  0865               	movf	tempCalc@steinhart,w
  7257  01E6  00D7               	movwf	log@x
  7258  01E7  0866               	movf	tempCalc@steinhart+1,w
  7259  01E8  00D8               	movwf	log@x+1
  7260  01E9  0867               	movf	tempCalc@steinhart+2,w
  7261  01EA  00D9               	movwf	log@x+2
  7262  01EB  318C  24F8  3181   	fcall	_log
  7263  01EE  0020               	movlb	0	; select bank0
  7264  01EF  0857               	movf	?_log,w
  7265  01F0  00E5               	movwf	tempCalc@steinhart
  7266  01F1  0858               	movf	?_log+1,w
  7267  01F2  00E6               	movwf	tempCalc@steinhart+1
  7268  01F3  0859               	movf	?_log+2,w
  7269  01F4  00E7               	movwf	tempCalc@steinhart+2
  7270                           
  7271                           ;tempCalc.c: 12: steinhart /= 3930;
  7272  01F5  30A0               	movlw	160
  7273  01F6  00B0               	movwf	___ftdiv@f2
  7274  01F7  3075               	movlw	117
  7275  01F8  00B1               	movwf	___ftdiv@f2+1
  7276  01F9  3045               	movlw	69
  7277  01FA  00B2               	movwf	___ftdiv@f2+2
  7278  01FB  0865               	movf	tempCalc@steinhart,w
  7279  01FC  00B3               	movwf	___ftdiv@f1
  7280  01FD  0866               	movf	tempCalc@steinhart+1,w
  7281  01FE  00B4               	movwf	___ftdiv@f1+1
  7282  01FF  0867               	movf	tempCalc@steinhart+2,w
  7283  0200  00B5               	movwf	___ftdiv@f1+2
  7284  0201  318C  244F  3181   	fcall	___ftdiv
  7285  0204  0020               	movlb	0	; select bank0
  7286  0205  0830               	movf	?___ftdiv,w
  7287  0206  00E5               	movwf	tempCalc@steinhart
  7288  0207  0831               	movf	?___ftdiv+1,w
  7289  0208  00E6               	movwf	tempCalc@steinhart+1
  7290  0209  0832               	movf	?___ftdiv+2,w
  7291  020A  00E7               	movwf	tempCalc@steinhart+2
  7292                           
  7293                           ;tempCalc.c: 14: steinhart += 1.0 / (25 + 273.15);
  7294  020B  30CF               	movlw	207
  7295  020C  00C0               	movwf	___ftadd@f1
  7296  020D  305B               	movlw	91
  7297  020E  00C1               	movwf	___ftadd@f1+1
  7298  020F  303B               	movlw	59
  7299  0210  00C2               	movwf	___ftadd@f1+2
  7300  0211  0865               	movf	tempCalc@steinhart,w
  7301  0212  00C3               	movwf	___ftadd@f2
  7302  0213  0866               	movf	tempCalc@steinhart+1,w
  7303  0214  00C4               	movwf	___ftadd@f2+1
  7304  0215  0867               	movf	tempCalc@steinhart+2,w
  7305  0216  00C5               	movwf	___ftadd@f2+2
  7306  0217  3180  2094  3181   	fcall	___ftadd
  7307  021A  0020               	movlb	0	; select bank0
  7308  021B  0840               	movf	?___ftadd,w
  7309  021C  00E5               	movwf	tempCalc@steinhart
  7310  021D  0841               	movf	?___ftadd+1,w
  7311  021E  00E6               	movwf	tempCalc@steinhart+1
  7312  021F  0842               	movf	?___ftadd+2,w
  7313  0220  00E7               	movwf	tempCalc@steinhart+2
  7314                           
  7315                           ;tempCalc.c: 15: steinhart = 1.0 / steinhart;
  7316  0221  0865               	movf	tempCalc@steinhart,w
  7317  0222  00B0               	movwf	___ftdiv@f2
  7318  0223  0866               	movf	tempCalc@steinhart+1,w
  7319  0224  00B1               	movwf	___ftdiv@f2+1
  7320  0225  0867               	movf	tempCalc@steinhart+2,w
  7321  0226  00B2               	movwf	___ftdiv@f2+2
  7322  0227  3000               	movlw	0
  7323  0228  00B3               	movwf	___ftdiv@f1
  7324  0229  3080               	movlw	128
  7325  022A  00B4               	movwf	___ftdiv@f1+1
  7326  022B  303F               	movlw	63
  7327  022C  00B5               	movwf	___ftdiv@f1+2
  7328  022D  318C  244F  3181   	fcall	___ftdiv
  7329  0230  0020               	movlb	0	; select bank0
  7330  0231  0830               	movf	?___ftdiv,w
  7331  0232  00E5               	movwf	tempCalc@steinhart
  7332  0233  0831               	movf	?___ftdiv+1,w
  7333  0234  00E6               	movwf	tempCalc@steinhart+1
  7334  0235  0832               	movf	?___ftdiv+2,w
  7335  0236  00E7               	movwf	tempCalc@steinhart+2
  7336                           
  7337                           ;tempCalc.c: 16: steinhart -= 273.15;
  7338  0237  3093               	movlw	147
  7339  0238  00CD               	movwf	___ftsub@f2
  7340  0239  3088               	movlw	136
  7341  023A  00CE               	movwf	___ftsub@f2+1
  7342  023B  3043               	movlw	67
  7343  023C  00CF               	movwf	___ftsub@f2+2
  7344  023D  0865               	movf	tempCalc@steinhart,w
  7345  023E  00D0               	movwf	___ftsub@f1
  7346  023F  0866               	movf	tempCalc@steinhart+1,w
  7347  0240  00D1               	movwf	___ftsub@f1+1
  7348  0241  0867               	movf	tempCalc@steinhart+2,w
  7349  0242  00D2               	movwf	___ftsub@f1+2
  7350  0243  3188  2015  3181   	fcall	___ftsub
  7351  0246  0020               	movlb	0	; select bank0
  7352  0247  084D               	movf	?___ftsub,w
  7353  0248  00E5               	movwf	tempCalc@steinhart
  7354  0249  084E               	movf	?___ftsub+1,w
  7355  024A  00E6               	movwf	tempCalc@steinhart+1
  7356  024B  084F               	movf	?___ftsub+2,w
  7357  024C  00E7               	movwf	tempCalc@steinhart+2
  7358                           
  7359                           ;tempCalc.c: 18: steinhart*=10;
  7360  024D  3000               	movlw	0
  7361  024E  00A0               	movwf	___ftmul@f1
  7362  024F  3020               	movlw	32
  7363  0250  00A1               	movwf	___ftmul@f1+1
  7364  0251  3041               	movlw	65
  7365  0252  00A2               	movwf	___ftmul@f1+2
  7366  0253  0865               	movf	tempCalc@steinhart,w
  7367  0254  00A3               	movwf	___ftmul@f2
  7368  0255  0866               	movf	tempCalc@steinhart+1,w
  7369  0256  00A4               	movwf	___ftmul@f2+1
  7370  0257  0867               	movf	tempCalc@steinhart+2,w
  7371  0258  00A5               	movwf	___ftmul@f2+2
  7372  0259  318D  25A8  3181   	fcall	___ftmul
  7373  025C  0020               	movlb	0	; select bank0
  7374  025D  0820               	movf	?___ftmul,w
  7375  025E  00E5               	movwf	tempCalc@steinhart
  7376  025F  0821               	movf	?___ftmul+1,w
  7377  0260  00E6               	movwf	tempCalc@steinhart+1
  7378  0261  0822               	movf	?___ftmul+2,w
  7379  0262  00E7               	movwf	tempCalc@steinhart+2
  7380                           
  7381                           ;tempCalc.c: 20: steinhart = steinhart*9/5+320;
  7382  0263  3000               	movlw	0
  7383  0264  00C0               	movwf	___ftadd@f1
  7384  0265  30A0               	movlw	160
  7385  0266  00C1               	movwf	___ftadd@f1+1
  7386  0267  3043               	movlw	67
  7387  0268  00C2               	movwf	___ftadd@f1+2
  7388  0269  3000               	movlw	0
  7389  026A  00B0               	movwf	___ftdiv@f2
  7390  026B  30A0               	movlw	160
  7391  026C  00B1               	movwf	___ftdiv@f2+1
  7392  026D  3040               	movlw	64
  7393  026E  00B2               	movwf	___ftdiv@f2+2
  7394  026F  3000               	movlw	0
  7395  0270  00A0               	movwf	___ftmul@f1
  7396  0271  3010               	movlw	16
  7397  0272  00A1               	movwf	___ftmul@f1+1
  7398  0273  3041               	movlw	65
  7399  0274  00A2               	movwf	___ftmul@f1+2
  7400  0275  0865               	movf	tempCalc@steinhart,w
  7401  0276  00A3               	movwf	___ftmul@f2
  7402  0277  0866               	movf	tempCalc@steinhart+1,w
  7403  0278  00A4               	movwf	___ftmul@f2+1
  7404  0279  0867               	movf	tempCalc@steinhart+2,w
  7405  027A  00A5               	movwf	___ftmul@f2+2
  7406  027B  318D  25A8  3181   	fcall	___ftmul
  7407  027E  0020               	movlb	0	; select bank0
  7408  027F  0820               	movf	?___ftmul,w
  7409  0280  00B3               	movwf	___ftdiv@f1
  7410  0281  0821               	movf	?___ftmul+1,w
  7411  0282  00B4               	movwf	___ftdiv@f1+1
  7412  0283  0822               	movf	?___ftmul+2,w
  7413  0284  00B5               	movwf	___ftdiv@f1+2
  7414  0285  318C  244F  3181   	fcall	___ftdiv
  7415  0288  0020               	movlb	0	; select bank0
  7416  0289  0830               	movf	?___ftdiv,w
  7417  028A  00C3               	movwf	___ftadd@f2
  7418  028B  0831               	movf	?___ftdiv+1,w
  7419  028C  00C4               	movwf	___ftadd@f2+1
  7420  028D  0832               	movf	?___ftdiv+2,w
  7421  028E  00C5               	movwf	___ftadd@f2+2
  7422  028F  3180  2094  3181   	fcall	___ftadd
  7423  0292  0020               	movlb	0	; select bank0
  7424  0293  0840               	movf	?___ftadd,w
  7425  0294  00E5               	movwf	tempCalc@steinhart
  7426  0295  0841               	movf	?___ftadd+1,w
  7427  0296  00E6               	movwf	tempCalc@steinhart+1
  7428  0297  0842               	movf	?___ftadd+2,w
  7429  0298  00E7               	movwf	tempCalc@steinhart+2
  7430                           
  7431                           ;tempCalc.c: 22: return (int)steinhart;
  7432  0299  0865               	movf	tempCalc@steinhart,w
  7433  029A  00F0               	movwf	___fttol@f1
  7434  029B  0866               	movf	tempCalc@steinhart+1,w
  7435  029C  00F1               	movwf	___fttol@f1+1
  7436  029D  0867               	movf	tempCalc@steinhart+2,w
  7437  029E  00F2               	movwf	___fttol@f1+2
  7438  029F  318B  23C9         	fcall	___fttol
  7439  02A1  0871               	movf	?___fttol+1,w
  7440  02A2  0020               	movlb	0	; select bank0
  7441  02A3  00DE               	movwf	?_tempCalc+1
  7442  02A4  0870               	movf	?___fttol,w
  7443  02A5  00DD               	movwf	?_tempCalc
  7444  02A6  0008               	return
  7445  02A7                     __end_of_tempCalc:	
  7446                           
  7447                           	psect	text2
  7448  0CF8                     __ptext2:	
  7449 ;; *************** function _log *****************
  7450 ;; Defined at:
  7451 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  x               3   55[BANK0 ] int 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;  exponent        2   59[BANK0 ] int 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  3   55[BANK0 ] int 
  7458 ;; Registers used:
  7459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7465 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7467 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7468 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;Total ram usage:        6 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; Hardware stack levels required when called:    3
  7472 ;; This function calls:
  7473 ;;		___awtoft
  7474 ;;		___ftadd
  7475 ;;		___ftge
  7476 ;;		___ftmul
  7477 ;;		_eval_poly
  7478 ;;		_frexp
  7479 ;; This function is called by:
  7480 ;;		_tempCalc
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           
  7485                           ;psect for function _log
  7486  0CF8                     _log:	
  7487                           
  7488                           ;incstack = 0
  7489                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7490  0CF8  0020               	movlb	0	; select bank0
  7491  0CF9  0857               	movf	log@x,w
  7492  0CFA  00F0               	movwf	___ftge@ff1
  7493  0CFB  0858               	movf	log@x+1,w
  7494  0CFC  00F1               	movwf	___ftge@ff1+1
  7495  0CFD  0859               	movf	log@x+2,w
  7496  0CFE  00F2               	movwf	___ftge@ff1+2
  7497  0CFF  3000               	movlw	0
  7498  0D00  00F3               	movwf	___ftge@ff2
  7499  0D01  3000               	movlw	0
  7500  0D02  00F4               	movwf	___ftge@ff2+1
  7501  0D03  3000               	movlw	0
  7502  0D04  00F5               	movwf	___ftge@ff2+2
  7503  0D05  3188  20F6  318C   	fcall	___ftge
  7504  0D08  1803               	btfsc	3,0
  7505  0D09  2D17               	goto	l2648
  7506  0D0A  3021               	movlw	33
  7507  0D0B  0021               	movlb	1	; select bank1
  7508  0D0C  00C5               	movwf	_errno^(0+128)
  7509  0D0D  3000               	movlw	0
  7510  0D0E  00C6               	movwf	(_errno^(0+128)+1)
  7511  0D0F  3000               	movlw	0
  7512  0D10  0020               	movlb	0	; select bank0
  7513  0D11  00D7               	movwf	?_log
  7514  0D12  3000               	movlw	0
  7515  0D13  00D8               	movwf	?_log+1
  7516  0D14  3000               	movlw	0
  7517  0D15  00D9               	movwf	?_log+2
  7518  0D16  0008               	return
  7519  0D17                     l2648:	
  7520  0D17  0020               	movlb	0	; select bank0
  7521  0D18  0859               	movf	log@x+2,w
  7522  0D19  0458               	iorwf	log@x+1,w
  7523  0D1A  0457               	iorwf	log@x,w
  7524  0D1B  1D03               	skipz
  7525  0D1C  2D2A               	goto	l2654
  7526  0D1D  3022               	movlw	34
  7527  0D1E  0021               	movlb	1	; select bank1
  7528  0D1F  00C5               	movwf	_errno^(0+128)
  7529  0D20  3000               	movlw	0
  7530  0D21  00C6               	movwf	(_errno^(0+128)+1)
  7531  0D22  3000               	movlw	0
  7532  0D23  0020               	movlb	0	; select bank0
  7533  0D24  00D7               	movwf	?_log
  7534  0D25  3000               	movlw	0
  7535  0D26  00D8               	movwf	?_log+1
  7536  0D27  3000               	movlw	0
  7537  0D28  00D9               	movwf	?_log+2
  7538  0D29  0008               	return
  7539  0D2A                     l2654:	
  7540  0D2A  3000               	movlw	0
  7541  0D2B  00C0               	movwf	___ftadd@f1
  7542  0D2C  3080               	movlw	128
  7543  0D2D  00C1               	movwf	___ftadd@f1+1
  7544  0D2E  30BF               	movlw	191
  7545  0D2F  00C2               	movwf	___ftadd@f1+2
  7546  0D30  3000               	movlw	0
  7547  0D31  00A0               	movwf	___ftmul@f1
  7548  0D32  3000               	movlw	0
  7549  0D33  00A1               	movwf	___ftmul@f1+1
  7550  0D34  3040               	movlw	64
  7551  0D35  00A2               	movwf	___ftmul@f1+2
  7552  0D36  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7553  0D37  00DA               	movwf	??_log
  7554  0D38  085A               	movf	??_log,w
  7555  0D39  00F3               	movwf	frexp@eptr
  7556  0D3A  0857               	movf	log@x,w
  7557  0D3B  00F0               	movwf	frexp@value
  7558  0D3C  0858               	movf	log@x+1,w
  7559  0D3D  00F1               	movwf	frexp@value+1
  7560  0D3E  0859               	movf	log@x+2,w
  7561  0D3F  00F2               	movwf	frexp@value+2
  7562  0D40  3189  2131  318C   	fcall	_frexp
  7563  0D43  0870               	movf	?_frexp,w
  7564  0D44  0020               	movlb	0	; select bank0
  7565  0D45  00A3               	movwf	___ftmul@f2
  7566  0D46  0871               	movf	?_frexp+1,w
  7567  0D47  00A4               	movwf	___ftmul@f2+1
  7568  0D48  0872               	movf	?_frexp+2,w
  7569  0D49  00A5               	movwf	___ftmul@f2+2
  7570  0D4A  318D  25A8  318C   	fcall	___ftmul
  7571  0D4D  0020               	movlb	0	; select bank0
  7572  0D4E  0820               	movf	?___ftmul,w
  7573  0D4F  00C3               	movwf	___ftadd@f2
  7574  0D50  0821               	movf	?___ftmul+1,w
  7575  0D51  00C4               	movwf	___ftadd@f2+1
  7576  0D52  0822               	movf	?___ftmul+2,w
  7577  0D53  00C5               	movwf	___ftadd@f2+2
  7578  0D54  3180  2094  318C   	fcall	___ftadd
  7579  0D57  0020               	movlb	0	; select bank0
  7580  0D58  0840               	movf	?___ftadd,w
  7581  0D59  00D7               	movwf	log@x
  7582  0D5A  0841               	movf	?___ftadd+1,w
  7583  0D5B  00D8               	movwf	log@x+1
  7584  0D5C  0842               	movf	?___ftadd+2,w
  7585  0D5D  00D9               	movwf	log@x+2
  7586  0D5E  30FF               	movlw	255
  7587  0D5F  07DB               	addwf	log@exponent,f
  7588  0D60  30FF               	movlw	255
  7589  0D61  3DDC               	addwfc	log@exponent+1,f
  7590  0D62  0857               	movf	log@x,w
  7591  0D63  00CD               	movwf	eval_poly@x
  7592  0D64  0858               	movf	log@x+1,w
  7593  0D65  00CE               	movwf	eval_poly@x+1
  7594  0D66  0859               	movf	log@x+2,w
  7595  0D67  00CF               	movwf	eval_poly@x+2
  7596  0D68  3000               	movlw	low (log@coeff| (0+32768))
  7597  0D69  00D0               	movwf	eval_poly@d
  7598  0D6A  3090               	movlw	high (log@coeff| (0+32768))
  7599  0D6B  00D1               	movwf	eval_poly@d+1
  7600  0D6C  3008               	movlw	8
  7601  0D6D  00D2               	movwf	eval_poly@n
  7602  0D6E  3000               	movlw	0
  7603  0D6F  00D3               	movwf	eval_poly@n+1
  7604  0D70  318A  2283  318C   	fcall	_eval_poly
  7605  0D73  0020               	movlb	0	; select bank0
  7606  0D74  084D               	movf	?_eval_poly,w
  7607  0D75  00D7               	movwf	log@x
  7608  0D76  084E               	movf	?_eval_poly+1,w
  7609  0D77  00D8               	movwf	log@x+1
  7610  0D78  084F               	movf	?_eval_poly+2,w
  7611  0D79  00D9               	movwf	log@x+2
  7612  0D7A  0857               	movf	log@x,w
  7613  0D7B  00C0               	movwf	___ftadd@f1
  7614  0D7C  0858               	movf	log@x+1,w
  7615  0D7D  00C1               	movwf	___ftadd@f1+1
  7616  0D7E  0859               	movf	log@x+2,w
  7617  0D7F  00C2               	movwf	___ftadd@f1+2
  7618  0D80  3072               	movlw	114
  7619  0D81  00A0               	movwf	___ftmul@f1
  7620  0D82  3031               	movlw	49
  7621  0D83  00A1               	movwf	___ftmul@f1+1
  7622  0D84  303F               	movlw	63
  7623  0D85  00A2               	movwf	___ftmul@f1+2
  7624  0D86  085C               	movf	log@exponent+1,w
  7625  0D87  00F9               	movwf	___awtoft@c+1
  7626  0D88  085B               	movf	log@exponent,w
  7627  0D89  00F8               	movwf	___awtoft@c
  7628  0D8A  3188  2033  318C   	fcall	___awtoft
  7629  0D8D  0878               	movf	?___awtoft,w
  7630  0D8E  0020               	movlb	0	; select bank0
  7631  0D8F  00A3               	movwf	___ftmul@f2
  7632  0D90  0879               	movf	?___awtoft+1,w
  7633  0D91  00A4               	movwf	___ftmul@f2+1
  7634  0D92  087A               	movf	?___awtoft+2,w
  7635  0D93  00A5               	movwf	___ftmul@f2+2
  7636  0D94  318D  25A8  318C   	fcall	___ftmul
  7637  0D97  0020               	movlb	0	; select bank0
  7638  0D98  0820               	movf	?___ftmul,w
  7639  0D99  00C3               	movwf	___ftadd@f2
  7640  0D9A  0821               	movf	?___ftmul+1,w
  7641  0D9B  00C4               	movwf	___ftadd@f2+1
  7642  0D9C  0822               	movf	?___ftmul+2,w
  7643  0D9D  00C5               	movwf	___ftadd@f2+2
  7644  0D9E  3180  2094         	fcall	___ftadd
  7645  0DA0  0020               	movlb	0	; select bank0
  7646  0DA1  0840               	movf	?___ftadd,w
  7647  0DA2  00D7               	movwf	?_log
  7648  0DA3  0841               	movf	?___ftadd+1,w
  7649  0DA4  00D8               	movwf	?_log+1
  7650  0DA5  0842               	movf	?___ftadd+2,w
  7651  0DA6  00D9               	movwf	?_log+2
  7652  0DA7  0008               	return
  7653  0DA8                     __end_of_log:	
  7654                           
  7655                           	psect	text3
  7656  0931                     __ptext3:	
  7657 ;; *************** function _frexp *****************
  7658 ;; Defined at:
  7659 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  value           3    0[COMMON] int 
  7662 ;;  eptr            1    3[COMMON] PTR int 
  7663 ;;		 -> log@exponent(2), 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  3    0[COMMON] PTR int 
  7668 ;; Registers used:
  7669 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;Total ram usage:        6 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		_log
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           
  7689                           ;psect for function _frexp
  7690  0931                     _frexp:	
  7691                           
  7692                           ;incstack = 0
  7693                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7694  0931  0872               	movf	frexp@value+2,w
  7695  0932  0471               	iorwf	frexp@value+1,w
  7696  0933  0470               	iorwf	frexp@value,w
  7697  0934  1D03               	skipz
  7698  0935  2943               	goto	l2400
  7699  0936  0873               	movf	frexp@eptr,w
  7700  0937  0086               	movwf	6
  7701  0938  0187               	clrf	7
  7702  0939  3000               	movlw	0
  7703  093A  3FC0               	movwi [0]fsr1
  7704  093B  3FC1               	movwi [1]fsr1
  7705  093C  3000               	movlw	0
  7706  093D  00F0               	movwf	?_frexp
  7707  093E  3000               	movlw	0
  7708  093F  00F1               	movwf	?_frexp+1
  7709  0940  3000               	movlw	0
  7710  0941  00F2               	movwf	?_frexp+2
  7711  0942  0008               	return
  7712  0943                     l2400:	
  7713  0943  0872               	movf	frexp@value+2,w
  7714  0944  397F               	andlw	127
  7715  0945  00F4               	movwf	??_frexp
  7716  0946  01F5               	clrf	??_frexp+1
  7717  0947  35F4               	lslf	??_frexp,f
  7718  0948  0DF5               	rlf	??_frexp+1,f
  7719  0949  0873               	movf	frexp@eptr,w
  7720  094A  0086               	movwf	6
  7721  094B  0187               	clrf	7
  7722  094C  0874               	movf	??_frexp,w
  7723  094D  3FC0               	movwi [0]fsr1
  7724  094E  0875               	movf	??_frexp+1,w
  7725  094F  3FC1               	movwi [1]fsr1
  7726  0950  0D71               	rlf	frexp@value+1,w
  7727  0951  0D71               	rlf	frexp@value+1,w
  7728  0952  3901               	andlw	1
  7729  0953  00F4               	movwf	??_frexp
  7730  0954  01F5               	clrf	??_frexp+1
  7731  0955  0873               	movf	frexp@eptr,w
  7732  0956  0086               	movwf	6
  7733  0957  0187               	clrf	7
  7734  0958  0874               	movf	??_frexp,w
  7735  0959  0481               	iorwf	1,f
  7736  095A  3141               	addfsr 1,1
  7737  095B  0875               	movf	??_frexp+1,w
  7738  095C  0481               	iorwf	1,f
  7739  095D  0873               	movf	frexp@eptr,w
  7740  095E  0086               	movwf	6
  7741  095F  0187               	clrf	7
  7742  0960  3082               	movlw	130
  7743  0961  0781               	addwf	1,f
  7744  0962  3141               	addfsr 1,1
  7745  0963  30FF               	movlw	255
  7746  0964  3D81               	addwfc	1,f
  7747  0965  317F               	addfsr 1,-1
  7748  0966  0872               	movf	frexp@value+2,w
  7749  0967  3980               	andlw	-128
  7750  0968  383F               	iorlw	63
  7751  0969  00F2               	movwf	frexp@value+2
  7752  096A  13F1               	bcf	frexp@value+1,7
  7753  096B  0008               	return
  7754  096C                     __end_of_frexp:	
  7755                           
  7756                           	psect	text4
  7757  0A83                     __ptext4:	
  7758 ;; *************** function _eval_poly *****************
  7759 ;; Defined at:
  7760 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  x               3   45[BANK0 ] PTR int 
  7763 ;;  d               2   48[BANK0 ] PTR const 
  7764 ;;		 -> log@coeff(27), 
  7765 ;;  n               2   50[BANK0 ] int 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  res             3   52[BANK0 ] int 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  3   45[BANK0 ] int 
  7770 ;; Registers used:
  7771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7777 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;Total ram usage:       10 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    2
  7784 ;; This function calls:
  7785 ;;		___ftadd
  7786 ;;		___ftmul
  7787 ;;		___wmul
  7788 ;; This function is called by:
  7789 ;;		_log
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           
  7794                           ;psect for function _eval_poly
  7795  0A83                     _eval_poly:	
  7796                           
  7797                           ;incstack = 0
  7798                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7799  0A83  0020               	movlb	0	; select bank0
  7800  0A84  0853               	movf	eval_poly@n+1,w
  7801  0A85  00F1               	movwf	___wmul@multiplier+1
  7802  0A86  0852               	movf	eval_poly@n,w
  7803  0A87  00F0               	movwf	___wmul@multiplier
  7804  0A88  3003               	movlw	3
  7805  0A89  00F2               	movwf	___wmul@multiplicand
  7806  0A8A  3000               	movlw	0
  7807  0A8B  00F3               	movwf	___wmul@multiplicand+1
  7808  0A8C  3197  27E5  318A   	fcall	___wmul
  7809  0A8F  0020               	movlb	0	; select bank0
  7810  0A90  0850               	movf	eval_poly@d,w
  7811  0A91  0770               	addwf	?___wmul,w
  7812  0A92  0084               	movwf	4
  7813  0A93  0851               	movf	eval_poly@d+1,w
  7814  0A94  3D71               	addwfc	?___wmul+1,w
  7815  0A95  0085               	movwf	5
  7816  0A96  3F00               	moviw [0]fsr0
  7817  0A97  00D4               	movwf	eval_poly@res
  7818  0A98  3F01               	moviw [1]fsr0
  7819  0A99  00D5               	movwf	eval_poly@res+1
  7820  0A9A  3F02               	moviw [2]fsr0
  7821  0A9B                     L1:	
  7822  0A9B  00D6               	movwf	eval_poly@res+2
  7823  0A9C  0852               	movf	eval_poly@n,w
  7824  0A9D  0453               	iorwf	eval_poly@n+1,w
  7825  0A9E  1903               	btfsc	3,2
  7826  0A9F  2ADC               	goto	l2418
  7827  0AA0  30FF               	movlw	255
  7828  0AA1  07D2               	addwf	eval_poly@n,f
  7829  0AA2  30FF               	movlw	255
  7830  0AA3  3DD3               	addwfc	eval_poly@n+1,f
  7831  0AA4  0853               	movf	eval_poly@n+1,w
  7832  0AA5  00F1               	movwf	___wmul@multiplier+1
  7833  0AA6  0852               	movf	eval_poly@n,w
  7834  0AA7  00F0               	movwf	___wmul@multiplier
  7835  0AA8  3003               	movlw	3
  7836  0AA9  00F2               	movwf	___wmul@multiplicand
  7837  0AAA  3000               	movlw	0
  7838  0AAB  00F3               	movwf	___wmul@multiplicand+1
  7839  0AAC  3197  27E5  318A   	fcall	___wmul
  7840  0AAF  0020               	movlb	0	; select bank0
  7841  0AB0  0850               	movf	eval_poly@d,w
  7842  0AB1  0770               	addwf	?___wmul,w
  7843  0AB2  0084               	movwf	4
  7844  0AB3  0851               	movf	eval_poly@d+1,w
  7845  0AB4  3D71               	addwfc	?___wmul+1,w
  7846  0AB5  0085               	movwf	5
  7847  0AB6  3F00               	moviw [0]fsr0
  7848  0AB7  00C0               	movwf	___ftadd@f1
  7849  0AB8  3F01               	moviw [1]fsr0
  7850  0AB9  00C1               	movwf	___ftadd@f1+1
  7851  0ABA  3F02               	moviw [2]fsr0
  7852  0ABB  00C2               	movwf	___ftadd@f1+2
  7853  0ABC  0854               	movf	eval_poly@res,w
  7854  0ABD  00A0               	movwf	___ftmul@f1
  7855  0ABE  0855               	movf	eval_poly@res+1,w
  7856  0ABF  00A1               	movwf	___ftmul@f1+1
  7857  0AC0  0856               	movf	eval_poly@res+2,w
  7858  0AC1  00A2               	movwf	___ftmul@f1+2
  7859  0AC2  084D               	movf	eval_poly@x,w
  7860  0AC3  00A3               	movwf	___ftmul@f2
  7861  0AC4  084E               	movf	eval_poly@x+1,w
  7862  0AC5  00A4               	movwf	___ftmul@f2+1
  7863  0AC6  084F               	movf	eval_poly@x+2,w
  7864  0AC7  00A5               	movwf	___ftmul@f2+2
  7865  0AC8  318D  25A8  318A   	fcall	___ftmul
  7866  0ACB  0020               	movlb	0	; select bank0
  7867  0ACC  0820               	movf	?___ftmul,w
  7868  0ACD  00C3               	movwf	___ftadd@f2
  7869  0ACE  0821               	movf	?___ftmul+1,w
  7870  0ACF  00C4               	movwf	___ftadd@f2+1
  7871  0AD0  0822               	movf	?___ftmul+2,w
  7872  0AD1  00C5               	movwf	___ftadd@f2+2
  7873  0AD2  3180  2094  318A   	fcall	___ftadd
  7874  0AD5  0020               	movlb	0	; select bank0
  7875  0AD6  0840               	movf	?___ftadd,w
  7876  0AD7  00D4               	movwf	eval_poly@res
  7877  0AD8  0841               	movf	?___ftadd+1,w
  7878  0AD9  00D5               	movwf	eval_poly@res+1
  7879  0ADA  0842               	movf	?___ftadd+2,w
  7880  0ADB  2A9B               	goto	L1
  7881  0ADC                     l2418:	
  7882  0ADC  0854               	movf	eval_poly@res,w
  7883  0ADD  00CD               	movwf	?_eval_poly
  7884  0ADE  0855               	movf	eval_poly@res+1,w
  7885  0ADF  00CE               	movwf	?_eval_poly+1
  7886  0AE0  0856               	movf	eval_poly@res+2,w
  7887  0AE1  00CF               	movwf	?_eval_poly+2
  7888  0AE2  0008               	return
  7889  0AE3                     __end_of_eval_poly:	
  7890                           
  7891                           	psect	text5
  7892  0DA8                     __ptext5:	
  7893 ;; *************** function ___ftmul *****************
  7894 ;; Defined at:
  7895 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  f1              3    0[BANK0 ] float 
  7898 ;;  f2              3    3[BANK0 ] float 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7901 ;;  sign            1   15[BANK0 ] unsigned char 
  7902 ;;  cntr            1   14[BANK0 ] unsigned char 
  7903 ;;  exp             1   10[BANK0 ] unsigned char 
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  3    0[BANK0 ] float 
  7906 ;; Registers used:
  7907 ;;		wreg, status,2, status,0, pclath, cstack
  7908 ;; Tracked objects:
  7909 ;;		On entry : 0/0
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7913 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7914 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7915 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7916 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7917 ;;Total ram usage:       16 bytes
  7918 ;; Hardware stack levels used:    1
  7919 ;; Hardware stack levels required when called:    1
  7920 ;; This function calls:
  7921 ;;		___ftpack
  7922 ;; This function is called by:
  7923 ;;		_tempCalc
  7924 ;;		_log
  7925 ;;		_eval_poly
  7926 ;; This function uses a non-reentrant model
  7927 ;;
  7928                           
  7929                           
  7930                           ;psect for function ___ftmul
  7931  0DA8                     ___ftmul:	
  7932                           
  7933                           ;incstack = 0
  7934                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7935  0DA8  0020               	movlb	0	; select bank0
  7936  0DA9  0820               	movf	___ftmul@f1,w
  7937  0DAA  00A6               	movwf	??___ftmul
  7938  0DAB  0821               	movf	___ftmul@f1+1,w
  7939  0DAC  00A7               	movwf	??___ftmul+1
  7940  0DAD  0822               	movf	___ftmul@f1+2,w
  7941  0DAE  00A8               	movwf	??___ftmul+2
  7942  0DAF  1003               	clrc
  7943  0DB0  0D27               	rlf	??___ftmul+1,w
  7944  0DB1  0D28               	rlf	??___ftmul+2,w
  7945  0DB2  00A9               	movwf	??___ftmul+3
  7946  0DB3  0829               	movf	??___ftmul+3,w
  7947  0DB4  00AA               	movwf	___ftmul@exp
  7948  0DB5  082A               	movf	___ftmul@exp,w
  7949  0DB6  1D03               	btfss	3,2
  7950  0DB7  2DBF               	goto	l2204
  7951  0DB8  3000               	movlw	0
  7952  0DB9  00A0               	movwf	?___ftmul
  7953  0DBA  3000               	movlw	0
  7954  0DBB  00A1               	movwf	?___ftmul+1
  7955  0DBC  3000               	movlw	0
  7956  0DBD  00A2               	movwf	?___ftmul+2
  7957  0DBE  0008               	return
  7958  0DBF                     l2204:	
  7959  0DBF  0823               	movf	___ftmul@f2,w
  7960  0DC0  00A6               	movwf	??___ftmul
  7961  0DC1  0824               	movf	___ftmul@f2+1,w
  7962  0DC2  00A7               	movwf	??___ftmul+1
  7963  0DC3  0825               	movf	___ftmul@f2+2,w
  7964  0DC4  00A8               	movwf	??___ftmul+2
  7965  0DC5  1003               	clrc
  7966  0DC6  0D27               	rlf	??___ftmul+1,w
  7967  0DC7  0D28               	rlf	??___ftmul+2,w
  7968  0DC8  00A9               	movwf	??___ftmul+3
  7969  0DC9  0829               	movf	??___ftmul+3,w
  7970  0DCA  00AF               	movwf	___ftmul@sign
  7971  0DCB  082F               	movf	___ftmul@sign,w
  7972  0DCC  1D03               	btfss	3,2
  7973  0DCD  2DD5               	goto	l2210
  7974  0DCE  3000               	movlw	0
  7975  0DCF  00A0               	movwf	?___ftmul
  7976  0DD0  3000               	movlw	0
  7977  0DD1  00A1               	movwf	?___ftmul+1
  7978  0DD2  3000               	movlw	0
  7979  0DD3  00A2               	movwf	?___ftmul+2
  7980  0DD4  0008               	return
  7981  0DD5                     l2210:	
  7982  0DD5  082F               	movf	___ftmul@sign,w
  7983  0DD6  3E7B               	addlw	123
  7984  0DD7  00A6               	movwf	??___ftmul
  7985  0DD8  0826               	movf	??___ftmul,w
  7986  0DD9  07AA               	addwf	___ftmul@exp,f
  7987  0DDA  0820               	movf	___ftmul@f1,w
  7988  0DDB  00A6               	movwf	??___ftmul
  7989  0DDC  0821               	movf	___ftmul@f1+1,w
  7990  0DDD  00A7               	movwf	??___ftmul+1
  7991  0DDE  0822               	movf	___ftmul@f1+2,w
  7992  0DDF  00A8               	movwf	??___ftmul+2
  7993  0DE0  3010               	movlw	16
  7994  0DE1                     u2275:	
  7995  0DE1  36A8               	lsrf	??___ftmul+2,f
  7996  0DE2  0CA7               	rrf	??___ftmul+1,f
  7997  0DE3  0CA6               	rrf	??___ftmul,f
  7998  0DE4  0B89               	decfsz	9,f
  7999  0DE5  2DE1               	goto	u2275
  8000  0DE6  0826               	movf	??___ftmul,w
  8001  0DE7  00A9               	movwf	??___ftmul+3
  8002  0DE8  0829               	movf	??___ftmul+3,w
  8003  0DE9  00AF               	movwf	___ftmul@sign
  8004  0DEA  0823               	movf	___ftmul@f2,w
  8005  0DEB  00A6               	movwf	??___ftmul
  8006  0DEC  0824               	movf	___ftmul@f2+1,w
  8007  0DED  00A7               	movwf	??___ftmul+1
  8008  0DEE  0825               	movf	___ftmul@f2+2,w
  8009  0DEF  00A8               	movwf	??___ftmul+2
  8010  0DF0  3010               	movlw	16
  8011  0DF1                     u2285:	
  8012  0DF1  36A8               	lsrf	??___ftmul+2,f
  8013  0DF2  0CA7               	rrf	??___ftmul+1,f
  8014  0DF3  0CA6               	rrf	??___ftmul,f
  8015  0DF4  0B89               	decfsz	9,f
  8016  0DF5  2DF1               	goto	u2285
  8017  0DF6  0826               	movf	??___ftmul,w
  8018  0DF7  00A9               	movwf	??___ftmul+3
  8019  0DF8  0829               	movf	??___ftmul+3,w
  8020  0DF9  06AF               	xorwf	___ftmul@sign,f
  8021  0DFA  3080               	movlw	128
  8022  0DFB  00A6               	movwf	??___ftmul
  8023  0DFC  0826               	movf	??___ftmul,w
  8024  0DFD  05AF               	andwf	___ftmul@sign,f
  8025  0DFE  17A1               	bsf	___ftmul@f1+1,7
  8026  0DFF  17A4               	bsf	___ftmul@f2+1,7
  8027  0E00  30FF               	movlw	255
  8028  0E01  05A3               	andwf	___ftmul@f2,f
  8029  0E02  30FF               	movlw	255
  8030  0E03  05A4               	andwf	___ftmul@f2+1,f
  8031  0E04  3000               	movlw	0
  8032  0E05  05A5               	andwf	___ftmul@f2+2,f
  8033  0E06  3000               	movlw	0
  8034  0E07  00AB               	movwf	___ftmul@f3_as_product
  8035  0E08  3000               	movlw	0
  8036  0E09  00AC               	movwf	___ftmul@f3_as_product+1
  8037  0E0A  3000               	movlw	0
  8038  0E0B  00AD               	movwf	___ftmul@f3_as_product+2
  8039  0E0C  3007               	movlw	7
  8040  0E0D  00A6               	movwf	??___ftmul
  8041  0E0E  0826               	movf	??___ftmul,w
  8042  0E0F  00AE               	movwf	___ftmul@cntr
  8043  0E10                     l2222:	
  8044  0E10  1C20               	btfss	___ftmul@f1,0
  8045  0E11  2E18               	goto	l2226
  8046  0E12  0823               	movf	___ftmul@f2,w
  8047  0E13  07AB               	addwf	___ftmul@f3_as_product,f
  8048  0E14  0824               	movf	___ftmul@f2+1,w
  8049  0E15  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8050  0E16  0825               	movf	___ftmul@f2+2,w
  8051  0E17  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8052  0E18                     l2226:	
  8053  0E18  3001               	movlw	1
  8054  0E19                     u2305:	
  8055  0E19  36A2               	lsrf	___ftmul@f1+2,f
  8056  0E1A  0CA1               	rrf	___ftmul@f1+1,f
  8057  0E1B  0CA0               	rrf	___ftmul@f1,f
  8058  0E1C  0B89               	decfsz	9,f
  8059  0E1D  2E19               	goto	u2305
  8060  0E1E  3001               	movlw	1
  8061  0E1F                     u2315:	
  8062  0E1F  35A3               	lslf	___ftmul@f2,f
  8063  0E20  0DA4               	rlf	___ftmul@f2+1,f
  8064  0E21  0DA5               	rlf	___ftmul@f2+2,f
  8065  0E22  0B89               	decfsz	9,f
  8066  0E23  2E1F               	goto	u2315
  8067  0E24  3001               	movlw	1
  8068  0E25  02AE               	subwf	___ftmul@cntr,f
  8069  0E26  1D03               	btfss	3,2
  8070  0E27  2E10               	goto	l2222
  8071  0E28  3009               	movlw	9
  8072  0E29  00A6               	movwf	??___ftmul
  8073  0E2A  0826               	movf	??___ftmul,w
  8074  0E2B  00AE               	movwf	___ftmul@cntr
  8075  0E2C                     l2234:	
  8076  0E2C  1C20               	btfss	___ftmul@f1,0
  8077  0E2D  2E34               	goto	l2238
  8078  0E2E  0823               	movf	___ftmul@f2,w
  8079  0E2F  07AB               	addwf	___ftmul@f3_as_product,f
  8080  0E30  0824               	movf	___ftmul@f2+1,w
  8081  0E31  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8082  0E32  0825               	movf	___ftmul@f2+2,w
  8083  0E33  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8084  0E34                     l2238:	
  8085  0E34  3001               	movlw	1
  8086  0E35                     u2345:	
  8087  0E35  36A2               	lsrf	___ftmul@f1+2,f
  8088  0E36  0CA1               	rrf	___ftmul@f1+1,f
  8089  0E37  0CA0               	rrf	___ftmul@f1,f
  8090  0E38  0B89               	decfsz	9,f
  8091  0E39  2E35               	goto	u2345
  8092  0E3A  3001               	movlw	1
  8093  0E3B                     u2355:	
  8094  0E3B  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8095  0E3C  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8096  0E3D  0CAB               	rrf	___ftmul@f3_as_product,f
  8097  0E3E  0B89               	decfsz	9,f
  8098  0E3F  2E3B               	goto	u2355
  8099  0E40  3001               	movlw	1
  8100  0E41  02AE               	subwf	___ftmul@cntr,f
  8101  0E42  1D03               	btfss	3,2
  8102  0E43  2E2C               	goto	l2234
  8103  0E44  082B               	movf	___ftmul@f3_as_product,w
  8104  0E45  00F0               	movwf	___ftpack@arg
  8105  0E46  082C               	movf	___ftmul@f3_as_product+1,w
  8106  0E47  00F1               	movwf	___ftpack@arg+1
  8107  0E48  082D               	movf	___ftmul@f3_as_product+2,w
  8108  0E49  00F2               	movwf	___ftpack@arg+2
  8109  0E4A  082A               	movf	___ftmul@exp,w
  8110  0E4B  00A6               	movwf	??___ftmul
  8111  0E4C  0826               	movf	??___ftmul,w
  8112  0E4D  00F3               	movwf	___ftpack@exp
  8113  0E4E  082F               	movf	___ftmul@sign,w
  8114  0E4F  00A7               	movwf	??___ftmul+1
  8115  0E50  0827               	movf	??___ftmul+1,w
  8116  0E51  00F4               	movwf	___ftpack@sign
  8117  0E52  318A  22E3         	fcall	___ftpack
  8118  0E54  0870               	movf	?___ftpack,w
  8119  0E55  0020               	movlb	0	; select bank0
  8120  0E56  00A0               	movwf	?___ftmul
  8121  0E57  0871               	movf	?___ftpack+1,w
  8122  0E58  00A1               	movwf	?___ftmul+1
  8123  0E59  0872               	movf	?___ftpack+2,w
  8124  0E5A  00A2               	movwf	?___ftmul+2
  8125  0E5B  0008               	return
  8126  0E5C                     __end_of___ftmul:	
  8127                           
  8128                           	psect	text6
  8129  08F6                     __ptext6:	
  8130 ;; *************** function ___ftge *****************
  8131 ;; Defined at:
  8132 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;  ff1             3    0[COMMON] float 
  8135 ;;  ff2             3    3[COMMON] float 
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;		None
  8138 ;; Return value:  Size  Location     Type
  8139 ;;		None               void
  8140 ;; Registers used:
  8141 ;;		wreg, status,2, status,0
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8147 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8149 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;Total ram usage:        9 bytes
  8152 ;; Hardware stack levels used:    1
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		_log
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           
  8161                           ;psect for function ___ftge
  8162  08F6                     ___ftge:	
  8163                           
  8164                           ;incstack = 0
  8165                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8166  08F6  1FF2               	btfss	___ftge@ff1+2,7
  8167  08F7  290C               	goto	l2376
  8168  08F8  0970               	comf	___ftge@ff1,w
  8169  08F9  00F6               	movwf	??___ftge
  8170  08FA  0971               	comf	___ftge@ff1+1,w
  8171  08FB  00F7               	movwf	??___ftge+1
  8172  08FC  0972               	comf	___ftge@ff1+2,w
  8173  08FD  00F8               	movwf	??___ftge+2
  8174  08FE  0AF6               	incf	??___ftge,f
  8175  08FF  1903               	skipnz
  8176  0900  0AF7               	incf	??___ftge+1,f
  8177  0901  1903               	skipnz
  8178  0902  0AF8               	incf	??___ftge+2,f
  8179  0903  3000               	movlw	0
  8180  0904  0776               	addwf	??___ftge,w
  8181  0905  00F0               	movwf	___ftge@ff1
  8182  0906  3000               	movlw	0
  8183  0907  3D77               	addwfc	??___ftge+1,w
  8184  0908  00F1               	movwf	___ftge@ff1+1
  8185  0909  3080               	movlw	128
  8186  090A  3D78               	addwfc	??___ftge+2,w
  8187  090B  00F2               	movwf	___ftge@ff1+2
  8188  090C                     l2376:	
  8189  090C  1FF5               	btfss	___ftge@ff2+2,7
  8190  090D  2922               	goto	l2380
  8191  090E  0973               	comf	___ftge@ff2,w
  8192  090F  00F6               	movwf	??___ftge
  8193  0910  0974               	comf	___ftge@ff2+1,w
  8194  0911  00F7               	movwf	??___ftge+1
  8195  0912  0975               	comf	___ftge@ff2+2,w
  8196  0913  00F8               	movwf	??___ftge+2
  8197  0914  0AF6               	incf	??___ftge,f
  8198  0915  1903               	skipnz
  8199  0916  0AF7               	incf	??___ftge+1,f
  8200  0917  1903               	skipnz
  8201  0918  0AF8               	incf	??___ftge+2,f
  8202  0919  3000               	movlw	0
  8203  091A  0776               	addwf	??___ftge,w
  8204  091B  00F3               	movwf	___ftge@ff2
  8205  091C  3000               	movlw	0
  8206  091D  3D77               	addwfc	??___ftge+1,w
  8207  091E  00F4               	movwf	___ftge@ff2+1
  8208  091F  3080               	movlw	128
  8209  0920  3D78               	addwfc	??___ftge+2,w
  8210  0921  00F5               	movwf	___ftge@ff2+2
  8211  0922                     l2380:	
  8212  0922  3080               	movlw	128
  8213  0923  06F2               	xorwf	___ftge@ff1+2,f
  8214  0924  3080               	movlw	128
  8215  0925  06F5               	xorwf	___ftge@ff2+2,f
  8216  0926  0875               	movf	___ftge@ff2+2,w
  8217  0927  0272               	subwf	___ftge@ff1+2,w
  8218  0928  1D03               	skipz
  8219  0929  0008               	return
  8220  092A  0874               	movf	___ftge@ff2+1,w
  8221  092B  0271               	subwf	___ftge@ff1+1,w
  8222  092C  1D03               	skipz
  8223  092D  0008               	return
  8224  092E  0873               	movf	___ftge@ff2,w
  8225  092F  0270               	subwf	___ftge@ff1,w
  8226  0930  0008               	return
  8227  0931                     __end_of___ftge:	
  8228                           
  8229                           	psect	text7
  8230  0833                     __ptext7:	
  8231 ;; *************** function ___awtoft *****************
  8232 ;; Defined at:
  8233 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;  c               2    8[COMMON] int 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  sign            1   13[COMMON] unsigned char 
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  3    8[COMMON] float 
  8240 ;; Registers used:
  8241 ;;		wreg, status,2, status,0, pclath, cstack
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8247 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;Total ram usage:        6 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:    1
  8254 ;; This function calls:
  8255 ;;		___ftpack
  8256 ;; This function is called by:
  8257 ;;		_tempCalc
  8258 ;;		_log
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           
  8263                           ;psect for function ___awtoft
  8264  0833                     ___awtoft:	
  8265                           
  8266                           ;incstack = 0
  8267                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8268  0833  01FD               	clrf	___awtoft@sign
  8269  0834  1FF9               	btfss	___awtoft@c+1,7
  8270  0835  283D               	goto	l2368
  8271  0836  09F8               	comf	___awtoft@c,f
  8272  0837  09F9               	comf	___awtoft@c+1,f
  8273  0838  0AF8               	incf	___awtoft@c,f
  8274  0839  1903               	skipnz
  8275  083A  0AF9               	incf	___awtoft@c+1,f
  8276  083B  01FD               	clrf	___awtoft@sign
  8277  083C  0AFD               	incf	___awtoft@sign,f
  8278  083D                     l2368:	
  8279  083D  0878               	movf	___awtoft@c,w
  8280  083E  00F0               	movwf	___ftpack@arg
  8281  083F  0879               	movf	___awtoft@c+1,w
  8282  0840  00F1               	movwf	___ftpack@arg+1
  8283  0841  01F2               	clrf	___ftpack@arg+2
  8284  0842  308E               	movlw	142
  8285  0843  00FB               	movwf	??___awtoft
  8286  0844  087B               	movf	??___awtoft,w
  8287  0845  00F3               	movwf	___ftpack@exp
  8288  0846  087D               	movf	___awtoft@sign,w
  8289  0847  00FC               	movwf	??___awtoft+1
  8290  0848  087C               	movf	??___awtoft+1,w
  8291  0849  00F4               	movwf	___ftpack@sign
  8292  084A  318A  22E3         	fcall	___ftpack
  8293  084C  0870               	movf	?___ftpack,w
  8294  084D  00F8               	movwf	?___awtoft
  8295  084E  0871               	movf	?___ftpack+1,w
  8296  084F  00F9               	movwf	?___awtoft+1
  8297  0850  0872               	movf	?___ftpack+2,w
  8298  0851  00FA               	movwf	?___awtoft+2
  8299  0852  0008               	return
  8300  0853                     __end_of___awtoft:	
  8301                           
  8302                           	psect	text8
  8303  0BC9                     __ptext8:	
  8304 ;; *************** function ___fttol *****************
  8305 ;; Defined at:
  8306 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;  f1              3    0[COMMON] float 
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;  lval            4    9[COMMON] unsigned long 
  8311 ;;  exp1            1   13[COMMON] unsigned char 
  8312 ;;  sign1           1    8[COMMON] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  4    0[COMMON] long 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2, status,0
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;Total ram usage:       14 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; This function calls:
  8329 ;;		Nothing
  8330 ;; This function is called by:
  8331 ;;		_tempCalc
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           
  8336                           ;psect for function ___fttol
  8337  0BC9                     ___fttol:	
  8338                           
  8339                           ;incstack = 0
  8340                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8341  0BC9  0870               	movf	___fttol@f1,w
  8342  0BCA  00F4               	movwf	??___fttol
  8343  0BCB  0871               	movf	___fttol@f1+1,w
  8344  0BCC  00F5               	movwf	??___fttol+1
  8345  0BCD  0872               	movf	___fttol@f1+2,w
  8346  0BCE  00F6               	movwf	??___fttol+2
  8347  0BCF  1003               	clrc
  8348  0BD0  0D75               	rlf	??___fttol+1,w
  8349  0BD1  0D76               	rlf	??___fttol+2,w
  8350  0BD2  00F7               	movwf	??___fttol+3
  8351  0BD3  0877               	movf	??___fttol+3,w
  8352  0BD4  00FD               	movwf	___fttol@exp1
  8353  0BD5  087D               	movf	___fttol@exp1,w
  8354  0BD6  1D03               	btfss	3,2
  8355  0BD7  2BE1               	goto	l2776
  8356  0BD8  3000               	movlw	0
  8357  0BD9  00F3               	movwf	?___fttol+3
  8358  0BDA  3000               	movlw	0
  8359  0BDB  00F2               	movwf	?___fttol+2
  8360  0BDC  3000               	movlw	0
  8361  0BDD  00F1               	movwf	?___fttol+1
  8362  0BDE  3000               	movlw	0
  8363  0BDF  00F0               	movwf	?___fttol
  8364  0BE0  0008               	return
  8365  0BE1                     l2776:	
  8366  0BE1  0870               	movf	___fttol@f1,w
  8367  0BE2  00F4               	movwf	??___fttol
  8368  0BE3  0871               	movf	___fttol@f1+1,w
  8369  0BE4  00F5               	movwf	??___fttol+1
  8370  0BE5  0872               	movf	___fttol@f1+2,w
  8371  0BE6  00F6               	movwf	??___fttol+2
  8372  0BE7  3017               	movlw	23
  8373  0BE8                     u3085:	
  8374  0BE8  36F6               	lsrf	??___fttol+2,f
  8375  0BE9  0CF5               	rrf	??___fttol+1,f
  8376  0BEA  0CF4               	rrf	??___fttol,f
  8377  0BEB  0B89               	decfsz	9,f
  8378  0BEC  2BE8               	goto	u3085
  8379  0BED  0874               	movf	??___fttol,w
  8380  0BEE  00F7               	movwf	??___fttol+3
  8381  0BEF  0877               	movf	??___fttol+3,w
  8382  0BF0  00F8               	movwf	___fttol@sign1
  8383  0BF1  17F1               	bsf	___fttol@f1+1,7
  8384  0BF2  30FF               	movlw	255
  8385  0BF3  05F0               	andwf	___fttol@f1,f
  8386  0BF4  30FF               	movlw	255
  8387  0BF5  05F1               	andwf	___fttol@f1+1,f
  8388  0BF6  3000               	movlw	0
  8389  0BF7  05F2               	andwf	___fttol@f1+2,f
  8390  0BF8  0870               	movf	___fttol@f1,w
  8391  0BF9  00F9               	movwf	___fttol@lval
  8392  0BFA  0871               	movf	___fttol@f1+1,w
  8393  0BFB  00FA               	movwf	___fttol@lval+1
  8394  0BFC  0872               	movf	___fttol@f1+2,w
  8395  0BFD  00FB               	movwf	___fttol@lval+2
  8396  0BFE  01FC               	clrf	___fttol@lval+3
  8397  0BFF  308E               	movlw	142
  8398  0C00  02FD               	subwf	___fttol@exp1,f
  8399  0C01  1FFD               	btfss	___fttol@exp1,7
  8400  0C02  2C1F               	goto	l2796
  8401  0C03  087D               	movf	___fttol@exp1,w
  8402  0C04  3A80               	xorlw	128
  8403  0C05  3E8F               	addlw	143
  8404  0C06  1803               	skipnc
  8405  0C07  2C11               	goto	l2794
  8406  0C08  3000               	movlw	0
  8407  0C09  00F3               	movwf	?___fttol+3
  8408  0C0A  3000               	movlw	0
  8409  0C0B  00F2               	movwf	?___fttol+2
  8410  0C0C  3000               	movlw	0
  8411  0C0D  00F1               	movwf	?___fttol+1
  8412  0C0E  3000               	movlw	0
  8413  0C0F  00F0               	movwf	?___fttol
  8414  0C10  0008               	return
  8415  0C11                     l2794:	
  8416  0C11  3001               	movlw	1
  8417  0C12                     u3115:	
  8418  0C12  36FC               	lsrf	___fttol@lval+3,f
  8419  0C13  0CFB               	rrf	___fttol@lval+2,f
  8420  0C14  0CFA               	rrf	___fttol@lval+1,f
  8421  0C15  0CF9               	rrf	___fttol@lval,f
  8422  0C16  0B89               	decfsz	9,f
  8423  0C17  2C12               	goto	u3115
  8424  0C18  3001               	movlw	1
  8425  0C19  00F4               	movwf	??___fttol
  8426  0C1A  0874               	movf	??___fttol,w
  8427  0C1B  07FD               	addwf	___fttol@exp1,f
  8428  0C1C  1903               	btfsc	3,2
  8429  0C1D  2C38               	goto	l2804
  8430  0C1E  2C11               	goto	l2794
  8431  0C1F                     l2796:	
  8432  0C1F  3018               	movlw	24
  8433  0C20  027D               	subwf	___fttol@exp1,w
  8434  0C21  1C03               	skipc
  8435  0C22  2C35               	goto	l764
  8436  0C23  3000               	movlw	0
  8437  0C24  00F3               	movwf	?___fttol+3
  8438  0C25  3000               	movlw	0
  8439  0C26  00F2               	movwf	?___fttol+2
  8440  0C27  3000               	movlw	0
  8441  0C28  00F1               	movwf	?___fttol+1
  8442  0C29  3000               	movlw	0
  8443  0C2A  00F0               	movwf	?___fttol
  8444  0C2B  0008               	return
  8445  0C2C                     l2802:	
  8446  0C2C  3001               	movlw	1
  8447  0C2D                     u3145:	
  8448  0C2D  35F9               	lslf	___fttol@lval,f
  8449  0C2E  0DFA               	rlf	___fttol@lval+1,f
  8450  0C2F  0DFB               	rlf	___fttol@lval+2,f
  8451  0C30  0DFC               	rlf	___fttol@lval+3,f
  8452  0C31  0B89               	decfsz	9,f
  8453  0C32  2C2D               	goto	u3145
  8454  0C33  3001               	movlw	1
  8455  0C34  02FD               	subwf	___fttol@exp1,f
  8456  0C35                     l764:	
  8457  0C35  087D               	movf	___fttol@exp1,w
  8458  0C36  1D03               	btfss	3,2
  8459  0C37  2C2C               	goto	l2802
  8460  0C38                     l2804:	
  8461  0C38  0878               	movf	___fttol@sign1,w
  8462  0C39  1903               	btfsc	3,2
  8463  0C3A  2C46               	goto	l2808
  8464  0C3B  09F9               	comf	___fttol@lval,f
  8465  0C3C  09FA               	comf	___fttol@lval+1,f
  8466  0C3D  09FB               	comf	___fttol@lval+2,f
  8467  0C3E  09FC               	comf	___fttol@lval+3,f
  8468  0C3F  0AF9               	incf	___fttol@lval,f
  8469  0C40  1903               	skipnz
  8470  0C41  0AFA               	incf	___fttol@lval+1,f
  8471  0C42  1903               	skipnz
  8472  0C43  0AFB               	incf	___fttol@lval+2,f
  8473  0C44  1903               	skipnz
  8474  0C45  0AFC               	incf	___fttol@lval+3,f
  8475  0C46                     l2808:	
  8476  0C46  087C               	movf	___fttol@lval+3,w
  8477  0C47  00F3               	movwf	?___fttol+3
  8478  0C48  087B               	movf	___fttol@lval+2,w
  8479  0C49  00F2               	movwf	?___fttol+2
  8480  0C4A  087A               	movf	___fttol@lval+1,w
  8481  0C4B  00F1               	movwf	?___fttol+1
  8482  0C4C  0879               	movf	___fttol@lval,w
  8483  0C4D  00F0               	movwf	?___fttol
  8484  0C4E  0008               	return
  8485  0C4F                     __end_of___fttol:	
  8486                           
  8487                           	psect	text9
  8488  0815                     __ptext9:	
  8489 ;; *************** function ___ftsub *****************
  8490 ;; Defined at:
  8491 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  f2              3   45[BANK0 ] float 
  8494 ;;  f1              3   48[BANK0 ] float 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;		None
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  3   45[BANK0 ] float 
  8499 ;; Registers used:
  8500 ;;		wreg, status,2, status,0, pclath, cstack
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8506 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8509 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;Total ram usage:        6 bytes
  8511 ;; Hardware stack levels used:    1
  8512 ;; Hardware stack levels required when called:    2
  8513 ;; This function calls:
  8514 ;;		___ftadd
  8515 ;; This function is called by:
  8516 ;;		_tempCalc
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           
  8521                           ;psect for function ___ftsub
  8522  0815                     ___ftsub:	
  8523                           
  8524                           ;incstack = 0
  8525                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8526  0815  0020               	movlb	0	; select bank0
  8527  0816  084F               	movf	___ftsub@f2+2,w
  8528  0817  044E               	iorwf	___ftsub@f2+1,w
  8529  0818  044D               	iorwf	___ftsub@f2,w
  8530  0819  1903               	skipnz
  8531  081A  281D               	goto	l2766
  8532  081B  3080               	movlw	128
  8533  081C  06CF               	xorwf	___ftsub@f2+2,f
  8534  081D                     l2766:	
  8535  081D  0850               	movf	___ftsub@f1,w
  8536  081E  00C0               	movwf	___ftadd@f1
  8537  081F  0851               	movf	___ftsub@f1+1,w
  8538  0820  00C1               	movwf	___ftadd@f1+1
  8539  0821  0852               	movf	___ftsub@f1+2,w
  8540  0822  00C2               	movwf	___ftadd@f1+2
  8541  0823  084D               	movf	___ftsub@f2,w
  8542  0824  00C3               	movwf	___ftadd@f2
  8543  0825  084E               	movf	___ftsub@f2+1,w
  8544  0826  00C4               	movwf	___ftadd@f2+1
  8545  0827  084F               	movf	___ftsub@f2+2,w
  8546  0828  00C5               	movwf	___ftadd@f2+2
  8547  0829  3180  2094         	fcall	___ftadd
  8548  082B  0020               	movlb	0	; select bank0
  8549  082C  0840               	movf	?___ftadd,w
  8550  082D  00CD               	movwf	?___ftsub
  8551  082E  0841               	movf	?___ftadd+1,w
  8552  082F  00CE               	movwf	?___ftsub+1
  8553  0830  0842               	movf	?___ftadd+2,w
  8554  0831  00CF               	movwf	?___ftsub+2
  8555  0832  0008               	return
  8556  0833                     __end_of___ftsub:	
  8557                           
  8558                           	psect	text10
  8559  0094                     __ptext10:	
  8560 ;; *************** function ___ftadd *****************
  8561 ;; Defined at:
  8562 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  f1              3   32[BANK0 ] float 
  8565 ;;  f2              3   35[BANK0 ] float 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;  exp1            1   44[BANK0 ] unsigned char 
  8568 ;;  exp2            1   43[BANK0 ] unsigned char 
  8569 ;;  sign            1   42[BANK0 ] unsigned char 
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  3   32[BANK0 ] float 
  8572 ;; Registers used:
  8573 ;;		wreg, status,2, status,0, pclath, cstack
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8579 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8583 ;;Total ram usage:       13 bytes
  8584 ;; Hardware stack levels used:    1
  8585 ;; Hardware stack levels required when called:    1
  8586 ;; This function calls:
  8587 ;;		___ftpack
  8588 ;; This function is called by:
  8589 ;;		_tempCalc
  8590 ;;		___ftsub
  8591 ;;		_log
  8592 ;;		_eval_poly
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           
  8597                           ;psect for function ___ftadd
  8598  0094                     ___ftadd:	
  8599                           
  8600                           ;incstack = 0
  8601                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8602  0094  0020               	movlb	0	; select bank0
  8603  0095  0840               	movf	___ftadd@f1,w
  8604  0096  00C6               	movwf	??___ftadd
  8605  0097  0841               	movf	___ftadd@f1+1,w
  8606  0098  00C7               	movwf	??___ftadd+1
  8607  0099  0842               	movf	___ftadd@f1+2,w
  8608  009A  00C8               	movwf	??___ftadd+2
  8609  009B  1003               	clrc
  8610  009C  0D47               	rlf	??___ftadd+1,w
  8611  009D  0D48               	rlf	??___ftadd+2,w
  8612  009E  00C9               	movwf	??___ftadd+3
  8613  009F  0849               	movf	??___ftadd+3,w
  8614  00A0  00CC               	movwf	___ftadd@exp1
  8615  00A1  0843               	movf	___ftadd@f2,w
  8616  00A2  00C6               	movwf	??___ftadd
  8617  00A3  0844               	movf	___ftadd@f2+1,w
  8618  00A4  00C7               	movwf	??___ftadd+1
  8619  00A5  0845               	movf	___ftadd@f2+2,w
  8620  00A6  00C8               	movwf	??___ftadd+2
  8621  00A7  1003               	clrc
  8622  00A8  0D47               	rlf	??___ftadd+1,w
  8623  00A9  0D48               	rlf	??___ftadd+2,w
  8624  00AA  00C9               	movwf	??___ftadd+3
  8625  00AB  0849               	movf	??___ftadd+3,w
  8626  00AC  00CB               	movwf	___ftadd@exp2
  8627  00AD  084C               	movf	___ftadd@exp1,w
  8628  00AE  1903               	btfsc	3,2
  8629  00AF  28BC               	goto	l2134
  8630  00B0  084B               	movf	___ftadd@exp2,w
  8631  00B1  024C               	subwf	___ftadd@exp1,w
  8632  00B2  1803               	skipnc
  8633  00B3  28C3               	goto	l2138
  8634  00B4  034C               	decf	___ftadd@exp1,w
  8635  00B5  3AFF               	xorlw	255
  8636  00B6  074B               	addwf	___ftadd@exp2,w
  8637  00B7  00C6               	movwf	??___ftadd
  8638  00B8  3019               	movlw	25
  8639  00B9  0246               	subwf	??___ftadd,w
  8640  00BA  1C03               	skipc
  8641  00BB  28C3               	goto	l2138
  8642  00BC                     l2134:	
  8643  00BC  0843               	movf	___ftadd@f2,w
  8644  00BD  00C0               	movwf	?___ftadd
  8645  00BE  0844               	movf	___ftadd@f2+1,w
  8646  00BF  00C1               	movwf	?___ftadd+1
  8647  00C0  0845               	movf	___ftadd@f2+2,w
  8648  00C1  00C2               	movwf	?___ftadd+2
  8649  00C2  0008               	return
  8650  00C3                     l2138:	
  8651  00C3  084B               	movf	___ftadd@exp2,w
  8652  00C4  1903               	btfsc	3,2
  8653  00C5  0008               	return
  8654  00C6  084C               	movf	___ftadd@exp1,w
  8655  00C7  024B               	subwf	___ftadd@exp2,w
  8656  00C8  1803               	skipnc
  8657  00C9  28D2               	goto	l2144
  8658  00CA  034B               	decf	___ftadd@exp2,w
  8659  00CB  3AFF               	xorlw	255
  8660  00CC  074C               	addwf	___ftadd@exp1,w
  8661  00CD  00C6               	movwf	??___ftadd
  8662  00CE  3019               	movlw	25
  8663  00CF  0246               	subwf	??___ftadd,w
  8664  00D0  1803               	btfsc	3,0
  8665  00D1  0008               	return
  8666  00D2                     l2144:	
  8667  00D2  3006               	movlw	6
  8668  00D3  00C6               	movwf	??___ftadd
  8669  00D4  0846               	movf	??___ftadd,w
  8670  00D5  00CA               	movwf	___ftadd@sign
  8671  00D6  1BC2               	btfsc	___ftadd@f1+2,7
  8672  00D7  17CA               	bsf	___ftadd@sign,7
  8673  00D8  1BC5               	btfsc	___ftadd@f2+2,7
  8674  00D9  174A               	bsf	___ftadd@sign,6
  8675  00DA  17C1               	bsf	___ftadd@f1+1,7
  8676  00DB  30FF               	movlw	255
  8677  00DC  05C0               	andwf	___ftadd@f1,f
  8678  00DD  30FF               	movlw	255
  8679  00DE  05C1               	andwf	___ftadd@f1+1,f
  8680  00DF  3000               	movlw	0
  8681  00E0  05C2               	andwf	___ftadd@f1+2,f
  8682  00E1  17C4               	bsf	___ftadd@f2+1,7
  8683  00E2  30FF               	movlw	255
  8684  00E3  05C3               	andwf	___ftadd@f2,f
  8685  00E4  30FF               	movlw	255
  8686  00E5  05C4               	andwf	___ftadd@f2+1,f
  8687  00E6  3000               	movlw	0
  8688  00E7  05C5               	andwf	___ftadd@f2+2,f
  8689  00E8  084B               	movf	___ftadd@exp2,w
  8690  00E9  024C               	subwf	___ftadd@exp1,w
  8691  00EA  1803               	skipnc
  8692  00EB  290E               	goto	l2166
  8693  00EC                     l2156:	
  8694  00EC  3001               	movlw	1
  8695  00ED                     u2115:	
  8696  00ED  35C3               	lslf	___ftadd@f2,f
  8697  00EE  0DC4               	rlf	___ftadd@f2+1,f
  8698  00EF  0DC5               	rlf	___ftadd@f2+2,f
  8699  00F0  0B89               	decfsz	9,f
  8700  00F1  28ED               	goto	u2115
  8701  00F2  3001               	movlw	1
  8702  00F3  02CB               	subwf	___ftadd@exp2,f
  8703  00F4  084B               	movf	___ftadd@exp2,w
  8704  00F5  064C               	xorwf	___ftadd@exp1,w
  8705  00F6  1903               	skipnz
  8706  00F7  2909               	goto	l2164
  8707  00F8  3001               	movlw	1
  8708  00F9  02CA               	subwf	___ftadd@sign,f
  8709  00FA  084A               	movf	___ftadd@sign,w
  8710  00FB  3907               	andlw	7
  8711  00FC  1903               	btfsc	3,2
  8712  00FD  2909               	goto	l2164
  8713  00FE  28EC               	goto	l2156
  8714  00FF                     l2162:	
  8715  00FF  3001               	movlw	1
  8716  0100                     u2145:	
  8717  0100  36C2               	lsrf	___ftadd@f1+2,f
  8718  0101  0CC1               	rrf	___ftadd@f1+1,f
  8719  0102  0CC0               	rrf	___ftadd@f1,f
  8720  0103  0B89               	decfsz	9,f
  8721  0104  2900               	goto	u2145
  8722  0105  3001               	movlw	1
  8723  0106  00C6               	movwf	??___ftadd
  8724  0107  0846               	movf	??___ftadd,w
  8725  0108  07CC               	addwf	___ftadd@exp1,f
  8726  0109                     l2164:	
  8727  0109  084C               	movf	___ftadd@exp1,w
  8728  010A  064B               	xorwf	___ftadd@exp2,w
  8729  010B  1903               	btfsc	3,2
  8730  010C  2933               	goto	l704
  8731  010D  28FF               	goto	l2162
  8732  010E                     l2166:	
  8733  010E  084C               	movf	___ftadd@exp1,w
  8734  010F  024B               	subwf	___ftadd@exp2,w
  8735  0110  1803               	skipnc
  8736  0111  2933               	goto	l704
  8737  0112                     l2168:	
  8738  0112  3001               	movlw	1
  8739  0113                     u2175:	
  8740  0113  35C0               	lslf	___ftadd@f1,f
  8741  0114  0DC1               	rlf	___ftadd@f1+1,f
  8742  0115  0DC2               	rlf	___ftadd@f1+2,f
  8743  0116  0B89               	decfsz	9,f
  8744  0117  2913               	goto	u2175
  8745  0118  3001               	movlw	1
  8746  0119  02CC               	subwf	___ftadd@exp1,f
  8747  011A  084B               	movf	___ftadd@exp2,w
  8748  011B  064C               	xorwf	___ftadd@exp1,w
  8749  011C  1903               	skipnz
  8750  011D  292F               	goto	l2176
  8751  011E  3001               	movlw	1
  8752  011F  02CA               	subwf	___ftadd@sign,f
  8753  0120  084A               	movf	___ftadd@sign,w
  8754  0121  3907               	andlw	7
  8755  0122  1903               	btfsc	3,2
  8756  0123  292F               	goto	l2176
  8757  0124  2912               	goto	l2168
  8758  0125                     l2174:	
  8759  0125  3001               	movlw	1
  8760  0126                     u2205:	
  8761  0126  36C5               	lsrf	___ftadd@f2+2,f
  8762  0127  0CC4               	rrf	___ftadd@f2+1,f
  8763  0128  0CC3               	rrf	___ftadd@f2,f
  8764  0129  0B89               	decfsz	9,f
  8765  012A  2926               	goto	u2205
  8766  012B  3001               	movlw	1
  8767  012C  00C6               	movwf	??___ftadd
  8768  012D  0846               	movf	??___ftadd,w
  8769  012E  07CB               	addwf	___ftadd@exp2,f
  8770  012F                     l2176:	
  8771  012F  084C               	movf	___ftadd@exp1,w
  8772  0130  064B               	xorwf	___ftadd@exp2,w
  8773  0131  1D03               	skipz
  8774  0132  2925               	goto	l2174
  8775  0133                     l704:	
  8776  0133  1FCA               	btfss	___ftadd@sign,7
  8777  0134  2945               	goto	l2180
  8778  0135  30FF               	movlw	255
  8779  0136  06C0               	xorwf	___ftadd@f1,f
  8780  0137  30FF               	movlw	255
  8781  0138  06C1               	xorwf	___ftadd@f1+1,f
  8782  0139  30FF               	movlw	255
  8783  013A  06C2               	xorwf	___ftadd@f1+2,f
  8784  013B  3001               	movlw	1
  8785  013C  07C0               	addwf	___ftadd@f1,f
  8786  013D  3000               	movlw	0
  8787  013E  1803               	skipnc
  8788  013F  3001               	movlw	1
  8789  0140  07C1               	addwf	___ftadd@f1+1,f
  8790  0141  3000               	movlw	0
  8791  0142  1803               	skipnc
  8792  0143  3001               	movlw	1
  8793  0144  07C2               	addwf	___ftadd@f1+2,f
  8794  0145                     l2180:	
  8795  0145  1F4A               	btfss	___ftadd@sign,6
  8796  0146  2957               	goto	l2184
  8797  0147  30FF               	movlw	255
  8798  0148  06C3               	xorwf	___ftadd@f2,f
  8799  0149  30FF               	movlw	255
  8800  014A  06C4               	xorwf	___ftadd@f2+1,f
  8801  014B  30FF               	movlw	255
  8802  014C  06C5               	xorwf	___ftadd@f2+2,f
  8803  014D  3001               	movlw	1
  8804  014E  07C3               	addwf	___ftadd@f2,f
  8805  014F  3000               	movlw	0
  8806  0150  1803               	skipnc
  8807  0151  3001               	movlw	1
  8808  0152  07C4               	addwf	___ftadd@f2+1,f
  8809  0153  3000               	movlw	0
  8810  0154  1803               	skipnc
  8811  0155  3001               	movlw	1
  8812  0156  07C5               	addwf	___ftadd@f2+2,f
  8813  0157                     l2184:	
  8814  0157  01CA               	clrf	___ftadd@sign
  8815  0158  0840               	movf	___ftadd@f1,w
  8816  0159  07C3               	addwf	___ftadd@f2,f
  8817  015A  0841               	movf	___ftadd@f1+1,w
  8818  015B  3DC4               	addwfc	___ftadd@f2+1,f
  8819  015C  0842               	movf	___ftadd@f1+2,w
  8820  015D  3DC5               	addwfc	___ftadd@f2+2,f
  8821  015E  1FC5               	btfss	___ftadd@f2+2,7
  8822  015F  2972               	goto	l2194
  8823  0160  30FF               	movlw	255
  8824  0161  06C3               	xorwf	___ftadd@f2,f
  8825  0162  30FF               	movlw	255
  8826  0163  06C4               	xorwf	___ftadd@f2+1,f
  8827  0164  30FF               	movlw	255
  8828  0165  06C5               	xorwf	___ftadd@f2+2,f
  8829  0166  3001               	movlw	1
  8830  0167  07C3               	addwf	___ftadd@f2,f
  8831  0168  3000               	movlw	0
  8832  0169  1803               	skipnc
  8833  016A  3001               	movlw	1
  8834  016B  07C4               	addwf	___ftadd@f2+1,f
  8835  016C  3000               	movlw	0
  8836  016D  1803               	skipnc
  8837  016E  3001               	movlw	1
  8838  016F  07C5               	addwf	___ftadd@f2+2,f
  8839  0170  01CA               	clrf	___ftadd@sign
  8840  0171  0ACA               	incf	___ftadd@sign,f
  8841  0172                     l2194:	
  8842  0172  0843               	movf	___ftadd@f2,w
  8843  0173  00F0               	movwf	___ftpack@arg
  8844  0174  0844               	movf	___ftadd@f2+1,w
  8845  0175  00F1               	movwf	___ftpack@arg+1
  8846  0176  0845               	movf	___ftadd@f2+2,w
  8847  0177  00F2               	movwf	___ftpack@arg+2
  8848  0178  084C               	movf	___ftadd@exp1,w
  8849  0179  00C6               	movwf	??___ftadd
  8850  017A  0846               	movf	??___ftadd,w
  8851  017B  00F3               	movwf	___ftpack@exp
  8852  017C  084A               	movf	___ftadd@sign,w
  8853  017D  00C7               	movwf	??___ftadd+1
  8854  017E  0847               	movf	??___ftadd+1,w
  8855  017F  00F4               	movwf	___ftpack@sign
  8856  0180  318A  22E3         	fcall	___ftpack
  8857  0182  0870               	movf	?___ftpack,w
  8858  0183  0020               	movlb	0	; select bank0
  8859  0184  00C0               	movwf	?___ftadd
  8860  0185  0871               	movf	?___ftpack+1,w
  8861  0186  00C1               	movwf	?___ftadd+1
  8862  0187  0872               	movf	?___ftpack+2,w
  8863  0188  00C2               	movwf	?___ftadd+2
  8864  0189  0008               	return
  8865  018A                     __end_of___ftadd:	
  8866                           
  8867                           	psect	text11
  8868  0C4F                     __ptext11:	
  8869 ;; *************** function ___ftdiv *****************
  8870 ;; Defined at:
  8871 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;  f2              3   16[BANK0 ] float 
  8874 ;;  f1              3   19[BANK0 ] float 
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;  f3              3   27[BANK0 ] float 
  8877 ;;  sign            1   31[BANK0 ] unsigned char 
  8878 ;;  exp             1   30[BANK0 ] unsigned char 
  8879 ;;  cntr            1   26[BANK0 ] unsigned char 
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  3   16[BANK0 ] float 
  8882 ;; Registers used:
  8883 ;;		wreg, status,2, status,0, pclath, cstack
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8889 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8890 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;Total ram usage:       16 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; Hardware stack levels required when called:    1
  8896 ;; This function calls:
  8897 ;;		___ftpack
  8898 ;; This function is called by:
  8899 ;;		_tempCalc
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           
  8904                           ;psect for function ___ftdiv
  8905  0C4F                     ___ftdiv:	
  8906                           
  8907                           ;incstack = 0
  8908                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8909  0C4F  0020               	movlb	0	; select bank0
  8910  0C50  0833               	movf	___ftdiv@f1,w
  8911  0C51  00B6               	movwf	??___ftdiv
  8912  0C52  0834               	movf	___ftdiv@f1+1,w
  8913  0C53  00B7               	movwf	??___ftdiv+1
  8914  0C54  0835               	movf	___ftdiv@f1+2,w
  8915  0C55  00B8               	movwf	??___ftdiv+2
  8916  0C56  1003               	clrc
  8917  0C57  0D37               	rlf	??___ftdiv+1,w
  8918  0C58  0D38               	rlf	??___ftdiv+2,w
  8919  0C59  00B9               	movwf	??___ftdiv+3
  8920  0C5A  0839               	movf	??___ftdiv+3,w
  8921  0C5B  00BE               	movwf	___ftdiv@exp
  8922  0C5C  083E               	movf	___ftdiv@exp,w
  8923  0C5D  1D03               	btfss	3,2
  8924  0C5E  2C66               	goto	l2726
  8925  0C5F  3000               	movlw	0
  8926  0C60  00B0               	movwf	?___ftdiv
  8927  0C61  3000               	movlw	0
  8928  0C62  00B1               	movwf	?___ftdiv+1
  8929  0C63  3000               	movlw	0
  8930  0C64  00B2               	movwf	?___ftdiv+2
  8931  0C65  0008               	return
  8932  0C66                     l2726:	
  8933  0C66  0830               	movf	___ftdiv@f2,w
  8934  0C67  00B6               	movwf	??___ftdiv
  8935  0C68  0831               	movf	___ftdiv@f2+1,w
  8936  0C69  00B7               	movwf	??___ftdiv+1
  8937  0C6A  0832               	movf	___ftdiv@f2+2,w
  8938  0C6B  00B8               	movwf	??___ftdiv+2
  8939  0C6C  1003               	clrc
  8940  0C6D  0D37               	rlf	??___ftdiv+1,w
  8941  0C6E  0D38               	rlf	??___ftdiv+2,w
  8942  0C6F  00B9               	movwf	??___ftdiv+3
  8943  0C70  0839               	movf	??___ftdiv+3,w
  8944  0C71  00BF               	movwf	___ftdiv@sign
  8945  0C72  083F               	movf	___ftdiv@sign,w
  8946  0C73  1D03               	btfss	3,2
  8947  0C74  2C7C               	goto	l2732
  8948  0C75  3000               	movlw	0
  8949  0C76  00B0               	movwf	?___ftdiv
  8950  0C77  3000               	movlw	0
  8951  0C78  00B1               	movwf	?___ftdiv+1
  8952  0C79  3000               	movlw	0
  8953  0C7A  00B2               	movwf	?___ftdiv+2
  8954  0C7B  0008               	return
  8955  0C7C                     l2732:	
  8956  0C7C  3000               	movlw	0
  8957  0C7D  00BB               	movwf	___ftdiv@f3
  8958  0C7E  3000               	movlw	0
  8959  0C7F  00BC               	movwf	___ftdiv@f3+1
  8960  0C80  3000               	movlw	0
  8961  0C81  00BD               	movwf	___ftdiv@f3+2
  8962  0C82  3089               	movlw	137
  8963  0C83  073F               	addwf	___ftdiv@sign,w
  8964  0C84  00B6               	movwf	??___ftdiv
  8965  0C85  0836               	movf	??___ftdiv,w
  8966  0C86  02BE               	subwf	___ftdiv@exp,f
  8967  0C87  0833               	movf	___ftdiv@f1,w
  8968  0C88  00B6               	movwf	??___ftdiv
  8969  0C89  0834               	movf	___ftdiv@f1+1,w
  8970  0C8A  00B7               	movwf	??___ftdiv+1
  8971  0C8B  0835               	movf	___ftdiv@f1+2,w
  8972  0C8C  00B8               	movwf	??___ftdiv+2
  8973  0C8D  3010               	movlw	16
  8974  0C8E                     u3005:	
  8975  0C8E  36B8               	lsrf	??___ftdiv+2,f
  8976  0C8F  0CB7               	rrf	??___ftdiv+1,f
  8977  0C90  0CB6               	rrf	??___ftdiv,f
  8978  0C91  0B89               	decfsz	9,f
  8979  0C92  2C8E               	goto	u3005
  8980  0C93  0836               	movf	??___ftdiv,w
  8981  0C94  00B9               	movwf	??___ftdiv+3
  8982  0C95  0839               	movf	??___ftdiv+3,w
  8983  0C96  00BF               	movwf	___ftdiv@sign
  8984  0C97  0830               	movf	___ftdiv@f2,w
  8985  0C98  00B6               	movwf	??___ftdiv
  8986  0C99  0831               	movf	___ftdiv@f2+1,w
  8987  0C9A  00B7               	movwf	??___ftdiv+1
  8988  0C9B  0832               	movf	___ftdiv@f2+2,w
  8989  0C9C  00B8               	movwf	??___ftdiv+2
  8990  0C9D  3010               	movlw	16
  8991  0C9E                     u3015:	
  8992  0C9E  36B8               	lsrf	??___ftdiv+2,f
  8993  0C9F  0CB7               	rrf	??___ftdiv+1,f
  8994  0CA0  0CB6               	rrf	??___ftdiv,f
  8995  0CA1  0B89               	decfsz	9,f
  8996  0CA2  2C9E               	goto	u3015
  8997  0CA3  0836               	movf	??___ftdiv,w
  8998  0CA4  00B9               	movwf	??___ftdiv+3
  8999  0CA5  0839               	movf	??___ftdiv+3,w
  9000  0CA6  06BF               	xorwf	___ftdiv@sign,f
  9001  0CA7  3080               	movlw	128
  9002  0CA8  00B6               	movwf	??___ftdiv
  9003  0CA9  0836               	movf	??___ftdiv,w
  9004  0CAA  05BF               	andwf	___ftdiv@sign,f
  9005  0CAB  17B4               	bsf	___ftdiv@f1+1,7
  9006  0CAC  30FF               	movlw	255
  9007  0CAD  05B3               	andwf	___ftdiv@f1,f
  9008  0CAE  30FF               	movlw	255
  9009  0CAF  05B4               	andwf	___ftdiv@f1+1,f
  9010  0CB0  3000               	movlw	0
  9011  0CB1  05B5               	andwf	___ftdiv@f1+2,f
  9012  0CB2  17B1               	bsf	___ftdiv@f2+1,7
  9013  0CB3  30FF               	movlw	255
  9014  0CB4  05B0               	andwf	___ftdiv@f2,f
  9015  0CB5  30FF               	movlw	255
  9016  0CB6  05B1               	andwf	___ftdiv@f2+1,f
  9017  0CB7  3000               	movlw	0
  9018  0CB8  05B2               	andwf	___ftdiv@f2+2,f
  9019  0CB9  3018               	movlw	24
  9020  0CBA  00B6               	movwf	??___ftdiv
  9021  0CBB  0836               	movf	??___ftdiv,w
  9022  0CBC  00BA               	movwf	___ftdiv@cntr
  9023  0CBD                     l2746:	
  9024  0CBD  3001               	movlw	1
  9025  0CBE                     u3025:	
  9026  0CBE  35BB               	lslf	___ftdiv@f3,f
  9027  0CBF  0DBC               	rlf	___ftdiv@f3+1,f
  9028  0CC0  0DBD               	rlf	___ftdiv@f3+2,f
  9029  0CC1  0B89               	decfsz	9,f
  9030  0CC2  2CBE               	goto	u3025
  9031  0CC3  0832               	movf	___ftdiv@f2+2,w
  9032  0CC4  0235               	subwf	___ftdiv@f1+2,w
  9033  0CC5  1D03               	skipz
  9034  0CC6  2CCD               	goto	u3035
  9035  0CC7  0831               	movf	___ftdiv@f2+1,w
  9036  0CC8  0234               	subwf	___ftdiv@f1+1,w
  9037  0CC9  1D03               	skipz
  9038  0CCA  2CCD               	goto	u3035
  9039  0CCB  0830               	movf	___ftdiv@f2,w
  9040  0CCC  0233               	subwf	___ftdiv@f1,w
  9041  0CCD                     u3035:	
  9042  0CCD  1C03               	skipc
  9043  0CCE  2CD6               	goto	l2754
  9044  0CCF  0830               	movf	___ftdiv@f2,w
  9045  0CD0  02B3               	subwf	___ftdiv@f1,f
  9046  0CD1  0831               	movf	___ftdiv@f2+1,w
  9047  0CD2  3BB4               	subwfb	___ftdiv@f1+1,f
  9048  0CD3  0832               	movf	___ftdiv@f2+2,w
  9049  0CD4  3BB5               	subwfb	___ftdiv@f1+2,f
  9050  0CD5  143B               	bsf	___ftdiv@f3,0
  9051  0CD6                     l2754:	
  9052  0CD6  3001               	movlw	1
  9053  0CD7                     u3045:	
  9054  0CD7  35B3               	lslf	___ftdiv@f1,f
  9055  0CD8  0DB4               	rlf	___ftdiv@f1+1,f
  9056  0CD9  0DB5               	rlf	___ftdiv@f1+2,f
  9057  0CDA  0B89               	decfsz	9,f
  9058  0CDB  2CD7               	goto	u3045
  9059  0CDC  3001               	movlw	1
  9060  0CDD  02BA               	subwf	___ftdiv@cntr,f
  9061  0CDE  1D03               	btfss	3,2
  9062  0CDF  2CBD               	goto	l2746
  9063  0CE0  083B               	movf	___ftdiv@f3,w
  9064  0CE1  00F0               	movwf	___ftpack@arg
  9065  0CE2  083C               	movf	___ftdiv@f3+1,w
  9066  0CE3  00F1               	movwf	___ftpack@arg+1
  9067  0CE4  083D               	movf	___ftdiv@f3+2,w
  9068  0CE5  00F2               	movwf	___ftpack@arg+2
  9069  0CE6  083E               	movf	___ftdiv@exp,w
  9070  0CE7  00B6               	movwf	??___ftdiv
  9071  0CE8  0836               	movf	??___ftdiv,w
  9072  0CE9  00F3               	movwf	___ftpack@exp
  9073  0CEA  083F               	movf	___ftdiv@sign,w
  9074  0CEB  00B7               	movwf	??___ftdiv+1
  9075  0CEC  0837               	movf	??___ftdiv+1,w
  9076  0CED  00F4               	movwf	___ftpack@sign
  9077  0CEE  318A  22E3         	fcall	___ftpack
  9078  0CF0  0870               	movf	?___ftpack,w
  9079  0CF1  0020               	movlb	0	; select bank0
  9080  0CF2  00B0               	movwf	?___ftdiv
  9081  0CF3  0871               	movf	?___ftpack+1,w
  9082  0CF4  00B1               	movwf	?___ftdiv+1
  9083  0CF5  0872               	movf	?___ftpack+2,w
  9084  0CF6  00B2               	movwf	?___ftdiv+2
  9085  0CF7  0008               	return
  9086  0CF8                     __end_of___ftdiv:	
  9087                           
  9088                           	psect	text12
  9089  0AE3                     __ptext12:	
  9090 ;; *************** function ___ftpack *****************
  9091 ;; Defined at:
  9092 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;  arg             3    0[COMMON] unsigned um
  9095 ;;  exp             1    3[COMMON] unsigned char 
  9096 ;;  sign            1    4[COMMON] unsigned char 
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;		None
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  3    0[COMMON] float 
  9101 ;; Registers used:
  9102 ;;		wreg, status,2, status,0
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9108 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9110 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9111 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;Total ram usage:        8 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; This function calls:
  9115 ;;		Nothing
  9116 ;; This function is called by:
  9117 ;;		___awtoft
  9118 ;;		___ftadd
  9119 ;;		___ftdiv
  9120 ;;		___ftmul
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           
  9125                           ;psect for function ___ftpack
  9126  0AE3                     ___ftpack:	
  9127                           
  9128                           ;incstack = 0
  9129                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9130  0AE3  0873               	movf	___ftpack@exp,w
  9131  0AE4  1903               	btfsc	3,2
  9132  0AE5  2AEB               	goto	l2070
  9133  0AE6  0872               	movf	___ftpack@arg+2,w
  9134  0AE7  0471               	iorwf	___ftpack@arg+1,w
  9135  0AE8  0470               	iorwf	___ftpack@arg,w
  9136  0AE9  1D03               	skipz
  9137  0AEA  2AFC               	goto	l2076
  9138  0AEB                     l2070:	
  9139  0AEB  3000               	movlw	0
  9140  0AEC  00F0               	movwf	?___ftpack
  9141  0AED  3000               	movlw	0
  9142  0AEE  00F1               	movwf	?___ftpack+1
  9143  0AEF  3000               	movlw	0
  9144  0AF0  00F2               	movwf	?___ftpack+2
  9145  0AF1  0008               	return
  9146  0AF2                     l2074:	
  9147  0AF2  3001               	movlw	1
  9148  0AF3  00F5               	movwf	??___ftpack
  9149  0AF4  0875               	movf	??___ftpack,w
  9150  0AF5  07F3               	addwf	___ftpack@exp,f
  9151  0AF6  3001               	movlw	1
  9152  0AF7                     u1845:	
  9153  0AF7  36F2               	lsrf	___ftpack@arg+2,f
  9154  0AF8  0CF1               	rrf	___ftpack@arg+1,f
  9155  0AF9  0CF0               	rrf	___ftpack@arg,f
  9156  0AFA  0B89               	decfsz	9,f
  9157  0AFB  2AF7               	goto	u1845
  9158  0AFC                     l2076:	
  9159  0AFC  30FE               	movlw	254
  9160  0AFD  0572               	andwf	___ftpack@arg+2,w
  9161  0AFE  1903               	btfsc	3,2
  9162  0AFF  2B15               	goto	l673
  9163  0B00  2AF2               	goto	l2074
  9164  0B01                     l2078:	
  9165  0B01  3001               	movlw	1
  9166  0B02  00F5               	movwf	??___ftpack
  9167  0B03  0875               	movf	??___ftpack,w
  9168  0B04  07F3               	addwf	___ftpack@exp,f
  9169  0B05  3001               	movlw	1
  9170  0B06  07F0               	addwf	___ftpack@arg,f
  9171  0B07  3000               	movlw	0
  9172  0B08  1803               	skipnc
  9173  0B09  3001               	movlw	1
  9174  0B0A  07F1               	addwf	___ftpack@arg+1,f
  9175  0B0B  3000               	movlw	0
  9176  0B0C  1803               	skipnc
  9177  0B0D  3001               	movlw	1
  9178  0B0E  07F2               	addwf	___ftpack@arg+2,f
  9179  0B0F  3001               	movlw	1
  9180  0B10                     u1865:	
  9181  0B10  36F2               	lsrf	___ftpack@arg+2,f
  9182  0B11  0CF1               	rrf	___ftpack@arg+1,f
  9183  0B12  0CF0               	rrf	___ftpack@arg,f
  9184  0B13  0B89               	decfsz	9,f
  9185  0B14  2B10               	goto	u1865
  9186  0B15                     l673:	
  9187  0B15  30FF               	movlw	255
  9188  0B16  0572               	andwf	___ftpack@arg+2,w
  9189  0B17  1903               	btfsc	3,2
  9190  0B18  2B22               	goto	l2086
  9191  0B19  2B01               	goto	l2078
  9192  0B1A                     l2084:	
  9193  0B1A  3001               	movlw	1
  9194  0B1B  02F3               	subwf	___ftpack@exp,f
  9195  0B1C  3001               	movlw	1
  9196  0B1D                     u1885:	
  9197  0B1D  35F0               	lslf	___ftpack@arg,f
  9198  0B1E  0DF1               	rlf	___ftpack@arg+1,f
  9199  0B1F  0DF2               	rlf	___ftpack@arg+2,f
  9200  0B20  0B89               	decfsz	9,f
  9201  0B21  2B1D               	goto	u1885
  9202  0B22                     l2086:	
  9203  0B22  1BF1               	btfsc	___ftpack@arg+1,7
  9204  0B23  2B28               	goto	l680
  9205  0B24  3002               	movlw	2
  9206  0B25  0273               	subwf	___ftpack@exp,w
  9207  0B26  1803               	skipnc
  9208  0B27  2B1A               	goto	l2084
  9209  0B28                     l680:	
  9210  0B28  1873               	btfsc	___ftpack@exp,0
  9211  0B29  2B30               	goto	l681
  9212  0B2A  30FF               	movlw	255
  9213  0B2B  05F0               	andwf	___ftpack@arg,f
  9214  0B2C  307F               	movlw	127
  9215  0B2D  05F1               	andwf	___ftpack@arg+1,f
  9216  0B2E  30FF               	movlw	255
  9217  0B2F  05F2               	andwf	___ftpack@arg+2,f
  9218  0B30                     l681:	
  9219  0B30  1003               	clrc
  9220  0B31  0CF3               	rrf	___ftpack@exp,f
  9221  0B32  0873               	movf	___ftpack@exp,w
  9222  0B33  00F5               	movwf	??___ftpack
  9223  0B34  01F6               	clrf	??___ftpack+1
  9224  0B35  01F7               	clrf	??___ftpack+2
  9225  0B36  3010               	movlw	16
  9226  0B37                     u1925:	
  9227  0B37  35F5               	lslf	??___ftpack,f
  9228  0B38  0DF6               	rlf	??___ftpack+1,f
  9229  0B39  0DF7               	rlf	??___ftpack+2,f
  9230  0B3A  0B89               	decfsz	9,f
  9231  0B3B  2B37               	goto	u1925
  9232  0B3C  0875               	movf	??___ftpack,w
  9233  0B3D  04F0               	iorwf	___ftpack@arg,f
  9234  0B3E  0876               	movf	??___ftpack+1,w
  9235  0B3F  04F1               	iorwf	___ftpack@arg+1,f
  9236  0B40  0877               	movf	??___ftpack+2,w
  9237  0B41  04F2               	iorwf	___ftpack@arg+2,f
  9238  0B42  0874               	movf	___ftpack@sign,w
  9239  0B43  1903               	btfsc	3,2
  9240  0B44  0008               	return
  9241  0B45  17F2               	bsf	___ftpack@arg+2,7
  9242  0B46  0008               	return
  9243  0B47                     __end_of___ftpack:	
  9244                           
  9245                           	psect	text13
  9246  02A7                     __ptext13:	
  9247 ;; *************** function _readAnalog *****************
  9248 ;; Defined at:
  9249 ;;		line 34 in file "adc.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;  channel         2    6[BANK0 ] int 
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;  value           2   11[COMMON] int 
  9254 ;;  analog_chann    2    9[COMMON] int 
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  2    6[BANK0 ] int 
  9257 ;; Registers used:
  9258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9267 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9268 ;;Total ram usage:       22 bytes
  9269 ;; Hardware stack levels used:    1
  9270 ;; Hardware stack levels required when called:    1
  9271 ;; This function calls:
  9272 ;;		_ADCRead
  9273 ;;		___aldiv
  9274 ;;		___wmul
  9275 ;; This function is called by:
  9276 ;;		_main
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           
  9281                           ;psect for function _readAnalog
  9282  02A7                     _readAnalog:	
  9283                           
  9284                           ;adc.c: 36: int value;
  9285                           ;adc.c: 38: int analog_channel = channels[channel];
  9286                           
  9287                           ;incstack = 0
  9288                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9289  02A7  0020               	movlb	0	; select bank0
  9290  02A8  3526               	lslf	readAnalog@channel,w
  9291  02A9  3EB0               	addlw	(low (_channels| (0+256)))& (0+255)
  9292  02AA  0086               	movwf	6
  9293  02AB  3001               	movlw	1	; select bank3/4
  9294  02AC  0087               	movwf	7
  9295  02AD  3F40               	moviw [0]fsr1
  9296  02AE  00F9               	movwf	readAnalog@analog_channel
  9297  02AF  3F41               	moviw [1]fsr1
  9298  02B0  00FA               	movwf	readAnalog@analog_channel+1
  9299                           
  9300                           ;adc.c: 40: value = ADCRead(analog_channel);
  9301  02B1  0879               	movf	readAnalog@analog_channel,w
  9302  02B2  3197  275E  3182   	fcall	_ADCRead
  9303  02B5  0871               	movf	?_ADCRead+1,w
  9304  02B6  00FC               	movwf	readAnalog@value+1
  9305  02B7  0870               	movf	?_ADCRead,w
  9306  02B8  00FB               	movwf	readAnalog@value
  9307                           
  9308                           ;adc.c: 42: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9309  02B9  0020               	movlb	0	; select bank0
  9310  02BA  0826               	movf	readAnalog@channel,w
  9311  02BB  00A8               	movwf	??_readAnalog
  9312  02BC  3001               	movlw	1
  9313  02BD                     u3175:	
  9314  02BD  35A8               	lslf	??_readAnalog,f
  9315  02BE  3EFF               	addlw	-1
  9316  02BF  1D03               	skipz
  9317  02C0  2ABD               	goto	u3175
  9318  02C1  3528               	lslf	??_readAnalog,w
  9319  02C2  3EC0               	addlw	(low (_totals| (0+256)))& (0+255)
  9320  02C3  0086               	movwf	6
  9321  02C4  3001               	movlw	1	; select bank3/4
  9322  02C5  0087               	movwf	7
  9323  02C6  3F40               	moviw [0]fsr1
  9324  02C7  00A9               	movwf	??_readAnalog+1
  9325  02C8  3F41               	moviw [1]fsr1
  9326  02C9  00AA               	movwf	??_readAnalog+2
  9327  02CA  3F42               	moviw [2]fsr1
  9328  02CB  00AB               	movwf	??_readAnalog+3
  9329  02CC  3F43               	moviw [3]fsr1
  9330  02CD  00AC               	movwf	??_readAnalog+4
  9331  02CE  0021               	movlb	1	; select bank1
  9332  02CF  0856               	movf	(_sampleIndex+1)^(0+128),w
  9333  02D0  0020               	movlb	0	; select bank0
  9334  02D1  00AE               	movwf	??_readAnalog+6
  9335  02D2  0021               	movlb	1	; select bank1
  9336  02D3  0855               	movf	_sampleIndex^(0+128),w
  9337  02D4  0020               	movlb	0	; select bank0
  9338  02D5  00AD               	movwf	??_readAnalog+5
  9339  02D6  35AD               	lslf	??_readAnalog+5,f
  9340  02D7  0DAE               	rlf	??_readAnalog+6,f
  9341  02D8  0827               	movf	readAnalog@channel+1,w
  9342  02D9  00F1               	movwf	___wmul@multiplier+1
  9343  02DA  0826               	movf	readAnalog@channel,w
  9344  02DB  00F0               	movwf	___wmul@multiplier
  9345  02DC  3050               	movlw	80
  9346  02DD  00F2               	movwf	___wmul@multiplicand
  9347  02DE  3000               	movlw	0
  9348  02DF  00F3               	movwf	___wmul@multiplicand+1
  9349  02E0  3197  27E5  3182   	fcall	___wmul
  9350  02E3  3050               	movlw	80
  9351  02E4  0020               	movlb	0	; select bank0
  9352  02E5  00AF               	movwf	??_readAnalog+7
  9353  02E6  3023               	movlw	35
  9354  02E7  00B0               	movwf	??_readAnalog+8
  9355  02E8  0870               	movf	?___wmul,w
  9356  02E9  072F               	addwf	??_readAnalog+7,w
  9357  02EA  00B1               	movwf	??_readAnalog+9
  9358  02EB  0871               	movf	?___wmul+1,w
  9359  02EC  3D30               	addwfc	??_readAnalog+8,w
  9360  02ED  00B2               	movwf	??_readAnalog+10
  9361  02EE  0831               	movf	??_readAnalog+9,w
  9362  02EF  072D               	addwf	??_readAnalog+5,w
  9363  02F0  0084               	movwf	4
  9364  02F1  0832               	movf	??_readAnalog+10,w
  9365  02F2  3D2E               	addwfc	??_readAnalog+6,w
  9366  02F3  0085               	movwf	5
  9367  02F4  3F00               	moviw [0]fsr0
  9368  02F5  00B3               	movwf	??_readAnalog+11
  9369  02F6  3F01               	moviw [1]fsr0
  9370  02F7  00B4               	movwf	??_readAnalog+12
  9371  02F8  01B5               	clrf	??_readAnalog+13
  9372  02F9  01B6               	clrf	??_readAnalog+14
  9373  02FA  09B3               	comf	??_readAnalog+11,f
  9374  02FB  09B4               	comf	??_readAnalog+12,f
  9375  02FC  09B5               	comf	??_readAnalog+13,f
  9376  02FD  09B6               	comf	??_readAnalog+14,f
  9377  02FE  0AB3               	incf	??_readAnalog+11,f
  9378  02FF  1903               	skipnz
  9379  0300  0AB4               	incf	??_readAnalog+12,f
  9380  0301  1903               	skipnz
  9381  0302  0AB5               	incf	??_readAnalog+13,f
  9382  0303  1903               	skipnz
  9383  0304  0AB6               	incf	??_readAnalog+14,f
  9384  0305  0833               	movf	??_readAnalog+11,w
  9385  0306  07A9               	addwf	??_readAnalog+1,f
  9386  0307  0834               	movf	??_readAnalog+12,w
  9387  0308  3DAA               	addwfc	??_readAnalog+2,f
  9388  0309  0835               	movf	??_readAnalog+13,w
  9389  030A  3DAB               	addwfc	??_readAnalog+3,f
  9390  030B  0836               	movf	??_readAnalog+14,w
  9391  030C  3DAC               	addwfc	??_readAnalog+4,f
  9392  030D  0826               	movf	readAnalog@channel,w
  9393  030E  00B7               	movwf	??_readAnalog+15
  9394  030F  3001               	movlw	1
  9395  0310                     u3185:	
  9396  0310  35B7               	lslf	??_readAnalog+15,f
  9397  0311  3EFF               	addlw	-1
  9398  0312  1D03               	skipz
  9399  0313  2B10               	goto	u3185
  9400  0314  3537               	lslf	??_readAnalog+15,w
  9401  0315  3EC0               	addlw	(low (_totals| (0+256)))& (0+255)
  9402  0316  0086               	movwf	6
  9403  0317  3001               	movlw	1	; select bank3/4
  9404  0318  0087               	movwf	7
  9405  0319  0829               	movf	??_readAnalog+1,w
  9406  031A  3FC0               	movwi [0]fsr1
  9407  031B  082A               	movf	??_readAnalog+2,w
  9408  031C  3FC1               	movwi [1]fsr1
  9409  031D  082B               	movf	??_readAnalog+3,w
  9410  031E  3FC2               	movwi [2]fsr1
  9411  031F  082C               	movf	??_readAnalog+4,w
  9412  0320  3FC3               	movwi [3]fsr1
  9413                           
  9414                           ;adc.c: 44: samples[channel][sampleIndex] = value;
  9415  0321  0021               	movlb	1	; select bank1
  9416  0322  0856               	movf	(_sampleIndex+1)^(0+128),w
  9417  0323  0020               	movlb	0	; select bank0
  9418  0324  00A9               	movwf	??_readAnalog+1
  9419  0325  0021               	movlb	1	; select bank1
  9420  0326  0855               	movf	_sampleIndex^(0+128),w
  9421  0327  0020               	movlb	0	; select bank0
  9422  0328  00A8               	movwf	??_readAnalog
  9423  0329  35A8               	lslf	??_readAnalog,f
  9424  032A  0DA9               	rlf	??_readAnalog+1,f
  9425  032B  0827               	movf	readAnalog@channel+1,w
  9426  032C  00F1               	movwf	___wmul@multiplier+1
  9427  032D  0826               	movf	readAnalog@channel,w
  9428  032E  00F0               	movwf	___wmul@multiplier
  9429  032F  3050               	movlw	80
  9430  0330  00F2               	movwf	___wmul@multiplicand
  9431  0331  3000               	movlw	0
  9432  0332  00F3               	movwf	___wmul@multiplicand+1
  9433  0333  3197  27E5  3182   	fcall	___wmul
  9434  0336  3050               	movlw	80
  9435  0337  0020               	movlb	0	; select bank0
  9436  0338  00AA               	movwf	??_readAnalog+2
  9437  0339  3023               	movlw	35
  9438  033A  00AB               	movwf	??_readAnalog+3
  9439  033B  0870               	movf	?___wmul,w
  9440  033C  072A               	addwf	??_readAnalog+2,w
  9441  033D  00AC               	movwf	??_readAnalog+4
  9442  033E  0871               	movf	?___wmul+1,w
  9443  033F  3D2B               	addwfc	??_readAnalog+3,w
  9444  0340  00AD               	movwf	??_readAnalog+5
  9445  0341  0828               	movf	??_readAnalog,w
  9446  0342  072C               	addwf	??_readAnalog+4,w
  9447  0343  0086               	movwf	6
  9448  0344  0829               	movf	??_readAnalog+1,w
  9449  0345  3D2D               	addwfc	??_readAnalog+5,w
  9450  0346  0087               	movwf	7
  9451  0347  087B               	movf	readAnalog@value,w
  9452  0348  3FC0               	movwi [0]fsr1
  9453  0349  087C               	movf	readAnalog@value+1,w
  9454  034A  3FC1               	movwi [1]fsr1
  9455                           
  9456                           ;adc.c: 46: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9457  034B  0826               	movf	readAnalog@channel,w
  9458  034C  00A8               	movwf	??_readAnalog
  9459  034D  3001               	movlw	1
  9460  034E                     u3195:	
  9461  034E  35A8               	lslf	??_readAnalog,f
  9462  034F  3EFF               	addlw	-1
  9463  0350  1D03               	skipz
  9464  0351  2B4E               	goto	u3195
  9465  0352  3528               	lslf	??_readAnalog,w
  9466  0353  3EC0               	addlw	(low (_totals| (0+256)))& (0+255)
  9467  0354  0086               	movwf	6
  9468  0355  3001               	movlw	1	; select bank3/4
  9469  0356  0087               	movwf	7
  9470  0357  3F40               	moviw [0]fsr1
  9471  0358  00A9               	movwf	??_readAnalog+1
  9472  0359  3F41               	moviw [1]fsr1
  9473  035A  00AA               	movwf	??_readAnalog+2
  9474  035B  3F42               	moviw [2]fsr1
  9475  035C  00AB               	movwf	??_readAnalog+3
  9476  035D  3F43               	moviw [3]fsr1
  9477  035E  00AC               	movwf	??_readAnalog+4
  9478  035F  0021               	movlb	1	; select bank1
  9479  0360  0856               	movf	(_sampleIndex+1)^(0+128),w
  9480  0361  0020               	movlb	0	; select bank0
  9481  0362  00AE               	movwf	??_readAnalog+6
  9482  0363  0021               	movlb	1	; select bank1
  9483  0364  0855               	movf	_sampleIndex^(0+128),w
  9484  0365  0020               	movlb	0	; select bank0
  9485  0366  00AD               	movwf	??_readAnalog+5
  9486  0367  35AD               	lslf	??_readAnalog+5,f
  9487  0368  0DAE               	rlf	??_readAnalog+6,f
  9488  0369  0827               	movf	readAnalog@channel+1,w
  9489  036A  00F1               	movwf	___wmul@multiplier+1
  9490  036B  0826               	movf	readAnalog@channel,w
  9491  036C  00F0               	movwf	___wmul@multiplier
  9492  036D  3050               	movlw	80
  9493  036E  00F2               	movwf	___wmul@multiplicand
  9494  036F  3000               	movlw	0
  9495  0370  00F3               	movwf	___wmul@multiplicand+1
  9496  0371  3197  27E5  3182   	fcall	___wmul
  9497  0374  3050               	movlw	80
  9498  0375  0020               	movlb	0	; select bank0
  9499  0376  00AF               	movwf	??_readAnalog+7
  9500  0377  3023               	movlw	35
  9501  0378  00B0               	movwf	??_readAnalog+8
  9502  0379  0870               	movf	?___wmul,w
  9503  037A  072F               	addwf	??_readAnalog+7,w
  9504  037B  00B1               	movwf	??_readAnalog+9
  9505  037C  0871               	movf	?___wmul+1,w
  9506  037D  3D30               	addwfc	??_readAnalog+8,w
  9507  037E  00B2               	movwf	??_readAnalog+10
  9508  037F  0831               	movf	??_readAnalog+9,w
  9509  0380  072D               	addwf	??_readAnalog+5,w
  9510  0381  0084               	movwf	4
  9511  0382  0832               	movf	??_readAnalog+10,w
  9512  0383  3D2E               	addwfc	??_readAnalog+6,w
  9513  0384  0085               	movwf	5
  9514  0385  3F00               	moviw [0]fsr0
  9515  0386  00B3               	movwf	??_readAnalog+11
  9516  0387  3F01               	moviw [1]fsr0
  9517  0388  00B4               	movwf	??_readAnalog+12
  9518  0389  01B5               	clrf	??_readAnalog+13
  9519  038A  01B6               	clrf	??_readAnalog+14
  9520  038B  0833               	movf	??_readAnalog+11,w
  9521  038C  07A9               	addwf	??_readAnalog+1,f
  9522  038D  0834               	movf	??_readAnalog+12,w
  9523  038E  3DAA               	addwfc	??_readAnalog+2,f
  9524  038F  0835               	movf	??_readAnalog+13,w
  9525  0390  3DAB               	addwfc	??_readAnalog+3,f
  9526  0391  0836               	movf	??_readAnalog+14,w
  9527  0392  3DAC               	addwfc	??_readAnalog+4,f
  9528  0393  0826               	movf	readAnalog@channel,w
  9529  0394  00B7               	movwf	??_readAnalog+15
  9530  0395  3001               	movlw	1
  9531  0396                     u3205:	
  9532  0396  35B7               	lslf	??_readAnalog+15,f
  9533  0397  3EFF               	addlw	-1
  9534  0398  1D03               	skipz
  9535  0399  2B96               	goto	u3205
  9536  039A  3537               	lslf	??_readAnalog+15,w
  9537  039B  3EC0               	addlw	(low (_totals| (0+256)))& (0+255)
  9538  039C  0086               	movwf	6
  9539  039D  3001               	movlw	1	; select bank3/4
  9540  039E  0087               	movwf	7
  9541  039F  0829               	movf	??_readAnalog+1,w
  9542  03A0  3FC0               	movwi [0]fsr1
  9543  03A1  082A               	movf	??_readAnalog+2,w
  9544  03A2  3FC1               	movwi [1]fsr1
  9545  03A3  082B               	movf	??_readAnalog+3,w
  9546  03A4  3FC2               	movwi [2]fsr1
  9547  03A5  082C               	movf	??_readAnalog+4,w
  9548  03A6  3FC3               	movwi [3]fsr1
  9549                           
  9550                           ;adc.c: 48: if(channel>=(2-1))
  9551  03A7  0827               	movf	readAnalog@channel+1,w
  9552  03A8  3A80               	xorlw	128
  9553  03A9  00A8               	movwf	??_readAnalog
  9554  03AA  3080               	movlw	128
  9555  03AB  0228               	subwf	??_readAnalog,w
  9556  03AC  1D03               	skipz
  9557  03AD  2BB0               	goto	u3215
  9558  03AE  3001               	movlw	1
  9559  03AF  0226               	subwf	readAnalog@channel,w
  9560  03B0                     u3215:	
  9561  03B0  1C03               	skipc
  9562  03B1  2BC0               	goto	l2826
  9563                           
  9564                           ;adc.c: 49: {
  9565                           ;adc.c: 50: sampleIndex+=1;
  9566  03B2  3001               	movlw	1
  9567  03B3  0021               	movlb	1	; select bank1
  9568  03B4  07D5               	addwf	_sampleIndex^(0+128),f
  9569  03B5  3000               	movlw	0
  9570  03B6  3DD6               	addwfc	(_sampleIndex+1)^(0+128),f
  9571                           
  9572                           ;adc.c: 51: if(sampleIndex >= 40)sampleIndex = 0;
  9573  03B7  3000               	movlw	0
  9574  03B8  0256               	subwf	(_sampleIndex+1)^(0+128),w
  9575  03B9  3028               	movlw	40
  9576  03BA  1903               	skipnz
  9577  03BB  0255               	subwf	_sampleIndex^(0+128),w
  9578  03BC  1C03               	skipc
  9579  03BD  2BC0               	goto	l2826
  9580  03BE  01D5               	clrf	_sampleIndex^(0+128)
  9581  03BF  01D6               	clrf	(_sampleIndex+1)^(0+128)
  9582  03C0                     l2826:	
  9583                           
  9584                           ;adc.c: 52: }
  9585                           ;adc.c: 54: value = totals[channel]/40;
  9586  03C0  3000               	movlw	0
  9587  03C1  00F3               	movwf	___aldiv@divisor+3
  9588  03C2  3000               	movlw	0
  9589  03C3  00F2               	movwf	___aldiv@divisor+2
  9590  03C4  3000               	movlw	0
  9591  03C5  00F1               	movwf	___aldiv@divisor+1
  9592  03C6  3028               	movlw	40
  9593  03C7  00F0               	movwf	___aldiv@divisor
  9594  03C8  0020               	movlb	0	; select bank0
  9595  03C9  0826               	movf	readAnalog@channel,w
  9596  03CA  00A8               	movwf	??_readAnalog
  9597  03CB  3001               	movlw	1
  9598  03CC                     u3235:	
  9599  03CC  35A8               	lslf	??_readAnalog,f
  9600  03CD  3EFF               	addlw	-1
  9601  03CE  1D03               	skipz
  9602  03CF  2BCC               	goto	u3235
  9603  03D0  3528               	lslf	??_readAnalog,w
  9604  03D1  3EC0               	addlw	(low (_totals| (0+256)))& (0+255)
  9605  03D2  0086               	movwf	6
  9606  03D3  3001               	movlw	1	; select bank3/4
  9607  03D4  0087               	movwf	7
  9608  03D5  3F40               	moviw [0]fsr1
  9609  03D6  00F4               	movwf	___aldiv@dividend
  9610  03D7  3F41               	moviw [1]fsr1
  9611  03D8  00F5               	movwf	___aldiv@dividend+1
  9612  03D9  3F42               	moviw [2]fsr1
  9613  03DA  00F6               	movwf	___aldiv@dividend+2
  9614  03DB  3F43               	moviw [3]fsr1
  9615  03DC  00F7               	movwf	___aldiv@dividend+3
  9616  03DD  318B  2347         	fcall	___aldiv
  9617  03DF  0871               	movf	?___aldiv+1,w
  9618  03E0  00FC               	movwf	readAnalog@value+1
  9619  03E1  0870               	movf	?___aldiv,w
  9620  03E2  00FB               	movwf	readAnalog@value
  9621                           
  9622                           ;adc.c: 56: return value;
  9623  03E3  087C               	movf	readAnalog@value+1,w
  9624  03E4  0020               	movlb	0	; select bank0
  9625  03E5  00A7               	movwf	?_readAnalog+1
  9626  03E6  087B               	movf	readAnalog@value,w
  9627  03E7  00A6               	movwf	?_readAnalog
  9628  03E8  0008               	return
  9629  03E9                     __end_of_readAnalog:	
  9630                           
  9631                           	psect	text14
  9632  0B47                     __ptext14:	
  9633 ;; *************** function ___aldiv *****************
  9634 ;; Defined at:
  9635 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  divisor         4    0[COMMON] long 
  9638 ;;  dividend        4    4[COMMON] long 
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;  quotient        4    2[BANK0 ] long 
  9641 ;;  sign            1    1[BANK0 ] unsigned char 
  9642 ;;  counter         1    0[BANK0 ] unsigned char 
  9643 ;; Return value:  Size  Location     Type
  9644 ;;                  4    0[COMMON] long 
  9645 ;; Registers used:
  9646 ;;		wreg, status,2, status,0
  9647 ;; Tracked objects:
  9648 ;;		On entry : 0/0
  9649 ;;		On exit  : 0/0
  9650 ;;		Unchanged: 0/0
  9651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9652 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9653 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;Total ram usage:       15 bytes
  9657 ;; Hardware stack levels used:    1
  9658 ;; This function calls:
  9659 ;;		Nothing
  9660 ;; This function is called by:
  9661 ;;		_readAnalog
  9662 ;;		_main
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           
  9667                           ;psect for function ___aldiv
  9668  0B47                     ___aldiv:	
  9669                           
  9670                           ;incstack = 0
  9671                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9672  0B47  0020               	movlb	0	; select bank0
  9673  0B48  01A1               	clrf	___aldiv@sign
  9674  0B49  1FF3               	btfss	___aldiv@divisor+3,7
  9675  0B4A  2B58               	goto	l567
  9676  0B4B  09F0               	comf	___aldiv@divisor,f
  9677  0B4C  09F1               	comf	___aldiv@divisor+1,f
  9678  0B4D  09F2               	comf	___aldiv@divisor+2,f
  9679  0B4E  09F3               	comf	___aldiv@divisor+3,f
  9680  0B4F  0AF0               	incf	___aldiv@divisor,f
  9681  0B50  1903               	skipnz
  9682  0B51  0AF1               	incf	___aldiv@divisor+1,f
  9683  0B52  1903               	skipnz
  9684  0B53  0AF2               	incf	___aldiv@divisor+2,f
  9685  0B54  1903               	skipnz
  9686  0B55  0AF3               	incf	___aldiv@divisor+3,f
  9687  0B56  01A1               	clrf	___aldiv@sign
  9688  0B57  0AA1               	incf	___aldiv@sign,f
  9689  0B58                     l567:	
  9690  0B58  1FF7               	btfss	___aldiv@dividend+3,7
  9691  0B59  2B69               	goto	l2690
  9692  0B5A  09F4               	comf	___aldiv@dividend,f
  9693  0B5B  09F5               	comf	___aldiv@dividend+1,f
  9694  0B5C  09F6               	comf	___aldiv@dividend+2,f
  9695  0B5D  09F7               	comf	___aldiv@dividend+3,f
  9696  0B5E  0AF4               	incf	___aldiv@dividend,f
  9697  0B5F  1903               	skipnz
  9698  0B60  0AF5               	incf	___aldiv@dividend+1,f
  9699  0B61  1903               	skipnz
  9700  0B62  0AF6               	incf	___aldiv@dividend+2,f
  9701  0B63  1903               	skipnz
  9702  0B64  0AF7               	incf	___aldiv@dividend+3,f
  9703  0B65  3001               	movlw	1
  9704  0B66  00F8               	movwf	??___aldiv
  9705  0B67  0878               	movf	??___aldiv,w
  9706  0B68  06A1               	xorwf	___aldiv@sign,f
  9707  0B69                     l2690:	
  9708  0B69  3000               	movlw	0
  9709  0B6A  00A5               	movwf	___aldiv@quotient+3
  9710  0B6B  3000               	movlw	0
  9711  0B6C  00A4               	movwf	___aldiv@quotient+2
  9712  0B6D  3000               	movlw	0
  9713  0B6E  00A3               	movwf	___aldiv@quotient+1
  9714  0B6F  3000               	movlw	0
  9715  0B70  00A2               	movwf	___aldiv@quotient
  9716  0B71  0873               	movf	___aldiv@divisor+3,w
  9717  0B72  0472               	iorwf	___aldiv@divisor+2,w
  9718  0B73  0471               	iorwf	___aldiv@divisor+1,w
  9719  0B74  0470               	iorwf	___aldiv@divisor,w
  9720  0B75  1903               	skipnz
  9721  0B76  2BB2               	goto	l2712
  9722  0B77  01A0               	clrf	___aldiv@counter
  9723  0B78  0AA0               	incf	___aldiv@counter,f
  9724  0B79                     l2698:	
  9725  0B79  1BF3               	btfsc	___aldiv@divisor+3,7
  9726  0B7A  2B87               	goto	l2700
  9727  0B7B  3001               	movlw	1
  9728  0B7C                     u2915:	
  9729  0B7C  35F0               	lslf	___aldiv@divisor,f
  9730  0B7D  0DF1               	rlf	___aldiv@divisor+1,f
  9731  0B7E  0DF2               	rlf	___aldiv@divisor+2,f
  9732  0B7F  0DF3               	rlf	___aldiv@divisor+3,f
  9733  0B80  0B89               	decfsz	9,f
  9734  0B81  2B7C               	goto	u2915
  9735  0B82  3001               	movlw	1
  9736  0B83  00F8               	movwf	??___aldiv
  9737  0B84  0878               	movf	??___aldiv,w
  9738  0B85  07A0               	addwf	___aldiv@counter,f
  9739  0B86  2B79               	goto	l2698
  9740  0B87                     l2700:	
  9741  0B87  3001               	movlw	1
  9742  0B88                     u2935:	
  9743  0B88  35A2               	lslf	___aldiv@quotient,f
  9744  0B89  0DA3               	rlf	___aldiv@quotient+1,f
  9745  0B8A  0DA4               	rlf	___aldiv@quotient+2,f
  9746  0B8B  0DA5               	rlf	___aldiv@quotient+3,f
  9747  0B8C  0B89               	decfsz	9,f
  9748  0B8D  2B88               	goto	u2935
  9749  0B8E  0873               	movf	___aldiv@divisor+3,w
  9750  0B8F  0277               	subwf	___aldiv@dividend+3,w
  9751  0B90  1D03               	skipz
  9752  0B91  2B9C               	goto	u2945
  9753  0B92  0872               	movf	___aldiv@divisor+2,w
  9754  0B93  0276               	subwf	___aldiv@dividend+2,w
  9755  0B94  1D03               	skipz
  9756  0B95  2B9C               	goto	u2945
  9757  0B96  0871               	movf	___aldiv@divisor+1,w
  9758  0B97  0275               	subwf	___aldiv@dividend+1,w
  9759  0B98  1D03               	skipz
  9760  0B99  2B9C               	goto	u2945
  9761  0B9A  0870               	movf	___aldiv@divisor,w
  9762  0B9B  0274               	subwf	___aldiv@dividend,w
  9763  0B9C                     u2945:	
  9764  0B9C  1C03               	skipc
  9765  0B9D  2BA7               	goto	l2708
  9766  0B9E  0870               	movf	___aldiv@divisor,w
  9767  0B9F  02F4               	subwf	___aldiv@dividend,f
  9768  0BA0  0871               	movf	___aldiv@divisor+1,w
  9769  0BA1  3BF5               	subwfb	___aldiv@dividend+1,f
  9770  0BA2  0872               	movf	___aldiv@divisor+2,w
  9771  0BA3  3BF6               	subwfb	___aldiv@dividend+2,f
  9772  0BA4  0873               	movf	___aldiv@divisor+3,w
  9773  0BA5  3BF7               	subwfb	___aldiv@dividend+3,f
  9774  0BA6  1422               	bsf	___aldiv@quotient,0
  9775  0BA7                     l2708:	
  9776  0BA7  3001               	movlw	1
  9777  0BA8                     u2955:	
  9778  0BA8  36F3               	lsrf	___aldiv@divisor+3,f
  9779  0BA9  0CF2               	rrf	___aldiv@divisor+2,f
  9780  0BAA  0CF1               	rrf	___aldiv@divisor+1,f
  9781  0BAB  0CF0               	rrf	___aldiv@divisor,f
  9782  0BAC  0B89               	decfsz	9,f
  9783  0BAD  2BA8               	goto	u2955
  9784  0BAE  3001               	movlw	1
  9785  0BAF  02A0               	subwf	___aldiv@counter,f
  9786  0BB0  1D03               	btfss	3,2
  9787  0BB1  2B87               	goto	l2700
  9788  0BB2                     l2712:	
  9789  0BB2  0821               	movf	___aldiv@sign,w
  9790  0BB3  1903               	btfsc	3,2
  9791  0BB4  2BC0               	goto	l2716
  9792  0BB5  09A2               	comf	___aldiv@quotient,f
  9793  0BB6  09A3               	comf	___aldiv@quotient+1,f
  9794  0BB7  09A4               	comf	___aldiv@quotient+2,f
  9795  0BB8  09A5               	comf	___aldiv@quotient+3,f
  9796  0BB9  0AA2               	incf	___aldiv@quotient,f
  9797  0BBA  1903               	skipnz
  9798  0BBB  0AA3               	incf	___aldiv@quotient+1,f
  9799  0BBC  1903               	skipnz
  9800  0BBD  0AA4               	incf	___aldiv@quotient+2,f
  9801  0BBE  1903               	skipnz
  9802  0BBF  0AA5               	incf	___aldiv@quotient+3,f
  9803  0BC0                     l2716:	
  9804  0BC0  0825               	movf	___aldiv@quotient+3,w
  9805  0BC1  00F3               	movwf	?___aldiv+3
  9806  0BC2  0824               	movf	___aldiv@quotient+2,w
  9807  0BC3  00F2               	movwf	?___aldiv+2
  9808  0BC4  0823               	movf	___aldiv@quotient+1,w
  9809  0BC5  00F1               	movwf	?___aldiv+1
  9810  0BC6  0822               	movf	___aldiv@quotient,w
  9811  0BC7  00F0               	movwf	?___aldiv
  9812  0BC8  0008               	return
  9813  0BC9                     __end_of___aldiv:	
  9814                           
  9815                           	psect	text15
  9816  175E                     __ptext15:	
  9817 ;; *************** function _ADCRead *****************
  9818 ;; Defined at:
  9819 ;;		line 16 in file "adc.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;  channel         1    wreg     enum E13559
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  channel         1    3[COMMON] enum E13559
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  2    0[COMMON] unsigned int 
  9826 ;; Registers used:
  9827 ;;		wreg
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9833 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9837 ;;Total ram usage:        4 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; This function calls:
  9840 ;;		Nothing
  9841 ;; This function is called by:
  9842 ;;		_readAnalog
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           
  9847                           ;psect for function _ADCRead
  9848  175E                     _ADCRead:	
  9849                           
  9850                           ;incstack = 0
  9851                           ; Regs used in _ADCRead: [wreg]
  9852                           ;ADCRead@channel stored from wreg
  9853  175E  00F3               	movwf	ADCRead@channel
  9854                           
  9855                           ;adc.c: 18: ADPCH = channel;
  9856  175F  0873               	movf	ADCRead@channel,w
  9857  1760  0021               	movlb	1	; select bank1
  9858  1761  009E               	movwf	30	;volatile
  9859                           
  9860                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9861  1762  1793               	bsf	19,7	;volatile
  9862                           
  9863                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9864  1763  1313               	bcf	19,6	;volatile
  9865                           
  9866                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9867  1764  1413               	bsf	19,0	;volatile
  9868  1765                     l55:	
  9869                           ;adc.c: 27: {
  9870                           
  9871                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9872                           
  9873  1765  1813               	btfsc	19,0	;volatile
  9874  1766  2F65               	goto	l55
  9875                           
  9876                           ;adc.c: 28: }
  9877                           ;adc.c: 30: return ((ADRESH<<8)+ADRESL);
  9878  1767  080D               	movf	13,w	;volatile
  9879  1768  00F1               	movwf	?_ADCRead+1
  9880  1769  080C               	movf	12,w	;volatile
  9881  176A  00F0               	movwf	?_ADCRead
  9882  176B  0008               	return
  9883  176C                     __end_of_ADCRead:	
  9884                           
  9885                           	psect	text16
  9886  03E9                     __ptext16:	
  9887 ;; *************** function _menuChoice *****************
  9888 ;; Defined at:
  9889 ;;		line 54 in file "menu.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;		None
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;		None
  9894 ;; Return value:  Size  Location     Type
  9895 ;;                  1    wreg      void 
  9896 ;; Registers used:
  9897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9898 ;; Tracked objects:
  9899 ;;		On entry : 0/0
  9900 ;;		On exit  : 0/0
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9905 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;Total ram usage:        4 bytes
  9908 ;; Hardware stack levels used:    1
  9909 ;; Hardware stack levels required when called:    3
  9910 ;; This function calls:
  9911 ;;		_LCD_Set_Cursor
  9912 ;;		_LCD_Write_Int
  9913 ;;		_LCD_Write_String
  9914 ;;		_readKey
  9915 ;; This function is called by:
  9916 ;;		_main
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           
  9921                           ;psect for function _menuChoice
  9922  03E9                     _menuChoice:	
  9923  03E9                     l2950:	
  9924                           ;menu.c: 56: while(RB2 != 1)
  9925                           
  9926                           ;incstack = 0
  9927                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9928                           
  9929  03E9  0020               	movlb	0	; select bank0
  9930  03EA  190D               	btfsc	13,2	;volatile
  9931  03EB  2C3D               	goto	l2952
  9932                           
  9933                           ;menu.c: 57: {
  9934                           ;menu.c: 58: choice = readKey();
  9935  03EC  3197  2782  3183   	fcall	_readKey
  9936  03EF  0020               	movlb	0	; select bank0
  9937  03F0  00AE               	movwf	??_menuChoice
  9938  03F1  082E               	movf	??_menuChoice,w
  9939  03F2  0021               	movlb	1	; select bank1
  9940  03F3  00DB               	movwf	_choice^(0+128)
  9941                           
  9942                           ;menu.c: 60: if(timer > 1000)
  9943  03F4  085A               	movf	(_timer+1)^(0+128),w
  9944  03F5  3A80               	xorlw	128
  9945  03F6  0020               	movlb	0	; select bank0
  9946  03F7  00AE               	movwf	??_menuChoice
  9947  03F8  3083               	movlw	131
  9948  03F9  022E               	subwf	??_menuChoice,w
  9949  03FA  1D03               	skipz
  9950  03FB  2BFF               	goto	u3325
  9951  03FC  30E9               	movlw	233
  9952  03FD  0021               	movlb	1	; select bank1
  9953  03FE  0259               	subwf	_timer^(0+128),w
  9954  03FF                     u3325:	
  9955  03FF  1803               	btfsc	3,0
  9956  0400  2D56               	goto	l2956
  9957                           
  9958                           ;menu.c: 64: }
  9959                           ;menu.c: 66: if(timer2>25){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}e
      +                          lse { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
  9960                           
  9961                           ;menu.c: 63: goto Exit;
  9962                           
  9963                           ;menu.c: 61: {
  9964                           ;menu.c: 62: timer = 0;
  9965  0401  301A               	movlw	26
  9966  0402  0021               	movlb	1	; select bank1
  9967  0403  0260               	subwf	_timer2^(0+128),w
  9968  0404  1C03               	skipc
  9969  0405  2C0F               	goto	l2934
  9970  0406  01F4               	clrf	LCD_Set_Cursor@y
  9971  0407  3000               	movlw	0
  9972  0408  3189  216C  3183   	fcall	_LCD_Set_Cursor
  9973  040B  302C               	movlw	low (STR_7| (0+32768))
  9974  040C  00F5               	movwf	LCD_Write_String@a
  9975  040D  3090               	movlw	high (STR_7| (0+32768))
  9976  040E  2C17               	goto	L3
  9977  040F                     l2934:	
  9978  040F  01F4               	clrf	LCD_Set_Cursor@y
  9979  0410  3000               	movlw	0
  9980  0411  3189  216C  3183   	fcall	_LCD_Set_Cursor
  9981  0414  301B               	movlw	low (STR_8| (0+32768))
  9982  0415  00F5               	movwf	LCD_Write_String@a
  9983  0416  3090               	movlw	high (STR_8| (0+32768))
  9984  0417                     L3:	
  9985  0417  00F6               	movwf	LCD_Write_String@a+1
  9986  0418  3197  27CB  3183   	fcall	_LCD_Write_String
  9987                           
  9988                           ;menu.c: 68: { LCD_Set_Cursor(1,0); LCD_Write_String(desc[choice]);};
  9989  041B  01F4               	clrf	LCD_Set_Cursor@y
  9990  041C  3001               	movlw	1
  9991  041D  3189  216C  3183   	fcall	_LCD_Set_Cursor
  9992  0420  0021               	movlb	1	; select bank1
  9993  0421  355B               	lslf	_choice^(0+128),w
  9994  0422  3EB4               	addlw	(low (_desc| (0+256)))& (0+255)
  9995  0423  0086               	movwf	6
  9996  0424  3001               	movlw	1	; select bank3/4
  9997  0425  0087               	movwf	7
  9998  0426  3F40               	moviw [0]fsr1
  9999  0427  00F5               	movwf	LCD_Write_String@a
 10000  0428  3F41               	moviw [1]fsr1
 10001  0429  00F6               	movwf	LCD_Write_String@a+1
 10002  042A  3197  27CB  3183   	fcall	_LCD_Write_String
 10003                           
 10004                           ;menu.c: 70: if(timer2>49)timer2=0;
 10005  042D  3032               	movlw	50
 10006  042E  0021               	movlb	1	; select bank1
 10007  042F  0260               	subwf	_timer2^(0+128),w
 10008  0430  1803               	btfsc	3,0
 10009  0431  01E0               	clrf	_timer2^(0+128)
 10010                           
 10011                           ;menu.c: 72: timer+=1;
 10012  0432  3001               	movlw	1
 10013  0433  07D9               	addwf	_timer^(0+128),f
 10014  0434  3000               	movlw	0
 10015  0435  3DDA               	addwfc	(_timer+1)^(0+128),f
 10016                           
 10017                           ;menu.c: 73: timer2+=1;
 10018  0436  3001               	movlw	1
 10019  0437  0020               	movlb	0	; select bank0
 10020  0438  00AE               	movwf	??_menuChoice
 10021  0439  082E               	movf	??_menuChoice,w
 10022  043A  0021               	movlb	1	; select bank1
 10023  043B  07E0               	addwf	_timer2^(0+128),f
 10024  043C  2BE9               	goto	l2950
 10025  043D                     l2952:	
 10026                           
 10027                           ;menu.c: 74: }
 10028                           ;menu.c: 75: timer=0;
 10029  043D  0021               	movlb	1	; select bank1
 10030  043E  01D9               	clrf	_timer^(0+128)
 10031  043F  01DA               	clrf	(_timer+1)^(0+128)
 10032                           
 10033                           ;menu.c: 76: timer2=0;
 10034  0440  01E0               	clrf	_timer2^(0+128)
 10035                           
 10036                           ;menu.c: 78: while(RB2 != 1)
 10037  0441  2D45               	goto	l3022
 10038  0442                     l2958:	
 10039                           ;menu.c: 83: goto Exit;
 10040                           
 10041                           
 10042                           ;menu.c: 84: }
 10043                           ;menu.c: 86: timer+=1;
 10044  0442  3001               	movlw	1
 10045  0443  0021               	movlb	1	; select bank1
 10046  0444  07D9               	addwf	_timer^(0+128),f
 10047  0445  3000               	movlw	0
 10048  0446  3DDA               	addwfc	(_timer+1)^(0+128),f
 10049                           
 10050                           ;menu.c: 88: if(RB0==1)
 10051  0447  0020               	movlb	0	; select bank0
 10052  0448  1C0D               	btfss	13,0	;volatile
 10053  0449  2CBD               	goto	l2984
 10054                           
 10055                           ;menu.c: 89: {
 10056                           ;menu.c: 90: delayCount+=2;
 10057  044A  3002               	movlw	2
 10058  044B  00AE               	movwf	??_menuChoice
 10059  044C  082E               	movf	??_menuChoice,w
 10060  044D  0021               	movlb	1	; select bank1
 10061  044E  07DC               	addwf	_delayCount^(0+128),f
 10062                           
 10063                           ;menu.c: 92: setpoint[choice]+=1;
 10064  044F  355B               	lslf	_choice^(0+128),w
 10065  0450  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10066  0451  0086               	movwf	6
 10067  0452  0187               	clrf	7
 10068  0453  3001               	movlw	1
 10069  0454  0781               	addwf	1,f
 10070  0455  3141               	addfsr 1,1
 10071  0456  1803               	skipnc
 10072  0457  0A81               	incf	1,f
 10073                           
 10074                           ;menu.c: 93: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[choi
      +                          ce];
 10075  0458  355B               	lslf	_choice^(0+128),w
 10076  0459  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10077  045A  0086               	movwf	6
 10078  045B  0187               	clrf	7
 10079  045C  3F40               	moviw [0]fsr1
 10080  045D  0020               	movlb	0	; select bank0
 10081  045E  00AE               	movwf	??_menuChoice
 10082  045F  3F41               	moviw [1]fsr1
 10083  0460  00AF               	movwf	??_menuChoice+1
 10084  0461  0021               	movlb	1	; select bank1
 10085  0462  355B               	lslf	_choice^(0+128),w
 10086  0463  3EB8               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10087  0464  0086               	movwf	6
 10088  0465  3001               	movlw	1	; select bank3/4
 10089  0466  0087               	movwf	7
 10090  0467  3F40               	moviw [0]fsr1
 10091  0468  0020               	movlb	0	; select bank0
 10092  0469  00B0               	movwf	??_menuChoice+2
 10093  046A  3F41               	moviw [1]fsr1
 10094  046B  00B1               	movwf	??_menuChoice+3
 10095  046C  082F               	movf	??_menuChoice+1,w
 10096  046D  0231               	subwf	??_menuChoice+3,w
 10097  046E  1D03               	skipz
 10098  046F  2C72               	goto	u3385
 10099  0470  082E               	movf	??_menuChoice,w
 10100  0471  0230               	subwf	??_menuChoice+2,w
 10101  0472                     u3385:	
 10102  0472  1803               	skipnc
 10103  0473  2C82               	goto	l2970
 10104  0474  0021               	movlb	1	; select bank1
 10105  0475  355B               	lslf	_choice^(0+128),w
 10106  0476  3EB8               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10107  0477  0086               	movwf	6
 10108  0478  3001               	movlw	1	; select bank3/4
 10109  0479  0087               	movwf	7
 10110  047A  355B               	lslf	_choice^(0+128),w
 10111  047B  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10112  047C  0084               	movwf	4
 10113  047D  0185               	clrf	5
 10114  047E  3F40               	moviw [0]fsr1
 10115  047F  3F80               	movwi [0]fsr0
 10116  0480  3F41               	moviw [1]fsr1
 10117  0481  3F81               	movwi [1]fsr0
 10118  0482                     l2970:	
 10119                           
 10120                           ;menu.c: 94: { LCD_Set_Cursor(5,0); LCD_Write_Int(setpoint[choice],-1, 1, 0);};
 10121  0482  01F4               	clrf	LCD_Set_Cursor@y
 10122  0483  3005               	movlw	5
 10123  0484  3189  216C  3183   	fcall	_LCD_Set_Cursor
 10124  0487  0021               	movlb	1	; select bank1
 10125  0488  355B               	lslf	_choice^(0+128),w
 10126  0489  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10127  048A  0086               	movwf	6
 10128  048B  0187               	clrf	7
 10129  048C  3F40               	moviw [0]fsr1
 10130  048D  00F9               	movwf	LCD_Write_Int@value
 10131  048E  3F41               	moviw [1]fsr1
 10132  048F  00FA               	movwf	LCD_Write_Int@value+1
 10133  0490  01FB               	clrf	LCD_Write_Int@fieldLength
 10134  0491  03FB               	decf	LCD_Write_Int@fieldLength,f
 10135  0492  01FC               	clrf	LCD_Write_Int@numPlaces
 10136  0493  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10137  0494  01FD               	clrf	LCD_Write_Int@sign
 10138  0495  318E  265C  3183   	fcall	_LCD_Write_Int
 10139                           
 10140                           ;menu.c: 95: menuDelay=255;
 10141  0498  30FF               	movlw	255
 10142  0499  0020               	movlb	0	; select bank0
 10143  049A  00AE               	movwf	??_menuChoice
 10144  049B  082E               	movf	??_menuChoice,w
 10145  049C  0021               	movlb	1	; select bank1
 10146  049D  00DE               	movwf	_menuDelay^(0+128)
 10147                           
 10148                           ;menu.c: 96: if(delayCount<30)
 10149  049E  301E               	movlw	30
 10150  049F  025C               	subwf	_delayCount^(0+128),w
 10151  04A0  1803               	skipnc
 10152  04A1  2CB0               	goto	l420
 10153                           
 10154                           ;menu.c: 97: {
 10155                           ;menu.c: 98: _delay((unsigned long)((150)*(32000000/4000.0)));
 10156  04A2  3007               	movlw	7
 10157  04A3  0020               	movlb	0	; select bank0
 10158  04A4  00B0               	movwf	??_menuChoice+2
 10159  04A5  3017               	movlw	23
 10160  04A6  00AF               	movwf	??_menuChoice+1
 10161  04A7  306F               	movlw	111
 10162  04A8  00AE               	movwf	??_menuChoice
 10163  04A9                     u3657:	
 10164  04A9  0BAE               	decfsz	??_menuChoice,f
 10165  04AA  2CA9               	goto	u3657
 10166  04AB  0BAF               	decfsz	??_menuChoice+1,f
 10167  04AC  2CA9               	goto	u3657
 10168  04AD  0BB0               	decfsz	??_menuChoice+2,f
 10169  04AE  2CA9               	goto	u3657
 10170  04AF  0000               	nop
 10171  04B0                     l420:	
 10172                           
 10173                           ;menu.c: 99: }
 10174                           ;menu.c: 100: if(delayCount>(30+10))delayCount=(30+10);
 10175  04B0  3029               	movlw	41
 10176  04B1  0021               	movlb	1	; select bank1
 10177  04B2  025C               	subwf	_delayCount^(0+128),w
 10178  04B3  1C03               	skipc
 10179  04B4  2CBB               	goto	l2982
 10180  04B5  3028               	movlw	40
 10181  04B6  0020               	movlb	0	; select bank0
 10182  04B7  00AE               	movwf	??_menuChoice
 10183  04B8  082E               	movf	??_menuChoice,w
 10184  04B9  0021               	movlb	1	; select bank1
 10185  04BA  00DC               	movwf	_delayCount^(0+128)
 10186  04BB                     l2982:	
 10187                           
 10188                           ;menu.c: 102: timer=0;
 10189  04BB  01D9               	clrf	_timer^(0+128)
 10190  04BC  01DA               	clrf	(_timer+1)^(0+128)
 10191  04BD                     l2984:	
 10192                           
 10193                           ;menu.c: 103: }
 10194                           ;menu.c: 106: if(RB1==1)
 10195  04BD  0020               	movlb	0	; select bank0
 10196  04BE  1C8D               	btfss	13,1	;volatile
 10197  04BF  2D34               	goto	l3008
 10198                           
 10199                           ;menu.c: 107: {
 10200                           ;menu.c: 108: delayCount+=2;
 10201  04C0  3002               	movlw	2
 10202  04C1  00AE               	movwf	??_menuChoice
 10203  04C2  082E               	movf	??_menuChoice,w
 10204  04C3  0021               	movlb	1	; select bank1
 10205  04C4  07DC               	addwf	_delayCount^(0+128),f
 10206                           
 10207                           ;menu.c: 109: setpoint[choice]-=1;
 10208  04C5  355B               	lslf	_choice^(0+128),w
 10209  04C6  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10210  04C7  0086               	movwf	6
 10211  04C8  0187               	clrf	7
 10212  04C9  30FF               	movlw	255
 10213  04CA  0781               	addwf	1,f
 10214  04CB  3141               	addfsr 1,1
 10215  04CC  30FF               	movlw	255
 10216  04CD  3D81               	addwfc	1,f
 10217  04CE  317F               	addfsr 1,-1
 10218                           
 10219                           ;menu.c: 110: if(setpoint[choice]<lowRangeSet[choice])setpoint[choice]=lowRangeSet[choic
      +                          e];
 10220  04CF  355B               	lslf	_choice^(0+128),w
 10221  04D0  3EBC               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10222  04D1  0086               	movwf	6
 10223  04D2  3001               	movlw	1	; select bank3/4
 10224  04D3  0087               	movwf	7
 10225  04D4  3F40               	moviw [0]fsr1
 10226  04D5  0020               	movlb	0	; select bank0
 10227  04D6  00AE               	movwf	??_menuChoice
 10228  04D7  3F41               	moviw [1]fsr1
 10229  04D8  00AF               	movwf	??_menuChoice+1
 10230  04D9  0021               	movlb	1	; select bank1
 10231  04DA  355B               	lslf	_choice^(0+128),w
 10232  04DB  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10233  04DC  0086               	movwf	6
 10234  04DD  0187               	clrf	7
 10235  04DE  3F40               	moviw [0]fsr1
 10236  04DF  0020               	movlb	0	; select bank0
 10237  04E0  00B0               	movwf	??_menuChoice+2
 10238  04E1  3F41               	moviw [1]fsr1
 10239  04E2  00B1               	movwf	??_menuChoice+3
 10240  04E3  082F               	movf	??_menuChoice+1,w
 10241  04E4  0231               	subwf	??_menuChoice+3,w
 10242  04E5  1D03               	skipz
 10243  04E6  2CE9               	goto	u3425
 10244  04E7  082E               	movf	??_menuChoice,w
 10245  04E8  0230               	subwf	??_menuChoice+2,w
 10246  04E9                     u3425:	
 10247  04E9  1803               	skipnc
 10248  04EA  2CF9               	goto	l2994
 10249  04EB  0021               	movlb	1	; select bank1
 10250  04EC  355B               	lslf	_choice^(0+128),w
 10251  04ED  3EBC               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10252  04EE  0086               	movwf	6
 10253  04EF  3001               	movlw	1	; select bank3/4
 10254  04F0  0087               	movwf	7
 10255  04F1  355B               	lslf	_choice^(0+128),w
 10256  04F2  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10257  04F3  0084               	movwf	4
 10258  04F4  0185               	clrf	5
 10259  04F5  3F40               	moviw [0]fsr1
 10260  04F6  3F80               	movwi [0]fsr0
 10261  04F7  3F41               	moviw [1]fsr1
 10262  04F8  3F81               	movwi [1]fsr0
 10263  04F9                     l2994:	
 10264                           
 10265                           ;menu.c: 111: { LCD_Set_Cursor(5,0); LCD_Write_Int(setpoint[choice],-1, 1, 0);};
 10266  04F9  01F4               	clrf	LCD_Set_Cursor@y
 10267  04FA  3005               	movlw	5
 10268  04FB  3189  216C  3183   	fcall	_LCD_Set_Cursor
 10269  04FE  0021               	movlb	1	; select bank1
 10270  04FF  355B               	lslf	_choice^(0+128),w
 10271  0500  3EE1               	addlw	(low (_setpoint| 0))& (0+255)
 10272  0501  0086               	movwf	6
 10273  0502  0187               	clrf	7
 10274  0503  3F40               	moviw [0]fsr1
 10275  0504  00F9               	movwf	LCD_Write_Int@value
 10276  0505  3F41               	moviw [1]fsr1
 10277  0506  00FA               	movwf	LCD_Write_Int@value+1
 10278  0507  01FB               	clrf	LCD_Write_Int@fieldLength
 10279  0508  03FB               	decf	LCD_Write_Int@fieldLength,f
 10280  0509  01FC               	clrf	LCD_Write_Int@numPlaces
 10281  050A  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10282  050B  01FD               	clrf	LCD_Write_Int@sign
 10283  050C  318E  265C  3183   	fcall	_LCD_Write_Int
 10284                           
 10285                           ;menu.c: 112: menuDelay=255;
 10286  050F  30FF               	movlw	255
 10287  0510  0020               	movlb	0	; select bank0
 10288  0511  00AE               	movwf	??_menuChoice
 10289  0512  082E               	movf	??_menuChoice,w
 10290  0513  0021               	movlb	1	; select bank1
 10291  0514  00DE               	movwf	_menuDelay^(0+128)
 10292                           
 10293                           ;menu.c: 114: if(delayCount<30)
 10294  0515  301E               	movlw	30
 10295  0516  025C               	subwf	_delayCount^(0+128),w
 10296  0517  1803               	skipnc
 10297  0518  2D27               	goto	l424
 10298                           
 10299                           ;menu.c: 115: {
 10300                           ;menu.c: 116: _delay((unsigned long)((150)*(32000000/4000.0)));
 10301  0519  3007               	movlw	7
 10302  051A  0020               	movlb	0	; select bank0
 10303  051B  00B0               	movwf	??_menuChoice+2
 10304  051C  3017               	movlw	23
 10305  051D  00AF               	movwf	??_menuChoice+1
 10306  051E  306F               	movlw	111
 10307  051F  00AE               	movwf	??_menuChoice
 10308  0520                     u3667:	
 10309  0520  0BAE               	decfsz	??_menuChoice,f
 10310  0521  2D20               	goto	u3667
 10311  0522  0BAF               	decfsz	??_menuChoice+1,f
 10312  0523  2D20               	goto	u3667
 10313  0524  0BB0               	decfsz	??_menuChoice+2,f
 10314  0525  2D20               	goto	u3667
 10315  0526  0000               	nop
 10316  0527                     l424:	
 10317                           
 10318                           ;menu.c: 117: }
 10319                           ;menu.c: 119: if(delayCount>(30+10))delayCount=(30+10);
 10320  0527  3029               	movlw	41
 10321  0528  0021               	movlb	1	; select bank1
 10322  0529  025C               	subwf	_delayCount^(0+128),w
 10323  052A  1C03               	skipc
 10324  052B  2D32               	goto	l3006
 10325  052C  3028               	movlw	40
 10326  052D  0020               	movlb	0	; select bank0
 10327  052E  00AE               	movwf	??_menuChoice
 10328  052F  082E               	movf	??_menuChoice,w
 10329  0530  0021               	movlb	1	; select bank1
 10330  0531  00DC               	movwf	_delayCount^(0+128)
 10331  0532                     l3006:	
 10332                           
 10333                           ;menu.c: 121: timer=0;
 10334  0532  01D9               	clrf	_timer^(0+128)
 10335  0533  01DA               	clrf	(_timer+1)^(0+128)
 10336  0534                     l3008:	
 10337                           
 10338                           ;menu.c: 122: }
 10339                           ;menu.c: 124: if(delayCount>0)delayCount-=1;
 10340  0534  0021               	movlb	1	; select bank1
 10341  0535  085C               	movf	_delayCount^(0+128),w
 10342  0536  1903               	btfsc	3,2
 10343  0537  2D3A               	goto	l3012
 10344  0538  3001               	movlw	1
 10345  0539  02DC               	subwf	_delayCount^(0+128),f
 10346  053A                     l3012:	
 10347                           
 10348                           ;menu.c: 126: if(!(RB1 || RB0))
 10349  053A  0020               	movlb	0	; select bank0
 10350  053B  1C8D               	btfss	13,1	;volatile
 10351  053C  180D               	btfsc	13,0	;volatile
 10352  053D  2D45               	goto	l3022
 10353                           
 10354                           ;menu.c: 127: {
 10355                           ;menu.c: 128: if(menuDelay>0)
 10356  053E  0021               	movlb	1	; select bank1
 10357  053F  085E               	movf	_menuDelay^(0+128),w
 10358  0540  1903               	btfsc	3,2
 10359  0541  2D45               	goto	l3022
 10360                           
 10361                           ;menu.c: 129: {
 10362                           ;menu.c: 130: loop=0;
 10363  0542  01ED               	clrf	_loop^(0+128)
 10364                           
 10365                           ;menu.c: 131: menuDelay-=1;
 10366  0543  3001               	movlw	1
 10367  0544  02DE               	subwf	_menuDelay^(0+128),f
 10368  0545                     l3022:	
 10369  0545  0020               	movlb	0	; select bank0
 10370  0546  190D               	btfsc	13,2	;volatile
 10371  0547  2D59               	goto	l3024
 10372                           
 10373                           ;menu.c: 79: {
 10374                           ;menu.c: 80: if(timer > 1000)
 10375  0548  0021               	movlb	1	; select bank1
 10376  0549  085A               	movf	(_timer+1)^(0+128),w
 10377  054A  3A80               	xorlw	128
 10378  054B  0020               	movlb	0	; select bank0
 10379  054C  00AE               	movwf	??_menuChoice
 10380  054D  3083               	movlw	131
 10381  054E  022E               	subwf	??_menuChoice,w
 10382  054F  1D03               	skipz
 10383  0550  2D54               	goto	u3365
 10384  0551  30E9               	movlw	233
 10385  0552  0021               	movlb	1	; select bank1
 10386  0553  0259               	subwf	_timer^(0+128),w
 10387  0554                     u3365:	
 10388  0554  1C03               	skipc
 10389  0555  2C42               	goto	l2958
 10390  0556                     l2956:	
 10391                           
 10392                           ;menu.c: 81: {
 10393                           ;menu.c: 82: timer = 0;
 10394  0556  0021               	movlb	1	; select bank1
 10395  0557  01D9               	clrf	_timer^(0+128)
 10396  0558  01DA               	clrf	(_timer+1)^(0+128)
 10397  0559                     l3024:	
 10398                           ;menu.c: 132: }
 10399                           ;menu.c: 133: }
 10400                           ;menu.c: 134: }
 10401                           ;menu.c: 135: Exit:
 10402                           
 10403                           
 10404                           ;menu.c: 136: timer=0;
 10405  0559  0021               	movlb	1	; select bank1
 10406  055A  01D9               	clrf	_timer^(0+128)
 10407  055B  01DA               	clrf	(_timer+1)^(0+128)
 10408  055C  0008               	return
 10409  055D                     __end_of_menuChoice:	
 10410                           
 10411                           	psect	text17
 10412  1782                     __ptext17:	
 10413 ;; *************** function _readKey *****************
 10414 ;; Defined at:
 10415 ;;		line 39 in file "menu.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;		None
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;		None
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  1    wreg      unsigned char 
 10422 ;; Registers used:
 10423 ;;		wreg, status,2, status,0
 10424 ;; Tracked objects:
 10425 ;;		On entry : 0/0
 10426 ;;		On exit  : 0/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10433 ;;Total ram usage:        1 bytes
 10434 ;; Hardware stack levels used:    1
 10435 ;; This function calls:
 10436 ;;		Nothing
 10437 ;; This function is called by:
 10438 ;;		_menuChoice
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           
 10443                           ;psect for function _readKey
 10444  1782                     _readKey:	
 10445                           
 10446                           ;menu.c: 41: if(RB1==1)
 10447                           
 10448                           ;incstack = 0
 10449                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10450  1782  0020               	movlb	0	; select bank0
 10451  1783  1C8D               	btfss	13,1	;volatile
 10452  1784  2F8B               	goto	l2670
 10453                           
 10454                           ;menu.c: 42: {
 10455                           ;menu.c: 43: if(key>0)key-=1;
 10456  1785  0021               	movlb	1	; select bank1
 10457  1786  085D               	movf	_key^(0+128),w
 10458  1787  1903               	btfsc	3,2
 10459  1788  2F8B               	goto	l2670
 10460  1789  3001               	movlw	1
 10461  178A  02DD               	subwf	_key^(0+128),f
 10462  178B                     l2670:	
 10463                           
 10464                           ;menu.c: 44: }
 10465                           ;menu.c: 46: if(RB0==1)
 10466  178B  0020               	movlb	0	; select bank0
 10467  178C  1C0D               	btfss	13,0	;volatile
 10468  178D  2F96               	goto	l2676
 10469                           
 10470                           ;menu.c: 47: {
 10471                           ;menu.c: 48: if(key<1)key+=1;
 10472  178E  0021               	movlb	1	; select bank1
 10473  178F  085D               	movf	_key^(0+128),w
 10474  1790  1D03               	btfss	3,2
 10475  1791  2F96               	goto	l2676
 10476  1792  3001               	movlw	1
 10477  1793  00F0               	movwf	??_readKey
 10478  1794  0870               	movf	??_readKey,w
 10479  1795  07DD               	addwf	_key^(0+128),f
 10480  1796                     l2676:	
 10481                           
 10482                           ;menu.c: 49: }
 10483                           ;menu.c: 51: return key;
 10484  1796  0021               	movlb	1	; select bank1
 10485  1797  085D               	movf	_key^(0+128),w
 10486  1798  0008               	return
 10487  1799                     __end_of_readKey:	
 10488                           
 10489                           	psect	text18
 10490  17CB                     __ptext18:	
 10491 ;; *************** function _LCD_Write_String *****************
 10492 ;; Defined at:
 10493 ;;		line 239 in file "lcd.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;  a               2    5[COMMON] PTR const unsigned char 
 10496 ;;		 -> STR_8(17), STR_7(17), STR_6(11), STR_5(11), 
 10497 ;;		 -> STR_4(17), STR_3(17), STR_2(8), STR_1(5), 
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;  i               2    8[COMMON] int 
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  1    wreg      void 
 10502 ;; Registers used:
 10503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;Total ram usage:        5 bytes
 10514 ;; Hardware stack levels used:    1
 10515 ;; Hardware stack levels required when called:    2
 10516 ;; This function calls:
 10517 ;;		_LCD_Write_Char
 10518 ;; This function is called by:
 10519 ;;		_main
 10520 ;;		_menuChoice
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           
 10525                           ;psect for function _LCD_Write_String
 10526  17CB                     _LCD_Write_String:	
 10527                           
 10528                           ;lcd.c: 241: int i;
 10529                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10530                           
 10531                           ;incstack = 0
 10532                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10533  17CB  01F8               	clrf	LCD_Write_String@i
 10534  17CC  01F9               	clrf	LCD_Write_String@i+1
 10535  17CD                     l2524:	
 10536  17CD  0875               	movf	LCD_Write_String@a,w
 10537  17CE  0778               	addwf	LCD_Write_String@i,w
 10538  17CF  0084               	movwf	4
 10539  17D0  0876               	movf	LCD_Write_String@a+1,w
 10540  17D1  3D79               	addwfc	LCD_Write_String@i+1,w
 10541  17D2  0085               	movwf	5
 10542  17D3  0012               	moviw fsr0++
 10543  17D4  1903               	btfsc	3,2
 10544  17D5  0008               	return
 10545                           
 10546                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10547  17D6  0875               	movf	LCD_Write_String@a,w
 10548  17D7  0778               	addwf	LCD_Write_String@i,w
 10549  17D8  0084               	movwf	4
 10550  17D9  0876               	movf	LCD_Write_String@a+1,w
 10551  17DA  3D79               	addwfc	LCD_Write_String@i+1,w
 10552  17DB  0085               	movwf	5
 10553  17DC  0800               	movf	0,w	;code access
 10554  17DD  3188  2099  3197   	fcall	_LCD_Write_Char
 10555  17E0  3001               	movlw	1
 10556  17E1  07F8               	addwf	LCD_Write_String@i,f
 10557  17E2  3000               	movlw	0
 10558  17E3  3DF9               	addwfc	LCD_Write_String@i+1,f
 10559  17E4  2FCD               	goto	l2524
 10560  17E5                     __end_of_LCD_Write_String:	
 10561                           
 10562                           	psect	text19
 10563  0E5C                     __ptext19:	
 10564 ;; *************** function _LCD_Write_Int *****************
 10565 ;; Defined at:
 10566 ;;		line 246 in file "lcd.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;  value           2    9[COMMON] int 
 10569 ;;  fieldLength     1   11[COMMON] char 
 10570 ;;  numPlaces       1   12[COMMON] char 
 10571 ;;  sign            1   13[COMMON] char 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;  str             5    5[BANK0 ] unsigned char [5]
 10574 ;;  i               2   12[BANK0 ] int 
 10575 ;;  j               2   10[BANK0 ] int 
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  1    wreg      void 
 10578 ;; Registers used:
 10579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/0
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10585 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10586 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10587 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10588 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10589 ;;Total ram usage:       19 bytes
 10590 ;; Hardware stack levels used:    1
 10591 ;; Hardware stack levels required when called:    2
 10592 ;; This function calls:
 10593 ;;		_LCD_Write_Char
 10594 ;;		___awdiv
 10595 ;;		___awmod
 10596 ;; This function is called by:
 10597 ;;		_main
 10598 ;;		_menuChoice
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           
 10603                           ;psect for function _LCD_Write_Int
 10604  0E5C                     _LCD_Write_Int:	
 10605                           
 10606                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10607                           
 10608                           ;incstack = 0
 10609                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10610  0E5C  30C8               	movlw	low LCD_Write_Int@F13694
 10611  0E5D  0086               	movwf	6
 10612  0E5E  3001               	movlw	high LCD_Write_Int@F13694
 10613  0E5F  0087               	movwf	7
 10614  0E60  3025               	movlw	low LCD_Write_Int@str
 10615  0E61  0084               	movwf	4
 10616  0E62  3000               	movlw	high LCD_Write_Int@str
 10617  0E63  0085               	movwf	5
 10618  0E64  3005               	movlw	5
 10619  0E65  0020               	movlb	0	; select bank0
 10620  0E66  00A0               	movwf	??_LCD_Write_Int
 10621  0E67                     u2710:	
 10622  0E67  0016               	moviw fsr1++
 10623  0E68  001A               	movwi fsr0++
 10624  0E69  0BA0               	decfsz	??_LCD_Write_Int,f
 10625  0E6A  2E67               	goto	u2710
 10626                           
 10627                           ;lcd.c: 249: int i=4,j=0;
 10628  0E6B  3004               	movlw	4
 10629  0E6C  00AC               	movwf	LCD_Write_Int@i
 10630  0E6D  3000               	movlw	0
 10631  0E6E  00AD               	movwf	LCD_Write_Int@i+1
 10632  0E6F  01AA               	clrf	LCD_Write_Int@j
 10633  0E70  01AB               	clrf	LCD_Write_Int@j+1
 10634                           
 10635                           ;lcd.c: 251: if(value<0)
 10636  0E71  1FFA               	btfss	LCD_Write_Int@value+1,7
 10637  0E72  2E7D               	goto	l2538
 10638                           
 10639                           ;lcd.c: 252: {
 10640                           ;lcd.c: 253: LCD_Write_Char('-');
 10641  0E73  302D               	movlw	45
 10642  0E74  3188  2099  318E   	fcall	_LCD_Write_Char
 10643                           
 10644                           ;lcd.c: 254: value=value*-1;
 10645  0E77  09F9               	comf	LCD_Write_Int@value,f
 10646  0E78  09FA               	comf	LCD_Write_Int@value+1,f
 10647  0E79  0AF9               	incf	LCD_Write_Int@value,f
 10648  0E7A  1903               	skipnz
 10649  0E7B  0AFA               	incf	LCD_Write_Int@value+1,f
 10650                           
 10651                           ;lcd.c: 255: }
 10652  0E7C  2E84               	goto	l2548
 10653  0E7D                     l2538:	
 10654                           
 10655                           ;lcd.c: 257: else
 10656                           ;lcd.c: 258: {
 10657                           ;lcd.c: 259: if(sign == 1)
 10658  0E7D  037D               	decf	LCD_Write_Int@sign,w
 10659  0E7E  1D03               	btfss	3,2
 10660  0E7F  2E84               	goto	l2548
 10661                           
 10662                           ;lcd.c: 260: {
 10663                           ;lcd.c: 261: LCD_Write_Char('+');
 10664  0E80  302B               	movlw	43
 10665  0E81  3188  2099  318E   	fcall	_LCD_Write_Char
 10666  0E84                     l2548:	
 10667                           ;lcd.c: 262: }
 10668                           ;lcd.c: 263: }
 10669                           ;lcd.c: 265: while(value)
 10670                           
 10671  0E84  0879               	movf	LCD_Write_Int@value,w
 10672  0E85  047A               	iorwf	LCD_Write_Int@value+1,w
 10673  0E86  1903               	btfsc	3,2
 10674  0E87  2EB1               	goto	l2550
 10675                           
 10676                           ;lcd.c: 266: {
 10677                           ;lcd.c: 267: str[i]=value%10;
 10678  0E88  300A               	movlw	10
 10679  0E89  00F0               	movwf	___awmod@divisor
 10680  0E8A  3000               	movlw	0
 10681  0E8B  00F1               	movwf	___awmod@divisor+1
 10682  0E8C  087A               	movf	LCD_Write_Int@value+1,w
 10683  0E8D  00F3               	movwf	___awmod@dividend+1
 10684  0E8E  0879               	movf	LCD_Write_Int@value,w
 10685  0E8F  00F2               	movwf	___awmod@dividend
 10686  0E90  3189  21ED  318E   	fcall	___awmod
 10687  0E93  0870               	movf	?___awmod,w
 10688  0E94  0020               	movlb	0	; select bank0
 10689  0E95  00A0               	movwf	??_LCD_Write_Int
 10690  0E96  082C               	movf	LCD_Write_Int@i,w
 10691  0E97  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10692  0E98  0086               	movwf	6
 10693  0E99  0187               	clrf	7
 10694  0E9A  0820               	movf	??_LCD_Write_Int,w
 10695  0E9B  0081               	movwf	1
 10696                           
 10697                           ;lcd.c: 268: value=value/10;
 10698  0E9C  300A               	movlw	10
 10699  0E9D  00F0               	movwf	___awdiv@divisor
 10700  0E9E  3000               	movlw	0
 10701  0E9F  00F1               	movwf	___awdiv@divisor+1
 10702  0EA0  087A               	movf	LCD_Write_Int@value+1,w
 10703  0EA1  00F3               	movwf	___awdiv@dividend+1
 10704  0EA2  0879               	movf	LCD_Write_Int@value,w
 10705  0EA3  00F2               	movwf	___awdiv@dividend
 10706  0EA4  318A  2232  318E   	fcall	___awdiv
 10707  0EA7  0871               	movf	?___awdiv+1,w
 10708  0EA8  00FA               	movwf	LCD_Write_Int@value+1
 10709  0EA9  0870               	movf	?___awdiv,w
 10710  0EAA  00F9               	movwf	LCD_Write_Int@value
 10711                           
 10712                           ;lcd.c: 269: i--;
 10713  0EAB  30FF               	movlw	255
 10714  0EAC  0020               	movlb	0	; select bank0
 10715  0EAD  07AC               	addwf	LCD_Write_Int@i,f
 10716  0EAE  30FF               	movlw	255
 10717  0EAF  3DAD               	addwfc	LCD_Write_Int@i+1,f
 10718  0EB0  2E84               	goto	l2548
 10719  0EB1                     l2550:	
 10720                           
 10721                           ;lcd.c: 270: }
 10722                           ;lcd.c: 271: if(fieldLength==-1)
 10723  0EB1  0A7B               	incf	LCD_Write_Int@fieldLength,w
 10724  0EB2  1903               	btfsc	3,2
 10725  0EB3  2EBA               	goto	l2556
 10726  0EB4  2EC3               	goto	l2558
 10727  0EB5                     l2554:	
 10728                           ;lcd.c: 272: {
 10729                           ;lcd.c: 273: while(str[j]==0)
 10730                           
 10731                           
 10732                           ;lcd.c: 274: {
 10733                           ;lcd.c: 275: j++;
 10734  0EB5  3001               	movlw	1
 10735  0EB6  0020               	movlb	0	; select bank0
 10736  0EB7  07AA               	addwf	LCD_Write_Int@j,f
 10737  0EB8  3000               	movlw	0
 10738  0EB9  3DAB               	addwfc	LCD_Write_Int@j+1,f
 10739  0EBA                     l2556:	
 10740  0EBA  0020               	movlb	0	; select bank0
 10741  0EBB  082A               	movf	LCD_Write_Int@j,w
 10742  0EBC  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10743  0EBD  0086               	movwf	6
 10744  0EBE  0187               	clrf	7
 10745  0EBF  0801               	movf	1,w
 10746  0EC0  1D03               	btfss	3,2
 10747  0EC1  2ED4               	goto	l2560
 10748  0EC2  2EB5               	goto	l2554
 10749  0EC3                     l2558:	
 10750                           ;lcd.c: 276: }
 10751                           ;lcd.c: 277: }
 10752                           
 10753                           
 10754                           ;lcd.c: 278: else
 10755                           ;lcd.c: 279: {
 10756                           ;lcd.c: 280: j=5-fieldLength;
 10757  0EC3  087B               	movf	LCD_Write_Int@fieldLength,w
 10758  0EC4  0020               	movlb	0	; select bank0
 10759  0EC5  00A0               	movwf	??_LCD_Write_Int
 10760  0EC6  01A1               	clrf	??_LCD_Write_Int+1
 10761  0EC7  1BA0               	btfsc	??_LCD_Write_Int,7
 10762  0EC8  03A1               	decf	??_LCD_Write_Int+1,f
 10763  0EC9  09A0               	comf	??_LCD_Write_Int,f
 10764  0ECA  09A1               	comf	??_LCD_Write_Int+1,f
 10765  0ECB  0AA0               	incf	??_LCD_Write_Int,f
 10766  0ECC  1903               	skipnz
 10767  0ECD  0AA1               	incf	??_LCD_Write_Int+1,f
 10768  0ECE  0820               	movf	??_LCD_Write_Int,w
 10769  0ECF  3E05               	addlw	5
 10770  0ED0  00AA               	movwf	LCD_Write_Int@j
 10771  0ED1  3000               	movlw	0
 10772  0ED2  3D21               	addwfc	??_LCD_Write_Int+1,w
 10773  0ED3  00AB               	movwf	LCD_Write_Int@j+1
 10774  0ED4                     l2560:	
 10775                           
 10776                           ;lcd.c: 281: }
 10777                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 10778  0ED4  082B               	movf	LCD_Write_Int@j+1,w
 10779  0ED5  00AD               	movwf	LCD_Write_Int@i+1
 10780  0ED6  082A               	movf	LCD_Write_Int@j,w
 10781  0ED7  00AC               	movwf	LCD_Write_Int@i
 10782  0ED8                     l2566:	
 10783  0ED8  087C               	movf	LCD_Write_Int@numPlaces,w
 10784  0ED9  00A0               	movwf	??_LCD_Write_Int
 10785  0EDA  01A1               	clrf	??_LCD_Write_Int+1
 10786  0EDB  1BA0               	btfsc	??_LCD_Write_Int,7
 10787  0EDC  03A1               	decf	??_LCD_Write_Int+1,f
 10788  0EDD  09A0               	comf	??_LCD_Write_Int,f
 10789  0EDE  09A1               	comf	??_LCD_Write_Int+1,f
 10790  0EDF  0AA0               	incf	??_LCD_Write_Int,f
 10791  0EE0  1903               	skipnz
 10792  0EE1  0AA1               	incf	??_LCD_Write_Int+1,f
 10793  0EE2  0820               	movf	??_LCD_Write_Int,w
 10794  0EE3  3E05               	addlw	5
 10795  0EE4  00A2               	movwf	??_LCD_Write_Int+2
 10796  0EE5  3000               	movlw	0
 10797  0EE6  3D21               	addwfc	??_LCD_Write_Int+1,w
 10798  0EE7  00A3               	movwf	??_LCD_Write_Int+3
 10799  0EE8  082D               	movf	LCD_Write_Int@i+1,w
 10800  0EE9  3A80               	xorlw	128
 10801  0EEA  00A4               	movwf	??_LCD_Write_Int+4
 10802  0EEB  0823               	movf	??_LCD_Write_Int+3,w
 10803  0EEC  3A80               	xorlw	128
 10804  0EED  0224               	subwf	??_LCD_Write_Int+4,w
 10805  0EEE  1D03               	skipz
 10806  0EEF  2EF2               	goto	u2775
 10807  0EF0  0822               	movf	??_LCD_Write_Int+2,w
 10808  0EF1  022C               	subwf	LCD_Write_Int@i,w
 10809  0EF2                     u2775:	
 10810  0EF2  1803               	btfsc	3,0
 10811  0EF3  2F04               	goto	l2568
 10812                           
 10813                           ;lcd.c: 284: {
 10814                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 10815  0EF4  0020               	movlb	0	; select bank0
 10816  0EF5  082C               	movf	LCD_Write_Int@i,w
 10817  0EF6  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10818  0EF7  0086               	movwf	6
 10819  0EF8  0187               	clrf	7
 10820  0EF9  0801               	movf	1,w
 10821  0EFA  3E30               	addlw	48
 10822  0EFB  3188  2099  318E   	fcall	_LCD_Write_Char
 10823  0EFE  3001               	movlw	1
 10824  0EFF  0020               	movlb	0	; select bank0
 10825  0F00  07AC               	addwf	LCD_Write_Int@i,f
 10826  0F01  3000               	movlw	0
 10827  0F02  3DAD               	addwfc	LCD_Write_Int@i+1,f
 10828  0F03  2ED8               	goto	l2566
 10829  0F04                     l2568:	
 10830                           
 10831                           ;lcd.c: 286: }
 10832                           ;lcd.c: 288: if(numPlaces == 1)
 10833  0F04  037C               	decf	LCD_Write_Int@numPlaces,w
 10834  0F05  1D03               	btfss	3,2
 10835  0F06  2F11               	goto	l2572
 10836                           
 10837                           ;lcd.c: 289: {
 10838                           ;lcd.c: 290: LCD_Write_Char(46);
 10839  0F07  302E               	movlw	46
 10840  0F08  3188  2099  318E   	fcall	_LCD_Write_Char
 10841                           
 10842                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 10843  0F0B  0020               	movlb	0	; select bank0
 10844  0F0C  0829               	movf	LCD_Write_Int@str+4,w
 10845  0F0D  3E30               	addlw	48
 10846  0F0E  3188  2099  318E   	fcall	_LCD_Write_Char
 10847  0F11                     l2572:	
 10848                           
 10849                           ;lcd.c: 292: }
 10850                           ;lcd.c: 294: if(numPlaces == 2)
 10851  0F11  3002               	movlw	2
 10852  0F12  067C               	xorwf	LCD_Write_Int@numPlaces,w
 10853  0F13  1D03               	btfss	3,2
 10854  0F14  0008               	return
 10855                           
 10856                           ;lcd.c: 295: {
 10857                           ;lcd.c: 296: LCD_Write_Char(46);
 10858  0F15  302E               	movlw	46
 10859  0F16  3188  2099  318E   	fcall	_LCD_Write_Char
 10860                           
 10861                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 10862  0F19  0020               	movlb	0	; select bank0
 10863  0F1A  0828               	movf	LCD_Write_Int@str+3,w
 10864  0F1B  3E30               	addlw	48
 10865  0F1C  3188  2099  318E   	fcall	_LCD_Write_Char
 10866                           
 10867                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 10868  0F1F  0020               	movlb	0	; select bank0
 10869  0F20  0829               	movf	LCD_Write_Int@str+4,w
 10870  0F21  3E30               	addlw	48
 10871  0F22  3188  2099         	fcall	_LCD_Write_Char
 10872  0F24  0008               	return
 10873  0F25                     __end_of_LCD_Write_Int:	
 10874                           
 10875                           	psect	text20
 10876  09ED                     __ptext20:	
 10877 ;; *************** function ___awmod *****************
 10878 ;; Defined at:
 10879 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;  divisor         2    0[COMMON] int 
 10882 ;;  dividend        2    2[COMMON] int 
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;  sign            1    6[COMMON] unsigned char 
 10885 ;;  counter         1    5[COMMON] unsigned char 
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  2    0[COMMON] int 
 10888 ;; Registers used:
 10889 ;;		wreg, status,2, status,0
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10899 ;;Total ram usage:        7 bytes
 10900 ;; Hardware stack levels used:    1
 10901 ;; This function calls:
 10902 ;;		Nothing
 10903 ;; This function is called by:
 10904 ;;		_LCD_Write_Int
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           
 10909                           ;psect for function ___awmod
 10910  09ED                     ___awmod:	
 10911                           
 10912                           ;incstack = 0
 10913                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10914  09ED  01F6               	clrf	___awmod@sign
 10915  09EE  1FF3               	btfss	___awmod@dividend+1,7
 10916  09EF  29F7               	goto	l2330
 10917  09F0  09F2               	comf	___awmod@dividend,f
 10918  09F1  09F3               	comf	___awmod@dividend+1,f
 10919  09F2  0AF2               	incf	___awmod@dividend,f
 10920  09F3  1903               	skipnz
 10921  09F4  0AF3               	incf	___awmod@dividend+1,f
 10922  09F5  01F6               	clrf	___awmod@sign
 10923  09F6  0AF6               	incf	___awmod@sign,f
 10924  09F7                     l2330:	
 10925  09F7  1FF1               	btfss	___awmod@divisor+1,7
 10926  09F8  29FE               	goto	l2334
 10927  09F9  09F0               	comf	___awmod@divisor,f
 10928  09FA  09F1               	comf	___awmod@divisor+1,f
 10929  09FB  0AF0               	incf	___awmod@divisor,f
 10930  09FC  1903               	skipnz
 10931  09FD  0AF1               	incf	___awmod@divisor+1,f
 10932  09FE                     l2334:	
 10933  09FE  0870               	movf	___awmod@divisor,w
 10934  09FF  0471               	iorwf	___awmod@divisor+1,w
 10935  0A00  1903               	btfsc	3,2
 10936  0A01  2A25               	goto	l2352
 10937  0A02  01F5               	clrf	___awmod@counter
 10938  0A03  0AF5               	incf	___awmod@counter,f
 10939  0A04                     l2342:	
 10940  0A04  1BF1               	btfsc	___awmod@divisor+1,7
 10941  0A05  2A10               	goto	l2344
 10942  0A06  3001               	movlw	1
 10943  0A07                     u2515:	
 10944  0A07  35F0               	lslf	___awmod@divisor,f
 10945  0A08  0DF1               	rlf	___awmod@divisor+1,f
 10946  0A09  0B89               	decfsz	9,f
 10947  0A0A  2A07               	goto	u2515
 10948  0A0B  3001               	movlw	1
 10949  0A0C  00F4               	movwf	??___awmod
 10950  0A0D  0874               	movf	??___awmod,w
 10951  0A0E  07F5               	addwf	___awmod@counter,f
 10952  0A0F  2A04               	goto	l2342
 10953  0A10                     l2344:	
 10954  0A10  0871               	movf	___awmod@divisor+1,w
 10955  0A11  0273               	subwf	___awmod@dividend+1,w
 10956  0A12  1D03               	skipz
 10957  0A13  2A16               	goto	u2535
 10958  0A14  0870               	movf	___awmod@divisor,w
 10959  0A15  0272               	subwf	___awmod@dividend,w
 10960  0A16                     u2535:	
 10961  0A16  1C03               	skipc
 10962  0A17  2A1C               	goto	l2348
 10963  0A18  0870               	movf	___awmod@divisor,w
 10964  0A19  02F2               	subwf	___awmod@dividend,f
 10965  0A1A  0871               	movf	___awmod@divisor+1,w
 10966  0A1B  3BF3               	subwfb	___awmod@dividend+1,f
 10967  0A1C                     l2348:	
 10968  0A1C  3001               	movlw	1
 10969  0A1D                     u2545:	
 10970  0A1D  36F1               	lsrf	___awmod@divisor+1,f
 10971  0A1E  0CF0               	rrf	___awmod@divisor,f
 10972  0A1F  0B89               	decfsz	9,f
 10973  0A20  2A1D               	goto	u2545
 10974  0A21  3001               	movlw	1
 10975  0A22  02F5               	subwf	___awmod@counter,f
 10976  0A23  1D03               	btfss	3,2
 10977  0A24  2A10               	goto	l2344
 10978  0A25                     l2352:	
 10979  0A25  0876               	movf	___awmod@sign,w
 10980  0A26  1903               	btfsc	3,2
 10981  0A27  2A2D               	goto	l2356
 10982  0A28  09F2               	comf	___awmod@dividend,f
 10983  0A29  09F3               	comf	___awmod@dividend+1,f
 10984  0A2A  0AF2               	incf	___awmod@dividend,f
 10985  0A2B  1903               	skipnz
 10986  0A2C  0AF3               	incf	___awmod@dividend+1,f
 10987  0A2D                     l2356:	
 10988  0A2D  0873               	movf	___awmod@dividend+1,w
 10989  0A2E  00F1               	movwf	?___awmod+1
 10990  0A2F  0872               	movf	___awmod@dividend,w
 10991  0A30  00F0               	movwf	?___awmod
 10992  0A31  0008               	return
 10993  0A32                     __end_of___awmod:	
 10994                           
 10995                           	psect	text21
 10996  0A32                     __ptext21:	
 10997 ;; *************** function ___awdiv *****************
 10998 ;; Defined at:
 10999 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  divisor         2    0[COMMON] int 
 11002 ;;  dividend        2    2[COMMON] int 
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;  quotient        2    7[COMMON] int 
 11005 ;;  sign            1    6[COMMON] unsigned char 
 11006 ;;  counter         1    5[COMMON] unsigned char 
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  2    0[COMMON] int 
 11009 ;; Registers used:
 11010 ;;		wreg, status,2, status,0
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;Total ram usage:        9 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; This function calls:
 11023 ;;		Nothing
 11024 ;; This function is called by:
 11025 ;;		_LCD_Write_Int
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029                           
 11030                           ;psect for function ___awdiv
 11031  0A32                     ___awdiv:	
 11032                           
 11033                           ;incstack = 0
 11034                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11035  0A32  01F6               	clrf	___awdiv@sign
 11036  0A33  1FF1               	btfss	___awdiv@divisor+1,7
 11037  0A34  2A3C               	goto	l2286
 11038  0A35  09F0               	comf	___awdiv@divisor,f
 11039  0A36  09F1               	comf	___awdiv@divisor+1,f
 11040  0A37  0AF0               	incf	___awdiv@divisor,f
 11041  0A38  1903               	skipnz
 11042  0A39  0AF1               	incf	___awdiv@divisor+1,f
 11043  0A3A  01F6               	clrf	___awdiv@sign
 11044  0A3B  0AF6               	incf	___awdiv@sign,f
 11045  0A3C                     l2286:	
 11046  0A3C  1FF3               	btfss	___awdiv@dividend+1,7
 11047  0A3D  2A47               	goto	l2292
 11048  0A3E  09F2               	comf	___awdiv@dividend,f
 11049  0A3F  09F3               	comf	___awdiv@dividend+1,f
 11050  0A40  0AF2               	incf	___awdiv@dividend,f
 11051  0A41  1903               	skipnz
 11052  0A42  0AF3               	incf	___awdiv@dividend+1,f
 11053  0A43  3001               	movlw	1
 11054  0A44  00F4               	movwf	??___awdiv
 11055  0A45  0874               	movf	??___awdiv,w
 11056  0A46  06F6               	xorwf	___awdiv@sign,f
 11057  0A47                     l2292:	
 11058  0A47  01F7               	clrf	___awdiv@quotient
 11059  0A48  01F8               	clrf	___awdiv@quotient+1
 11060  0A49  0870               	movf	___awdiv@divisor,w
 11061  0A4A  0471               	iorwf	___awdiv@divisor+1,w
 11062  0A4B  1903               	btfsc	3,2
 11063  0A4C  2A76               	goto	l2314
 11064  0A4D  01F5               	clrf	___awdiv@counter
 11065  0A4E  0AF5               	incf	___awdiv@counter,f
 11066  0A4F                     l2302:	
 11067  0A4F  1BF1               	btfsc	___awdiv@divisor+1,7
 11068  0A50  2A5B               	goto	l2304
 11069  0A51  3001               	movlw	1
 11070  0A52                     u2415:	
 11071  0A52  35F0               	lslf	___awdiv@divisor,f
 11072  0A53  0DF1               	rlf	___awdiv@divisor+1,f
 11073  0A54  0B89               	decfsz	9,f
 11074  0A55  2A52               	goto	u2415
 11075  0A56  3001               	movlw	1
 11076  0A57  00F4               	movwf	??___awdiv
 11077  0A58  0874               	movf	??___awdiv,w
 11078  0A59  07F5               	addwf	___awdiv@counter,f
 11079  0A5A  2A4F               	goto	l2302
 11080  0A5B                     l2304:	
 11081  0A5B  3001               	movlw	1
 11082  0A5C                     u2435:	
 11083  0A5C  35F7               	lslf	___awdiv@quotient,f
 11084  0A5D  0DF8               	rlf	___awdiv@quotient+1,f
 11085  0A5E  0B89               	decfsz	9,f
 11086  0A5F  2A5C               	goto	u2435
 11087  0A60  0871               	movf	___awdiv@divisor+1,w
 11088  0A61  0273               	subwf	___awdiv@dividend+1,w
 11089  0A62  1D03               	skipz
 11090  0A63  2A66               	goto	u2445
 11091  0A64  0870               	movf	___awdiv@divisor,w
 11092  0A65  0272               	subwf	___awdiv@dividend,w
 11093  0A66                     u2445:	
 11094  0A66  1C03               	skipc
 11095  0A67  2A6D               	goto	l2310
 11096  0A68  0870               	movf	___awdiv@divisor,w
 11097  0A69  02F2               	subwf	___awdiv@dividend,f
 11098  0A6A  0871               	movf	___awdiv@divisor+1,w
 11099  0A6B  3BF3               	subwfb	___awdiv@dividend+1,f
 11100  0A6C  1477               	bsf	___awdiv@quotient,0
 11101  0A6D                     l2310:	
 11102  0A6D  3001               	movlw	1
 11103  0A6E                     u2455:	
 11104  0A6E  36F1               	lsrf	___awdiv@divisor+1,f
 11105  0A6F  0CF0               	rrf	___awdiv@divisor,f
 11106  0A70  0B89               	decfsz	9,f
 11107  0A71  2A6E               	goto	u2455
 11108  0A72  3001               	movlw	1
 11109  0A73  02F5               	subwf	___awdiv@counter,f
 11110  0A74  1D03               	btfss	3,2
 11111  0A75  2A5B               	goto	l2304
 11112  0A76                     l2314:	
 11113  0A76  0876               	movf	___awdiv@sign,w
 11114  0A77  1903               	btfsc	3,2
 11115  0A78  2A7E               	goto	l2318
 11116  0A79  09F7               	comf	___awdiv@quotient,f
 11117  0A7A  09F8               	comf	___awdiv@quotient+1,f
 11118  0A7B  0AF7               	incf	___awdiv@quotient,f
 11119  0A7C  1903               	skipnz
 11120  0A7D  0AF8               	incf	___awdiv@quotient+1,f
 11121  0A7E                     l2318:	
 11122  0A7E  0878               	movf	___awdiv@quotient+1,w
 11123  0A7F  00F1               	movwf	?___awdiv+1
 11124  0A80  0877               	movf	___awdiv@quotient,w
 11125  0A81  00F0               	movwf	?___awdiv
 11126  0A82  0008               	return
 11127  0A83                     __end_of___awdiv:	
 11128                           
 11129                           	psect	text22
 11130  096C                     __ptext22:	
 11131 ;; *************** function _LCD_Set_Cursor *****************
 11132 ;; Defined at:
 11133 ;;		line 82 in file "lcd.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;  x               1    wreg     unsigned char 
 11136 ;;  y               1    4[COMMON] unsigned char 
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;  x               1    7[COMMON] unsigned char 
 11139 ;;  temp            1   10[COMMON] unsigned char 
 11140 ;;  w               1    9[COMMON] unsigned char 
 11141 ;;  z               1    8[COMMON] unsigned char 
 11142 ;; Return value:  Size  Location     Type
 11143 ;;                  1    wreg      void 
 11144 ;; Registers used:
 11145 ;;		wreg, status,2, status,0, pclath, cstack
 11146 ;; Tracked objects:
 11147 ;;		On entry : 0/0
 11148 ;;		On exit  : 0/0
 11149 ;;		Unchanged: 0/0
 11150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11151 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11152 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11153 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11154 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11155 ;;Total ram usage:        7 bytes
 11156 ;; Hardware stack levels used:    1
 11157 ;; Hardware stack levels required when called:    2
 11158 ;; This function calls:
 11159 ;;		_LCD_Cmd
 11160 ;; This function is called by:
 11161 ;;		_main
 11162 ;;		_menuChoice
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           
 11167                           ;psect for function _LCD_Set_Cursor
 11168  096C                     _LCD_Set_Cursor:	
 11169                           
 11170                           ;incstack = 0
 11171                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11172                           ;LCD_Set_Cursor@x stored from wreg
 11173  096C  00F7               	movwf	LCD_Set_Cursor@x
 11174                           
 11175                           ;lcd.c: 86: char temp,z,w;
 11176                           ;lcd.c: 88: if(y == 0)
 11177  096D  0874               	movf	LCD_Set_Cursor@y,w
 11178  096E  1D03               	btfss	3,2
 11179  096F  298C               	goto	l2474
 11180                           
 11181                           ;lcd.c: 89: {
 11182                           ;lcd.c: 90: temp = 0x80 + x;
 11183  0970  0877               	movf	LCD_Set_Cursor@x,w
 11184  0971  3E80               	addlw	128
 11185  0972  00F5               	movwf	??_LCD_Set_Cursor
 11186  0973  0875               	movf	??_LCD_Set_Cursor,w
 11187  0974  00FA               	movwf	LCD_Set_Cursor@temp
 11188                           
 11189                           ;lcd.c: 91: z = temp>>4;
 11190  0975  087A               	movf	LCD_Set_Cursor@temp,w
 11191  0976  00F5               	movwf	??_LCD_Set_Cursor
 11192  0977  3004               	movlw	4
 11193  0978                     u2675:	
 11194  0978  36F5               	lsrf	??_LCD_Set_Cursor,f
 11195  0979  0B89               	decfsz	9,f
 11196  097A  2978               	goto	u2675
 11197  097B  0875               	movf	??_LCD_Set_Cursor,w
 11198  097C  00F6               	movwf	??_LCD_Set_Cursor+1
 11199  097D  0876               	movf	??_LCD_Set_Cursor+1,w
 11200  097E  00F8               	movwf	LCD_Set_Cursor@z
 11201                           
 11202                           ;lcd.c: 92: w = temp & 0x0F;
 11203  097F  087A               	movf	LCD_Set_Cursor@temp,w
 11204  0980  390F               	andlw	15
 11205  0981  00F5               	movwf	??_LCD_Set_Cursor
 11206  0982  0875               	movf	??_LCD_Set_Cursor,w
 11207  0983  00F9               	movwf	LCD_Set_Cursor@w
 11208                           
 11209                           ;lcd.c: 93: LCD_Cmd(z);
 11210  0984  0878               	movf	LCD_Set_Cursor@z,w
 11211  0985  3188  2001  3189   	fcall	_LCD_Cmd
 11212                           
 11213                           ;lcd.c: 94: LCD_Cmd(w);
 11214  0988  0879               	movf	LCD_Set_Cursor@w,w
 11215  0989  3188  2001         	fcall	_LCD_Cmd
 11216                           
 11217                           ;lcd.c: 95: }
 11218  098B  0008               	return
 11219  098C                     l2474:	
 11220                           
 11221                           ;lcd.c: 97: else if(y == 1)
 11222  098C  0374               	decf	LCD_Set_Cursor@y,w
 11223  098D  1D03               	btfss	3,2
 11224  098E  0008               	return
 11225                           
 11226                           ;lcd.c: 98: {
 11227                           ;lcd.c: 99: temp = 0xC0 + x;
 11228  098F  0877               	movf	LCD_Set_Cursor@x,w
 11229  0990  3EC0               	addlw	192
 11230  0991  00F5               	movwf	??_LCD_Set_Cursor
 11231  0992  0875               	movf	??_LCD_Set_Cursor,w
 11232  0993  00FA               	movwf	LCD_Set_Cursor@temp
 11233                           
 11234                           ;lcd.c: 100: z = temp>>4;
 11235  0994  087A               	movf	LCD_Set_Cursor@temp,w
 11236  0995  00F5               	movwf	??_LCD_Set_Cursor
 11237  0996  3004               	movlw	4
 11238  0997                     u2695:	
 11239  0997  36F5               	lsrf	??_LCD_Set_Cursor,f
 11240  0998  0B89               	decfsz	9,f
 11241  0999  2997               	goto	u2695
 11242  099A  0875               	movf	??_LCD_Set_Cursor,w
 11243  099B  00F6               	movwf	??_LCD_Set_Cursor+1
 11244  099C  0876               	movf	??_LCD_Set_Cursor+1,w
 11245  099D  00F8               	movwf	LCD_Set_Cursor@z
 11246                           
 11247                           ;lcd.c: 101: w = temp & 0x0F;
 11248  099E  087A               	movf	LCD_Set_Cursor@temp,w
 11249  099F  390F               	andlw	15
 11250  09A0  00F5               	movwf	??_LCD_Set_Cursor
 11251  09A1  0875               	movf	??_LCD_Set_Cursor,w
 11252  09A2  00F9               	movwf	LCD_Set_Cursor@w
 11253                           
 11254                           ;lcd.c: 102: LCD_Cmd(z);
 11255  09A3  0878               	movf	LCD_Set_Cursor@z,w
 11256  09A4  3188  2001  3189   	fcall	_LCD_Cmd
 11257                           
 11258                           ;lcd.c: 103: LCD_Cmd(w);
 11259  09A7  0879               	movf	LCD_Set_Cursor@w,w
 11260  09A8  3188  2001         	fcall	_LCD_Cmd
 11261  09AA  0008               	return
 11262  09AB                     __end_of_LCD_Set_Cursor:	
 11263                           
 11264                           	psect	text23
 11265  09AB                     __ptext23:	
 11266 ;; *************** function _SYSTEM_Initialize *****************
 11267 ;; Defined at:
 11268 ;;		line 71 in file "system.c"
 11269 ;; Parameters:    Size  Location     Type
 11270 ;;		None
 11271 ;; Auto vars:     Size  Location     Type
 11272 ;;		None
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  1    wreg      void 
 11275 ;; Registers used:
 11276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11284 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11285 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11286 ;;Total ram usage:        3 bytes
 11287 ;; Hardware stack levels used:    1
 11288 ;; Hardware stack levels required when called:    3
 11289 ;; This function calls:
 11290 ;;		_ADCC_Initialize
 11291 ;;		_InitCustomChars
 11292 ;;		_LCD_Clear
 11293 ;;		_LCD_Init
 11294 ;;		_OSCILLATOR_Initialize
 11295 ;;		_PIN_MANAGER_Initialize
 11296 ;;		_PWM_Initialize
 11297 ;;		_TMR2_Initialize
 11298 ;; This function is called by:
 11299 ;;		_main
 11300 ;; This function uses a non-reentrant model
 11301 ;;
 11302                           
 11303                           
 11304                           ;psect for function _SYSTEM_Initialize
 11305  09AB                     _SYSTEM_Initialize:	
 11306                           
 11307                           ;system.c: 73: PIN_MANAGER_Initialize();
 11308                           
 11309                           ;incstack = 0
 11310                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11311  09AB  3188  20C5  3189   	fcall	_PIN_MANAGER_Initialize
 11312                           
 11313                           ;system.c: 74: OSCILLATOR_Initialize();
 11314  09AE  3180  2004  3189   	fcall	_OSCILLATOR_Initialize
 11315                           
 11316                           ;system.c: 75: FVRCON = 0x00;
 11317  09B1  0032               	movlb	18	; select bank18
 11318  09B2  018C               	clrf	12	;volatile
 11319                           
 11320                           ;system.c: 76: ADCC_Initialize();
 11321  09B3  3197  27B1  3189   	fcall	_ADCC_Initialize
 11322                           
 11323                           ;system.c: 77: PWM_Initialize();
 11324  09B6  3197  2720  3189   	fcall	_PWM_Initialize
 11325                           
 11326                           ;system.c: 79: TMR2_Initialize();
 11327  09B9  3197  2750  3189   	fcall	_TMR2_Initialize
 11328                           
 11329                           ;system.c: 80: LCD_Init(0X00);
 11330  09BC  3000               	movlw	0
 11331  09BD  3180  200D  3189   	fcall	_LCD_Init
 11332                           
 11333                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 11334  09C0  3009               	movlw	9
 11335  09C1  00FA               	movwf	??_SYSTEM_Initialize+2
 11336  09C2  301E               	movlw	30
 11337  09C3  00F9               	movwf	??_SYSTEM_Initialize+1
 11338  09C4  30EB               	movlw	235
 11339  09C5  00F8               	movwf	??_SYSTEM_Initialize
 11340  09C6                     u3677:	
 11341  09C6  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11342  09C7  29C6               	goto	u3677
 11343  09C8  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11344  09C9  29C6               	goto	u3677
 11345  09CA  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11346  09CB  29C6               	goto	u3677
 11347  09CC  0000               	nop
 11348                           
 11349                           ;system.c: 82: LCD_Clear();
 11350  09CD  3197  2718  3189   	fcall	_LCD_Clear
 11351                           
 11352                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 11353  09D0  3005               	movlw	5
 11354  09D1  00FA               	movwf	??_SYSTEM_Initialize+2
 11355  09D2  300F               	movlw	15
 11356  09D3  00F9               	movwf	??_SYSTEM_Initialize+1
 11357  09D4  30F4               	movlw	244
 11358  09D5  00F8               	movwf	??_SYSTEM_Initialize
 11359  09D6                     u3687:	
 11360  09D6  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11361  09D7  29D6               	goto	u3687
 11362  09D8  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11363  09D9  29D6               	goto	u3687
 11364  09DA  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11365  09DB  29D6               	goto	u3687
 11366                           
 11367                           ;system.c: 84: InitCustomChars();
 11368  09DC  3188  2073  3189   	fcall	_InitCustomChars
 11369                           
 11370                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11371  09DF  3009               	movlw	9
 11372  09E0  00FA               	movwf	??_SYSTEM_Initialize+2
 11373  09E1  301E               	movlw	30
 11374  09E2  00F9               	movwf	??_SYSTEM_Initialize+1
 11375  09E3  30EB               	movlw	235
 11376  09E4  00F8               	movwf	??_SYSTEM_Initialize
 11377  09E5                     u3697:	
 11378  09E5  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11379  09E6  29E5               	goto	u3697
 11380  09E7  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11381  09E8  29E5               	goto	u3697
 11382  09E9  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11383  09EA  29E5               	goto	u3697
 11384  09EB  0000               	nop
 11385  09EC  0008               	return
 11386  09ED                     __end_of_SYSTEM_Initialize:	
 11387                           
 11388                           	psect	text24
 11389  1750                     __ptext24:	
 11390 ;; *************** function _TMR2_Initialize *****************
 11391 ;; Defined at:
 11392 ;;		line 3 in file "tmr2.c"
 11393 ;; Parameters:    Size  Location     Type
 11394 ;;		None
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;		None
 11397 ;; Return value:  Size  Location     Type
 11398 ;;                  1    wreg      void 
 11399 ;; Registers used:
 11400 ;;		wreg, status,2
 11401 ;; Tracked objects:
 11402 ;;		On entry : 0/0
 11403 ;;		On exit  : 0/0
 11404 ;;		Unchanged: 0/0
 11405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11410 ;;Total ram usage:        0 bytes
 11411 ;; Hardware stack levels used:    1
 11412 ;; This function calls:
 11413 ;;		Nothing
 11414 ;; This function is called by:
 11415 ;;		_SYSTEM_Initialize
 11416 ;; This function uses a non-reentrant model
 11417 ;;
 11418                           
 11419                           
 11420                           ;psect for function _TMR2_Initialize
 11421  1750                     _TMR2_Initialize:	
 11422                           
 11423                           ;tmr2.c: 5: T2CON = 0x00;
 11424                           
 11425                           ;incstack = 0
 11426                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11427  1750  0025               	movlb	5	; select bank5
 11428  1751  018E               	clrf	14	;volatile
 11429                           
 11430                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11431  1752  3001               	movlw	1
 11432  1753  0090               	movwf	16	;volatile
 11433                           
 11434                           ;tmr2.c: 9: T2HLT = 0x00;
 11435  1754  018F               	clrf	15	;volatile
 11436                           
 11437                           ;tmr2.c: 11: T2RST = 0x00;
 11438  1755  0191               	clrf	17	;volatile
 11439                           
 11440                           ;tmr2.c: 13: T2PR = 0xFF;
 11441  1756  30FF               	movlw	255
 11442  1757  008D               	movwf	13	;volatile
 11443                           
 11444                           ;tmr2.c: 15: T2TMR = 0x00;
 11445  1758  018C               	clrf	12	;volatile
 11446                           
 11447                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11448  1759  002E               	movlb	14	; select bank14
 11449  175A  1090               	bcf	16,1	;volatile
 11450                           
 11451                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11452  175B  0025               	movlb	5	; select bank5
 11453  175C  178E               	bsf	14,7	;volatile
 11454  175D  0008               	return
 11455  175E                     __end_of_TMR2_Initialize:	
 11456                           
 11457                           	psect	text25
 11458  1720                     __ptext25:	
 11459 ;; *************** function _PWM_Initialize *****************
 11460 ;; Defined at:
 11461 ;;		line 3 in file "pwm.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;		None
 11464 ;; Auto vars:     Size  Location     Type
 11465 ;;		None
 11466 ;; Return value:  Size  Location     Type
 11467 ;;                  1    wreg      void 
 11468 ;; Registers used:
 11469 ;;		wreg, status,2, status,0
 11470 ;; Tracked objects:
 11471 ;;		On entry : 0/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11479 ;;Total ram usage:        0 bytes
 11480 ;; Hardware stack levels used:    1
 11481 ;; This function calls:
 11482 ;;		Nothing
 11483 ;; This function is called by:
 11484 ;;		_SYSTEM_Initialize
 11485 ;; This function uses a non-reentrant model
 11486 ;;
 11487                           
 11488                           
 11489                           ;psect for function _PWM_Initialize
 11490  1720                     _PWM_Initialize:	
 11491                           
 11492                           ;pwm.c: 14: PWM7CON = 0x80;
 11493                           
 11494                           ;incstack = 0
 11495                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11496  1720  3080               	movlw	128
 11497  1721  0027               	movlb	7	; select bank7
 11498  1722  0092               	movwf	18	;volatile
 11499                           
 11500                           ;pwm.c: 16: PWM7DCH = 0x00;
 11501  1723  0191               	clrf	17	;volatile
 11502                           
 11503                           ;pwm.c: 18: PWM7DCL = 0x00;
 11504  1724  0190               	clrf	16	;volatile
 11505                           
 11506                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
 11507  1725  0024               	movlb	4	; select bank4
 11508  1726  081F               	movf	31,w	;volatile
 11509  1727  39F3               	andlw	-13
 11510  1728  3804               	iorlw	4
 11511  1729  009F               	movwf	31	;volatile
 11512  172A  0008               	return
 11513  172B                     __end_of_PWM_Initialize:	
 11514                           
 11515                           	psect	text26
 11516  08C5                     __ptext26:	
 11517 ;; *************** function _PIN_MANAGER_Initialize *****************
 11518 ;; Defined at:
 11519 ;;		line 5 in file "pin_manager.c"
 11520 ;; Parameters:    Size  Location     Type
 11521 ;;		None
 11522 ;; Auto vars:     Size  Location     Type
 11523 ;;  state           1    0[COMMON] unsigned char 
 11524 ;; Return value:  Size  Location     Type
 11525 ;;                  1    wreg      void 
 11526 ;; Registers used:
 11527 ;;		wreg, status,2
 11528 ;; Tracked objects:
 11529 ;;		On entry : 0/0
 11530 ;;		On exit  : 0/0
 11531 ;;		Unchanged: 0/0
 11532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11537 ;;Total ram usage:        1 bytes
 11538 ;; Hardware stack levels used:    1
 11539 ;; This function calls:
 11540 ;;		Nothing
 11541 ;; This function is called by:
 11542 ;;		_SYSTEM_Initialize
 11543 ;; This function uses a non-reentrant model
 11544 ;;
 11545                           
 11546                           
 11547                           ;psect for function _PIN_MANAGER_Initialize
 11548  08C5                     _PIN_MANAGER_Initialize:	
 11549                           
 11550                           ;pin_manager.c: 7: LATA = 0x00;
 11551                           
 11552                           ;incstack = 0
 11553                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11554  08C5  0020               	movlb	0	; select bank0
 11555  08C6  0196               	clrf	22	;volatile
 11556                           
 11557                           ;pin_manager.c: 8: LATB = 0x00;
 11558  08C7  0197               	clrf	23	;volatile
 11559                           
 11560                           ;pin_manager.c: 9: LATC = 0x00;
 11561  08C8  0198               	clrf	24	;volatile
 11562                           
 11563                           ;pin_manager.c: 11: WPUA = 0x00;
 11564  08C9  003E               	movlb	30	; select bank30
 11565  08CA  01B9               	clrf	57	;volatile
 11566                           
 11567                           ;pin_manager.c: 12: WPUB = 0x00;
 11568  08CB  01C4               	clrf	68	;volatile
 11569                           
 11570                           ;pin_manager.c: 13: WPUC = 0x00;
 11571  08CC  01CF               	clrf	79	;volatile
 11572                           
 11573                           ;pin_manager.c: 14: WPUE = 0x8;
 11574  08CD  3008               	movlw	8
 11575  08CE  00E5               	movwf	101	;volatile
 11576                           
 11577                           ;pin_manager.c: 16: TRISA = 0x0A;
 11578  08CF  300A               	movlw	10
 11579  08D0  0020               	movlb	0	; select bank0
 11580  08D1  0091               	movwf	17	;volatile
 11581                           
 11582                           ;pin_manager.c: 17: TRISB = 0x07;
 11583  08D2  3007               	movlw	7
 11584  08D3  0092               	movwf	18	;volatile
 11585                           
 11586                           ;pin_manager.c: 18: TRISC = 0x00;
 11587  08D4  0193               	clrf	19	;volatile
 11588                           
 11589                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11590  08D5  300A               	movlw	10
 11591  08D6  003E               	movlb	30	; select bank30
 11592  08D7  00B8               	movwf	56	;volatile
 11593                           
 11594                           ;pin_manager.c: 21: ANSELB = 0x00;
 11595  08D8  01C3               	clrf	67	;volatile
 11596                           
 11597                           ;pin_manager.c: 22: ANSELC = 0x00;
 11598  08D9  01CE               	clrf	78	;volatile
 11599                           
 11600                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11601  08DA  002E               	movlb	14	; select bank14
 11602  08DB  1216               	bcf	22,4	;volatile
 11603                           
 11604                           ;pin_manager.c: 25: bool state = GIE;
 11605  08DC  3000               	movlw	0
 11606  08DD  1B8B               	btfsc	11,7	;volatile
 11607  08DE  3001               	movlw	1
 11608  08DF  00F0               	movwf	PIN_MANAGER_Initialize@state
 11609                           
 11610                           ;pin_manager.c: 26: GIE = 0;
 11611  08E0  138B               	bcf	11,7	;volatile
 11612                           
 11613                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11614  08E1  3055               	movlw	85
 11615  08E2  003D               	movlb	29	; select bank29
 11616  08E3  008F               	movwf	15	;volatile
 11617                           
 11618                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11619  08E4  30AA               	movlw	170
 11620  08E5  008F               	movwf	15	;volatile
 11621                           
 11622                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11623  08E6  100F               	bcf	15,0	;volatile
 11624                           
 11625                           ;pin_manager.c: 33: RC3PPS = 0X0F;
 11626  08E7  300F               	movlw	15
 11627  08E8  003E               	movlb	30	; select bank30
 11628  08E9  00A3               	movwf	35	;volatile
 11629                           
 11630                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 11631  08EA  3055               	movlw	85
 11632  08EB  003D               	movlb	29	; select bank29
 11633  08EC  008F               	movwf	15	;volatile
 11634                           
 11635                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 11636  08ED  30AA               	movlw	170
 11637  08EE  008F               	movwf	15	;volatile
 11638                           
 11639                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 11640  08EF  140F               	bsf	15,0	;volatile
 11641                           
 11642                           ;pin_manager.c: 40: GIE = state;
 11643  08F0  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11644  08F1  28F4               	goto	u2800
 11645  08F2  178B               	bsf	11,7	;volatile
 11646  08F3  0008               	return
 11647  08F4                     u2800:	
 11648  08F4  138B               	bcf	11,7	;volatile
 11649  08F5  0008               	return
 11650  08F6                     __end_of_PIN_MANAGER_Initialize:	
 11651                           
 11652                           	psect	text27
 11653  0004                     __ptext27:	
 11654 ;; *************** function _OSCILLATOR_Initialize *****************
 11655 ;; Defined at:
 11656 ;;		line 89 in file "system.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;		None
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;		None
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      void 
 11663 ;; Registers used:
 11664 ;;		wreg, status,2
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;Total ram usage:        0 bytes
 11675 ;; Hardware stack levels used:    1
 11676 ;; This function calls:
 11677 ;;		Nothing
 11678 ;; This function is called by:
 11679 ;;		_SYSTEM_Initialize
 11680 ;; This function uses a non-reentrant model
 11681 ;;
 11682                           
 11683                           
 11684                           ;psect for function _OSCILLATOR_Initialize
 11685  0004                     _OSCILLATOR_Initialize:	
 11686                           
 11687                           ;system.c: 91: OSCCON1 = 0x60;
 11688                           
 11689                           ;incstack = 0
 11690                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11691  0004  3060               	movlw	96
 11692  0005  0031               	movlb	17	; select bank17
 11693  0006  008D               	movwf	13	;volatile
 11694                           
 11695                           ;system.c: 92: OSCCON3 = 0x00;
 11696  0007  018F               	clrf	15	;volatile
 11697                           
 11698                           ;system.c: 93: OSCEN = 0x00;
 11699  0008  0191               	clrf	17	;volatile
 11700                           
 11701                           ;system.c: 94: OSCFRQ = 0x06;
 11702  0009  3006               	movlw	6
 11703  000A  0093               	movwf	19	;volatile
 11704                           
 11705                           ;system.c: 95: OSCTUNE = 0x00;
 11706  000B  0192               	clrf	18	;volatile
 11707  000C  0008               	return
 11708  000D                     __end_of_OSCILLATOR_Initialize:	
 11709                           
 11710                           	psect	text28
 11711  000D                     __ptext28:	
 11712 ;; *************** function _LCD_Init *****************
 11713 ;; Defined at:
 11714 ;;		line 154 in file "lcd.c"
 11715 ;; Parameters:    Size  Location     Type
 11716 ;;  style           1    wreg     unsigned char 
 11717 ;; Auto vars:     Size  Location     Type
 11718 ;;  style           1    7[COMMON] unsigned char 
 11719 ;; Return value:  Size  Location     Type
 11720 ;;                  1    wreg      void 
 11721 ;; Registers used:
 11722 ;;		wreg, status,2, status,0, pclath, cstack
 11723 ;; Tracked objects:
 11724 ;;		On entry : 0/0
 11725 ;;		On exit  : 0/0
 11726 ;;		Unchanged: 0/0
 11727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11730 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11731 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11732 ;;Total ram usage:        4 bytes
 11733 ;; Hardware stack levels used:    1
 11734 ;; Hardware stack levels required when called:    2
 11735 ;; This function calls:
 11736 ;;		_LCD_Cmd
 11737 ;;		_LCD_Port
 11738 ;; This function is called by:
 11739 ;;		_SYSTEM_Initialize
 11740 ;; This function uses a non-reentrant model
 11741 ;;
 11742                           
 11743                           
 11744                           ;psect for function _LCD_Init
 11745  000D                     _LCD_Init:	
 11746                           
 11747                           ;incstack = 0
 11748                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 11749                           ;LCD_Init@style stored from wreg
 11750  000D  00F7               	movwf	LCD_Init@style
 11751                           
 11752                           ;lcd.c: 156: LCD_Port(0x00);
 11753  000E  3000               	movlw	0
 11754  000F  3197  2799  3180   	fcall	_LCD_Port
 11755                           
 11756                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 11757  0012  3005               	movlw	5
 11758  0013  00F6               	movwf	??_LCD_Init+2
 11759  0014  300F               	movlw	15
 11760  0015  00F5               	movwf	??_LCD_Init+1
 11761  0016  30F4               	movlw	244
 11762  0017  00F4               	movwf	??_LCD_Init
 11763  0018                     u3707:	
 11764  0018  0BF4               	decfsz	??_LCD_Init,f
 11765  0019  2818               	goto	u3707
 11766  001A  0BF5               	decfsz	??_LCD_Init+1,f
 11767  001B  2818               	goto	u3707
 11768  001C  0BF6               	decfsz	??_LCD_Init+2,f
 11769  001D  2818               	goto	u3707
 11770                           
 11771                           ;lcd.c: 160: LCD_Cmd(0x03);
 11772  001E  3003               	movlw	3
 11773  001F  3188  2001  3180   	fcall	_LCD_Cmd
 11774                           
 11775                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 11776  0022  3068               	movlw	104
 11777  0023  00F5               	movwf	??_LCD_Init+1
 11778  0024  30E4               	movlw	228
 11779  0025  00F4               	movwf	??_LCD_Init
 11780  0026                     u3717:	
 11781  0026  0BF4               	decfsz	??_LCD_Init,f
 11782  0027  2826               	goto	u3717
 11783  0028  0BF5               	decfsz	??_LCD_Init+1,f
 11784  0029  2826               	goto	u3717
 11785  002A  0000               	nop
 11786                           
 11787                           ;lcd.c: 164: LCD_Cmd(0x03);
 11788  002B  3003               	movlw	3
 11789  002C  3188  2001  3180   	fcall	_LCD_Cmd
 11790                           
 11791                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11792  002F  3089               	movlw	137
 11793  0030  00F4               	movwf	??_LCD_Init
 11794  0031                     u3727:	
 11795  0031  3200               	nop2
 11796  0032  3200               	nop2
 11797  0033  0BF4               	decfsz	??_LCD_Init,f
 11798  0034  2831               	goto	u3727
 11799                           
 11800                           ;lcd.c: 168: LCD_Cmd(0x03);
 11801  0035  3003               	movlw	3
 11802  0036  3188  2001  3180   	fcall	_LCD_Cmd
 11803                           
 11804                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11805  0039  3089               	movlw	137
 11806  003A  00F4               	movwf	??_LCD_Init
 11807  003B                     u3737:	
 11808  003B  3200               	nop2
 11809  003C  3200               	nop2
 11810  003D  0BF4               	decfsz	??_LCD_Init,f
 11811  003E  283B               	goto	u3737
 11812                           
 11813                           ;lcd.c: 172: LCD_Cmd(0x02);
 11814  003F  3002               	movlw	2
 11815  0040  3188  2001  3180   	fcall	_LCD_Cmd
 11816                           
 11817                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11818  0043  3089               	movlw	137
 11819  0044  00F4               	movwf	??_LCD_Init
 11820  0045                     u3747:	
 11821  0045  3200               	nop2
 11822  0046  3200               	nop2
 11823  0047  0BF4               	decfsz	??_LCD_Init,f
 11824  0048  2845               	goto	u3747
 11825                           
 11826                           ;lcd.c: 176: LCD_Cmd(0x2);
 11827  0049  3002               	movlw	2
 11828  004A  3188  2001  3180   	fcall	_LCD_Cmd
 11829                           
 11830                           ;lcd.c: 178: LCD_Cmd(0x8);
 11831  004D  3008               	movlw	8
 11832  004E  3188  2001  3180   	fcall	_LCD_Cmd
 11833                           
 11834                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11835  0051  3089               	movlw	137
 11836  0052  00F4               	movwf	??_LCD_Init
 11837  0053                     u3757:	
 11838  0053  3200               	nop2
 11839  0054  3200               	nop2
 11840  0055  0BF4               	decfsz	??_LCD_Init,f
 11841  0056  2853               	goto	u3757
 11842                           
 11843                           ;lcd.c: 182: LCD_Cmd(0x0);
 11844  0057  3000               	movlw	0
 11845  0058  3188  2001  3180   	fcall	_LCD_Cmd
 11846                           
 11847                           ;lcd.c: 184: LCD_Cmd(0x8);
 11848  005B  3008               	movlw	8
 11849  005C  3188  2001  3180   	fcall	_LCD_Cmd
 11850                           
 11851                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11852  005F  3089               	movlw	137
 11853  0060  00F4               	movwf	??_LCD_Init
 11854  0061                     u3767:	
 11855  0061  3200               	nop2
 11856  0062  3200               	nop2
 11857  0063  0BF4               	decfsz	??_LCD_Init,f
 11858  0064  2861               	goto	u3767
 11859                           
 11860                           ;lcd.c: 188: LCD_Cmd(0x0);
 11861  0065  3000               	movlw	0
 11862  0066  3188  2001  3180   	fcall	_LCD_Cmd
 11863                           
 11864                           ;lcd.c: 190: LCD_Cmd(0x1);
 11865  0069  3001               	movlw	1
 11866  006A  3188  2001  3180   	fcall	_LCD_Cmd
 11867                           
 11868                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 11869  006D  3034               	movlw	52
 11870  006E  00F5               	movwf	??_LCD_Init+1
 11871  006F  30F1               	movlw	241
 11872  0070  00F4               	movwf	??_LCD_Init
 11873  0071                     u3777:	
 11874  0071  0BF4               	decfsz	??_LCD_Init,f
 11875  0072  2871               	goto	u3777
 11876  0073  0BF5               	decfsz	??_LCD_Init+1,f
 11877  0074  2871               	goto	u3777
 11878  0075  3200               	nop2
 11879                           
 11880                           ;lcd.c: 194: LCD_Cmd(0x0);
 11881  0076  3000               	movlw	0
 11882  0077  3188  2001  3180   	fcall	_LCD_Cmd
 11883                           
 11884                           ;lcd.c: 196: LCD_Cmd(0x6);
 11885  007A  3006               	movlw	6
 11886  007B  3188  2001  3180   	fcall	_LCD_Cmd
 11887                           
 11888                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11889  007E  3089               	movlw	137
 11890  007F  00F4               	movwf	??_LCD_Init
 11891  0080                     u3787:	
 11892  0080  3200               	nop2
 11893  0081  3200               	nop2
 11894  0082  0BF4               	decfsz	??_LCD_Init,f
 11895  0083  2880               	goto	u3787
 11896                           
 11897                           ;lcd.c: 200: LCD_Cmd(0x0);
 11898  0084  3000               	movlw	0
 11899  0085  3188  2001  3180   	fcall	_LCD_Cmd
 11900                           
 11901                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 11902  0088  0877               	movf	LCD_Init@style,w
 11903  0089  380C               	iorlw	12
 11904  008A  3188  2001  3180   	fcall	_LCD_Cmd
 11905                           
 11906                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 11907  008D  3089               	movlw	137
 11908  008E  00F4               	movwf	??_LCD_Init
 11909  008F                     u3797:	
 11910  008F  3200               	nop2
 11911  0090  3200               	nop2
 11912  0091  0BF4               	decfsz	??_LCD_Init,f
 11913  0092  288F               	goto	u3797
 11914  0093  0008               	return
 11915  0094                     __end_of_LCD_Init:	
 11916                           
 11917                           	psect	text29
 11918  1718                     __ptext29:	
 11919 ;; *************** function _LCD_Clear *****************
 11920 ;; Defined at:
 11921 ;;		line 75 in file "lcd.c"
 11922 ;; Parameters:    Size  Location     Type
 11923 ;;		None
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;		None
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  1    wreg      void 
 11928 ;; Registers used:
 11929 ;;		wreg, status,2, status,0, pclath, cstack
 11930 ;; Tracked objects:
 11931 ;;		On entry : 0/0
 11932 ;;		On exit  : 0/0
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;Total ram usage:        0 bytes
 11940 ;; Hardware stack levels used:    1
 11941 ;; Hardware stack levels required when called:    2
 11942 ;; This function calls:
 11943 ;;		_LCD_Cmd
 11944 ;; This function is called by:
 11945 ;;		_SYSTEM_Initialize
 11946 ;;		_main
 11947 ;; This function uses a non-reentrant model
 11948 ;;
 11949                           
 11950                           
 11951                           ;psect for function _LCD_Clear
 11952  1718                     _LCD_Clear:	
 11953                           
 11954                           ;lcd.c: 77: LCD_Cmd(0);
 11955                           
 11956                           ;incstack = 0
 11957                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 11958  1718  3000               	movlw	0
 11959  1719  3188  2001  3197   	fcall	_LCD_Cmd
 11960                           
 11961                           ;lcd.c: 78: LCD_Cmd(1);
 11962  171C  3001               	movlw	1
 11963  171D  3188  2001         	fcall	_LCD_Cmd
 11964  171F  0008               	return
 11965  1720                     __end_of_LCD_Clear:	
 11966                           
 11967                           	psect	text30
 11968  0873                     __ptext30:	
 11969 ;; *************** function _InitCustomChars *****************
 11970 ;; Defined at:
 11971 ;;		line 29 in file "lcd.c"
 11972 ;; Parameters:    Size  Location     Type
 11973 ;;		None
 11974 ;; Auto vars:     Size  Location     Type
 11975 ;;  i               1    6[COMMON] unsigned char 
 11976 ;; Return value:  Size  Location     Type
 11977 ;;                  1    wreg      void 
 11978 ;; Registers used:
 11979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11980 ;; Tracked objects:
 11981 ;;		On entry : 0/0
 11982 ;;		On exit  : 0/0
 11983 ;;		Unchanged: 0/0
 11984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11989 ;;Total ram usage:        2 bytes
 11990 ;; Hardware stack levels used:    1
 11991 ;; Hardware stack levels required when called:    2
 11992 ;; This function calls:
 11993 ;;		_LCD_Cmd
 11994 ;;		_LCD_Write_Char
 11995 ;; This function is called by:
 11996 ;;		_SYSTEM_Initialize
 11997 ;; This function uses a non-reentrant model
 11998 ;;
 11999                           
 12000                           
 12001                           ;psect for function _InitCustomChars
 12002  0873                     _InitCustomChars:	
 12003                           
 12004                           ;lcd.c: 31: uint8_t i;
 12005                           ;lcd.c: 32: LCD_Cmd(0x04);
 12006                           
 12007                           ;incstack = 0
 12008                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12009  0873  3004               	movlw	4
 12010  0874  3188  2001  3188   	fcall	_LCD_Cmd
 12011                           
 12012                           ;lcd.c: 33: LCD_Cmd(0x00);
 12013  0877  3000               	movlw	0
 12014  0878  3188  2001  3188   	fcall	_LCD_Cmd
 12015                           
 12016                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 12017  087B  01F6               	clrf	InitCustomChars@i
 12018  087C  3010               	movlw	16
 12019  087D  0276               	subwf	InitCustomChars@i,w
 12020  087E  1803               	btfsc	3,0
 12021  087F  2891               	goto	l2460
 12022  0880                     l2454:	
 12023                           
 12024                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 12025  0880  0876               	movf	InitCustomChars@i,w
 12026  0881  3EA0               	addlw	(low (___cgram| (0+256)))& (0+255)
 12027  0882  0086               	movwf	6
 12028  0883  3001               	movlw	1	; select bank3/4
 12029  0884  0087               	movwf	7
 12030  0885  0801               	movf	1,w
 12031  0886  3188  2099  3188   	fcall	_LCD_Write_Char
 12032  0889  3001               	movlw	1
 12033  088A  00F5               	movwf	??_InitCustomChars
 12034  088B  0875               	movf	??_InitCustomChars,w
 12035  088C  07F6               	addwf	InitCustomChars@i,f
 12036  088D  3010               	movlw	16
 12037  088E  0276               	subwf	InitCustomChars@i,w
 12038  088F  1C03               	skipc
 12039  0890  2880               	goto	l2454
 12040  0891                     l2460:	
 12041                           
 12042                           ;lcd.c: 36: LCD_Cmd(0);
 12043  0891  3000               	movlw	0
 12044  0892  3188  2001  3188   	fcall	_LCD_Cmd
 12045                           
 12046                           ;lcd.c: 37: LCD_Cmd(2);
 12047  0895  3002               	movlw	2
 12048  0896  3188  2001         	fcall	_LCD_Cmd
 12049  0898  0008               	return
 12050  0899                     __end_of_InitCustomChars:	
 12051                           
 12052                           	psect	text31
 12053  0899                     __ptext31:	
 12054 ;; *************** function _LCD_Write_Char *****************
 12055 ;; Defined at:
 12056 ;;		line 223 in file "lcd.c"
 12057 ;; Parameters:    Size  Location     Type
 12058 ;;  a               1    wreg     const unsigned char 
 12059 ;; Auto vars:     Size  Location     Type
 12060 ;;  a               1    4[COMMON] const unsigned char 
 12061 ;;  y               1    3[COMMON] unsigned char 
 12062 ;;  temp            1    2[COMMON] unsigned char 
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  1    wreg      void 
 12065 ;; Registers used:
 12066 ;;		wreg, status,2, status,0, pclath, cstack
 12067 ;; Tracked objects:
 12068 ;;		On entry : 0/0
 12069 ;;		On exit  : 0/0
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12073 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12075 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12076 ;;Total ram usage:        4 bytes
 12077 ;; Hardware stack levels used:    1
 12078 ;; Hardware stack levels required when called:    1
 12079 ;; This function calls:
 12080 ;;		_LCD_Port
 12081 ;; This function is called by:
 12082 ;;		_InitCustomChars
 12083 ;;		_LCD_Write_String
 12084 ;;		_LCD_Write_Int
 12085 ;;		_main
 12086 ;; This function uses a non-reentrant model
 12087 ;;
 12088                           
 12089                           
 12090                           ;psect for function _LCD_Write_Char
 12091  0899                     _LCD_Write_Char:	
 12092                           
 12093                           ;incstack = 0
 12094                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12095                           ;LCD_Write_Char@a stored from wreg
 12096  0899  00F4               	movwf	LCD_Write_Char@a
 12097                           
 12098                           ;lcd.c: 225: char temp,y;
 12099                           ;lcd.c: 226: temp = a&0x0F;
 12100  089A  0874               	movf	LCD_Write_Char@a,w
 12101  089B  390F               	andlw	15
 12102  089C  00F1               	movwf	??_LCD_Write_Char
 12103  089D  0871               	movf	??_LCD_Write_Char,w
 12104  089E  00F2               	movwf	LCD_Write_Char@temp
 12105                           
 12106                           ;lcd.c: 227: y = a&0xF0;
 12107  089F  0874               	movf	LCD_Write_Char@a,w
 12108  08A0  39F0               	andlw	240
 12109  08A1  00F1               	movwf	??_LCD_Write_Char
 12110  08A2  0871               	movf	??_LCD_Write_Char,w
 12111  08A3  00F3               	movwf	LCD_Write_Char@y
 12112                           
 12113                           ;lcd.c: 228: RA0 = 1;
 12114  08A4  0020               	movlb	0	; select bank0
 12115  08A5  140C               	bsf	12,0	;volatile
 12116                           
 12117                           ;lcd.c: 229: LCD_Port(y>>4);
 12118  08A6  0873               	movf	LCD_Write_Char@y,w
 12119  08A7  00F1               	movwf	??_LCD_Write_Char
 12120  08A8  3004               	movlw	4
 12121  08A9                     u2375:	
 12122  08A9  36F1               	lsrf	??_LCD_Write_Char,f
 12123  08AA  0B89               	decfsz	9,f
 12124  08AB  28A9               	goto	u2375
 12125  08AC  0871               	movf	??_LCD_Write_Char,w
 12126  08AD  3197  2799  3188   	fcall	_LCD_Port
 12127                           
 12128                           ;lcd.c: 230: RA2 = 1;
 12129  08B0  0020               	movlb	0	; select bank0
 12130  08B1  150C               	bsf	12,2	;volatile
 12131                           
 12132                           ;lcd.c: 231: RA2 = 0;
 12133  08B2  110C               	bcf	12,2	;volatile
 12134                           
 12135                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12136  08B3  306A               	movlw	106
 12137  08B4  00F1               	movwf	??_LCD_Write_Char
 12138  08B5                     u3807:	
 12139  08B5  0BF1               	decfsz	??_LCD_Write_Char,f
 12140  08B6  28B5               	goto	u3807
 12141  08B7  0000               	nop
 12142                           
 12143                           ;lcd.c: 233: LCD_Port(temp);
 12144  08B8  0872               	movf	LCD_Write_Char@temp,w
 12145  08B9  3197  2799  3188   	fcall	_LCD_Port
 12146                           
 12147                           ;lcd.c: 234: RA2 = 1;
 12148  08BC  0020               	movlb	0	; select bank0
 12149  08BD  150C               	bsf	12,2	;volatile
 12150                           
 12151                           ;lcd.c: 235: RA2 = 0;
 12152  08BE  110C               	bcf	12,2	;volatile
 12153                           
 12154                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12155  08BF  306A               	movlw	106
 12156  08C0  00F1               	movwf	??_LCD_Write_Char
 12157  08C1                     u3817:	
 12158  08C1  0BF1               	decfsz	??_LCD_Write_Char,f
 12159  08C2  28C1               	goto	u3817
 12160  08C3  0000               	nop
 12161  08C4  0008               	return
 12162  08C5                     __end_of_LCD_Write_Char:	
 12163                           
 12164                           	psect	text32
 12165  0801                     __ptext32:	
 12166 ;; *************** function _LCD_Cmd *****************
 12167 ;; Defined at:
 12168 ;;		line 65 in file "lcd.c"
 12169 ;; Parameters:    Size  Location     Type
 12170 ;;  a               1    wreg     unsigned char 
 12171 ;; Auto vars:     Size  Location     Type
 12172 ;;  a               1    3[COMMON] unsigned char 
 12173 ;; Return value:  Size  Location     Type
 12174 ;;                  1    wreg      void 
 12175 ;; Registers used:
 12176 ;;		wreg, status,2, status,0, pclath, cstack
 12177 ;; Tracked objects:
 12178 ;;		On entry : 0/0
 12179 ;;		On exit  : 0/0
 12180 ;;		Unchanged: 0/0
 12181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12184 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12185 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12186 ;;Total ram usage:        3 bytes
 12187 ;; Hardware stack levels used:    1
 12188 ;; Hardware stack levels required when called:    1
 12189 ;; This function calls:
 12190 ;;		_LCD_Port
 12191 ;; This function is called by:
 12192 ;;		_InitCustomChars
 12193 ;;		_LCD_Clear
 12194 ;;		_LCD_Set_Cursor
 12195 ;;		_LCD_Init
 12196 ;; This function uses a non-reentrant model
 12197 ;;
 12198                           
 12199                           
 12200                           ;psect for function _LCD_Cmd
 12201  0801                     _LCD_Cmd:	
 12202                           
 12203                           ;incstack = 0
 12204                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12205                           ;LCD_Cmd@a stored from wreg
 12206  0801  00F3               	movwf	LCD_Cmd@a
 12207                           
 12208                           ;lcd.c: 67: RA0 = 0;
 12209  0802  0020               	movlb	0	; select bank0
 12210  0803  100C               	bcf	12,0	;volatile
 12211                           
 12212                           ;lcd.c: 68: LCD_Port(a);
 12213  0804  0873               	movf	LCD_Cmd@a,w
 12214  0805  3197  2799  3188   	fcall	_LCD_Port
 12215                           
 12216                           ;lcd.c: 69: RA2 = 1;
 12217  0808  0020               	movlb	0	; select bank0
 12218  0809  150C               	bsf	12,2	;volatile
 12219                           
 12220                           ;lcd.c: 70: RA2 = 0;
 12221  080A  110C               	bcf	12,2	;volatile
 12222                           
 12223                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12224  080B  302A               	movlw	42
 12225  080C  00F2               	movwf	??_LCD_Cmd+1
 12226  080D  308D               	movlw	141
 12227  080E  00F1               	movwf	??_LCD_Cmd
 12228  080F                     u3827:	
 12229  080F  0BF1               	decfsz	??_LCD_Cmd,f
 12230  0810  280F               	goto	u3827
 12231  0811  0BF2               	decfsz	??_LCD_Cmd+1,f
 12232  0812  280F               	goto	u3827
 12233  0813  3200               	nop2
 12234  0814  0008               	return
 12235  0815                     __end_of_LCD_Cmd:	
 12236                           
 12237                           	psect	text33
 12238  1799                     __ptext33:	
 12239 ;; *************** function _LCD_Port *****************
 12240 ;; Defined at:
 12241 ;;		line 41 in file "lcd.c"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;  a               1    wreg     unsigned char 
 12244 ;; Auto vars:     Size  Location     Type
 12245 ;;  a               1    0[COMMON] unsigned char 
 12246 ;; Return value:  Size  Location     Type
 12247 ;;                  1    wreg      void 
 12248 ;; Registers used:
 12249 ;;		wreg
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/0
 12252 ;;		On exit  : 0/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12258 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;Total ram usage:        1 bytes
 12260 ;; Hardware stack levels used:    1
 12261 ;; This function calls:
 12262 ;;		Nothing
 12263 ;; This function is called by:
 12264 ;;		_LCD_Cmd
 12265 ;;		_LCD_Init
 12266 ;;		_LCD_Write_Char
 12267 ;; This function uses a non-reentrant model
 12268 ;;
 12269                           
 12270                           
 12271                           ;psect for function _LCD_Port
 12272  1799                     _LCD_Port:	
 12273                           
 12274                           ;incstack = 0
 12275                           ; Regs used in _LCD_Port: [wreg]
 12276                           ;LCD_Port@a stored from wreg
 12277  1799  00F0               	movwf	LCD_Port@a
 12278                           
 12279                           ;lcd.c: 43: if(a & 1)
 12280  179A  1C70               	btfss	LCD_Port@a,0
 12281  179B  2F9F               	goto	l94
 12282                           
 12283                           ;lcd.c: 44: RA7 = 1;
 12284  179C  0020               	movlb	0	; select bank0
 12285  179D  178C               	bsf	12,7	;volatile
 12286  179E  2FA1               	goto	l2102
 12287  179F                     l94:	
 12288                           
 12289                           ;lcd.c: 45: else
 12290                           ;lcd.c: 46: RA7 = 0;
 12291  179F  0020               	movlb	0	; select bank0
 12292  17A0  138C               	bcf	12,7	;volatile
 12293  17A1                     l2102:	
 12294                           
 12295                           ;lcd.c: 48: if(a & 2)
 12296  17A1  1CF0               	btfss	LCD_Port@a,1
 12297  17A2  2FA5               	goto	l96
 12298                           
 12299                           ;lcd.c: 49: RA6 = 1;
 12300  17A3  170C               	bsf	12,6	;volatile
 12301  17A4  2FA6               	goto	l2106
 12302  17A5                     l96:	
 12303                           
 12304                           ;lcd.c: 50: else
 12305                           ;lcd.c: 51: RA6 = 0;
 12306  17A5  130C               	bcf	12,6	;volatile
 12307  17A6                     l2106:	
 12308                           
 12309                           ;lcd.c: 53: if(a & 4)
 12310  17A6  1D70               	btfss	LCD_Port@a,2
 12311  17A7  2FAA               	goto	l98
 12312                           
 12313                           ;lcd.c: 54: RC0 = 1;
 12314  17A8  140E               	bsf	14,0	;volatile
 12315  17A9  2FAB               	goto	l2110
 12316  17AA                     l98:	
 12317                           
 12318                           ;lcd.c: 55: else
 12319                           ;lcd.c: 56: RC0 = 0;
 12320  17AA  100E               	bcf	14,0	;volatile
 12321  17AB                     l2110:	
 12322                           
 12323                           ;lcd.c: 58: if(a & 8)
 12324  17AB  1DF0               	btfss	LCD_Port@a,3
 12325  17AC  2FAF               	goto	l100
 12326                           
 12327                           ;lcd.c: 59: RC1 = 1;
 12328  17AD  148E               	bsf	14,1	;volatile
 12329  17AE  0008               	return
 12330  17AF                     l100:	
 12331                           
 12332                           ;lcd.c: 60: else
 12333                           ;lcd.c: 61: RC1 = 0;
 12334  17AF  108E               	bcf	14,1	;volatile
 12335  17B0  0008               	return
 12336  17B1                     __end_of_LCD_Port:	
 12337                           
 12338                           	psect	text34
 12339  17B1                     __ptext34:	
 12340 ;; *************** function _ADCC_Initialize *****************
 12341 ;; Defined at:
 12342 ;;		line 60 in file "adc.c"
 12343 ;; Parameters:    Size  Location     Type
 12344 ;;		None
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;		None
 12347 ;; Return value:  Size  Location     Type
 12348 ;;                  1    wreg      void 
 12349 ;; Registers used:
 12350 ;;		wreg, status,2
 12351 ;; Tracked objects:
 12352 ;;		On entry : 0/0
 12353 ;;		On exit  : 0/0
 12354 ;;		Unchanged: 0/0
 12355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;Total ram usage:        0 bytes
 12361 ;; Hardware stack levels used:    1
 12362 ;; This function calls:
 12363 ;;		Nothing
 12364 ;; This function is called by:
 12365 ;;		_SYSTEM_Initialize
 12366 ;; This function uses a non-reentrant model
 12367 ;;
 12368                           
 12369                           
 12370                           ;psect for function _ADCC_Initialize
 12371  17B1                     _ADCC_Initialize:	
 12372                           
 12373                           ;adc.c: 62: ADCON1 = 0x00;
 12374                           
 12375                           ;incstack = 0
 12376                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12377  17B1  0021               	movlb	1	; select bank1
 12378  17B2  0194               	clrf	20	;volatile
 12379                           
 12380                           ;adc.c: 64: ADCON2 = 0x00;
 12381  17B3  0195               	clrf	21	;volatile
 12382                           
 12383                           ;adc.c: 66: ADCON3 = 0x00;
 12384  17B4  0196               	clrf	22	;volatile
 12385                           
 12386                           ;adc.c: 68: ADACT = 0x00;
 12387  17B5  0199               	clrf	25	;volatile
 12388                           
 12389                           ;adc.c: 70: ADSTAT = 0x00;
 12390  17B6  0197               	clrf	23	;volatile
 12391                           
 12392                           ;adc.c: 73: ADCLK = 0x3F;
 12393  17B7  303F               	movlw	63
 12394  17B8  0098               	movwf	24	;volatile
 12395                           
 12396                           ;adc.c: 81: ADREF = 0x00;
 12397  17B9  019A               	clrf	26	;volatile
 12398                           
 12399                           ;adc.c: 83: ADCAP = 0x00;
 12400  17BA  019B               	clrf	27	;volatile
 12401                           
 12402                           ;adc.c: 86: ADPRE = 0x07;
 12403  17BB  3007               	movlw	7
 12404  17BC  009C               	movwf	28	;volatile
 12405                           
 12406                           ;adc.c: 88: ADACQ = 0x00;
 12407  17BD  019D               	clrf	29	;volatile
 12408                           
 12409                           ;adc.c: 90: ADPCH = 0x00;
 12410  17BE  019E               	clrf	30	;volatile
 12411                           
 12412                           ;adc.c: 92: ADRPT = 0x00;
 12413  17BF  0022               	movlb	2	; select bank2
 12414  17C0  018D               	clrf	13	;volatile
 12415                           
 12416                           ;adc.c: 94: ADLTHL = 0x00;
 12417  17C1  018E               	clrf	14	;volatile
 12418                           
 12419                           ;adc.c: 96: ADLTHH = 0x00;
 12420  17C2  018F               	clrf	15	;volatile
 12421                           
 12422                           ;adc.c: 98: ADUTHL = 0x00;
 12423  17C3  0190               	clrf	16	;volatile
 12424                           
 12425                           ;adc.c: 100: ADUTHH = 0x00;
 12426  17C4  0191               	clrf	17	;volatile
 12427                           
 12428                           ;adc.c: 102: ADSTPTL = 0x00;
 12429  17C5  0192               	clrf	18	;volatile
 12430                           
 12431                           ;adc.c: 104: ADSTPTH = 0x00;
 12432  17C6  0193               	clrf	19	;volatile
 12433                           
 12434                           ;adc.c: 106: ADCON0 = 0x84;
 12435  17C7  3084               	movlw	132
 12436  17C8  0021               	movlb	1	; select bank1
 12437  17C9  0093               	movwf	19	;volatile
 12438  17CA  0008               	return
 12439  17CB                     __end_of_ADCC_Initialize:	
 12440                           
 12441                           	psect	text35
 12442  176C                     __ptext35:	
 12443 ;; *************** function _PWM7_LoadDutyValue *****************
 12444 ;; Defined at:
 12445 ;;		line 32 in file "pwm.c"
 12446 ;; Parameters:    Size  Location     Type
 12447 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12448 ;; Auto vars:     Size  Location     Type
 12449 ;;		None
 12450 ;; Return value:  Size  Location     Type
 12451 ;;                  1    wreg      void 
 12452 ;; Registers used:
 12453 ;;		wreg, status,2, status,0
 12454 ;; Tracked objects:
 12455 ;;		On entry : 0/0
 12456 ;;		On exit  : 0/0
 12457 ;;		Unchanged: 0/0
 12458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12461 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12462 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12463 ;;Total ram usage:        4 bytes
 12464 ;; Hardware stack levels used:    1
 12465 ;; This function calls:
 12466 ;;		Nothing
 12467 ;; This function is called by:
 12468 ;;		_main
 12469 ;; This function uses a non-reentrant model
 12470 ;;
 12471                           
 12472                           
 12473                           ;psect for function _PWM7_LoadDutyValue
 12474  176C                     _PWM7_LoadDutyValue:	
 12475                           
 12476                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12477                           
 12478                           ;incstack = 0
 12479                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12480  176C  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12481  176D  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12482  176E  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12483  176F  00F2               	movwf	??_PWM7_LoadDutyValue
 12484  1770  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12485  1771  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12486  1772  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12487  1773  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12488  1774  0872               	movf	??_PWM7_LoadDutyValue,w
 12489  1775  0027               	movlb	7	; select bank7
 12490  1776  0091               	movwf	17	;volatile
 12491                           
 12492                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12493  1777  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12494  1778  3903               	andlw	3
 12495  1779  00F2               	movwf	??_PWM7_LoadDutyValue
 12496  177A  3005               	movlw	5
 12497  177B                     u3315:	
 12498  177B  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12499  177C  3EFF               	addlw	-1
 12500  177D  1D03               	skipz
 12501  177E  2F7B               	goto	u3315
 12502  177F  3572               	lslf	??_PWM7_LoadDutyValue,w
 12503  1780  0090               	movwf	16	;volatile
 12504  1781  0008               	return
 12505  1782                     __end_of_PWM7_LoadDutyValue:	
 12506                           
 12507                           	psect	text36
 12508  0F25                     __ptext36:	
 12509 ;; *************** function _PID_Calculate *****************
 12510 ;; Defined at:
 12511 ;;		line 21 in file "pid.c"
 12512 ;; Parameters:    Size  Location     Type
 12513 ;;  setpoint        2    6[COMMON] int 
 12514 ;;  temp            2    8[COMMON] int 
 12515 ;; Auto vars:     Size  Location     Type
 12516 ;;		None
 12517 ;; Return value:  Size  Location     Type
 12518 ;;                  2    6[COMMON] int 
 12519 ;; Registers used:
 12520 ;;		wreg, status,2, status,0, pclath, cstack
 12521 ;; Tracked objects:
 12522 ;;		On entry : 0/0
 12523 ;;		On exit  : 0/0
 12524 ;;		Unchanged: 0/0
 12525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12529 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;Total ram usage:        6 bytes
 12531 ;; Hardware stack levels used:    1
 12532 ;; Hardware stack levels required when called:    1
 12533 ;; This function calls:
 12534 ;;		___wmul
 12535 ;; This function is called by:
 12536 ;;		_main
 12537 ;; This function uses a non-reentrant model
 12538 ;;
 12539                           
 12540                           
 12541                           ;psect for function _PID_Calculate
 12542  0F25                     _PID_Calculate:	
 12543                           
 12544                           ;pid.c: 23: pidCount+=1;
 12545                           
 12546                           ;incstack = 0
 12547                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12548  0F25  3001               	movlw	1
 12549  0F26  0021               	movlb	1	; select bank1
 12550  0F27  07CD               	addwf	_pidCount^(0+128),f
 12551  0F28  3000               	movlw	0
 12552  0F29  3DCE               	addwfc	(_pidCount+1)^(0+128),f
 12553                           
 12554                           ;pid.c: 26: error = setpoint - temp;
 12555  0F2A  0978               	comf	PID_Calculate@temp,w
 12556  0F2B  00FA               	movwf	??_PID_Calculate
 12557  0F2C  0979               	comf	PID_Calculate@temp+1,w
 12558  0F2D  00FB               	movwf	??_PID_Calculate+1
 12559  0F2E  0AFA               	incf	??_PID_Calculate,f
 12560  0F2F  1903               	skipnz
 12561  0F30  0AFB               	incf	??_PID_Calculate+1,f
 12562  0F31  0876               	movf	PID_Calculate@setpoint,w
 12563  0F32  077A               	addwf	??_PID_Calculate,w
 12564  0F33  00C7               	movwf	_error^(0+128)
 12565  0F34  0877               	movf	PID_Calculate@setpoint+1,w
 12566  0F35  3D7B               	addwfc	??_PID_Calculate+1,w
 12567  0F36  00C8               	movwf	(_error+1)^(0+128)
 12568                           
 12569                           ;pid.c: 28: errorValue = error * Kp;
 12570  0F37  0848               	movf	(_error+1)^(0+128),w
 12571  0F38  00F1               	movwf	___wmul@multiplier+1
 12572  0F39  0847               	movf	_error^(0+128),w
 12573  0F3A  00F0               	movwf	___wmul@multiplier
 12574  0F3B  086A               	movf	(_Kp+1)^(0+128),w
 12575  0F3C  00F3               	movwf	___wmul@multiplicand+1
 12576  0F3D  0869               	movf	_Kp^(0+128),w
 12577  0F3E  00F2               	movwf	___wmul@multiplicand
 12578  0F3F  3197  27E5  318F   	fcall	___wmul
 12579  0F42  0871               	movf	?___wmul+1,w
 12580  0F43  0021               	movlb	1	; select bank1
 12581  0F44  00CA               	movwf	(_errorValue+1)^(0+128)
 12582  0F45  0870               	movf	?___wmul,w
 12583  0F46  00C9               	movwf	_errorValue^(0+128)
 12584                           
 12585                           ;pid.c: 31: if(error>0)signPositive=1;
 12586  0F47  0848               	movf	(_error+1)^(0+128),w
 12587  0F48  3A80               	xorlw	128
 12588  0F49  00FA               	movwf	??_PID_Calculate
 12589  0F4A  3080               	movlw	128
 12590  0F4B  027A               	subwf	??_PID_Calculate,w
 12591  0F4C  1D03               	skipz
 12592  0F4D  2F50               	goto	u3245
 12593  0F4E  3001               	movlw	1
 12594  0F4F  0247               	subwf	_error^(0+128),w
 12595  0F50                     u3245:	
 12596  0F50  1C03               	skipc
 12597  0F51  2F58               	goto	l2842
 12598  0F52  3001               	movlw	1
 12599  0F53  0021               	movlb	1	; select bank1
 12600  0F54  00D7               	movwf	_signPositive^(0+128)
 12601  0F55  3000               	movlw	0
 12602  0F56  00D8               	movwf	(_signPositive^(0+128)+1)
 12603  0F57  2F5B               	goto	l2844
 12604  0F58                     l2842:	
 12605                           
 12606                           ;pid.c: 33: else signPositive=0;
 12607  0F58  0021               	movlb	1	; select bank1
 12608  0F59  01D7               	clrf	_signPositive^(0+128)
 12609  0F5A  01D8               	clrf	(_signPositive+1)^(0+128)
 12610  0F5B                     l2844:	
 12611                           
 12612                           ;pid.c: 35: if(signPositive!=lastSign)pidIntegrated=0;
 12613  0F5B  084C               	movf	(_lastSign+1)^(0+128),w
 12614  0F5C  0658               	xorwf	(_signPositive+1)^(0+128),w
 12615  0F5D  1D03               	skipz
 12616  0F5E  2F61               	goto	u3255
 12617  0F5F  084B               	movf	_lastSign^(0+128),w
 12618  0F60  0657               	xorwf	_signPositive^(0+128),w
 12619  0F61                     u3255:	
 12620  0F61  1903               	skipnz
 12621  0F62  2F65               	goto	l2848
 12622  0F63  01CF               	clrf	_pidIntegrated^(0+128)
 12623  0F64  01D0               	clrf	(_pidIntegrated+1)^(0+128)
 12624  0F65                     l2848:	
 12625                           
 12626                           ;pid.c: 37: lastSign=signPositive;
 12627  0F65  0858               	movf	(_signPositive+1)^(0+128),w
 12628  0F66  00CC               	movwf	(_lastSign+1)^(0+128)
 12629  0F67  0857               	movf	_signPositive^(0+128),w
 12630  0F68  00CB               	movwf	_lastSign^(0+128)
 12631                           
 12632                           ;pid.c: 41: derivativeValue=(error-pidPrevError)*Kd;
 12633  0F69  0953               	comf	_pidPrevError^(0+128),w
 12634  0F6A  00FA               	movwf	??_PID_Calculate
 12635  0F6B  0954               	comf	(_pidPrevError+1)^(0+128),w
 12636  0F6C  00FB               	movwf	??_PID_Calculate+1
 12637  0F6D  0AFA               	incf	??_PID_Calculate,f
 12638  0F6E  1903               	skipnz
 12639  0F6F  0AFB               	incf	??_PID_Calculate+1,f
 12640  0F70  0847               	movf	_error^(0+128),w
 12641  0F71  077A               	addwf	??_PID_Calculate,w
 12642  0F72  00F0               	movwf	___wmul@multiplier
 12643  0F73  0848               	movf	(_error+1)^(0+128),w
 12644  0F74  3D7B               	addwfc	??_PID_Calculate+1,w
 12645  0F75  00F1               	movwf	___wmul@multiplier+1
 12646  0F76  0866               	movf	(_Kd+1)^(0+128),w
 12647  0F77  00F3               	movwf	___wmul@multiplicand+1
 12648  0F78  0865               	movf	_Kd^(0+128),w
 12649  0F79  00F2               	movwf	___wmul@multiplicand
 12650  0F7A  3197  27E5  318F   	fcall	___wmul
 12651  0F7D  0871               	movf	?___wmul+1,w
 12652  0F7E  0021               	movlb	1	; select bank1
 12653  0F7F  00C4               	movwf	(_derivativeValue+1)^(0+128)
 12654  0F80  0870               	movf	?___wmul,w
 12655  0F81  00C3               	movwf	_derivativeValue^(0+128)
 12656                           
 12657                           ;pid.c: 42: pidPrevError = error;
 12658  0F82  0848               	movf	(_error+1)^(0+128),w
 12659  0F83  00D4               	movwf	(_pidPrevError+1)^(0+128)
 12660  0F84  0847               	movf	_error^(0+128),w
 12661  0F85  00D3               	movwf	_pidPrevError^(0+128)
 12662                           
 12663                           ;pid.c: 45: if(pidCount>20)
 12664  0F86  084E               	movf	(_pidCount+1)^(0+128),w
 12665  0F87  3A80               	xorlw	128
 12666  0F88  00FA               	movwf	??_PID_Calculate
 12667  0F89  3080               	movlw	128
 12668  0F8A  027A               	subwf	??_PID_Calculate,w
 12669  0F8B  1D03               	skipz
 12670  0F8C  2F8F               	goto	u3265
 12671  0F8D  3015               	movlw	21
 12672  0F8E  024D               	subwf	_pidCount^(0+128),w
 12673  0F8F                     u3265:	
 12674  0F8F  1C03               	skipc
 12675  0F90  2FCA               	goto	l2866
 12676                           
 12677                           ;pid.c: 46: {
 12678                           ;pid.c: 47: pidIntegrated = pidIntegrated + (error * Ki);
 12679  0F91  0021               	movlb	1	; select bank1
 12680  0F92  0848               	movf	(_error+1)^(0+128),w
 12681  0F93  00F1               	movwf	___wmul@multiplier+1
 12682  0F94  0847               	movf	_error^(0+128),w
 12683  0F95  00F0               	movwf	___wmul@multiplier
 12684  0F96  0868               	movf	(_Ki+1)^(0+128),w
 12685  0F97  00F3               	movwf	___wmul@multiplicand+1
 12686  0F98  0867               	movf	_Ki^(0+128),w
 12687  0F99  00F2               	movwf	___wmul@multiplicand
 12688  0F9A  3197  27E5  318F   	fcall	___wmul
 12689  0F9D  0021               	movlb	1	; select bank1
 12690  0F9E  084F               	movf	_pidIntegrated^(0+128),w
 12691  0F9F  0770               	addwf	?___wmul,w
 12692  0FA0  00CF               	movwf	_pidIntegrated^(0+128)
 12693  0FA1  0850               	movf	(_pidIntegrated+1)^(0+128),w
 12694  0FA2  3D71               	addwfc	?___wmul+1,w
 12695  0FA3  00D0               	movwf	(_pidIntegrated+1)^(0+128)
 12696                           
 12697                           ;pid.c: 49: if (pidIntegrated< pidMinOutput)
 12698  0FA4  0850               	movf	(_pidIntegrated+1)^(0+128),w
 12699  0FA5  3A80               	xorlw	128
 12700  0FA6  00FA               	movwf	??_PID_Calculate
 12701  0FA7  0852               	movf	(_pidMinOutput+1)^(0+128),w
 12702  0FA8  3A80               	xorlw	128
 12703  0FA9  027A               	subwf	??_PID_Calculate,w
 12704  0FAA  1D03               	skipz
 12705  0FAB  2FAE               	goto	u3275
 12706  0FAC  0851               	movf	_pidMinOutput^(0+128),w
 12707  0FAD  024F               	subwf	_pidIntegrated^(0+128),w
 12708  0FAE                     u3275:	
 12709  0FAE  1803               	skipnc
 12710  0FAF  2FB5               	goto	l182
 12711                           
 12712                           ;pid.c: 50: {
 12713                           ;pid.c: 51: pidIntegrated= pidMinOutput;
 12714  0FB0  0021               	movlb	1	; select bank1
 12715  0FB1  0852               	movf	(_pidMinOutput+1)^(0+128),w
 12716  0FB2  00D0               	movwf	(_pidIntegrated+1)^(0+128)
 12717  0FB3  0851               	movf	_pidMinOutput^(0+128),w
 12718  0FB4  00CF               	movwf	_pidIntegrated^(0+128)
 12719  0FB5                     l182:	
 12720                           
 12721                           ;pid.c: 52: }
 12722                           ;pid.c: 54: if (pidIntegrated> pidMaxOutput)
 12723  0FB5  0021               	movlb	1	; select bank1
 12724  0FB6  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 12725  0FB7  3A80               	xorlw	128
 12726  0FB8  00FA               	movwf	??_PID_Calculate
 12727  0FB9  0850               	movf	(_pidIntegrated+1)^(0+128),w
 12728  0FBA  3A80               	xorlw	128
 12729  0FBB  027A               	subwf	??_PID_Calculate,w
 12730  0FBC  1D03               	skipz
 12731  0FBD  2FC0               	goto	u3285
 12732  0FBE  084F               	movf	_pidIntegrated^(0+128),w
 12733  0FBF  026B               	subwf	_pidMaxOutput^(0+128),w
 12734  0FC0                     u3285:	
 12735  0FC0  1803               	skipnc
 12736  0FC1  2FC7               	goto	l2864
 12737                           
 12738                           ;pid.c: 55: {
 12739                           ;pid.c: 56: pidIntegrated= pidMaxOutput;
 12740  0FC2  0021               	movlb	1	; select bank1
 12741  0FC3  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 12742  0FC4  00D0               	movwf	(_pidIntegrated+1)^(0+128)
 12743  0FC5  086B               	movf	_pidMaxOutput^(0+128),w
 12744  0FC6  00CF               	movwf	_pidIntegrated^(0+128)
 12745  0FC7                     l2864:	
 12746                           
 12747                           ;pid.c: 57: }
 12748                           ;pid.c: 58: pidCount=0;
 12749  0FC7  0021               	movlb	1	; select bank1
 12750  0FC8  01CD               	clrf	_pidCount^(0+128)
 12751  0FC9  01CE               	clrf	(_pidCount+1)^(0+128)
 12752  0FCA                     l2866:	
 12753                           
 12754                           ;pid.c: 59: }
 12755                           ;pid.c: 62: Result = errorValue+pidIntegrated+derivativeValue;
 12756  0FCA  0021               	movlb	1	; select bank1
 12757  0FCB  084F               	movf	_pidIntegrated^(0+128),w
 12758  0FCC  0749               	addwf	_errorValue^(0+128),w
 12759  0FCD  00FA               	movwf	??_PID_Calculate
 12760  0FCE  0850               	movf	(_pidIntegrated+1)^(0+128),w
 12761  0FCF  3D4A               	addwfc	(_errorValue+1)^(0+128),w
 12762  0FD0  00FB               	movwf	??_PID_Calculate+1
 12763  0FD1  0843               	movf	_derivativeValue^(0+128),w
 12764  0FD2  077A               	addwf	??_PID_Calculate,w
 12765  0FD3  00C1               	movwf	_Result^(0+128)
 12766  0FD4  0844               	movf	(_derivativeValue+1)^(0+128),w
 12767  0FD5  3D7B               	addwfc	??_PID_Calculate+1,w
 12768  0FD6  00C2               	movwf	(_Result+1)^(0+128)
 12769                           
 12770                           ;pid.c: 64: if (Result < pidMinOutput)
 12771  0FD7  0842               	movf	(_Result+1)^(0+128),w
 12772  0FD8  3A80               	xorlw	128
 12773  0FD9  00FA               	movwf	??_PID_Calculate
 12774  0FDA  0852               	movf	(_pidMinOutput+1)^(0+128),w
 12775  0FDB  3A80               	xorlw	128
 12776  0FDC  027A               	subwf	??_PID_Calculate,w
 12777  0FDD  1D03               	skipz
 12778  0FDE  2FE1               	goto	u3295
 12779  0FDF  0851               	movf	_pidMinOutput^(0+128),w
 12780  0FE0  0241               	subwf	_Result^(0+128),w
 12781  0FE1                     u3295:	
 12782  0FE1  1803               	skipnc
 12783  0FE2  2FE8               	goto	l184
 12784                           
 12785                           ;pid.c: 65: {
 12786                           ;pid.c: 66: Result = pidMinOutput;
 12787  0FE3  0021               	movlb	1	; select bank1
 12788  0FE4  0852               	movf	(_pidMinOutput+1)^(0+128),w
 12789  0FE5  00C2               	movwf	(_Result+1)^(0+128)
 12790  0FE6  0851               	movf	_pidMinOutput^(0+128),w
 12791  0FE7  00C1               	movwf	_Result^(0+128)
 12792  0FE8                     l184:	
 12793                           
 12794                           ;pid.c: 67: }
 12795                           ;pid.c: 69: if (Result > pidMaxOutput)
 12796  0FE8  0021               	movlb	1	; select bank1
 12797  0FE9  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 12798  0FEA  3A80               	xorlw	128
 12799  0FEB  00FA               	movwf	??_PID_Calculate
 12800  0FEC  0842               	movf	(_Result+1)^(0+128),w
 12801  0FED  3A80               	xorlw	128
 12802  0FEE  027A               	subwf	??_PID_Calculate,w
 12803  0FEF  1D03               	skipz
 12804  0FF0  2FF3               	goto	u3305
 12805  0FF1  0841               	movf	_Result^(0+128),w
 12806  0FF2  026B               	subwf	_pidMaxOutput^(0+128),w
 12807  0FF3                     u3305:	
 12808  0FF3  1803               	skipnc
 12809  0FF4  2FFA               	goto	l185
 12810                           
 12811                           ;pid.c: 70: {
 12812                           ;pid.c: 71: Result = pidMaxOutput;
 12813  0FF5  0021               	movlb	1	; select bank1
 12814  0FF6  086C               	movf	(_pidMaxOutput+1)^(0+128),w
 12815  0FF7  00C2               	movwf	(_Result+1)^(0+128)
 12816  0FF8  086B               	movf	_pidMaxOutput^(0+128),w
 12817  0FF9  00C1               	movwf	_Result^(0+128)
 12818  0FFA                     l185:	
 12819                           
 12820                           ;pid.c: 72: }
 12821                           ;pid.c: 74: return (Result);
 12822  0FFA  0021               	movlb	1	; select bank1
 12823  0FFB  0842               	movf	(_Result+1)^(0+128),w
 12824  0FFC  00F7               	movwf	?_PID_Calculate+1
 12825  0FFD  0841               	movf	_Result^(0+128),w
 12826  0FFE  00F6               	movwf	?_PID_Calculate
 12827  0FFF  0008               	return
 12828  1000                     __end_of_PID_Calculate:	
 12829                           
 12830                           	psect	text37
 12831  17E5                     __ptext37:	
 12832 ;; *************** function ___wmul *****************
 12833 ;; Defined at:
 12834 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 12835 ;; Parameters:    Size  Location     Type
 12836 ;;  multiplier      2    0[COMMON] unsigned int 
 12837 ;;  multiplicand    2    2[COMMON] unsigned int 
 12838 ;; Auto vars:     Size  Location     Type
 12839 ;;  product         2    4[COMMON] unsigned int 
 12840 ;; Return value:  Size  Location     Type
 12841 ;;                  2    0[COMMON] unsigned int 
 12842 ;; Registers used:
 12843 ;;		wreg, status,2, status,0
 12844 ;; Tracked objects:
 12845 ;;		On entry : 0/0
 12846 ;;		On exit  : 0/0
 12847 ;;		Unchanged: 0/0
 12848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12852 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12853 ;;Total ram usage:        6 bytes
 12854 ;; Hardware stack levels used:    1
 12855 ;; This function calls:
 12856 ;;		Nothing
 12857 ;; This function is called by:
 12858 ;;		_readAnalog
 12859 ;;		_PID_Calculate
 12860 ;;		_eval_poly
 12861 ;; This function uses a non-reentrant model
 12862 ;;
 12863                           
 12864                           
 12865                           ;psect for function ___wmul
 12866  17E5                     ___wmul:	
 12867                           
 12868                           ;incstack = 0
 12869                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12870  17E5  01F4               	clrf	___wmul@product
 12871  17E6  01F5               	clrf	___wmul@product+1
 12872  17E7                     l2116:	
 12873  17E7  1C70               	btfss	___wmul@multiplier,0
 12874  17E8  2FED               	goto	l512
 12875  17E9  0872               	movf	___wmul@multiplicand,w
 12876  17EA  07F4               	addwf	___wmul@product,f
 12877  17EB  0873               	movf	___wmul@multiplicand+1,w
 12878  17EC  3DF5               	addwfc	___wmul@product+1,f
 12879  17ED                     l512:	
 12880  17ED  3001               	movlw	1
 12881  17EE                     u1995:	
 12882  17EE  35F2               	lslf	___wmul@multiplicand,f
 12883  17EF  0DF3               	rlf	___wmul@multiplicand+1,f
 12884  17F0  0B89               	decfsz	9,f
 12885  17F1  2FEE               	goto	u1995
 12886  17F2  3001               	movlw	1
 12887  17F3                     u2005:	
 12888  17F3  36F1               	lsrf	___wmul@multiplier+1,f
 12889  17F4  0CF0               	rrf	___wmul@multiplier,f
 12890  17F5  0B89               	decfsz	9,f
 12891  17F6  2FF3               	goto	u2005
 12892  17F7  0870               	movf	___wmul@multiplier,w
 12893  17F8  0471               	iorwf	___wmul@multiplier+1,w
 12894  17F9  1D03               	btfss	3,2
 12895  17FA  2FE7               	goto	l2116
 12896  17FB  0875               	movf	___wmul@product+1,w
 12897  17FC  00F1               	movwf	?___wmul+1
 12898  17FD  0874               	movf	___wmul@product,w
 12899  17FE  00F0               	movwf	?___wmul
 12900  17FF  0008               	return
 12901  1800                     __end_of___wmul:	
 12902  007E                     btemp	set	126	;btemp
 12903  007E                     wtemp	set	126
 12904  007E                     wtemp0	set	126
 12905  0080                     wtemp1	set	128
 12906  0082                     wtemp2	set	130
 12907  0084                     wtemp3	set	132
 12908  0086                     wtemp4	set	134
 12909  0088                     wtemp5	set	136
 12910  007F                     wtemp6	set	127
 12911  007E                     ttemp	set	126
 12912  007E                     ttemp0	set	126
 12913  0081                     ttemp1	set	129
 12914  0084                     ttemp2	set	132
 12915  0087                     ttemp3	set	135
 12916  007F                     ttemp4	set	127
 12917  007E                     ltemp	set	126
 12918  007E                     ltemp0	set	126
 12919  0082                     ltemp1	set	130
 12920  0086                     ltemp2	set	134
 12921  0080                     ltemp3	set	128


Data Sizes:
    Strings     103
    Constant    27
    Data        45
    BSS         129
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     33      78
    BANK2            80     80      80
    BANK3            80      0      49
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           48      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[11]), STR_5(CODE[11]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[8]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               127   127      0   43834
                                             72 BANK0      8     8      0
                                              0 BANK1     33    33      0
                                              0 BANK2     80    80      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30593
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16009
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7263
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1870
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           4     4      0    3884
                                             14 BANK0      4     4      0
                     _LCD_Set_Cursor
                      _LCD_Write_Int
                   _LCD_Write_String
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     639
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       19    14      5    2335
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1     910
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1144
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     994
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     21      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      31      11       61.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     17D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              30      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     17D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Apr 04 23:49:10 2018

        __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000                               l55 1765  
                             l94 179F                               l96 17A5                               l98 17AA  
                             _Kd 00E5                               _Ki 00E7                               _Kp 00E9  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 17AF                              l420 04B0                              l182 0FB5  
                            l350 0715                              l512 17ED                              l184 0FE8  
                            l424 0527                              l352 0735                              l185 0FFA  
                            l704 0133                              l567 0B58                              l680 0B28  
                            l681 0B30                              l673 0B15                              l764 0C35  
                            _GIE 005F                              _RA0 0060                              _RB0 0068  
                            _RA2 0062                              _RB1 0069                              _RC0 0070  
                            _RB2 006A                              _RC1 0071                              _RA6 0066  
                            _RA7 0067                     __CFG_CPD$OFF 0000                              _key 00DD  
                            _log 0CF8                  __end_of_ADCRead 176C                     ___awmod@sign 0076  
                _TMR2_Initialize 1750                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00BB                  __end_of_LCD_Cmd 0815                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 096C                     ___ftdiv@sign 003F  
                           l2110 17AB                             l2102 17A1                             l2106 17A6  
                           l2210 0DD5                             l2116 17E7                             l3012 053A  
                           l2204 0DBF                             l2310 0A6D                             l2302 0A4F  
                           l3006 0532                             l3022 0545                             l2070 0AEB  
                           l2134 00BC                             l2222 0E10                             l2304 0A5B  
                           l3008 0534                             l3024 0559                             l2144 00D2  
                           l2400 0943                             l3120 06C1                             l2314 0A76  
                           l2330 09F7                             l2074 0AF2                             l2162 00FF  
                           l2138 00C3                             l2234 0E2C                             l2226 0E18  
                           l3130 06D3                             l2084 0B1A                             l2076 0AFC  
                           l2180 0145                             l2164 0109                             l2156 00EC  
                           l3116 06BD                             l2318 0A7E                             l2342 0A04  
                           l2334 09FE                             l2086 0B22                             l2078 0B01  
                           l2174 0125                             l2166 010E                             l2238 0E34  
                           l3134 0704                             l3126 06CE                             l3142 0716  
                           l2344 0A10                             l2352 0A25                             l2184 0157  
                           l2176 012F                             l2168 0112                             l3152 0737  
                           l2194 0172                             l2418 0ADC                             l3138 070B  
                           l3074 05C6                             l2460 0891                             l2292 0A47  
                           l2356 0A2D                             l2348 0A1C                             l2524 17CD  
                           l2700 0B87                             l2380 0922                             l3164 075D  
                           l3148 0729                             l2454 0880                             l2286 0A3C  
                           l2550 0EB1                             l3158 073D                             l2560 0ED4  
                           l2712 0BB2                             l2368 083D                             l2376 090C  
                           l2474 098C                             l2554 0EB5                             l2538 0E7D  
                           l2802 0C2C                             l3178 07B0                             l2572 0F11  
                           l2556 0EBA                             l2548 0E84                             l2716 0BC0  
                           l2708 0BA7                             l2732 0C7C                             l2804 0C38  
                           l2566 0ED8                             l2558 0EC3                             l2670 178B  
                           l2726 0C66                             l2654 0D2A                             l2568 0F04  
                           l2808 0C46                             l2648 0D17                             l2842 0F58  
                           l2690 0B69                             l2826 03C0                             l2754 0CD6  
                           l2746 0CBD                             l2844 0F5B                             l2676 1796  
                           l2934 040F                             l2950 03E9                             l2766 081D  
                           l2864 0FC7                             l2848 0F65                             l2952 043D  
                           l2776 0BE1                             l2866 0FCA                             l2970 0482  
                           l2698 0B79                             l2794 0C11                             l2956 0556  
                           l2796 0C1F                             l2982 04BB                             l2958 0442  
                           l2984 04BD                             l2994 04F9                             ?_log 0057  
                           STR_1 107D                             STR_2 1075                             STR_3 103D  
                           STR_4 104E                             STR_5 105F                             STR_6 106A  
                           STR_7 102C                             STR_8 101B                             u2005 17F3  
                           u2115 00ED                             u3005 0C8E                             u2205 0126  
                           _LATA 0016                             _LATB 0017                             u3015 0C9E  
                           _LATC 0018                             u3025 0CBE                             u2145 0100  
                           u2305 0E19                             u3035 0CCD                             u3115 0C12  
                           u2315 0E1F                             u3205 0396                             u3045 0CD7  
                           u2415 0A52                             u3215 03B0                             u2175 0113  
                           u3305 0FF3                             u3145 0C2D                             u2345 0E35  
                           _T2PR 028D                             u3315 177B                             u2435 0A5C  
                           u2515 0A07                             u3235 03CC                             u2355 0E3B  
                           u2275 0DE1                             u3500 0588                             u3245 0F50  
                           u2445 0A66                             u3325 03FF                             u3085 0BE8  
                           u2285 0DF1                             u2710 0E67                             u3255 0F61  
                           u2375 08A9                             u2455 0A6E                             u2535 0A16  
                           u3175 02BD                             u2800 08F4                             u3265 0F8F  
                           u2545 0A1D                             u3425 04E9                             u3185 0310  
                           u3275 0FAE                             u3195 034E                             u3285 0FC0  
                           u3365 0554                             u1925 0B37                             u1845 0AF7  
                           u3295 0FE1                             u3385 0472                             u1865 0B10  
                           u3707 0018                             u2675 0978                             u2915 0B7C  
                           u3555 06E9                             u3717 0026                             u1885 0B1D  
                           u3565 0702                             u3637 05BC                             u3807 08B5  
                           u3727 0031                             u2695 0997                             u2775 0EF2  
                           u2935 0B88                             u3647 07A6                             u3817 08C1  
                           u3737 003B                             u3657 04A9                             u2945 0B9C  
                           u3585 0724                             u1995 17EE                             u3827 080F  
                           u3747 0045                             u3667 0520                             u2955 0BA8  
                           u3595 0730                             u3757 0053                             u3677 09C6  
                           u3767 0061                             u3687 09D6                             u3777 0071  
                           u3697 09E5                             u3787 0080                             u3797 008F  
            tempCalc@analogValue 005D                             _WPUA 0F39                             _WPUB 0F44  
                           _WPUC 0F4F                             _WPUE 0F65                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075                             _desc 01B4  
                           _main 055D                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                           _loop 00ED                     ___ftpack@exp 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           log@x 0057                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 0002               ??_LCD_Write_String 0077                             ttemp 007E  
                           wtemp 007E                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 002E                    _LCD_Write_Int 0E5C                     ___ftmul@sign 002F  
                   ___fttol@exp1 007D                            ??_log 005A                     ___fttol@lval 0079  
               __end_of_LCD_Init 0094                 __end_of_LCD_Port 17B1   __size_of_OSCILLATOR_Initialize 0009  
  __end_of_OSCILLATOR_Initialize 000D                  __end_of___aldiv 0BC9                            _ADACQ 009D  
                          _ADCAP 009B                            _ADACT 0099                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 0A83                            _ADPRE 009C                  __end_of___ftadd 018A  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0A32                            _ADRPT 010D  
                __end_of___ftdiv 0CF8                  __end_of___ftmul 0E5C                  ___awdiv@divisor 0070  
                __end_of___ftsub 0833                  __end_of___fttol 0C4F                            _T2CON 028E  
                          _LATC2 00C2                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0075                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
         __end_of_LCD_Set_Cursor 09AB                    ___awtoft@sign 007D                  __end_of_readKey 1799  
                          _frexp 0931                            _errno 00C5                            _error 00C7  
                  ___ftpack@sign 0074                            _timer 00D9                            main@j 00C0  
                          main@x 006B                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0079                   _LCD_Write_Char 0899  
                __initialization 07B6                      log@exponent 005B                     __end_of_main 07B6  
              readAnalog@channel 0026          __end_of_TMR2_Initialize 175E                        ??_ADCRead 0073  
                  main@tPadCount 00AA                           ??_main 00A0                    ___fttol@sign1 0078  
              __end_of_LCD_Clear 1720                        ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074  
                         _ADCON0 0093                           _ADCON1 0094                           _ADCON2 0095  
                         _ADCON3 0096                           ?_frexp 0070                           _ADLTHH 010F  
                         _ADLTHL 010E                           _ADRESH 008D                           _ADRESL 008C  
                         _ADSTAT 0097                           _ADUTHH 0111                 ___awdiv@dividend 0072  
                         _ADUTHL 0110                 __end_of___awtoft 0853                           _ANSELA 0F38  
                         _ANSELB 0F43                           _ANSELC 0F4E                 __end_of___ftpack 0B47  
                         _RC3PPS 0F23                   __CFG_WDTCCS$SC 0000                           _FVRCON 090C  
                         _OSCFRQ 0893           __end_of_LCD_Write_Char 08C5                   __CFG_PWRTE$OFF 0000  
                         _Result 00C1                     _CCPTMRS1bits 021F                           ___ftge 08F6  
         LCD_Write_Int@numPlaces 007C                        ??___aldiv 0078                           ___wmul 17E5  
                      ??___awdiv 0074                        ??___ftadd 0046                   __CFG_STVREN$ON 0000  
                      ??___awmod 0074                   _PWM_Initialize 1720                        ??___ftdiv 0036  
                      ??___ftmul 0026                           _choice 00DB                        ??___ftsub 007E  
                      ??___fttol 0074           main@currentTemperature 00B3                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                           _timer2 00E0                  ___awmod@counter 0075  
                         _totals 01C0            ___ftmul@f3_as_product 002B                 __end_of_tempCalc 02A7  
                _ADCC_Initialize 17B1                        ??_readKey 0070                 LCD_Write_Int@str 0025  
                _InitCustomChars 0873                  LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077  
                LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078                    _pidIntegrated 00CF  
       readAnalog@analog_channel 0079                _SYSTEM_Initialize 09AB                 __end_oflog@coeff 101B  
        __end_of__initialization 07FD                        ?_LCD_Init 0070                        ?_LCD_Port 0070  
                     ___ftadd@f1 0040                       ___ftadd@f2 0043                  _derivativeValue 00C3  
                     ___ftge@ff1 0070                       ___ftge@ff2 0073                  ??_LCD_Write_Int 0020  
             ?_SYSTEM_Initialize 0070                     eval_poly@res 0054                       ___ftdiv@f1 0033  
                     ___ftdiv@f2 0030                       ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070  
                  LCD_Init@style 0077                       ___awtoft@c 0078                       ___ftmul@f1 0020  
                     ___ftmul@f2 0023           __end_of_PWM_Initialize 172B                       ___ftsub@f1 0050  
                     ___ftsub@f2 004D                       ___fttol@f1 0070                   __pcstackCOMMON 0070  
                      LCD_Port@a 0070                     __pidataBANK1 1743                     __pidataBANK3 0853  
            ??_SYSTEM_Initialize 0078                    __end_of_frexp 096C                 ?_TMR2_Initialize 0070  
    __size_of_PWM7_LoadDutyValue 0016                          ??_frexp 0074        __end_of_SYSTEM_Initialize 09ED  
                     __pbssBANK1 00C1                       __pbssBANK3 01C0                       __pbssBANK4 0220  
             __size_of_eval_poly 0060                       ??_LCD_Init 0074                       ??_LCD_Port 0070  
         __size_of_PID_Calculate 00DB                       _delayCount 00DC                  ?_PWM_Initialize 0070  
                     __pmaintext 055D                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 17CB                          _ADCRead 175E  
      __size_of_LCD_Write_String 001A                        ?___awtoft 0078                        ?___ftpack 0070  
                        _ADSTPTH 0113                          _ADSTPTL 0112         __CFG_SCANE$not_available 0000  
            __CFG_RSTOSC$HFINT32 0000          __end_of_InitCustomChars 0899                          _LCD_Cmd 0801  
                 main@holdOutput 00AD                 main@lidOpenCount 00AE                          _OSCCON1 088D  
                        _OSCCON3 088F                          _OSCTUNE 0892                          _PWM7DCH 0391  
                        _PWM7DCL 0390                          _PWM7CON 0392                          _PPSLOCK 0E8F  
                 main@dutyCycle6 00B9            PID_Calculate@setpoint 0076                        ?_tempCalc 005D  
                     _readAnalog 02A7                          ___aldiv 0B47                          ___cgram 01A0  
                     _menuChoice 03E9                  __size_of___ftge 003B                          ___awdiv 0A32  
                        ___ftadd 0094                          ___awmod 09ED                          ___ftdiv 0C4F  
                __size_of___wmul 001B                          ___ftmul 0DA8                          ___ftsub 0815  
                        ___fttol 0BC9                       _errorValue 00C9                       ??___awtoft 007B  
                     ??___ftpack 0075                __end_of_eval_poly 0AE3                 ??_LCD_Set_Cursor 0075  
                        __ptext1 018A                          __ptext2 0CF8                          __ptext3 0931  
                        __ptext4 0A83                          __ptext5 0DA8                          __ptext6 08F6  
                        __ptext7 0833                          __ptext8 0BC9                          __ptext9 0815  
                  _PID_Calculate 0F25                   main@resetDelay 006F            _OSCILLATOR_Initialize 0004  
                        _readKey 1782                        _T2CONbits 028E                     __size_of_log 00B0  
               ___awmod@dividend 0072                   ADCRead@channel 0073                     _highRangeSet 01B8  
               ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070                          _samples 2350  
                        _testKey 00DF                        _LCD_Clear 1718       __size_of_SYSTEM_Initialize 0042  
                        clrloop0 172C                          main@set 006A             end_of_initialization 07FD  
                        init_ram 1737                          initloop 1738                       ??_tempCalc 007E  
               ___aldiv@quotient 0022                   main@startDelay 006E                LCD_Write_Int@sign 007D  
                     main@F13671 0220                       main@F13664 01CD                     __pstringtext 1000  
               ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0076  
               ?_InitCustomChars 0070                       main@C_or_F 006D                       ?_LCD_Clear 0070  
               __CFG_FEXTOSC$OFF 0000                       main@bCount 0068                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                       main@choice 006C  
                    ___ftdiv@exp 003E                __size_of_LCD_Init 0087                __size_of_LCD_Port 0018  
                     main@output 00AB                      ___ftmul@exp 002A                      ?_readAnalog 0026  
                    ?_menuChoice 0070                   __end_of___ftge 0931                   __end_of___wmul 1800  
               _LCD_Write_String 17CB           ?_OSCILLATOR_Initialize 0070              start_initialization 07B6  
                     eval_poly@d 0050                       eval_poly@n 0052                       eval_poly@x 004D  
__size_of_PIN_MANAGER_Initialize 0031                      __end_of_log 0DA8                       frexp@value 0070  
               ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 0F25  
               __CFG_LPBOREN$OFF 0000                         ??___ftge 0076                tempCalc@steinhart 0065  
                       ??___wmul 0074                     _pidMaxOutput 00EB                    _tempCalc$1018 0062  
                    __pdataBANK1 00E1                      __pdataBANK3 01A0                  ??_PID_Calculate 007A  
     __end_of_PWM7_LoadDutyValue 1782                  LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073  
                       ?_ADCRead 0070     PWM7_LoadDutyValue@dutyCycle7 0070                     _pidMinOutput 00D1  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                    __pbssBIGRAM 2350                         LCD_Cmd@a 0073                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                    __pcstackBANK2 0120  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074              __size_of_readAnalog 0142  
            __size_of_menuChoice 0174                     _pidPrevError 00D3           _PIN_MANAGER_Initialize 08C5  
                       ?___aldiv 0070                __size_of_tempCalc 011D                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
            main@lastTemperature 00AF                         ?_readKey 0070                        _eval_poly 0A83  
                      _menuDelay 00DE                   __size_of_frexp 003B                         _T2CLKCON 0290  
                ___aldiv@divisor 0070                  ___aldiv@counter 0020                         _LCD_Init 000D  
                 ___wmul@product 0074                         _LCD_Port 1799                        clear_ram0 172B  
                       _PIE0bits 0716                         _PIR4bits 0710                 __size_of_ADCRead 000E  
                     _ADCON0bits 0093                ___wmul@multiplier 0070                       ?_eval_poly 004D  
               __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 17E5                ??_TMR2_Initialize 0070  
                readAnalog@value 007B                        frexp@eptr 0073                     ??_readAnalog 0028  
                   ??_menuChoice 002E          ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002C  
                 LCD_Write_Int@j 002A                 __size_of___aldiv 0082                 __size_of___awdiv 0051  
               __size_of___ftadd 00F6                 __size_of___awmod 0045                 __size_of___ftdiv 00A9  
               __size_of___ftmul 00B4                 __size_of___ftsub 001E                 __size_of___fttol 0086  
                       ___awtoft 0833                         ___ftpack 0AE3         __size_of_ADCC_Initialize 001A  
                       _channels 01B0                 __size_of_readKey 0017                PID_Calculate@temp 0078  
                       __ptext10 0094                         __ptext11 0C4F                         __ptext20 09ED  
                       __ptext12 0AE3                         __ptext21 0A32                         __ptext13 02A7  
                       __ptext30 0873                         __ptext22 096C                         __ptext14 0B47  
                       __ptext31 0899                         __ptext23 09AB                         __ptext15 175E  
                       __ptext32 0801                         __ptext24 1750                         __ptext16 03E9  
                       __ptext33 1799                         __ptext25 1720                         __ptext17 1782  
                       __ptext34 17B1                         __ptext26 08C5                         __ptext18 17CB  
                       __ptext35 176C                         __ptext27 0004                         __ptext19 0E5C  
                       __ptext36 0F25                         __ptext28 000D                         __ptext37 17E5  
                       __ptext29 1718               __end_of_readAnalog 03E9          __size_of_LCD_Set_Cursor 003F  
                   _signPositive 00D7                        tempCalc@R 005F         __size_of_InitCustomChars 0026  
             __end_of_menuChoice 055D                         _lastSign 00CB              LCD_Write_Int@F13694 01C8  
                       _pidCount 00CD                    __size_of_main 0259             __CFG_WDTCWS$WDTCWS_7 0000  
                       _tempCalc 018A                         _setpoint 00E1                      _lowRangeSet 01BC  
    PIN_MANAGER_Initialize@state 0070                         log@coeff 1000                      ??_eval_poly 007E  
                    _sampleIndex 00D5               _PWM7_LoadDutyValue 176C               LCD_Write_Char@temp 0072  
        ?_PIN_MANAGER_Initialize 0070              ?_PWM7_LoadDutyValue 0070                main@outputSamples 0120  
              __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C  
           main@pidPeriodCounter 00B1               LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0079  
          __end_of_PID_Calculate 1000             ??_PWM7_LoadDutyValue 0072                     ___aldiv@sign 0021  
         __size_of_LCD_Write_Int 00C9                  main@outputIndex 00BF   __end_of_PIN_MANAGER_Initialize 08F6  
              ??_ADCC_Initialize 0070                  main@outputTotal 00B5                ??_InitCustomChars 0075  
