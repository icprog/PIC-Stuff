

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat May 12 23:26:32 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  001C                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0110                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0198                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  020F                     	;# 
   169  020F                     	;# 
   170  0210                     	;# 
   171  0210                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0218                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028C                     	;# 
   196  028D                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  028F                     	;# 
   200  0290                     	;# 
   201  0290                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0296                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029C                     	;# 
   220  029D                     	;# 
   221  030C                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  030F                     	;# 
   226  0310                     	;# 
   227  0310                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0314                     	;# 
   232  0314                     	;# 
   233  0315                     	;# 
   234  0316                     	;# 
   235  0317                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031B                     	;# 
   241  031C                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  040C                     	;# 
   253  040D                     	;# 
   254  040E                     	;# 
   255  040F                     	;# 
   256  0410                     	;# 
   257  0411                     	;# 
   258  0416                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  0418                     	;# 
   263  0419                     	;# 
   264  041A                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041C                     	;# 
   269  041D                     	;# 
   270  041E                     	;# 
   271  041F                     	;# 
   272  048C                     	;# 
   273  048C                     	;# 
   274  048D                     	;# 
   275  048E                     	;# 
   276  048F                     	;# 
   277  048F                     	;# 
   278  0490                     	;# 
   279  0491                     	;# 
   280  0492                     	;# 
   281  0492                     	;# 
   282  0493                     	;# 
   283  0494                     	;# 
   284  0495                     	;# 
   285  0495                     	;# 
   286  0496                     	;# 
   287  0497                     	;# 
   288  0498                     	;# 
   289  0499                     	;# 
   290  049A                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  050C                     	;# 
   295  050C                     	;# 
   296  050D                     	;# 
   297  050E                     	;# 
   298  050F                     	;# 
   299  050F                     	;# 
   300  0510                     	;# 
   301  0511                     	;# 
   302  0512                     	;# 
   303  0512                     	;# 
   304  0513                     	;# 
   305  0514                     	;# 
   306  0515                     	;# 
   307  0515                     	;# 
   308  0516                     	;# 
   309  0517                     	;# 
   310  0518                     	;# 
   311  0519                     	;# 
   312  051A                     	;# 
   313  051B                     	;# 
   314  051C                     	;# 
   315  051D                     	;# 
   316  058C                     	;# 
   317  058C                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  0590                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  060C                     	;# 
   327  060D                     	;# 
   328  060E                     	;# 
   329  060F                     	;# 
   330  0610                     	;# 
   331  0611                     	;# 
   332  0612                     	;# 
   333  0613                     	;# 
   334  0614                     	;# 
   335  0616                     	;# 
   336  0617                     	;# 
   337  0618                     	;# 
   338  0619                     	;# 
   339  061A                     	;# 
   340  061B                     	;# 
   341  061C                     	;# 
   342  061D                     	;# 
   343  061E                     	;# 
   344  068C                     	;# 
   345  068D                     	;# 
   346  068E                     	;# 
   347  068F                     	;# 
   348  0690                     	;# 
   349  0691                     	;# 
   350  0692                     	;# 
   351  0693                     	;# 
   352  0694                     	;# 
   353  070C                     	;# 
   354  070D                     	;# 
   355  070E                     	;# 
   356  070F                     	;# 
   357  0710                     	;# 
   358  0711                     	;# 
   359  0712                     	;# 
   360  0713                     	;# 
   361  0714                     	;# 
   362  0716                     	;# 
   363  0717                     	;# 
   364  0718                     	;# 
   365  0719                     	;# 
   366  071A                     	;# 
   367  071B                     	;# 
   368  071C                     	;# 
   369  071D                     	;# 
   370  071E                     	;# 
   371  0796                     	;# 
   372  0797                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  079A                     	;# 
   376  079B                     	;# 
   377  080C                     	;# 
   378  080D                     	;# 
   379  080E                     	;# 
   380  080F                     	;# 
   381  0810                     	;# 
   382  0811                     	;# 
   383  0812                     	;# 
   384  0813                     	;# 
   385  0814                     	;# 
   386  081A                     	;# 
   387  081B                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  081E                     	;# 
   391  081F                     	;# 
   392  088C                     	;# 
   393  088D                     	;# 
   394  088E                     	;# 
   395  088F                     	;# 
   396  0890                     	;# 
   397  0891                     	;# 
   398  0892                     	;# 
   399  0893                     	;# 
   400  0895                     	;# 
   401  0896                     	;# 
   402  0897                     	;# 
   403  0898                     	;# 
   404  0899                     	;# 
   405  089A                     	;# 
   406  089B                     	;# 
   407  090C                     	;# 
   408  090E                     	;# 
   409  090F                     	;# 
   410  091F                     	;# 
   411  091F                     	;# 
   412  098F                     	;# 
   413  098F                     	;# 
   414  0990                     	;# 
   415  0991                     	;# 
   416  0992                     	;# 
   417  0993                     	;# 
   418  0994                     	;# 
   419  0995                     	;# 
   420  0996                     	;# 
   421  0997                     	;# 
   422  0E0F                     	;# 
   423  0E10                     	;# 
   424  0E11                     	;# 
   425  0E12                     	;# 
   426  0E13                     	;# 
   427  0E14                     	;# 
   428  0E15                     	;# 
   429  0E16                     	;# 
   430  0E17                     	;# 
   431  0E18                     	;# 
   432  0E19                     	;# 
   433  0E1A                     	;# 
   434  0E1B                     	;# 
   435  0E1C                     	;# 
   436  0E1D                     	;# 
   437  0E1E                     	;# 
   438  0E1F                     	;# 
   439  0E20                     	;# 
   440  0E21                     	;# 
   441  0E22                     	;# 
   442  0E23                     	;# 
   443  0E24                     	;# 
   444  0E25                     	;# 
   445  0E26                     	;# 
   446  0E27                     	;# 
   447  0E28                     	;# 
   448  0E29                     	;# 
   449  0E2A                     	;# 
   450  0E2B                     	;# 
   451  0E2C                     	;# 
   452  0E2D                     	;# 
   453  0E2E                     	;# 
   454  0E2F                     	;# 
   455  0E30                     	;# 
   456  0E31                     	;# 
   457  0E32                     	;# 
   458  0E33                     	;# 
   459  0E34                     	;# 
   460  0E35                     	;# 
   461  0E36                     	;# 
   462  0E37                     	;# 
   463  0E8F                     	;# 
   464  0E90                     	;# 
   465  0E91                     	;# 
   466  0E92                     	;# 
   467  0E93                     	;# 
   468  0E94                     	;# 
   469  0E95                     	;# 
   470  0E96                     	;# 
   471  0E97                     	;# 
   472  0E9C                     	;# 
   473  0E9D                     	;# 
   474  0E9E                     	;# 
   475  0EA1                     	;# 
   476  0EA2                     	;# 
   477  0EA3                     	;# 
   478  0EA4                     	;# 
   479  0EA5                     	;# 
   480  0EA9                     	;# 
   481  0EAA                     	;# 
   482  0EAB                     	;# 
   483  0EAC                     	;# 
   484  0EB1                     	;# 
   485  0EB2                     	;# 
   486  0EB3                     	;# 
   487  0EB8                     	;# 
   488  0EB9                     	;# 
   489  0EBA                     	;# 
   490  0EBB                     	;# 
   491  0EBC                     	;# 
   492  0EBD                     	;# 
   493  0EBE                     	;# 
   494  0EC3                     	;# 
   495  0EC5                     	;# 
   496  0EC6                     	;# 
   497  0EC7                     	;# 
   498  0EC8                     	;# 
   499  0EC9                     	;# 
   500  0ECA                     	;# 
   501  0ECB                     	;# 
   502  0ECC                     	;# 
   503  0F10                     	;# 
   504  0F11                     	;# 
   505  0F12                     	;# 
   506  0F13                     	;# 
   507  0F14                     	;# 
   508  0F15                     	;# 
   509  0F16                     	;# 
   510  0F17                     	;# 
   511  0F18                     	;# 
   512  0F19                     	;# 
   513  0F1A                     	;# 
   514  0F1B                     	;# 
   515  0F1C                     	;# 
   516  0F1D                     	;# 
   517  0F1E                     	;# 
   518  0F1F                     	;# 
   519  0F20                     	;# 
   520  0F21                     	;# 
   521  0F22                     	;# 
   522  0F23                     	;# 
   523  0F24                     	;# 
   524  0F25                     	;# 
   525  0F26                     	;# 
   526  0F27                     	;# 
   527  0F38                     	;# 
   528  0F39                     	;# 
   529  0F3A                     	;# 
   530  0F3B                     	;# 
   531  0F3C                     	;# 
   532  0F3D                     	;# 
   533  0F3E                     	;# 
   534  0F3F                     	;# 
   535  0F40                     	;# 
   536  0F41                     	;# 
   537  0F43                     	;# 
   538  0F44                     	;# 
   539  0F45                     	;# 
   540  0F46                     	;# 
   541  0F47                     	;# 
   542  0F48                     	;# 
   543  0F49                     	;# 
   544  0F4A                     	;# 
   545  0F4B                     	;# 
   546  0F4C                     	;# 
   547  0F4E                     	;# 
   548  0F4F                     	;# 
   549  0F50                     	;# 
   550  0F51                     	;# 
   551  0F52                     	;# 
   552  0F53                     	;# 
   553  0F54                     	;# 
   554  0F55                     	;# 
   555  0F56                     	;# 
   556  0F57                     	;# 
   557  0F65                     	;# 
   558  0F68                     	;# 
   559  0F69                     	;# 
   560  0F6A                     	;# 
   561  0F6B                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0010                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  001C                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0110                     	;# 
   628  0110                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0112                     	;# 
   632  0113                     	;# 
   633  0114                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  018E                     	;# 
   667  018F                     	;# 
   668  0190                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0196                     	;# 
   672  0197                     	;# 
   673  0198                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  020C                     	;# 
   679  020D                     	;# 
   680  020E                     	;# 
   681  020F                     	;# 
   682  020F                     	;# 
   683  0210                     	;# 
   684  0210                     	;# 
   685  0211                     	;# 
   686  0211                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0216                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0217                     	;# 
   696  0218                     	;# 
   697  0219                     	;# 
   698  021A                     	;# 
   699  021B                     	;# 
   700  021B                     	;# 
   701  021C                     	;# 
   702  021C                     	;# 
   703  021D                     	;# 
   704  021D                     	;# 
   705  021E                     	;# 
   706  021F                     	;# 
   707  028C                     	;# 
   708  028C                     	;# 
   709  028D                     	;# 
   710  028D                     	;# 
   711  028E                     	;# 
   712  028F                     	;# 
   713  0290                     	;# 
   714  0290                     	;# 
   715  0291                     	;# 
   716  0292                     	;# 
   717  0292                     	;# 
   718  0293                     	;# 
   719  0293                     	;# 
   720  0294                     	;# 
   721  0295                     	;# 
   722  0296                     	;# 
   723  0296                     	;# 
   724  0297                     	;# 
   725  0298                     	;# 
   726  0298                     	;# 
   727  0299                     	;# 
   728  0299                     	;# 
   729  029A                     	;# 
   730  029B                     	;# 
   731  029C                     	;# 
   732  029C                     	;# 
   733  029D                     	;# 
   734  030C                     	;# 
   735  030C                     	;# 
   736  030D                     	;# 
   737  030E                     	;# 
   738  030F                     	;# 
   739  0310                     	;# 
   740  0310                     	;# 
   741  0311                     	;# 
   742  0312                     	;# 
   743  0313                     	;# 
   744  0314                     	;# 
   745  0314                     	;# 
   746  0315                     	;# 
   747  0316                     	;# 
   748  0317                     	;# 
   749  0318                     	;# 
   750  0318                     	;# 
   751  0319                     	;# 
   752  031A                     	;# 
   753  031B                     	;# 
   754  031C                     	;# 
   755  031C                     	;# 
   756  031D                     	;# 
   757  031E                     	;# 
   758  031F                     	;# 
   759  038C                     	;# 
   760  038D                     	;# 
   761  038E                     	;# 
   762  0390                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  040C                     	;# 
   766  040D                     	;# 
   767  040E                     	;# 
   768  040F                     	;# 
   769  0410                     	;# 
   770  0411                     	;# 
   771  0416                     	;# 
   772  0416                     	;# 
   773  0417                     	;# 
   774  0418                     	;# 
   775  0418                     	;# 
   776  0419                     	;# 
   777  041A                     	;# 
   778  041A                     	;# 
   779  041B                     	;# 
   780  041C                     	;# 
   781  041C                     	;# 
   782  041D                     	;# 
   783  041E                     	;# 
   784  041F                     	;# 
   785  048C                     	;# 
   786  048C                     	;# 
   787  048D                     	;# 
   788  048E                     	;# 
   789  048F                     	;# 
   790  048F                     	;# 
   791  0490                     	;# 
   792  0491                     	;# 
   793  0492                     	;# 
   794  0492                     	;# 
   795  0493                     	;# 
   796  0494                     	;# 
   797  0495                     	;# 
   798  0495                     	;# 
   799  0496                     	;# 
   800  0497                     	;# 
   801  0498                     	;# 
   802  0499                     	;# 
   803  049A                     	;# 
   804  049B                     	;# 
   805  049C                     	;# 
   806  049D                     	;# 
   807  050C                     	;# 
   808  050C                     	;# 
   809  050D                     	;# 
   810  050E                     	;# 
   811  050F                     	;# 
   812  050F                     	;# 
   813  0510                     	;# 
   814  0511                     	;# 
   815  0512                     	;# 
   816  0512                     	;# 
   817  0513                     	;# 
   818  0514                     	;# 
   819  0515                     	;# 
   820  0515                     	;# 
   821  0516                     	;# 
   822  0517                     	;# 
   823  0518                     	;# 
   824  0519                     	;# 
   825  051A                     	;# 
   826  051B                     	;# 
   827  051C                     	;# 
   828  051D                     	;# 
   829  058C                     	;# 
   830  058C                     	;# 
   831  058D                     	;# 
   832  058E                     	;# 
   833  058F                     	;# 
   834  058F                     	;# 
   835  0590                     	;# 
   836  0591                     	;# 
   837  0592                     	;# 
   838  0593                     	;# 
   839  060C                     	;# 
   840  060D                     	;# 
   841  060E                     	;# 
   842  060F                     	;# 
   843  0610                     	;# 
   844  0611                     	;# 
   845  0612                     	;# 
   846  0613                     	;# 
   847  0614                     	;# 
   848  0616                     	;# 
   849  0617                     	;# 
   850  0618                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061D                     	;# 
   856  061E                     	;# 
   857  068C                     	;# 
   858  068D                     	;# 
   859  068E                     	;# 
   860  068F                     	;# 
   861  0690                     	;# 
   862  0691                     	;# 
   863  0692                     	;# 
   864  0693                     	;# 
   865  0694                     	;# 
   866  070C                     	;# 
   867  070D                     	;# 
   868  070E                     	;# 
   869  070F                     	;# 
   870  0710                     	;# 
   871  0711                     	;# 
   872  0712                     	;# 
   873  0713                     	;# 
   874  0714                     	;# 
   875  0716                     	;# 
   876  0717                     	;# 
   877  0718                     	;# 
   878  0719                     	;# 
   879  071A                     	;# 
   880  071B                     	;# 
   881  071C                     	;# 
   882  071D                     	;# 
   883  071E                     	;# 
   884  0796                     	;# 
   885  0797                     	;# 
   886  0798                     	;# 
   887  0799                     	;# 
   888  079A                     	;# 
   889  079B                     	;# 
   890  080C                     	;# 
   891  080D                     	;# 
   892  080E                     	;# 
   893  080F                     	;# 
   894  0810                     	;# 
   895  0811                     	;# 
   896  0812                     	;# 
   897  0813                     	;# 
   898  0814                     	;# 
   899  081A                     	;# 
   900  081B                     	;# 
   901  081C                     	;# 
   902  081D                     	;# 
   903  081E                     	;# 
   904  081F                     	;# 
   905  088C                     	;# 
   906  088D                     	;# 
   907  088E                     	;# 
   908  088F                     	;# 
   909  0890                     	;# 
   910  0891                     	;# 
   911  0892                     	;# 
   912  0893                     	;# 
   913  0895                     	;# 
   914  0896                     	;# 
   915  0897                     	;# 
   916  0898                     	;# 
   917  0899                     	;# 
   918  089A                     	;# 
   919  089B                     	;# 
   920  090C                     	;# 
   921  090E                     	;# 
   922  090F                     	;# 
   923  091F                     	;# 
   924  091F                     	;# 
   925  098F                     	;# 
   926  098F                     	;# 
   927  0990                     	;# 
   928  0991                     	;# 
   929  0992                     	;# 
   930  0993                     	;# 
   931  0994                     	;# 
   932  0995                     	;# 
   933  0996                     	;# 
   934  0997                     	;# 
   935  0E0F                     	;# 
   936  0E10                     	;# 
   937  0E11                     	;# 
   938  0E12                     	;# 
   939  0E13                     	;# 
   940  0E14                     	;# 
   941  0E15                     	;# 
   942  0E16                     	;# 
   943  0E17                     	;# 
   944  0E18                     	;# 
   945  0E19                     	;# 
   946  0E1A                     	;# 
   947  0E1B                     	;# 
   948  0E1C                     	;# 
   949  0E1D                     	;# 
   950  0E1E                     	;# 
   951  0E1F                     	;# 
   952  0E20                     	;# 
   953  0E21                     	;# 
   954  0E22                     	;# 
   955  0E23                     	;# 
   956  0E24                     	;# 
   957  0E25                     	;# 
   958  0E26                     	;# 
   959  0E27                     	;# 
   960  0E28                     	;# 
   961  0E29                     	;# 
   962  0E2A                     	;# 
   963  0E2B                     	;# 
   964  0E2C                     	;# 
   965  0E2D                     	;# 
   966  0E2E                     	;# 
   967  0E2F                     	;# 
   968  0E30                     	;# 
   969  0E31                     	;# 
   970  0E32                     	;# 
   971  0E33                     	;# 
   972  0E34                     	;# 
   973  0E35                     	;# 
   974  0E36                     	;# 
   975  0E37                     	;# 
   976  0E8F                     	;# 
   977  0E90                     	;# 
   978  0E91                     	;# 
   979  0E92                     	;# 
   980  0E93                     	;# 
   981  0E94                     	;# 
   982  0E95                     	;# 
   983  0E96                     	;# 
   984  0E97                     	;# 
   985  0E9C                     	;# 
   986  0E9D                     	;# 
   987  0E9E                     	;# 
   988  0EA1                     	;# 
   989  0EA2                     	;# 
   990  0EA3                     	;# 
   991  0EA4                     	;# 
   992  0EA5                     	;# 
   993  0EA9                     	;# 
   994  0EAA                     	;# 
   995  0EAB                     	;# 
   996  0EAC                     	;# 
   997  0EB1                     	;# 
   998  0EB2                     	;# 
   999  0EB3                     	;# 
  1000  0EB8                     	;# 
  1001  0EB9                     	;# 
  1002  0EBA                     	;# 
  1003  0EBB                     	;# 
  1004  0EBC                     	;# 
  1005  0EBD                     	;# 
  1006  0EBE                     	;# 
  1007  0EC3                     	;# 
  1008  0EC5                     	;# 
  1009  0EC6                     	;# 
  1010  0EC7                     	;# 
  1011  0EC8                     	;# 
  1012  0EC9                     	;# 
  1013  0ECA                     	;# 
  1014  0ECB                     	;# 
  1015  0ECC                     	;# 
  1016  0F10                     	;# 
  1017  0F11                     	;# 
  1018  0F12                     	;# 
  1019  0F13                     	;# 
  1020  0F14                     	;# 
  1021  0F15                     	;# 
  1022  0F16                     	;# 
  1023  0F17                     	;# 
  1024  0F18                     	;# 
  1025  0F19                     	;# 
  1026  0F1A                     	;# 
  1027  0F1B                     	;# 
  1028  0F1C                     	;# 
  1029  0F1D                     	;# 
  1030  0F1E                     	;# 
  1031  0F1F                     	;# 
  1032  0F20                     	;# 
  1033  0F21                     	;# 
  1034  0F22                     	;# 
  1035  0F23                     	;# 
  1036  0F24                     	;# 
  1037  0F25                     	;# 
  1038  0F26                     	;# 
  1039  0F27                     	;# 
  1040  0F38                     	;# 
  1041  0F39                     	;# 
  1042  0F3A                     	;# 
  1043  0F3B                     	;# 
  1044  0F3C                     	;# 
  1045  0F3D                     	;# 
  1046  0F3E                     	;# 
  1047  0F3F                     	;# 
  1048  0F40                     	;# 
  1049  0F41                     	;# 
  1050  0F43                     	;# 
  1051  0F44                     	;# 
  1052  0F45                     	;# 
  1053  0F46                     	;# 
  1054  0F47                     	;# 
  1055  0F48                     	;# 
  1056  0F49                     	;# 
  1057  0F4A                     	;# 
  1058  0F4B                     	;# 
  1059  0F4C                     	;# 
  1060  0F4E                     	;# 
  1061  0F4F                     	;# 
  1062  0F50                     	;# 
  1063  0F51                     	;# 
  1064  0F52                     	;# 
  1065  0F53                     	;# 
  1066  0F54                     	;# 
  1067  0F55                     	;# 
  1068  0F56                     	;# 
  1069  0F57                     	;# 
  1070  0F65                     	;# 
  1071  0F68                     	;# 
  1072  0F69                     	;# 
  1073  0F6A                     	;# 
  1074  0F6B                     	;# 
  1075  0FE4                     	;# 
  1076  0FE5                     	;# 
  1077  0FE6                     	;# 
  1078  0FE7                     	;# 
  1079  0FE8                     	;# 
  1080  0FE9                     	;# 
  1081  0FEA                     	;# 
  1082  0FEB                     	;# 
  1083  0FED                     	;# 
  1084  0FEE                     	;# 
  1085  0FEF                     	;# 
  1086  0000                     	;# 
  1087  0001                     	;# 
  1088  0002                     	;# 
  1089  0003                     	;# 
  1090  0004                     	;# 
  1091  0005                     	;# 
  1092  0006                     	;# 
  1093  0007                     	;# 
  1094  0008                     	;# 
  1095  0009                     	;# 
  1096  000A                     	;# 
  1097  000B                     	;# 
  1098  000C                     	;# 
  1099  000D                     	;# 
  1100  000E                     	;# 
  1101  0010                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  001C                     	;# 
  1109  001C                     	;# 
  1110  001D                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  008C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  008E                     	;# 
  1119  008F                     	;# 
  1120  0090                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0093                     	;# 
  1124  0094                     	;# 
  1125  0095                     	;# 
  1126  0096                     	;# 
  1127  0097                     	;# 
  1128  0098                     	;# 
  1129  0099                     	;# 
  1130  009A                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  010E                     	;# 
  1139  010F                     	;# 
  1140  0110                     	;# 
  1141  0110                     	;# 
  1142  0111                     	;# 
  1143  0112                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179  018E                     	;# 
  1180  018F                     	;# 
  1181  0190                     	;# 
  1182  0191                     	;# 
  1183  0192                     	;# 
  1184  0196                     	;# 
  1185  0197                     	;# 
  1186  0198                     	;# 
  1187  0199                     	;# 
  1188  019A                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  020E                     	;# 
  1194  020F                     	;# 
  1195  020F                     	;# 
  1196  0210                     	;# 
  1197  0210                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0214                     	;# 
  1203  0215                     	;# 
  1204  0215                     	;# 
  1205  0216                     	;# 
  1206  0216                     	;# 
  1207  0217                     	;# 
  1208  0217                     	;# 
  1209  0218                     	;# 
  1210  0219                     	;# 
  1211  021A                     	;# 
  1212  021B                     	;# 
  1213  021B                     	;# 
  1214  021C                     	;# 
  1215  021C                     	;# 
  1216  021D                     	;# 
  1217  021D                     	;# 
  1218  021E                     	;# 
  1219  021F                     	;# 
  1220  028C                     	;# 
  1221  028C                     	;# 
  1222  028D                     	;# 
  1223  028D                     	;# 
  1224  028E                     	;# 
  1225  028F                     	;# 
  1226  0290                     	;# 
  1227  0290                     	;# 
  1228  0291                     	;# 
  1229  0292                     	;# 
  1230  0292                     	;# 
  1231  0293                     	;# 
  1232  0293                     	;# 
  1233  0294                     	;# 
  1234  0295                     	;# 
  1235  0296                     	;# 
  1236  0296                     	;# 
  1237  0297                     	;# 
  1238  0298                     	;# 
  1239  0298                     	;# 
  1240  0299                     	;# 
  1241  0299                     	;# 
  1242  029A                     	;# 
  1243  029B                     	;# 
  1244  029C                     	;# 
  1245  029C                     	;# 
  1246  029D                     	;# 
  1247  030C                     	;# 
  1248  030C                     	;# 
  1249  030D                     	;# 
  1250  030E                     	;# 
  1251  030F                     	;# 
  1252  0310                     	;# 
  1253  0310                     	;# 
  1254  0311                     	;# 
  1255  0312                     	;# 
  1256  0313                     	;# 
  1257  0314                     	;# 
  1258  0314                     	;# 
  1259  0315                     	;# 
  1260  0316                     	;# 
  1261  0317                     	;# 
  1262  0318                     	;# 
  1263  0318                     	;# 
  1264  0319                     	;# 
  1265  031A                     	;# 
  1266  031B                     	;# 
  1267  031C                     	;# 
  1268  031C                     	;# 
  1269  031D                     	;# 
  1270  031E                     	;# 
  1271  031F                     	;# 
  1272  038C                     	;# 
  1273  038D                     	;# 
  1274  038E                     	;# 
  1275  0390                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  040C                     	;# 
  1279  040D                     	;# 
  1280  040E                     	;# 
  1281  040F                     	;# 
  1282  0410                     	;# 
  1283  0411                     	;# 
  1284  0416                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  0418                     	;# 
  1288  0418                     	;# 
  1289  0419                     	;# 
  1290  041A                     	;# 
  1291  041A                     	;# 
  1292  041B                     	;# 
  1293  041C                     	;# 
  1294  041C                     	;# 
  1295  041D                     	;# 
  1296  041E                     	;# 
  1297  041F                     	;# 
  1298  048C                     	;# 
  1299  048C                     	;# 
  1300  048D                     	;# 
  1301  048E                     	;# 
  1302  048F                     	;# 
  1303  048F                     	;# 
  1304  0490                     	;# 
  1305  0491                     	;# 
  1306  0492                     	;# 
  1307  0492                     	;# 
  1308  0493                     	;# 
  1309  0494                     	;# 
  1310  0495                     	;# 
  1311  0495                     	;# 
  1312  0496                     	;# 
  1313  0497                     	;# 
  1314  0498                     	;# 
  1315  0499                     	;# 
  1316  049A                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  050C                     	;# 
  1321  050C                     	;# 
  1322  050D                     	;# 
  1323  050E                     	;# 
  1324  050F                     	;# 
  1325  050F                     	;# 
  1326  0510                     	;# 
  1327  0511                     	;# 
  1328  0512                     	;# 
  1329  0512                     	;# 
  1330  0513                     	;# 
  1331  0514                     	;# 
  1332  0515                     	;# 
  1333  0515                     	;# 
  1334  0516                     	;# 
  1335  0517                     	;# 
  1336  0518                     	;# 
  1337  0519                     	;# 
  1338  051A                     	;# 
  1339  051B                     	;# 
  1340  051C                     	;# 
  1341  051D                     	;# 
  1342  058C                     	;# 
  1343  058C                     	;# 
  1344  058D                     	;# 
  1345  058E                     	;# 
  1346  058F                     	;# 
  1347  058F                     	;# 
  1348  0590                     	;# 
  1349  0591                     	;# 
  1350  0592                     	;# 
  1351  0593                     	;# 
  1352  060C                     	;# 
  1353  060D                     	;# 
  1354  060E                     	;# 
  1355  060F                     	;# 
  1356  0610                     	;# 
  1357  0611                     	;# 
  1358  0612                     	;# 
  1359  0613                     	;# 
  1360  0614                     	;# 
  1361  0616                     	;# 
  1362  0617                     	;# 
  1363  0618                     	;# 
  1364  0619                     	;# 
  1365  061A                     	;# 
  1366  061B                     	;# 
  1367  061C                     	;# 
  1368  061D                     	;# 
  1369  061E                     	;# 
  1370  068C                     	;# 
  1371  068D                     	;# 
  1372  068E                     	;# 
  1373  068F                     	;# 
  1374  0690                     	;# 
  1375  0691                     	;# 
  1376  0692                     	;# 
  1377  0693                     	;# 
  1378  0694                     	;# 
  1379  070C                     	;# 
  1380  070D                     	;# 
  1381  070E                     	;# 
  1382  070F                     	;# 
  1383  0710                     	;# 
  1384  0711                     	;# 
  1385  0712                     	;# 
  1386  0713                     	;# 
  1387  0714                     	;# 
  1388  0716                     	;# 
  1389  0717                     	;# 
  1390  0718                     	;# 
  1391  0719                     	;# 
  1392  071A                     	;# 
  1393  071B                     	;# 
  1394  071C                     	;# 
  1395  071D                     	;# 
  1396  071E                     	;# 
  1397  0796                     	;# 
  1398  0797                     	;# 
  1399  0798                     	;# 
  1400  0799                     	;# 
  1401  079A                     	;# 
  1402  079B                     	;# 
  1403  080C                     	;# 
  1404  080D                     	;# 
  1405  080E                     	;# 
  1406  080F                     	;# 
  1407  0810                     	;# 
  1408  0811                     	;# 
  1409  0812                     	;# 
  1410  0813                     	;# 
  1411  0814                     	;# 
  1412  081A                     	;# 
  1413  081B                     	;# 
  1414  081C                     	;# 
  1415  081D                     	;# 
  1416  081E                     	;# 
  1417  081F                     	;# 
  1418  088C                     	;# 
  1419  088D                     	;# 
  1420  088E                     	;# 
  1421  088F                     	;# 
  1422  0890                     	;# 
  1423  0891                     	;# 
  1424  0892                     	;# 
  1425  0893                     	;# 
  1426  0895                     	;# 
  1427  0896                     	;# 
  1428  0897                     	;# 
  1429  0898                     	;# 
  1430  0899                     	;# 
  1431  089A                     	;# 
  1432  089B                     	;# 
  1433  090C                     	;# 
  1434  090E                     	;# 
  1435  090F                     	;# 
  1436  091F                     	;# 
  1437  091F                     	;# 
  1438  098F                     	;# 
  1439  098F                     	;# 
  1440  0990                     	;# 
  1441  0991                     	;# 
  1442  0992                     	;# 
  1443  0993                     	;# 
  1444  0994                     	;# 
  1445  0995                     	;# 
  1446  0996                     	;# 
  1447  0997                     	;# 
  1448  0E0F                     	;# 
  1449  0E10                     	;# 
  1450  0E11                     	;# 
  1451  0E12                     	;# 
  1452  0E13                     	;# 
  1453  0E14                     	;# 
  1454  0E15                     	;# 
  1455  0E16                     	;# 
  1456  0E17                     	;# 
  1457  0E18                     	;# 
  1458  0E19                     	;# 
  1459  0E1A                     	;# 
  1460  0E1B                     	;# 
  1461  0E1C                     	;# 
  1462  0E1D                     	;# 
  1463  0E1E                     	;# 
  1464  0E1F                     	;# 
  1465  0E20                     	;# 
  1466  0E21                     	;# 
  1467  0E22                     	;# 
  1468  0E23                     	;# 
  1469  0E24                     	;# 
  1470  0E25                     	;# 
  1471  0E26                     	;# 
  1472  0E27                     	;# 
  1473  0E28                     	;# 
  1474  0E29                     	;# 
  1475  0E2A                     	;# 
  1476  0E2B                     	;# 
  1477  0E2C                     	;# 
  1478  0E2D                     	;# 
  1479  0E2E                     	;# 
  1480  0E2F                     	;# 
  1481  0E30                     	;# 
  1482  0E31                     	;# 
  1483  0E32                     	;# 
  1484  0E33                     	;# 
  1485  0E34                     	;# 
  1486  0E35                     	;# 
  1487  0E36                     	;# 
  1488  0E37                     	;# 
  1489  0E8F                     	;# 
  1490  0E90                     	;# 
  1491  0E91                     	;# 
  1492  0E92                     	;# 
  1493  0E93                     	;# 
  1494  0E94                     	;# 
  1495  0E95                     	;# 
  1496  0E96                     	;# 
  1497  0E97                     	;# 
  1498  0E9C                     	;# 
  1499  0E9D                     	;# 
  1500  0E9E                     	;# 
  1501  0EA1                     	;# 
  1502  0EA2                     	;# 
  1503  0EA3                     	;# 
  1504  0EA4                     	;# 
  1505  0EA5                     	;# 
  1506  0EA9                     	;# 
  1507  0EAA                     	;# 
  1508  0EAB                     	;# 
  1509  0EAC                     	;# 
  1510  0EB1                     	;# 
  1511  0EB2                     	;# 
  1512  0EB3                     	;# 
  1513  0EB8                     	;# 
  1514  0EB9                     	;# 
  1515  0EBA                     	;# 
  1516  0EBB                     	;# 
  1517  0EBC                     	;# 
  1518  0EBD                     	;# 
  1519  0EBE                     	;# 
  1520  0EC3                     	;# 
  1521  0EC5                     	;# 
  1522  0EC6                     	;# 
  1523  0EC7                     	;# 
  1524  0EC8                     	;# 
  1525  0EC9                     	;# 
  1526  0ECA                     	;# 
  1527  0ECB                     	;# 
  1528  0ECC                     	;# 
  1529  0F10                     	;# 
  1530  0F11                     	;# 
  1531  0F12                     	;# 
  1532  0F13                     	;# 
  1533  0F14                     	;# 
  1534  0F15                     	;# 
  1535  0F16                     	;# 
  1536  0F17                     	;# 
  1537  0F18                     	;# 
  1538  0F19                     	;# 
  1539  0F1A                     	;# 
  1540  0F1B                     	;# 
  1541  0F1C                     	;# 
  1542  0F1D                     	;# 
  1543  0F1E                     	;# 
  1544  0F1F                     	;# 
  1545  0F20                     	;# 
  1546  0F21                     	;# 
  1547  0F22                     	;# 
  1548  0F23                     	;# 
  1549  0F24                     	;# 
  1550  0F25                     	;# 
  1551  0F26                     	;# 
  1552  0F27                     	;# 
  1553  0F38                     	;# 
  1554  0F39                     	;# 
  1555  0F3A                     	;# 
  1556  0F3B                     	;# 
  1557  0F3C                     	;# 
  1558  0F3D                     	;# 
  1559  0F3E                     	;# 
  1560  0F3F                     	;# 
  1561  0F40                     	;# 
  1562  0F41                     	;# 
  1563  0F43                     	;# 
  1564  0F44                     	;# 
  1565  0F45                     	;# 
  1566  0F46                     	;# 
  1567  0F47                     	;# 
  1568  0F48                     	;# 
  1569  0F49                     	;# 
  1570  0F4A                     	;# 
  1571  0F4B                     	;# 
  1572  0F4C                     	;# 
  1573  0F4E                     	;# 
  1574  0F4F                     	;# 
  1575  0F50                     	;# 
  1576  0F51                     	;# 
  1577  0F52                     	;# 
  1578  0F53                     	;# 
  1579  0F54                     	;# 
  1580  0F55                     	;# 
  1581  0F56                     	;# 
  1582  0F57                     	;# 
  1583  0F65                     	;# 
  1584  0F68                     	;# 
  1585  0F69                     	;# 
  1586  0F6A                     	;# 
  1587  0F6B                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0013                     	;# 
  1618  0016                     	;# 
  1619  0017                     	;# 
  1620  0018                     	;# 
  1621  001C                     	;# 
  1622  001C                     	;# 
  1623  001D                     	;# 
  1624  001D                     	;# 
  1625  001E                     	;# 
  1626  001F                     	;# 
  1627  008C                     	;# 
  1628  008C                     	;# 
  1629  008D                     	;# 
  1630  008E                     	;# 
  1631  008E                     	;# 
  1632  008F                     	;# 
  1633  0090                     	;# 
  1634  0090                     	;# 
  1635  0091                     	;# 
  1636  0093                     	;# 
  1637  0094                     	;# 
  1638  0095                     	;# 
  1639  0096                     	;# 
  1640  0097                     	;# 
  1641  0098                     	;# 
  1642  0099                     	;# 
  1643  009A                     	;# 
  1644  009B                     	;# 
  1645  009C                     	;# 
  1646  009D                     	;# 
  1647  009E                     	;# 
  1648  010C                     	;# 
  1649  010D                     	;# 
  1650  010E                     	;# 
  1651  010E                     	;# 
  1652  010F                     	;# 
  1653  0110                     	;# 
  1654  0110                     	;# 
  1655  0111                     	;# 
  1656  0112                     	;# 
  1657  0112                     	;# 
  1658  0113                     	;# 
  1659  0114                     	;# 
  1660  0114                     	;# 
  1661  0115                     	;# 
  1662  0116                     	;# 
  1663  0116                     	;# 
  1664  0117                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  018C                     	;# 
  1691  018D                     	;# 
  1692  018E                     	;# 
  1693  018F                     	;# 
  1694  0190                     	;# 
  1695  0191                     	;# 
  1696  0192                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0198                     	;# 
  1700  0199                     	;# 
  1701  019A                     	;# 
  1702  019B                     	;# 
  1703  019C                     	;# 
  1704  020C                     	;# 
  1705  020D                     	;# 
  1706  020E                     	;# 
  1707  020F                     	;# 
  1708  020F                     	;# 
  1709  0210                     	;# 
  1710  0210                     	;# 
  1711  0211                     	;# 
  1712  0211                     	;# 
  1713  0212                     	;# 
  1714  0213                     	;# 
  1715  0214                     	;# 
  1716  0215                     	;# 
  1717  0215                     	;# 
  1718  0216                     	;# 
  1719  0216                     	;# 
  1720  0217                     	;# 
  1721  0217                     	;# 
  1722  0218                     	;# 
  1723  0219                     	;# 
  1724  021A                     	;# 
  1725  021B                     	;# 
  1726  021B                     	;# 
  1727  021C                     	;# 
  1728  021C                     	;# 
  1729  021D                     	;# 
  1730  021D                     	;# 
  1731  021E                     	;# 
  1732  021F                     	;# 
  1733  028C                     	;# 
  1734  028C                     	;# 
  1735  028D                     	;# 
  1736  028D                     	;# 
  1737  028E                     	;# 
  1738  028F                     	;# 
  1739  0290                     	;# 
  1740  0290                     	;# 
  1741  0291                     	;# 
  1742  0292                     	;# 
  1743  0292                     	;# 
  1744  0293                     	;# 
  1745  0293                     	;# 
  1746  0294                     	;# 
  1747  0295                     	;# 
  1748  0296                     	;# 
  1749  0296                     	;# 
  1750  0297                     	;# 
  1751  0298                     	;# 
  1752  0298                     	;# 
  1753  0299                     	;# 
  1754  0299                     	;# 
  1755  029A                     	;# 
  1756  029B                     	;# 
  1757  029C                     	;# 
  1758  029C                     	;# 
  1759  029D                     	;# 
  1760  030C                     	;# 
  1761  030C                     	;# 
  1762  030D                     	;# 
  1763  030E                     	;# 
  1764  030F                     	;# 
  1765  0310                     	;# 
  1766  0310                     	;# 
  1767  0311                     	;# 
  1768  0312                     	;# 
  1769  0313                     	;# 
  1770  0314                     	;# 
  1771  0314                     	;# 
  1772  0315                     	;# 
  1773  0316                     	;# 
  1774  0317                     	;# 
  1775  0318                     	;# 
  1776  0318                     	;# 
  1777  0319                     	;# 
  1778  031A                     	;# 
  1779  031B                     	;# 
  1780  031C                     	;# 
  1781  031C                     	;# 
  1782  031D                     	;# 
  1783  031E                     	;# 
  1784  031F                     	;# 
  1785  038C                     	;# 
  1786  038D                     	;# 
  1787  038E                     	;# 
  1788  0390                     	;# 
  1789  0391                     	;# 
  1790  0392                     	;# 
  1791  040C                     	;# 
  1792  040D                     	;# 
  1793  040E                     	;# 
  1794  040F                     	;# 
  1795  0410                     	;# 
  1796  0411                     	;# 
  1797  0416                     	;# 
  1798  0416                     	;# 
  1799  0417                     	;# 
  1800  0418                     	;# 
  1801  0418                     	;# 
  1802  0419                     	;# 
  1803  041A                     	;# 
  1804  041A                     	;# 
  1805  041B                     	;# 
  1806  041C                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  041F                     	;# 
  1811  048C                     	;# 
  1812  048C                     	;# 
  1813  048D                     	;# 
  1814  048E                     	;# 
  1815  048F                     	;# 
  1816  048F                     	;# 
  1817  0490                     	;# 
  1818  0491                     	;# 
  1819  0492                     	;# 
  1820  0492                     	;# 
  1821  0493                     	;# 
  1822  0494                     	;# 
  1823  0495                     	;# 
  1824  0495                     	;# 
  1825  0496                     	;# 
  1826  0497                     	;# 
  1827  0498                     	;# 
  1828  0499                     	;# 
  1829  049A                     	;# 
  1830  049B                     	;# 
  1831  049C                     	;# 
  1832  049D                     	;# 
  1833  050C                     	;# 
  1834  050C                     	;# 
  1835  050D                     	;# 
  1836  050E                     	;# 
  1837  050F                     	;# 
  1838  050F                     	;# 
  1839  0510                     	;# 
  1840  0511                     	;# 
  1841  0512                     	;# 
  1842  0512                     	;# 
  1843  0513                     	;# 
  1844  0514                     	;# 
  1845  0515                     	;# 
  1846  0515                     	;# 
  1847  0516                     	;# 
  1848  0517                     	;# 
  1849  0518                     	;# 
  1850  0519                     	;# 
  1851  051A                     	;# 
  1852  051B                     	;# 
  1853  051C                     	;# 
  1854  051D                     	;# 
  1855  058C                     	;# 
  1856  058C                     	;# 
  1857  058D                     	;# 
  1858  058E                     	;# 
  1859  058F                     	;# 
  1860  058F                     	;# 
  1861  0590                     	;# 
  1862  0591                     	;# 
  1863  0592                     	;# 
  1864  0593                     	;# 
  1865  060C                     	;# 
  1866  060D                     	;# 
  1867  060E                     	;# 
  1868  060F                     	;# 
  1869  0610                     	;# 
  1870  0611                     	;# 
  1871  0612                     	;# 
  1872  0613                     	;# 
  1873  0614                     	;# 
  1874  0616                     	;# 
  1875  0617                     	;# 
  1876  0618                     	;# 
  1877  0619                     	;# 
  1878  061A                     	;# 
  1879  061B                     	;# 
  1880  061C                     	;# 
  1881  061D                     	;# 
  1882  061E                     	;# 
  1883  068C                     	;# 
  1884  068D                     	;# 
  1885  068E                     	;# 
  1886  068F                     	;# 
  1887  0690                     	;# 
  1888  0691                     	;# 
  1889  0692                     	;# 
  1890  0693                     	;# 
  1891  0694                     	;# 
  1892  070C                     	;# 
  1893  070D                     	;# 
  1894  070E                     	;# 
  1895  070F                     	;# 
  1896  0710                     	;# 
  1897  0711                     	;# 
  1898  0712                     	;# 
  1899  0713                     	;# 
  1900  0714                     	;# 
  1901  0716                     	;# 
  1902  0717                     	;# 
  1903  0718                     	;# 
  1904  0719                     	;# 
  1905  071A                     	;# 
  1906  071B                     	;# 
  1907  071C                     	;# 
  1908  071D                     	;# 
  1909  071E                     	;# 
  1910  0796                     	;# 
  1911  0797                     	;# 
  1912  0798                     	;# 
  1913  0799                     	;# 
  1914  079A                     	;# 
  1915  079B                     	;# 
  1916  080C                     	;# 
  1917  080D                     	;# 
  1918  080E                     	;# 
  1919  080F                     	;# 
  1920  0810                     	;# 
  1921  0811                     	;# 
  1922  0812                     	;# 
  1923  0813                     	;# 
  1924  0814                     	;# 
  1925  081A                     	;# 
  1926  081B                     	;# 
  1927  081C                     	;# 
  1928  081D                     	;# 
  1929  081E                     	;# 
  1930  081F                     	;# 
  1931  088C                     	;# 
  1932  088D                     	;# 
  1933  088E                     	;# 
  1934  088F                     	;# 
  1935  0890                     	;# 
  1936  0891                     	;# 
  1937  0892                     	;# 
  1938  0893                     	;# 
  1939  0895                     	;# 
  1940  0896                     	;# 
  1941  0897                     	;# 
  1942  0898                     	;# 
  1943  0899                     	;# 
  1944  089A                     	;# 
  1945  089B                     	;# 
  1946  090C                     	;# 
  1947  090E                     	;# 
  1948  090F                     	;# 
  1949  091F                     	;# 
  1950  091F                     	;# 
  1951  098F                     	;# 
  1952  098F                     	;# 
  1953  0990                     	;# 
  1954  0991                     	;# 
  1955  0992                     	;# 
  1956  0993                     	;# 
  1957  0994                     	;# 
  1958  0995                     	;# 
  1959  0996                     	;# 
  1960  0997                     	;# 
  1961  0E0F                     	;# 
  1962  0E10                     	;# 
  1963  0E11                     	;# 
  1964  0E12                     	;# 
  1965  0E13                     	;# 
  1966  0E14                     	;# 
  1967  0E15                     	;# 
  1968  0E16                     	;# 
  1969  0E17                     	;# 
  1970  0E18                     	;# 
  1971  0E19                     	;# 
  1972  0E1A                     	;# 
  1973  0E1B                     	;# 
  1974  0E1C                     	;# 
  1975  0E1D                     	;# 
  1976  0E1E                     	;# 
  1977  0E1F                     	;# 
  1978  0E20                     	;# 
  1979  0E21                     	;# 
  1980  0E22                     	;# 
  1981  0E23                     	;# 
  1982  0E24                     	;# 
  1983  0E25                     	;# 
  1984  0E26                     	;# 
  1985  0E27                     	;# 
  1986  0E28                     	;# 
  1987  0E29                     	;# 
  1988  0E2A                     	;# 
  1989  0E2B                     	;# 
  1990  0E2C                     	;# 
  1991  0E2D                     	;# 
  1992  0E2E                     	;# 
  1993  0E2F                     	;# 
  1994  0E30                     	;# 
  1995  0E31                     	;# 
  1996  0E32                     	;# 
  1997  0E33                     	;# 
  1998  0E34                     	;# 
  1999  0E35                     	;# 
  2000  0E36                     	;# 
  2001  0E37                     	;# 
  2002  0E8F                     	;# 
  2003  0E90                     	;# 
  2004  0E91                     	;# 
  2005  0E92                     	;# 
  2006  0E93                     	;# 
  2007  0E94                     	;# 
  2008  0E95                     	;# 
  2009  0E96                     	;# 
  2010  0E97                     	;# 
  2011  0E9C                     	;# 
  2012  0E9D                     	;# 
  2013  0E9E                     	;# 
  2014  0EA1                     	;# 
  2015  0EA2                     	;# 
  2016  0EA3                     	;# 
  2017  0EA4                     	;# 
  2018  0EA5                     	;# 
  2019  0EA9                     	;# 
  2020  0EAA                     	;# 
  2021  0EAB                     	;# 
  2022  0EAC                     	;# 
  2023  0EB1                     	;# 
  2024  0EB2                     	;# 
  2025  0EB3                     	;# 
  2026  0EB8                     	;# 
  2027  0EB9                     	;# 
  2028  0EBA                     	;# 
  2029  0EBB                     	;# 
  2030  0EBC                     	;# 
  2031  0EBD                     	;# 
  2032  0EBE                     	;# 
  2033  0EC3                     	;# 
  2034  0EC5                     	;# 
  2035  0EC6                     	;# 
  2036  0EC7                     	;# 
  2037  0EC8                     	;# 
  2038  0EC9                     	;# 
  2039  0ECA                     	;# 
  2040  0ECB                     	;# 
  2041  0ECC                     	;# 
  2042  0F10                     	;# 
  2043  0F11                     	;# 
  2044  0F12                     	;# 
  2045  0F13                     	;# 
  2046  0F14                     	;# 
  2047  0F15                     	;# 
  2048  0F16                     	;# 
  2049  0F17                     	;# 
  2050  0F18                     	;# 
  2051  0F19                     	;# 
  2052  0F1A                     	;# 
  2053  0F1B                     	;# 
  2054  0F1C                     	;# 
  2055  0F1D                     	;# 
  2056  0F1E                     	;# 
  2057  0F1F                     	;# 
  2058  0F20                     	;# 
  2059  0F21                     	;# 
  2060  0F22                     	;# 
  2061  0F23                     	;# 
  2062  0F24                     	;# 
  2063  0F25                     	;# 
  2064  0F26                     	;# 
  2065  0F27                     	;# 
  2066  0F38                     	;# 
  2067  0F39                     	;# 
  2068  0F3A                     	;# 
  2069  0F3B                     	;# 
  2070  0F3C                     	;# 
  2071  0F3D                     	;# 
  2072  0F3E                     	;# 
  2073  0F3F                     	;# 
  2074  0F40                     	;# 
  2075  0F41                     	;# 
  2076  0F43                     	;# 
  2077  0F44                     	;# 
  2078  0F45                     	;# 
  2079  0F46                     	;# 
  2080  0F47                     	;# 
  2081  0F48                     	;# 
  2082  0F49                     	;# 
  2083  0F4A                     	;# 
  2084  0F4B                     	;# 
  2085  0F4C                     	;# 
  2086  0F4E                     	;# 
  2087  0F4F                     	;# 
  2088  0F50                     	;# 
  2089  0F51                     	;# 
  2090  0F52                     	;# 
  2091  0F53                     	;# 
  2092  0F54                     	;# 
  2093  0F55                     	;# 
  2094  0F56                     	;# 
  2095  0F57                     	;# 
  2096  0F65                     	;# 
  2097  0F68                     	;# 
  2098  0F69                     	;# 
  2099  0F6A                     	;# 
  2100  0F6B                     	;# 
  2101  0FE4                     	;# 
  2102  0FE5                     	;# 
  2103  0FE6                     	;# 
  2104  0FE7                     	;# 
  2105  0FE8                     	;# 
  2106  0FE9                     	;# 
  2107  0FEA                     	;# 
  2108  0FEB                     	;# 
  2109  0FED                     	;# 
  2110  0FEE                     	;# 
  2111  0FEF                     	;# 
  2112  0000                     	;# 
  2113  0001                     	;# 
  2114  0002                     	;# 
  2115  0003                     	;# 
  2116  0004                     	;# 
  2117  0005                     	;# 
  2118  0006                     	;# 
  2119  0007                     	;# 
  2120  0008                     	;# 
  2121  0009                     	;# 
  2122  000A                     	;# 
  2123  000B                     	;# 
  2124  000C                     	;# 
  2125  000D                     	;# 
  2126  000E                     	;# 
  2127  0010                     	;# 
  2128  0011                     	;# 
  2129  0012                     	;# 
  2130  0013                     	;# 
  2131  0016                     	;# 
  2132  0017                     	;# 
  2133  0018                     	;# 
  2134  001C                     	;# 
  2135  001C                     	;# 
  2136  001D                     	;# 
  2137  001D                     	;# 
  2138  001E                     	;# 
  2139  001F                     	;# 
  2140  008C                     	;# 
  2141  008C                     	;# 
  2142  008D                     	;# 
  2143  008E                     	;# 
  2144  008E                     	;# 
  2145  008F                     	;# 
  2146  0090                     	;# 
  2147  0090                     	;# 
  2148  0091                     	;# 
  2149  0093                     	;# 
  2150  0094                     	;# 
  2151  0095                     	;# 
  2152  0096                     	;# 
  2153  0097                     	;# 
  2154  0098                     	;# 
  2155  0099                     	;# 
  2156  009A                     	;# 
  2157  009B                     	;# 
  2158  009C                     	;# 
  2159  009D                     	;# 
  2160  009E                     	;# 
  2161  010C                     	;# 
  2162  010D                     	;# 
  2163  010E                     	;# 
  2164  010E                     	;# 
  2165  010F                     	;# 
  2166  0110                     	;# 
  2167  0110                     	;# 
  2168  0111                     	;# 
  2169  0112                     	;# 
  2170  0112                     	;# 
  2171  0113                     	;# 
  2172  0114                     	;# 
  2173  0114                     	;# 
  2174  0115                     	;# 
  2175  0116                     	;# 
  2176  0116                     	;# 
  2177  0117                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  018C                     	;# 
  2204  018D                     	;# 
  2205  018E                     	;# 
  2206  018F                     	;# 
  2207  0190                     	;# 
  2208  0191                     	;# 
  2209  0192                     	;# 
  2210  0196                     	;# 
  2211  0197                     	;# 
  2212  0198                     	;# 
  2213  0199                     	;# 
  2214  019A                     	;# 
  2215  019B                     	;# 
  2216  019C                     	;# 
  2217  020C                     	;# 
  2218  020D                     	;# 
  2219  020E                     	;# 
  2220  020F                     	;# 
  2221  020F                     	;# 
  2222  0210                     	;# 
  2223  0210                     	;# 
  2224  0211                     	;# 
  2225  0211                     	;# 
  2226  0212                     	;# 
  2227  0213                     	;# 
  2228  0214                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0218                     	;# 
  2236  0219                     	;# 
  2237  021A                     	;# 
  2238  021B                     	;# 
  2239  021B                     	;# 
  2240  021C                     	;# 
  2241  021C                     	;# 
  2242  021D                     	;# 
  2243  021D                     	;# 
  2244  021E                     	;# 
  2245  021F                     	;# 
  2246  028C                     	;# 
  2247  028C                     	;# 
  2248  028D                     	;# 
  2249  028D                     	;# 
  2250  028E                     	;# 
  2251  028F                     	;# 
  2252  0290                     	;# 
  2253  0290                     	;# 
  2254  0291                     	;# 
  2255  0292                     	;# 
  2256  0292                     	;# 
  2257  0293                     	;# 
  2258  0293                     	;# 
  2259  0294                     	;# 
  2260  0295                     	;# 
  2261  0296                     	;# 
  2262  0296                     	;# 
  2263  0297                     	;# 
  2264  0298                     	;# 
  2265  0298                     	;# 
  2266  0299                     	;# 
  2267  0299                     	;# 
  2268  029A                     	;# 
  2269  029B                     	;# 
  2270  029C                     	;# 
  2271  029C                     	;# 
  2272  029D                     	;# 
  2273  030C                     	;# 
  2274  030C                     	;# 
  2275  030D                     	;# 
  2276  030E                     	;# 
  2277  030F                     	;# 
  2278  0310                     	;# 
  2279  0310                     	;# 
  2280  0311                     	;# 
  2281  0312                     	;# 
  2282  0313                     	;# 
  2283  0314                     	;# 
  2284  0314                     	;# 
  2285  0315                     	;# 
  2286  0316                     	;# 
  2287  0317                     	;# 
  2288  0318                     	;# 
  2289  0318                     	;# 
  2290  0319                     	;# 
  2291  031A                     	;# 
  2292  031B                     	;# 
  2293  031C                     	;# 
  2294  031C                     	;# 
  2295  031D                     	;# 
  2296  031E                     	;# 
  2297  031F                     	;# 
  2298  038C                     	;# 
  2299  038D                     	;# 
  2300  038E                     	;# 
  2301  0390                     	;# 
  2302  0391                     	;# 
  2303  0392                     	;# 
  2304  040C                     	;# 
  2305  040D                     	;# 
  2306  040E                     	;# 
  2307  040F                     	;# 
  2308  0410                     	;# 
  2309  0411                     	;# 
  2310  0416                     	;# 
  2311  0416                     	;# 
  2312  0417                     	;# 
  2313  0418                     	;# 
  2314  0418                     	;# 
  2315  0419                     	;# 
  2316  041A                     	;# 
  2317  041A                     	;# 
  2318  041B                     	;# 
  2319  041C                     	;# 
  2320  041C                     	;# 
  2321  041D                     	;# 
  2322  041E                     	;# 
  2323  041F                     	;# 
  2324  048C                     	;# 
  2325  048C                     	;# 
  2326  048D                     	;# 
  2327  048E                     	;# 
  2328  048F                     	;# 
  2329  048F                     	;# 
  2330  0490                     	;# 
  2331  0491                     	;# 
  2332  0492                     	;# 
  2333  0492                     	;# 
  2334  0493                     	;# 
  2335  0494                     	;# 
  2336  0495                     	;# 
  2337  0495                     	;# 
  2338  0496                     	;# 
  2339  0497                     	;# 
  2340  0498                     	;# 
  2341  0499                     	;# 
  2342  049A                     	;# 
  2343  049B                     	;# 
  2344  049C                     	;# 
  2345  049D                     	;# 
  2346  050C                     	;# 
  2347  050C                     	;# 
  2348  050D                     	;# 
  2349  050E                     	;# 
  2350  050F                     	;# 
  2351  050F                     	;# 
  2352  0510                     	;# 
  2353  0511                     	;# 
  2354  0512                     	;# 
  2355  0512                     	;# 
  2356  0513                     	;# 
  2357  0514                     	;# 
  2358  0515                     	;# 
  2359  0515                     	;# 
  2360  0516                     	;# 
  2361  0517                     	;# 
  2362  0518                     	;# 
  2363  0519                     	;# 
  2364  051A                     	;# 
  2365  051B                     	;# 
  2366  051C                     	;# 
  2367  051D                     	;# 
  2368  058C                     	;# 
  2369  058C                     	;# 
  2370  058D                     	;# 
  2371  058E                     	;# 
  2372  058F                     	;# 
  2373  058F                     	;# 
  2374  0590                     	;# 
  2375  0591                     	;# 
  2376  0592                     	;# 
  2377  0593                     	;# 
  2378  060C                     	;# 
  2379  060D                     	;# 
  2380  060E                     	;# 
  2381  060F                     	;# 
  2382  0610                     	;# 
  2383  0611                     	;# 
  2384  0612                     	;# 
  2385  0613                     	;# 
  2386  0614                     	;# 
  2387  0616                     	;# 
  2388  0617                     	;# 
  2389  0618                     	;# 
  2390  0619                     	;# 
  2391  061A                     	;# 
  2392  061B                     	;# 
  2393  061C                     	;# 
  2394  061D                     	;# 
  2395  061E                     	;# 
  2396  068C                     	;# 
  2397  068D                     	;# 
  2398  068E                     	;# 
  2399  068F                     	;# 
  2400  0690                     	;# 
  2401  0691                     	;# 
  2402  0692                     	;# 
  2403  0693                     	;# 
  2404  0694                     	;# 
  2405  070C                     	;# 
  2406  070D                     	;# 
  2407  070E                     	;# 
  2408  070F                     	;# 
  2409  0710                     	;# 
  2410  0711                     	;# 
  2411  0712                     	;# 
  2412  0713                     	;# 
  2413  0714                     	;# 
  2414  0716                     	;# 
  2415  0717                     	;# 
  2416  0718                     	;# 
  2417  0719                     	;# 
  2418  071A                     	;# 
  2419  071B                     	;# 
  2420  071C                     	;# 
  2421  071D                     	;# 
  2422  071E                     	;# 
  2423  0796                     	;# 
  2424  0797                     	;# 
  2425  0798                     	;# 
  2426  0799                     	;# 
  2427  079A                     	;# 
  2428  079B                     	;# 
  2429  080C                     	;# 
  2430  080D                     	;# 
  2431  080E                     	;# 
  2432  080F                     	;# 
  2433  0810                     	;# 
  2434  0811                     	;# 
  2435  0812                     	;# 
  2436  0813                     	;# 
  2437  0814                     	;# 
  2438  081A                     	;# 
  2439  081B                     	;# 
  2440  081C                     	;# 
  2441  081D                     	;# 
  2442  081E                     	;# 
  2443  081F                     	;# 
  2444  088C                     	;# 
  2445  088D                     	;# 
  2446  088E                     	;# 
  2447  088F                     	;# 
  2448  0890                     	;# 
  2449  0891                     	;# 
  2450  0892                     	;# 
  2451  0893                     	;# 
  2452  0895                     	;# 
  2453  0896                     	;# 
  2454  0897                     	;# 
  2455  0898                     	;# 
  2456  0899                     	;# 
  2457  089A                     	;# 
  2458  089B                     	;# 
  2459  090C                     	;# 
  2460  090E                     	;# 
  2461  090F                     	;# 
  2462  091F                     	;# 
  2463  091F                     	;# 
  2464  098F                     	;# 
  2465  098F                     	;# 
  2466  0990                     	;# 
  2467  0991                     	;# 
  2468  0992                     	;# 
  2469  0993                     	;# 
  2470  0994                     	;# 
  2471  0995                     	;# 
  2472  0996                     	;# 
  2473  0997                     	;# 
  2474  0E0F                     	;# 
  2475  0E10                     	;# 
  2476  0E11                     	;# 
  2477  0E12                     	;# 
  2478  0E13                     	;# 
  2479  0E14                     	;# 
  2480  0E15                     	;# 
  2481  0E16                     	;# 
  2482  0E17                     	;# 
  2483  0E18                     	;# 
  2484  0E19                     	;# 
  2485  0E1A                     	;# 
  2486  0E1B                     	;# 
  2487  0E1C                     	;# 
  2488  0E1D                     	;# 
  2489  0E1E                     	;# 
  2490  0E1F                     	;# 
  2491  0E20                     	;# 
  2492  0E21                     	;# 
  2493  0E22                     	;# 
  2494  0E23                     	;# 
  2495  0E24                     	;# 
  2496  0E25                     	;# 
  2497  0E26                     	;# 
  2498  0E27                     	;# 
  2499  0E28                     	;# 
  2500  0E29                     	;# 
  2501  0E2A                     	;# 
  2502  0E2B                     	;# 
  2503  0E2C                     	;# 
  2504  0E2D                     	;# 
  2505  0E2E                     	;# 
  2506  0E2F                     	;# 
  2507  0E30                     	;# 
  2508  0E31                     	;# 
  2509  0E32                     	;# 
  2510  0E33                     	;# 
  2511  0E34                     	;# 
  2512  0E35                     	;# 
  2513  0E36                     	;# 
  2514  0E37                     	;# 
  2515  0E8F                     	;# 
  2516  0E90                     	;# 
  2517  0E91                     	;# 
  2518  0E92                     	;# 
  2519  0E93                     	;# 
  2520  0E94                     	;# 
  2521  0E95                     	;# 
  2522  0E96                     	;# 
  2523  0E97                     	;# 
  2524  0E9C                     	;# 
  2525  0E9D                     	;# 
  2526  0E9E                     	;# 
  2527  0EA1                     	;# 
  2528  0EA2                     	;# 
  2529  0EA3                     	;# 
  2530  0EA4                     	;# 
  2531  0EA5                     	;# 
  2532  0EA9                     	;# 
  2533  0EAA                     	;# 
  2534  0EAB                     	;# 
  2535  0EAC                     	;# 
  2536  0EB1                     	;# 
  2537  0EB2                     	;# 
  2538  0EB3                     	;# 
  2539  0EB8                     	;# 
  2540  0EB9                     	;# 
  2541  0EBA                     	;# 
  2542  0EBB                     	;# 
  2543  0EBC                     	;# 
  2544  0EBD                     	;# 
  2545  0EBE                     	;# 
  2546  0EC3                     	;# 
  2547  0EC5                     	;# 
  2548  0EC6                     	;# 
  2549  0EC7                     	;# 
  2550  0EC8                     	;# 
  2551  0EC9                     	;# 
  2552  0ECA                     	;# 
  2553  0ECB                     	;# 
  2554  0ECC                     	;# 
  2555  0F10                     	;# 
  2556  0F11                     	;# 
  2557  0F12                     	;# 
  2558  0F13                     	;# 
  2559  0F14                     	;# 
  2560  0F15                     	;# 
  2561  0F16                     	;# 
  2562  0F17                     	;# 
  2563  0F18                     	;# 
  2564  0F19                     	;# 
  2565  0F1A                     	;# 
  2566  0F1B                     	;# 
  2567  0F1C                     	;# 
  2568  0F1D                     	;# 
  2569  0F1E                     	;# 
  2570  0F1F                     	;# 
  2571  0F20                     	;# 
  2572  0F21                     	;# 
  2573  0F22                     	;# 
  2574  0F23                     	;# 
  2575  0F24                     	;# 
  2576  0F25                     	;# 
  2577  0F26                     	;# 
  2578  0F27                     	;# 
  2579  0F38                     	;# 
  2580  0F39                     	;# 
  2581  0F3A                     	;# 
  2582  0F3B                     	;# 
  2583  0F3C                     	;# 
  2584  0F3D                     	;# 
  2585  0F3E                     	;# 
  2586  0F3F                     	;# 
  2587  0F40                     	;# 
  2588  0F41                     	;# 
  2589  0F43                     	;# 
  2590  0F44                     	;# 
  2591  0F45                     	;# 
  2592  0F46                     	;# 
  2593  0F47                     	;# 
  2594  0F48                     	;# 
  2595  0F49                     	;# 
  2596  0F4A                     	;# 
  2597  0F4B                     	;# 
  2598  0F4C                     	;# 
  2599  0F4E                     	;# 
  2600  0F4F                     	;# 
  2601  0F50                     	;# 
  2602  0F51                     	;# 
  2603  0F52                     	;# 
  2604  0F53                     	;# 
  2605  0F54                     	;# 
  2606  0F55                     	;# 
  2607  0F56                     	;# 
  2608  0F57                     	;# 
  2609  0F65                     	;# 
  2610  0F68                     	;# 
  2611  0F69                     	;# 
  2612  0F6A                     	;# 
  2613  0F6B                     	;# 
  2614  0FE4                     	;# 
  2615  0FE5                     	;# 
  2616  0FE6                     	;# 
  2617  0FE7                     	;# 
  2618  0FE8                     	;# 
  2619  0FE9                     	;# 
  2620  0FEA                     	;# 
  2621  0FEB                     	;# 
  2622  0FED                     	;# 
  2623  0FEE                     	;# 
  2624  0FEF                     	;# 
  2625  0000                     	;# 
  2626  0001                     	;# 
  2627  0002                     	;# 
  2628  0003                     	;# 
  2629  0004                     	;# 
  2630  0005                     	;# 
  2631  0006                     	;# 
  2632  0007                     	;# 
  2633  0008                     	;# 
  2634  0009                     	;# 
  2635  000A                     	;# 
  2636  000B                     	;# 
  2637  000C                     	;# 
  2638  000D                     	;# 
  2639  000E                     	;# 
  2640  0010                     	;# 
  2641  0011                     	;# 
  2642  0012                     	;# 
  2643  0013                     	;# 
  2644  0016                     	;# 
  2645  0017                     	;# 
  2646  0018                     	;# 
  2647  001C                     	;# 
  2648  001C                     	;# 
  2649  001D                     	;# 
  2650  001D                     	;# 
  2651  001E                     	;# 
  2652  001F                     	;# 
  2653  008C                     	;# 
  2654  008C                     	;# 
  2655  008D                     	;# 
  2656  008E                     	;# 
  2657  008E                     	;# 
  2658  008F                     	;# 
  2659  0090                     	;# 
  2660  0090                     	;# 
  2661  0091                     	;# 
  2662  0093                     	;# 
  2663  0094                     	;# 
  2664  0095                     	;# 
  2665  0096                     	;# 
  2666  0097                     	;# 
  2667  0098                     	;# 
  2668  0099                     	;# 
  2669  009A                     	;# 
  2670  009B                     	;# 
  2671  009C                     	;# 
  2672  009D                     	;# 
  2673  009E                     	;# 
  2674  010C                     	;# 
  2675  010D                     	;# 
  2676  010E                     	;# 
  2677  010E                     	;# 
  2678  010F                     	;# 
  2679  0110                     	;# 
  2680  0110                     	;# 
  2681  0111                     	;# 
  2682  0112                     	;# 
  2683  0112                     	;# 
  2684  0113                     	;# 
  2685  0114                     	;# 
  2686  0114                     	;# 
  2687  0115                     	;# 
  2688  0116                     	;# 
  2689  0116                     	;# 
  2690  0117                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  018C                     	;# 
  2717  018D                     	;# 
  2718  018E                     	;# 
  2719  018F                     	;# 
  2720  0190                     	;# 
  2721  0191                     	;# 
  2722  0192                     	;# 
  2723  0196                     	;# 
  2724  0197                     	;# 
  2725  0198                     	;# 
  2726  0199                     	;# 
  2727  019A                     	;# 
  2728  019B                     	;# 
  2729  019C                     	;# 
  2730  020C                     	;# 
  2731  020D                     	;# 
  2732  020E                     	;# 
  2733  020F                     	;# 
  2734  020F                     	;# 
  2735  0210                     	;# 
  2736  0210                     	;# 
  2737  0211                     	;# 
  2738  0211                     	;# 
  2739  0212                     	;# 
  2740  0213                     	;# 
  2741  0214                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0216                     	;# 
  2745  0216                     	;# 
  2746  0217                     	;# 
  2747  0217                     	;# 
  2748  0218                     	;# 
  2749  0219                     	;# 
  2750  021A                     	;# 
  2751  021B                     	;# 
  2752  021B                     	;# 
  2753  021C                     	;# 
  2754  021C                     	;# 
  2755  021D                     	;# 
  2756  021D                     	;# 
  2757  021E                     	;# 
  2758  021F                     	;# 
  2759  028C                     	;# 
  2760  028C                     	;# 
  2761  028D                     	;# 
  2762  028D                     	;# 
  2763  028E                     	;# 
  2764  028F                     	;# 
  2765  0290                     	;# 
  2766  0290                     	;# 
  2767  0291                     	;# 
  2768  0292                     	;# 
  2769  0292                     	;# 
  2770  0293                     	;# 
  2771  0293                     	;# 
  2772  0294                     	;# 
  2773  0295                     	;# 
  2774  0296                     	;# 
  2775  0296                     	;# 
  2776  0297                     	;# 
  2777  0298                     	;# 
  2778  0298                     	;# 
  2779  0299                     	;# 
  2780  0299                     	;# 
  2781  029A                     	;# 
  2782  029B                     	;# 
  2783  029C                     	;# 
  2784  029C                     	;# 
  2785  029D                     	;# 
  2786  030C                     	;# 
  2787  030C                     	;# 
  2788  030D                     	;# 
  2789  030E                     	;# 
  2790  030F                     	;# 
  2791  0310                     	;# 
  2792  0310                     	;# 
  2793  0311                     	;# 
  2794  0312                     	;# 
  2795  0313                     	;# 
  2796  0314                     	;# 
  2797  0314                     	;# 
  2798  0315                     	;# 
  2799  0316                     	;# 
  2800  0317                     	;# 
  2801  0318                     	;# 
  2802  0318                     	;# 
  2803  0319                     	;# 
  2804  031A                     	;# 
  2805  031B                     	;# 
  2806  031C                     	;# 
  2807  031C                     	;# 
  2808  031D                     	;# 
  2809  031E                     	;# 
  2810  031F                     	;# 
  2811  038C                     	;# 
  2812  038D                     	;# 
  2813  038E                     	;# 
  2814  0390                     	;# 
  2815  0391                     	;# 
  2816  0392                     	;# 
  2817  040C                     	;# 
  2818  040D                     	;# 
  2819  040E                     	;# 
  2820  040F                     	;# 
  2821  0410                     	;# 
  2822  0411                     	;# 
  2823  0416                     	;# 
  2824  0416                     	;# 
  2825  0417                     	;# 
  2826  0418                     	;# 
  2827  0418                     	;# 
  2828  0419                     	;# 
  2829  041A                     	;# 
  2830  041A                     	;# 
  2831  041B                     	;# 
  2832  041C                     	;# 
  2833  041C                     	;# 
  2834  041D                     	;# 
  2835  041E                     	;# 
  2836  041F                     	;# 
  2837  048C                     	;# 
  2838  048C                     	;# 
  2839  048D                     	;# 
  2840  048E                     	;# 
  2841  048F                     	;# 
  2842  048F                     	;# 
  2843  0490                     	;# 
  2844  0491                     	;# 
  2845  0492                     	;# 
  2846  0492                     	;# 
  2847  0493                     	;# 
  2848  0494                     	;# 
  2849  0495                     	;# 
  2850  0495                     	;# 
  2851  0496                     	;# 
  2852  0497                     	;# 
  2853  0498                     	;# 
  2854  0499                     	;# 
  2855  049A                     	;# 
  2856  049B                     	;# 
  2857  049C                     	;# 
  2858  049D                     	;# 
  2859  050C                     	;# 
  2860  050C                     	;# 
  2861  050D                     	;# 
  2862  050E                     	;# 
  2863  050F                     	;# 
  2864  050F                     	;# 
  2865  0510                     	;# 
  2866  0511                     	;# 
  2867  0512                     	;# 
  2868  0512                     	;# 
  2869  0513                     	;# 
  2870  0514                     	;# 
  2871  0515                     	;# 
  2872  0515                     	;# 
  2873  0516                     	;# 
  2874  0517                     	;# 
  2875  0518                     	;# 
  2876  0519                     	;# 
  2877  051A                     	;# 
  2878  051B                     	;# 
  2879  051C                     	;# 
  2880  051D                     	;# 
  2881  058C                     	;# 
  2882  058C                     	;# 
  2883  058D                     	;# 
  2884  058E                     	;# 
  2885  058F                     	;# 
  2886  058F                     	;# 
  2887  0590                     	;# 
  2888  0591                     	;# 
  2889  0592                     	;# 
  2890  0593                     	;# 
  2891  060C                     	;# 
  2892  060D                     	;# 
  2893  060E                     	;# 
  2894  060F                     	;# 
  2895  0610                     	;# 
  2896  0611                     	;# 
  2897  0612                     	;# 
  2898  0613                     	;# 
  2899  0614                     	;# 
  2900  0616                     	;# 
  2901  0617                     	;# 
  2902  0618                     	;# 
  2903  0619                     	;# 
  2904  061A                     	;# 
  2905  061B                     	;# 
  2906  061C                     	;# 
  2907  061D                     	;# 
  2908  061E                     	;# 
  2909  068C                     	;# 
  2910  068D                     	;# 
  2911  068E                     	;# 
  2912  068F                     	;# 
  2913  0690                     	;# 
  2914  0691                     	;# 
  2915  0692                     	;# 
  2916  0693                     	;# 
  2917  0694                     	;# 
  2918  070C                     	;# 
  2919  070D                     	;# 
  2920  070E                     	;# 
  2921  070F                     	;# 
  2922  0710                     	;# 
  2923  0711                     	;# 
  2924  0712                     	;# 
  2925  0713                     	;# 
  2926  0714                     	;# 
  2927  0716                     	;# 
  2928  0717                     	;# 
  2929  0718                     	;# 
  2930  0719                     	;# 
  2931  071A                     	;# 
  2932  071B                     	;# 
  2933  071C                     	;# 
  2934  071D                     	;# 
  2935  071E                     	;# 
  2936  0796                     	;# 
  2937  0797                     	;# 
  2938  0798                     	;# 
  2939  0799                     	;# 
  2940  079A                     	;# 
  2941  079B                     	;# 
  2942  080C                     	;# 
  2943  080D                     	;# 
  2944  080E                     	;# 
  2945  080F                     	;# 
  2946  0810                     	;# 
  2947  0811                     	;# 
  2948  0812                     	;# 
  2949  0813                     	;# 
  2950  0814                     	;# 
  2951  081A                     	;# 
  2952  081B                     	;# 
  2953  081C                     	;# 
  2954  081D                     	;# 
  2955  081E                     	;# 
  2956  081F                     	;# 
  2957  088C                     	;# 
  2958  088D                     	;# 
  2959  088E                     	;# 
  2960  088F                     	;# 
  2961  0890                     	;# 
  2962  0891                     	;# 
  2963  0892                     	;# 
  2964  0893                     	;# 
  2965  0895                     	;# 
  2966  0896                     	;# 
  2967  0897                     	;# 
  2968  0898                     	;# 
  2969  0899                     	;# 
  2970  089A                     	;# 
  2971  089B                     	;# 
  2972  090C                     	;# 
  2973  090E                     	;# 
  2974  090F                     	;# 
  2975  091F                     	;# 
  2976  091F                     	;# 
  2977  098F                     	;# 
  2978  098F                     	;# 
  2979  0990                     	;# 
  2980  0991                     	;# 
  2981  0992                     	;# 
  2982  0993                     	;# 
  2983  0994                     	;# 
  2984  0995                     	;# 
  2985  0996                     	;# 
  2986  0997                     	;# 
  2987  0E0F                     	;# 
  2988  0E10                     	;# 
  2989  0E11                     	;# 
  2990  0E12                     	;# 
  2991  0E13                     	;# 
  2992  0E14                     	;# 
  2993  0E15                     	;# 
  2994  0E16                     	;# 
  2995  0E17                     	;# 
  2996  0E18                     	;# 
  2997  0E19                     	;# 
  2998  0E1A                     	;# 
  2999  0E1B                     	;# 
  3000  0E1C                     	;# 
  3001  0E1D                     	;# 
  3002  0E1E                     	;# 
  3003  0E1F                     	;# 
  3004  0E20                     	;# 
  3005  0E21                     	;# 
  3006  0E22                     	;# 
  3007  0E23                     	;# 
  3008  0E24                     	;# 
  3009  0E25                     	;# 
  3010  0E26                     	;# 
  3011  0E27                     	;# 
  3012  0E28                     	;# 
  3013  0E29                     	;# 
  3014  0E2A                     	;# 
  3015  0E2B                     	;# 
  3016  0E2C                     	;# 
  3017  0E2D                     	;# 
  3018  0E2E                     	;# 
  3019  0E2F                     	;# 
  3020  0E30                     	;# 
  3021  0E31                     	;# 
  3022  0E32                     	;# 
  3023  0E33                     	;# 
  3024  0E34                     	;# 
  3025  0E35                     	;# 
  3026  0E36                     	;# 
  3027  0E37                     	;# 
  3028  0E8F                     	;# 
  3029  0E90                     	;# 
  3030  0E91                     	;# 
  3031  0E92                     	;# 
  3032  0E93                     	;# 
  3033  0E94                     	;# 
  3034  0E95                     	;# 
  3035  0E96                     	;# 
  3036  0E97                     	;# 
  3037  0E9C                     	;# 
  3038  0E9D                     	;# 
  3039  0E9E                     	;# 
  3040  0EA1                     	;# 
  3041  0EA2                     	;# 
  3042  0EA3                     	;# 
  3043  0EA4                     	;# 
  3044  0EA5                     	;# 
  3045  0EA9                     	;# 
  3046  0EAA                     	;# 
  3047  0EAB                     	;# 
  3048  0EAC                     	;# 
  3049  0EB1                     	;# 
  3050  0EB2                     	;# 
  3051  0EB3                     	;# 
  3052  0EB8                     	;# 
  3053  0EB9                     	;# 
  3054  0EBA                     	;# 
  3055  0EBB                     	;# 
  3056  0EBC                     	;# 
  3057  0EBD                     	;# 
  3058  0EBE                     	;# 
  3059  0EC3                     	;# 
  3060  0EC5                     	;# 
  3061  0EC6                     	;# 
  3062  0EC7                     	;# 
  3063  0EC8                     	;# 
  3064  0EC9                     	;# 
  3065  0ECA                     	;# 
  3066  0ECB                     	;# 
  3067  0ECC                     	;# 
  3068  0F10                     	;# 
  3069  0F11                     	;# 
  3070  0F12                     	;# 
  3071  0F13                     	;# 
  3072  0F14                     	;# 
  3073  0F15                     	;# 
  3074  0F16                     	;# 
  3075  0F17                     	;# 
  3076  0F18                     	;# 
  3077  0F19                     	;# 
  3078  0F1A                     	;# 
  3079  0F1B                     	;# 
  3080  0F1C                     	;# 
  3081  0F1D                     	;# 
  3082  0F1E                     	;# 
  3083  0F1F                     	;# 
  3084  0F20                     	;# 
  3085  0F21                     	;# 
  3086  0F22                     	;# 
  3087  0F23                     	;# 
  3088  0F24                     	;# 
  3089  0F25                     	;# 
  3090  0F26                     	;# 
  3091  0F27                     	;# 
  3092  0F38                     	;# 
  3093  0F39                     	;# 
  3094  0F3A                     	;# 
  3095  0F3B                     	;# 
  3096  0F3C                     	;# 
  3097  0F3D                     	;# 
  3098  0F3E                     	;# 
  3099  0F3F                     	;# 
  3100  0F40                     	;# 
  3101  0F41                     	;# 
  3102  0F43                     	;# 
  3103  0F44                     	;# 
  3104  0F45                     	;# 
  3105  0F46                     	;# 
  3106  0F47                     	;# 
  3107  0F48                     	;# 
  3108  0F49                     	;# 
  3109  0F4A                     	;# 
  3110  0F4B                     	;# 
  3111  0F4C                     	;# 
  3112  0F4E                     	;# 
  3113  0F4F                     	;# 
  3114  0F50                     	;# 
  3115  0F51                     	;# 
  3116  0F52                     	;# 
  3117  0F53                     	;# 
  3118  0F54                     	;# 
  3119  0F55                     	;# 
  3120  0F56                     	;# 
  3121  0F57                     	;# 
  3122  0F65                     	;# 
  3123  0F68                     	;# 
  3124  0F69                     	;# 
  3125  0F6A                     	;# 
  3126  0F6B                     	;# 
  3127  0FE4                     	;# 
  3128  0FE5                     	;# 
  3129  0FE6                     	;# 
  3130  0FE7                     	;# 
  3131  0FE8                     	;# 
  3132  0FE9                     	;# 
  3133  0FEA                     	;# 
  3134  0FEB                     	;# 
  3135  0FED                     	;# 
  3136  0FEE                     	;# 
  3137  0FEF                     	;# 
  3138  0000                     	;# 
  3139  0001                     	;# 
  3140  0002                     	;# 
  3141  0003                     	;# 
  3142  0004                     	;# 
  3143  0005                     	;# 
  3144  0006                     	;# 
  3145  0007                     	;# 
  3146  0008                     	;# 
  3147  0009                     	;# 
  3148  000A                     	;# 
  3149  000B                     	;# 
  3150  000C                     	;# 
  3151  000D                     	;# 
  3152  000E                     	;# 
  3153  0010                     	;# 
  3154  0011                     	;# 
  3155  0012                     	;# 
  3156  0013                     	;# 
  3157  0016                     	;# 
  3158  0017                     	;# 
  3159  0018                     	;# 
  3160  001C                     	;# 
  3161  001C                     	;# 
  3162  001D                     	;# 
  3163  001D                     	;# 
  3164  001E                     	;# 
  3165  001F                     	;# 
  3166  008C                     	;# 
  3167  008C                     	;# 
  3168  008D                     	;# 
  3169  008E                     	;# 
  3170  008E                     	;# 
  3171  008F                     	;# 
  3172  0090                     	;# 
  3173  0090                     	;# 
  3174  0091                     	;# 
  3175  0093                     	;# 
  3176  0094                     	;# 
  3177  0095                     	;# 
  3178  0096                     	;# 
  3179  0097                     	;# 
  3180  0098                     	;# 
  3181  0099                     	;# 
  3182  009A                     	;# 
  3183  009B                     	;# 
  3184  009C                     	;# 
  3185  009D                     	;# 
  3186  009E                     	;# 
  3187  010C                     	;# 
  3188  010D                     	;# 
  3189  010E                     	;# 
  3190  010E                     	;# 
  3191  010F                     	;# 
  3192  0110                     	;# 
  3193  0110                     	;# 
  3194  0111                     	;# 
  3195  0112                     	;# 
  3196  0112                     	;# 
  3197  0113                     	;# 
  3198  0114                     	;# 
  3199  0114                     	;# 
  3200  0115                     	;# 
  3201  0116                     	;# 
  3202  0116                     	;# 
  3203  0117                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  018C                     	;# 
  3230  018D                     	;# 
  3231  018E                     	;# 
  3232  018F                     	;# 
  3233  0190                     	;# 
  3234  0191                     	;# 
  3235  0192                     	;# 
  3236  0196                     	;# 
  3237  0197                     	;# 
  3238  0198                     	;# 
  3239  0199                     	;# 
  3240  019A                     	;# 
  3241  019B                     	;# 
  3242  019C                     	;# 
  3243  020C                     	;# 
  3244  020D                     	;# 
  3245  020E                     	;# 
  3246  020F                     	;# 
  3247  020F                     	;# 
  3248  0210                     	;# 
  3249  0210                     	;# 
  3250  0211                     	;# 
  3251  0211                     	;# 
  3252  0212                     	;# 
  3253  0213                     	;# 
  3254  0214                     	;# 
  3255  0215                     	;# 
  3256  0215                     	;# 
  3257  0216                     	;# 
  3258  0216                     	;# 
  3259  0217                     	;# 
  3260  0217                     	;# 
  3261  0218                     	;# 
  3262  0219                     	;# 
  3263  021A                     	;# 
  3264  021B                     	;# 
  3265  021B                     	;# 
  3266  021C                     	;# 
  3267  021C                     	;# 
  3268  021D                     	;# 
  3269  021D                     	;# 
  3270  021E                     	;# 
  3271  021F                     	;# 
  3272  028C                     	;# 
  3273  028C                     	;# 
  3274  028D                     	;# 
  3275  028D                     	;# 
  3276  028E                     	;# 
  3277  028F                     	;# 
  3278  0290                     	;# 
  3279  0290                     	;# 
  3280  0291                     	;# 
  3281  0292                     	;# 
  3282  0292                     	;# 
  3283  0293                     	;# 
  3284  0293                     	;# 
  3285  0294                     	;# 
  3286  0295                     	;# 
  3287  0296                     	;# 
  3288  0296                     	;# 
  3289  0297                     	;# 
  3290  0298                     	;# 
  3291  0298                     	;# 
  3292  0299                     	;# 
  3293  0299                     	;# 
  3294  029A                     	;# 
  3295  029B                     	;# 
  3296  029C                     	;# 
  3297  029C                     	;# 
  3298  029D                     	;# 
  3299  030C                     	;# 
  3300  030C                     	;# 
  3301  030D                     	;# 
  3302  030E                     	;# 
  3303  030F                     	;# 
  3304  0310                     	;# 
  3305  0310                     	;# 
  3306  0311                     	;# 
  3307  0312                     	;# 
  3308  0313                     	;# 
  3309  0314                     	;# 
  3310  0314                     	;# 
  3311  0315                     	;# 
  3312  0316                     	;# 
  3313  0317                     	;# 
  3314  0318                     	;# 
  3315  0318                     	;# 
  3316  0319                     	;# 
  3317  031A                     	;# 
  3318  031B                     	;# 
  3319  031C                     	;# 
  3320  031C                     	;# 
  3321  031D                     	;# 
  3322  031E                     	;# 
  3323  031F                     	;# 
  3324  038C                     	;# 
  3325  038D                     	;# 
  3326  038E                     	;# 
  3327  0390                     	;# 
  3328  0391                     	;# 
  3329  0392                     	;# 
  3330  040C                     	;# 
  3331  040D                     	;# 
  3332  040E                     	;# 
  3333  040F                     	;# 
  3334  0410                     	;# 
  3335  0411                     	;# 
  3336  0416                     	;# 
  3337  0416                     	;# 
  3338  0417                     	;# 
  3339  0418                     	;# 
  3340  0418                     	;# 
  3341  0419                     	;# 
  3342  041A                     	;# 
  3343  041A                     	;# 
  3344  041B                     	;# 
  3345  041C                     	;# 
  3346  041C                     	;# 
  3347  041D                     	;# 
  3348  041E                     	;# 
  3349  041F                     	;# 
  3350  048C                     	;# 
  3351  048C                     	;# 
  3352  048D                     	;# 
  3353  048E                     	;# 
  3354  048F                     	;# 
  3355  048F                     	;# 
  3356  0490                     	;# 
  3357  0491                     	;# 
  3358  0492                     	;# 
  3359  0492                     	;# 
  3360  0493                     	;# 
  3361  0494                     	;# 
  3362  0495                     	;# 
  3363  0495                     	;# 
  3364  0496                     	;# 
  3365  0497                     	;# 
  3366  0498                     	;# 
  3367  0499                     	;# 
  3368  049A                     	;# 
  3369  049B                     	;# 
  3370  049C                     	;# 
  3371  049D                     	;# 
  3372  050C                     	;# 
  3373  050C                     	;# 
  3374  050D                     	;# 
  3375  050E                     	;# 
  3376  050F                     	;# 
  3377  050F                     	;# 
  3378  0510                     	;# 
  3379  0511                     	;# 
  3380  0512                     	;# 
  3381  0512                     	;# 
  3382  0513                     	;# 
  3383  0514                     	;# 
  3384  0515                     	;# 
  3385  0515                     	;# 
  3386  0516                     	;# 
  3387  0517                     	;# 
  3388  0518                     	;# 
  3389  0519                     	;# 
  3390  051A                     	;# 
  3391  051B                     	;# 
  3392  051C                     	;# 
  3393  051D                     	;# 
  3394  058C                     	;# 
  3395  058C                     	;# 
  3396  058D                     	;# 
  3397  058E                     	;# 
  3398  058F                     	;# 
  3399  058F                     	;# 
  3400  0590                     	;# 
  3401  0591                     	;# 
  3402  0592                     	;# 
  3403  0593                     	;# 
  3404  060C                     	;# 
  3405  060D                     	;# 
  3406  060E                     	;# 
  3407  060F                     	;# 
  3408  0610                     	;# 
  3409  0611                     	;# 
  3410  0612                     	;# 
  3411  0613                     	;# 
  3412  0614                     	;# 
  3413  0616                     	;# 
  3414  0617                     	;# 
  3415  0618                     	;# 
  3416  0619                     	;# 
  3417  061A                     	;# 
  3418  061B                     	;# 
  3419  061C                     	;# 
  3420  061D                     	;# 
  3421  061E                     	;# 
  3422  068C                     	;# 
  3423  068D                     	;# 
  3424  068E                     	;# 
  3425  068F                     	;# 
  3426  0690                     	;# 
  3427  0691                     	;# 
  3428  0692                     	;# 
  3429  0693                     	;# 
  3430  0694                     	;# 
  3431  070C                     	;# 
  3432  070D                     	;# 
  3433  070E                     	;# 
  3434  070F                     	;# 
  3435  0710                     	;# 
  3436  0711                     	;# 
  3437  0712                     	;# 
  3438  0713                     	;# 
  3439  0714                     	;# 
  3440  0716                     	;# 
  3441  0717                     	;# 
  3442  0718                     	;# 
  3443  0719                     	;# 
  3444  071A                     	;# 
  3445  071B                     	;# 
  3446  071C                     	;# 
  3447  071D                     	;# 
  3448  071E                     	;# 
  3449  0796                     	;# 
  3450  0797                     	;# 
  3451  0798                     	;# 
  3452  0799                     	;# 
  3453  079A                     	;# 
  3454  079B                     	;# 
  3455  080C                     	;# 
  3456  080D                     	;# 
  3457  080E                     	;# 
  3458  080F                     	;# 
  3459  0810                     	;# 
  3460  0811                     	;# 
  3461  0812                     	;# 
  3462  0813                     	;# 
  3463  0814                     	;# 
  3464  081A                     	;# 
  3465  081B                     	;# 
  3466  081C                     	;# 
  3467  081D                     	;# 
  3468  081E                     	;# 
  3469  081F                     	;# 
  3470  088C                     	;# 
  3471  088D                     	;# 
  3472  088E                     	;# 
  3473  088F                     	;# 
  3474  0890                     	;# 
  3475  0891                     	;# 
  3476  0892                     	;# 
  3477  0893                     	;# 
  3478  0895                     	;# 
  3479  0896                     	;# 
  3480  0897                     	;# 
  3481  0898                     	;# 
  3482  0899                     	;# 
  3483  089A                     	;# 
  3484  089B                     	;# 
  3485  090C                     	;# 
  3486  090E                     	;# 
  3487  090F                     	;# 
  3488  091F                     	;# 
  3489  091F                     	;# 
  3490  098F                     	;# 
  3491  098F                     	;# 
  3492  0990                     	;# 
  3493  0991                     	;# 
  3494  0992                     	;# 
  3495  0993                     	;# 
  3496  0994                     	;# 
  3497  0995                     	;# 
  3498  0996                     	;# 
  3499  0997                     	;# 
  3500  0E0F                     	;# 
  3501  0E10                     	;# 
  3502  0E11                     	;# 
  3503  0E12                     	;# 
  3504  0E13                     	;# 
  3505  0E14                     	;# 
  3506  0E15                     	;# 
  3507  0E16                     	;# 
  3508  0E17                     	;# 
  3509  0E18                     	;# 
  3510  0E19                     	;# 
  3511  0E1A                     	;# 
  3512  0E1B                     	;# 
  3513  0E1C                     	;# 
  3514  0E1D                     	;# 
  3515  0E1E                     	;# 
  3516  0E1F                     	;# 
  3517  0E20                     	;# 
  3518  0E21                     	;# 
  3519  0E22                     	;# 
  3520  0E23                     	;# 
  3521  0E24                     	;# 
  3522  0E25                     	;# 
  3523  0E26                     	;# 
  3524  0E27                     	;# 
  3525  0E28                     	;# 
  3526  0E29                     	;# 
  3527  0E2A                     	;# 
  3528  0E2B                     	;# 
  3529  0E2C                     	;# 
  3530  0E2D                     	;# 
  3531  0E2E                     	;# 
  3532  0E2F                     	;# 
  3533  0E30                     	;# 
  3534  0E31                     	;# 
  3535  0E32                     	;# 
  3536  0E33                     	;# 
  3537  0E34                     	;# 
  3538  0E35                     	;# 
  3539  0E36                     	;# 
  3540  0E37                     	;# 
  3541  0E8F                     	;# 
  3542  0E90                     	;# 
  3543  0E91                     	;# 
  3544  0E92                     	;# 
  3545  0E93                     	;# 
  3546  0E94                     	;# 
  3547  0E95                     	;# 
  3548  0E96                     	;# 
  3549  0E97                     	;# 
  3550  0E9C                     	;# 
  3551  0E9D                     	;# 
  3552  0E9E                     	;# 
  3553  0EA1                     	;# 
  3554  0EA2                     	;# 
  3555  0EA3                     	;# 
  3556  0EA4                     	;# 
  3557  0EA5                     	;# 
  3558  0EA9                     	;# 
  3559  0EAA                     	;# 
  3560  0EAB                     	;# 
  3561  0EAC                     	;# 
  3562  0EB1                     	;# 
  3563  0EB2                     	;# 
  3564  0EB3                     	;# 
  3565  0EB8                     	;# 
  3566  0EB9                     	;# 
  3567  0EBA                     	;# 
  3568  0EBB                     	;# 
  3569  0EBC                     	;# 
  3570  0EBD                     	;# 
  3571  0EBE                     	;# 
  3572  0EC3                     	;# 
  3573  0EC5                     	;# 
  3574  0EC6                     	;# 
  3575  0EC7                     	;# 
  3576  0EC8                     	;# 
  3577  0EC9                     	;# 
  3578  0ECA                     	;# 
  3579  0ECB                     	;# 
  3580  0ECC                     	;# 
  3581  0F10                     	;# 
  3582  0F11                     	;# 
  3583  0F12                     	;# 
  3584  0F13                     	;# 
  3585  0F14                     	;# 
  3586  0F15                     	;# 
  3587  0F16                     	;# 
  3588  0F17                     	;# 
  3589  0F18                     	;# 
  3590  0F19                     	;# 
  3591  0F1A                     	;# 
  3592  0F1B                     	;# 
  3593  0F1C                     	;# 
  3594  0F1D                     	;# 
  3595  0F1E                     	;# 
  3596  0F1F                     	;# 
  3597  0F20                     	;# 
  3598  0F21                     	;# 
  3599  0F22                     	;# 
  3600  0F23                     	;# 
  3601  0F24                     	;# 
  3602  0F25                     	;# 
  3603  0F26                     	;# 
  3604  0F27                     	;# 
  3605  0F38                     	;# 
  3606  0F39                     	;# 
  3607  0F3A                     	;# 
  3608  0F3B                     	;# 
  3609  0F3C                     	;# 
  3610  0F3D                     	;# 
  3611  0F3E                     	;# 
  3612  0F3F                     	;# 
  3613  0F40                     	;# 
  3614  0F41                     	;# 
  3615  0F43                     	;# 
  3616  0F44                     	;# 
  3617  0F45                     	;# 
  3618  0F46                     	;# 
  3619  0F47                     	;# 
  3620  0F48                     	;# 
  3621  0F49                     	;# 
  3622  0F4A                     	;# 
  3623  0F4B                     	;# 
  3624  0F4C                     	;# 
  3625  0F4E                     	;# 
  3626  0F4F                     	;# 
  3627  0F50                     	;# 
  3628  0F51                     	;# 
  3629  0F52                     	;# 
  3630  0F53                     	;# 
  3631  0F54                     	;# 
  3632  0F55                     	;# 
  3633  0F56                     	;# 
  3634  0F57                     	;# 
  3635  0F65                     	;# 
  3636  0F68                     	;# 
  3637  0F69                     	;# 
  3638  0F6A                     	;# 
  3639  0F6B                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEB                     	;# 
  3648  0FED                     	;# 
  3649  0FEE                     	;# 
  3650  0FEF                     	;# 
  3651  0000                     	;# 
  3652  0001                     	;# 
  3653  0002                     	;# 
  3654  0003                     	;# 
  3655  0004                     	;# 
  3656  0005                     	;# 
  3657  0006                     	;# 
  3658  0007                     	;# 
  3659  0008                     	;# 
  3660  0009                     	;# 
  3661  000A                     	;# 
  3662  000B                     	;# 
  3663  000C                     	;# 
  3664  000D                     	;# 
  3665  000E                     	;# 
  3666  0010                     	;# 
  3667  0011                     	;# 
  3668  0012                     	;# 
  3669  0013                     	;# 
  3670  0016                     	;# 
  3671  0017                     	;# 
  3672  0018                     	;# 
  3673  001C                     	;# 
  3674  001C                     	;# 
  3675  001D                     	;# 
  3676  001D                     	;# 
  3677  001E                     	;# 
  3678  001F                     	;# 
  3679  008C                     	;# 
  3680  008C                     	;# 
  3681  008D                     	;# 
  3682  008E                     	;# 
  3683  008E                     	;# 
  3684  008F                     	;# 
  3685  0090                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0093                     	;# 
  3689  0094                     	;# 
  3690  0095                     	;# 
  3691  0096                     	;# 
  3692  0097                     	;# 
  3693  0098                     	;# 
  3694  0099                     	;# 
  3695  009A                     	;# 
  3696  009B                     	;# 
  3697  009C                     	;# 
  3698  009D                     	;# 
  3699  009E                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  010E                     	;# 
  3704  010F                     	;# 
  3705  0110                     	;# 
  3706  0110                     	;# 
  3707  0111                     	;# 
  3708  0112                     	;# 
  3709  0112                     	;# 
  3710  0113                     	;# 
  3711  0114                     	;# 
  3712  0114                     	;# 
  3713  0115                     	;# 
  3714  0116                     	;# 
  3715  0116                     	;# 
  3716  0117                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  018C                     	;# 
  3743  018D                     	;# 
  3744  018E                     	;# 
  3745  018F                     	;# 
  3746  0190                     	;# 
  3747  0191                     	;# 
  3748  0192                     	;# 
  3749  0196                     	;# 
  3750  0197                     	;# 
  3751  0198                     	;# 
  3752  0199                     	;# 
  3753  019A                     	;# 
  3754  019B                     	;# 
  3755  019C                     	;# 
  3756  020C                     	;# 
  3757  020D                     	;# 
  3758  020E                     	;# 
  3759  020F                     	;# 
  3760  020F                     	;# 
  3761  0210                     	;# 
  3762  0210                     	;# 
  3763  0211                     	;# 
  3764  0211                     	;# 
  3765  0212                     	;# 
  3766  0213                     	;# 
  3767  0214                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0216                     	;# 
  3771  0216                     	;# 
  3772  0217                     	;# 
  3773  0217                     	;# 
  3774  0218                     	;# 
  3775  0219                     	;# 
  3776  021A                     	;# 
  3777  021B                     	;# 
  3778  021B                     	;# 
  3779  021C                     	;# 
  3780  021C                     	;# 
  3781  021D                     	;# 
  3782  021D                     	;# 
  3783  021E                     	;# 
  3784  021F                     	;# 
  3785  028C                     	;# 
  3786  028C                     	;# 
  3787  028D                     	;# 
  3788  028D                     	;# 
  3789  028E                     	;# 
  3790  028F                     	;# 
  3791  0290                     	;# 
  3792  0290                     	;# 
  3793  0291                     	;# 
  3794  0292                     	;# 
  3795  0292                     	;# 
  3796  0293                     	;# 
  3797  0293                     	;# 
  3798  0294                     	;# 
  3799  0295                     	;# 
  3800  0296                     	;# 
  3801  0296                     	;# 
  3802  0297                     	;# 
  3803  0298                     	;# 
  3804  0298                     	;# 
  3805  0299                     	;# 
  3806  0299                     	;# 
  3807  029A                     	;# 
  3808  029B                     	;# 
  3809  029C                     	;# 
  3810  029C                     	;# 
  3811  029D                     	;# 
  3812  030C                     	;# 
  3813  030C                     	;# 
  3814  030D                     	;# 
  3815  030E                     	;# 
  3816  030F                     	;# 
  3817  0310                     	;# 
  3818  0310                     	;# 
  3819  0311                     	;# 
  3820  0312                     	;# 
  3821  0313                     	;# 
  3822  0314                     	;# 
  3823  0314                     	;# 
  3824  0315                     	;# 
  3825  0316                     	;# 
  3826  0317                     	;# 
  3827  0318                     	;# 
  3828  0318                     	;# 
  3829  0319                     	;# 
  3830  031A                     	;# 
  3831  031B                     	;# 
  3832  031C                     	;# 
  3833  031C                     	;# 
  3834  031D                     	;# 
  3835  031E                     	;# 
  3836  031F                     	;# 
  3837  038C                     	;# 
  3838  038D                     	;# 
  3839  038E                     	;# 
  3840  0390                     	;# 
  3841  0391                     	;# 
  3842  0392                     	;# 
  3843  040C                     	;# 
  3844  040D                     	;# 
  3845  040E                     	;# 
  3846  040F                     	;# 
  3847  0410                     	;# 
  3848  0411                     	;# 
  3849  0416                     	;# 
  3850  0416                     	;# 
  3851  0417                     	;# 
  3852  0418                     	;# 
  3853  0418                     	;# 
  3854  0419                     	;# 
  3855  041A                     	;# 
  3856  041A                     	;# 
  3857  041B                     	;# 
  3858  041C                     	;# 
  3859  041C                     	;# 
  3860  041D                     	;# 
  3861  041E                     	;# 
  3862  041F                     	;# 
  3863  048C                     	;# 
  3864  048C                     	;# 
  3865  048D                     	;# 
  3866  048E                     	;# 
  3867  048F                     	;# 
  3868  048F                     	;# 
  3869  0490                     	;# 
  3870  0491                     	;# 
  3871  0492                     	;# 
  3872  0492                     	;# 
  3873  0493                     	;# 
  3874  0494                     	;# 
  3875  0495                     	;# 
  3876  0495                     	;# 
  3877  0496                     	;# 
  3878  0497                     	;# 
  3879  0498                     	;# 
  3880  0499                     	;# 
  3881  049A                     	;# 
  3882  049B                     	;# 
  3883  049C                     	;# 
  3884  049D                     	;# 
  3885  050C                     	;# 
  3886  050C                     	;# 
  3887  050D                     	;# 
  3888  050E                     	;# 
  3889  050F                     	;# 
  3890  050F                     	;# 
  3891  0510                     	;# 
  3892  0511                     	;# 
  3893  0512                     	;# 
  3894  0512                     	;# 
  3895  0513                     	;# 
  3896  0514                     	;# 
  3897  0515                     	;# 
  3898  0515                     	;# 
  3899  0516                     	;# 
  3900  0517                     	;# 
  3901  0518                     	;# 
  3902  0519                     	;# 
  3903  051A                     	;# 
  3904  051B                     	;# 
  3905  051C                     	;# 
  3906  051D                     	;# 
  3907  058C                     	;# 
  3908  058C                     	;# 
  3909  058D                     	;# 
  3910  058E                     	;# 
  3911  058F                     	;# 
  3912  058F                     	;# 
  3913  0590                     	;# 
  3914  0591                     	;# 
  3915  0592                     	;# 
  3916  0593                     	;# 
  3917  060C                     	;# 
  3918  060D                     	;# 
  3919  060E                     	;# 
  3920  060F                     	;# 
  3921  0610                     	;# 
  3922  0611                     	;# 
  3923  0612                     	;# 
  3924  0613                     	;# 
  3925  0614                     	;# 
  3926  0616                     	;# 
  3927  0617                     	;# 
  3928  0618                     	;# 
  3929  0619                     	;# 
  3930  061A                     	;# 
  3931  061B                     	;# 
  3932  061C                     	;# 
  3933  061D                     	;# 
  3934  061E                     	;# 
  3935  068C                     	;# 
  3936  068D                     	;# 
  3937  068E                     	;# 
  3938  068F                     	;# 
  3939  0690                     	;# 
  3940  0691                     	;# 
  3941  0692                     	;# 
  3942  0693                     	;# 
  3943  0694                     	;# 
  3944  070C                     	;# 
  3945  070D                     	;# 
  3946  070E                     	;# 
  3947  070F                     	;# 
  3948  0710                     	;# 
  3949  0711                     	;# 
  3950  0712                     	;# 
  3951  0713                     	;# 
  3952  0714                     	;# 
  3953  0716                     	;# 
  3954  0717                     	;# 
  3955  0718                     	;# 
  3956  0719                     	;# 
  3957  071A                     	;# 
  3958  071B                     	;# 
  3959  071C                     	;# 
  3960  071D                     	;# 
  3961  071E                     	;# 
  3962  0796                     	;# 
  3963  0797                     	;# 
  3964  0798                     	;# 
  3965  0799                     	;# 
  3966  079A                     	;# 
  3967  079B                     	;# 
  3968  080C                     	;# 
  3969  080D                     	;# 
  3970  080E                     	;# 
  3971  080F                     	;# 
  3972  0810                     	;# 
  3973  0811                     	;# 
  3974  0812                     	;# 
  3975  0813                     	;# 
  3976  0814                     	;# 
  3977  081A                     	;# 
  3978  081B                     	;# 
  3979  081C                     	;# 
  3980  081D                     	;# 
  3981  081E                     	;# 
  3982  081F                     	;# 
  3983  088C                     	;# 
  3984  088D                     	;# 
  3985  088E                     	;# 
  3986  088F                     	;# 
  3987  0890                     	;# 
  3988  0891                     	;# 
  3989  0892                     	;# 
  3990  0893                     	;# 
  3991  0895                     	;# 
  3992  0896                     	;# 
  3993  0897                     	;# 
  3994  0898                     	;# 
  3995  0899                     	;# 
  3996  089A                     	;# 
  3997  089B                     	;# 
  3998  090C                     	;# 
  3999  090E                     	;# 
  4000  090F                     	;# 
  4001  091F                     	;# 
  4002  091F                     	;# 
  4003  098F                     	;# 
  4004  098F                     	;# 
  4005  0990                     	;# 
  4006  0991                     	;# 
  4007  0992                     	;# 
  4008  0993                     	;# 
  4009  0994                     	;# 
  4010  0995                     	;# 
  4011  0996                     	;# 
  4012  0997                     	;# 
  4013  0E0F                     	;# 
  4014  0E10                     	;# 
  4015  0E11                     	;# 
  4016  0E12                     	;# 
  4017  0E13                     	;# 
  4018  0E14                     	;# 
  4019  0E15                     	;# 
  4020  0E16                     	;# 
  4021  0E17                     	;# 
  4022  0E18                     	;# 
  4023  0E19                     	;# 
  4024  0E1A                     	;# 
  4025  0E1B                     	;# 
  4026  0E1C                     	;# 
  4027  0E1D                     	;# 
  4028  0E1E                     	;# 
  4029  0E1F                     	;# 
  4030  0E20                     	;# 
  4031  0E21                     	;# 
  4032  0E22                     	;# 
  4033  0E23                     	;# 
  4034  0E24                     	;# 
  4035  0E25                     	;# 
  4036  0E26                     	;# 
  4037  0E27                     	;# 
  4038  0E28                     	;# 
  4039  0E29                     	;# 
  4040  0E2A                     	;# 
  4041  0E2B                     	;# 
  4042  0E2C                     	;# 
  4043  0E2D                     	;# 
  4044  0E2E                     	;# 
  4045  0E2F                     	;# 
  4046  0E30                     	;# 
  4047  0E31                     	;# 
  4048  0E32                     	;# 
  4049  0E33                     	;# 
  4050  0E34                     	;# 
  4051  0E35                     	;# 
  4052  0E36                     	;# 
  4053  0E37                     	;# 
  4054  0E8F                     	;# 
  4055  0E90                     	;# 
  4056  0E91                     	;# 
  4057  0E92                     	;# 
  4058  0E93                     	;# 
  4059  0E94                     	;# 
  4060  0E95                     	;# 
  4061  0E96                     	;# 
  4062  0E97                     	;# 
  4063  0E9C                     	;# 
  4064  0E9D                     	;# 
  4065  0E9E                     	;# 
  4066  0EA1                     	;# 
  4067  0EA2                     	;# 
  4068  0EA3                     	;# 
  4069  0EA4                     	;# 
  4070  0EA5                     	;# 
  4071  0EA9                     	;# 
  4072  0EAA                     	;# 
  4073  0EAB                     	;# 
  4074  0EAC                     	;# 
  4075  0EB1                     	;# 
  4076  0EB2                     	;# 
  4077  0EB3                     	;# 
  4078  0EB8                     	;# 
  4079  0EB9                     	;# 
  4080  0EBA                     	;# 
  4081  0EBB                     	;# 
  4082  0EBC                     	;# 
  4083  0EBD                     	;# 
  4084  0EBE                     	;# 
  4085  0EC3                     	;# 
  4086  0EC5                     	;# 
  4087  0EC6                     	;# 
  4088  0EC7                     	;# 
  4089  0EC8                     	;# 
  4090  0EC9                     	;# 
  4091  0ECA                     	;# 
  4092  0ECB                     	;# 
  4093  0ECC                     	;# 
  4094  0F10                     	;# 
  4095  0F11                     	;# 
  4096  0F12                     	;# 
  4097  0F13                     	;# 
  4098  0F14                     	;# 
  4099  0F15                     	;# 
  4100  0F16                     	;# 
  4101  0F17                     	;# 
  4102  0F18                     	;# 
  4103  0F19                     	;# 
  4104  0F1A                     	;# 
  4105  0F1B                     	;# 
  4106  0F1C                     	;# 
  4107  0F1D                     	;# 
  4108  0F1E                     	;# 
  4109  0F1F                     	;# 
  4110  0F20                     	;# 
  4111  0F21                     	;# 
  4112  0F22                     	;# 
  4113  0F23                     	;# 
  4114  0F24                     	;# 
  4115  0F25                     	;# 
  4116  0F26                     	;# 
  4117  0F27                     	;# 
  4118  0F38                     	;# 
  4119  0F39                     	;# 
  4120  0F3A                     	;# 
  4121  0F3B                     	;# 
  4122  0F3C                     	;# 
  4123  0F3D                     	;# 
  4124  0F3E                     	;# 
  4125  0F3F                     	;# 
  4126  0F40                     	;# 
  4127  0F41                     	;# 
  4128  0F43                     	;# 
  4129  0F44                     	;# 
  4130  0F45                     	;# 
  4131  0F46                     	;# 
  4132  0F47                     	;# 
  4133  0F48                     	;# 
  4134  0F49                     	;# 
  4135  0F4A                     	;# 
  4136  0F4B                     	;# 
  4137  0F4C                     	;# 
  4138  0F4E                     	;# 
  4139  0F4F                     	;# 
  4140  0F50                     	;# 
  4141  0F51                     	;# 
  4142  0F52                     	;# 
  4143  0F53                     	;# 
  4144  0F54                     	;# 
  4145  0F55                     	;# 
  4146  0F56                     	;# 
  4147  0F57                     	;# 
  4148  0F65                     	;# 
  4149  0F68                     	;# 
  4150  0F69                     	;# 
  4151  0F6A                     	;# 
  4152  0F6B                     	;# 
  4153  0FE4                     	;# 
  4154  0FE5                     	;# 
  4155  0FE6                     	;# 
  4156  0FE7                     	;# 
  4157  0FE8                     	;# 
  4158  0FE9                     	;# 
  4159  0FEA                     	;# 
  4160  0FEB                     	;# 
  4161  0FED                     	;# 
  4162  0FEE                     	;# 
  4163  0FEF                     	;# 
  4164  0000                     	;# 
  4165  0001                     	;# 
  4166  0002                     	;# 
  4167  0003                     	;# 
  4168  0004                     	;# 
  4169  0005                     	;# 
  4170  0006                     	;# 
  4171  0007                     	;# 
  4172  0008                     	;# 
  4173  0009                     	;# 
  4174  000A                     	;# 
  4175  000B                     	;# 
  4176  000C                     	;# 
  4177  000D                     	;# 
  4178  000E                     	;# 
  4179  0010                     	;# 
  4180  0011                     	;# 
  4181  0012                     	;# 
  4182  0013                     	;# 
  4183  0016                     	;# 
  4184  0017                     	;# 
  4185  0018                     	;# 
  4186  001C                     	;# 
  4187  001C                     	;# 
  4188  001D                     	;# 
  4189  001D                     	;# 
  4190  001E                     	;# 
  4191  001F                     	;# 
  4192  008C                     	;# 
  4193  008C                     	;# 
  4194  008D                     	;# 
  4195  008E                     	;# 
  4196  008E                     	;# 
  4197  008F                     	;# 
  4198  0090                     	;# 
  4199  0090                     	;# 
  4200  0091                     	;# 
  4201  0093                     	;# 
  4202  0094                     	;# 
  4203  0095                     	;# 
  4204  0096                     	;# 
  4205  0097                     	;# 
  4206  0098                     	;# 
  4207  0099                     	;# 
  4208  009A                     	;# 
  4209  009B                     	;# 
  4210  009C                     	;# 
  4211  009D                     	;# 
  4212  009E                     	;# 
  4213  010C                     	;# 
  4214  010D                     	;# 
  4215  010E                     	;# 
  4216  010E                     	;# 
  4217  010F                     	;# 
  4218  0110                     	;# 
  4219  0110                     	;# 
  4220  0111                     	;# 
  4221  0112                     	;# 
  4222  0112                     	;# 
  4223  0113                     	;# 
  4224  0114                     	;# 
  4225  0114                     	;# 
  4226  0115                     	;# 
  4227  0116                     	;# 
  4228  0116                     	;# 
  4229  0117                     	;# 
  4230  0119                     	;# 
  4231  0119                     	;# 
  4232  0119                     	;# 
  4233  011A                     	;# 
  4234  011A                     	;# 
  4235  011A                     	;# 
  4236  011B                     	;# 
  4237  011B                     	;# 
  4238  011B                     	;# 
  4239  011B                     	;# 
  4240  011B                     	;# 
  4241  011C                     	;# 
  4242  011C                     	;# 
  4243  011C                     	;# 
  4244  011D                     	;# 
  4245  011D                     	;# 
  4246  011D                     	;# 
  4247  011E                     	;# 
  4248  011E                     	;# 
  4249  011E                     	;# 
  4250  011F                     	;# 
  4251  011F                     	;# 
  4252  011F                     	;# 
  4253  011F                     	;# 
  4254  011F                     	;# 
  4255  018C                     	;# 
  4256  018D                     	;# 
  4257  018E                     	;# 
  4258  018F                     	;# 
  4259  0190                     	;# 
  4260  0191                     	;# 
  4261  0192                     	;# 
  4262  0196                     	;# 
  4263  0197                     	;# 
  4264  0198                     	;# 
  4265  0199                     	;# 
  4266  019A                     	;# 
  4267  019B                     	;# 
  4268  019C                     	;# 
  4269  020C                     	;# 
  4270  020D                     	;# 
  4271  020E                     	;# 
  4272  020F                     	;# 
  4273  020F                     	;# 
  4274  0210                     	;# 
  4275  0210                     	;# 
  4276  0211                     	;# 
  4277  0211                     	;# 
  4278  0212                     	;# 
  4279  0213                     	;# 
  4280  0214                     	;# 
  4281  0215                     	;# 
  4282  0215                     	;# 
  4283  0216                     	;# 
  4284  0216                     	;# 
  4285  0217                     	;# 
  4286  0217                     	;# 
  4287  0218                     	;# 
  4288  0219                     	;# 
  4289  021A                     	;# 
  4290  021B                     	;# 
  4291  021B                     	;# 
  4292  021C                     	;# 
  4293  021C                     	;# 
  4294  021D                     	;# 
  4295  021D                     	;# 
  4296  021E                     	;# 
  4297  021F                     	;# 
  4298  028C                     	;# 
  4299  028C                     	;# 
  4300  028D                     	;# 
  4301  028D                     	;# 
  4302  028E                     	;# 
  4303  028F                     	;# 
  4304  0290                     	;# 
  4305  0290                     	;# 
  4306  0291                     	;# 
  4307  0292                     	;# 
  4308  0292                     	;# 
  4309  0293                     	;# 
  4310  0293                     	;# 
  4311  0294                     	;# 
  4312  0295                     	;# 
  4313  0296                     	;# 
  4314  0296                     	;# 
  4315  0297                     	;# 
  4316  0298                     	;# 
  4317  0298                     	;# 
  4318  0299                     	;# 
  4319  0299                     	;# 
  4320  029A                     	;# 
  4321  029B                     	;# 
  4322  029C                     	;# 
  4323  029C                     	;# 
  4324  029D                     	;# 
  4325  030C                     	;# 
  4326  030C                     	;# 
  4327  030D                     	;# 
  4328  030E                     	;# 
  4329  030F                     	;# 
  4330  0310                     	;# 
  4331  0310                     	;# 
  4332  0311                     	;# 
  4333  0312                     	;# 
  4334  0313                     	;# 
  4335  0314                     	;# 
  4336  0314                     	;# 
  4337  0315                     	;# 
  4338  0316                     	;# 
  4339  0317                     	;# 
  4340  0318                     	;# 
  4341  0318                     	;# 
  4342  0319                     	;# 
  4343  031A                     	;# 
  4344  031B                     	;# 
  4345  031C                     	;# 
  4346  031C                     	;# 
  4347  031D                     	;# 
  4348  031E                     	;# 
  4349  031F                     	;# 
  4350  038C                     	;# 
  4351  038D                     	;# 
  4352  038E                     	;# 
  4353  0390                     	;# 
  4354  0391                     	;# 
  4355  0392                     	;# 
  4356  040C                     	;# 
  4357  040D                     	;# 
  4358  040E                     	;# 
  4359  040F                     	;# 
  4360  0410                     	;# 
  4361  0411                     	;# 
  4362  0416                     	;# 
  4363  0416                     	;# 
  4364  0417                     	;# 
  4365  0418                     	;# 
  4366  0418                     	;# 
  4367  0419                     	;# 
  4368  041A                     	;# 
  4369  041A                     	;# 
  4370  041B                     	;# 
  4371  041C                     	;# 
  4372  041C                     	;# 
  4373  041D                     	;# 
  4374  041E                     	;# 
  4375  041F                     	;# 
  4376  048C                     	;# 
  4377  048C                     	;# 
  4378  048D                     	;# 
  4379  048E                     	;# 
  4380  048F                     	;# 
  4381  048F                     	;# 
  4382  0490                     	;# 
  4383  0491                     	;# 
  4384  0492                     	;# 
  4385  0492                     	;# 
  4386  0493                     	;# 
  4387  0494                     	;# 
  4388  0495                     	;# 
  4389  0495                     	;# 
  4390  0496                     	;# 
  4391  0497                     	;# 
  4392  0498                     	;# 
  4393  0499                     	;# 
  4394  049A                     	;# 
  4395  049B                     	;# 
  4396  049C                     	;# 
  4397  049D                     	;# 
  4398  050C                     	;# 
  4399  050C                     	;# 
  4400  050D                     	;# 
  4401  050E                     	;# 
  4402  050F                     	;# 
  4403  050F                     	;# 
  4404  0510                     	;# 
  4405  0511                     	;# 
  4406  0512                     	;# 
  4407  0512                     	;# 
  4408  0513                     	;# 
  4409  0514                     	;# 
  4410  0515                     	;# 
  4411  0515                     	;# 
  4412  0516                     	;# 
  4413  0517                     	;# 
  4414  0518                     	;# 
  4415  0519                     	;# 
  4416  051A                     	;# 
  4417  051B                     	;# 
  4418  051C                     	;# 
  4419  051D                     	;# 
  4420  058C                     	;# 
  4421  058C                     	;# 
  4422  058D                     	;# 
  4423  058E                     	;# 
  4424  058F                     	;# 
  4425  058F                     	;# 
  4426  0590                     	;# 
  4427  0591                     	;# 
  4428  0592                     	;# 
  4429  0593                     	;# 
  4430  060C                     	;# 
  4431  060D                     	;# 
  4432  060E                     	;# 
  4433  060F                     	;# 
  4434  0610                     	;# 
  4435  0611                     	;# 
  4436  0612                     	;# 
  4437  0613                     	;# 
  4438  0614                     	;# 
  4439  0616                     	;# 
  4440  0617                     	;# 
  4441  0618                     	;# 
  4442  0619                     	;# 
  4443  061A                     	;# 
  4444  061B                     	;# 
  4445  061C                     	;# 
  4446  061D                     	;# 
  4447  061E                     	;# 
  4448  068C                     	;# 
  4449  068D                     	;# 
  4450  068E                     	;# 
  4451  068F                     	;# 
  4452  0690                     	;# 
  4453  0691                     	;# 
  4454  0692                     	;# 
  4455  0693                     	;# 
  4456  0694                     	;# 
  4457  070C                     	;# 
  4458  070D                     	;# 
  4459  070E                     	;# 
  4460  070F                     	;# 
  4461  0710                     	;# 
  4462  0711                     	;# 
  4463  0712                     	;# 
  4464  0713                     	;# 
  4465  0714                     	;# 
  4466  0716                     	;# 
  4467  0717                     	;# 
  4468  0718                     	;# 
  4469  0719                     	;# 
  4470  071A                     	;# 
  4471  071B                     	;# 
  4472  071C                     	;# 
  4473  071D                     	;# 
  4474  071E                     	;# 
  4475  0796                     	;# 
  4476  0797                     	;# 
  4477  0798                     	;# 
  4478  0799                     	;# 
  4479  079A                     	;# 
  4480  079B                     	;# 
  4481  080C                     	;# 
  4482  080D                     	;# 
  4483  080E                     	;# 
  4484  080F                     	;# 
  4485  0810                     	;# 
  4486  0811                     	;# 
  4487  0812                     	;# 
  4488  0813                     	;# 
  4489  0814                     	;# 
  4490  081A                     	;# 
  4491  081B                     	;# 
  4492  081C                     	;# 
  4493  081D                     	;# 
  4494  081E                     	;# 
  4495  081F                     	;# 
  4496  088C                     	;# 
  4497  088D                     	;# 
  4498  088E                     	;# 
  4499  088F                     	;# 
  4500  0890                     	;# 
  4501  0891                     	;# 
  4502  0892                     	;# 
  4503  0893                     	;# 
  4504  0895                     	;# 
  4505  0896                     	;# 
  4506  0897                     	;# 
  4507  0898                     	;# 
  4508  0899                     	;# 
  4509  089A                     	;# 
  4510  089B                     	;# 
  4511  090C                     	;# 
  4512  090E                     	;# 
  4513  090F                     	;# 
  4514  091F                     	;# 
  4515  091F                     	;# 
  4516  098F                     	;# 
  4517  098F                     	;# 
  4518  0990                     	;# 
  4519  0991                     	;# 
  4520  0992                     	;# 
  4521  0993                     	;# 
  4522  0994                     	;# 
  4523  0995                     	;# 
  4524  0996                     	;# 
  4525  0997                     	;# 
  4526  0E0F                     	;# 
  4527  0E10                     	;# 
  4528  0E11                     	;# 
  4529  0E12                     	;# 
  4530  0E13                     	;# 
  4531  0E14                     	;# 
  4532  0E15                     	;# 
  4533  0E16                     	;# 
  4534  0E17                     	;# 
  4535  0E18                     	;# 
  4536  0E19                     	;# 
  4537  0E1A                     	;# 
  4538  0E1B                     	;# 
  4539  0E1C                     	;# 
  4540  0E1D                     	;# 
  4541  0E1E                     	;# 
  4542  0E1F                     	;# 
  4543  0E20                     	;# 
  4544  0E21                     	;# 
  4545  0E22                     	;# 
  4546  0E23                     	;# 
  4547  0E24                     	;# 
  4548  0E25                     	;# 
  4549  0E26                     	;# 
  4550  0E27                     	;# 
  4551  0E28                     	;# 
  4552  0E29                     	;# 
  4553  0E2A                     	;# 
  4554  0E2B                     	;# 
  4555  0E2C                     	;# 
  4556  0E2D                     	;# 
  4557  0E2E                     	;# 
  4558  0E2F                     	;# 
  4559  0E30                     	;# 
  4560  0E31                     	;# 
  4561  0E32                     	;# 
  4562  0E33                     	;# 
  4563  0E34                     	;# 
  4564  0E35                     	;# 
  4565  0E36                     	;# 
  4566  0E37                     	;# 
  4567  0E8F                     	;# 
  4568  0E90                     	;# 
  4569  0E91                     	;# 
  4570  0E92                     	;# 
  4571  0E93                     	;# 
  4572  0E94                     	;# 
  4573  0E95                     	;# 
  4574  0E96                     	;# 
  4575  0E97                     	;# 
  4576  0E9C                     	;# 
  4577  0E9D                     	;# 
  4578  0E9E                     	;# 
  4579  0EA1                     	;# 
  4580  0EA2                     	;# 
  4581  0EA3                     	;# 
  4582  0EA4                     	;# 
  4583  0EA5                     	;# 
  4584  0EA9                     	;# 
  4585  0EAA                     	;# 
  4586  0EAB                     	;# 
  4587  0EAC                     	;# 
  4588  0EB1                     	;# 
  4589  0EB2                     	;# 
  4590  0EB3                     	;# 
  4591  0EB8                     	;# 
  4592  0EB9                     	;# 
  4593  0EBA                     	;# 
  4594  0EBB                     	;# 
  4595  0EBC                     	;# 
  4596  0EBD                     	;# 
  4597  0EBE                     	;# 
  4598  0EC3                     	;# 
  4599  0EC5                     	;# 
  4600  0EC6                     	;# 
  4601  0EC7                     	;# 
  4602  0EC8                     	;# 
  4603  0EC9                     	;# 
  4604  0ECA                     	;# 
  4605  0ECB                     	;# 
  4606  0ECC                     	;# 
  4607  0F10                     	;# 
  4608  0F11                     	;# 
  4609  0F12                     	;# 
  4610  0F13                     	;# 
  4611  0F14                     	;# 
  4612  0F15                     	;# 
  4613  0F16                     	;# 
  4614  0F17                     	;# 
  4615  0F18                     	;# 
  4616  0F19                     	;# 
  4617  0F1A                     	;# 
  4618  0F1B                     	;# 
  4619  0F1C                     	;# 
  4620  0F1D                     	;# 
  4621  0F1E                     	;# 
  4622  0F1F                     	;# 
  4623  0F20                     	;# 
  4624  0F21                     	;# 
  4625  0F22                     	;# 
  4626  0F23                     	;# 
  4627  0F24                     	;# 
  4628  0F25                     	;# 
  4629  0F26                     	;# 
  4630  0F27                     	;# 
  4631  0F38                     	;# 
  4632  0F39                     	;# 
  4633  0F3A                     	;# 
  4634  0F3B                     	;# 
  4635  0F3C                     	;# 
  4636  0F3D                     	;# 
  4637  0F3E                     	;# 
  4638  0F3F                     	;# 
  4639  0F40                     	;# 
  4640  0F41                     	;# 
  4641  0F43                     	;# 
  4642  0F44                     	;# 
  4643  0F45                     	;# 
  4644  0F46                     	;# 
  4645  0F47                     	;# 
  4646  0F48                     	;# 
  4647  0F49                     	;# 
  4648  0F4A                     	;# 
  4649  0F4B                     	;# 
  4650  0F4C                     	;# 
  4651  0F4E                     	;# 
  4652  0F4F                     	;# 
  4653  0F50                     	;# 
  4654  0F51                     	;# 
  4655  0F52                     	;# 
  4656  0F53                     	;# 
  4657  0F54                     	;# 
  4658  0F55                     	;# 
  4659  0F56                     	;# 
  4660  0F57                     	;# 
  4661  0F65                     	;# 
  4662  0F68                     	;# 
  4663  0F69                     	;# 
  4664  0F6A                     	;# 
  4665  0F6B                     	;# 
  4666  0FE4                     	;# 
  4667  0FE5                     	;# 
  4668  0FE6                     	;# 
  4669  0FE7                     	;# 
  4670  0FE8                     	;# 
  4671  0FE9                     	;# 
  4672  0FEA                     	;# 
  4673  0FEB                     	;# 
  4674  0FED                     	;# 
  4675  0FEE                     	;# 
  4676  0FEF                     	;# 
  4677  0000                     	;# 
  4678  0001                     	;# 
  4679  0002                     	;# 
  4680  0003                     	;# 
  4681  0004                     	;# 
  4682  0005                     	;# 
  4683  0006                     	;# 
  4684  0007                     	;# 
  4685  0008                     	;# 
  4686  0009                     	;# 
  4687  000A                     	;# 
  4688  000B                     	;# 
  4689  000C                     	;# 
  4690  000D                     	;# 
  4691  000E                     	;# 
  4692  0010                     	;# 
  4693  0011                     	;# 
  4694  0012                     	;# 
  4695  0013                     	;# 
  4696  0016                     	;# 
  4697  0017                     	;# 
  4698  0018                     	;# 
  4699  001C                     	;# 
  4700  001C                     	;# 
  4701  001D                     	;# 
  4702  001D                     	;# 
  4703  001E                     	;# 
  4704  001F                     	;# 
  4705  008C                     	;# 
  4706  008C                     	;# 
  4707  008D                     	;# 
  4708  008E                     	;# 
  4709  008E                     	;# 
  4710  008F                     	;# 
  4711  0090                     	;# 
  4712  0090                     	;# 
  4713  0091                     	;# 
  4714  0093                     	;# 
  4715  0094                     	;# 
  4716  0095                     	;# 
  4717  0096                     	;# 
  4718  0097                     	;# 
  4719  0098                     	;# 
  4720  0099                     	;# 
  4721  009A                     	;# 
  4722  009B                     	;# 
  4723  009C                     	;# 
  4724  009D                     	;# 
  4725  009E                     	;# 
  4726  010C                     	;# 
  4727  010D                     	;# 
  4728  010E                     	;# 
  4729  010E                     	;# 
  4730  010F                     	;# 
  4731  0110                     	;# 
  4732  0110                     	;# 
  4733  0111                     	;# 
  4734  0112                     	;# 
  4735  0112                     	;# 
  4736  0113                     	;# 
  4737  0114                     	;# 
  4738  0114                     	;# 
  4739  0115                     	;# 
  4740  0116                     	;# 
  4741  0116                     	;# 
  4742  0117                     	;# 
  4743  0119                     	;# 
  4744  0119                     	;# 
  4745  0119                     	;# 
  4746  011A                     	;# 
  4747  011A                     	;# 
  4748  011A                     	;# 
  4749  011B                     	;# 
  4750  011B                     	;# 
  4751  011B                     	;# 
  4752  011B                     	;# 
  4753  011B                     	;# 
  4754  011C                     	;# 
  4755  011C                     	;# 
  4756  011C                     	;# 
  4757  011D                     	;# 
  4758  011D                     	;# 
  4759  011D                     	;# 
  4760  011E                     	;# 
  4761  011E                     	;# 
  4762  011E                     	;# 
  4763  011F                     	;# 
  4764  011F                     	;# 
  4765  011F                     	;# 
  4766  011F                     	;# 
  4767  011F                     	;# 
  4768  018C                     	;# 
  4769  018D                     	;# 
  4770  018E                     	;# 
  4771  018F                     	;# 
  4772  0190                     	;# 
  4773  0191                     	;# 
  4774  0192                     	;# 
  4775  0196                     	;# 
  4776  0197                     	;# 
  4777  0198                     	;# 
  4778  0199                     	;# 
  4779  019A                     	;# 
  4780  019B                     	;# 
  4781  019C                     	;# 
  4782  020C                     	;# 
  4783  020D                     	;# 
  4784  020E                     	;# 
  4785  020F                     	;# 
  4786  020F                     	;# 
  4787  0210                     	;# 
  4788  0210                     	;# 
  4789  0211                     	;# 
  4790  0211                     	;# 
  4791  0212                     	;# 
  4792  0213                     	;# 
  4793  0214                     	;# 
  4794  0215                     	;# 
  4795  0215                     	;# 
  4796  0216                     	;# 
  4797  0216                     	;# 
  4798  0217                     	;# 
  4799  0217                     	;# 
  4800  0218                     	;# 
  4801  0219                     	;# 
  4802  021A                     	;# 
  4803  021B                     	;# 
  4804  021B                     	;# 
  4805  021C                     	;# 
  4806  021C                     	;# 
  4807  021D                     	;# 
  4808  021D                     	;# 
  4809  021E                     	;# 
  4810  021F                     	;# 
  4811  028C                     	;# 
  4812  028C                     	;# 
  4813  028D                     	;# 
  4814  028D                     	;# 
  4815  028E                     	;# 
  4816  028F                     	;# 
  4817  0290                     	;# 
  4818  0290                     	;# 
  4819  0291                     	;# 
  4820  0292                     	;# 
  4821  0292                     	;# 
  4822  0293                     	;# 
  4823  0293                     	;# 
  4824  0294                     	;# 
  4825  0295                     	;# 
  4826  0296                     	;# 
  4827  0296                     	;# 
  4828  0297                     	;# 
  4829  0298                     	;# 
  4830  0298                     	;# 
  4831  0299                     	;# 
  4832  0299                     	;# 
  4833  029A                     	;# 
  4834  029B                     	;# 
  4835  029C                     	;# 
  4836  029C                     	;# 
  4837  029D                     	;# 
  4838  030C                     	;# 
  4839  030C                     	;# 
  4840  030D                     	;# 
  4841  030E                     	;# 
  4842  030F                     	;# 
  4843  0310                     	;# 
  4844  0310                     	;# 
  4845  0311                     	;# 
  4846  0312                     	;# 
  4847  0313                     	;# 
  4848  0314                     	;# 
  4849  0314                     	;# 
  4850  0315                     	;# 
  4851  0316                     	;# 
  4852  0317                     	;# 
  4853  0318                     	;# 
  4854  0318                     	;# 
  4855  0319                     	;# 
  4856  031A                     	;# 
  4857  031B                     	;# 
  4858  031C                     	;# 
  4859  031C                     	;# 
  4860  031D                     	;# 
  4861  031E                     	;# 
  4862  031F                     	;# 
  4863  038C                     	;# 
  4864  038D                     	;# 
  4865  038E                     	;# 
  4866  0390                     	;# 
  4867  0391                     	;# 
  4868  0392                     	;# 
  4869  040C                     	;# 
  4870  040D                     	;# 
  4871  040E                     	;# 
  4872  040F                     	;# 
  4873  0410                     	;# 
  4874  0411                     	;# 
  4875  0416                     	;# 
  4876  0416                     	;# 
  4877  0417                     	;# 
  4878  0418                     	;# 
  4879  0418                     	;# 
  4880  0419                     	;# 
  4881  041A                     	;# 
  4882  041A                     	;# 
  4883  041B                     	;# 
  4884  041C                     	;# 
  4885  041C                     	;# 
  4886  041D                     	;# 
  4887  041E                     	;# 
  4888  041F                     	;# 
  4889  048C                     	;# 
  4890  048C                     	;# 
  4891  048D                     	;# 
  4892  048E                     	;# 
  4893  048F                     	;# 
  4894  048F                     	;# 
  4895  0490                     	;# 
  4896  0491                     	;# 
  4897  0492                     	;# 
  4898  0492                     	;# 
  4899  0493                     	;# 
  4900  0494                     	;# 
  4901  0495                     	;# 
  4902  0495                     	;# 
  4903  0496                     	;# 
  4904  0497                     	;# 
  4905  0498                     	;# 
  4906  0499                     	;# 
  4907  049A                     	;# 
  4908  049B                     	;# 
  4909  049C                     	;# 
  4910  049D                     	;# 
  4911  050C                     	;# 
  4912  050C                     	;# 
  4913  050D                     	;# 
  4914  050E                     	;# 
  4915  050F                     	;# 
  4916  050F                     	;# 
  4917  0510                     	;# 
  4918  0511                     	;# 
  4919  0512                     	;# 
  4920  0512                     	;# 
  4921  0513                     	;# 
  4922  0514                     	;# 
  4923  0515                     	;# 
  4924  0515                     	;# 
  4925  0516                     	;# 
  4926  0517                     	;# 
  4927  0518                     	;# 
  4928  0519                     	;# 
  4929  051A                     	;# 
  4930  051B                     	;# 
  4931  051C                     	;# 
  4932  051D                     	;# 
  4933  058C                     	;# 
  4934  058C                     	;# 
  4935  058D                     	;# 
  4936  058E                     	;# 
  4937  058F                     	;# 
  4938  058F                     	;# 
  4939  0590                     	;# 
  4940  0591                     	;# 
  4941  0592                     	;# 
  4942  0593                     	;# 
  4943  060C                     	;# 
  4944  060D                     	;# 
  4945  060E                     	;# 
  4946  060F                     	;# 
  4947  0610                     	;# 
  4948  0611                     	;# 
  4949  0612                     	;# 
  4950  0613                     	;# 
  4951  0614                     	;# 
  4952  0616                     	;# 
  4953  0617                     	;# 
  4954  0618                     	;# 
  4955  0619                     	;# 
  4956  061A                     	;# 
  4957  061B                     	;# 
  4958  061C                     	;# 
  4959  061D                     	;# 
  4960  061E                     	;# 
  4961  068C                     	;# 
  4962  068D                     	;# 
  4963  068E                     	;# 
  4964  068F                     	;# 
  4965  0690                     	;# 
  4966  0691                     	;# 
  4967  0692                     	;# 
  4968  0693                     	;# 
  4969  0694                     	;# 
  4970  070C                     	;# 
  4971  070D                     	;# 
  4972  070E                     	;# 
  4973  070F                     	;# 
  4974  0710                     	;# 
  4975  0711                     	;# 
  4976  0712                     	;# 
  4977  0713                     	;# 
  4978  0714                     	;# 
  4979  0716                     	;# 
  4980  0717                     	;# 
  4981  0718                     	;# 
  4982  0719                     	;# 
  4983  071A                     	;# 
  4984  071B                     	;# 
  4985  071C                     	;# 
  4986  071D                     	;# 
  4987  071E                     	;# 
  4988  0796                     	;# 
  4989  0797                     	;# 
  4990  0798                     	;# 
  4991  0799                     	;# 
  4992  079A                     	;# 
  4993  079B                     	;# 
  4994  080C                     	;# 
  4995  080D                     	;# 
  4996  080E                     	;# 
  4997  080F                     	;# 
  4998  0810                     	;# 
  4999  0811                     	;# 
  5000  0812                     	;# 
  5001  0813                     	;# 
  5002  0814                     	;# 
  5003  081A                     	;# 
  5004  081B                     	;# 
  5005  081C                     	;# 
  5006  081D                     	;# 
  5007  081E                     	;# 
  5008  081F                     	;# 
  5009  088C                     	;# 
  5010  088D                     	;# 
  5011  088E                     	;# 
  5012  088F                     	;# 
  5013  0890                     	;# 
  5014  0891                     	;# 
  5015  0892                     	;# 
  5016  0893                     	;# 
  5017  0895                     	;# 
  5018  0896                     	;# 
  5019  0897                     	;# 
  5020  0898                     	;# 
  5021  0899                     	;# 
  5022  089A                     	;# 
  5023  089B                     	;# 
  5024  090C                     	;# 
  5025  090E                     	;# 
  5026  090F                     	;# 
  5027  091F                     	;# 
  5028  091F                     	;# 
  5029  098F                     	;# 
  5030  098F                     	;# 
  5031  0990                     	;# 
  5032  0991                     	;# 
  5033  0992                     	;# 
  5034  0993                     	;# 
  5035  0994                     	;# 
  5036  0995                     	;# 
  5037  0996                     	;# 
  5038  0997                     	;# 
  5039  0E0F                     	;# 
  5040  0E10                     	;# 
  5041  0E11                     	;# 
  5042  0E12                     	;# 
  5043  0E13                     	;# 
  5044  0E14                     	;# 
  5045  0E15                     	;# 
  5046  0E16                     	;# 
  5047  0E17                     	;# 
  5048  0E18                     	;# 
  5049  0E19                     	;# 
  5050  0E1A                     	;# 
  5051  0E1B                     	;# 
  5052  0E1C                     	;# 
  5053  0E1D                     	;# 
  5054  0E1E                     	;# 
  5055  0E1F                     	;# 
  5056  0E20                     	;# 
  5057  0E21                     	;# 
  5058  0E22                     	;# 
  5059  0E23                     	;# 
  5060  0E24                     	;# 
  5061  0E25                     	;# 
  5062  0E26                     	;# 
  5063  0E27                     	;# 
  5064  0E28                     	;# 
  5065  0E29                     	;# 
  5066  0E2A                     	;# 
  5067  0E2B                     	;# 
  5068  0E2C                     	;# 
  5069  0E2D                     	;# 
  5070  0E2E                     	;# 
  5071  0E2F                     	;# 
  5072  0E30                     	;# 
  5073  0E31                     	;# 
  5074  0E32                     	;# 
  5075  0E33                     	;# 
  5076  0E34                     	;# 
  5077  0E35                     	;# 
  5078  0E36                     	;# 
  5079  0E37                     	;# 
  5080  0E8F                     	;# 
  5081  0E90                     	;# 
  5082  0E91                     	;# 
  5083  0E92                     	;# 
  5084  0E93                     	;# 
  5085  0E94                     	;# 
  5086  0E95                     	;# 
  5087  0E96                     	;# 
  5088  0E97                     	;# 
  5089  0E9C                     	;# 
  5090  0E9D                     	;# 
  5091  0E9E                     	;# 
  5092  0EA1                     	;# 
  5093  0EA2                     	;# 
  5094  0EA3                     	;# 
  5095  0EA4                     	;# 
  5096  0EA5                     	;# 
  5097  0EA9                     	;# 
  5098  0EAA                     	;# 
  5099  0EAB                     	;# 
  5100  0EAC                     	;# 
  5101  0EB1                     	;# 
  5102  0EB2                     	;# 
  5103  0EB3                     	;# 
  5104  0EB8                     	;# 
  5105  0EB9                     	;# 
  5106  0EBA                     	;# 
  5107  0EBB                     	;# 
  5108  0EBC                     	;# 
  5109  0EBD                     	;# 
  5110  0EBE                     	;# 
  5111  0EC3                     	;# 
  5112  0EC5                     	;# 
  5113  0EC6                     	;# 
  5114  0EC7                     	;# 
  5115  0EC8                     	;# 
  5116  0EC9                     	;# 
  5117  0ECA                     	;# 
  5118  0ECB                     	;# 
  5119  0ECC                     	;# 
  5120  0F10                     	;# 
  5121  0F11                     	;# 
  5122  0F12                     	;# 
  5123  0F13                     	;# 
  5124  0F14                     	;# 
  5125  0F15                     	;# 
  5126  0F16                     	;# 
  5127  0F17                     	;# 
  5128  0F18                     	;# 
  5129  0F19                     	;# 
  5130  0F1A                     	;# 
  5131  0F1B                     	;# 
  5132  0F1C                     	;# 
  5133  0F1D                     	;# 
  5134  0F1E                     	;# 
  5135  0F1F                     	;# 
  5136  0F20                     	;# 
  5137  0F21                     	;# 
  5138  0F22                     	;# 
  5139  0F23                     	;# 
  5140  0F24                     	;# 
  5141  0F25                     	;# 
  5142  0F26                     	;# 
  5143  0F27                     	;# 
  5144  0F38                     	;# 
  5145  0F39                     	;# 
  5146  0F3A                     	;# 
  5147  0F3B                     	;# 
  5148  0F3C                     	;# 
  5149  0F3D                     	;# 
  5150  0F3E                     	;# 
  5151  0F3F                     	;# 
  5152  0F40                     	;# 
  5153  0F41                     	;# 
  5154  0F43                     	;# 
  5155  0F44                     	;# 
  5156  0F45                     	;# 
  5157  0F46                     	;# 
  5158  0F47                     	;# 
  5159  0F48                     	;# 
  5160  0F49                     	;# 
  5161  0F4A                     	;# 
  5162  0F4B                     	;# 
  5163  0F4C                     	;# 
  5164  0F4E                     	;# 
  5165  0F4F                     	;# 
  5166  0F50                     	;# 
  5167  0F51                     	;# 
  5168  0F52                     	;# 
  5169  0F53                     	;# 
  5170  0F54                     	;# 
  5171  0F55                     	;# 
  5172  0F56                     	;# 
  5173  0F57                     	;# 
  5174  0F65                     	;# 
  5175  0F68                     	;# 
  5176  0F69                     	;# 
  5177  0F6A                     	;# 
  5178  0F6B                     	;# 
  5179  0FE4                     	;# 
  5180  0FE5                     	;# 
  5181  0FE6                     	;# 
  5182  0FE7                     	;# 
  5183  0FE8                     	;# 
  5184  0FE9                     	;# 
  5185  0FEA                     	;# 
  5186  0FEB                     	;# 
  5187  0FED                     	;# 
  5188  0FEE                     	;# 
  5189  0FEF                     	;# 
  5190                           
  5191                           	psect	idataBANK1
  5192  15E4                     __pidataBANK1:	
  5193                           
  5194                           ;initializer for _setpoint
  5195  15E4  3466               	retlw	102
  5196  15E5  3408               	retlw	8
  5197  15E6  340B               	retlw	11
  5198  15E7  3402               	retlw	2
  5199                           
  5200                           ;initializer for _Ki
  5201  15E8  3404               	retlw	4
  5202  15E9  3400               	retlw	0
  5203                           
  5204                           ;initializer for _pidMaxOutput
  5205  15EA  34FF               	retlw	255
  5206  15EB  3407               	retlw	7
  5207                           
  5208                           ;initializer for _loop
  5209  15EC  3440               	retlw	64
  5210                           
  5211                           	psect	idataBANK2
  5212  16E3                     __pidataBANK2:	
  5213                           
  5214                           ;initializer for ___cgram
  5215  16E3  340C               	retlw	12
  5216  16E4  3412               	retlw	18
  5217  16E5  3412               	retlw	18
  5218  16E6  340C               	retlw	12
  5219  16E7  3400               	retlw	0
  5220  16E8  3400               	retlw	0
  5221  16E9  3400               	retlw	0
  5222  16EA  3400               	retlw	0
  5223  16EB  3408               	retlw	8
  5224  16EC  3404               	retlw	4
  5225  16ED  3402               	retlw	2
  5226  16EE  341F               	retlw	31
  5227  16EF  3402               	retlw	2
  5228  16F0  3404               	retlw	4
  5229  16F1  3408               	retlw	8
  5230  16F2  3400               	retlw	0
  5231                           
  5232                           ;initializer for _channels
  5233  16F3  3401               	retlw	1
  5234  16F4  3400               	retlw	0
  5235  16F5  3403               	retlw	3
  5236  16F6  3400               	retlw	0
  5237                           
  5238                           ;initializer for _desc
  5239  16F7  3470               	retlw	low (STR_1| (0+32768))
  5240  16F8  3490               	retlw	high (STR_1| (0+32768))
  5241  16F9  347B               	retlw	low (STR_2| (0+32768))
  5242  16FA  3490               	retlw	high (STR_2| (0+32768))
  5243                           
  5244                           ;initializer for _highRangeSet
  5245  16FB  34BE               	retlw	190
  5246  16FC  340A               	retlw	10
  5247  16FD  34FF               	retlw	255
  5248  16FE  3403               	retlw	3
  5249                           
  5250                           ;initializer for _lowRangeSet
  5251  16FF  34EE               	retlw	238
  5252  1700  3402               	retlw	2
  5253  1701  3400               	retlw	0
  5254  1702  3400               	retlw	0
  5255                           
  5256                           ;initializer for _Kd
  5257  1703  3402               	retlw	2
  5258  1704  3400               	retlw	0
  5259                           
  5260                           ;initializer for _Kp
  5261  1705  340A               	retlw	10
  5262  1706  3400               	retlw	0
  5263                           
  5264                           	psect	stringtext
  5265  1000                     __pstringtext:	
  5266  1000                     log@coeff:	
  5267  1000  3400               	retlw	0
  5268  1001  3400               	retlw	0
  5269  1002  3400               	retlw	0
  5270  1003  3400               	retlw	0
  5271  1004  3480               	retlw	128
  5272  1005  343F               	retlw	63
  5273  1006  34F0               	retlw	240
  5274  1007  34FF               	retlw	255
  5275  1008  34BE               	retlw	190
  5276  1009  34E2               	retlw	226
  5277  100A  34A9               	retlw	169
  5278  100B  343E               	retlw	62
  5279  100C  3483               	retlw	131
  5280  100D  3476               	retlw	118
  5281  100E  34BE               	retlw	190
  5282  100F  34AE               	retlw	174
  5283  1010  342B               	retlw	43
  5284  1011  343E               	retlw	62
  5285  1012  343C               	retlw	60
  5286  1013  34C3               	retlw	195
  5287  1014  34BD               	retlw	189
  5288  1015  34D2               	retlw	210
  5289  1016  3413               	retlw	19
  5290  1017  343D               	retlw	61
  5291  1018  3478               	retlw	120
  5292  1019  34D3               	retlw	211
  5293  101A  34BB               	retlw	187
  5294  101B                     __end_oflog@coeff:	
  5295  0016                     _LATA	set	22
  5296  0017                     _LATB	set	23
  5297  0018                     _LATC	set	24
  5298  0011                     _TRISA	set	17
  5299  0012                     _TRISB	set	18
  5300  0013                     _TRISC	set	19
  5301  005F                     _GIE	set	95
  5302  00C2                     _LATC2	set	194
  5303  0060                     _RA0	set	96
  5304  0062                     _RA2	set	98
  5305  0066                     _RA6	set	102
  5306  0067                     _RA7	set	103
  5307  0068                     _RB0	set	104
  5308  0069                     _RB1	set	105
  5309  006A                     _RB2	set	106
  5310  0070                     _RC0	set	112
  5311  0071                     _RC1	set	113
  5312  009A                     _TRISC2	set	154
  5313  009D                     _ADACQ	set	157
  5314  0099                     _ADACT	set	153
  5315  009B                     _ADCAP	set	155
  5316  0098                     _ADCLK	set	152
  5317  0093                     _ADCON0	set	147
  5318  0093                     _ADCON0bits	set	147
  5319  0094                     _ADCON1	set	148
  5320  0095                     _ADCON2	set	149
  5321  0096                     _ADCON3	set	150
  5322  009E                     _ADPCH	set	158
  5323  009C                     _ADPRE	set	156
  5324  009A                     _ADREF	set	154
  5325  008D                     _ADRESH	set	141
  5326  008C                     _ADRESL	set	140
  5327  0097                     _ADSTAT	set	151
  5328  010F                     _ADLTHH	set	271
  5329  010E                     _ADLTHL	set	270
  5330  010D                     _ADRPT	set	269
  5331  0113                     _ADSTPTH	set	275
  5332  0112                     _ADSTPTL	set	274
  5333  0111                     _ADUTHH	set	273
  5334  0110                     _ADUTHL	set	272
  5335  021F                     _CCPTMRS1bits	set	543
  5336  0290                     _T2CLKCON	set	656
  5337  028E                     _T2CON	set	654
  5338  028E                     _T2CONbits	set	654
  5339  028F                     _T2HLT	set	655
  5340  028D                     _T2PR	set	653
  5341  0291                     _T2RST	set	657
  5342  028C                     _T2TMR	set	652
  5343  0392                     _PWM7CON	set	914
  5344  0391                     _PWM7DCH	set	913
  5345  0390                     _PWM7DCL	set	912
  5346  0716                     _PIE0bits	set	1814
  5347  0710                     _PIR4bits	set	1808
  5348  088D                     _OSCCON1	set	2189
  5349  088F                     _OSCCON3	set	2191
  5350  0891                     _OSCEN	set	2193
  5351  0893                     _OSCFRQ	set	2195
  5352  0892                     _OSCTUNE	set	2194
  5353  090C                     _FVRCON	set	2316
  5354  0E8F                     _PPSLOCK	set	3727
  5355  0E8F                     _PPSLOCKbits	set	3727
  5356  0F38                     _ANSELA	set	3896
  5357  0F43                     _ANSELB	set	3907
  5358  0F4E                     _ANSELC	set	3918
  5359  0F23                     _RC3PPS	set	3875
  5360  0F39                     _WPUA	set	3897
  5361  0F44                     _WPUB	set	3908
  5362  0F4F                     _WPUC	set	3919
  5363  0F65                     _WPUE	set	3941
  5364  101B                     STR_6:	
  5365  101B  3441               	retlw	65	;'A'
  5366  101C  346C               	retlw	108	;'l'
  5367  101D  3474               	retlw	116	;'t'
  5368  101E  3465               	retlw	101	;'e'
  5369  101F  3472               	retlw	114	;'r'
  5370  1020  3420               	retlw	32	;' '
  5371  1021  3477               	retlw	119	;'w'
  5372  1022  3469               	retlw	105	;'i'
  5373  1023  3474               	retlw	116	;'t'
  5374  1024  3468               	retlw	104	;'h'
  5375  1025  3420               	retlw	32	;' '
  5376  1026  3455               	retlw	85	;'U'
  5377  1027  3470               	retlw	112	;'p'
  5378  1028  342F               	retlw	47	;'/'
  5379  1029  3444               	retlw	68	;'D'
  5380  102A  346E               	retlw	110	;'n'
  5381  102B  3400               	retlw	0
  5382  102C                     STR_7:	
  5383  102C  3445               	retlw	69	;'E'
  5384  102D  346E               	retlw	110	;'n'
  5385  102E  3474               	retlw	116	;'t'
  5386  102F  3465               	retlw	101	;'e'
  5387  1030  3472               	retlw	114	;'r'
  5388  1031  3420               	retlw	32	;' '
  5389  1032  344B               	retlw	75	;'K'
  5390  1033  3465               	retlw	101	;'e'
  5391  1034  3479               	retlw	121	;'y'
  5392  1035  3420               	retlw	32	;' '
  5393  1036  3474               	retlw	116	;'t'
  5394  1037  346F               	retlw	111	;'o'
  5395  1038  3420               	retlw	32	;' '
  5396  1039  3453               	retlw	83	;'S'
  5397  103A  3465               	retlw	101	;'e'
  5398  103B  3474               	retlw	116	;'t'
  5399  103C  3400               	retlw	0
  5400  103D                     STR_5:	
  5401  103D  3420               	retlw	32	;' '
  5402  103E  3420               	retlw	32	;' '
  5403  103F  3420               	retlw	32	;' '
  5404  1040  3447               	retlw	71	;'G'
  5405  1041  346F               	retlw	111	;'o'
  5406  1042  346F               	retlw	111	;'o'
  5407  1043  3464               	retlw	100	;'d'
  5408  1044  342D               	retlw	45	;'-'
  5409  1045  3442               	retlw	66	;'B'
  5410  1046  3479               	retlw	121	;'y'
  5411  1047  3465               	retlw	101	;'e'
  5412  1048  3421               	retlw	33	;'!'
  5413  1049  3421               	retlw	33	;'!'
  5414  104A  3420               	retlw	32	;' '
  5415  104B  3420               	retlw	32	;' '
  5416  104C  3420               	retlw	32	;' '
  5417  104D  3400               	retlw	0
  5418  104E                     STR_4:	
  5419  104E  3445               	retlw	69	;'E'
  5420  104F  346E               	retlw	110	;'n'
  5421  1050  3474               	retlw	116	;'t'
  5422  1051  3465               	retlw	101	;'e'
  5423  1052  3472               	retlw	114	;'r'
  5424  1053  3420               	retlw	32	;' '
  5425  1054  3474               	retlw	116	;'t'
  5426  1055  346F               	retlw	111	;'o'
  5427  1056  3420               	retlw	32	;' '
  5428  1057  3453               	retlw	83	;'S'
  5429  1058  3465               	retlw	101	;'e'
  5430  1059  346C               	retlw	108	;'l'
  5431  105A  3465               	retlw	101	;'e'
  5432  105B  3463               	retlw	99	;'c'
  5433  105C  3474               	retlw	116	;'t'
  5434  105D  3420               	retlw	32	;' '
  5435  105E  3400               	retlw	0
  5436  105F                     STR_3:	
  5437  105F  3455               	retlw	85	;'U'
  5438  1060  3470               	retlw	112	;'p'
  5439  1061  342F               	retlw	47	;'/'
  5440  1062  3444               	retlw	68	;'D'
  5441  1063  346F               	retlw	111	;'o'
  5442  1064  3477               	retlw	119	;'w'
  5443  1065  346E               	retlw	110	;'n'
  5444  1066  3420               	retlw	32	;' '
  5445  1067  3474               	retlw	116	;'t'
  5446  1068  346F               	retlw	111	;'o'
  5447  1069  3420               	retlw	32	;' '
  5448  106A  3441               	retlw	65	;'A'
  5449  106B  346C               	retlw	108	;'l'
  5450  106C  3474               	retlw	116	;'t'
  5451  106D  3465               	retlw	101	;'e'
  5452  106E  3472               	retlw	114	;'r'
  5453  106F  3400               	retlw	0
  5454  1070                     STR_1:	
  5455  1070  3420               	retlw	32	;' '
  5456  1071  3450               	retlw	80	;'P'
  5457  1072  3469               	retlw	105	;'i'
  5458  1073  3474               	retlw	116	;'t'
  5459  1074  3420               	retlw	32	;' '
  5460  1075  3454               	retlw	84	;'T'
  5461  1076  3465               	retlw	101	;'e'
  5462  1077  346D               	retlw	109	;'m'
  5463  1078  3470               	retlw	112	;'p'
  5464  1079  343A               	retlw	58	;':'
  5465  107A  3400               	retlw	0
  5466  107B                     STR_2:	
  5467  107B  3442               	retlw	66	;'B'
  5468  107C  3461               	retlw	97	;'a'
  5469  107D  3463               	retlw	99	;'c'
  5470  107E  346B               	retlw	107	;'k'
  5471  107F  344C               	retlw	76	;'L'
  5472  1080  3469               	retlw	105	;'i'
  5473  1081  3467               	retlw	103	;'g'
  5474  1082  3468               	retlw	104	;'h'
  5475  1083  3474               	retlw	116	;'t'
  5476  1084  343A               	retlw	58	;':'
  5477  1085  3400               	retlw	0
  5478                           
  5479                           ; #config settings
  5480  0000                     
  5481                           	psect	cinit
  5482  07BE                     start_initialization:	
  5483  07BE                     __initialization:	
  5484                           
  5485                           ; Initialize objects allocated to BANK1
  5486  07BE  30E4               	movlw	low __pidataBANK1
  5487  07BF  0084               	movwf	4
  5488  07C0  3095               	movlw	(high __pidataBANK1)| (0+128)
  5489  07C1  0085               	movwf	5
  5490  07C2  30E6               	movlw	low __pdataBANK1
  5491  07C3  0086               	movwf	6
  5492  07C4  3000               	movlw	high __pdataBANK1
  5493  07C5  0087               	movwf	7
  5494  07C6  3009               	movlw	9
  5495  07C7  3195  25CD  3187   	fcall	init_ram
  5496                           
  5497                           ; Initialize objects allocated to BANK2
  5498  07CA  30E3               	movlw	low __pidataBANK2
  5499  07CB  0084               	movwf	4
  5500  07CC  3096               	movlw	(high __pidataBANK2)| (0+128)
  5501  07CD  0085               	movwf	5
  5502  07CE  3020               	movlw	low __pdataBANK2
  5503  07CF  0086               	movwf	6
  5504  07D0  3001               	movlw	high __pdataBANK2
  5505  07D1  0087               	movwf	7
  5506  07D2  3024               	movlw	36
  5507  07D3  3195  25CD  3187   	fcall	init_ram
  5508                           
  5509                           ; Clear objects allocated to BANK0
  5510  07D6  3068               	movlw	low __pbssBANK0
  5511  07D7  0084               	movwf	4
  5512  07D8  3000               	movlw	high __pbssBANK0
  5513  07D9  0085               	movwf	5
  5514  07DA  3008               	movlw	8
  5515  07DB  3195  25C7  3187   	fcall	clear_ram0
  5516                           
  5517                           ; Clear objects allocated to BANK1
  5518  07DE  30D5               	movlw	low __pbssBANK1
  5519  07DF  0084               	movwf	4
  5520  07E0  3000               	movlw	high __pbssBANK1
  5521  07E1  0085               	movwf	5
  5522  07E2  3011               	movlw	17
  5523  07E3  3195  25C7  3187   	fcall	clear_ram0
  5524                           
  5525                           ; Clear objects allocated to BANK2
  5526  07E6  3044               	movlw	low __pbssBANK2
  5527  07E7  0084               	movwf	4
  5528  07E8  3001               	movlw	high __pbssBANK2
  5529  07E9  0085               	movwf	5
  5530  07EA  3019               	movlw	25
  5531  07EB  3195  25C7  3187   	fcall	clear_ram0
  5532                           
  5533                           ; Clear objects allocated to BANK3
  5534  07EE  30A0               	movlw	low __pbssBANK3
  5535  07EF  0084               	movwf	4
  5536  07F0  3001               	movlw	high __pbssBANK3
  5537  07F1  0085               	movwf	5
  5538  07F2  3014               	movlw	20
  5539  07F3  3195  25C7  3187   	fcall	clear_ram0
  5540                           
  5541                           ; Clear objects allocated to BANK4
  5542  07F6  3020               	movlw	low __pbssBANK4
  5543  07F7  0084               	movwf	4
  5544  07F8  3002               	movlw	high __pbssBANK4
  5545  07F9  0085               	movwf	5
  5546  07FA  3050               	movlw	80
  5547  07FB  3195  25C7         	fcall	clear_ram0
  5548  07FD                     end_of_initialization:	
  5549                           ;End of C runtime variable initialization code
  5550                           
  5551  07FD                     __end_of__initialization:	
  5552  07FD  0020               	movlb	0
  5553  07FE  3185  2D3E         	ljmp	_main	;jump to C main() function
  5554                           
  5555                           	psect	bssBANK0
  5556  0068                     __pbssBANK0:	
  5557  0068                     _error:	
  5558  0068                     	ds	2
  5559  006A                     _pidIntegrated:	
  5560  006A                     	ds	2
  5561  006C                     _choice:	
  5562  006C                     	ds	1
  5563  006D                     _delayCount:	
  5564  006D                     	ds	1
  5565  006E                     _key:	
  5566  006E                     	ds	1
  5567  006F                     _timer2:	
  5568  006F                     	ds	1
  5569                           
  5570                           	psect	bssBANK1
  5571  00D5                     __pbssBANK1:	
  5572  00D5                     _Result:	
  5573  00D5                     	ds	2
  5574  00D7                     _derivativeValue:	
  5575  00D7                     	ds	2
  5576  00D9                     _errorValue:	
  5577  00D9                     	ds	2
  5578  00DB                     _integralValue:	
  5579  00DB                     	ds	2
  5580  00DD                     _lastError:	
  5581  00DD                     	ds	2
  5582  00DF                     _pidMinOutput:	
  5583  00DF                     	ds	2
  5584  00E1                     _sampleIndex:	
  5585  00E1                     	ds	2
  5586  00E3                     _timer:	
  5587  00E3                     	ds	2
  5588  00E5                     _testKey:	
  5589  00E5                     	ds	1
  5590                           
  5591                           	psect	dataBANK1
  5592  00E6                     __pdataBANK1:	
  5593  00E6                     _setpoint:	
  5594  00E6                     	ds	4
  5595  00EA                     _Ki:	
  5596  00EA                     	ds	2
  5597  00EC                     _pidMaxOutput:	
  5598  00EC                     	ds	2
  5599  00EE                     _loop:	
  5600  00EE                     	ds	1
  5601                           
  5602                           	psect	bssBANK2
  5603  0144                     __pbssBANK2:	
  5604  0144                     _totals:	
  5605  0144                     	ds	8
  5606  014C                     LCD_Write_Int@F13694:	
  5607  014C                     	ds	5
  5608  0151                     main@F13664:	
  5609  0151                     	ds	4
  5610  0155                     _D_PrevError:	
  5611  0155                     	ds	2
  5612  0157                     _errno:	
  5613  0157                     	ds	2
  5614  0159                     _menuDelay:	
  5615  0159                     	ds	2
  5616  015B                     _pidCount:	
  5617  015B                     	ds	2
  5618                           
  5619                           	psect	dataBANK2
  5620  0120                     __pdataBANK2:	
  5621  0120                     ___cgram:	
  5622  0120                     	ds	16
  5623  0130                     _channels:	
  5624  0130                     	ds	4
  5625  0134                     _desc:	
  5626  0134                     	ds	4
  5627  0138                     _highRangeSet:	
  5628  0138                     	ds	4
  5629  013C                     _lowRangeSet:	
  5630  013C                     	ds	4
  5631  0140                     _Kd:	
  5632  0140                     	ds	2
  5633  0142                     _Kp:	
  5634  0142                     	ds	2
  5635                           
  5636                           	psect	bssBANK3
  5637  01A0                     __pbssBANK3:	
  5638  01A0                     main@F13670:	
  5639  01A0                     	ds	20
  5640                           
  5641                           	psect	bssBANK4
  5642  0220                     __pbssBANK4:	
  5643  0220                     _samples:	
  5644  0220                     	ds	80
  5645                           
  5646                           	psect	inittext
  5647  15CD                     init_ram:	
  5648  15CD  00FE               	movwf	126
  5649  15CE                     initloop:	
  5650  15CE  0012               	moviw fsr0++
  5651  15CF  001E               	movwi fsr1++
  5652  15D0  0BFE               	decfsz	126,f
  5653  15D1  2DCE               	goto	initloop
  5654  15D2  3400               	retlw	0
  5655                           
  5656                           	psect	clrtext
  5657  15C7                     clear_ram0:	
  5658                           ;	Called with FSR0 containing the base address, and
  5659                           ;	WREG with the size to clear
  5660                           
  5661  15C7  0064               	clrwdt	;clear the watchdog before getting into this loop
  5662  15C8                     clrloop0:	
  5663  15C8  0180               	clrf	0	;clear RAM location pointed to by FSR
  5664  15C9  3101               	addfsr 0,1
  5665  15CA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5666  15CB  2DC8               	goto	clrloop0	;have we reached the end yet?
  5667  15CC  3400               	retlw	0	;all done for this memory range, return
  5668                           
  5669                           	psect	cstackBANK1
  5670  00A0                     __pcstackBANK1:	
  5671  00A0                     ??_main:	
  5672                           
  5673                           ; 1 bytes @ 0x0
  5674  00A0                     	ds	10
  5675  00AA                     main@outputSamples:	
  5676                           
  5677                           ; 20 bytes @ 0xA
  5678  00AA                     	ds	20
  5679  00BE                     main@x:	
  5680                           
  5681                           ; 1 bytes @ 0x1E
  5682  00BE                     	ds	1
  5683  00BF                     main@output:	
  5684                           
  5685                           ; 2 bytes @ 0x1F
  5686  00BF                     	ds	2
  5687  00C1                     main@holdOutput:	
  5688                           
  5689                           ; 1 bytes @ 0x21
  5690  00C1                     	ds	1
  5691  00C2                     main@lidOpenCount:	
  5692                           
  5693                           ; 1 bytes @ 0x22
  5694  00C2                     	ds	1
  5695  00C3                     main@lastTemperature:	
  5696                           
  5697                           ; 2 bytes @ 0x23
  5698  00C3                     	ds	2
  5699  00C5                     main@pidPeriodCounter:	
  5700                           
  5701                           ; 2 bytes @ 0x25
  5702  00C5                     	ds	2
  5703  00C7                     main@currentTemperature:	
  5704                           
  5705                           ; 2 bytes @ 0x27
  5706  00C7                     	ds	2
  5707  00C9                     main@outputTotal:	
  5708                           
  5709                           ; 4 bytes @ 0x29
  5710  00C9                     	ds	4
  5711  00CD                     main@dutyCycle6:	
  5712                           
  5713                           ; 2 bytes @ 0x2D
  5714  00CD                     	ds	2
  5715  00CF                     main@analogs:	
  5716                           
  5717                           ; 4 bytes @ 0x2F
  5718  00CF                     	ds	4
  5719  00D3                     main@outputIndex:	
  5720                           
  5721                           ; 1 bytes @ 0x33
  5722  00D3                     	ds	1
  5723  00D4                     main@j:	
  5724                           
  5725                           ; 1 bytes @ 0x34
  5726  00D4                     	ds	1
  5727                           
  5728                           	psect	cstackCOMMON
  5729  0070                     __pcstackCOMMON:	
  5730  0070                     ?___ftge:	
  5731  0070                     ?_LCD_Cmd:	
  5732                           ; 1 bit 
  5733                           
  5734  0070                     ?_LCD_Write_Char:	
  5735                           ; 1 bytes @ 0x0
  5736                           
  5737  0070                     ?_OSCILLATOR_Initialize:	
  5738                           ; 1 bytes @ 0x0
  5739                           
  5740  0070                     ??_OSCILLATOR_Initialize:	
  5741                           ; 1 bytes @ 0x0
  5742                           
  5743  0070                     ?_TMR2_Initialize:	
  5744                           ; 1 bytes @ 0x0
  5745                           
  5746  0070                     ??_TMR2_Initialize:	
  5747                           ; 1 bytes @ 0x0
  5748                           
  5749  0070                     ?_ADCC_Initialize:	
  5750                           ; 1 bytes @ 0x0
  5751                           
  5752  0070                     ??_ADCC_Initialize:	
  5753                           ; 1 bytes @ 0x0
  5754                           
  5755  0070                     ?_InitCustomChars:	
  5756                           ; 1 bytes @ 0x0
  5757                           
  5758  0070                     ?_LCD_Port:	
  5759                           ; 1 bytes @ 0x0
  5760                           
  5761  0070                     ??_LCD_Port:	
  5762                           ; 1 bytes @ 0x0
  5763                           
  5764  0070                     ?_LCD_Clear:	
  5765                           ; 1 bytes @ 0x0
  5766                           
  5767  0070                     ?_LCD_Init:	
  5768                           ; 1 bytes @ 0x0
  5769                           
  5770  0070                     ?_PIN_MANAGER_Initialize:	
  5771                           ; 1 bytes @ 0x0
  5772                           
  5773  0070                     ??_PIN_MANAGER_Initialize:	
  5774                           ; 1 bytes @ 0x0
  5775                           
  5776  0070                     ?_PWM_Initialize:	
  5777                           ; 1 bytes @ 0x0
  5778                           
  5779  0070                     ??_PWM_Initialize:	
  5780                           ; 1 bytes @ 0x0
  5781                           
  5782  0070                     ?_PWM7_LoadDutyValue:	
  5783                           ; 1 bytes @ 0x0
  5784                           
  5785  0070                     ?_SYSTEM_Initialize:	
  5786                           ; 1 bytes @ 0x0
  5787                           
  5788  0070                     ?_readKey:	
  5789                           ; 1 bytes @ 0x0
  5790                           
  5791  0070                     ??_readKey:	
  5792                           ; 1 bytes @ 0x0
  5793                           
  5794  0070                     ?_menuChoice:	
  5795                           ; 1 bytes @ 0x0
  5796                           
  5797  0070                     ?_main:	
  5798                           ; 1 bytes @ 0x0
  5799                           
  5800  0070                     ?___bmul:	
  5801                           ; 1 bytes @ 0x0
  5802                           
  5803  0070                     ?_ADCRead:	
  5804                           ; 1 bytes @ 0x0
  5805                           
  5806  0070                     ?___wmul:	
  5807                           ; 2 bytes @ 0x0
  5808                           
  5809  0070                     ?___awdiv:	
  5810                           ; 2 bytes @ 0x0
  5811                           
  5812  0070                     ?___awmod:	
  5813                           ; 2 bytes @ 0x0
  5814                           
  5815  0070                     ?___ftpack:	
  5816                           ; 2 bytes @ 0x0
  5817                           
  5818  0070                     ?_frexp:	
  5819                           ; 3 bytes @ 0x0
  5820                           
  5821  0070                     ?___aldiv:	
  5822                           ; 3 bytes @ 0x0
  5823                           
  5824  0070                     ?___fttol:	
  5825                           ; 4 bytes @ 0x0
  5826                           
  5827  0070                     LCD_Port@a:	
  5828                           ; 4 bytes @ 0x0
  5829                           
  5830  0070                     PIN_MANAGER_Initialize@state:	
  5831                           ; 1 bytes @ 0x0
  5832                           
  5833  0070                     ___bmul@multiplicand:	
  5834                           ; 1 bytes @ 0x0
  5835                           
  5836  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5837                           ; 1 bytes @ 0x0
  5838                           
  5839  0070                     ___wmul@multiplier:	
  5840                           ; 2 bytes @ 0x0
  5841                           
  5842  0070                     ___awdiv@divisor:	
  5843                           ; 2 bytes @ 0x0
  5844                           
  5845  0070                     ___awmod@divisor:	
  5846                           ; 2 bytes @ 0x0
  5847                           
  5848  0070                     ___ftpack@arg:	
  5849                           ; 2 bytes @ 0x0
  5850                           
  5851  0070                     ___ftge@ff1:	
  5852                           ; 3 bytes @ 0x0
  5853                           
  5854  0070                     ___fttol@f1:	
  5855                           ; 3 bytes @ 0x0
  5856                           
  5857  0070                     frexp@value:	
  5858                           ; 3 bytes @ 0x0
  5859                           
  5860  0070                     ___aldiv@divisor:	
  5861                           ; 3 bytes @ 0x0
  5862                           
  5863                           
  5864                           ; 4 bytes @ 0x0
  5865  0070                     	ds	1
  5866  0071                     ??_LCD_Cmd:	
  5867  0071                     ??_LCD_Write_Char:	
  5868                           ; 1 bytes @ 0x1
  5869                           
  5870  0071                     ??___bmul:	
  5871                           ; 1 bytes @ 0x1
  5872                           
  5873                           
  5874                           ; 1 bytes @ 0x1
  5875  0071                     	ds	1
  5876  0072                     ??_PWM7_LoadDutyValue:	
  5877  0072                     LCD_Write_Char@temp:	
  5878                           ; 1 bytes @ 0x2
  5879                           
  5880  0072                     ___bmul@product:	
  5881                           ; 1 bytes @ 0x2
  5882                           
  5883  0072                     ___wmul@multiplicand:	
  5884                           ; 1 bytes @ 0x2
  5885                           
  5886  0072                     ___awdiv@dividend:	
  5887                           ; 2 bytes @ 0x2
  5888                           
  5889  0072                     ___awmod@dividend:	
  5890                           ; 2 bytes @ 0x2
  5891                           
  5892                           
  5893                           ; 2 bytes @ 0x2
  5894  0072                     	ds	1
  5895  0073                     ??_ADCRead:	
  5896  0073                     ADCRead@channel:	
  5897                           ; 1 bytes @ 0x3
  5898                           
  5899  0073                     LCD_Cmd@a:	
  5900                           ; 1 bytes @ 0x3
  5901                           
  5902  0073                     LCD_Write_Char@y:	
  5903                           ; 1 bytes @ 0x3
  5904                           
  5905  0073                     ___bmul@multiplier:	
  5906                           ; 1 bytes @ 0x3
  5907                           
  5908  0073                     ___ftpack@exp:	
  5909                           ; 1 bytes @ 0x3
  5910                           
  5911  0073                     frexp@eptr:	
  5912                           ; 1 bytes @ 0x3
  5913                           
  5914  0073                     ___ftge@ff2:	
  5915                           ; 1 bytes @ 0x3
  5916                           
  5917                           
  5918                           ; 3 bytes @ 0x3
  5919  0073                     	ds	1
  5920  0074                     ??_frexp:	
  5921  0074                     ??_LCD_Clear:	
  5922                           ; 1 bytes @ 0x4
  5923                           
  5924  0074                     ?_LCD_Set_Cursor:	
  5925                           ; 1 bytes @ 0x4
  5926                           
  5927  0074                     ??_LCD_Init:	
  5928                           ; 1 bytes @ 0x4
  5929                           
  5930  0074                     ??___wmul:	
  5931                           ; 1 bytes @ 0x4
  5932                           
  5933  0074                     ??___awdiv:	
  5934                           ; 1 bytes @ 0x4
  5935                           
  5936  0074                     ??___awmod:	
  5937                           ; 1 bytes @ 0x4
  5938                           
  5939  0074                     ??___fttol:	
  5940                           ; 1 bytes @ 0x4
  5941                           
  5942  0074                     LCD_Set_Cursor@y:	
  5943                           ; 1 bytes @ 0x4
  5944                           
  5945  0074                     LCD_Write_Char@a:	
  5946                           ; 1 bytes @ 0x4
  5947                           
  5948  0074                     ___ftpack@sign:	
  5949                           ; 1 bytes @ 0x4
  5950                           
  5951  0074                     ___wmul@product:	
  5952                           ; 1 bytes @ 0x4
  5953                           
  5954  0074                     ___aldiv@dividend:	
  5955                           ; 2 bytes @ 0x4
  5956                           
  5957                           
  5958                           ; 4 bytes @ 0x4
  5959  0074                     	ds	1
  5960  0075                     ??___ftpack:	
  5961  0075                     ??_InitCustomChars:	
  5962                           ; 1 bytes @ 0x5
  5963                           
  5964  0075                     ??_LCD_Set_Cursor:	
  5965                           ; 1 bytes @ 0x5
  5966                           
  5967  0075                     ?_LCD_Write_String:	
  5968                           ; 1 bytes @ 0x5
  5969                           
  5970  0075                     ___awdiv@counter:	
  5971                           ; 1 bytes @ 0x5
  5972                           
  5973  0075                     ___awmod@counter:	
  5974                           ; 1 bytes @ 0x5
  5975                           
  5976  0075                     LCD_Write_String@a:	
  5977                           ; 1 bytes @ 0x5
  5978                           
  5979                           
  5980                           ; 2 bytes @ 0x5
  5981  0075                     	ds	1
  5982  0076                     ??___ftge:	
  5983  0076                     ?_PID_Calculate:	
  5984                           ; 1 bytes @ 0x6
  5985                           
  5986  0076                     InitCustomChars@i:	
  5987                           ; 2 bytes @ 0x6
  5988                           
  5989  0076                     ___awdiv@sign:	
  5990                           ; 1 bytes @ 0x6
  5991                           
  5992  0076                     ___awmod@sign:	
  5993                           ; 1 bytes @ 0x6
  5994                           
  5995  0076                     PID_Calculate@setpoint:	
  5996                           ; 1 bytes @ 0x6
  5997                           
  5998                           
  5999                           ; 2 bytes @ 0x6
  6000  0076                     	ds	1
  6001  0077                     ??_LCD_Write_String:	
  6002  0077                     LCD_Set_Cursor@x:	
  6003                           ; 1 bytes @ 0x7
  6004                           
  6005  0077                     LCD_Init@style:	
  6006                           ; 1 bytes @ 0x7
  6007                           
  6008  0077                     ___awdiv@quotient:	
  6009                           ; 1 bytes @ 0x7
  6010                           
  6011                           
  6012                           ; 2 bytes @ 0x7
  6013  0077                     	ds	1
  6014  0078                     ??_SYSTEM_Initialize:	
  6015  0078                     ??___aldiv:	
  6016                           ; 1 bytes @ 0x8
  6017                           
  6018  0078                     ?___awtoft:	
  6019                           ; 1 bytes @ 0x8
  6020                           
  6021  0078                     LCD_Set_Cursor@z:	
  6022                           ; 3 bytes @ 0x8
  6023                           
  6024  0078                     ___fttol@sign1:	
  6025                           ; 1 bytes @ 0x8
  6026                           
  6027  0078                     LCD_Write_String@i:	
  6028                           ; 1 bytes @ 0x8
  6029                           
  6030  0078                     PID_Calculate@temp:	
  6031                           ; 2 bytes @ 0x8
  6032                           
  6033  0078                     ___awtoft@c:	
  6034                           ; 2 bytes @ 0x8
  6035                           
  6036                           
  6037                           ; 2 bytes @ 0x8
  6038  0078                     	ds	1
  6039  0079                     ?_LCD_Write_Int:	
  6040  0079                     LCD_Set_Cursor@w:	
  6041                           ; 1 bytes @ 0x9
  6042                           
  6043  0079                     readAnalog@analog_channel:	
  6044                           ; 1 bytes @ 0x9
  6045                           
  6046  0079                     LCD_Write_Int@value:	
  6047                           ; 2 bytes @ 0x9
  6048                           
  6049  0079                     ___fttol@lval:	
  6050                           ; 2 bytes @ 0x9
  6051                           
  6052                           
  6053                           ; 4 bytes @ 0x9
  6054  0079                     	ds	1
  6055  007A                     ??_PID_Calculate:	
  6056  007A                     LCD_Set_Cursor@temp:	
  6057                           ; 1 bytes @ 0xA
  6058                           
  6059                           
  6060                           ; 1 bytes @ 0xA
  6061  007A                     	ds	1
  6062  007B                     ??___awtoft:	
  6063  007B                     LCD_Write_Int@fieldLength:	
  6064                           ; 1 bytes @ 0xB
  6065                           
  6066  007B                     readAnalog@value:	
  6067                           ; 1 bytes @ 0xB
  6068                           
  6069                           
  6070                           ; 2 bytes @ 0xB
  6071  007B                     	ds	1
  6072  007C                     LCD_Write_Int@numPlaces:	
  6073                           
  6074                           ; 1 bytes @ 0xC
  6075  007C                     	ds	1
  6076  007D                     LCD_Write_Int@sign:	
  6077  007D                     ___awtoft@sign:	
  6078                           ; 1 bytes @ 0xD
  6079                           
  6080  007D                     ___fttol@exp1:	
  6081                           ; 1 bytes @ 0xD
  6082                           
  6083                           
  6084                           ; 1 bytes @ 0xD
  6085  007D                     	ds	1
  6086  007E                     ??_eval_poly:	
  6087  007E                     ??_tempCalc:	
  6088                           ; 1 bytes @ 0xE
  6089                           
  6090  007E                     ??___ftsub:	
  6091                           ; 1 bytes @ 0xE
  6092                           
  6093                           
  6094                           	psect	cstackBANK0
  6095  0020                     __pcstackBANK0:	
  6096                           ; 1 bytes @ 0xE
  6097                           
  6098  0020                     ??_LCD_Write_Int:	
  6099  0020                     ?___ftmul:	
  6100                           ; 1 bytes @ 0x0
  6101                           
  6102  0020                     ___aldiv@counter:	
  6103                           ; 3 bytes @ 0x0
  6104                           
  6105  0020                     ___ftmul@f1:	
  6106                           ; 1 bytes @ 0x0
  6107                           
  6108                           
  6109                           ; 3 bytes @ 0x0
  6110  0020                     	ds	1
  6111  0021                     ___aldiv@sign:	
  6112                           
  6113                           ; 1 bytes @ 0x1
  6114  0021                     	ds	1
  6115  0022                     ___aldiv@quotient:	
  6116                           
  6117                           ; 4 bytes @ 0x2
  6118  0022                     	ds	1
  6119  0023                     ___ftmul@f2:	
  6120                           
  6121                           ; 3 bytes @ 0x3
  6122  0023                     	ds	2
  6123  0025                     LCD_Write_Int@str:	
  6124                           
  6125                           ; 5 bytes @ 0x5
  6126  0025                     	ds	1
  6127  0026                     ??___ftmul:	
  6128  0026                     ?_readAnalog:	
  6129                           ; 1 bytes @ 0x6
  6130                           
  6131  0026                     readAnalog@channel:	
  6132                           ; 2 bytes @ 0x6
  6133                           
  6134                           
  6135                           ; 2 bytes @ 0x6
  6136  0026                     	ds	2
  6137  0028                     ??_readAnalog:	
  6138                           
  6139                           ; 1 bytes @ 0x8
  6140  0028                     	ds	2
  6141  002A                     ___ftmul@exp:	
  6142  002A                     LCD_Write_Int@j:	
  6143                           ; 1 bytes @ 0xA
  6144                           
  6145                           
  6146                           ; 2 bytes @ 0xA
  6147  002A                     	ds	1
  6148  002B                     ___ftmul@f3_as_product:	
  6149                           
  6150                           ; 3 bytes @ 0xB
  6151  002B                     	ds	1
  6152  002C                     LCD_Write_Int@i:	
  6153                           
  6154                           ; 2 bytes @ 0xC
  6155  002C                     	ds	2
  6156  002E                     ??_menuChoice:	
  6157  002E                     ___ftmul@cntr:	
  6158                           ; 1 bytes @ 0xE
  6159                           
  6160                           
  6161                           ; 1 bytes @ 0xE
  6162  002E                     	ds	1
  6163  002F                     ___ftmul@sign:	
  6164                           
  6165                           ; 1 bytes @ 0xF
  6166  002F                     	ds	1
  6167  0030                     ?___ftdiv:	
  6168  0030                     ___ftdiv@f2:	
  6169                           ; 3 bytes @ 0x10
  6170                           
  6171                           
  6172                           ; 3 bytes @ 0x10
  6173  0030                     	ds	3
  6174  0033                     ___ftdiv@f1:	
  6175                           
  6176                           ; 3 bytes @ 0x13
  6177  0033                     	ds	3
  6178  0036                     ??___ftdiv:	
  6179                           
  6180                           ; 1 bytes @ 0x16
  6181  0036                     	ds	4
  6182  003A                     ___ftdiv@cntr:	
  6183                           
  6184                           ; 1 bytes @ 0x1A
  6185  003A                     	ds	1
  6186  003B                     ___ftdiv@f3:	
  6187                           
  6188                           ; 3 bytes @ 0x1B
  6189  003B                     	ds	3
  6190  003E                     ___ftdiv@exp:	
  6191                           
  6192                           ; 1 bytes @ 0x1E
  6193  003E                     	ds	1
  6194  003F                     ___ftdiv@sign:	
  6195                           
  6196                           ; 1 bytes @ 0x1F
  6197  003F                     	ds	1
  6198  0040                     ?___ftadd:	
  6199  0040                     ___ftadd@f1:	
  6200                           ; 3 bytes @ 0x20
  6201                           
  6202                           
  6203                           ; 3 bytes @ 0x20
  6204  0040                     	ds	3
  6205  0043                     ___ftadd@f2:	
  6206                           
  6207                           ; 3 bytes @ 0x23
  6208  0043                     	ds	3
  6209  0046                     ??___ftadd:	
  6210                           
  6211                           ; 1 bytes @ 0x26
  6212  0046                     	ds	4
  6213  004A                     ___ftadd@sign:	
  6214                           
  6215                           ; 1 bytes @ 0x2A
  6216  004A                     	ds	1
  6217  004B                     ___ftadd@exp2:	
  6218                           
  6219                           ; 1 bytes @ 0x2B
  6220  004B                     	ds	1
  6221  004C                     ___ftadd@exp1:	
  6222                           
  6223                           ; 1 bytes @ 0x2C
  6224  004C                     	ds	1
  6225  004D                     ?_eval_poly:	
  6226  004D                     ?___ftsub:	
  6227                           ; 3 bytes @ 0x2D
  6228                           
  6229  004D                     ___ftsub@f2:	
  6230                           ; 3 bytes @ 0x2D
  6231                           
  6232  004D                     eval_poly@x:	
  6233                           ; 3 bytes @ 0x2D
  6234                           
  6235                           
  6236                           ; 3 bytes @ 0x2D
  6237  004D                     	ds	3
  6238  0050                     eval_poly@d:	
  6239  0050                     ___ftsub@f1:	
  6240                           ; 2 bytes @ 0x30
  6241                           
  6242                           
  6243                           ; 3 bytes @ 0x30
  6244  0050                     	ds	2
  6245  0052                     eval_poly@n:	
  6246                           
  6247                           ; 2 bytes @ 0x32
  6248  0052                     	ds	2
  6249  0054                     eval_poly@res:	
  6250                           
  6251                           ; 3 bytes @ 0x34
  6252  0054                     	ds	3
  6253  0057                     ?_log:	
  6254  0057                     log@x:	
  6255                           ; 3 bytes @ 0x37
  6256                           
  6257                           
  6258                           ; 3 bytes @ 0x37
  6259  0057                     	ds	3
  6260  005A                     ??_log:	
  6261                           
  6262                           ; 1 bytes @ 0x3A
  6263  005A                     	ds	1
  6264  005B                     log@exponent:	
  6265                           
  6266                           ; 2 bytes @ 0x3B
  6267  005B                     	ds	2
  6268  005D                     ?_tempCalc:	
  6269  005D                     tempCalc@analogValue:	
  6270                           ; 2 bytes @ 0x3D
  6271                           
  6272                           
  6273                           ; 2 bytes @ 0x3D
  6274  005D                     	ds	2
  6275  005F                     tempCalc@R:	
  6276                           
  6277                           ; 3 bytes @ 0x3F
  6278  005F                     	ds	3
  6279  0062                     _tempCalc$1016:	
  6280                           
  6281                           ; 3 bytes @ 0x42
  6282  0062                     	ds	3
  6283  0065                     tempCalc@steinhart:	
  6284                           
  6285                           ; 3 bytes @ 0x45
  6286  0065                     	ds	3
  6287                           
  6288                           	psect	maintext
  6289  053E                     __pmaintext:	
  6290 ;;
  6291 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6292 ;;
  6293 ;; *************** function _main *****************
  6294 ;; Defined at:
  6295 ;;		line 29 in file "main.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  outputSample   20   10[BANK1 ] int [10]
  6300 ;;  analogs         4   47[BANK1 ] unsigned int [2]
  6301 ;;  outputTotal     4   41[BANK1 ] long 
  6302 ;;  dutyCycle6      2   45[BANK1 ] unsigned int 
  6303 ;;  currentTempe    2   39[BANK1 ] int 
  6304 ;;  pidPeriodCou    2   37[BANK1 ] int 
  6305 ;;  lastTemperat    2   35[BANK1 ] int 
  6306 ;;  output          2   31[BANK1 ] int 
  6307 ;;  j               1   52[BANK1 ] unsigned char 
  6308 ;;  outputIndex     1   51[BANK1 ] unsigned char 
  6309 ;;  lidOpenCount    1   34[BANK1 ] unsigned char 
  6310 ;;  holdOutput      1   33[BANK1 ] unsigned char 
  6311 ;;  x               1   30[BANK1 ] unsigned char 
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6316 ;; Tracked objects:
  6317 ;;		On entry : B1F/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6324 ;;      Totals:         0       0      53       0       0       0       0       0       0       0       0       0       
      +0       0
  6325 ;;Total ram usage:       53 bytes
  6326 ;; Hardware stack levels required when called:    5
  6327 ;; This function calls:
  6328 ;;		_LCD_Clear
  6329 ;;		_LCD_Set_Cursor
  6330 ;;		_LCD_Write_Char
  6331 ;;		_LCD_Write_Int
  6332 ;;		_LCD_Write_String
  6333 ;;		_PID_Calculate
  6334 ;;		_PWM7_LoadDutyValue
  6335 ;;		_SYSTEM_Initialize
  6336 ;;		___aldiv
  6337 ;;		_menuChoice
  6338 ;;		_readAnalog
  6339 ;;		_tempCalc
  6340 ;; This function is called by:
  6341 ;;		Startup code after reset
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           
  6346                           ;psect for function _main
  6347  053E                     _main:	
  6348                           
  6349                           ;main.c: 31: SYSTEM_Initialize();
  6350                           
  6351                           ;incstack = 0
  6352                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6353  053E  3188  2050  3185   	fcall	_SYSTEM_Initialize
  6354                           
  6355                           ;main.c: 33: uint16_t analogs[2] = {0};
  6356  0541  0022               	movlb	2	; select bank2
  6357  0542  0854               	movf	(main@F13664+3)^(0+256),w
  6358  0543  0021               	movlb	1	; select bank1
  6359  0544  00D2               	movwf	(main@analogs+3)^(0+128)
  6360  0545  0022               	movlb	2	; select bank2
  6361  0546  0853               	movf	(main@F13664+2)^(0+256),w
  6362  0547  0021               	movlb	1	; select bank1
  6363  0548  00D1               	movwf	(main@analogs+2)^(0+128)
  6364  0549  0022               	movlb	2	; select bank2
  6365  054A  0852               	movf	(main@F13664+1)^(0+256),w
  6366  054B  0021               	movlb	1	; select bank1
  6367  054C  00D0               	movwf	(main@analogs+1)^(0+128)
  6368  054D  0022               	movlb	2	; select bank2
  6369  054E  0851               	movf	main@F13664^(0+256),w
  6370  054F  0021               	movlb	1	; select bank1
  6371  0550  00CF               	movwf	main@analogs^(0+128)
  6372                           
  6373                           ;main.c: 35: extern int16_t setpoint[2];
  6374                           ;main.c: 43: int output = 0;
  6375  0551  01BF               	clrf	main@output^(0+128)
  6376  0552  01C0               	clrf	(main@output+1)^(0+128)
  6377                           
  6378                           ;main.c: 45: int32_t outputTotal = 0;
  6379  0553  3000               	movlw	0
  6380  0554  00CC               	movwf	(main@outputTotal+3)^(0+128)
  6381  0555  3000               	movlw	0
  6382  0556  00CB               	movwf	(main@outputTotal+2)^(0+128)
  6383  0557  3000               	movlw	0
  6384  0558  00CA               	movwf	(main@outputTotal+1)^(0+128)
  6385  0559  3000               	movlw	0
  6386  055A  00C9               	movwf	main@outputTotal^(0+128)
  6387                           
  6388                           ;main.c: 47: char outputIndex = 0;
  6389  055B  01D3               	clrf	main@outputIndex^(0+128)
  6390                           
  6391                           ;main.c: 49: int16_t outputSamples[10]= {0};
  6392  055C  30A0               	movlw	low main@F13670
  6393  055D  0086               	movwf	6
  6394  055E  3001               	movlw	high main@F13670
  6395  055F  0087               	movwf	7
  6396  0560  30AA               	movlw	low main@outputSamples
  6397  0561  0084               	movwf	4
  6398  0562  3000               	movlw	high main@outputSamples
  6399  0563  0085               	movwf	5
  6400  0564  3014               	movlw	20
  6401  0565  00A0               	movwf	??_main^(0+128)
  6402  0566                     u3760:	
  6403  0566  0016               	moviw fsr1++
  6404  0567  001A               	movwi fsr0++
  6405  0568  0BA0               	decfsz	??_main^(0+128),f
  6406  0569  2D66               	goto	u3760
  6407                           
  6408                           ;main.c: 51: char holdOutput = 0;
  6409  056A  01C1               	clrf	main@holdOutput^(0+128)
  6410                           
  6411                           ;main.c: 53: int currentTemperature = 750;
  6412  056B  30EE               	movlw	238
  6413  056C  00C7               	movwf	main@currentTemperature^(0+128)
  6414  056D  3002               	movlw	2
  6415  056E  00C8               	movwf	(main@currentTemperature^(0+128)+1)
  6416                           
  6417                           ;main.c: 55: int lastTemperature = 750;
  6418  056F  30EE               	movlw	238
  6419  0570  00C3               	movwf	main@lastTemperature^(0+128)
  6420  0571  3002               	movlw	2
  6421  0572  00C4               	movwf	(main@lastTemperature^(0+128)+1)
  6422                           
  6423                           ;main.c: 57: char lidOpenCount = 0;
  6424  0573  01C2               	clrf	main@lidOpenCount^(0+128)
  6425                           
  6426                           ;main.c: 61: char j = 0;
  6427  0574  01D4               	clrf	main@j^(0+128)
  6428                           
  6429                           ;main.c: 63: char x = 0;
  6430  0575  01BE               	clrf	main@x^(0+128)
  6431                           
  6432                           ;main.c: 65: int pidPeriodCounter = 0;
  6433  0576  01C5               	clrf	main@pidPeriodCounter^(0+128)
  6434  0577  01C6               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6435                           
  6436                           ;main.c: 67: extern int pidMaxOutput;
  6437                           ;main.c: 69: extern unsigned char loop;
  6438                           ;main.c: 84: uint16_t dutyCycle6 = 0;
  6439  0578  01CD               	clrf	main@dutyCycle6^(0+128)
  6440  0579  01CE               	clrf	(main@dutyCycle6+1)^(0+128)
  6441                           
  6442                           ;main.c: 90: PWM7_LoadDutyValue(setpoint[1]);
  6443  057A  0869               	movf	((_setpoint+1)^(0+128)+2),w
  6444  057B  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6445  057C  0868               	movf	(_setpoint^(0+128)+2),w
  6446  057D  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6447  057E  3196  2628  3185   	fcall	_PWM7_LoadDutyValue
  6448                           
  6449                           ;main.c: 92: _delay((unsigned long)((300)*(32000000/4000.0)));
  6450  0581  300D               	movlw	13
  6451  0582  0021               	movlb	1	; select bank1
  6452  0583  00A2               	movwf	(??_main^(0+128)+2)
  6453  0584  302D               	movlw	45
  6454  0585  00A1               	movwf	(??_main^(0+128)+1)
  6455  0586  30E2               	movlw	226
  6456  0587  00A0               	movwf	??_main^(0+128)
  6457  0588                     u3897:	
  6458  0588  0BA0               	decfsz	??_main^(0+128),f
  6459  0589  2D88               	goto	u3897
  6460  058A  0BA1               	decfsz	(??_main^(0+128)+1),f
  6461  058B  2D88               	goto	u3897
  6462  058C  0BA2               	decfsz	(??_main^(0+128)+2),f
  6463  058D  2D88               	goto	u3897
  6464  058E  3200               	nop2
  6465                           
  6466                           ;main.c: 94: LCD_Clear();
  6467  058F  3195  25D3  3185   	fcall	_LCD_Clear
  6468  0592                     l3213:	
  6469                           ;main.c: 96: while (1)
  6470                           
  6471                           
  6472                           ;main.c: 97: {
  6473                           ;main.c: 98: extern int16_t errorValue;
  6474                           ;main.c: 99: extern int16_t integralValue;
  6475                           ;main.c: 100: extern int16_t derivativeValue;
  6476                           ;main.c: 102: if(loop>253)
  6477  0592  30FE               	movlw	254
  6478  0593  0021               	movlb	1	; select bank1
  6479  0594  026E               	subwf	_loop^(0+128),w
  6480  0595  1C03               	skipc
  6481  0596  2F0B               	goto	l3281
  6482                           
  6483                           ;main.c: 103: {
  6484                           ;main.c: 104: PWM7_LoadDutyValue(setpoint[1]);
  6485  0597  0869               	movf	((_setpoint+1)^(0+128)+2),w
  6486  0598  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6487  0599  0868               	movf	(_setpoint^(0+128)+2),w
  6488  059A  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6489  059B  3196  2628  3185   	fcall	_PWM7_LoadDutyValue
  6490                           
  6491                           ;main.c: 106: { LCD_Set_Cursor(0,0); LCD_Write_Int(errorValue,5, 0, 0);};
  6492  059E  01F4               	clrf	LCD_Set_Cursor@y
  6493  059F  3000               	movlw	0
  6494  05A0  3188  2011  3185   	fcall	_LCD_Set_Cursor
  6495  05A3  0021               	movlb	1	; select bank1
  6496  05A4  085A               	movf	(_errorValue+1)^(0+128),w
  6497  05A5  00FA               	movwf	LCD_Write_Int@value+1
  6498  05A6  0859               	movf	_errorValue^(0+128),w
  6499  05A7  00F9               	movwf	LCD_Write_Int@value
  6500  05A8  3005               	movlw	5
  6501  05A9  00A0               	movwf	??_main^(0+128)
  6502  05AA  0820               	movf	??_main^(0+128),w
  6503  05AB  00FB               	movwf	LCD_Write_Int@fieldLength
  6504  05AC  01FC               	clrf	LCD_Write_Int@numPlaces
  6505  05AD  01FD               	clrf	LCD_Write_Int@sign
  6506  05AE  318D  2524  3185   	fcall	_LCD_Write_Int
  6507                           
  6508                           ;main.c: 107: LCD_Write_Char(' ');
  6509  05B1  3020               	movlw	32
  6510  05B2  3197  272D  3185   	fcall	_LCD_Write_Char
  6511                           
  6512                           ;main.c: 108: LCD_Write_Char(' ');
  6513  05B5  3020               	movlw	32
  6514  05B6  3197  272D  3185   	fcall	_LCD_Write_Char
  6515                           
  6516                           ;main.c: 109: { LCD_Set_Cursor(8,0); LCD_Write_Int(integralValue,5, 0, 0);};
  6517  05B9  01F4               	clrf	LCD_Set_Cursor@y
  6518  05BA  3008               	movlw	8
  6519  05BB  3188  2011  3185   	fcall	_LCD_Set_Cursor
  6520  05BE  0021               	movlb	1	; select bank1
  6521  05BF  085C               	movf	(_integralValue+1)^(0+128),w
  6522  05C0  00FA               	movwf	LCD_Write_Int@value+1
  6523  05C1  085B               	movf	_integralValue^(0+128),w
  6524  05C2  00F9               	movwf	LCD_Write_Int@value
  6525  05C3  3005               	movlw	5
  6526  05C4  00A0               	movwf	??_main^(0+128)
  6527  05C5  0820               	movf	??_main^(0+128),w
  6528  05C6  00FB               	movwf	LCD_Write_Int@fieldLength
  6529  05C7  01FC               	clrf	LCD_Write_Int@numPlaces
  6530  05C8  01FD               	clrf	LCD_Write_Int@sign
  6531  05C9  318D  2524  3185   	fcall	_LCD_Write_Int
  6532                           
  6533                           ;main.c: 110: LCD_Write_Char(' ');
  6534  05CC  3020               	movlw	32
  6535  05CD  3197  272D  3185   	fcall	_LCD_Write_Char
  6536                           
  6537                           ;main.c: 111: LCD_Write_Char(' ');
  6538  05D0  3020               	movlw	32
  6539  05D1  3197  272D  3185   	fcall	_LCD_Write_Char
  6540                           
  6541                           ;main.c: 113: { LCD_Set_Cursor(0,1); LCD_Write_Int(derivativeValue,5, 0, 0);};
  6542  05D4  01F4               	clrf	LCD_Set_Cursor@y
  6543  05D5  0AF4               	incf	LCD_Set_Cursor@y,f
  6544  05D6  3000               	movlw	0
  6545  05D7  3188  2011  3185   	fcall	_LCD_Set_Cursor
  6546  05DA  0021               	movlb	1	; select bank1
  6547  05DB  0858               	movf	(_derivativeValue+1)^(0+128),w
  6548  05DC  00FA               	movwf	LCD_Write_Int@value+1
  6549  05DD  0857               	movf	_derivativeValue^(0+128),w
  6550  05DE  00F9               	movwf	LCD_Write_Int@value
  6551  05DF  3005               	movlw	5
  6552  05E0  00A0               	movwf	??_main^(0+128)
  6553  05E1  0820               	movf	??_main^(0+128),w
  6554  05E2  00FB               	movwf	LCD_Write_Int@fieldLength
  6555  05E3  01FC               	clrf	LCD_Write_Int@numPlaces
  6556  05E4  01FD               	clrf	LCD_Write_Int@sign
  6557  05E5  318D  2524  3185   	fcall	_LCD_Write_Int
  6558                           
  6559                           ;main.c: 114: LCD_Write_Char(' ');
  6560  05E8  3020               	movlw	32
  6561  05E9  3197  272D  3185   	fcall	_LCD_Write_Char
  6562                           
  6563                           ;main.c: 115: { LCD_Set_Cursor(6,1); LCD_Write_Int(analogs[1],4, 1, 0);};
  6564  05EC  01F4               	clrf	LCD_Set_Cursor@y
  6565  05ED  0AF4               	incf	LCD_Set_Cursor@y,f
  6566  05EE  3006               	movlw	6
  6567  05EF  3188  2011  3185   	fcall	_LCD_Set_Cursor
  6568  05F2  0021               	movlb	1	; select bank1
  6569  05F3  0852               	movf	((main@analogs+1)^(0+128)+2),w
  6570  05F4  00FA               	movwf	LCD_Write_Int@value+1
  6571  05F5  0851               	movf	(main@analogs^(0+128)+2),w
  6572  05F6  00F9               	movwf	LCD_Write_Int@value
  6573  05F7  3004               	movlw	4
  6574  05F8  00A0               	movwf	??_main^(0+128)
  6575  05F9  0820               	movf	??_main^(0+128),w
  6576  05FA  00FB               	movwf	LCD_Write_Int@fieldLength
  6577  05FB  01FC               	clrf	LCD_Write_Int@numPlaces
  6578  05FC  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6579  05FD  01FD               	clrf	LCD_Write_Int@sign
  6580  05FE  318D  2524  3185   	fcall	_LCD_Write_Int
  6581                           
  6582                           ;main.c: 116: { LCD_Set_Cursor(12,1); LCD_Write_Int(dutyCycle6,4, 0, 0);};
  6583  0601  01F4               	clrf	LCD_Set_Cursor@y
  6584  0602  0AF4               	incf	LCD_Set_Cursor@y,f
  6585  0603  300C               	movlw	12
  6586  0604  3188  2011  3185   	fcall	_LCD_Set_Cursor
  6587  0607  0021               	movlb	1	; select bank1
  6588  0608  084E               	movf	(main@dutyCycle6+1)^(0+128),w
  6589  0609  00FA               	movwf	LCD_Write_Int@value+1
  6590  060A  084D               	movf	main@dutyCycle6^(0+128),w
  6591  060B  00F9               	movwf	LCD_Write_Int@value
  6592  060C  3004               	movlw	4
  6593  060D  00A0               	movwf	??_main^(0+128)
  6594  060E  0820               	movf	??_main^(0+128),w
  6595  060F  00FB               	movwf	LCD_Write_Int@fieldLength
  6596  0610  01FC               	clrf	LCD_Write_Int@numPlaces
  6597  0611  01FD               	clrf	LCD_Write_Int@sign
  6598  0612  318D  2524  3185   	fcall	_LCD_Write_Int
  6599                           
  6600                           ;main.c: 132: if(holdOutput==0)
  6601  0615  0021               	movlb	1	; select bank1
  6602  0616  0841               	movf	main@holdOutput^(0+128),w
  6603  0617  1D03               	btfss	3,2
  6604  0618  2EB2               	goto	l3255
  6605                           
  6606                           ;main.c: 133: {
  6607                           ;main.c: 134: output = PID_Calculate(setpoint[0]+20,analogs[1]);
  6608  0619  0866               	movf	_setpoint^(0+128),w
  6609  061A  3E14               	addlw	20
  6610  061B  00F6               	movwf	PID_Calculate@setpoint
  6611  061C  3000               	movlw	0
  6612  061D  3D67               	addwfc	(_setpoint+1)^(0+128),w
  6613  061E  00F7               	movwf	PID_Calculate@setpoint+1
  6614  061F  0852               	movf	((main@analogs+1)^(0+128)+2),w
  6615  0620  00F9               	movwf	PID_Calculate@temp+1
  6616  0621  0851               	movf	(main@analogs^(0+128)+2),w
  6617  0622  00F8               	movwf	PID_Calculate@temp
  6618  0623  3181  219B  3185   	fcall	_PID_Calculate
  6619  0626  0877               	movf	?_PID_Calculate+1,w
  6620  0627  0021               	movlb	1	; select bank1
  6621  0628  00C0               	movwf	(main@output+1)^(0+128)
  6622  0629  0876               	movf	?_PID_Calculate,w
  6623  062A  00BF               	movwf	main@output^(0+128)
  6624                           
  6625                           ;main.c: 135: outputTotal = outputTotal - outputSamples[outputIndex];
  6626  062B  0849               	movf	main@outputTotal^(0+128),w
  6627  062C  00A0               	movwf	??_main^(0+128)
  6628  062D  084A               	movf	(main@outputTotal+1)^(0+128),w
  6629  062E  00A1               	movwf	(??_main^(0+128)+1)
  6630  062F  084B               	movf	(main@outputTotal+2)^(0+128),w
  6631  0630  00A2               	movwf	(??_main^(0+128)+2)
  6632  0631  084C               	movf	(main@outputTotal+3)^(0+128),w
  6633  0632  00A3               	movwf	(??_main^(0+128)+3)
  6634  0633  3553               	lslf	main@outputIndex^(0+128),w
  6635  0634  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6636  0635  0086               	movwf	6
  6637  0636  0187               	clrf	7
  6638  0637  3F40               	moviw [0]fsr1
  6639  0638  00A4               	movwf	(??_main+4)^(0+128)
  6640  0639  3F41               	moviw [1]fsr1
  6641  063A  00A5               	movwf	((??_main+4)^(0+128)+1)
  6642  063B  0824               	movf	(??_main+4)^(0+128),w
  6643  063C  00A6               	movwf	(??_main+6)^(0+128)
  6644  063D  0825               	movf	(??_main+5)^(0+128),w
  6645  063E  00A7               	movwf	((??_main+6)^(0+128)+1)
  6646  063F  3000               	movlw	0
  6647  0640  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6648  0641  30FF               	movlw	255
  6649  0642  00A8               	movwf	((??_main+6)^(0+128)+2)
  6650  0643  00A9               	movwf	((??_main+6)^(0+128)+3)
  6651  0644  09A6               	comf	(??_main+6)^(0+128),f
  6652  0645  09A7               	comf	((??_main+6)^(0+128)+1),f
  6653  0646  09A8               	comf	((??_main+6)^(0+128)+2),f
  6654  0647  09A9               	comf	((??_main+6)^(0+128)+3),f
  6655  0648  0AA6               	incf	(??_main+6)^(0+128),f
  6656  0649  1903               	skipnz
  6657  064A  0AA7               	incf	((??_main+6)^(0+128)+1),f
  6658  064B  1903               	skipnz
  6659  064C  0AA8               	incf	((??_main+6)^(0+128)+2),f
  6660  064D  1903               	skipnz
  6661  064E  0AA9               	incf	((??_main+6)^(0+128)+3),f
  6662  064F  0826               	movf	(??_main+6)^(0+128),w
  6663  0650  07A0               	addwf	??_main^(0+128),f
  6664  0651  0827               	movf	(??_main+7)^(0+128),w
  6665  0652  3DA1               	addwfc	(??_main^(0+128)+1),f
  6666  0653  0828               	movf	(??_main+8)^(0+128),w
  6667  0654  3DA2               	addwfc	(??_main^(0+128)+2),f
  6668  0655  0829               	movf	(??_main+9)^(0+128),w
  6669  0656  3DA3               	addwfc	(??_main^(0+128)+3),f
  6670  0657  0823               	movf	(??_main+3)^(0+128),w
  6671  0658  00CC               	movwf	(main@outputTotal+3)^(0+128)
  6672  0659  0822               	movf	(??_main+2)^(0+128),w
  6673  065A  00CB               	movwf	(main@outputTotal+2)^(0+128)
  6674  065B  0821               	movf	(??_main+1)^(0+128),w
  6675  065C  00CA               	movwf	(main@outputTotal+1)^(0+128)
  6676  065D  0820               	movf	??_main^(0+128),w
  6677  065E  00C9               	movwf	main@outputTotal^(0+128)
  6678                           
  6679                           ;main.c: 136: outputSamples[outputIndex] = output;
  6680  065F  3553               	lslf	main@outputIndex^(0+128),w
  6681  0660  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6682  0661  0086               	movwf	6
  6683  0662  0187               	clrf	7
  6684  0663  083F               	movf	main@output^(0+128),w
  6685  0664  3FC0               	movwi [0]fsr1
  6686  0665  0840               	movf	(main@output+1)^(0+128),w
  6687  0666  3FC1               	movwi [1]fsr1
  6688                           
  6689                           ;main.c: 137: outputTotal = outputTotal + outputSamples[outputIndex];
  6690  0667  0849               	movf	main@outputTotal^(0+128),w
  6691  0668  00A0               	movwf	??_main^(0+128)
  6692  0669  084A               	movf	(main@outputTotal+1)^(0+128),w
  6693  066A  00A1               	movwf	(??_main^(0+128)+1)
  6694  066B  084B               	movf	(main@outputTotal+2)^(0+128),w
  6695  066C  00A2               	movwf	(??_main^(0+128)+2)
  6696  066D  084C               	movf	(main@outputTotal+3)^(0+128),w
  6697  066E  00A3               	movwf	(??_main^(0+128)+3)
  6698  066F  3553               	lslf	main@outputIndex^(0+128),w
  6699  0670  3EAA               	addlw	(low (main@outputSamples| 0))& (0+255)
  6700  0671  0086               	movwf	6
  6701  0672  0187               	clrf	7
  6702  0673  3F40               	moviw [0]fsr1
  6703  0674  00A4               	movwf	(??_main+4)^(0+128)
  6704  0675  3F41               	moviw [1]fsr1
  6705  0676  00A5               	movwf	((??_main+4)^(0+128)+1)
  6706  0677  0824               	movf	(??_main+4)^(0+128),w
  6707  0678  00A6               	movwf	(??_main+6)^(0+128)
  6708  0679  0825               	movf	(??_main+5)^(0+128),w
  6709  067A  00A7               	movwf	((??_main+6)^(0+128)+1)
  6710  067B  3000               	movlw	0
  6711  067C  1BA7               	btfsc	((??_main+6)^(0+128)+1),7
  6712  067D  30FF               	movlw	255
  6713  067E  00A8               	movwf	((??_main+6)^(0+128)+2)
  6714  067F  00A9               	movwf	((??_main+6)^(0+128)+3)
  6715  0680  0826               	movf	(??_main+6)^(0+128),w
  6716  0681  07A0               	addwf	??_main^(0+128),f
  6717  0682  0827               	movf	(??_main+7)^(0+128),w
  6718  0683  3DA1               	addwfc	(??_main^(0+128)+1),f
  6719  0684  0828               	movf	(??_main+8)^(0+128),w
  6720  0685  3DA2               	addwfc	(??_main^(0+128)+2),f
  6721  0686  0829               	movf	(??_main+9)^(0+128),w
  6722  0687  3DA3               	addwfc	(??_main^(0+128)+3),f
  6723  0688  0823               	movf	(??_main+3)^(0+128),w
  6724  0689  00CC               	movwf	(main@outputTotal+3)^(0+128)
  6725  068A  0822               	movf	(??_main+2)^(0+128),w
  6726  068B  00CB               	movwf	(main@outputTotal+2)^(0+128)
  6727  068C  0821               	movf	(??_main+1)^(0+128),w
  6728  068D  00CA               	movwf	(main@outputTotal+1)^(0+128)
  6729  068E  0820               	movf	??_main^(0+128),w
  6730  068F  00C9               	movwf	main@outputTotal^(0+128)
  6731                           
  6732                           ;main.c: 138: dutyCycle6 = outputTotal/10;
  6733  0690  3000               	movlw	0
  6734  0691  00F3               	movwf	___aldiv@divisor+3
  6735  0692  3000               	movlw	0
  6736  0693  00F2               	movwf	___aldiv@divisor+2
  6737  0694  3000               	movlw	0
  6738  0695  00F1               	movwf	___aldiv@divisor+1
  6739  0696  300A               	movlw	10
  6740  0697  00F0               	movwf	___aldiv@divisor
  6741  0698  084C               	movf	(main@outputTotal+3)^(0+128),w
  6742  0699  00F7               	movwf	___aldiv@dividend+3
  6743  069A  084B               	movf	(main@outputTotal+2)^(0+128),w
  6744  069B  00F6               	movwf	___aldiv@dividend+2
  6745  069C  084A               	movf	(main@outputTotal+1)^(0+128),w
  6746  069D  00F5               	movwf	___aldiv@dividend+1
  6747  069E  0849               	movf	main@outputTotal^(0+128),w
  6748  069F  00F4               	movwf	___aldiv@dividend
  6749  06A0  3189  2188  3185   	fcall	___aldiv
  6750  06A3  0871               	movf	?___aldiv+1,w
  6751  06A4  0021               	movlb	1	; select bank1
  6752  06A5  00CE               	movwf	(main@dutyCycle6+1)^(0+128)
  6753  06A6  0870               	movf	?___aldiv,w
  6754  06A7  00CD               	movwf	main@dutyCycle6^(0+128)
  6755                           
  6756                           ;main.c: 140: outputIndex+=1;
  6757  06A8  3001               	movlw	1
  6758  06A9  00A0               	movwf	??_main^(0+128)
  6759  06AA  0820               	movf	??_main^(0+128),w
  6760  06AB  07D3               	addwf	main@outputIndex^(0+128),f
  6761                           
  6762                           ;main.c: 141: if(outputIndex >= 10)outputIndex = 0;
  6763  06AC  300A               	movlw	10
  6764  06AD  0253               	subwf	main@outputIndex^(0+128),w
  6765  06AE  1C03               	skipc
  6766  06AF  2EB6               	goto	l3259
  6767  06B0  01D3               	clrf	main@outputIndex^(0+128)
  6768                           
  6769                           ;main.c: 142: }
  6770  06B1  2EB6               	goto	l3259
  6771  06B2                     l3255:	
  6772                           
  6773                           ;main.c: 143: else
  6774                           ;main.c: 144: {
  6775                           ;main.c: 145: dutyCycle6=0;
  6776  06B2  01CD               	clrf	main@dutyCycle6^(0+128)
  6777  06B3  01CE               	clrf	(main@dutyCycle6+1)^(0+128)
  6778                           
  6779                           ;main.c: 146: holdOutput-=1;
  6780  06B4  3001               	movlw	1
  6781  06B5  02C1               	subwf	main@holdOutput^(0+128),f
  6782  06B6                     l3259:	
  6783                           
  6784                           ;main.c: 147: }
  6785                           ;main.c: 149: currentTemperature=analogs[1];
  6786  06B6  0852               	movf	((main@analogs+1)^(0+128)+2),w
  6787  06B7  00C8               	movwf	(main@currentTemperature+1)^(0+128)
  6788  06B8  0851               	movf	(main@analogs^(0+128)+2),w
  6789  06B9  00C7               	movwf	main@currentTemperature^(0+128)
  6790                           
  6791                           ;main.c: 151: if(lidOpenCount<10)
  6792  06BA  300A               	movlw	10
  6793  06BB  0242               	subwf	main@lidOpenCount^(0+128),w
  6794  06BC  1803               	skipnc
  6795  06BD  2EC3               	goto	l3265
  6796                           
  6797                           ;main.c: 152: {
  6798                           ;main.c: 153: lidOpenCount+=1;
  6799  06BE  3001               	movlw	1
  6800  06BF  00A0               	movwf	??_main^(0+128)
  6801  06C0  0820               	movf	??_main^(0+128),w
  6802  06C1  07C2               	addwf	main@lidOpenCount^(0+128),f
  6803                           
  6804                           ;main.c: 154: }
  6805  06C2  2EC8               	goto	l3269
  6806  06C3                     l3265:	
  6807                           
  6808                           ;main.c: 155: else
  6809                           ;main.c: 156: {
  6810                           ;main.c: 157: lastTemperature=currentTemperature;
  6811  06C3  0848               	movf	(main@currentTemperature+1)^(0+128),w
  6812  06C4  00C4               	movwf	(main@lastTemperature+1)^(0+128)
  6813  06C5  0847               	movf	main@currentTemperature^(0+128),w
  6814  06C6  00C3               	movwf	main@lastTemperature^(0+128)
  6815                           
  6816                           ;main.c: 158: lidOpenCount=0;
  6817  06C7  01C2               	clrf	main@lidOpenCount^(0+128)
  6818  06C8                     l3269:	
  6819                           
  6820                           ;main.c: 159: }
  6821                           ;main.c: 161: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6822  06C8  0947               	comf	main@currentTemperature^(0+128),w
  6823  06C9  00A0               	movwf	??_main^(0+128)
  6824  06CA  0948               	comf	(main@currentTemperature+1)^(0+128),w
  6825  06CB  00A1               	movwf	(??_main^(0+128)+1)
  6826  06CC  0AA0               	incf	??_main^(0+128),f
  6827  06CD  1903               	skipnz
  6828  06CE  0AA1               	incf	(??_main^(0+128)+1),f
  6829  06CF  0843               	movf	main@lastTemperature^(0+128),w
  6830  06D0  0720               	addwf	??_main^(0+128),w
  6831  06D1  00A2               	movwf	(??_main+2)^(0+128)
  6832  06D2  0844               	movf	(main@lastTemperature+1)^(0+128),w
  6833  06D3  3D21               	addwfc	(??_main+1)^(0+128),w
  6834  06D4  00A3               	movwf	(??_main+3)^(0+128)
  6835  06D5  0823               	movf	(??_main+3)^(0+128),w
  6836  06D6  3A80               	xorlw	128
  6837  06D7  00A4               	movwf	(??_main+4)^(0+128)
  6838  06D8  3080               	movlw	128
  6839  06D9  0224               	subwf	(??_main+4)^(0+128),w
  6840  06DA  1D03               	skipz
  6841  06DB  2EDE               	goto	u3815
  6842  06DC  3065               	movlw	101
  6843  06DD  0222               	subwf	(??_main+2)^(0+128),w
  6844  06DE                     u3815:	
  6845  06DE  1803               	skipnc
  6846  06DF  2EF9               	goto	l3273
  6847  06E0  0021               	movlb	1	; select bank1
  6848  06E1  0947               	comf	main@currentTemperature^(0+128),w
  6849  06E2  00A0               	movwf	??_main^(0+128)
  6850  06E3  0948               	comf	(main@currentTemperature+1)^(0+128),w
  6851  06E4  00A1               	movwf	(??_main^(0+128)+1)
  6852  06E5  0AA0               	incf	??_main^(0+128),f
  6853  06E6  1903               	skipnz
  6854  06E7  0AA1               	incf	(??_main^(0+128)+1),f
  6855  06E8  0843               	movf	main@lastTemperature^(0+128),w
  6856  06E9  0720               	addwf	??_main^(0+128),w
  6857  06EA  00A2               	movwf	(??_main+2)^(0+128)
  6858  06EB  0844               	movf	(main@lastTemperature+1)^(0+128),w
  6859  06EC  3D21               	addwfc	(??_main+1)^(0+128),w
  6860  06ED  00A3               	movwf	(??_main+3)^(0+128)
  6861  06EE  0823               	movf	(??_main+3)^(0+128),w
  6862  06EF  3A80               	xorlw	128
  6863  06F0  00A4               	movwf	(??_main+4)^(0+128)
  6864  06F1  307F               	movlw	127
  6865  06F2  0224               	subwf	(??_main+4)^(0+128),w
  6866  06F3  1D03               	skipz
  6867  06F4  2EF7               	goto	u3825
  6868  06F5  309C               	movlw	156
  6869  06F6  0222               	subwf	(??_main+2)^(0+128),w
  6870  06F7                     u3825:	
  6871  06F7  1803               	skipnc
  6872  06F8  2F00               	goto	l3277
  6873  06F9                     l3273:	
  6874                           
  6875                           ;main.c: 162: {
  6876                           ;main.c: 163: dutyCycle6=0;
  6877  06F9  0021               	movlb	1	; select bank1
  6878  06FA  01CD               	clrf	main@dutyCycle6^(0+128)
  6879  06FB  01CE               	clrf	(main@dutyCycle6+1)^(0+128)
  6880                           
  6881                           ;main.c: 164: holdOutput=5;
  6882  06FC  3005               	movlw	5
  6883  06FD  00A0               	movwf	??_main^(0+128)
  6884  06FE  0820               	movf	??_main^(0+128),w
  6885  06FF  00C1               	movwf	main@holdOutput^(0+128)
  6886  0700                     l3277:	
  6887                           
  6888                           ;main.c: 165: }
  6889                           ;main.c: 167: if(dutyCycle6<50)dutyCycle6=0;
  6890  0700  3000               	movlw	0
  6891  0701  0021               	movlb	1	; select bank1
  6892  0702  024E               	subwf	(main@dutyCycle6+1)^(0+128),w
  6893  0703  3032               	movlw	50
  6894  0704  1903               	skipnz
  6895  0705  024D               	subwf	main@dutyCycle6^(0+128),w
  6896  0706  1803               	skipnc
  6897  0707  2F0A               	goto	l450
  6898  0708  01CD               	clrf	main@dutyCycle6^(0+128)
  6899  0709  01CE               	clrf	(main@dutyCycle6+1)^(0+128)
  6900  070A                     l450:	
  6901                           
  6902                           ;main.c: 169: loop=0;
  6903  070A  01EE               	clrf	_loop^(0+128)
  6904  070B                     l3281:	
  6905                           
  6906                           ;main.c: 170: }
  6907                           ;main.c: 172: pidPeriodCounter+=1;
  6908  070B  3001               	movlw	1
  6909  070C  07C5               	addwf	main@pidPeriodCounter^(0+128),f
  6910  070D  3000               	movlw	0
  6911  070E  3DC6               	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  6912                           
  6913                           ;main.c: 174: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  6914  070F  086D               	movf	(_pidMaxOutput+1)^(0+128),w
  6915  0710  3A80               	xorlw	128
  6916  0711  00A0               	movwf	??_main^(0+128)
  6917  0712  0846               	movf	(main@pidPeriodCounter+1)^(0+128),w
  6918  0713  3A80               	xorlw	128
  6919  0714  0220               	subwf	??_main^(0+128),w
  6920  0715  1D03               	skipz
  6921  0716  2F19               	goto	u3845
  6922  0717  0845               	movf	main@pidPeriodCounter^(0+128),w
  6923  0718  026C               	subwf	_pidMaxOutput^(0+128),w
  6924  0719                     u3845:	
  6925  0719  1803               	skipnc
  6926  071A  2F1E               	goto	l3287
  6927  071B  0021               	movlb	1	; select bank1
  6928  071C  01C5               	clrf	main@pidPeriodCounter^(0+128)
  6929  071D  01C6               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6930  071E                     l3287:	
  6931                           
  6932                           ;main.c: 176: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  6933  071E  0021               	movlb	1	; select bank1
  6934  071F  084E               	movf	(main@dutyCycle6+1)^(0+128),w
  6935  0720  0246               	subwf	(main@pidPeriodCounter+1)^(0+128),w
  6936  0721  1D03               	skipz
  6937  0722  2F25               	goto	u3855
  6938  0723  084D               	movf	main@dutyCycle6^(0+128),w
  6939  0724  0245               	subwf	main@pidPeriodCounter^(0+128),w
  6940  0725                     u3855:	
  6941  0725  1803               	skipnc
  6942  0726  2F2A               	goto	l452
  6943  0727  0020               	movlb	0	; select bank0
  6944  0728  1518               	bsf	24,2	;volatile
  6945  0729  2F2C               	goto	l3291
  6946  072A                     l452:	
  6947                           
  6948                           ;main.c: 177: else LATC2=0;
  6949  072A  0020               	movlb	0	; select bank0
  6950  072B  1118               	bcf	24,2	;volatile
  6951  072C                     l3291:	
  6952                           
  6953                           ;main.c: 179: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  6954  072C  0021               	movlb	1	; select bank1
  6955  072D  01D4               	clrf	main@j^(0+128)
  6956  072E  3002               	movlw	2
  6957  072F  0254               	subwf	main@j^(0+128),w
  6958  0730  1803               	btfsc	3,0
  6959  0731  2F52               	goto	l3303
  6960  0732                     l3297:	
  6961  0732  0854               	movf	main@j^(0+128),w
  6962  0733  00A0               	movwf	??_main^(0+128)
  6963  0734  01A1               	clrf	(??_main^(0+128)+1)
  6964  0735  0820               	movf	??_main^(0+128),w
  6965  0736  0020               	movlb	0	; select bank0
  6966  0737  00A6               	movwf	readAnalog@channel
  6967  0738  0021               	movlb	1	; select bank1
  6968  0739  0821               	movf	(??_main+1)^(0+128),w
  6969  073A  0020               	movlb	0	; select bank0
  6970  073B  00A7               	movwf	readAnalog@channel+1
  6971  073C  3180  207B  3185   	fcall	_readAnalog
  6972  073F  0021               	movlb	1	; select bank1
  6973  0740  3554               	lslf	main@j^(0+128),w
  6974  0741  3ECF               	addlw	(low (main@analogs| 0))& (0+255)
  6975  0742  0086               	movwf	6
  6976  0743  0187               	clrf	7
  6977  0744  0020               	movlb	0	; select bank0
  6978  0745  0826               	movf	?_readAnalog,w
  6979  0746  3FC0               	movwi [0]fsr1
  6980  0747  0827               	movf	?_readAnalog+1,w
  6981  0748  3FC1               	movwi [1]fsr1
  6982  0749  3001               	movlw	1
  6983  074A  0021               	movlb	1	; select bank1
  6984  074B  00A0               	movwf	??_main^(0+128)
  6985  074C  0820               	movf	??_main^(0+128),w
  6986  074D  07D4               	addwf	main@j^(0+128),f
  6987  074E  3002               	movlw	2
  6988  074F  0254               	subwf	main@j^(0+128),w
  6989  0750  1C03               	skipc
  6990  0751  2F32               	goto	l3297
  6991  0752                     l3303:	
  6992                           
  6993                           ;main.c: 181: analogs[0]=tempCalc(analogs[0]);
  6994  0752  0850               	movf	(main@analogs+1)^(0+128),w
  6995  0753  0020               	movlb	0	; select bank0
  6996  0754  00DE               	movwf	tempCalc@analogValue+1
  6997  0755  0021               	movlb	1	; select bank1
  6998  0756  084F               	movf	main@analogs^(0+128),w
  6999  0757  0020               	movlb	0	; select bank0
  7000  0758  00DD               	movwf	tempCalc@analogValue
  7001  0759  318E  26E3  3185   	fcall	_tempCalc
  7002  075C  0020               	movlb	0	; select bank0
  7003  075D  085E               	movf	?_tempCalc+1,w
  7004  075E  0021               	movlb	1	; select bank1
  7005  075F  00D0               	movwf	(main@analogs+1)^(0+128)
  7006  0760  0020               	movlb	0	; select bank0
  7007  0761  085D               	movf	?_tempCalc,w
  7008  0762  0021               	movlb	1	; select bank1
  7009  0763  00CF               	movwf	main@analogs^(0+128)
  7010                           
  7011                           ;main.c: 183: analogs[1]=tempCalc(analogs[1]);
  7012  0764  0852               	movf	((main@analogs+1)^(0+128)+2),w
  7013  0765  0020               	movlb	0	; select bank0
  7014  0766  00DE               	movwf	tempCalc@analogValue+1
  7015  0767  0021               	movlb	1	; select bank1
  7016  0768  0851               	movf	(main@analogs^(0+128)+2),w
  7017  0769  0020               	movlb	0	; select bank0
  7018  076A  00DD               	movwf	tempCalc@analogValue
  7019  076B  318E  26E3  3185   	fcall	_tempCalc
  7020  076E  0020               	movlb	0	; select bank0
  7021  076F  085E               	movf	?_tempCalc+1,w
  7022  0770  0021               	movlb	1	; select bank1
  7023  0771  00D2               	movwf	((main@analogs+1)^(0+128)+2)
  7024  0772  0020               	movlb	0	; select bank0
  7025  0773  085D               	movf	?_tempCalc,w
  7026  0774  0021               	movlb	1	; select bank1
  7027  0775  00D1               	movwf	(main@analogs^(0+128)+2)
  7028                           
  7029                           ;main.c: 186: if(RB2==1)
  7030  0776  0020               	movlb	0	; select bank0
  7031  0777  1D0D               	btfss	13,2	;volatile
  7032  0778  2FB8               	goto	l3323
  7033                           
  7034                           ;main.c: 187: {
  7035                           ;main.c: 188: TRISC2 = 1;
  7036  0779  1513               	bsf	19,2	;volatile
  7037                           
  7038                           ;main.c: 189: LCD_Clear();
  7039  077A  3195  25D3  3185   	fcall	_LCD_Clear
  7040                           
  7041                           ;main.c: 190: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7042  077D  01F4               	clrf	LCD_Set_Cursor@y
  7043  077E  3000               	movlw	0
  7044  077F  3188  2011  3185   	fcall	_LCD_Set_Cursor
  7045  0782  301B               	movlw	low (STR_6| (0+32768))
  7046  0783  00F5               	movwf	LCD_Write_String@a
  7047  0784  3090               	movlw	high (STR_6| (0+32768))
  7048  0785  00F6               	movwf	LCD_Write_String@a+1
  7049  0786  3196  2670  3185   	fcall	_LCD_Write_String
  7050                           
  7051                           ;main.c: 191: { LCD_Set_Cursor(0,1); LCD_Write_String("Enter Key to Set");};
  7052  0789  01F4               	clrf	LCD_Set_Cursor@y
  7053  078A  0AF4               	incf	LCD_Set_Cursor@y,f
  7054  078B  3000               	movlw	0
  7055  078C  3188  2011  3185   	fcall	_LCD_Set_Cursor
  7056  078F  302C               	movlw	low (STR_7| (0+32768))
  7057  0790  00F5               	movwf	LCD_Write_String@a
  7058  0791  3090               	movlw	high (STR_7| (0+32768))
  7059  0792  00F6               	movwf	LCD_Write_String@a+1
  7060  0793  3196  2670  3185   	fcall	_LCD_Write_String
  7061                           
  7062                           ;main.c: 192: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7063  0796  303D               	movlw	61
  7064  0797  0021               	movlb	1	; select bank1
  7065  0798  00A2               	movwf	(??_main^(0+128)+2)
  7066  0799  30E1               	movlw	225
  7067  079A  00A1               	movwf	(??_main^(0+128)+1)
  7068  079B  307A               	movlw	122
  7069  079C  00A0               	movwf	??_main^(0+128)
  7070  079D                     u3907:	
  7071  079D  0BA0               	decfsz	??_main^(0+128),f
  7072  079E  2F9D               	goto	u3907
  7073  079F  0BA1               	decfsz	(??_main^(0+128)+1),f
  7074  07A0  2F9D               	goto	u3907
  7075  07A1  0BA2               	decfsz	(??_main^(0+128)+2),f
  7076  07A2  2F9D               	goto	u3907
  7077  07A3  3200               	nop2
  7078                           
  7079                           ;main.c: 193: LCD_Clear();
  7080  07A4  3195  25D3  3185   	fcall	_LCD_Clear
  7081                           
  7082                           ;main.c: 194: menuChoice();
  7083  07A7  3183  2307  3185   	fcall	_menuChoice
  7084                           
  7085                           ;main.c: 195: _delay((unsigned long)((500)*(32000000/4000.0)));
  7086  07AA  3015               	movlw	21
  7087  07AB  0021               	movlb	1	; select bank1
  7088  07AC  00A2               	movwf	(??_main^(0+128)+2)
  7089  07AD  304B               	movlw	75
  7090  07AE  00A1               	movwf	(??_main^(0+128)+1)
  7091  07AF  30D1               	movlw	209
  7092  07B0  00A0               	movwf	??_main^(0+128)
  7093  07B1                     u3917:	
  7094  07B1  0BA0               	decfsz	??_main^(0+128),f
  7095  07B2  2FB1               	goto	u3917
  7096  07B3  0BA1               	decfsz	(??_main^(0+128)+1),f
  7097  07B4  2FB1               	goto	u3917
  7098  07B5  0BA2               	decfsz	(??_main^(0+128)+2),f
  7099  07B6  2FB1               	goto	u3917
  7100  07B7  0000               	nop
  7101  07B8                     l3323:	
  7102                           
  7103                           ;main.c: 196: }
  7104                           ;main.c: 432: loop+=1;
  7105  07B8  3001               	movlw	1
  7106  07B9  0021               	movlb	1	; select bank1
  7107  07BA  00A0               	movwf	??_main^(0+128)
  7108  07BB  0820               	movf	??_main^(0+128),w
  7109  07BC  07EE               	addwf	_loop^(0+128),f
  7110  07BD  2D92               	goto	l3213
  7111  07BE                     __end_of_main:	
  7112                           
  7113                           	psect	text1
  7114  0EE3                     __ptext1:	
  7115 ;; *************** function _tempCalc *****************
  7116 ;; Defined at:
  7117 ;;		line 4 in file "tempCalc.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  analogValue     2   61[BANK0 ] int 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  steinhart       3   69[BANK0 ] float 
  7122 ;;  R               3   63[BANK0 ] float 
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  2   61[BANK0 ] int 
  7125 ;; Registers used:
  7126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7133 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7135 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7136 ;;Total ram usage:       11 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; Hardware stack levels required when called:    4
  7139 ;; This function calls:
  7140 ;;		___awtoft
  7141 ;;		___ftadd
  7142 ;;		___ftdiv
  7143 ;;		___ftmul
  7144 ;;		___ftsub
  7145 ;;		___fttol
  7146 ;;		_log
  7147 ;; This function is called by:
  7148 ;;		_main
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           
  7153                           ;psect for function _tempCalc
  7154  0EE3                     _tempCalc:	
  7155                           
  7156                           ;tempCalc.c: 6: float R, steinhart;
  7157                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7158                           
  7159                           ;incstack = 0
  7160                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7161  0EE3  3000               	movlw	0
  7162  0EE4  0020               	movlb	0	; select bank0
  7163  0EE5  00C0               	movwf	___ftadd@f1
  7164  0EE6  3080               	movlw	128
  7165  0EE7  00C1               	movwf	___ftadd@f1+1
  7166  0EE8  30BF               	movlw	191
  7167  0EE9  00C2               	movwf	___ftadd@f1+2
  7168  0EEA  085E               	movf	tempCalc@analogValue+1,w
  7169  0EEB  00F9               	movwf	___awtoft@c+1
  7170  0EEC  085D               	movf	tempCalc@analogValue,w
  7171  0EED  00F8               	movwf	___awtoft@c
  7172  0EEE  3196  26C3  318E   	fcall	___awtoft
  7173  0EF1  0878               	movf	?___awtoft,w
  7174  0EF2  0020               	movlb	0	; select bank0
  7175  0EF3  00B0               	movwf	___ftdiv@f2
  7176  0EF4  0879               	movf	?___awtoft+1,w
  7177  0EF5  00B1               	movwf	___ftdiv@f2+1
  7178  0EF6  087A               	movf	?___awtoft+2,w
  7179  0EF7  00B2               	movwf	___ftdiv@f2+2
  7180  0EF8  30C0               	movlw	192
  7181  0EF9  00B3               	movwf	___ftdiv@f1
  7182  0EFA  307F               	movlw	127
  7183  0EFB  00B4               	movwf	___ftdiv@f1+1
  7184  0EFC  3044               	movlw	68
  7185  0EFD  00B5               	movwf	___ftdiv@f1+2
  7186  0EFE  318B  2317  318E   	fcall	___ftdiv
  7187  0F01  0020               	movlb	0	; select bank0
  7188  0F02  0830               	movf	?___ftdiv,w
  7189  0F03  00C3               	movwf	___ftadd@f2
  7190  0F04  0831               	movf	?___ftdiv+1,w
  7191  0F05  00C4               	movwf	___ftadd@f2+1
  7192  0F06  0832               	movf	?___ftdiv+2,w
  7193  0F07  00C5               	movwf	___ftadd@f2+2
  7194  0F08  318D  25ED  318E   	fcall	___ftadd
  7195  0F0B  0020               	movlb	0	; select bank0
  7196  0F0C  0840               	movf	?___ftadd,w
  7197  0F0D  00E2               	movwf	_tempCalc$1016
  7198  0F0E  0841               	movf	?___ftadd+1,w
  7199  0F0F  00E3               	movwf	_tempCalc$1016+1
  7200  0F10  0842               	movf	?___ftadd+2,w
  7201  0F11  00E4               	movwf	_tempCalc$1016+2
  7202                           
  7203                           ;tempCalc.c: 6: float R, steinhart;
  7204                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7205  0F12  0862               	movf	_tempCalc$1016,w
  7206  0F13  00B0               	movwf	___ftdiv@f2
  7207  0F14  0863               	movf	_tempCalc$1016+1,w
  7208  0F15  00B1               	movwf	___ftdiv@f2+1
  7209  0F16  0864               	movf	_tempCalc$1016+2,w
  7210  0F17  00B2               	movwf	___ftdiv@f2+2
  7211  0F18  3088               	movlw	136
  7212  0F19  00B3               	movwf	___ftdiv@f1
  7213  0F1A  301A               	movlw	26
  7214  0F1B  00B4               	movwf	___ftdiv@f1+1
  7215  0F1C  3046               	movlw	70
  7216  0F1D  00B5               	movwf	___ftdiv@f1+2
  7217  0F1E  318B  2317  318E   	fcall	___ftdiv
  7218  0F21  0020               	movlb	0	; select bank0
  7219  0F22  0830               	movf	?___ftdiv,w
  7220  0F23  00DF               	movwf	tempCalc@R
  7221  0F24  0831               	movf	?___ftdiv+1,w
  7222  0F25  00E0               	movwf	tempCalc@R+1
  7223  0F26  0832               	movf	?___ftdiv+2,w
  7224  0F27  00E1               	movwf	tempCalc@R+2
  7225                           
  7226                           ;tempCalc.c: 10: steinhart = R /9990;
  7227  0F28  3018               	movlw	24
  7228  0F29  00B0               	movwf	___ftdiv@f2
  7229  0F2A  301C               	movlw	28
  7230  0F2B  00B1               	movwf	___ftdiv@f2+1
  7231  0F2C  3046               	movlw	70
  7232  0F2D  00B2               	movwf	___ftdiv@f2+2
  7233  0F2E  085F               	movf	tempCalc@R,w
  7234  0F2F  00B3               	movwf	___ftdiv@f1
  7235  0F30  0860               	movf	tempCalc@R+1,w
  7236  0F31  00B4               	movwf	___ftdiv@f1+1
  7237  0F32  0861               	movf	tempCalc@R+2,w
  7238  0F33  00B5               	movwf	___ftdiv@f1+2
  7239  0F34  318B  2317  318E   	fcall	___ftdiv
  7240  0F37  0020               	movlb	0	; select bank0
  7241  0F38  0830               	movf	?___ftdiv,w
  7242  0F39  00E5               	movwf	tempCalc@steinhart
  7243  0F3A  0831               	movf	?___ftdiv+1,w
  7244  0F3B  00E6               	movwf	tempCalc@steinhart+1
  7245  0F3C  0832               	movf	?___ftdiv+2,w
  7246  0F3D  00E7               	movwf	tempCalc@steinhart+2
  7247                           
  7248                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7249  0F3E  0865               	movf	tempCalc@steinhart,w
  7250  0F3F  00D7               	movwf	log@x
  7251  0F40  0866               	movf	tempCalc@steinhart+1,w
  7252  0F41  00D8               	movwf	log@x+1
  7253  0F42  0867               	movf	tempCalc@steinhart+2,w
  7254  0F43  00D9               	movwf	log@x+2
  7255  0F44  318B  23C0  318E   	fcall	_log
  7256  0F47  0020               	movlb	0	; select bank0
  7257  0F48  0857               	movf	?_log,w
  7258  0F49  00E5               	movwf	tempCalc@steinhart
  7259  0F4A  0858               	movf	?_log+1,w
  7260  0F4B  00E6               	movwf	tempCalc@steinhart+1
  7261  0F4C  0859               	movf	?_log+2,w
  7262  0F4D  00E7               	movwf	tempCalc@steinhart+2
  7263                           
  7264                           ;tempCalc.c: 12: steinhart /= 4030;
  7265  0F4E  30E0               	movlw	224
  7266  0F4F  00B0               	movwf	___ftdiv@f2
  7267  0F50  307B               	movlw	123
  7268  0F51  00B1               	movwf	___ftdiv@f2+1
  7269  0F52  3045               	movlw	69
  7270  0F53  00B2               	movwf	___ftdiv@f2+2
  7271  0F54  0865               	movf	tempCalc@steinhart,w
  7272  0F55  00B3               	movwf	___ftdiv@f1
  7273  0F56  0866               	movf	tempCalc@steinhart+1,w
  7274  0F57  00B4               	movwf	___ftdiv@f1+1
  7275  0F58  0867               	movf	tempCalc@steinhart+2,w
  7276  0F59  00B5               	movwf	___ftdiv@f1+2
  7277  0F5A  318B  2317  318E   	fcall	___ftdiv
  7278  0F5D  0020               	movlb	0	; select bank0
  7279  0F5E  0830               	movf	?___ftdiv,w
  7280  0F5F  00E5               	movwf	tempCalc@steinhart
  7281  0F60  0831               	movf	?___ftdiv+1,w
  7282  0F61  00E6               	movwf	tempCalc@steinhart+1
  7283  0F62  0832               	movf	?___ftdiv+2,w
  7284  0F63  00E7               	movwf	tempCalc@steinhart+2
  7285                           
  7286                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  7287  0F64  30CF               	movlw	207
  7288  0F65  00C0               	movwf	___ftadd@f1
  7289  0F66  305B               	movlw	91
  7290  0F67  00C1               	movwf	___ftadd@f1+1
  7291  0F68  303B               	movlw	59
  7292  0F69  00C2               	movwf	___ftadd@f1+2
  7293  0F6A  0865               	movf	tempCalc@steinhart,w
  7294  0F6B  00C3               	movwf	___ftadd@f2
  7295  0F6C  0866               	movf	tempCalc@steinhart+1,w
  7296  0F6D  00C4               	movwf	___ftadd@f2+1
  7297  0F6E  0867               	movf	tempCalc@steinhart+2,w
  7298  0F6F  00C5               	movwf	___ftadd@f2+2
  7299  0F70  318D  25ED  318E   	fcall	___ftadd
  7300  0F73  0020               	movlb	0	; select bank0
  7301  0F74  0840               	movf	?___ftadd,w
  7302  0F75  00E5               	movwf	tempCalc@steinhart
  7303  0F76  0841               	movf	?___ftadd+1,w
  7304  0F77  00E6               	movwf	tempCalc@steinhart+1
  7305  0F78  0842               	movf	?___ftadd+2,w
  7306  0F79  00E7               	movwf	tempCalc@steinhart+2
  7307                           
  7308                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  7309  0F7A  0865               	movf	tempCalc@steinhart,w
  7310  0F7B  00B0               	movwf	___ftdiv@f2
  7311  0F7C  0866               	movf	tempCalc@steinhart+1,w
  7312  0F7D  00B1               	movwf	___ftdiv@f2+1
  7313  0F7E  0867               	movf	tempCalc@steinhart+2,w
  7314  0F7F  00B2               	movwf	___ftdiv@f2+2
  7315  0F80  3000               	movlw	0
  7316  0F81  00B3               	movwf	___ftdiv@f1
  7317  0F82  3080               	movlw	128
  7318  0F83  00B4               	movwf	___ftdiv@f1+1
  7319  0F84  303F               	movlw	63
  7320  0F85  00B5               	movwf	___ftdiv@f1+2
  7321  0F86  318B  2317  318E   	fcall	___ftdiv
  7322  0F89  0020               	movlb	0	; select bank0
  7323  0F8A  0830               	movf	?___ftdiv,w
  7324  0F8B  00E5               	movwf	tempCalc@steinhart
  7325  0F8C  0831               	movf	?___ftdiv+1,w
  7326  0F8D  00E6               	movwf	tempCalc@steinhart+1
  7327  0F8E  0832               	movf	?___ftdiv+2,w
  7328  0F8F  00E7               	movwf	tempCalc@steinhart+2
  7329                           
  7330                           ;tempCalc.c: 17: steinhart -= 273.15;
  7331  0F90  3093               	movlw	147
  7332  0F91  00CD               	movwf	___ftsub@f2
  7333  0F92  3088               	movlw	136
  7334  0F93  00CE               	movwf	___ftsub@f2+1
  7335  0F94  3043               	movlw	67
  7336  0F95  00CF               	movwf	___ftsub@f2+2
  7337  0F96  0865               	movf	tempCalc@steinhart,w
  7338  0F97  00D0               	movwf	___ftsub@f1
  7339  0F98  0866               	movf	tempCalc@steinhart+1,w
  7340  0F99  00D1               	movwf	___ftsub@f1+1
  7341  0F9A  0867               	movf	tempCalc@steinhart+2,w
  7342  0F9B  00D2               	movwf	___ftsub@f1+2
  7343  0F9C  3196  26A5  318E   	fcall	___ftsub
  7344  0F9F  0020               	movlb	0	; select bank0
  7345  0FA0  084D               	movf	?___ftsub,w
  7346  0FA1  00E5               	movwf	tempCalc@steinhart
  7347  0FA2  084E               	movf	?___ftsub+1,w
  7348  0FA3  00E6               	movwf	tempCalc@steinhart+1
  7349  0FA4  084F               	movf	?___ftsub+2,w
  7350  0FA5  00E7               	movwf	tempCalc@steinhart+2
  7351                           
  7352                           ;tempCalc.c: 19: steinhart*=10;
  7353  0FA6  3000               	movlw	0
  7354  0FA7  00A0               	movwf	___ftmul@f1
  7355  0FA8  3020               	movlw	32
  7356  0FA9  00A1               	movwf	___ftmul@f1+1
  7357  0FAA  3041               	movlw	65
  7358  0FAB  00A2               	movwf	___ftmul@f1+2
  7359  0FAC  0865               	movf	tempCalc@steinhart,w
  7360  0FAD  00A3               	movwf	___ftmul@f2
  7361  0FAE  0866               	movf	tempCalc@steinhart+1,w
  7362  0FAF  00A4               	movwf	___ftmul@f2+1
  7363  0FB0  0867               	movf	tempCalc@steinhart+2,w
  7364  0FB1  00A5               	movwf	___ftmul@f2+2
  7365  0FB2  318C  2470  318E   	fcall	___ftmul
  7366  0FB5  0020               	movlb	0	; select bank0
  7367  0FB6  0820               	movf	?___ftmul,w
  7368  0FB7  00E5               	movwf	tempCalc@steinhart
  7369  0FB8  0821               	movf	?___ftmul+1,w
  7370  0FB9  00E6               	movwf	tempCalc@steinhart+1
  7371  0FBA  0822               	movf	?___ftmul+2,w
  7372  0FBB  00E7               	movwf	tempCalc@steinhart+2
  7373                           
  7374                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  7375  0FBC  3000               	movlw	0
  7376  0FBD  00C0               	movwf	___ftadd@f1
  7377  0FBE  30A0               	movlw	160
  7378  0FBF  00C1               	movwf	___ftadd@f1+1
  7379  0FC0  3043               	movlw	67
  7380  0FC1  00C2               	movwf	___ftadd@f1+2
  7381  0FC2  3000               	movlw	0
  7382  0FC3  00B0               	movwf	___ftdiv@f2
  7383  0FC4  30A0               	movlw	160
  7384  0FC5  00B1               	movwf	___ftdiv@f2+1
  7385  0FC6  3040               	movlw	64
  7386  0FC7  00B2               	movwf	___ftdiv@f2+2
  7387  0FC8  3000               	movlw	0
  7388  0FC9  00A0               	movwf	___ftmul@f1
  7389  0FCA  3010               	movlw	16
  7390  0FCB  00A1               	movwf	___ftmul@f1+1
  7391  0FCC  3041               	movlw	65
  7392  0FCD  00A2               	movwf	___ftmul@f1+2
  7393  0FCE  0865               	movf	tempCalc@steinhart,w
  7394  0FCF  00A3               	movwf	___ftmul@f2
  7395  0FD0  0866               	movf	tempCalc@steinhart+1,w
  7396  0FD1  00A4               	movwf	___ftmul@f2+1
  7397  0FD2  0867               	movf	tempCalc@steinhart+2,w
  7398  0FD3  00A5               	movwf	___ftmul@f2+2
  7399  0FD4  318C  2470  318E   	fcall	___ftmul
  7400  0FD7  0020               	movlb	0	; select bank0
  7401  0FD8  0820               	movf	?___ftmul,w
  7402  0FD9  00B3               	movwf	___ftdiv@f1
  7403  0FDA  0821               	movf	?___ftmul+1,w
  7404  0FDB  00B4               	movwf	___ftdiv@f1+1
  7405  0FDC  0822               	movf	?___ftmul+2,w
  7406  0FDD  00B5               	movwf	___ftdiv@f1+2
  7407  0FDE  318B  2317  318E   	fcall	___ftdiv
  7408  0FE1  0020               	movlb	0	; select bank0
  7409  0FE2  0830               	movf	?___ftdiv,w
  7410  0FE3  00C3               	movwf	___ftadd@f2
  7411  0FE4  0831               	movf	?___ftdiv+1,w
  7412  0FE5  00C4               	movwf	___ftadd@f2+1
  7413  0FE6  0832               	movf	?___ftdiv+2,w
  7414  0FE7  00C5               	movwf	___ftadd@f2+2
  7415  0FE8  318D  25ED  318E   	fcall	___ftadd
  7416  0FEB  0020               	movlb	0	; select bank0
  7417  0FEC  0840               	movf	?___ftadd,w
  7418  0FED  00E5               	movwf	tempCalc@steinhart
  7419  0FEE  0841               	movf	?___ftadd+1,w
  7420  0FEF  00E6               	movwf	tempCalc@steinhart+1
  7421  0FF0  0842               	movf	?___ftadd+2,w
  7422  0FF1  00E7               	movwf	tempCalc@steinhart+2
  7423                           
  7424                           ;tempCalc.c: 23: return (int)steinhart;
  7425  0FF2  0865               	movf	tempCalc@steinhart,w
  7426  0FF3  00F0               	movwf	___fttol@f1
  7427  0FF4  0866               	movf	tempCalc@steinhart+1,w
  7428  0FF5  00F1               	movwf	___fttol@f1+1
  7429  0FF6  0867               	movf	tempCalc@steinhart+2,w
  7430  0FF7  00F2               	movwf	___fttol@f1+2
  7431  0FF8  318A  220A         	fcall	___fttol
  7432  0FFA  0871               	movf	?___fttol+1,w
  7433  0FFB  0020               	movlb	0	; select bank0
  7434  0FFC  00DE               	movwf	?_tempCalc+1
  7435  0FFD  0870               	movf	?___fttol,w
  7436  0FFE  00DD               	movwf	?_tempCalc
  7437  0FFF  0008               	return
  7438  1000                     __end_of_tempCalc:	
  7439                           
  7440                           	psect	text2
  7441  0BC0                     __ptext2:	
  7442 ;; *************** function _log *****************
  7443 ;; Defined at:
  7444 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  x               3   55[BANK0 ] int 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  exponent        2   59[BANK0 ] int 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  3   55[BANK0 ] int 
  7451 ;; Registers used:
  7452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7458 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;Total ram usage:        6 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; Hardware stack levels required when called:    3
  7465 ;; This function calls:
  7466 ;;		___awtoft
  7467 ;;		___ftadd
  7468 ;;		___ftge
  7469 ;;		___ftmul
  7470 ;;		_eval_poly
  7471 ;;		_frexp
  7472 ;; This function is called by:
  7473 ;;		_tempCalc
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           
  7478                           ;psect for function _log
  7479  0BC0                     _log:	
  7480                           
  7481                           ;incstack = 0
  7482                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7483  0BC0  0020               	movlb	0	; select bank0
  7484  0BC1  0857               	movf	log@x,w
  7485  0BC2  00F0               	movwf	___ftge@ff1
  7486  0BC3  0858               	movf	log@x+1,w
  7487  0BC4  00F1               	movwf	___ftge@ff1+1
  7488  0BC5  0859               	movf	log@x+2,w
  7489  0BC6  00F2               	movwf	___ftge@ff1+2
  7490  0BC7  3000               	movlw	0
  7491  0BC8  00F3               	movwf	___ftge@ff2
  7492  0BC9  3000               	movlw	0
  7493  0BCA  00F4               	movwf	___ftge@ff2+1
  7494  0BCB  3000               	movlw	0
  7495  0BCC  00F5               	movwf	___ftge@ff2+2
  7496  0BCD  3197  278A  318B   	fcall	___ftge
  7497  0BD0  1803               	btfsc	3,0
  7498  0BD1  2BDF               	goto	l2737
  7499  0BD2  3021               	movlw	33
  7500  0BD3  0022               	movlb	2	; select bank2
  7501  0BD4  00D7               	movwf	_errno^(0+256)
  7502  0BD5  3000               	movlw	0
  7503  0BD6  00D8               	movwf	(_errno^(0+256)+1)
  7504  0BD7  3000               	movlw	0
  7505  0BD8  0020               	movlb	0	; select bank0
  7506  0BD9  00D7               	movwf	?_log
  7507  0BDA  3000               	movlw	0
  7508  0BDB  00D8               	movwf	?_log+1
  7509  0BDC  3000               	movlw	0
  7510  0BDD  00D9               	movwf	?_log+2
  7511  0BDE  0008               	return
  7512  0BDF                     l2737:	
  7513  0BDF  0020               	movlb	0	; select bank0
  7514  0BE0  0859               	movf	log@x+2,w
  7515  0BE1  0458               	iorwf	log@x+1,w
  7516  0BE2  0457               	iorwf	log@x,w
  7517  0BE3  1D03               	skipz
  7518  0BE4  2BF2               	goto	l2743
  7519  0BE5  3022               	movlw	34
  7520  0BE6  0022               	movlb	2	; select bank2
  7521  0BE7  00D7               	movwf	_errno^(0+256)
  7522  0BE8  3000               	movlw	0
  7523  0BE9  00D8               	movwf	(_errno^(0+256)+1)
  7524  0BEA  3000               	movlw	0
  7525  0BEB  0020               	movlb	0	; select bank0
  7526  0BEC  00D7               	movwf	?_log
  7527  0BED  3000               	movlw	0
  7528  0BEE  00D8               	movwf	?_log+1
  7529  0BEF  3000               	movlw	0
  7530  0BF0  00D9               	movwf	?_log+2
  7531  0BF1  0008               	return
  7532  0BF2                     l2743:	
  7533  0BF2  3000               	movlw	0
  7534  0BF3  00C0               	movwf	___ftadd@f1
  7535  0BF4  3080               	movlw	128
  7536  0BF5  00C1               	movwf	___ftadd@f1+1
  7537  0BF6  30BF               	movlw	191
  7538  0BF7  00C2               	movwf	___ftadd@f1+2
  7539  0BF8  3000               	movlw	0
  7540  0BF9  00A0               	movwf	___ftmul@f1
  7541  0BFA  3000               	movlw	0
  7542  0BFB  00A1               	movwf	___ftmul@f1+1
  7543  0BFC  3040               	movlw	64
  7544  0BFD  00A2               	movwf	___ftmul@f1+2
  7545  0BFE  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7546  0BFF  00DA               	movwf	??_log
  7547  0C00  085A               	movf	??_log,w
  7548  0C01  00F3               	movwf	frexp@eptr
  7549  0C02  0857               	movf	log@x,w
  7550  0C03  00F0               	movwf	frexp@value
  7551  0C04  0858               	movf	log@x+1,w
  7552  0C05  00F1               	movwf	frexp@value+1
  7553  0C06  0859               	movf	log@x+2,w
  7554  0C07  00F2               	movwf	frexp@value+2
  7555  0C08  3197  27C5  318B   	fcall	_frexp
  7556  0C0B  0870               	movf	?_frexp,w
  7557  0C0C  0020               	movlb	0	; select bank0
  7558  0C0D  00A3               	movwf	___ftmul@f2
  7559  0C0E  0871               	movf	?_frexp+1,w
  7560  0C0F  00A4               	movwf	___ftmul@f2+1
  7561  0C10  0872               	movf	?_frexp+2,w
  7562  0C11  00A5               	movwf	___ftmul@f2+2
  7563  0C12  318C  2470  318B   	fcall	___ftmul
  7564  0C15  0020               	movlb	0	; select bank0
  7565  0C16  0820               	movf	?___ftmul,w
  7566  0C17  00C3               	movwf	___ftadd@f2
  7567  0C18  0821               	movf	?___ftmul+1,w
  7568  0C19  00C4               	movwf	___ftadd@f2+1
  7569  0C1A  0822               	movf	?___ftmul+2,w
  7570  0C1B  00C5               	movwf	___ftadd@f2+2
  7571  0C1C  318D  25ED  318B   	fcall	___ftadd
  7572  0C1F  0020               	movlb	0	; select bank0
  7573  0C20  0840               	movf	?___ftadd,w
  7574  0C21  00D7               	movwf	log@x
  7575  0C22  0841               	movf	?___ftadd+1,w
  7576  0C23  00D8               	movwf	log@x+1
  7577  0C24  0842               	movf	?___ftadd+2,w
  7578  0C25  00D9               	movwf	log@x+2
  7579  0C26  30FF               	movlw	255
  7580  0C27  07DB               	addwf	log@exponent,f
  7581  0C28  30FF               	movlw	255
  7582  0C29  3DDC               	addwfc	log@exponent+1,f
  7583  0C2A  0857               	movf	log@x,w
  7584  0C2B  00CD               	movwf	eval_poly@x
  7585  0C2C  0858               	movf	log@x+1,w
  7586  0C2D  00CE               	movwf	eval_poly@x+1
  7587  0C2E  0859               	movf	log@x+2,w
  7588  0C2F  00CF               	movwf	eval_poly@x+2
  7589  0C30  3000               	movlw	low (log@coeff| (0+32768))
  7590  0C31  00D0               	movwf	eval_poly@d
  7591  0C32  3090               	movlw	high (log@coeff| (0+32768))
  7592  0C33  00D1               	movwf	eval_poly@d+1
  7593  0C34  3008               	movlw	8
  7594  0C35  00D2               	movwf	eval_poly@n
  7595  0C36  3000               	movlw	0
  7596  0C37  00D3               	movwf	eval_poly@n+1
  7597  0C38  3189  2128  318B   	fcall	_eval_poly
  7598  0C3B  0020               	movlb	0	; select bank0
  7599  0C3C  084D               	movf	?_eval_poly,w
  7600  0C3D  00D7               	movwf	log@x
  7601  0C3E  084E               	movf	?_eval_poly+1,w
  7602  0C3F  00D8               	movwf	log@x+1
  7603  0C40  084F               	movf	?_eval_poly+2,w
  7604  0C41  00D9               	movwf	log@x+2
  7605  0C42  0857               	movf	log@x,w
  7606  0C43  00C0               	movwf	___ftadd@f1
  7607  0C44  0858               	movf	log@x+1,w
  7608  0C45  00C1               	movwf	___ftadd@f1+1
  7609  0C46  0859               	movf	log@x+2,w
  7610  0C47  00C2               	movwf	___ftadd@f1+2
  7611  0C48  3072               	movlw	114
  7612  0C49  00A0               	movwf	___ftmul@f1
  7613  0C4A  3031               	movlw	49
  7614  0C4B  00A1               	movwf	___ftmul@f1+1
  7615  0C4C  303F               	movlw	63
  7616  0C4D  00A2               	movwf	___ftmul@f1+2
  7617  0C4E  085C               	movf	log@exponent+1,w
  7618  0C4F  00F9               	movwf	___awtoft@c+1
  7619  0C50  085B               	movf	log@exponent,w
  7620  0C51  00F8               	movwf	___awtoft@c
  7621  0C52  3196  26C3  318B   	fcall	___awtoft
  7622  0C55  0878               	movf	?___awtoft,w
  7623  0C56  0020               	movlb	0	; select bank0
  7624  0C57  00A3               	movwf	___ftmul@f2
  7625  0C58  0879               	movf	?___awtoft+1,w
  7626  0C59  00A4               	movwf	___ftmul@f2+1
  7627  0C5A  087A               	movf	?___awtoft+2,w
  7628  0C5B  00A5               	movwf	___ftmul@f2+2
  7629  0C5C  318C  2470  318B   	fcall	___ftmul
  7630  0C5F  0020               	movlb	0	; select bank0
  7631  0C60  0820               	movf	?___ftmul,w
  7632  0C61  00C3               	movwf	___ftadd@f2
  7633  0C62  0821               	movf	?___ftmul+1,w
  7634  0C63  00C4               	movwf	___ftadd@f2+1
  7635  0C64  0822               	movf	?___ftmul+2,w
  7636  0C65  00C5               	movwf	___ftadd@f2+2
  7637  0C66  318D  25ED         	fcall	___ftadd
  7638  0C68  0020               	movlb	0	; select bank0
  7639  0C69  0840               	movf	?___ftadd,w
  7640  0C6A  00D7               	movwf	?_log
  7641  0C6B  0841               	movf	?___ftadd+1,w
  7642  0C6C  00D8               	movwf	?_log+1
  7643  0C6D  0842               	movf	?___ftadd+2,w
  7644  0C6E  00D9               	movwf	?_log+2
  7645  0C6F  0008               	return
  7646  0C70                     __end_of_log:	
  7647                           
  7648                           	psect	text3
  7649  17C5                     __ptext3:	
  7650 ;; *************** function _frexp *****************
  7651 ;; Defined at:
  7652 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  value           3    0[COMMON] int 
  7655 ;;  eptr            1    3[COMMON] PTR int 
  7656 ;;		 -> log@exponent(2), 
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;		None
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  3    0[COMMON] PTR int 
  7661 ;; Registers used:
  7662 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7671 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7672 ;;Total ram usage:        6 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; This function calls:
  7675 ;;		Nothing
  7676 ;; This function is called by:
  7677 ;;		_log
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           
  7682                           ;psect for function _frexp
  7683  17C5                     _frexp:	
  7684                           
  7685                           ;incstack = 0
  7686                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7687  17C5  0872               	movf	frexp@value+2,w
  7688  17C6  0471               	iorwf	frexp@value+1,w
  7689  17C7  0470               	iorwf	frexp@value,w
  7690  17C8  1D03               	skipz
  7691  17C9  2FD7               	goto	l2487
  7692  17CA  0873               	movf	frexp@eptr,w
  7693  17CB  0086               	movwf	6
  7694  17CC  0187               	clrf	7
  7695  17CD  3000               	movlw	0
  7696  17CE  3FC0               	movwi [0]fsr1
  7697  17CF  3FC1               	movwi [1]fsr1
  7698  17D0  3000               	movlw	0
  7699  17D1  00F0               	movwf	?_frexp
  7700  17D2  3000               	movlw	0
  7701  17D3  00F1               	movwf	?_frexp+1
  7702  17D4  3000               	movlw	0
  7703  17D5  00F2               	movwf	?_frexp+2
  7704  17D6  0008               	return
  7705  17D7                     l2487:	
  7706  17D7  0872               	movf	frexp@value+2,w
  7707  17D8  397F               	andlw	127
  7708  17D9  00F4               	movwf	??_frexp
  7709  17DA  01F5               	clrf	??_frexp+1
  7710  17DB  35F4               	lslf	??_frexp,f
  7711  17DC  0DF5               	rlf	??_frexp+1,f
  7712  17DD  0873               	movf	frexp@eptr,w
  7713  17DE  0086               	movwf	6
  7714  17DF  0187               	clrf	7
  7715  17E0  0874               	movf	??_frexp,w
  7716  17E1  3FC0               	movwi [0]fsr1
  7717  17E2  0875               	movf	??_frexp+1,w
  7718  17E3  3FC1               	movwi [1]fsr1
  7719  17E4  0D71               	rlf	frexp@value+1,w
  7720  17E5  0D71               	rlf	frexp@value+1,w
  7721  17E6  3901               	andlw	1
  7722  17E7  00F4               	movwf	??_frexp
  7723  17E8  01F5               	clrf	??_frexp+1
  7724  17E9  0873               	movf	frexp@eptr,w
  7725  17EA  0086               	movwf	6
  7726  17EB  0187               	clrf	7
  7727  17EC  0874               	movf	??_frexp,w
  7728  17ED  0481               	iorwf	1,f
  7729  17EE  3141               	addfsr 1,1
  7730  17EF  0875               	movf	??_frexp+1,w
  7731  17F0  0481               	iorwf	1,f
  7732  17F1  0873               	movf	frexp@eptr,w
  7733  17F2  0086               	movwf	6
  7734  17F3  0187               	clrf	7
  7735  17F4  3082               	movlw	130
  7736  17F5  0781               	addwf	1,f
  7737  17F6  3141               	addfsr 1,1
  7738  17F7  30FF               	movlw	255
  7739  17F8  3D81               	addwfc	1,f
  7740  17F9  317F               	addfsr 1,-1
  7741  17FA  0872               	movf	frexp@value+2,w
  7742  17FB  3980               	andlw	-128
  7743  17FC  383F               	iorlw	63
  7744  17FD  00F2               	movwf	frexp@value+2
  7745  17FE  13F1               	bcf	frexp@value+1,7
  7746  17FF  0008               	return
  7747  1800                     __end_of_frexp:	
  7748                           
  7749                           	psect	text4
  7750  0928                     __ptext4:	
  7751 ;; *************** function _eval_poly *****************
  7752 ;; Defined at:
  7753 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;  x               3   45[BANK0 ] PTR int 
  7756 ;;  d               2   48[BANK0 ] PTR const 
  7757 ;;		 -> log@coeff(27), 
  7758 ;;  n               2   50[BANK0 ] int 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;  res             3   52[BANK0 ] int 
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  3   45[BANK0 ] int 
  7763 ;; Registers used:
  7764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7770 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7771 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7773 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7774 ;;Total ram usage:       10 bytes
  7775 ;; Hardware stack levels used:    1
  7776 ;; Hardware stack levels required when called:    2
  7777 ;; This function calls:
  7778 ;;		___ftadd
  7779 ;;		___ftmul
  7780 ;;		___wmul
  7781 ;; This function is called by:
  7782 ;;		_log
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           
  7787                           ;psect for function _eval_poly
  7788  0928                     _eval_poly:	
  7789                           
  7790                           ;incstack = 0
  7791                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7792  0928  0020               	movlb	0	; select bank0
  7793  0929  0853               	movf	eval_poly@n+1,w
  7794  092A  00F1               	movwf	___wmul@multiplier+1
  7795  092B  0852               	movf	eval_poly@n,w
  7796  092C  00F0               	movwf	___wmul@multiplier
  7797  092D  3003               	movlw	3
  7798  092E  00F2               	movwf	___wmul@multiplicand
  7799  092F  3000               	movlw	0
  7800  0930  00F3               	movwf	___wmul@multiplicand+1
  7801  0931  3196  268A  3189   	fcall	___wmul
  7802  0934  0020               	movlb	0	; select bank0
  7803  0935  0850               	movf	eval_poly@d,w
  7804  0936  0770               	addwf	?___wmul,w
  7805  0937  0084               	movwf	4
  7806  0938  0851               	movf	eval_poly@d+1,w
  7807  0939  3D71               	addwfc	?___wmul+1,w
  7808  093A  0085               	movwf	5
  7809  093B  3F00               	moviw [0]fsr0
  7810  093C  00D4               	movwf	eval_poly@res
  7811  093D  3F01               	moviw [1]fsr0
  7812  093E  00D5               	movwf	eval_poly@res+1
  7813  093F  3F02               	moviw [2]fsr0
  7814  0940                     L1:	
  7815  0940  00D6               	movwf	eval_poly@res+2
  7816  0941  0852               	movf	eval_poly@n,w
  7817  0942  0453               	iorwf	eval_poly@n+1,w
  7818  0943  1903               	btfsc	3,2
  7819  0944  2981               	goto	l2505
  7820  0945  30FF               	movlw	255
  7821  0946  07D2               	addwf	eval_poly@n,f
  7822  0947  30FF               	movlw	255
  7823  0948  3DD3               	addwfc	eval_poly@n+1,f
  7824  0949  0853               	movf	eval_poly@n+1,w
  7825  094A  00F1               	movwf	___wmul@multiplier+1
  7826  094B  0852               	movf	eval_poly@n,w
  7827  094C  00F0               	movwf	___wmul@multiplier
  7828  094D  3003               	movlw	3
  7829  094E  00F2               	movwf	___wmul@multiplicand
  7830  094F  3000               	movlw	0
  7831  0950  00F3               	movwf	___wmul@multiplicand+1
  7832  0951  3196  268A  3189   	fcall	___wmul
  7833  0954  0020               	movlb	0	; select bank0
  7834  0955  0850               	movf	eval_poly@d,w
  7835  0956  0770               	addwf	?___wmul,w
  7836  0957  0084               	movwf	4
  7837  0958  0851               	movf	eval_poly@d+1,w
  7838  0959  3D71               	addwfc	?___wmul+1,w
  7839  095A  0085               	movwf	5
  7840  095B  3F00               	moviw [0]fsr0
  7841  095C  00C0               	movwf	___ftadd@f1
  7842  095D  3F01               	moviw [1]fsr0
  7843  095E  00C1               	movwf	___ftadd@f1+1
  7844  095F  3F02               	moviw [2]fsr0
  7845  0960  00C2               	movwf	___ftadd@f1+2
  7846  0961  0854               	movf	eval_poly@res,w
  7847  0962  00A0               	movwf	___ftmul@f1
  7848  0963  0855               	movf	eval_poly@res+1,w
  7849  0964  00A1               	movwf	___ftmul@f1+1
  7850  0965  0856               	movf	eval_poly@res+2,w
  7851  0966  00A2               	movwf	___ftmul@f1+2
  7852  0967  084D               	movf	eval_poly@x,w
  7853  0968  00A3               	movwf	___ftmul@f2
  7854  0969  084E               	movf	eval_poly@x+1,w
  7855  096A  00A4               	movwf	___ftmul@f2+1
  7856  096B  084F               	movf	eval_poly@x+2,w
  7857  096C  00A5               	movwf	___ftmul@f2+2
  7858  096D  318C  2470  3189   	fcall	___ftmul
  7859  0970  0020               	movlb	0	; select bank0
  7860  0971  0820               	movf	?___ftmul,w
  7861  0972  00C3               	movwf	___ftadd@f2
  7862  0973  0821               	movf	?___ftmul+1,w
  7863  0974  00C4               	movwf	___ftadd@f2+1
  7864  0975  0822               	movf	?___ftmul+2,w
  7865  0976  00C5               	movwf	___ftadd@f2+2
  7866  0977  318D  25ED  3189   	fcall	___ftadd
  7867  097A  0020               	movlb	0	; select bank0
  7868  097B  0840               	movf	?___ftadd,w
  7869  097C  00D4               	movwf	eval_poly@res
  7870  097D  0841               	movf	?___ftadd+1,w
  7871  097E  00D5               	movwf	eval_poly@res+1
  7872  097F  0842               	movf	?___ftadd+2,w
  7873  0980  2940               	goto	L1
  7874  0981                     l2505:	
  7875  0981  0854               	movf	eval_poly@res,w
  7876  0982  00CD               	movwf	?_eval_poly
  7877  0983  0855               	movf	eval_poly@res+1,w
  7878  0984  00CE               	movwf	?_eval_poly+1
  7879  0985  0856               	movf	eval_poly@res+2,w
  7880  0986  00CF               	movwf	?_eval_poly+2
  7881  0987  0008               	return
  7882  0988                     __end_of_eval_poly:	
  7883                           
  7884                           	psect	text5
  7885  0C70                     __ptext5:	
  7886 ;; *************** function ___ftmul *****************
  7887 ;; Defined at:
  7888 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  f1              3    0[BANK0 ] float 
  7891 ;;  f2              3    3[BANK0 ] float 
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7894 ;;  sign            1   15[BANK0 ] unsigned char 
  7895 ;;  cntr            1   14[BANK0 ] unsigned char 
  7896 ;;  exp             1   10[BANK0 ] unsigned char 
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  3    0[BANK0 ] float 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0, pclath, cstack
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7906 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7910 ;;Total ram usage:       16 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    1
  7913 ;; This function calls:
  7914 ;;		___ftpack
  7915 ;; This function is called by:
  7916 ;;		_tempCalc
  7917 ;;		_log
  7918 ;;		_eval_poly
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           
  7923                           ;psect for function ___ftmul
  7924  0C70                     ___ftmul:	
  7925                           
  7926                           ;incstack = 0
  7927                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7928  0C70  0020               	movlb	0	; select bank0
  7929  0C71  0820               	movf	___ftmul@f1,w
  7930  0C72  00A6               	movwf	??___ftmul
  7931  0C73  0821               	movf	___ftmul@f1+1,w
  7932  0C74  00A7               	movwf	??___ftmul+1
  7933  0C75  0822               	movf	___ftmul@f1+2,w
  7934  0C76  00A8               	movwf	??___ftmul+2
  7935  0C77  1003               	clrc
  7936  0C78  0D27               	rlf	??___ftmul+1,w
  7937  0C79  0D28               	rlf	??___ftmul+2,w
  7938  0C7A  00A9               	movwf	??___ftmul+3
  7939  0C7B  0829               	movf	??___ftmul+3,w
  7940  0C7C  00AA               	movwf	___ftmul@exp
  7941  0C7D  082A               	movf	___ftmul@exp,w
  7942  0C7E  1D03               	btfss	3,2
  7943  0C7F  2C87               	goto	l2291
  7944  0C80  3000               	movlw	0
  7945  0C81  00A0               	movwf	?___ftmul
  7946  0C82  3000               	movlw	0
  7947  0C83  00A1               	movwf	?___ftmul+1
  7948  0C84  3000               	movlw	0
  7949  0C85  00A2               	movwf	?___ftmul+2
  7950  0C86  0008               	return
  7951  0C87                     l2291:	
  7952  0C87  0823               	movf	___ftmul@f2,w
  7953  0C88  00A6               	movwf	??___ftmul
  7954  0C89  0824               	movf	___ftmul@f2+1,w
  7955  0C8A  00A7               	movwf	??___ftmul+1
  7956  0C8B  0825               	movf	___ftmul@f2+2,w
  7957  0C8C  00A8               	movwf	??___ftmul+2
  7958  0C8D  1003               	clrc
  7959  0C8E  0D27               	rlf	??___ftmul+1,w
  7960  0C8F  0D28               	rlf	??___ftmul+2,w
  7961  0C90  00A9               	movwf	??___ftmul+3
  7962  0C91  0829               	movf	??___ftmul+3,w
  7963  0C92  00AF               	movwf	___ftmul@sign
  7964  0C93  082F               	movf	___ftmul@sign,w
  7965  0C94  1D03               	btfss	3,2
  7966  0C95  2C9D               	goto	l2297
  7967  0C96  3000               	movlw	0
  7968  0C97  00A0               	movwf	?___ftmul
  7969  0C98  3000               	movlw	0
  7970  0C99  00A1               	movwf	?___ftmul+1
  7971  0C9A  3000               	movlw	0
  7972  0C9B  00A2               	movwf	?___ftmul+2
  7973  0C9C  0008               	return
  7974  0C9D                     l2297:	
  7975  0C9D  082F               	movf	___ftmul@sign,w
  7976  0C9E  3E7B               	addlw	123
  7977  0C9F  00A6               	movwf	??___ftmul
  7978  0CA0  0826               	movf	??___ftmul,w
  7979  0CA1  07AA               	addwf	___ftmul@exp,f
  7980  0CA2  0820               	movf	___ftmul@f1,w
  7981  0CA3  00A6               	movwf	??___ftmul
  7982  0CA4  0821               	movf	___ftmul@f1+1,w
  7983  0CA5  00A7               	movwf	??___ftmul+1
  7984  0CA6  0822               	movf	___ftmul@f1+2,w
  7985  0CA7  00A8               	movwf	??___ftmul+2
  7986  0CA8  3010               	movlw	16
  7987  0CA9                     u2405:	
  7988  0CA9  36A8               	lsrf	??___ftmul+2,f
  7989  0CAA  0CA7               	rrf	??___ftmul+1,f
  7990  0CAB  0CA6               	rrf	??___ftmul,f
  7991  0CAC  0B89               	decfsz	9,f
  7992  0CAD  2CA9               	goto	u2405
  7993  0CAE  0826               	movf	??___ftmul,w
  7994  0CAF  00A9               	movwf	??___ftmul+3
  7995  0CB0  0829               	movf	??___ftmul+3,w
  7996  0CB1  00AF               	movwf	___ftmul@sign
  7997  0CB2  0823               	movf	___ftmul@f2,w
  7998  0CB3  00A6               	movwf	??___ftmul
  7999  0CB4  0824               	movf	___ftmul@f2+1,w
  8000  0CB5  00A7               	movwf	??___ftmul+1
  8001  0CB6  0825               	movf	___ftmul@f2+2,w
  8002  0CB7  00A8               	movwf	??___ftmul+2
  8003  0CB8  3010               	movlw	16
  8004  0CB9                     u2415:	
  8005  0CB9  36A8               	lsrf	??___ftmul+2,f
  8006  0CBA  0CA7               	rrf	??___ftmul+1,f
  8007  0CBB  0CA6               	rrf	??___ftmul,f
  8008  0CBC  0B89               	decfsz	9,f
  8009  0CBD  2CB9               	goto	u2415
  8010  0CBE  0826               	movf	??___ftmul,w
  8011  0CBF  00A9               	movwf	??___ftmul+3
  8012  0CC0  0829               	movf	??___ftmul+3,w
  8013  0CC1  06AF               	xorwf	___ftmul@sign,f
  8014  0CC2  3080               	movlw	128
  8015  0CC3  00A6               	movwf	??___ftmul
  8016  0CC4  0826               	movf	??___ftmul,w
  8017  0CC5  05AF               	andwf	___ftmul@sign,f
  8018  0CC6  17A1               	bsf	___ftmul@f1+1,7
  8019  0CC7  17A4               	bsf	___ftmul@f2+1,7
  8020  0CC8  30FF               	movlw	255
  8021  0CC9  05A3               	andwf	___ftmul@f2,f
  8022  0CCA  30FF               	movlw	255
  8023  0CCB  05A4               	andwf	___ftmul@f2+1,f
  8024  0CCC  3000               	movlw	0
  8025  0CCD  05A5               	andwf	___ftmul@f2+2,f
  8026  0CCE  3000               	movlw	0
  8027  0CCF  00AB               	movwf	___ftmul@f3_as_product
  8028  0CD0  3000               	movlw	0
  8029  0CD1  00AC               	movwf	___ftmul@f3_as_product+1
  8030  0CD2  3000               	movlw	0
  8031  0CD3  00AD               	movwf	___ftmul@f3_as_product+2
  8032  0CD4  3007               	movlw	7
  8033  0CD5  00A6               	movwf	??___ftmul
  8034  0CD6  0826               	movf	??___ftmul,w
  8035  0CD7  00AE               	movwf	___ftmul@cntr
  8036  0CD8                     l2309:	
  8037  0CD8  1C20               	btfss	___ftmul@f1,0
  8038  0CD9  2CE0               	goto	l2313
  8039  0CDA  0823               	movf	___ftmul@f2,w
  8040  0CDB  07AB               	addwf	___ftmul@f3_as_product,f
  8041  0CDC  0824               	movf	___ftmul@f2+1,w
  8042  0CDD  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8043  0CDE  0825               	movf	___ftmul@f2+2,w
  8044  0CDF  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8045  0CE0                     l2313:	
  8046  0CE0  3001               	movlw	1
  8047  0CE1                     u2435:	
  8048  0CE1  36A2               	lsrf	___ftmul@f1+2,f
  8049  0CE2  0CA1               	rrf	___ftmul@f1+1,f
  8050  0CE3  0CA0               	rrf	___ftmul@f1,f
  8051  0CE4  0B89               	decfsz	9,f
  8052  0CE5  2CE1               	goto	u2435
  8053  0CE6  3001               	movlw	1
  8054  0CE7                     u2445:	
  8055  0CE7  35A3               	lslf	___ftmul@f2,f
  8056  0CE8  0DA4               	rlf	___ftmul@f2+1,f
  8057  0CE9  0DA5               	rlf	___ftmul@f2+2,f
  8058  0CEA  0B89               	decfsz	9,f
  8059  0CEB  2CE7               	goto	u2445
  8060  0CEC  3001               	movlw	1
  8061  0CED  02AE               	subwf	___ftmul@cntr,f
  8062  0CEE  1D03               	btfss	3,2
  8063  0CEF  2CD8               	goto	l2309
  8064  0CF0  3009               	movlw	9
  8065  0CF1  00A6               	movwf	??___ftmul
  8066  0CF2  0826               	movf	??___ftmul,w
  8067  0CF3  00AE               	movwf	___ftmul@cntr
  8068  0CF4                     l2321:	
  8069  0CF4  1C20               	btfss	___ftmul@f1,0
  8070  0CF5  2CFC               	goto	l2325
  8071  0CF6  0823               	movf	___ftmul@f2,w
  8072  0CF7  07AB               	addwf	___ftmul@f3_as_product,f
  8073  0CF8  0824               	movf	___ftmul@f2+1,w
  8074  0CF9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8075  0CFA  0825               	movf	___ftmul@f2+2,w
  8076  0CFB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8077  0CFC                     l2325:	
  8078  0CFC  3001               	movlw	1
  8079  0CFD                     u2475:	
  8080  0CFD  36A2               	lsrf	___ftmul@f1+2,f
  8081  0CFE  0CA1               	rrf	___ftmul@f1+1,f
  8082  0CFF  0CA0               	rrf	___ftmul@f1,f
  8083  0D00  0B89               	decfsz	9,f
  8084  0D01  2CFD               	goto	u2475
  8085  0D02  3001               	movlw	1
  8086  0D03                     u2485:	
  8087  0D03  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8088  0D04  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8089  0D05  0CAB               	rrf	___ftmul@f3_as_product,f
  8090  0D06  0B89               	decfsz	9,f
  8091  0D07  2D03               	goto	u2485
  8092  0D08  3001               	movlw	1
  8093  0D09  02AE               	subwf	___ftmul@cntr,f
  8094  0D0A  1D03               	btfss	3,2
  8095  0D0B  2CF4               	goto	l2321
  8096  0D0C  082B               	movf	___ftmul@f3_as_product,w
  8097  0D0D  00F0               	movwf	___ftpack@arg
  8098  0D0E  082C               	movf	___ftmul@f3_as_product+1,w
  8099  0D0F  00F1               	movwf	___ftpack@arg+1
  8100  0D10  082D               	movf	___ftmul@f3_as_product+2,w
  8101  0D11  00F2               	movwf	___ftpack@arg+2
  8102  0D12  082A               	movf	___ftmul@exp,w
  8103  0D13  00A6               	movwf	??___ftmul
  8104  0D14  0826               	movf	??___ftmul,w
  8105  0D15  00F3               	movwf	___ftpack@exp
  8106  0D16  082F               	movf	___ftmul@sign,w
  8107  0D17  00A7               	movwf	??___ftmul+1
  8108  0D18  0827               	movf	??___ftmul+1,w
  8109  0D19  00F4               	movwf	___ftpack@sign
  8110  0D1A  3180  2017         	fcall	___ftpack
  8111  0D1C  0870               	movf	?___ftpack,w
  8112  0D1D  0020               	movlb	0	; select bank0
  8113  0D1E  00A0               	movwf	?___ftmul
  8114  0D1F  0871               	movf	?___ftpack+1,w
  8115  0D20  00A1               	movwf	?___ftmul+1
  8116  0D21  0872               	movf	?___ftpack+2,w
  8117  0D22  00A2               	movwf	?___ftmul+2
  8118  0D23  0008               	return
  8119  0D24                     __end_of___ftmul:	
  8120                           
  8121                           	psect	text6
  8122  178A                     __ptext6:	
  8123 ;; *************** function ___ftge *****************
  8124 ;; Defined at:
  8125 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;  ff1             3    0[COMMON] float 
  8128 ;;  ff2             3    3[COMMON] float 
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;		None
  8131 ;; Return value:  Size  Location     Type
  8132 ;;		None               void
  8133 ;; Registers used:
  8134 ;;		wreg, status,2, status,0
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/0
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8140 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8142 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8143 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;Total ram usage:        9 bytes
  8145 ;; Hardware stack levels used:    1
  8146 ;; This function calls:
  8147 ;;		Nothing
  8148 ;; This function is called by:
  8149 ;;		_log
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           
  8154                           ;psect for function ___ftge
  8155  178A                     ___ftge:	
  8156                           
  8157                           ;incstack = 0
  8158                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8159  178A  1FF2               	btfss	___ftge@ff1+2,7
  8160  178B  2FA0               	goto	l2463
  8161  178C  0970               	comf	___ftge@ff1,w
  8162  178D  00F6               	movwf	??___ftge
  8163  178E  0971               	comf	___ftge@ff1+1,w
  8164  178F  00F7               	movwf	??___ftge+1
  8165  1790  0972               	comf	___ftge@ff1+2,w
  8166  1791  00F8               	movwf	??___ftge+2
  8167  1792  0AF6               	incf	??___ftge,f
  8168  1793  1903               	skipnz
  8169  1794  0AF7               	incf	??___ftge+1,f
  8170  1795  1903               	skipnz
  8171  1796  0AF8               	incf	??___ftge+2,f
  8172  1797  3000               	movlw	0
  8173  1798  0776               	addwf	??___ftge,w
  8174  1799  00F0               	movwf	___ftge@ff1
  8175  179A  3000               	movlw	0
  8176  179B  3D77               	addwfc	??___ftge+1,w
  8177  179C  00F1               	movwf	___ftge@ff1+1
  8178  179D  3080               	movlw	128
  8179  179E  3D78               	addwfc	??___ftge+2,w
  8180  179F  00F2               	movwf	___ftge@ff1+2
  8181  17A0                     l2463:	
  8182  17A0  1FF5               	btfss	___ftge@ff2+2,7
  8183  17A1  2FB6               	goto	l2467
  8184  17A2  0973               	comf	___ftge@ff2,w
  8185  17A3  00F6               	movwf	??___ftge
  8186  17A4  0974               	comf	___ftge@ff2+1,w
  8187  17A5  00F7               	movwf	??___ftge+1
  8188  17A6  0975               	comf	___ftge@ff2+2,w
  8189  17A7  00F8               	movwf	??___ftge+2
  8190  17A8  0AF6               	incf	??___ftge,f
  8191  17A9  1903               	skipnz
  8192  17AA  0AF7               	incf	??___ftge+1,f
  8193  17AB  1903               	skipnz
  8194  17AC  0AF8               	incf	??___ftge+2,f
  8195  17AD  3000               	movlw	0
  8196  17AE  0776               	addwf	??___ftge,w
  8197  17AF  00F3               	movwf	___ftge@ff2
  8198  17B0  3000               	movlw	0
  8199  17B1  3D77               	addwfc	??___ftge+1,w
  8200  17B2  00F4               	movwf	___ftge@ff2+1
  8201  17B3  3080               	movlw	128
  8202  17B4  3D78               	addwfc	??___ftge+2,w
  8203  17B5  00F5               	movwf	___ftge@ff2+2
  8204  17B6                     l2467:	
  8205  17B6  3080               	movlw	128
  8206  17B7  06F2               	xorwf	___ftge@ff1+2,f
  8207  17B8  3080               	movlw	128
  8208  17B9  06F5               	xorwf	___ftge@ff2+2,f
  8209  17BA  0875               	movf	___ftge@ff2+2,w
  8210  17BB  0272               	subwf	___ftge@ff1+2,w
  8211  17BC  1D03               	skipz
  8212  17BD  0008               	return
  8213  17BE  0874               	movf	___ftge@ff2+1,w
  8214  17BF  0271               	subwf	___ftge@ff1+1,w
  8215  17C0  1D03               	skipz
  8216  17C1  0008               	return
  8217  17C2  0873               	movf	___ftge@ff2,w
  8218  17C3  0270               	subwf	___ftge@ff1,w
  8219  17C4  0008               	return
  8220  17C5                     __end_of___ftge:	
  8221                           
  8222                           	psect	text7
  8223  16C3                     __ptext7:	
  8224 ;; *************** function ___awtoft *****************
  8225 ;; Defined at:
  8226 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;  c               2    8[COMMON] int 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  sign            1   13[COMMON] unsigned char 
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  3    8[COMMON] float 
  8233 ;; Registers used:
  8234 ;;		wreg, status,2, status,0, pclath, cstack
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8240 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;Total ram usage:        6 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; Hardware stack levels required when called:    1
  8247 ;; This function calls:
  8248 ;;		___ftpack
  8249 ;; This function is called by:
  8250 ;;		_tempCalc
  8251 ;;		_log
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           
  8256                           ;psect for function ___awtoft
  8257  16C3                     ___awtoft:	
  8258                           
  8259                           ;incstack = 0
  8260                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8261  16C3  01FD               	clrf	___awtoft@sign
  8262  16C4  1FF9               	btfss	___awtoft@c+1,7
  8263  16C5  2ECD               	goto	l2455
  8264  16C6  09F8               	comf	___awtoft@c,f
  8265  16C7  09F9               	comf	___awtoft@c+1,f
  8266  16C8  0AF8               	incf	___awtoft@c,f
  8267  16C9  1903               	skipnz
  8268  16CA  0AF9               	incf	___awtoft@c+1,f
  8269  16CB  01FD               	clrf	___awtoft@sign
  8270  16CC  0AFD               	incf	___awtoft@sign,f
  8271  16CD                     l2455:	
  8272  16CD  0878               	movf	___awtoft@c,w
  8273  16CE  00F0               	movwf	___ftpack@arg
  8274  16CF  0879               	movf	___awtoft@c+1,w
  8275  16D0  00F1               	movwf	___ftpack@arg+1
  8276  16D1  01F2               	clrf	___ftpack@arg+2
  8277  16D2  308E               	movlw	142
  8278  16D3  00FB               	movwf	??___awtoft
  8279  16D4  087B               	movf	??___awtoft,w
  8280  16D5  00F3               	movwf	___ftpack@exp
  8281  16D6  087D               	movf	___awtoft@sign,w
  8282  16D7  00FC               	movwf	??___awtoft+1
  8283  16D8  087C               	movf	??___awtoft+1,w
  8284  16D9  00F4               	movwf	___ftpack@sign
  8285  16DA  3180  2017         	fcall	___ftpack
  8286  16DC  0870               	movf	?___ftpack,w
  8287  16DD  00F8               	movwf	?___awtoft
  8288  16DE  0871               	movf	?___ftpack+1,w
  8289  16DF  00F9               	movwf	?___awtoft+1
  8290  16E0  0872               	movf	?___ftpack+2,w
  8291  16E1  00FA               	movwf	?___awtoft+2
  8292  16E2  0008               	return
  8293  16E3                     __end_of___awtoft:	
  8294                           
  8295                           	psect	text8
  8296  0A0A                     __ptext8:	
  8297 ;; *************** function ___fttol *****************
  8298 ;; Defined at:
  8299 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;  f1              3    0[COMMON] float 
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;  lval            4    9[COMMON] unsigned long 
  8304 ;;  exp1            1   13[COMMON] unsigned char 
  8305 ;;  sign1           1    8[COMMON] unsigned char 
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  4    0[COMMON] long 
  8308 ;; Registers used:
  8309 ;;		wreg, status,2, status,0
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;Total ram usage:       14 bytes
  8320 ;; Hardware stack levels used:    1
  8321 ;; This function calls:
  8322 ;;		Nothing
  8323 ;; This function is called by:
  8324 ;;		_tempCalc
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           
  8329                           ;psect for function ___fttol
  8330  0A0A                     ___fttol:	
  8331                           
  8332                           ;incstack = 0
  8333                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8334  0A0A  0870               	movf	___fttol@f1,w
  8335  0A0B  00F4               	movwf	??___fttol
  8336  0A0C  0871               	movf	___fttol@f1+1,w
  8337  0A0D  00F5               	movwf	??___fttol+1
  8338  0A0E  0872               	movf	___fttol@f1+2,w
  8339  0A0F  00F6               	movwf	??___fttol+2
  8340  0A10  1003               	clrc
  8341  0A11  0D75               	rlf	??___fttol+1,w
  8342  0A12  0D76               	rlf	??___fttol+2,w
  8343  0A13  00F7               	movwf	??___fttol+3
  8344  0A14  0877               	movf	??___fttol+3,w
  8345  0A15  00FD               	movwf	___fttol@exp1
  8346  0A16  087D               	movf	___fttol@exp1,w
  8347  0A17  1D03               	btfss	3,2
  8348  0A18  2A22               	goto	l2879
  8349  0A19  3000               	movlw	0
  8350  0A1A  00F3               	movwf	?___fttol+3
  8351  0A1B  3000               	movlw	0
  8352  0A1C  00F2               	movwf	?___fttol+2
  8353  0A1D  3000               	movlw	0
  8354  0A1E  00F1               	movwf	?___fttol+1
  8355  0A1F  3000               	movlw	0
  8356  0A20  00F0               	movwf	?___fttol
  8357  0A21  0008               	return
  8358  0A22                     l2879:	
  8359  0A22  0870               	movf	___fttol@f1,w
  8360  0A23  00F4               	movwf	??___fttol
  8361  0A24  0871               	movf	___fttol@f1+1,w
  8362  0A25  00F5               	movwf	??___fttol+1
  8363  0A26  0872               	movf	___fttol@f1+2,w
  8364  0A27  00F6               	movwf	??___fttol+2
  8365  0A28  3017               	movlw	23
  8366  0A29                     u3245:	
  8367  0A29  36F6               	lsrf	??___fttol+2,f
  8368  0A2A  0CF5               	rrf	??___fttol+1,f
  8369  0A2B  0CF4               	rrf	??___fttol,f
  8370  0A2C  0B89               	decfsz	9,f
  8371  0A2D  2A29               	goto	u3245
  8372  0A2E  0874               	movf	??___fttol,w
  8373  0A2F  00F7               	movwf	??___fttol+3
  8374  0A30  0877               	movf	??___fttol+3,w
  8375  0A31  00F8               	movwf	___fttol@sign1
  8376  0A32  17F1               	bsf	___fttol@f1+1,7
  8377  0A33  30FF               	movlw	255
  8378  0A34  05F0               	andwf	___fttol@f1,f
  8379  0A35  30FF               	movlw	255
  8380  0A36  05F1               	andwf	___fttol@f1+1,f
  8381  0A37  3000               	movlw	0
  8382  0A38  05F2               	andwf	___fttol@f1+2,f
  8383  0A39  0870               	movf	___fttol@f1,w
  8384  0A3A  00F9               	movwf	___fttol@lval
  8385  0A3B  0871               	movf	___fttol@f1+1,w
  8386  0A3C  00FA               	movwf	___fttol@lval+1
  8387  0A3D  0872               	movf	___fttol@f1+2,w
  8388  0A3E  00FB               	movwf	___fttol@lval+2
  8389  0A3F  01FC               	clrf	___fttol@lval+3
  8390  0A40  308E               	movlw	142
  8391  0A41  02FD               	subwf	___fttol@exp1,f
  8392  0A42  1FFD               	btfss	___fttol@exp1,7
  8393  0A43  2A60               	goto	l2899
  8394  0A44  087D               	movf	___fttol@exp1,w
  8395  0A45  3A80               	xorlw	128
  8396  0A46  3E8F               	addlw	143
  8397  0A47  1803               	skipnc
  8398  0A48  2A52               	goto	l2897
  8399  0A49  3000               	movlw	0
  8400  0A4A  00F3               	movwf	?___fttol+3
  8401  0A4B  3000               	movlw	0
  8402  0A4C  00F2               	movwf	?___fttol+2
  8403  0A4D  3000               	movlw	0
  8404  0A4E  00F1               	movwf	?___fttol+1
  8405  0A4F  3000               	movlw	0
  8406  0A50  00F0               	movwf	?___fttol
  8407  0A51  0008               	return
  8408  0A52                     l2897:	
  8409  0A52  3001               	movlw	1
  8410  0A53                     u3275:	
  8411  0A53  36FC               	lsrf	___fttol@lval+3,f
  8412  0A54  0CFB               	rrf	___fttol@lval+2,f
  8413  0A55  0CFA               	rrf	___fttol@lval+1,f
  8414  0A56  0CF9               	rrf	___fttol@lval,f
  8415  0A57  0B89               	decfsz	9,f
  8416  0A58  2A53               	goto	u3275
  8417  0A59  3001               	movlw	1
  8418  0A5A  00F4               	movwf	??___fttol
  8419  0A5B  0874               	movf	??___fttol,w
  8420  0A5C  07FD               	addwf	___fttol@exp1,f
  8421  0A5D  1903               	btfsc	3,2
  8422  0A5E  2A79               	goto	l2907
  8423  0A5F  2A52               	goto	l2897
  8424  0A60                     l2899:	
  8425  0A60  3018               	movlw	24
  8426  0A61  027D               	subwf	___fttol@exp1,w
  8427  0A62  1C03               	skipc
  8428  0A63  2A76               	goto	l793
  8429  0A64  3000               	movlw	0
  8430  0A65  00F3               	movwf	?___fttol+3
  8431  0A66  3000               	movlw	0
  8432  0A67  00F2               	movwf	?___fttol+2
  8433  0A68  3000               	movlw	0
  8434  0A69  00F1               	movwf	?___fttol+1
  8435  0A6A  3000               	movlw	0
  8436  0A6B  00F0               	movwf	?___fttol
  8437  0A6C  0008               	return
  8438  0A6D                     l2905:	
  8439  0A6D  3001               	movlw	1
  8440  0A6E                     u3305:	
  8441  0A6E  35F9               	lslf	___fttol@lval,f
  8442  0A6F  0DFA               	rlf	___fttol@lval+1,f
  8443  0A70  0DFB               	rlf	___fttol@lval+2,f
  8444  0A71  0DFC               	rlf	___fttol@lval+3,f
  8445  0A72  0B89               	decfsz	9,f
  8446  0A73  2A6E               	goto	u3305
  8447  0A74  3001               	movlw	1
  8448  0A75  02FD               	subwf	___fttol@exp1,f
  8449  0A76                     l793:	
  8450  0A76  087D               	movf	___fttol@exp1,w
  8451  0A77  1D03               	btfss	3,2
  8452  0A78  2A6D               	goto	l2905
  8453  0A79                     l2907:	
  8454  0A79  0878               	movf	___fttol@sign1,w
  8455  0A7A  1903               	btfsc	3,2
  8456  0A7B  2A87               	goto	l2911
  8457  0A7C  09F9               	comf	___fttol@lval,f
  8458  0A7D  09FA               	comf	___fttol@lval+1,f
  8459  0A7E  09FB               	comf	___fttol@lval+2,f
  8460  0A7F  09FC               	comf	___fttol@lval+3,f
  8461  0A80  0AF9               	incf	___fttol@lval,f
  8462  0A81  1903               	skipnz
  8463  0A82  0AFA               	incf	___fttol@lval+1,f
  8464  0A83  1903               	skipnz
  8465  0A84  0AFB               	incf	___fttol@lval+2,f
  8466  0A85  1903               	skipnz
  8467  0A86  0AFC               	incf	___fttol@lval+3,f
  8468  0A87                     l2911:	
  8469  0A87  087C               	movf	___fttol@lval+3,w
  8470  0A88  00F3               	movwf	?___fttol+3
  8471  0A89  087B               	movf	___fttol@lval+2,w
  8472  0A8A  00F2               	movwf	?___fttol+2
  8473  0A8B  087A               	movf	___fttol@lval+1,w
  8474  0A8C  00F1               	movwf	?___fttol+1
  8475  0A8D  0879               	movf	___fttol@lval,w
  8476  0A8E  00F0               	movwf	?___fttol
  8477  0A8F  0008               	return
  8478  0A90                     __end_of___fttol:	
  8479                           
  8480                           	psect	text9
  8481  16A5                     __ptext9:	
  8482 ;; *************** function ___ftsub *****************
  8483 ;; Defined at:
  8484 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  f2              3   45[BANK0 ] float 
  8487 ;;  f1              3   48[BANK0 ] float 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  3   45[BANK0 ] float 
  8492 ;; Registers used:
  8493 ;;		wreg, status,2, status,0, pclath, cstack
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8499 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8502 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8503 ;;Total ram usage:        6 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:    2
  8506 ;; This function calls:
  8507 ;;		___ftadd
  8508 ;; This function is called by:
  8509 ;;		_tempCalc
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           
  8514                           ;psect for function ___ftsub
  8515  16A5                     ___ftsub:	
  8516                           
  8517                           ;incstack = 0
  8518                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8519  16A5  0020               	movlb	0	; select bank0
  8520  16A6  084F               	movf	___ftsub@f2+2,w
  8521  16A7  044E               	iorwf	___ftsub@f2+1,w
  8522  16A8  044D               	iorwf	___ftsub@f2,w
  8523  16A9  1903               	skipnz
  8524  16AA  2EAD               	goto	l2869
  8525  16AB  3080               	movlw	128
  8526  16AC  06CF               	xorwf	___ftsub@f2+2,f
  8527  16AD                     l2869:	
  8528  16AD  0850               	movf	___ftsub@f1,w
  8529  16AE  00C0               	movwf	___ftadd@f1
  8530  16AF  0851               	movf	___ftsub@f1+1,w
  8531  16B0  00C1               	movwf	___ftadd@f1+1
  8532  16B1  0852               	movf	___ftsub@f1+2,w
  8533  16B2  00C2               	movwf	___ftadd@f1+2
  8534  16B3  084D               	movf	___ftsub@f2,w
  8535  16B4  00C3               	movwf	___ftadd@f2
  8536  16B5  084E               	movf	___ftsub@f2+1,w
  8537  16B6  00C4               	movwf	___ftadd@f2+1
  8538  16B7  084F               	movf	___ftsub@f2+2,w
  8539  16B8  00C5               	movwf	___ftadd@f2+2
  8540  16B9  318D  25ED         	fcall	___ftadd
  8541  16BB  0020               	movlb	0	; select bank0
  8542  16BC  0840               	movf	?___ftadd,w
  8543  16BD  00CD               	movwf	?___ftsub
  8544  16BE  0841               	movf	?___ftadd+1,w
  8545  16BF  00CE               	movwf	?___ftsub+1
  8546  16C0  0842               	movf	?___ftadd+2,w
  8547  16C1  00CF               	movwf	?___ftsub+2
  8548  16C2  0008               	return
  8549  16C3                     __end_of___ftsub:	
  8550                           
  8551                           	psect	text10
  8552  0DED                     __ptext10:	
  8553 ;; *************** function ___ftadd *****************
  8554 ;; Defined at:
  8555 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  f1              3   32[BANK0 ] float 
  8558 ;;  f2              3   35[BANK0 ] float 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;  exp1            1   44[BANK0 ] unsigned char 
  8561 ;;  exp2            1   43[BANK0 ] unsigned char 
  8562 ;;  sign            1   42[BANK0 ] unsigned char 
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  3   32[BANK0 ] float 
  8565 ;; Registers used:
  8566 ;;		wreg, status,2, status,0, pclath, cstack
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8572 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8573 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8574 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8575 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8576 ;;Total ram usage:       13 bytes
  8577 ;; Hardware stack levels used:    1
  8578 ;; Hardware stack levels required when called:    1
  8579 ;; This function calls:
  8580 ;;		___ftpack
  8581 ;; This function is called by:
  8582 ;;		_tempCalc
  8583 ;;		___ftsub
  8584 ;;		_log
  8585 ;;		_eval_poly
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           
  8590                           ;psect for function ___ftadd
  8591  0DED                     ___ftadd:	
  8592                           
  8593                           ;incstack = 0
  8594                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8595  0DED  0020               	movlb	0	; select bank0
  8596  0DEE  0840               	movf	___ftadd@f1,w
  8597  0DEF  00C6               	movwf	??___ftadd
  8598  0DF0  0841               	movf	___ftadd@f1+1,w
  8599  0DF1  00C7               	movwf	??___ftadd+1
  8600  0DF2  0842               	movf	___ftadd@f1+2,w
  8601  0DF3  00C8               	movwf	??___ftadd+2
  8602  0DF4  1003               	clrc
  8603  0DF5  0D47               	rlf	??___ftadd+1,w
  8604  0DF6  0D48               	rlf	??___ftadd+2,w
  8605  0DF7  00C9               	movwf	??___ftadd+3
  8606  0DF8  0849               	movf	??___ftadd+3,w
  8607  0DF9  00CC               	movwf	___ftadd@exp1
  8608  0DFA  0843               	movf	___ftadd@f2,w
  8609  0DFB  00C6               	movwf	??___ftadd
  8610  0DFC  0844               	movf	___ftadd@f2+1,w
  8611  0DFD  00C7               	movwf	??___ftadd+1
  8612  0DFE  0845               	movf	___ftadd@f2+2,w
  8613  0DFF  00C8               	movwf	??___ftadd+2
  8614  0E00  1003               	clrc
  8615  0E01  0D47               	rlf	??___ftadd+1,w
  8616  0E02  0D48               	rlf	??___ftadd+2,w
  8617  0E03  00C9               	movwf	??___ftadd+3
  8618  0E04  0849               	movf	??___ftadd+3,w
  8619  0E05  00CB               	movwf	___ftadd@exp2
  8620  0E06  084C               	movf	___ftadd@exp1,w
  8621  0E07  1903               	btfsc	3,2
  8622  0E08  2E15               	goto	l2221
  8623  0E09  084B               	movf	___ftadd@exp2,w
  8624  0E0A  024C               	subwf	___ftadd@exp1,w
  8625  0E0B  1803               	skipnc
  8626  0E0C  2E1C               	goto	l2225
  8627  0E0D  034C               	decf	___ftadd@exp1,w
  8628  0E0E  3AFF               	xorlw	255
  8629  0E0F  074B               	addwf	___ftadd@exp2,w
  8630  0E10  00C6               	movwf	??___ftadd
  8631  0E11  3019               	movlw	25
  8632  0E12  0246               	subwf	??___ftadd,w
  8633  0E13  1C03               	skipc
  8634  0E14  2E1C               	goto	l2225
  8635  0E15                     l2221:	
  8636  0E15  0843               	movf	___ftadd@f2,w
  8637  0E16  00C0               	movwf	?___ftadd
  8638  0E17  0844               	movf	___ftadd@f2+1,w
  8639  0E18  00C1               	movwf	?___ftadd+1
  8640  0E19  0845               	movf	___ftadd@f2+2,w
  8641  0E1A  00C2               	movwf	?___ftadd+2
  8642  0E1B  0008               	return
  8643  0E1C                     l2225:	
  8644  0E1C  084B               	movf	___ftadd@exp2,w
  8645  0E1D  1903               	btfsc	3,2
  8646  0E1E  0008               	return
  8647  0E1F  084C               	movf	___ftadd@exp1,w
  8648  0E20  024B               	subwf	___ftadd@exp2,w
  8649  0E21  1803               	skipnc
  8650  0E22  2E2B               	goto	l2231
  8651  0E23  034B               	decf	___ftadd@exp2,w
  8652  0E24  3AFF               	xorlw	255
  8653  0E25  074C               	addwf	___ftadd@exp1,w
  8654  0E26  00C6               	movwf	??___ftadd
  8655  0E27  3019               	movlw	25
  8656  0E28  0246               	subwf	??___ftadd,w
  8657  0E29  1803               	btfsc	3,0
  8658  0E2A  0008               	return
  8659  0E2B                     l2231:	
  8660  0E2B  3006               	movlw	6
  8661  0E2C  00C6               	movwf	??___ftadd
  8662  0E2D  0846               	movf	??___ftadd,w
  8663  0E2E  00CA               	movwf	___ftadd@sign
  8664  0E2F  1BC2               	btfsc	___ftadd@f1+2,7
  8665  0E30  17CA               	bsf	___ftadd@sign,7
  8666  0E31  1BC5               	btfsc	___ftadd@f2+2,7
  8667  0E32  174A               	bsf	___ftadd@sign,6
  8668  0E33  17C1               	bsf	___ftadd@f1+1,7
  8669  0E34  30FF               	movlw	255
  8670  0E35  05C0               	andwf	___ftadd@f1,f
  8671  0E36  30FF               	movlw	255
  8672  0E37  05C1               	andwf	___ftadd@f1+1,f
  8673  0E38  3000               	movlw	0
  8674  0E39  05C2               	andwf	___ftadd@f1+2,f
  8675  0E3A  17C4               	bsf	___ftadd@f2+1,7
  8676  0E3B  30FF               	movlw	255
  8677  0E3C  05C3               	andwf	___ftadd@f2,f
  8678  0E3D  30FF               	movlw	255
  8679  0E3E  05C4               	andwf	___ftadd@f2+1,f
  8680  0E3F  3000               	movlw	0
  8681  0E40  05C5               	andwf	___ftadd@f2+2,f
  8682  0E41  084B               	movf	___ftadd@exp2,w
  8683  0E42  024C               	subwf	___ftadd@exp1,w
  8684  0E43  1803               	skipnc
  8685  0E44  2E67               	goto	l2253
  8686  0E45                     l2243:	
  8687  0E45  3001               	movlw	1
  8688  0E46                     u2245:	
  8689  0E46  35C3               	lslf	___ftadd@f2,f
  8690  0E47  0DC4               	rlf	___ftadd@f2+1,f
  8691  0E48  0DC5               	rlf	___ftadd@f2+2,f
  8692  0E49  0B89               	decfsz	9,f
  8693  0E4A  2E46               	goto	u2245
  8694  0E4B  3001               	movlw	1
  8695  0E4C  02CB               	subwf	___ftadd@exp2,f
  8696  0E4D  084B               	movf	___ftadd@exp2,w
  8697  0E4E  064C               	xorwf	___ftadd@exp1,w
  8698  0E4F  1903               	skipnz
  8699  0E50  2E62               	goto	l2251
  8700  0E51  3001               	movlw	1
  8701  0E52  02CA               	subwf	___ftadd@sign,f
  8702  0E53  084A               	movf	___ftadd@sign,w
  8703  0E54  3907               	andlw	7
  8704  0E55  1903               	btfsc	3,2
  8705  0E56  2E62               	goto	l2251
  8706  0E57  2E45               	goto	l2243
  8707  0E58                     l2249:	
  8708  0E58  3001               	movlw	1
  8709  0E59                     u2275:	
  8710  0E59  36C2               	lsrf	___ftadd@f1+2,f
  8711  0E5A  0CC1               	rrf	___ftadd@f1+1,f
  8712  0E5B  0CC0               	rrf	___ftadd@f1,f
  8713  0E5C  0B89               	decfsz	9,f
  8714  0E5D  2E59               	goto	u2275
  8715  0E5E  3001               	movlw	1
  8716  0E5F  00C6               	movwf	??___ftadd
  8717  0E60  0846               	movf	??___ftadd,w
  8718  0E61  07CC               	addwf	___ftadd@exp1,f
  8719  0E62                     l2251:	
  8720  0E62  084C               	movf	___ftadd@exp1,w
  8721  0E63  064B               	xorwf	___ftadd@exp2,w
  8722  0E64  1903               	btfsc	3,2
  8723  0E65  2E8C               	goto	l733
  8724  0E66  2E58               	goto	l2249
  8725  0E67                     l2253:	
  8726  0E67  084C               	movf	___ftadd@exp1,w
  8727  0E68  024B               	subwf	___ftadd@exp2,w
  8728  0E69  1803               	skipnc
  8729  0E6A  2E8C               	goto	l733
  8730  0E6B                     l2255:	
  8731  0E6B  3001               	movlw	1
  8732  0E6C                     u2305:	
  8733  0E6C  35C0               	lslf	___ftadd@f1,f
  8734  0E6D  0DC1               	rlf	___ftadd@f1+1,f
  8735  0E6E  0DC2               	rlf	___ftadd@f1+2,f
  8736  0E6F  0B89               	decfsz	9,f
  8737  0E70  2E6C               	goto	u2305
  8738  0E71  3001               	movlw	1
  8739  0E72  02CC               	subwf	___ftadd@exp1,f
  8740  0E73  084B               	movf	___ftadd@exp2,w
  8741  0E74  064C               	xorwf	___ftadd@exp1,w
  8742  0E75  1903               	skipnz
  8743  0E76  2E88               	goto	l2263
  8744  0E77  3001               	movlw	1
  8745  0E78  02CA               	subwf	___ftadd@sign,f
  8746  0E79  084A               	movf	___ftadd@sign,w
  8747  0E7A  3907               	andlw	7
  8748  0E7B  1903               	btfsc	3,2
  8749  0E7C  2E88               	goto	l2263
  8750  0E7D  2E6B               	goto	l2255
  8751  0E7E                     l2261:	
  8752  0E7E  3001               	movlw	1
  8753  0E7F                     u2335:	
  8754  0E7F  36C5               	lsrf	___ftadd@f2+2,f
  8755  0E80  0CC4               	rrf	___ftadd@f2+1,f
  8756  0E81  0CC3               	rrf	___ftadd@f2,f
  8757  0E82  0B89               	decfsz	9,f
  8758  0E83  2E7F               	goto	u2335
  8759  0E84  3001               	movlw	1
  8760  0E85  00C6               	movwf	??___ftadd
  8761  0E86  0846               	movf	??___ftadd,w
  8762  0E87  07CB               	addwf	___ftadd@exp2,f
  8763  0E88                     l2263:	
  8764  0E88  084C               	movf	___ftadd@exp1,w
  8765  0E89  064B               	xorwf	___ftadd@exp2,w
  8766  0E8A  1D03               	skipz
  8767  0E8B  2E7E               	goto	l2261
  8768  0E8C                     l733:	
  8769  0E8C  1FCA               	btfss	___ftadd@sign,7
  8770  0E8D  2E9E               	goto	l2267
  8771  0E8E  30FF               	movlw	255
  8772  0E8F  06C0               	xorwf	___ftadd@f1,f
  8773  0E90  30FF               	movlw	255
  8774  0E91  06C1               	xorwf	___ftadd@f1+1,f
  8775  0E92  30FF               	movlw	255
  8776  0E93  06C2               	xorwf	___ftadd@f1+2,f
  8777  0E94  3001               	movlw	1
  8778  0E95  07C0               	addwf	___ftadd@f1,f
  8779  0E96  3000               	movlw	0
  8780  0E97  1803               	skipnc
  8781  0E98  3001               	movlw	1
  8782  0E99  07C1               	addwf	___ftadd@f1+1,f
  8783  0E9A  3000               	movlw	0
  8784  0E9B  1803               	skipnc
  8785  0E9C  3001               	movlw	1
  8786  0E9D  07C2               	addwf	___ftadd@f1+2,f
  8787  0E9E                     l2267:	
  8788  0E9E  1F4A               	btfss	___ftadd@sign,6
  8789  0E9F  2EB0               	goto	l2271
  8790  0EA0  30FF               	movlw	255
  8791  0EA1  06C3               	xorwf	___ftadd@f2,f
  8792  0EA2  30FF               	movlw	255
  8793  0EA3  06C4               	xorwf	___ftadd@f2+1,f
  8794  0EA4  30FF               	movlw	255
  8795  0EA5  06C5               	xorwf	___ftadd@f2+2,f
  8796  0EA6  3001               	movlw	1
  8797  0EA7  07C3               	addwf	___ftadd@f2,f
  8798  0EA8  3000               	movlw	0
  8799  0EA9  1803               	skipnc
  8800  0EAA  3001               	movlw	1
  8801  0EAB  07C4               	addwf	___ftadd@f2+1,f
  8802  0EAC  3000               	movlw	0
  8803  0EAD  1803               	skipnc
  8804  0EAE  3001               	movlw	1
  8805  0EAF  07C5               	addwf	___ftadd@f2+2,f
  8806  0EB0                     l2271:	
  8807  0EB0  01CA               	clrf	___ftadd@sign
  8808  0EB1  0840               	movf	___ftadd@f1,w
  8809  0EB2  07C3               	addwf	___ftadd@f2,f
  8810  0EB3  0841               	movf	___ftadd@f1+1,w
  8811  0EB4  3DC4               	addwfc	___ftadd@f2+1,f
  8812  0EB5  0842               	movf	___ftadd@f1+2,w
  8813  0EB6  3DC5               	addwfc	___ftadd@f2+2,f
  8814  0EB7  1FC5               	btfss	___ftadd@f2+2,7
  8815  0EB8  2ECB               	goto	l2281
  8816  0EB9  30FF               	movlw	255
  8817  0EBA  06C3               	xorwf	___ftadd@f2,f
  8818  0EBB  30FF               	movlw	255
  8819  0EBC  06C4               	xorwf	___ftadd@f2+1,f
  8820  0EBD  30FF               	movlw	255
  8821  0EBE  06C5               	xorwf	___ftadd@f2+2,f
  8822  0EBF  3001               	movlw	1
  8823  0EC0  07C3               	addwf	___ftadd@f2,f
  8824  0EC1  3000               	movlw	0
  8825  0EC2  1803               	skipnc
  8826  0EC3  3001               	movlw	1
  8827  0EC4  07C4               	addwf	___ftadd@f2+1,f
  8828  0EC5  3000               	movlw	0
  8829  0EC6  1803               	skipnc
  8830  0EC7  3001               	movlw	1
  8831  0EC8  07C5               	addwf	___ftadd@f2+2,f
  8832  0EC9  01CA               	clrf	___ftadd@sign
  8833  0ECA  0ACA               	incf	___ftadd@sign,f
  8834  0ECB                     l2281:	
  8835  0ECB  0843               	movf	___ftadd@f2,w
  8836  0ECC  00F0               	movwf	___ftpack@arg
  8837  0ECD  0844               	movf	___ftadd@f2+1,w
  8838  0ECE  00F1               	movwf	___ftpack@arg+1
  8839  0ECF  0845               	movf	___ftadd@f2+2,w
  8840  0ED0  00F2               	movwf	___ftpack@arg+2
  8841  0ED1  084C               	movf	___ftadd@exp1,w
  8842  0ED2  00C6               	movwf	??___ftadd
  8843  0ED3  0846               	movf	??___ftadd,w
  8844  0ED4  00F3               	movwf	___ftpack@exp
  8845  0ED5  084A               	movf	___ftadd@sign,w
  8846  0ED6  00C7               	movwf	??___ftadd+1
  8847  0ED7  0847               	movf	??___ftadd+1,w
  8848  0ED8  00F4               	movwf	___ftpack@sign
  8849  0ED9  3180  2017         	fcall	___ftpack
  8850  0EDB  0870               	movf	?___ftpack,w
  8851  0EDC  0020               	movlb	0	; select bank0
  8852  0EDD  00C0               	movwf	?___ftadd
  8853  0EDE  0871               	movf	?___ftpack+1,w
  8854  0EDF  00C1               	movwf	?___ftadd+1
  8855  0EE0  0872               	movf	?___ftpack+2,w
  8856  0EE1  00C2               	movwf	?___ftadd+2
  8857  0EE2  0008               	return
  8858  0EE3                     __end_of___ftadd:	
  8859                           
  8860                           	psect	text11
  8861  0B17                     __ptext11:	
  8862 ;; *************** function ___ftdiv *****************
  8863 ;; Defined at:
  8864 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;  f2              3   16[BANK0 ] float 
  8867 ;;  f1              3   19[BANK0 ] float 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;  f3              3   27[BANK0 ] float 
  8870 ;;  sign            1   31[BANK0 ] unsigned char 
  8871 ;;  exp             1   30[BANK0 ] unsigned char 
  8872 ;;  cntr            1   26[BANK0 ] unsigned char 
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  3   16[BANK0 ] float 
  8875 ;; Registers used:
  8876 ;;		wreg, status,2, status,0, pclath, cstack
  8877 ;; Tracked objects:
  8878 ;;		On entry : 0/0
  8879 ;;		On exit  : 0/0
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8882 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8883 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8884 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8885 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8886 ;;Total ram usage:       16 bytes
  8887 ;; Hardware stack levels used:    1
  8888 ;; Hardware stack levels required when called:    1
  8889 ;; This function calls:
  8890 ;;		___ftpack
  8891 ;; This function is called by:
  8892 ;;		_tempCalc
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           
  8897                           ;psect for function ___ftdiv
  8898  0B17                     ___ftdiv:	
  8899                           
  8900                           ;incstack = 0
  8901                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8902  0B17  0020               	movlb	0	; select bank0
  8903  0B18  0833               	movf	___ftdiv@f1,w
  8904  0B19  00B6               	movwf	??___ftdiv
  8905  0B1A  0834               	movf	___ftdiv@f1+1,w
  8906  0B1B  00B7               	movwf	??___ftdiv+1
  8907  0B1C  0835               	movf	___ftdiv@f1+2,w
  8908  0B1D  00B8               	movwf	??___ftdiv+2
  8909  0B1E  1003               	clrc
  8910  0B1F  0D37               	rlf	??___ftdiv+1,w
  8911  0B20  0D38               	rlf	??___ftdiv+2,w
  8912  0B21  00B9               	movwf	??___ftdiv+3
  8913  0B22  0839               	movf	??___ftdiv+3,w
  8914  0B23  00BE               	movwf	___ftdiv@exp
  8915  0B24  083E               	movf	___ftdiv@exp,w
  8916  0B25  1D03               	btfss	3,2
  8917  0B26  2B2E               	goto	l2829
  8918  0B27  3000               	movlw	0
  8919  0B28  00B0               	movwf	?___ftdiv
  8920  0B29  3000               	movlw	0
  8921  0B2A  00B1               	movwf	?___ftdiv+1
  8922  0B2B  3000               	movlw	0
  8923  0B2C  00B2               	movwf	?___ftdiv+2
  8924  0B2D  0008               	return
  8925  0B2E                     l2829:	
  8926  0B2E  0830               	movf	___ftdiv@f2,w
  8927  0B2F  00B6               	movwf	??___ftdiv
  8928  0B30  0831               	movf	___ftdiv@f2+1,w
  8929  0B31  00B7               	movwf	??___ftdiv+1
  8930  0B32  0832               	movf	___ftdiv@f2+2,w
  8931  0B33  00B8               	movwf	??___ftdiv+2
  8932  0B34  1003               	clrc
  8933  0B35  0D37               	rlf	??___ftdiv+1,w
  8934  0B36  0D38               	rlf	??___ftdiv+2,w
  8935  0B37  00B9               	movwf	??___ftdiv+3
  8936  0B38  0839               	movf	??___ftdiv+3,w
  8937  0B39  00BF               	movwf	___ftdiv@sign
  8938  0B3A  083F               	movf	___ftdiv@sign,w
  8939  0B3B  1D03               	btfss	3,2
  8940  0B3C  2B44               	goto	l2835
  8941  0B3D  3000               	movlw	0
  8942  0B3E  00B0               	movwf	?___ftdiv
  8943  0B3F  3000               	movlw	0
  8944  0B40  00B1               	movwf	?___ftdiv+1
  8945  0B41  3000               	movlw	0
  8946  0B42  00B2               	movwf	?___ftdiv+2
  8947  0B43  0008               	return
  8948  0B44                     l2835:	
  8949  0B44  3000               	movlw	0
  8950  0B45  00BB               	movwf	___ftdiv@f3
  8951  0B46  3000               	movlw	0
  8952  0B47  00BC               	movwf	___ftdiv@f3+1
  8953  0B48  3000               	movlw	0
  8954  0B49  00BD               	movwf	___ftdiv@f3+2
  8955  0B4A  3089               	movlw	137
  8956  0B4B  073F               	addwf	___ftdiv@sign,w
  8957  0B4C  00B6               	movwf	??___ftdiv
  8958  0B4D  0836               	movf	??___ftdiv,w
  8959  0B4E  02BE               	subwf	___ftdiv@exp,f
  8960  0B4F  0833               	movf	___ftdiv@f1,w
  8961  0B50  00B6               	movwf	??___ftdiv
  8962  0B51  0834               	movf	___ftdiv@f1+1,w
  8963  0B52  00B7               	movwf	??___ftdiv+1
  8964  0B53  0835               	movf	___ftdiv@f1+2,w
  8965  0B54  00B8               	movwf	??___ftdiv+2
  8966  0B55  3010               	movlw	16
  8967  0B56                     u3165:	
  8968  0B56  36B8               	lsrf	??___ftdiv+2,f
  8969  0B57  0CB7               	rrf	??___ftdiv+1,f
  8970  0B58  0CB6               	rrf	??___ftdiv,f
  8971  0B59  0B89               	decfsz	9,f
  8972  0B5A  2B56               	goto	u3165
  8973  0B5B  0836               	movf	??___ftdiv,w
  8974  0B5C  00B9               	movwf	??___ftdiv+3
  8975  0B5D  0839               	movf	??___ftdiv+3,w
  8976  0B5E  00BF               	movwf	___ftdiv@sign
  8977  0B5F  0830               	movf	___ftdiv@f2,w
  8978  0B60  00B6               	movwf	??___ftdiv
  8979  0B61  0831               	movf	___ftdiv@f2+1,w
  8980  0B62  00B7               	movwf	??___ftdiv+1
  8981  0B63  0832               	movf	___ftdiv@f2+2,w
  8982  0B64  00B8               	movwf	??___ftdiv+2
  8983  0B65  3010               	movlw	16
  8984  0B66                     u3175:	
  8985  0B66  36B8               	lsrf	??___ftdiv+2,f
  8986  0B67  0CB7               	rrf	??___ftdiv+1,f
  8987  0B68  0CB6               	rrf	??___ftdiv,f
  8988  0B69  0B89               	decfsz	9,f
  8989  0B6A  2B66               	goto	u3175
  8990  0B6B  0836               	movf	??___ftdiv,w
  8991  0B6C  00B9               	movwf	??___ftdiv+3
  8992  0B6D  0839               	movf	??___ftdiv+3,w
  8993  0B6E  06BF               	xorwf	___ftdiv@sign,f
  8994  0B6F  3080               	movlw	128
  8995  0B70  00B6               	movwf	??___ftdiv
  8996  0B71  0836               	movf	??___ftdiv,w
  8997  0B72  05BF               	andwf	___ftdiv@sign,f
  8998  0B73  17B4               	bsf	___ftdiv@f1+1,7
  8999  0B74  30FF               	movlw	255
  9000  0B75  05B3               	andwf	___ftdiv@f1,f
  9001  0B76  30FF               	movlw	255
  9002  0B77  05B4               	andwf	___ftdiv@f1+1,f
  9003  0B78  3000               	movlw	0
  9004  0B79  05B5               	andwf	___ftdiv@f1+2,f
  9005  0B7A  17B1               	bsf	___ftdiv@f2+1,7
  9006  0B7B  30FF               	movlw	255
  9007  0B7C  05B0               	andwf	___ftdiv@f2,f
  9008  0B7D  30FF               	movlw	255
  9009  0B7E  05B1               	andwf	___ftdiv@f2+1,f
  9010  0B7F  3000               	movlw	0
  9011  0B80  05B2               	andwf	___ftdiv@f2+2,f
  9012  0B81  3018               	movlw	24
  9013  0B82  00B6               	movwf	??___ftdiv
  9014  0B83  0836               	movf	??___ftdiv,w
  9015  0B84  00BA               	movwf	___ftdiv@cntr
  9016  0B85                     l2849:	
  9017  0B85  3001               	movlw	1
  9018  0B86                     u3185:	
  9019  0B86  35BB               	lslf	___ftdiv@f3,f
  9020  0B87  0DBC               	rlf	___ftdiv@f3+1,f
  9021  0B88  0DBD               	rlf	___ftdiv@f3+2,f
  9022  0B89  0B89               	decfsz	9,f
  9023  0B8A  2B86               	goto	u3185
  9024  0B8B  0832               	movf	___ftdiv@f2+2,w
  9025  0B8C  0235               	subwf	___ftdiv@f1+2,w
  9026  0B8D  1D03               	skipz
  9027  0B8E  2B95               	goto	u3195
  9028  0B8F  0831               	movf	___ftdiv@f2+1,w
  9029  0B90  0234               	subwf	___ftdiv@f1+1,w
  9030  0B91  1D03               	skipz
  9031  0B92  2B95               	goto	u3195
  9032  0B93  0830               	movf	___ftdiv@f2,w
  9033  0B94  0233               	subwf	___ftdiv@f1,w
  9034  0B95                     u3195:	
  9035  0B95  1C03               	skipc
  9036  0B96  2B9E               	goto	l2857
  9037  0B97  0830               	movf	___ftdiv@f2,w
  9038  0B98  02B3               	subwf	___ftdiv@f1,f
  9039  0B99  0831               	movf	___ftdiv@f2+1,w
  9040  0B9A  3BB4               	subwfb	___ftdiv@f1+1,f
  9041  0B9B  0832               	movf	___ftdiv@f2+2,w
  9042  0B9C  3BB5               	subwfb	___ftdiv@f1+2,f
  9043  0B9D  143B               	bsf	___ftdiv@f3,0
  9044  0B9E                     l2857:	
  9045  0B9E  3001               	movlw	1
  9046  0B9F                     u3205:	
  9047  0B9F  35B3               	lslf	___ftdiv@f1,f
  9048  0BA0  0DB4               	rlf	___ftdiv@f1+1,f
  9049  0BA1  0DB5               	rlf	___ftdiv@f1+2,f
  9050  0BA2  0B89               	decfsz	9,f
  9051  0BA3  2B9F               	goto	u3205
  9052  0BA4  3001               	movlw	1
  9053  0BA5  02BA               	subwf	___ftdiv@cntr,f
  9054  0BA6  1D03               	btfss	3,2
  9055  0BA7  2B85               	goto	l2849
  9056  0BA8  083B               	movf	___ftdiv@f3,w
  9057  0BA9  00F0               	movwf	___ftpack@arg
  9058  0BAA  083C               	movf	___ftdiv@f3+1,w
  9059  0BAB  00F1               	movwf	___ftpack@arg+1
  9060  0BAC  083D               	movf	___ftdiv@f3+2,w
  9061  0BAD  00F2               	movwf	___ftpack@arg+2
  9062  0BAE  083E               	movf	___ftdiv@exp,w
  9063  0BAF  00B6               	movwf	??___ftdiv
  9064  0BB0  0836               	movf	??___ftdiv,w
  9065  0BB1  00F3               	movwf	___ftpack@exp
  9066  0BB2  083F               	movf	___ftdiv@sign,w
  9067  0BB3  00B7               	movwf	??___ftdiv+1
  9068  0BB4  0837               	movf	??___ftdiv+1,w
  9069  0BB5  00F4               	movwf	___ftpack@sign
  9070  0BB6  3180  2017         	fcall	___ftpack
  9071  0BB8  0870               	movf	?___ftpack,w
  9072  0BB9  0020               	movlb	0	; select bank0
  9073  0BBA  00B0               	movwf	?___ftdiv
  9074  0BBB  0871               	movf	?___ftpack+1,w
  9075  0BBC  00B1               	movwf	?___ftdiv+1
  9076  0BBD  0872               	movf	?___ftpack+2,w
  9077  0BBE  00B2               	movwf	?___ftdiv+2
  9078  0BBF  0008               	return
  9079  0BC0                     __end_of___ftdiv:	
  9080                           
  9081                           	psect	text12
  9082  0017                     __ptext12:	
  9083 ;; *************** function ___ftpack *****************
  9084 ;; Defined at:
  9085 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;  arg             3    0[COMMON] unsigned um
  9088 ;;  exp             1    3[COMMON] unsigned char 
  9089 ;;  sign            1    4[COMMON] unsigned char 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;		None
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  3    0[COMMON] float 
  9094 ;; Registers used:
  9095 ;;		wreg, status,2, status,0
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9101 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9105 ;;Total ram usage:        8 bytes
  9106 ;; Hardware stack levels used:    1
  9107 ;; This function calls:
  9108 ;;		Nothing
  9109 ;; This function is called by:
  9110 ;;		___awtoft
  9111 ;;		___ftadd
  9112 ;;		___ftdiv
  9113 ;;		___ftmul
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           
  9118                           ;psect for function ___ftpack
  9119  0017                     ___ftpack:	
  9120                           
  9121                           ;incstack = 0
  9122                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9123  0017  0873               	movf	___ftpack@exp,w
  9124  0018  1903               	btfsc	3,2
  9125  0019  281F               	goto	l2157
  9126  001A  0872               	movf	___ftpack@arg+2,w
  9127  001B  0471               	iorwf	___ftpack@arg+1,w
  9128  001C  0470               	iorwf	___ftpack@arg,w
  9129  001D  1D03               	skipz
  9130  001E  2830               	goto	l2163
  9131  001F                     l2157:	
  9132  001F  3000               	movlw	0
  9133  0020  00F0               	movwf	?___ftpack
  9134  0021  3000               	movlw	0
  9135  0022  00F1               	movwf	?___ftpack+1
  9136  0023  3000               	movlw	0
  9137  0024  00F2               	movwf	?___ftpack+2
  9138  0025  0008               	return
  9139  0026                     l2161:	
  9140  0026  3001               	movlw	1
  9141  0027  00F5               	movwf	??___ftpack
  9142  0028  0875               	movf	??___ftpack,w
  9143  0029  07F3               	addwf	___ftpack@exp,f
  9144  002A  3001               	movlw	1
  9145  002B                     u1975:	
  9146  002B  36F2               	lsrf	___ftpack@arg+2,f
  9147  002C  0CF1               	rrf	___ftpack@arg+1,f
  9148  002D  0CF0               	rrf	___ftpack@arg,f
  9149  002E  0B89               	decfsz	9,f
  9150  002F  282B               	goto	u1975
  9151  0030                     l2163:	
  9152  0030  30FE               	movlw	254
  9153  0031  0572               	andwf	___ftpack@arg+2,w
  9154  0032  1903               	btfsc	3,2
  9155  0033  2849               	goto	l702
  9156  0034  2826               	goto	l2161
  9157  0035                     l2165:	
  9158  0035  3001               	movlw	1
  9159  0036  00F5               	movwf	??___ftpack
  9160  0037  0875               	movf	??___ftpack,w
  9161  0038  07F3               	addwf	___ftpack@exp,f
  9162  0039  3001               	movlw	1
  9163  003A  07F0               	addwf	___ftpack@arg,f
  9164  003B  3000               	movlw	0
  9165  003C  1803               	skipnc
  9166  003D  3001               	movlw	1
  9167  003E  07F1               	addwf	___ftpack@arg+1,f
  9168  003F  3000               	movlw	0
  9169  0040  1803               	skipnc
  9170  0041  3001               	movlw	1
  9171  0042  07F2               	addwf	___ftpack@arg+2,f
  9172  0043  3001               	movlw	1
  9173  0044                     u1995:	
  9174  0044  36F2               	lsrf	___ftpack@arg+2,f
  9175  0045  0CF1               	rrf	___ftpack@arg+1,f
  9176  0046  0CF0               	rrf	___ftpack@arg,f
  9177  0047  0B89               	decfsz	9,f
  9178  0048  2844               	goto	u1995
  9179  0049                     l702:	
  9180  0049  30FF               	movlw	255
  9181  004A  0572               	andwf	___ftpack@arg+2,w
  9182  004B  1903               	btfsc	3,2
  9183  004C  2856               	goto	l2173
  9184  004D  2835               	goto	l2165
  9185  004E                     l2171:	
  9186  004E  3001               	movlw	1
  9187  004F  02F3               	subwf	___ftpack@exp,f
  9188  0050  3001               	movlw	1
  9189  0051                     u2015:	
  9190  0051  35F0               	lslf	___ftpack@arg,f
  9191  0052  0DF1               	rlf	___ftpack@arg+1,f
  9192  0053  0DF2               	rlf	___ftpack@arg+2,f
  9193  0054  0B89               	decfsz	9,f
  9194  0055  2851               	goto	u2015
  9195  0056                     l2173:	
  9196  0056  1BF1               	btfsc	___ftpack@arg+1,7
  9197  0057  285C               	goto	l709
  9198  0058  3002               	movlw	2
  9199  0059  0273               	subwf	___ftpack@exp,w
  9200  005A  1803               	skipnc
  9201  005B  284E               	goto	l2171
  9202  005C                     l709:	
  9203  005C  1873               	btfsc	___ftpack@exp,0
  9204  005D  2864               	goto	l710
  9205  005E  30FF               	movlw	255
  9206  005F  05F0               	andwf	___ftpack@arg,f
  9207  0060  307F               	movlw	127
  9208  0061  05F1               	andwf	___ftpack@arg+1,f
  9209  0062  30FF               	movlw	255
  9210  0063  05F2               	andwf	___ftpack@arg+2,f
  9211  0064                     l710:	
  9212  0064  1003               	clrc
  9213  0065  0CF3               	rrf	___ftpack@exp,f
  9214  0066  0873               	movf	___ftpack@exp,w
  9215  0067  00F5               	movwf	??___ftpack
  9216  0068  01F6               	clrf	??___ftpack+1
  9217  0069  01F7               	clrf	??___ftpack+2
  9218  006A  3010               	movlw	16
  9219  006B                     u2055:	
  9220  006B  35F5               	lslf	??___ftpack,f
  9221  006C  0DF6               	rlf	??___ftpack+1,f
  9222  006D  0DF7               	rlf	??___ftpack+2,f
  9223  006E  0B89               	decfsz	9,f
  9224  006F  286B               	goto	u2055
  9225  0070  0875               	movf	??___ftpack,w
  9226  0071  04F0               	iorwf	___ftpack@arg,f
  9227  0072  0876               	movf	??___ftpack+1,w
  9228  0073  04F1               	iorwf	___ftpack@arg+1,f
  9229  0074  0877               	movf	??___ftpack+2,w
  9230  0075  04F2               	iorwf	___ftpack@arg+2,f
  9231  0076  0874               	movf	___ftpack@sign,w
  9232  0077  1903               	btfsc	3,2
  9233  0078  0008               	return
  9234  0079  17F2               	bsf	___ftpack@arg+2,7
  9235  007A  0008               	return
  9236  007B                     __end_of___ftpack:	
  9237                           
  9238                           	psect	text13
  9239  007B                     __ptext13:	
  9240 ;; *************** function _readAnalog *****************
  9241 ;; Defined at:
  9242 ;;		line 34 in file "adc.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  channel         2    6[BANK0 ] int 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;  value           2   11[COMMON] int 
  9247 ;;  analog_chann    2    9[COMMON] int 
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  2    6[BANK0 ] int 
  9250 ;; Registers used:
  9251 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9257 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9258 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9259 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9260 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9261 ;;Total ram usage:       21 bytes
  9262 ;; Hardware stack levels used:    1
  9263 ;; Hardware stack levels required when called:    1
  9264 ;; This function calls:
  9265 ;;		_ADCRead
  9266 ;;		___aldiv
  9267 ;;		___bmul
  9268 ;; This function is called by:
  9269 ;;		_main
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           
  9274                           ;psect for function _readAnalog
  9275  007B                     _readAnalog:	
  9276                           
  9277                           ;adc.c: 36: int value;
  9278                           ;adc.c: 38: int analog_channel = channels[channel];
  9279                           
  9280                           ;incstack = 0
  9281                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9282  007B  0020               	movlb	0	; select bank0
  9283  007C  3526               	lslf	readAnalog@channel,w
  9284  007D  3E30               	addlw	(low (_channels| (0+256)))& (0+255)
  9285  007E  0086               	movwf	6
  9286  007F  3001               	movlw	1	; select bank2/3
  9287  0080  0087               	movwf	7
  9288  0081  3F40               	moviw [0]fsr1
  9289  0082  00F9               	movwf	readAnalog@analog_channel
  9290  0083  3F41               	moviw [1]fsr1
  9291  0084  00FA               	movwf	readAnalog@analog_channel+1
  9292                           
  9293                           ;adc.c: 40: value = ADCRead(analog_channel);
  9294  0085  0879               	movf	readAnalog@analog_channel,w
  9295  0086  3196  2606  3180   	fcall	_ADCRead
  9296  0089  0871               	movf	?_ADCRead+1,w
  9297  008A  00FC               	movwf	readAnalog@value+1
  9298  008B  0870               	movf	?_ADCRead,w
  9299  008C  00FB               	movwf	readAnalog@value
  9300                           
  9301                           ;adc.c: 42: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9302  008D  0020               	movlb	0	; select bank0
  9303  008E  0826               	movf	readAnalog@channel,w
  9304  008F  00A8               	movwf	??_readAnalog
  9305  0090  3001               	movlw	1
  9306  0091                     u3335:	
  9307  0091  35A8               	lslf	??_readAnalog,f
  9308  0092  3EFF               	addlw	-1
  9309  0093  1D03               	skipz
  9310  0094  2891               	goto	u3335
  9311  0095  3528               	lslf	??_readAnalog,w
  9312  0096  3E44               	addlw	(low (_totals| (0+256)))& (0+255)
  9313  0097  0086               	movwf	6
  9314  0098  3001               	movlw	1	; select bank2/3
  9315  0099  0087               	movwf	7
  9316  009A  3F40               	moviw [0]fsr1
  9317  009B  00A9               	movwf	??_readAnalog+1
  9318  009C  3F41               	moviw [1]fsr1
  9319  009D  00AA               	movwf	??_readAnalog+2
  9320  009E  3F42               	moviw [2]fsr1
  9321  009F  00AB               	movwf	??_readAnalog+3
  9322  00A0  3F43               	moviw [3]fsr1
  9323  00A1  00AC               	movwf	??_readAnalog+4
  9324  00A2  0021               	movlb	1	; select bank1
  9325  00A3  0861               	movf	_sampleIndex^(0+128),w
  9326  00A4  0020               	movlb	0	; select bank0
  9327  00A5  00AD               	movwf	??_readAnalog+5
  9328  00A6  3001               	movlw	1
  9329  00A7                     u3345:	
  9330  00A7  35AD               	lslf	??_readAnalog+5,f
  9331  00A8  0B89               	decfsz	9,f
  9332  00A9  28A7               	goto	u3345
  9333  00AA  3028               	movlw	40
  9334  00AB  00AE               	movwf	??_readAnalog+6
  9335  00AC  082E               	movf	??_readAnalog+6,w
  9336  00AD  00F0               	movwf	___bmul@multiplicand
  9337  00AE  0826               	movf	readAnalog@channel,w
  9338  00AF  3188  2000  3180   	fcall	___bmul
  9339  00B2  3E20               	addlw	(low (_samples| (0+512)))& (0+255)
  9340  00B3  0020               	movlb	0	; select bank0
  9341  00B4  072D               	addwf	??_readAnalog+5,w
  9342  00B5  00AF               	movwf	??_readAnalog+7
  9343  00B6  082F               	movf	??_readAnalog+7,w
  9344  00B7  0086               	movwf	6
  9345  00B8  3002               	movlw	2	; select bank4/5
  9346  00B9  0087               	movwf	7
  9347  00BA  3F40               	moviw [0]fsr1
  9348  00BB  00B0               	movwf	??_readAnalog+8
  9349  00BC  3F41               	moviw [1]fsr1
  9350  00BD  00B1               	movwf	??_readAnalog+9
  9351  00BE  0830               	movf	??_readAnalog+8,w
  9352  00BF  00B2               	movwf	??_readAnalog+10
  9353  00C0  0831               	movf	??_readAnalog+9,w
  9354  00C1  00B3               	movwf	??_readAnalog+11
  9355  00C2  01B4               	clrf	??_readAnalog+12
  9356  00C3  01B5               	clrf	??_readAnalog+13
  9357  00C4  09B2               	comf	??_readAnalog+10,f
  9358  00C5  09B3               	comf	??_readAnalog+11,f
  9359  00C6  09B4               	comf	??_readAnalog+12,f
  9360  00C7  09B5               	comf	??_readAnalog+13,f
  9361  00C8  0AB2               	incf	??_readAnalog+10,f
  9362  00C9  1903               	skipnz
  9363  00CA  0AB3               	incf	??_readAnalog+11,f
  9364  00CB  1903               	skipnz
  9365  00CC  0AB4               	incf	??_readAnalog+12,f
  9366  00CD  1903               	skipnz
  9367  00CE  0AB5               	incf	??_readAnalog+13,f
  9368  00CF  0832               	movf	??_readAnalog+10,w
  9369  00D0  07A9               	addwf	??_readAnalog+1,f
  9370  00D1  0833               	movf	??_readAnalog+11,w
  9371  00D2  3DAA               	addwfc	??_readAnalog+2,f
  9372  00D3  0834               	movf	??_readAnalog+12,w
  9373  00D4  3DAB               	addwfc	??_readAnalog+3,f
  9374  00D5  0835               	movf	??_readAnalog+13,w
  9375  00D6  3DAC               	addwfc	??_readAnalog+4,f
  9376  00D7  0826               	movf	readAnalog@channel,w
  9377  00D8  00B6               	movwf	??_readAnalog+14
  9378  00D9  3001               	movlw	1
  9379  00DA                     u3355:	
  9380  00DA  35B6               	lslf	??_readAnalog+14,f
  9381  00DB  3EFF               	addlw	-1
  9382  00DC  1D03               	skipz
  9383  00DD  28DA               	goto	u3355
  9384  00DE  3536               	lslf	??_readAnalog+14,w
  9385  00DF  3E44               	addlw	(low (_totals| (0+256)))& (0+255)
  9386  00E0  0086               	movwf	6
  9387  00E1  3001               	movlw	1	; select bank2/3
  9388  00E2  0087               	movwf	7
  9389  00E3  0829               	movf	??_readAnalog+1,w
  9390  00E4  3FC0               	movwi [0]fsr1
  9391  00E5  082A               	movf	??_readAnalog+2,w
  9392  00E6  3FC1               	movwi [1]fsr1
  9393  00E7  082B               	movf	??_readAnalog+3,w
  9394  00E8  3FC2               	movwi [2]fsr1
  9395  00E9  082C               	movf	??_readAnalog+4,w
  9396  00EA  3FC3               	movwi [3]fsr1
  9397                           
  9398                           ;adc.c: 44: samples[channel][sampleIndex] = value;
  9399  00EB  0021               	movlb	1	; select bank1
  9400  00EC  0861               	movf	_sampleIndex^(0+128),w
  9401  00ED  0020               	movlb	0	; select bank0
  9402  00EE  00A8               	movwf	??_readAnalog
  9403  00EF  3001               	movlw	1
  9404  00F0                     u3365:	
  9405  00F0  35A8               	lslf	??_readAnalog,f
  9406  00F1  0B89               	decfsz	9,f
  9407  00F2  28F0               	goto	u3365
  9408  00F3  3028               	movlw	40
  9409  00F4  00A9               	movwf	??_readAnalog+1
  9410  00F5  0829               	movf	??_readAnalog+1,w
  9411  00F6  00F0               	movwf	___bmul@multiplicand
  9412  00F7  0826               	movf	readAnalog@channel,w
  9413  00F8  3188  2000  3180   	fcall	___bmul
  9414  00FB  3E20               	addlw	(low (_samples| (0+512)))& (0+255)
  9415  00FC  0020               	movlb	0	; select bank0
  9416  00FD  0728               	addwf	??_readAnalog,w
  9417  00FE  00AA               	movwf	??_readAnalog+2
  9418  00FF  082A               	movf	??_readAnalog+2,w
  9419  0100  0086               	movwf	6
  9420  0101  3002               	movlw	2	; select bank4/5
  9421  0102  0087               	movwf	7
  9422  0103  087B               	movf	readAnalog@value,w
  9423  0104  3FC0               	movwi [0]fsr1
  9424  0105  087C               	movf	readAnalog@value+1,w
  9425  0106  3FC1               	movwi [1]fsr1
  9426                           
  9427                           ;adc.c: 46: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9428  0107  0826               	movf	readAnalog@channel,w
  9429  0108  00A8               	movwf	??_readAnalog
  9430  0109  3001               	movlw	1
  9431  010A                     u3375:	
  9432  010A  35A8               	lslf	??_readAnalog,f
  9433  010B  3EFF               	addlw	-1
  9434  010C  1D03               	skipz
  9435  010D  290A               	goto	u3375
  9436  010E  3528               	lslf	??_readAnalog,w
  9437  010F  3E44               	addlw	(low (_totals| (0+256)))& (0+255)
  9438  0110  0086               	movwf	6
  9439  0111  3001               	movlw	1	; select bank2/3
  9440  0112  0087               	movwf	7
  9441  0113  3F40               	moviw [0]fsr1
  9442  0114  00A9               	movwf	??_readAnalog+1
  9443  0115  3F41               	moviw [1]fsr1
  9444  0116  00AA               	movwf	??_readAnalog+2
  9445  0117  3F42               	moviw [2]fsr1
  9446  0118  00AB               	movwf	??_readAnalog+3
  9447  0119  3F43               	moviw [3]fsr1
  9448  011A  00AC               	movwf	??_readAnalog+4
  9449  011B  0021               	movlb	1	; select bank1
  9450  011C  0861               	movf	_sampleIndex^(0+128),w
  9451  011D  0020               	movlb	0	; select bank0
  9452  011E  00AD               	movwf	??_readAnalog+5
  9453  011F  3001               	movlw	1
  9454  0120                     u3385:	
  9455  0120  35AD               	lslf	??_readAnalog+5,f
  9456  0121  0B89               	decfsz	9,f
  9457  0122  2920               	goto	u3385
  9458  0123  3028               	movlw	40
  9459  0124  00AE               	movwf	??_readAnalog+6
  9460  0125  082E               	movf	??_readAnalog+6,w
  9461  0126  00F0               	movwf	___bmul@multiplicand
  9462  0127  0826               	movf	readAnalog@channel,w
  9463  0128  3188  2000  3180   	fcall	___bmul
  9464  012B  3E20               	addlw	(low (_samples| (0+512)))& (0+255)
  9465  012C  0020               	movlb	0	; select bank0
  9466  012D  072D               	addwf	??_readAnalog+5,w
  9467  012E  00AF               	movwf	??_readAnalog+7
  9468  012F  082F               	movf	??_readAnalog+7,w
  9469  0130  0086               	movwf	6
  9470  0131  3002               	movlw	2	; select bank4/5
  9471  0132  0087               	movwf	7
  9472  0133  3F40               	moviw [0]fsr1
  9473  0134  00B0               	movwf	??_readAnalog+8
  9474  0135  3F41               	moviw [1]fsr1
  9475  0136  00B1               	movwf	??_readAnalog+9
  9476  0137  0830               	movf	??_readAnalog+8,w
  9477  0138  00B2               	movwf	??_readAnalog+10
  9478  0139  0831               	movf	??_readAnalog+9,w
  9479  013A  00B3               	movwf	??_readAnalog+11
  9480  013B  01B4               	clrf	??_readAnalog+12
  9481  013C  01B5               	clrf	??_readAnalog+13
  9482  013D  0832               	movf	??_readAnalog+10,w
  9483  013E  07A9               	addwf	??_readAnalog+1,f
  9484  013F  0833               	movf	??_readAnalog+11,w
  9485  0140  3DAA               	addwfc	??_readAnalog+2,f
  9486  0141  0834               	movf	??_readAnalog+12,w
  9487  0142  3DAB               	addwfc	??_readAnalog+3,f
  9488  0143  0835               	movf	??_readAnalog+13,w
  9489  0144  3DAC               	addwfc	??_readAnalog+4,f
  9490  0145  0826               	movf	readAnalog@channel,w
  9491  0146  00B6               	movwf	??_readAnalog+14
  9492  0147  3001               	movlw	1
  9493  0148                     u3395:	
  9494  0148  35B6               	lslf	??_readAnalog+14,f
  9495  0149  3EFF               	addlw	-1
  9496  014A  1D03               	skipz
  9497  014B  2948               	goto	u3395
  9498  014C  3536               	lslf	??_readAnalog+14,w
  9499  014D  3E44               	addlw	(low (_totals| (0+256)))& (0+255)
  9500  014E  0086               	movwf	6
  9501  014F  3001               	movlw	1	; select bank2/3
  9502  0150  0087               	movwf	7
  9503  0151  0829               	movf	??_readAnalog+1,w
  9504  0152  3FC0               	movwi [0]fsr1
  9505  0153  082A               	movf	??_readAnalog+2,w
  9506  0154  3FC1               	movwi [1]fsr1
  9507  0155  082B               	movf	??_readAnalog+3,w
  9508  0156  3FC2               	movwi [2]fsr1
  9509  0157  082C               	movf	??_readAnalog+4,w
  9510  0158  3FC3               	movwi [3]fsr1
  9511                           
  9512                           ;adc.c: 48: if(channel>=(2-1))
  9513  0159  0827               	movf	readAnalog@channel+1,w
  9514  015A  3A80               	xorlw	128
  9515  015B  00A8               	movwf	??_readAnalog
  9516  015C  3080               	movlw	128
  9517  015D  0228               	subwf	??_readAnalog,w
  9518  015E  1D03               	skipz
  9519  015F  2962               	goto	u3405
  9520  0160  3001               	movlw	1
  9521  0161  0226               	subwf	readAnalog@channel,w
  9522  0162                     u3405:	
  9523  0162  1C03               	skipc
  9524  0163  2972               	goto	l2929
  9525                           
  9526                           ;adc.c: 49: {
  9527                           ;adc.c: 50: sampleIndex+=1;
  9528  0164  3001               	movlw	1
  9529  0165  0021               	movlb	1	; select bank1
  9530  0166  07E1               	addwf	_sampleIndex^(0+128),f
  9531  0167  3000               	movlw	0
  9532  0168  3DE2               	addwfc	(_sampleIndex+1)^(0+128),f
  9533                           
  9534                           ;adc.c: 51: if(sampleIndex >= 20)sampleIndex = 0;
  9535  0169  3000               	movlw	0
  9536  016A  0262               	subwf	(_sampleIndex+1)^(0+128),w
  9537  016B  3014               	movlw	20
  9538  016C  1903               	skipnz
  9539  016D  0261               	subwf	_sampleIndex^(0+128),w
  9540  016E  1C03               	skipc
  9541  016F  2972               	goto	l2929
  9542  0170  01E1               	clrf	_sampleIndex^(0+128)
  9543  0171  01E2               	clrf	(_sampleIndex+1)^(0+128)
  9544  0172                     l2929:	
  9545                           
  9546                           ;adc.c: 52: }
  9547                           ;adc.c: 54: value = totals[channel]/20;
  9548  0172  3000               	movlw	0
  9549  0173  00F3               	movwf	___aldiv@divisor+3
  9550  0174  3000               	movlw	0
  9551  0175  00F2               	movwf	___aldiv@divisor+2
  9552  0176  3000               	movlw	0
  9553  0177  00F1               	movwf	___aldiv@divisor+1
  9554  0178  3014               	movlw	20
  9555  0179  00F0               	movwf	___aldiv@divisor
  9556  017A  0020               	movlb	0	; select bank0
  9557  017B  0826               	movf	readAnalog@channel,w
  9558  017C  00A8               	movwf	??_readAnalog
  9559  017D  3001               	movlw	1
  9560  017E                     u3425:	
  9561  017E  35A8               	lslf	??_readAnalog,f
  9562  017F  3EFF               	addlw	-1
  9563  0180  1D03               	skipz
  9564  0181  297E               	goto	u3425
  9565  0182  3528               	lslf	??_readAnalog,w
  9566  0183  3E44               	addlw	(low (_totals| (0+256)))& (0+255)
  9567  0184  0086               	movwf	6
  9568  0185  3001               	movlw	1	; select bank2/3
  9569  0186  0087               	movwf	7
  9570  0187  3F40               	moviw [0]fsr1
  9571  0188  00F4               	movwf	___aldiv@dividend
  9572  0189  3F41               	moviw [1]fsr1
  9573  018A  00F5               	movwf	___aldiv@dividend+1
  9574  018B  3F42               	moviw [2]fsr1
  9575  018C  00F6               	movwf	___aldiv@dividend+2
  9576  018D  3F43               	moviw [3]fsr1
  9577  018E  00F7               	movwf	___aldiv@dividend+3
  9578  018F  3189  2188         	fcall	___aldiv
  9579  0191  0871               	movf	?___aldiv+1,w
  9580  0192  00FC               	movwf	readAnalog@value+1
  9581  0193  0870               	movf	?___aldiv,w
  9582  0194  00FB               	movwf	readAnalog@value
  9583                           
  9584                           ;adc.c: 56: return value;
  9585  0195  087C               	movf	readAnalog@value+1,w
  9586  0196  0020               	movlb	0	; select bank0
  9587  0197  00A7               	movwf	?_readAnalog+1
  9588  0198  087B               	movf	readAnalog@value,w
  9589  0199  00A6               	movwf	?_readAnalog
  9590  019A  0008               	return
  9591  019B                     __end_of_readAnalog:	
  9592                           
  9593                           	psect	text14
  9594  0800                     __ptext14:	
  9595 ;; *************** function ___bmul *****************
  9596 ;; Defined at:
  9597 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  multiplier      1    wreg     unsigned char 
  9600 ;;  multiplicand    1    0[COMMON] unsigned char 
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  multiplier      1    3[COMMON] unsigned char 
  9603 ;;  product         1    2[COMMON] unsigned char 
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1    wreg      unsigned char 
  9606 ;; Registers used:
  9607 ;;		wreg, status,2, status,0
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9613 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;Total ram usage:        4 bytes
  9618 ;; Hardware stack levels used:    1
  9619 ;; This function calls:
  9620 ;;		Nothing
  9621 ;; This function is called by:
  9622 ;;		_readAnalog
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           
  9627                           ;psect for function ___bmul
  9628  0800                     ___bmul:	
  9629                           
  9630                           ;incstack = 0
  9631                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9632                           ;___bmul@multiplier stored from wreg
  9633  0800  00F3               	movwf	___bmul@multiplier
  9634  0801  01F2               	clrf	___bmul@product
  9635  0802                     l2771:	
  9636  0802  1C73               	btfss	___bmul@multiplier,0
  9637  0803  2808               	goto	l2775
  9638  0804  0870               	movf	___bmul@multiplicand,w
  9639  0805  00F1               	movwf	??___bmul
  9640  0806  0871               	movf	??___bmul,w
  9641  0807  07F2               	addwf	___bmul@product,f
  9642  0808                     l2775:	
  9643  0808  1003               	clrc
  9644  0809  0DF0               	rlf	___bmul@multiplicand,f
  9645  080A  1003               	clrc
  9646  080B  0CF3               	rrf	___bmul@multiplier,f
  9647  080C  0873               	movf	___bmul@multiplier,w
  9648  080D  1D03               	btfss	3,2
  9649  080E  2802               	goto	l2771
  9650  080F  0872               	movf	___bmul@product,w
  9651  0810  0008               	return
  9652  0811                     __end_of___bmul:	
  9653                           
  9654                           	psect	text15
  9655  0988                     __ptext15:	
  9656 ;; *************** function ___aldiv *****************
  9657 ;; Defined at:
  9658 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;  divisor         4    0[COMMON] long 
  9661 ;;  dividend        4    4[COMMON] long 
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;  quotient        4    2[BANK0 ] long 
  9664 ;;  sign            1    1[BANK0 ] unsigned char 
  9665 ;;  counter         1    0[BANK0 ] unsigned char 
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  4    0[COMMON] long 
  9668 ;; Registers used:
  9669 ;;		wreg, status,2, status,0
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9675 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9676 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9677 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;Total ram usage:       15 bytes
  9680 ;; Hardware stack levels used:    1
  9681 ;; This function calls:
  9682 ;;		Nothing
  9683 ;; This function is called by:
  9684 ;;		_readAnalog
  9685 ;;		_main
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           
  9690                           ;psect for function ___aldiv
  9691  0988                     ___aldiv:	
  9692                           
  9693                           ;incstack = 0
  9694                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9695  0988  0020               	movlb	0	; select bank0
  9696  0989  01A1               	clrf	___aldiv@sign
  9697  098A  1FF3               	btfss	___aldiv@divisor+3,7
  9698  098B  2999               	goto	l596
  9699  098C  09F0               	comf	___aldiv@divisor,f
  9700  098D  09F1               	comf	___aldiv@divisor+1,f
  9701  098E  09F2               	comf	___aldiv@divisor+2,f
  9702  098F  09F3               	comf	___aldiv@divisor+3,f
  9703  0990  0AF0               	incf	___aldiv@divisor,f
  9704  0991  1903               	skipnz
  9705  0992  0AF1               	incf	___aldiv@divisor+1,f
  9706  0993  1903               	skipnz
  9707  0994  0AF2               	incf	___aldiv@divisor+2,f
  9708  0995  1903               	skipnz
  9709  0996  0AF3               	incf	___aldiv@divisor+3,f
  9710  0997  01A1               	clrf	___aldiv@sign
  9711  0998  0AA1               	incf	___aldiv@sign,f
  9712  0999                     l596:	
  9713  0999  1FF7               	btfss	___aldiv@dividend+3,7
  9714  099A  29AA               	goto	l2793
  9715  099B  09F4               	comf	___aldiv@dividend,f
  9716  099C  09F5               	comf	___aldiv@dividend+1,f
  9717  099D  09F6               	comf	___aldiv@dividend+2,f
  9718  099E  09F7               	comf	___aldiv@dividend+3,f
  9719  099F  0AF4               	incf	___aldiv@dividend,f
  9720  09A0  1903               	skipnz
  9721  09A1  0AF5               	incf	___aldiv@dividend+1,f
  9722  09A2  1903               	skipnz
  9723  09A3  0AF6               	incf	___aldiv@dividend+2,f
  9724  09A4  1903               	skipnz
  9725  09A5  0AF7               	incf	___aldiv@dividend+3,f
  9726  09A6  3001               	movlw	1
  9727  09A7  00F8               	movwf	??___aldiv
  9728  09A8  0878               	movf	??___aldiv,w
  9729  09A9  06A1               	xorwf	___aldiv@sign,f
  9730  09AA                     l2793:	
  9731  09AA  3000               	movlw	0
  9732  09AB  00A5               	movwf	___aldiv@quotient+3
  9733  09AC  3000               	movlw	0
  9734  09AD  00A4               	movwf	___aldiv@quotient+2
  9735  09AE  3000               	movlw	0
  9736  09AF  00A3               	movwf	___aldiv@quotient+1
  9737  09B0  3000               	movlw	0
  9738  09B1  00A2               	movwf	___aldiv@quotient
  9739  09B2  0873               	movf	___aldiv@divisor+3,w
  9740  09B3  0472               	iorwf	___aldiv@divisor+2,w
  9741  09B4  0471               	iorwf	___aldiv@divisor+1,w
  9742  09B5  0470               	iorwf	___aldiv@divisor,w
  9743  09B6  1903               	skipnz
  9744  09B7  29F3               	goto	l2815
  9745  09B8  01A0               	clrf	___aldiv@counter
  9746  09B9  0AA0               	incf	___aldiv@counter,f
  9747  09BA                     l2801:	
  9748  09BA  1BF3               	btfsc	___aldiv@divisor+3,7
  9749  09BB  29C8               	goto	l2803
  9750  09BC  3001               	movlw	1
  9751  09BD                     u3075:	
  9752  09BD  35F0               	lslf	___aldiv@divisor,f
  9753  09BE  0DF1               	rlf	___aldiv@divisor+1,f
  9754  09BF  0DF2               	rlf	___aldiv@divisor+2,f
  9755  09C0  0DF3               	rlf	___aldiv@divisor+3,f
  9756  09C1  0B89               	decfsz	9,f
  9757  09C2  29BD               	goto	u3075
  9758  09C3  3001               	movlw	1
  9759  09C4  00F8               	movwf	??___aldiv
  9760  09C5  0878               	movf	??___aldiv,w
  9761  09C6  07A0               	addwf	___aldiv@counter,f
  9762  09C7  29BA               	goto	l2801
  9763  09C8                     l2803:	
  9764  09C8  3001               	movlw	1
  9765  09C9                     u3095:	
  9766  09C9  35A2               	lslf	___aldiv@quotient,f
  9767  09CA  0DA3               	rlf	___aldiv@quotient+1,f
  9768  09CB  0DA4               	rlf	___aldiv@quotient+2,f
  9769  09CC  0DA5               	rlf	___aldiv@quotient+3,f
  9770  09CD  0B89               	decfsz	9,f
  9771  09CE  29C9               	goto	u3095
  9772  09CF  0873               	movf	___aldiv@divisor+3,w
  9773  09D0  0277               	subwf	___aldiv@dividend+3,w
  9774  09D1  1D03               	skipz
  9775  09D2  29DD               	goto	u3105
  9776  09D3  0872               	movf	___aldiv@divisor+2,w
  9777  09D4  0276               	subwf	___aldiv@dividend+2,w
  9778  09D5  1D03               	skipz
  9779  09D6  29DD               	goto	u3105
  9780  09D7  0871               	movf	___aldiv@divisor+1,w
  9781  09D8  0275               	subwf	___aldiv@dividend+1,w
  9782  09D9  1D03               	skipz
  9783  09DA  29DD               	goto	u3105
  9784  09DB  0870               	movf	___aldiv@divisor,w
  9785  09DC  0274               	subwf	___aldiv@dividend,w
  9786  09DD                     u3105:	
  9787  09DD  1C03               	skipc
  9788  09DE  29E8               	goto	l2811
  9789  09DF  0870               	movf	___aldiv@divisor,w
  9790  09E0  02F4               	subwf	___aldiv@dividend,f
  9791  09E1  0871               	movf	___aldiv@divisor+1,w
  9792  09E2  3BF5               	subwfb	___aldiv@dividend+1,f
  9793  09E3  0872               	movf	___aldiv@divisor+2,w
  9794  09E4  3BF6               	subwfb	___aldiv@dividend+2,f
  9795  09E5  0873               	movf	___aldiv@divisor+3,w
  9796  09E6  3BF7               	subwfb	___aldiv@dividend+3,f
  9797  09E7  1422               	bsf	___aldiv@quotient,0
  9798  09E8                     l2811:	
  9799  09E8  3001               	movlw	1
  9800  09E9                     u3115:	
  9801  09E9  36F3               	lsrf	___aldiv@divisor+3,f
  9802  09EA  0CF2               	rrf	___aldiv@divisor+2,f
  9803  09EB  0CF1               	rrf	___aldiv@divisor+1,f
  9804  09EC  0CF0               	rrf	___aldiv@divisor,f
  9805  09ED  0B89               	decfsz	9,f
  9806  09EE  29E9               	goto	u3115
  9807  09EF  3001               	movlw	1
  9808  09F0  02A0               	subwf	___aldiv@counter,f
  9809  09F1  1D03               	btfss	3,2
  9810  09F2  29C8               	goto	l2803
  9811  09F3                     l2815:	
  9812  09F3  0821               	movf	___aldiv@sign,w
  9813  09F4  1903               	btfsc	3,2
  9814  09F5  2A01               	goto	l2819
  9815  09F6  09A2               	comf	___aldiv@quotient,f
  9816  09F7  09A3               	comf	___aldiv@quotient+1,f
  9817  09F8  09A4               	comf	___aldiv@quotient+2,f
  9818  09F9  09A5               	comf	___aldiv@quotient+3,f
  9819  09FA  0AA2               	incf	___aldiv@quotient,f
  9820  09FB  1903               	skipnz
  9821  09FC  0AA3               	incf	___aldiv@quotient+1,f
  9822  09FD  1903               	skipnz
  9823  09FE  0AA4               	incf	___aldiv@quotient+2,f
  9824  09FF  1903               	skipnz
  9825  0A00  0AA5               	incf	___aldiv@quotient+3,f
  9826  0A01                     l2819:	
  9827  0A01  0825               	movf	___aldiv@quotient+3,w
  9828  0A02  00F3               	movwf	?___aldiv+3
  9829  0A03  0824               	movf	___aldiv@quotient+2,w
  9830  0A04  00F2               	movwf	?___aldiv+2
  9831  0A05  0823               	movf	___aldiv@quotient+1,w
  9832  0A06  00F1               	movwf	?___aldiv+1
  9833  0A07  0822               	movf	___aldiv@quotient,w
  9834  0A08  00F0               	movwf	?___aldiv
  9835  0A09  0008               	return
  9836  0A0A                     __end_of___aldiv:	
  9837                           
  9838                           	psect	text16
  9839  1606                     __ptext16:	
  9840 ;; *************** function _ADCRead *****************
  9841 ;; Defined at:
  9842 ;;		line 16 in file "adc.c"
  9843 ;; Parameters:    Size  Location     Type
  9844 ;;  channel         1    wreg     enum E13559
  9845 ;; Auto vars:     Size  Location     Type
  9846 ;;  channel         1    3[COMMON] enum E13559
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  2    0[COMMON] unsigned int 
  9849 ;; Registers used:
  9850 ;;		wreg
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9856 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9860 ;;Total ram usage:        4 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_readAnalog
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           
  9870                           ;psect for function _ADCRead
  9871  1606                     _ADCRead:	
  9872                           
  9873                           ;incstack = 0
  9874                           ; Regs used in _ADCRead: [wreg]
  9875                           ;ADCRead@channel stored from wreg
  9876  1606  00F3               	movwf	ADCRead@channel
  9877                           
  9878                           ;adc.c: 18: ADPCH = channel;
  9879  1607  0873               	movf	ADCRead@channel,w
  9880  1608  0021               	movlb	1	; select bank1
  9881  1609  009E               	movwf	30	;volatile
  9882                           
  9883                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9884  160A  1793               	bsf	19,7	;volatile
  9885                           
  9886                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9887  160B  1313               	bcf	19,6	;volatile
  9888                           
  9889                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9890  160C  1413               	bsf	19,0	;volatile
  9891  160D                     l55:	
  9892                           ;adc.c: 27: {
  9893                           
  9894                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9895                           
  9896  160D  1813               	btfsc	19,0	;volatile
  9897  160E  2E0D               	goto	l55
  9898                           
  9899                           ;adc.c: 28: }
  9900                           ;adc.c: 30: return ((ADRESH<<8)+ADRESL);
  9901  160F  080D               	movf	13,w	;volatile
  9902  1610  00F1               	movwf	?_ADCRead+1
  9903  1611  080C               	movf	12,w	;volatile
  9904  1612  00F0               	movwf	?_ADCRead
  9905  1613  0008               	return
  9906  1614                     __end_of_ADCRead:	
  9907                           
  9908                           	psect	text17
  9909  0307                     __ptext17:	
  9910 ;; *************** function _menuChoice *****************
  9911 ;; Defined at:
  9912 ;;		line 52 in file "menu.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;		None
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;		None
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  1    wreg      void 
  9919 ;; Registers used:
  9920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9928 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;Total ram usage:        5 bytes
  9931 ;; Hardware stack levels used:    1
  9932 ;; Hardware stack levels required when called:    3
  9933 ;; This function calls:
  9934 ;;		_LCD_Clear
  9935 ;;		_LCD_Set_Cursor
  9936 ;;		_LCD_Write_Char
  9937 ;;		_LCD_Write_Int
  9938 ;;		_LCD_Write_String
  9939 ;;		_PWM7_LoadDutyValue
  9940 ;;		_readKey
  9941 ;; This function is called by:
  9942 ;;		_main
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           
  9947                           ;psect for function _menuChoice
  9948  0307                     _menuChoice:	
  9949  0307                     l3061:	
  9950                           ;menu.c: 54: while(RB2 != 1)
  9951                           
  9952                           ;incstack = 0
  9953                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9954                           
  9955  0307  0020               	movlb	0	; select bank0
  9956  0308  190D               	btfsc	13,2	;volatile
  9957  0309  2B60               	goto	l3063
  9958                           
  9959                           ;menu.c: 55: {
  9960                           ;menu.c: 56: choice = readKey();
  9961  030A  3180  2004  3183   	fcall	_readKey
  9962  030D  0020               	movlb	0	; select bank0
  9963  030E  00AE               	movwf	??_menuChoice
  9964  030F  082E               	movf	??_menuChoice,w
  9965  0310  00EC               	movwf	_choice
  9966                           
  9967                           ;menu.c: 58: if(timer > 4000)
  9968  0311  0021               	movlb	1	; select bank1
  9969  0312  0864               	movf	(_timer+1)^(0+128),w
  9970  0313  3A80               	xorlw	128
  9971  0314  0020               	movlb	0	; select bank0
  9972  0315  00AE               	movwf	??_menuChoice
  9973  0316  308F               	movlw	143
  9974  0317  022E               	subwf	??_menuChoice,w
  9975  0318  1D03               	skipz
  9976  0319  2B1D               	goto	u3555
  9977  031A  30A1               	movlw	161
  9978  031B  0021               	movlb	1	; select bank1
  9979  031C  0263               	subwf	_timer^(0+128),w
  9980  031D                     u3555:	
  9981  031D  1C03               	skipc
  9982  031E  2B23               	goto	l3039
  9983                           
  9984                           ;menu.c: 59: {
  9985                           ;menu.c: 60: timer = 0;
  9986  031F  0021               	movlb	1	; select bank1
  9987  0320  01E3               	clrf	_timer^(0+128)
  9988  0321  01E4               	clrf	(_timer+1)^(0+128)
  9989                           
  9990                           ;menu.c: 61: goto Exit;
  9991  0322  2D30               	goto	l3171
  9992  0323                     l3039:	
  9993                           
  9994                           ;menu.c: 62: }
  9995                           ;menu.c: 64: if(timer2>125){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}
      +                          else { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
  9996  0323  307E               	movlw	126
  9997  0324  0020               	movlb	0	; select bank0
  9998  0325  026F               	subwf	_timer2,w
  9999  0326  1C03               	skipc
 10000  0327  2B31               	goto	l3045
 10001  0328  01F4               	clrf	LCD_Set_Cursor@y
 10002  0329  3000               	movlw	0
 10003  032A  3188  2011  3183   	fcall	_LCD_Set_Cursor
 10004  032D  305F               	movlw	low (STR_3| (0+32768))
 10005  032E  00F5               	movwf	LCD_Write_String@a
 10006  032F  3090               	movlw	high (STR_3| (0+32768))
 10007  0330  2B39               	goto	L3
 10008  0331                     l3045:	
 10009  0331  01F4               	clrf	LCD_Set_Cursor@y
 10010  0332  3000               	movlw	0
 10011  0333  3188  2011  3183   	fcall	_LCD_Set_Cursor
 10012  0336  304E               	movlw	low (STR_4| (0+32768))
 10013  0337  00F5               	movwf	LCD_Write_String@a
 10014  0338  3090               	movlw	high (STR_4| (0+32768))
 10015  0339                     L3:	
 10016  0339  00F6               	movwf	LCD_Write_String@a+1
 10017  033A  3196  2670  3183   	fcall	_LCD_Write_String
 10018                           
 10019                           ;menu.c: 66: { LCD_Set_Cursor(0,1); LCD_Write_String(desc[choice]);};
 10020  033D  01F4               	clrf	LCD_Set_Cursor@y
 10021  033E  0AF4               	incf	LCD_Set_Cursor@y,f
 10022  033F  3000               	movlw	0
 10023  0340  3188  2011  3183   	fcall	_LCD_Set_Cursor
 10024  0343  0020               	movlb	0	; select bank0
 10025  0344  356C               	lslf	_choice,w
 10026  0345  3E34               	addlw	(low (_desc| (0+256)))& (0+255)
 10027  0346  0086               	movwf	6
 10028  0347  3001               	movlw	1	; select bank2/3
 10029  0348  0087               	movwf	7
 10030  0349  3F40               	moviw [0]fsr1
 10031  034A  00F5               	movwf	LCD_Write_String@a
 10032  034B  3F41               	moviw [1]fsr1
 10033  034C  00F6               	movwf	LCD_Write_String@a+1
 10034  034D  3196  2670  3183   	fcall	_LCD_Write_String
 10035                           
 10036                           ;menu.c: 68: if(timer2>249)timer2=0;
 10037  0350  30FA               	movlw	250
 10038  0351  0020               	movlb	0	; select bank0
 10039  0352  026F               	subwf	_timer2,w
 10040  0353  1803               	btfsc	3,0
 10041  0354  01EF               	clrf	_timer2
 10042                           
 10043                           ;menu.c: 70: timer+=1;
 10044  0355  3001               	movlw	1
 10045  0356  0021               	movlb	1	; select bank1
 10046  0357  07E3               	addwf	_timer^(0+128),f
 10047  0358  3000               	movlw	0
 10048  0359  3DE4               	addwfc	(_timer+1)^(0+128),f
 10049                           
 10050                           ;menu.c: 71: timer2+=1;
 10051  035A  3001               	movlw	1
 10052  035B  0020               	movlb	0	; select bank0
 10053  035C  00AE               	movwf	??_menuChoice
 10054  035D  082E               	movf	??_menuChoice,w
 10055  035E  07EF               	addwf	_timer2,f
 10056  035F  2B07               	goto	l3061
 10057  0360                     l3063:	
 10058                           
 10059                           ;menu.c: 72: }
 10060                           ;menu.c: 73: timer=0;
 10061  0360  0021               	movlb	1	; select bank1
 10062  0361  01E3               	clrf	_timer^(0+128)
 10063  0362  01E4               	clrf	(_timer+1)^(0+128)
 10064                           
 10065                           ;menu.c: 74: timer2=0;
 10066  0363  0020               	movlb	0	; select bank0
 10067  0364  01EF               	clrf	_timer2
 10068                           
 10069                           ;menu.c: 76: _delay((unsigned long)((1000)*(32000000/4000.0)));
 10070  0365  3029               	movlw	41
 10071  0366  00B0               	movwf	??_menuChoice+2
 10072  0367  3096               	movlw	150
 10073  0368  00AF               	movwf	??_menuChoice+1
 10074  0369  30A6               	movlw	166
 10075  036A  00AE               	movwf	??_menuChoice
 10076  036B                     u3927:	
 10077  036B  0BAE               	decfsz	??_menuChoice,f
 10078  036C  2B6B               	goto	u3927
 10079  036D  0BAF               	decfsz	??_menuChoice+1,f
 10080  036E  2B6B               	goto	u3927
 10081  036F  0BB0               	decfsz	??_menuChoice+2,f
 10082  0370  2B6B               	goto	u3927
 10083                           
 10084                           ;menu.c: 78: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1, 
      +                          0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10085  0371  0020               	movlb	0	; select bank0
 10086  0372  086C               	movf	_choice,w
 10087  0373  1D03               	btfss	3,2
 10088  0374  2B89               	goto	l3073
 10089  0375  01F4               	clrf	LCD_Set_Cursor@y
 10090  0376  0AF4               	incf	LCD_Set_Cursor@y,f
 10091  0377  300A               	movlw	10
 10092  0378  3188  2011  3183   	fcall	_LCD_Set_Cursor
 10093  037B  0020               	movlb	0	; select bank0
 10094  037C  356C               	lslf	_choice,w
 10095  037D  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10096  037E  0086               	movwf	6
 10097  037F  0187               	clrf	7
 10098  0380  3F40               	moviw [0]fsr1
 10099  0381  00F9               	movwf	LCD_Write_Int@value
 10100  0382  3F41               	moviw [1]fsr1
 10101  0383  00FA               	movwf	LCD_Write_Int@value+1
 10102  0384  01FB               	clrf	LCD_Write_Int@fieldLength
 10103  0385  03FB               	decf	LCD_Write_Int@fieldLength,f
 10104  0386  01FC               	clrf	LCD_Write_Int@numPlaces
 10105  0387  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10106  0388  2B9B               	goto	L4
 10107  0389                     l3073:	
 10108  0389  01F4               	clrf	LCD_Set_Cursor@y
 10109  038A  0AF4               	incf	LCD_Set_Cursor@y,f
 10110  038B  300A               	movlw	10
 10111  038C  3188  2011  3183   	fcall	_LCD_Set_Cursor
 10112  038F  0020               	movlb	0	; select bank0
 10113  0390  356C               	lslf	_choice,w
 10114  0391  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10115  0392  0086               	movwf	6
 10116  0393  0187               	clrf	7
 10117  0394  3F40               	moviw [0]fsr1
 10118  0395  00F9               	movwf	LCD_Write_Int@value
 10119  0396  3F41               	moviw [1]fsr1
 10120  0397  00FA               	movwf	LCD_Write_Int@value+1
 10121  0398  01FB               	clrf	LCD_Write_Int@fieldLength
 10122  0399  03FB               	decf	LCD_Write_Int@fieldLength,f
 10123  039A  01FC               	clrf	LCD_Write_Int@numPlaces
 10124  039B                     L4:	
 10125  039B  01FD               	clrf	LCD_Write_Int@sign
 10126  039C  318D  2524  3183   	fcall	_LCD_Write_Int
 10127                           
 10128                           ;menu.c: 80: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10129  039F  3052               	movlw	82
 10130  03A0  0020               	movlb	0	; select bank0
 10131  03A1  00B0               	movwf	??_menuChoice+2
 10132  03A2  302C               	movlw	44
 10133  03A3  00AF               	movwf	??_menuChoice+1
 10134  03A4  304F               	movlw	79
 10135  03A5  00AE               	movwf	??_menuChoice
 10136  03A6                     u3937:	
 10137  03A6  0BAE               	decfsz	??_menuChoice,f
 10138  03A7  2BA6               	goto	u3937
 10139  03A8  0BAF               	decfsz	??_menuChoice+1,f
 10140  03A9  2BA6               	goto	u3937
 10141  03AA  0BB0               	decfsz	??_menuChoice+2,f
 10142  03AB  2BA6               	goto	u3937
 10143  03AC  3200               	nop2
 10144                           
 10145                           ;menu.c: 82: while(RB2 != 1)
 10146  03AD  2D02               	goto	l3169
 10147  03AE                     l3089:	
 10148                           ;menu.c: 89: goto Exit;
 10149                           
 10150                           
 10151                           ;menu.c: 90: }
 10152                           ;menu.c: 91: _delay((unsigned long)((2)*(32000000/4000.0)));
 10153  03AE  3015               	movlw	21
 10154  03AF  0020               	movlb	0	; select bank0
 10155  03B0  00AF               	movwf	??_menuChoice+1
 10156  03B1  30C6               	movlw	198
 10157  03B2  00AE               	movwf	??_menuChoice
 10158  03B3                     u3957:	
 10159  03B3  0BAE               	decfsz	??_menuChoice,f
 10160  03B4  2BB3               	goto	u3957
 10161  03B5  0BAF               	decfsz	??_menuChoice+1,f
 10162  03B6  2BB3               	goto	u3957
 10163  03B7  0000               	nop
 10164                           
 10165                           ;menu.c: 92: timer+=1;
 10166  03B8  3001               	movlw	1
 10167  03B9  0021               	movlb	1	; select bank1
 10168  03BA  07E3               	addwf	_timer^(0+128),f
 10169  03BB  3000               	movlw	0
 10170  03BC  3DE4               	addwfc	(_timer+1)^(0+128),f
 10171                           
 10172                           ;menu.c: 94: if(RB0==1)
 10173  03BD  0020               	movlb	0	; select bank0
 10174  03BE  1C0D               	btfss	13,0	;volatile
 10175  03BF  2C4D               	goto	l3123
 10176                           
 10177                           ;menu.c: 95: {
 10178                           ;menu.c: 96: delayCount+=2;
 10179  03C0  3002               	movlw	2
 10180  03C1  00AE               	movwf	??_menuChoice
 10181  03C2  082E               	movf	??_menuChoice,w
 10182  03C3  07ED               	addwf	_delayCount,f
 10183                           
 10184                           ;menu.c: 98: setpoint[choice]+=1;
 10185  03C4  356C               	lslf	_choice,w
 10186  03C5  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10187  03C6  0086               	movwf	6
 10188  03C7  0187               	clrf	7
 10189  03C8  3001               	movlw	1
 10190  03C9  0781               	addwf	1,f
 10191  03CA  3141               	addfsr 1,1
 10192  03CB  1803               	skipnc
 10193  03CC  0A81               	incf	1,f
 10194                           
 10195                           ;menu.c: 99: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[choi
      +                          ce];
 10196  03CD  356C               	lslf	_choice,w
 10197  03CE  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10198  03CF  0086               	movwf	6
 10199  03D0  0187               	clrf	7
 10200  03D1  3F40               	moviw [0]fsr1
 10201  03D2  00AE               	movwf	??_menuChoice
 10202  03D3  3F41               	moviw [1]fsr1
 10203  03D4  00AF               	movwf	??_menuChoice+1
 10204  03D5  356C               	lslf	_choice,w
 10205  03D6  3E38               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10206  03D7  0086               	movwf	6
 10207  03D8  3001               	movlw	1	; select bank2/3
 10208  03D9  0087               	movwf	7
 10209  03DA  3F40               	moviw [0]fsr1
 10210  03DB  00B0               	movwf	??_menuChoice+2
 10211  03DC  3F41               	moviw [1]fsr1
 10212  03DD  00B1               	movwf	??_menuChoice+3
 10213  03DE  0831               	movf	??_menuChoice+3,w
 10214  03DF  3A80               	xorlw	128
 10215  03E0  00B2               	movwf	??_menuChoice+4
 10216  03E1  082F               	movf	??_menuChoice+1,w
 10217  03E2  3A80               	xorlw	128
 10218  03E3  0232               	subwf	??_menuChoice+4,w
 10219  03E4  1D03               	skipz
 10220  03E5  2BE8               	goto	u3625
 10221  03E6  082E               	movf	??_menuChoice,w
 10222  03E7  0230               	subwf	??_menuChoice+2,w
 10223  03E8                     u3625:	
 10224  03E8  1803               	skipnc
 10225  03E9  2BF8               	goto	l3101
 10226  03EA  0020               	movlb	0	; select bank0
 10227  03EB  356C               	lslf	_choice,w
 10228  03EC  3E38               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10229  03ED  0086               	movwf	6
 10230  03EE  3001               	movlw	1	; select bank2/3
 10231  03EF  0087               	movwf	7
 10232  03F0  356C               	lslf	_choice,w
 10233  03F1  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10234  03F2  0084               	movwf	4
 10235  03F3  0185               	clrf	5
 10236  03F4  3F40               	moviw [0]fsr1
 10237  03F5  3F80               	movwi [0]fsr0
 10238  03F6  3F41               	moviw [1]fsr1
 10239  03F7  3F81               	movwi [1]fsr0
 10240  03F8                     l3101:	
 10241                           
 10242                           ;menu.c: 100: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10243  03F8  0020               	movlb	0	; select bank0
 10244  03F9  086C               	movf	_choice,w
 10245  03FA  1D03               	btfss	3,2
 10246  03FB  2C10               	goto	l3107
 10247  03FC  01F4               	clrf	LCD_Set_Cursor@y
 10248  03FD  0AF4               	incf	LCD_Set_Cursor@y,f
 10249  03FE  300A               	movlw	10
 10250  03FF  3188  2011  3183   	fcall	_LCD_Set_Cursor
 10251  0402  0020               	movlb	0	; select bank0
 10252  0403  356C               	lslf	_choice,w
 10253  0404  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10254  0405  0086               	movwf	6
 10255  0406  0187               	clrf	7
 10256  0407  3F40               	moviw [0]fsr1
 10257  0408  00F9               	movwf	LCD_Write_Int@value
 10258  0409  3F41               	moviw [1]fsr1
 10259  040A  00FA               	movwf	LCD_Write_Int@value+1
 10260  040B  01FB               	clrf	LCD_Write_Int@fieldLength
 10261  040C  03FB               	decf	LCD_Write_Int@fieldLength,f
 10262  040D  01FC               	clrf	LCD_Write_Int@numPlaces
 10263  040E  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10264  040F  2C22               	goto	L5
 10265  0410                     l3107:	
 10266  0410  01F4               	clrf	LCD_Set_Cursor@y
 10267  0411  0AF4               	incf	LCD_Set_Cursor@y,f
 10268  0412  300A               	movlw	10
 10269  0413  3188  2011  3183   	fcall	_LCD_Set_Cursor
 10270  0416  0020               	movlb	0	; select bank0
 10271  0417  356C               	lslf	_choice,w
 10272  0418  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10273  0419  0086               	movwf	6
 10274  041A  0187               	clrf	7
 10275  041B  3F40               	moviw [0]fsr1
 10276  041C  00F9               	movwf	LCD_Write_Int@value
 10277  041D  3F41               	moviw [1]fsr1
 10278  041E  00FA               	movwf	LCD_Write_Int@value+1
 10279  041F  01FB               	clrf	LCD_Write_Int@fieldLength
 10280  0420  03FB               	decf	LCD_Write_Int@fieldLength,f
 10281  0421  01FC               	clrf	LCD_Write_Int@numPlaces
 10282  0422                     L5:	
 10283  0422  01FD               	clrf	LCD_Write_Int@sign
 10284  0423  318D  2524  3183   	fcall	_LCD_Write_Int
 10285                           
 10286                           ;menu.c: 101: LCD_Write_Char(' ');
 10287  0426  3020               	movlw	32
 10288  0427  3197  272D  3183   	fcall	_LCD_Write_Char
 10289                           
 10290                           ;menu.c: 102: menuDelay=1255;
 10291  042A  30E7               	movlw	231
 10292  042B  0022               	movlb	2	; select bank2
 10293  042C  00D9               	movwf	_menuDelay^(0+256)
 10294  042D  3004               	movlw	4
 10295  042E  00DA               	movwf	(_menuDelay^(0+256)+1)
 10296                           
 10297                           ;menu.c: 103: if(delayCount<30)
 10298  042F  301E               	movlw	30
 10299  0430  0020               	movlb	0	; select bank0
 10300  0431  026D               	subwf	_delayCount,w
 10301  0432  1803               	skipnc
 10302  0433  2C41               	goto	l379
 10303                           
 10304                           ;menu.c: 104: {
 10305                           ;menu.c: 105: _delay((unsigned long)((150)*(32000000/4000.0)));
 10306  0434  3007               	movlw	7
 10307  0435  00B0               	movwf	??_menuChoice+2
 10308  0436  3017               	movlw	23
 10309  0437  00AF               	movwf	??_menuChoice+1
 10310  0438  306F               	movlw	111
 10311  0439  00AE               	movwf	??_menuChoice
 10312  043A                     u3967:	
 10313  043A  0BAE               	decfsz	??_menuChoice,f
 10314  043B  2C3A               	goto	u3967
 10315  043C  0BAF               	decfsz	??_menuChoice+1,f
 10316  043D  2C3A               	goto	u3967
 10317  043E  0BB0               	decfsz	??_menuChoice+2,f
 10318  043F  2C3A               	goto	u3967
 10319  0440  0000               	nop
 10320  0441                     l379:	
 10321                           
 10322                           ;menu.c: 106: }
 10323                           ;menu.c: 107: if(delayCount>(30+10))delayCount=(30+10);
 10324  0441  3029               	movlw	41
 10325  0442  0020               	movlb	0	; select bank0
 10326  0443  026D               	subwf	_delayCount,w
 10327  0444  1C03               	skipc
 10328  0445  2C4A               	goto	l3121
 10329  0446  3028               	movlw	40
 10330  0447  00AE               	movwf	??_menuChoice
 10331  0448  082E               	movf	??_menuChoice,w
 10332  0449  00ED               	movwf	_delayCount
 10333  044A                     l3121:	
 10334                           
 10335                           ;menu.c: 109: timer=0;
 10336  044A  0021               	movlb	1	; select bank1
 10337  044B  01E3               	clrf	_timer^(0+128)
 10338  044C  01E4               	clrf	(_timer+1)^(0+128)
 10339  044D                     l3123:	
 10340                           
 10341                           ;menu.c: 110: }
 10342                           ;menu.c: 113: if(RB1==1)
 10343  044D  0020               	movlb	0	; select bank0
 10344  044E  1C8D               	btfss	13,1	;volatile
 10345  044F  2CDE               	goto	l3155
 10346                           
 10347                           ;menu.c: 114: {
 10348                           ;menu.c: 115: delayCount+=2;
 10349  0450  3002               	movlw	2
 10350  0451  00AE               	movwf	??_menuChoice
 10351  0452  082E               	movf	??_menuChoice,w
 10352  0453  07ED               	addwf	_delayCount,f
 10353                           
 10354                           ;menu.c: 116: setpoint[choice]-=1;
 10355  0454  356C               	lslf	_choice,w
 10356  0455  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10357  0456  0086               	movwf	6
 10358  0457  0187               	clrf	7
 10359  0458  30FF               	movlw	255
 10360  0459  0781               	addwf	1,f
 10361  045A  3141               	addfsr 1,1
 10362  045B  30FF               	movlw	255
 10363  045C  3D81               	addwfc	1,f
 10364  045D  317F               	addfsr 1,-1
 10365                           
 10366                           ;menu.c: 117: if(setpoint[choice]<lowRangeSet[choice])setpoint[choice]=lowRangeSet[choic
      +                          e];
 10367  045E  356C               	lslf	_choice,w
 10368  045F  3E3C               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10369  0460  0086               	movwf	6
 10370  0461  3001               	movlw	1	; select bank2/3
 10371  0462  0087               	movwf	7
 10372  0463  3F40               	moviw [0]fsr1
 10373  0464  00AE               	movwf	??_menuChoice
 10374  0465  3F41               	moviw [1]fsr1
 10375  0466  00AF               	movwf	??_menuChoice+1
 10376  0467  356C               	lslf	_choice,w
 10377  0468  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10378  0469  0086               	movwf	6
 10379  046A  0187               	clrf	7
 10380  046B  3F40               	moviw [0]fsr1
 10381  046C  00B0               	movwf	??_menuChoice+2
 10382  046D  3F41               	moviw [1]fsr1
 10383  046E  00B1               	movwf	??_menuChoice+3
 10384  046F  0831               	movf	??_menuChoice+3,w
 10385  0470  3A80               	xorlw	128
 10386  0471  00B2               	movwf	??_menuChoice+4
 10387  0472  082F               	movf	??_menuChoice+1,w
 10388  0473  3A80               	xorlw	128
 10389  0474  0232               	subwf	??_menuChoice+4,w
 10390  0475  1D03               	skipz
 10391  0476  2C79               	goto	u3675
 10392  0477  082E               	movf	??_menuChoice,w
 10393  0478  0230               	subwf	??_menuChoice+2,w
 10394  0479                     u3675:	
 10395  0479  1803               	skipnc
 10396  047A  2C89               	goto	l3133
 10397  047B  0020               	movlb	0	; select bank0
 10398  047C  356C               	lslf	_choice,w
 10399  047D  3E3C               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10400  047E  0086               	movwf	6
 10401  047F  3001               	movlw	1	; select bank2/3
 10402  0480  0087               	movwf	7
 10403  0481  356C               	lslf	_choice,w
 10404  0482  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10405  0483  0084               	movwf	4
 10406  0484  0185               	clrf	5
 10407  0485  3F40               	moviw [0]fsr1
 10408  0486  3F80               	movwi [0]fsr0
 10409  0487  3F41               	moviw [1]fsr1
 10410  0488  3F81               	movwi [1]fsr0
 10411  0489                     l3133:	
 10412                           
 10413                           ;menu.c: 118: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10414  0489  0020               	movlb	0	; select bank0
 10415  048A  086C               	movf	_choice,w
 10416  048B  1D03               	btfss	3,2
 10417  048C  2CA1               	goto	l3139
 10418  048D  01F4               	clrf	LCD_Set_Cursor@y
 10419  048E  0AF4               	incf	LCD_Set_Cursor@y,f
 10420  048F  300A               	movlw	10
 10421  0490  3188  2011  3183   	fcall	_LCD_Set_Cursor
 10422  0493  0020               	movlb	0	; select bank0
 10423  0494  356C               	lslf	_choice,w
 10424  0495  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10425  0496  0086               	movwf	6
 10426  0497  0187               	clrf	7
 10427  0498  3F40               	moviw [0]fsr1
 10428  0499  00F9               	movwf	LCD_Write_Int@value
 10429  049A  3F41               	moviw [1]fsr1
 10430  049B  00FA               	movwf	LCD_Write_Int@value+1
 10431  049C  01FB               	clrf	LCD_Write_Int@fieldLength
 10432  049D  03FB               	decf	LCD_Write_Int@fieldLength,f
 10433  049E  01FC               	clrf	LCD_Write_Int@numPlaces
 10434  049F  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10435  04A0  2CB3               	goto	L6
 10436  04A1                     l3139:	
 10437  04A1  01F4               	clrf	LCD_Set_Cursor@y
 10438  04A2  0AF4               	incf	LCD_Set_Cursor@y,f
 10439  04A3  300A               	movlw	10
 10440  04A4  3188  2011  3183   	fcall	_LCD_Set_Cursor
 10441  04A7  0020               	movlb	0	; select bank0
 10442  04A8  356C               	lslf	_choice,w
 10443  04A9  3EE6               	addlw	(low (_setpoint| 0))& (0+255)
 10444  04AA  0086               	movwf	6
 10445  04AB  0187               	clrf	7
 10446  04AC  3F40               	moviw [0]fsr1
 10447  04AD  00F9               	movwf	LCD_Write_Int@value
 10448  04AE  3F41               	moviw [1]fsr1
 10449  04AF  00FA               	movwf	LCD_Write_Int@value+1
 10450  04B0  01FB               	clrf	LCD_Write_Int@fieldLength
 10451  04B1  03FB               	decf	LCD_Write_Int@fieldLength,f
 10452  04B2  01FC               	clrf	LCD_Write_Int@numPlaces
 10453  04B3                     L6:	
 10454  04B3  01FD               	clrf	LCD_Write_Int@sign
 10455  04B4  318D  2524  3183   	fcall	_LCD_Write_Int
 10456                           
 10457                           ;menu.c: 119: LCD_Write_Char(' ');
 10458  04B7  3020               	movlw	32
 10459  04B8  3197  272D  3183   	fcall	_LCD_Write_Char
 10460                           
 10461                           ;menu.c: 120: menuDelay=1255;
 10462  04BB  30E7               	movlw	231
 10463  04BC  0022               	movlb	2	; select bank2
 10464  04BD  00D9               	movwf	_menuDelay^(0+256)
 10465  04BE  3004               	movlw	4
 10466  04BF  00DA               	movwf	(_menuDelay^(0+256)+1)
 10467                           
 10468                           ;menu.c: 122: if(delayCount<30)
 10469  04C0  301E               	movlw	30
 10470  04C1  0020               	movlb	0	; select bank0
 10471  04C2  026D               	subwf	_delayCount,w
 10472  04C3  1803               	skipnc
 10473  04C4  2CD2               	goto	l385
 10474                           
 10475                           ;menu.c: 123: {
 10476                           ;menu.c: 124: _delay((unsigned long)((150)*(32000000/4000.0)));
 10477  04C5  3007               	movlw	7
 10478  04C6  00B0               	movwf	??_menuChoice+2
 10479  04C7  3017               	movlw	23
 10480  04C8  00AF               	movwf	??_menuChoice+1
 10481  04C9  306F               	movlw	111
 10482  04CA  00AE               	movwf	??_menuChoice
 10483  04CB                     u3977:	
 10484  04CB  0BAE               	decfsz	??_menuChoice,f
 10485  04CC  2CCB               	goto	u3977
 10486  04CD  0BAF               	decfsz	??_menuChoice+1,f
 10487  04CE  2CCB               	goto	u3977
 10488  04CF  0BB0               	decfsz	??_menuChoice+2,f
 10489  04D0  2CCB               	goto	u3977
 10490  04D1  0000               	nop
 10491  04D2                     l385:	
 10492                           
 10493                           ;menu.c: 125: }
 10494                           ;menu.c: 127: if(delayCount>(30+10))delayCount=(30+10);
 10495  04D2  3029               	movlw	41
 10496  04D3  0020               	movlb	0	; select bank0
 10497  04D4  026D               	subwf	_delayCount,w
 10498  04D5  1C03               	skipc
 10499  04D6  2CDB               	goto	l3153
 10500  04D7  3028               	movlw	40
 10501  04D8  00AE               	movwf	??_menuChoice
 10502  04D9  082E               	movf	??_menuChoice,w
 10503  04DA  00ED               	movwf	_delayCount
 10504  04DB                     l3153:	
 10505                           
 10506                           ;menu.c: 129: timer=0;
 10507  04DB  0021               	movlb	1	; select bank1
 10508  04DC  01E3               	clrf	_timer^(0+128)
 10509  04DD  01E4               	clrf	(_timer+1)^(0+128)
 10510  04DE                     l3155:	
 10511                           
 10512                           ;menu.c: 130: }
 10513                           ;menu.c: 132: PWM7_LoadDutyValue(setpoint[1]);
 10514  04DE  0021               	movlb	1	; select bank1
 10515  04DF  0869               	movf	((_setpoint+1)^(0+128)+2),w
 10516  04E0  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
 10517  04E1  0868               	movf	(_setpoint^(0+128)+2),w
 10518  04E2  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
 10519  04E3  3196  2628  3183   	fcall	_PWM7_LoadDutyValue
 10520                           
 10521                           ;menu.c: 135: if(delayCount>0)delayCount-=1;
 10522  04E6  0020               	movlb	0	; select bank0
 10523  04E7  086D               	movf	_delayCount,w
 10524  04E8  1903               	btfsc	3,2
 10525  04E9  2CEC               	goto	l3161
 10526  04EA  3001               	movlw	1
 10527  04EB  02ED               	subwf	_delayCount,f
 10528  04EC                     l3161:	
 10529                           
 10530                           ;menu.c: 137: if(!(RB1 || RB0))
 10531  04EC  1C8D               	btfss	13,1	;volatile
 10532  04ED  180D               	btfsc	13,0	;volatile
 10533  04EE  2D02               	goto	l3169
 10534                           
 10535                           ;menu.c: 138: {
 10536                           ;menu.c: 139: if(menuDelay>0)
 10537  04EF  0022               	movlb	2	; select bank2
 10538  04F0  085A               	movf	(_menuDelay+1)^(0+256),w
 10539  04F1  3A80               	xorlw	128
 10540  04F2  0020               	movlb	0	; select bank0
 10541  04F3  00AE               	movwf	??_menuChoice
 10542  04F4  3080               	movlw	128
 10543  04F5  022E               	subwf	??_menuChoice,w
 10544  04F6  1D03               	skipz
 10545  04F7  2CFB               	goto	u3745
 10546  04F8  3001               	movlw	1
 10547  04F9  0022               	movlb	2	; select bank2
 10548  04FA  0259               	subwf	_menuDelay^(0+256),w
 10549  04FB                     u3745:	
 10550  04FB  1C03               	skipc
 10551  04FC  2D02               	goto	l3169
 10552                           
 10553                           ;menu.c: 140: {
 10554                           ;menu.c: 141: menuDelay-=1;
 10555  04FD  30FF               	movlw	255
 10556  04FE  0022               	movlb	2	; select bank2
 10557  04FF  07D9               	addwf	_menuDelay^(0+256),f
 10558  0500  30FF               	movlw	255
 10559  0501  3DDA               	addwfc	(_menuDelay+1)^(0+256),f
 10560  0502                     l3169:	
 10561  0502  0020               	movlb	0	; select bank0
 10562  0503  190D               	btfsc	13,2	;volatile
 10563  0504  2D30               	goto	l3171
 10564                           
 10565                           ;menu.c: 83: {
 10566                           ;menu.c: 84: if(timer > 4000)
 10567  0505  0021               	movlb	1	; select bank1
 10568  0506  0864               	movf	(_timer+1)^(0+128),w
 10569  0507  3A80               	xorlw	128
 10570  0508  0020               	movlb	0	; select bank0
 10571  0509  00AE               	movwf	??_menuChoice
 10572  050A  308F               	movlw	143
 10573  050B  022E               	subwf	??_menuChoice,w
 10574  050C  1D03               	skipz
 10575  050D  2D11               	goto	u3605
 10576  050E  30A1               	movlw	161
 10577  050F  0021               	movlb	1	; select bank1
 10578  0510  0263               	subwf	_timer^(0+128),w
 10579  0511                     u3605:	
 10580  0511  1C03               	skipc
 10581  0512  2BAE               	goto	l3089
 10582                           
 10583                           ;menu.c: 85: {
 10584                           ;menu.c: 86: timer = 0;
 10585  0513  0021               	movlb	1	; select bank1
 10586  0514  01E3               	clrf	_timer^(0+128)
 10587  0515  01E4               	clrf	(_timer+1)^(0+128)
 10588                           
 10589                           ;menu.c: 87: { LCD_Set_Cursor(0,0); LCD_Write_String("   Good-Bye!!   ");};
 10590  0516  01F4               	clrf	LCD_Set_Cursor@y
 10591  0517  3000               	movlw	0
 10592  0518  3188  2011  3183   	fcall	_LCD_Set_Cursor
 10593  051B  303D               	movlw	low (STR_5| (0+32768))
 10594  051C  00F5               	movwf	LCD_Write_String@a
 10595  051D  3090               	movlw	high (STR_5| (0+32768))
 10596  051E  00F6               	movwf	LCD_Write_String@a+1
 10597  051F  3196  2670  3183   	fcall	_LCD_Write_String
 10598                           
 10599                           ;menu.c: 88: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10600  0522  3052               	movlw	82
 10601  0523  0020               	movlb	0	; select bank0
 10602  0524  00B0               	movwf	??_menuChoice+2
 10603  0525  302C               	movlw	44
 10604  0526  00AF               	movwf	??_menuChoice+1
 10605  0527  304F               	movlw	79
 10606  0528  00AE               	movwf	??_menuChoice
 10607  0529                     u3947:	
 10608  0529  0BAE               	decfsz	??_menuChoice,f
 10609  052A  2D29               	goto	u3947
 10610  052B  0BAF               	decfsz	??_menuChoice+1,f
 10611  052C  2D29               	goto	u3947
 10612  052D  0BB0               	decfsz	??_menuChoice+2,f
 10613  052E  2D29               	goto	u3947
 10614  052F  3200               	nop2
 10615  0530                     l3171:	
 10616                           ;menu.c: 142: }
 10617                           ;menu.c: 143: }
 10618                           ;menu.c: 144: }
 10619                           ;menu.c: 145: Exit:
 10620                           
 10621                           
 10622                           ;menu.c: 146: timer=0;
 10623  0530  0021               	movlb	1	; select bank1
 10624  0531  01E3               	clrf	_timer^(0+128)
 10625  0532  01E4               	clrf	(_timer+1)^(0+128)
 10626                           
 10627                           ;menu.c: 147: loop=254;
 10628  0533  30FE               	movlw	254
 10629  0534  0020               	movlb	0	; select bank0
 10630  0535  00AE               	movwf	??_menuChoice
 10631  0536  082E               	movf	??_menuChoice,w
 10632  0537  0021               	movlb	1	; select bank1
 10633  0538  00EE               	movwf	_loop^(0+128)
 10634                           
 10635                           ;menu.c: 148: LCD_Clear();
 10636  0539  3195  25D3         	fcall	_LCD_Clear
 10637                           
 10638                           ;menu.c: 149: TRISC2 = 0;
 10639  053B  0020               	movlb	0	; select bank0
 10640  053C  1113               	bcf	19,2	;volatile
 10641  053D  0008               	return
 10642  053E                     __end_of_menuChoice:	
 10643                           
 10644                           	psect	text18
 10645  0004                     __ptext18:	
 10646 ;; *************** function _readKey *****************
 10647 ;; Defined at:
 10648 ;;		line 37 in file "menu.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      unsigned char 
 10655 ;; Registers used:
 10656 ;;		wreg, status,2, status,0
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;Total ram usage:        1 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; This function calls:
 10669 ;;		Nothing
 10670 ;; This function is called by:
 10671 ;;		_menuChoice
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           
 10675                           
 10676                           ;psect for function _readKey
 10677  0004                     _readKey:	
 10678                           
 10679                           ;menu.c: 39: if(RB1==1)
 10680                           
 10681                           ;incstack = 0
 10682                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10683  0004  0020               	movlb	0	; select bank0
 10684  0005  1C8D               	btfss	13,1	;volatile
 10685  0006  280C               	goto	l2759
 10686                           
 10687                           ;menu.c: 40: {
 10688                           ;menu.c: 41: if(key>0)key-=1;
 10689  0007  086E               	movf	_key,w
 10690  0008  1903               	btfsc	3,2
 10691  0009  280C               	goto	l2759
 10692  000A  3001               	movlw	1
 10693  000B  02EE               	subwf	_key,f
 10694  000C                     l2759:	
 10695                           
 10696                           ;menu.c: 42: }
 10697                           ;menu.c: 44: if(RB0==1)
 10698  000C  1C0D               	btfss	13,0	;volatile
 10699  000D  2815               	goto	l2765
 10700                           
 10701                           ;menu.c: 45: {
 10702                           ;menu.c: 46: if(key<1)key+=1;
 10703  000E  086E               	movf	_key,w
 10704  000F  1D03               	btfss	3,2
 10705  0010  2815               	goto	l2765
 10706  0011  3001               	movlw	1
 10707  0012  00F0               	movwf	??_readKey
 10708  0013  0870               	movf	??_readKey,w
 10709  0014  07EE               	addwf	_key,f
 10710  0015                     l2765:	
 10711                           
 10712                           ;menu.c: 47: }
 10713                           ;menu.c: 49: return key;
 10714  0015  086E               	movf	_key,w
 10715  0016  0008               	return
 10716  0017                     __end_of_readKey:	
 10717                           
 10718                           	psect	text19
 10719  1628                     __ptext19:	
 10720 ;; *************** function _PWM7_LoadDutyValue *****************
 10721 ;; Defined at:
 10722 ;;		line 32 in file "pwm.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;		None
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1    wreg      void 
 10729 ;; Registers used:
 10730 ;;		wreg, status,2, status,0
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/0
 10733 ;;		On exit  : 0/0
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;Total ram usage:        4 bytes
 10741 ;; Hardware stack levels used:    1
 10742 ;; This function calls:
 10743 ;;		Nothing
 10744 ;; This function is called by:
 10745 ;;		_menuChoice
 10746 ;;		_main
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750                           
 10751                           ;psect for function _PWM7_LoadDutyValue
 10752  1628                     _PWM7_LoadDutyValue:	
 10753                           
 10754                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10755                           
 10756                           ;incstack = 0
 10757                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10758  1628  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10759  1629  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10760  162A  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10761  162B  00F2               	movwf	??_PWM7_LoadDutyValue
 10762  162C  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10763  162D  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10764  162E  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10765  162F  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10766  1630  0872               	movf	??_PWM7_LoadDutyValue,w
 10767  1631  0027               	movlb	7	; select bank7
 10768  1632  0091               	movwf	17	;volatile
 10769                           
 10770                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10771  1633  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10772  1634  3903               	andlw	3
 10773  1635  00F2               	movwf	??_PWM7_LoadDutyValue
 10774  1636  3005               	movlw	5
 10775  1637                     u2955:	
 10776  1637  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10777  1638  3EFF               	addlw	-1
 10778  1639  1D03               	skipz
 10779  163A  2E37               	goto	u2955
 10780  163B  3572               	lslf	??_PWM7_LoadDutyValue,w
 10781  163C  0090               	movwf	16	;volatile
 10782  163D  0008               	return
 10783  163E                     __end_of_PWM7_LoadDutyValue:	
 10784                           
 10785                           	psect	text20
 10786  1670                     __ptext20:	
 10787 ;; *************** function _LCD_Write_String *****************
 10788 ;; Defined at:
 10789 ;;		line 239 in file "lcd.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;  a               2    5[COMMON] PTR const unsigned char 
 10792 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 10793 ;;		 -> STR_3(17), STR_2(11), STR_1(11), 
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;  i               2    8[COMMON] int 
 10796 ;; Return value:  Size  Location     Type
 10797 ;;                  1    wreg      void 
 10798 ;; Registers used:
 10799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10800 ;; Tracked objects:
 10801 ;;		On entry : 0/0
 10802 ;;		On exit  : 0/0
 10803 ;;		Unchanged: 0/0
 10804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;Total ram usage:        5 bytes
 10810 ;; Hardware stack levels used:    1
 10811 ;; Hardware stack levels required when called:    2
 10812 ;; This function calls:
 10813 ;;		_LCD_Write_Char
 10814 ;; This function is called by:
 10815 ;;		_menuChoice
 10816 ;;		_main
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820                           
 10821                           ;psect for function _LCD_Write_String
 10822  1670                     _LCD_Write_String:	
 10823                           
 10824                           ;lcd.c: 241: int i;
 10825                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10826                           
 10827                           ;incstack = 0
 10828                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10829  1670  01F8               	clrf	LCD_Write_String@i
 10830  1671  01F9               	clrf	LCD_Write_String@i+1
 10831  1672                     l2611:	
 10832  1672  0875               	movf	LCD_Write_String@a,w
 10833  1673  0778               	addwf	LCD_Write_String@i,w
 10834  1674  0084               	movwf	4
 10835  1675  0876               	movf	LCD_Write_String@a+1,w
 10836  1676  3D79               	addwfc	LCD_Write_String@i+1,w
 10837  1677  0085               	movwf	5
 10838  1678  0012               	moviw fsr0++
 10839  1679  1903               	btfsc	3,2
 10840  167A  0008               	return
 10841                           
 10842                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10843  167B  0875               	movf	LCD_Write_String@a,w
 10844  167C  0778               	addwf	LCD_Write_String@i,w
 10845  167D  0084               	movwf	4
 10846  167E  0876               	movf	LCD_Write_String@a+1,w
 10847  167F  3D79               	addwfc	LCD_Write_String@i+1,w
 10848  1680  0085               	movwf	5
 10849  1681  0800               	movf	0,w	;code access
 10850  1682  3197  272D  3196   	fcall	_LCD_Write_Char
 10851  1685  3001               	movlw	1
 10852  1686  07F8               	addwf	LCD_Write_String@i,f
 10853  1687  3000               	movlw	0
 10854  1688  3DF9               	addwfc	LCD_Write_String@i+1,f
 10855  1689  2E72               	goto	l2611
 10856  168A                     __end_of_LCD_Write_String:	
 10857                           
 10858                           	psect	text21
 10859  0D24                     __ptext21:	
 10860 ;; *************** function _LCD_Write_Int *****************
 10861 ;; Defined at:
 10862 ;;		line 246 in file "lcd.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  value           2    9[COMMON] int 
 10865 ;;  fieldLength     1   11[COMMON] char 
 10866 ;;  numPlaces       1   12[COMMON] char 
 10867 ;;  sign            1   13[COMMON] char 
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;  str             5    5[BANK0 ] unsigned char [5]
 10870 ;;  i               2   12[BANK0 ] int 
 10871 ;;  j               2   10[BANK0 ] int 
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  1    wreg      void 
 10874 ;; Registers used:
 10875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10881 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10882 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10883 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10884 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;Total ram usage:       19 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:    2
 10888 ;; This function calls:
 10889 ;;		_LCD_Write_Char
 10890 ;;		___awdiv
 10891 ;;		___awmod
 10892 ;; This function is called by:
 10893 ;;		_menuChoice
 10894 ;;		_main
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           
 10899                           ;psect for function _LCD_Write_Int
 10900  0D24                     _LCD_Write_Int:	
 10901                           
 10902                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10903                           
 10904                           ;incstack = 0
 10905                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10906  0D24  304C               	movlw	low LCD_Write_Int@F13694
 10907  0D25  0086               	movwf	6
 10908  0D26  3001               	movlw	high LCD_Write_Int@F13694
 10909  0D27  0087               	movwf	7
 10910  0D28  3025               	movlw	low LCD_Write_Int@str
 10911  0D29  0084               	movwf	4
 10912  0D2A  3000               	movlw	high LCD_Write_Int@str
 10913  0D2B  0085               	movwf	5
 10914  0D2C  3005               	movlw	5
 10915  0D2D  0020               	movlb	0	; select bank0
 10916  0D2E  00A0               	movwf	??_LCD_Write_Int
 10917  0D2F                     u2840:	
 10918  0D2F  0016               	moviw fsr1++
 10919  0D30  001A               	movwi fsr0++
 10920  0D31  0BA0               	decfsz	??_LCD_Write_Int,f
 10921  0D32  2D2F               	goto	u2840
 10922                           
 10923                           ;lcd.c: 249: int i=4,j=0;
 10924  0D33  3004               	movlw	4
 10925  0D34  00AC               	movwf	LCD_Write_Int@i
 10926  0D35  3000               	movlw	0
 10927  0D36  00AD               	movwf	LCD_Write_Int@i+1
 10928  0D37  01AA               	clrf	LCD_Write_Int@j
 10929  0D38  01AB               	clrf	LCD_Write_Int@j+1
 10930                           
 10931                           ;lcd.c: 251: if(value<0)
 10932  0D39  1FFA               	btfss	LCD_Write_Int@value+1,7
 10933  0D3A  2D45               	goto	l2625
 10934                           
 10935                           ;lcd.c: 252: {
 10936                           ;lcd.c: 253: LCD_Write_Char('-');
 10937  0D3B  302D               	movlw	45
 10938  0D3C  3197  272D  318D   	fcall	_LCD_Write_Char
 10939                           
 10940                           ;lcd.c: 254: value=value*-1;
 10941  0D3F  09F9               	comf	LCD_Write_Int@value,f
 10942  0D40  09FA               	comf	LCD_Write_Int@value+1,f
 10943  0D41  0AF9               	incf	LCD_Write_Int@value,f
 10944  0D42  1903               	skipnz
 10945  0D43  0AFA               	incf	LCD_Write_Int@value+1,f
 10946                           
 10947                           ;lcd.c: 255: }
 10948  0D44  2D4C               	goto	l2635
 10949  0D45                     l2625:	
 10950                           
 10951                           ;lcd.c: 257: else
 10952                           ;lcd.c: 258: {
 10953                           ;lcd.c: 259: if(sign == 1)
 10954  0D45  037D               	decf	LCD_Write_Int@sign,w
 10955  0D46  1D03               	btfss	3,2
 10956  0D47  2D4C               	goto	l2635
 10957                           
 10958                           ;lcd.c: 260: {
 10959                           ;lcd.c: 261: LCD_Write_Char('+');
 10960  0D48  302B               	movlw	43
 10961  0D49  3197  272D  318D   	fcall	_LCD_Write_Char
 10962  0D4C                     l2635:	
 10963                           ;lcd.c: 262: }
 10964                           ;lcd.c: 263: }
 10965                           ;lcd.c: 265: while(value)
 10966                           
 10967  0D4C  0879               	movf	LCD_Write_Int@value,w
 10968  0D4D  047A               	iorwf	LCD_Write_Int@value+1,w
 10969  0D4E  1903               	btfsc	3,2
 10970  0D4F  2D79               	goto	l2637
 10971                           
 10972                           ;lcd.c: 266: {
 10973                           ;lcd.c: 267: str[i]=value%10;
 10974  0D50  300A               	movlw	10
 10975  0D51  00F0               	movwf	___awmod@divisor
 10976  0D52  3000               	movlw	0
 10977  0D53  00F1               	movwf	___awmod@divisor+1
 10978  0D54  087A               	movf	LCD_Write_Int@value+1,w
 10979  0D55  00F3               	movwf	___awmod@dividend+1
 10980  0D56  0879               	movf	LCD_Write_Int@value,w
 10981  0D57  00F2               	movwf	___awmod@dividend
 10982  0D58  3188  2092  318D   	fcall	___awmod
 10983  0D5B  0870               	movf	?___awmod,w
 10984  0D5C  0020               	movlb	0	; select bank0
 10985  0D5D  00A0               	movwf	??_LCD_Write_Int
 10986  0D5E  082C               	movf	LCD_Write_Int@i,w
 10987  0D5F  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10988  0D60  0086               	movwf	6
 10989  0D61  0187               	clrf	7
 10990  0D62  0820               	movf	??_LCD_Write_Int,w
 10991  0D63  0081               	movwf	1
 10992                           
 10993                           ;lcd.c: 268: value=value/10;
 10994  0D64  300A               	movlw	10
 10995  0D65  00F0               	movwf	___awdiv@divisor
 10996  0D66  3000               	movlw	0
 10997  0D67  00F1               	movwf	___awdiv@divisor+1
 10998  0D68  087A               	movf	LCD_Write_Int@value+1,w
 10999  0D69  00F3               	movwf	___awdiv@dividend+1
 11000  0D6A  0879               	movf	LCD_Write_Int@value,w
 11001  0D6B  00F2               	movwf	___awdiv@dividend
 11002  0D6C  3188  20D7  318D   	fcall	___awdiv
 11003  0D6F  0871               	movf	?___awdiv+1,w
 11004  0D70  00FA               	movwf	LCD_Write_Int@value+1
 11005  0D71  0870               	movf	?___awdiv,w
 11006  0D72  00F9               	movwf	LCD_Write_Int@value
 11007                           
 11008                           ;lcd.c: 269: i--;
 11009  0D73  30FF               	movlw	255
 11010  0D74  0020               	movlb	0	; select bank0
 11011  0D75  07AC               	addwf	LCD_Write_Int@i,f
 11012  0D76  30FF               	movlw	255
 11013  0D77  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11014  0D78  2D4C               	goto	l2635
 11015  0D79                     l2637:	
 11016                           
 11017                           ;lcd.c: 270: }
 11018                           ;lcd.c: 271: if(fieldLength==-1)
 11019  0D79  0A7B               	incf	LCD_Write_Int@fieldLength,w
 11020  0D7A  1903               	btfsc	3,2
 11021  0D7B  2D82               	goto	l2643
 11022  0D7C  2D8B               	goto	l2645
 11023  0D7D                     l2641:	
 11024                           ;lcd.c: 272: {
 11025                           ;lcd.c: 273: while(str[j]==0)
 11026                           
 11027                           
 11028                           ;lcd.c: 274: {
 11029                           ;lcd.c: 275: j++;
 11030  0D7D  3001               	movlw	1
 11031  0D7E  0020               	movlb	0	; select bank0
 11032  0D7F  07AA               	addwf	LCD_Write_Int@j,f
 11033  0D80  3000               	movlw	0
 11034  0D81  3DAB               	addwfc	LCD_Write_Int@j+1,f
 11035  0D82                     l2643:	
 11036  0D82  0020               	movlb	0	; select bank0
 11037  0D83  082A               	movf	LCD_Write_Int@j,w
 11038  0D84  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11039  0D85  0086               	movwf	6
 11040  0D86  0187               	clrf	7
 11041  0D87  0801               	movf	1,w
 11042  0D88  1D03               	btfss	3,2
 11043  0D89  2D9C               	goto	l2647
 11044  0D8A  2D7D               	goto	l2641
 11045  0D8B                     l2645:	
 11046                           ;lcd.c: 276: }
 11047                           ;lcd.c: 277: }
 11048                           
 11049                           
 11050                           ;lcd.c: 278: else
 11051                           ;lcd.c: 279: {
 11052                           ;lcd.c: 280: j=5-fieldLength;
 11053  0D8B  087B               	movf	LCD_Write_Int@fieldLength,w
 11054  0D8C  0020               	movlb	0	; select bank0
 11055  0D8D  00A0               	movwf	??_LCD_Write_Int
 11056  0D8E  01A1               	clrf	??_LCD_Write_Int+1
 11057  0D8F  1BA0               	btfsc	??_LCD_Write_Int,7
 11058  0D90  03A1               	decf	??_LCD_Write_Int+1,f
 11059  0D91  09A0               	comf	??_LCD_Write_Int,f
 11060  0D92  09A1               	comf	??_LCD_Write_Int+1,f
 11061  0D93  0AA0               	incf	??_LCD_Write_Int,f
 11062  0D94  1903               	skipnz
 11063  0D95  0AA1               	incf	??_LCD_Write_Int+1,f
 11064  0D96  0820               	movf	??_LCD_Write_Int,w
 11065  0D97  3E05               	addlw	5
 11066  0D98  00AA               	movwf	LCD_Write_Int@j
 11067  0D99  3000               	movlw	0
 11068  0D9A  3D21               	addwfc	??_LCD_Write_Int+1,w
 11069  0D9B  00AB               	movwf	LCD_Write_Int@j+1
 11070  0D9C                     l2647:	
 11071                           
 11072                           ;lcd.c: 281: }
 11073                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11074  0D9C  082B               	movf	LCD_Write_Int@j+1,w
 11075  0D9D  00AD               	movwf	LCD_Write_Int@i+1
 11076  0D9E  082A               	movf	LCD_Write_Int@j,w
 11077  0D9F  00AC               	movwf	LCD_Write_Int@i
 11078  0DA0                     l2653:	
 11079  0DA0  087C               	movf	LCD_Write_Int@numPlaces,w
 11080  0DA1  00A0               	movwf	??_LCD_Write_Int
 11081  0DA2  01A1               	clrf	??_LCD_Write_Int+1
 11082  0DA3  1BA0               	btfsc	??_LCD_Write_Int,7
 11083  0DA4  03A1               	decf	??_LCD_Write_Int+1,f
 11084  0DA5  09A0               	comf	??_LCD_Write_Int,f
 11085  0DA6  09A1               	comf	??_LCD_Write_Int+1,f
 11086  0DA7  0AA0               	incf	??_LCD_Write_Int,f
 11087  0DA8  1903               	skipnz
 11088  0DA9  0AA1               	incf	??_LCD_Write_Int+1,f
 11089  0DAA  0820               	movf	??_LCD_Write_Int,w
 11090  0DAB  3E05               	addlw	5
 11091  0DAC  00A2               	movwf	??_LCD_Write_Int+2
 11092  0DAD  3000               	movlw	0
 11093  0DAE  3D21               	addwfc	??_LCD_Write_Int+1,w
 11094  0DAF  00A3               	movwf	??_LCD_Write_Int+3
 11095  0DB0  082D               	movf	LCD_Write_Int@i+1,w
 11096  0DB1  3A80               	xorlw	128
 11097  0DB2  00A4               	movwf	??_LCD_Write_Int+4
 11098  0DB3  0823               	movf	??_LCD_Write_Int+3,w
 11099  0DB4  3A80               	xorlw	128
 11100  0DB5  0224               	subwf	??_LCD_Write_Int+4,w
 11101  0DB6  1D03               	skipz
 11102  0DB7  2DBA               	goto	u2905
 11103  0DB8  0822               	movf	??_LCD_Write_Int+2,w
 11104  0DB9  022C               	subwf	LCD_Write_Int@i,w
 11105  0DBA                     u2905:	
 11106  0DBA  1803               	btfsc	3,0
 11107  0DBB  2DCC               	goto	l2655
 11108                           
 11109                           ;lcd.c: 284: {
 11110                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11111  0DBC  0020               	movlb	0	; select bank0
 11112  0DBD  082C               	movf	LCD_Write_Int@i,w
 11113  0DBE  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11114  0DBF  0086               	movwf	6
 11115  0DC0  0187               	clrf	7
 11116  0DC1  0801               	movf	1,w
 11117  0DC2  3E30               	addlw	48
 11118  0DC3  3197  272D  318D   	fcall	_LCD_Write_Char
 11119  0DC6  3001               	movlw	1
 11120  0DC7  0020               	movlb	0	; select bank0
 11121  0DC8  07AC               	addwf	LCD_Write_Int@i,f
 11122  0DC9  3000               	movlw	0
 11123  0DCA  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11124  0DCB  2DA0               	goto	l2653
 11125  0DCC                     l2655:	
 11126                           
 11127                           ;lcd.c: 286: }
 11128                           ;lcd.c: 288: if(numPlaces == 1)
 11129  0DCC  037C               	decf	LCD_Write_Int@numPlaces,w
 11130  0DCD  1D03               	btfss	3,2
 11131  0DCE  2DD9               	goto	l2659
 11132                           
 11133                           ;lcd.c: 289: {
 11134                           ;lcd.c: 290: LCD_Write_Char(46);
 11135  0DCF  302E               	movlw	46
 11136  0DD0  3197  272D  318D   	fcall	_LCD_Write_Char
 11137                           
 11138                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11139  0DD3  0020               	movlb	0	; select bank0
 11140  0DD4  0829               	movf	LCD_Write_Int@str+4,w
 11141  0DD5  3E30               	addlw	48
 11142  0DD6  3197  272D  318D   	fcall	_LCD_Write_Char
 11143  0DD9                     l2659:	
 11144                           
 11145                           ;lcd.c: 292: }
 11146                           ;lcd.c: 294: if(numPlaces == 2)
 11147  0DD9  3002               	movlw	2
 11148  0DDA  067C               	xorwf	LCD_Write_Int@numPlaces,w
 11149  0DDB  1D03               	btfss	3,2
 11150  0DDC  0008               	return
 11151                           
 11152                           ;lcd.c: 295: {
 11153                           ;lcd.c: 296: LCD_Write_Char(46);
 11154  0DDD  302E               	movlw	46
 11155  0DDE  3197  272D  318D   	fcall	_LCD_Write_Char
 11156                           
 11157                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11158  0DE1  0020               	movlb	0	; select bank0
 11159  0DE2  0828               	movf	LCD_Write_Int@str+3,w
 11160  0DE3  3E30               	addlw	48
 11161  0DE4  3197  272D  318D   	fcall	_LCD_Write_Char
 11162                           
 11163                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11164  0DE7  0020               	movlb	0	; select bank0
 11165  0DE8  0829               	movf	LCD_Write_Int@str+4,w
 11166  0DE9  3E30               	addlw	48
 11167  0DEA  3197  272D         	fcall	_LCD_Write_Char
 11168  0DEC  0008               	return
 11169  0DED                     __end_of_LCD_Write_Int:	
 11170                           
 11171                           	psect	text22
 11172  0892                     __ptext22:	
 11173 ;; *************** function ___awmod *****************
 11174 ;; Defined at:
 11175 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11176 ;; Parameters:    Size  Location     Type
 11177 ;;  divisor         2    0[COMMON] int 
 11178 ;;  dividend        2    2[COMMON] int 
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;  sign            1    6[COMMON] unsigned char 
 11181 ;;  counter         1    5[COMMON] unsigned char 
 11182 ;; Return value:  Size  Location     Type
 11183 ;;                  2    0[COMMON] int 
 11184 ;; Registers used:
 11185 ;;		wreg, status,2, status,0
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11191 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;Total ram usage:        7 bytes
 11196 ;; Hardware stack levels used:    1
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_LCD_Write_Int
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           
 11205                           ;psect for function ___awmod
 11206  0892                     ___awmod:	
 11207                           
 11208                           ;incstack = 0
 11209                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11210  0892  01F6               	clrf	___awmod@sign
 11211  0893  1FF3               	btfss	___awmod@dividend+1,7
 11212  0894  289C               	goto	l2417
 11213  0895  09F2               	comf	___awmod@dividend,f
 11214  0896  09F3               	comf	___awmod@dividend+1,f
 11215  0897  0AF2               	incf	___awmod@dividend,f
 11216  0898  1903               	skipnz
 11217  0899  0AF3               	incf	___awmod@dividend+1,f
 11218  089A  01F6               	clrf	___awmod@sign
 11219  089B  0AF6               	incf	___awmod@sign,f
 11220  089C                     l2417:	
 11221  089C  1FF1               	btfss	___awmod@divisor+1,7
 11222  089D  28A3               	goto	l2421
 11223  089E  09F0               	comf	___awmod@divisor,f
 11224  089F  09F1               	comf	___awmod@divisor+1,f
 11225  08A0  0AF0               	incf	___awmod@divisor,f
 11226  08A1  1903               	skipnz
 11227  08A2  0AF1               	incf	___awmod@divisor+1,f
 11228  08A3                     l2421:	
 11229  08A3  0870               	movf	___awmod@divisor,w
 11230  08A4  0471               	iorwf	___awmod@divisor+1,w
 11231  08A5  1903               	btfsc	3,2
 11232  08A6  28CA               	goto	l2439
 11233  08A7  01F5               	clrf	___awmod@counter
 11234  08A8  0AF5               	incf	___awmod@counter,f
 11235  08A9                     l2429:	
 11236  08A9  1BF1               	btfsc	___awmod@divisor+1,7
 11237  08AA  28B5               	goto	l2431
 11238  08AB  3001               	movlw	1
 11239  08AC                     u2645:	
 11240  08AC  35F0               	lslf	___awmod@divisor,f
 11241  08AD  0DF1               	rlf	___awmod@divisor+1,f
 11242  08AE  0B89               	decfsz	9,f
 11243  08AF  28AC               	goto	u2645
 11244  08B0  3001               	movlw	1
 11245  08B1  00F4               	movwf	??___awmod
 11246  08B2  0874               	movf	??___awmod,w
 11247  08B3  07F5               	addwf	___awmod@counter,f
 11248  08B4  28A9               	goto	l2429
 11249  08B5                     l2431:	
 11250  08B5  0871               	movf	___awmod@divisor+1,w
 11251  08B6  0273               	subwf	___awmod@dividend+1,w
 11252  08B7  1D03               	skipz
 11253  08B8  28BB               	goto	u2665
 11254  08B9  0870               	movf	___awmod@divisor,w
 11255  08BA  0272               	subwf	___awmod@dividend,w
 11256  08BB                     u2665:	
 11257  08BB  1C03               	skipc
 11258  08BC  28C1               	goto	l2435
 11259  08BD  0870               	movf	___awmod@divisor,w
 11260  08BE  02F2               	subwf	___awmod@dividend,f
 11261  08BF  0871               	movf	___awmod@divisor+1,w
 11262  08C0  3BF3               	subwfb	___awmod@dividend+1,f
 11263  08C1                     l2435:	
 11264  08C1  3001               	movlw	1
 11265  08C2                     u2675:	
 11266  08C2  36F1               	lsrf	___awmod@divisor+1,f
 11267  08C3  0CF0               	rrf	___awmod@divisor,f
 11268  08C4  0B89               	decfsz	9,f
 11269  08C5  28C2               	goto	u2675
 11270  08C6  3001               	movlw	1
 11271  08C7  02F5               	subwf	___awmod@counter,f
 11272  08C8  1D03               	btfss	3,2
 11273  08C9  28B5               	goto	l2431
 11274  08CA                     l2439:	
 11275  08CA  0876               	movf	___awmod@sign,w
 11276  08CB  1903               	btfsc	3,2
 11277  08CC  28D2               	goto	l2443
 11278  08CD  09F2               	comf	___awmod@dividend,f
 11279  08CE  09F3               	comf	___awmod@dividend+1,f
 11280  08CF  0AF2               	incf	___awmod@dividend,f
 11281  08D0  1903               	skipnz
 11282  08D1  0AF3               	incf	___awmod@dividend+1,f
 11283  08D2                     l2443:	
 11284  08D2  0873               	movf	___awmod@dividend+1,w
 11285  08D3  00F1               	movwf	?___awmod+1
 11286  08D4  0872               	movf	___awmod@dividend,w
 11287  08D5  00F0               	movwf	?___awmod
 11288  08D6  0008               	return
 11289  08D7                     __end_of___awmod:	
 11290                           
 11291                           	psect	text23
 11292  08D7                     __ptext23:	
 11293 ;; *************** function ___awdiv *****************
 11294 ;; Defined at:
 11295 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  divisor         2    0[COMMON] int 
 11298 ;;  dividend        2    2[COMMON] int 
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;  quotient        2    7[COMMON] int 
 11301 ;;  sign            1    6[COMMON] unsigned char 
 11302 ;;  counter         1    5[COMMON] unsigned char 
 11303 ;; Return value:  Size  Location     Type
 11304 ;;                  2    0[COMMON] int 
 11305 ;; Registers used:
 11306 ;;		wreg, status,2, status,0
 11307 ;; Tracked objects:
 11308 ;;		On entry : 0/0
 11309 ;;		On exit  : 0/0
 11310 ;;		Unchanged: 0/0
 11311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11313 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;Total ram usage:        9 bytes
 11317 ;; Hardware stack levels used:    1
 11318 ;; This function calls:
 11319 ;;		Nothing
 11320 ;; This function is called by:
 11321 ;;		_LCD_Write_Int
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           
 11326                           ;psect for function ___awdiv
 11327  08D7                     ___awdiv:	
 11328                           
 11329                           ;incstack = 0
 11330                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11331  08D7  01F6               	clrf	___awdiv@sign
 11332  08D8  1FF1               	btfss	___awdiv@divisor+1,7
 11333  08D9  28E1               	goto	l2373
 11334  08DA  09F0               	comf	___awdiv@divisor,f
 11335  08DB  09F1               	comf	___awdiv@divisor+1,f
 11336  08DC  0AF0               	incf	___awdiv@divisor,f
 11337  08DD  1903               	skipnz
 11338  08DE  0AF1               	incf	___awdiv@divisor+1,f
 11339  08DF  01F6               	clrf	___awdiv@sign
 11340  08E0  0AF6               	incf	___awdiv@sign,f
 11341  08E1                     l2373:	
 11342  08E1  1FF3               	btfss	___awdiv@dividend+1,7
 11343  08E2  28EC               	goto	l2379
 11344  08E3  09F2               	comf	___awdiv@dividend,f
 11345  08E4  09F3               	comf	___awdiv@dividend+1,f
 11346  08E5  0AF2               	incf	___awdiv@dividend,f
 11347  08E6  1903               	skipnz
 11348  08E7  0AF3               	incf	___awdiv@dividend+1,f
 11349  08E8  3001               	movlw	1
 11350  08E9  00F4               	movwf	??___awdiv
 11351  08EA  0874               	movf	??___awdiv,w
 11352  08EB  06F6               	xorwf	___awdiv@sign,f
 11353  08EC                     l2379:	
 11354  08EC  01F7               	clrf	___awdiv@quotient
 11355  08ED  01F8               	clrf	___awdiv@quotient+1
 11356  08EE  0870               	movf	___awdiv@divisor,w
 11357  08EF  0471               	iorwf	___awdiv@divisor+1,w
 11358  08F0  1903               	btfsc	3,2
 11359  08F1  291B               	goto	l2401
 11360  08F2  01F5               	clrf	___awdiv@counter
 11361  08F3  0AF5               	incf	___awdiv@counter,f
 11362  08F4                     l2389:	
 11363  08F4  1BF1               	btfsc	___awdiv@divisor+1,7
 11364  08F5  2900               	goto	l2391
 11365  08F6  3001               	movlw	1
 11366  08F7                     u2545:	
 11367  08F7  35F0               	lslf	___awdiv@divisor,f
 11368  08F8  0DF1               	rlf	___awdiv@divisor+1,f
 11369  08F9  0B89               	decfsz	9,f
 11370  08FA  28F7               	goto	u2545
 11371  08FB  3001               	movlw	1
 11372  08FC  00F4               	movwf	??___awdiv
 11373  08FD  0874               	movf	??___awdiv,w
 11374  08FE  07F5               	addwf	___awdiv@counter,f
 11375  08FF  28F4               	goto	l2389
 11376  0900                     l2391:	
 11377  0900  3001               	movlw	1
 11378  0901                     u2565:	
 11379  0901  35F7               	lslf	___awdiv@quotient,f
 11380  0902  0DF8               	rlf	___awdiv@quotient+1,f
 11381  0903  0B89               	decfsz	9,f
 11382  0904  2901               	goto	u2565
 11383  0905  0871               	movf	___awdiv@divisor+1,w
 11384  0906  0273               	subwf	___awdiv@dividend+1,w
 11385  0907  1D03               	skipz
 11386  0908  290B               	goto	u2575
 11387  0909  0870               	movf	___awdiv@divisor,w
 11388  090A  0272               	subwf	___awdiv@dividend,w
 11389  090B                     u2575:	
 11390  090B  1C03               	skipc
 11391  090C  2912               	goto	l2397
 11392  090D  0870               	movf	___awdiv@divisor,w
 11393  090E  02F2               	subwf	___awdiv@dividend,f
 11394  090F  0871               	movf	___awdiv@divisor+1,w
 11395  0910  3BF3               	subwfb	___awdiv@dividend+1,f
 11396  0911  1477               	bsf	___awdiv@quotient,0
 11397  0912                     l2397:	
 11398  0912  3001               	movlw	1
 11399  0913                     u2585:	
 11400  0913  36F1               	lsrf	___awdiv@divisor+1,f
 11401  0914  0CF0               	rrf	___awdiv@divisor,f
 11402  0915  0B89               	decfsz	9,f
 11403  0916  2913               	goto	u2585
 11404  0917  3001               	movlw	1
 11405  0918  02F5               	subwf	___awdiv@counter,f
 11406  0919  1D03               	btfss	3,2
 11407  091A  2900               	goto	l2391
 11408  091B                     l2401:	
 11409  091B  0876               	movf	___awdiv@sign,w
 11410  091C  1903               	btfsc	3,2
 11411  091D  2923               	goto	l2405
 11412  091E  09F7               	comf	___awdiv@quotient,f
 11413  091F  09F8               	comf	___awdiv@quotient+1,f
 11414  0920  0AF7               	incf	___awdiv@quotient,f
 11415  0921  1903               	skipnz
 11416  0922  0AF8               	incf	___awdiv@quotient+1,f
 11417  0923                     l2405:	
 11418  0923  0878               	movf	___awdiv@quotient+1,w
 11419  0924  00F1               	movwf	?___awdiv+1
 11420  0925  0877               	movf	___awdiv@quotient,w
 11421  0926  00F0               	movwf	?___awdiv
 11422  0927  0008               	return
 11423  0928                     __end_of___awdiv:	
 11424                           
 11425                           	psect	text24
 11426  0811                     __ptext24:	
 11427 ;; *************** function _LCD_Set_Cursor *****************
 11428 ;; Defined at:
 11429 ;;		line 82 in file "lcd.c"
 11430 ;; Parameters:    Size  Location     Type
 11431 ;;  x               1    wreg     unsigned char 
 11432 ;;  y               1    4[COMMON] unsigned char 
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;  x               1    7[COMMON] unsigned char 
 11435 ;;  temp            1   10[COMMON] unsigned char 
 11436 ;;  w               1    9[COMMON] unsigned char 
 11437 ;;  z               1    8[COMMON] unsigned char 
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  1    wreg      void 
 11440 ;; Registers used:
 11441 ;;		wreg, status,2, status,0, pclath, cstack
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11447 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11448 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11451 ;;Total ram usage:        7 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; Hardware stack levels required when called:    2
 11454 ;; This function calls:
 11455 ;;		_LCD_Cmd
 11456 ;; This function is called by:
 11457 ;;		_menuChoice
 11458 ;;		_main
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           
 11463                           ;psect for function _LCD_Set_Cursor
 11464  0811                     _LCD_Set_Cursor:	
 11465                           
 11466                           ;incstack = 0
 11467                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11468                           ;LCD_Set_Cursor@x stored from wreg
 11469  0811  00F7               	movwf	LCD_Set_Cursor@x
 11470                           
 11471                           ;lcd.c: 86: char temp,z,w;
 11472                           ;lcd.c: 88: if(y == 0)
 11473  0812  0874               	movf	LCD_Set_Cursor@y,w
 11474  0813  1D03               	btfss	3,2
 11475  0814  2831               	goto	l2561
 11476                           
 11477                           ;lcd.c: 89: {
 11478                           ;lcd.c: 90: temp = 0x80 + x;
 11479  0815  0877               	movf	LCD_Set_Cursor@x,w
 11480  0816  3E80               	addlw	128
 11481  0817  00F5               	movwf	??_LCD_Set_Cursor
 11482  0818  0875               	movf	??_LCD_Set_Cursor,w
 11483  0819  00FA               	movwf	LCD_Set_Cursor@temp
 11484                           
 11485                           ;lcd.c: 91: z = temp>>4;
 11486  081A  087A               	movf	LCD_Set_Cursor@temp,w
 11487  081B  00F5               	movwf	??_LCD_Set_Cursor
 11488  081C  3004               	movlw	4
 11489  081D                     u2805:	
 11490  081D  36F5               	lsrf	??_LCD_Set_Cursor,f
 11491  081E  0B89               	decfsz	9,f
 11492  081F  281D               	goto	u2805
 11493  0820  0875               	movf	??_LCD_Set_Cursor,w
 11494  0821  00F6               	movwf	??_LCD_Set_Cursor+1
 11495  0822  0876               	movf	??_LCD_Set_Cursor+1,w
 11496  0823  00F8               	movwf	LCD_Set_Cursor@z
 11497                           
 11498                           ;lcd.c: 92: w = temp & 0x0F;
 11499  0824  087A               	movf	LCD_Set_Cursor@temp,w
 11500  0825  390F               	andlw	15
 11501  0826  00F5               	movwf	??_LCD_Set_Cursor
 11502  0827  0875               	movf	??_LCD_Set_Cursor,w
 11503  0828  00F9               	movwf	LCD_Set_Cursor@w
 11504                           
 11505                           ;lcd.c: 93: LCD_Cmd(z);
 11506  0829  0878               	movf	LCD_Set_Cursor@z,w
 11507  082A  3196  2614  3188   	fcall	_LCD_Cmd
 11508                           
 11509                           ;lcd.c: 94: LCD_Cmd(w);
 11510  082D  0879               	movf	LCD_Set_Cursor@w,w
 11511  082E  3196  2614         	fcall	_LCD_Cmd
 11512                           
 11513                           ;lcd.c: 95: }
 11514  0830  0008               	return
 11515  0831                     l2561:	
 11516                           
 11517                           ;lcd.c: 97: else if(y == 1)
 11518  0831  0374               	decf	LCD_Set_Cursor@y,w
 11519  0832  1D03               	btfss	3,2
 11520  0833  0008               	return
 11521                           
 11522                           ;lcd.c: 98: {
 11523                           ;lcd.c: 99: temp = 0xC0 + x;
 11524  0834  0877               	movf	LCD_Set_Cursor@x,w
 11525  0835  3EC0               	addlw	192
 11526  0836  00F5               	movwf	??_LCD_Set_Cursor
 11527  0837  0875               	movf	??_LCD_Set_Cursor,w
 11528  0838  00FA               	movwf	LCD_Set_Cursor@temp
 11529                           
 11530                           ;lcd.c: 100: z = temp>>4;
 11531  0839  087A               	movf	LCD_Set_Cursor@temp,w
 11532  083A  00F5               	movwf	??_LCD_Set_Cursor
 11533  083B  3004               	movlw	4
 11534  083C                     u2825:	
 11535  083C  36F5               	lsrf	??_LCD_Set_Cursor,f
 11536  083D  0B89               	decfsz	9,f
 11537  083E  283C               	goto	u2825
 11538  083F  0875               	movf	??_LCD_Set_Cursor,w
 11539  0840  00F6               	movwf	??_LCD_Set_Cursor+1
 11540  0841  0876               	movf	??_LCD_Set_Cursor+1,w
 11541  0842  00F8               	movwf	LCD_Set_Cursor@z
 11542                           
 11543                           ;lcd.c: 101: w = temp & 0x0F;
 11544  0843  087A               	movf	LCD_Set_Cursor@temp,w
 11545  0844  390F               	andlw	15
 11546  0845  00F5               	movwf	??_LCD_Set_Cursor
 11547  0846  0875               	movf	??_LCD_Set_Cursor,w
 11548  0847  00F9               	movwf	LCD_Set_Cursor@w
 11549                           
 11550                           ;lcd.c: 102: LCD_Cmd(z);
 11551  0848  0878               	movf	LCD_Set_Cursor@z,w
 11552  0849  3196  2614  3188   	fcall	_LCD_Cmd
 11553                           
 11554                           ;lcd.c: 103: LCD_Cmd(w);
 11555  084C  0879               	movf	LCD_Set_Cursor@w,w
 11556  084D  3196  2614         	fcall	_LCD_Cmd
 11557  084F  0008               	return
 11558  0850                     __end_of_LCD_Set_Cursor:	
 11559                           
 11560                           	psect	text25
 11561  0850                     __ptext25:	
 11562 ;; *************** function _SYSTEM_Initialize *****************
 11563 ;; Defined at:
 11564 ;;		line 71 in file "system.c"
 11565 ;; Parameters:    Size  Location     Type
 11566 ;;		None
 11567 ;; Auto vars:     Size  Location     Type
 11568 ;;		None
 11569 ;; Return value:  Size  Location     Type
 11570 ;;                  1    wreg      void 
 11571 ;; Registers used:
 11572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11573 ;; Tracked objects:
 11574 ;;		On entry : 0/0
 11575 ;;		On exit  : 0/0
 11576 ;;		Unchanged: 0/0
 11577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11580 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11581 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11582 ;;Total ram usage:        3 bytes
 11583 ;; Hardware stack levels used:    1
 11584 ;; Hardware stack levels required when called:    3
 11585 ;; This function calls:
 11586 ;;		_ADCC_Initialize
 11587 ;;		_InitCustomChars
 11588 ;;		_LCD_Clear
 11589 ;;		_LCD_Init
 11590 ;;		_OSCILLATOR_Initialize
 11591 ;;		_PIN_MANAGER_Initialize
 11592 ;;		_PWM_Initialize
 11593 ;;		_TMR2_Initialize
 11594 ;; This function is called by:
 11595 ;;		_main
 11596 ;; This function uses a non-reentrant model
 11597 ;;
 11598                           
 11599                           
 11600                           ;psect for function _SYSTEM_Initialize
 11601  0850                     _SYSTEM_Initialize:	
 11602                           
 11603                           ;system.c: 73: PIN_MANAGER_Initialize();
 11604                           
 11605                           ;incstack = 0
 11606                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11607  0850  3197  2759  3188   	fcall	_PIN_MANAGER_Initialize
 11608                           
 11609                           ;system.c: 74: OSCILLATOR_Initialize();
 11610  0853  3195  25DB  3188   	fcall	_OSCILLATOR_Initialize
 11611                           
 11612                           ;system.c: 75: FVRCON = 0x00;
 11613  0856  0032               	movlb	18	; select bank18
 11614  0857  018C               	clrf	12	;volatile
 11615                           
 11616                           ;system.c: 76: ADCC_Initialize();
 11617  0858  3196  2656  3188   	fcall	_ADCC_Initialize
 11618                           
 11619                           ;system.c: 77: PWM_Initialize();
 11620  085B  3195  25ED  3188   	fcall	_PWM_Initialize
 11621                           
 11622                           ;system.c: 79: TMR2_Initialize();
 11623  085E  3195  25F8  3188   	fcall	_TMR2_Initialize
 11624                           
 11625                           ;system.c: 80: LCD_Init(0X00);
 11626  0861  3000               	movlw	0
 11627  0862  318A  2290  3188   	fcall	_LCD_Init
 11628                           
 11629                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 11630  0865  3009               	movlw	9
 11631  0866  00FA               	movwf	??_SYSTEM_Initialize+2
 11632  0867  301E               	movlw	30
 11633  0868  00F9               	movwf	??_SYSTEM_Initialize+1
 11634  0869  30EB               	movlw	235
 11635  086A  00F8               	movwf	??_SYSTEM_Initialize
 11636  086B                     u3987:	
 11637  086B  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11638  086C  286B               	goto	u3987
 11639  086D  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11640  086E  286B               	goto	u3987
 11641  086F  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11642  0870  286B               	goto	u3987
 11643  0871  0000               	nop
 11644                           
 11645                           ;system.c: 82: LCD_Clear();
 11646  0872  3195  25D3  3188   	fcall	_LCD_Clear
 11647                           
 11648                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 11649  0875  3005               	movlw	5
 11650  0876  00FA               	movwf	??_SYSTEM_Initialize+2
 11651  0877  300F               	movlw	15
 11652  0878  00F9               	movwf	??_SYSTEM_Initialize+1
 11653  0879  30F4               	movlw	244
 11654  087A  00F8               	movwf	??_SYSTEM_Initialize
 11655  087B                     u3997:	
 11656  087B  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11657  087C  287B               	goto	u3997
 11658  087D  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11659  087E  287B               	goto	u3997
 11660  087F  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11661  0880  287B               	goto	u3997
 11662                           
 11663                           ;system.c: 84: InitCustomChars();
 11664  0881  3197  2707  3188   	fcall	_InitCustomChars
 11665                           
 11666                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11667  0884  3009               	movlw	9
 11668  0885  00FA               	movwf	??_SYSTEM_Initialize+2
 11669  0886  301E               	movlw	30
 11670  0887  00F9               	movwf	??_SYSTEM_Initialize+1
 11671  0888  30EB               	movlw	235
 11672  0889  00F8               	movwf	??_SYSTEM_Initialize
 11673  088A                     u4007:	
 11674  088A  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11675  088B  288A               	goto	u4007
 11676  088C  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11677  088D  288A               	goto	u4007
 11678  088E  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11679  088F  288A               	goto	u4007
 11680  0890  0000               	nop
 11681  0891  0008               	return
 11682  0892                     __end_of_SYSTEM_Initialize:	
 11683                           
 11684                           	psect	text26
 11685  15F8                     __ptext26:	
 11686 ;; *************** function _TMR2_Initialize *****************
 11687 ;; Defined at:
 11688 ;;		line 3 in file "tmr2.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;		None
 11691 ;; Auto vars:     Size  Location     Type
 11692 ;;		None
 11693 ;; Return value:  Size  Location     Type
 11694 ;;                  1    wreg      void 
 11695 ;; Registers used:
 11696 ;;		wreg, status,2
 11697 ;; Tracked objects:
 11698 ;;		On entry : 0/0
 11699 ;;		On exit  : 0/0
 11700 ;;		Unchanged: 0/0
 11701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11706 ;;Total ram usage:        0 bytes
 11707 ;; Hardware stack levels used:    1
 11708 ;; This function calls:
 11709 ;;		Nothing
 11710 ;; This function is called by:
 11711 ;;		_SYSTEM_Initialize
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           
 11716                           ;psect for function _TMR2_Initialize
 11717  15F8                     _TMR2_Initialize:	
 11718                           
 11719                           ;tmr2.c: 5: T2CON = 0x00;
 11720                           
 11721                           ;incstack = 0
 11722                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11723  15F8  0025               	movlb	5	; select bank5
 11724  15F9  018E               	clrf	14	;volatile
 11725                           
 11726                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11727  15FA  3001               	movlw	1
 11728  15FB  0090               	movwf	16	;volatile
 11729                           
 11730                           ;tmr2.c: 9: T2HLT = 0x00;
 11731  15FC  018F               	clrf	15	;volatile
 11732                           
 11733                           ;tmr2.c: 11: T2RST = 0x00;
 11734  15FD  0191               	clrf	17	;volatile
 11735                           
 11736                           ;tmr2.c: 13: T2PR = 0xFF;
 11737  15FE  30FF               	movlw	255
 11738  15FF  008D               	movwf	13	;volatile
 11739                           
 11740                           ;tmr2.c: 15: T2TMR = 0x00;
 11741  1600  018C               	clrf	12	;volatile
 11742                           
 11743                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11744  1601  002E               	movlb	14	; select bank14
 11745  1602  1090               	bcf	16,1	;volatile
 11746                           
 11747                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11748  1603  0025               	movlb	5	; select bank5
 11749  1604  178E               	bsf	14,7	;volatile
 11750  1605  0008               	return
 11751  1606                     __end_of_TMR2_Initialize:	
 11752                           
 11753                           	psect	text27
 11754  15ED                     __ptext27:	
 11755 ;; *************** function _PWM_Initialize *****************
 11756 ;; Defined at:
 11757 ;;		line 3 in file "pwm.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;		None
 11760 ;; Auto vars:     Size  Location     Type
 11761 ;;		None
 11762 ;; Return value:  Size  Location     Type
 11763 ;;                  1    wreg      void 
 11764 ;; Registers used:
 11765 ;;		wreg, status,2, status,0
 11766 ;; Tracked objects:
 11767 ;;		On entry : 0/0
 11768 ;;		On exit  : 0/0
 11769 ;;		Unchanged: 0/0
 11770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;Total ram usage:        0 bytes
 11776 ;; Hardware stack levels used:    1
 11777 ;; This function calls:
 11778 ;;		Nothing
 11779 ;; This function is called by:
 11780 ;;		_SYSTEM_Initialize
 11781 ;; This function uses a non-reentrant model
 11782 ;;
 11783                           
 11784                           
 11785                           ;psect for function _PWM_Initialize
 11786  15ED                     _PWM_Initialize:	
 11787                           
 11788                           ;pwm.c: 14: PWM7CON = 0x80;
 11789                           
 11790                           ;incstack = 0
 11791                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11792  15ED  3080               	movlw	128
 11793  15EE  0027               	movlb	7	; select bank7
 11794  15EF  0092               	movwf	18	;volatile
 11795                           
 11796                           ;pwm.c: 16: PWM7DCH = 0x00;
 11797  15F0  0191               	clrf	17	;volatile
 11798                           
 11799                           ;pwm.c: 18: PWM7DCL = 0x00;
 11800  15F1  0190               	clrf	16	;volatile
 11801                           
 11802                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
 11803  15F2  0024               	movlb	4	; select bank4
 11804  15F3  081F               	movf	31,w	;volatile
 11805  15F4  39F3               	andlw	-13
 11806  15F5  3804               	iorlw	4
 11807  15F6  009F               	movwf	31	;volatile
 11808  15F7  0008               	return
 11809  15F8                     __end_of_PWM_Initialize:	
 11810                           
 11811                           	psect	text28
 11812  1759                     __ptext28:	
 11813 ;; *************** function _PIN_MANAGER_Initialize *****************
 11814 ;; Defined at:
 11815 ;;		line 5 in file "pin_manager.c"
 11816 ;; Parameters:    Size  Location     Type
 11817 ;;		None
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;  state           1    0[COMMON] unsigned char 
 11820 ;; Return value:  Size  Location     Type
 11821 ;;                  1    wreg      void 
 11822 ;; Registers used:
 11823 ;;		wreg, status,2
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/0
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11833 ;;Total ram usage:        1 bytes
 11834 ;; Hardware stack levels used:    1
 11835 ;; This function calls:
 11836 ;;		Nothing
 11837 ;; This function is called by:
 11838 ;;		_SYSTEM_Initialize
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           
 11843                           ;psect for function _PIN_MANAGER_Initialize
 11844  1759                     _PIN_MANAGER_Initialize:	
 11845                           
 11846                           ;pin_manager.c: 7: LATA = 0x00;
 11847                           
 11848                           ;incstack = 0
 11849                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11850  1759  0020               	movlb	0	; select bank0
 11851  175A  0196               	clrf	22	;volatile
 11852                           
 11853                           ;pin_manager.c: 8: LATB = 0x00;
 11854  175B  0197               	clrf	23	;volatile
 11855                           
 11856                           ;pin_manager.c: 9: LATC = 0x00;
 11857  175C  0198               	clrf	24	;volatile
 11858                           
 11859                           ;pin_manager.c: 11: WPUA = 0x00;
 11860  175D  003E               	movlb	30	; select bank30
 11861  175E  01B9               	clrf	57	;volatile
 11862                           
 11863                           ;pin_manager.c: 12: WPUB = 0x00;
 11864  175F  01C4               	clrf	68	;volatile
 11865                           
 11866                           ;pin_manager.c: 13: WPUC = 0x00;
 11867  1760  01CF               	clrf	79	;volatile
 11868                           
 11869                           ;pin_manager.c: 14: WPUE = 0x8;
 11870  1761  3008               	movlw	8
 11871  1762  00E5               	movwf	101	;volatile
 11872                           
 11873                           ;pin_manager.c: 16: TRISA = 0x0A;
 11874  1763  300A               	movlw	10
 11875  1764  0020               	movlb	0	; select bank0
 11876  1765  0091               	movwf	17	;volatile
 11877                           
 11878                           ;pin_manager.c: 17: TRISB = 0x07;
 11879  1766  3007               	movlw	7
 11880  1767  0092               	movwf	18	;volatile
 11881                           
 11882                           ;pin_manager.c: 18: TRISC = 0x00;
 11883  1768  0193               	clrf	19	;volatile
 11884                           
 11885                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11886  1769  300A               	movlw	10
 11887  176A  003E               	movlb	30	; select bank30
 11888  176B  00B8               	movwf	56	;volatile
 11889                           
 11890                           ;pin_manager.c: 21: ANSELB = 0x00;
 11891  176C  01C3               	clrf	67	;volatile
 11892                           
 11893                           ;pin_manager.c: 22: ANSELC = 0x00;
 11894  176D  01CE               	clrf	78	;volatile
 11895                           
 11896                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11897  176E  002E               	movlb	14	; select bank14
 11898  176F  1216               	bcf	22,4	;volatile
 11899                           
 11900                           ;pin_manager.c: 25: bool state = GIE;
 11901  1770  3000               	movlw	0
 11902  1771  1B8B               	btfsc	11,7	;volatile
 11903  1772  3001               	movlw	1
 11904  1773  00F0               	movwf	PIN_MANAGER_Initialize@state
 11905                           
 11906                           ;pin_manager.c: 26: GIE = 0;
 11907  1774  138B               	bcf	11,7	;volatile
 11908                           
 11909                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11910  1775  3055               	movlw	85
 11911  1776  003D               	movlb	29	; select bank29
 11912  1777  008F               	movwf	15	;volatile
 11913                           
 11914                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11915  1778  30AA               	movlw	170
 11916  1779  008F               	movwf	15	;volatile
 11917                           
 11918                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11919  177A  100F               	bcf	15,0	;volatile
 11920                           
 11921                           ;pin_manager.c: 33: RC3PPS = 0X0F;
 11922  177B  300F               	movlw	15
 11923  177C  003E               	movlb	30	; select bank30
 11924  177D  00A3               	movwf	35	;volatile
 11925                           
 11926                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 11927  177E  3055               	movlw	85
 11928  177F  003D               	movlb	29	; select bank29
 11929  1780  008F               	movwf	15	;volatile
 11930                           
 11931                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 11932  1781  30AA               	movlw	170
 11933  1782  008F               	movwf	15	;volatile
 11934                           
 11935                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 11936  1783  140F               	bsf	15,0	;volatile
 11937                           
 11938                           ;pin_manager.c: 40: GIE = state;
 11939  1784  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11940  1785  2F88               	goto	u2930
 11941  1786  178B               	bsf	11,7	;volatile
 11942  1787  0008               	return
 11943  1788                     u2930:	
 11944  1788  138B               	bcf	11,7	;volatile
 11945  1789  0008               	return
 11946  178A                     __end_of_PIN_MANAGER_Initialize:	
 11947                           
 11948                           	psect	text29
 11949  15DB                     __ptext29:	
 11950 ;; *************** function _OSCILLATOR_Initialize *****************
 11951 ;; Defined at:
 11952 ;;		line 89 in file "system.c"
 11953 ;; Parameters:    Size  Location     Type
 11954 ;;		None
 11955 ;; Auto vars:     Size  Location     Type
 11956 ;;		None
 11957 ;; Return value:  Size  Location     Type
 11958 ;;                  1    wreg      void 
 11959 ;; Registers used:
 11960 ;;		wreg, status,2
 11961 ;; Tracked objects:
 11962 ;;		On entry : 0/0
 11963 ;;		On exit  : 0/0
 11964 ;;		Unchanged: 0/0
 11965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11970 ;;Total ram usage:        0 bytes
 11971 ;; Hardware stack levels used:    1
 11972 ;; This function calls:
 11973 ;;		Nothing
 11974 ;; This function is called by:
 11975 ;;		_SYSTEM_Initialize
 11976 ;; This function uses a non-reentrant model
 11977 ;;
 11978                           
 11979                           
 11980                           ;psect for function _OSCILLATOR_Initialize
 11981  15DB                     _OSCILLATOR_Initialize:	
 11982                           
 11983                           ;system.c: 91: OSCCON1 = 0x60;
 11984                           
 11985                           ;incstack = 0
 11986                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11987  15DB  3060               	movlw	96
 11988  15DC  0031               	movlb	17	; select bank17
 11989  15DD  008D               	movwf	13	;volatile
 11990                           
 11991                           ;system.c: 92: OSCCON3 = 0x00;
 11992  15DE  018F               	clrf	15	;volatile
 11993                           
 11994                           ;system.c: 93: OSCEN = 0x00;
 11995  15DF  0191               	clrf	17	;volatile
 11996                           
 11997                           ;system.c: 94: OSCFRQ = 0x06;
 11998  15E0  3006               	movlw	6
 11999  15E1  0093               	movwf	19	;volatile
 12000                           
 12001                           ;system.c: 95: OSCTUNE = 0x00;
 12002  15E2  0192               	clrf	18	;volatile
 12003  15E3  0008               	return
 12004  15E4                     __end_of_OSCILLATOR_Initialize:	
 12005                           
 12006                           	psect	text30
 12007  0A90                     __ptext30:	
 12008 ;; *************** function _LCD_Init *****************
 12009 ;; Defined at:
 12010 ;;		line 154 in file "lcd.c"
 12011 ;; Parameters:    Size  Location     Type
 12012 ;;  style           1    wreg     unsigned char 
 12013 ;; Auto vars:     Size  Location     Type
 12014 ;;  style           1    7[COMMON] unsigned char 
 12015 ;; Return value:  Size  Location     Type
 12016 ;;                  1    wreg      void 
 12017 ;; Registers used:
 12018 ;;		wreg, status,2, status,0, pclath, cstack
 12019 ;; Tracked objects:
 12020 ;;		On entry : 0/0
 12021 ;;		On exit  : 0/0
 12022 ;;		Unchanged: 0/0
 12023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12026 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12027 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12028 ;;Total ram usage:        4 bytes
 12029 ;; Hardware stack levels used:    1
 12030 ;; Hardware stack levels required when called:    2
 12031 ;; This function calls:
 12032 ;;		_LCD_Cmd
 12033 ;;		_LCD_Port
 12034 ;; This function is called by:
 12035 ;;		_SYSTEM_Initialize
 12036 ;; This function uses a non-reentrant model
 12037 ;;
 12038                           
 12039                           
 12040                           ;psect for function _LCD_Init
 12041  0A90                     _LCD_Init:	
 12042                           
 12043                           ;incstack = 0
 12044                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 12045                           ;LCD_Init@style stored from wreg
 12046  0A90  00F7               	movwf	LCD_Init@style
 12047                           
 12048                           ;lcd.c: 156: LCD_Port(0x00);
 12049  0A91  3000               	movlw	0
 12050  0A92  3196  263E  318A   	fcall	_LCD_Port
 12051                           
 12052                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 12053  0A95  3005               	movlw	5
 12054  0A96  00F6               	movwf	??_LCD_Init+2
 12055  0A97  300F               	movlw	15
 12056  0A98  00F5               	movwf	??_LCD_Init+1
 12057  0A99  30F4               	movlw	244
 12058  0A9A  00F4               	movwf	??_LCD_Init
 12059  0A9B                     u4017:	
 12060  0A9B  0BF4               	decfsz	??_LCD_Init,f
 12061  0A9C  2A9B               	goto	u4017
 12062  0A9D  0BF5               	decfsz	??_LCD_Init+1,f
 12063  0A9E  2A9B               	goto	u4017
 12064  0A9F  0BF6               	decfsz	??_LCD_Init+2,f
 12065  0AA0  2A9B               	goto	u4017
 12066                           
 12067                           ;lcd.c: 160: LCD_Cmd(0x03);
 12068  0AA1  3003               	movlw	3
 12069  0AA2  3196  2614  318A   	fcall	_LCD_Cmd
 12070                           
 12071                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 12072  0AA5  3068               	movlw	104
 12073  0AA6  00F5               	movwf	??_LCD_Init+1
 12074  0AA7  30E4               	movlw	228
 12075  0AA8  00F4               	movwf	??_LCD_Init
 12076  0AA9                     u4027:	
 12077  0AA9  0BF4               	decfsz	??_LCD_Init,f
 12078  0AAA  2AA9               	goto	u4027
 12079  0AAB  0BF5               	decfsz	??_LCD_Init+1,f
 12080  0AAC  2AA9               	goto	u4027
 12081  0AAD  0000               	nop
 12082                           
 12083                           ;lcd.c: 164: LCD_Cmd(0x03);
 12084  0AAE  3003               	movlw	3
 12085  0AAF  3196  2614  318A   	fcall	_LCD_Cmd
 12086                           
 12087                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12088  0AB2  3089               	movlw	137
 12089  0AB3  00F4               	movwf	??_LCD_Init
 12090  0AB4                     u4037:	
 12091  0AB4  3200               	nop2
 12092  0AB5  3200               	nop2
 12093  0AB6  0BF4               	decfsz	??_LCD_Init,f
 12094  0AB7  2AB4               	goto	u4037
 12095                           
 12096                           ;lcd.c: 168: LCD_Cmd(0x03);
 12097  0AB8  3003               	movlw	3
 12098  0AB9  3196  2614  318A   	fcall	_LCD_Cmd
 12099                           
 12100                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12101  0ABC  3089               	movlw	137
 12102  0ABD  00F4               	movwf	??_LCD_Init
 12103  0ABE                     u4047:	
 12104  0ABE  3200               	nop2
 12105  0ABF  3200               	nop2
 12106  0AC0  0BF4               	decfsz	??_LCD_Init,f
 12107  0AC1  2ABE               	goto	u4047
 12108                           
 12109                           ;lcd.c: 172: LCD_Cmd(0x02);
 12110  0AC2  3002               	movlw	2
 12111  0AC3  3196  2614  318A   	fcall	_LCD_Cmd
 12112                           
 12113                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12114  0AC6  3089               	movlw	137
 12115  0AC7  00F4               	movwf	??_LCD_Init
 12116  0AC8                     u4057:	
 12117  0AC8  3200               	nop2
 12118  0AC9  3200               	nop2
 12119  0ACA  0BF4               	decfsz	??_LCD_Init,f
 12120  0ACB  2AC8               	goto	u4057
 12121                           
 12122                           ;lcd.c: 176: LCD_Cmd(0x2);
 12123  0ACC  3002               	movlw	2
 12124  0ACD  3196  2614  318A   	fcall	_LCD_Cmd
 12125                           
 12126                           ;lcd.c: 178: LCD_Cmd(0x8);
 12127  0AD0  3008               	movlw	8
 12128  0AD1  3196  2614  318A   	fcall	_LCD_Cmd
 12129                           
 12130                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12131  0AD4  3089               	movlw	137
 12132  0AD5  00F4               	movwf	??_LCD_Init
 12133  0AD6                     u4067:	
 12134  0AD6  3200               	nop2
 12135  0AD7  3200               	nop2
 12136  0AD8  0BF4               	decfsz	??_LCD_Init,f
 12137  0AD9  2AD6               	goto	u4067
 12138                           
 12139                           ;lcd.c: 182: LCD_Cmd(0x0);
 12140  0ADA  3000               	movlw	0
 12141  0ADB  3196  2614  318A   	fcall	_LCD_Cmd
 12142                           
 12143                           ;lcd.c: 184: LCD_Cmd(0x8);
 12144  0ADE  3008               	movlw	8
 12145  0ADF  3196  2614  318A   	fcall	_LCD_Cmd
 12146                           
 12147                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12148  0AE2  3089               	movlw	137
 12149  0AE3  00F4               	movwf	??_LCD_Init
 12150  0AE4                     u4077:	
 12151  0AE4  3200               	nop2
 12152  0AE5  3200               	nop2
 12153  0AE6  0BF4               	decfsz	??_LCD_Init,f
 12154  0AE7  2AE4               	goto	u4077
 12155                           
 12156                           ;lcd.c: 188: LCD_Cmd(0x0);
 12157  0AE8  3000               	movlw	0
 12158  0AE9  3196  2614  318A   	fcall	_LCD_Cmd
 12159                           
 12160                           ;lcd.c: 190: LCD_Cmd(0x1);
 12161  0AEC  3001               	movlw	1
 12162  0AED  3196  2614  318A   	fcall	_LCD_Cmd
 12163                           
 12164                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 12165  0AF0  3034               	movlw	52
 12166  0AF1  00F5               	movwf	??_LCD_Init+1
 12167  0AF2  30F1               	movlw	241
 12168  0AF3  00F4               	movwf	??_LCD_Init
 12169  0AF4                     u4087:	
 12170  0AF4  0BF4               	decfsz	??_LCD_Init,f
 12171  0AF5  2AF4               	goto	u4087
 12172  0AF6  0BF5               	decfsz	??_LCD_Init+1,f
 12173  0AF7  2AF4               	goto	u4087
 12174  0AF8  3200               	nop2
 12175                           
 12176                           ;lcd.c: 194: LCD_Cmd(0x0);
 12177  0AF9  3000               	movlw	0
 12178  0AFA  3196  2614  318A   	fcall	_LCD_Cmd
 12179                           
 12180                           ;lcd.c: 196: LCD_Cmd(0x6);
 12181  0AFD  3006               	movlw	6
 12182  0AFE  3196  2614  318A   	fcall	_LCD_Cmd
 12183                           
 12184                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12185  0B01  3089               	movlw	137
 12186  0B02  00F4               	movwf	??_LCD_Init
 12187  0B03                     u4097:	
 12188  0B03  3200               	nop2
 12189  0B04  3200               	nop2
 12190  0B05  0BF4               	decfsz	??_LCD_Init,f
 12191  0B06  2B03               	goto	u4097
 12192                           
 12193                           ;lcd.c: 200: LCD_Cmd(0x0);
 12194  0B07  3000               	movlw	0
 12195  0B08  3196  2614  318A   	fcall	_LCD_Cmd
 12196                           
 12197                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 12198  0B0B  0877               	movf	LCD_Init@style,w
 12199  0B0C  380C               	iorlw	12
 12200  0B0D  3196  2614  318A   	fcall	_LCD_Cmd
 12201                           
 12202                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12203  0B10  3089               	movlw	137
 12204  0B11  00F4               	movwf	??_LCD_Init
 12205  0B12                     u4107:	
 12206  0B12  3200               	nop2
 12207  0B13  3200               	nop2
 12208  0B14  0BF4               	decfsz	??_LCD_Init,f
 12209  0B15  2B12               	goto	u4107
 12210  0B16  0008               	return
 12211  0B17                     __end_of_LCD_Init:	
 12212                           
 12213                           	psect	text31
 12214  15D3                     __ptext31:	
 12215 ;; *************** function _LCD_Clear *****************
 12216 ;; Defined at:
 12217 ;;		line 75 in file "lcd.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;		None
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;		None
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  1    wreg      void 
 12224 ;; Registers used:
 12225 ;;		wreg, status,2, status,0, pclath, cstack
 12226 ;; Tracked objects:
 12227 ;;		On entry : 0/0
 12228 ;;		On exit  : 0/0
 12229 ;;		Unchanged: 0/0
 12230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12235 ;;Total ram usage:        0 bytes
 12236 ;; Hardware stack levels used:    1
 12237 ;; Hardware stack levels required when called:    2
 12238 ;; This function calls:
 12239 ;;		_LCD_Cmd
 12240 ;; This function is called by:
 12241 ;;		_SYSTEM_Initialize
 12242 ;;		_menuChoice
 12243 ;;		_main
 12244 ;; This function uses a non-reentrant model
 12245 ;;
 12246                           
 12247                           
 12248                           ;psect for function _LCD_Clear
 12249  15D3                     _LCD_Clear:	
 12250                           
 12251                           ;lcd.c: 77: LCD_Cmd(0);
 12252                           
 12253                           ;incstack = 0
 12254                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 12255  15D3  3000               	movlw	0
 12256  15D4  3196  2614  3195   	fcall	_LCD_Cmd
 12257                           
 12258                           ;lcd.c: 78: LCD_Cmd(1);
 12259  15D7  3001               	movlw	1
 12260  15D8  3196  2614         	fcall	_LCD_Cmd
 12261  15DA  0008               	return
 12262  15DB                     __end_of_LCD_Clear:	
 12263                           
 12264                           	psect	text32
 12265  1707                     __ptext32:	
 12266 ;; *************** function _InitCustomChars *****************
 12267 ;; Defined at:
 12268 ;;		line 29 in file "lcd.c"
 12269 ;; Parameters:    Size  Location     Type
 12270 ;;		None
 12271 ;; Auto vars:     Size  Location     Type
 12272 ;;  i               1    6[COMMON] unsigned char 
 12273 ;; Return value:  Size  Location     Type
 12274 ;;                  1    wreg      void 
 12275 ;; Registers used:
 12276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12277 ;; Tracked objects:
 12278 ;;		On entry : 0/0
 12279 ;;		On exit  : 0/0
 12280 ;;		Unchanged: 0/0
 12281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12285 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12286 ;;Total ram usage:        2 bytes
 12287 ;; Hardware stack levels used:    1
 12288 ;; Hardware stack levels required when called:    2
 12289 ;; This function calls:
 12290 ;;		_LCD_Cmd
 12291 ;;		_LCD_Write_Char
 12292 ;; This function is called by:
 12293 ;;		_SYSTEM_Initialize
 12294 ;; This function uses a non-reentrant model
 12295 ;;
 12296                           
 12297                           
 12298                           ;psect for function _InitCustomChars
 12299  1707                     _InitCustomChars:	
 12300                           
 12301                           ;lcd.c: 31: uint8_t i;
 12302                           ;lcd.c: 32: LCD_Cmd(0x04);
 12303                           
 12304                           ;incstack = 0
 12305                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12306  1707  3004               	movlw	4
 12307  1708  3196  2614  3197   	fcall	_LCD_Cmd
 12308                           
 12309                           ;lcd.c: 33: LCD_Cmd(0x00);
 12310  170B  3000               	movlw	0
 12311  170C  3196  2614  3197   	fcall	_LCD_Cmd
 12312                           
 12313                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 12314  170F  01F6               	clrf	InitCustomChars@i
 12315  1710  3010               	movlw	16
 12316  1711  0276               	subwf	InitCustomChars@i,w
 12317  1712  1803               	btfsc	3,0
 12318  1713  2F25               	goto	l2547
 12319  1714                     l2541:	
 12320                           
 12321                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 12322  1714  0876               	movf	InitCustomChars@i,w
 12323  1715  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 12324  1716  0086               	movwf	6
 12325  1717  3001               	movlw	1	; select bank2/3
 12326  1718  0087               	movwf	7
 12327  1719  0801               	movf	1,w
 12328  171A  3197  272D  3197   	fcall	_LCD_Write_Char
 12329  171D  3001               	movlw	1
 12330  171E  00F5               	movwf	??_InitCustomChars
 12331  171F  0875               	movf	??_InitCustomChars,w
 12332  1720  07F6               	addwf	InitCustomChars@i,f
 12333  1721  3010               	movlw	16
 12334  1722  0276               	subwf	InitCustomChars@i,w
 12335  1723  1C03               	skipc
 12336  1724  2F14               	goto	l2541
 12337  1725                     l2547:	
 12338                           
 12339                           ;lcd.c: 36: LCD_Cmd(0);
 12340  1725  3000               	movlw	0
 12341  1726  3196  2614  3197   	fcall	_LCD_Cmd
 12342                           
 12343                           ;lcd.c: 37: LCD_Cmd(2);
 12344  1729  3002               	movlw	2
 12345  172A  3196  2614         	fcall	_LCD_Cmd
 12346  172C  0008               	return
 12347  172D                     __end_of_InitCustomChars:	
 12348                           
 12349                           	psect	text33
 12350  172D                     __ptext33:	
 12351 ;; *************** function _LCD_Write_Char *****************
 12352 ;; Defined at:
 12353 ;;		line 223 in file "lcd.c"
 12354 ;; Parameters:    Size  Location     Type
 12355 ;;  a               1    wreg     const unsigned char 
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;  a               1    4[COMMON] const unsigned char 
 12358 ;;  y               1    3[COMMON] unsigned char 
 12359 ;;  temp            1    2[COMMON] unsigned char 
 12360 ;; Return value:  Size  Location     Type
 12361 ;;                  1    wreg      void 
 12362 ;; Registers used:
 12363 ;;		wreg, status,2, status,0, pclath, cstack
 12364 ;; Tracked objects:
 12365 ;;		On entry : 0/0
 12366 ;;		On exit  : 0/0
 12367 ;;		Unchanged: 0/0
 12368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12370 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12372 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12373 ;;Total ram usage:        4 bytes
 12374 ;; Hardware stack levels used:    1
 12375 ;; Hardware stack levels required when called:    1
 12376 ;; This function calls:
 12377 ;;		_LCD_Port
 12378 ;; This function is called by:
 12379 ;;		_InitCustomChars
 12380 ;;		_LCD_Write_String
 12381 ;;		_LCD_Write_Int
 12382 ;;		_menuChoice
 12383 ;;		_main
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           
 12388                           ;psect for function _LCD_Write_Char
 12389  172D                     _LCD_Write_Char:	
 12390                           
 12391                           ;incstack = 0
 12392                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12393                           ;LCD_Write_Char@a stored from wreg
 12394  172D  00F4               	movwf	LCD_Write_Char@a
 12395                           
 12396                           ;lcd.c: 225: char temp,y;
 12397                           ;lcd.c: 226: temp = a&0x0F;
 12398  172E  0874               	movf	LCD_Write_Char@a,w
 12399  172F  390F               	andlw	15
 12400  1730  00F1               	movwf	??_LCD_Write_Char
 12401  1731  0871               	movf	??_LCD_Write_Char,w
 12402  1732  00F2               	movwf	LCD_Write_Char@temp
 12403                           
 12404                           ;lcd.c: 227: y = a&0xF0;
 12405  1733  0874               	movf	LCD_Write_Char@a,w
 12406  1734  39F0               	andlw	240
 12407  1735  00F1               	movwf	??_LCD_Write_Char
 12408  1736  0871               	movf	??_LCD_Write_Char,w
 12409  1737  00F3               	movwf	LCD_Write_Char@y
 12410                           
 12411                           ;lcd.c: 228: RA0 = 1;
 12412  1738  0020               	movlb	0	; select bank0
 12413  1739  140C               	bsf	12,0	;volatile
 12414                           
 12415                           ;lcd.c: 229: LCD_Port(y>>4);
 12416  173A  0873               	movf	LCD_Write_Char@y,w
 12417  173B  00F1               	movwf	??_LCD_Write_Char
 12418  173C  3004               	movlw	4
 12419  173D                     u2505:	
 12420  173D  36F1               	lsrf	??_LCD_Write_Char,f
 12421  173E  0B89               	decfsz	9,f
 12422  173F  2F3D               	goto	u2505
 12423  1740  0871               	movf	??_LCD_Write_Char,w
 12424  1741  3196  263E  3197   	fcall	_LCD_Port
 12425                           
 12426                           ;lcd.c: 230: RA2 = 1;
 12427  1744  0020               	movlb	0	; select bank0
 12428  1745  150C               	bsf	12,2	;volatile
 12429                           
 12430                           ;lcd.c: 231: RA2 = 0;
 12431  1746  110C               	bcf	12,2	;volatile
 12432                           
 12433                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12434  1747  306A               	movlw	106
 12435  1748  00F1               	movwf	??_LCD_Write_Char
 12436  1749                     u4117:	
 12437  1749  0BF1               	decfsz	??_LCD_Write_Char,f
 12438  174A  2F49               	goto	u4117
 12439  174B  0000               	nop
 12440                           
 12441                           ;lcd.c: 233: LCD_Port(temp);
 12442  174C  0872               	movf	LCD_Write_Char@temp,w
 12443  174D  3196  263E  3197   	fcall	_LCD_Port
 12444                           
 12445                           ;lcd.c: 234: RA2 = 1;
 12446  1750  0020               	movlb	0	; select bank0
 12447  1751  150C               	bsf	12,2	;volatile
 12448                           
 12449                           ;lcd.c: 235: RA2 = 0;
 12450  1752  110C               	bcf	12,2	;volatile
 12451                           
 12452                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12453  1753  306A               	movlw	106
 12454  1754  00F1               	movwf	??_LCD_Write_Char
 12455  1755                     u4127:	
 12456  1755  0BF1               	decfsz	??_LCD_Write_Char,f
 12457  1756  2F55               	goto	u4127
 12458  1757  0000               	nop
 12459  1758  0008               	return
 12460  1759                     __end_of_LCD_Write_Char:	
 12461                           
 12462                           	psect	text34
 12463  1614                     __ptext34:	
 12464 ;; *************** function _LCD_Cmd *****************
 12465 ;; Defined at:
 12466 ;;		line 65 in file "lcd.c"
 12467 ;; Parameters:    Size  Location     Type
 12468 ;;  a               1    wreg     unsigned char 
 12469 ;; Auto vars:     Size  Location     Type
 12470 ;;  a               1    3[COMMON] unsigned char 
 12471 ;; Return value:  Size  Location     Type
 12472 ;;                  1    wreg      void 
 12473 ;; Registers used:
 12474 ;;		wreg, status,2, status,0, pclath, cstack
 12475 ;; Tracked objects:
 12476 ;;		On entry : 0/0
 12477 ;;		On exit  : 0/0
 12478 ;;		Unchanged: 0/0
 12479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12483 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12484 ;;Total ram usage:        3 bytes
 12485 ;; Hardware stack levels used:    1
 12486 ;; Hardware stack levels required when called:    1
 12487 ;; This function calls:
 12488 ;;		_LCD_Port
 12489 ;; This function is called by:
 12490 ;;		_InitCustomChars
 12491 ;;		_LCD_Clear
 12492 ;;		_LCD_Set_Cursor
 12493 ;;		_LCD_Init
 12494 ;; This function uses a non-reentrant model
 12495 ;;
 12496                           
 12497                           
 12498                           ;psect for function _LCD_Cmd
 12499  1614                     _LCD_Cmd:	
 12500                           
 12501                           ;incstack = 0
 12502                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12503                           ;LCD_Cmd@a stored from wreg
 12504  1614  00F3               	movwf	LCD_Cmd@a
 12505                           
 12506                           ;lcd.c: 67: RA0 = 0;
 12507  1615  0020               	movlb	0	; select bank0
 12508  1616  100C               	bcf	12,0	;volatile
 12509                           
 12510                           ;lcd.c: 68: LCD_Port(a);
 12511  1617  0873               	movf	LCD_Cmd@a,w
 12512  1618  3196  263E  3196   	fcall	_LCD_Port
 12513                           
 12514                           ;lcd.c: 69: RA2 = 1;
 12515  161B  0020               	movlb	0	; select bank0
 12516  161C  150C               	bsf	12,2	;volatile
 12517                           
 12518                           ;lcd.c: 70: RA2 = 0;
 12519  161D  110C               	bcf	12,2	;volatile
 12520                           
 12521                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12522  161E  302A               	movlw	42
 12523  161F  00F2               	movwf	??_LCD_Cmd+1
 12524  1620  308D               	movlw	141
 12525  1621  00F1               	movwf	??_LCD_Cmd
 12526  1622                     u4137:	
 12527  1622  0BF1               	decfsz	??_LCD_Cmd,f
 12528  1623  2E22               	goto	u4137
 12529  1624  0BF2               	decfsz	??_LCD_Cmd+1,f
 12530  1625  2E22               	goto	u4137
 12531  1626  3200               	nop2
 12532  1627  0008               	return
 12533  1628                     __end_of_LCD_Cmd:	
 12534                           
 12535                           	psect	text35
 12536  163E                     __ptext35:	
 12537 ;; *************** function _LCD_Port *****************
 12538 ;; Defined at:
 12539 ;;		line 41 in file "lcd.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;  a               1    wreg     unsigned char 
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;  a               1    0[COMMON] unsigned char 
 12544 ;; Return value:  Size  Location     Type
 12545 ;;                  1    wreg      void 
 12546 ;; Registers used:
 12547 ;;		wreg
 12548 ;; Tracked objects:
 12549 ;;		On entry : 0/0
 12550 ;;		On exit  : 0/0
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12557 ;;Total ram usage:        1 bytes
 12558 ;; Hardware stack levels used:    1
 12559 ;; This function calls:
 12560 ;;		Nothing
 12561 ;; This function is called by:
 12562 ;;		_LCD_Cmd
 12563 ;;		_LCD_Init
 12564 ;;		_LCD_Write_Char
 12565 ;; This function uses a non-reentrant model
 12566 ;;
 12567                           
 12568                           
 12569                           ;psect for function _LCD_Port
 12570  163E                     _LCD_Port:	
 12571                           
 12572                           ;incstack = 0
 12573                           ; Regs used in _LCD_Port: [wreg]
 12574                           ;LCD_Port@a stored from wreg
 12575  163E  00F0               	movwf	LCD_Port@a
 12576                           
 12577                           ;lcd.c: 43: if(a & 1)
 12578  163F  1C70               	btfss	LCD_Port@a,0
 12579  1640  2E44               	goto	l94
 12580                           
 12581                           ;lcd.c: 44: RA7 = 1;
 12582  1641  0020               	movlb	0	; select bank0
 12583  1642  178C               	bsf	12,7	;volatile
 12584  1643  2E46               	goto	l2189
 12585  1644                     l94:	
 12586                           
 12587                           ;lcd.c: 45: else
 12588                           ;lcd.c: 46: RA7 = 0;
 12589  1644  0020               	movlb	0	; select bank0
 12590  1645  138C               	bcf	12,7	;volatile
 12591  1646                     l2189:	
 12592                           
 12593                           ;lcd.c: 48: if(a & 2)
 12594  1646  1CF0               	btfss	LCD_Port@a,1
 12595  1647  2E4A               	goto	l96
 12596                           
 12597                           ;lcd.c: 49: RA6 = 1;
 12598  1648  170C               	bsf	12,6	;volatile
 12599  1649  2E4B               	goto	l2193
 12600  164A                     l96:	
 12601                           
 12602                           ;lcd.c: 50: else
 12603                           ;lcd.c: 51: RA6 = 0;
 12604  164A  130C               	bcf	12,6	;volatile
 12605  164B                     l2193:	
 12606                           
 12607                           ;lcd.c: 53: if(a & 4)
 12608  164B  1D70               	btfss	LCD_Port@a,2
 12609  164C  2E4F               	goto	l98
 12610                           
 12611                           ;lcd.c: 54: RC0 = 1;
 12612  164D  140E               	bsf	14,0	;volatile
 12613  164E  2E50               	goto	l2197
 12614  164F                     l98:	
 12615                           
 12616                           ;lcd.c: 55: else
 12617                           ;lcd.c: 56: RC0 = 0;
 12618  164F  100E               	bcf	14,0	;volatile
 12619  1650                     l2197:	
 12620                           
 12621                           ;lcd.c: 58: if(a & 8)
 12622  1650  1DF0               	btfss	LCD_Port@a,3
 12623  1651  2E54               	goto	l100
 12624                           
 12625                           ;lcd.c: 59: RC1 = 1;
 12626  1652  148E               	bsf	14,1	;volatile
 12627  1653  0008               	return
 12628  1654                     l100:	
 12629                           
 12630                           ;lcd.c: 60: else
 12631                           ;lcd.c: 61: RC1 = 0;
 12632  1654  108E               	bcf	14,1	;volatile
 12633  1655  0008               	return
 12634  1656                     __end_of_LCD_Port:	
 12635                           
 12636                           	psect	text36
 12637  1656                     __ptext36:	
 12638 ;; *************** function _ADCC_Initialize *****************
 12639 ;; Defined at:
 12640 ;;		line 60 in file "adc.c"
 12641 ;; Parameters:    Size  Location     Type
 12642 ;;		None
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;		None
 12645 ;; Return value:  Size  Location     Type
 12646 ;;                  1    wreg      void 
 12647 ;; Registers used:
 12648 ;;		wreg, status,2
 12649 ;; Tracked objects:
 12650 ;;		On entry : 0/0
 12651 ;;		On exit  : 0/0
 12652 ;;		Unchanged: 0/0
 12653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12658 ;;Total ram usage:        0 bytes
 12659 ;; Hardware stack levels used:    1
 12660 ;; This function calls:
 12661 ;;		Nothing
 12662 ;; This function is called by:
 12663 ;;		_SYSTEM_Initialize
 12664 ;; This function uses a non-reentrant model
 12665 ;;
 12666                           
 12667                           
 12668                           ;psect for function _ADCC_Initialize
 12669  1656                     _ADCC_Initialize:	
 12670                           
 12671                           ;adc.c: 62: ADCON1 = 0x00;
 12672                           
 12673                           ;incstack = 0
 12674                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12675  1656  0021               	movlb	1	; select bank1
 12676  1657  0194               	clrf	20	;volatile
 12677                           
 12678                           ;adc.c: 64: ADCON2 = 0x00;
 12679  1658  0195               	clrf	21	;volatile
 12680                           
 12681                           ;adc.c: 66: ADCON3 = 0x00;
 12682  1659  0196               	clrf	22	;volatile
 12683                           
 12684                           ;adc.c: 68: ADACT = 0x00;
 12685  165A  0199               	clrf	25	;volatile
 12686                           
 12687                           ;adc.c: 70: ADSTAT = 0x00;
 12688  165B  0197               	clrf	23	;volatile
 12689                           
 12690                           ;adc.c: 73: ADCLK = 0x3F;
 12691  165C  303F               	movlw	63
 12692  165D  0098               	movwf	24	;volatile
 12693                           
 12694                           ;adc.c: 81: ADREF = 0x00;
 12695  165E  019A               	clrf	26	;volatile
 12696                           
 12697                           ;adc.c: 83: ADCAP = 0x00;
 12698  165F  019B               	clrf	27	;volatile
 12699                           
 12700                           ;adc.c: 86: ADPRE = 0x07;
 12701  1660  3007               	movlw	7
 12702  1661  009C               	movwf	28	;volatile
 12703                           
 12704                           ;adc.c: 88: ADACQ = 0x00;
 12705  1662  019D               	clrf	29	;volatile
 12706                           
 12707                           ;adc.c: 90: ADPCH = 0x00;
 12708  1663  019E               	clrf	30	;volatile
 12709                           
 12710                           ;adc.c: 92: ADRPT = 0x00;
 12711  1664  0022               	movlb	2	; select bank2
 12712  1665  018D               	clrf	13	;volatile
 12713                           
 12714                           ;adc.c: 94: ADLTHL = 0x00;
 12715  1666  018E               	clrf	14	;volatile
 12716                           
 12717                           ;adc.c: 96: ADLTHH = 0x00;
 12718  1667  018F               	clrf	15	;volatile
 12719                           
 12720                           ;adc.c: 98: ADUTHL = 0x00;
 12721  1668  0190               	clrf	16	;volatile
 12722                           
 12723                           ;adc.c: 100: ADUTHH = 0x00;
 12724  1669  0191               	clrf	17	;volatile
 12725                           
 12726                           ;adc.c: 102: ADSTPTL = 0x00;
 12727  166A  0192               	clrf	18	;volatile
 12728                           
 12729                           ;adc.c: 104: ADSTPTH = 0x00;
 12730  166B  0193               	clrf	19	;volatile
 12731                           
 12732                           ;adc.c: 106: ADCON0 = 0x84;
 12733  166C  3084               	movlw	132
 12734  166D  0021               	movlb	1	; select bank1
 12735  166E  0093               	movwf	19	;volatile
 12736  166F  0008               	return
 12737  1670                     __end_of_ADCC_Initialize:	
 12738                           
 12739                           	psect	text37
 12740  019B                     __ptext37:	
 12741 ;; *************** function _PID_Calculate *****************
 12742 ;; Defined at:
 12743 ;;		line 23 in file "pid.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;  setpoint        2    6[COMMON] int 
 12746 ;;  temp            2    8[COMMON] int 
 12747 ;; Auto vars:     Size  Location     Type
 12748 ;;		None
 12749 ;; Return value:  Size  Location     Type
 12750 ;;                  2    6[COMMON] int 
 12751 ;; Registers used:
 12752 ;;		wreg, status,2, status,0, pclath, cstack
 12753 ;; Tracked objects:
 12754 ;;		On entry : 0/0
 12755 ;;		On exit  : 0/0
 12756 ;;		Unchanged: 0/0
 12757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12758 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12762 ;;Total ram usage:        6 bytes
 12763 ;; Hardware stack levels used:    1
 12764 ;; Hardware stack levels required when called:    1
 12765 ;; This function calls:
 12766 ;;		___wmul
 12767 ;; This function is called by:
 12768 ;;		_main
 12769 ;; This function uses a non-reentrant model
 12770 ;;
 12771                           
 12772                           
 12773                           ;psect for function _PID_Calculate
 12774  019B                     _PID_Calculate:	
 12775                           
 12776                           ;pid.c: 25: pidCount+=1;
 12777                           
 12778                           ;incstack = 0
 12779                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12780  019B  3001               	movlw	1
 12781  019C  0022               	movlb	2	; select bank2
 12782  019D  07DB               	addwf	_pidCount^(0+256),f
 12783  019E  3000               	movlw	0
 12784  019F  3DDC               	addwfc	(_pidCount+1)^(0+256),f
 12785                           
 12786                           ;pid.c: 28: error = setpoint - temp;
 12787  01A0  0978               	comf	PID_Calculate@temp,w
 12788  01A1  00FA               	movwf	??_PID_Calculate
 12789  01A2  0979               	comf	PID_Calculate@temp+1,w
 12790  01A3  00FB               	movwf	??_PID_Calculate+1
 12791  01A4  0AFA               	incf	??_PID_Calculate,f
 12792  01A5  1903               	skipnz
 12793  01A6  0AFB               	incf	??_PID_Calculate+1,f
 12794  01A7  0876               	movf	PID_Calculate@setpoint,w
 12795  01A8  077A               	addwf	??_PID_Calculate,w
 12796  01A9  0020               	movlb	0	; select bank0
 12797  01AA  00E8               	movwf	_error
 12798  01AB  0877               	movf	PID_Calculate@setpoint+1,w
 12799  01AC  3D7B               	addwfc	??_PID_Calculate+1,w
 12800  01AD  00E9               	movwf	_error+1
 12801                           
 12802                           ;pid.c: 30: errorValue = error * Kp;
 12803  01AE  0869               	movf	_error+1,w
 12804  01AF  00F1               	movwf	___wmul@multiplier+1
 12805  01B0  0868               	movf	_error,w
 12806  01B1  00F0               	movwf	___wmul@multiplier
 12807  01B2  0022               	movlb	2	; select bank2
 12808  01B3  0843               	movf	(_Kp+1)^(0+256),w
 12809  01B4  00F3               	movwf	___wmul@multiplicand+1
 12810  01B5  0842               	movf	_Kp^(0+256),w
 12811  01B6  00F2               	movwf	___wmul@multiplicand
 12812  01B7  3196  268A  3181   	fcall	___wmul
 12813  01BA  0871               	movf	?___wmul+1,w
 12814  01BB  0021               	movlb	1	; select bank1
 12815  01BC  00DA               	movwf	(_errorValue+1)^(0+128)
 12816  01BD  0870               	movf	?___wmul,w
 12817  01BE  00D9               	movwf	_errorValue^(0+128)
 12818                           
 12819                           ;pid.c: 33: if(error>=0)
 12820  01BF  0020               	movlb	0	; select bank0
 12821  01C0  1BE9               	btfsc	_error+1,7
 12822  01C1  2A0B               	goto	l2953
 12823                           
 12824                           ;pid.c: 34: {
 12825                           ;pid.c: 35: if(error>lastError)
 12826  01C2  0021               	movlb	1	; select bank1
 12827  01C3  085E               	movf	(_lastError+1)^(0+128),w
 12828  01C4  3A80               	xorlw	128
 12829  01C5  00FA               	movwf	??_PID_Calculate
 12830  01C6  0020               	movlb	0	; select bank0
 12831  01C7  0869               	movf	_error+1,w
 12832  01C8  3A80               	xorlw	128
 12833  01C9  027A               	subwf	??_PID_Calculate,w
 12834  01CA  1D03               	skipz
 12835  01CB  29CF               	goto	u3445
 12836  01CC  0868               	movf	_error,w
 12837  01CD  0021               	movlb	1	; select bank1
 12838  01CE  025D               	subwf	_lastError^(0+128),w
 12839  01CF                     u3445:	
 12840  01CF  1803               	skipnc
 12841  01D0  29F1               	goto	l2949
 12842                           
 12843                           ;pid.c: 36: {
 12844                           ;pid.c: 37: if(pidIntegrated<2047)pidIntegrated = pidIntegrated + (error * Ki);
 12845  01D1  0020               	movlb	0	; select bank0
 12846  01D2  086B               	movf	_pidIntegrated+1,w
 12847  01D3  3A80               	xorlw	128
 12848  01D4  00FA               	movwf	??_PID_Calculate
 12849  01D5  3087               	movlw	135
 12850  01D6  027A               	subwf	??_PID_Calculate,w
 12851  01D7  1D03               	skipz
 12852  01D8  29DB               	goto	u3455
 12853  01D9  30FF               	movlw	255
 12854  01DA  026A               	subwf	_pidIntegrated,w
 12855  01DB                     u3455:	
 12856  01DB  1803               	skipnc
 12857  01DC  2A60               	goto	l2963
 12858  01DD  0020               	movlb	0	; select bank0
 12859  01DE  0869               	movf	_error+1,w
 12860  01DF  00F1               	movwf	___wmul@multiplier+1
 12861  01E0  0868               	movf	_error,w
 12862  01E1  00F0               	movwf	___wmul@multiplier
 12863  01E2  0021               	movlb	1	; select bank1
 12864  01E3  086B               	movf	(_Ki+1)^(0+128),w
 12865  01E4  00F3               	movwf	___wmul@multiplicand+1
 12866  01E5  086A               	movf	_Ki^(0+128),w
 12867  01E6  00F2               	movwf	___wmul@multiplicand
 12868  01E7  3196  268A  3181   	fcall	___wmul
 12869  01EA  0020               	movlb	0	; select bank0
 12870  01EB  086A               	movf	_pidIntegrated,w
 12871  01EC  0770               	addwf	?___wmul,w
 12872  01ED  00EA               	movwf	_pidIntegrated
 12873  01EE  086B               	movf	_pidIntegrated+1,w
 12874  01EF  3D71               	addwfc	?___wmul+1,w
 12875  01F0  2A5F               	goto	L9
 12876  01F1                     l2949:	
 12877                           ;pid.c: 38: }
 12878                           
 12879                           
 12880                           ;pid.c: 39: else
 12881                           ;pid.c: 40: {
 12882                           ;pid.c: 41: if(pidIntegrated>0)pidIntegrated = pidIntegrated - (error * Ki);
 12883  01F1  0020               	movlb	0	; select bank0
 12884  01F2  086B               	movf	_pidIntegrated+1,w
 12885  01F3  3A80               	xorlw	128
 12886  01F4  00FA               	movwf	??_PID_Calculate
 12887  01F5  3080               	movlw	128
 12888  01F6  027A               	subwf	??_PID_Calculate,w
 12889  01F7  1D03               	skipz
 12890  01F8  29FB               	goto	u3465
 12891  01F9  3001               	movlw	1
 12892  01FA  026A               	subwf	_pidIntegrated,w
 12893  01FB                     u3465:	
 12894  01FB  1C03               	skipc
 12895  01FC  2A60               	goto	l2963
 12896  01FD  0020               	movlb	0	; select bank0
 12897  01FE  0869               	movf	_error+1,w
 12898  01FF  00F1               	movwf	___wmul@multiplier+1
 12899  0200  0868               	movf	_error,w
 12900  0201  00F0               	movwf	___wmul@multiplier
 12901  0202  0021               	movlb	1	; select bank1
 12902  0203  086B               	movf	(_Ki+1)^(0+128),w
 12903  0204  00F3               	movwf	___wmul@multiplicand+1
 12904  0205  086A               	movf	_Ki^(0+128),w
 12905  0206  00F2               	movwf	___wmul@multiplicand
 12906  0207  3196  268A  3181   	fcall	___wmul
 12907  020A  2A32               	goto	L10
 12908  020B                     l2953:	
 12909                           ;pid.c: 42: }
 12910                           ;pid.c: 43: }
 12911                           
 12912                           
 12913                           ;pid.c: 44: else
 12914                           ;pid.c: 45: {
 12915                           ;pid.c: 46: if(error<lastError)
 12916  020B  0869               	movf	_error+1,w
 12917  020C  3A80               	xorlw	128
 12918  020D  00FA               	movwf	??_PID_Calculate
 12919  020E  0021               	movlb	1	; select bank1
 12920  020F  085E               	movf	(_lastError+1)^(0+128),w
 12921  0210  3A80               	xorlw	128
 12922  0211  027A               	subwf	??_PID_Calculate,w
 12923  0212  1D03               	skipz
 12924  0213  2A17               	goto	u3475
 12925  0214  085D               	movf	_lastError^(0+128),w
 12926  0215  0020               	movlb	0	; select bank0
 12927  0216  0268               	subwf	_error,w
 12928  0217                     u3475:	
 12929  0217  1803               	skipnc
 12930  0218  2A40               	goto	l2959
 12931                           
 12932                           ;pid.c: 47: {
 12933                           ;pid.c: 48: if(pidIntegrated<2047)pidIntegrated = pidIntegrated - (error * Ki);
 12934  0219  0020               	movlb	0	; select bank0
 12935  021A  086B               	movf	_pidIntegrated+1,w
 12936  021B  3A80               	xorlw	128
 12937  021C  00FA               	movwf	??_PID_Calculate
 12938  021D  3087               	movlw	135
 12939  021E  027A               	subwf	??_PID_Calculate,w
 12940  021F  1D03               	skipz
 12941  0220  2A23               	goto	u3485
 12942  0221  30FF               	movlw	255
 12943  0222  026A               	subwf	_pidIntegrated,w
 12944  0223                     u3485:	
 12945  0223  1803               	skipnc
 12946  0224  2A60               	goto	l2963
 12947  0225  0020               	movlb	0	; select bank0
 12948  0226  0869               	movf	_error+1,w
 12949  0227  00F1               	movwf	___wmul@multiplier+1
 12950  0228  0868               	movf	_error,w
 12951  0229  00F0               	movwf	___wmul@multiplier
 12952  022A  0021               	movlb	1	; select bank1
 12953  022B  086B               	movf	(_Ki+1)^(0+128),w
 12954  022C  00F3               	movwf	___wmul@multiplicand+1
 12955  022D  086A               	movf	_Ki^(0+128),w
 12956  022E  00F2               	movwf	___wmul@multiplicand
 12957  022F  3196  268A  3181   	fcall	___wmul
 12958  0232                     L10:	
 12959  0232  0970               	comf	?___wmul,w
 12960  0233  00FA               	movwf	??_PID_Calculate
 12961  0234  0971               	comf	?___wmul+1,w
 12962  0235  00FB               	movwf	??_PID_Calculate+1
 12963  0236  0AFA               	incf	??_PID_Calculate,f
 12964  0237  1903               	skipnz
 12965  0238  0AFB               	incf	??_PID_Calculate+1,f
 12966  0239  0020               	movlb	0	; select bank0
 12967  023A  086A               	movf	_pidIntegrated,w
 12968  023B  077A               	addwf	??_PID_Calculate,w
 12969  023C  00EA               	movwf	_pidIntegrated
 12970  023D  086B               	movf	_pidIntegrated+1,w
 12971  023E  3D7B               	addwfc	??_PID_Calculate+1,w
 12972  023F  2A5F               	goto	L9
 12973  0240                     l2959:	
 12974                           ;pid.c: 49: }
 12975                           
 12976                           
 12977                           ;pid.c: 50: else
 12978                           ;pid.c: 51: {
 12979                           ;pid.c: 52: if(pidIntegrated>0)pidIntegrated = pidIntegrated + (error * Ki);
 12980  0240  0020               	movlb	0	; select bank0
 12981  0241  086B               	movf	_pidIntegrated+1,w
 12982  0242  3A80               	xorlw	128
 12983  0243  00FA               	movwf	??_PID_Calculate
 12984  0244  3080               	movlw	128
 12985  0245  027A               	subwf	??_PID_Calculate,w
 12986  0246  1D03               	skipz
 12987  0247  2A4A               	goto	u3495
 12988  0248  3001               	movlw	1
 12989  0249  026A               	subwf	_pidIntegrated,w
 12990  024A                     u3495:	
 12991  024A  1C03               	skipc
 12992  024B  2A60               	goto	l2963
 12993  024C  0020               	movlb	0	; select bank0
 12994  024D  0869               	movf	_error+1,w
 12995  024E  00F1               	movwf	___wmul@multiplier+1
 12996  024F  0868               	movf	_error,w
 12997  0250  00F0               	movwf	___wmul@multiplier
 12998  0251  0021               	movlb	1	; select bank1
 12999  0252  086B               	movf	(_Ki+1)^(0+128),w
 13000  0253  00F3               	movwf	___wmul@multiplicand+1
 13001  0254  086A               	movf	_Ki^(0+128),w
 13002  0255  00F2               	movwf	___wmul@multiplicand
 13003  0256  3196  268A  3181   	fcall	___wmul
 13004  0259  0020               	movlb	0	; select bank0
 13005  025A  086A               	movf	_pidIntegrated,w
 13006  025B  0770               	addwf	?___wmul,w
 13007  025C  00EA               	movwf	_pidIntegrated
 13008  025D  086B               	movf	_pidIntegrated+1,w
 13009  025E  3D71               	addwfc	?___wmul+1,w
 13010  025F                     L9:	
 13011  025F  00EB               	movwf	_pidIntegrated+1
 13012  0260                     l2963:	
 13013                           
 13014                           ;pid.c: 53: }
 13015                           ;pid.c: 54: }
 13016                           ;pid.c: 56: if (pidIntegrated< pidMinOutput)
 13017  0260  0020               	movlb	0	; select bank0
 13018  0261  086B               	movf	_pidIntegrated+1,w
 13019  0262  3A80               	xorlw	128
 13020  0263  00FA               	movwf	??_PID_Calculate
 13021  0264  0021               	movlb	1	; select bank1
 13022  0265  0860               	movf	(_pidMinOutput+1)^(0+128),w
 13023  0266  3A80               	xorlw	128
 13024  0267  027A               	subwf	??_PID_Calculate,w
 13025  0268  1D03               	skipz
 13026  0269  2A6D               	goto	u3505
 13027  026A  085F               	movf	_pidMinOutput^(0+128),w
 13028  026B  0020               	movlb	0	; select bank0
 13029  026C  026A               	subwf	_pidIntegrated,w
 13030  026D                     u3505:	
 13031  026D  1803               	skipnc
 13032  026E  2A77               	goto	l188
 13033                           
 13034                           ;pid.c: 57: {
 13035                           ;pid.c: 58: pidIntegrated= pidMinOutput;
 13036  026F  0021               	movlb	1	; select bank1
 13037  0270  0860               	movf	(_pidMinOutput+1)^(0+128),w
 13038  0271  0020               	movlb	0	; select bank0
 13039  0272  00EB               	movwf	_pidIntegrated+1
 13040  0273  0021               	movlb	1	; select bank1
 13041  0274  085F               	movf	_pidMinOutput^(0+128),w
 13042  0275  0020               	movlb	0	; select bank0
 13043  0276  00EA               	movwf	_pidIntegrated
 13044  0277                     l188:	
 13045                           
 13046                           ;pid.c: 59: }
 13047                           ;pid.c: 61: if (pidIntegrated> pidMaxOutput)
 13048  0277  0021               	movlb	1	; select bank1
 13049  0278  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 13050  0279  3A80               	xorlw	128
 13051  027A  00FA               	movwf	??_PID_Calculate
 13052  027B  0020               	movlb	0	; select bank0
 13053  027C  086B               	movf	_pidIntegrated+1,w
 13054  027D  3A80               	xorlw	128
 13055  027E  027A               	subwf	??_PID_Calculate,w
 13056  027F  1D03               	skipz
 13057  0280  2A84               	goto	u3515
 13058  0281  086A               	movf	_pidIntegrated,w
 13059  0282  0021               	movlb	1	; select bank1
 13060  0283  026C               	subwf	_pidMaxOutput^(0+128),w
 13061  0284                     u3515:	
 13062  0284  1803               	skipnc
 13063  0285  2A8E               	goto	l189
 13064                           
 13065                           ;pid.c: 62: {
 13066                           ;pid.c: 63: pidIntegrated= pidMaxOutput;
 13067  0286  0021               	movlb	1	; select bank1
 13068  0287  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 13069  0288  0020               	movlb	0	; select bank0
 13070  0289  00EB               	movwf	_pidIntegrated+1
 13071  028A  0021               	movlb	1	; select bank1
 13072  028B  086C               	movf	_pidMaxOutput^(0+128),w
 13073  028C  0020               	movlb	0	; select bank0
 13074  028D  00EA               	movwf	_pidIntegrated
 13075  028E                     l189:	
 13076                           
 13077                           ;pid.c: 64: }
 13078                           ;pid.c: 66: if(pidCount>4)
 13079  028E  0022               	movlb	2	; select bank2
 13080  028F  085C               	movf	(_pidCount+1)^(0+256),w
 13081  0290  3A80               	xorlw	128
 13082  0291  00FA               	movwf	??_PID_Calculate
 13083  0292  3080               	movlw	128
 13084  0293  027A               	subwf	??_PID_Calculate,w
 13085  0294  1D03               	skipz
 13086  0295  2A98               	goto	u3525
 13087  0296  3005               	movlw	5
 13088  0297  025B               	subwf	_pidCount^(0+256),w
 13089  0298                     u3525:	
 13090  0298  1C03               	skipc
 13091  0299  2AA5               	goto	l2973
 13092                           
 13093                           ;pid.c: 67: {
 13094                           ;pid.c: 68: integralValue = pidIntegrated;
 13095  029A  0020               	movlb	0	; select bank0
 13096  029B  086B               	movf	_pidIntegrated+1,w
 13097  029C  0021               	movlb	1	; select bank1
 13098  029D  00DC               	movwf	(_integralValue+1)^(0+128)
 13099  029E  0020               	movlb	0	; select bank0
 13100  029F  086A               	movf	_pidIntegrated,w
 13101  02A0  0021               	movlb	1	; select bank1
 13102  02A1  00DB               	movwf	_integralValue^(0+128)
 13103                           
 13104                           ;pid.c: 69: pidCount=0;
 13105  02A2  0022               	movlb	2	; select bank2
 13106  02A3  01DB               	clrf	_pidCount^(0+256)
 13107  02A4  01DC               	clrf	(_pidCount+1)^(0+256)
 13108  02A5                     l2973:	
 13109                           
 13110                           ;pid.c: 70: }
 13111                           ;pid.c: 72: lastError=error;
 13112  02A5  0020               	movlb	0	; select bank0
 13113  02A6  0869               	movf	_error+1,w
 13114  02A7  0021               	movlb	1	; select bank1
 13115  02A8  00DE               	movwf	(_lastError+1)^(0+128)
 13116  02A9  0020               	movlb	0	; select bank0
 13117  02AA  0868               	movf	_error,w
 13118  02AB  0021               	movlb	1	; select bank1
 13119  02AC  00DD               	movwf	_lastError^(0+128)
 13120                           
 13121                           ;pid.c: 75: derivativeValue=(error-D_PrevError)*Kd;
 13122  02AD  0022               	movlb	2	; select bank2
 13123  02AE  0955               	comf	_D_PrevError^(0+256),w
 13124  02AF  00FA               	movwf	??_PID_Calculate
 13125  02B0  0956               	comf	(_D_PrevError+1)^(0+256),w
 13126  02B1  00FB               	movwf	??_PID_Calculate+1
 13127  02B2  0AFA               	incf	??_PID_Calculate,f
 13128  02B3  1903               	skipnz
 13129  02B4  0AFB               	incf	??_PID_Calculate+1,f
 13130  02B5  0020               	movlb	0	; select bank0
 13131  02B6  0868               	movf	_error,w
 13132  02B7  077A               	addwf	??_PID_Calculate,w
 13133  02B8  00F0               	movwf	___wmul@multiplier
 13134  02B9  0869               	movf	_error+1,w
 13135  02BA  3D7B               	addwfc	??_PID_Calculate+1,w
 13136  02BB  00F1               	movwf	___wmul@multiplier+1
 13137  02BC  0022               	movlb	2	; select bank2
 13138  02BD  0841               	movf	(_Kd+1)^(0+256),w
 13139  02BE  00F3               	movwf	___wmul@multiplicand+1
 13140  02BF  0840               	movf	_Kd^(0+256),w
 13141  02C0  00F2               	movwf	___wmul@multiplicand
 13142  02C1  3196  268A  3181   	fcall	___wmul
 13143  02C4  0871               	movf	?___wmul+1,w
 13144  02C5  0021               	movlb	1	; select bank1
 13145  02C6  00D8               	movwf	(_derivativeValue+1)^(0+128)
 13146  02C7  0870               	movf	?___wmul,w
 13147  02C8  00D7               	movwf	_derivativeValue^(0+128)
 13148                           
 13149                           ;pid.c: 76: D_PrevError = error;
 13150  02C9  0020               	movlb	0	; select bank0
 13151  02CA  0869               	movf	_error+1,w
 13152  02CB  0022               	movlb	2	; select bank2
 13153  02CC  00D6               	movwf	(_D_PrevError+1)^(0+256)
 13154  02CD  0020               	movlb	0	; select bank0
 13155  02CE  0868               	movf	_error,w
 13156  02CF  0022               	movlb	2	; select bank2
 13157  02D0  00D5               	movwf	_D_PrevError^(0+256)
 13158                           
 13159                           ;pid.c: 109: Result = errorValue+integralValue+derivativeValue;
 13160  02D1  0021               	movlb	1	; select bank1
 13161  02D2  085B               	movf	_integralValue^(0+128),w
 13162  02D3  0759               	addwf	_errorValue^(0+128),w
 13163  02D4  00FA               	movwf	??_PID_Calculate
 13164  02D5  085C               	movf	(_integralValue+1)^(0+128),w
 13165  02D6  3D5A               	addwfc	(_errorValue+1)^(0+128),w
 13166  02D7  00FB               	movwf	??_PID_Calculate+1
 13167  02D8  0857               	movf	_derivativeValue^(0+128),w
 13168  02D9  077A               	addwf	??_PID_Calculate,w
 13169  02DA  00D5               	movwf	_Result^(0+128)
 13170  02DB  0858               	movf	(_derivativeValue+1)^(0+128),w
 13171  02DC  3D7B               	addwfc	??_PID_Calculate+1,w
 13172  02DD  00D6               	movwf	(_Result+1)^(0+128)
 13173                           
 13174                           ;pid.c: 111: if (Result < pidMinOutput)
 13175  02DE  0856               	movf	(_Result+1)^(0+128),w
 13176  02DF  3A80               	xorlw	128
 13177  02E0  00FA               	movwf	??_PID_Calculate
 13178  02E1  0860               	movf	(_pidMinOutput+1)^(0+128),w
 13179  02E2  3A80               	xorlw	128
 13180  02E3  027A               	subwf	??_PID_Calculate,w
 13181  02E4  1D03               	skipz
 13182  02E5  2AE8               	goto	u3535
 13183  02E6  085F               	movf	_pidMinOutput^(0+128),w
 13184  02E7  0255               	subwf	_Result^(0+128),w
 13185  02E8                     u3535:	
 13186  02E8  1803               	skipnc
 13187  02E9  2AEF               	goto	l191
 13188                           
 13189                           ;pid.c: 112: {
 13190                           ;pid.c: 113: Result = pidMinOutput;
 13191  02EA  0021               	movlb	1	; select bank1
 13192  02EB  0860               	movf	(_pidMinOutput+1)^(0+128),w
 13193  02EC  00D6               	movwf	(_Result+1)^(0+128)
 13194  02ED  085F               	movf	_pidMinOutput^(0+128),w
 13195  02EE  00D5               	movwf	_Result^(0+128)
 13196  02EF                     l191:	
 13197                           
 13198                           ;pid.c: 114: }
 13199                           ;pid.c: 116: if (Result > pidMaxOutput)
 13200  02EF  0021               	movlb	1	; select bank1
 13201  02F0  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 13202  02F1  3A80               	xorlw	128
 13203  02F2  00FA               	movwf	??_PID_Calculate
 13204  02F3  0856               	movf	(_Result+1)^(0+128),w
 13205  02F4  3A80               	xorlw	128
 13206  02F5  027A               	subwf	??_PID_Calculate,w
 13207  02F6  1D03               	skipz
 13208  02F7  2AFA               	goto	u3545
 13209  02F8  0855               	movf	_Result^(0+128),w
 13210  02F9  026C               	subwf	_pidMaxOutput^(0+128),w
 13211  02FA                     u3545:	
 13212  02FA  1803               	skipnc
 13213  02FB  2B01               	goto	l192
 13214                           
 13215                           ;pid.c: 117: {
 13216                           ;pid.c: 118: Result = pidMaxOutput;
 13217  02FC  0021               	movlb	1	; select bank1
 13218  02FD  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 13219  02FE  00D6               	movwf	(_Result+1)^(0+128)
 13220  02FF  086C               	movf	_pidMaxOutput^(0+128),w
 13221  0300  00D5               	movwf	_Result^(0+128)
 13222  0301                     l192:	
 13223                           
 13224                           ;pid.c: 119: }
 13225                           ;pid.c: 121: return (Result);
 13226  0301  0021               	movlb	1	; select bank1
 13227  0302  0856               	movf	(_Result+1)^(0+128),w
 13228  0303  00F7               	movwf	?_PID_Calculate+1
 13229  0304  0855               	movf	_Result^(0+128),w
 13230  0305  00F6               	movwf	?_PID_Calculate
 13231  0306  0008               	return
 13232  0307                     __end_of_PID_Calculate:	
 13233                           
 13234                           	psect	text38
 13235  168A                     __ptext38:	
 13236 ;; *************** function ___wmul *****************
 13237 ;; Defined at:
 13238 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 13239 ;; Parameters:    Size  Location     Type
 13240 ;;  multiplier      2    0[COMMON] unsigned int 
 13241 ;;  multiplicand    2    2[COMMON] unsigned int 
 13242 ;; Auto vars:     Size  Location     Type
 13243 ;;  product         2    4[COMMON] unsigned int 
 13244 ;; Return value:  Size  Location     Type
 13245 ;;                  2    0[COMMON] unsigned int 
 13246 ;; Registers used:
 13247 ;;		wreg, status,2, status,0
 13248 ;; Tracked objects:
 13249 ;;		On entry : 0/0
 13250 ;;		On exit  : 0/0
 13251 ;;		Unchanged: 0/0
 13252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13256 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13257 ;;Total ram usage:        6 bytes
 13258 ;; Hardware stack levels used:    1
 13259 ;; This function calls:
 13260 ;;		Nothing
 13261 ;; This function is called by:
 13262 ;;		_PID_Calculate
 13263 ;;		_eval_poly
 13264 ;; This function uses a non-reentrant model
 13265 ;;
 13266                           
 13267                           
 13268                           ;psect for function ___wmul
 13269  168A                     ___wmul:	
 13270                           
 13271                           ;incstack = 0
 13272                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13273  168A  01F4               	clrf	___wmul@product
 13274  168B  01F5               	clrf	___wmul@product+1
 13275  168C                     l2203:	
 13276  168C  1C70               	btfss	___wmul@multiplier,0
 13277  168D  2E92               	goto	l541
 13278  168E  0872               	movf	___wmul@multiplicand,w
 13279  168F  07F4               	addwf	___wmul@product,f
 13280  1690  0873               	movf	___wmul@multiplicand+1,w
 13281  1691  3DF5               	addwfc	___wmul@product+1,f
 13282  1692                     l541:	
 13283  1692  3001               	movlw	1
 13284  1693                     u2125:	
 13285  1693  35F2               	lslf	___wmul@multiplicand,f
 13286  1694  0DF3               	rlf	___wmul@multiplicand+1,f
 13287  1695  0B89               	decfsz	9,f
 13288  1696  2E93               	goto	u2125
 13289  1697  3001               	movlw	1
 13290  1698                     u2135:	
 13291  1698  36F1               	lsrf	___wmul@multiplier+1,f
 13292  1699  0CF0               	rrf	___wmul@multiplier,f
 13293  169A  0B89               	decfsz	9,f
 13294  169B  2E98               	goto	u2135
 13295  169C  0870               	movf	___wmul@multiplier,w
 13296  169D  0471               	iorwf	___wmul@multiplier+1,w
 13297  169E  1D03               	btfss	3,2
 13298  169F  2E8C               	goto	l2203
 13299  16A0  0875               	movf	___wmul@product+1,w
 13300  16A1  00F1               	movwf	?___wmul+1
 13301  16A2  0874               	movf	___wmul@product,w
 13302  16A3  00F0               	movwf	?___wmul
 13303  16A4  0008               	return
 13304  16A5                     __end_of___wmul:	
 13305  007E                     btemp	set	126	;btemp
 13306  007E                     wtemp	set	126
 13307  007E                     wtemp0	set	126
 13308  0080                     wtemp1	set	128
 13309  0082                     wtemp2	set	130
 13310  0084                     wtemp3	set	132
 13311  0086                     wtemp4	set	134
 13312  0088                     wtemp5	set	136
 13313  007F                     wtemp6	set	127
 13314  007E                     ttemp	set	126
 13315  007E                     ttemp0	set	126
 13316  0081                     ttemp1	set	129
 13317  0084                     ttemp2	set	132
 13318  0087                     ttemp3	set	135
 13319  007F                     ttemp4	set	127
 13320  007E                     ltemp	set	126
 13321  007E                     ltemp0	set	126
 13322  0082                     ltemp1	set	130
 13323  0086                     ltemp2	set	134
 13324  0080                     ltemp3	set	128


Data Sizes:
    Strings     107
    Constant    27
    Data        45
    BSS         150
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      80
    BANK1            80     53      79
    BANK2            80      0      61
    BANK3            80      0      20
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0   47475
                                              0 BANK1     53    53      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30755
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16171
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7425
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2    1046
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           5     5      0    6177
                                             14 BANK0      5     5      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM7_LoadDutyValue
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM7_LoadDutyValue                                   4     2      2     203
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     586
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       19    14      5    3819
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1281
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1306
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _PWM7_LoadDutyValue
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___bmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     35      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3D       9       76.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      14      11       25.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     14E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat May 12 23:26:32 2018

                 ___bmul@product 0072          __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000  
                             l55 160D                               l94 1644                               l96 164A  
                             l98 164F                               _Kd 0140                               _Ki 00EA  
                             _Kp 0142                     ___awdiv@sign 0076              ___wmul@multiplicand 0072  
                   ___ftadd@exp1 004C                     ___ftadd@exp2 004B                      __CFG_LVP$ON 0000  
                   ___ftadd@sign 004A                              l100 1654                              l191 02EF  
                            l192 0301                              l450 070A                              l188 0277  
                            l452 072A                              l541 1692                              l189 028E  
                            l710 0064                              l702 0049                              l385 04D2  
                            l379 0441                              l709 005C                              l733 0E8C  
                            l596 0999                              l793 0A76                              _GIE 005F  
                            _RA0 0060                              _RB0 0068                              _RA2 0062  
                            _RB1 0069                              _RC0 0070                              _RB2 006A  
                            _RC1 0071                              _RA6 0066                              _RA7 0067  
                   __CFG_CPD$OFF 0000                              _key 006E                              _log 0BC0  
                __end_of_ADCRead 1614                     ___awmod@sign 0076                  _TMR2_Initialize 15F8  
                   __CFG_BORV$LO 0000                              wreg 0009                      main@analogs 00CF  
                __end_of_LCD_Cmd 1628                     __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A  
                 _LCD_Set_Cursor 0811                     ___ftdiv@sign 003F                             l2203 168C  
                           l3101 03F8                             l2221 0E15                             l2231 0E2B  
                           l2401 091B                             l3121 044A                             l2161 0026  
                           l2225 0E1C                             l2321 0CF4                             l2313 0CE0  
                           l3107 0410                             l3123 044D                             l2171 004E  
                           l2163 0030                             l2251 0E62                             l2243 0E45  
                           l2405 0923                             l2421 08A3                             l3133 0489  
                           l3045 0331                             l3061 0307                             l2173 0056  
                           l2165 0035                             l2157 001F                             l2261 0E7E  
                           l2253 0E67                             l2325 0CFC                             l2309 0CD8  
                           l3213 0592                             l2431 08B5                             l3063 0360  
                           l3039 0323                             l2271 0EB0                             l2263 0E88  
                           l2255 0E6B                             l3303 0752                             l2193 164B  
                           l2417 089C                             l3161 04EC                             l3153 04DB  
                           l3073 0389                             l2281 0ECB                             l2249 0E58  
                           l2505 0981                             l2443 08D2                             l2435 08C1  
                           l2611 1672                             l3139 04A1                             l3155 04DE  
                           l3171 0530                             l2267 0E9E                             l2291 0C87  
                           l3323 07B8                             l2197 1650                             l2189 1646  
                           l2541 1714                             l2373 08E1                             l2429 08A9  
                           l2391 0900                             l2439 08CA                             l2455 16CD  
                           l2463 17A0                             l3255 06B2                             l2561 0831  
                           l2641 0D7D                             l2625 0D45                             l3089 03AE  
                           l3169 0502                             l2801 09BA                             l2297 0C9D  
                           l3273 06F9                             l3265 06C3                             l3281 070B  
                           l2547 1725                             l2379 08EC                             l2643 0D82  
                           l2635 0D4C                             l2811 09E8                             l2803 09C8  
                           l2467 17B6                             l3291 072C                             l3259 06B6  
                           l2397 0912                             l2389 08F4                             l2653 0DA0  
                           l2645 0D8B                             l2637 0D79                             l3277 0700  
                           l3269 06C8                             l2655 0DCC                             l2647 0D9C  
                           l2815 09F3                             l2911 0A87                             l2487 17D7  
                           l2743 0BF2                             l3287 071E                             l2905 0A6D  
                           l2737 0BDF                             l3297 0732                             l2659 0DD9  
                           l2819 0A01                             l2771 0802                             l2835 0B44  
                           l2907 0A79                             l2765 0015                             l2829 0B2E  
                           l2759 000C                             l2775 0808                             l2953 020B  
                           l2793 09AA                             l2929 0172                             l2857 0B9E  
                           l2849 0B85                             l2963 0260                             l2973 02A5  
                           l2949 01F1                             l2869 16AD                             l2959 0240  
                           l2879 0A22                             l2897 0A52                             l2899 0A60  
                           ?_log 0057                             STR_1 1070                             STR_2 107B  
                           STR_3 105F                             STR_4 104E                             STR_5 103D  
                           STR_6 101B                             STR_7 102C                             u2015 0051  
                           u2125 1693                             _LATA 0016                             _LATB 0017  
                           u2135 1698                             u2055 006B                             _LATC 0018  
                           u3105 09DD                             u2305 0E6C                             u3115 09E9  
                           u3205 0B9F                             u2245 0E46                             u2405 0CA9  
                           u4007 088A                             u2335 0E7F                             u2415 0CB9  
                           u2505 173D                             u4017 0A9B                             u3305 0A6E  
                           _T2PR 028D                             u4107 0B12                             u4027 0AA9  
                           u3075 09BD                             u2275 0E59                             u2435 0CE1  
                           u4117 1749                             u4037 0AB4                             u3405 0162  
                           u3165 0B56                             u3245 0A29                             u2445 0CE7  
                           u4127 1755                             u4047 0ABE                             u3095 09C9  
                           u3335 0091                             u3175 0B66                             u3505 026D  
                           u4137 1622                             u4057 0AC8                             u2545 08F7  
                           u3425 017E                             u3345 00A7                             u3185 0B86  
                           u3515 0284                             u4067 0AD6                             u3355 00DA  
                           u3195 0B95                             u3275 0A53                             u2475 0CFD  
                           u3525 0298                             u3445 01CF                             u4077 0AE4  
                           u2805 081D                             u2565 0901                             u2645 08AC  
                           u3605 0511                             u3365 00F0                             u2485 0D03  
                           u3535 02E8                             u3455 01DB                             u4087 0AF4  
                           u2575 090B                             u3375 010A                             u2840 0D2F  
                           u3545 02FA                             u3465 01FB                             u4097 0B03  
                           u2825 083C                             u2585 0913                             u2665 08BB  
                           u2905 0DBA                             u3625 03E8                             u3385 0120  
                           u2930 1788                             u3475 0217                             u2675 08C2  
                           u3555 031D                             u3395 0148                             u3485 0223  
                           u3495 024A                             u1975 002B                             u3815 06DE  
                           u3760 0566                             u3745 04FB                             u3825 06F7  
                           u2955 1637                             u3675 0479                             u1995 0044  
                           u3907 079D                             u3917 07B1                             u3845 0719  
                           u3927 036B                             u3855 0725                             u3937 03A6  
                           u3947 0529                             u3957 03B3                             u3967 043A  
                           u3977 04CB                             u3897 0588                             u3987 086B  
                           u3997 087B              tempCalc@analogValue 005D                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _desc 0134                             _main 053E                     ___ftpack@arg 0070  
             __size_of_LCD_Clear 0008                             _loop 00EE                     ___ftpack@exp 0073  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             log@x 0057                    __CFG_BOREN$ON 0000  
                           ltemp 007E                             start 0002               ??_LCD_Write_String 0077  
                           ttemp 007E                             wtemp 007E                    __CFG_CSWEN$ON 0000  
              ___bmul@multiplier 0073                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 0D24                     ___ftmul@sign 002F                     ___fttol@exp1 007D  
                          ??_log 005A                     ___fttol@lval 0079                 __end_of_LCD_Init 0B17  
               __end_of_LCD_Port 1656   __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 15E4  
                __end_of___aldiv 0A0A                            _ADACQ 009D                            _ADCAP 009B  
                          _ADACT 0099                            ?_main 0070                            _ADCLK 0098  
                          _ADPCH 009E                            _ADREF 009A                  __end_of___awdiv 0928  
                          _ADPRE 009C                  __end_of___ftadd 0EE3                    __CFG_WDTE$OFF 0000  
                __end_of___awmod 08D7                            _ADRPT 010D                  __end_of___ftdiv 0BC0  
                __end_of___ftmul 0D24                  ___awdiv@divisor 0070                  __end_of___ftsub 16C3  
                __end_of___fttol 0A90                            _T2CON 028E                            _LATC2 00C2  
                          _T2HLT 028F                            _T2TMR 028C                            _T2RST 0291  
                ___awdiv@counter 0075                            _OSCEN 0891                            _TRISA 0011  
                          _TRISB 0012                            _TRISC 0013           __end_of_LCD_Set_Cursor 0850  
                  ___awtoft@sign 007D                  __end_of_readKey 0017                            _frexp 17C5  
                          _errno 0157                            _error 0068                    ___ftpack@sign 0074  
                          _timer 00E3                            main@j 00D4                            main@x 00BE  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F                 InitCustomChars@i 0076  
                 ?_LCD_Write_Int 0079                   _LCD_Write_Char 172D                  __initialization 07BE  
                    log@exponent 005B                     __end_of_main 07BE                readAnalog@channel 0026  
        __end_of_TMR2_Initialize 1606                        ??_ADCRead 0073                           ??_main 00A0  
                  ___fttol@sign1 0078                __end_of_LCD_Clear 15DB                        ??_LCD_Cmd 0071  
                ?_LCD_Set_Cursor 0074                           _ADCON0 0093                           _ADCON1 0094  
                         _ADCON2 0095                           _ADCON3 0096                           ?_frexp 0070  
                         _ADLTHH 010F                           _ADLTHL 010E                           _ADRESH 008D  
                         _ADRESL 008C                           _ADSTAT 0097                           _ADUTHH 0111  
               ___awdiv@dividend 0072                           _ADUTHL 0110                 __end_of___awtoft 16E3  
                         _ANSELA 0F38                           _ANSELB 0F43                           _ANSELC 0F4E  
               __end_of___ftpack 007B                           _RC3PPS 0F23                   __CFG_WDTCCS$SC 0000  
                         _FVRCON 090C                           _OSCFRQ 0893                           _TRISC2 009A  
         __end_of_LCD_Write_Char 1759                   __CFG_PWRTE$OFF 0000                           _Result 00D5  
                   _CCPTMRS1bits 021F                           ___bmul 0800                           ___ftge 178A  
         LCD_Write_Int@numPlaces 007C                        ??___aldiv 0078                           ___wmul 168A  
                      ??___awdiv 0074                        ??___ftadd 0046                   __CFG_STVREN$ON 0000  
                      ??___awmod 0074                   _PWM_Initialize 15ED                        ??___ftdiv 0036  
                      ??___ftmul 0026                           _choice 006C                        ??___ftsub 007E  
                      ??___fttol 0074           main@currentTemperature 00C7                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                           _timer2 006F                  ___awmod@counter 0075  
                         _totals 0144            ___ftmul@f3_as_product 002B                 __end_of_tempCalc 1000  
                _ADCC_Initialize 1656                        ??_readKey 0070                 LCD_Write_Int@str 0025  
                _InitCustomChars 1707                  LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077  
                LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078                    _pidIntegrated 006A  
       readAnalog@analog_channel 0079                _SYSTEM_Initialize 0850                 __end_oflog@coeff 101B  
        __end_of__initialization 07FD                        ?_LCD_Init 0070                        ?_LCD_Port 0070  
                     ___ftadd@f1 0040                       ___ftadd@f2 0043                  _derivativeValue 00D7  
                     ___ftge@ff1 0070                       ___ftge@ff2 0073                  ??_LCD_Write_Int 0020  
             ?_SYSTEM_Initialize 0070                     eval_poly@res 0054                       ___ftdiv@f1 0033  
                     ___ftdiv@f2 0030                       ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070  
                  LCD_Init@style 0077                       ___awtoft@c 0078              ___bmul@multiplicand 0070  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023           __end_of_PWM_Initialize 15F8  
                     ___ftsub@f1 0050                       ___ftsub@f2 004D                       ___fttol@f1 0070  
                 __pcstackCOMMON 0070                        LCD_Port@a 0070                     __pidataBANK1 15E4  
                   __pidataBANK2 16E3              ??_SYSTEM_Initialize 0078                    __end_of_frexp 1800  
               ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016                          ??_frexp 0074  
      __end_of_SYSTEM_Initialize 0892                       __pbssBANK0 0068                       __pbssBANK1 00D5  
                     __pbssBANK2 0144                       __pbssBANK3 01A0                       __pbssBANK4 0220  
             __size_of_eval_poly 0060                       ??_LCD_Init 0074                       ??_LCD_Port 0070  
         __size_of_PID_Calculate 016C                       _delayCount 006D                  ?_PWM_Initialize 0070  
                     __pmaintext 053E                          ?___bmul 0070                          ?___ftge 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 1670  
                        _ADCRead 1606        __size_of_LCD_Write_String 001A                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
       __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000          __end_of_InitCustomChars 172D  
                        _LCD_Cmd 1614                   main@holdOutput 00C1                 main@lidOpenCount 00C2  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM7DCH 0391                          _PWM7DCL 0390                          _PWM7CON 0392  
                        _PPSLOCK 0E8F                   main@dutyCycle6 00CD            PID_Calculate@setpoint 0076  
                      ?_tempCalc 005D                       _readAnalog 007B                    _integralValue 00DB  
                        ___aldiv 0988                  __size_of___bmul 0011                          ___cgram 0120  
                     _menuChoice 0307                  __size_of___ftge 003B                          ___awdiv 08D7  
                        ___ftadd 0DED                          ___awmod 0892                          ___ftdiv 0B17  
                __size_of___wmul 001B                          ___ftmul 0C70                          ___ftsub 16A5  
                        ___fttol 0A0A                       _errorValue 00D9                       ??___awtoft 007B  
                     ??___ftpack 0075                __end_of_eval_poly 0988                 ??_LCD_Set_Cursor 0075  
                        __ptext1 0EE3                          __ptext2 0BC0                          __ptext3 17C5  
                        __ptext4 0928                          __ptext5 0C70                          __ptext6 178A  
                        __ptext7 16C3                          __ptext8 0A0A                          __ptext9 16A5  
                  _PID_Calculate 019B            _OSCILLATOR_Initialize 15DB                          _readKey 0004  
                      _T2CONbits 028E                     __size_of_log 00B0                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                     _highRangeSet 0138                 ___aldiv@dividend 0074  
       ??_PIN_MANAGER_Initialize 0070                          _samples 0220                          _testKey 00E5  
                      _LCD_Clear 15D3       __size_of_SYSTEM_Initialize 0042                          clrloop0 15C8  
           end_of_initialization 07FD                          init_ram 15CD                          initloop 15CE  
                     ??_tempCalc 007E                 ___aldiv@quotient 0022                LCD_Write_Int@sign 007D  
                     main@F13670 01A0                       main@F13664 0151                     __pstringtext 1000  
               ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0076  
               ?_InitCustomChars 0070                       ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000  
              LCD_Write_String@a 0075                LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071  
                    ___ftdiv@exp 003E                __size_of_LCD_Init 0087                __size_of_LCD_Port 0018  
                     main@output 00BF                      ___ftmul@exp 002A                      ?_readAnalog 0026  
                    ?_menuChoice 0070                   __end_of___bmul 0811                   __end_of___ftge 17C5  
                 __end_of___wmul 16A5                 _LCD_Write_String 1670           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07BE                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0031                      __end_of_log 0C70  
                     frexp@value 0070                 ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 007B  
          __end_of_LCD_Write_Int 0DED                 __CFG_LPBOREN$OFF 0000                         ??___bmul 0071  
                       ??___ftge 0076                tempCalc@steinhart 0065                         ??___wmul 0074  
                   _pidMaxOutput 00EC                    _tempCalc$1016 0062                      __pdataBANK1 00E6  
                    __pdataBANK2 0120                  ??_PID_Calculate 007A       __end_of_PWM7_LoadDutyValue 163E  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
   PWM7_LoadDutyValue@dutyCycle7 0070                     _pidMinOutput 00DF                         ?_LCD_Cmd 0070  
              __size_of___awtoft 0020                __size_of___ftpack 0064                         LCD_Cmd@a 0073  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074              __size_of_readAnalog 0120  
            __size_of_menuChoice 0237           _PIN_MANAGER_Initialize 1759                         ?___aldiv 0070  
              __size_of_tempCalc 011D                         ?___awdiv 0070                         ?___ftadd 0040  
                       ?___awmod 0070                         ?___ftdiv 0030                         ?___ftmul 0020  
                       ?___ftsub 004D                         ?___fttol 0070              main@lastTemperature 00C3  
                       ?_readKey 0070                        _eval_poly 0928                        _lastError 00DD  
                      _menuDelay 0159                   __size_of_frexp 003B                         _T2CLKCON 0290  
                ___aldiv@divisor 0070                  ___aldiv@counter 0020                         _LCD_Init 0A90  
                 ___wmul@product 0074                         _LCD_Port 163E                        clear_ram0 15C7  
                       _PIE0bits 0716                         _PIR4bits 0710                 __size_of_ADCRead 000E  
                     _ADCON0bits 0093                ___wmul@multiplier 0070                       ?_eval_poly 004D  
               __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 168A                ??_TMR2_Initialize 0070  
                readAnalog@value 007B                        frexp@eptr 0073                     ??_readAnalog 0028  
                   ??_menuChoice 002E          ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002C  
                 LCD_Write_Int@j 002A                 __size_of___aldiv 0082                 __size_of___awdiv 0051  
               __size_of___ftadd 00F6                 __size_of___awmod 0045                 __size_of___ftdiv 00A9  
               __size_of___ftmul 00B4                 __size_of___ftsub 001E                 __size_of___fttol 0086  
                       ___awtoft 16C3                         ___ftpack 0017         __size_of_ADCC_Initialize 001A  
                       _channels 0130                 __size_of_readKey 0013                PID_Calculate@temp 0078  
                       __ptext10 0DED                         __ptext11 0B17                         __ptext20 1670  
                       __ptext12 0017                         __ptext21 0D24                         __ptext13 007B  
                       __ptext30 0A90                         __ptext22 0892                         __ptext14 0800  
                       __ptext31 15D3                         __ptext23 08D7                         __ptext15 0988  
                       __ptext32 1707                         __ptext24 0811                         __ptext16 1606  
                       __ptext33 172D                         __ptext25 0850                         __ptext17 0307  
                       __ptext34 1614                         __ptext26 15F8                         __ptext18 0004  
                       __ptext35 163E                         __ptext27 15ED                         __ptext19 1628  
                       __ptext36 1656                         __ptext28 1759                         __ptext37 019B  
                       __ptext29 15DB                         __ptext38 168A               __end_of_readAnalog 019B  
        __size_of_LCD_Set_Cursor 003F                        tempCalc@R 005F         __size_of_InitCustomChars 0026  
             __end_of_menuChoice 053E              LCD_Write_Int@F13694 014C                         _pidCount 015B  
                  __size_of_main 0280             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0EE3  
                       _setpoint 00E6                      _lowRangeSet 013C      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1000                      ??_eval_poly 007E                      _sampleIndex 00E1  
             _PWM7_LoadDutyValue 1628               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
            ?_PWM7_LoadDutyValue 0070                main@outputSamples 00AA                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C             main@pidPeriodCounter 00C5  
             LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0079            __end_of_PID_Calculate 0307  
           ??_PWM7_LoadDutyValue 0072                     ___aldiv@sign 0021                      _D_PrevError 0155  
         __size_of_LCD_Write_Int 00C9                  main@outputIndex 00D3   __end_of_PIN_MANAGER_Initialize 178A  
              ??_ADCC_Initialize 0070                  main@outputTotal 00C9                ??_InitCustomChars 0075  
