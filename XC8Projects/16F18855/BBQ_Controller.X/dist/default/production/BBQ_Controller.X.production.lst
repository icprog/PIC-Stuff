

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Mar 31 21:03:08 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x620,48
    57                           	dabs	1,0x5A0,80
    58                           	dabs	1,0x550,32
    59                           	dabs	1,0x2350,0,_samples
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  001C                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0110                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018E                     	;# 
   155  018F                     	;# 
   156  0190                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0198                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  020E                     	;# 
   169  020F                     	;# 
   170  020F                     	;# 
   171  0210                     	;# 
   172  0210                     	;# 
   173  0211                     	;# 
   174  0211                     	;# 
   175  0212                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0216                     	;# 
   181  0216                     	;# 
   182  0217                     	;# 
   183  0217                     	;# 
   184  0218                     	;# 
   185  0219                     	;# 
   186  021A                     	;# 
   187  021B                     	;# 
   188  021B                     	;# 
   189  021C                     	;# 
   190  021C                     	;# 
   191  021D                     	;# 
   192  021D                     	;# 
   193  021E                     	;# 
   194  021F                     	;# 
   195  028C                     	;# 
   196  028C                     	;# 
   197  028D                     	;# 
   198  028D                     	;# 
   199  028E                     	;# 
   200  028F                     	;# 
   201  0290                     	;# 
   202  0290                     	;# 
   203  0291                     	;# 
   204  0292                     	;# 
   205  0292                     	;# 
   206  0293                     	;# 
   207  0293                     	;# 
   208  0294                     	;# 
   209  0295                     	;# 
   210  0296                     	;# 
   211  0296                     	;# 
   212  0297                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  0299                     	;# 
   217  029A                     	;# 
   218  029B                     	;# 
   219  029C                     	;# 
   220  029C                     	;# 
   221  029D                     	;# 
   222  030C                     	;# 
   223  030C                     	;# 
   224  030D                     	;# 
   225  030E                     	;# 
   226  030F                     	;# 
   227  0310                     	;# 
   228  0310                     	;# 
   229  0311                     	;# 
   230  0312                     	;# 
   231  0313                     	;# 
   232  0314                     	;# 
   233  0314                     	;# 
   234  0315                     	;# 
   235  0316                     	;# 
   236  0317                     	;# 
   237  0318                     	;# 
   238  0318                     	;# 
   239  0319                     	;# 
   240  031A                     	;# 
   241  031B                     	;# 
   242  031C                     	;# 
   243  031C                     	;# 
   244  031D                     	;# 
   245  031E                     	;# 
   246  031F                     	;# 
   247  038C                     	;# 
   248  038D                     	;# 
   249  038E                     	;# 
   250  0390                     	;# 
   251  0391                     	;# 
   252  0392                     	;# 
   253  040C                     	;# 
   254  040D                     	;# 
   255  040E                     	;# 
   256  040F                     	;# 
   257  0410                     	;# 
   258  0411                     	;# 
   259  0416                     	;# 
   260  0416                     	;# 
   261  0417                     	;# 
   262  0418                     	;# 
   263  0418                     	;# 
   264  0419                     	;# 
   265  041A                     	;# 
   266  041A                     	;# 
   267  041B                     	;# 
   268  041C                     	;# 
   269  041C                     	;# 
   270  041D                     	;# 
   271  041E                     	;# 
   272  041F                     	;# 
   273  048C                     	;# 
   274  048C                     	;# 
   275  048D                     	;# 
   276  048E                     	;# 
   277  048F                     	;# 
   278  048F                     	;# 
   279  0490                     	;# 
   280  0491                     	;# 
   281  0492                     	;# 
   282  0492                     	;# 
   283  0493                     	;# 
   284  0494                     	;# 
   285  0495                     	;# 
   286  0495                     	;# 
   287  0496                     	;# 
   288  0497                     	;# 
   289  0498                     	;# 
   290  0499                     	;# 
   291  049A                     	;# 
   292  049B                     	;# 
   293  049C                     	;# 
   294  049D                     	;# 
   295  050C                     	;# 
   296  050C                     	;# 
   297  050D                     	;# 
   298  050E                     	;# 
   299  050F                     	;# 
   300  050F                     	;# 
   301  0510                     	;# 
   302  0511                     	;# 
   303  0512                     	;# 
   304  0512                     	;# 
   305  0513                     	;# 
   306  0514                     	;# 
   307  0515                     	;# 
   308  0515                     	;# 
   309  0516                     	;# 
   310  0517                     	;# 
   311  0518                     	;# 
   312  0519                     	;# 
   313  051A                     	;# 
   314  051B                     	;# 
   315  051C                     	;# 
   316  051D                     	;# 
   317  058C                     	;# 
   318  058C                     	;# 
   319  058D                     	;# 
   320  058E                     	;# 
   321  058F                     	;# 
   322  058F                     	;# 
   323  0590                     	;# 
   324  0591                     	;# 
   325  0592                     	;# 
   326  0593                     	;# 
   327  060C                     	;# 
   328  060D                     	;# 
   329  060E                     	;# 
   330  060F                     	;# 
   331  0610                     	;# 
   332  0611                     	;# 
   333  0612                     	;# 
   334  0613                     	;# 
   335  0614                     	;# 
   336  0616                     	;# 
   337  0617                     	;# 
   338  0618                     	;# 
   339  0619                     	;# 
   340  061A                     	;# 
   341  061B                     	;# 
   342  061C                     	;# 
   343  061D                     	;# 
   344  061E                     	;# 
   345  068C                     	;# 
   346  068D                     	;# 
   347  068E                     	;# 
   348  068F                     	;# 
   349  0690                     	;# 
   350  0691                     	;# 
   351  0692                     	;# 
   352  0693                     	;# 
   353  0694                     	;# 
   354  070C                     	;# 
   355  070D                     	;# 
   356  070E                     	;# 
   357  070F                     	;# 
   358  0710                     	;# 
   359  0711                     	;# 
   360  0712                     	;# 
   361  0713                     	;# 
   362  0714                     	;# 
   363  0716                     	;# 
   364  0717                     	;# 
   365  0718                     	;# 
   366  0719                     	;# 
   367  071A                     	;# 
   368  071B                     	;# 
   369  071C                     	;# 
   370  071D                     	;# 
   371  071E                     	;# 
   372  0796                     	;# 
   373  0797                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  079A                     	;# 
   377  079B                     	;# 
   378  080C                     	;# 
   379  080D                     	;# 
   380  080E                     	;# 
   381  080F                     	;# 
   382  0810                     	;# 
   383  0811                     	;# 
   384  0812                     	;# 
   385  0813                     	;# 
   386  0814                     	;# 
   387  081A                     	;# 
   388  081B                     	;# 
   389  081C                     	;# 
   390  081D                     	;# 
   391  081E                     	;# 
   392  081F                     	;# 
   393  088C                     	;# 
   394  088D                     	;# 
   395  088E                     	;# 
   396  088F                     	;# 
   397  0890                     	;# 
   398  0891                     	;# 
   399  0892                     	;# 
   400  0893                     	;# 
   401  0895                     	;# 
   402  0896                     	;# 
   403  0897                     	;# 
   404  0898                     	;# 
   405  0899                     	;# 
   406  089A                     	;# 
   407  089B                     	;# 
   408  090C                     	;# 
   409  090E                     	;# 
   410  090F                     	;# 
   411  091F                     	;# 
   412  091F                     	;# 
   413  098F                     	;# 
   414  098F                     	;# 
   415  0990                     	;# 
   416  0991                     	;# 
   417  0992                     	;# 
   418  0993                     	;# 
   419  0994                     	;# 
   420  0995                     	;# 
   421  0996                     	;# 
   422  0997                     	;# 
   423  0E0F                     	;# 
   424  0E10                     	;# 
   425  0E11                     	;# 
   426  0E12                     	;# 
   427  0E13                     	;# 
   428  0E14                     	;# 
   429  0E15                     	;# 
   430  0E16                     	;# 
   431  0E17                     	;# 
   432  0E18                     	;# 
   433  0E19                     	;# 
   434  0E1A                     	;# 
   435  0E1B                     	;# 
   436  0E1C                     	;# 
   437  0E1D                     	;# 
   438  0E1E                     	;# 
   439  0E1F                     	;# 
   440  0E20                     	;# 
   441  0E21                     	;# 
   442  0E22                     	;# 
   443  0E23                     	;# 
   444  0E24                     	;# 
   445  0E25                     	;# 
   446  0E26                     	;# 
   447  0E27                     	;# 
   448  0E28                     	;# 
   449  0E29                     	;# 
   450  0E2A                     	;# 
   451  0E2B                     	;# 
   452  0E2C                     	;# 
   453  0E2D                     	;# 
   454  0E2E                     	;# 
   455  0E2F                     	;# 
   456  0E30                     	;# 
   457  0E31                     	;# 
   458  0E32                     	;# 
   459  0E33                     	;# 
   460  0E34                     	;# 
   461  0E35                     	;# 
   462  0E36                     	;# 
   463  0E37                     	;# 
   464  0E8F                     	;# 
   465  0E90                     	;# 
   466  0E91                     	;# 
   467  0E92                     	;# 
   468  0E93                     	;# 
   469  0E94                     	;# 
   470  0E95                     	;# 
   471  0E96                     	;# 
   472  0E97                     	;# 
   473  0E9C                     	;# 
   474  0E9D                     	;# 
   475  0E9E                     	;# 
   476  0EA1                     	;# 
   477  0EA2                     	;# 
   478  0EA3                     	;# 
   479  0EA4                     	;# 
   480  0EA5                     	;# 
   481  0EA9                     	;# 
   482  0EAA                     	;# 
   483  0EAB                     	;# 
   484  0EAC                     	;# 
   485  0EB1                     	;# 
   486  0EB2                     	;# 
   487  0EB3                     	;# 
   488  0EB8                     	;# 
   489  0EB9                     	;# 
   490  0EBA                     	;# 
   491  0EBB                     	;# 
   492  0EBC                     	;# 
   493  0EBD                     	;# 
   494  0EBE                     	;# 
   495  0EC3                     	;# 
   496  0EC5                     	;# 
   497  0EC6                     	;# 
   498  0EC7                     	;# 
   499  0EC8                     	;# 
   500  0EC9                     	;# 
   501  0ECA                     	;# 
   502  0ECB                     	;# 
   503  0ECC                     	;# 
   504  0F10                     	;# 
   505  0F11                     	;# 
   506  0F12                     	;# 
   507  0F13                     	;# 
   508  0F14                     	;# 
   509  0F15                     	;# 
   510  0F16                     	;# 
   511  0F17                     	;# 
   512  0F18                     	;# 
   513  0F19                     	;# 
   514  0F1A                     	;# 
   515  0F1B                     	;# 
   516  0F1C                     	;# 
   517  0F1D                     	;# 
   518  0F1E                     	;# 
   519  0F1F                     	;# 
   520  0F20                     	;# 
   521  0F21                     	;# 
   522  0F22                     	;# 
   523  0F23                     	;# 
   524  0F24                     	;# 
   525  0F25                     	;# 
   526  0F26                     	;# 
   527  0F27                     	;# 
   528  0F38                     	;# 
   529  0F39                     	;# 
   530  0F3A                     	;# 
   531  0F3B                     	;# 
   532  0F3C                     	;# 
   533  0F3D                     	;# 
   534  0F3E                     	;# 
   535  0F3F                     	;# 
   536  0F40                     	;# 
   537  0F41                     	;# 
   538  0F43                     	;# 
   539  0F44                     	;# 
   540  0F45                     	;# 
   541  0F46                     	;# 
   542  0F47                     	;# 
   543  0F48                     	;# 
   544  0F49                     	;# 
   545  0F4A                     	;# 
   546  0F4B                     	;# 
   547  0F4C                     	;# 
   548  0F4E                     	;# 
   549  0F4F                     	;# 
   550  0F50                     	;# 
   551  0F51                     	;# 
   552  0F52                     	;# 
   553  0F53                     	;# 
   554  0F54                     	;# 
   555  0F55                     	;# 
   556  0F56                     	;# 
   557  0F57                     	;# 
   558  0F65                     	;# 
   559  0F68                     	;# 
   560  0F69                     	;# 
   561  0F6A                     	;# 
   562  0F6B                     	;# 
   563  0FE4                     	;# 
   564  0FE5                     	;# 
   565  0FE6                     	;# 
   566  0FE7                     	;# 
   567  0FE8                     	;# 
   568  0FE9                     	;# 
   569  0FEA                     	;# 
   570  0FEB                     	;# 
   571  0FED                     	;# 
   572  0FEE                     	;# 
   573  0FEF                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  0008                     	;# 
   583  0009                     	;# 
   584  000A                     	;# 
   585  000B                     	;# 
   586  000C                     	;# 
   587  000D                     	;# 
   588  000E                     	;# 
   589  0010                     	;# 
   590  0011                     	;# 
   591  0012                     	;# 
   592  0013                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  001C                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001D                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  008C                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  008E                     	;# 
   607  008F                     	;# 
   608  0090                     	;# 
   609  0090                     	;# 
   610  0091                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0096                     	;# 
   615  0097                     	;# 
   616  0098                     	;# 
   617  0099                     	;# 
   618  009A                     	;# 
   619  009B                     	;# 
   620  009C                     	;# 
   621  009D                     	;# 
   622  009E                     	;# 
   623  010C                     	;# 
   624  010D                     	;# 
   625  010E                     	;# 
   626  010E                     	;# 
   627  010F                     	;# 
   628  0110                     	;# 
   629  0110                     	;# 
   630  0111                     	;# 
   631  0112                     	;# 
   632  0112                     	;# 
   633  0113                     	;# 
   634  0114                     	;# 
   635  0114                     	;# 
   636  0115                     	;# 
   637  0116                     	;# 
   638  0116                     	;# 
   639  0117                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  0119                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011A                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011C                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011E                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  018C                     	;# 
   666  018D                     	;# 
   667  018E                     	;# 
   668  018F                     	;# 
   669  0190                     	;# 
   670  0191                     	;# 
   671  0192                     	;# 
   672  0196                     	;# 
   673  0197                     	;# 
   674  0198                     	;# 
   675  0199                     	;# 
   676  019A                     	;# 
   677  019B                     	;# 
   678  019C                     	;# 
   679  020C                     	;# 
   680  020D                     	;# 
   681  020E                     	;# 
   682  020F                     	;# 
   683  020F                     	;# 
   684  0210                     	;# 
   685  0210                     	;# 
   686  0211                     	;# 
   687  0211                     	;# 
   688  0212                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0216                     	;# 
   694  0216                     	;# 
   695  0217                     	;# 
   696  0217                     	;# 
   697  0218                     	;# 
   698  0219                     	;# 
   699  021A                     	;# 
   700  021B                     	;# 
   701  021B                     	;# 
   702  021C                     	;# 
   703  021C                     	;# 
   704  021D                     	;# 
   705  021D                     	;# 
   706  021E                     	;# 
   707  021F                     	;# 
   708  028C                     	;# 
   709  028C                     	;# 
   710  028D                     	;# 
   711  028D                     	;# 
   712  028E                     	;# 
   713  028F                     	;# 
   714  0290                     	;# 
   715  0290                     	;# 
   716  0291                     	;# 
   717  0292                     	;# 
   718  0292                     	;# 
   719  0293                     	;# 
   720  0293                     	;# 
   721  0294                     	;# 
   722  0295                     	;# 
   723  0296                     	;# 
   724  0296                     	;# 
   725  0297                     	;# 
   726  0298                     	;# 
   727  0298                     	;# 
   728  0299                     	;# 
   729  0299                     	;# 
   730  029A                     	;# 
   731  029B                     	;# 
   732  029C                     	;# 
   733  029C                     	;# 
   734  029D                     	;# 
   735  030C                     	;# 
   736  030C                     	;# 
   737  030D                     	;# 
   738  030E                     	;# 
   739  030F                     	;# 
   740  0310                     	;# 
   741  0310                     	;# 
   742  0311                     	;# 
   743  0312                     	;# 
   744  0313                     	;# 
   745  0314                     	;# 
   746  0314                     	;# 
   747  0315                     	;# 
   748  0316                     	;# 
   749  0317                     	;# 
   750  0318                     	;# 
   751  0318                     	;# 
   752  0319                     	;# 
   753  031A                     	;# 
   754  031B                     	;# 
   755  031C                     	;# 
   756  031C                     	;# 
   757  031D                     	;# 
   758  031E                     	;# 
   759  031F                     	;# 
   760  038C                     	;# 
   761  038D                     	;# 
   762  038E                     	;# 
   763  0390                     	;# 
   764  0391                     	;# 
   765  0392                     	;# 
   766  040C                     	;# 
   767  040D                     	;# 
   768  040E                     	;# 
   769  040F                     	;# 
   770  0410                     	;# 
   771  0411                     	;# 
   772  0416                     	;# 
   773  0416                     	;# 
   774  0417                     	;# 
   775  0418                     	;# 
   776  0418                     	;# 
   777  0419                     	;# 
   778  041A                     	;# 
   779  041A                     	;# 
   780  041B                     	;# 
   781  041C                     	;# 
   782  041C                     	;# 
   783  041D                     	;# 
   784  041E                     	;# 
   785  041F                     	;# 
   786  048C                     	;# 
   787  048C                     	;# 
   788  048D                     	;# 
   789  048E                     	;# 
   790  048F                     	;# 
   791  048F                     	;# 
   792  0490                     	;# 
   793  0491                     	;# 
   794  0492                     	;# 
   795  0492                     	;# 
   796  0493                     	;# 
   797  0494                     	;# 
   798  0495                     	;# 
   799  0495                     	;# 
   800  0496                     	;# 
   801  0497                     	;# 
   802  0498                     	;# 
   803  0499                     	;# 
   804  049A                     	;# 
   805  049B                     	;# 
   806  049C                     	;# 
   807  049D                     	;# 
   808  050C                     	;# 
   809  050C                     	;# 
   810  050D                     	;# 
   811  050E                     	;# 
   812  050F                     	;# 
   813  050F                     	;# 
   814  0510                     	;# 
   815  0511                     	;# 
   816  0512                     	;# 
   817  0512                     	;# 
   818  0513                     	;# 
   819  0514                     	;# 
   820  0515                     	;# 
   821  0515                     	;# 
   822  0516                     	;# 
   823  0517                     	;# 
   824  0518                     	;# 
   825  0519                     	;# 
   826  051A                     	;# 
   827  051B                     	;# 
   828  051C                     	;# 
   829  051D                     	;# 
   830  058C                     	;# 
   831  058C                     	;# 
   832  058D                     	;# 
   833  058E                     	;# 
   834  058F                     	;# 
   835  058F                     	;# 
   836  0590                     	;# 
   837  0591                     	;# 
   838  0592                     	;# 
   839  0593                     	;# 
   840  060C                     	;# 
   841  060D                     	;# 
   842  060E                     	;# 
   843  060F                     	;# 
   844  0610                     	;# 
   845  0611                     	;# 
   846  0612                     	;# 
   847  0613                     	;# 
   848  0614                     	;# 
   849  0616                     	;# 
   850  0617                     	;# 
   851  0618                     	;# 
   852  0619                     	;# 
   853  061A                     	;# 
   854  061B                     	;# 
   855  061C                     	;# 
   856  061D                     	;# 
   857  061E                     	;# 
   858  068C                     	;# 
   859  068D                     	;# 
   860  068E                     	;# 
   861  068F                     	;# 
   862  0690                     	;# 
   863  0691                     	;# 
   864  0692                     	;# 
   865  0693                     	;# 
   866  0694                     	;# 
   867  070C                     	;# 
   868  070D                     	;# 
   869  070E                     	;# 
   870  070F                     	;# 
   871  0710                     	;# 
   872  0711                     	;# 
   873  0712                     	;# 
   874  0713                     	;# 
   875  0714                     	;# 
   876  0716                     	;# 
   877  0717                     	;# 
   878  0718                     	;# 
   879  0719                     	;# 
   880  071A                     	;# 
   881  071B                     	;# 
   882  071C                     	;# 
   883  071D                     	;# 
   884  071E                     	;# 
   885  0796                     	;# 
   886  0797                     	;# 
   887  0798                     	;# 
   888  0799                     	;# 
   889  079A                     	;# 
   890  079B                     	;# 
   891  080C                     	;# 
   892  080D                     	;# 
   893  080E                     	;# 
   894  080F                     	;# 
   895  0810                     	;# 
   896  0811                     	;# 
   897  0812                     	;# 
   898  0813                     	;# 
   899  0814                     	;# 
   900  081A                     	;# 
   901  081B                     	;# 
   902  081C                     	;# 
   903  081D                     	;# 
   904  081E                     	;# 
   905  081F                     	;# 
   906  088C                     	;# 
   907  088D                     	;# 
   908  088E                     	;# 
   909  088F                     	;# 
   910  0890                     	;# 
   911  0891                     	;# 
   912  0892                     	;# 
   913  0893                     	;# 
   914  0895                     	;# 
   915  0896                     	;# 
   916  0897                     	;# 
   917  0898                     	;# 
   918  0899                     	;# 
   919  089A                     	;# 
   920  089B                     	;# 
   921  090C                     	;# 
   922  090E                     	;# 
   923  090F                     	;# 
   924  091F                     	;# 
   925  091F                     	;# 
   926  098F                     	;# 
   927  098F                     	;# 
   928  0990                     	;# 
   929  0991                     	;# 
   930  0992                     	;# 
   931  0993                     	;# 
   932  0994                     	;# 
   933  0995                     	;# 
   934  0996                     	;# 
   935  0997                     	;# 
   936  0E0F                     	;# 
   937  0E10                     	;# 
   938  0E11                     	;# 
   939  0E12                     	;# 
   940  0E13                     	;# 
   941  0E14                     	;# 
   942  0E15                     	;# 
   943  0E16                     	;# 
   944  0E17                     	;# 
   945  0E18                     	;# 
   946  0E19                     	;# 
   947  0E1A                     	;# 
   948  0E1B                     	;# 
   949  0E1C                     	;# 
   950  0E1D                     	;# 
   951  0E1E                     	;# 
   952  0E1F                     	;# 
   953  0E20                     	;# 
   954  0E21                     	;# 
   955  0E22                     	;# 
   956  0E23                     	;# 
   957  0E24                     	;# 
   958  0E25                     	;# 
   959  0E26                     	;# 
   960  0E27                     	;# 
   961  0E28                     	;# 
   962  0E29                     	;# 
   963  0E2A                     	;# 
   964  0E2B                     	;# 
   965  0E2C                     	;# 
   966  0E2D                     	;# 
   967  0E2E                     	;# 
   968  0E2F                     	;# 
   969  0E30                     	;# 
   970  0E31                     	;# 
   971  0E32                     	;# 
   972  0E33                     	;# 
   973  0E34                     	;# 
   974  0E35                     	;# 
   975  0E36                     	;# 
   976  0E37                     	;# 
   977  0E8F                     	;# 
   978  0E90                     	;# 
   979  0E91                     	;# 
   980  0E92                     	;# 
   981  0E93                     	;# 
   982  0E94                     	;# 
   983  0E95                     	;# 
   984  0E96                     	;# 
   985  0E97                     	;# 
   986  0E9C                     	;# 
   987  0E9D                     	;# 
   988  0E9E                     	;# 
   989  0EA1                     	;# 
   990  0EA2                     	;# 
   991  0EA3                     	;# 
   992  0EA4                     	;# 
   993  0EA5                     	;# 
   994  0EA9                     	;# 
   995  0EAA                     	;# 
   996  0EAB                     	;# 
   997  0EAC                     	;# 
   998  0EB1                     	;# 
   999  0EB2                     	;# 
  1000  0EB3                     	;# 
  1001  0EB8                     	;# 
  1002  0EB9                     	;# 
  1003  0EBA                     	;# 
  1004  0EBB                     	;# 
  1005  0EBC                     	;# 
  1006  0EBD                     	;# 
  1007  0EBE                     	;# 
  1008  0EC3                     	;# 
  1009  0EC5                     	;# 
  1010  0EC6                     	;# 
  1011  0EC7                     	;# 
  1012  0EC8                     	;# 
  1013  0EC9                     	;# 
  1014  0ECA                     	;# 
  1015  0ECB                     	;# 
  1016  0ECC                     	;# 
  1017  0F10                     	;# 
  1018  0F11                     	;# 
  1019  0F12                     	;# 
  1020  0F13                     	;# 
  1021  0F14                     	;# 
  1022  0F15                     	;# 
  1023  0F16                     	;# 
  1024  0F17                     	;# 
  1025  0F18                     	;# 
  1026  0F19                     	;# 
  1027  0F1A                     	;# 
  1028  0F1B                     	;# 
  1029  0F1C                     	;# 
  1030  0F1D                     	;# 
  1031  0F1E                     	;# 
  1032  0F1F                     	;# 
  1033  0F20                     	;# 
  1034  0F21                     	;# 
  1035  0F22                     	;# 
  1036  0F23                     	;# 
  1037  0F24                     	;# 
  1038  0F25                     	;# 
  1039  0F26                     	;# 
  1040  0F27                     	;# 
  1041  0F38                     	;# 
  1042  0F39                     	;# 
  1043  0F3A                     	;# 
  1044  0F3B                     	;# 
  1045  0F3C                     	;# 
  1046  0F3D                     	;# 
  1047  0F3E                     	;# 
  1048  0F3F                     	;# 
  1049  0F40                     	;# 
  1050  0F41                     	;# 
  1051  0F43                     	;# 
  1052  0F44                     	;# 
  1053  0F45                     	;# 
  1054  0F46                     	;# 
  1055  0F47                     	;# 
  1056  0F48                     	;# 
  1057  0F49                     	;# 
  1058  0F4A                     	;# 
  1059  0F4B                     	;# 
  1060  0F4C                     	;# 
  1061  0F4E                     	;# 
  1062  0F4F                     	;# 
  1063  0F50                     	;# 
  1064  0F51                     	;# 
  1065  0F52                     	;# 
  1066  0F53                     	;# 
  1067  0F54                     	;# 
  1068  0F55                     	;# 
  1069  0F56                     	;# 
  1070  0F57                     	;# 
  1071  0F65                     	;# 
  1072  0F68                     	;# 
  1073  0F69                     	;# 
  1074  0F6A                     	;# 
  1075  0F6B                     	;# 
  1076  0FE4                     	;# 
  1077  0FE5                     	;# 
  1078  0FE6                     	;# 
  1079  0FE7                     	;# 
  1080  0FE8                     	;# 
  1081  0FE9                     	;# 
  1082  0FEA                     	;# 
  1083  0FEB                     	;# 
  1084  0FED                     	;# 
  1085  0FEE                     	;# 
  1086  0FEF                     	;# 
  1087  0000                     	;# 
  1088  0001                     	;# 
  1089  0002                     	;# 
  1090  0003                     	;# 
  1091  0004                     	;# 
  1092  0005                     	;# 
  1093  0006                     	;# 
  1094  0007                     	;# 
  1095  0008                     	;# 
  1096  0009                     	;# 
  1097  000A                     	;# 
  1098  000B                     	;# 
  1099  000C                     	;# 
  1100  000D                     	;# 
  1101  000E                     	;# 
  1102  0010                     	;# 
  1103  0011                     	;# 
  1104  0012                     	;# 
  1105  0013                     	;# 
  1106  0016                     	;# 
  1107  0017                     	;# 
  1108  0018                     	;# 
  1109  001C                     	;# 
  1110  001C                     	;# 
  1111  001D                     	;# 
  1112  001D                     	;# 
  1113  001E                     	;# 
  1114  001F                     	;# 
  1115  008C                     	;# 
  1116  008C                     	;# 
  1117  008D                     	;# 
  1118  008E                     	;# 
  1119  008E                     	;# 
  1120  008F                     	;# 
  1121  0090                     	;# 
  1122  0090                     	;# 
  1123  0091                     	;# 
  1124  0093                     	;# 
  1125  0094                     	;# 
  1126  0095                     	;# 
  1127  0096                     	;# 
  1128  0097                     	;# 
  1129  0098                     	;# 
  1130  0099                     	;# 
  1131  009A                     	;# 
  1132  009B                     	;# 
  1133  009C                     	;# 
  1134  009D                     	;# 
  1135  009E                     	;# 
  1136  010C                     	;# 
  1137  010D                     	;# 
  1138  010E                     	;# 
  1139  010E                     	;# 
  1140  010F                     	;# 
  1141  0110                     	;# 
  1142  0110                     	;# 
  1143  0111                     	;# 
  1144  0112                     	;# 
  1145  0112                     	;# 
  1146  0113                     	;# 
  1147  0114                     	;# 
  1148  0114                     	;# 
  1149  0115                     	;# 
  1150  0116                     	;# 
  1151  0116                     	;# 
  1152  0117                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  0119                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011A                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011C                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011D                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011E                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  018C                     	;# 
  1179  018D                     	;# 
  1180  018E                     	;# 
  1181  018F                     	;# 
  1182  0190                     	;# 
  1183  0191                     	;# 
  1184  0192                     	;# 
  1185  0196                     	;# 
  1186  0197                     	;# 
  1187  0198                     	;# 
  1188  0199                     	;# 
  1189  019A                     	;# 
  1190  019B                     	;# 
  1191  019C                     	;# 
  1192  020C                     	;# 
  1193  020D                     	;# 
  1194  020E                     	;# 
  1195  020F                     	;# 
  1196  020F                     	;# 
  1197  0210                     	;# 
  1198  0210                     	;# 
  1199  0211                     	;# 
  1200  0211                     	;# 
  1201  0212                     	;# 
  1202  0213                     	;# 
  1203  0214                     	;# 
  1204  0215                     	;# 
  1205  0215                     	;# 
  1206  0216                     	;# 
  1207  0216                     	;# 
  1208  0217                     	;# 
  1209  0217                     	;# 
  1210  0218                     	;# 
  1211  0219                     	;# 
  1212  021A                     	;# 
  1213  021B                     	;# 
  1214  021B                     	;# 
  1215  021C                     	;# 
  1216  021C                     	;# 
  1217  021D                     	;# 
  1218  021D                     	;# 
  1219  021E                     	;# 
  1220  021F                     	;# 
  1221  028C                     	;# 
  1222  028C                     	;# 
  1223  028D                     	;# 
  1224  028D                     	;# 
  1225  028E                     	;# 
  1226  028F                     	;# 
  1227  0290                     	;# 
  1228  0290                     	;# 
  1229  0291                     	;# 
  1230  0292                     	;# 
  1231  0292                     	;# 
  1232  0293                     	;# 
  1233  0293                     	;# 
  1234  0294                     	;# 
  1235  0295                     	;# 
  1236  0296                     	;# 
  1237  0296                     	;# 
  1238  0297                     	;# 
  1239  0298                     	;# 
  1240  0298                     	;# 
  1241  0299                     	;# 
  1242  0299                     	;# 
  1243  029A                     	;# 
  1244  029B                     	;# 
  1245  029C                     	;# 
  1246  029C                     	;# 
  1247  029D                     	;# 
  1248  030C                     	;# 
  1249  030C                     	;# 
  1250  030D                     	;# 
  1251  030E                     	;# 
  1252  030F                     	;# 
  1253  0310                     	;# 
  1254  0310                     	;# 
  1255  0311                     	;# 
  1256  0312                     	;# 
  1257  0313                     	;# 
  1258  0314                     	;# 
  1259  0314                     	;# 
  1260  0315                     	;# 
  1261  0316                     	;# 
  1262  0317                     	;# 
  1263  0318                     	;# 
  1264  0318                     	;# 
  1265  0319                     	;# 
  1266  031A                     	;# 
  1267  031B                     	;# 
  1268  031C                     	;# 
  1269  031C                     	;# 
  1270  031D                     	;# 
  1271  031E                     	;# 
  1272  031F                     	;# 
  1273  038C                     	;# 
  1274  038D                     	;# 
  1275  038E                     	;# 
  1276  0390                     	;# 
  1277  0391                     	;# 
  1278  0392                     	;# 
  1279  040C                     	;# 
  1280  040D                     	;# 
  1281  040E                     	;# 
  1282  040F                     	;# 
  1283  0410                     	;# 
  1284  0411                     	;# 
  1285  0416                     	;# 
  1286  0416                     	;# 
  1287  0417                     	;# 
  1288  0418                     	;# 
  1289  0418                     	;# 
  1290  0419                     	;# 
  1291  041A                     	;# 
  1292  041A                     	;# 
  1293  041B                     	;# 
  1294  041C                     	;# 
  1295  041C                     	;# 
  1296  041D                     	;# 
  1297  041E                     	;# 
  1298  041F                     	;# 
  1299  048C                     	;# 
  1300  048C                     	;# 
  1301  048D                     	;# 
  1302  048E                     	;# 
  1303  048F                     	;# 
  1304  048F                     	;# 
  1305  0490                     	;# 
  1306  0491                     	;# 
  1307  0492                     	;# 
  1308  0492                     	;# 
  1309  0493                     	;# 
  1310  0494                     	;# 
  1311  0495                     	;# 
  1312  0495                     	;# 
  1313  0496                     	;# 
  1314  0497                     	;# 
  1315  0498                     	;# 
  1316  0499                     	;# 
  1317  049A                     	;# 
  1318  049B                     	;# 
  1319  049C                     	;# 
  1320  049D                     	;# 
  1321  050C                     	;# 
  1322  050C                     	;# 
  1323  050D                     	;# 
  1324  050E                     	;# 
  1325  050F                     	;# 
  1326  050F                     	;# 
  1327  0510                     	;# 
  1328  0511                     	;# 
  1329  0512                     	;# 
  1330  0512                     	;# 
  1331  0513                     	;# 
  1332  0514                     	;# 
  1333  0515                     	;# 
  1334  0515                     	;# 
  1335  0516                     	;# 
  1336  0517                     	;# 
  1337  0518                     	;# 
  1338  0519                     	;# 
  1339  051A                     	;# 
  1340  051B                     	;# 
  1341  051C                     	;# 
  1342  051D                     	;# 
  1343  058C                     	;# 
  1344  058C                     	;# 
  1345  058D                     	;# 
  1346  058E                     	;# 
  1347  058F                     	;# 
  1348  058F                     	;# 
  1349  0590                     	;# 
  1350  0591                     	;# 
  1351  0592                     	;# 
  1352  0593                     	;# 
  1353  060C                     	;# 
  1354  060D                     	;# 
  1355  060E                     	;# 
  1356  060F                     	;# 
  1357  0610                     	;# 
  1358  0611                     	;# 
  1359  0612                     	;# 
  1360  0613                     	;# 
  1361  0614                     	;# 
  1362  0616                     	;# 
  1363  0617                     	;# 
  1364  0618                     	;# 
  1365  0619                     	;# 
  1366  061A                     	;# 
  1367  061B                     	;# 
  1368  061C                     	;# 
  1369  061D                     	;# 
  1370  061E                     	;# 
  1371  068C                     	;# 
  1372  068D                     	;# 
  1373  068E                     	;# 
  1374  068F                     	;# 
  1375  0690                     	;# 
  1376  0691                     	;# 
  1377  0692                     	;# 
  1378  0693                     	;# 
  1379  0694                     	;# 
  1380  070C                     	;# 
  1381  070D                     	;# 
  1382  070E                     	;# 
  1383  070F                     	;# 
  1384  0710                     	;# 
  1385  0711                     	;# 
  1386  0712                     	;# 
  1387  0713                     	;# 
  1388  0714                     	;# 
  1389  0716                     	;# 
  1390  0717                     	;# 
  1391  0718                     	;# 
  1392  0719                     	;# 
  1393  071A                     	;# 
  1394  071B                     	;# 
  1395  071C                     	;# 
  1396  071D                     	;# 
  1397  071E                     	;# 
  1398  0796                     	;# 
  1399  0797                     	;# 
  1400  0798                     	;# 
  1401  0799                     	;# 
  1402  079A                     	;# 
  1403  079B                     	;# 
  1404  080C                     	;# 
  1405  080D                     	;# 
  1406  080E                     	;# 
  1407  080F                     	;# 
  1408  0810                     	;# 
  1409  0811                     	;# 
  1410  0812                     	;# 
  1411  0813                     	;# 
  1412  0814                     	;# 
  1413  081A                     	;# 
  1414  081B                     	;# 
  1415  081C                     	;# 
  1416  081D                     	;# 
  1417  081E                     	;# 
  1418  081F                     	;# 
  1419  088C                     	;# 
  1420  088D                     	;# 
  1421  088E                     	;# 
  1422  088F                     	;# 
  1423  0890                     	;# 
  1424  0891                     	;# 
  1425  0892                     	;# 
  1426  0893                     	;# 
  1427  0895                     	;# 
  1428  0896                     	;# 
  1429  0897                     	;# 
  1430  0898                     	;# 
  1431  0899                     	;# 
  1432  089A                     	;# 
  1433  089B                     	;# 
  1434  090C                     	;# 
  1435  090E                     	;# 
  1436  090F                     	;# 
  1437  091F                     	;# 
  1438  091F                     	;# 
  1439  098F                     	;# 
  1440  098F                     	;# 
  1441  0990                     	;# 
  1442  0991                     	;# 
  1443  0992                     	;# 
  1444  0993                     	;# 
  1445  0994                     	;# 
  1446  0995                     	;# 
  1447  0996                     	;# 
  1448  0997                     	;# 
  1449  0E0F                     	;# 
  1450  0E10                     	;# 
  1451  0E11                     	;# 
  1452  0E12                     	;# 
  1453  0E13                     	;# 
  1454  0E14                     	;# 
  1455  0E15                     	;# 
  1456  0E16                     	;# 
  1457  0E17                     	;# 
  1458  0E18                     	;# 
  1459  0E19                     	;# 
  1460  0E1A                     	;# 
  1461  0E1B                     	;# 
  1462  0E1C                     	;# 
  1463  0E1D                     	;# 
  1464  0E1E                     	;# 
  1465  0E1F                     	;# 
  1466  0E20                     	;# 
  1467  0E21                     	;# 
  1468  0E22                     	;# 
  1469  0E23                     	;# 
  1470  0E24                     	;# 
  1471  0E25                     	;# 
  1472  0E26                     	;# 
  1473  0E27                     	;# 
  1474  0E28                     	;# 
  1475  0E29                     	;# 
  1476  0E2A                     	;# 
  1477  0E2B                     	;# 
  1478  0E2C                     	;# 
  1479  0E2D                     	;# 
  1480  0E2E                     	;# 
  1481  0E2F                     	;# 
  1482  0E30                     	;# 
  1483  0E31                     	;# 
  1484  0E32                     	;# 
  1485  0E33                     	;# 
  1486  0E34                     	;# 
  1487  0E35                     	;# 
  1488  0E36                     	;# 
  1489  0E37                     	;# 
  1490  0E8F                     	;# 
  1491  0E90                     	;# 
  1492  0E91                     	;# 
  1493  0E92                     	;# 
  1494  0E93                     	;# 
  1495  0E94                     	;# 
  1496  0E95                     	;# 
  1497  0E96                     	;# 
  1498  0E97                     	;# 
  1499  0E9C                     	;# 
  1500  0E9D                     	;# 
  1501  0E9E                     	;# 
  1502  0EA1                     	;# 
  1503  0EA2                     	;# 
  1504  0EA3                     	;# 
  1505  0EA4                     	;# 
  1506  0EA5                     	;# 
  1507  0EA9                     	;# 
  1508  0EAA                     	;# 
  1509  0EAB                     	;# 
  1510  0EAC                     	;# 
  1511  0EB1                     	;# 
  1512  0EB2                     	;# 
  1513  0EB3                     	;# 
  1514  0EB8                     	;# 
  1515  0EB9                     	;# 
  1516  0EBA                     	;# 
  1517  0EBB                     	;# 
  1518  0EBC                     	;# 
  1519  0EBD                     	;# 
  1520  0EBE                     	;# 
  1521  0EC3                     	;# 
  1522  0EC5                     	;# 
  1523  0EC6                     	;# 
  1524  0EC7                     	;# 
  1525  0EC8                     	;# 
  1526  0EC9                     	;# 
  1527  0ECA                     	;# 
  1528  0ECB                     	;# 
  1529  0ECC                     	;# 
  1530  0F10                     	;# 
  1531  0F11                     	;# 
  1532  0F12                     	;# 
  1533  0F13                     	;# 
  1534  0F14                     	;# 
  1535  0F15                     	;# 
  1536  0F16                     	;# 
  1537  0F17                     	;# 
  1538  0F18                     	;# 
  1539  0F19                     	;# 
  1540  0F1A                     	;# 
  1541  0F1B                     	;# 
  1542  0F1C                     	;# 
  1543  0F1D                     	;# 
  1544  0F1E                     	;# 
  1545  0F1F                     	;# 
  1546  0F20                     	;# 
  1547  0F21                     	;# 
  1548  0F22                     	;# 
  1549  0F23                     	;# 
  1550  0F24                     	;# 
  1551  0F25                     	;# 
  1552  0F26                     	;# 
  1553  0F27                     	;# 
  1554  0F38                     	;# 
  1555  0F39                     	;# 
  1556  0F3A                     	;# 
  1557  0F3B                     	;# 
  1558  0F3C                     	;# 
  1559  0F3D                     	;# 
  1560  0F3E                     	;# 
  1561  0F3F                     	;# 
  1562  0F40                     	;# 
  1563  0F41                     	;# 
  1564  0F43                     	;# 
  1565  0F44                     	;# 
  1566  0F45                     	;# 
  1567  0F46                     	;# 
  1568  0F47                     	;# 
  1569  0F48                     	;# 
  1570  0F49                     	;# 
  1571  0F4A                     	;# 
  1572  0F4B                     	;# 
  1573  0F4C                     	;# 
  1574  0F4E                     	;# 
  1575  0F4F                     	;# 
  1576  0F50                     	;# 
  1577  0F51                     	;# 
  1578  0F52                     	;# 
  1579  0F53                     	;# 
  1580  0F54                     	;# 
  1581  0F55                     	;# 
  1582  0F56                     	;# 
  1583  0F57                     	;# 
  1584  0F65                     	;# 
  1585  0F68                     	;# 
  1586  0F69                     	;# 
  1587  0F6A                     	;# 
  1588  0F6B                     	;# 
  1589  0FE4                     	;# 
  1590  0FE5                     	;# 
  1591  0FE6                     	;# 
  1592  0FE7                     	;# 
  1593  0FE8                     	;# 
  1594  0FE9                     	;# 
  1595  0FEA                     	;# 
  1596  0FEB                     	;# 
  1597  0FED                     	;# 
  1598  0FEE                     	;# 
  1599  0FEF                     	;# 
  1600  0000                     	;# 
  1601  0001                     	;# 
  1602  0002                     	;# 
  1603  0003                     	;# 
  1604  0004                     	;# 
  1605  0005                     	;# 
  1606  0006                     	;# 
  1607  0007                     	;# 
  1608  0008                     	;# 
  1609  0009                     	;# 
  1610  000A                     	;# 
  1611  000B                     	;# 
  1612  000C                     	;# 
  1613  000D                     	;# 
  1614  000E                     	;# 
  1615  0010                     	;# 
  1616  0011                     	;# 
  1617  0012                     	;# 
  1618  0013                     	;# 
  1619  0016                     	;# 
  1620  0017                     	;# 
  1621  0018                     	;# 
  1622  001C                     	;# 
  1623  001C                     	;# 
  1624  001D                     	;# 
  1625  001D                     	;# 
  1626  001E                     	;# 
  1627  001F                     	;# 
  1628  008C                     	;# 
  1629  008C                     	;# 
  1630  008D                     	;# 
  1631  008E                     	;# 
  1632  008E                     	;# 
  1633  008F                     	;# 
  1634  0090                     	;# 
  1635  0090                     	;# 
  1636  0091                     	;# 
  1637  0093                     	;# 
  1638  0094                     	;# 
  1639  0095                     	;# 
  1640  0096                     	;# 
  1641  0097                     	;# 
  1642  0098                     	;# 
  1643  0099                     	;# 
  1644  009A                     	;# 
  1645  009B                     	;# 
  1646  009C                     	;# 
  1647  009D                     	;# 
  1648  009E                     	;# 
  1649  010C                     	;# 
  1650  010D                     	;# 
  1651  010E                     	;# 
  1652  010E                     	;# 
  1653  010F                     	;# 
  1654  0110                     	;# 
  1655  0110                     	;# 
  1656  0111                     	;# 
  1657  0112                     	;# 
  1658  0112                     	;# 
  1659  0113                     	;# 
  1660  0114                     	;# 
  1661  0114                     	;# 
  1662  0115                     	;# 
  1663  0116                     	;# 
  1664  0116                     	;# 
  1665  0117                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  0119                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011A                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011C                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011D                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011E                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  018C                     	;# 
  1692  018D                     	;# 
  1693  018E                     	;# 
  1694  018F                     	;# 
  1695  0190                     	;# 
  1696  0191                     	;# 
  1697  0192                     	;# 
  1698  0196                     	;# 
  1699  0197                     	;# 
  1700  0198                     	;# 
  1701  0199                     	;# 
  1702  019A                     	;# 
  1703  019B                     	;# 
  1704  019C                     	;# 
  1705  020C                     	;# 
  1706  020D                     	;# 
  1707  020E                     	;# 
  1708  020F                     	;# 
  1709  020F                     	;# 
  1710  0210                     	;# 
  1711  0210                     	;# 
  1712  0211                     	;# 
  1713  0211                     	;# 
  1714  0212                     	;# 
  1715  0213                     	;# 
  1716  0214                     	;# 
  1717  0215                     	;# 
  1718  0215                     	;# 
  1719  0216                     	;# 
  1720  0216                     	;# 
  1721  0217                     	;# 
  1722  0217                     	;# 
  1723  0218                     	;# 
  1724  0219                     	;# 
  1725  021A                     	;# 
  1726  021B                     	;# 
  1727  021B                     	;# 
  1728  021C                     	;# 
  1729  021C                     	;# 
  1730  021D                     	;# 
  1731  021D                     	;# 
  1732  021E                     	;# 
  1733  021F                     	;# 
  1734  028C                     	;# 
  1735  028C                     	;# 
  1736  028D                     	;# 
  1737  028D                     	;# 
  1738  028E                     	;# 
  1739  028F                     	;# 
  1740  0290                     	;# 
  1741  0290                     	;# 
  1742  0291                     	;# 
  1743  0292                     	;# 
  1744  0292                     	;# 
  1745  0293                     	;# 
  1746  0293                     	;# 
  1747  0294                     	;# 
  1748  0295                     	;# 
  1749  0296                     	;# 
  1750  0296                     	;# 
  1751  0297                     	;# 
  1752  0298                     	;# 
  1753  0298                     	;# 
  1754  0299                     	;# 
  1755  0299                     	;# 
  1756  029A                     	;# 
  1757  029B                     	;# 
  1758  029C                     	;# 
  1759  029C                     	;# 
  1760  029D                     	;# 
  1761  030C                     	;# 
  1762  030C                     	;# 
  1763  030D                     	;# 
  1764  030E                     	;# 
  1765  030F                     	;# 
  1766  0310                     	;# 
  1767  0310                     	;# 
  1768  0311                     	;# 
  1769  0312                     	;# 
  1770  0313                     	;# 
  1771  0314                     	;# 
  1772  0314                     	;# 
  1773  0315                     	;# 
  1774  0316                     	;# 
  1775  0317                     	;# 
  1776  0318                     	;# 
  1777  0318                     	;# 
  1778  0319                     	;# 
  1779  031A                     	;# 
  1780  031B                     	;# 
  1781  031C                     	;# 
  1782  031C                     	;# 
  1783  031D                     	;# 
  1784  031E                     	;# 
  1785  031F                     	;# 
  1786  038C                     	;# 
  1787  038D                     	;# 
  1788  038E                     	;# 
  1789  0390                     	;# 
  1790  0391                     	;# 
  1791  0392                     	;# 
  1792  040C                     	;# 
  1793  040D                     	;# 
  1794  040E                     	;# 
  1795  040F                     	;# 
  1796  0410                     	;# 
  1797  0411                     	;# 
  1798  0416                     	;# 
  1799  0416                     	;# 
  1800  0417                     	;# 
  1801  0418                     	;# 
  1802  0418                     	;# 
  1803  0419                     	;# 
  1804  041A                     	;# 
  1805  041A                     	;# 
  1806  041B                     	;# 
  1807  041C                     	;# 
  1808  041C                     	;# 
  1809  041D                     	;# 
  1810  041E                     	;# 
  1811  041F                     	;# 
  1812  048C                     	;# 
  1813  048C                     	;# 
  1814  048D                     	;# 
  1815  048E                     	;# 
  1816  048F                     	;# 
  1817  048F                     	;# 
  1818  0490                     	;# 
  1819  0491                     	;# 
  1820  0492                     	;# 
  1821  0492                     	;# 
  1822  0493                     	;# 
  1823  0494                     	;# 
  1824  0495                     	;# 
  1825  0495                     	;# 
  1826  0496                     	;# 
  1827  0497                     	;# 
  1828  0498                     	;# 
  1829  0499                     	;# 
  1830  049A                     	;# 
  1831  049B                     	;# 
  1832  049C                     	;# 
  1833  049D                     	;# 
  1834  050C                     	;# 
  1835  050C                     	;# 
  1836  050D                     	;# 
  1837  050E                     	;# 
  1838  050F                     	;# 
  1839  050F                     	;# 
  1840  0510                     	;# 
  1841  0511                     	;# 
  1842  0512                     	;# 
  1843  0512                     	;# 
  1844  0513                     	;# 
  1845  0514                     	;# 
  1846  0515                     	;# 
  1847  0515                     	;# 
  1848  0516                     	;# 
  1849  0517                     	;# 
  1850  0518                     	;# 
  1851  0519                     	;# 
  1852  051A                     	;# 
  1853  051B                     	;# 
  1854  051C                     	;# 
  1855  051D                     	;# 
  1856  058C                     	;# 
  1857  058C                     	;# 
  1858  058D                     	;# 
  1859  058E                     	;# 
  1860  058F                     	;# 
  1861  058F                     	;# 
  1862  0590                     	;# 
  1863  0591                     	;# 
  1864  0592                     	;# 
  1865  0593                     	;# 
  1866  060C                     	;# 
  1867  060D                     	;# 
  1868  060E                     	;# 
  1869  060F                     	;# 
  1870  0610                     	;# 
  1871  0611                     	;# 
  1872  0612                     	;# 
  1873  0613                     	;# 
  1874  0614                     	;# 
  1875  0616                     	;# 
  1876  0617                     	;# 
  1877  0618                     	;# 
  1878  0619                     	;# 
  1879  061A                     	;# 
  1880  061B                     	;# 
  1881  061C                     	;# 
  1882  061D                     	;# 
  1883  061E                     	;# 
  1884  068C                     	;# 
  1885  068D                     	;# 
  1886  068E                     	;# 
  1887  068F                     	;# 
  1888  0690                     	;# 
  1889  0691                     	;# 
  1890  0692                     	;# 
  1891  0693                     	;# 
  1892  0694                     	;# 
  1893  070C                     	;# 
  1894  070D                     	;# 
  1895  070E                     	;# 
  1896  070F                     	;# 
  1897  0710                     	;# 
  1898  0711                     	;# 
  1899  0712                     	;# 
  1900  0713                     	;# 
  1901  0714                     	;# 
  1902  0716                     	;# 
  1903  0717                     	;# 
  1904  0718                     	;# 
  1905  0719                     	;# 
  1906  071A                     	;# 
  1907  071B                     	;# 
  1908  071C                     	;# 
  1909  071D                     	;# 
  1910  071E                     	;# 
  1911  0796                     	;# 
  1912  0797                     	;# 
  1913  0798                     	;# 
  1914  0799                     	;# 
  1915  079A                     	;# 
  1916  079B                     	;# 
  1917  080C                     	;# 
  1918  080D                     	;# 
  1919  080E                     	;# 
  1920  080F                     	;# 
  1921  0810                     	;# 
  1922  0811                     	;# 
  1923  0812                     	;# 
  1924  0813                     	;# 
  1925  0814                     	;# 
  1926  081A                     	;# 
  1927  081B                     	;# 
  1928  081C                     	;# 
  1929  081D                     	;# 
  1930  081E                     	;# 
  1931  081F                     	;# 
  1932  088C                     	;# 
  1933  088D                     	;# 
  1934  088E                     	;# 
  1935  088F                     	;# 
  1936  0890                     	;# 
  1937  0891                     	;# 
  1938  0892                     	;# 
  1939  0893                     	;# 
  1940  0895                     	;# 
  1941  0896                     	;# 
  1942  0897                     	;# 
  1943  0898                     	;# 
  1944  0899                     	;# 
  1945  089A                     	;# 
  1946  089B                     	;# 
  1947  090C                     	;# 
  1948  090E                     	;# 
  1949  090F                     	;# 
  1950  091F                     	;# 
  1951  091F                     	;# 
  1952  098F                     	;# 
  1953  098F                     	;# 
  1954  0990                     	;# 
  1955  0991                     	;# 
  1956  0992                     	;# 
  1957  0993                     	;# 
  1958  0994                     	;# 
  1959  0995                     	;# 
  1960  0996                     	;# 
  1961  0997                     	;# 
  1962  0E0F                     	;# 
  1963  0E10                     	;# 
  1964  0E11                     	;# 
  1965  0E12                     	;# 
  1966  0E13                     	;# 
  1967  0E14                     	;# 
  1968  0E15                     	;# 
  1969  0E16                     	;# 
  1970  0E17                     	;# 
  1971  0E18                     	;# 
  1972  0E19                     	;# 
  1973  0E1A                     	;# 
  1974  0E1B                     	;# 
  1975  0E1C                     	;# 
  1976  0E1D                     	;# 
  1977  0E1E                     	;# 
  1978  0E1F                     	;# 
  1979  0E20                     	;# 
  1980  0E21                     	;# 
  1981  0E22                     	;# 
  1982  0E23                     	;# 
  1983  0E24                     	;# 
  1984  0E25                     	;# 
  1985  0E26                     	;# 
  1986  0E27                     	;# 
  1987  0E28                     	;# 
  1988  0E29                     	;# 
  1989  0E2A                     	;# 
  1990  0E2B                     	;# 
  1991  0E2C                     	;# 
  1992  0E2D                     	;# 
  1993  0E2E                     	;# 
  1994  0E2F                     	;# 
  1995  0E30                     	;# 
  1996  0E31                     	;# 
  1997  0E32                     	;# 
  1998  0E33                     	;# 
  1999  0E34                     	;# 
  2000  0E35                     	;# 
  2001  0E36                     	;# 
  2002  0E37                     	;# 
  2003  0E8F                     	;# 
  2004  0E90                     	;# 
  2005  0E91                     	;# 
  2006  0E92                     	;# 
  2007  0E93                     	;# 
  2008  0E94                     	;# 
  2009  0E95                     	;# 
  2010  0E96                     	;# 
  2011  0E97                     	;# 
  2012  0E9C                     	;# 
  2013  0E9D                     	;# 
  2014  0E9E                     	;# 
  2015  0EA1                     	;# 
  2016  0EA2                     	;# 
  2017  0EA3                     	;# 
  2018  0EA4                     	;# 
  2019  0EA5                     	;# 
  2020  0EA9                     	;# 
  2021  0EAA                     	;# 
  2022  0EAB                     	;# 
  2023  0EAC                     	;# 
  2024  0EB1                     	;# 
  2025  0EB2                     	;# 
  2026  0EB3                     	;# 
  2027  0EB8                     	;# 
  2028  0EB9                     	;# 
  2029  0EBA                     	;# 
  2030  0EBB                     	;# 
  2031  0EBC                     	;# 
  2032  0EBD                     	;# 
  2033  0EBE                     	;# 
  2034  0EC3                     	;# 
  2035  0EC5                     	;# 
  2036  0EC6                     	;# 
  2037  0EC7                     	;# 
  2038  0EC8                     	;# 
  2039  0EC9                     	;# 
  2040  0ECA                     	;# 
  2041  0ECB                     	;# 
  2042  0ECC                     	;# 
  2043  0F10                     	;# 
  2044  0F11                     	;# 
  2045  0F12                     	;# 
  2046  0F13                     	;# 
  2047  0F14                     	;# 
  2048  0F15                     	;# 
  2049  0F16                     	;# 
  2050  0F17                     	;# 
  2051  0F18                     	;# 
  2052  0F19                     	;# 
  2053  0F1A                     	;# 
  2054  0F1B                     	;# 
  2055  0F1C                     	;# 
  2056  0F1D                     	;# 
  2057  0F1E                     	;# 
  2058  0F1F                     	;# 
  2059  0F20                     	;# 
  2060  0F21                     	;# 
  2061  0F22                     	;# 
  2062  0F23                     	;# 
  2063  0F24                     	;# 
  2064  0F25                     	;# 
  2065  0F26                     	;# 
  2066  0F27                     	;# 
  2067  0F38                     	;# 
  2068  0F39                     	;# 
  2069  0F3A                     	;# 
  2070  0F3B                     	;# 
  2071  0F3C                     	;# 
  2072  0F3D                     	;# 
  2073  0F3E                     	;# 
  2074  0F3F                     	;# 
  2075  0F40                     	;# 
  2076  0F41                     	;# 
  2077  0F43                     	;# 
  2078  0F44                     	;# 
  2079  0F45                     	;# 
  2080  0F46                     	;# 
  2081  0F47                     	;# 
  2082  0F48                     	;# 
  2083  0F49                     	;# 
  2084  0F4A                     	;# 
  2085  0F4B                     	;# 
  2086  0F4C                     	;# 
  2087  0F4E                     	;# 
  2088  0F4F                     	;# 
  2089  0F50                     	;# 
  2090  0F51                     	;# 
  2091  0F52                     	;# 
  2092  0F53                     	;# 
  2093  0F54                     	;# 
  2094  0F55                     	;# 
  2095  0F56                     	;# 
  2096  0F57                     	;# 
  2097  0F65                     	;# 
  2098  0F68                     	;# 
  2099  0F69                     	;# 
  2100  0F6A                     	;# 
  2101  0F6B                     	;# 
  2102  0FE4                     	;# 
  2103  0FE5                     	;# 
  2104  0FE6                     	;# 
  2105  0FE7                     	;# 
  2106  0FE8                     	;# 
  2107  0FE9                     	;# 
  2108  0FEA                     	;# 
  2109  0FEB                     	;# 
  2110  0FED                     	;# 
  2111  0FEE                     	;# 
  2112  0FEF                     	;# 
  2113  0000                     	;# 
  2114  0001                     	;# 
  2115  0002                     	;# 
  2116  0003                     	;# 
  2117  0004                     	;# 
  2118  0005                     	;# 
  2119  0006                     	;# 
  2120  0007                     	;# 
  2121  0008                     	;# 
  2122  0009                     	;# 
  2123  000A                     	;# 
  2124  000B                     	;# 
  2125  000C                     	;# 
  2126  000D                     	;# 
  2127  000E                     	;# 
  2128  0010                     	;# 
  2129  0011                     	;# 
  2130  0012                     	;# 
  2131  0013                     	;# 
  2132  0016                     	;# 
  2133  0017                     	;# 
  2134  0018                     	;# 
  2135  001C                     	;# 
  2136  001C                     	;# 
  2137  001D                     	;# 
  2138  001D                     	;# 
  2139  001E                     	;# 
  2140  001F                     	;# 
  2141  008C                     	;# 
  2142  008C                     	;# 
  2143  008D                     	;# 
  2144  008E                     	;# 
  2145  008E                     	;# 
  2146  008F                     	;# 
  2147  0090                     	;# 
  2148  0090                     	;# 
  2149  0091                     	;# 
  2150  0093                     	;# 
  2151  0094                     	;# 
  2152  0095                     	;# 
  2153  0096                     	;# 
  2154  0097                     	;# 
  2155  0098                     	;# 
  2156  0099                     	;# 
  2157  009A                     	;# 
  2158  009B                     	;# 
  2159  009C                     	;# 
  2160  009D                     	;# 
  2161  009E                     	;# 
  2162  010C                     	;# 
  2163  010D                     	;# 
  2164  010E                     	;# 
  2165  010E                     	;# 
  2166  010F                     	;# 
  2167  0110                     	;# 
  2168  0110                     	;# 
  2169  0111                     	;# 
  2170  0112                     	;# 
  2171  0112                     	;# 
  2172  0113                     	;# 
  2173  0114                     	;# 
  2174  0114                     	;# 
  2175  0115                     	;# 
  2176  0116                     	;# 
  2177  0116                     	;# 
  2178  0117                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  0119                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011A                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011C                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011D                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011E                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  018C                     	;# 
  2205  018D                     	;# 
  2206  018E                     	;# 
  2207  018F                     	;# 
  2208  0190                     	;# 
  2209  0191                     	;# 
  2210  0192                     	;# 
  2211  0196                     	;# 
  2212  0197                     	;# 
  2213  0198                     	;# 
  2214  0199                     	;# 
  2215  019A                     	;# 
  2216  019B                     	;# 
  2217  019C                     	;# 
  2218  020C                     	;# 
  2219  020D                     	;# 
  2220  020E                     	;# 
  2221  020F                     	;# 
  2222  020F                     	;# 
  2223  0210                     	;# 
  2224  0210                     	;# 
  2225  0211                     	;# 
  2226  0211                     	;# 
  2227  0212                     	;# 
  2228  0213                     	;# 
  2229  0214                     	;# 
  2230  0215                     	;# 
  2231  0215                     	;# 
  2232  0216                     	;# 
  2233  0216                     	;# 
  2234  0217                     	;# 
  2235  0217                     	;# 
  2236  0218                     	;# 
  2237  0219                     	;# 
  2238  021A                     	;# 
  2239  021B                     	;# 
  2240  021B                     	;# 
  2241  021C                     	;# 
  2242  021C                     	;# 
  2243  021D                     	;# 
  2244  021D                     	;# 
  2245  021E                     	;# 
  2246  021F                     	;# 
  2247  028C                     	;# 
  2248  028C                     	;# 
  2249  028D                     	;# 
  2250  028D                     	;# 
  2251  028E                     	;# 
  2252  028F                     	;# 
  2253  0290                     	;# 
  2254  0290                     	;# 
  2255  0291                     	;# 
  2256  0292                     	;# 
  2257  0292                     	;# 
  2258  0293                     	;# 
  2259  0293                     	;# 
  2260  0294                     	;# 
  2261  0295                     	;# 
  2262  0296                     	;# 
  2263  0296                     	;# 
  2264  0297                     	;# 
  2265  0298                     	;# 
  2266  0298                     	;# 
  2267  0299                     	;# 
  2268  0299                     	;# 
  2269  029A                     	;# 
  2270  029B                     	;# 
  2271  029C                     	;# 
  2272  029C                     	;# 
  2273  029D                     	;# 
  2274  030C                     	;# 
  2275  030C                     	;# 
  2276  030D                     	;# 
  2277  030E                     	;# 
  2278  030F                     	;# 
  2279  0310                     	;# 
  2280  0310                     	;# 
  2281  0311                     	;# 
  2282  0312                     	;# 
  2283  0313                     	;# 
  2284  0314                     	;# 
  2285  0314                     	;# 
  2286  0315                     	;# 
  2287  0316                     	;# 
  2288  0317                     	;# 
  2289  0318                     	;# 
  2290  0318                     	;# 
  2291  0319                     	;# 
  2292  031A                     	;# 
  2293  031B                     	;# 
  2294  031C                     	;# 
  2295  031C                     	;# 
  2296  031D                     	;# 
  2297  031E                     	;# 
  2298  031F                     	;# 
  2299  038C                     	;# 
  2300  038D                     	;# 
  2301  038E                     	;# 
  2302  0390                     	;# 
  2303  0391                     	;# 
  2304  0392                     	;# 
  2305  040C                     	;# 
  2306  040D                     	;# 
  2307  040E                     	;# 
  2308  040F                     	;# 
  2309  0410                     	;# 
  2310  0411                     	;# 
  2311  0416                     	;# 
  2312  0416                     	;# 
  2313  0417                     	;# 
  2314  0418                     	;# 
  2315  0418                     	;# 
  2316  0419                     	;# 
  2317  041A                     	;# 
  2318  041A                     	;# 
  2319  041B                     	;# 
  2320  041C                     	;# 
  2321  041C                     	;# 
  2322  041D                     	;# 
  2323  041E                     	;# 
  2324  041F                     	;# 
  2325  048C                     	;# 
  2326  048C                     	;# 
  2327  048D                     	;# 
  2328  048E                     	;# 
  2329  048F                     	;# 
  2330  048F                     	;# 
  2331  0490                     	;# 
  2332  0491                     	;# 
  2333  0492                     	;# 
  2334  0492                     	;# 
  2335  0493                     	;# 
  2336  0494                     	;# 
  2337  0495                     	;# 
  2338  0495                     	;# 
  2339  0496                     	;# 
  2340  0497                     	;# 
  2341  0498                     	;# 
  2342  0499                     	;# 
  2343  049A                     	;# 
  2344  049B                     	;# 
  2345  049C                     	;# 
  2346  049D                     	;# 
  2347  050C                     	;# 
  2348  050C                     	;# 
  2349  050D                     	;# 
  2350  050E                     	;# 
  2351  050F                     	;# 
  2352  050F                     	;# 
  2353  0510                     	;# 
  2354  0511                     	;# 
  2355  0512                     	;# 
  2356  0512                     	;# 
  2357  0513                     	;# 
  2358  0514                     	;# 
  2359  0515                     	;# 
  2360  0515                     	;# 
  2361  0516                     	;# 
  2362  0517                     	;# 
  2363  0518                     	;# 
  2364  0519                     	;# 
  2365  051A                     	;# 
  2366  051B                     	;# 
  2367  051C                     	;# 
  2368  051D                     	;# 
  2369  058C                     	;# 
  2370  058C                     	;# 
  2371  058D                     	;# 
  2372  058E                     	;# 
  2373  058F                     	;# 
  2374  058F                     	;# 
  2375  0590                     	;# 
  2376  0591                     	;# 
  2377  0592                     	;# 
  2378  0593                     	;# 
  2379  060C                     	;# 
  2380  060D                     	;# 
  2381  060E                     	;# 
  2382  060F                     	;# 
  2383  0610                     	;# 
  2384  0611                     	;# 
  2385  0612                     	;# 
  2386  0613                     	;# 
  2387  0614                     	;# 
  2388  0616                     	;# 
  2389  0617                     	;# 
  2390  0618                     	;# 
  2391  0619                     	;# 
  2392  061A                     	;# 
  2393  061B                     	;# 
  2394  061C                     	;# 
  2395  061D                     	;# 
  2396  061E                     	;# 
  2397  068C                     	;# 
  2398  068D                     	;# 
  2399  068E                     	;# 
  2400  068F                     	;# 
  2401  0690                     	;# 
  2402  0691                     	;# 
  2403  0692                     	;# 
  2404  0693                     	;# 
  2405  0694                     	;# 
  2406  070C                     	;# 
  2407  070D                     	;# 
  2408  070E                     	;# 
  2409  070F                     	;# 
  2410  0710                     	;# 
  2411  0711                     	;# 
  2412  0712                     	;# 
  2413  0713                     	;# 
  2414  0714                     	;# 
  2415  0716                     	;# 
  2416  0717                     	;# 
  2417  0718                     	;# 
  2418  0719                     	;# 
  2419  071A                     	;# 
  2420  071B                     	;# 
  2421  071C                     	;# 
  2422  071D                     	;# 
  2423  071E                     	;# 
  2424  0796                     	;# 
  2425  0797                     	;# 
  2426  0798                     	;# 
  2427  0799                     	;# 
  2428  079A                     	;# 
  2429  079B                     	;# 
  2430  080C                     	;# 
  2431  080D                     	;# 
  2432  080E                     	;# 
  2433  080F                     	;# 
  2434  0810                     	;# 
  2435  0811                     	;# 
  2436  0812                     	;# 
  2437  0813                     	;# 
  2438  0814                     	;# 
  2439  081A                     	;# 
  2440  081B                     	;# 
  2441  081C                     	;# 
  2442  081D                     	;# 
  2443  081E                     	;# 
  2444  081F                     	;# 
  2445  088C                     	;# 
  2446  088D                     	;# 
  2447  088E                     	;# 
  2448  088F                     	;# 
  2449  0890                     	;# 
  2450  0891                     	;# 
  2451  0892                     	;# 
  2452  0893                     	;# 
  2453  0895                     	;# 
  2454  0896                     	;# 
  2455  0897                     	;# 
  2456  0898                     	;# 
  2457  0899                     	;# 
  2458  089A                     	;# 
  2459  089B                     	;# 
  2460  090C                     	;# 
  2461  090E                     	;# 
  2462  090F                     	;# 
  2463  091F                     	;# 
  2464  091F                     	;# 
  2465  098F                     	;# 
  2466  098F                     	;# 
  2467  0990                     	;# 
  2468  0991                     	;# 
  2469  0992                     	;# 
  2470  0993                     	;# 
  2471  0994                     	;# 
  2472  0995                     	;# 
  2473  0996                     	;# 
  2474  0997                     	;# 
  2475  0E0F                     	;# 
  2476  0E10                     	;# 
  2477  0E11                     	;# 
  2478  0E12                     	;# 
  2479  0E13                     	;# 
  2480  0E14                     	;# 
  2481  0E15                     	;# 
  2482  0E16                     	;# 
  2483  0E17                     	;# 
  2484  0E18                     	;# 
  2485  0E19                     	;# 
  2486  0E1A                     	;# 
  2487  0E1B                     	;# 
  2488  0E1C                     	;# 
  2489  0E1D                     	;# 
  2490  0E1E                     	;# 
  2491  0E1F                     	;# 
  2492  0E20                     	;# 
  2493  0E21                     	;# 
  2494  0E22                     	;# 
  2495  0E23                     	;# 
  2496  0E24                     	;# 
  2497  0E25                     	;# 
  2498  0E26                     	;# 
  2499  0E27                     	;# 
  2500  0E28                     	;# 
  2501  0E29                     	;# 
  2502  0E2A                     	;# 
  2503  0E2B                     	;# 
  2504  0E2C                     	;# 
  2505  0E2D                     	;# 
  2506  0E2E                     	;# 
  2507  0E2F                     	;# 
  2508  0E30                     	;# 
  2509  0E31                     	;# 
  2510  0E32                     	;# 
  2511  0E33                     	;# 
  2512  0E34                     	;# 
  2513  0E35                     	;# 
  2514  0E36                     	;# 
  2515  0E37                     	;# 
  2516  0E8F                     	;# 
  2517  0E90                     	;# 
  2518  0E91                     	;# 
  2519  0E92                     	;# 
  2520  0E93                     	;# 
  2521  0E94                     	;# 
  2522  0E95                     	;# 
  2523  0E96                     	;# 
  2524  0E97                     	;# 
  2525  0E9C                     	;# 
  2526  0E9D                     	;# 
  2527  0E9E                     	;# 
  2528  0EA1                     	;# 
  2529  0EA2                     	;# 
  2530  0EA3                     	;# 
  2531  0EA4                     	;# 
  2532  0EA5                     	;# 
  2533  0EA9                     	;# 
  2534  0EAA                     	;# 
  2535  0EAB                     	;# 
  2536  0EAC                     	;# 
  2537  0EB1                     	;# 
  2538  0EB2                     	;# 
  2539  0EB3                     	;# 
  2540  0EB8                     	;# 
  2541  0EB9                     	;# 
  2542  0EBA                     	;# 
  2543  0EBB                     	;# 
  2544  0EBC                     	;# 
  2545  0EBD                     	;# 
  2546  0EBE                     	;# 
  2547  0EC3                     	;# 
  2548  0EC5                     	;# 
  2549  0EC6                     	;# 
  2550  0EC7                     	;# 
  2551  0EC8                     	;# 
  2552  0EC9                     	;# 
  2553  0ECA                     	;# 
  2554  0ECB                     	;# 
  2555  0ECC                     	;# 
  2556  0F10                     	;# 
  2557  0F11                     	;# 
  2558  0F12                     	;# 
  2559  0F13                     	;# 
  2560  0F14                     	;# 
  2561  0F15                     	;# 
  2562  0F16                     	;# 
  2563  0F17                     	;# 
  2564  0F18                     	;# 
  2565  0F19                     	;# 
  2566  0F1A                     	;# 
  2567  0F1B                     	;# 
  2568  0F1C                     	;# 
  2569  0F1D                     	;# 
  2570  0F1E                     	;# 
  2571  0F1F                     	;# 
  2572  0F20                     	;# 
  2573  0F21                     	;# 
  2574  0F22                     	;# 
  2575  0F23                     	;# 
  2576  0F24                     	;# 
  2577  0F25                     	;# 
  2578  0F26                     	;# 
  2579  0F27                     	;# 
  2580  0F38                     	;# 
  2581  0F39                     	;# 
  2582  0F3A                     	;# 
  2583  0F3B                     	;# 
  2584  0F3C                     	;# 
  2585  0F3D                     	;# 
  2586  0F3E                     	;# 
  2587  0F3F                     	;# 
  2588  0F40                     	;# 
  2589  0F41                     	;# 
  2590  0F43                     	;# 
  2591  0F44                     	;# 
  2592  0F45                     	;# 
  2593  0F46                     	;# 
  2594  0F47                     	;# 
  2595  0F48                     	;# 
  2596  0F49                     	;# 
  2597  0F4A                     	;# 
  2598  0F4B                     	;# 
  2599  0F4C                     	;# 
  2600  0F4E                     	;# 
  2601  0F4F                     	;# 
  2602  0F50                     	;# 
  2603  0F51                     	;# 
  2604  0F52                     	;# 
  2605  0F53                     	;# 
  2606  0F54                     	;# 
  2607  0F55                     	;# 
  2608  0F56                     	;# 
  2609  0F57                     	;# 
  2610  0F65                     	;# 
  2611  0F68                     	;# 
  2612  0F69                     	;# 
  2613  0F6A                     	;# 
  2614  0F6B                     	;# 
  2615  0FE4                     	;# 
  2616  0FE5                     	;# 
  2617  0FE6                     	;# 
  2618  0FE7                     	;# 
  2619  0FE8                     	;# 
  2620  0FE9                     	;# 
  2621  0FEA                     	;# 
  2622  0FEB                     	;# 
  2623  0FED                     	;# 
  2624  0FEE                     	;# 
  2625  0FEF                     	;# 
  2626  0000                     	;# 
  2627  0001                     	;# 
  2628  0002                     	;# 
  2629  0003                     	;# 
  2630  0004                     	;# 
  2631  0005                     	;# 
  2632  0006                     	;# 
  2633  0007                     	;# 
  2634  0008                     	;# 
  2635  0009                     	;# 
  2636  000A                     	;# 
  2637  000B                     	;# 
  2638  000C                     	;# 
  2639  000D                     	;# 
  2640  000E                     	;# 
  2641  0010                     	;# 
  2642  0011                     	;# 
  2643  0012                     	;# 
  2644  0013                     	;# 
  2645  0016                     	;# 
  2646  0017                     	;# 
  2647  0018                     	;# 
  2648  001C                     	;# 
  2649  001C                     	;# 
  2650  001D                     	;# 
  2651  001D                     	;# 
  2652  001E                     	;# 
  2653  001F                     	;# 
  2654  008C                     	;# 
  2655  008C                     	;# 
  2656  008D                     	;# 
  2657  008E                     	;# 
  2658  008E                     	;# 
  2659  008F                     	;# 
  2660  0090                     	;# 
  2661  0090                     	;# 
  2662  0091                     	;# 
  2663  0093                     	;# 
  2664  0094                     	;# 
  2665  0095                     	;# 
  2666  0096                     	;# 
  2667  0097                     	;# 
  2668  0098                     	;# 
  2669  0099                     	;# 
  2670  009A                     	;# 
  2671  009B                     	;# 
  2672  009C                     	;# 
  2673  009D                     	;# 
  2674  009E                     	;# 
  2675  010C                     	;# 
  2676  010D                     	;# 
  2677  010E                     	;# 
  2678  010E                     	;# 
  2679  010F                     	;# 
  2680  0110                     	;# 
  2681  0110                     	;# 
  2682  0111                     	;# 
  2683  0112                     	;# 
  2684  0112                     	;# 
  2685  0113                     	;# 
  2686  0114                     	;# 
  2687  0114                     	;# 
  2688  0115                     	;# 
  2689  0116                     	;# 
  2690  0116                     	;# 
  2691  0117                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  0119                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011A                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011C                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011D                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011E                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  018C                     	;# 
  2718  018D                     	;# 
  2719  018E                     	;# 
  2720  018F                     	;# 
  2721  0190                     	;# 
  2722  0191                     	;# 
  2723  0192                     	;# 
  2724  0196                     	;# 
  2725  0197                     	;# 
  2726  0198                     	;# 
  2727  0199                     	;# 
  2728  019A                     	;# 
  2729  019B                     	;# 
  2730  019C                     	;# 
  2731  020C                     	;# 
  2732  020D                     	;# 
  2733  020E                     	;# 
  2734  020F                     	;# 
  2735  020F                     	;# 
  2736  0210                     	;# 
  2737  0210                     	;# 
  2738  0211                     	;# 
  2739  0211                     	;# 
  2740  0212                     	;# 
  2741  0213                     	;# 
  2742  0214                     	;# 
  2743  0215                     	;# 
  2744  0215                     	;# 
  2745  0216                     	;# 
  2746  0216                     	;# 
  2747  0217                     	;# 
  2748  0217                     	;# 
  2749  0218                     	;# 
  2750  0219                     	;# 
  2751  021A                     	;# 
  2752  021B                     	;# 
  2753  021B                     	;# 
  2754  021C                     	;# 
  2755  021C                     	;# 
  2756  021D                     	;# 
  2757  021D                     	;# 
  2758  021E                     	;# 
  2759  021F                     	;# 
  2760  028C                     	;# 
  2761  028C                     	;# 
  2762  028D                     	;# 
  2763  028D                     	;# 
  2764  028E                     	;# 
  2765  028F                     	;# 
  2766  0290                     	;# 
  2767  0290                     	;# 
  2768  0291                     	;# 
  2769  0292                     	;# 
  2770  0292                     	;# 
  2771  0293                     	;# 
  2772  0293                     	;# 
  2773  0294                     	;# 
  2774  0295                     	;# 
  2775  0296                     	;# 
  2776  0296                     	;# 
  2777  0297                     	;# 
  2778  0298                     	;# 
  2779  0298                     	;# 
  2780  0299                     	;# 
  2781  0299                     	;# 
  2782  029A                     	;# 
  2783  029B                     	;# 
  2784  029C                     	;# 
  2785  029C                     	;# 
  2786  029D                     	;# 
  2787  030C                     	;# 
  2788  030C                     	;# 
  2789  030D                     	;# 
  2790  030E                     	;# 
  2791  030F                     	;# 
  2792  0310                     	;# 
  2793  0310                     	;# 
  2794  0311                     	;# 
  2795  0312                     	;# 
  2796  0313                     	;# 
  2797  0314                     	;# 
  2798  0314                     	;# 
  2799  0315                     	;# 
  2800  0316                     	;# 
  2801  0317                     	;# 
  2802  0318                     	;# 
  2803  0318                     	;# 
  2804  0319                     	;# 
  2805  031A                     	;# 
  2806  031B                     	;# 
  2807  031C                     	;# 
  2808  031C                     	;# 
  2809  031D                     	;# 
  2810  031E                     	;# 
  2811  031F                     	;# 
  2812  038C                     	;# 
  2813  038D                     	;# 
  2814  038E                     	;# 
  2815  0390                     	;# 
  2816  0391                     	;# 
  2817  0392                     	;# 
  2818  040C                     	;# 
  2819  040D                     	;# 
  2820  040E                     	;# 
  2821  040F                     	;# 
  2822  0410                     	;# 
  2823  0411                     	;# 
  2824  0416                     	;# 
  2825  0416                     	;# 
  2826  0417                     	;# 
  2827  0418                     	;# 
  2828  0418                     	;# 
  2829  0419                     	;# 
  2830  041A                     	;# 
  2831  041A                     	;# 
  2832  041B                     	;# 
  2833  041C                     	;# 
  2834  041C                     	;# 
  2835  041D                     	;# 
  2836  041E                     	;# 
  2837  041F                     	;# 
  2838  048C                     	;# 
  2839  048C                     	;# 
  2840  048D                     	;# 
  2841  048E                     	;# 
  2842  048F                     	;# 
  2843  048F                     	;# 
  2844  0490                     	;# 
  2845  0491                     	;# 
  2846  0492                     	;# 
  2847  0492                     	;# 
  2848  0493                     	;# 
  2849  0494                     	;# 
  2850  0495                     	;# 
  2851  0495                     	;# 
  2852  0496                     	;# 
  2853  0497                     	;# 
  2854  0498                     	;# 
  2855  0499                     	;# 
  2856  049A                     	;# 
  2857  049B                     	;# 
  2858  049C                     	;# 
  2859  049D                     	;# 
  2860  050C                     	;# 
  2861  050C                     	;# 
  2862  050D                     	;# 
  2863  050E                     	;# 
  2864  050F                     	;# 
  2865  050F                     	;# 
  2866  0510                     	;# 
  2867  0511                     	;# 
  2868  0512                     	;# 
  2869  0512                     	;# 
  2870  0513                     	;# 
  2871  0514                     	;# 
  2872  0515                     	;# 
  2873  0515                     	;# 
  2874  0516                     	;# 
  2875  0517                     	;# 
  2876  0518                     	;# 
  2877  0519                     	;# 
  2878  051A                     	;# 
  2879  051B                     	;# 
  2880  051C                     	;# 
  2881  051D                     	;# 
  2882  058C                     	;# 
  2883  058C                     	;# 
  2884  058D                     	;# 
  2885  058E                     	;# 
  2886  058F                     	;# 
  2887  058F                     	;# 
  2888  0590                     	;# 
  2889  0591                     	;# 
  2890  0592                     	;# 
  2891  0593                     	;# 
  2892  060C                     	;# 
  2893  060D                     	;# 
  2894  060E                     	;# 
  2895  060F                     	;# 
  2896  0610                     	;# 
  2897  0611                     	;# 
  2898  0612                     	;# 
  2899  0613                     	;# 
  2900  0614                     	;# 
  2901  0616                     	;# 
  2902  0617                     	;# 
  2903  0618                     	;# 
  2904  0619                     	;# 
  2905  061A                     	;# 
  2906  061B                     	;# 
  2907  061C                     	;# 
  2908  061D                     	;# 
  2909  061E                     	;# 
  2910  068C                     	;# 
  2911  068D                     	;# 
  2912  068E                     	;# 
  2913  068F                     	;# 
  2914  0690                     	;# 
  2915  0691                     	;# 
  2916  0692                     	;# 
  2917  0693                     	;# 
  2918  0694                     	;# 
  2919  070C                     	;# 
  2920  070D                     	;# 
  2921  070E                     	;# 
  2922  070F                     	;# 
  2923  0710                     	;# 
  2924  0711                     	;# 
  2925  0712                     	;# 
  2926  0713                     	;# 
  2927  0714                     	;# 
  2928  0716                     	;# 
  2929  0717                     	;# 
  2930  0718                     	;# 
  2931  0719                     	;# 
  2932  071A                     	;# 
  2933  071B                     	;# 
  2934  071C                     	;# 
  2935  071D                     	;# 
  2936  071E                     	;# 
  2937  0796                     	;# 
  2938  0797                     	;# 
  2939  0798                     	;# 
  2940  0799                     	;# 
  2941  079A                     	;# 
  2942  079B                     	;# 
  2943  080C                     	;# 
  2944  080D                     	;# 
  2945  080E                     	;# 
  2946  080F                     	;# 
  2947  0810                     	;# 
  2948  0811                     	;# 
  2949  0812                     	;# 
  2950  0813                     	;# 
  2951  0814                     	;# 
  2952  081A                     	;# 
  2953  081B                     	;# 
  2954  081C                     	;# 
  2955  081D                     	;# 
  2956  081E                     	;# 
  2957  081F                     	;# 
  2958  088C                     	;# 
  2959  088D                     	;# 
  2960  088E                     	;# 
  2961  088F                     	;# 
  2962  0890                     	;# 
  2963  0891                     	;# 
  2964  0892                     	;# 
  2965  0893                     	;# 
  2966  0895                     	;# 
  2967  0896                     	;# 
  2968  0897                     	;# 
  2969  0898                     	;# 
  2970  0899                     	;# 
  2971  089A                     	;# 
  2972  089B                     	;# 
  2973  090C                     	;# 
  2974  090E                     	;# 
  2975  090F                     	;# 
  2976  091F                     	;# 
  2977  091F                     	;# 
  2978  098F                     	;# 
  2979  098F                     	;# 
  2980  0990                     	;# 
  2981  0991                     	;# 
  2982  0992                     	;# 
  2983  0993                     	;# 
  2984  0994                     	;# 
  2985  0995                     	;# 
  2986  0996                     	;# 
  2987  0997                     	;# 
  2988  0E0F                     	;# 
  2989  0E10                     	;# 
  2990  0E11                     	;# 
  2991  0E12                     	;# 
  2992  0E13                     	;# 
  2993  0E14                     	;# 
  2994  0E15                     	;# 
  2995  0E16                     	;# 
  2996  0E17                     	;# 
  2997  0E18                     	;# 
  2998  0E19                     	;# 
  2999  0E1A                     	;# 
  3000  0E1B                     	;# 
  3001  0E1C                     	;# 
  3002  0E1D                     	;# 
  3003  0E1E                     	;# 
  3004  0E1F                     	;# 
  3005  0E20                     	;# 
  3006  0E21                     	;# 
  3007  0E22                     	;# 
  3008  0E23                     	;# 
  3009  0E24                     	;# 
  3010  0E25                     	;# 
  3011  0E26                     	;# 
  3012  0E27                     	;# 
  3013  0E28                     	;# 
  3014  0E29                     	;# 
  3015  0E2A                     	;# 
  3016  0E2B                     	;# 
  3017  0E2C                     	;# 
  3018  0E2D                     	;# 
  3019  0E2E                     	;# 
  3020  0E2F                     	;# 
  3021  0E30                     	;# 
  3022  0E31                     	;# 
  3023  0E32                     	;# 
  3024  0E33                     	;# 
  3025  0E34                     	;# 
  3026  0E35                     	;# 
  3027  0E36                     	;# 
  3028  0E37                     	;# 
  3029  0E8F                     	;# 
  3030  0E90                     	;# 
  3031  0E91                     	;# 
  3032  0E92                     	;# 
  3033  0E93                     	;# 
  3034  0E94                     	;# 
  3035  0E95                     	;# 
  3036  0E96                     	;# 
  3037  0E97                     	;# 
  3038  0E9C                     	;# 
  3039  0E9D                     	;# 
  3040  0E9E                     	;# 
  3041  0EA1                     	;# 
  3042  0EA2                     	;# 
  3043  0EA3                     	;# 
  3044  0EA4                     	;# 
  3045  0EA5                     	;# 
  3046  0EA9                     	;# 
  3047  0EAA                     	;# 
  3048  0EAB                     	;# 
  3049  0EAC                     	;# 
  3050  0EB1                     	;# 
  3051  0EB2                     	;# 
  3052  0EB3                     	;# 
  3053  0EB8                     	;# 
  3054  0EB9                     	;# 
  3055  0EBA                     	;# 
  3056  0EBB                     	;# 
  3057  0EBC                     	;# 
  3058  0EBD                     	;# 
  3059  0EBE                     	;# 
  3060  0EC3                     	;# 
  3061  0EC5                     	;# 
  3062  0EC6                     	;# 
  3063  0EC7                     	;# 
  3064  0EC8                     	;# 
  3065  0EC9                     	;# 
  3066  0ECA                     	;# 
  3067  0ECB                     	;# 
  3068  0ECC                     	;# 
  3069  0F10                     	;# 
  3070  0F11                     	;# 
  3071  0F12                     	;# 
  3072  0F13                     	;# 
  3073  0F14                     	;# 
  3074  0F15                     	;# 
  3075  0F16                     	;# 
  3076  0F17                     	;# 
  3077  0F18                     	;# 
  3078  0F19                     	;# 
  3079  0F1A                     	;# 
  3080  0F1B                     	;# 
  3081  0F1C                     	;# 
  3082  0F1D                     	;# 
  3083  0F1E                     	;# 
  3084  0F1F                     	;# 
  3085  0F20                     	;# 
  3086  0F21                     	;# 
  3087  0F22                     	;# 
  3088  0F23                     	;# 
  3089  0F24                     	;# 
  3090  0F25                     	;# 
  3091  0F26                     	;# 
  3092  0F27                     	;# 
  3093  0F38                     	;# 
  3094  0F39                     	;# 
  3095  0F3A                     	;# 
  3096  0F3B                     	;# 
  3097  0F3C                     	;# 
  3098  0F3D                     	;# 
  3099  0F3E                     	;# 
  3100  0F3F                     	;# 
  3101  0F40                     	;# 
  3102  0F41                     	;# 
  3103  0F43                     	;# 
  3104  0F44                     	;# 
  3105  0F45                     	;# 
  3106  0F46                     	;# 
  3107  0F47                     	;# 
  3108  0F48                     	;# 
  3109  0F49                     	;# 
  3110  0F4A                     	;# 
  3111  0F4B                     	;# 
  3112  0F4C                     	;# 
  3113  0F4E                     	;# 
  3114  0F4F                     	;# 
  3115  0F50                     	;# 
  3116  0F51                     	;# 
  3117  0F52                     	;# 
  3118  0F53                     	;# 
  3119  0F54                     	;# 
  3120  0F55                     	;# 
  3121  0F56                     	;# 
  3122  0F57                     	;# 
  3123  0F65                     	;# 
  3124  0F68                     	;# 
  3125  0F69                     	;# 
  3126  0F6A                     	;# 
  3127  0F6B                     	;# 
  3128  0FE4                     	;# 
  3129  0FE5                     	;# 
  3130  0FE6                     	;# 
  3131  0FE7                     	;# 
  3132  0FE8                     	;# 
  3133  0FE9                     	;# 
  3134  0FEA                     	;# 
  3135  0FEB                     	;# 
  3136  0FED                     	;# 
  3137  0FEE                     	;# 
  3138  0FEF                     	;# 
  3139  0000                     	;# 
  3140  0001                     	;# 
  3141  0002                     	;# 
  3142  0003                     	;# 
  3143  0004                     	;# 
  3144  0005                     	;# 
  3145  0006                     	;# 
  3146  0007                     	;# 
  3147  0008                     	;# 
  3148  0009                     	;# 
  3149  000A                     	;# 
  3150  000B                     	;# 
  3151  000C                     	;# 
  3152  000D                     	;# 
  3153  000E                     	;# 
  3154  0010                     	;# 
  3155  0011                     	;# 
  3156  0012                     	;# 
  3157  0013                     	;# 
  3158  0016                     	;# 
  3159  0017                     	;# 
  3160  0018                     	;# 
  3161  001C                     	;# 
  3162  001C                     	;# 
  3163  001D                     	;# 
  3164  001D                     	;# 
  3165  001E                     	;# 
  3166  001F                     	;# 
  3167  008C                     	;# 
  3168  008C                     	;# 
  3169  008D                     	;# 
  3170  008E                     	;# 
  3171  008E                     	;# 
  3172  008F                     	;# 
  3173  0090                     	;# 
  3174  0090                     	;# 
  3175  0091                     	;# 
  3176  0093                     	;# 
  3177  0094                     	;# 
  3178  0095                     	;# 
  3179  0096                     	;# 
  3180  0097                     	;# 
  3181  0098                     	;# 
  3182  0099                     	;# 
  3183  009A                     	;# 
  3184  009B                     	;# 
  3185  009C                     	;# 
  3186  009D                     	;# 
  3187  009E                     	;# 
  3188  010C                     	;# 
  3189  010D                     	;# 
  3190  010E                     	;# 
  3191  010E                     	;# 
  3192  010F                     	;# 
  3193  0110                     	;# 
  3194  0110                     	;# 
  3195  0111                     	;# 
  3196  0112                     	;# 
  3197  0112                     	;# 
  3198  0113                     	;# 
  3199  0114                     	;# 
  3200  0114                     	;# 
  3201  0115                     	;# 
  3202  0116                     	;# 
  3203  0116                     	;# 
  3204  0117                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  0119                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011A                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011C                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011D                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011E                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  018C                     	;# 
  3231  018D                     	;# 
  3232  018E                     	;# 
  3233  018F                     	;# 
  3234  0190                     	;# 
  3235  0191                     	;# 
  3236  0192                     	;# 
  3237  0196                     	;# 
  3238  0197                     	;# 
  3239  0198                     	;# 
  3240  0199                     	;# 
  3241  019A                     	;# 
  3242  019B                     	;# 
  3243  019C                     	;# 
  3244  020C                     	;# 
  3245  020D                     	;# 
  3246  020E                     	;# 
  3247  020F                     	;# 
  3248  020F                     	;# 
  3249  0210                     	;# 
  3250  0210                     	;# 
  3251  0211                     	;# 
  3252  0211                     	;# 
  3253  0212                     	;# 
  3254  0213                     	;# 
  3255  0214                     	;# 
  3256  0215                     	;# 
  3257  0215                     	;# 
  3258  0216                     	;# 
  3259  0216                     	;# 
  3260  0217                     	;# 
  3261  0217                     	;# 
  3262  0218                     	;# 
  3263  0219                     	;# 
  3264  021A                     	;# 
  3265  021B                     	;# 
  3266  021B                     	;# 
  3267  021C                     	;# 
  3268  021C                     	;# 
  3269  021D                     	;# 
  3270  021D                     	;# 
  3271  021E                     	;# 
  3272  021F                     	;# 
  3273  028C                     	;# 
  3274  028C                     	;# 
  3275  028D                     	;# 
  3276  028D                     	;# 
  3277  028E                     	;# 
  3278  028F                     	;# 
  3279  0290                     	;# 
  3280  0290                     	;# 
  3281  0291                     	;# 
  3282  0292                     	;# 
  3283  0292                     	;# 
  3284  0293                     	;# 
  3285  0293                     	;# 
  3286  0294                     	;# 
  3287  0295                     	;# 
  3288  0296                     	;# 
  3289  0296                     	;# 
  3290  0297                     	;# 
  3291  0298                     	;# 
  3292  0298                     	;# 
  3293  0299                     	;# 
  3294  0299                     	;# 
  3295  029A                     	;# 
  3296  029B                     	;# 
  3297  029C                     	;# 
  3298  029C                     	;# 
  3299  029D                     	;# 
  3300  030C                     	;# 
  3301  030C                     	;# 
  3302  030D                     	;# 
  3303  030E                     	;# 
  3304  030F                     	;# 
  3305  0310                     	;# 
  3306  0310                     	;# 
  3307  0311                     	;# 
  3308  0312                     	;# 
  3309  0313                     	;# 
  3310  0314                     	;# 
  3311  0314                     	;# 
  3312  0315                     	;# 
  3313  0316                     	;# 
  3314  0317                     	;# 
  3315  0318                     	;# 
  3316  0318                     	;# 
  3317  0319                     	;# 
  3318  031A                     	;# 
  3319  031B                     	;# 
  3320  031C                     	;# 
  3321  031C                     	;# 
  3322  031D                     	;# 
  3323  031E                     	;# 
  3324  031F                     	;# 
  3325  038C                     	;# 
  3326  038D                     	;# 
  3327  038E                     	;# 
  3328  0390                     	;# 
  3329  0391                     	;# 
  3330  0392                     	;# 
  3331  040C                     	;# 
  3332  040D                     	;# 
  3333  040E                     	;# 
  3334  040F                     	;# 
  3335  0410                     	;# 
  3336  0411                     	;# 
  3337  0416                     	;# 
  3338  0416                     	;# 
  3339  0417                     	;# 
  3340  0418                     	;# 
  3341  0418                     	;# 
  3342  0419                     	;# 
  3343  041A                     	;# 
  3344  041A                     	;# 
  3345  041B                     	;# 
  3346  041C                     	;# 
  3347  041C                     	;# 
  3348  041D                     	;# 
  3349  041E                     	;# 
  3350  041F                     	;# 
  3351  048C                     	;# 
  3352  048C                     	;# 
  3353  048D                     	;# 
  3354  048E                     	;# 
  3355  048F                     	;# 
  3356  048F                     	;# 
  3357  0490                     	;# 
  3358  0491                     	;# 
  3359  0492                     	;# 
  3360  0492                     	;# 
  3361  0493                     	;# 
  3362  0494                     	;# 
  3363  0495                     	;# 
  3364  0495                     	;# 
  3365  0496                     	;# 
  3366  0497                     	;# 
  3367  0498                     	;# 
  3368  0499                     	;# 
  3369  049A                     	;# 
  3370  049B                     	;# 
  3371  049C                     	;# 
  3372  049D                     	;# 
  3373  050C                     	;# 
  3374  050C                     	;# 
  3375  050D                     	;# 
  3376  050E                     	;# 
  3377  050F                     	;# 
  3378  050F                     	;# 
  3379  0510                     	;# 
  3380  0511                     	;# 
  3381  0512                     	;# 
  3382  0512                     	;# 
  3383  0513                     	;# 
  3384  0514                     	;# 
  3385  0515                     	;# 
  3386  0515                     	;# 
  3387  0516                     	;# 
  3388  0517                     	;# 
  3389  0518                     	;# 
  3390  0519                     	;# 
  3391  051A                     	;# 
  3392  051B                     	;# 
  3393  051C                     	;# 
  3394  051D                     	;# 
  3395  058C                     	;# 
  3396  058C                     	;# 
  3397  058D                     	;# 
  3398  058E                     	;# 
  3399  058F                     	;# 
  3400  058F                     	;# 
  3401  0590                     	;# 
  3402  0591                     	;# 
  3403  0592                     	;# 
  3404  0593                     	;# 
  3405  060C                     	;# 
  3406  060D                     	;# 
  3407  060E                     	;# 
  3408  060F                     	;# 
  3409  0610                     	;# 
  3410  0611                     	;# 
  3411  0612                     	;# 
  3412  0613                     	;# 
  3413  0614                     	;# 
  3414  0616                     	;# 
  3415  0617                     	;# 
  3416  0618                     	;# 
  3417  0619                     	;# 
  3418  061A                     	;# 
  3419  061B                     	;# 
  3420  061C                     	;# 
  3421  061D                     	;# 
  3422  061E                     	;# 
  3423  068C                     	;# 
  3424  068D                     	;# 
  3425  068E                     	;# 
  3426  068F                     	;# 
  3427  0690                     	;# 
  3428  0691                     	;# 
  3429  0692                     	;# 
  3430  0693                     	;# 
  3431  0694                     	;# 
  3432  070C                     	;# 
  3433  070D                     	;# 
  3434  070E                     	;# 
  3435  070F                     	;# 
  3436  0710                     	;# 
  3437  0711                     	;# 
  3438  0712                     	;# 
  3439  0713                     	;# 
  3440  0714                     	;# 
  3441  0716                     	;# 
  3442  0717                     	;# 
  3443  0718                     	;# 
  3444  0719                     	;# 
  3445  071A                     	;# 
  3446  071B                     	;# 
  3447  071C                     	;# 
  3448  071D                     	;# 
  3449  071E                     	;# 
  3450  0796                     	;# 
  3451  0797                     	;# 
  3452  0798                     	;# 
  3453  0799                     	;# 
  3454  079A                     	;# 
  3455  079B                     	;# 
  3456  080C                     	;# 
  3457  080D                     	;# 
  3458  080E                     	;# 
  3459  080F                     	;# 
  3460  0810                     	;# 
  3461  0811                     	;# 
  3462  0812                     	;# 
  3463  0813                     	;# 
  3464  0814                     	;# 
  3465  081A                     	;# 
  3466  081B                     	;# 
  3467  081C                     	;# 
  3468  081D                     	;# 
  3469  081E                     	;# 
  3470  081F                     	;# 
  3471  088C                     	;# 
  3472  088D                     	;# 
  3473  088E                     	;# 
  3474  088F                     	;# 
  3475  0890                     	;# 
  3476  0891                     	;# 
  3477  0892                     	;# 
  3478  0893                     	;# 
  3479  0895                     	;# 
  3480  0896                     	;# 
  3481  0897                     	;# 
  3482  0898                     	;# 
  3483  0899                     	;# 
  3484  089A                     	;# 
  3485  089B                     	;# 
  3486  090C                     	;# 
  3487  090E                     	;# 
  3488  090F                     	;# 
  3489  091F                     	;# 
  3490  091F                     	;# 
  3491  098F                     	;# 
  3492  098F                     	;# 
  3493  0990                     	;# 
  3494  0991                     	;# 
  3495  0992                     	;# 
  3496  0993                     	;# 
  3497  0994                     	;# 
  3498  0995                     	;# 
  3499  0996                     	;# 
  3500  0997                     	;# 
  3501  0E0F                     	;# 
  3502  0E10                     	;# 
  3503  0E11                     	;# 
  3504  0E12                     	;# 
  3505  0E13                     	;# 
  3506  0E14                     	;# 
  3507  0E15                     	;# 
  3508  0E16                     	;# 
  3509  0E17                     	;# 
  3510  0E18                     	;# 
  3511  0E19                     	;# 
  3512  0E1A                     	;# 
  3513  0E1B                     	;# 
  3514  0E1C                     	;# 
  3515  0E1D                     	;# 
  3516  0E1E                     	;# 
  3517  0E1F                     	;# 
  3518  0E20                     	;# 
  3519  0E21                     	;# 
  3520  0E22                     	;# 
  3521  0E23                     	;# 
  3522  0E24                     	;# 
  3523  0E25                     	;# 
  3524  0E26                     	;# 
  3525  0E27                     	;# 
  3526  0E28                     	;# 
  3527  0E29                     	;# 
  3528  0E2A                     	;# 
  3529  0E2B                     	;# 
  3530  0E2C                     	;# 
  3531  0E2D                     	;# 
  3532  0E2E                     	;# 
  3533  0E2F                     	;# 
  3534  0E30                     	;# 
  3535  0E31                     	;# 
  3536  0E32                     	;# 
  3537  0E33                     	;# 
  3538  0E34                     	;# 
  3539  0E35                     	;# 
  3540  0E36                     	;# 
  3541  0E37                     	;# 
  3542  0E8F                     	;# 
  3543  0E90                     	;# 
  3544  0E91                     	;# 
  3545  0E92                     	;# 
  3546  0E93                     	;# 
  3547  0E94                     	;# 
  3548  0E95                     	;# 
  3549  0E96                     	;# 
  3550  0E97                     	;# 
  3551  0E9C                     	;# 
  3552  0E9D                     	;# 
  3553  0E9E                     	;# 
  3554  0EA1                     	;# 
  3555  0EA2                     	;# 
  3556  0EA3                     	;# 
  3557  0EA4                     	;# 
  3558  0EA5                     	;# 
  3559  0EA9                     	;# 
  3560  0EAA                     	;# 
  3561  0EAB                     	;# 
  3562  0EAC                     	;# 
  3563  0EB1                     	;# 
  3564  0EB2                     	;# 
  3565  0EB3                     	;# 
  3566  0EB8                     	;# 
  3567  0EB9                     	;# 
  3568  0EBA                     	;# 
  3569  0EBB                     	;# 
  3570  0EBC                     	;# 
  3571  0EBD                     	;# 
  3572  0EBE                     	;# 
  3573  0EC3                     	;# 
  3574  0EC5                     	;# 
  3575  0EC6                     	;# 
  3576  0EC7                     	;# 
  3577  0EC8                     	;# 
  3578  0EC9                     	;# 
  3579  0ECA                     	;# 
  3580  0ECB                     	;# 
  3581  0ECC                     	;# 
  3582  0F10                     	;# 
  3583  0F11                     	;# 
  3584  0F12                     	;# 
  3585  0F13                     	;# 
  3586  0F14                     	;# 
  3587  0F15                     	;# 
  3588  0F16                     	;# 
  3589  0F17                     	;# 
  3590  0F18                     	;# 
  3591  0F19                     	;# 
  3592  0F1A                     	;# 
  3593  0F1B                     	;# 
  3594  0F1C                     	;# 
  3595  0F1D                     	;# 
  3596  0F1E                     	;# 
  3597  0F1F                     	;# 
  3598  0F20                     	;# 
  3599  0F21                     	;# 
  3600  0F22                     	;# 
  3601  0F23                     	;# 
  3602  0F24                     	;# 
  3603  0F25                     	;# 
  3604  0F26                     	;# 
  3605  0F27                     	;# 
  3606  0F38                     	;# 
  3607  0F39                     	;# 
  3608  0F3A                     	;# 
  3609  0F3B                     	;# 
  3610  0F3C                     	;# 
  3611  0F3D                     	;# 
  3612  0F3E                     	;# 
  3613  0F3F                     	;# 
  3614  0F40                     	;# 
  3615  0F41                     	;# 
  3616  0F43                     	;# 
  3617  0F44                     	;# 
  3618  0F45                     	;# 
  3619  0F46                     	;# 
  3620  0F47                     	;# 
  3621  0F48                     	;# 
  3622  0F49                     	;# 
  3623  0F4A                     	;# 
  3624  0F4B                     	;# 
  3625  0F4C                     	;# 
  3626  0F4E                     	;# 
  3627  0F4F                     	;# 
  3628  0F50                     	;# 
  3629  0F51                     	;# 
  3630  0F52                     	;# 
  3631  0F53                     	;# 
  3632  0F54                     	;# 
  3633  0F55                     	;# 
  3634  0F56                     	;# 
  3635  0F57                     	;# 
  3636  0F65                     	;# 
  3637  0F68                     	;# 
  3638  0F69                     	;# 
  3639  0F6A                     	;# 
  3640  0F6B                     	;# 
  3641  0FE4                     	;# 
  3642  0FE5                     	;# 
  3643  0FE6                     	;# 
  3644  0FE7                     	;# 
  3645  0FE8                     	;# 
  3646  0FE9                     	;# 
  3647  0FEA                     	;# 
  3648  0FEB                     	;# 
  3649  0FED                     	;# 
  3650  0FEE                     	;# 
  3651  0FEF                     	;# 
  3652  0000                     	;# 
  3653  0001                     	;# 
  3654  0002                     	;# 
  3655  0003                     	;# 
  3656  0004                     	;# 
  3657  0005                     	;# 
  3658  0006                     	;# 
  3659  0007                     	;# 
  3660  0008                     	;# 
  3661  0009                     	;# 
  3662  000A                     	;# 
  3663  000B                     	;# 
  3664  000C                     	;# 
  3665  000D                     	;# 
  3666  000E                     	;# 
  3667  0010                     	;# 
  3668  0011                     	;# 
  3669  0012                     	;# 
  3670  0013                     	;# 
  3671  0016                     	;# 
  3672  0017                     	;# 
  3673  0018                     	;# 
  3674  001C                     	;# 
  3675  001C                     	;# 
  3676  001D                     	;# 
  3677  001D                     	;# 
  3678  001E                     	;# 
  3679  001F                     	;# 
  3680  008C                     	;# 
  3681  008C                     	;# 
  3682  008D                     	;# 
  3683  008E                     	;# 
  3684  008E                     	;# 
  3685  008F                     	;# 
  3686  0090                     	;# 
  3687  0090                     	;# 
  3688  0091                     	;# 
  3689  0093                     	;# 
  3690  0094                     	;# 
  3691  0095                     	;# 
  3692  0096                     	;# 
  3693  0097                     	;# 
  3694  0098                     	;# 
  3695  0099                     	;# 
  3696  009A                     	;# 
  3697  009B                     	;# 
  3698  009C                     	;# 
  3699  009D                     	;# 
  3700  009E                     	;# 
  3701  010C                     	;# 
  3702  010D                     	;# 
  3703  010E                     	;# 
  3704  010E                     	;# 
  3705  010F                     	;# 
  3706  0110                     	;# 
  3707  0110                     	;# 
  3708  0111                     	;# 
  3709  0112                     	;# 
  3710  0112                     	;# 
  3711  0113                     	;# 
  3712  0114                     	;# 
  3713  0114                     	;# 
  3714  0115                     	;# 
  3715  0116                     	;# 
  3716  0116                     	;# 
  3717  0117                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  0119                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011A                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011C                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011D                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011E                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  018C                     	;# 
  3744  018D                     	;# 
  3745  018E                     	;# 
  3746  018F                     	;# 
  3747  0190                     	;# 
  3748  0191                     	;# 
  3749  0192                     	;# 
  3750  0196                     	;# 
  3751  0197                     	;# 
  3752  0198                     	;# 
  3753  0199                     	;# 
  3754  019A                     	;# 
  3755  019B                     	;# 
  3756  019C                     	;# 
  3757  020C                     	;# 
  3758  020D                     	;# 
  3759  020E                     	;# 
  3760  020F                     	;# 
  3761  020F                     	;# 
  3762  0210                     	;# 
  3763  0210                     	;# 
  3764  0211                     	;# 
  3765  0211                     	;# 
  3766  0212                     	;# 
  3767  0213                     	;# 
  3768  0214                     	;# 
  3769  0215                     	;# 
  3770  0215                     	;# 
  3771  0216                     	;# 
  3772  0216                     	;# 
  3773  0217                     	;# 
  3774  0217                     	;# 
  3775  0218                     	;# 
  3776  0219                     	;# 
  3777  021A                     	;# 
  3778  021B                     	;# 
  3779  021B                     	;# 
  3780  021C                     	;# 
  3781  021C                     	;# 
  3782  021D                     	;# 
  3783  021D                     	;# 
  3784  021E                     	;# 
  3785  021F                     	;# 
  3786  028C                     	;# 
  3787  028C                     	;# 
  3788  028D                     	;# 
  3789  028D                     	;# 
  3790  028E                     	;# 
  3791  028F                     	;# 
  3792  0290                     	;# 
  3793  0290                     	;# 
  3794  0291                     	;# 
  3795  0292                     	;# 
  3796  0292                     	;# 
  3797  0293                     	;# 
  3798  0293                     	;# 
  3799  0294                     	;# 
  3800  0295                     	;# 
  3801  0296                     	;# 
  3802  0296                     	;# 
  3803  0297                     	;# 
  3804  0298                     	;# 
  3805  0298                     	;# 
  3806  0299                     	;# 
  3807  0299                     	;# 
  3808  029A                     	;# 
  3809  029B                     	;# 
  3810  029C                     	;# 
  3811  029C                     	;# 
  3812  029D                     	;# 
  3813  030C                     	;# 
  3814  030C                     	;# 
  3815  030D                     	;# 
  3816  030E                     	;# 
  3817  030F                     	;# 
  3818  0310                     	;# 
  3819  0310                     	;# 
  3820  0311                     	;# 
  3821  0312                     	;# 
  3822  0313                     	;# 
  3823  0314                     	;# 
  3824  0314                     	;# 
  3825  0315                     	;# 
  3826  0316                     	;# 
  3827  0317                     	;# 
  3828  0318                     	;# 
  3829  0318                     	;# 
  3830  0319                     	;# 
  3831  031A                     	;# 
  3832  031B                     	;# 
  3833  031C                     	;# 
  3834  031C                     	;# 
  3835  031D                     	;# 
  3836  031E                     	;# 
  3837  031F                     	;# 
  3838  038C                     	;# 
  3839  038D                     	;# 
  3840  038E                     	;# 
  3841  0390                     	;# 
  3842  0391                     	;# 
  3843  0392                     	;# 
  3844  040C                     	;# 
  3845  040D                     	;# 
  3846  040E                     	;# 
  3847  040F                     	;# 
  3848  0410                     	;# 
  3849  0411                     	;# 
  3850  0416                     	;# 
  3851  0416                     	;# 
  3852  0417                     	;# 
  3853  0418                     	;# 
  3854  0418                     	;# 
  3855  0419                     	;# 
  3856  041A                     	;# 
  3857  041A                     	;# 
  3858  041B                     	;# 
  3859  041C                     	;# 
  3860  041C                     	;# 
  3861  041D                     	;# 
  3862  041E                     	;# 
  3863  041F                     	;# 
  3864  048C                     	;# 
  3865  048C                     	;# 
  3866  048D                     	;# 
  3867  048E                     	;# 
  3868  048F                     	;# 
  3869  048F                     	;# 
  3870  0490                     	;# 
  3871  0491                     	;# 
  3872  0492                     	;# 
  3873  0492                     	;# 
  3874  0493                     	;# 
  3875  0494                     	;# 
  3876  0495                     	;# 
  3877  0495                     	;# 
  3878  0496                     	;# 
  3879  0497                     	;# 
  3880  0498                     	;# 
  3881  0499                     	;# 
  3882  049A                     	;# 
  3883  049B                     	;# 
  3884  049C                     	;# 
  3885  049D                     	;# 
  3886  050C                     	;# 
  3887  050C                     	;# 
  3888  050D                     	;# 
  3889  050E                     	;# 
  3890  050F                     	;# 
  3891  050F                     	;# 
  3892  0510                     	;# 
  3893  0511                     	;# 
  3894  0512                     	;# 
  3895  0512                     	;# 
  3896  0513                     	;# 
  3897  0514                     	;# 
  3898  0515                     	;# 
  3899  0515                     	;# 
  3900  0516                     	;# 
  3901  0517                     	;# 
  3902  0518                     	;# 
  3903  0519                     	;# 
  3904  051A                     	;# 
  3905  051B                     	;# 
  3906  051C                     	;# 
  3907  051D                     	;# 
  3908  058C                     	;# 
  3909  058C                     	;# 
  3910  058D                     	;# 
  3911  058E                     	;# 
  3912  058F                     	;# 
  3913  058F                     	;# 
  3914  0590                     	;# 
  3915  0591                     	;# 
  3916  0592                     	;# 
  3917  0593                     	;# 
  3918  060C                     	;# 
  3919  060D                     	;# 
  3920  060E                     	;# 
  3921  060F                     	;# 
  3922  0610                     	;# 
  3923  0611                     	;# 
  3924  0612                     	;# 
  3925  0613                     	;# 
  3926  0614                     	;# 
  3927  0616                     	;# 
  3928  0617                     	;# 
  3929  0618                     	;# 
  3930  0619                     	;# 
  3931  061A                     	;# 
  3932  061B                     	;# 
  3933  061C                     	;# 
  3934  061D                     	;# 
  3935  061E                     	;# 
  3936  068C                     	;# 
  3937  068D                     	;# 
  3938  068E                     	;# 
  3939  068F                     	;# 
  3940  0690                     	;# 
  3941  0691                     	;# 
  3942  0692                     	;# 
  3943  0693                     	;# 
  3944  0694                     	;# 
  3945  070C                     	;# 
  3946  070D                     	;# 
  3947  070E                     	;# 
  3948  070F                     	;# 
  3949  0710                     	;# 
  3950  0711                     	;# 
  3951  0712                     	;# 
  3952  0713                     	;# 
  3953  0714                     	;# 
  3954  0716                     	;# 
  3955  0717                     	;# 
  3956  0718                     	;# 
  3957  0719                     	;# 
  3958  071A                     	;# 
  3959  071B                     	;# 
  3960  071C                     	;# 
  3961  071D                     	;# 
  3962  071E                     	;# 
  3963  0796                     	;# 
  3964  0797                     	;# 
  3965  0798                     	;# 
  3966  0799                     	;# 
  3967  079A                     	;# 
  3968  079B                     	;# 
  3969  080C                     	;# 
  3970  080D                     	;# 
  3971  080E                     	;# 
  3972  080F                     	;# 
  3973  0810                     	;# 
  3974  0811                     	;# 
  3975  0812                     	;# 
  3976  0813                     	;# 
  3977  0814                     	;# 
  3978  081A                     	;# 
  3979  081B                     	;# 
  3980  081C                     	;# 
  3981  081D                     	;# 
  3982  081E                     	;# 
  3983  081F                     	;# 
  3984  088C                     	;# 
  3985  088D                     	;# 
  3986  088E                     	;# 
  3987  088F                     	;# 
  3988  0890                     	;# 
  3989  0891                     	;# 
  3990  0892                     	;# 
  3991  0893                     	;# 
  3992  0895                     	;# 
  3993  0896                     	;# 
  3994  0897                     	;# 
  3995  0898                     	;# 
  3996  0899                     	;# 
  3997  089A                     	;# 
  3998  089B                     	;# 
  3999  090C                     	;# 
  4000  090E                     	;# 
  4001  090F                     	;# 
  4002  091F                     	;# 
  4003  091F                     	;# 
  4004  098F                     	;# 
  4005  098F                     	;# 
  4006  0990                     	;# 
  4007  0991                     	;# 
  4008  0992                     	;# 
  4009  0993                     	;# 
  4010  0994                     	;# 
  4011  0995                     	;# 
  4012  0996                     	;# 
  4013  0997                     	;# 
  4014  0E0F                     	;# 
  4015  0E10                     	;# 
  4016  0E11                     	;# 
  4017  0E12                     	;# 
  4018  0E13                     	;# 
  4019  0E14                     	;# 
  4020  0E15                     	;# 
  4021  0E16                     	;# 
  4022  0E17                     	;# 
  4023  0E18                     	;# 
  4024  0E19                     	;# 
  4025  0E1A                     	;# 
  4026  0E1B                     	;# 
  4027  0E1C                     	;# 
  4028  0E1D                     	;# 
  4029  0E1E                     	;# 
  4030  0E1F                     	;# 
  4031  0E20                     	;# 
  4032  0E21                     	;# 
  4033  0E22                     	;# 
  4034  0E23                     	;# 
  4035  0E24                     	;# 
  4036  0E25                     	;# 
  4037  0E26                     	;# 
  4038  0E27                     	;# 
  4039  0E28                     	;# 
  4040  0E29                     	;# 
  4041  0E2A                     	;# 
  4042  0E2B                     	;# 
  4043  0E2C                     	;# 
  4044  0E2D                     	;# 
  4045  0E2E                     	;# 
  4046  0E2F                     	;# 
  4047  0E30                     	;# 
  4048  0E31                     	;# 
  4049  0E32                     	;# 
  4050  0E33                     	;# 
  4051  0E34                     	;# 
  4052  0E35                     	;# 
  4053  0E36                     	;# 
  4054  0E37                     	;# 
  4055  0E8F                     	;# 
  4056  0E90                     	;# 
  4057  0E91                     	;# 
  4058  0E92                     	;# 
  4059  0E93                     	;# 
  4060  0E94                     	;# 
  4061  0E95                     	;# 
  4062  0E96                     	;# 
  4063  0E97                     	;# 
  4064  0E9C                     	;# 
  4065  0E9D                     	;# 
  4066  0E9E                     	;# 
  4067  0EA1                     	;# 
  4068  0EA2                     	;# 
  4069  0EA3                     	;# 
  4070  0EA4                     	;# 
  4071  0EA5                     	;# 
  4072  0EA9                     	;# 
  4073  0EAA                     	;# 
  4074  0EAB                     	;# 
  4075  0EAC                     	;# 
  4076  0EB1                     	;# 
  4077  0EB2                     	;# 
  4078  0EB3                     	;# 
  4079  0EB8                     	;# 
  4080  0EB9                     	;# 
  4081  0EBA                     	;# 
  4082  0EBB                     	;# 
  4083  0EBC                     	;# 
  4084  0EBD                     	;# 
  4085  0EBE                     	;# 
  4086  0EC3                     	;# 
  4087  0EC5                     	;# 
  4088  0EC6                     	;# 
  4089  0EC7                     	;# 
  4090  0EC8                     	;# 
  4091  0EC9                     	;# 
  4092  0ECA                     	;# 
  4093  0ECB                     	;# 
  4094  0ECC                     	;# 
  4095  0F10                     	;# 
  4096  0F11                     	;# 
  4097  0F12                     	;# 
  4098  0F13                     	;# 
  4099  0F14                     	;# 
  4100  0F15                     	;# 
  4101  0F16                     	;# 
  4102  0F17                     	;# 
  4103  0F18                     	;# 
  4104  0F19                     	;# 
  4105  0F1A                     	;# 
  4106  0F1B                     	;# 
  4107  0F1C                     	;# 
  4108  0F1D                     	;# 
  4109  0F1E                     	;# 
  4110  0F1F                     	;# 
  4111  0F20                     	;# 
  4112  0F21                     	;# 
  4113  0F22                     	;# 
  4114  0F23                     	;# 
  4115  0F24                     	;# 
  4116  0F25                     	;# 
  4117  0F26                     	;# 
  4118  0F27                     	;# 
  4119  0F38                     	;# 
  4120  0F39                     	;# 
  4121  0F3A                     	;# 
  4122  0F3B                     	;# 
  4123  0F3C                     	;# 
  4124  0F3D                     	;# 
  4125  0F3E                     	;# 
  4126  0F3F                     	;# 
  4127  0F40                     	;# 
  4128  0F41                     	;# 
  4129  0F43                     	;# 
  4130  0F44                     	;# 
  4131  0F45                     	;# 
  4132  0F46                     	;# 
  4133  0F47                     	;# 
  4134  0F48                     	;# 
  4135  0F49                     	;# 
  4136  0F4A                     	;# 
  4137  0F4B                     	;# 
  4138  0F4C                     	;# 
  4139  0F4E                     	;# 
  4140  0F4F                     	;# 
  4141  0F50                     	;# 
  4142  0F51                     	;# 
  4143  0F52                     	;# 
  4144  0F53                     	;# 
  4145  0F54                     	;# 
  4146  0F55                     	;# 
  4147  0F56                     	;# 
  4148  0F57                     	;# 
  4149  0F65                     	;# 
  4150  0F68                     	;# 
  4151  0F69                     	;# 
  4152  0F6A                     	;# 
  4153  0F6B                     	;# 
  4154  0FE4                     	;# 
  4155  0FE5                     	;# 
  4156  0FE6                     	;# 
  4157  0FE7                     	;# 
  4158  0FE8                     	;# 
  4159  0FE9                     	;# 
  4160  0FEA                     	;# 
  4161  0FEB                     	;# 
  4162  0FED                     	;# 
  4163  0FEE                     	;# 
  4164  0FEF                     	;# 
  4165  0000                     	;# 
  4166  0001                     	;# 
  4167  0002                     	;# 
  4168  0003                     	;# 
  4169  0004                     	;# 
  4170  0005                     	;# 
  4171  0006                     	;# 
  4172  0007                     	;# 
  4173  0008                     	;# 
  4174  0009                     	;# 
  4175  000A                     	;# 
  4176  000B                     	;# 
  4177  000C                     	;# 
  4178  000D                     	;# 
  4179  000E                     	;# 
  4180  0010                     	;# 
  4181  0011                     	;# 
  4182  0012                     	;# 
  4183  0013                     	;# 
  4184  0016                     	;# 
  4185  0017                     	;# 
  4186  0018                     	;# 
  4187  001C                     	;# 
  4188  001C                     	;# 
  4189  001D                     	;# 
  4190  001D                     	;# 
  4191  001E                     	;# 
  4192  001F                     	;# 
  4193  008C                     	;# 
  4194  008C                     	;# 
  4195  008D                     	;# 
  4196  008E                     	;# 
  4197  008E                     	;# 
  4198  008F                     	;# 
  4199  0090                     	;# 
  4200  0090                     	;# 
  4201  0091                     	;# 
  4202  0093                     	;# 
  4203  0094                     	;# 
  4204  0095                     	;# 
  4205  0096                     	;# 
  4206  0097                     	;# 
  4207  0098                     	;# 
  4208  0099                     	;# 
  4209  009A                     	;# 
  4210  009B                     	;# 
  4211  009C                     	;# 
  4212  009D                     	;# 
  4213  009E                     	;# 
  4214  010C                     	;# 
  4215  010D                     	;# 
  4216  010E                     	;# 
  4217  010E                     	;# 
  4218  010F                     	;# 
  4219  0110                     	;# 
  4220  0110                     	;# 
  4221  0111                     	;# 
  4222  0112                     	;# 
  4223  0112                     	;# 
  4224  0113                     	;# 
  4225  0114                     	;# 
  4226  0114                     	;# 
  4227  0115                     	;# 
  4228  0116                     	;# 
  4229  0116                     	;# 
  4230  0117                     	;# 
  4231  0119                     	;# 
  4232  0119                     	;# 
  4233  0119                     	;# 
  4234  011A                     	;# 
  4235  011A                     	;# 
  4236  011A                     	;# 
  4237  011B                     	;# 
  4238  011B                     	;# 
  4239  011B                     	;# 
  4240  011B                     	;# 
  4241  011B                     	;# 
  4242  011C                     	;# 
  4243  011C                     	;# 
  4244  011C                     	;# 
  4245  011D                     	;# 
  4246  011D                     	;# 
  4247  011D                     	;# 
  4248  011E                     	;# 
  4249  011E                     	;# 
  4250  011E                     	;# 
  4251  011F                     	;# 
  4252  011F                     	;# 
  4253  011F                     	;# 
  4254  011F                     	;# 
  4255  011F                     	;# 
  4256  018C                     	;# 
  4257  018D                     	;# 
  4258  018E                     	;# 
  4259  018F                     	;# 
  4260  0190                     	;# 
  4261  0191                     	;# 
  4262  0192                     	;# 
  4263  0196                     	;# 
  4264  0197                     	;# 
  4265  0198                     	;# 
  4266  0199                     	;# 
  4267  019A                     	;# 
  4268  019B                     	;# 
  4269  019C                     	;# 
  4270  020C                     	;# 
  4271  020D                     	;# 
  4272  020E                     	;# 
  4273  020F                     	;# 
  4274  020F                     	;# 
  4275  0210                     	;# 
  4276  0210                     	;# 
  4277  0211                     	;# 
  4278  0211                     	;# 
  4279  0212                     	;# 
  4280  0213                     	;# 
  4281  0214                     	;# 
  4282  0215                     	;# 
  4283  0215                     	;# 
  4284  0216                     	;# 
  4285  0216                     	;# 
  4286  0217                     	;# 
  4287  0217                     	;# 
  4288  0218                     	;# 
  4289  0219                     	;# 
  4290  021A                     	;# 
  4291  021B                     	;# 
  4292  021B                     	;# 
  4293  021C                     	;# 
  4294  021C                     	;# 
  4295  021D                     	;# 
  4296  021D                     	;# 
  4297  021E                     	;# 
  4298  021F                     	;# 
  4299  028C                     	;# 
  4300  028C                     	;# 
  4301  028D                     	;# 
  4302  028D                     	;# 
  4303  028E                     	;# 
  4304  028F                     	;# 
  4305  0290                     	;# 
  4306  0290                     	;# 
  4307  0291                     	;# 
  4308  0292                     	;# 
  4309  0292                     	;# 
  4310  0293                     	;# 
  4311  0293                     	;# 
  4312  0294                     	;# 
  4313  0295                     	;# 
  4314  0296                     	;# 
  4315  0296                     	;# 
  4316  0297                     	;# 
  4317  0298                     	;# 
  4318  0298                     	;# 
  4319  0299                     	;# 
  4320  0299                     	;# 
  4321  029A                     	;# 
  4322  029B                     	;# 
  4323  029C                     	;# 
  4324  029C                     	;# 
  4325  029D                     	;# 
  4326  030C                     	;# 
  4327  030C                     	;# 
  4328  030D                     	;# 
  4329  030E                     	;# 
  4330  030F                     	;# 
  4331  0310                     	;# 
  4332  0310                     	;# 
  4333  0311                     	;# 
  4334  0312                     	;# 
  4335  0313                     	;# 
  4336  0314                     	;# 
  4337  0314                     	;# 
  4338  0315                     	;# 
  4339  0316                     	;# 
  4340  0317                     	;# 
  4341  0318                     	;# 
  4342  0318                     	;# 
  4343  0319                     	;# 
  4344  031A                     	;# 
  4345  031B                     	;# 
  4346  031C                     	;# 
  4347  031C                     	;# 
  4348  031D                     	;# 
  4349  031E                     	;# 
  4350  031F                     	;# 
  4351  038C                     	;# 
  4352  038D                     	;# 
  4353  038E                     	;# 
  4354  0390                     	;# 
  4355  0391                     	;# 
  4356  0392                     	;# 
  4357  040C                     	;# 
  4358  040D                     	;# 
  4359  040E                     	;# 
  4360  040F                     	;# 
  4361  0410                     	;# 
  4362  0411                     	;# 
  4363  0416                     	;# 
  4364  0416                     	;# 
  4365  0417                     	;# 
  4366  0418                     	;# 
  4367  0418                     	;# 
  4368  0419                     	;# 
  4369  041A                     	;# 
  4370  041A                     	;# 
  4371  041B                     	;# 
  4372  041C                     	;# 
  4373  041C                     	;# 
  4374  041D                     	;# 
  4375  041E                     	;# 
  4376  041F                     	;# 
  4377  048C                     	;# 
  4378  048C                     	;# 
  4379  048D                     	;# 
  4380  048E                     	;# 
  4381  048F                     	;# 
  4382  048F                     	;# 
  4383  0490                     	;# 
  4384  0491                     	;# 
  4385  0492                     	;# 
  4386  0492                     	;# 
  4387  0493                     	;# 
  4388  0494                     	;# 
  4389  0495                     	;# 
  4390  0495                     	;# 
  4391  0496                     	;# 
  4392  0497                     	;# 
  4393  0498                     	;# 
  4394  0499                     	;# 
  4395  049A                     	;# 
  4396  049B                     	;# 
  4397  049C                     	;# 
  4398  049D                     	;# 
  4399  050C                     	;# 
  4400  050C                     	;# 
  4401  050D                     	;# 
  4402  050E                     	;# 
  4403  050F                     	;# 
  4404  050F                     	;# 
  4405  0510                     	;# 
  4406  0511                     	;# 
  4407  0512                     	;# 
  4408  0512                     	;# 
  4409  0513                     	;# 
  4410  0514                     	;# 
  4411  0515                     	;# 
  4412  0515                     	;# 
  4413  0516                     	;# 
  4414  0517                     	;# 
  4415  0518                     	;# 
  4416  0519                     	;# 
  4417  051A                     	;# 
  4418  051B                     	;# 
  4419  051C                     	;# 
  4420  051D                     	;# 
  4421  058C                     	;# 
  4422  058C                     	;# 
  4423  058D                     	;# 
  4424  058E                     	;# 
  4425  058F                     	;# 
  4426  058F                     	;# 
  4427  0590                     	;# 
  4428  0591                     	;# 
  4429  0592                     	;# 
  4430  0593                     	;# 
  4431  060C                     	;# 
  4432  060D                     	;# 
  4433  060E                     	;# 
  4434  060F                     	;# 
  4435  0610                     	;# 
  4436  0611                     	;# 
  4437  0612                     	;# 
  4438  0613                     	;# 
  4439  0614                     	;# 
  4440  0616                     	;# 
  4441  0617                     	;# 
  4442  0618                     	;# 
  4443  0619                     	;# 
  4444  061A                     	;# 
  4445  061B                     	;# 
  4446  061C                     	;# 
  4447  061D                     	;# 
  4448  061E                     	;# 
  4449  068C                     	;# 
  4450  068D                     	;# 
  4451  068E                     	;# 
  4452  068F                     	;# 
  4453  0690                     	;# 
  4454  0691                     	;# 
  4455  0692                     	;# 
  4456  0693                     	;# 
  4457  0694                     	;# 
  4458  070C                     	;# 
  4459  070D                     	;# 
  4460  070E                     	;# 
  4461  070F                     	;# 
  4462  0710                     	;# 
  4463  0711                     	;# 
  4464  0712                     	;# 
  4465  0713                     	;# 
  4466  0714                     	;# 
  4467  0716                     	;# 
  4468  0717                     	;# 
  4469  0718                     	;# 
  4470  0719                     	;# 
  4471  071A                     	;# 
  4472  071B                     	;# 
  4473  071C                     	;# 
  4474  071D                     	;# 
  4475  071E                     	;# 
  4476  0796                     	;# 
  4477  0797                     	;# 
  4478  0798                     	;# 
  4479  0799                     	;# 
  4480  079A                     	;# 
  4481  079B                     	;# 
  4482  080C                     	;# 
  4483  080D                     	;# 
  4484  080E                     	;# 
  4485  080F                     	;# 
  4486  0810                     	;# 
  4487  0811                     	;# 
  4488  0812                     	;# 
  4489  0813                     	;# 
  4490  0814                     	;# 
  4491  081A                     	;# 
  4492  081B                     	;# 
  4493  081C                     	;# 
  4494  081D                     	;# 
  4495  081E                     	;# 
  4496  081F                     	;# 
  4497  088C                     	;# 
  4498  088D                     	;# 
  4499  088E                     	;# 
  4500  088F                     	;# 
  4501  0890                     	;# 
  4502  0891                     	;# 
  4503  0892                     	;# 
  4504  0893                     	;# 
  4505  0895                     	;# 
  4506  0896                     	;# 
  4507  0897                     	;# 
  4508  0898                     	;# 
  4509  0899                     	;# 
  4510  089A                     	;# 
  4511  089B                     	;# 
  4512  090C                     	;# 
  4513  090E                     	;# 
  4514  090F                     	;# 
  4515  091F                     	;# 
  4516  091F                     	;# 
  4517  098F                     	;# 
  4518  098F                     	;# 
  4519  0990                     	;# 
  4520  0991                     	;# 
  4521  0992                     	;# 
  4522  0993                     	;# 
  4523  0994                     	;# 
  4524  0995                     	;# 
  4525  0996                     	;# 
  4526  0997                     	;# 
  4527  0E0F                     	;# 
  4528  0E10                     	;# 
  4529  0E11                     	;# 
  4530  0E12                     	;# 
  4531  0E13                     	;# 
  4532  0E14                     	;# 
  4533  0E15                     	;# 
  4534  0E16                     	;# 
  4535  0E17                     	;# 
  4536  0E18                     	;# 
  4537  0E19                     	;# 
  4538  0E1A                     	;# 
  4539  0E1B                     	;# 
  4540  0E1C                     	;# 
  4541  0E1D                     	;# 
  4542  0E1E                     	;# 
  4543  0E1F                     	;# 
  4544  0E20                     	;# 
  4545  0E21                     	;# 
  4546  0E22                     	;# 
  4547  0E23                     	;# 
  4548  0E24                     	;# 
  4549  0E25                     	;# 
  4550  0E26                     	;# 
  4551  0E27                     	;# 
  4552  0E28                     	;# 
  4553  0E29                     	;# 
  4554  0E2A                     	;# 
  4555  0E2B                     	;# 
  4556  0E2C                     	;# 
  4557  0E2D                     	;# 
  4558  0E2E                     	;# 
  4559  0E2F                     	;# 
  4560  0E30                     	;# 
  4561  0E31                     	;# 
  4562  0E32                     	;# 
  4563  0E33                     	;# 
  4564  0E34                     	;# 
  4565  0E35                     	;# 
  4566  0E36                     	;# 
  4567  0E37                     	;# 
  4568  0E8F                     	;# 
  4569  0E90                     	;# 
  4570  0E91                     	;# 
  4571  0E92                     	;# 
  4572  0E93                     	;# 
  4573  0E94                     	;# 
  4574  0E95                     	;# 
  4575  0E96                     	;# 
  4576  0E97                     	;# 
  4577  0E9C                     	;# 
  4578  0E9D                     	;# 
  4579  0E9E                     	;# 
  4580  0EA1                     	;# 
  4581  0EA2                     	;# 
  4582  0EA3                     	;# 
  4583  0EA4                     	;# 
  4584  0EA5                     	;# 
  4585  0EA9                     	;# 
  4586  0EAA                     	;# 
  4587  0EAB                     	;# 
  4588  0EAC                     	;# 
  4589  0EB1                     	;# 
  4590  0EB2                     	;# 
  4591  0EB3                     	;# 
  4592  0EB8                     	;# 
  4593  0EB9                     	;# 
  4594  0EBA                     	;# 
  4595  0EBB                     	;# 
  4596  0EBC                     	;# 
  4597  0EBD                     	;# 
  4598  0EBE                     	;# 
  4599  0EC3                     	;# 
  4600  0EC5                     	;# 
  4601  0EC6                     	;# 
  4602  0EC7                     	;# 
  4603  0EC8                     	;# 
  4604  0EC9                     	;# 
  4605  0ECA                     	;# 
  4606  0ECB                     	;# 
  4607  0ECC                     	;# 
  4608  0F10                     	;# 
  4609  0F11                     	;# 
  4610  0F12                     	;# 
  4611  0F13                     	;# 
  4612  0F14                     	;# 
  4613  0F15                     	;# 
  4614  0F16                     	;# 
  4615  0F17                     	;# 
  4616  0F18                     	;# 
  4617  0F19                     	;# 
  4618  0F1A                     	;# 
  4619  0F1B                     	;# 
  4620  0F1C                     	;# 
  4621  0F1D                     	;# 
  4622  0F1E                     	;# 
  4623  0F1F                     	;# 
  4624  0F20                     	;# 
  4625  0F21                     	;# 
  4626  0F22                     	;# 
  4627  0F23                     	;# 
  4628  0F24                     	;# 
  4629  0F25                     	;# 
  4630  0F26                     	;# 
  4631  0F27                     	;# 
  4632  0F38                     	;# 
  4633  0F39                     	;# 
  4634  0F3A                     	;# 
  4635  0F3B                     	;# 
  4636  0F3C                     	;# 
  4637  0F3D                     	;# 
  4638  0F3E                     	;# 
  4639  0F3F                     	;# 
  4640  0F40                     	;# 
  4641  0F41                     	;# 
  4642  0F43                     	;# 
  4643  0F44                     	;# 
  4644  0F45                     	;# 
  4645  0F46                     	;# 
  4646  0F47                     	;# 
  4647  0F48                     	;# 
  4648  0F49                     	;# 
  4649  0F4A                     	;# 
  4650  0F4B                     	;# 
  4651  0F4C                     	;# 
  4652  0F4E                     	;# 
  4653  0F4F                     	;# 
  4654  0F50                     	;# 
  4655  0F51                     	;# 
  4656  0F52                     	;# 
  4657  0F53                     	;# 
  4658  0F54                     	;# 
  4659  0F55                     	;# 
  4660  0F56                     	;# 
  4661  0F57                     	;# 
  4662  0F65                     	;# 
  4663  0F68                     	;# 
  4664  0F69                     	;# 
  4665  0F6A                     	;# 
  4666  0F6B                     	;# 
  4667  0FE4                     	;# 
  4668  0FE5                     	;# 
  4669  0FE6                     	;# 
  4670  0FE7                     	;# 
  4671  0FE8                     	;# 
  4672  0FE9                     	;# 
  4673  0FEA                     	;# 
  4674  0FEB                     	;# 
  4675  0FED                     	;# 
  4676  0FEE                     	;# 
  4677  0FEF                     	;_samples
  4678                           
  4679                           	psect	idataBANK1
  4680  17BD                     __pidataBANK1:	
  4681                           
  4682                           ;initializer for _Kd
  4683  17BD  3401               	retlw	1
  4684  17BE  3400               	retlw	0
  4685                           
  4686                           ;initializer for _Ki
  4687  17BF  3401               	retlw	1
  4688  17C0  3400               	retlw	0
  4689                           
  4690                           ;initializer for _Kp
  4691  17C1  3404               	retlw	4
  4692  17C2  3400               	retlw	0
  4693                           
  4694                           	psect	idataBANK3
  4695  0832                     __pidataBANK3:	
  4696                           
  4697                           ;initializer for ___cgram
  4698  0832  340C               	retlw	12
  4699  0833  3412               	retlw	18
  4700  0834  3412               	retlw	18
  4701  0835  340C               	retlw	12
  4702  0836  3400               	retlw	0
  4703  0837  3400               	retlw	0
  4704  0838  3400               	retlw	0
  4705  0839  3400               	retlw	0
  4706  083A  3408               	retlw	8
  4707  083B  3404               	retlw	4
  4708  083C  3402               	retlw	2
  4709  083D  341F               	retlw	31
  4710  083E  3402               	retlw	2
  4711  083F  3404               	retlw	4
  4712  0840  3408               	retlw	8
  4713  0841  3400               	retlw	0
  4714                           
  4715                           ;initializer for _channels
  4716  0842  3401               	retlw	1
  4717  0843  3400               	retlw	0
  4718  0844  3403               	retlw	3
  4719  0845  3400               	retlw	0
  4720                           
  4721                           ;initializer for _pidMaxOutput
  4722  0846  34FF               	retlw	255
  4723  0847  3407               	retlw	7
  4724                           
  4725                           	psect	stringtext
  4726  1000                     __pstringtext:	
  4727  1000                     log@coeff:	
  4728  1000  3400               	retlw	0
  4729  1001  3400               	retlw	0
  4730  1002  3400               	retlw	0
  4731  1003  3400               	retlw	0
  4732  1004  3480               	retlw	128
  4733  1005  343F               	retlw	63
  4734  1006  34F0               	retlw	240
  4735  1007  34FF               	retlw	255
  4736  1008  34BE               	retlw	190
  4737  1009  34E2               	retlw	226
  4738  100A  34A9               	retlw	169
  4739  100B  343E               	retlw	62
  4740  100C  3483               	retlw	131
  4741  100D  3476               	retlw	118
  4742  100E  34BE               	retlw	190
  4743  100F  34AE               	retlw	174
  4744  1010  342B               	retlw	43
  4745  1011  343E               	retlw	62
  4746  1012  343C               	retlw	60
  4747  1013  34C3               	retlw	195
  4748  1014  34BD               	retlw	189
  4749  1015  34D2               	retlw	210
  4750  1016  3413               	retlw	19
  4751  1017  343D               	retlw	61
  4752  1018  3478               	retlw	120
  4753  1019  34D3               	retlw	211
  4754  101A  34BB               	retlw	187
  4755  101B                     __end_oflog@coeff:	
  4756  0016                     _LATA	set	22
  4757  0017                     _LATB	set	23
  4758  0018                     _LATC	set	24
  4759  0011                     _TRISA	set	17
  4760  0012                     _TRISB	set	18
  4761  0013                     _TRISC	set	19
  4762  005F                     _GIE	set	95
  4763  00C2                     _LATC2	set	194
  4764  0060                     _RA0	set	96
  4765  0062                     _RA2	set	98
  4766  0066                     _RA6	set	102
  4767  0067                     _RA7	set	103
  4768  0068                     _RB0	set	104
  4769  0069                     _RB1	set	105
  4770  0070                     _RC0	set	112
  4771  0071                     _RC1	set	113
  4772  009D                     _ADACQ	set	157
  4773  0099                     _ADACT	set	153
  4774  009B                     _ADCAP	set	155
  4775  0098                     _ADCLK	set	152
  4776  0093                     _ADCON0	set	147
  4777  0093                     _ADCON0bits	set	147
  4778  0094                     _ADCON1	set	148
  4779  0095                     _ADCON2	set	149
  4780  0096                     _ADCON3	set	150
  4781  009E                     _ADPCH	set	158
  4782  009C                     _ADPRE	set	156
  4783  009A                     _ADREF	set	154
  4784  008D                     _ADRESH	set	141
  4785  008C                     _ADRESL	set	140
  4786  0097                     _ADSTAT	set	151
  4787  010F                     _ADLTHH	set	271
  4788  010E                     _ADLTHL	set	270
  4789  010D                     _ADRPT	set	269
  4790  0113                     _ADSTPTH	set	275
  4791  0112                     _ADSTPTL	set	274
  4792  0111                     _ADUTHH	set	273
  4793  0110                     _ADUTHL	set	272
  4794  021F                     _CCPTMRS1bits	set	543
  4795  0290                     _T2CLKCON	set	656
  4796  028E                     _T2CON	set	654
  4797  028E                     _T2CONbits	set	654
  4798  028F                     _T2HLT	set	655
  4799  028D                     _T2PR	set	653
  4800  0291                     _T2RST	set	657
  4801  028C                     _T2TMR	set	652
  4802  0392                     _PWM7CON	set	914
  4803  0391                     _PWM7DCH	set	913
  4804  0390                     _PWM7DCL	set	912
  4805  0716                     _PIE0bits	set	1814
  4806  0710                     _PIR4bits	set	1808
  4807  088D                     _OSCCON1	set	2189
  4808  088F                     _OSCCON3	set	2191
  4809  0891                     _OSCEN	set	2193
  4810  0893                     _OSCFRQ	set	2195
  4811  0892                     _OSCTUNE	set	2194
  4812  090C                     _FVRCON	set	2316
  4813  0E8F                     _PPSLOCK	set	3727
  4814  0E8F                     _PPSLOCKbits	set	3727
  4815  0F38                     _ANSELA	set	3896
  4816  0F43                     _ANSELB	set	3907
  4817  0F4E                     _ANSELC	set	3918
  4818  0F23                     _RC3PPS	set	3875
  4819  0F39                     _WPUA	set	3897
  4820  0F44                     _WPUB	set	3908
  4821  0F4F                     _WPUC	set	3919
  4822  0F65                     _WPUE	set	3941
  4823  101B                     STR_2:	
  4824  101B  344F               	retlw	79	;'O'
  4825  101C  3475               	retlw	117	;'u'
  4826  101D  3474               	retlw	116	;'t'
  4827  101E  3470               	retlw	112	;'p'
  4828  101F  3475               	retlw	117	;'u'
  4829  1020  3474               	retlw	116	;'t'
  4830  1021  343A               	retlw	58	;':'
  4831  1022  3400               	retlw	0
  4832  1023                     STR_1:	
  4833  1023  3450               	retlw	80	;'P'
  4834  1024  3469               	retlw	105	;'i'
  4835  1025  3474               	retlw	116	;'t'
  4836  1026  343A               	retlw	58	;':'
  4837  1027  3400               	retlw	0
  4838                           
  4839                           ; #config settings
  4840  0000                     
  4841                           	psect	cinit
  4842  07B7                     start_initialization:	
  4843  07B7                     __initialization:		;BIGRAM
  4844                           
  4845                           ; Initialize objects allocated to BANK1
  4846  07B7  30BD               	movlw	low __pidataBANK1
  4847  07B8  0084               	movwf	4
  4848  07B9  3097               	movlw	(high __pidataBANK1)| (0+128)
  4849  07BA  0085               	movwf	5
  4850  07BB  30E8               	movlw	low __pdataBANK1
  4851  07BC  0086               	movwf	6
  4852  07BD  3000               	movlw	high __pdataBANK1
  4853  07BE  0087               	movwf	7
  4854  07BF  3000               	movlw	0
  4855  07C0  00FF               	movwf	btemp+1
  4856  07C1  3006               	movlw	6
  4857  07C2  3197  27D8  3187   	fcall	init_ram
  4858                           
  4859                           ; Initialize objects allocated to BANK3
  4860  07C5  3032               	movlw	low __pidataBANK3
  4861  07C6  0084               	movwf	4
  4862  07C7  3088               	movlw	(high __pidataBANK3)| (0+128)
  4863  07C8  0085               	movwf	5
  4864  07C9  30A0               	movlw	low __pdataBANK3
  4865  07CA  0086               	movwf	6
  4866  07CB  3001               	movlw	high __pdataBANK3
  4867  07CC  0087               	movwf	7
  4868  07CD  3000               	movlw	0
  4869  07CE  00FF               	movwf	btemp+1
  4870  07CF  3016               	movlw	22
  4871  07D0  3197  27D8  3187   	fcall	init_ram
  4872                           
  4873                           ; Clear objects allocated to BIGRAM
  4874  07D3  3050               	movlw	low (0+9040)
  4875  07D4  0084               	movwf	4
  4876  07D5  3023               	movlw	high (0+9040)
  4877  07D6  0085               	movwf	5
  4878  07D7  30A0               	movlw	160
  4879  07D8  00FE               	movwf	btemp
  4880  07D9  3000               	movlw	0
  4881  07DA  00FF               	movwf	btemp+1
  4882  07DB  3197  27CC  3187   	fcall	clear_ram0
  4883                           
  4884                           ; Clear objects allocated to BANK1
  4885  07DE  30C8               	movlw	low __pbssBANK1
  4886  07DF  0084               	movwf	4
  4887  07E0  3000               	movlw	high __pbssBANK1
  4888  07E1  0085               	movwf	5
  4889  07E2  3020               	movlw	32
  4890  07E3  00FE               	movwf	btemp
  4891  07E4  3000               	movlw	0
  4892  07E5  00FF               	movwf	btemp+1
  4893  07E6  3197  27CC  3187   	fcall	clear_ram0
  4894                           
  4895                           ; Clear objects allocated to BANK3
  4896  07E9  0023               	movlb	3	; select bank3
  4897  07EA  01C4               	clrf	__pbssBANK3& (0+127)
  4898  07EB  01C5               	clrf	(__pbssBANK3+1)& (0+127)
  4899  07EC  01C6               	clrf	(__pbssBANK3+2)& (0+127)
  4900  07ED  01C7               	clrf	(__pbssBANK3+3)& (0+127)
  4901  07EE  01C8               	clrf	(__pbssBANK3+4)& (0+127)
  4902  07EF  01C9               	clrf	(__pbssBANK3+5)& (0+127)
  4903  07F0  01CA               	clrf	(__pbssBANK3+6)& (0+127)
  4904  07F1  01CB               	clrf	(__pbssBANK3+7)& (0+127)
  4905  07F2  01CC               	clrf	(__pbssBANK3+8)& (0+127)
  4906                           
  4907                           ; Clear objects allocated to BANK4
  4908  07F3  3020               	movlw	low __pbssBANK4
  4909  07F4  0084               	movwf	4
  4910  07F5  3002               	movlw	high __pbssBANK4
  4911  07F6  0085               	movwf	5
  4912  07F7  3050               	movlw	80
  4913  07F8  00FE               	movwf	btemp
  4914  07F9  3000               	movlw	0
  4915  07FA  00FF               	movwf	btemp+1
  4916  07FB  3197  27CC         	fcall	clear_ram0
  4917  07FD                     end_of_initialization:	
  4918                           ;End of C runtime variable initialization code
  4919                           
  4920  07FD                     __end_of__initialization:	
  4921  07FD  0020               	movlb	0
  4922  07FE  3184  2C81         	ljmp	_main	;jump to C main() function
  4923                           
  4924                           	psect	bssBANK1
  4925  00C8                     __pbssBANK1:	
  4926  00C8                     _totals:	
  4927  00C8                     	ds	8
  4928  00D0                     _Result:	
  4929  00D0                     	ds	2
  4930  00D2                     _derivativeValue:	
  4931  00D2                     	ds	2
  4932  00D4                     _errno:	
  4933  00D4                     	ds	2
  4934  00D6                     _error:	
  4935  00D6                     	ds	2
  4936  00D8                     _errorValue:	
  4937  00D8                     	ds	2
  4938  00DA                     _lastSign:	
  4939  00DA                     	ds	2
  4940  00DC                     _pidCount:	
  4941  00DC                     	ds	2
  4942  00DE                     _pidIntegrated:	
  4943  00DE                     	ds	2
  4944  00E0                     _pidMinOutput:	
  4945  00E0                     	ds	2
  4946  00E2                     _pidPrevError:	
  4947  00E2                     	ds	2
  4948  00E4                     _sampleIndex:	
  4949  00E4                     	ds	2
  4950  00E6                     _signPositive:	
  4951  00E6                     	ds	2
  4952                           
  4953                           	psect	dataBANK1
  4954  00E8                     __pdataBANK1:	
  4955  00E8                     _Kd:	
  4956  00E8                     	ds	2
  4957  00EA                     _Ki:	
  4958  00EA                     	ds	2
  4959  00EC                     _Kp:	
  4960  00EC                     	ds	2
  4961                           
  4962                           	psect	bssBANK3
  4963  01C4                     __pbssBANK3:	
  4964  01C4                     LCD_Write_Int@F13690:	
  4965  01C4                     	ds	5
  4966  01C9                     main@F13660:	
  4967  01C9                     	ds	4
  4968                           
  4969                           	psect	dataBANK3
  4970  01A0                     __pdataBANK3:	
  4971  01A0                     ___cgram:	
  4972  01A0                     	ds	16
  4973  01B0                     _channels:	
  4974  01B0                     	ds	4
  4975  01B4                     _pidMaxOutput:	
  4976  01B4                     	ds	2
  4977                           
  4978                           	psect	bssBANK4
  4979  0220                     __pbssBANK4:	
  4980  0220                     main@F13668:	
  4981  0220                     	ds	80
  4982                           
  4983                           	psect	inittext
  4984  17D8                     init_ram:	
  4985  17D8  00FE               	movwf	126
  4986  17D9                     initloop:	
  4987  17D9  0012               	moviw fsr0++
  4988  17DA  001E               	movwi fsr1++
  4989  17DB  3001               	movlw	1
  4990  17DC  02FE               	subwf	126,f
  4991  17DD  3000               	movlw	0
  4992  17DE  3BFF               	subwfb	127,f
  4993  17DF  087F               	movf	127,w
  4994  17E0  047E               	iorwf	126,w
  4995  17E1  1903               	btfsc	3,2
  4996  17E2  3400               	retlw	0
  4997  17E3  2FD9               	goto	initloop
  4998                           
  4999                           	psect	clrtext
  5000  17CC                     clear_ram0:	
  5001                           ;	Called with FSR0 containing the base address, and
  5002                           ;	btemp/btemp+1 has the size to clear
  5003                           
  5004  17CC  0064               	clrwdt	;clear the watchdog before getting into this loop
  5005  17CD                     clrloop0:	
  5006  17CD  0180               	clrf	0	;clear RAM location pointed to by FSR
  5007  17CE  3101               	addfsr 0,1
  5008  17CF  3001               	movlw	1
  5009  17D0  02FE               	subwf	126,f
  5010  17D1  3000               	movlw	0
  5011  17D2  3BFF               	subwfb	127,f
  5012  17D3  087F               	movf	127,w
  5013  17D4  047E               	iorwf	126,w
  5014  17D5  1903               	btfsc	3,2
  5015  17D6  3400               	retlw	0	;all done for this memory range, return
  5016  17D7  2FCD               	goto	clrloop0	;have we reached the end yet?
  5017                           
  5018                           	psect	cstackBANK3
  5019  01B6                     __pcstackBANK3:	
  5020  01B6                     main@outputTotal:	
  5021                           
  5022                           ; 4 bytes @ 0x0
  5023  01B6                     	ds	4
  5024  01BA                     main@dutyCycle6:	
  5025                           
  5026                           ; 2 bytes @ 0x4
  5027  01BA                     	ds	2
  5028  01BC                     main@analogs:	
  5029                           
  5030                           ; 4 bytes @ 0x6
  5031  01BC                     	ds	4
  5032  01C0                     main@j:	
  5033                           
  5034                           ; 1 bytes @ 0xA
  5035  01C0                     	ds	1
  5036  01C1                     main@set:	
  5037                           
  5038                           ; 2 bytes @ 0xB
  5039  01C1                     	ds	2
  5040  01C3                     main@delayCount:	
  5041                           
  5042                           ; 1 bytes @ 0xD
  5043  01C3                     	ds	1
  5044                           
  5045                           	psect	cstackBANK2
  5046  0120                     __pcstackBANK2:	
  5047  0120                     main@outputSamples:	
  5048                           
  5049                           ; 80 bytes @ 0x0
  5050  0120                     	ds	80
  5051                           
  5052                           	psect	cstackBANK1
  5053  00A0                     __pcstackBANK1:	
  5054  00A0                     ??___fttol:	
  5055                           
  5056                           ; 1 bytes @ 0x0
  5057  00A0                     	ds	4
  5058  00A4                     ___fttol@sign1:	
  5059                           
  5060                           ; 1 bytes @ 0x4
  5061  00A4                     	ds	1
  5062  00A5                     ___fttol@lval:	
  5063                           
  5064                           ; 4 bytes @ 0x5
  5065  00A5                     	ds	4
  5066  00A9                     ___fttol@exp1:	
  5067                           
  5068                           ; 1 bytes @ 0x9
  5069  00A9                     	ds	1
  5070  00AA                     ??_main:	
  5071                           
  5072                           ; 1 bytes @ 0xA
  5073  00AA                     	ds	10
  5074  00B4                     main@choice:	
  5075                           
  5076                           ; 1 bytes @ 0x14
  5077  00B4                     	ds	1
  5078  00B5                     main@C_or_F:	
  5079                           
  5080                           ; 1 bytes @ 0x15
  5081  00B5                     	ds	1
  5082  00B6                     main@startDelay:	
  5083                           
  5084                           ; 1 bytes @ 0x16
  5085  00B6                     	ds	1
  5086  00B7                     main@resetDelay:	
  5087                           
  5088                           ; 1 bytes @ 0x17
  5089  00B7                     	ds	1
  5090  00B8                     main@tPadCount:	
  5091                           
  5092                           ; 1 bytes @ 0x18
  5093  00B8                     	ds	1
  5094  00B9                     main@output:	
  5095                           
  5096                           ; 2 bytes @ 0x19
  5097  00B9                     	ds	2
  5098  00BB                     main@holdOutput:	
  5099                           
  5100                           ; 1 bytes @ 0x1B
  5101  00BB                     	ds	1
  5102  00BC                     main@lidOpenCount:	
  5103                           
  5104                           ; 1 bytes @ 0x1C
  5105  00BC                     	ds	1
  5106  00BD                     main@dutyCycle7:	
  5107                           
  5108                           ; 2 bytes @ 0x1D
  5109  00BD                     	ds	2
  5110  00BF                     main@menuDelay:	
  5111                           
  5112                           ; 1 bytes @ 0x1F
  5113  00BF                     	ds	1
  5114  00C0                     main@loop:	
  5115                           
  5116                           ; 1 bytes @ 0x20
  5117  00C0                     	ds	1
  5118  00C1                     main@lastTemperature:	
  5119                           
  5120                           ; 2 bytes @ 0x21
  5121  00C1                     	ds	2
  5122  00C3                     main@pidPeriodCounter:	
  5123                           
  5124                           ; 2 bytes @ 0x23
  5125  00C3                     	ds	2
  5126  00C5                     main@currentTemperature:	
  5127                           
  5128                           ; 2 bytes @ 0x25
  5129  00C5                     	ds	2
  5130  00C7                     main@outputIndex:	
  5131                           
  5132                           ; 1 bytes @ 0x27
  5133  00C7                     	ds	1
  5134                           
  5135                           	psect	cstackCOMMON
  5136  0070                     __pcstackCOMMON:	
  5137  0070                     ?___ftge:	
  5138  0070                     ?_LCD_Cmd:	
  5139                           ; 1 bit 
  5140                           
  5141  0070                     ?_LCD_Write_Char:	
  5142                           ; 1 bytes @ 0x0
  5143                           
  5144  0070                     ?_OSCILLATOR_Initialize:	
  5145                           ; 1 bytes @ 0x0
  5146                           
  5147  0070                     ??_OSCILLATOR_Initialize:	
  5148                           ; 1 bytes @ 0x0
  5149                           
  5150  0070                     ?_TMR2_Initialize:	
  5151                           ; 1 bytes @ 0x0
  5152                           
  5153  0070                     ??_TMR2_Initialize:	
  5154                           ; 1 bytes @ 0x0
  5155                           
  5156  0070                     ?_ADCC_Initialize:	
  5157                           ; 1 bytes @ 0x0
  5158                           
  5159  0070                     ??_ADCC_Initialize:	
  5160                           ; 1 bytes @ 0x0
  5161                           
  5162  0070                     ?_InitCustomChars:	
  5163                           ; 1 bytes @ 0x0
  5164                           
  5165  0070                     ?_LCD_Port:	
  5166                           ; 1 bytes @ 0x0
  5167                           
  5168  0070                     ??_LCD_Port:	
  5169                           ; 1 bytes @ 0x0
  5170                           
  5171  0070                     ?_LCD_Clear:	
  5172                           ; 1 bytes @ 0x0
  5173                           
  5174  0070                     ?_LCD_Init:	
  5175                           ; 1 bytes @ 0x0
  5176                           
  5177  0070                     ?_PIN_MANAGER_Initialize:	
  5178                           ; 1 bytes @ 0x0
  5179                           
  5180  0070                     ??_PIN_MANAGER_Initialize:	
  5181                           ; 1 bytes @ 0x0
  5182                           
  5183  0070                     ?_PWM_Initialize:	
  5184                           ; 1 bytes @ 0x0
  5185                           
  5186  0070                     ??_PWM_Initialize:	
  5187                           ; 1 bytes @ 0x0
  5188                           
  5189  0070                     ?_PWM7_LoadDutyValue:	
  5190                           ; 1 bytes @ 0x0
  5191                           
  5192  0070                     ?_SYSTEM_Initialize:	
  5193                           ; 1 bytes @ 0x0
  5194                           
  5195  0070                     ?_main:	
  5196                           ; 1 bytes @ 0x0
  5197                           
  5198  0070                     ?_ADCRead:	
  5199                           ; 1 bytes @ 0x0
  5200                           
  5201  0070                     ?___wmul:	
  5202                           ; 2 bytes @ 0x0
  5203                           
  5204  0070                     ?___awdiv:	
  5205                           ; 2 bytes @ 0x0
  5206                           
  5207  0070                     ?___awmod:	
  5208                           ; 2 bytes @ 0x0
  5209                           
  5210  0070                     ?___ftpack:	
  5211                           ; 2 bytes @ 0x0
  5212                           
  5213  0070                     ?_frexp:	
  5214                           ; 3 bytes @ 0x0
  5215                           
  5216  0070                     ?___aldiv:	
  5217                           ; 3 bytes @ 0x0
  5218                           
  5219  0070                     LCD_Port@a:	
  5220                           ; 4 bytes @ 0x0
  5221                           
  5222  0070                     PIN_MANAGER_Initialize@state:	
  5223                           ; 1 bytes @ 0x0
  5224                           
  5225  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5226                           ; 1 bytes @ 0x0
  5227                           
  5228  0070                     ___wmul@multiplier:	
  5229                           ; 2 bytes @ 0x0
  5230                           
  5231  0070                     ___awdiv@divisor:	
  5232                           ; 2 bytes @ 0x0
  5233                           
  5234  0070                     ___awmod@divisor:	
  5235                           ; 2 bytes @ 0x0
  5236                           
  5237  0070                     ___ftpack@arg:	
  5238                           ; 2 bytes @ 0x0
  5239                           
  5240  0070                     ___ftge@ff1:	
  5241                           ; 3 bytes @ 0x0
  5242                           
  5243  0070                     frexp@value:	
  5244                           ; 3 bytes @ 0x0
  5245                           
  5246  0070                     ___aldiv@divisor:	
  5247                           ; 3 bytes @ 0x0
  5248                           
  5249                           
  5250                           ; 4 bytes @ 0x0
  5251  0070                     	ds	1
  5252  0071                     ??_LCD_Cmd:	
  5253  0071                     ??_LCD_Write_Char:	
  5254                           ; 1 bytes @ 0x1
  5255                           
  5256                           
  5257                           ; 1 bytes @ 0x1
  5258  0071                     	ds	1
  5259  0072                     ??_PWM7_LoadDutyValue:	
  5260  0072                     LCD_Write_Char@temp:	
  5261                           ; 1 bytes @ 0x2
  5262                           
  5263  0072                     ___wmul@multiplicand:	
  5264                           ; 1 bytes @ 0x2
  5265                           
  5266  0072                     ___awdiv@dividend:	
  5267                           ; 2 bytes @ 0x2
  5268                           
  5269  0072                     ___awmod@dividend:	
  5270                           ; 2 bytes @ 0x2
  5271                           
  5272                           
  5273                           ; 2 bytes @ 0x2
  5274  0072                     	ds	1
  5275  0073                     ??_ADCRead:	
  5276  0073                     ADCRead@channel:	
  5277                           ; 1 bytes @ 0x3
  5278                           
  5279  0073                     LCD_Cmd@a:	
  5280                           ; 1 bytes @ 0x3
  5281                           
  5282  0073                     LCD_Write_Char@y:	
  5283                           ; 1 bytes @ 0x3
  5284                           
  5285  0073                     ___ftpack@exp:	
  5286                           ; 1 bytes @ 0x3
  5287                           
  5288  0073                     frexp@eptr:	
  5289                           ; 1 bytes @ 0x3
  5290                           
  5291  0073                     ___ftge@ff2:	
  5292                           ; 1 bytes @ 0x3
  5293                           
  5294                           
  5295                           ; 3 bytes @ 0x3
  5296  0073                     	ds	1
  5297  0074                     ??_frexp:	
  5298  0074                     ??_LCD_Clear:	
  5299                           ; 1 bytes @ 0x4
  5300                           
  5301  0074                     ?_LCD_Set_Cursor:	
  5302                           ; 1 bytes @ 0x4
  5303                           
  5304  0074                     ??_LCD_Init:	
  5305                           ; 1 bytes @ 0x4
  5306                           
  5307  0074                     ??___wmul:	
  5308                           ; 1 bytes @ 0x4
  5309                           
  5310  0074                     ??___awdiv:	
  5311                           ; 1 bytes @ 0x4
  5312                           
  5313  0074                     ??___awmod:	
  5314                           ; 1 bytes @ 0x4
  5315                           
  5316  0074                     LCD_Set_Cursor@y:	
  5317                           ; 1 bytes @ 0x4
  5318                           
  5319  0074                     LCD_Write_Char@a:	
  5320                           ; 1 bytes @ 0x4
  5321                           
  5322  0074                     ___ftpack@sign:	
  5323                           ; 1 bytes @ 0x4
  5324                           
  5325  0074                     ___wmul@product:	
  5326                           ; 1 bytes @ 0x4
  5327                           
  5328  0074                     ___aldiv@dividend:	
  5329                           ; 2 bytes @ 0x4
  5330                           
  5331                           
  5332                           ; 4 bytes @ 0x4
  5333  0074                     	ds	1
  5334  0075                     ??___ftpack:	
  5335  0075                     ??_InitCustomChars:	
  5336                           ; 1 bytes @ 0x5
  5337                           
  5338  0075                     ??_LCD_Set_Cursor:	
  5339                           ; 1 bytes @ 0x5
  5340                           
  5341  0075                     ?_LCD_Write_String:	
  5342                           ; 1 bytes @ 0x5
  5343                           
  5344  0075                     ___awdiv@counter:	
  5345                           ; 1 bytes @ 0x5
  5346                           
  5347  0075                     ___awmod@counter:	
  5348                           ; 1 bytes @ 0x5
  5349                           
  5350  0075                     LCD_Write_String@a:	
  5351                           ; 1 bytes @ 0x5
  5352                           
  5353                           
  5354                           ; 2 bytes @ 0x5
  5355  0075                     	ds	1
  5356  0076                     ??___ftge:	
  5357  0076                     ?_PID_Calculate:	
  5358                           ; 1 bytes @ 0x6
  5359                           
  5360  0076                     InitCustomChars@i:	
  5361                           ; 2 bytes @ 0x6
  5362                           
  5363  0076                     ___awdiv@sign:	
  5364                           ; 1 bytes @ 0x6
  5365                           
  5366  0076                     ___awmod@sign:	
  5367                           ; 1 bytes @ 0x6
  5368                           
  5369  0076                     PID_Calculate@setpoint:	
  5370                           ; 1 bytes @ 0x6
  5371                           
  5372                           
  5373                           ; 2 bytes @ 0x6
  5374  0076                     	ds	1
  5375  0077                     ??_LCD_Write_String:	
  5376  0077                     LCD_Set_Cursor@x:	
  5377                           ; 1 bytes @ 0x7
  5378                           
  5379  0077                     LCD_Init@style:	
  5380                           ; 1 bytes @ 0x7
  5381                           
  5382  0077                     ___awdiv@quotient:	
  5383                           ; 1 bytes @ 0x7
  5384                           
  5385                           
  5386                           ; 2 bytes @ 0x7
  5387  0077                     	ds	1
  5388  0078                     ??_SYSTEM_Initialize:	
  5389  0078                     ??___aldiv:	
  5390                           ; 1 bytes @ 0x8
  5391                           
  5392  0078                     ?___awtoft:	
  5393                           ; 1 bytes @ 0x8
  5394                           
  5395  0078                     LCD_Set_Cursor@z:	
  5396                           ; 3 bytes @ 0x8
  5397                           
  5398  0078                     LCD_Write_String@i:	
  5399                           ; 1 bytes @ 0x8
  5400                           
  5401  0078                     PID_Calculate@temp:	
  5402                           ; 2 bytes @ 0x8
  5403                           
  5404  0078                     ___awtoft@c:	
  5405                           ; 2 bytes @ 0x8
  5406                           
  5407                           
  5408                           ; 2 bytes @ 0x8
  5409  0078                     	ds	1
  5410  0079                     ?_LCD_Write_Int:	
  5411  0079                     LCD_Set_Cursor@w:	
  5412                           ; 1 bytes @ 0x9
  5413                           
  5414  0079                     readAnalog@analog_channel:	
  5415                           ; 1 bytes @ 0x9
  5416                           
  5417  0079                     LCD_Write_Int@value:	
  5418                           ; 2 bytes @ 0x9
  5419                           
  5420                           
  5421                           ; 2 bytes @ 0x9
  5422  0079                     	ds	1
  5423  007A                     ??_PID_Calculate:	
  5424  007A                     LCD_Set_Cursor@temp:	
  5425                           ; 1 bytes @ 0xA
  5426                           
  5427                           
  5428                           ; 1 bytes @ 0xA
  5429  007A                     	ds	1
  5430  007B                     ??___awtoft:	
  5431  007B                     LCD_Write_Int@fieldLength:	
  5432                           ; 1 bytes @ 0xB
  5433                           
  5434  007B                     readAnalog@value:	
  5435                           ; 1 bytes @ 0xB
  5436                           
  5437                           
  5438                           ; 2 bytes @ 0xB
  5439  007B                     	ds	1
  5440  007C                     LCD_Write_Int@numPlaces:	
  5441                           
  5442                           ; 1 bytes @ 0xC
  5443  007C                     	ds	1
  5444  007D                     LCD_Write_Int@sign:	
  5445  007D                     ___awtoft@sign:	
  5446                           ; 1 bytes @ 0xD
  5447                           
  5448                           
  5449                           ; 1 bytes @ 0xD
  5450  007D                     	ds	1
  5451  007E                     ??_eval_poly:	
  5452  007E                     ??_tempCalc:	
  5453                           ; 1 bytes @ 0xE
  5454                           
  5455  007E                     ??___ftsub:	
  5456                           ; 1 bytes @ 0xE
  5457                           
  5458                           
  5459                           	psect	cstackBANK0
  5460  0020                     __pcstackBANK0:	
  5461                           ; 1 bytes @ 0xE
  5462                           
  5463  0020                     ??_LCD_Write_Int:	
  5464  0020                     ?___ftmul:	
  5465                           ; 1 bytes @ 0x0
  5466                           
  5467  0020                     ___aldiv@counter:	
  5468                           ; 3 bytes @ 0x0
  5469                           
  5470  0020                     ___ftmul@f1:	
  5471                           ; 1 bytes @ 0x0
  5472                           
  5473                           
  5474                           ; 3 bytes @ 0x0
  5475  0020                     	ds	1
  5476  0021                     ___aldiv@sign:	
  5477                           
  5478                           ; 1 bytes @ 0x1
  5479  0021                     	ds	1
  5480  0022                     ___aldiv@quotient:	
  5481                           
  5482                           ; 4 bytes @ 0x2
  5483  0022                     	ds	1
  5484  0023                     ___ftmul@f2:	
  5485                           
  5486                           ; 3 bytes @ 0x3
  5487  0023                     	ds	2
  5488  0025                     LCD_Write_Int@str:	
  5489                           
  5490                           ; 5 bytes @ 0x5
  5491  0025                     	ds	1
  5492  0026                     ??___ftmul:	
  5493  0026                     ?_readAnalog:	
  5494                           ; 1 bytes @ 0x6
  5495                           
  5496  0026                     readAnalog@channel:	
  5497                           ; 2 bytes @ 0x6
  5498                           
  5499                           
  5500                           ; 2 bytes @ 0x6
  5501  0026                     	ds	2
  5502  0028                     ??_readAnalog:	
  5503                           
  5504                           ; 1 bytes @ 0x8
  5505  0028                     	ds	2
  5506  002A                     ___ftmul@exp:	
  5507  002A                     LCD_Write_Int@j:	
  5508                           ; 1 bytes @ 0xA
  5509                           
  5510                           
  5511                           ; 2 bytes @ 0xA
  5512  002A                     	ds	1
  5513  002B                     ___ftmul@f3_as_product:	
  5514                           
  5515                           ; 3 bytes @ 0xB
  5516  002B                     	ds	1
  5517  002C                     LCD_Write_Int@i:	
  5518                           
  5519                           ; 2 bytes @ 0xC
  5520  002C                     	ds	2
  5521  002E                     ___ftmul@cntr:	
  5522                           
  5523                           ; 1 bytes @ 0xE
  5524  002E                     	ds	1
  5525  002F                     ___ftmul@sign:	
  5526                           
  5527                           ; 1 bytes @ 0xF
  5528  002F                     	ds	1
  5529  0030                     ?___ftdiv:	
  5530  0030                     ___ftdiv@f2:	
  5531                           ; 3 bytes @ 0x10
  5532                           
  5533                           
  5534                           ; 3 bytes @ 0x10
  5535  0030                     	ds	3
  5536  0033                     ___ftdiv@f1:	
  5537                           
  5538                           ; 3 bytes @ 0x13
  5539  0033                     	ds	3
  5540  0036                     ??___ftdiv:	
  5541                           
  5542                           ; 1 bytes @ 0x16
  5543  0036                     	ds	4
  5544  003A                     ___ftdiv@cntr:	
  5545                           
  5546                           ; 1 bytes @ 0x1A
  5547  003A                     	ds	1
  5548  003B                     ___ftdiv@f3:	
  5549                           
  5550                           ; 3 bytes @ 0x1B
  5551  003B                     	ds	3
  5552  003E                     ___ftdiv@exp:	
  5553                           
  5554                           ; 1 bytes @ 0x1E
  5555  003E                     	ds	1
  5556  003F                     ___ftdiv@sign:	
  5557                           
  5558                           ; 1 bytes @ 0x1F
  5559  003F                     	ds	1
  5560  0040                     ?___ftadd:	
  5561  0040                     ___ftadd@f1:	
  5562                           ; 3 bytes @ 0x20
  5563                           
  5564                           
  5565                           ; 3 bytes @ 0x20
  5566  0040                     	ds	3
  5567  0043                     ___ftadd@f2:	
  5568                           
  5569                           ; 3 bytes @ 0x23
  5570  0043                     	ds	3
  5571  0046                     ??___ftadd:	
  5572                           
  5573                           ; 1 bytes @ 0x26
  5574  0046                     	ds	4
  5575  004A                     ___ftadd@sign:	
  5576                           
  5577                           ; 1 bytes @ 0x2A
  5578  004A                     	ds	1
  5579  004B                     ___ftadd@exp2:	
  5580                           
  5581                           ; 1 bytes @ 0x2B
  5582  004B                     	ds	1
  5583  004C                     ___ftadd@exp1:	
  5584                           
  5585                           ; 1 bytes @ 0x2C
  5586  004C                     	ds	1
  5587  004D                     ?_eval_poly:	
  5588  004D                     ?___ftsub:	
  5589                           ; 3 bytes @ 0x2D
  5590                           
  5591  004D                     ___ftsub@f2:	
  5592                           ; 3 bytes @ 0x2D
  5593                           
  5594  004D                     eval_poly@x:	
  5595                           ; 3 bytes @ 0x2D
  5596                           
  5597                           
  5598                           ; 3 bytes @ 0x2D
  5599  004D                     	ds	3
  5600  0050                     eval_poly@d:	
  5601  0050                     ___ftsub@f1:	
  5602                           ; 2 bytes @ 0x30
  5603                           
  5604                           
  5605                           ; 3 bytes @ 0x30
  5606  0050                     	ds	2
  5607  0052                     eval_poly@n:	
  5608                           
  5609                           ; 2 bytes @ 0x32
  5610  0052                     	ds	2
  5611  0054                     eval_poly@res:	
  5612                           
  5613                           ; 3 bytes @ 0x34
  5614  0054                     	ds	3
  5615  0057                     ?_log:	
  5616  0057                     log@x:	
  5617                           ; 3 bytes @ 0x37
  5618                           
  5619                           
  5620                           ; 3 bytes @ 0x37
  5621  0057                     	ds	3
  5622  005A                     ??_log:	
  5623                           
  5624                           ; 1 bytes @ 0x3A
  5625  005A                     	ds	1
  5626  005B                     log@exponent:	
  5627                           
  5628                           ; 2 bytes @ 0x3B
  5629  005B                     	ds	2
  5630  005D                     ?_tempCalc:	
  5631  005D                     tempCalc@analogValue:	
  5632                           ; 3 bytes @ 0x3D
  5633                           
  5634                           
  5635                           ; 2 bytes @ 0x3D
  5636  005D                     	ds	3
  5637  0060                     tempCalc@R:	
  5638                           
  5639                           ; 3 bytes @ 0x40
  5640  0060                     	ds	3
  5641  0063                     _tempCalc$986:	
  5642                           
  5643                           ; 3 bytes @ 0x43
  5644  0063                     	ds	3
  5645  0066                     tempCalc@steinhart:	
  5646                           
  5647                           ; 3 bytes @ 0x46
  5648  0066                     	ds	3
  5649  0069                     ?___fttol:	
  5650  0069                     ___fttol@f1:	
  5651                           ; 4 bytes @ 0x49
  5652                           
  5653                           
  5654                           ; 3 bytes @ 0x49
  5655  0069                     	ds	4
  5656  006D                     main@bCount:	
  5657                           
  5658                           ; 2 bytes @ 0x4D
  5659  006D                     	ds	2
  5660  006F                     main@x:	
  5661                           
  5662                           ; 1 bytes @ 0x4F
  5663  006F                     	ds	1
  5664                           
  5665                           	psect	maintext
  5666  0481                     __pmaintext:	
  5667 ;;
  5668 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  5669 ;;
  5670 ;; *************** function _main *****************
  5671 ;; Defined at:
  5672 ;;		line 27 in file "main.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  outputSample   80    0[BANK2 ] int [40]
  5677 ;;  analogs         4    6[BANK3 ] unsigned int [2]
  5678 ;;  outputTotal     4    0[BANK3 ] long 
  5679 ;;  displayTemp2    3    0        float 
  5680 ;;  displayTemp     3    0        float 
  5681 ;;  set             2   11[BANK3 ] int 
  5682 ;;  dutyCycle6      2    4[BANK3 ] unsigned int 
  5683 ;;  currentTempe    2   37[BANK1 ] int 
  5684 ;;  pidPeriodCou    2   35[BANK1 ] int 
  5685 ;;  lastTemperat    2   33[BANK1 ] int 
  5686 ;;  dutyCycle7      2   29[BANK1 ] unsigned int 
  5687 ;;  output          2   25[BANK1 ] int 
  5688 ;;  bCount          2   77[BANK0 ] unsigned int 
  5689 ;;  delayCount      1   13[BANK3 ] unsigned char 
  5690 ;;  j               1   10[BANK3 ] unsigned char 
  5691 ;;  outputIndex     1   39[BANK1 ] unsigned char 
  5692 ;;  loop            1   32[BANK1 ] unsigned char 
  5693 ;;  menuDelay       1   31[BANK1 ] unsigned char 
  5694 ;;  lidOpenCount    1   28[BANK1 ] unsigned char 
  5695 ;;  holdOutput      1   27[BANK1 ] unsigned char 
  5696 ;;  tPadCount       1   24[BANK1 ] unsigned char 
  5697 ;;  resetDelay      1   23[BANK1 ] unsigned char 
  5698 ;;  startDelay      1   22[BANK1 ] unsigned char 
  5699 ;;  C_or_F          1   21[BANK1 ] unsigned char 
  5700 ;;  choice          1   20[BANK1 ] unsigned char 
  5701 ;;  x               1   79[BANK0 ] unsigned char 
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      void 
  5704 ;; Registers used:
  5705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5706 ;; Tracked objects:
  5707 ;;		On entry : B1F/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Locals:         0       3      20      80      14       0       0       0       0       0       0       0       
      +0       0
  5713 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;      Totals:         0       3      30      80      14       0       0       0       0       0       0       0       
      +0       0
  5715 ;;Total ram usage:      127 bytes
  5716 ;; Hardware stack levels required when called:    5
  5717 ;; This function calls:
  5718 ;;		_LCD_Clear
  5719 ;;		_LCD_Set_Cursor
  5720 ;;		_LCD_Write_Char
  5721 ;;		_LCD_Write_Int
  5722 ;;		_LCD_Write_String
  5723 ;;		_PID_Calculate
  5724 ;;		_PWM7_LoadDutyValue
  5725 ;;		_SYSTEM_Initialize
  5726 ;;		___aldiv
  5727 ;;		___fttol
  5728 ;;		_readAnalog
  5729 ;;		_tempCalc
  5730 ;; This function is called by:
  5731 ;;		Startup code after reset
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _main
  5737  0481                     _main:	
  5738                           
  5739                           ;main.c: 29: SYSTEM_Initialize();
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5743  0481  318A  2225  3184   	fcall	_SYSTEM_Initialize
  5744                           
  5745                           ;main.c: 31: uint16_t analogs[2] = {0};
  5746  0484  0023               	movlb	3	; select bank3
  5747  0485  084C               	movf	(main@F13660+3)^(0+384),w
  5748  0486  00BF               	movwf	(main@analogs+3)^(0+384)
  5749  0487  084B               	movf	(main@F13660+2)^(0+384),w
  5750  0488  00BE               	movwf	(main@analogs+2)^(0+384)
  5751  0489  084A               	movf	(main@F13660+1)^(0+384),w
  5752  048A  00BD               	movwf	(main@analogs+1)^(0+384)
  5753  048B  0849               	movf	main@F13660^(0+384),w
  5754  048C  00BC               	movwf	main@analogs^(0+384)
  5755                           
  5756                           ;main.c: 33: int set = 2250;
  5757  048D  30CA               	movlw	202
  5758  048E  00C1               	movwf	main@set^(0+384)
  5759  048F  3008               	movlw	8
  5760  0490  00C2               	movwf	(main@set^(0+384)+1)
  5761                           
  5762                           ;main.c: 35: char menuDelay = 0;
  5763  0491  0021               	movlb	1	; select bank1
  5764  0492  01BF               	clrf	main@menuDelay^(0+128)
  5765                           
  5766                           ;main.c: 37: char delayCount = 0;
  5767  0493  0023               	movlb	3	; select bank3
  5768  0494  01C3               	clrf	main@delayCount^(0+384)
  5769                           
  5770                           ;main.c: 39: int output = 0;
  5771  0495  0021               	movlb	1	; select bank1
  5772  0496  01B9               	clrf	main@output^(0+128)
  5773  0497  01BA               	clrf	(main@output+1)^(0+128)
  5774                           
  5775                           ;main.c: 41: int32_t outputTotal = 0;
  5776  0498  3000               	movlw	0
  5777  0499  0023               	movlb	3	; select bank3
  5778  049A  00B9               	movwf	(main@outputTotal+3)^(0+384)
  5779  049B  3000               	movlw	0
  5780  049C  00B8               	movwf	(main@outputTotal+2)^(0+384)
  5781  049D  3000               	movlw	0
  5782  049E  00B7               	movwf	(main@outputTotal+1)^(0+384)
  5783  049F  3000               	movlw	0
  5784  04A0  00B6               	movwf	main@outputTotal^(0+384)
  5785                           
  5786                           ;main.c: 43: char outputIndex = 0;
  5787  04A1  0021               	movlb	1	; select bank1
  5788  04A2  01C7               	clrf	main@outputIndex^(0+128)
  5789                           
  5790                           ;main.c: 45: int16_t outputSamples[40]= {0};
  5791  04A3  3020               	movlw	low main@F13668
  5792  04A4  0086               	movwf	6
  5793  04A5  3002               	movlw	high main@F13668
  5794  04A6  0087               	movwf	7
  5795  04A7  3020               	movlw	low main@outputSamples
  5796  04A8  0084               	movwf	4
  5797  04A9  3001               	movlw	high main@outputSamples
  5798  04AA  0085               	movwf	5
  5799  04AB  3050               	movlw	80
  5800  04AC  00AA               	movwf	??_main^(0+128)
  5801  04AD                     u3170:	
  5802  04AD  0016               	moviw fsr1++
  5803  04AE  001A               	movwi fsr0++
  5804  04AF  0BAA               	decfsz	??_main^(0+128),f
  5805  04B0  2CAD               	goto	u3170
  5806                           
  5807                           ;main.c: 47: char holdOutput = 0;
  5808  04B1  01BB               	clrf	main@holdOutput^(0+128)
  5809                           
  5810                           ;main.c: 49: int currentTemperature = 750;
  5811  04B2  30EE               	movlw	238
  5812  04B3  00C5               	movwf	main@currentTemperature^(0+128)
  5813  04B4  3002               	movlw	2
  5814  04B5  00C6               	movwf	(main@currentTemperature^(0+128)+1)
  5815                           
  5816                           ;main.c: 51: int lastTemperature = 750;
  5817  04B6  30EE               	movlw	238
  5818  04B7  00C1               	movwf	main@lastTemperature^(0+128)
  5819  04B8  3002               	movlw	2
  5820  04B9  00C2               	movwf	(main@lastTemperature^(0+128)+1)
  5821                           
  5822                           ;main.c: 53: char lidOpenCount = 0;
  5823  04BA  01BC               	clrf	main@lidOpenCount^(0+128)
  5824                           
  5825                           ;main.c: 55: float displayTemp, displayTemp2;
  5826                           ;main.c: 57: char j = 0;
  5827  04BB  0023               	movlb	3	; select bank3
  5828  04BC  01C0               	clrf	main@j^(0+384)
  5829                           
  5830                           ;main.c: 59: char x = 0;
  5831  04BD  0020               	movlb	0	; select bank0
  5832  04BE  01EF               	clrf	main@x
  5833                           
  5834                           ;main.c: 61: int pidPeriodCounter = 0;
  5835  04BF  0021               	movlb	1	; select bank1
  5836  04C0  01C3               	clrf	main@pidPeriodCounter^(0+128)
  5837  04C1  01C4               	clrf	(main@pidPeriodCounter+1)^(0+128)
  5838                           
  5839                           ;main.c: 63: extern int pidMaxOutput;
  5840                           ;main.c: 65: unsigned char loop = 64;
  5841  04C2  3040               	movlw	64
  5842  04C3  00AA               	movwf	??_main^(0+128)
  5843  04C4  082A               	movf	??_main^(0+128),w
  5844  04C5  00C0               	movwf	main@loop^(0+128)
  5845                           
  5846                           ;main.c: 67: char choice = 2;
  5847  04C6  3002               	movlw	2
  5848  04C7  00AA               	movwf	??_main^(0+128)
  5849  04C8  082A               	movf	??_main^(0+128),w
  5850  04C9  00B4               	movwf	main@choice^(0+128)
  5851                           
  5852                           ;main.c: 69: char C_or_F = 1;
  5853  04CA  01B5               	clrf	main@C_or_F^(0+128)
  5854  04CB  0AB5               	incf	main@C_or_F^(0+128),f
  5855                           
  5856                           ;main.c: 71: unsigned int bCount = 0;
  5857  04CC  0020               	movlb	0	; select bank0
  5858  04CD  01ED               	clrf	main@bCount
  5859  04CE  01EE               	clrf	main@bCount+1
  5860                           
  5861                           ;main.c: 73: unsigned char startDelay = 0;
  5862  04CF  0021               	movlb	1	; select bank1
  5863  04D0  01B6               	clrf	main@startDelay^(0+128)
  5864                           
  5865                           ;main.c: 75: unsigned char resetDelay = 0;
  5866  04D1  01B7               	clrf	main@resetDelay^(0+128)
  5867                           
  5868                           ;main.c: 77: unsigned char tPadCount = 10;
  5869  04D2  300A               	movlw	10
  5870  04D3  00AA               	movwf	??_main^(0+128)
  5871  04D4  082A               	movf	??_main^(0+128),w
  5872  04D5  00B8               	movwf	main@tPadCount^(0+128)
  5873                           
  5874                           ;main.c: 80: uint16_t dutyCycle6 = 0;
  5875  04D6  0023               	movlb	3	; select bank3
  5876  04D7  01BA               	clrf	main@dutyCycle6^(0+384)
  5877  04D8  01BB               	clrf	(main@dutyCycle6+1)^(0+384)
  5878                           
  5879                           ;main.c: 82: uint16_t dutyCycle7 = 523;
  5880  04D9  300B               	movlw	11
  5881  04DA  0021               	movlb	1	; select bank1
  5882  04DB  00BD               	movwf	main@dutyCycle7^(0+128)
  5883  04DC  3002               	movlw	2
  5884  04DD  00BE               	movwf	(main@dutyCycle7^(0+128)+1)
  5885                           
  5886                           ;main.c: 86: PWM7_LoadDutyValue(dutyCycle7);
  5887  04DE  083E               	movf	(main@dutyCycle7+1)^(0+128),w
  5888  04DF  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  5889  04E0  083D               	movf	main@dutyCycle7^(0+128),w
  5890  04E1  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  5891  04E2  3188  201C  3184   	fcall	_PWM7_LoadDutyValue
  5892                           
  5893                           ;main.c: 88: _delay((unsigned long)((300)*(32000000/4000.0)));
  5894  04E5  300D               	movlw	13
  5895  04E6  0021               	movlb	1	; select bank1
  5896  04E7  00AC               	movwf	(??_main^(0+128)+2)
  5897  04E8  302D               	movlw	45
  5898  04E9  00AB               	movwf	(??_main^(0+128)+1)
  5899  04EA  30E2               	movlw	226
  5900  04EB  00AA               	movwf	??_main^(0+128)
  5901  04EC                     u3417:	
  5902  04EC  0BAA               	decfsz	??_main^(0+128),f
  5903  04ED  2CEC               	goto	u3417
  5904  04EE  0BAB               	decfsz	(??_main^(0+128)+1),f
  5905  04EF  2CEC               	goto	u3417
  5906  04F0  0BAC               	decfsz	(??_main^(0+128)+2),f
  5907  04F1  2CEC               	goto	u3417
  5908  04F2  3200               	nop2
  5909                           
  5910                           ;main.c: 90: LCD_Clear();
  5911  04F3  3188  2000  3184   	fcall	_LCD_Clear
  5912  04F6                     l2827:	
  5913                           ;main.c: 93: while (1)
  5914                           
  5915                           
  5916                           ;main.c: 94: {
  5917                           ;main.c: 95: if(loop>253)
  5918  04F6  30FE               	movlw	254
  5919  04F7  0021               	movlb	1	; select bank1
  5920  04F8  0240               	subwf	main@loop^(0+128),w
  5921  04F9  1C03               	skipc
  5922  04FA  2E70               	goto	l2895
  5923                           
  5924                           ;main.c: 96: {
  5925                           ;main.c: 97: PWM7_LoadDutyValue(dutyCycle7);
  5926  04FB  083E               	movf	(main@dutyCycle7+1)^(0+128),w
  5927  04FC  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  5928  04FD  083D               	movf	main@dutyCycle7^(0+128),w
  5929  04FE  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  5930  04FF  3188  201C  3184   	fcall	_PWM7_LoadDutyValue
  5931                           
  5932                           ;main.c: 99: { LCD_Set_Cursor(0,0); LCD_Write_String("Pit:");};
  5933  0502  01F4               	clrf	LCD_Set_Cursor@y
  5934  0503  3000               	movlw	0
  5935  0504  3189  21E6  3184   	fcall	_LCD_Set_Cursor
  5936  0507  3023               	movlw	low (STR_1| (0+32768))
  5937  0508  00F5               	movwf	LCD_Write_String@a
  5938  0509  3090               	movlw	high (STR_1| (0+32768))
  5939  050A  00F6               	movwf	LCD_Write_String@a+1
  5940  050B  3188  2060  3184   	fcall	_LCD_Write_String
  5941                           
  5942                           ;main.c: 100: { LCD_Set_Cursor(5,0); LCD_Write_Int(analogs[1],-1, 1, 0);};
  5943  050E  01F4               	clrf	LCD_Set_Cursor@y
  5944  050F  3005               	movlw	5
  5945  0510  3189  21E6  3184   	fcall	_LCD_Set_Cursor
  5946  0513  0023               	movlb	3	; select bank3
  5947  0514  083F               	movf	((main@analogs+1)^(0+384)+2),w
  5948  0515  00FA               	movwf	LCD_Write_Int@value+1
  5949  0516  083E               	movf	(main@analogs^(0+384)+2),w
  5950  0517  00F9               	movwf	LCD_Write_Int@value
  5951  0518  01FB               	clrf	LCD_Write_Int@fieldLength
  5952  0519  03FB               	decf	LCD_Write_Int@fieldLength,f
  5953  051A  01FC               	clrf	LCD_Write_Int@numPlaces
  5954  051B  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5955  051C  01FD               	clrf	LCD_Write_Int@sign
  5956  051D  318F  2737  3184   	fcall	_LCD_Write_Int
  5957                           
  5958                           ;main.c: 101: LCD_Write_Char(0);
  5959  0520  3000               	movlw	0
  5960  0521  3189  2113  3184   	fcall	_LCD_Write_Char
  5961                           
  5962                           ;main.c: 102: LCD_Write_Char(70);
  5963  0524  3046               	movlw	70
  5964  0525  3189  2113  3184   	fcall	_LCD_Write_Char
  5965                           
  5966                           ;main.c: 103: LCD_Write_Char(' ');
  5967  0528  3020               	movlw	32
  5968  0529  3189  2113  3184   	fcall	_LCD_Write_Char
  5969                           
  5970                           ;main.c: 104: LCD_Write_Char(' ');
  5971  052C  3020               	movlw	32
  5972  052D  3189  2113  3184   	fcall	_LCD_Write_Char
  5973                           
  5974                           ;main.c: 106: { LCD_Set_Cursor(0,1); LCD_Write_String("Output:");};
  5975  0530  01F4               	clrf	LCD_Set_Cursor@y
  5976  0531  0AF4               	incf	LCD_Set_Cursor@y,f
  5977  0532  3000               	movlw	0
  5978  0533  3189  21E6  3184   	fcall	_LCD_Set_Cursor
  5979  0536  301B               	movlw	low (STR_2| (0+32768))
  5980  0537  00F5               	movwf	LCD_Write_String@a
  5981  0538  3090               	movlw	high (STR_2| (0+32768))
  5982  0539  00F6               	movwf	LCD_Write_String@a+1
  5983  053A  3188  2060  3184   	fcall	_LCD_Write_String
  5984                           
  5985                           ;main.c: 107: LCD_Write_Char(' ');
  5986  053D  3020               	movlw	32
  5987  053E  3189  2113  3184   	fcall	_LCD_Write_Char
  5988                           
  5989                           ;main.c: 108: LCD_Write_Int(dutyCycle6,5,0,0);
  5990  0541  0023               	movlb	3	; select bank3
  5991  0542  083B               	movf	(main@dutyCycle6+1)^(0+384),w
  5992  0543  00FA               	movwf	LCD_Write_Int@value+1
  5993  0544  083A               	movf	main@dutyCycle6^(0+384),w
  5994  0545  00F9               	movwf	LCD_Write_Int@value
  5995  0546  3005               	movlw	5
  5996  0547  0021               	movlb	1	; select bank1
  5997  0548  00AA               	movwf	??_main^(0+128)
  5998  0549  082A               	movf	??_main^(0+128),w
  5999  054A  00FB               	movwf	LCD_Write_Int@fieldLength
  6000  054B  01FC               	clrf	LCD_Write_Int@numPlaces
  6001  054C  01FD               	clrf	LCD_Write_Int@sign
  6002  054D  318F  2737  3184   	fcall	_LCD_Write_Int
  6003                           
  6004                           ;main.c: 113: if(holdOutput==0)
  6005  0550  0021               	movlb	1	; select bank1
  6006  0551  083B               	movf	main@holdOutput^(0+128),w
  6007  0552  1D03               	btfss	3,2
  6008  0553  2E0F               	goto	l2869
  6009                           
  6010                           ;main.c: 114: {
  6011                           ;main.c: 115: output = PID_Calculate(set,analogs[1]);
  6012  0554  0023               	movlb	3	; select bank3
  6013  0555  0842               	movf	(main@set+1)^(0+384),w
  6014  0556  00F7               	movwf	PID_Calculate@setpoint+1
  6015  0557  0841               	movf	main@set^(0+384),w
  6016  0558  00F6               	movwf	PID_Calculate@setpoint
  6017  0559  083F               	movf	((main@analogs+1)^(0+384)+2),w
  6018  055A  00F9               	movwf	PID_Calculate@temp+1
  6019  055B  083E               	movf	(main@analogs^(0+384)+2),w
  6020  055C  00F8               	movwf	PID_Calculate@temp
  6021  055D  3180  2054  3184   	fcall	_PID_Calculate
  6022  0560  0877               	movf	?_PID_Calculate+1,w
  6023  0561  0021               	movlb	1	; select bank1
  6024  0562  00BA               	movwf	(main@output+1)^(0+128)
  6025  0563  0876               	movf	?_PID_Calculate,w
  6026  0564  00B9               	movwf	main@output^(0+128)
  6027                           
  6028                           ;main.c: 116: outputTotal = outputTotal - outputSamples[outputIndex];
  6029  0565  0023               	movlb	3	; select bank3
  6030  0566  0836               	movf	main@outputTotal^(0+384),w
  6031  0567  0021               	movlb	1	; select bank1
  6032  0568  00AA               	movwf	??_main^(0+128)
  6033  0569  0023               	movlb	3	; select bank3
  6034  056A  0837               	movf	(main@outputTotal+1)^(0+384),w
  6035  056B  0021               	movlb	1	; select bank1
  6036  056C  00AB               	movwf	(??_main^(0+128)+1)
  6037  056D  0023               	movlb	3	; select bank3
  6038  056E  0838               	movf	(main@outputTotal+2)^(0+384),w
  6039  056F  0021               	movlb	1	; select bank1
  6040  0570  00AC               	movwf	(??_main^(0+128)+2)
  6041  0571  0023               	movlb	3	; select bank3
  6042  0572  0839               	movf	(main@outputTotal+3)^(0+384),w
  6043  0573  0021               	movlb	1	; select bank1
  6044  0574  00AD               	movwf	(??_main^(0+128)+3)
  6045  0575  3547               	lslf	main@outputIndex^(0+128),w
  6046  0576  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6047  0577  0086               	movwf	6
  6048  0578  3001               	movlw	1	; select bank2/3
  6049  0579  0087               	movwf	7
  6050  057A  3F40               	moviw [0]fsr1
  6051  057B  00AE               	movwf	(??_main+4)^(0+128)
  6052  057C  3F41               	moviw [1]fsr1
  6053  057D  00AF               	movwf	((??_main+4)^(0+128)+1)
  6054  057E  082E               	movf	(??_main+4)^(0+128),w
  6055  057F  00B0               	movwf	(??_main+6)^(0+128)
  6056  0580  082F               	movf	(??_main+5)^(0+128),w
  6057  0581  00B1               	movwf	((??_main+6)^(0+128)+1)
  6058  0582  3000               	movlw	0
  6059  0583  1BB1               	btfsc	((??_main+6)^(0+128)+1),7
  6060  0584  30FF               	movlw	255
  6061  0585  00B2               	movwf	((??_main+6)^(0+128)+2)
  6062  0586  00B3               	movwf	((??_main+6)^(0+128)+3)
  6063  0587  09B0               	comf	(??_main+6)^(0+128),f
  6064  0588  09B1               	comf	((??_main+6)^(0+128)+1),f
  6065  0589  09B2               	comf	((??_main+6)^(0+128)+2),f
  6066  058A  09B3               	comf	((??_main+6)^(0+128)+3),f
  6067  058B  0AB0               	incf	(??_main+6)^(0+128),f
  6068  058C  1903               	skipnz
  6069  058D  0AB1               	incf	((??_main+6)^(0+128)+1),f
  6070  058E  1903               	skipnz
  6071  058F  0AB2               	incf	((??_main+6)^(0+128)+2),f
  6072  0590  1903               	skipnz
  6073  0591  0AB3               	incf	((??_main+6)^(0+128)+3),f
  6074  0592  0830               	movf	(??_main+6)^(0+128),w
  6075  0593  07AA               	addwf	??_main^(0+128),f
  6076  0594  0831               	movf	(??_main+7)^(0+128),w
  6077  0595  3DAB               	addwfc	(??_main^(0+128)+1),f
  6078  0596  0832               	movf	(??_main+8)^(0+128),w
  6079  0597  3DAC               	addwfc	(??_main^(0+128)+2),f
  6080  0598  0833               	movf	(??_main+9)^(0+128),w
  6081  0599  3DAD               	addwfc	(??_main^(0+128)+3),f
  6082  059A  082D               	movf	(??_main+3)^(0+128),w
  6083  059B  0023               	movlb	3	; select bank3
  6084  059C  00B9               	movwf	(main@outputTotal+3)^(0+384)
  6085  059D  0021               	movlb	1	; select bank1
  6086  059E  082C               	movf	(??_main+2)^(0+128),w
  6087  059F  0023               	movlb	3	; select bank3
  6088  05A0  00B8               	movwf	(main@outputTotal+2)^(0+384)
  6089  05A1  0021               	movlb	1	; select bank1
  6090  05A2  082B               	movf	(??_main+1)^(0+128),w
  6091  05A3  0023               	movlb	3	; select bank3
  6092  05A4  00B7               	movwf	(main@outputTotal+1)^(0+384)
  6093  05A5  0021               	movlb	1	; select bank1
  6094  05A6  082A               	movf	??_main^(0+128),w
  6095  05A7  0023               	movlb	3	; select bank3
  6096  05A8  00B6               	movwf	main@outputTotal^(0+384)
  6097                           
  6098                           ;main.c: 117: outputSamples[outputIndex] = output;
  6099  05A9  0021               	movlb	1	; select bank1
  6100  05AA  3547               	lslf	main@outputIndex^(0+128),w
  6101  05AB  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6102  05AC  0086               	movwf	6
  6103  05AD  3001               	movlw	1	; select bank2/3
  6104  05AE  0087               	movwf	7
  6105  05AF  0839               	movf	main@output^(0+128),w
  6106  05B0  3FC0               	movwi [0]fsr1
  6107  05B1  083A               	movf	(main@output+1)^(0+128),w
  6108  05B2  3FC1               	movwi [1]fsr1
  6109                           
  6110                           ;main.c: 118: outputTotal = outputTotal + outputSamples[outputIndex];
  6111  05B3  0023               	movlb	3	; select bank3
  6112  05B4  0836               	movf	main@outputTotal^(0+384),w
  6113  05B5  0021               	movlb	1	; select bank1
  6114  05B6  00AA               	movwf	??_main^(0+128)
  6115  05B7  0023               	movlb	3	; select bank3
  6116  05B8  0837               	movf	(main@outputTotal+1)^(0+384),w
  6117  05B9  0021               	movlb	1	; select bank1
  6118  05BA  00AB               	movwf	(??_main^(0+128)+1)
  6119  05BB  0023               	movlb	3	; select bank3
  6120  05BC  0838               	movf	(main@outputTotal+2)^(0+384),w
  6121  05BD  0021               	movlb	1	; select bank1
  6122  05BE  00AC               	movwf	(??_main^(0+128)+2)
  6123  05BF  0023               	movlb	3	; select bank3
  6124  05C0  0839               	movf	(main@outputTotal+3)^(0+384),w
  6125  05C1  0021               	movlb	1	; select bank1
  6126  05C2  00AD               	movwf	(??_main^(0+128)+3)
  6127  05C3  3547               	lslf	main@outputIndex^(0+128),w
  6128  05C4  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6129  05C5  0086               	movwf	6
  6130  05C6  3001               	movlw	1	; select bank2/3
  6131  05C7  0087               	movwf	7
  6132  05C8  3F40               	moviw [0]fsr1
  6133  05C9  00AE               	movwf	(??_main+4)^(0+128)
  6134  05CA  3F41               	moviw [1]fsr1
  6135  05CB  00AF               	movwf	((??_main+4)^(0+128)+1)
  6136  05CC  082E               	movf	(??_main+4)^(0+128),w
  6137  05CD  00B0               	movwf	(??_main+6)^(0+128)
  6138  05CE  082F               	movf	(??_main+5)^(0+128),w
  6139  05CF  00B1               	movwf	((??_main+6)^(0+128)+1)
  6140  05D0  3000               	movlw	0
  6141  05D1  1BB1               	btfsc	((??_main+6)^(0+128)+1),7
  6142  05D2  30FF               	movlw	255
  6143  05D3  00B2               	movwf	((??_main+6)^(0+128)+2)
  6144  05D4  00B3               	movwf	((??_main+6)^(0+128)+3)
  6145  05D5  0830               	movf	(??_main+6)^(0+128),w
  6146  05D6  07AA               	addwf	??_main^(0+128),f
  6147  05D7  0831               	movf	(??_main+7)^(0+128),w
  6148  05D8  3DAB               	addwfc	(??_main^(0+128)+1),f
  6149  05D9  0832               	movf	(??_main+8)^(0+128),w
  6150  05DA  3DAC               	addwfc	(??_main^(0+128)+2),f
  6151  05DB  0833               	movf	(??_main+9)^(0+128),w
  6152  05DC  3DAD               	addwfc	(??_main^(0+128)+3),f
  6153  05DD  082D               	movf	(??_main+3)^(0+128),w
  6154  05DE  0023               	movlb	3	; select bank3
  6155  05DF  00B9               	movwf	(main@outputTotal+3)^(0+384)
  6156  05E0  0021               	movlb	1	; select bank1
  6157  05E1  082C               	movf	(??_main+2)^(0+128),w
  6158  05E2  0023               	movlb	3	; select bank3
  6159  05E3  00B8               	movwf	(main@outputTotal+2)^(0+384)
  6160  05E4  0021               	movlb	1	; select bank1
  6161  05E5  082B               	movf	(??_main+1)^(0+128),w
  6162  05E6  0023               	movlb	3	; select bank3
  6163  05E7  00B7               	movwf	(main@outputTotal+1)^(0+384)
  6164  05E8  0021               	movlb	1	; select bank1
  6165  05E9  082A               	movf	??_main^(0+128),w
  6166  05EA  0023               	movlb	3	; select bank3
  6167  05EB  00B6               	movwf	main@outputTotal^(0+384)
  6168                           
  6169                           ;main.c: 119: dutyCycle6 = outputTotal/40;
  6170  05EC  3000               	movlw	0
  6171  05ED  00F3               	movwf	___aldiv@divisor+3
  6172  05EE  3000               	movlw	0
  6173  05EF  00F2               	movwf	___aldiv@divisor+2
  6174  05F0  3000               	movlw	0
  6175  05F1  00F1               	movwf	___aldiv@divisor+1
  6176  05F2  3028               	movlw	40
  6177  05F3  00F0               	movwf	___aldiv@divisor
  6178  05F4  0839               	movf	(main@outputTotal+3)^(0+384),w
  6179  05F5  00F7               	movwf	___aldiv@dividend+3
  6180  05F6  0838               	movf	(main@outputTotal+2)^(0+384),w
  6181  05F7  00F6               	movwf	___aldiv@dividend+2
  6182  05F8  0837               	movf	(main@outputTotal+1)^(0+384),w
  6183  05F9  00F5               	movwf	___aldiv@dividend+1
  6184  05FA  0836               	movf	main@outputTotal^(0+384),w
  6185  05FB  00F4               	movwf	___aldiv@dividend
  6186  05FC  318B  237C  3184   	fcall	___aldiv
  6187  05FF  0871               	movf	?___aldiv+1,w
  6188  0600  0023               	movlb	3	; select bank3
  6189  0601  00BB               	movwf	(main@dutyCycle6+1)^(0+384)
  6190  0602  0870               	movf	?___aldiv,w
  6191  0603  00BA               	movwf	main@dutyCycle6^(0+384)
  6192                           
  6193                           ;main.c: 121: outputIndex+=1;
  6194  0604  3001               	movlw	1
  6195  0605  0021               	movlb	1	; select bank1
  6196  0606  00AA               	movwf	??_main^(0+128)
  6197  0607  082A               	movf	??_main^(0+128),w
  6198  0608  07C7               	addwf	main@outputIndex^(0+128),f
  6199                           
  6200                           ;main.c: 122: if(outputIndex >= 40)outputIndex = 0;
  6201  0609  3028               	movlw	40
  6202  060A  0247               	subwf	main@outputIndex^(0+128),w
  6203  060B  1C03               	skipc
  6204  060C  2E15               	goto	l2873
  6205  060D  01C7               	clrf	main@outputIndex^(0+128)
  6206                           
  6207                           ;main.c: 123: }
  6208  060E  2E15               	goto	l2873
  6209  060F                     l2869:	
  6210                           
  6211                           ;main.c: 124: else
  6212                           ;main.c: 125: {
  6213                           ;main.c: 126: dutyCycle6=0;
  6214  060F  0023               	movlb	3	; select bank3
  6215  0610  01BA               	clrf	main@dutyCycle6^(0+384)
  6216  0611  01BB               	clrf	(main@dutyCycle6+1)^(0+384)
  6217                           
  6218                           ;main.c: 127: holdOutput-=1;
  6219  0612  3001               	movlw	1
  6220  0613  0021               	movlb	1	; select bank1
  6221  0614  02BB               	subwf	main@holdOutput^(0+128),f
  6222  0615                     l2873:	
  6223                           
  6224                           ;main.c: 128: }
  6225                           ;main.c: 130: currentTemperature=analogs[1];
  6226  0615  0023               	movlb	3	; select bank3
  6227  0616  083F               	movf	((main@analogs+1)^(0+384)+2),w
  6228  0617  0021               	movlb	1	; select bank1
  6229  0618  00C6               	movwf	(main@currentTemperature+1)^(0+128)
  6230  0619  0023               	movlb	3	; select bank3
  6231  061A  083E               	movf	(main@analogs^(0+384)+2),w
  6232  061B  0021               	movlb	1	; select bank1
  6233  061C  00C5               	movwf	main@currentTemperature^(0+128)
  6234                           
  6235                           ;main.c: 132: if(lidOpenCount<10)
  6236  061D  300A               	movlw	10
  6237  061E  023C               	subwf	main@lidOpenCount^(0+128),w
  6238  061F  1803               	skipnc
  6239  0620  2E26               	goto	l2879
  6240                           
  6241                           ;main.c: 133: {
  6242                           ;main.c: 134: lidOpenCount+=1;
  6243  0621  3001               	movlw	1
  6244  0622  00AA               	movwf	??_main^(0+128)
  6245  0623  082A               	movf	??_main^(0+128),w
  6246  0624  07BC               	addwf	main@lidOpenCount^(0+128),f
  6247                           
  6248                           ;main.c: 135: }
  6249  0625  2E2B               	goto	l2883
  6250  0626                     l2879:	
  6251                           
  6252                           ;main.c: 136: else
  6253                           ;main.c: 137: {
  6254                           ;main.c: 138: lastTemperature=currentTemperature;
  6255  0626  0846               	movf	(main@currentTemperature+1)^(0+128),w
  6256  0627  00C2               	movwf	(main@lastTemperature+1)^(0+128)
  6257  0628  0845               	movf	main@currentTemperature^(0+128),w
  6258  0629  00C1               	movwf	main@lastTemperature^(0+128)
  6259                           
  6260                           ;main.c: 139: lidOpenCount=0;
  6261  062A  01BC               	clrf	main@lidOpenCount^(0+128)
  6262  062B                     l2883:	
  6263                           
  6264                           ;main.c: 140: }
  6265                           ;main.c: 142: if(lastTemperature-currentTemperature>10 || lastTemperature-currentTempera
      +                          ture<-10)
  6266  062B  0945               	comf	main@currentTemperature^(0+128),w
  6267  062C  00AA               	movwf	??_main^(0+128)
  6268  062D  0946               	comf	(main@currentTemperature+1)^(0+128),w
  6269  062E  00AB               	movwf	(??_main^(0+128)+1)
  6270  062F  0AAA               	incf	??_main^(0+128),f
  6271  0630  1903               	skipnz
  6272  0631  0AAB               	incf	(??_main^(0+128)+1),f
  6273  0632  0841               	movf	main@lastTemperature^(0+128),w
  6274  0633  072A               	addwf	??_main^(0+128),w
  6275  0634  00AC               	movwf	(??_main+2)^(0+128)
  6276  0635  0842               	movf	(main@lastTemperature+1)^(0+128),w
  6277  0636  3D2B               	addwfc	(??_main+1)^(0+128),w
  6278  0637  00AD               	movwf	(??_main+3)^(0+128)
  6279  0638  082D               	movf	(??_main+3)^(0+128),w
  6280  0639  3A80               	xorlw	128
  6281  063A  00AE               	movwf	(??_main+4)^(0+128)
  6282  063B  3080               	movlw	128
  6283  063C  022E               	subwf	(??_main+4)^(0+128),w
  6284  063D  1D03               	skipz
  6285  063E  2E41               	goto	u3225
  6286  063F  300B               	movlw	11
  6287  0640  022C               	subwf	(??_main+2)^(0+128),w
  6288  0641                     u3225:	
  6289  0641  1803               	skipnc
  6290  0642  2E5C               	goto	l2887
  6291  0643  0021               	movlb	1	; select bank1
  6292  0644  0945               	comf	main@currentTemperature^(0+128),w
  6293  0645  00AA               	movwf	??_main^(0+128)
  6294  0646  0946               	comf	(main@currentTemperature+1)^(0+128),w
  6295  0647  00AB               	movwf	(??_main^(0+128)+1)
  6296  0648  0AAA               	incf	??_main^(0+128),f
  6297  0649  1903               	skipnz
  6298  064A  0AAB               	incf	(??_main^(0+128)+1),f
  6299  064B  0841               	movf	main@lastTemperature^(0+128),w
  6300  064C  072A               	addwf	??_main^(0+128),w
  6301  064D  00AC               	movwf	(??_main+2)^(0+128)
  6302  064E  0842               	movf	(main@lastTemperature+1)^(0+128),w
  6303  064F  3D2B               	addwfc	(??_main+1)^(0+128),w
  6304  0650  00AD               	movwf	(??_main+3)^(0+128)
  6305  0651  082D               	movf	(??_main+3)^(0+128),w
  6306  0652  3A80               	xorlw	128
  6307  0653  00AE               	movwf	(??_main+4)^(0+128)
  6308  0654  307F               	movlw	127
  6309  0655  022E               	subwf	(??_main+4)^(0+128),w
  6310  0656  1D03               	skipz
  6311  0657  2E5A               	goto	u3235
  6312  0658  30F6               	movlw	246
  6313  0659  022C               	subwf	(??_main+2)^(0+128),w
  6314  065A                     u3235:	
  6315  065A  1803               	skipnc
  6316  065B  2E64               	goto	l2891
  6317  065C                     l2887:	
  6318                           
  6319                           ;main.c: 143: {
  6320                           ;main.c: 144: dutyCycle6=0;
  6321  065C  0023               	movlb	3	; select bank3
  6322  065D  01BA               	clrf	main@dutyCycle6^(0+384)
  6323  065E  01BB               	clrf	(main@dutyCycle6+1)^(0+384)
  6324                           
  6325                           ;main.c: 145: holdOutput=60;
  6326  065F  303C               	movlw	60
  6327  0660  0021               	movlb	1	; select bank1
  6328  0661  00AA               	movwf	??_main^(0+128)
  6329  0662  082A               	movf	??_main^(0+128),w
  6330  0663  00BB               	movwf	main@holdOutput^(0+128)
  6331  0664                     l2891:	
  6332                           
  6333                           ;main.c: 146: }
  6334                           ;main.c: 148: if(dutyCycle6<50)dutyCycle6=0;
  6335  0664  3000               	movlw	0
  6336  0665  0023               	movlb	3	; select bank3
  6337  0666  023B               	subwf	(main@dutyCycle6+1)^(0+384),w
  6338  0667  3032               	movlw	50
  6339  0668  1903               	skipnz
  6340  0669  023A               	subwf	main@dutyCycle6^(0+384),w
  6341  066A  1803               	skipnc
  6342  066B  2E6E               	goto	l346
  6343  066C  01BA               	clrf	main@dutyCycle6^(0+384)
  6344  066D  01BB               	clrf	(main@dutyCycle6+1)^(0+384)
  6345  066E                     l346:	
  6346                           
  6347                           ;main.c: 150: loop=0;
  6348  066E  0021               	movlb	1	; select bank1
  6349  066F  01C0               	clrf	main@loop^(0+128)
  6350  0670                     l2895:	
  6351                           
  6352                           ;main.c: 151: }
  6353                           ;main.c: 153: pidPeriodCounter+=1;
  6354  0670  3001               	movlw	1
  6355  0671  07C3               	addwf	main@pidPeriodCounter^(0+128),f
  6356  0672  3000               	movlw	0
  6357  0673  3DC4               	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  6358                           
  6359                           ;main.c: 155: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  6360  0674  0023               	movlb	3	; select bank3
  6361  0675  0835               	movf	(_pidMaxOutput+1)^(0+384),w
  6362  0676  3A80               	xorlw	128
  6363  0677  0021               	movlb	1	; select bank1
  6364  0678  00AA               	movwf	??_main^(0+128)
  6365  0679  0844               	movf	(main@pidPeriodCounter+1)^(0+128),w
  6366  067A  3A80               	xorlw	128
  6367  067B  022A               	subwf	??_main^(0+128),w
  6368  067C  1D03               	skipz
  6369  067D  2E81               	goto	u3255
  6370  067E  0843               	movf	main@pidPeriodCounter^(0+128),w
  6371  067F  0023               	movlb	3	; select bank3
  6372  0680  0234               	subwf	_pidMaxOutput^(0+384),w
  6373  0681                     u3255:	
  6374  0681  1803               	skipnc
  6375  0682  2E86               	goto	l2901
  6376  0683  0021               	movlb	1	; select bank1
  6377  0684  01C3               	clrf	main@pidPeriodCounter^(0+128)
  6378  0685  01C4               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6379  0686                     l2901:	
  6380                           
  6381                           ;main.c: 157: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  6382  0686  0023               	movlb	3	; select bank3
  6383  0687  083B               	movf	(main@dutyCycle6+1)^(0+384),w
  6384  0688  0021               	movlb	1	; select bank1
  6385  0689  0244               	subwf	(main@pidPeriodCounter+1)^(0+128),w
  6386  068A  1D03               	skipz
  6387  068B  2E90               	goto	u3265
  6388  068C  0023               	movlb	3	; select bank3
  6389  068D  083A               	movf	main@dutyCycle6^(0+384),w
  6390  068E  0021               	movlb	1	; select bank1
  6391  068F  0243               	subwf	main@pidPeriodCounter^(0+128),w
  6392  0690                     u3265:	
  6393  0690  1803               	skipnc
  6394  0691  2E95               	goto	l348
  6395  0692  0020               	movlb	0	; select bank0
  6396  0693  1518               	bsf	24,2	;volatile
  6397  0694  2E97               	goto	l2905
  6398  0695                     l348:	
  6399                           
  6400                           ;main.c: 158: else LATC2=0;
  6401  0695  0020               	movlb	0	; select bank0
  6402  0696  1118               	bcf	24,2	;volatile
  6403  0697                     l2905:	
  6404                           
  6405                           ;main.c: 160: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  6406  0697  0023               	movlb	3	; select bank3
  6407  0698  01C0               	clrf	main@j^(0+384)
  6408  0699  3002               	movlw	2
  6409  069A  0240               	subwf	main@j^(0+384),w
  6410  069B  1803               	btfsc	3,0
  6411  069C  2EC0               	goto	l2917
  6412  069D                     l2911:	
  6413  069D  0840               	movf	main@j^(0+384),w
  6414  069E  0021               	movlb	1	; select bank1
  6415  069F  00AA               	movwf	??_main^(0+128)
  6416  06A0  01AB               	clrf	(??_main^(0+128)+1)
  6417  06A1  082A               	movf	??_main^(0+128),w
  6418  06A2  0020               	movlb	0	; select bank0
  6419  06A3  00A6               	movwf	readAnalog@channel
  6420  06A4  0021               	movlb	1	; select bank1
  6421  06A5  082B               	movf	(??_main+1)^(0+128),w
  6422  06A6  0020               	movlb	0	; select bank0
  6423  06A7  00A7               	movwf	readAnalog@channel+1
  6424  06A8  3183  2344  3184   	fcall	_readAnalog
  6425  06AB  0023               	movlb	3	; select bank3
  6426  06AC  3540               	lslf	main@j^(0+384),w
  6427  06AD  3EBC               	addlw	(low (main@analogs| (0+256)))& (0+255)
  6428  06AE  0086               	movwf	6
  6429  06AF  3001               	movlw	1	; select bank3/4
  6430  06B0  0087               	movwf	7
  6431  06B1  0020               	movlb	0	; select bank0
  6432  06B2  0826               	movf	?_readAnalog,w
  6433  06B3  3FC0               	movwi [0]fsr1
  6434  06B4  0827               	movf	?_readAnalog+1,w
  6435  06B5  3FC1               	movwi [1]fsr1
  6436  06B6  3001               	movlw	1
  6437  06B7  0021               	movlb	1	; select bank1
  6438  06B8  00AA               	movwf	??_main^(0+128)
  6439  06B9  082A               	movf	??_main^(0+128),w
  6440  06BA  0023               	movlb	3	; select bank3
  6441  06BB  07C0               	addwf	main@j^(0+384),f
  6442  06BC  3002               	movlw	2
  6443  06BD  0240               	subwf	main@j^(0+384),w
  6444  06BE  1C03               	skipc
  6445  06BF  2E9D               	goto	l2911
  6446  06C0                     l2917:	
  6447                           
  6448                           ;main.c: 162: analogs[0]=tempCalc(analogs[0]);
  6449  06C0  083D               	movf	(main@analogs+1)^(0+384),w
  6450  06C1  0020               	movlb	0	; select bank0
  6451  06C2  00DE               	movwf	tempCalc@analogValue+1
  6452  06C3  0023               	movlb	3	; select bank3
  6453  06C4  083C               	movf	main@analogs^(0+384),w
  6454  06C5  0020               	movlb	0	; select bank0
  6455  06C6  00DD               	movwf	tempCalc@analogValue
  6456  06C7  3182  222F  3184   	fcall	_tempCalc
  6457  06CA  0020               	movlb	0	; select bank0
  6458  06CB  085D               	movf	?_tempCalc,w
  6459  06CC  00E9               	movwf	___fttol@f1
  6460  06CD  085E               	movf	?_tempCalc+1,w
  6461  06CE  00EA               	movwf	___fttol@f1+1
  6462  06CF  085F               	movf	?_tempCalc+2,w
  6463  06D0  00EB               	movwf	___fttol@f1+2
  6464  06D1  318C  2485  3184   	fcall	___fttol
  6465  06D4  0020               	movlb	0	; select bank0
  6466  06D5  086A               	movf	?___fttol+1,w
  6467  06D6  0023               	movlb	3	; select bank3
  6468  06D7  00BD               	movwf	(main@analogs+1)^(0+384)
  6469  06D8  0020               	movlb	0	; select bank0
  6470  06D9  0869               	movf	?___fttol,w
  6471  06DA  0023               	movlb	3	; select bank3
  6472  06DB  00BC               	movwf	main@analogs^(0+384)
  6473                           
  6474                           ;main.c: 164: analogs[1]=tempCalc(analogs[1]);
  6475  06DC  083F               	movf	((main@analogs+1)^(0+384)+2),w
  6476  06DD  0020               	movlb	0	; select bank0
  6477  06DE  00DE               	movwf	tempCalc@analogValue+1
  6478  06DF  0023               	movlb	3	; select bank3
  6479  06E0  083E               	movf	(main@analogs^(0+384)+2),w
  6480  06E1  0020               	movlb	0	; select bank0
  6481  06E2  00DD               	movwf	tempCalc@analogValue
  6482  06E3  3182  222F  3184   	fcall	_tempCalc
  6483  06E6  0020               	movlb	0	; select bank0
  6484  06E7  085D               	movf	?_tempCalc,w
  6485  06E8  00E9               	movwf	___fttol@f1
  6486  06E9  085E               	movf	?_tempCalc+1,w
  6487  06EA  00EA               	movwf	___fttol@f1+1
  6488  06EB  085F               	movf	?_tempCalc+2,w
  6489  06EC  00EB               	movwf	___fttol@f1+2
  6490  06ED  318C  2485  3184   	fcall	___fttol
  6491  06F0  0020               	movlb	0	; select bank0
  6492  06F1  086A               	movf	?___fttol+1,w
  6493  06F2  0023               	movlb	3	; select bank3
  6494  06F3  00BF               	movwf	((main@analogs+1)^(0+384)+2)
  6495  06F4  0020               	movlb	0	; select bank0
  6496  06F5  0869               	movf	?___fttol,w
  6497  06F6  0023               	movlb	3	; select bank3
  6498  06F7  00BE               	movwf	(main@analogs^(0+384)+2)
  6499                           
  6500                           ;main.c: 171: if(RB0==1)
  6501  06F8  0020               	movlb	0	; select bank0
  6502  06F9  1C0D               	btfss	13,0	;volatile
  6503  06FA  2F4C               	goto	l2941
  6504                           
  6505                           ;main.c: 172: {
  6506                           ;main.c: 173: delayCount+=2;
  6507  06FB  3002               	movlw	2
  6508  06FC  0021               	movlb	1	; select bank1
  6509  06FD  00AA               	movwf	??_main^(0+128)
  6510  06FE  082A               	movf	??_main^(0+128),w
  6511  06FF  0023               	movlb	3	; select bank3
  6512  0700  07C3               	addwf	main@delayCount^(0+384),f
  6513                           
  6514                           ;main.c: 174: set+=1;
  6515  0701  3001               	movlw	1
  6516  0702  07C1               	addwf	main@set^(0+384),f
  6517  0703  3000               	movlw	0
  6518  0704  3DC2               	addwfc	(main@set+1)^(0+384),f
  6519                           
  6520                           ;main.c: 175: if(set>2750)set=2750;
  6521  0705  0842               	movf	(main@set+1)^(0+384),w
  6522  0706  3A80               	xorlw	128
  6523  0707  0021               	movlb	1	; select bank1
  6524  0708  00AA               	movwf	??_main^(0+128)
  6525  0709  308A               	movlw	138
  6526  070A  022A               	subwf	??_main^(0+128),w
  6527  070B  1D03               	skipz
  6528  070C  2F10               	goto	u3305
  6529  070D  30BF               	movlw	191
  6530  070E  0023               	movlb	3	; select bank3
  6531  070F  0241               	subwf	main@set^(0+384),w
  6532  0710                     u3305:	
  6533  0710  1C03               	skipc
  6534  0711  2F17               	goto	l2929
  6535  0712  30BE               	movlw	190
  6536  0713  0023               	movlb	3	; select bank3
  6537  0714  00C1               	movwf	main@set^(0+384)
  6538  0715  300A               	movlw	10
  6539  0716  00C2               	movwf	(main@set^(0+384)+1)
  6540  0717                     l2929:	
  6541                           
  6542                           ;main.c: 176: { LCD_Set_Cursor(5,0); LCD_Write_Int(set,-1, 1, 0);};
  6543  0717  01F4               	clrf	LCD_Set_Cursor@y
  6544  0718  3005               	movlw	5
  6545  0719  3189  21E6  3184   	fcall	_LCD_Set_Cursor
  6546  071C  0023               	movlb	3	; select bank3
  6547  071D  0842               	movf	(main@set+1)^(0+384),w
  6548  071E  00FA               	movwf	LCD_Write_Int@value+1
  6549  071F  0841               	movf	main@set^(0+384),w
  6550  0720  00F9               	movwf	LCD_Write_Int@value
  6551  0721  01FB               	clrf	LCD_Write_Int@fieldLength
  6552  0722  03FB               	decf	LCD_Write_Int@fieldLength,f
  6553  0723  01FC               	clrf	LCD_Write_Int@numPlaces
  6554  0724  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6555  0725  01FD               	clrf	LCD_Write_Int@sign
  6556  0726  318F  2737  3184   	fcall	_LCD_Write_Int
  6557                           
  6558                           ;main.c: 177: menuDelay=255;
  6559  0729  30FF               	movlw	255
  6560  072A  0021               	movlb	1	; select bank1
  6561  072B  00AA               	movwf	??_main^(0+128)
  6562  072C  082A               	movf	??_main^(0+128),w
  6563  072D  00BF               	movwf	main@menuDelay^(0+128)
  6564                           
  6565                           ;main.c: 178: if(delayCount<30)
  6566  072E  301E               	movlw	30
  6567  072F  0023               	movlb	3	; select bank3
  6568  0730  0243               	subwf	main@delayCount^(0+384),w
  6569  0731  1803               	skipnc
  6570  0732  2F41               	goto	l354
  6571                           
  6572                           ;main.c: 179: {
  6573                           ;main.c: 180: _delay((unsigned long)((150)*(32000000/4000.0)));
  6574  0733  3007               	movlw	7
  6575  0734  0021               	movlb	1	; select bank1
  6576  0735  00AC               	movwf	(??_main^(0+128)+2)
  6577  0736  3017               	movlw	23
  6578  0737  00AB               	movwf	(??_main^(0+128)+1)
  6579  0738  306F               	movlw	111
  6580  0739  00AA               	movwf	??_main^(0+128)
  6581  073A                     u3427:	
  6582  073A  0BAA               	decfsz	??_main^(0+128),f
  6583  073B  2F3A               	goto	u3427
  6584  073C  0BAB               	decfsz	(??_main^(0+128)+1),f
  6585  073D  2F3A               	goto	u3427
  6586  073E  0BAC               	decfsz	(??_main^(0+128)+2),f
  6587  073F  2F3A               	goto	u3427
  6588  0740  0000               	nop
  6589  0741                     l354:	
  6590                           
  6591                           ;main.c: 181: }
  6592                           ;main.c: 183: if(delayCount>(30+10))delayCount=(30+10);
  6593  0741  3029               	movlw	41
  6594  0742  0023               	movlb	3	; select bank3
  6595  0743  0243               	subwf	main@delayCount^(0+384),w
  6596  0744  1C03               	skipc
  6597  0745  2F4C               	goto	l2941
  6598  0746  3028               	movlw	40
  6599  0747  0021               	movlb	1	; select bank1
  6600  0748  00AA               	movwf	??_main^(0+128)
  6601  0749  082A               	movf	??_main^(0+128),w
  6602  074A  0023               	movlb	3	; select bank3
  6603  074B  00C3               	movwf	main@delayCount^(0+384)
  6604  074C                     l2941:	
  6605                           
  6606                           ;main.c: 184: }
  6607                           ;main.c: 186: if(RB1==1)
  6608  074C  0020               	movlb	0	; select bank0
  6609  074D  1C8D               	btfss	13,1	;volatile
  6610  074E  2FA0               	goto	l2963
  6611                           
  6612                           ;main.c: 187: {
  6613                           ;main.c: 188: delayCount+=2;
  6614  074F  3002               	movlw	2
  6615  0750  0021               	movlb	1	; select bank1
  6616  0751  00AA               	movwf	??_main^(0+128)
  6617  0752  082A               	movf	??_main^(0+128),w
  6618  0753  0023               	movlb	3	; select bank3
  6619  0754  07C3               	addwf	main@delayCount^(0+384),f
  6620                           
  6621                           ;main.c: 189: set-=1;
  6622  0755  30FF               	movlw	255
  6623  0756  07C1               	addwf	main@set^(0+384),f
  6624  0757  30FF               	movlw	255
  6625  0758  3DC2               	addwfc	(main@set+1)^(0+384),f
  6626                           
  6627                           ;main.c: 190: if(set<750)set=750;
  6628  0759  0842               	movf	(main@set+1)^(0+384),w
  6629  075A  3A80               	xorlw	128
  6630  075B  0021               	movlb	1	; select bank1
  6631  075C  00AA               	movwf	??_main^(0+128)
  6632  075D  3082               	movlw	130
  6633  075E  022A               	subwf	??_main^(0+128),w
  6634  075F  1D03               	skipz
  6635  0760  2F64               	goto	u3345
  6636  0761  30EE               	movlw	238
  6637  0762  0023               	movlb	3	; select bank3
  6638  0763  0241               	subwf	main@set^(0+384),w
  6639  0764                     u3345:	
  6640  0764  1803               	skipnc
  6641  0765  2F6B               	goto	l2951
  6642  0766  30EE               	movlw	238
  6643  0767  0023               	movlb	3	; select bank3
  6644  0768  00C1               	movwf	main@set^(0+384)
  6645  0769  3002               	movlw	2
  6646  076A  00C2               	movwf	(main@set^(0+384)+1)
  6647  076B                     l2951:	
  6648                           
  6649                           ;main.c: 191: { LCD_Set_Cursor(5,0); LCD_Write_Int(set,-1, 1, 0);};
  6650  076B  01F4               	clrf	LCD_Set_Cursor@y
  6651  076C  3005               	movlw	5
  6652  076D  3189  21E6  3184   	fcall	_LCD_Set_Cursor
  6653  0770  0023               	movlb	3	; select bank3
  6654  0771  0842               	movf	(main@set+1)^(0+384),w
  6655  0772  00FA               	movwf	LCD_Write_Int@value+1
  6656  0773  0841               	movf	main@set^(0+384),w
  6657  0774  00F9               	movwf	LCD_Write_Int@value
  6658  0775  01FB               	clrf	LCD_Write_Int@fieldLength
  6659  0776  03FB               	decf	LCD_Write_Int@fieldLength,f
  6660  0777  01FC               	clrf	LCD_Write_Int@numPlaces
  6661  0778  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6662  0779  01FD               	clrf	LCD_Write_Int@sign
  6663  077A  318F  2737  3184   	fcall	_LCD_Write_Int
  6664                           
  6665                           ;main.c: 192: menuDelay=255;
  6666  077D  30FF               	movlw	255
  6667  077E  0021               	movlb	1	; select bank1
  6668  077F  00AA               	movwf	??_main^(0+128)
  6669  0780  082A               	movf	??_main^(0+128),w
  6670  0781  00BF               	movwf	main@menuDelay^(0+128)
  6671                           
  6672                           ;main.c: 194: if(delayCount<30)
  6673  0782  301E               	movlw	30
  6674  0783  0023               	movlb	3	; select bank3
  6675  0784  0243               	subwf	main@delayCount^(0+384),w
  6676  0785  1803               	skipnc
  6677  0786  2F95               	goto	l358
  6678                           
  6679                           ;main.c: 195: {
  6680                           ;main.c: 196: _delay((unsigned long)((150)*(32000000/4000.0)));
  6681  0787  3007               	movlw	7
  6682  0788  0021               	movlb	1	; select bank1
  6683  0789  00AC               	movwf	(??_main^(0+128)+2)
  6684  078A  3017               	movlw	23
  6685  078B  00AB               	movwf	(??_main^(0+128)+1)
  6686  078C  306F               	movlw	111
  6687  078D  00AA               	movwf	??_main^(0+128)
  6688  078E                     u3437:	
  6689  078E  0BAA               	decfsz	??_main^(0+128),f
  6690  078F  2F8E               	goto	u3437
  6691  0790  0BAB               	decfsz	(??_main^(0+128)+1),f
  6692  0791  2F8E               	goto	u3437
  6693  0792  0BAC               	decfsz	(??_main^(0+128)+2),f
  6694  0793  2F8E               	goto	u3437
  6695  0794  0000               	nop
  6696  0795                     l358:	
  6697                           
  6698                           ;main.c: 197: }
  6699                           ;main.c: 199: if(delayCount>(30+10))delayCount=(30+10);
  6700  0795  3029               	movlw	41
  6701  0796  0023               	movlb	3	; select bank3
  6702  0797  0243               	subwf	main@delayCount^(0+384),w
  6703  0798  1C03               	skipc
  6704  0799  2FA0               	goto	l2963
  6705  079A  3028               	movlw	40
  6706  079B  0021               	movlb	1	; select bank1
  6707  079C  00AA               	movwf	??_main^(0+128)
  6708  079D  082A               	movf	??_main^(0+128),w
  6709  079E  0023               	movlb	3	; select bank3
  6710  079F  00C3               	movwf	main@delayCount^(0+384)
  6711  07A0                     l2963:	
  6712                           
  6713                           ;main.c: 200: }
  6714                           ;main.c: 202: if(delayCount>0)delayCount-=1;
  6715  07A0  0023               	movlb	3	; select bank3
  6716  07A1  0843               	movf	main@delayCount^(0+384),w
  6717  07A2  1903               	btfsc	3,2
  6718  07A3  2FA6               	goto	l2967
  6719  07A4  3001               	movlw	1
  6720  07A5  02C3               	subwf	main@delayCount^(0+384),f
  6721  07A6                     l2967:	
  6722                           
  6723                           ;main.c: 204: if(!(RB1 || RB0))
  6724  07A6  0020               	movlb	0	; select bank0
  6725  07A7  1C8D               	btfss	13,1	;volatile
  6726  07A8  180D               	btfsc	13,0	;volatile
  6727  07A9  2FB1               	goto	l2977
  6728                           
  6729                           ;main.c: 205: {
  6730                           ;main.c: 206: if(menuDelay>0)
  6731  07AA  0021               	movlb	1	; select bank1
  6732  07AB  083F               	movf	main@menuDelay^(0+128),w
  6733  07AC  1903               	btfsc	3,2
  6734  07AD  2FB1               	goto	l2977
  6735                           
  6736                           ;main.c: 207: {
  6737                           ;main.c: 208: loop=0;
  6738  07AE  01C0               	clrf	main@loop^(0+128)
  6739                           
  6740                           ;main.c: 209: menuDelay-=1;
  6741  07AF  3001               	movlw	1
  6742  07B0  02BF               	subwf	main@menuDelay^(0+128),f
  6743  07B1                     l2977:	
  6744                           
  6745                           ;main.c: 210: }
  6746                           ;main.c: 211: }
  6747                           ;main.c: 406: loop+=1;
  6748  07B1  3001               	movlw	1
  6749  07B2  0021               	movlb	1	; select bank1
  6750  07B3  00AA               	movwf	??_main^(0+128)
  6751  07B4  082A               	movf	??_main^(0+128),w
  6752  07B5  07C0               	addwf	main@loop^(0+128),f
  6753  07B6  2CF6               	goto	l2827
  6754  07B7                     __end_of_main:	
  6755                           
  6756                           	psect	text1
  6757  022F                     __ptext1:	
  6758 ;; *************** function _tempCalc *****************
  6759 ;; Defined at:
  6760 ;;		line 4 in file "tempCalc.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;  analogValue     2   61[BANK0 ] int 
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  steinhart       3   70[BANK0 ] float 
  6765 ;;  R               3   64[BANK0 ] float 
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  3   61[BANK0 ] float 
  6768 ;; Registers used:
  6769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6775 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6776 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6778 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6779 ;;Total ram usage:       12 bytes
  6780 ;; Hardware stack levels used:    1
  6781 ;; Hardware stack levels required when called:    4
  6782 ;; This function calls:
  6783 ;;		___awtoft
  6784 ;;		___ftadd
  6785 ;;		___ftdiv
  6786 ;;		___ftmul
  6787 ;;		___ftsub
  6788 ;;		_log
  6789 ;; This function is called by:
  6790 ;;		_main
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           
  6795                           ;psect for function _tempCalc
  6796  022F                     _tempCalc:	
  6797                           
  6798                           ;tempCalc.c: 6: float R, steinhart;
  6799                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  6800                           
  6801                           ;incstack = 0
  6802                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6803  022F  3000               	movlw	0
  6804  0230  0020               	movlb	0	; select bank0
  6805  0231  00C0               	movwf	___ftadd@f1
  6806  0232  3080               	movlw	128
  6807  0233  00C1               	movwf	___ftadd@f1+1
  6808  0234  30BF               	movlw	191
  6809  0235  00C2               	movwf	___ftadd@f1+2
  6810  0236  085E               	movf	tempCalc@analogValue+1,w
  6811  0237  00F9               	movwf	___awtoft@c+1
  6812  0238  085D               	movf	tempCalc@analogValue,w
  6813  0239  00F8               	movwf	___awtoft@c
  6814  023A  3188  20CD  3182   	fcall	___awtoft
  6815  023D  0878               	movf	?___awtoft,w
  6816  023E  0020               	movlb	0	; select bank0
  6817  023F  00B0               	movwf	___ftdiv@f2
  6818  0240  0879               	movf	?___awtoft+1,w
  6819  0241  00B1               	movwf	___ftdiv@f2+1
  6820  0242  087A               	movf	?___awtoft+2,w
  6821  0243  00B2               	movwf	___ftdiv@f2+2
  6822  0244  30C0               	movlw	192
  6823  0245  00B3               	movwf	___ftdiv@f1
  6824  0246  307F               	movlw	127
  6825  0247  00B4               	movwf	___ftdiv@f1+1
  6826  0248  3044               	movlw	68
  6827  0249  00B5               	movwf	___ftdiv@f1+2
  6828  024A  318D  252A  3182   	fcall	___ftdiv
  6829  024D  0020               	movlb	0	; select bank0
  6830  024E  0830               	movf	?___ftdiv,w
  6831  024F  00C3               	movwf	___ftadd@f2
  6832  0250  0831               	movf	?___ftdiv+1,w
  6833  0251  00C4               	movwf	___ftadd@f2+1
  6834  0252  0832               	movf	?___ftdiv+2,w
  6835  0253  00C5               	movwf	___ftadd@f2+2
  6836  0254  3181  2139  3182   	fcall	___ftadd
  6837  0257  0020               	movlb	0	; select bank0
  6838  0258  0840               	movf	?___ftadd,w
  6839  0259  00E3               	movwf	_tempCalc$986
  6840  025A  0841               	movf	?___ftadd+1,w
  6841  025B  00E4               	movwf	_tempCalc$986+1
  6842  025C  0842               	movf	?___ftadd+2,w
  6843  025D  00E5               	movwf	_tempCalc$986+2
  6844                           
  6845                           ;tempCalc.c: 6: float R, steinhart;
  6846                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  6847  025E  0863               	movf	_tempCalc$986,w
  6848  025F  00B0               	movwf	___ftdiv@f2
  6849  0260  0864               	movf	_tempCalc$986+1,w
  6850  0261  00B1               	movwf	___ftdiv@f2+1
  6851  0262  0865               	movf	_tempCalc$986+2,w
  6852  0263  00B2               	movwf	___ftdiv@f2+2
  6853  0264  3060               	movlw	96
  6854  0265  00B3               	movwf	___ftdiv@f1
  6855  0266  301A               	movlw	26
  6856  0267  00B4               	movwf	___ftdiv@f1+1
  6857  0268  3046               	movlw	70
  6858  0269  00B5               	movwf	___ftdiv@f1+2
  6859  026A  318D  252A  3182   	fcall	___ftdiv
  6860  026D  0020               	movlb	0	; select bank0
  6861  026E  0830               	movf	?___ftdiv,w
  6862  026F  00E0               	movwf	tempCalc@R
  6863  0270  0831               	movf	?___ftdiv+1,w
  6864  0271  00E1               	movwf	tempCalc@R+1
  6865  0272  0832               	movf	?___ftdiv+2,w
  6866  0273  00E2               	movwf	tempCalc@R+2
  6867                           
  6868                           ;tempCalc.c: 10: steinhart = R /10000;
  6869  0274  3040               	movlw	64
  6870  0275  00B0               	movwf	___ftdiv@f2
  6871  0276  301C               	movlw	28
  6872  0277  00B1               	movwf	___ftdiv@f2+1
  6873  0278  3046               	movlw	70
  6874  0279  00B2               	movwf	___ftdiv@f2+2
  6875  027A  0860               	movf	tempCalc@R,w
  6876  027B  00B3               	movwf	___ftdiv@f1
  6877  027C  0861               	movf	tempCalc@R+1,w
  6878  027D  00B4               	movwf	___ftdiv@f1+1
  6879  027E  0862               	movf	tempCalc@R+2,w
  6880  027F  00B5               	movwf	___ftdiv@f1+2
  6881  0280  318D  252A  3182   	fcall	___ftdiv
  6882  0283  0020               	movlb	0	; select bank0
  6883  0284  0830               	movf	?___ftdiv,w
  6884  0285  00E6               	movwf	tempCalc@steinhart
  6885  0286  0831               	movf	?___ftdiv+1,w
  6886  0287  00E7               	movwf	tempCalc@steinhart+1
  6887  0288  0832               	movf	?___ftdiv+2,w
  6888  0289  00E8               	movwf	tempCalc@steinhart+2
  6889                           
  6890                           ;tempCalc.c: 11: steinhart = log(steinhart);
  6891  028A  0866               	movf	tempCalc@steinhart,w
  6892  028B  00D7               	movwf	log@x
  6893  028C  0867               	movf	tempCalc@steinhart+1,w
  6894  028D  00D8               	movwf	log@x+1
  6895  028E  0868               	movf	tempCalc@steinhart+2,w
  6896  028F  00D9               	movwf	log@x+2
  6897  0290  318D  25D3  3182   	fcall	_log
  6898  0293  0020               	movlb	0	; select bank0
  6899  0294  0857               	movf	?_log,w
  6900  0295  00E6               	movwf	tempCalc@steinhart
  6901  0296  0858               	movf	?_log+1,w
  6902  0297  00E7               	movwf	tempCalc@steinhart+1
  6903  0298  0859               	movf	?_log+2,w
  6904  0299  00E8               	movwf	tempCalc@steinhart+2
  6905                           
  6906                           ;tempCalc.c: 12: steinhart /= 3930;
  6907  029A  30A0               	movlw	160
  6908  029B  00B0               	movwf	___ftdiv@f2
  6909  029C  3075               	movlw	117
  6910  029D  00B1               	movwf	___ftdiv@f2+1
  6911  029E  3045               	movlw	69
  6912  029F  00B2               	movwf	___ftdiv@f2+2
  6913  02A0  0866               	movf	tempCalc@steinhart,w
  6914  02A1  00B3               	movwf	___ftdiv@f1
  6915  02A2  0867               	movf	tempCalc@steinhart+1,w
  6916  02A3  00B4               	movwf	___ftdiv@f1+1
  6917  02A4  0868               	movf	tempCalc@steinhart+2,w
  6918  02A5  00B5               	movwf	___ftdiv@f1+2
  6919  02A6  318D  252A  3182   	fcall	___ftdiv
  6920  02A9  0020               	movlb	0	; select bank0
  6921  02AA  0830               	movf	?___ftdiv,w
  6922  02AB  00E6               	movwf	tempCalc@steinhart
  6923  02AC  0831               	movf	?___ftdiv+1,w
  6924  02AD  00E7               	movwf	tempCalc@steinhart+1
  6925  02AE  0832               	movf	?___ftdiv+2,w
  6926  02AF  00E8               	movwf	tempCalc@steinhart+2
  6927                           
  6928                           ;tempCalc.c: 14: steinhart += 1.0 / (25 + 273.15);
  6929  02B0  30CF               	movlw	207
  6930  02B1  00C0               	movwf	___ftadd@f1
  6931  02B2  305B               	movlw	91
  6932  02B3  00C1               	movwf	___ftadd@f1+1
  6933  02B4  303B               	movlw	59
  6934  02B5  00C2               	movwf	___ftadd@f1+2
  6935  02B6  0866               	movf	tempCalc@steinhart,w
  6936  02B7  00C3               	movwf	___ftadd@f2
  6937  02B8  0867               	movf	tempCalc@steinhart+1,w
  6938  02B9  00C4               	movwf	___ftadd@f2+1
  6939  02BA  0868               	movf	tempCalc@steinhart+2,w
  6940  02BB  00C5               	movwf	___ftadd@f2+2
  6941  02BC  3181  2139  3182   	fcall	___ftadd
  6942  02BF  0020               	movlb	0	; select bank0
  6943  02C0  0840               	movf	?___ftadd,w
  6944  02C1  00E6               	movwf	tempCalc@steinhart
  6945  02C2  0841               	movf	?___ftadd+1,w
  6946  02C3  00E7               	movwf	tempCalc@steinhart+1
  6947  02C4  0842               	movf	?___ftadd+2,w
  6948  02C5  00E8               	movwf	tempCalc@steinhart+2
  6949                           
  6950                           ;tempCalc.c: 15: steinhart = 1.0 / steinhart;
  6951  02C6  0866               	movf	tempCalc@steinhart,w
  6952  02C7  00B0               	movwf	___ftdiv@f2
  6953  02C8  0867               	movf	tempCalc@steinhart+1,w
  6954  02C9  00B1               	movwf	___ftdiv@f2+1
  6955  02CA  0868               	movf	tempCalc@steinhart+2,w
  6956  02CB  00B2               	movwf	___ftdiv@f2+2
  6957  02CC  3000               	movlw	0
  6958  02CD  00B3               	movwf	___ftdiv@f1
  6959  02CE  3080               	movlw	128
  6960  02CF  00B4               	movwf	___ftdiv@f1+1
  6961  02D0  303F               	movlw	63
  6962  02D1  00B5               	movwf	___ftdiv@f1+2
  6963  02D2  318D  252A  3182   	fcall	___ftdiv
  6964  02D5  0020               	movlb	0	; select bank0
  6965  02D6  0830               	movf	?___ftdiv,w
  6966  02D7  00E6               	movwf	tempCalc@steinhart
  6967  02D8  0831               	movf	?___ftdiv+1,w
  6968  02D9  00E7               	movwf	tempCalc@steinhart+1
  6969  02DA  0832               	movf	?___ftdiv+2,w
  6970  02DB  00E8               	movwf	tempCalc@steinhart+2
  6971                           
  6972                           ;tempCalc.c: 16: steinhart -= 273.15;
  6973  02DC  3093               	movlw	147
  6974  02DD  00CD               	movwf	___ftsub@f2
  6975  02DE  3088               	movlw	136
  6976  02DF  00CE               	movwf	___ftsub@f2+1
  6977  02E0  3043               	movlw	67
  6978  02E1  00CF               	movwf	___ftsub@f2+2
  6979  02E2  0866               	movf	tempCalc@steinhart,w
  6980  02E3  00D0               	movwf	___ftsub@f1
  6981  02E4  0867               	movf	tempCalc@steinhart+1,w
  6982  02E5  00D1               	movwf	___ftsub@f1+1
  6983  02E6  0868               	movf	tempCalc@steinhart+2,w
  6984  02E7  00D2               	movwf	___ftsub@f1+2
  6985  02E8  3188  20AF  3182   	fcall	___ftsub
  6986  02EB  0020               	movlb	0	; select bank0
  6987  02EC  084D               	movf	?___ftsub,w
  6988  02ED  00E6               	movwf	tempCalc@steinhart
  6989  02EE  084E               	movf	?___ftsub+1,w
  6990  02EF  00E7               	movwf	tempCalc@steinhart+1
  6991  02F0  084F               	movf	?___ftsub+2,w
  6992  02F1  00E8               	movwf	tempCalc@steinhart+2
  6993                           
  6994                           ;tempCalc.c: 18: steinhart*=10;
  6995  02F2  3000               	movlw	0
  6996  02F3  00A0               	movwf	___ftmul@f1
  6997  02F4  3020               	movlw	32
  6998  02F5  00A1               	movwf	___ftmul@f1+1
  6999  02F6  3041               	movlw	65
  7000  02F7  00A2               	movwf	___ftmul@f1+2
  7001  02F8  0866               	movf	tempCalc@steinhart,w
  7002  02F9  00A3               	movwf	___ftmul@f2
  7003  02FA  0867               	movf	tempCalc@steinhart+1,w
  7004  02FB  00A4               	movwf	___ftmul@f2+1
  7005  02FC  0868               	movf	tempCalc@steinhart+2,w
  7006  02FD  00A5               	movwf	___ftmul@f2+2
  7007  02FE  318E  2683  3182   	fcall	___ftmul
  7008  0301  0020               	movlb	0	; select bank0
  7009  0302  0820               	movf	?___ftmul,w
  7010  0303  00E6               	movwf	tempCalc@steinhart
  7011  0304  0821               	movf	?___ftmul+1,w
  7012  0305  00E7               	movwf	tempCalc@steinhart+1
  7013  0306  0822               	movf	?___ftmul+2,w
  7014  0307  00E8               	movwf	tempCalc@steinhart+2
  7015                           
  7016                           ;tempCalc.c: 20: steinhart = steinhart*9/5+320;
  7017  0308  3000               	movlw	0
  7018  0309  00C0               	movwf	___ftadd@f1
  7019  030A  30A0               	movlw	160
  7020  030B  00C1               	movwf	___ftadd@f1+1
  7021  030C  3043               	movlw	67
  7022  030D  00C2               	movwf	___ftadd@f1+2
  7023  030E  3000               	movlw	0
  7024  030F  00B0               	movwf	___ftdiv@f2
  7025  0310  30A0               	movlw	160
  7026  0311  00B1               	movwf	___ftdiv@f2+1
  7027  0312  3040               	movlw	64
  7028  0313  00B2               	movwf	___ftdiv@f2+2
  7029  0314  3000               	movlw	0
  7030  0315  00A0               	movwf	___ftmul@f1
  7031  0316  3010               	movlw	16
  7032  0317  00A1               	movwf	___ftmul@f1+1
  7033  0318  3041               	movlw	65
  7034  0319  00A2               	movwf	___ftmul@f1+2
  7035  031A  0866               	movf	tempCalc@steinhart,w
  7036  031B  00A3               	movwf	___ftmul@f2
  7037  031C  0867               	movf	tempCalc@steinhart+1,w
  7038  031D  00A4               	movwf	___ftmul@f2+1
  7039  031E  0868               	movf	tempCalc@steinhart+2,w
  7040  031F  00A5               	movwf	___ftmul@f2+2
  7041  0320  318E  2683  3182   	fcall	___ftmul
  7042  0323  0020               	movlb	0	; select bank0
  7043  0324  0820               	movf	?___ftmul,w
  7044  0325  00B3               	movwf	___ftdiv@f1
  7045  0326  0821               	movf	?___ftmul+1,w
  7046  0327  00B4               	movwf	___ftdiv@f1+1
  7047  0328  0822               	movf	?___ftmul+2,w
  7048  0329  00B5               	movwf	___ftdiv@f1+2
  7049  032A  318D  252A  3182   	fcall	___ftdiv
  7050  032D  0020               	movlb	0	; select bank0
  7051  032E  0830               	movf	?___ftdiv,w
  7052  032F  00C3               	movwf	___ftadd@f2
  7053  0330  0831               	movf	?___ftdiv+1,w
  7054  0331  00C4               	movwf	___ftadd@f2+1
  7055  0332  0832               	movf	?___ftdiv+2,w
  7056  0333  00C5               	movwf	___ftadd@f2+2
  7057  0334  3181  2139         	fcall	___ftadd
  7058  0336  0020               	movlb	0	; select bank0
  7059  0337  0840               	movf	?___ftadd,w
  7060  0338  00E6               	movwf	tempCalc@steinhart
  7061  0339  0841               	movf	?___ftadd+1,w
  7062  033A  00E7               	movwf	tempCalc@steinhart+1
  7063  033B  0842               	movf	?___ftadd+2,w
  7064  033C  00E8               	movwf	tempCalc@steinhart+2
  7065                           
  7066                           ;tempCalc.c: 22: return steinhart;
  7067  033D  0866               	movf	tempCalc@steinhart,w
  7068  033E  00DD               	movwf	?_tempCalc
  7069  033F  0867               	movf	tempCalc@steinhart+1,w
  7070  0340  00DE               	movwf	?_tempCalc+1
  7071  0341  0868               	movf	tempCalc@steinhart+2,w
  7072  0342  00DF               	movwf	?_tempCalc+2
  7073  0343  0008               	return
  7074  0344                     __end_of_tempCalc:	
  7075                           
  7076                           	psect	text2
  7077  0DD3                     __ptext2:	
  7078 ;; *************** function _log *****************
  7079 ;; Defined at:
  7080 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  x               3   55[BANK0 ] float 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  exponent        2   59[BANK0 ] int 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  3   55[BANK0 ] int 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7094 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7096 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7097 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7098 ;;Total ram usage:        6 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    3
  7101 ;; This function calls:
  7102 ;;		___awtoft
  7103 ;;		___ftadd
  7104 ;;		___ftge
  7105 ;;		___ftmul
  7106 ;;		_eval_poly
  7107 ;;		_frexp
  7108 ;; This function is called by:
  7109 ;;		_tempCalc
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           
  7114                           ;psect for function _log
  7115  0DD3                     _log:	
  7116                           
  7117                           ;incstack = 0
  7118                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7119  0DD3  0020               	movlb	0	; select bank0
  7120  0DD4  0857               	movf	log@x,w
  7121  0DD5  00F0               	movwf	___ftge@ff1
  7122  0DD6  0858               	movf	log@x+1,w
  7123  0DD7  00F1               	movwf	___ftge@ff1+1
  7124  0DD8  0859               	movf	log@x+2,w
  7125  0DD9  00F2               	movwf	___ftge@ff1+2
  7126  0DDA  3000               	movlw	0
  7127  0DDB  00F3               	movwf	___ftge@ff2
  7128  0DDC  3000               	movlw	0
  7129  0DDD  00F4               	movwf	___ftge@ff2+1
  7130  0DDE  3000               	movlw	0
  7131  0DDF  00F5               	movwf	___ftge@ff2+2
  7132  0DE0  3189  2170  318D   	fcall	___ftge
  7133  0DE3  1803               	btfsc	3,0
  7134  0DE4  2DF2               	goto	l2355
  7135  0DE5  3021               	movlw	33
  7136  0DE6  0021               	movlb	1	; select bank1
  7137  0DE7  00D4               	movwf	_errno^(0+128)
  7138  0DE8  3000               	movlw	0
  7139  0DE9  00D5               	movwf	(_errno^(0+128)+1)
  7140  0DEA  3000               	movlw	0
  7141  0DEB  0020               	movlb	0	; select bank0
  7142  0DEC  00D7               	movwf	?_log
  7143  0DED  3000               	movlw	0
  7144  0DEE  00D8               	movwf	?_log+1
  7145  0DEF  3000               	movlw	0
  7146  0DF0  00D9               	movwf	?_log+2
  7147  0DF1  0008               	return
  7148  0DF2                     l2355:	
  7149  0DF2  0020               	movlb	0	; select bank0
  7150  0DF3  0859               	movf	log@x+2,w
  7151  0DF4  0458               	iorwf	log@x+1,w
  7152  0DF5  0457               	iorwf	log@x,w
  7153  0DF6  1D03               	skipz
  7154  0DF7  2E05               	goto	l2361
  7155  0DF8  3022               	movlw	34
  7156  0DF9  0021               	movlb	1	; select bank1
  7157  0DFA  00D4               	movwf	_errno^(0+128)
  7158  0DFB  3000               	movlw	0
  7159  0DFC  00D5               	movwf	(_errno^(0+128)+1)
  7160  0DFD  3000               	movlw	0
  7161  0DFE  0020               	movlb	0	; select bank0
  7162  0DFF  00D7               	movwf	?_log
  7163  0E00  3000               	movlw	0
  7164  0E01  00D8               	movwf	?_log+1
  7165  0E02  3000               	movlw	0
  7166  0E03  00D9               	movwf	?_log+2
  7167  0E04  0008               	return
  7168  0E05                     l2361:	
  7169  0E05  3000               	movlw	0
  7170  0E06  00C0               	movwf	___ftadd@f1
  7171  0E07  3080               	movlw	128
  7172  0E08  00C1               	movwf	___ftadd@f1+1
  7173  0E09  30BF               	movlw	191
  7174  0E0A  00C2               	movwf	___ftadd@f1+2
  7175  0E0B  3000               	movlw	0
  7176  0E0C  00A0               	movwf	___ftmul@f1
  7177  0E0D  3000               	movlw	0
  7178  0E0E  00A1               	movwf	___ftmul@f1+1
  7179  0E0F  3040               	movlw	64
  7180  0E10  00A2               	movwf	___ftmul@f1+2
  7181  0E11  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7182  0E12  00DA               	movwf	??_log
  7183  0E13  085A               	movf	??_log,w
  7184  0E14  00F3               	movwf	frexp@eptr
  7185  0E15  0857               	movf	log@x,w
  7186  0E16  00F0               	movwf	frexp@value
  7187  0E17  0858               	movf	log@x+1,w
  7188  0E18  00F1               	movwf	frexp@value+1
  7189  0E19  0859               	movf	log@x+2,w
  7190  0E1A  00F2               	movwf	frexp@value+2
  7191  0E1B  3189  21AB  318D   	fcall	_frexp
  7192  0E1E  0870               	movf	?_frexp,w
  7193  0E1F  0020               	movlb	0	; select bank0
  7194  0E20  00A3               	movwf	___ftmul@f2
  7195  0E21  0871               	movf	?_frexp+1,w
  7196  0E22  00A4               	movwf	___ftmul@f2+1
  7197  0E23  0872               	movf	?_frexp+2,w
  7198  0E24  00A5               	movwf	___ftmul@f2+2
  7199  0E25  318E  2683  318D   	fcall	___ftmul
  7200  0E28  0020               	movlb	0	; select bank0
  7201  0E29  0820               	movf	?___ftmul,w
  7202  0E2A  00C3               	movwf	___ftadd@f2
  7203  0E2B  0821               	movf	?___ftmul+1,w
  7204  0E2C  00C4               	movwf	___ftadd@f2+1
  7205  0E2D  0822               	movf	?___ftmul+2,w
  7206  0E2E  00C5               	movwf	___ftadd@f2+2
  7207  0E2F  3181  2139  318D   	fcall	___ftadd
  7208  0E32  0020               	movlb	0	; select bank0
  7209  0E33  0840               	movf	?___ftadd,w
  7210  0E34  00D7               	movwf	log@x
  7211  0E35  0841               	movf	?___ftadd+1,w
  7212  0E36  00D8               	movwf	log@x+1
  7213  0E37  0842               	movf	?___ftadd+2,w
  7214  0E38  00D9               	movwf	log@x+2
  7215  0E39  30FF               	movlw	255
  7216  0E3A  07DB               	addwf	log@exponent,f
  7217  0E3B  30FF               	movlw	255
  7218  0E3C  3DDC               	addwfc	log@exponent+1,f
  7219  0E3D  0857               	movf	log@x,w
  7220  0E3E  00CD               	movwf	eval_poly@x
  7221  0E3F  0858               	movf	log@x+1,w
  7222  0E40  00CE               	movwf	eval_poly@x+1
  7223  0E41  0859               	movf	log@x+2,w
  7224  0E42  00CF               	movwf	eval_poly@x+2
  7225  0E43  3000               	movlw	low (log@coeff| (0+32768))
  7226  0E44  00D0               	movwf	eval_poly@d
  7227  0E45  3090               	movlw	high (log@coeff| (0+32768))
  7228  0E46  00D1               	movwf	eval_poly@d+1
  7229  0E47  3008               	movlw	8
  7230  0E48  00D2               	movwf	eval_poly@n
  7231  0E49  3000               	movlw	0
  7232  0E4A  00D3               	movwf	eval_poly@n+1
  7233  0E4B  318A  22B8  318D   	fcall	_eval_poly
  7234  0E4E  0020               	movlb	0	; select bank0
  7235  0E4F  084D               	movf	?_eval_poly,w
  7236  0E50  00D7               	movwf	log@x
  7237  0E51  084E               	movf	?_eval_poly+1,w
  7238  0E52  00D8               	movwf	log@x+1
  7239  0E53  084F               	movf	?_eval_poly+2,w
  7240  0E54  00D9               	movwf	log@x+2
  7241  0E55  0857               	movf	log@x,w
  7242  0E56  00C0               	movwf	___ftadd@f1
  7243  0E57  0858               	movf	log@x+1,w
  7244  0E58  00C1               	movwf	___ftadd@f1+1
  7245  0E59  0859               	movf	log@x+2,w
  7246  0E5A  00C2               	movwf	___ftadd@f1+2
  7247  0E5B  3072               	movlw	114
  7248  0E5C  00A0               	movwf	___ftmul@f1
  7249  0E5D  3031               	movlw	49
  7250  0E5E  00A1               	movwf	___ftmul@f1+1
  7251  0E5F  303F               	movlw	63
  7252  0E60  00A2               	movwf	___ftmul@f1+2
  7253  0E61  085C               	movf	log@exponent+1,w
  7254  0E62  00F9               	movwf	___awtoft@c+1
  7255  0E63  085B               	movf	log@exponent,w
  7256  0E64  00F8               	movwf	___awtoft@c
  7257  0E65  3188  20CD  318D   	fcall	___awtoft
  7258  0E68  0878               	movf	?___awtoft,w
  7259  0E69  0020               	movlb	0	; select bank0
  7260  0E6A  00A3               	movwf	___ftmul@f2
  7261  0E6B  0879               	movf	?___awtoft+1,w
  7262  0E6C  00A4               	movwf	___ftmul@f2+1
  7263  0E6D  087A               	movf	?___awtoft+2,w
  7264  0E6E  00A5               	movwf	___ftmul@f2+2
  7265  0E6F  318E  2683  318D   	fcall	___ftmul
  7266  0E72  0020               	movlb	0	; select bank0
  7267  0E73  0820               	movf	?___ftmul,w
  7268  0E74  00C3               	movwf	___ftadd@f2
  7269  0E75  0821               	movf	?___ftmul+1,w
  7270  0E76  00C4               	movwf	___ftadd@f2+1
  7271  0E77  0822               	movf	?___ftmul+2,w
  7272  0E78  00C5               	movwf	___ftadd@f2+2
  7273  0E79  3181  2139         	fcall	___ftadd
  7274  0E7B  0020               	movlb	0	; select bank0
  7275  0E7C  0840               	movf	?___ftadd,w
  7276  0E7D  00D7               	movwf	?_log
  7277  0E7E  0841               	movf	?___ftadd+1,w
  7278  0E7F  00D8               	movwf	?_log+1
  7279  0E80  0842               	movf	?___ftadd+2,w
  7280  0E81  00D9               	movwf	?_log+2
  7281  0E82  0008               	return
  7282  0E83                     __end_of_log:	
  7283                           
  7284                           	psect	text3
  7285  09AB                     __ptext3:	
  7286 ;; *************** function _frexp *****************
  7287 ;; Defined at:
  7288 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  value           3    0[COMMON] int 
  7291 ;;  eptr            1    3[COMMON] PTR int 
  7292 ;;		 -> log@exponent(2), 
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;		None
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  3    0[COMMON] PTR int 
  7297 ;; Registers used:
  7298 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;Total ram usage:        6 bytes
  7309 ;; Hardware stack levels used:    1
  7310 ;; This function calls:
  7311 ;;		Nothing
  7312 ;; This function is called by:
  7313 ;;		_log
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           
  7318                           ;psect for function _frexp
  7319  09AB                     _frexp:	
  7320                           
  7321                           ;incstack = 0
  7322                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7323  09AB  0872               	movf	frexp@value+2,w
  7324  09AC  0471               	iorwf	frexp@value+1,w
  7325  09AD  0470               	iorwf	frexp@value,w
  7326  09AE  1D03               	skipz
  7327  09AF  29BD               	goto	l2185
  7328  09B0  0873               	movf	frexp@eptr,w
  7329  09B1  0086               	movwf	6
  7330  09B2  0187               	clrf	7
  7331  09B3  3000               	movlw	0
  7332  09B4  3FC0               	movwi [0]fsr1
  7333  09B5  3FC1               	movwi [1]fsr1
  7334  09B6  3000               	movlw	0
  7335  09B7  00F0               	movwf	?_frexp
  7336  09B8  3000               	movlw	0
  7337  09B9  00F1               	movwf	?_frexp+1
  7338  09BA  3000               	movlw	0
  7339  09BB  00F2               	movwf	?_frexp+2
  7340  09BC  0008               	return
  7341  09BD                     l2185:	
  7342  09BD  0872               	movf	frexp@value+2,w
  7343  09BE  397F               	andlw	127
  7344  09BF  00F4               	movwf	??_frexp
  7345  09C0  01F5               	clrf	??_frexp+1
  7346  09C1  35F4               	lslf	??_frexp,f
  7347  09C2  0DF5               	rlf	??_frexp+1,f
  7348  09C3  0873               	movf	frexp@eptr,w
  7349  09C4  0086               	movwf	6
  7350  09C5  0187               	clrf	7
  7351  09C6  0874               	movf	??_frexp,w
  7352  09C7  3FC0               	movwi [0]fsr1
  7353  09C8  0875               	movf	??_frexp+1,w
  7354  09C9  3FC1               	movwi [1]fsr1
  7355  09CA  0D71               	rlf	frexp@value+1,w
  7356  09CB  0D71               	rlf	frexp@value+1,w
  7357  09CC  3901               	andlw	1
  7358  09CD  00F4               	movwf	??_frexp
  7359  09CE  01F5               	clrf	??_frexp+1
  7360  09CF  0873               	movf	frexp@eptr,w
  7361  09D0  0086               	movwf	6
  7362  09D1  0187               	clrf	7
  7363  09D2  0874               	movf	??_frexp,w
  7364  09D3  0481               	iorwf	1,f
  7365  09D4  3141               	addfsr 1,1
  7366  09D5  0875               	movf	??_frexp+1,w
  7367  09D6  0481               	iorwf	1,f
  7368  09D7  0873               	movf	frexp@eptr,w
  7369  09D8  0086               	movwf	6
  7370  09D9  0187               	clrf	7
  7371  09DA  3082               	movlw	130
  7372  09DB  0781               	addwf	1,f
  7373  09DC  3141               	addfsr 1,1
  7374  09DD  30FF               	movlw	255
  7375  09DE  3D81               	addwfc	1,f
  7376  09DF  317F               	addfsr 1,-1
  7377  09E0  0872               	movf	frexp@value+2,w
  7378  09E1  3980               	andlw	-128
  7379  09E2  383F               	iorlw	63
  7380  09E3  00F2               	movwf	frexp@value+2
  7381  09E4  13F1               	bcf	frexp@value+1,7
  7382  09E5  0008               	return
  7383  09E6                     __end_of_frexp:	
  7384                           
  7385                           	psect	text4
  7386  0AB8                     __ptext4:	
  7387 ;; *************** function _eval_poly *****************
  7388 ;; Defined at:
  7389 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  x               3   45[BANK0 ] PTR int 
  7392 ;;  d               2   48[BANK0 ] PTR const 
  7393 ;;		 -> log@coeff(27), 
  7394 ;;  n               2   50[BANK0 ] int 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;  res             3   52[BANK0 ] int 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  3   45[BANK0 ] int 
  7399 ;; Registers used:
  7400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7406 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7409 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7410 ;;Total ram usage:       10 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    2
  7413 ;; This function calls:
  7414 ;;		___ftadd
  7415 ;;		___ftmul
  7416 ;;		___wmul
  7417 ;; This function is called by:
  7418 ;;		_log
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           
  7423                           ;psect for function _eval_poly
  7424  0AB8                     _eval_poly:	
  7425                           
  7426                           ;incstack = 0
  7427                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7428  0AB8  0020               	movlb	0	; select bank0
  7429  0AB9  0853               	movf	eval_poly@n+1,w
  7430  0ABA  00F1               	movwf	___wmul@multiplier+1
  7431  0ABB  0852               	movf	eval_poly@n,w
  7432  0ABC  00F0               	movwf	___wmul@multiplier
  7433  0ABD  3003               	movlw	3
  7434  0ABE  00F2               	movwf	___wmul@multiplicand
  7435  0ABF  3000               	movlw	0
  7436  0AC0  00F3               	movwf	___wmul@multiplicand+1
  7437  0AC1  3188  2094  318A   	fcall	___wmul
  7438  0AC4  0020               	movlb	0	; select bank0
  7439  0AC5  0850               	movf	eval_poly@d,w
  7440  0AC6  0770               	addwf	?___wmul,w
  7441  0AC7  0084               	movwf	4
  7442  0AC8  0851               	movf	eval_poly@d+1,w
  7443  0AC9  3D71               	addwfc	?___wmul+1,w
  7444  0ACA  0085               	movwf	5
  7445  0ACB  3F00               	moviw [0]fsr0
  7446  0ACC  00D4               	movwf	eval_poly@res
  7447  0ACD  3F01               	moviw [1]fsr0
  7448  0ACE  00D5               	movwf	eval_poly@res+1
  7449  0ACF  3F02               	moviw [2]fsr0
  7450  0AD0                     L1:	
  7451  0AD0  00D6               	movwf	eval_poly@res+2
  7452  0AD1  0852               	movf	eval_poly@n,w
  7453  0AD2  0453               	iorwf	eval_poly@n+1,w
  7454  0AD3  1903               	btfsc	3,2
  7455  0AD4  2B11               	goto	l2203
  7456  0AD5  30FF               	movlw	255
  7457  0AD6  07D2               	addwf	eval_poly@n,f
  7458  0AD7  30FF               	movlw	255
  7459  0AD8  3DD3               	addwfc	eval_poly@n+1,f
  7460  0AD9  0853               	movf	eval_poly@n+1,w
  7461  0ADA  00F1               	movwf	___wmul@multiplier+1
  7462  0ADB  0852               	movf	eval_poly@n,w
  7463  0ADC  00F0               	movwf	___wmul@multiplier
  7464  0ADD  3003               	movlw	3
  7465  0ADE  00F2               	movwf	___wmul@multiplicand
  7466  0ADF  3000               	movlw	0
  7467  0AE0  00F3               	movwf	___wmul@multiplicand+1
  7468  0AE1  3188  2094  318A   	fcall	___wmul
  7469  0AE4  0020               	movlb	0	; select bank0
  7470  0AE5  0850               	movf	eval_poly@d,w
  7471  0AE6  0770               	addwf	?___wmul,w
  7472  0AE7  0084               	movwf	4
  7473  0AE8  0851               	movf	eval_poly@d+1,w
  7474  0AE9  3D71               	addwfc	?___wmul+1,w
  7475  0AEA  0085               	movwf	5
  7476  0AEB  3F00               	moviw [0]fsr0
  7477  0AEC  00C0               	movwf	___ftadd@f1
  7478  0AED  3F01               	moviw [1]fsr0
  7479  0AEE  00C1               	movwf	___ftadd@f1+1
  7480  0AEF  3F02               	moviw [2]fsr0
  7481  0AF0  00C2               	movwf	___ftadd@f1+2
  7482  0AF1  0854               	movf	eval_poly@res,w
  7483  0AF2  00A0               	movwf	___ftmul@f1
  7484  0AF3  0855               	movf	eval_poly@res+1,w
  7485  0AF4  00A1               	movwf	___ftmul@f1+1
  7486  0AF5  0856               	movf	eval_poly@res+2,w
  7487  0AF6  00A2               	movwf	___ftmul@f1+2
  7488  0AF7  084D               	movf	eval_poly@x,w
  7489  0AF8  00A3               	movwf	___ftmul@f2
  7490  0AF9  084E               	movf	eval_poly@x+1,w
  7491  0AFA  00A4               	movwf	___ftmul@f2+1
  7492  0AFB  084F               	movf	eval_poly@x+2,w
  7493  0AFC  00A5               	movwf	___ftmul@f2+2
  7494  0AFD  318E  2683  318A   	fcall	___ftmul
  7495  0B00  0020               	movlb	0	; select bank0
  7496  0B01  0820               	movf	?___ftmul,w
  7497  0B02  00C3               	movwf	___ftadd@f2
  7498  0B03  0821               	movf	?___ftmul+1,w
  7499  0B04  00C4               	movwf	___ftadd@f2+1
  7500  0B05  0822               	movf	?___ftmul+2,w
  7501  0B06  00C5               	movwf	___ftadd@f2+2
  7502  0B07  3181  2139  318A   	fcall	___ftadd
  7503  0B0A  0020               	movlb	0	; select bank0
  7504  0B0B  0840               	movf	?___ftadd,w
  7505  0B0C  00D4               	movwf	eval_poly@res
  7506  0B0D  0841               	movf	?___ftadd+1,w
  7507  0B0E  00D5               	movwf	eval_poly@res+1
  7508  0B0F  0842               	movf	?___ftadd+2,w
  7509  0B10  2AD0               	goto	L1
  7510  0B11                     l2203:	
  7511  0B11  0854               	movf	eval_poly@res,w
  7512  0B12  00CD               	movwf	?_eval_poly
  7513  0B13  0855               	movf	eval_poly@res+1,w
  7514  0B14  00CE               	movwf	?_eval_poly+1
  7515  0B15  0856               	movf	eval_poly@res+2,w
  7516  0B16  00CF               	movwf	?_eval_poly+2
  7517  0B17  0008               	return
  7518  0B18                     __end_of_eval_poly:	
  7519                           
  7520                           	psect	text5
  7521  0E83                     __ptext5:	
  7522 ;; *************** function ___ftmul *****************
  7523 ;; Defined at:
  7524 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;  f1              3    0[BANK0 ] float 
  7527 ;;  f2              3    3[BANK0 ] float 
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7530 ;;  sign            1   15[BANK0 ] unsigned char 
  7531 ;;  cntr            1   14[BANK0 ] unsigned char 
  7532 ;;  exp             1   10[BANK0 ] unsigned char 
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  3    0[BANK0 ] float 
  7535 ;; Registers used:
  7536 ;;		wreg, status,2, status,0, pclath, cstack
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7542 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7543 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7544 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7545 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7546 ;;Total ram usage:       16 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:    1
  7549 ;; This function calls:
  7550 ;;		___ftpack
  7551 ;; This function is called by:
  7552 ;;		_tempCalc
  7553 ;;		_log
  7554 ;;		_eval_poly
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           
  7559                           ;psect for function ___ftmul
  7560  0E83                     ___ftmul:	
  7561                           
  7562                           ;incstack = 0
  7563                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7564  0E83  0020               	movlb	0	; select bank0
  7565  0E84  0820               	movf	___ftmul@f1,w
  7566  0E85  00A6               	movwf	??___ftmul
  7567  0E86  0821               	movf	___ftmul@f1+1,w
  7568  0E87  00A7               	movwf	??___ftmul+1
  7569  0E88  0822               	movf	___ftmul@f1+2,w
  7570  0E89  00A8               	movwf	??___ftmul+2
  7571  0E8A  1003               	clrc
  7572  0E8B  0D27               	rlf	??___ftmul+1,w
  7573  0E8C  0D28               	rlf	??___ftmul+2,w
  7574  0E8D  00A9               	movwf	??___ftmul+3
  7575  0E8E  0829               	movf	??___ftmul+3,w
  7576  0E8F  00AA               	movwf	___ftmul@exp
  7577  0E90  082A               	movf	___ftmul@exp,w
  7578  0E91  1D03               	btfss	3,2
  7579  0E92  2E9A               	goto	l2071
  7580  0E93  3000               	movlw	0
  7581  0E94  00A0               	movwf	?___ftmul
  7582  0E95  3000               	movlw	0
  7583  0E96  00A1               	movwf	?___ftmul+1
  7584  0E97  3000               	movlw	0
  7585  0E98  00A2               	movwf	?___ftmul+2
  7586  0E99  0008               	return
  7587  0E9A                     l2071:	
  7588  0E9A  0823               	movf	___ftmul@f2,w
  7589  0E9B  00A6               	movwf	??___ftmul
  7590  0E9C  0824               	movf	___ftmul@f2+1,w
  7591  0E9D  00A7               	movwf	??___ftmul+1
  7592  0E9E  0825               	movf	___ftmul@f2+2,w
  7593  0E9F  00A8               	movwf	??___ftmul+2
  7594  0EA0  1003               	clrc
  7595  0EA1  0D27               	rlf	??___ftmul+1,w
  7596  0EA2  0D28               	rlf	??___ftmul+2,w
  7597  0EA3  00A9               	movwf	??___ftmul+3
  7598  0EA4  0829               	movf	??___ftmul+3,w
  7599  0EA5  00AF               	movwf	___ftmul@sign
  7600  0EA6  082F               	movf	___ftmul@sign,w
  7601  0EA7  1D03               	btfss	3,2
  7602  0EA8  2EB0               	goto	l2077
  7603  0EA9  3000               	movlw	0
  7604  0EAA  00A0               	movwf	?___ftmul
  7605  0EAB  3000               	movlw	0
  7606  0EAC  00A1               	movwf	?___ftmul+1
  7607  0EAD  3000               	movlw	0
  7608  0EAE  00A2               	movwf	?___ftmul+2
  7609  0EAF  0008               	return
  7610  0EB0                     l2077:	
  7611  0EB0  082F               	movf	___ftmul@sign,w
  7612  0EB1  3E7B               	addlw	123
  7613  0EB2  00A6               	movwf	??___ftmul
  7614  0EB3  0826               	movf	??___ftmul,w
  7615  0EB4  07AA               	addwf	___ftmul@exp,f
  7616  0EB5  0820               	movf	___ftmul@f1,w
  7617  0EB6  00A6               	movwf	??___ftmul
  7618  0EB7  0821               	movf	___ftmul@f1+1,w
  7619  0EB8  00A7               	movwf	??___ftmul+1
  7620  0EB9  0822               	movf	___ftmul@f1+2,w
  7621  0EBA  00A8               	movwf	??___ftmul+2
  7622  0EBB  3010               	movlw	16
  7623  0EBC                     u2165:	
  7624  0EBC  36A8               	lsrf	??___ftmul+2,f
  7625  0EBD  0CA7               	rrf	??___ftmul+1,f
  7626  0EBE  0CA6               	rrf	??___ftmul,f
  7627  0EBF  0B89               	decfsz	9,f
  7628  0EC0  2EBC               	goto	u2165
  7629  0EC1  0826               	movf	??___ftmul,w
  7630  0EC2  00A9               	movwf	??___ftmul+3
  7631  0EC3  0829               	movf	??___ftmul+3,w
  7632  0EC4  00AF               	movwf	___ftmul@sign
  7633  0EC5  0823               	movf	___ftmul@f2,w
  7634  0EC6  00A6               	movwf	??___ftmul
  7635  0EC7  0824               	movf	___ftmul@f2+1,w
  7636  0EC8  00A7               	movwf	??___ftmul+1
  7637  0EC9  0825               	movf	___ftmul@f2+2,w
  7638  0ECA  00A8               	movwf	??___ftmul+2
  7639  0ECB  3010               	movlw	16
  7640  0ECC                     u2175:	
  7641  0ECC  36A8               	lsrf	??___ftmul+2,f
  7642  0ECD  0CA7               	rrf	??___ftmul+1,f
  7643  0ECE  0CA6               	rrf	??___ftmul,f
  7644  0ECF  0B89               	decfsz	9,f
  7645  0ED0  2ECC               	goto	u2175
  7646  0ED1  0826               	movf	??___ftmul,w
  7647  0ED2  00A9               	movwf	??___ftmul+3
  7648  0ED3  0829               	movf	??___ftmul+3,w
  7649  0ED4  06AF               	xorwf	___ftmul@sign,f
  7650  0ED5  3080               	movlw	128
  7651  0ED6  00A6               	movwf	??___ftmul
  7652  0ED7  0826               	movf	??___ftmul,w
  7653  0ED8  05AF               	andwf	___ftmul@sign,f
  7654  0ED9  17A1               	bsf	___ftmul@f1+1,7
  7655  0EDA  17A4               	bsf	___ftmul@f2+1,7
  7656  0EDB  30FF               	movlw	255
  7657  0EDC  05A3               	andwf	___ftmul@f2,f
  7658  0EDD  30FF               	movlw	255
  7659  0EDE  05A4               	andwf	___ftmul@f2+1,f
  7660  0EDF  3000               	movlw	0
  7661  0EE0  05A5               	andwf	___ftmul@f2+2,f
  7662  0EE1  3000               	movlw	0
  7663  0EE2  00AB               	movwf	___ftmul@f3_as_product
  7664  0EE3  3000               	movlw	0
  7665  0EE4  00AC               	movwf	___ftmul@f3_as_product+1
  7666  0EE5  3000               	movlw	0
  7667  0EE6  00AD               	movwf	___ftmul@f3_as_product+2
  7668  0EE7  3007               	movlw	7
  7669  0EE8  00A6               	movwf	??___ftmul
  7670  0EE9  0826               	movf	??___ftmul,w
  7671  0EEA  00AE               	movwf	___ftmul@cntr
  7672  0EEB                     l2089:	
  7673  0EEB  1C20               	btfss	___ftmul@f1,0
  7674  0EEC  2EF3               	goto	l2093
  7675  0EED  0823               	movf	___ftmul@f2,w
  7676  0EEE  07AB               	addwf	___ftmul@f3_as_product,f
  7677  0EEF  0824               	movf	___ftmul@f2+1,w
  7678  0EF0  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7679  0EF1  0825               	movf	___ftmul@f2+2,w
  7680  0EF2  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7681  0EF3                     l2093:	
  7682  0EF3  3001               	movlw	1
  7683  0EF4                     u2195:	
  7684  0EF4  36A2               	lsrf	___ftmul@f1+2,f
  7685  0EF5  0CA1               	rrf	___ftmul@f1+1,f
  7686  0EF6  0CA0               	rrf	___ftmul@f1,f
  7687  0EF7  0B89               	decfsz	9,f
  7688  0EF8  2EF4               	goto	u2195
  7689  0EF9  3001               	movlw	1
  7690  0EFA                     u2205:	
  7691  0EFA  35A3               	lslf	___ftmul@f2,f
  7692  0EFB  0DA4               	rlf	___ftmul@f2+1,f
  7693  0EFC  0DA5               	rlf	___ftmul@f2+2,f
  7694  0EFD  0B89               	decfsz	9,f
  7695  0EFE  2EFA               	goto	u2205
  7696  0EFF  3001               	movlw	1
  7697  0F00  02AE               	subwf	___ftmul@cntr,f
  7698  0F01  1D03               	btfss	3,2
  7699  0F02  2EEB               	goto	l2089
  7700  0F03  3009               	movlw	9
  7701  0F04  00A6               	movwf	??___ftmul
  7702  0F05  0826               	movf	??___ftmul,w
  7703  0F06  00AE               	movwf	___ftmul@cntr
  7704  0F07                     l2101:	
  7705  0F07  1C20               	btfss	___ftmul@f1,0
  7706  0F08  2F0F               	goto	l2105
  7707  0F09  0823               	movf	___ftmul@f2,w
  7708  0F0A  07AB               	addwf	___ftmul@f3_as_product,f
  7709  0F0B  0824               	movf	___ftmul@f2+1,w
  7710  0F0C  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7711  0F0D  0825               	movf	___ftmul@f2+2,w
  7712  0F0E  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7713  0F0F                     l2105:	
  7714  0F0F  3001               	movlw	1
  7715  0F10                     u2235:	
  7716  0F10  36A2               	lsrf	___ftmul@f1+2,f
  7717  0F11  0CA1               	rrf	___ftmul@f1+1,f
  7718  0F12  0CA0               	rrf	___ftmul@f1,f
  7719  0F13  0B89               	decfsz	9,f
  7720  0F14  2F10               	goto	u2235
  7721  0F15  3001               	movlw	1
  7722  0F16                     u2245:	
  7723  0F16  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7724  0F17  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7725  0F18  0CAB               	rrf	___ftmul@f3_as_product,f
  7726  0F19  0B89               	decfsz	9,f
  7727  0F1A  2F16               	goto	u2245
  7728  0F1B  3001               	movlw	1
  7729  0F1C  02AE               	subwf	___ftmul@cntr,f
  7730  0F1D  1D03               	btfss	3,2
  7731  0F1E  2F07               	goto	l2101
  7732  0F1F  082B               	movf	___ftmul@f3_as_product,w
  7733  0F20  00F0               	movwf	___ftpack@arg
  7734  0F21  082C               	movf	___ftmul@f3_as_product+1,w
  7735  0F22  00F1               	movwf	___ftpack@arg+1
  7736  0F23  082D               	movf	___ftmul@f3_as_product+2,w
  7737  0F24  00F2               	movwf	___ftpack@arg+2
  7738  0F25  082A               	movf	___ftmul@exp,w
  7739  0F26  00A6               	movwf	??___ftmul
  7740  0F27  0826               	movf	??___ftmul,w
  7741  0F28  00F3               	movwf	___ftpack@exp
  7742  0F29  082F               	movf	___ftmul@sign,w
  7743  0F2A  00A7               	movwf	??___ftmul+1
  7744  0F2B  0827               	movf	??___ftmul+1,w
  7745  0F2C  00F4               	movwf	___ftpack@sign
  7746  0F2D  318B  2318         	fcall	___ftpack
  7747  0F2F  0870               	movf	?___ftpack,w
  7748  0F30  0020               	movlb	0	; select bank0
  7749  0F31  00A0               	movwf	?___ftmul
  7750  0F32  0871               	movf	?___ftpack+1,w
  7751  0F33  00A1               	movwf	?___ftmul+1
  7752  0F34  0872               	movf	?___ftpack+2,w
  7753  0F35  00A2               	movwf	?___ftmul+2
  7754  0F36  0008               	return
  7755  0F37                     __end_of___ftmul:	
  7756                           
  7757                           	psect	text6
  7758  0970                     __ptext6:	
  7759 ;; *************** function ___ftge *****************
  7760 ;; Defined at:
  7761 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  ff1             3    0[COMMON] float 
  7764 ;;  ff2             3    3[COMMON] float 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;		None
  7767 ;; Return value:  Size  Location     Type
  7768 ;;		None               void
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7776 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;Total ram usage:        9 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_log
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           
  7790                           ;psect for function ___ftge
  7791  0970                     ___ftge:	
  7792                           
  7793                           ;incstack = 0
  7794                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7795  0970  1FF2               	btfss	___ftge@ff1+2,7
  7796  0971  2986               	goto	l2161
  7797  0972  0970               	comf	___ftge@ff1,w
  7798  0973  00F6               	movwf	??___ftge
  7799  0974  0971               	comf	___ftge@ff1+1,w
  7800  0975  00F7               	movwf	??___ftge+1
  7801  0976  0972               	comf	___ftge@ff1+2,w
  7802  0977  00F8               	movwf	??___ftge+2
  7803  0978  0AF6               	incf	??___ftge,f
  7804  0979  1903               	skipnz
  7805  097A  0AF7               	incf	??___ftge+1,f
  7806  097B  1903               	skipnz
  7807  097C  0AF8               	incf	??___ftge+2,f
  7808  097D  3000               	movlw	0
  7809  097E  0776               	addwf	??___ftge,w
  7810  097F  00F0               	movwf	___ftge@ff1
  7811  0980  3000               	movlw	0
  7812  0981  3D77               	addwfc	??___ftge+1,w
  7813  0982  00F1               	movwf	___ftge@ff1+1
  7814  0983  3080               	movlw	128
  7815  0984  3D78               	addwfc	??___ftge+2,w
  7816  0985  00F2               	movwf	___ftge@ff1+2
  7817  0986                     l2161:	
  7818  0986  1FF5               	btfss	___ftge@ff2+2,7
  7819  0987  299C               	goto	l2165
  7820  0988  0973               	comf	___ftge@ff2,w
  7821  0989  00F6               	movwf	??___ftge
  7822  098A  0974               	comf	___ftge@ff2+1,w
  7823  098B  00F7               	movwf	??___ftge+1
  7824  098C  0975               	comf	___ftge@ff2+2,w
  7825  098D  00F8               	movwf	??___ftge+2
  7826  098E  0AF6               	incf	??___ftge,f
  7827  098F  1903               	skipnz
  7828  0990  0AF7               	incf	??___ftge+1,f
  7829  0991  1903               	skipnz
  7830  0992  0AF8               	incf	??___ftge+2,f
  7831  0993  3000               	movlw	0
  7832  0994  0776               	addwf	??___ftge,w
  7833  0995  00F3               	movwf	___ftge@ff2
  7834  0996  3000               	movlw	0
  7835  0997  3D77               	addwfc	??___ftge+1,w
  7836  0998  00F4               	movwf	___ftge@ff2+1
  7837  0999  3080               	movlw	128
  7838  099A  3D78               	addwfc	??___ftge+2,w
  7839  099B  00F5               	movwf	___ftge@ff2+2
  7840  099C                     l2165:	
  7841  099C  3080               	movlw	128
  7842  099D  06F2               	xorwf	___ftge@ff1+2,f
  7843  099E  3080               	movlw	128
  7844  099F  06F5               	xorwf	___ftge@ff2+2,f
  7845  09A0  0875               	movf	___ftge@ff2+2,w
  7846  09A1  0272               	subwf	___ftge@ff1+2,w
  7847  09A2  1D03               	skipz
  7848  09A3  0008               	return
  7849  09A4  0874               	movf	___ftge@ff2+1,w
  7850  09A5  0271               	subwf	___ftge@ff1+1,w
  7851  09A6  1D03               	skipz
  7852  09A7  0008               	return
  7853  09A8  0873               	movf	___ftge@ff2,w
  7854  09A9  0270               	subwf	___ftge@ff1,w
  7855  09AA  0008               	return
  7856  09AB                     __end_of___ftge:	
  7857                           
  7858                           	psect	text7
  7859  08CD                     __ptext7:	
  7860 ;; *************** function ___awtoft *****************
  7861 ;; Defined at:
  7862 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  c               2    8[COMMON] int 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  sign            1   13[COMMON] unsigned char 
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  3    8[COMMON] float 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2, status,0, pclath, cstack
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7876 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7879 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7880 ;;Total ram usage:        6 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    1
  7883 ;; This function calls:
  7884 ;;		___ftpack
  7885 ;; This function is called by:
  7886 ;;		_tempCalc
  7887 ;;		_log
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           
  7892                           ;psect for function ___awtoft
  7893  08CD                     ___awtoft:	
  7894                           
  7895                           ;incstack = 0
  7896                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7897  08CD  01FD               	clrf	___awtoft@sign
  7898  08CE  1FF9               	btfss	___awtoft@c+1,7
  7899  08CF  28D7               	goto	l2153
  7900  08D0  09F8               	comf	___awtoft@c,f
  7901  08D1  09F9               	comf	___awtoft@c+1,f
  7902  08D2  0AF8               	incf	___awtoft@c,f
  7903  08D3  1903               	skipnz
  7904  08D4  0AF9               	incf	___awtoft@c+1,f
  7905  08D5  01FD               	clrf	___awtoft@sign
  7906  08D6  0AFD               	incf	___awtoft@sign,f
  7907  08D7                     l2153:	
  7908  08D7  0878               	movf	___awtoft@c,w
  7909  08D8  00F0               	movwf	___ftpack@arg
  7910  08D9  0879               	movf	___awtoft@c+1,w
  7911  08DA  00F1               	movwf	___ftpack@arg+1
  7912  08DB  01F2               	clrf	___ftpack@arg+2
  7913  08DC  308E               	movlw	142
  7914  08DD  00FB               	movwf	??___awtoft
  7915  08DE  087B               	movf	??___awtoft,w
  7916  08DF  00F3               	movwf	___ftpack@exp
  7917  08E0  087D               	movf	___awtoft@sign,w
  7918  08E1  00FC               	movwf	??___awtoft+1
  7919  08E2  087C               	movf	??___awtoft+1,w
  7920  08E3  00F4               	movwf	___ftpack@sign
  7921  08E4  318B  2318         	fcall	___ftpack
  7922  08E6  0870               	movf	?___ftpack,w
  7923  08E7  00F8               	movwf	?___awtoft
  7924  08E8  0871               	movf	?___ftpack+1,w
  7925  08E9  00F9               	movwf	?___awtoft+1
  7926  08EA  0872               	movf	?___ftpack+2,w
  7927  08EB  00FA               	movwf	?___awtoft+2
  7928  08EC  0008               	return
  7929  08ED                     __end_of___awtoft:	
  7930                           
  7931                           	psect	text8
  7932  08AF                     __ptext8:	
  7933 ;; *************** function ___ftsub *****************
  7934 ;; Defined at:
  7935 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  f2              3   45[BANK0 ] float 
  7938 ;;  f1              3   48[BANK0 ] float 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;		None
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  3   45[BANK0 ] float 
  7943 ;; Registers used:
  7944 ;;		wreg, status,2, status,0, pclath, cstack
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7950 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7953 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7954 ;;Total ram usage:        6 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:    2
  7957 ;; This function calls:
  7958 ;;		___ftadd
  7959 ;; This function is called by:
  7960 ;;		_tempCalc
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           
  7965                           ;psect for function ___ftsub
  7966  08AF                     ___ftsub:	
  7967                           
  7968                           ;incstack = 0
  7969                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7970  08AF  0020               	movlb	0	; select bank0
  7971  08B0  084F               	movf	___ftsub@f2+2,w
  7972  08B1  044E               	iorwf	___ftsub@f2+1,w
  7973  08B2  044D               	iorwf	___ftsub@f2,w
  7974  08B3  1903               	skipnz
  7975  08B4  28B7               	goto	l2539
  7976  08B5  3080               	movlw	128
  7977  08B6  06CF               	xorwf	___ftsub@f2+2,f
  7978  08B7                     l2539:	
  7979  08B7  0850               	movf	___ftsub@f1,w
  7980  08B8  00C0               	movwf	___ftadd@f1
  7981  08B9  0851               	movf	___ftsub@f1+1,w
  7982  08BA  00C1               	movwf	___ftadd@f1+1
  7983  08BB  0852               	movf	___ftsub@f1+2,w
  7984  08BC  00C2               	movwf	___ftadd@f1+2
  7985  08BD  084D               	movf	___ftsub@f2,w
  7986  08BE  00C3               	movwf	___ftadd@f2
  7987  08BF  084E               	movf	___ftsub@f2+1,w
  7988  08C0  00C4               	movwf	___ftadd@f2+1
  7989  08C1  084F               	movf	___ftsub@f2+2,w
  7990  08C2  00C5               	movwf	___ftadd@f2+2
  7991  08C3  3181  2139         	fcall	___ftadd
  7992  08C5  0020               	movlb	0	; select bank0
  7993  08C6  0840               	movf	?___ftadd,w
  7994  08C7  00CD               	movwf	?___ftsub
  7995  08C8  0841               	movf	?___ftadd+1,w
  7996  08C9  00CE               	movwf	?___ftsub+1
  7997  08CA  0842               	movf	?___ftadd+2,w
  7998  08CB  00CF               	movwf	?___ftsub+2
  7999  08CC  0008               	return
  8000  08CD                     __end_of___ftsub:	
  8001                           
  8002                           	psect	text9
  8003  0139                     __ptext9:	
  8004 ;; *************** function ___ftadd *****************
  8005 ;; Defined at:
  8006 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;  f1              3   32[BANK0 ] float 
  8009 ;;  f2              3   35[BANK0 ] float 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;  exp1            1   44[BANK0 ] unsigned char 
  8012 ;;  exp2            1   43[BANK0 ] unsigned char 
  8013 ;;  sign            1   42[BANK0 ] unsigned char 
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  3   32[BANK0 ] float 
  8016 ;; Registers used:
  8017 ;;		wreg, status,2, status,0, pclath, cstack
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8023 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;Total ram usage:       13 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:    1
  8030 ;; This function calls:
  8031 ;;		___ftpack
  8032 ;; This function is called by:
  8033 ;;		_tempCalc
  8034 ;;		___ftsub
  8035 ;;		_log
  8036 ;;		_eval_poly
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           
  8041                           ;psect for function ___ftadd
  8042  0139                     ___ftadd:	
  8043                           
  8044                           ;incstack = 0
  8045                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8046  0139  0020               	movlb	0	; select bank0
  8047  013A  0840               	movf	___ftadd@f1,w
  8048  013B  00C6               	movwf	??___ftadd
  8049  013C  0841               	movf	___ftadd@f1+1,w
  8050  013D  00C7               	movwf	??___ftadd+1
  8051  013E  0842               	movf	___ftadd@f1+2,w
  8052  013F  00C8               	movwf	??___ftadd+2
  8053  0140  1003               	clrc
  8054  0141  0D47               	rlf	??___ftadd+1,w
  8055  0142  0D48               	rlf	??___ftadd+2,w
  8056  0143  00C9               	movwf	??___ftadd+3
  8057  0144  0849               	movf	??___ftadd+3,w
  8058  0145  00CC               	movwf	___ftadd@exp1
  8059  0146  0843               	movf	___ftadd@f2,w
  8060  0147  00C6               	movwf	??___ftadd
  8061  0148  0844               	movf	___ftadd@f2+1,w
  8062  0149  00C7               	movwf	??___ftadd+1
  8063  014A  0845               	movf	___ftadd@f2+2,w
  8064  014B  00C8               	movwf	??___ftadd+2
  8065  014C  1003               	clrc
  8066  014D  0D47               	rlf	??___ftadd+1,w
  8067  014E  0D48               	rlf	??___ftadd+2,w
  8068  014F  00C9               	movwf	??___ftadd+3
  8069  0150  0849               	movf	??___ftadd+3,w
  8070  0151  00CB               	movwf	___ftadd@exp2
  8071  0152  084C               	movf	___ftadd@exp1,w
  8072  0153  1903               	btfsc	3,2
  8073  0154  2961               	goto	l2001
  8074  0155  084B               	movf	___ftadd@exp2,w
  8075  0156  024C               	subwf	___ftadd@exp1,w
  8076  0157  1803               	skipnc
  8077  0158  2968               	goto	l2005
  8078  0159  034C               	decf	___ftadd@exp1,w
  8079  015A  3AFF               	xorlw	255
  8080  015B  074B               	addwf	___ftadd@exp2,w
  8081  015C  00C6               	movwf	??___ftadd
  8082  015D  3019               	movlw	25
  8083  015E  0246               	subwf	??___ftadd,w
  8084  015F  1C03               	skipc
  8085  0160  2968               	goto	l2005
  8086  0161                     l2001:	
  8087  0161  0843               	movf	___ftadd@f2,w
  8088  0162  00C0               	movwf	?___ftadd
  8089  0163  0844               	movf	___ftadd@f2+1,w
  8090  0164  00C1               	movwf	?___ftadd+1
  8091  0165  0845               	movf	___ftadd@f2+2,w
  8092  0166  00C2               	movwf	?___ftadd+2
  8093  0167  0008               	return
  8094  0168                     l2005:	
  8095  0168  084B               	movf	___ftadd@exp2,w
  8096  0169  1903               	btfsc	3,2
  8097  016A  0008               	return
  8098  016B  084C               	movf	___ftadd@exp1,w
  8099  016C  024B               	subwf	___ftadd@exp2,w
  8100  016D  1803               	skipnc
  8101  016E  2977               	goto	l2011
  8102  016F  034B               	decf	___ftadd@exp2,w
  8103  0170  3AFF               	xorlw	255
  8104  0171  074C               	addwf	___ftadd@exp1,w
  8105  0172  00C6               	movwf	??___ftadd
  8106  0173  3019               	movlw	25
  8107  0174  0246               	subwf	??___ftadd,w
  8108  0175  1803               	btfsc	3,0
  8109  0176  0008               	return
  8110  0177                     l2011:	
  8111  0177  3006               	movlw	6
  8112  0178  00C6               	movwf	??___ftadd
  8113  0179  0846               	movf	??___ftadd,w
  8114  017A  00CA               	movwf	___ftadd@sign
  8115  017B  1BC2               	btfsc	___ftadd@f1+2,7
  8116  017C  17CA               	bsf	___ftadd@sign,7
  8117  017D  1BC5               	btfsc	___ftadd@f2+2,7
  8118  017E  174A               	bsf	___ftadd@sign,6
  8119  017F  17C1               	bsf	___ftadd@f1+1,7
  8120  0180  30FF               	movlw	255
  8121  0181  05C0               	andwf	___ftadd@f1,f
  8122  0182  30FF               	movlw	255
  8123  0183  05C1               	andwf	___ftadd@f1+1,f
  8124  0184  3000               	movlw	0
  8125  0185  05C2               	andwf	___ftadd@f1+2,f
  8126  0186  17C4               	bsf	___ftadd@f2+1,7
  8127  0187  30FF               	movlw	255
  8128  0188  05C3               	andwf	___ftadd@f2,f
  8129  0189  30FF               	movlw	255
  8130  018A  05C4               	andwf	___ftadd@f2+1,f
  8131  018B  3000               	movlw	0
  8132  018C  05C5               	andwf	___ftadd@f2+2,f
  8133  018D  084B               	movf	___ftadd@exp2,w
  8134  018E  024C               	subwf	___ftadd@exp1,w
  8135  018F  1803               	skipnc
  8136  0190  29B3               	goto	l2033
  8137  0191                     l2023:	
  8138  0191  3001               	movlw	1
  8139  0192                     u2005:	
  8140  0192  35C3               	lslf	___ftadd@f2,f
  8141  0193  0DC4               	rlf	___ftadd@f2+1,f
  8142  0194  0DC5               	rlf	___ftadd@f2+2,f
  8143  0195  0B89               	decfsz	9,f
  8144  0196  2992               	goto	u2005
  8145  0197  3001               	movlw	1
  8146  0198  02CB               	subwf	___ftadd@exp2,f
  8147  0199  084B               	movf	___ftadd@exp2,w
  8148  019A  064C               	xorwf	___ftadd@exp1,w
  8149  019B  1903               	skipnz
  8150  019C  29AE               	goto	l2031
  8151  019D  3001               	movlw	1
  8152  019E  02CA               	subwf	___ftadd@sign,f
  8153  019F  084A               	movf	___ftadd@sign,w
  8154  01A0  3907               	andlw	7
  8155  01A1  1903               	btfsc	3,2
  8156  01A2  29AE               	goto	l2031
  8157  01A3  2991               	goto	l2023
  8158  01A4                     l2029:	
  8159  01A4  3001               	movlw	1
  8160  01A5                     u2035:	
  8161  01A5  36C2               	lsrf	___ftadd@f1+2,f
  8162  01A6  0CC1               	rrf	___ftadd@f1+1,f
  8163  01A7  0CC0               	rrf	___ftadd@f1,f
  8164  01A8  0B89               	decfsz	9,f
  8165  01A9  29A5               	goto	u2035
  8166  01AA  3001               	movlw	1
  8167  01AB  00C6               	movwf	??___ftadd
  8168  01AC  0846               	movf	??___ftadd,w
  8169  01AD  07CC               	addwf	___ftadd@exp1,f
  8170  01AE                     l2031:	
  8171  01AE  084C               	movf	___ftadd@exp1,w
  8172  01AF  064B               	xorwf	___ftadd@exp2,w
  8173  01B0  1903               	btfsc	3,2
  8174  01B1  29D8               	goto	l639
  8175  01B2  29A4               	goto	l2029
  8176  01B3                     l2033:	
  8177  01B3  084C               	movf	___ftadd@exp1,w
  8178  01B4  024B               	subwf	___ftadd@exp2,w
  8179  01B5  1803               	skipnc
  8180  01B6  29D8               	goto	l639
  8181  01B7                     l2035:	
  8182  01B7  3001               	movlw	1
  8183  01B8                     u2065:	
  8184  01B8  35C0               	lslf	___ftadd@f1,f
  8185  01B9  0DC1               	rlf	___ftadd@f1+1,f
  8186  01BA  0DC2               	rlf	___ftadd@f1+2,f
  8187  01BB  0B89               	decfsz	9,f
  8188  01BC  29B8               	goto	u2065
  8189  01BD  3001               	movlw	1
  8190  01BE  02CC               	subwf	___ftadd@exp1,f
  8191  01BF  084B               	movf	___ftadd@exp2,w
  8192  01C0  064C               	xorwf	___ftadd@exp1,w
  8193  01C1  1903               	skipnz
  8194  01C2  29D4               	goto	l2043
  8195  01C3  3001               	movlw	1
  8196  01C4  02CA               	subwf	___ftadd@sign,f
  8197  01C5  084A               	movf	___ftadd@sign,w
  8198  01C6  3907               	andlw	7
  8199  01C7  1903               	btfsc	3,2
  8200  01C8  29D4               	goto	l2043
  8201  01C9  29B7               	goto	l2035
  8202  01CA                     l2041:	
  8203  01CA  3001               	movlw	1
  8204  01CB                     u2095:	
  8205  01CB  36C5               	lsrf	___ftadd@f2+2,f
  8206  01CC  0CC4               	rrf	___ftadd@f2+1,f
  8207  01CD  0CC3               	rrf	___ftadd@f2,f
  8208  01CE  0B89               	decfsz	9,f
  8209  01CF  29CB               	goto	u2095
  8210  01D0  3001               	movlw	1
  8211  01D1  00C6               	movwf	??___ftadd
  8212  01D2  0846               	movf	??___ftadd,w
  8213  01D3  07CB               	addwf	___ftadd@exp2,f
  8214  01D4                     l2043:	
  8215  01D4  084C               	movf	___ftadd@exp1,w
  8216  01D5  064B               	xorwf	___ftadd@exp2,w
  8217  01D6  1D03               	skipz
  8218  01D7  29CA               	goto	l2041
  8219  01D8                     l639:	
  8220  01D8  1FCA               	btfss	___ftadd@sign,7
  8221  01D9  29EA               	goto	l2047
  8222  01DA  30FF               	movlw	255
  8223  01DB  06C0               	xorwf	___ftadd@f1,f
  8224  01DC  30FF               	movlw	255
  8225  01DD  06C1               	xorwf	___ftadd@f1+1,f
  8226  01DE  30FF               	movlw	255
  8227  01DF  06C2               	xorwf	___ftadd@f1+2,f
  8228  01E0  3001               	movlw	1
  8229  01E1  07C0               	addwf	___ftadd@f1,f
  8230  01E2  3000               	movlw	0
  8231  01E3  1803               	skipnc
  8232  01E4  3001               	movlw	1
  8233  01E5  07C1               	addwf	___ftadd@f1+1,f
  8234  01E6  3000               	movlw	0
  8235  01E7  1803               	skipnc
  8236  01E8  3001               	movlw	1
  8237  01E9  07C2               	addwf	___ftadd@f1+2,f
  8238  01EA                     l2047:	
  8239  01EA  1F4A               	btfss	___ftadd@sign,6
  8240  01EB  29FC               	goto	l2051
  8241  01EC  30FF               	movlw	255
  8242  01ED  06C3               	xorwf	___ftadd@f2,f
  8243  01EE  30FF               	movlw	255
  8244  01EF  06C4               	xorwf	___ftadd@f2+1,f
  8245  01F0  30FF               	movlw	255
  8246  01F1  06C5               	xorwf	___ftadd@f2+2,f
  8247  01F2  3001               	movlw	1
  8248  01F3  07C3               	addwf	___ftadd@f2,f
  8249  01F4  3000               	movlw	0
  8250  01F5  1803               	skipnc
  8251  01F6  3001               	movlw	1
  8252  01F7  07C4               	addwf	___ftadd@f2+1,f
  8253  01F8  3000               	movlw	0
  8254  01F9  1803               	skipnc
  8255  01FA  3001               	movlw	1
  8256  01FB  07C5               	addwf	___ftadd@f2+2,f
  8257  01FC                     l2051:	
  8258  01FC  01CA               	clrf	___ftadd@sign
  8259  01FD  0840               	movf	___ftadd@f1,w
  8260  01FE  07C3               	addwf	___ftadd@f2,f
  8261  01FF  0841               	movf	___ftadd@f1+1,w
  8262  0200  3DC4               	addwfc	___ftadd@f2+1,f
  8263  0201  0842               	movf	___ftadd@f1+2,w
  8264  0202  3DC5               	addwfc	___ftadd@f2+2,f
  8265  0203  1FC5               	btfss	___ftadd@f2+2,7
  8266  0204  2A17               	goto	l2061
  8267  0205  30FF               	movlw	255
  8268  0206  06C3               	xorwf	___ftadd@f2,f
  8269  0207  30FF               	movlw	255
  8270  0208  06C4               	xorwf	___ftadd@f2+1,f
  8271  0209  30FF               	movlw	255
  8272  020A  06C5               	xorwf	___ftadd@f2+2,f
  8273  020B  3001               	movlw	1
  8274  020C  07C3               	addwf	___ftadd@f2,f
  8275  020D  3000               	movlw	0
  8276  020E  1803               	skipnc
  8277  020F  3001               	movlw	1
  8278  0210  07C4               	addwf	___ftadd@f2+1,f
  8279  0211  3000               	movlw	0
  8280  0212  1803               	skipnc
  8281  0213  3001               	movlw	1
  8282  0214  07C5               	addwf	___ftadd@f2+2,f
  8283  0215  01CA               	clrf	___ftadd@sign
  8284  0216  0ACA               	incf	___ftadd@sign,f
  8285  0217                     l2061:	
  8286  0217  0843               	movf	___ftadd@f2,w
  8287  0218  00F0               	movwf	___ftpack@arg
  8288  0219  0844               	movf	___ftadd@f2+1,w
  8289  021A  00F1               	movwf	___ftpack@arg+1
  8290  021B  0845               	movf	___ftadd@f2+2,w
  8291  021C  00F2               	movwf	___ftpack@arg+2
  8292  021D  084C               	movf	___ftadd@exp1,w
  8293  021E  00C6               	movwf	??___ftadd
  8294  021F  0846               	movf	??___ftadd,w
  8295  0220  00F3               	movwf	___ftpack@exp
  8296  0221  084A               	movf	___ftadd@sign,w
  8297  0222  00C7               	movwf	??___ftadd+1
  8298  0223  0847               	movf	??___ftadd+1,w
  8299  0224  00F4               	movwf	___ftpack@sign
  8300  0225  318B  2318         	fcall	___ftpack
  8301  0227  0870               	movf	?___ftpack,w
  8302  0228  0020               	movlb	0	; select bank0
  8303  0229  00C0               	movwf	?___ftadd
  8304  022A  0871               	movf	?___ftpack+1,w
  8305  022B  00C1               	movwf	?___ftadd+1
  8306  022C  0872               	movf	?___ftpack+2,w
  8307  022D  00C2               	movwf	?___ftadd+2
  8308  022E  0008               	return
  8309  022F                     __end_of___ftadd:	
  8310                           
  8311                           	psect	text10
  8312  0D2A                     __ptext10:	
  8313 ;; *************** function ___ftdiv *****************
  8314 ;; Defined at:
  8315 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  f2              3   16[BANK0 ] float 
  8318 ;;  f1              3   19[BANK0 ] float 
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  f3              3   27[BANK0 ] float 
  8321 ;;  sign            1   31[BANK0 ] unsigned char 
  8322 ;;  exp             1   30[BANK0 ] unsigned char 
  8323 ;;  cntr            1   26[BANK0 ] unsigned char 
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  3   16[BANK0 ] float 
  8326 ;; Registers used:
  8327 ;;		wreg, status,2, status,0, pclath, cstack
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8333 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8335 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8336 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8337 ;;Total ram usage:       16 bytes
  8338 ;; Hardware stack levels used:    1
  8339 ;; Hardware stack levels required when called:    1
  8340 ;; This function calls:
  8341 ;;		___ftpack
  8342 ;; This function is called by:
  8343 ;;		_tempCalc
  8344 ;; This function uses a non-reentrant model
  8345 ;;
  8346                           
  8347                           
  8348                           ;psect for function ___ftdiv
  8349  0D2A                     ___ftdiv:	
  8350                           
  8351                           ;incstack = 0
  8352                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8353  0D2A  0020               	movlb	0	; select bank0
  8354  0D2B  0833               	movf	___ftdiv@f1,w
  8355  0D2C  00B6               	movwf	??___ftdiv
  8356  0D2D  0834               	movf	___ftdiv@f1+1,w
  8357  0D2E  00B7               	movwf	??___ftdiv+1
  8358  0D2F  0835               	movf	___ftdiv@f1+2,w
  8359  0D30  00B8               	movwf	??___ftdiv+2
  8360  0D31  1003               	clrc
  8361  0D32  0D37               	rlf	??___ftdiv+1,w
  8362  0D33  0D38               	rlf	??___ftdiv+2,w
  8363  0D34  00B9               	movwf	??___ftdiv+3
  8364  0D35  0839               	movf	??___ftdiv+3,w
  8365  0D36  00BE               	movwf	___ftdiv@exp
  8366  0D37  083E               	movf	___ftdiv@exp,w
  8367  0D38  1D03               	btfss	3,2
  8368  0D39  2D41               	goto	l2499
  8369  0D3A  3000               	movlw	0
  8370  0D3B  00B0               	movwf	?___ftdiv
  8371  0D3C  3000               	movlw	0
  8372  0D3D  00B1               	movwf	?___ftdiv+1
  8373  0D3E  3000               	movlw	0
  8374  0D3F  00B2               	movwf	?___ftdiv+2
  8375  0D40  0008               	return
  8376  0D41                     l2499:	
  8377  0D41  0830               	movf	___ftdiv@f2,w
  8378  0D42  00B6               	movwf	??___ftdiv
  8379  0D43  0831               	movf	___ftdiv@f2+1,w
  8380  0D44  00B7               	movwf	??___ftdiv+1
  8381  0D45  0832               	movf	___ftdiv@f2+2,w
  8382  0D46  00B8               	movwf	??___ftdiv+2
  8383  0D47  1003               	clrc
  8384  0D48  0D37               	rlf	??___ftdiv+1,w
  8385  0D49  0D38               	rlf	??___ftdiv+2,w
  8386  0D4A  00B9               	movwf	??___ftdiv+3
  8387  0D4B  0839               	movf	??___ftdiv+3,w
  8388  0D4C  00BF               	movwf	___ftdiv@sign
  8389  0D4D  083F               	movf	___ftdiv@sign,w
  8390  0D4E  1D03               	btfss	3,2
  8391  0D4F  2D57               	goto	l2505
  8392  0D50  3000               	movlw	0
  8393  0D51  00B0               	movwf	?___ftdiv
  8394  0D52  3000               	movlw	0
  8395  0D53  00B1               	movwf	?___ftdiv+1
  8396  0D54  3000               	movlw	0
  8397  0D55  00B2               	movwf	?___ftdiv+2
  8398  0D56  0008               	return
  8399  0D57                     l2505:	
  8400  0D57  3000               	movlw	0
  8401  0D58  00BB               	movwf	___ftdiv@f3
  8402  0D59  3000               	movlw	0
  8403  0D5A  00BC               	movwf	___ftdiv@f3+1
  8404  0D5B  3000               	movlw	0
  8405  0D5C  00BD               	movwf	___ftdiv@f3+2
  8406  0D5D  3089               	movlw	137
  8407  0D5E  073F               	addwf	___ftdiv@sign,w
  8408  0D5F  00B6               	movwf	??___ftdiv
  8409  0D60  0836               	movf	??___ftdiv,w
  8410  0D61  02BE               	subwf	___ftdiv@exp,f
  8411  0D62  0833               	movf	___ftdiv@f1,w
  8412  0D63  00B6               	movwf	??___ftdiv
  8413  0D64  0834               	movf	___ftdiv@f1+1,w
  8414  0D65  00B7               	movwf	??___ftdiv+1
  8415  0D66  0835               	movf	___ftdiv@f1+2,w
  8416  0D67  00B8               	movwf	??___ftdiv+2
  8417  0D68  3010               	movlw	16
  8418  0D69                     u2715:	
  8419  0D69  36B8               	lsrf	??___ftdiv+2,f
  8420  0D6A  0CB7               	rrf	??___ftdiv+1,f
  8421  0D6B  0CB6               	rrf	??___ftdiv,f
  8422  0D6C  0B89               	decfsz	9,f
  8423  0D6D  2D69               	goto	u2715
  8424  0D6E  0836               	movf	??___ftdiv,w
  8425  0D6F  00B9               	movwf	??___ftdiv+3
  8426  0D70  0839               	movf	??___ftdiv+3,w
  8427  0D71  00BF               	movwf	___ftdiv@sign
  8428  0D72  0830               	movf	___ftdiv@f2,w
  8429  0D73  00B6               	movwf	??___ftdiv
  8430  0D74  0831               	movf	___ftdiv@f2+1,w
  8431  0D75  00B7               	movwf	??___ftdiv+1
  8432  0D76  0832               	movf	___ftdiv@f2+2,w
  8433  0D77  00B8               	movwf	??___ftdiv+2
  8434  0D78  3010               	movlw	16
  8435  0D79                     u2725:	
  8436  0D79  36B8               	lsrf	??___ftdiv+2,f
  8437  0D7A  0CB7               	rrf	??___ftdiv+1,f
  8438  0D7B  0CB6               	rrf	??___ftdiv,f
  8439  0D7C  0B89               	decfsz	9,f
  8440  0D7D  2D79               	goto	u2725
  8441  0D7E  0836               	movf	??___ftdiv,w
  8442  0D7F  00B9               	movwf	??___ftdiv+3
  8443  0D80  0839               	movf	??___ftdiv+3,w
  8444  0D81  06BF               	xorwf	___ftdiv@sign,f
  8445  0D82  3080               	movlw	128
  8446  0D83  00B6               	movwf	??___ftdiv
  8447  0D84  0836               	movf	??___ftdiv,w
  8448  0D85  05BF               	andwf	___ftdiv@sign,f
  8449  0D86  17B4               	bsf	___ftdiv@f1+1,7
  8450  0D87  30FF               	movlw	255
  8451  0D88  05B3               	andwf	___ftdiv@f1,f
  8452  0D89  30FF               	movlw	255
  8453  0D8A  05B4               	andwf	___ftdiv@f1+1,f
  8454  0D8B  3000               	movlw	0
  8455  0D8C  05B5               	andwf	___ftdiv@f1+2,f
  8456  0D8D  17B1               	bsf	___ftdiv@f2+1,7
  8457  0D8E  30FF               	movlw	255
  8458  0D8F  05B0               	andwf	___ftdiv@f2,f
  8459  0D90  30FF               	movlw	255
  8460  0D91  05B1               	andwf	___ftdiv@f2+1,f
  8461  0D92  3000               	movlw	0
  8462  0D93  05B2               	andwf	___ftdiv@f2+2,f
  8463  0D94  3018               	movlw	24
  8464  0D95  00B6               	movwf	??___ftdiv
  8465  0D96  0836               	movf	??___ftdiv,w
  8466  0D97  00BA               	movwf	___ftdiv@cntr
  8467  0D98                     l2519:	
  8468  0D98  3001               	movlw	1
  8469  0D99                     u2735:	
  8470  0D99  35BB               	lslf	___ftdiv@f3,f
  8471  0D9A  0DBC               	rlf	___ftdiv@f3+1,f
  8472  0D9B  0DBD               	rlf	___ftdiv@f3+2,f
  8473  0D9C  0B89               	decfsz	9,f
  8474  0D9D  2D99               	goto	u2735
  8475  0D9E  0832               	movf	___ftdiv@f2+2,w
  8476  0D9F  0235               	subwf	___ftdiv@f1+2,w
  8477  0DA0  1D03               	skipz
  8478  0DA1  2DA8               	goto	u2745
  8479  0DA2  0831               	movf	___ftdiv@f2+1,w
  8480  0DA3  0234               	subwf	___ftdiv@f1+1,w
  8481  0DA4  1D03               	skipz
  8482  0DA5  2DA8               	goto	u2745
  8483  0DA6  0830               	movf	___ftdiv@f2,w
  8484  0DA7  0233               	subwf	___ftdiv@f1,w
  8485  0DA8                     u2745:	
  8486  0DA8  1C03               	skipc
  8487  0DA9  2DB1               	goto	l2527
  8488  0DAA  0830               	movf	___ftdiv@f2,w
  8489  0DAB  02B3               	subwf	___ftdiv@f1,f
  8490  0DAC  0831               	movf	___ftdiv@f2+1,w
  8491  0DAD  3BB4               	subwfb	___ftdiv@f1+1,f
  8492  0DAE  0832               	movf	___ftdiv@f2+2,w
  8493  0DAF  3BB5               	subwfb	___ftdiv@f1+2,f
  8494  0DB0  143B               	bsf	___ftdiv@f3,0
  8495  0DB1                     l2527:	
  8496  0DB1  3001               	movlw	1
  8497  0DB2                     u2755:	
  8498  0DB2  35B3               	lslf	___ftdiv@f1,f
  8499  0DB3  0DB4               	rlf	___ftdiv@f1+1,f
  8500  0DB4  0DB5               	rlf	___ftdiv@f1+2,f
  8501  0DB5  0B89               	decfsz	9,f
  8502  0DB6  2DB2               	goto	u2755
  8503  0DB7  3001               	movlw	1
  8504  0DB8  02BA               	subwf	___ftdiv@cntr,f
  8505  0DB9  1D03               	btfss	3,2
  8506  0DBA  2D98               	goto	l2519
  8507  0DBB  083B               	movf	___ftdiv@f3,w
  8508  0DBC  00F0               	movwf	___ftpack@arg
  8509  0DBD  083C               	movf	___ftdiv@f3+1,w
  8510  0DBE  00F1               	movwf	___ftpack@arg+1
  8511  0DBF  083D               	movf	___ftdiv@f3+2,w
  8512  0DC0  00F2               	movwf	___ftpack@arg+2
  8513  0DC1  083E               	movf	___ftdiv@exp,w
  8514  0DC2  00B6               	movwf	??___ftdiv
  8515  0DC3  0836               	movf	??___ftdiv,w
  8516  0DC4  00F3               	movwf	___ftpack@exp
  8517  0DC5  083F               	movf	___ftdiv@sign,w
  8518  0DC6  00B7               	movwf	??___ftdiv+1
  8519  0DC7  0837               	movf	??___ftdiv+1,w
  8520  0DC8  00F4               	movwf	___ftpack@sign
  8521  0DC9  318B  2318         	fcall	___ftpack
  8522  0DCB  0870               	movf	?___ftpack,w
  8523  0DCC  0020               	movlb	0	; select bank0
  8524  0DCD  00B0               	movwf	?___ftdiv
  8525  0DCE  0871               	movf	?___ftpack+1,w
  8526  0DCF  00B1               	movwf	?___ftdiv+1
  8527  0DD0  0872               	movf	?___ftpack+2,w
  8528  0DD1  00B2               	movwf	?___ftdiv+2
  8529  0DD2  0008               	return
  8530  0DD3                     __end_of___ftdiv:	
  8531                           
  8532                           	psect	text11
  8533  0B18                     __ptext11:	
  8534 ;; *************** function ___ftpack *****************
  8535 ;; Defined at:
  8536 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  arg             3    0[COMMON] unsigned um
  8539 ;;  exp             1    3[COMMON] unsigned char 
  8540 ;;  sign            1    4[COMMON] unsigned char 
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;		None
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  3    0[COMMON] float 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2, status,0
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8552 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8554 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8555 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8556 ;;Total ram usage:        8 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		___awtoft
  8562 ;;		___ftadd
  8563 ;;		___ftdiv
  8564 ;;		___ftmul
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           
  8569                           ;psect for function ___ftpack
  8570  0B18                     ___ftpack:	
  8571                           
  8572                           ;incstack = 0
  8573                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8574  0B18  0873               	movf	___ftpack@exp,w
  8575  0B19  1903               	btfsc	3,2
  8576  0B1A  2B20               	goto	l1937
  8577  0B1B  0872               	movf	___ftpack@arg+2,w
  8578  0B1C  0471               	iorwf	___ftpack@arg+1,w
  8579  0B1D  0470               	iorwf	___ftpack@arg,w
  8580  0B1E  1D03               	skipz
  8581  0B1F  2B31               	goto	l1943
  8582  0B20                     l1937:	
  8583  0B20  3000               	movlw	0
  8584  0B21  00F0               	movwf	?___ftpack
  8585  0B22  3000               	movlw	0
  8586  0B23  00F1               	movwf	?___ftpack+1
  8587  0B24  3000               	movlw	0
  8588  0B25  00F2               	movwf	?___ftpack+2
  8589  0B26  0008               	return
  8590  0B27                     l1941:	
  8591  0B27  3001               	movlw	1
  8592  0B28  00F5               	movwf	??___ftpack
  8593  0B29  0875               	movf	??___ftpack,w
  8594  0B2A  07F3               	addwf	___ftpack@exp,f
  8595  0B2B  3001               	movlw	1
  8596  0B2C                     u1735:	
  8597  0B2C  36F2               	lsrf	___ftpack@arg+2,f
  8598  0B2D  0CF1               	rrf	___ftpack@arg+1,f
  8599  0B2E  0CF0               	rrf	___ftpack@arg,f
  8600  0B2F  0B89               	decfsz	9,f
  8601  0B30  2B2C               	goto	u1735
  8602  0B31                     l1943:	
  8603  0B31  30FE               	movlw	254
  8604  0B32  0572               	andwf	___ftpack@arg+2,w
  8605  0B33  1903               	btfsc	3,2
  8606  0B34  2B4A               	goto	l608
  8607  0B35  2B27               	goto	l1941
  8608  0B36                     l1945:	
  8609  0B36  3001               	movlw	1
  8610  0B37  00F5               	movwf	??___ftpack
  8611  0B38  0875               	movf	??___ftpack,w
  8612  0B39  07F3               	addwf	___ftpack@exp,f
  8613  0B3A  3001               	movlw	1
  8614  0B3B  07F0               	addwf	___ftpack@arg,f
  8615  0B3C  3000               	movlw	0
  8616  0B3D  1803               	skipnc
  8617  0B3E  3001               	movlw	1
  8618  0B3F  07F1               	addwf	___ftpack@arg+1,f
  8619  0B40  3000               	movlw	0
  8620  0B41  1803               	skipnc
  8621  0B42  3001               	movlw	1
  8622  0B43  07F2               	addwf	___ftpack@arg+2,f
  8623  0B44  3001               	movlw	1
  8624  0B45                     u1755:	
  8625  0B45  36F2               	lsrf	___ftpack@arg+2,f
  8626  0B46  0CF1               	rrf	___ftpack@arg+1,f
  8627  0B47  0CF0               	rrf	___ftpack@arg,f
  8628  0B48  0B89               	decfsz	9,f
  8629  0B49  2B45               	goto	u1755
  8630  0B4A                     l608:	
  8631  0B4A  30FF               	movlw	255
  8632  0B4B  0572               	andwf	___ftpack@arg+2,w
  8633  0B4C  1903               	btfsc	3,2
  8634  0B4D  2B57               	goto	l1953
  8635  0B4E  2B36               	goto	l1945
  8636  0B4F                     l1951:	
  8637  0B4F  3001               	movlw	1
  8638  0B50  02F3               	subwf	___ftpack@exp,f
  8639  0B51  3001               	movlw	1
  8640  0B52                     u1775:	
  8641  0B52  35F0               	lslf	___ftpack@arg,f
  8642  0B53  0DF1               	rlf	___ftpack@arg+1,f
  8643  0B54  0DF2               	rlf	___ftpack@arg+2,f
  8644  0B55  0B89               	decfsz	9,f
  8645  0B56  2B52               	goto	u1775
  8646  0B57                     l1953:	
  8647  0B57  1BF1               	btfsc	___ftpack@arg+1,7
  8648  0B58  2B5D               	goto	l615
  8649  0B59  3002               	movlw	2
  8650  0B5A  0273               	subwf	___ftpack@exp,w
  8651  0B5B  1803               	skipnc
  8652  0B5C  2B4F               	goto	l1951
  8653  0B5D                     l615:	
  8654  0B5D  1873               	btfsc	___ftpack@exp,0
  8655  0B5E  2B65               	goto	l616
  8656  0B5F  30FF               	movlw	255
  8657  0B60  05F0               	andwf	___ftpack@arg,f
  8658  0B61  307F               	movlw	127
  8659  0B62  05F1               	andwf	___ftpack@arg+1,f
  8660  0B63  30FF               	movlw	255
  8661  0B64  05F2               	andwf	___ftpack@arg+2,f
  8662  0B65                     l616:	
  8663  0B65  1003               	clrc
  8664  0B66  0CF3               	rrf	___ftpack@exp,f
  8665  0B67  0873               	movf	___ftpack@exp,w
  8666  0B68  00F5               	movwf	??___ftpack
  8667  0B69  01F6               	clrf	??___ftpack+1
  8668  0B6A  01F7               	clrf	??___ftpack+2
  8669  0B6B  3010               	movlw	16
  8670  0B6C                     u1815:	
  8671  0B6C  35F5               	lslf	??___ftpack,f
  8672  0B6D  0DF6               	rlf	??___ftpack+1,f
  8673  0B6E  0DF7               	rlf	??___ftpack+2,f
  8674  0B6F  0B89               	decfsz	9,f
  8675  0B70  2B6C               	goto	u1815
  8676  0B71  0875               	movf	??___ftpack,w
  8677  0B72  04F0               	iorwf	___ftpack@arg,f
  8678  0B73  0876               	movf	??___ftpack+1,w
  8679  0B74  04F1               	iorwf	___ftpack@arg+1,f
  8680  0B75  0877               	movf	??___ftpack+2,w
  8681  0B76  04F2               	iorwf	___ftpack@arg+2,f
  8682  0B77  0874               	movf	___ftpack@sign,w
  8683  0B78  1903               	btfsc	3,2
  8684  0B79  0008               	return
  8685  0B7A  17F2               	bsf	___ftpack@arg+2,7
  8686  0B7B  0008               	return
  8687  0B7C                     __end_of___ftpack:	
  8688                           
  8689                           	psect	text12
  8690  0344                     __ptext12:	
  8691 ;; *************** function _readAnalog *****************
  8692 ;; Defined at:
  8693 ;;		line 35 in file "adc.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;  channel         2    6[BANK0 ] int 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;  value           2   11[COMMON] int 
  8698 ;;  analog_chann    2    9[COMMON] int 
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  2    6[BANK0 ] int 
  8701 ;; Registers used:
  8702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8709 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8710 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8711 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8712 ;;Total ram usage:       22 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    1
  8715 ;; This function calls:
  8716 ;;		_ADCRead
  8717 ;;		___aldiv
  8718 ;;		___wmul
  8719 ;; This function is called by:
  8720 ;;		_main
  8721 ;; This function uses a non-reentrant model
  8722 ;;
  8723                           
  8724                           
  8725                           ;psect for function _readAnalog
  8726  0344                     _readAnalog:	
  8727                           
  8728                           ;adc.c: 37: int value;
  8729                           ;adc.c: 39: int analog_channel = channels[channel];
  8730                           
  8731                           ;incstack = 0
  8732                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8733  0344  0020               	movlb	0	; select bank0
  8734  0345  3526               	lslf	readAnalog@channel,w
  8735  0346  3EB0               	addlw	(low (_channels| (0+256)))& (0+255)
  8736  0347  0086               	movwf	6
  8737  0348  3001               	movlw	1	; select bank3/4
  8738  0349  0087               	movwf	7
  8739  034A  3F40               	moviw [0]fsr1
  8740  034B  00F9               	movwf	readAnalog@analog_channel
  8741  034C  3F41               	moviw [1]fsr1
  8742  034D  00FA               	movwf	readAnalog@analog_channel+1
  8743                           
  8744                           ;adc.c: 41: value = ADCRead(analog_channel);
  8745  034E  0879               	movf	readAnalog@analog_channel,w
  8746  034F  3197  27F2  3183   	fcall	_ADCRead
  8747  0352  0871               	movf	?_ADCRead+1,w
  8748  0353  00FC               	movwf	readAnalog@value+1
  8749  0354  0870               	movf	?_ADCRead,w
  8750  0355  00FB               	movwf	readAnalog@value
  8751                           
  8752                           ;adc.c: 43: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  8753  0356  0020               	movlb	0	; select bank0
  8754  0357  0826               	movf	readAnalog@channel,w
  8755  0358  00A8               	movwf	??_readAnalog
  8756  0359  3001               	movlw	1
  8757  035A                     u2785:	
  8758  035A  35A8               	lslf	??_readAnalog,f
  8759  035B  3EFF               	addlw	-1
  8760  035C  1D03               	skipz
  8761  035D  2B5A               	goto	u2785
  8762  035E  3528               	lslf	??_readAnalog,w
  8763  035F  3EC8               	addlw	(low (_totals| 0))& (0+255)
  8764  0360  0086               	movwf	6
  8765  0361  0187               	clrf	7
  8766  0362  3F40               	moviw [0]fsr1
  8767  0363  00A9               	movwf	??_readAnalog+1
  8768  0364  3F41               	moviw [1]fsr1
  8769  0365  00AA               	movwf	??_readAnalog+2
  8770  0366  3F42               	moviw [2]fsr1
  8771  0367  00AB               	movwf	??_readAnalog+3
  8772  0368  3F43               	moviw [3]fsr1
  8773  0369  00AC               	movwf	??_readAnalog+4
  8774  036A  0021               	movlb	1	; select bank1
  8775  036B  0865               	movf	(_sampleIndex+1)^(0+128),w
  8776  036C  0020               	movlb	0	; select bank0
  8777  036D  00AE               	movwf	??_readAnalog+6
  8778  036E  0021               	movlb	1	; select bank1
  8779  036F  0864               	movf	_sampleIndex^(0+128),w
  8780  0370  0020               	movlb	0	; select bank0
  8781  0371  00AD               	movwf	??_readAnalog+5
  8782  0372  35AD               	lslf	??_readAnalog+5,f
  8783  0373  0DAE               	rlf	??_readAnalog+6,f
  8784  0374  0827               	movf	readAnalog@channel+1,w
  8785  0375  00F1               	movwf	___wmul@multiplier+1
  8786  0376  0826               	movf	readAnalog@channel,w
  8787  0377  00F0               	movwf	___wmul@multiplier
  8788  0378  3050               	movlw	80
  8789  0379  00F2               	movwf	___wmul@multiplicand
  8790  037A  3000               	movlw	0
  8791  037B  00F3               	movwf	___wmul@multiplicand+1
  8792  037C  3188  2094  3183   	fcall	___wmul
  8793  037F  3050               	movlw	80
  8794  0380  0020               	movlb	0	; select bank0
  8795  0381  00AF               	movwf	??_readAnalog+7
  8796  0382  3023               	movlw	35
  8797  0383  00B0               	movwf	??_readAnalog+8
  8798  0384  0870               	movf	?___wmul,w
  8799  0385  072F               	addwf	??_readAnalog+7,w
  8800  0386  00B1               	movwf	??_readAnalog+9
  8801  0387  0871               	movf	?___wmul+1,w
  8802  0388  3D30               	addwfc	??_readAnalog+8,w
  8803  0389  00B2               	movwf	??_readAnalog+10
  8804  038A  0831               	movf	??_readAnalog+9,w
  8805  038B  072D               	addwf	??_readAnalog+5,w
  8806  038C  0084               	movwf	4
  8807  038D  0832               	movf	??_readAnalog+10,w
  8808  038E  3D2E               	addwfc	??_readAnalog+6,w
  8809  038F  0085               	movwf	5
  8810  0390  3F00               	moviw [0]fsr0
  8811  0391  00B3               	movwf	??_readAnalog+11
  8812  0392  3F01               	moviw [1]fsr0
  8813  0393  00B4               	movwf	??_readAnalog+12
  8814  0394  01B5               	clrf	??_readAnalog+13
  8815  0395  01B6               	clrf	??_readAnalog+14
  8816  0396  09B3               	comf	??_readAnalog+11,f
  8817  0397  09B4               	comf	??_readAnalog+12,f
  8818  0398  09B5               	comf	??_readAnalog+13,f
  8819  0399  09B6               	comf	??_readAnalog+14,f
  8820  039A  0AB3               	incf	??_readAnalog+11,f
  8821  039B  1903               	skipnz
  8822  039C  0AB4               	incf	??_readAnalog+12,f
  8823  039D  1903               	skipnz
  8824  039E  0AB5               	incf	??_readAnalog+13,f
  8825  039F  1903               	skipnz
  8826  03A0  0AB6               	incf	??_readAnalog+14,f
  8827  03A1  0833               	movf	??_readAnalog+11,w
  8828  03A2  07A9               	addwf	??_readAnalog+1,f
  8829  03A3  0834               	movf	??_readAnalog+12,w
  8830  03A4  3DAA               	addwfc	??_readAnalog+2,f
  8831  03A5  0835               	movf	??_readAnalog+13,w
  8832  03A6  3DAB               	addwfc	??_readAnalog+3,f
  8833  03A7  0836               	movf	??_readAnalog+14,w
  8834  03A8  3DAC               	addwfc	??_readAnalog+4,f
  8835  03A9  0826               	movf	readAnalog@channel,w
  8836  03AA  00B7               	movwf	??_readAnalog+15
  8837  03AB  3001               	movlw	1
  8838  03AC                     u2795:	
  8839  03AC  35B7               	lslf	??_readAnalog+15,f
  8840  03AD  3EFF               	addlw	-1
  8841  03AE  1D03               	skipz
  8842  03AF  2BAC               	goto	u2795
  8843  03B0  3537               	lslf	??_readAnalog+15,w
  8844  03B1  3EC8               	addlw	(low (_totals| 0))& (0+255)
  8845  03B2  0086               	movwf	6
  8846  03B3  0187               	clrf	7
  8847  03B4  0829               	movf	??_readAnalog+1,w
  8848  03B5  3FC0               	movwi [0]fsr1
  8849  03B6  082A               	movf	??_readAnalog+2,w
  8850  03B7  3FC1               	movwi [1]fsr1
  8851  03B8  082B               	movf	??_readAnalog+3,w
  8852  03B9  3FC2               	movwi [2]fsr1
  8853  03BA  082C               	movf	??_readAnalog+4,w
  8854  03BB  3FC3               	movwi [3]fsr1
  8855                           
  8856                           ;adc.c: 45: samples[channel][sampleIndex] = value;
  8857  03BC  0021               	movlb	1	; select bank1
  8858  03BD  0865               	movf	(_sampleIndex+1)^(0+128),w
  8859  03BE  0020               	movlb	0	; select bank0
  8860  03BF  00A9               	movwf	??_readAnalog+1
  8861  03C0  0021               	movlb	1	; select bank1
  8862  03C1  0864               	movf	_sampleIndex^(0+128),w
  8863  03C2  0020               	movlb	0	; select bank0
  8864  03C3  00A8               	movwf	??_readAnalog
  8865  03C4  35A8               	lslf	??_readAnalog,f
  8866  03C5  0DA9               	rlf	??_readAnalog+1,f
  8867  03C6  0827               	movf	readAnalog@channel+1,w
  8868  03C7  00F1               	movwf	___wmul@multiplier+1
  8869  03C8  0826               	movf	readAnalog@channel,w
  8870  03C9  00F0               	movwf	___wmul@multiplier
  8871  03CA  3050               	movlw	80
  8872  03CB  00F2               	movwf	___wmul@multiplicand
  8873  03CC  3000               	movlw	0
  8874  03CD  00F3               	movwf	___wmul@multiplicand+1
  8875  03CE  3188  2094  3183   	fcall	___wmul
  8876  03D1  3050               	movlw	80
  8877  03D2  0020               	movlb	0	; select bank0
  8878  03D3  00AA               	movwf	??_readAnalog+2
  8879  03D4  3023               	movlw	35
  8880  03D5  00AB               	movwf	??_readAnalog+3
  8881  03D6  0870               	movf	?___wmul,w
  8882  03D7  072A               	addwf	??_readAnalog+2,w
  8883  03D8  00AC               	movwf	??_readAnalog+4
  8884  03D9  0871               	movf	?___wmul+1,w
  8885  03DA  3D2B               	addwfc	??_readAnalog+3,w
  8886  03DB  00AD               	movwf	??_readAnalog+5
  8887  03DC  0828               	movf	??_readAnalog,w
  8888  03DD  072C               	addwf	??_readAnalog+4,w
  8889  03DE  0086               	movwf	6
  8890  03DF  0829               	movf	??_readAnalog+1,w
  8891  03E0  3D2D               	addwfc	??_readAnalog+5,w
  8892  03E1  0087               	movwf	7
  8893  03E2  087B               	movf	readAnalog@value,w
  8894  03E3  3FC0               	movwi [0]fsr1
  8895  03E4  087C               	movf	readAnalog@value+1,w
  8896  03E5  3FC1               	movwi [1]fsr1
  8897                           
  8898                           ;adc.c: 47: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  8899  03E6  0826               	movf	readAnalog@channel,w
  8900  03E7  00A8               	movwf	??_readAnalog
  8901  03E8  3001               	movlw	1
  8902  03E9                     u2805:	
  8903  03E9  35A8               	lslf	??_readAnalog,f
  8904  03EA  3EFF               	addlw	-1
  8905  03EB  1D03               	skipz
  8906  03EC  2BE9               	goto	u2805
  8907  03ED  3528               	lslf	??_readAnalog,w
  8908  03EE  3EC8               	addlw	(low (_totals| 0))& (0+255)
  8909  03EF  0086               	movwf	6
  8910  03F0  0187               	clrf	7
  8911  03F1  3F40               	moviw [0]fsr1
  8912  03F2  00A9               	movwf	??_readAnalog+1
  8913  03F3  3F41               	moviw [1]fsr1
  8914  03F4  00AA               	movwf	??_readAnalog+2
  8915  03F5  3F42               	moviw [2]fsr1
  8916  03F6  00AB               	movwf	??_readAnalog+3
  8917  03F7  3F43               	moviw [3]fsr1
  8918  03F8  00AC               	movwf	??_readAnalog+4
  8919  03F9  0021               	movlb	1	; select bank1
  8920  03FA  0865               	movf	(_sampleIndex+1)^(0+128),w
  8921  03FB  0020               	movlb	0	; select bank0
  8922  03FC  00AE               	movwf	??_readAnalog+6
  8923  03FD  0021               	movlb	1	; select bank1
  8924  03FE  0864               	movf	_sampleIndex^(0+128),w
  8925  03FF  0020               	movlb	0	; select bank0
  8926  0400  00AD               	movwf	??_readAnalog+5
  8927  0401  35AD               	lslf	??_readAnalog+5,f
  8928  0402  0DAE               	rlf	??_readAnalog+6,f
  8929  0403  0827               	movf	readAnalog@channel+1,w
  8930  0404  00F1               	movwf	___wmul@multiplier+1
  8931  0405  0826               	movf	readAnalog@channel,w
  8932  0406  00F0               	movwf	___wmul@multiplier
  8933  0407  3050               	movlw	80
  8934  0408  00F2               	movwf	___wmul@multiplicand
  8935  0409  3000               	movlw	0
  8936  040A  00F3               	movwf	___wmul@multiplicand+1
  8937  040B  3188  2094  3183   	fcall	___wmul
  8938  040E  3050               	movlw	80
  8939  040F  0020               	movlb	0	; select bank0
  8940  0410  00AF               	movwf	??_readAnalog+7
  8941  0411  3023               	movlw	35
  8942  0412  00B0               	movwf	??_readAnalog+8
  8943  0413  0870               	movf	?___wmul,w
  8944  0414  072F               	addwf	??_readAnalog+7,w
  8945  0415  00B1               	movwf	??_readAnalog+9
  8946  0416  0871               	movf	?___wmul+1,w
  8947  0417  3D30               	addwfc	??_readAnalog+8,w
  8948  0418  00B2               	movwf	??_readAnalog+10
  8949  0419  0831               	movf	??_readAnalog+9,w
  8950  041A  072D               	addwf	??_readAnalog+5,w
  8951  041B  0084               	movwf	4
  8952  041C  0832               	movf	??_readAnalog+10,w
  8953  041D  3D2E               	addwfc	??_readAnalog+6,w
  8954  041E  0085               	movwf	5
  8955  041F  3F00               	moviw [0]fsr0
  8956  0420  00B3               	movwf	??_readAnalog+11
  8957  0421  3F01               	moviw [1]fsr0
  8958  0422  00B4               	movwf	??_readAnalog+12
  8959  0423  01B5               	clrf	??_readAnalog+13
  8960  0424  01B6               	clrf	??_readAnalog+14
  8961  0425  0833               	movf	??_readAnalog+11,w
  8962  0426  07A9               	addwf	??_readAnalog+1,f
  8963  0427  0834               	movf	??_readAnalog+12,w
  8964  0428  3DAA               	addwfc	??_readAnalog+2,f
  8965  0429  0835               	movf	??_readAnalog+13,w
  8966  042A  3DAB               	addwfc	??_readAnalog+3,f
  8967  042B  0836               	movf	??_readAnalog+14,w
  8968  042C  3DAC               	addwfc	??_readAnalog+4,f
  8969  042D  0826               	movf	readAnalog@channel,w
  8970  042E  00B7               	movwf	??_readAnalog+15
  8971  042F  3001               	movlw	1
  8972  0430                     u2815:	
  8973  0430  35B7               	lslf	??_readAnalog+15,f
  8974  0431  3EFF               	addlw	-1
  8975  0432  1D03               	skipz
  8976  0433  2C30               	goto	u2815
  8977  0434  3537               	lslf	??_readAnalog+15,w
  8978  0435  3EC8               	addlw	(low (_totals| 0))& (0+255)
  8979  0436  0086               	movwf	6
  8980  0437  0187               	clrf	7
  8981  0438  0829               	movf	??_readAnalog+1,w
  8982  0439  3FC0               	movwi [0]fsr1
  8983  043A  082A               	movf	??_readAnalog+2,w
  8984  043B  3FC1               	movwi [1]fsr1
  8985  043C  082B               	movf	??_readAnalog+3,w
  8986  043D  3FC2               	movwi [2]fsr1
  8987  043E  082C               	movf	??_readAnalog+4,w
  8988  043F  3FC3               	movwi [3]fsr1
  8989                           
  8990                           ;adc.c: 49: if(channel>=(2-1))
  8991  0440  0827               	movf	readAnalog@channel+1,w
  8992  0441  3A80               	xorlw	128
  8993  0442  00A8               	movwf	??_readAnalog
  8994  0443  3080               	movlw	128
  8995  0444  0228               	subwf	??_readAnalog,w
  8996  0445  1D03               	skipz
  8997  0446  2C49               	goto	u2825
  8998  0447  3001               	movlw	1
  8999  0448  0226               	subwf	readAnalog@channel,w
  9000  0449                     u2825:	
  9001  0449  1C03               	skipc
  9002  044A  2C59               	goto	l2557
  9003                           
  9004                           ;adc.c: 50: {
  9005                           ;adc.c: 51: sampleIndex+=1;
  9006  044B  3001               	movlw	1
  9007  044C  0021               	movlb	1	; select bank1
  9008  044D  07E4               	addwf	_sampleIndex^(0+128),f
  9009  044E  3000               	movlw	0
  9010  044F  3DE5               	addwfc	(_sampleIndex+1)^(0+128),f
  9011                           
  9012                           ;adc.c: 52: if(sampleIndex >= 40)sampleIndex = 0;
  9013  0450  3000               	movlw	0
  9014  0451  0265               	subwf	(_sampleIndex+1)^(0+128),w
  9015  0452  3028               	movlw	40
  9016  0453  1903               	skipnz
  9017  0454  0264               	subwf	_sampleIndex^(0+128),w
  9018  0455  1C03               	skipc
  9019  0456  2C59               	goto	l2557
  9020  0457  01E4               	clrf	_sampleIndex^(0+128)
  9021  0458  01E5               	clrf	(_sampleIndex+1)^(0+128)
  9022  0459                     l2557:	
  9023                           
  9024                           ;adc.c: 53: }
  9025                           ;adc.c: 55: value = totals[channel]/40;
  9026  0459  3000               	movlw	0
  9027  045A  00F3               	movwf	___aldiv@divisor+3
  9028  045B  3000               	movlw	0
  9029  045C  00F2               	movwf	___aldiv@divisor+2
  9030  045D  3000               	movlw	0
  9031  045E  00F1               	movwf	___aldiv@divisor+1
  9032  045F  3028               	movlw	40
  9033  0460  00F0               	movwf	___aldiv@divisor
  9034  0461  0020               	movlb	0	; select bank0
  9035  0462  0826               	movf	readAnalog@channel,w
  9036  0463  00A8               	movwf	??_readAnalog
  9037  0464  3001               	movlw	1
  9038  0465                     u2845:	
  9039  0465  35A8               	lslf	??_readAnalog,f
  9040  0466  3EFF               	addlw	-1
  9041  0467  1D03               	skipz
  9042  0468  2C65               	goto	u2845
  9043  0469  3528               	lslf	??_readAnalog,w
  9044  046A  3EC8               	addlw	(low (_totals| 0))& (0+255)
  9045  046B  0086               	movwf	6
  9046  046C  0187               	clrf	7
  9047  046D  3F40               	moviw [0]fsr1
  9048  046E  00F4               	movwf	___aldiv@dividend
  9049  046F  3F41               	moviw [1]fsr1
  9050  0470  00F5               	movwf	___aldiv@dividend+1
  9051  0471  3F42               	moviw [2]fsr1
  9052  0472  00F6               	movwf	___aldiv@dividend+2
  9053  0473  3F43               	moviw [3]fsr1
  9054  0474  00F7               	movwf	___aldiv@dividend+3
  9055  0475  318B  237C         	fcall	___aldiv
  9056  0477  0871               	movf	?___aldiv+1,w
  9057  0478  00FC               	movwf	readAnalog@value+1
  9058  0479  0870               	movf	?___aldiv,w
  9059  047A  00FB               	movwf	readAnalog@value
  9060                           
  9061                           ;adc.c: 57: return value;
  9062  047B  087C               	movf	readAnalog@value+1,w
  9063  047C  0020               	movlb	0	; select bank0
  9064  047D  00A7               	movwf	?_readAnalog+1
  9065  047E  087B               	movf	readAnalog@value,w
  9066  047F  00A6               	movwf	?_readAnalog
  9067  0480  0008               	return
  9068  0481                     __end_of_readAnalog:	
  9069                           
  9070                           	psect	text13
  9071  0B7C                     __ptext13:	
  9072 ;; *************** function ___aldiv *****************
  9073 ;; Defined at:
  9074 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  divisor         4    0[COMMON] long 
  9077 ;;  dividend        4    4[COMMON] long 
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  quotient        4    2[BANK0 ] long 
  9080 ;;  sign            1    1[BANK0 ] unsigned char 
  9081 ;;  counter         1    0[BANK0 ] unsigned char 
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  4    0[COMMON] long 
  9084 ;; Registers used:
  9085 ;;		wreg, status,2, status,0
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9091 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;Total ram usage:       15 bytes
  9096 ;; Hardware stack levels used:    1
  9097 ;; This function calls:
  9098 ;;		Nothing
  9099 ;; This function is called by:
  9100 ;;		_readAnalog
  9101 ;;		_main
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105                           
  9106                           ;psect for function ___aldiv
  9107  0B7C                     ___aldiv:	
  9108                           
  9109                           ;incstack = 0
  9110                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9111  0B7C  0020               	movlb	0	; select bank0
  9112  0B7D  01A1               	clrf	___aldiv@sign
  9113  0B7E  1FF3               	btfss	___aldiv@divisor+3,7
  9114  0B7F  2B8D               	goto	l502
  9115  0B80  09F0               	comf	___aldiv@divisor,f
  9116  0B81  09F1               	comf	___aldiv@divisor+1,f
  9117  0B82  09F2               	comf	___aldiv@divisor+2,f
  9118  0B83  09F3               	comf	___aldiv@divisor+3,f
  9119  0B84  0AF0               	incf	___aldiv@divisor,f
  9120  0B85  1903               	skipnz
  9121  0B86  0AF1               	incf	___aldiv@divisor+1,f
  9122  0B87  1903               	skipnz
  9123  0B88  0AF2               	incf	___aldiv@divisor+2,f
  9124  0B89  1903               	skipnz
  9125  0B8A  0AF3               	incf	___aldiv@divisor+3,f
  9126  0B8B  01A1               	clrf	___aldiv@sign
  9127  0B8C  0AA1               	incf	___aldiv@sign,f
  9128  0B8D                     l502:	
  9129  0B8D  1FF7               	btfss	___aldiv@dividend+3,7
  9130  0B8E  2B9E               	goto	l2381
  9131  0B8F  09F4               	comf	___aldiv@dividend,f
  9132  0B90  09F5               	comf	___aldiv@dividend+1,f
  9133  0B91  09F6               	comf	___aldiv@dividend+2,f
  9134  0B92  09F7               	comf	___aldiv@dividend+3,f
  9135  0B93  0AF4               	incf	___aldiv@dividend,f
  9136  0B94  1903               	skipnz
  9137  0B95  0AF5               	incf	___aldiv@dividend+1,f
  9138  0B96  1903               	skipnz
  9139  0B97  0AF6               	incf	___aldiv@dividend+2,f
  9140  0B98  1903               	skipnz
  9141  0B99  0AF7               	incf	___aldiv@dividend+3,f
  9142  0B9A  3001               	movlw	1
  9143  0B9B  00F8               	movwf	??___aldiv
  9144  0B9C  0878               	movf	??___aldiv,w
  9145  0B9D  06A1               	xorwf	___aldiv@sign,f
  9146  0B9E                     l2381:	
  9147  0B9E  3000               	movlw	0
  9148  0B9F  00A5               	movwf	___aldiv@quotient+3
  9149  0BA0  3000               	movlw	0
  9150  0BA1  00A4               	movwf	___aldiv@quotient+2
  9151  0BA2  3000               	movlw	0
  9152  0BA3  00A3               	movwf	___aldiv@quotient+1
  9153  0BA4  3000               	movlw	0
  9154  0BA5  00A2               	movwf	___aldiv@quotient
  9155  0BA6  0873               	movf	___aldiv@divisor+3,w
  9156  0BA7  0472               	iorwf	___aldiv@divisor+2,w
  9157  0BA8  0471               	iorwf	___aldiv@divisor+1,w
  9158  0BA9  0470               	iorwf	___aldiv@divisor,w
  9159  0BAA  1903               	skipnz
  9160  0BAB  2BE7               	goto	l2403
  9161  0BAC  01A0               	clrf	___aldiv@counter
  9162  0BAD  0AA0               	incf	___aldiv@counter,f
  9163  0BAE                     l2389:	
  9164  0BAE  1BF3               	btfsc	___aldiv@divisor+3,7
  9165  0BAF  2BBC               	goto	l2391
  9166  0BB0  3001               	movlw	1
  9167  0BB1                     u2435:	
  9168  0BB1  35F0               	lslf	___aldiv@divisor,f
  9169  0BB2  0DF1               	rlf	___aldiv@divisor+1,f
  9170  0BB3  0DF2               	rlf	___aldiv@divisor+2,f
  9171  0BB4  0DF3               	rlf	___aldiv@divisor+3,f
  9172  0BB5  0B89               	decfsz	9,f
  9173  0BB6  2BB1               	goto	u2435
  9174  0BB7  3001               	movlw	1
  9175  0BB8  00F8               	movwf	??___aldiv
  9176  0BB9  0878               	movf	??___aldiv,w
  9177  0BBA  07A0               	addwf	___aldiv@counter,f
  9178  0BBB  2BAE               	goto	l2389
  9179  0BBC                     l2391:	
  9180  0BBC  3001               	movlw	1
  9181  0BBD                     u2455:	
  9182  0BBD  35A2               	lslf	___aldiv@quotient,f
  9183  0BBE  0DA3               	rlf	___aldiv@quotient+1,f
  9184  0BBF  0DA4               	rlf	___aldiv@quotient+2,f
  9185  0BC0  0DA5               	rlf	___aldiv@quotient+3,f
  9186  0BC1  0B89               	decfsz	9,f
  9187  0BC2  2BBD               	goto	u2455
  9188  0BC3  0873               	movf	___aldiv@divisor+3,w
  9189  0BC4  0277               	subwf	___aldiv@dividend+3,w
  9190  0BC5  1D03               	skipz
  9191  0BC6  2BD1               	goto	u2465
  9192  0BC7  0872               	movf	___aldiv@divisor+2,w
  9193  0BC8  0276               	subwf	___aldiv@dividend+2,w
  9194  0BC9  1D03               	skipz
  9195  0BCA  2BD1               	goto	u2465
  9196  0BCB  0871               	movf	___aldiv@divisor+1,w
  9197  0BCC  0275               	subwf	___aldiv@dividend+1,w
  9198  0BCD  1D03               	skipz
  9199  0BCE  2BD1               	goto	u2465
  9200  0BCF  0870               	movf	___aldiv@divisor,w
  9201  0BD0  0274               	subwf	___aldiv@dividend,w
  9202  0BD1                     u2465:	
  9203  0BD1  1C03               	skipc
  9204  0BD2  2BDC               	goto	l2399
  9205  0BD3  0870               	movf	___aldiv@divisor,w
  9206  0BD4  02F4               	subwf	___aldiv@dividend,f
  9207  0BD5  0871               	movf	___aldiv@divisor+1,w
  9208  0BD6  3BF5               	subwfb	___aldiv@dividend+1,f
  9209  0BD7  0872               	movf	___aldiv@divisor+2,w
  9210  0BD8  3BF6               	subwfb	___aldiv@dividend+2,f
  9211  0BD9  0873               	movf	___aldiv@divisor+3,w
  9212  0BDA  3BF7               	subwfb	___aldiv@dividend+3,f
  9213  0BDB  1422               	bsf	___aldiv@quotient,0
  9214  0BDC                     l2399:	
  9215  0BDC  3001               	movlw	1
  9216  0BDD                     u2475:	
  9217  0BDD  36F3               	lsrf	___aldiv@divisor+3,f
  9218  0BDE  0CF2               	rrf	___aldiv@divisor+2,f
  9219  0BDF  0CF1               	rrf	___aldiv@divisor+1,f
  9220  0BE0  0CF0               	rrf	___aldiv@divisor,f
  9221  0BE1  0B89               	decfsz	9,f
  9222  0BE2  2BDD               	goto	u2475
  9223  0BE3  3001               	movlw	1
  9224  0BE4  02A0               	subwf	___aldiv@counter,f
  9225  0BE5  1D03               	btfss	3,2
  9226  0BE6  2BBC               	goto	l2391
  9227  0BE7                     l2403:	
  9228  0BE7  0821               	movf	___aldiv@sign,w
  9229  0BE8  1903               	btfsc	3,2
  9230  0BE9  2BF5               	goto	l2407
  9231  0BEA  09A2               	comf	___aldiv@quotient,f
  9232  0BEB  09A3               	comf	___aldiv@quotient+1,f
  9233  0BEC  09A4               	comf	___aldiv@quotient+2,f
  9234  0BED  09A5               	comf	___aldiv@quotient+3,f
  9235  0BEE  0AA2               	incf	___aldiv@quotient,f
  9236  0BEF  1903               	skipnz
  9237  0BF0  0AA3               	incf	___aldiv@quotient+1,f
  9238  0BF1  1903               	skipnz
  9239  0BF2  0AA4               	incf	___aldiv@quotient+2,f
  9240  0BF3  1903               	skipnz
  9241  0BF4  0AA5               	incf	___aldiv@quotient+3,f
  9242  0BF5                     l2407:	
  9243  0BF5  0825               	movf	___aldiv@quotient+3,w
  9244  0BF6  00F3               	movwf	?___aldiv+3
  9245  0BF7  0824               	movf	___aldiv@quotient+2,w
  9246  0BF8  00F2               	movwf	?___aldiv+2
  9247  0BF9  0823               	movf	___aldiv@quotient+1,w
  9248  0BFA  00F1               	movwf	?___aldiv+1
  9249  0BFB  0822               	movf	___aldiv@quotient,w
  9250  0BFC  00F0               	movwf	?___aldiv
  9251  0BFD  0008               	return
  9252  0BFE                     __end_of___aldiv:	
  9253                           
  9254                           	psect	text14
  9255  17F2                     __ptext14:	
  9256 ;; *************** function _ADCRead *****************
  9257 ;; Defined at:
  9258 ;;		line 17 in file "adc.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;  channel         1    wreg     enum E13559
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;  channel         1    3[COMMON] enum E13559
  9263 ;; Return value:  Size  Location     Type
  9264 ;;                  2    0[COMMON] unsigned int 
  9265 ;; Registers used:
  9266 ;;		wreg
  9267 ;; Tracked objects:
  9268 ;;		On entry : 0/0
  9269 ;;		On exit  : 0/0
  9270 ;;		Unchanged: 0/0
  9271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9272 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9275 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9276 ;;Total ram usage:        4 bytes
  9277 ;; Hardware stack levels used:    1
  9278 ;; This function calls:
  9279 ;;		Nothing
  9280 ;; This function is called by:
  9281 ;;		_readAnalog
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           
  9286                           ;psect for function _ADCRead
  9287  17F2                     _ADCRead:	
  9288                           
  9289                           ;incstack = 0
  9290                           ; Regs used in _ADCRead: [wreg]
  9291                           ;ADCRead@channel stored from wreg
  9292  17F2  00F3               	movwf	ADCRead@channel
  9293                           
  9294                           ;adc.c: 19: ADPCH = channel;
  9295  17F3  0873               	movf	ADCRead@channel,w
  9296  17F4  0021               	movlb	1	; select bank1
  9297  17F5  009E               	movwf	30	;volatile
  9298                           
  9299                           ;adc.c: 21: ADCON0bits.ADON = 1;
  9300  17F6  1793               	bsf	19,7	;volatile
  9301                           
  9302                           ;adc.c: 23: ADCON0bits.ADCONT = 0;
  9303  17F7  1313               	bcf	19,6	;volatile
  9304                           
  9305                           ;adc.c: 25: ADCON0bits.ADGO = 1;
  9306  17F8  1413               	bsf	19,0	;volatile
  9307  17F9                     l55:	
  9308                           ;adc.c: 28: {
  9309                           
  9310                           ;adc.c: 27: while(ADCON0bits.ADGO)
  9311                           
  9312  17F9  1813               	btfsc	19,0	;volatile
  9313  17FA  2FF9               	goto	l55
  9314                           
  9315                           ;adc.c: 29: }
  9316                           ;adc.c: 31: return ((ADRESH<<8)+ADRESL);
  9317  17FB  080D               	movf	13,w	;volatile
  9318  17FC  00F1               	movwf	?_ADCRead+1
  9319  17FD  080C               	movf	12,w	;volatile
  9320  17FE  00F0               	movwf	?_ADCRead
  9321  17FF  0008               	return
  9322  1800                     __end_of_ADCRead:	
  9323                           
  9324                           	psect	text15
  9325  0C85                     __ptext15:	
  9326 ;; *************** function ___fttol *****************
  9327 ;; Defined at:
  9328 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;  f1              3   73[BANK0 ] float 
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;  lval            4    5[BANK1 ] unsigned long 
  9333 ;;  exp1            1    9[BANK1 ] unsigned char 
  9334 ;;  sign1           1    4[BANK1 ] unsigned char 
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  4   73[BANK0 ] long 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2, status,0
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9344 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;Total ram usage:       14 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; This function calls:
  9351 ;;		Nothing
  9352 ;; This function is called by:
  9353 ;;		_main
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           
  9358                           ;psect for function ___fttol
  9359  0C85                     ___fttol:	
  9360                           
  9361                           ;incstack = 0
  9362                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9363  0C85  0020               	movlb	0	; select bank0
  9364  0C86  0869               	movf	___fttol@f1,w
  9365  0C87  0021               	movlb	1	; select bank1
  9366  0C88  00A0               	movwf	??___fttol^(0+128)
  9367  0C89  0020               	movlb	0	; select bank0
  9368  0C8A  086A               	movf	___fttol@f1+1,w
  9369  0C8B  0021               	movlb	1	; select bank1
  9370  0C8C  00A1               	movwf	(??___fttol^(0+128)+1)
  9371  0C8D  0020               	movlb	0	; select bank0
  9372  0C8E  086B               	movf	___fttol@f1+2,w
  9373  0C8F  0021               	movlb	1	; select bank1
  9374  0C90  00A2               	movwf	(??___fttol^(0+128)+2)
  9375  0C91  1003               	clrc
  9376  0C92  0D21               	rlf	(??___fttol^(0+128)+1),w
  9377  0C93  0D22               	rlf	(??___fttol^(0+128)+2),w
  9378  0C94  00A3               	movwf	(??___fttol+3)^(0+128)
  9379  0C95  0823               	movf	(??___fttol+3)^(0+128),w
  9380  0C96  00A9               	movwf	___fttol@exp1^(0+128)
  9381  0C97  0829               	movf	___fttol@exp1^(0+128),w
  9382  0C98  1D03               	btfss	3,2
  9383  0C99  2CA4               	goto	l2735
  9384  0C9A  3000               	movlw	0
  9385  0C9B  0020               	movlb	0	; select bank0
  9386  0C9C  00EC               	movwf	?___fttol+3
  9387  0C9D  3000               	movlw	0
  9388  0C9E  00EB               	movwf	?___fttol+2
  9389  0C9F  3000               	movlw	0
  9390  0CA0  00EA               	movwf	?___fttol+1
  9391  0CA1  3000               	movlw	0
  9392  0CA2  00E9               	movwf	?___fttol
  9393  0CA3  0008               	return
  9394  0CA4                     l2735:	
  9395  0CA4  0020               	movlb	0	; select bank0
  9396  0CA5  0869               	movf	___fttol@f1,w
  9397  0CA6  0021               	movlb	1	; select bank1
  9398  0CA7  00A0               	movwf	??___fttol^(0+128)
  9399  0CA8  0020               	movlb	0	; select bank0
  9400  0CA9  086A               	movf	___fttol@f1+1,w
  9401  0CAA  0021               	movlb	1	; select bank1
  9402  0CAB  00A1               	movwf	(??___fttol^(0+128)+1)
  9403  0CAC  0020               	movlb	0	; select bank0
  9404  0CAD  086B               	movf	___fttol@f1+2,w
  9405  0CAE  0021               	movlb	1	; select bank1
  9406  0CAF  00A2               	movwf	(??___fttol^(0+128)+2)
  9407  0CB0  3017               	movlw	23
  9408  0CB1                     u3085:	
  9409  0CB1  36A2               	lsrf	(??___fttol^(0+128)+2),f
  9410  0CB2  0CA1               	rrf	(??___fttol^(0+128)+1),f
  9411  0CB3  0CA0               	rrf	??___fttol^(0+128),f
  9412  0CB4  0B89               	decfsz	9,f
  9413  0CB5  2CB1               	goto	u3085
  9414  0CB6  0820               	movf	??___fttol^(0+128),w
  9415  0CB7  00A3               	movwf	(??___fttol+3)^(0+128)
  9416  0CB8  0823               	movf	(??___fttol+3)^(0+128),w
  9417  0CB9  00A4               	movwf	___fttol@sign1^(0+128)
  9418  0CBA  0020               	movlb	0	; select bank0
  9419  0CBB  17EA               	bsf	___fttol@f1+1,7
  9420  0CBC  30FF               	movlw	255
  9421  0CBD  05E9               	andwf	___fttol@f1,f
  9422  0CBE  30FF               	movlw	255
  9423  0CBF  05EA               	andwf	___fttol@f1+1,f
  9424  0CC0  3000               	movlw	0
  9425  0CC1  05EB               	andwf	___fttol@f1+2,f
  9426  0CC2  0869               	movf	___fttol@f1,w
  9427  0CC3  0021               	movlb	1	; select bank1
  9428  0CC4  00A5               	movwf	___fttol@lval^(0+128)
  9429  0CC5  0020               	movlb	0	; select bank0
  9430  0CC6  086A               	movf	___fttol@f1+1,w
  9431  0CC7  0021               	movlb	1	; select bank1
  9432  0CC8  00A6               	movwf	(___fttol@lval^(0+128)+1)
  9433  0CC9  0020               	movlb	0	; select bank0
  9434  0CCA  086B               	movf	___fttol@f1+2,w
  9435  0CCB  0021               	movlb	1	; select bank1
  9436  0CCC  00A7               	movwf	(___fttol@lval^(0+128)+2)
  9437  0CCD  01A8               	clrf	(___fttol@lval^(0+128)+3)
  9438  0CCE  308E               	movlw	142
  9439  0CCF  02A9               	subwf	___fttol@exp1^(0+128),f
  9440  0CD0  1FA9               	btfss	___fttol@exp1^(0+128),7
  9441  0CD1  2CF0               	goto	l2755
  9442  0CD2  0829               	movf	___fttol@exp1^(0+128),w
  9443  0CD3  3A80               	xorlw	128
  9444  0CD4  3E8F               	addlw	143
  9445  0CD5  1803               	skipnc
  9446  0CD6  2CE1               	goto	l2753
  9447  0CD7  3000               	movlw	0
  9448  0CD8  0020               	movlb	0	; select bank0
  9449  0CD9  00EC               	movwf	?___fttol+3
  9450  0CDA  3000               	movlw	0
  9451  0CDB  00EB               	movwf	?___fttol+2
  9452  0CDC  3000               	movlw	0
  9453  0CDD  00EA               	movwf	?___fttol+1
  9454  0CDE  3000               	movlw	0
  9455  0CDF  00E9               	movwf	?___fttol
  9456  0CE0  0008               	return
  9457  0CE1                     l2753:	
  9458  0CE1  3001               	movlw	1
  9459  0CE2                     u3115:	
  9460  0CE2  0021               	movlb	1	; select bank1
  9461  0CE3  36A8               	lsrf	(___fttol@lval+3)^(0+128),f
  9462  0CE4  0CA7               	rrf	(___fttol@lval+2)^(0+128),f
  9463  0CE5  0CA6               	rrf	(___fttol@lval+1)^(0+128),f
  9464  0CE6  0CA5               	rrf	___fttol@lval^(0+128),f
  9465  0CE7  0B89               	decfsz	9,f
  9466  0CE8  2CE2               	goto	u3115
  9467  0CE9  3001               	movlw	1
  9468  0CEA  00A0               	movwf	??___fttol^(0+128)
  9469  0CEB  0820               	movf	??___fttol^(0+128),w
  9470  0CEC  07A9               	addwf	___fttol@exp1^(0+128),f
  9471  0CED  1903               	btfsc	3,2
  9472  0CEE  2D0C               	goto	l2763
  9473  0CEF  2CE1               	goto	l2753
  9474  0CF0                     l2755:	
  9475  0CF0  3018               	movlw	24
  9476  0CF1  0229               	subwf	___fttol@exp1^(0+128),w
  9477  0CF2  1C03               	skipc
  9478  0CF3  2D08               	goto	l699
  9479  0CF4  3000               	movlw	0
  9480  0CF5  0020               	movlb	0	; select bank0
  9481  0CF6  00EC               	movwf	?___fttol+3
  9482  0CF7  3000               	movlw	0
  9483  0CF8  00EB               	movwf	?___fttol+2
  9484  0CF9  3000               	movlw	0
  9485  0CFA  00EA               	movwf	?___fttol+1
  9486  0CFB  3000               	movlw	0
  9487  0CFC  00E9               	movwf	?___fttol
  9488  0CFD  0008               	return
  9489  0CFE                     l2761:	
  9490  0CFE  3001               	movlw	1
  9491  0CFF                     u3145:	
  9492  0CFF  0021               	movlb	1	; select bank1
  9493  0D00  35A5               	lslf	___fttol@lval^(0+128),f
  9494  0D01  0DA6               	rlf	(___fttol@lval+1)^(0+128),f
  9495  0D02  0DA7               	rlf	(___fttol@lval+2)^(0+128),f
  9496  0D03  0DA8               	rlf	(___fttol@lval+3)^(0+128),f
  9497  0D04  0B89               	decfsz	9,f
  9498  0D05  2CFF               	goto	u3145
  9499  0D06  3001               	movlw	1
  9500  0D07  02A9               	subwf	___fttol@exp1^(0+128),f
  9501  0D08                     l699:	
  9502  0D08  0021               	movlb	1	; select bank1
  9503  0D09  0829               	movf	___fttol@exp1^(0+128),w
  9504  0D0A  1D03               	btfss	3,2
  9505  0D0B  2CFE               	goto	l2761
  9506  0D0C                     l2763:	
  9507  0D0C  0824               	movf	___fttol@sign1^(0+128),w
  9508  0D0D  1903               	btfsc	3,2
  9509  0D0E  2D1A               	goto	l2767
  9510  0D0F  09A5               	comf	___fttol@lval^(0+128),f
  9511  0D10  09A6               	comf	(___fttol@lval+1)^(0+128),f
  9512  0D11  09A7               	comf	(___fttol@lval+2)^(0+128),f
  9513  0D12  09A8               	comf	(___fttol@lval+3)^(0+128),f
  9514  0D13  0AA5               	incf	___fttol@lval^(0+128),f
  9515  0D14  1903               	skipnz
  9516  0D15  0AA6               	incf	(___fttol@lval+1)^(0+128),f
  9517  0D16  1903               	skipnz
  9518  0D17  0AA7               	incf	(___fttol@lval+2)^(0+128),f
  9519  0D18  1903               	skipnz
  9520  0D19  0AA8               	incf	(___fttol@lval+3)^(0+128),f
  9521  0D1A                     l2767:	
  9522  0D1A  0828               	movf	(___fttol@lval+3)^(0+128),w
  9523  0D1B  0020               	movlb	0	; select bank0
  9524  0D1C  00EC               	movwf	?___fttol+3
  9525  0D1D  0021               	movlb	1	; select bank1
  9526  0D1E  0827               	movf	(___fttol@lval+2)^(0+128),w
  9527  0D1F  0020               	movlb	0	; select bank0
  9528  0D20  00EB               	movwf	?___fttol+2
  9529  0D21  0021               	movlb	1	; select bank1
  9530  0D22  0826               	movf	(___fttol@lval+1)^(0+128),w
  9531  0D23  0020               	movlb	0	; select bank0
  9532  0D24  00EA               	movwf	?___fttol+1
  9533  0D25  0021               	movlb	1	; select bank1
  9534  0D26  0825               	movf	___fttol@lval^(0+128),w
  9535  0D27  0020               	movlb	0	; select bank0
  9536  0D28  00E9               	movwf	?___fttol
  9537  0D29  0008               	return
  9538  0D2A                     __end_of___fttol:	
  9539                           
  9540                           	psect	text16
  9541  0A25                     __ptext16:	
  9542 ;; *************** function _SYSTEM_Initialize *****************
  9543 ;; Defined at:
  9544 ;;		line 71 in file "system.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;		None
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1    wreg      void 
  9551 ;; Registers used:
  9552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;Total ram usage:        3 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    3
  9565 ;; This function calls:
  9566 ;;		_ADCC_Initialize
  9567 ;;		_InitCustomChars
  9568 ;;		_LCD_Clear
  9569 ;;		_LCD_Init
  9570 ;;		_OSCILLATOR_Initialize
  9571 ;;		_PIN_MANAGER_Initialize
  9572 ;;		_PWM_Initialize
  9573 ;;		_TMR2_Initialize
  9574 ;; This function is called by:
  9575 ;;		_main
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           
  9580                           ;psect for function _SYSTEM_Initialize
  9581  0A25                     _SYSTEM_Initialize:	
  9582                           
  9583                           ;system.c: 73: PIN_MANAGER_Initialize();
  9584                           
  9585                           ;incstack = 0
  9586                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9587  0A25  3189  213F  318A   	fcall	_PIN_MANAGER_Initialize
  9588                           
  9589                           ;system.c: 74: OSCILLATOR_Initialize();
  9590  0A28  3197  27C3  318A   	fcall	_OSCILLATOR_Initialize
  9591                           
  9592                           ;system.c: 75: FVRCON = 0x00;
  9593  0A2B  0032               	movlb	18	; select bank18
  9594  0A2C  018C               	clrf	12	;volatile
  9595                           
  9596                           ;system.c: 76: ADCC_Initialize();
  9597  0A2D  3188  207A  318A   	fcall	_ADCC_Initialize
  9598                           
  9599                           ;system.c: 77: PWM_Initialize();
  9600  0A30  3180  2004  318A   	fcall	_PWM_Initialize
  9601                           
  9602                           ;system.c: 79: TMR2_Initialize();
  9603  0A33  3197  27E4  318A   	fcall	_TMR2_Initialize
  9604                           
  9605                           ;system.c: 80: LCD_Init(0X00);
  9606  0A36  3000               	movlw	0
  9607  0A37  318B  23FE  318A   	fcall	_LCD_Init
  9608                           
  9609                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  9610  0A3A  3009               	movlw	9
  9611  0A3B  00FA               	movwf	??_SYSTEM_Initialize+2
  9612  0A3C  301E               	movlw	30
  9613  0A3D  00F9               	movwf	??_SYSTEM_Initialize+1
  9614  0A3E  30EB               	movlw	235
  9615  0A3F  00F8               	movwf	??_SYSTEM_Initialize
  9616  0A40                     u3447:	
  9617  0A40  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9618  0A41  2A40               	goto	u3447
  9619  0A42  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9620  0A43  2A40               	goto	u3447
  9621  0A44  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9622  0A45  2A40               	goto	u3447
  9623  0A46  0000               	nop
  9624                           
  9625                           ;system.c: 82: LCD_Clear();
  9626  0A47  3188  2000  318A   	fcall	_LCD_Clear
  9627                           
  9628                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
  9629  0A4A  3005               	movlw	5
  9630  0A4B  00FA               	movwf	??_SYSTEM_Initialize+2
  9631  0A4C  300F               	movlw	15
  9632  0A4D  00F9               	movwf	??_SYSTEM_Initialize+1
  9633  0A4E  30F4               	movlw	244
  9634  0A4F  00F8               	movwf	??_SYSTEM_Initialize
  9635  0A50                     u3457:	
  9636  0A50  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9637  0A51  2A50               	goto	u3457
  9638  0A52  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9639  0A53  2A50               	goto	u3457
  9640  0A54  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9641  0A55  2A50               	goto	u3457
  9642                           
  9643                           ;system.c: 84: InitCustomChars();
  9644  0A56  3188  20ED  318A   	fcall	_InitCustomChars
  9645                           
  9646                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  9647  0A59  3009               	movlw	9
  9648  0A5A  00FA               	movwf	??_SYSTEM_Initialize+2
  9649  0A5B  301E               	movlw	30
  9650  0A5C  00F9               	movwf	??_SYSTEM_Initialize+1
  9651  0A5D  30EB               	movlw	235
  9652  0A5E  00F8               	movwf	??_SYSTEM_Initialize
  9653  0A5F                     u3467:	
  9654  0A5F  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9655  0A60  2A5F               	goto	u3467
  9656  0A61  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9657  0A62  2A5F               	goto	u3467
  9658  0A63  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9659  0A64  2A5F               	goto	u3467
  9660  0A65  0000               	nop
  9661  0A66  0008               	return
  9662  0A67                     __end_of_SYSTEM_Initialize:	
  9663                           
  9664                           	psect	text17
  9665  17E4                     __ptext17:	
  9666 ;; *************** function _TMR2_Initialize *****************
  9667 ;; Defined at:
  9668 ;;		line 3 in file "tmr2.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;		None
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;		None
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  1    wreg      void 
  9675 ;; Registers used:
  9676 ;;		wreg, status,2
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9686 ;;Total ram usage:        0 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; This function calls:
  9689 ;;		Nothing
  9690 ;; This function is called by:
  9691 ;;		_SYSTEM_Initialize
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           
  9696                           ;psect for function _TMR2_Initialize
  9697  17E4                     _TMR2_Initialize:	
  9698                           
  9699                           ;tmr2.c: 5: T2CON = 0x00;
  9700                           
  9701                           ;incstack = 0
  9702                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9703  17E4  0025               	movlb	5	; select bank5
  9704  17E5  018E               	clrf	14	;volatile
  9705                           
  9706                           ;tmr2.c: 7: T2CLKCON = 0x01;
  9707  17E6  3001               	movlw	1
  9708  17E7  0090               	movwf	16	;volatile
  9709                           
  9710                           ;tmr2.c: 9: T2HLT = 0x00;
  9711  17E8  018F               	clrf	15	;volatile
  9712                           
  9713                           ;tmr2.c: 11: T2RST = 0x00;
  9714  17E9  0191               	clrf	17	;volatile
  9715                           
  9716                           ;tmr2.c: 13: T2PR = 0xFF;
  9717  17EA  30FF               	movlw	255
  9718  17EB  008D               	movwf	13	;volatile
  9719                           
  9720                           ;tmr2.c: 15: T2TMR = 0x00;
  9721  17EC  018C               	clrf	12	;volatile
  9722                           
  9723                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  9724  17ED  002E               	movlb	14	; select bank14
  9725  17EE  1090               	bcf	16,1	;volatile
  9726                           
  9727                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  9728  17EF  0025               	movlb	5	; select bank5
  9729  17F0  178E               	bsf	14,7	;volatile
  9730  17F1  0008               	return
  9731  17F2                     __end_of_TMR2_Initialize:	
  9732                           
  9733                           	psect	text18
  9734  0004                     __ptext18:	
  9735 ;; *************** function _PWM_Initialize *****************
  9736 ;; Defined at:
  9737 ;;		line 3 in file "pwm.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;		None
  9740 ;; Auto vars:     Size  Location     Type
  9741 ;;		None
  9742 ;; Return value:  Size  Location     Type
  9743 ;;                  1    wreg      void 
  9744 ;; Registers used:
  9745 ;;		wreg, status,2, status,0
  9746 ;; Tracked objects:
  9747 ;;		On entry : 0/0
  9748 ;;		On exit  : 0/0
  9749 ;;		Unchanged: 0/0
  9750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;Total ram usage:        0 bytes
  9756 ;; Hardware stack levels used:    1
  9757 ;; This function calls:
  9758 ;;		Nothing
  9759 ;; This function is called by:
  9760 ;;		_SYSTEM_Initialize
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           
  9765                           ;psect for function _PWM_Initialize
  9766  0004                     _PWM_Initialize:	
  9767                           
  9768                           ;pwm.c: 14: PWM7CON = 0x80;
  9769                           
  9770                           ;incstack = 0
  9771                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
  9772  0004  3080               	movlw	128
  9773  0005  0027               	movlb	7	; select bank7
  9774  0006  0092               	movwf	18	;volatile
  9775                           
  9776                           ;pwm.c: 16: PWM7DCH = 0x00;
  9777  0007  0191               	clrf	17	;volatile
  9778                           
  9779                           ;pwm.c: 18: PWM7DCL = 0x00;
  9780  0008  0190               	clrf	16	;volatile
  9781                           
  9782                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
  9783  0009  0024               	movlb	4	; select bank4
  9784  000A  081F               	movf	31,w	;volatile
  9785  000B  39F3               	andlw	-13
  9786  000C  3804               	iorlw	4
  9787  000D  009F               	movwf	31	;volatile
  9788  000E  0008               	return
  9789  000F                     __end_of_PWM_Initialize:	
  9790                           
  9791                           	psect	text19
  9792  093F                     __ptext19:	
  9793 ;; *************** function _PIN_MANAGER_Initialize *****************
  9794 ;; Defined at:
  9795 ;;		line 5 in file "pin_manager.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;		None
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;  state           1    0[COMMON] unsigned char 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  1    wreg      void 
  9802 ;; Registers used:
  9803 ;;		wreg, status,2
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;Total ram usage:        1 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; This function calls:
  9816 ;;		Nothing
  9817 ;; This function is called by:
  9818 ;;		_SYSTEM_Initialize
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           
  9823                           ;psect for function _PIN_MANAGER_Initialize
  9824  093F                     _PIN_MANAGER_Initialize:	
  9825                           
  9826                           ;pin_manager.c: 7: LATA = 0x00;
  9827                           
  9828                           ;incstack = 0
  9829                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9830  093F  0020               	movlb	0	; select bank0
  9831  0940  0196               	clrf	22	;volatile
  9832                           
  9833                           ;pin_manager.c: 8: LATB = 0x00;
  9834  0941  0197               	clrf	23	;volatile
  9835                           
  9836                           ;pin_manager.c: 9: LATC = 0x00;
  9837  0942  0198               	clrf	24	;volatile
  9838                           
  9839                           ;pin_manager.c: 11: WPUA = 0x00;
  9840  0943  003E               	movlb	30	; select bank30
  9841  0944  01B9               	clrf	57	;volatile
  9842                           
  9843                           ;pin_manager.c: 12: WPUB = 0x00;
  9844  0945  01C4               	clrf	68	;volatile
  9845                           
  9846                           ;pin_manager.c: 13: WPUC = 0x00;
  9847  0946  01CF               	clrf	79	;volatile
  9848                           
  9849                           ;pin_manager.c: 14: WPUE = 0x8;
  9850  0947  3008               	movlw	8
  9851  0948  00E5               	movwf	101	;volatile
  9852                           
  9853                           ;pin_manager.c: 16: TRISA = 0x0A;
  9854  0949  300A               	movlw	10
  9855  094A  0020               	movlb	0	; select bank0
  9856  094B  0091               	movwf	17	;volatile
  9857                           
  9858                           ;pin_manager.c: 17: TRISB = 0x07;
  9859  094C  3007               	movlw	7
  9860  094D  0092               	movwf	18	;volatile
  9861                           
  9862                           ;pin_manager.c: 18: TRISC = 0x00;
  9863  094E  0193               	clrf	19	;volatile
  9864                           
  9865                           ;pin_manager.c: 20: ANSELA = 0x0A;
  9866  094F  300A               	movlw	10
  9867  0950  003E               	movlb	30	; select bank30
  9868  0951  00B8               	movwf	56	;volatile
  9869                           
  9870                           ;pin_manager.c: 21: ANSELB = 0x00;
  9871  0952  01C3               	clrf	67	;volatile
  9872                           
  9873                           ;pin_manager.c: 22: ANSELC = 0x00;
  9874  0953  01CE               	clrf	78	;volatile
  9875                           
  9876                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  9877  0954  002E               	movlb	14	; select bank14
  9878  0955  1216               	bcf	22,4	;volatile
  9879                           
  9880                           ;pin_manager.c: 25: bool state = GIE;
  9881  0956  3000               	movlw	0
  9882  0957  1B8B               	btfsc	11,7	;volatile
  9883  0958  3001               	movlw	1
  9884  0959  00F0               	movwf	PIN_MANAGER_Initialize@state
  9885                           
  9886                           ;pin_manager.c: 26: GIE = 0;
  9887  095A  138B               	bcf	11,7	;volatile
  9888                           
  9889                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  9890  095B  3055               	movlw	85
  9891  095C  003D               	movlb	29	; select bank29
  9892  095D  008F               	movwf	15	;volatile
  9893                           
  9894                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  9895  095E  30AA               	movlw	170
  9896  095F  008F               	movwf	15	;volatile
  9897                           
  9898                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  9899  0960  100F               	bcf	15,0	;volatile
  9900                           
  9901                           ;pin_manager.c: 33: RC3PPS = 0X0F;
  9902  0961  300F               	movlw	15
  9903  0962  003E               	movlb	30	; select bank30
  9904  0963  00A3               	movwf	35	;volatile
  9905                           
  9906                           ;pin_manager.c: 37: PPSLOCK = 0x55;
  9907  0964  3055               	movlw	85
  9908  0965  003D               	movlb	29	; select bank29
  9909  0966  008F               	movwf	15	;volatile
  9910                           
  9911                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
  9912  0967  30AA               	movlw	170
  9913  0968  008F               	movwf	15	;volatile
  9914                           
  9915                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
  9916  0969  140F               	bsf	15,0	;volatile
  9917                           
  9918                           ;pin_manager.c: 40: GIE = state;
  9919  096A  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9920  096B  296E               	goto	u2360
  9921  096C  178B               	bsf	11,7	;volatile
  9922  096D  0008               	return
  9923  096E                     u2360:	
  9924  096E  138B               	bcf	11,7	;volatile
  9925  096F  0008               	return
  9926  0970                     __end_of_PIN_MANAGER_Initialize:	
  9927                           
  9928                           	psect	text20
  9929  17C3                     __ptext20:	
  9930 ;; *************** function _OSCILLATOR_Initialize *****************
  9931 ;; Defined at:
  9932 ;;		line 89 in file "system.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;		None
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;		None
  9937 ;; Return value:  Size  Location     Type
  9938 ;;                  1    wreg      void 
  9939 ;; Registers used:
  9940 ;;		wreg, status,2
  9941 ;; Tracked objects:
  9942 ;;		On entry : 0/0
  9943 ;;		On exit  : 0/0
  9944 ;;		Unchanged: 0/0
  9945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;Total ram usage:        0 bytes
  9951 ;; Hardware stack levels used:    1
  9952 ;; This function calls:
  9953 ;;		Nothing
  9954 ;; This function is called by:
  9955 ;;		_SYSTEM_Initialize
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           
  9960                           ;psect for function _OSCILLATOR_Initialize
  9961  17C3                     _OSCILLATOR_Initialize:	
  9962                           
  9963                           ;system.c: 91: OSCCON1 = 0x60;
  9964                           
  9965                           ;incstack = 0
  9966                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9967  17C3  3060               	movlw	96
  9968  17C4  0031               	movlb	17	; select bank17
  9969  17C5  008D               	movwf	13	;volatile
  9970                           
  9971                           ;system.c: 92: OSCCON3 = 0x00;
  9972  17C6  018F               	clrf	15	;volatile
  9973                           
  9974                           ;system.c: 93: OSCEN = 0x00;
  9975  17C7  0191               	clrf	17	;volatile
  9976                           
  9977                           ;system.c: 94: OSCFRQ = 0x06;
  9978  17C8  3006               	movlw	6
  9979  17C9  0093               	movwf	19	;volatile
  9980                           
  9981                           ;system.c: 95: OSCTUNE = 0x00;
  9982  17CA  0192               	clrf	18	;volatile
  9983  17CB  0008               	return
  9984  17CC                     __end_of_OSCILLATOR_Initialize:	
  9985                           
  9986                           	psect	text21
  9987  0BFE                     __ptext21:	
  9988 ;; *************** function _LCD_Init *****************
  9989 ;; Defined at:
  9990 ;;		line 154 in file "lcd.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  style           1    wreg     unsigned char 
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  style           1    7[COMMON] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  1    wreg      void 
  9997 ;; Registers used:
  9998 ;;		wreg, status,2, status,0, pclath, cstack
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10006 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10007 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10008 ;;Total ram usage:        4 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:    2
 10011 ;; This function calls:
 10012 ;;		_LCD_Cmd
 10013 ;;		_LCD_Port
 10014 ;; This function is called by:
 10015 ;;		_SYSTEM_Initialize
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           
 10020                           ;psect for function _LCD_Init
 10021  0BFE                     _LCD_Init:	
 10022                           
 10023                           ;incstack = 0
 10024                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10025                           ;LCD_Init@style stored from wreg
 10026  0BFE  00F7               	movwf	LCD_Init@style
 10027                           
 10028                           ;lcd.c: 156: LCD_Port(0x00);
 10029  0BFF  3000               	movlw	0
 10030  0C00  3188  2048  318B   	fcall	_LCD_Port
 10031                           
 10032                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 10033  0C03  3005               	movlw	5
 10034  0C04  00F6               	movwf	??_LCD_Init+2
 10035  0C05  300F               	movlw	15
 10036  0C06  00F5               	movwf	??_LCD_Init+1
 10037  0C07  30F4               	movlw	244
 10038  0C08  00F4               	movwf	??_LCD_Init
 10039  0C09                     u3477:	
 10040  0C09  0BF4               	decfsz	??_LCD_Init,f
 10041  0C0A  2C09               	goto	u3477
 10042  0C0B  0BF5               	decfsz	??_LCD_Init+1,f
 10043  0C0C  2C09               	goto	u3477
 10044  0C0D  0BF6               	decfsz	??_LCD_Init+2,f
 10045  0C0E  2C09               	goto	u3477
 10046                           
 10047                           ;lcd.c: 160: LCD_Cmd(0x03);
 10048  0C0F  3003               	movlw	3
 10049  0C10  3188  2008  318B   	fcall	_LCD_Cmd
 10050                           
 10051                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 10052  0C13  3068               	movlw	104
 10053  0C14  00F5               	movwf	??_LCD_Init+1
 10054  0C15  30E4               	movlw	228
 10055  0C16  00F4               	movwf	??_LCD_Init
 10056  0C17                     u3487:	
 10057  0C17  0BF4               	decfsz	??_LCD_Init,f
 10058  0C18  2C17               	goto	u3487
 10059  0C19  0BF5               	decfsz	??_LCD_Init+1,f
 10060  0C1A  2C17               	goto	u3487
 10061  0C1B  0000               	nop
 10062                           
 10063                           ;lcd.c: 164: LCD_Cmd(0x03);
 10064  0C1C  3003               	movlw	3
 10065  0C1D  3188  2008  318B   	fcall	_LCD_Cmd
 10066                           
 10067                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10068  0C20  3089               	movlw	137
 10069  0C21  00F4               	movwf	??_LCD_Init
 10070  0C22                     u3497:	
 10071  0C22  3200               	nop2
 10072  0C23  3200               	nop2
 10073  0C24  0BF4               	decfsz	??_LCD_Init,f
 10074  0C25  2C22               	goto	u3497
 10075                           
 10076                           ;lcd.c: 168: LCD_Cmd(0x03);
 10077  0C26  3003               	movlw	3
 10078  0C27  3188  2008  318B   	fcall	_LCD_Cmd
 10079                           
 10080                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10081  0C2A  3089               	movlw	137
 10082  0C2B  00F4               	movwf	??_LCD_Init
 10083  0C2C                     u3507:	
 10084  0C2C  3200               	nop2
 10085  0C2D  3200               	nop2
 10086  0C2E  0BF4               	decfsz	??_LCD_Init,f
 10087  0C2F  2C2C               	goto	u3507
 10088                           
 10089                           ;lcd.c: 172: LCD_Cmd(0x02);
 10090  0C30  3002               	movlw	2
 10091  0C31  3188  2008  318B   	fcall	_LCD_Cmd
 10092                           
 10093                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10094  0C34  3089               	movlw	137
 10095  0C35  00F4               	movwf	??_LCD_Init
 10096  0C36                     u3517:	
 10097  0C36  3200               	nop2
 10098  0C37  3200               	nop2
 10099  0C38  0BF4               	decfsz	??_LCD_Init,f
 10100  0C39  2C36               	goto	u3517
 10101                           
 10102                           ;lcd.c: 176: LCD_Cmd(0x2);
 10103  0C3A  3002               	movlw	2
 10104  0C3B  3188  2008  318B   	fcall	_LCD_Cmd
 10105                           
 10106                           ;lcd.c: 178: LCD_Cmd(0x8);
 10107  0C3E  3008               	movlw	8
 10108  0C3F  3188  2008  318B   	fcall	_LCD_Cmd
 10109                           
 10110                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10111  0C42  3089               	movlw	137
 10112  0C43  00F4               	movwf	??_LCD_Init
 10113  0C44                     u3527:	
 10114  0C44  3200               	nop2
 10115  0C45  3200               	nop2
 10116  0C46  0BF4               	decfsz	??_LCD_Init,f
 10117  0C47  2C44               	goto	u3527
 10118                           
 10119                           ;lcd.c: 182: LCD_Cmd(0x0);
 10120  0C48  3000               	movlw	0
 10121  0C49  3188  2008  318B   	fcall	_LCD_Cmd
 10122                           
 10123                           ;lcd.c: 184: LCD_Cmd(0x8);
 10124  0C4C  3008               	movlw	8
 10125  0C4D  3188  2008  318B   	fcall	_LCD_Cmd
 10126                           
 10127                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10128  0C50  3089               	movlw	137
 10129  0C51  00F4               	movwf	??_LCD_Init
 10130  0C52                     u3537:	
 10131  0C52  3200               	nop2
 10132  0C53  3200               	nop2
 10133  0C54  0BF4               	decfsz	??_LCD_Init,f
 10134  0C55  2C52               	goto	u3537
 10135                           
 10136                           ;lcd.c: 188: LCD_Cmd(0x0);
 10137  0C56  3000               	movlw	0
 10138  0C57  3188  2008  318B   	fcall	_LCD_Cmd
 10139                           
 10140                           ;lcd.c: 190: LCD_Cmd(0x1);
 10141  0C5A  3001               	movlw	1
 10142  0C5B  3188  2008  318B   	fcall	_LCD_Cmd
 10143                           
 10144                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 10145  0C5E  3034               	movlw	52
 10146  0C5F  00F5               	movwf	??_LCD_Init+1
 10147  0C60  30F1               	movlw	241
 10148  0C61  00F4               	movwf	??_LCD_Init
 10149  0C62                     u3547:	
 10150  0C62  0BF4               	decfsz	??_LCD_Init,f
 10151  0C63  2C62               	goto	u3547
 10152  0C64  0BF5               	decfsz	??_LCD_Init+1,f
 10153  0C65  2C62               	goto	u3547
 10154  0C66  3200               	nop2
 10155                           
 10156                           ;lcd.c: 194: LCD_Cmd(0x0);
 10157  0C67  3000               	movlw	0
 10158  0C68  3188  2008  318B   	fcall	_LCD_Cmd
 10159                           
 10160                           ;lcd.c: 196: LCD_Cmd(0x6);
 10161  0C6B  3006               	movlw	6
 10162  0C6C  3188  2008  318B   	fcall	_LCD_Cmd
 10163                           
 10164                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10165  0C6F  3089               	movlw	137
 10166  0C70  00F4               	movwf	??_LCD_Init
 10167  0C71                     u3557:	
 10168  0C71  3200               	nop2
 10169  0C72  3200               	nop2
 10170  0C73  0BF4               	decfsz	??_LCD_Init,f
 10171  0C74  2C71               	goto	u3557
 10172                           
 10173                           ;lcd.c: 200: LCD_Cmd(0x0);
 10174  0C75  3000               	movlw	0
 10175  0C76  3188  2008  318B   	fcall	_LCD_Cmd
 10176                           
 10177                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10178  0C79  0877               	movf	LCD_Init@style,w
 10179  0C7A  380C               	iorlw	12
 10180  0C7B  3188  2008  318B   	fcall	_LCD_Cmd
 10181                           
 10182                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10183  0C7E  3089               	movlw	137
 10184  0C7F  00F4               	movwf	??_LCD_Init
 10185  0C80                     u3567:	
 10186  0C80  3200               	nop2
 10187  0C81  3200               	nop2
 10188  0C82  0BF4               	decfsz	??_LCD_Init,f
 10189  0C83  2C80               	goto	u3567
 10190  0C84  0008               	return
 10191  0C85                     __end_of_LCD_Init:	
 10192                           
 10193                           	psect	text22
 10194  0800                     __ptext22:	
 10195 ;; *************** function _LCD_Clear *****************
 10196 ;; Defined at:
 10197 ;;		line 75 in file "lcd.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;		None
 10200 ;; Auto vars:     Size  Location     Type
 10201 ;;		None
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  1    wreg      void 
 10204 ;; Registers used:
 10205 ;;		wreg, status,2, status,0, pclath, cstack
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;Total ram usage:        0 bytes
 10216 ;; Hardware stack levels used:    1
 10217 ;; Hardware stack levels required when called:    2
 10218 ;; This function calls:
 10219 ;;		_LCD_Cmd
 10220 ;; This function is called by:
 10221 ;;		_SYSTEM_Initialize
 10222 ;;		_main
 10223 ;; This function uses a non-reentrant model
 10224 ;;
 10225                           
 10226                           
 10227                           ;psect for function _LCD_Clear
 10228  0800                     _LCD_Clear:	
 10229                           
 10230                           ;lcd.c: 77: LCD_Cmd(0);
 10231                           
 10232                           ;incstack = 0
 10233                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10234  0800  3000               	movlw	0
 10235  0801  3188  2008  3188   	fcall	_LCD_Cmd
 10236                           
 10237                           ;lcd.c: 78: LCD_Cmd(1);
 10238  0804  3001               	movlw	1
 10239  0805  3188  2008         	fcall	_LCD_Cmd
 10240  0807  0008               	return
 10241  0808                     __end_of_LCD_Clear:	
 10242                           
 10243                           	psect	text23
 10244  08ED                     __ptext23:	
 10245 ;; *************** function _InitCustomChars *****************
 10246 ;; Defined at:
 10247 ;;		line 29 in file "lcd.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;		None
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;  i               1    6[COMMON] unsigned char 
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1    wreg      void 
 10254 ;; Registers used:
 10255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;Total ram usage:        2 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:    2
 10268 ;; This function calls:
 10269 ;;		_LCD_Cmd
 10270 ;;		_LCD_Write_Char
 10271 ;; This function is called by:
 10272 ;;		_SYSTEM_Initialize
 10273 ;; This function uses a non-reentrant model
 10274 ;;
 10275                           
 10276                           
 10277                           ;psect for function _InitCustomChars
 10278  08ED                     _InitCustomChars:	
 10279                           
 10280                           ;lcd.c: 31: uint8_t i;
 10281                           ;lcd.c: 32: LCD_Cmd(0x04);
 10282                           
 10283                           ;incstack = 0
 10284                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10285  08ED  3004               	movlw	4
 10286  08EE  3188  2008  3188   	fcall	_LCD_Cmd
 10287                           
 10288                           ;lcd.c: 33: LCD_Cmd(0x00);
 10289  08F1  3000               	movlw	0
 10290  08F2  3188  2008  3188   	fcall	_LCD_Cmd
 10291                           
 10292                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10293  08F5  01F6               	clrf	InitCustomChars@i
 10294  08F6  3010               	movlw	16
 10295  08F7  0276               	subwf	InitCustomChars@i,w
 10296  08F8  1803               	btfsc	3,0
 10297  08F9  290B               	goto	l2245
 10298  08FA                     l2239:	
 10299                           
 10300                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10301  08FA  0876               	movf	InitCustomChars@i,w
 10302  08FB  3EA0               	addlw	(low (___cgram| (0+256)))& (0+255)
 10303  08FC  0086               	movwf	6
 10304  08FD  3001               	movlw	1	; select bank3/4
 10305  08FE  0087               	movwf	7
 10306  08FF  0801               	movf	1,w
 10307  0900  3189  2113  3188   	fcall	_LCD_Write_Char
 10308  0903  3001               	movlw	1
 10309  0904  00F5               	movwf	??_InitCustomChars
 10310  0905  0875               	movf	??_InitCustomChars,w
 10311  0906  07F6               	addwf	InitCustomChars@i,f
 10312  0907  3010               	movlw	16
 10313  0908  0276               	subwf	InitCustomChars@i,w
 10314  0909  1C03               	skipc
 10315  090A  28FA               	goto	l2239
 10316  090B                     l2245:	
 10317                           
 10318                           ;lcd.c: 36: LCD_Cmd(0);
 10319  090B  3000               	movlw	0
 10320  090C  3188  2008  3188   	fcall	_LCD_Cmd
 10321                           
 10322                           ;lcd.c: 37: LCD_Cmd(2);
 10323  090F  3002               	movlw	2
 10324  0910  3188  2008         	fcall	_LCD_Cmd
 10325  0912  0008               	return
 10326  0913                     __end_of_InitCustomChars:	
 10327                           
 10328                           	psect	text24
 10329  087A                     __ptext24:	
 10330 ;; *************** function _ADCC_Initialize *****************
 10331 ;; Defined at:
 10332 ;;		line 61 in file "adc.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;		None
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;		None
 10337 ;; Return value:  Size  Location     Type
 10338 ;;                  1    wreg      void 
 10339 ;; Registers used:
 10340 ;;		wreg, status,2
 10341 ;; Tracked objects:
 10342 ;;		On entry : 0/0
 10343 ;;		On exit  : 0/0
 10344 ;;		Unchanged: 0/0
 10345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10350 ;;Total ram usage:        0 bytes
 10351 ;; Hardware stack levels used:    1
 10352 ;; This function calls:
 10353 ;;		Nothing
 10354 ;; This function is called by:
 10355 ;;		_SYSTEM_Initialize
 10356 ;; This function uses a non-reentrant model
 10357 ;;
 10358                           
 10359                           
 10360                           ;psect for function _ADCC_Initialize
 10361  087A                     _ADCC_Initialize:	
 10362                           
 10363                           ;adc.c: 63: ADCON1 = 0x00;
 10364                           
 10365                           ;incstack = 0
 10366                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10367  087A  0021               	movlb	1	; select bank1
 10368  087B  0194               	clrf	20	;volatile
 10369                           
 10370                           ;adc.c: 65: ADCON2 = 0x00;
 10371  087C  0195               	clrf	21	;volatile
 10372                           
 10373                           ;adc.c: 67: ADCON3 = 0x00;
 10374  087D  0196               	clrf	22	;volatile
 10375                           
 10376                           ;adc.c: 69: ADACT = 0x00;
 10377  087E  0199               	clrf	25	;volatile
 10378                           
 10379                           ;adc.c: 71: ADSTAT = 0x00;
 10380  087F  0197               	clrf	23	;volatile
 10381                           
 10382                           ;adc.c: 74: ADCLK = 0x3F;
 10383  0880  303F               	movlw	63
 10384  0881  0098               	movwf	24	;volatile
 10385                           
 10386                           ;adc.c: 82: ADREF = 0x00;
 10387  0882  019A               	clrf	26	;volatile
 10388                           
 10389                           ;adc.c: 84: ADCAP = 0x00;
 10390  0883  019B               	clrf	27	;volatile
 10391                           
 10392                           ;adc.c: 87: ADPRE = 0x07;
 10393  0884  3007               	movlw	7
 10394  0885  009C               	movwf	28	;volatile
 10395                           
 10396                           ;adc.c: 89: ADACQ = 0x00;
 10397  0886  019D               	clrf	29	;volatile
 10398                           
 10399                           ;adc.c: 91: ADPCH = 0x00;
 10400  0887  019E               	clrf	30	;volatile
 10401                           
 10402                           ;adc.c: 93: ADRPT = 0x00;
 10403  0888  0022               	movlb	2	; select bank2
 10404  0889  018D               	clrf	13	;volatile
 10405                           
 10406                           ;adc.c: 95: ADLTHL = 0x00;
 10407  088A  018E               	clrf	14	;volatile
 10408                           
 10409                           ;adc.c: 97: ADLTHH = 0x00;
 10410  088B  018F               	clrf	15	;volatile
 10411                           
 10412                           ;adc.c: 99: ADUTHL = 0x00;
 10413  088C  0190               	clrf	16	;volatile
 10414                           
 10415                           ;adc.c: 101: ADUTHH = 0x00;
 10416  088D  0191               	clrf	17	;volatile
 10417                           
 10418                           ;adc.c: 103: ADSTPTL = 0x00;
 10419  088E  0192               	clrf	18	;volatile
 10420                           
 10421                           ;adc.c: 105: ADSTPTH = 0x00;
 10422  088F  0193               	clrf	19	;volatile
 10423                           
 10424                           ;adc.c: 107: ADCON0 = 0x84;
 10425  0890  3084               	movlw	132
 10426  0891  0021               	movlb	1	; select bank1
 10427  0892  0093               	movwf	19	;volatile
 10428  0893  0008               	return
 10429  0894                     __end_of_ADCC_Initialize:	
 10430                           
 10431                           	psect	text25
 10432  081C                     __ptext25:	
 10433 ;; *************** function _PWM7_LoadDutyValue *****************
 10434 ;; Defined at:
 10435 ;;		line 32 in file "pwm.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10438 ;; Auto vars:     Size  Location     Type
 10439 ;;		None
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  1    wreg      void 
 10442 ;; Registers used:
 10443 ;;		wreg, status,2, status,0
 10444 ;; Tracked objects:
 10445 ;;		On entry : 0/0
 10446 ;;		On exit  : 0/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10452 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10453 ;;Total ram usage:        4 bytes
 10454 ;; Hardware stack levels used:    1
 10455 ;; This function calls:
 10456 ;;		Nothing
 10457 ;; This function is called by:
 10458 ;;		_main
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           
 10463                           ;psect for function _PWM7_LoadDutyValue
 10464  081C                     _PWM7_LoadDutyValue:	
 10465                           
 10466                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10467                           
 10468                           ;incstack = 0
 10469                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10470  081C  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10471  081D  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10472  081E  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10473  081F  00F2               	movwf	??_PWM7_LoadDutyValue
 10474  0820  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10475  0821  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10476  0822  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10477  0823  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10478  0824  0872               	movf	??_PWM7_LoadDutyValue,w
 10479  0825  0027               	movlb	7	; select bank7
 10480  0826  0091               	movwf	17	;volatile
 10481                           
 10482                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10483  0827  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10484  0828  3903               	andlw	3
 10485  0829  00F2               	movwf	??_PWM7_LoadDutyValue
 10486  082A  3005               	movlw	5
 10487  082B                     u3065:	
 10488  082B  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10489  082C  3EFF               	addlw	-1
 10490  082D  1D03               	skipz
 10491  082E  282B               	goto	u3065
 10492  082F  3572               	lslf	??_PWM7_LoadDutyValue,w
 10493  0830  0090               	movwf	16	;volatile
 10494  0831  0008               	return
 10495  0832                     __end_of_PWM7_LoadDutyValue:	
 10496                           
 10497                           	psect	text26
 10498  0054                     __ptext26:	
 10499 ;; *************** function _PID_Calculate *****************
 10500 ;; Defined at:
 10501 ;;		line 21 in file "pid.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;  setpoint        2    6[COMMON] int 
 10504 ;;  temp            2    8[COMMON] int 
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;		None
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  2    6[COMMON] int 
 10509 ;; Registers used:
 10510 ;;		wreg, status,2, status,0, pclath, cstack
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10519 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10520 ;;Total ram usage:        6 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; Hardware stack levels required when called:    1
 10523 ;; This function calls:
 10524 ;;		___wmul
 10525 ;; This function is called by:
 10526 ;;		_main
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           
 10531                           ;psect for function _PID_Calculate
 10532  0054                     _PID_Calculate:	
 10533                           
 10534                           ;pid.c: 23: pidCount+=1;
 10535                           
 10536                           ;incstack = 0
 10537                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 10538  0054  3001               	movlw	1
 10539  0055  0021               	movlb	1	; select bank1
 10540  0056  07DC               	addwf	_pidCount^(0+128),f
 10541  0057  3000               	movlw	0
 10542  0058  3DDD               	addwfc	(_pidCount+1)^(0+128),f
 10543                           
 10544                           ;pid.c: 26: error = setpoint - temp;
 10545  0059  0978               	comf	PID_Calculate@temp,w
 10546  005A  00FA               	movwf	??_PID_Calculate
 10547  005B  0979               	comf	PID_Calculate@temp+1,w
 10548  005C  00FB               	movwf	??_PID_Calculate+1
 10549  005D  0AFA               	incf	??_PID_Calculate,f
 10550  005E  1903               	skipnz
 10551  005F  0AFB               	incf	??_PID_Calculate+1,f
 10552  0060  0876               	movf	PID_Calculate@setpoint,w
 10553  0061  077A               	addwf	??_PID_Calculate,w
 10554  0062  00D6               	movwf	_error^(0+128)
 10555  0063  0877               	movf	PID_Calculate@setpoint+1,w
 10556  0064  3D7B               	addwfc	??_PID_Calculate+1,w
 10557  0065  00D7               	movwf	(_error+1)^(0+128)
 10558                           
 10559                           ;pid.c: 28: errorValue = error * Kp;
 10560  0066  0857               	movf	(_error+1)^(0+128),w
 10561  0067  00F1               	movwf	___wmul@multiplier+1
 10562  0068  0856               	movf	_error^(0+128),w
 10563  0069  00F0               	movwf	___wmul@multiplier
 10564  006A  086D               	movf	(_Kp+1)^(0+128),w
 10565  006B  00F3               	movwf	___wmul@multiplicand+1
 10566  006C  086C               	movf	_Kp^(0+128),w
 10567  006D  00F2               	movwf	___wmul@multiplicand
 10568  006E  3188  2094  3180   	fcall	___wmul
 10569  0071  0871               	movf	?___wmul+1,w
 10570  0072  0021               	movlb	1	; select bank1
 10571  0073  00D9               	movwf	(_errorValue+1)^(0+128)
 10572  0074  0870               	movf	?___wmul,w
 10573  0075  00D8               	movwf	_errorValue^(0+128)
 10574                           
 10575                           ;pid.c: 31: if(error>0)signPositive=1;
 10576  0076  0857               	movf	(_error+1)^(0+128),w
 10577  0077  3A80               	xorlw	128
 10578  0078  00FA               	movwf	??_PID_Calculate
 10579  0079  3080               	movlw	128
 10580  007A  027A               	subwf	??_PID_Calculate,w
 10581  007B  1D03               	skipz
 10582  007C  287F               	goto	u2995
 10583  007D  3001               	movlw	1
 10584  007E  0256               	subwf	_error^(0+128),w
 10585  007F                     u2995:	
 10586  007F  1C03               	skipc
 10587  0080  2887               	goto	l2651
 10588  0081  3001               	movlw	1
 10589  0082  0021               	movlb	1	; select bank1
 10590  0083  00E6               	movwf	_signPositive^(0+128)
 10591  0084  3000               	movlw	0
 10592  0085  00E7               	movwf	(_signPositive^(0+128)+1)
 10593  0086  288A               	goto	l2653
 10594  0087                     l2651:	
 10595                           
 10596                           ;pid.c: 33: else signPositive=0;
 10597  0087  0021               	movlb	1	; select bank1
 10598  0088  01E6               	clrf	_signPositive^(0+128)
 10599  0089  01E7               	clrf	(_signPositive+1)^(0+128)
 10600  008A                     l2653:	
 10601                           
 10602                           ;pid.c: 35: if(signPositive!=lastSign)pidIntegrated=0;
 10603  008A  085B               	movf	(_lastSign+1)^(0+128),w
 10604  008B  0667               	xorwf	(_signPositive+1)^(0+128),w
 10605  008C  1D03               	skipz
 10606  008D  2890               	goto	u3005
 10607  008E  085A               	movf	_lastSign^(0+128),w
 10608  008F  0666               	xorwf	_signPositive^(0+128),w
 10609  0090                     u3005:	
 10610  0090  1903               	skipnz
 10611  0091  2894               	goto	l2657
 10612  0092  01DE               	clrf	_pidIntegrated^(0+128)
 10613  0093  01DF               	clrf	(_pidIntegrated+1)^(0+128)
 10614  0094                     l2657:	
 10615                           
 10616                           ;pid.c: 37: lastSign=signPositive;
 10617  0094  0867               	movf	(_signPositive+1)^(0+128),w
 10618  0095  00DB               	movwf	(_lastSign+1)^(0+128)
 10619  0096  0866               	movf	_signPositive^(0+128),w
 10620  0097  00DA               	movwf	_lastSign^(0+128)
 10621                           
 10622                           ;pid.c: 41: derivativeValue=(error-pidPrevError)*Kd;
 10623  0098  0962               	comf	_pidPrevError^(0+128),w
 10624  0099  00FA               	movwf	??_PID_Calculate
 10625  009A  0963               	comf	(_pidPrevError+1)^(0+128),w
 10626  009B  00FB               	movwf	??_PID_Calculate+1
 10627  009C  0AFA               	incf	??_PID_Calculate,f
 10628  009D  1903               	skipnz
 10629  009E  0AFB               	incf	??_PID_Calculate+1,f
 10630  009F  0856               	movf	_error^(0+128),w
 10631  00A0  077A               	addwf	??_PID_Calculate,w
 10632  00A1  00F0               	movwf	___wmul@multiplier
 10633  00A2  0857               	movf	(_error+1)^(0+128),w
 10634  00A3  3D7B               	addwfc	??_PID_Calculate+1,w
 10635  00A4  00F1               	movwf	___wmul@multiplier+1
 10636  00A5  0869               	movf	(_Kd+1)^(0+128),w
 10637  00A6  00F3               	movwf	___wmul@multiplicand+1
 10638  00A7  0868               	movf	_Kd^(0+128),w
 10639  00A8  00F2               	movwf	___wmul@multiplicand
 10640  00A9  3188  2094  3180   	fcall	___wmul
 10641  00AC  0871               	movf	?___wmul+1,w
 10642  00AD  0021               	movlb	1	; select bank1
 10643  00AE  00D3               	movwf	(_derivativeValue+1)^(0+128)
 10644  00AF  0870               	movf	?___wmul,w
 10645  00B0  00D2               	movwf	_derivativeValue^(0+128)
 10646                           
 10647                           ;pid.c: 42: pidPrevError = error;
 10648  00B1  0857               	movf	(_error+1)^(0+128),w
 10649  00B2  00E3               	movwf	(_pidPrevError+1)^(0+128)
 10650  00B3  0856               	movf	_error^(0+128),w
 10651  00B4  00E2               	movwf	_pidPrevError^(0+128)
 10652                           
 10653                           ;pid.c: 45: if(pidCount>20)
 10654  00B5  085D               	movf	(_pidCount+1)^(0+128),w
 10655  00B6  3A80               	xorlw	128
 10656  00B7  00FA               	movwf	??_PID_Calculate
 10657  00B8  3080               	movlw	128
 10658  00B9  027A               	subwf	??_PID_Calculate,w
 10659  00BA  1D03               	skipz
 10660  00BB  28BE               	goto	u3015
 10661  00BC  3015               	movlw	21
 10662  00BD  025C               	subwf	_pidCount^(0+128),w
 10663  00BE                     u3015:	
 10664  00BE  1C03               	skipc
 10665  00BF  28FE               	goto	l2675
 10666                           
 10667                           ;pid.c: 46: {
 10668                           ;pid.c: 47: pidIntegrated = pidIntegrated + (error * Ki);
 10669  00C0  0021               	movlb	1	; select bank1
 10670  00C1  0857               	movf	(_error+1)^(0+128),w
 10671  00C2  00F1               	movwf	___wmul@multiplier+1
 10672  00C3  0856               	movf	_error^(0+128),w
 10673  00C4  00F0               	movwf	___wmul@multiplier
 10674  00C5  086B               	movf	(_Ki+1)^(0+128),w
 10675  00C6  00F3               	movwf	___wmul@multiplicand+1
 10676  00C7  086A               	movf	_Ki^(0+128),w
 10677  00C8  00F2               	movwf	___wmul@multiplicand
 10678  00C9  3188  2094  3180   	fcall	___wmul
 10679  00CC  0021               	movlb	1	; select bank1
 10680  00CD  085E               	movf	_pidIntegrated^(0+128),w
 10681  00CE  0770               	addwf	?___wmul,w
 10682  00CF  00DE               	movwf	_pidIntegrated^(0+128)
 10683  00D0  085F               	movf	(_pidIntegrated+1)^(0+128),w
 10684  00D1  3D71               	addwfc	?___wmul+1,w
 10685  00D2  00DF               	movwf	(_pidIntegrated+1)^(0+128)
 10686                           
 10687                           ;pid.c: 49: if (pidIntegrated< pidMinOutput)
 10688  00D3  085F               	movf	(_pidIntegrated+1)^(0+128),w
 10689  00D4  3A80               	xorlw	128
 10690  00D5  00FA               	movwf	??_PID_Calculate
 10691  00D6  0861               	movf	(_pidMinOutput+1)^(0+128),w
 10692  00D7  3A80               	xorlw	128
 10693  00D8  027A               	subwf	??_PID_Calculate,w
 10694  00D9  1D03               	skipz
 10695  00DA  28DD               	goto	u3025
 10696  00DB  0860               	movf	_pidMinOutput^(0+128),w
 10697  00DC  025E               	subwf	_pidIntegrated^(0+128),w
 10698  00DD                     u3025:	
 10699  00DD  1803               	skipnc
 10700  00DE  28E4               	goto	l182
 10701                           
 10702                           ;pid.c: 50: {
 10703                           ;pid.c: 51: pidIntegrated= pidMinOutput;
 10704  00DF  0021               	movlb	1	; select bank1
 10705  00E0  0861               	movf	(_pidMinOutput+1)^(0+128),w
 10706  00E1  00DF               	movwf	(_pidIntegrated+1)^(0+128)
 10707  00E2  0860               	movf	_pidMinOutput^(0+128),w
 10708  00E3  00DE               	movwf	_pidIntegrated^(0+128)
 10709  00E4                     l182:	
 10710                           
 10711                           ;pid.c: 52: }
 10712                           ;pid.c: 54: if (pidIntegrated> pidMaxOutput)
 10713  00E4  0023               	movlb	3	; select bank3
 10714  00E5  0835               	movf	(_pidMaxOutput+1)^(0+384),w
 10715  00E6  3A80               	xorlw	128
 10716  00E7  00FA               	movwf	??_PID_Calculate
 10717  00E8  0021               	movlb	1	; select bank1
 10718  00E9  085F               	movf	(_pidIntegrated+1)^(0+128),w
 10719  00EA  3A80               	xorlw	128
 10720  00EB  027A               	subwf	??_PID_Calculate,w
 10721  00EC  1D03               	skipz
 10722  00ED  28F1               	goto	u3035
 10723  00EE  085E               	movf	_pidIntegrated^(0+128),w
 10724  00EF  0023               	movlb	3	; select bank3
 10725  00F0  0234               	subwf	_pidMaxOutput^(0+384),w
 10726  00F1                     u3035:	
 10727  00F1  1803               	skipnc
 10728  00F2  28FB               	goto	l2673
 10729                           
 10730                           ;pid.c: 55: {
 10731                           ;pid.c: 56: pidIntegrated= pidMaxOutput;
 10732  00F3  0023               	movlb	3	; select bank3
 10733  00F4  0835               	movf	(_pidMaxOutput+1)^(0+384),w
 10734  00F5  0021               	movlb	1	; select bank1
 10735  00F6  00DF               	movwf	(_pidIntegrated+1)^(0+128)
 10736  00F7  0023               	movlb	3	; select bank3
 10737  00F8  0834               	movf	_pidMaxOutput^(0+384),w
 10738  00F9  0021               	movlb	1	; select bank1
 10739  00FA  00DE               	movwf	_pidIntegrated^(0+128)
 10740  00FB                     l2673:	
 10741                           
 10742                           ;pid.c: 57: }
 10743                           ;pid.c: 58: pidCount=0;
 10744  00FB  0021               	movlb	1	; select bank1
 10745  00FC  01DC               	clrf	_pidCount^(0+128)
 10746  00FD  01DD               	clrf	(_pidCount+1)^(0+128)
 10747  00FE                     l2675:	
 10748                           
 10749                           ;pid.c: 59: }
 10750                           ;pid.c: 62: Result = errorValue+pidIntegrated+derivativeValue;
 10751  00FE  0021               	movlb	1	; select bank1
 10752  00FF  085E               	movf	_pidIntegrated^(0+128),w
 10753  0100  0758               	addwf	_errorValue^(0+128),w
 10754  0101  00FA               	movwf	??_PID_Calculate
 10755  0102  085F               	movf	(_pidIntegrated+1)^(0+128),w
 10756  0103  3D59               	addwfc	(_errorValue+1)^(0+128),w
 10757  0104  00FB               	movwf	??_PID_Calculate+1
 10758  0105  0852               	movf	_derivativeValue^(0+128),w
 10759  0106  077A               	addwf	??_PID_Calculate,w
 10760  0107  00D0               	movwf	_Result^(0+128)
 10761  0108  0853               	movf	(_derivativeValue+1)^(0+128),w
 10762  0109  3D7B               	addwfc	??_PID_Calculate+1,w
 10763  010A  00D1               	movwf	(_Result+1)^(0+128)
 10764                           
 10765                           ;pid.c: 64: if (Result < pidMinOutput)
 10766  010B  0851               	movf	(_Result+1)^(0+128),w
 10767  010C  3A80               	xorlw	128
 10768  010D  00FA               	movwf	??_PID_Calculate
 10769  010E  0861               	movf	(_pidMinOutput+1)^(0+128),w
 10770  010F  3A80               	xorlw	128
 10771  0110  027A               	subwf	??_PID_Calculate,w
 10772  0111  1D03               	skipz
 10773  0112  2915               	goto	u3045
 10774  0113  0860               	movf	_pidMinOutput^(0+128),w
 10775  0114  0250               	subwf	_Result^(0+128),w
 10776  0115                     u3045:	
 10777  0115  1803               	skipnc
 10778  0116  291C               	goto	l184
 10779                           
 10780                           ;pid.c: 65: {
 10781                           ;pid.c: 66: Result = pidMinOutput;
 10782  0117  0021               	movlb	1	; select bank1
 10783  0118  0861               	movf	(_pidMinOutput+1)^(0+128),w
 10784  0119  00D1               	movwf	(_Result+1)^(0+128)
 10785  011A  0860               	movf	_pidMinOutput^(0+128),w
 10786  011B  00D0               	movwf	_Result^(0+128)
 10787  011C                     l184:	
 10788                           
 10789                           ;pid.c: 67: }
 10790                           ;pid.c: 69: if (Result > pidMaxOutput)
 10791  011C  0023               	movlb	3	; select bank3
 10792  011D  0835               	movf	(_pidMaxOutput+1)^(0+384),w
 10793  011E  3A80               	xorlw	128
 10794  011F  00FA               	movwf	??_PID_Calculate
 10795  0120  0021               	movlb	1	; select bank1
 10796  0121  0851               	movf	(_Result+1)^(0+128),w
 10797  0122  3A80               	xorlw	128
 10798  0123  027A               	subwf	??_PID_Calculate,w
 10799  0124  1D03               	skipz
 10800  0125  2929               	goto	u3055
 10801  0126  0850               	movf	_Result^(0+128),w
 10802  0127  0023               	movlb	3	; select bank3
 10803  0128  0234               	subwf	_pidMaxOutput^(0+384),w
 10804  0129                     u3055:	
 10805  0129  1803               	skipnc
 10806  012A  2933               	goto	l185
 10807                           
 10808                           ;pid.c: 70: {
 10809                           ;pid.c: 71: Result = pidMaxOutput;
 10810  012B  0023               	movlb	3	; select bank3
 10811  012C  0835               	movf	(_pidMaxOutput+1)^(0+384),w
 10812  012D  0021               	movlb	1	; select bank1
 10813  012E  00D1               	movwf	(_Result+1)^(0+128)
 10814  012F  0023               	movlb	3	; select bank3
 10815  0130  0834               	movf	_pidMaxOutput^(0+384),w
 10816  0131  0021               	movlb	1	; select bank1
 10817  0132  00D0               	movwf	_Result^(0+128)
 10818  0133                     l185:	
 10819                           
 10820                           ;pid.c: 72: }
 10821                           ;pid.c: 74: return (Result);
 10822  0133  0021               	movlb	1	; select bank1
 10823  0134  0851               	movf	(_Result+1)^(0+128),w
 10824  0135  00F7               	movwf	?_PID_Calculate+1
 10825  0136  0850               	movf	_Result^(0+128),w
 10826  0137  00F6               	movwf	?_PID_Calculate
 10827  0138  0008               	return
 10828  0139                     __end_of_PID_Calculate:	
 10829                           
 10830                           	psect	text27
 10831  0894                     __ptext27:	
 10832 ;; *************** function ___wmul *****************
 10833 ;; Defined at:
 10834 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;  multiplier      2    0[COMMON] unsigned int 
 10837 ;;  multiplicand    2    2[COMMON] unsigned int 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  product         2    4[COMMON] unsigned int 
 10840 ;; Return value:  Size  Location     Type
 10841 ;;                  2    0[COMMON] unsigned int 
 10842 ;; Registers used:
 10843 ;;		wreg, status,2, status,0
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;Total ram usage:        6 bytes
 10854 ;; Hardware stack levels used:    1
 10855 ;; This function calls:
 10856 ;;		Nothing
 10857 ;; This function is called by:
 10858 ;;		_readAnalog
 10859 ;;		_PID_Calculate
 10860 ;;		_eval_poly
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           
 10865                           ;psect for function ___wmul
 10866  0894                     ___wmul:	
 10867                           
 10868                           ;incstack = 0
 10869                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10870  0894  01F4               	clrf	___wmul@product
 10871  0895  01F5               	clrf	___wmul@product+1
 10872  0896                     l1983:	
 10873  0896  1C70               	btfss	___wmul@multiplier,0
 10874  0897  289C               	goto	l447
 10875  0898  0872               	movf	___wmul@multiplicand,w
 10876  0899  07F4               	addwf	___wmul@product,f
 10877  089A  0873               	movf	___wmul@multiplicand+1,w
 10878  089B  3DF5               	addwfc	___wmul@product+1,f
 10879  089C                     l447:	
 10880  089C  3001               	movlw	1
 10881  089D                     u1885:	
 10882  089D  35F2               	lslf	___wmul@multiplicand,f
 10883  089E  0DF3               	rlf	___wmul@multiplicand+1,f
 10884  089F  0B89               	decfsz	9,f
 10885  08A0  289D               	goto	u1885
 10886  08A1  3001               	movlw	1
 10887  08A2                     u1895:	
 10888  08A2  36F1               	lsrf	___wmul@multiplier+1,f
 10889  08A3  0CF0               	rrf	___wmul@multiplier,f
 10890  08A4  0B89               	decfsz	9,f
 10891  08A5  28A2               	goto	u1895
 10892  08A6  0870               	movf	___wmul@multiplier,w
 10893  08A7  0471               	iorwf	___wmul@multiplier+1,w
 10894  08A8  1D03               	btfss	3,2
 10895  08A9  2896               	goto	l1983
 10896  08AA  0875               	movf	___wmul@product+1,w
 10897  08AB  00F1               	movwf	?___wmul+1
 10898  08AC  0874               	movf	___wmul@product,w
 10899  08AD  00F0               	movwf	?___wmul
 10900  08AE  0008               	return
 10901  08AF                     __end_of___wmul:	
 10902                           
 10903                           	psect	text28
 10904  0860                     __ptext28:	
 10905 ;; *************** function _LCD_Write_String *****************
 10906 ;; Defined at:
 10907 ;;		line 239 in file "lcd.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  a               2    5[COMMON] PTR const unsigned char 
 10910 ;;		 -> STR_2(8), STR_1(5), 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  i               2    8[COMMON] int 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10926 ;;Total ram usage:        5 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; Hardware stack levels required when called:    2
 10929 ;; This function calls:
 10930 ;;		_LCD_Write_Char
 10931 ;; This function is called by:
 10932 ;;		_main
 10933 ;; This function uses a non-reentrant model
 10934 ;;
 10935                           
 10936                           
 10937                           ;psect for function _LCD_Write_String
 10938  0860                     _LCD_Write_String:	
 10939                           
 10940                           ;lcd.c: 241: int i;
 10941                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10942                           
 10943                           ;incstack = 0
 10944                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10945  0860  01F8               	clrf	LCD_Write_String@i
 10946  0861  01F9               	clrf	LCD_Write_String@i+1
 10947  0862                     l2589:	
 10948  0862  0875               	movf	LCD_Write_String@a,w
 10949  0863  0778               	addwf	LCD_Write_String@i,w
 10950  0864  0084               	movwf	4
 10951  0865  0876               	movf	LCD_Write_String@a+1,w
 10952  0866  3D79               	addwfc	LCD_Write_String@i+1,w
 10953  0867  0085               	movwf	5
 10954  0868  0012               	moviw fsr0++
 10955  0869  1903               	btfsc	3,2
 10956  086A  0008               	return
 10957                           
 10958                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10959  086B  0875               	movf	LCD_Write_String@a,w
 10960  086C  0778               	addwf	LCD_Write_String@i,w
 10961  086D  0084               	movwf	4
 10962  086E  0876               	movf	LCD_Write_String@a+1,w
 10963  086F  3D79               	addwfc	LCD_Write_String@i+1,w
 10964  0870  0085               	movwf	5
 10965  0871  0800               	movf	0,w	;code access
 10966  0872  3189  2113  3188   	fcall	_LCD_Write_Char
 10967  0875  3001               	movlw	1
 10968  0876  07F8               	addwf	LCD_Write_String@i,f
 10969  0877  3000               	movlw	0
 10970  0878  3DF9               	addwfc	LCD_Write_String@i+1,f
 10971  0879  2862               	goto	l2589
 10972  087A                     __end_of_LCD_Write_String:	
 10973                           
 10974                           	psect	text29
 10975  0F37                     __ptext29:	
 10976 ;; *************** function _LCD_Write_Int *****************
 10977 ;; Defined at:
 10978 ;;		line 246 in file "lcd.c"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;  value           2    9[COMMON] int 
 10981 ;;  fieldLength     1   11[COMMON] char 
 10982 ;;  numPlaces       1   12[COMMON] char 
 10983 ;;  sign            1   13[COMMON] char 
 10984 ;; Auto vars:     Size  Location     Type
 10985 ;;  str             5    5[BANK0 ] unsigned char [5]
 10986 ;;  i               2   12[BANK0 ] int 
 10987 ;;  j               2   10[BANK0 ] int 
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  1    wreg      void 
 10990 ;; Registers used:
 10991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10997 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;Total ram usage:       19 bytes
 11002 ;; Hardware stack levels used:    1
 11003 ;; Hardware stack levels required when called:    2
 11004 ;; This function calls:
 11005 ;;		_LCD_Write_Char
 11006 ;;		___awdiv
 11007 ;;		___awmod
 11008 ;; This function is called by:
 11009 ;;		_main
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013                           
 11014                           ;psect for function _LCD_Write_Int
 11015  0F37                     _LCD_Write_Int:	
 11016                           
 11017                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 11018                           
 11019                           ;incstack = 0
 11020                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11021  0F37  30C4               	movlw	low LCD_Write_Int@F13690
 11022  0F38  0086               	movwf	6
 11023  0F39  3001               	movlw	high LCD_Write_Int@F13690
 11024  0F3A  0087               	movwf	7
 11025  0F3B  3025               	movlw	low LCD_Write_Int@str
 11026  0F3C  0084               	movwf	4
 11027  0F3D  3000               	movlw	high LCD_Write_Int@str
 11028  0F3E  0085               	movwf	5
 11029  0F3F  3005               	movlw	5
 11030  0F40  0020               	movlb	0	; select bank0
 11031  0F41  00A0               	movwf	??_LCD_Write_Int
 11032  0F42                     u2900:	
 11033  0F42  0016               	moviw fsr1++
 11034  0F43  001A               	movwi fsr0++
 11035  0F44  0BA0               	decfsz	??_LCD_Write_Int,f
 11036  0F45  2F42               	goto	u2900
 11037                           
 11038                           ;lcd.c: 249: int i=4,j=0;
 11039  0F46  3004               	movlw	4
 11040  0F47  00AC               	movwf	LCD_Write_Int@i
 11041  0F48  3000               	movlw	0
 11042  0F49  00AD               	movwf	LCD_Write_Int@i+1
 11043  0F4A  01AA               	clrf	LCD_Write_Int@j
 11044  0F4B  01AB               	clrf	LCD_Write_Int@j+1
 11045                           
 11046                           ;lcd.c: 251: if(value<0)
 11047  0F4C  1FFA               	btfss	LCD_Write_Int@value+1,7
 11048  0F4D  2F58               	goto	l2603
 11049                           
 11050                           ;lcd.c: 252: {
 11051                           ;lcd.c: 253: LCD_Write_Char('-');
 11052  0F4E  302D               	movlw	45
 11053  0F4F  3189  2113  318F   	fcall	_LCD_Write_Char
 11054                           
 11055                           ;lcd.c: 254: value=value*-1;
 11056  0F52  09F9               	comf	LCD_Write_Int@value,f
 11057  0F53  09FA               	comf	LCD_Write_Int@value+1,f
 11058  0F54  0AF9               	incf	LCD_Write_Int@value,f
 11059  0F55  1903               	skipnz
 11060  0F56  0AFA               	incf	LCD_Write_Int@value+1,f
 11061                           
 11062                           ;lcd.c: 255: }
 11063  0F57  2F5F               	goto	l2613
 11064  0F58                     l2603:	
 11065                           
 11066                           ;lcd.c: 257: else
 11067                           ;lcd.c: 258: {
 11068                           ;lcd.c: 259: if(sign == 1)
 11069  0F58  037D               	decf	LCD_Write_Int@sign,w
 11070  0F59  1D03               	btfss	3,2
 11071  0F5A  2F5F               	goto	l2613
 11072                           
 11073                           ;lcd.c: 260: {
 11074                           ;lcd.c: 261: LCD_Write_Char('+');
 11075  0F5B  302B               	movlw	43
 11076  0F5C  3189  2113  318F   	fcall	_LCD_Write_Char
 11077  0F5F                     l2613:	
 11078                           ;lcd.c: 262: }
 11079                           ;lcd.c: 263: }
 11080                           ;lcd.c: 265: while(value)
 11081                           
 11082  0F5F  0879               	movf	LCD_Write_Int@value,w
 11083  0F60  047A               	iorwf	LCD_Write_Int@value+1,w
 11084  0F61  1903               	btfsc	3,2
 11085  0F62  2F8C               	goto	l2615
 11086                           
 11087                           ;lcd.c: 266: {
 11088                           ;lcd.c: 267: str[i]=value%10;
 11089  0F63  300A               	movlw	10
 11090  0F64  00F0               	movwf	___awmod@divisor
 11091  0F65  3000               	movlw	0
 11092  0F66  00F1               	movwf	___awmod@divisor+1
 11093  0F67  087A               	movf	LCD_Write_Int@value+1,w
 11094  0F68  00F3               	movwf	___awmod@dividend+1
 11095  0F69  0879               	movf	LCD_Write_Int@value,w
 11096  0F6A  00F2               	movwf	___awmod@dividend
 11097  0F6B  3180  200F  318F   	fcall	___awmod
 11098  0F6E  0870               	movf	?___awmod,w
 11099  0F6F  0020               	movlb	0	; select bank0
 11100  0F70  00A0               	movwf	??_LCD_Write_Int
 11101  0F71  082C               	movf	LCD_Write_Int@i,w
 11102  0F72  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11103  0F73  0086               	movwf	6
 11104  0F74  0187               	clrf	7
 11105  0F75  0820               	movf	??_LCD_Write_Int,w
 11106  0F76  0081               	movwf	1
 11107                           
 11108                           ;lcd.c: 268: value=value/10;
 11109  0F77  300A               	movlw	10
 11110  0F78  00F0               	movwf	___awdiv@divisor
 11111  0F79  3000               	movlw	0
 11112  0F7A  00F1               	movwf	___awdiv@divisor+1
 11113  0F7B  087A               	movf	LCD_Write_Int@value+1,w
 11114  0F7C  00F3               	movwf	___awdiv@dividend+1
 11115  0F7D  0879               	movf	LCD_Write_Int@value,w
 11116  0F7E  00F2               	movwf	___awdiv@dividend
 11117  0F7F  318A  2267  318F   	fcall	___awdiv
 11118  0F82  0871               	movf	?___awdiv+1,w
 11119  0F83  00FA               	movwf	LCD_Write_Int@value+1
 11120  0F84  0870               	movf	?___awdiv,w
 11121  0F85  00F9               	movwf	LCD_Write_Int@value
 11122                           
 11123                           ;lcd.c: 269: i--;
 11124  0F86  30FF               	movlw	255
 11125  0F87  0020               	movlb	0	; select bank0
 11126  0F88  07AC               	addwf	LCD_Write_Int@i,f
 11127  0F89  30FF               	movlw	255
 11128  0F8A  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11129  0F8B  2F5F               	goto	l2613
 11130  0F8C                     l2615:	
 11131                           
 11132                           ;lcd.c: 270: }
 11133                           ;lcd.c: 271: if(fieldLength==-1)
 11134  0F8C  0A7B               	incf	LCD_Write_Int@fieldLength,w
 11135  0F8D  1903               	btfsc	3,2
 11136  0F8E  2F95               	goto	l2621
 11137  0F8F  2F9E               	goto	l2623
 11138  0F90                     l2619:	
 11139                           ;lcd.c: 272: {
 11140                           ;lcd.c: 273: while(str[j]==0)
 11141                           
 11142                           
 11143                           ;lcd.c: 274: {
 11144                           ;lcd.c: 275: j++;
 11145  0F90  3001               	movlw	1
 11146  0F91  0020               	movlb	0	; select bank0
 11147  0F92  07AA               	addwf	LCD_Write_Int@j,f
 11148  0F93  3000               	movlw	0
 11149  0F94  3DAB               	addwfc	LCD_Write_Int@j+1,f
 11150  0F95                     l2621:	
 11151  0F95  0020               	movlb	0	; select bank0
 11152  0F96  082A               	movf	LCD_Write_Int@j,w
 11153  0F97  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11154  0F98  0086               	movwf	6
 11155  0F99  0187               	clrf	7
 11156  0F9A  0801               	movf	1,w
 11157  0F9B  1D03               	btfss	3,2
 11158  0F9C  2FAF               	goto	l2625
 11159  0F9D  2F90               	goto	l2619
 11160  0F9E                     l2623:	
 11161                           ;lcd.c: 276: }
 11162                           ;lcd.c: 277: }
 11163                           
 11164                           
 11165                           ;lcd.c: 278: else
 11166                           ;lcd.c: 279: {
 11167                           ;lcd.c: 280: j=5-fieldLength;
 11168  0F9E  087B               	movf	LCD_Write_Int@fieldLength,w
 11169  0F9F  0020               	movlb	0	; select bank0
 11170  0FA0  00A0               	movwf	??_LCD_Write_Int
 11171  0FA1  01A1               	clrf	??_LCD_Write_Int+1
 11172  0FA2  1BA0               	btfsc	??_LCD_Write_Int,7
 11173  0FA3  03A1               	decf	??_LCD_Write_Int+1,f
 11174  0FA4  09A0               	comf	??_LCD_Write_Int,f
 11175  0FA5  09A1               	comf	??_LCD_Write_Int+1,f
 11176  0FA6  0AA0               	incf	??_LCD_Write_Int,f
 11177  0FA7  1903               	skipnz
 11178  0FA8  0AA1               	incf	??_LCD_Write_Int+1,f
 11179  0FA9  0820               	movf	??_LCD_Write_Int,w
 11180  0FAA  3E05               	addlw	5
 11181  0FAB  00AA               	movwf	LCD_Write_Int@j
 11182  0FAC  3000               	movlw	0
 11183  0FAD  3D21               	addwfc	??_LCD_Write_Int+1,w
 11184  0FAE  00AB               	movwf	LCD_Write_Int@j+1
 11185  0FAF                     l2625:	
 11186                           
 11187                           ;lcd.c: 281: }
 11188                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11189  0FAF  082B               	movf	LCD_Write_Int@j+1,w
 11190  0FB0  00AD               	movwf	LCD_Write_Int@i+1
 11191  0FB1  082A               	movf	LCD_Write_Int@j,w
 11192  0FB2  00AC               	movwf	LCD_Write_Int@i
 11193  0FB3                     l2631:	
 11194  0FB3  087C               	movf	LCD_Write_Int@numPlaces,w
 11195  0FB4  00A0               	movwf	??_LCD_Write_Int
 11196  0FB5  01A1               	clrf	??_LCD_Write_Int+1
 11197  0FB6  1BA0               	btfsc	??_LCD_Write_Int,7
 11198  0FB7  03A1               	decf	??_LCD_Write_Int+1,f
 11199  0FB8  09A0               	comf	??_LCD_Write_Int,f
 11200  0FB9  09A1               	comf	??_LCD_Write_Int+1,f
 11201  0FBA  0AA0               	incf	??_LCD_Write_Int,f
 11202  0FBB  1903               	skipnz
 11203  0FBC  0AA1               	incf	??_LCD_Write_Int+1,f
 11204  0FBD  0820               	movf	??_LCD_Write_Int,w
 11205  0FBE  3E05               	addlw	5
 11206  0FBF  00A2               	movwf	??_LCD_Write_Int+2
 11207  0FC0  3000               	movlw	0
 11208  0FC1  3D21               	addwfc	??_LCD_Write_Int+1,w
 11209  0FC2  00A3               	movwf	??_LCD_Write_Int+3
 11210  0FC3  082D               	movf	LCD_Write_Int@i+1,w
 11211  0FC4  3A80               	xorlw	128
 11212  0FC5  00A4               	movwf	??_LCD_Write_Int+4
 11213  0FC6  0823               	movf	??_LCD_Write_Int+3,w
 11214  0FC7  3A80               	xorlw	128
 11215  0FC8  0224               	subwf	??_LCD_Write_Int+4,w
 11216  0FC9  1D03               	skipz
 11217  0FCA  2FCD               	goto	u2965
 11218  0FCB  0822               	movf	??_LCD_Write_Int+2,w
 11219  0FCC  022C               	subwf	LCD_Write_Int@i,w
 11220  0FCD                     u2965:	
 11221  0FCD  1803               	btfsc	3,0
 11222  0FCE  2FDF               	goto	l2633
 11223                           
 11224                           ;lcd.c: 284: {
 11225                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11226  0FCF  0020               	movlb	0	; select bank0
 11227  0FD0  082C               	movf	LCD_Write_Int@i,w
 11228  0FD1  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11229  0FD2  0086               	movwf	6
 11230  0FD3  0187               	clrf	7
 11231  0FD4  0801               	movf	1,w
 11232  0FD5  3E30               	addlw	48
 11233  0FD6  3189  2113  318F   	fcall	_LCD_Write_Char
 11234  0FD9  3001               	movlw	1
 11235  0FDA  0020               	movlb	0	; select bank0
 11236  0FDB  07AC               	addwf	LCD_Write_Int@i,f
 11237  0FDC  3000               	movlw	0
 11238  0FDD  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11239  0FDE  2FB3               	goto	l2631
 11240  0FDF                     l2633:	
 11241                           
 11242                           ;lcd.c: 286: }
 11243                           ;lcd.c: 288: if(numPlaces == 1)
 11244  0FDF  037C               	decf	LCD_Write_Int@numPlaces,w
 11245  0FE0  1D03               	btfss	3,2
 11246  0FE1  2FEC               	goto	l2637
 11247                           
 11248                           ;lcd.c: 289: {
 11249                           ;lcd.c: 290: LCD_Write_Char(46);
 11250  0FE2  302E               	movlw	46
 11251  0FE3  3189  2113  318F   	fcall	_LCD_Write_Char
 11252                           
 11253                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11254  0FE6  0020               	movlb	0	; select bank0
 11255  0FE7  0829               	movf	LCD_Write_Int@str+4,w
 11256  0FE8  3E30               	addlw	48
 11257  0FE9  3189  2113  318F   	fcall	_LCD_Write_Char
 11258  0FEC                     l2637:	
 11259                           
 11260                           ;lcd.c: 292: }
 11261                           ;lcd.c: 294: if(numPlaces == 2)
 11262  0FEC  3002               	movlw	2
 11263  0FED  067C               	xorwf	LCD_Write_Int@numPlaces,w
 11264  0FEE  1D03               	btfss	3,2
 11265  0FEF  0008               	return
 11266                           
 11267                           ;lcd.c: 295: {
 11268                           ;lcd.c: 296: LCD_Write_Char(46);
 11269  0FF0  302E               	movlw	46
 11270  0FF1  3189  2113  318F   	fcall	_LCD_Write_Char
 11271                           
 11272                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11273  0FF4  0020               	movlb	0	; select bank0
 11274  0FF5  0828               	movf	LCD_Write_Int@str+3,w
 11275  0FF6  3E30               	addlw	48
 11276  0FF7  3189  2113  318F   	fcall	_LCD_Write_Char
 11277                           
 11278                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11279  0FFA  0020               	movlb	0	; select bank0
 11280  0FFB  0829               	movf	LCD_Write_Int@str+4,w
 11281  0FFC  3E30               	addlw	48
 11282  0FFD  3189  2113         	fcall	_LCD_Write_Char
 11283  0FFF  0008               	return
 11284  1000                     __end_of_LCD_Write_Int:	
 11285                           
 11286                           	psect	text30
 11287  000F                     __ptext30:	
 11288 ;; *************** function ___awmod *****************
 11289 ;; Defined at:
 11290 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11291 ;; Parameters:    Size  Location     Type
 11292 ;;  divisor         2    0[COMMON] int 
 11293 ;;  dividend        2    2[COMMON] int 
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;  sign            1    6[COMMON] unsigned char 
 11296 ;;  counter         1    5[COMMON] unsigned char 
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  2    0[COMMON] int 
 11299 ;; Registers used:
 11300 ;;		wreg, status,2, status,0
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11309 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11310 ;;Total ram usage:        7 bytes
 11311 ;; Hardware stack levels used:    1
 11312 ;; This function calls:
 11313 ;;		Nothing
 11314 ;; This function is called by:
 11315 ;;		_LCD_Write_Int
 11316 ;; This function uses a non-reentrant model
 11317 ;;
 11318                           
 11319                           
 11320                           ;psect for function ___awmod
 11321  000F                     ___awmod:	
 11322                           
 11323                           ;incstack = 0
 11324                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11325  000F  01F6               	clrf	___awmod@sign
 11326  0010  1FF3               	btfss	___awmod@dividend+1,7
 11327  0011  2819               	goto	l2463
 11328  0012  09F2               	comf	___awmod@dividend,f
 11329  0013  09F3               	comf	___awmod@dividend+1,f
 11330  0014  0AF2               	incf	___awmod@dividend,f
 11331  0015  1903               	skipnz
 11332  0016  0AF3               	incf	___awmod@dividend+1,f
 11333  0017  01F6               	clrf	___awmod@sign
 11334  0018  0AF6               	incf	___awmod@sign,f
 11335  0019                     l2463:	
 11336  0019  1FF1               	btfss	___awmod@divisor+1,7
 11337  001A  2820               	goto	l2467
 11338  001B  09F0               	comf	___awmod@divisor,f
 11339  001C  09F1               	comf	___awmod@divisor+1,f
 11340  001D  0AF0               	incf	___awmod@divisor,f
 11341  001E  1903               	skipnz
 11342  001F  0AF1               	incf	___awmod@divisor+1,f
 11343  0020                     l2467:	
 11344  0020  0870               	movf	___awmod@divisor,w
 11345  0021  0471               	iorwf	___awmod@divisor+1,w
 11346  0022  1903               	btfsc	3,2
 11347  0023  2847               	goto	l2485
 11348  0024  01F5               	clrf	___awmod@counter
 11349  0025  0AF5               	incf	___awmod@counter,f
 11350  0026                     l2475:	
 11351  0026  1BF1               	btfsc	___awmod@divisor+1,7
 11352  0027  2832               	goto	l2477
 11353  0028  3001               	movlw	1
 11354  0029                     u2635:	
 11355  0029  35F0               	lslf	___awmod@divisor,f
 11356  002A  0DF1               	rlf	___awmod@divisor+1,f
 11357  002B  0B89               	decfsz	9,f
 11358  002C  2829               	goto	u2635
 11359  002D  3001               	movlw	1
 11360  002E  00F4               	movwf	??___awmod
 11361  002F  0874               	movf	??___awmod,w
 11362  0030  07F5               	addwf	___awmod@counter,f
 11363  0031  2826               	goto	l2475
 11364  0032                     l2477:	
 11365  0032  0871               	movf	___awmod@divisor+1,w
 11366  0033  0273               	subwf	___awmod@dividend+1,w
 11367  0034  1D03               	skipz
 11368  0035  2838               	goto	u2655
 11369  0036  0870               	movf	___awmod@divisor,w
 11370  0037  0272               	subwf	___awmod@dividend,w
 11371  0038                     u2655:	
 11372  0038  1C03               	skipc
 11373  0039  283E               	goto	l2481
 11374  003A  0870               	movf	___awmod@divisor,w
 11375  003B  02F2               	subwf	___awmod@dividend,f
 11376  003C  0871               	movf	___awmod@divisor+1,w
 11377  003D  3BF3               	subwfb	___awmod@dividend+1,f
 11378  003E                     l2481:	
 11379  003E  3001               	movlw	1
 11380  003F                     u2665:	
 11381  003F  36F1               	lsrf	___awmod@divisor+1,f
 11382  0040  0CF0               	rrf	___awmod@divisor,f
 11383  0041  0B89               	decfsz	9,f
 11384  0042  283F               	goto	u2665
 11385  0043  3001               	movlw	1
 11386  0044  02F5               	subwf	___awmod@counter,f
 11387  0045  1D03               	btfss	3,2
 11388  0046  2832               	goto	l2477
 11389  0047                     l2485:	
 11390  0047  0876               	movf	___awmod@sign,w
 11391  0048  1903               	btfsc	3,2
 11392  0049  284F               	goto	l2489
 11393  004A  09F2               	comf	___awmod@dividend,f
 11394  004B  09F3               	comf	___awmod@dividend+1,f
 11395  004C  0AF2               	incf	___awmod@dividend,f
 11396  004D  1903               	skipnz
 11397  004E  0AF3               	incf	___awmod@dividend+1,f
 11398  004F                     l2489:	
 11399  004F  0873               	movf	___awmod@dividend+1,w
 11400  0050  00F1               	movwf	?___awmod+1
 11401  0051  0872               	movf	___awmod@dividend,w
 11402  0052  00F0               	movwf	?___awmod
 11403  0053  0008               	return
 11404  0054                     __end_of___awmod:	
 11405                           
 11406                           	psect	text31
 11407  0A67                     __ptext31:	
 11408 ;; *************** function ___awdiv *****************
 11409 ;; Defined at:
 11410 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11411 ;; Parameters:    Size  Location     Type
 11412 ;;  divisor         2    0[COMMON] int 
 11413 ;;  dividend        2    2[COMMON] int 
 11414 ;; Auto vars:     Size  Location     Type
 11415 ;;  quotient        2    7[COMMON] int 
 11416 ;;  sign            1    6[COMMON] unsigned char 
 11417 ;;  counter         1    5[COMMON] unsigned char 
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  2    0[COMMON] int 
 11420 ;; Registers used:
 11421 ;;		wreg, status,2, status,0
 11422 ;; Tracked objects:
 11423 ;;		On entry : 0/0
 11424 ;;		On exit  : 0/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11428 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11430 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11431 ;;Total ram usage:        9 bytes
 11432 ;; Hardware stack levels used:    1
 11433 ;; This function calls:
 11434 ;;		Nothing
 11435 ;; This function is called by:
 11436 ;;		_LCD_Write_Int
 11437 ;; This function uses a non-reentrant model
 11438 ;;
 11439                           
 11440                           
 11441                           ;psect for function ___awdiv
 11442  0A67                     ___awdiv:	
 11443                           
 11444                           ;incstack = 0
 11445                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11446  0A67  01F6               	clrf	___awdiv@sign
 11447  0A68  1FF1               	btfss	___awdiv@divisor+1,7
 11448  0A69  2A71               	goto	l2419
 11449  0A6A  09F0               	comf	___awdiv@divisor,f
 11450  0A6B  09F1               	comf	___awdiv@divisor+1,f
 11451  0A6C  0AF0               	incf	___awdiv@divisor,f
 11452  0A6D  1903               	skipnz
 11453  0A6E  0AF1               	incf	___awdiv@divisor+1,f
 11454  0A6F  01F6               	clrf	___awdiv@sign
 11455  0A70  0AF6               	incf	___awdiv@sign,f
 11456  0A71                     l2419:	
 11457  0A71  1FF3               	btfss	___awdiv@dividend+1,7
 11458  0A72  2A7C               	goto	l2425
 11459  0A73  09F2               	comf	___awdiv@dividend,f
 11460  0A74  09F3               	comf	___awdiv@dividend+1,f
 11461  0A75  0AF2               	incf	___awdiv@dividend,f
 11462  0A76  1903               	skipnz
 11463  0A77  0AF3               	incf	___awdiv@dividend+1,f
 11464  0A78  3001               	movlw	1
 11465  0A79  00F4               	movwf	??___awdiv
 11466  0A7A  0874               	movf	??___awdiv,w
 11467  0A7B  06F6               	xorwf	___awdiv@sign,f
 11468  0A7C                     l2425:	
 11469  0A7C  01F7               	clrf	___awdiv@quotient
 11470  0A7D  01F8               	clrf	___awdiv@quotient+1
 11471  0A7E  0870               	movf	___awdiv@divisor,w
 11472  0A7F  0471               	iorwf	___awdiv@divisor+1,w
 11473  0A80  1903               	btfsc	3,2
 11474  0A81  2AAB               	goto	l2447
 11475  0A82  01F5               	clrf	___awdiv@counter
 11476  0A83  0AF5               	incf	___awdiv@counter,f
 11477  0A84                     l2435:	
 11478  0A84  1BF1               	btfsc	___awdiv@divisor+1,7
 11479  0A85  2A90               	goto	l2437
 11480  0A86  3001               	movlw	1
 11481  0A87                     u2535:	
 11482  0A87  35F0               	lslf	___awdiv@divisor,f
 11483  0A88  0DF1               	rlf	___awdiv@divisor+1,f
 11484  0A89  0B89               	decfsz	9,f
 11485  0A8A  2A87               	goto	u2535
 11486  0A8B  3001               	movlw	1
 11487  0A8C  00F4               	movwf	??___awdiv
 11488  0A8D  0874               	movf	??___awdiv,w
 11489  0A8E  07F5               	addwf	___awdiv@counter,f
 11490  0A8F  2A84               	goto	l2435
 11491  0A90                     l2437:	
 11492  0A90  3001               	movlw	1
 11493  0A91                     u2555:	
 11494  0A91  35F7               	lslf	___awdiv@quotient,f
 11495  0A92  0DF8               	rlf	___awdiv@quotient+1,f
 11496  0A93  0B89               	decfsz	9,f
 11497  0A94  2A91               	goto	u2555
 11498  0A95  0871               	movf	___awdiv@divisor+1,w
 11499  0A96  0273               	subwf	___awdiv@dividend+1,w
 11500  0A97  1D03               	skipz
 11501  0A98  2A9B               	goto	u2565
 11502  0A99  0870               	movf	___awdiv@divisor,w
 11503  0A9A  0272               	subwf	___awdiv@dividend,w
 11504  0A9B                     u2565:	
 11505  0A9B  1C03               	skipc
 11506  0A9C  2AA2               	goto	l2443
 11507  0A9D  0870               	movf	___awdiv@divisor,w
 11508  0A9E  02F2               	subwf	___awdiv@dividend,f
 11509  0A9F  0871               	movf	___awdiv@divisor+1,w
 11510  0AA0  3BF3               	subwfb	___awdiv@dividend+1,f
 11511  0AA1  1477               	bsf	___awdiv@quotient,0
 11512  0AA2                     l2443:	
 11513  0AA2  3001               	movlw	1
 11514  0AA3                     u2575:	
 11515  0AA3  36F1               	lsrf	___awdiv@divisor+1,f
 11516  0AA4  0CF0               	rrf	___awdiv@divisor,f
 11517  0AA5  0B89               	decfsz	9,f
 11518  0AA6  2AA3               	goto	u2575
 11519  0AA7  3001               	movlw	1
 11520  0AA8  02F5               	subwf	___awdiv@counter,f
 11521  0AA9  1D03               	btfss	3,2
 11522  0AAA  2A90               	goto	l2437
 11523  0AAB                     l2447:	
 11524  0AAB  0876               	movf	___awdiv@sign,w
 11525  0AAC  1903               	btfsc	3,2
 11526  0AAD  2AB3               	goto	l2451
 11527  0AAE  09F7               	comf	___awdiv@quotient,f
 11528  0AAF  09F8               	comf	___awdiv@quotient+1,f
 11529  0AB0  0AF7               	incf	___awdiv@quotient,f
 11530  0AB1  1903               	skipnz
 11531  0AB2  0AF8               	incf	___awdiv@quotient+1,f
 11532  0AB3                     l2451:	
 11533  0AB3  0878               	movf	___awdiv@quotient+1,w
 11534  0AB4  00F1               	movwf	?___awdiv+1
 11535  0AB5  0877               	movf	___awdiv@quotient,w
 11536  0AB6  00F0               	movwf	?___awdiv
 11537  0AB7  0008               	return
 11538  0AB8                     __end_of___awdiv:	
 11539                           
 11540                           	psect	text32
 11541  0913                     __ptext32:	
 11542 ;; *************** function _LCD_Write_Char *****************
 11543 ;; Defined at:
 11544 ;;		line 223 in file "lcd.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;  a               1    wreg     const unsigned char 
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;  a               1    4[COMMON] const unsigned char 
 11549 ;;  y               1    3[COMMON] unsigned char 
 11550 ;;  temp            1    2[COMMON] unsigned char 
 11551 ;; Return value:  Size  Location     Type
 11552 ;;                  1    wreg      void 
 11553 ;; Registers used:
 11554 ;;		wreg, status,2, status,0, pclath, cstack
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 0/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11561 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11562 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11563 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;Total ram usage:        4 bytes
 11565 ;; Hardware stack levels used:    1
 11566 ;; Hardware stack levels required when called:    1
 11567 ;; This function calls:
 11568 ;;		_LCD_Port
 11569 ;; This function is called by:
 11570 ;;		_InitCustomChars
 11571 ;;		_LCD_Write_String
 11572 ;;		_LCD_Write_Int
 11573 ;;		_main
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           
 11578                           ;psect for function _LCD_Write_Char
 11579  0913                     _LCD_Write_Char:	
 11580                           
 11581                           ;incstack = 0
 11582                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11583                           ;LCD_Write_Char@a stored from wreg
 11584  0913  00F4               	movwf	LCD_Write_Char@a
 11585                           
 11586                           ;lcd.c: 225: char temp,y;
 11587                           ;lcd.c: 226: temp = a&0x0F;
 11588  0914  0874               	movf	LCD_Write_Char@a,w
 11589  0915  390F               	andlw	15
 11590  0916  00F1               	movwf	??_LCD_Write_Char
 11591  0917  0871               	movf	??_LCD_Write_Char,w
 11592  0918  00F2               	movwf	LCD_Write_Char@temp
 11593                           
 11594                           ;lcd.c: 227: y = a&0xF0;
 11595  0919  0874               	movf	LCD_Write_Char@a,w
 11596  091A  39F0               	andlw	240
 11597  091B  00F1               	movwf	??_LCD_Write_Char
 11598  091C  0871               	movf	??_LCD_Write_Char,w
 11599  091D  00F3               	movwf	LCD_Write_Char@y
 11600                           
 11601                           ;lcd.c: 228: RA0 = 1;
 11602  091E  0020               	movlb	0	; select bank0
 11603  091F  140C               	bsf	12,0	;volatile
 11604                           
 11605                           ;lcd.c: 229: LCD_Port(y>>4);
 11606  0920  0873               	movf	LCD_Write_Char@y,w
 11607  0921  00F1               	movwf	??_LCD_Write_Char
 11608  0922  3004               	movlw	4
 11609  0923                     u2265:	
 11610  0923  36F1               	lsrf	??_LCD_Write_Char,f
 11611  0924  0B89               	decfsz	9,f
 11612  0925  2923               	goto	u2265
 11613  0926  0871               	movf	??_LCD_Write_Char,w
 11614  0927  3188  2048  3189   	fcall	_LCD_Port
 11615                           
 11616                           ;lcd.c: 230: RA2 = 1;
 11617  092A  0020               	movlb	0	; select bank0
 11618  092B  150C               	bsf	12,2	;volatile
 11619                           
 11620                           ;lcd.c: 231: RA2 = 0;
 11621  092C  110C               	bcf	12,2	;volatile
 11622                           
 11623                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11624  092D  306A               	movlw	106
 11625  092E  00F1               	movwf	??_LCD_Write_Char
 11626  092F                     u3577:	
 11627  092F  0BF1               	decfsz	??_LCD_Write_Char,f
 11628  0930  292F               	goto	u3577
 11629  0931  0000               	nop
 11630                           
 11631                           ;lcd.c: 233: LCD_Port(temp);
 11632  0932  0872               	movf	LCD_Write_Char@temp,w
 11633  0933  3188  2048  3189   	fcall	_LCD_Port
 11634                           
 11635                           ;lcd.c: 234: RA2 = 1;
 11636  0936  0020               	movlb	0	; select bank0
 11637  0937  150C               	bsf	12,2	;volatile
 11638                           
 11639                           ;lcd.c: 235: RA2 = 0;
 11640  0938  110C               	bcf	12,2	;volatile
 11641                           
 11642                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11643  0939  306A               	movlw	106
 11644  093A  00F1               	movwf	??_LCD_Write_Char
 11645  093B                     u3587:	
 11646  093B  0BF1               	decfsz	??_LCD_Write_Char,f
 11647  093C  293B               	goto	u3587
 11648  093D  0000               	nop
 11649  093E  0008               	return
 11650  093F                     __end_of_LCD_Write_Char:	
 11651                           
 11652                           	psect	text33
 11653  09E6                     __ptext33:	
 11654 ;; *************** function _LCD_Set_Cursor *****************
 11655 ;; Defined at:
 11656 ;;		line 82 in file "lcd.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;  x               1    wreg     unsigned char 
 11659 ;;  y               1    4[COMMON] unsigned char 
 11660 ;; Auto vars:     Size  Location     Type
 11661 ;;  x               1    7[COMMON] unsigned char 
 11662 ;;  temp            1   10[COMMON] unsigned char 
 11663 ;;  w               1    9[COMMON] unsigned char 
 11664 ;;  z               1    8[COMMON] unsigned char 
 11665 ;; Return value:  Size  Location     Type
 11666 ;;                  1    wreg      void 
 11667 ;; Registers used:
 11668 ;;		wreg, status,2, status,0, pclath, cstack
 11669 ;; Tracked objects:
 11670 ;;		On entry : 0/0
 11671 ;;		On exit  : 0/0
 11672 ;;		Unchanged: 0/0
 11673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11674 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11677 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11678 ;;Total ram usage:        7 bytes
 11679 ;; Hardware stack levels used:    1
 11680 ;; Hardware stack levels required when called:    2
 11681 ;; This function calls:
 11682 ;;		_LCD_Cmd
 11683 ;; This function is called by:
 11684 ;;		_main
 11685 ;; This function uses a non-reentrant model
 11686 ;;
 11687                           
 11688                           
 11689                           ;psect for function _LCD_Set_Cursor
 11690  09E6                     _LCD_Set_Cursor:	
 11691                           
 11692                           ;incstack = 0
 11693                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11694                           ;LCD_Set_Cursor@x stored from wreg
 11695  09E6  00F7               	movwf	LCD_Set_Cursor@x
 11696                           
 11697                           ;lcd.c: 86: char temp,z,w;
 11698                           ;lcd.c: 88: if(y == 0)
 11699  09E7  0874               	movf	LCD_Set_Cursor@y,w
 11700  09E8  1D03               	btfss	3,2
 11701  09E9  2A06               	goto	l2573
 11702                           
 11703                           ;lcd.c: 89: {
 11704                           ;lcd.c: 90: temp = 0x80 + x;
 11705  09EA  0877               	movf	LCD_Set_Cursor@x,w
 11706  09EB  3E80               	addlw	128
 11707  09EC  00F5               	movwf	??_LCD_Set_Cursor
 11708  09ED  0875               	movf	??_LCD_Set_Cursor,w
 11709  09EE  00FA               	movwf	LCD_Set_Cursor@temp
 11710                           
 11711                           ;lcd.c: 91: z = temp>>4;
 11712  09EF  087A               	movf	LCD_Set_Cursor@temp,w
 11713  09F0  00F5               	movwf	??_LCD_Set_Cursor
 11714  09F1  3004               	movlw	4
 11715  09F2                     u2865:	
 11716  09F2  36F5               	lsrf	??_LCD_Set_Cursor,f
 11717  09F3  0B89               	decfsz	9,f
 11718  09F4  29F2               	goto	u2865
 11719  09F5  0875               	movf	??_LCD_Set_Cursor,w
 11720  09F6  00F6               	movwf	??_LCD_Set_Cursor+1
 11721  09F7  0876               	movf	??_LCD_Set_Cursor+1,w
 11722  09F8  00F8               	movwf	LCD_Set_Cursor@z
 11723                           
 11724                           ;lcd.c: 92: w = temp & 0x0F;
 11725  09F9  087A               	movf	LCD_Set_Cursor@temp,w
 11726  09FA  390F               	andlw	15
 11727  09FB  00F5               	movwf	??_LCD_Set_Cursor
 11728  09FC  0875               	movf	??_LCD_Set_Cursor,w
 11729  09FD  00F9               	movwf	LCD_Set_Cursor@w
 11730                           
 11731                           ;lcd.c: 93: LCD_Cmd(z);
 11732  09FE  0878               	movf	LCD_Set_Cursor@z,w
 11733  09FF  3188  2008  3189   	fcall	_LCD_Cmd
 11734                           
 11735                           ;lcd.c: 94: LCD_Cmd(w);
 11736  0A02  0879               	movf	LCD_Set_Cursor@w,w
 11737  0A03  3188  2008         	fcall	_LCD_Cmd
 11738                           
 11739                           ;lcd.c: 95: }
 11740  0A05  0008               	return
 11741  0A06                     l2573:	
 11742                           
 11743                           ;lcd.c: 97: else if(y == 1)
 11744  0A06  0374               	decf	LCD_Set_Cursor@y,w
 11745  0A07  1D03               	btfss	3,2
 11746  0A08  0008               	return
 11747                           
 11748                           ;lcd.c: 98: {
 11749                           ;lcd.c: 99: temp = 0xC0 + x;
 11750  0A09  0877               	movf	LCD_Set_Cursor@x,w
 11751  0A0A  3EC0               	addlw	192
 11752  0A0B  00F5               	movwf	??_LCD_Set_Cursor
 11753  0A0C  0875               	movf	??_LCD_Set_Cursor,w
 11754  0A0D  00FA               	movwf	LCD_Set_Cursor@temp
 11755                           
 11756                           ;lcd.c: 100: z = temp>>4;
 11757  0A0E  087A               	movf	LCD_Set_Cursor@temp,w
 11758  0A0F  00F5               	movwf	??_LCD_Set_Cursor
 11759  0A10  3004               	movlw	4
 11760  0A11                     u2885:	
 11761  0A11  36F5               	lsrf	??_LCD_Set_Cursor,f
 11762  0A12  0B89               	decfsz	9,f
 11763  0A13  2A11               	goto	u2885
 11764  0A14  0875               	movf	??_LCD_Set_Cursor,w
 11765  0A15  00F6               	movwf	??_LCD_Set_Cursor+1
 11766  0A16  0876               	movf	??_LCD_Set_Cursor+1,w
 11767  0A17  00F8               	movwf	LCD_Set_Cursor@z
 11768                           
 11769                           ;lcd.c: 101: w = temp & 0x0F;
 11770  0A18  087A               	movf	LCD_Set_Cursor@temp,w
 11771  0A19  390F               	andlw	15
 11772  0A1A  00F5               	movwf	??_LCD_Set_Cursor
 11773  0A1B  0875               	movf	??_LCD_Set_Cursor,w
 11774  0A1C  00F9               	movwf	LCD_Set_Cursor@w
 11775                           
 11776                           ;lcd.c: 102: LCD_Cmd(z);
 11777  0A1D  0878               	movf	LCD_Set_Cursor@z,w
 11778  0A1E  3188  2008  3189   	fcall	_LCD_Cmd
 11779                           
 11780                           ;lcd.c: 103: LCD_Cmd(w);
 11781  0A21  0879               	movf	LCD_Set_Cursor@w,w
 11782  0A22  3188  2008         	fcall	_LCD_Cmd
 11783  0A24  0008               	return
 11784  0A25                     __end_of_LCD_Set_Cursor:	
 11785                           
 11786                           	psect	text34
 11787  0808                     __ptext34:	
 11788 ;; *************** function _LCD_Cmd *****************
 11789 ;; Defined at:
 11790 ;;		line 65 in file "lcd.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;  a               1    wreg     unsigned char 
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;  a               1    3[COMMON] unsigned char 
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      void 
 11797 ;; Registers used:
 11798 ;;		wreg, status,2, status,0, pclath, cstack
 11799 ;; Tracked objects:
 11800 ;;		On entry : 0/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11808 ;;Total ram usage:        3 bytes
 11809 ;; Hardware stack levels used:    1
 11810 ;; Hardware stack levels required when called:    1
 11811 ;; This function calls:
 11812 ;;		_LCD_Port
 11813 ;; This function is called by:
 11814 ;;		_InitCustomChars
 11815 ;;		_LCD_Clear
 11816 ;;		_LCD_Set_Cursor
 11817 ;;		_LCD_Init
 11818 ;; This function uses a non-reentrant model
 11819 ;;
 11820                           
 11821                           
 11822                           ;psect for function _LCD_Cmd
 11823  0808                     _LCD_Cmd:	
 11824                           
 11825                           ;incstack = 0
 11826                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11827                           ;LCD_Cmd@a stored from wreg
 11828  0808  00F3               	movwf	LCD_Cmd@a
 11829                           
 11830                           ;lcd.c: 67: RA0 = 0;
 11831  0809  0020               	movlb	0	; select bank0
 11832  080A  100C               	bcf	12,0	;volatile
 11833                           
 11834                           ;lcd.c: 68: LCD_Port(a);
 11835  080B  0873               	movf	LCD_Cmd@a,w
 11836  080C  3188  2048  3188   	fcall	_LCD_Port
 11837                           
 11838                           ;lcd.c: 69: RA2 = 1;
 11839  080F  0020               	movlb	0	; select bank0
 11840  0810  150C               	bsf	12,2	;volatile
 11841                           
 11842                           ;lcd.c: 70: RA2 = 0;
 11843  0811  110C               	bcf	12,2	;volatile
 11844                           
 11845                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11846  0812  302A               	movlw	42
 11847  0813  00F2               	movwf	??_LCD_Cmd+1
 11848  0814  308D               	movlw	141
 11849  0815  00F1               	movwf	??_LCD_Cmd
 11850  0816                     u3597:	
 11851  0816  0BF1               	decfsz	??_LCD_Cmd,f
 11852  0817  2816               	goto	u3597
 11853  0818  0BF2               	decfsz	??_LCD_Cmd+1,f
 11854  0819  2816               	goto	u3597
 11855  081A  3200               	nop2
 11856  081B  0008               	return
 11857  081C                     __end_of_LCD_Cmd:	
 11858                           
 11859                           	psect	text35
 11860  0848                     __ptext35:	
 11861 ;; *************** function _LCD_Port *****************
 11862 ;; Defined at:
 11863 ;;		line 41 in file "lcd.c"
 11864 ;; Parameters:    Size  Location     Type
 11865 ;;  a               1    wreg     unsigned char 
 11866 ;; Auto vars:     Size  Location     Type
 11867 ;;  a               1    0[COMMON] unsigned char 
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  1    wreg      void 
 11870 ;; Registers used:
 11871 ;;		wreg
 11872 ;; Tracked objects:
 11873 ;;		On entry : 0/0
 11874 ;;		On exit  : 0/0
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11881 ;;Total ram usage:        1 bytes
 11882 ;; Hardware stack levels used:    1
 11883 ;; This function calls:
 11884 ;;		Nothing
 11885 ;; This function is called by:
 11886 ;;		_LCD_Cmd
 11887 ;;		_LCD_Init
 11888 ;;		_LCD_Write_Char
 11889 ;; This function uses a non-reentrant model
 11890 ;;
 11891                           
 11892                           
 11893                           ;psect for function _LCD_Port
 11894  0848                     _LCD_Port:	
 11895                           
 11896                           ;incstack = 0
 11897                           ; Regs used in _LCD_Port: [wreg]
 11898                           ;LCD_Port@a stored from wreg
 11899  0848  00F0               	movwf	LCD_Port@a
 11900                           
 11901                           ;lcd.c: 43: if(a & 1)
 11902  0849  1C70               	btfss	LCD_Port@a,0
 11903  084A  284E               	goto	l94
 11904                           
 11905                           ;lcd.c: 44: RA7 = 1;
 11906  084B  0020               	movlb	0	; select bank0
 11907  084C  178C               	bsf	12,7	;volatile
 11908  084D  2850               	goto	l1969
 11909  084E                     l94:	
 11910                           
 11911                           ;lcd.c: 45: else
 11912                           ;lcd.c: 46: RA7 = 0;
 11913  084E  0020               	movlb	0	; select bank0
 11914  084F  138C               	bcf	12,7	;volatile
 11915  0850                     l1969:	
 11916                           
 11917                           ;lcd.c: 48: if(a & 2)
 11918  0850  1CF0               	btfss	LCD_Port@a,1
 11919  0851  2854               	goto	l96
 11920                           
 11921                           ;lcd.c: 49: RA6 = 1;
 11922  0852  170C               	bsf	12,6	;volatile
 11923  0853  2855               	goto	l1973
 11924  0854                     l96:	
 11925                           
 11926                           ;lcd.c: 50: else
 11927                           ;lcd.c: 51: RA6 = 0;
 11928  0854  130C               	bcf	12,6	;volatile
 11929  0855                     l1973:	
 11930                           
 11931                           ;lcd.c: 53: if(a & 4)
 11932  0855  1D70               	btfss	LCD_Port@a,2
 11933  0856  2859               	goto	l98
 11934                           
 11935                           ;lcd.c: 54: RC0 = 1;
 11936  0857  140E               	bsf	14,0	;volatile
 11937  0858  285A               	goto	l1977
 11938  0859                     l98:	
 11939                           
 11940                           ;lcd.c: 55: else
 11941                           ;lcd.c: 56: RC0 = 0;
 11942  0859  100E               	bcf	14,0	;volatile
 11943  085A                     l1977:	
 11944                           
 11945                           ;lcd.c: 58: if(a & 8)
 11946  085A  1DF0               	btfss	LCD_Port@a,3
 11947  085B  285E               	goto	l100
 11948                           
 11949                           ;lcd.c: 59: RC1 = 1;
 11950  085C  148E               	bsf	14,1	;volatile
 11951  085D  0008               	return
 11952  085E                     l100:	
 11953                           
 11954                           ;lcd.c: 60: else
 11955                           ;lcd.c: 61: RC1 = 0;
 11956  085E  108E               	bcf	14,1	;volatile
 11957  085F  0008               	return
 11958  0860                     __end_of_LCD_Port:	
 11959  007E                     btemp	set	126	;btemp
 11960  007E                     wtemp	set	126
 11961  007E                     wtemp0	set	126
 11962  0080                     wtemp1	set	128
 11963  0082                     wtemp2	set	130
 11964  0084                     wtemp3	set	132
 11965  0086                     wtemp4	set	134
 11966  0088                     wtemp5	set	136
 11967  007F                     wtemp6	set	127
 11968  007E                     ttemp	set	126
 11969  007E                     ttemp0	set	126
 11970  0081                     ttemp1	set	129
 11971  0084                     ttemp2	set	132
 11972  0087                     ttemp3	set	135
 11973  007F                     ttemp4	set	127
 11974  007E                     ltemp	set	126
 11975  007E                     ltemp0	set	126
 11976  0082                     ltemp1	set	130
 11977  0086                     ltemp2	set	134
 11978  0080                     ltemp3	set	128


Data Sizes:
    Strings     13
    Constant    27
    Data        28
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     40      78
    BANK2            80     80      80
    BANK3            80     14      45
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           48      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _PID_Calculate->___wmul
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->___fttol
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    ___fttol->_tempCalc

Critical Paths under _main in BANK1

    _main->___fttol

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               133   133      0   39638
                                             77 BANK0      3     3      0
                                             10 BANK1     30    30      0
                                              0 BANK2     80    80      0
                                              0 BANK3     14    14      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___fttol
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   30234
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   15955
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7209
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1816
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             73 BANK0      4     0      4
                                              0 BANK1     10    10      0
                           _tempCalc (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1090
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     940
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     374
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2335
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     645
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   ___fttol
     _tempCalc (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _frexp
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     28      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      E      2D      11       56.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     179      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              30      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     179      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Mar 31 21:03:08 2018

        __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000                               l55 17F9  
                             l94 084E                               l96 0854                               l98 0859  
                             _Kd 00E8                               _Ki 00EA                               _Kp 00EC  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 085E                              l182 00E4                              l502 0B8D  
                            l184 011C                              l185 0133                              l354 0741  
                            l346 066E                              l348 0695                              l358 0795  
                            l447 089C                              l615 0B5D                              l616 0B65  
                            l608 0B4A                              l639 01D8                              l699 0D08  
                            _GIE 005F                              _RA0 0060                              _RB0 0068  
                            _RA2 0062                              _RB1 0069                              _RC0 0070  
                            _RC1 0071                              _RA6 0066                              _RA7 0067  
                   __CFG_CPD$OFF 0000                              _log 0DD3                  __end_of_ADCRead 1800  
                   ___awmod@sign 0076                  _TMR2_Initialize 17E4                     __CFG_BORV$LO 0000  
                            wreg 0009                      main@analogs 01BC                  __end_of_LCD_Cmd 081C  
                   __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A                   _LCD_Set_Cursor 09E6  
                   ___ftdiv@sign 003F                             l2001 0161                             l2011 0177  
                           l2005 0168                             l2101 0F07                             l2031 01AE  
                           l2023 0191                             l2041 01CA                             l2033 01B3  
                           l2105 0F0F                             l2051 01FC                             l2043 01D4  
                           l2035 01B7                             l2203 0B11                             l2061 0217  
                           l2029 01A4                             l2047 01EA                             l2071 0E9A  
                           l2153 08D7                             l2161 0986                             l2403 0BE7  
                           l2245 090B                             l2165 099C                             l2093 0EF3  
                           l2077 0EB0                             l2239 08FA                             l2407 0BF5  
                           l2425 0A7C                             l2505 0D57                             l2089 0EEB  
                           l2185 09BD                             l2361 0E05                             l2451 0AB3  
                           l2443 0AA2                             l2435 0A84                             l2419 0A71  
                           l2603 0F58                             l2355 0DF2                             l2437 0A90  
                           l2621 0F95                             l2613 0F5F                             l2381 0B9E  
                           l2447 0AAB                             l2463 0019                             l2631 0FB3  
                           l2623 0F9E                             l2615 0F8C                             l2391 0BBC  
                           l2527 0DB1                             l2519 0D98                             l2481 003E  
                           l2633 0FDF                             l2625 0FAF                             l2475 0026  
                           l2467 0020                             l2619 0F90                             l2651 0087  
                           l2539 08B7                             l2573 0A06                             l2477 0032  
                           l2485 0047                             l2637 0FEC                             l2653 008A  
                           l2389 0BAE                             l2557 0459                             l1941 0B27  
                           l2901 0686                             l2735 0CA4                             l2399 0BDC  
                           l1951 0B4F                             l1943 0B31                             l2911 069D  
                           l2489 004F                             l2673 00FB                             l2657 0094  
                           l2761 0CFE                             l2753 0CE1                             l1953 0B57  
                           l1945 0B36                             l1937 0B20                             l2905 0697  
                           l2675 00FE                             l2763 0D0C                             l2755 0CF0  
                           l2499 0D41                             l2827 04F6                             l1973 0855  
                           l2589 0862                             l2941 074C                             l2917 06C0  
                           l1983 0896                             l2767 0D1A                             l2951 076B  
                           l1977 085A                             l1969 0850                             l2929 0717  
                           l2873 0615                             l2963 07A0                             l2891 0664  
                           l2883 062B                             l2869 060F                             l2967 07A6  
                           l2887 065C                             l2879 0626                             l2895 0670  
                           l2977 07B1                             ?_log 0057                             STR_1 1023  
                           STR_2 101B                             u2005 0192                             u2035 01A5  
                           u3005 0090                             u2205 0EFA                             _LATA 0016  
                           _LATB 0017                             u3015 00BE                             _LATC 0018  
                           u3025 00DD                             u2065 01B8                             u3035 00F1  
                           u3115 0CE2                             u2235 0F10                             u3045 0115  
                           u2245 0F16                             u2165 0EBC                             u3055 0129  
                           u2095 01CB                             u2175 0ECC                             u2360 096E  
                           u2265 0923                             u3065 082B                             u3145 0CFF  
                           u3305 0710                             u3225 0641                             u3170 04AD  
                           _T2PR 028D                             u2435 0BB1                             u2195 0EF4  
                           u3235 065A                             u3085 0CB1                             u2535 0A87  
                           u2455 0BBD                             u1815 0B6C                             u1735 0B2C  
                           u3255 0681                             u2465 0BD1                             u3345 0764  
                           u3265 0690                             u3417 04EC                             u2555 0A91  
                           u2635 0029                             u3507 0C2C                             u2475 0BDD  
                           u1755 0B45                             u2715 0D69                             u3427 073A  
                           u2900 0F42                             u2565 0A9B                             u3517 0C36  
                           u2805 03E9                             u2725 0D79                             u3437 078E  
                           u2575 0AA3                             u2655 0038                             u3527 0C44  
                           u3447 0A40                             u2815 0430                             u1775 0B52  
                           u2735 0D99                             u2665 003F                             u3537 0C52  
                           u3457 0A50                             u2825 0449                             u2745 0DA8  
                           u3547 0C62                             u3467 0A5F                             u2755 0DB2  
                           u1885 089D                             u3557 0C71                             u3477 0C09  
                           u2845 0465                             u1895 08A2                             u3567 0C80  
                           u3487 0C17                             u2865 09F2                             u3577 092F  
                           u3497 0C22                             u2785 035A                             u3587 093B  
                           u2795 03AC                             u3597 0816                             u2885 0A11  
                           u2965 0FCD                             u2995 007F              tempCalc@analogValue 005D  
                           _WPUA 0F39                             _WPUB 0F44                             _WPUC 0F4F  
                           _WPUE 0F65                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
              ?_LCD_Write_String 0075                             _main 0481                     ___ftpack@arg 0070  
             __size_of_LCD_Clear 0008                     ___ftpack@exp 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           log@x 0057                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 0002               ??_LCD_Write_String 0077                             ttemp 007E  
                           wtemp 007E                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 002E                    _LCD_Write_Int 0F37                     ___ftmul@sign 002F  
                   ___fttol@exp1 00A9                            ??_log 005A                     ___fttol@lval 00A5  
               __end_of_LCD_Init 0C85                 __end_of_LCD_Port 0860   __size_of_OSCILLATOR_Initialize 0009  
  __end_of_OSCILLATOR_Initialize 17CC                  __end_of___aldiv 0BFE                            _ADACQ 009D  
                          _ADCAP 009B                            _ADACT 0099                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 0AB8                            _ADPRE 009C                  __end_of___ftadd 022F  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0054                            _ADRPT 010D  
                __end_of___ftdiv 0DD3                  __end_of___ftmul 0F37                  ___awdiv@divisor 0070  
                __end_of___ftsub 08CD                  __end_of___fttol 0D2A                            _T2CON 028E  
                          _LATC2 00C2                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0075                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
         __end_of_LCD_Set_Cursor 0A25                    ___awtoft@sign 007D                            _frexp 09AB  
                          _errno 00D4                            _error 00D6                    ___ftpack@sign 0074  
                          main@j 01C0                            main@x 006F                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                 InitCustomChars@i 0076                   ?_LCD_Write_Int 0079  
                 _LCD_Write_Char 0913                  __initialization 07B7                      log@exponent 005B  
                   __end_of_main 07B7                readAnalog@channel 0026          __end_of_TMR2_Initialize 17F2  
                      ??_ADCRead 0073                    main@tPadCount 00B8                           ??_main 00AA  
                  ___fttol@sign1 00A4                __end_of_LCD_Clear 0808                        ??_LCD_Cmd 0071  
                ?_LCD_Set_Cursor 0074                           _ADCON0 0093                           _ADCON1 0094  
                         _ADCON2 0095                           _ADCON3 0096                           ?_frexp 0070  
                         _ADLTHH 010F                           _ADLTHL 010E                           _ADRESH 008D  
                         _ADRESL 008C                           _ADSTAT 0097                           _ADUTHH 0111  
               ___awdiv@dividend 0072                           _ADUTHL 0110                 __end_of___awtoft 08ED  
                         _ANSELA 0F38                           _ANSELB 0F43                           _ANSELC 0F4E  
               __end_of___ftpack 0B7C                           _RC3PPS 0F23                   __CFG_WDTCCS$SC 0000  
                         _FVRCON 090C                           _OSCFRQ 0893                    main@menuDelay 00BF  
         __end_of_LCD_Write_Char 093F                   __CFG_PWRTE$OFF 0000                           _Result 00D0  
                   _CCPTMRS1bits 021F                           ___ftge 0970           LCD_Write_Int@numPlaces 007C  
                      ??___aldiv 0078                           ___wmul 0894                        ??___awdiv 0074  
                      ??___ftadd 0046                   __CFG_STVREN$ON 0000                        ??___awmod 0074  
                 _PWM_Initialize 0004                        ??___ftdiv 0036                        ??___ftmul 0026  
                      ??___ftsub 007E                        ??___fttol 00A0           main@currentTemperature 00C5  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                         _totals 00C8            ___ftmul@f3_as_product 002B                 __end_of_tempCalc 0344  
                _ADCC_Initialize 087A                 LCD_Write_Int@str 0025                  _InitCustomChars 08ED  
                LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074  
                LCD_Set_Cursor@z 0078                    _pidIntegrated 00DE         readAnalog@analog_channel 0079  
              _SYSTEM_Initialize 0A25                 __end_oflog@coeff 101B          __end_of__initialization 07FD  
                      ?_LCD_Init 0070                        ?_LCD_Port 0070                       ___ftadd@f1 0040  
                     ___ftadd@f2 0043                  _derivativeValue 00D2                       ___ftge@ff1 0070  
                     ___ftge@ff2 0073                  ??_LCD_Write_Int 0020               ?_SYSTEM_Initialize 0070  
                   eval_poly@res 0054                       ___ftdiv@f1 0033                       ___ftdiv@f2 0030  
                     ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070                    LCD_Init@style 0077  
                     ___awtoft@c 0078                       ___ftmul@f1 0020                       ___ftmul@f2 0023  
         __end_of_PWM_Initialize 000F                       ___ftsub@f1 0050                       ___ftsub@f2 004D  
                     ___fttol@f1 0069                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 17BD                     __pidataBANK3 0832              ??_SYSTEM_Initialize 0078  
                  __end_of_frexp 09E6                 ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016  
                 main@delayCount 01C3                          ??_frexp 0074        __end_of_SYSTEM_Initialize 0A67  
                     __pbssBANK1 00C8                       __pbssBANK3 01C4                       __pbssBANK4 0220  
             __size_of_eval_poly 0060                       ??_LCD_Init 0074                       ??_LCD_Port 0070  
         __size_of_PID_Calculate 00E5                  ?_PWM_Initialize 0070                       __pmaintext 0481  
                        ?___ftge 0070                          ?___wmul 0070                  __CFG_PPS1WAY$ON 0000  
        __end_of_ADCC_Initialize 0894                          _ADCRead 17F2        __size_of_LCD_Write_String 001A  
                      ?___awtoft 0078                        ?___ftpack 0070                          _ADSTPTH 0113  
                        _ADSTPTL 0112         __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000  
        __end_of_InitCustomChars 0913                          _LCD_Cmd 0808                   main@holdOutput 00BB  
               main@lidOpenCount 00BC                          _OSCCON1 088D                          _OSCCON3 088F  
                        _OSCTUNE 0892                          _PWM7DCH 0391                          _PWM7DCL 0390  
                        _PWM7CON 0392                          _PPSLOCK 0E8F                   main@dutyCycle6 01BA  
                 main@dutyCycle7 00BD            PID_Calculate@setpoint 0076                        ?_tempCalc 005D  
                     _readAnalog 0344                          ___aldiv 0B7C                          ___cgram 01A0  
                __size_of___ftge 003B                          ___awdiv 0A67                          ___ftadd 0139  
                        ___awmod 000F                          ___ftdiv 0D2A                  __size_of___wmul 001B  
                        ___ftmul 0E83                          ___ftsub 08AF                          ___fttol 0C85  
                     _errorValue 00D8                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0B18                 ??_LCD_Set_Cursor 0075                          __ptext1 022F  
                        __ptext2 0DD3                          __ptext3 09AB                          __ptext4 0AB8  
                        __ptext5 0E83                          __ptext6 0970                          __ptext7 08CD  
                        __ptext8 08AF                          __ptext9 0139                    _PID_Calculate 0054  
                 main@resetDelay 00B7            _OSCILLATOR_Initialize 17C3                        _T2CONbits 028E  
                   __size_of_log 00B0                 ___awmod@dividend 0072                   ADCRead@channel 0073  
               ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070                          _samples 2350  
                      _LCD_Clear 0800       __size_of_SYSTEM_Initialize 0042                          clrloop0 17CD  
                        main@set 01C1             end_of_initialization 07FD                          init_ram 17D8  
                        initloop 17D9                       ??_tempCalc 007E                 ___aldiv@quotient 0022  
                 main@startDelay 00B6                LCD_Write_Int@sign 007D                       main@F13660 01C9  
                     main@F13668 0220                     __pstringtext 1000                 ?_ADCC_Initialize 0070  
          __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0076                 ?_InitCustomChars 0070  
                     main@C_or_F 00B5                       ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000  
                     main@bCount 006D                LCD_Write_String@a 0075                LCD_Write_String@i 0078  
               ??_LCD_Write_Char 0071                       main@choice 00B4                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 0087                __size_of_LCD_Port 0018                       main@output 00B9  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                   __end_of___ftge 09AB  
                 __end_of___wmul 08AF                 _LCD_Write_String 0860           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07B7                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0031                      __end_of_log 0E83  
                     frexp@value 0070                 ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 007B  
          __end_of_LCD_Write_Int 1000                 __CFG_LPBOREN$OFF 0000                         ??___ftge 0076  
              tempCalc@steinhart 0066                         ??___wmul 0074                     _pidMaxOutput 01B4  
                    __pdataBANK1 00E8                      __pdataBANK3 01A0                  ??_PID_Calculate 007A  
     __end_of_PWM7_LoadDutyValue 0832                  LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073  
                       ?_ADCRead 0070     PWM7_LoadDutyValue@dutyCycle7 0070                     _pidMinOutput 00E0  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                    __pbssBIGRAM 2350                         LCD_Cmd@a 0073                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                    __pcstackBANK2 0120  
                  __pcstackBANK3 01B6         __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074  
            __size_of_readAnalog 013D                     _pidPrevError 00E2           _PIN_MANAGER_Initialize 093F  
                       ?___aldiv 0070                __size_of_tempCalc 0115                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0069  
            main@lastTemperature 00C1                        _eval_poly 0AB8                   __size_of_frexp 003B  
                       _T2CLKCON 0290                  ___aldiv@divisor 0070                  ___aldiv@counter 0020  
                       _LCD_Init 0BFE                   ___wmul@product 0074                         _LCD_Port 0848  
                      clear_ram0 17CC                         _PIE0bits 0716                         _PIR4bits 0710  
               __size_of_ADCRead 000E                       _ADCON0bits 0093                ___wmul@multiplier 0070  
                     ?_eval_poly 004D                 __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 087A  
              ??_TMR2_Initialize 0070                  readAnalog@value 007B                        frexp@eptr 0073  
                   ??_readAnalog 0028                     _tempCalc$986 0063          ??_OSCILLATOR_Initialize 0070  
                 LCD_Write_Int@i 002C                   LCD_Write_Int@j 002A                 __size_of___aldiv 0082  
               __size_of___awdiv 0051                 __size_of___ftadd 00F6                 __size_of___awmod 0045  
               __size_of___ftdiv 00A9                 __size_of___ftmul 00B4                 __size_of___ftsub 001E  
               __size_of___fttol 00A5                         ___awtoft 08CD                         ___ftpack 0B18  
       __size_of_ADCC_Initialize 001A                         _channels 01B0                PID_Calculate@temp 0078  
                       __ptext10 0D2A                         __ptext11 0B18                         __ptext20 17C3  
                       __ptext12 0344                         __ptext21 0BFE                         __ptext13 0B7C  
                       __ptext30 000F                         __ptext22 0800                         __ptext14 17F2  
                       __ptext31 0A67                         __ptext23 08ED                         __ptext15 0C85  
                       __ptext32 0913                         __ptext24 087A                         __ptext16 0A25  
                       __ptext33 09E6                         __ptext25 081C                         __ptext17 17E4  
                       __ptext34 0808                         __ptext26 0054                         __ptext18 0004  
                       __ptext35 0848                         __ptext27 0894                         __ptext19 093F  
                       __ptext28 0860                         __ptext29 0F37               __end_of_readAnalog 0481  
        __size_of_LCD_Set_Cursor 003F                     _signPositive 00E6                        tempCalc@R 0060  
       __size_of_InitCustomChars 0026                         _lastSign 00DA              LCD_Write_Int@F13690 01C4  
                       _pidCount 00DC                    __size_of_main 0336             __CFG_WDTCWS$WDTCWS_7 0000  
                       _tempCalc 022F                         main@loop 00C0      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1000                      ??_eval_poly 007E                      _sampleIndex 00E4  
             _PWM7_LoadDutyValue 081C               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
            ?_PWM7_LoadDutyValue 0070                main@outputSamples 0120                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C             main@pidPeriodCounter 00C3  
             LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0079            __end_of_PID_Calculate 0139  
           ??_PWM7_LoadDutyValue 0072                     ___aldiv@sign 0021           __size_of_LCD_Write_Int 00C9  
                main@outputIndex 00C7   __end_of_PIN_MANAGER_Initialize 0970                ??_ADCC_Initialize 0070  
                main@outputTotal 01B6                ??_InitCustomChars 0075  
