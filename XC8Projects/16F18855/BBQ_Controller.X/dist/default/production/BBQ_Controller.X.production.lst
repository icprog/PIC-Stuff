

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Mar 31 14:46:14 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  001C                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  008C                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0110                     	;# 
   114  0110                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0119                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011C                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011D                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011E                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011F                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  018F                     	;# 
   154  0190                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0196                     	;# 
   158  0197                     	;# 
   159  0198                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019C                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  020E                     	;# 
   167  020F                     	;# 
   168  020F                     	;# 
   169  0210                     	;# 
   170  0210                     	;# 
   171  0211                     	;# 
   172  0211                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  0218                     	;# 
   183  0219                     	;# 
   184  021A                     	;# 
   185  021B                     	;# 
   186  021B                     	;# 
   187  021C                     	;# 
   188  021C                     	;# 
   189  021D                     	;# 
   190  021D                     	;# 
   191  021E                     	;# 
   192  021F                     	;# 
   193  028C                     	;# 
   194  028C                     	;# 
   195  028D                     	;# 
   196  028D                     	;# 
   197  028E                     	;# 
   198  028F                     	;# 
   199  0290                     	;# 
   200  0290                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0293                     	;# 
   206  0294                     	;# 
   207  0295                     	;# 
   208  0296                     	;# 
   209  0296                     	;# 
   210  0297                     	;# 
   211  0298                     	;# 
   212  0298                     	;# 
   213  0299                     	;# 
   214  0299                     	;# 
   215  029A                     	;# 
   216  029B                     	;# 
   217  029C                     	;# 
   218  029C                     	;# 
   219  029D                     	;# 
   220  030C                     	;# 
   221  030C                     	;# 
   222  030D                     	;# 
   223  030E                     	;# 
   224  030F                     	;# 
   225  0310                     	;# 
   226  0310                     	;# 
   227  0311                     	;# 
   228  0312                     	;# 
   229  0313                     	;# 
   230  0314                     	;# 
   231  0314                     	;# 
   232  0315                     	;# 
   233  0316                     	;# 
   234  0317                     	;# 
   235  0318                     	;# 
   236  0318                     	;# 
   237  0319                     	;# 
   238  031A                     	;# 
   239  031B                     	;# 
   240  031C                     	;# 
   241  031C                     	;# 
   242  031D                     	;# 
   243  031E                     	;# 
   244  031F                     	;# 
   245  038C                     	;# 
   246  038D                     	;# 
   247  038E                     	;# 
   248  0390                     	;# 
   249  0391                     	;# 
   250  0392                     	;# 
   251  040C                     	;# 
   252  040D                     	;# 
   253  040E                     	;# 
   254  040F                     	;# 
   255  0410                     	;# 
   256  0411                     	;# 
   257  0416                     	;# 
   258  0416                     	;# 
   259  0417                     	;# 
   260  0418                     	;# 
   261  0418                     	;# 
   262  0419                     	;# 
   263  041A                     	;# 
   264  041A                     	;# 
   265  041B                     	;# 
   266  041C                     	;# 
   267  041C                     	;# 
   268  041D                     	;# 
   269  041E                     	;# 
   270  041F                     	;# 
   271  048C                     	;# 
   272  048C                     	;# 
   273  048D                     	;# 
   274  048E                     	;# 
   275  048F                     	;# 
   276  048F                     	;# 
   277  0490                     	;# 
   278  0491                     	;# 
   279  0492                     	;# 
   280  0492                     	;# 
   281  0493                     	;# 
   282  0494                     	;# 
   283  0495                     	;# 
   284  0495                     	;# 
   285  0496                     	;# 
   286  0497                     	;# 
   287  0498                     	;# 
   288  0499                     	;# 
   289  049A                     	;# 
   290  049B                     	;# 
   291  049C                     	;# 
   292  049D                     	;# 
   293  050C                     	;# 
   294  050C                     	;# 
   295  050D                     	;# 
   296  050E                     	;# 
   297  050F                     	;# 
   298  050F                     	;# 
   299  0510                     	;# 
   300  0511                     	;# 
   301  0512                     	;# 
   302  0512                     	;# 
   303  0513                     	;# 
   304  0514                     	;# 
   305  0515                     	;# 
   306  0515                     	;# 
   307  0516                     	;# 
   308  0517                     	;# 
   309  0518                     	;# 
   310  0519                     	;# 
   311  051A                     	;# 
   312  051B                     	;# 
   313  051C                     	;# 
   314  051D                     	;# 
   315  058C                     	;# 
   316  058C                     	;# 
   317  058D                     	;# 
   318  058E                     	;# 
   319  058F                     	;# 
   320  058F                     	;# 
   321  0590                     	;# 
   322  0591                     	;# 
   323  0592                     	;# 
   324  0593                     	;# 
   325  060C                     	;# 
   326  060D                     	;# 
   327  060E                     	;# 
   328  060F                     	;# 
   329  0610                     	;# 
   330  0611                     	;# 
   331  0612                     	;# 
   332  0613                     	;# 
   333  0614                     	;# 
   334  0616                     	;# 
   335  0617                     	;# 
   336  0618                     	;# 
   337  0619                     	;# 
   338  061A                     	;# 
   339  061B                     	;# 
   340  061C                     	;# 
   341  061D                     	;# 
   342  061E                     	;# 
   343  068C                     	;# 
   344  068D                     	;# 
   345  068E                     	;# 
   346  068F                     	;# 
   347  0690                     	;# 
   348  0691                     	;# 
   349  0692                     	;# 
   350  0693                     	;# 
   351  0694                     	;# 
   352  070C                     	;# 
   353  070D                     	;# 
   354  070E                     	;# 
   355  070F                     	;# 
   356  0710                     	;# 
   357  0711                     	;# 
   358  0712                     	;# 
   359  0713                     	;# 
   360  0714                     	;# 
   361  0716                     	;# 
   362  0717                     	;# 
   363  0718                     	;# 
   364  0719                     	;# 
   365  071A                     	;# 
   366  071B                     	;# 
   367  071C                     	;# 
   368  071D                     	;# 
   369  071E                     	;# 
   370  0796                     	;# 
   371  0797                     	;# 
   372  0798                     	;# 
   373  0799                     	;# 
   374  079A                     	;# 
   375  079B                     	;# 
   376  080C                     	;# 
   377  080D                     	;# 
   378  080E                     	;# 
   379  080F                     	;# 
   380  0810                     	;# 
   381  0811                     	;# 
   382  0812                     	;# 
   383  0813                     	;# 
   384  0814                     	;# 
   385  081A                     	;# 
   386  081B                     	;# 
   387  081C                     	;# 
   388  081D                     	;# 
   389  081E                     	;# 
   390  081F                     	;# 
   391  088C                     	;# 
   392  088D                     	;# 
   393  088E                     	;# 
   394  088F                     	;# 
   395  0890                     	;# 
   396  0891                     	;# 
   397  0892                     	;# 
   398  0893                     	;# 
   399  0895                     	;# 
   400  0896                     	;# 
   401  0897                     	;# 
   402  0898                     	;# 
   403  0899                     	;# 
   404  089A                     	;# 
   405  089B                     	;# 
   406  090C                     	;# 
   407  090E                     	;# 
   408  090F                     	;# 
   409  091F                     	;# 
   410  091F                     	;# 
   411  098F                     	;# 
   412  098F                     	;# 
   413  0990                     	;# 
   414  0991                     	;# 
   415  0992                     	;# 
   416  0993                     	;# 
   417  0994                     	;# 
   418  0995                     	;# 
   419  0996                     	;# 
   420  0997                     	;# 
   421  0E0F                     	;# 
   422  0E10                     	;# 
   423  0E11                     	;# 
   424  0E12                     	;# 
   425  0E13                     	;# 
   426  0E14                     	;# 
   427  0E15                     	;# 
   428  0E16                     	;# 
   429  0E17                     	;# 
   430  0E18                     	;# 
   431  0E19                     	;# 
   432  0E1A                     	;# 
   433  0E1B                     	;# 
   434  0E1C                     	;# 
   435  0E1D                     	;# 
   436  0E1E                     	;# 
   437  0E1F                     	;# 
   438  0E20                     	;# 
   439  0E21                     	;# 
   440  0E22                     	;# 
   441  0E23                     	;# 
   442  0E24                     	;# 
   443  0E25                     	;# 
   444  0E26                     	;# 
   445  0E27                     	;# 
   446  0E28                     	;# 
   447  0E29                     	;# 
   448  0E2A                     	;# 
   449  0E2B                     	;# 
   450  0E2C                     	;# 
   451  0E2D                     	;# 
   452  0E2E                     	;# 
   453  0E2F                     	;# 
   454  0E30                     	;# 
   455  0E31                     	;# 
   456  0E32                     	;# 
   457  0E33                     	;# 
   458  0E34                     	;# 
   459  0E35                     	;# 
   460  0E36                     	;# 
   461  0E37                     	;# 
   462  0E8F                     	;# 
   463  0E90                     	;# 
   464  0E91                     	;# 
   465  0E92                     	;# 
   466  0E93                     	;# 
   467  0E94                     	;# 
   468  0E95                     	;# 
   469  0E96                     	;# 
   470  0E97                     	;# 
   471  0E9C                     	;# 
   472  0E9D                     	;# 
   473  0E9E                     	;# 
   474  0EA1                     	;# 
   475  0EA2                     	;# 
   476  0EA3                     	;# 
   477  0EA4                     	;# 
   478  0EA5                     	;# 
   479  0EA9                     	;# 
   480  0EAA                     	;# 
   481  0EAB                     	;# 
   482  0EAC                     	;# 
   483  0EB1                     	;# 
   484  0EB2                     	;# 
   485  0EB3                     	;# 
   486  0EB8                     	;# 
   487  0EB9                     	;# 
   488  0EBA                     	;# 
   489  0EBB                     	;# 
   490  0EBC                     	;# 
   491  0EBD                     	;# 
   492  0EBE                     	;# 
   493  0EC3                     	;# 
   494  0EC5                     	;# 
   495  0EC6                     	;# 
   496  0EC7                     	;# 
   497  0EC8                     	;# 
   498  0EC9                     	;# 
   499  0ECA                     	;# 
   500  0ECB                     	;# 
   501  0ECC                     	;# 
   502  0F10                     	;# 
   503  0F11                     	;# 
   504  0F12                     	;# 
   505  0F13                     	;# 
   506  0F14                     	;# 
   507  0F15                     	;# 
   508  0F16                     	;# 
   509  0F17                     	;# 
   510  0F18                     	;# 
   511  0F19                     	;# 
   512  0F1A                     	;# 
   513  0F1B                     	;# 
   514  0F1C                     	;# 
   515  0F1D                     	;# 
   516  0F1E                     	;# 
   517  0F1F                     	;# 
   518  0F20                     	;# 
   519  0F21                     	;# 
   520  0F22                     	;# 
   521  0F23                     	;# 
   522  0F24                     	;# 
   523  0F25                     	;# 
   524  0F26                     	;# 
   525  0F27                     	;# 
   526  0F38                     	;# 
   527  0F39                     	;# 
   528  0F3A                     	;# 
   529  0F3B                     	;# 
   530  0F3C                     	;# 
   531  0F3D                     	;# 
   532  0F3E                     	;# 
   533  0F3F                     	;# 
   534  0F40                     	;# 
   535  0F41                     	;# 
   536  0F43                     	;# 
   537  0F44                     	;# 
   538  0F45                     	;# 
   539  0F46                     	;# 
   540  0F47                     	;# 
   541  0F48                     	;# 
   542  0F49                     	;# 
   543  0F4A                     	;# 
   544  0F4B                     	;# 
   545  0F4C                     	;# 
   546  0F4E                     	;# 
   547  0F4F                     	;# 
   548  0F50                     	;# 
   549  0F51                     	;# 
   550  0F52                     	;# 
   551  0F53                     	;# 
   552  0F54                     	;# 
   553  0F55                     	;# 
   554  0F56                     	;# 
   555  0F57                     	;# 
   556  0F65                     	;# 
   557  0F68                     	;# 
   558  0F69                     	;# 
   559  0F6A                     	;# 
   560  0F6B                     	;# 
   561  0FE4                     	;# 
   562  0FE5                     	;# 
   563  0FE6                     	;# 
   564  0FE7                     	;# 
   565  0FE8                     	;# 
   566  0FE9                     	;# 
   567  0FEA                     	;# 
   568  0FEB                     	;# 
   569  0FED                     	;# 
   570  0FEE                     	;# 
   571  0FEF                     	;# 
   572  0000                     	;# 
   573  0001                     	;# 
   574  0002                     	;# 
   575  0003                     	;# 
   576  0004                     	;# 
   577  0005                     	;# 
   578  0006                     	;# 
   579  0007                     	;# 
   580  0008                     	;# 
   581  0009                     	;# 
   582  000A                     	;# 
   583  000B                     	;# 
   584  000C                     	;# 
   585  000D                     	;# 
   586  000E                     	;# 
   587  0010                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0016                     	;# 
   592  0017                     	;# 
   593  0018                     	;# 
   594  001C                     	;# 
   595  001C                     	;# 
   596  001D                     	;# 
   597  001D                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  008C                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  008E                     	;# 
   604  008E                     	;# 
   605  008F                     	;# 
   606  0090                     	;# 
   607  0090                     	;# 
   608  0091                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0095                     	;# 
   612  0096                     	;# 
   613  0097                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010E                     	;# 
   625  010F                     	;# 
   626  0110                     	;# 
   627  0110                     	;# 
   628  0111                     	;# 
   629  0112                     	;# 
   630  0112                     	;# 
   631  0113                     	;# 
   632  0114                     	;# 
   633  0114                     	;# 
   634  0115                     	;# 
   635  0116                     	;# 
   636  0116                     	;# 
   637  0117                     	;# 
   638  0119                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  011A                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011B                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011C                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011D                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011E                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011F                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  018C                     	;# 
   664  018D                     	;# 
   665  018E                     	;# 
   666  018F                     	;# 
   667  0190                     	;# 
   668  0191                     	;# 
   669  0192                     	;# 
   670  0196                     	;# 
   671  0197                     	;# 
   672  0198                     	;# 
   673  0199                     	;# 
   674  019A                     	;# 
   675  019B                     	;# 
   676  019C                     	;# 
   677  020C                     	;# 
   678  020D                     	;# 
   679  020E                     	;# 
   680  020F                     	;# 
   681  020F                     	;# 
   682  0210                     	;# 
   683  0210                     	;# 
   684  0211                     	;# 
   685  0211                     	;# 
   686  0212                     	;# 
   687  0213                     	;# 
   688  0214                     	;# 
   689  0215                     	;# 
   690  0215                     	;# 
   691  0216                     	;# 
   692  0216                     	;# 
   693  0217                     	;# 
   694  0217                     	;# 
   695  0218                     	;# 
   696  0219                     	;# 
   697  021A                     	;# 
   698  021B                     	;# 
   699  021B                     	;# 
   700  021C                     	;# 
   701  021C                     	;# 
   702  021D                     	;# 
   703  021D                     	;# 
   704  021E                     	;# 
   705  021F                     	;# 
   706  028C                     	;# 
   707  028C                     	;# 
   708  028D                     	;# 
   709  028D                     	;# 
   710  028E                     	;# 
   711  028F                     	;# 
   712  0290                     	;# 
   713  0290                     	;# 
   714  0291                     	;# 
   715  0292                     	;# 
   716  0292                     	;# 
   717  0293                     	;# 
   718  0293                     	;# 
   719  0294                     	;# 
   720  0295                     	;# 
   721  0296                     	;# 
   722  0296                     	;# 
   723  0297                     	;# 
   724  0298                     	;# 
   725  0298                     	;# 
   726  0299                     	;# 
   727  0299                     	;# 
   728  029A                     	;# 
   729  029B                     	;# 
   730  029C                     	;# 
   731  029C                     	;# 
   732  029D                     	;# 
   733  030C                     	;# 
   734  030C                     	;# 
   735  030D                     	;# 
   736  030E                     	;# 
   737  030F                     	;# 
   738  0310                     	;# 
   739  0310                     	;# 
   740  0311                     	;# 
   741  0312                     	;# 
   742  0313                     	;# 
   743  0314                     	;# 
   744  0314                     	;# 
   745  0315                     	;# 
   746  0316                     	;# 
   747  0317                     	;# 
   748  0318                     	;# 
   749  0318                     	;# 
   750  0319                     	;# 
   751  031A                     	;# 
   752  031B                     	;# 
   753  031C                     	;# 
   754  031C                     	;# 
   755  031D                     	;# 
   756  031E                     	;# 
   757  031F                     	;# 
   758  038C                     	;# 
   759  038D                     	;# 
   760  038E                     	;# 
   761  0390                     	;# 
   762  0391                     	;# 
   763  0392                     	;# 
   764  040C                     	;# 
   765  040D                     	;# 
   766  040E                     	;# 
   767  040F                     	;# 
   768  0410                     	;# 
   769  0411                     	;# 
   770  0416                     	;# 
   771  0416                     	;# 
   772  0417                     	;# 
   773  0418                     	;# 
   774  0418                     	;# 
   775  0419                     	;# 
   776  041A                     	;# 
   777  041A                     	;# 
   778  041B                     	;# 
   779  041C                     	;# 
   780  041C                     	;# 
   781  041D                     	;# 
   782  041E                     	;# 
   783  041F                     	;# 
   784  048C                     	;# 
   785  048C                     	;# 
   786  048D                     	;# 
   787  048E                     	;# 
   788  048F                     	;# 
   789  048F                     	;# 
   790  0490                     	;# 
   791  0491                     	;# 
   792  0492                     	;# 
   793  0492                     	;# 
   794  0493                     	;# 
   795  0494                     	;# 
   796  0495                     	;# 
   797  0495                     	;# 
   798  0496                     	;# 
   799  0497                     	;# 
   800  0498                     	;# 
   801  0499                     	;# 
   802  049A                     	;# 
   803  049B                     	;# 
   804  049C                     	;# 
   805  049D                     	;# 
   806  050C                     	;# 
   807  050C                     	;# 
   808  050D                     	;# 
   809  050E                     	;# 
   810  050F                     	;# 
   811  050F                     	;# 
   812  0510                     	;# 
   813  0511                     	;# 
   814  0512                     	;# 
   815  0512                     	;# 
   816  0513                     	;# 
   817  0514                     	;# 
   818  0515                     	;# 
   819  0515                     	;# 
   820  0516                     	;# 
   821  0517                     	;# 
   822  0518                     	;# 
   823  0519                     	;# 
   824  051A                     	;# 
   825  051B                     	;# 
   826  051C                     	;# 
   827  051D                     	;# 
   828  058C                     	;# 
   829  058C                     	;# 
   830  058D                     	;# 
   831  058E                     	;# 
   832  058F                     	;# 
   833  058F                     	;# 
   834  0590                     	;# 
   835  0591                     	;# 
   836  0592                     	;# 
   837  0593                     	;# 
   838  060C                     	;# 
   839  060D                     	;# 
   840  060E                     	;# 
   841  060F                     	;# 
   842  0610                     	;# 
   843  0611                     	;# 
   844  0612                     	;# 
   845  0613                     	;# 
   846  0614                     	;# 
   847  0616                     	;# 
   848  0617                     	;# 
   849  0618                     	;# 
   850  0619                     	;# 
   851  061A                     	;# 
   852  061B                     	;# 
   853  061C                     	;# 
   854  061D                     	;# 
   855  061E                     	;# 
   856  068C                     	;# 
   857  068D                     	;# 
   858  068E                     	;# 
   859  068F                     	;# 
   860  0690                     	;# 
   861  0691                     	;# 
   862  0692                     	;# 
   863  0693                     	;# 
   864  0694                     	;# 
   865  070C                     	;# 
   866  070D                     	;# 
   867  070E                     	;# 
   868  070F                     	;# 
   869  0710                     	;# 
   870  0711                     	;# 
   871  0712                     	;# 
   872  0713                     	;# 
   873  0714                     	;# 
   874  0716                     	;# 
   875  0717                     	;# 
   876  0718                     	;# 
   877  0719                     	;# 
   878  071A                     	;# 
   879  071B                     	;# 
   880  071C                     	;# 
   881  071D                     	;# 
   882  071E                     	;# 
   883  0796                     	;# 
   884  0797                     	;# 
   885  0798                     	;# 
   886  0799                     	;# 
   887  079A                     	;# 
   888  079B                     	;# 
   889  080C                     	;# 
   890  080D                     	;# 
   891  080E                     	;# 
   892  080F                     	;# 
   893  0810                     	;# 
   894  0811                     	;# 
   895  0812                     	;# 
   896  0813                     	;# 
   897  0814                     	;# 
   898  081A                     	;# 
   899  081B                     	;# 
   900  081C                     	;# 
   901  081D                     	;# 
   902  081E                     	;# 
   903  081F                     	;# 
   904  088C                     	;# 
   905  088D                     	;# 
   906  088E                     	;# 
   907  088F                     	;# 
   908  0890                     	;# 
   909  0891                     	;# 
   910  0892                     	;# 
   911  0893                     	;# 
   912  0895                     	;# 
   913  0896                     	;# 
   914  0897                     	;# 
   915  0898                     	;# 
   916  0899                     	;# 
   917  089A                     	;# 
   918  089B                     	;# 
   919  090C                     	;# 
   920  090E                     	;# 
   921  090F                     	;# 
   922  091F                     	;# 
   923  091F                     	;# 
   924  098F                     	;# 
   925  098F                     	;# 
   926  0990                     	;# 
   927  0991                     	;# 
   928  0992                     	;# 
   929  0993                     	;# 
   930  0994                     	;# 
   931  0995                     	;# 
   932  0996                     	;# 
   933  0997                     	;# 
   934  0E0F                     	;# 
   935  0E10                     	;# 
   936  0E11                     	;# 
   937  0E12                     	;# 
   938  0E13                     	;# 
   939  0E14                     	;# 
   940  0E15                     	;# 
   941  0E16                     	;# 
   942  0E17                     	;# 
   943  0E18                     	;# 
   944  0E19                     	;# 
   945  0E1A                     	;# 
   946  0E1B                     	;# 
   947  0E1C                     	;# 
   948  0E1D                     	;# 
   949  0E1E                     	;# 
   950  0E1F                     	;# 
   951  0E20                     	;# 
   952  0E21                     	;# 
   953  0E22                     	;# 
   954  0E23                     	;# 
   955  0E24                     	;# 
   956  0E25                     	;# 
   957  0E26                     	;# 
   958  0E27                     	;# 
   959  0E28                     	;# 
   960  0E29                     	;# 
   961  0E2A                     	;# 
   962  0E2B                     	;# 
   963  0E2C                     	;# 
   964  0E2D                     	;# 
   965  0E2E                     	;# 
   966  0E2F                     	;# 
   967  0E30                     	;# 
   968  0E31                     	;# 
   969  0E32                     	;# 
   970  0E33                     	;# 
   971  0E34                     	;# 
   972  0E35                     	;# 
   973  0E36                     	;# 
   974  0E37                     	;# 
   975  0E8F                     	;# 
   976  0E90                     	;# 
   977  0E91                     	;# 
   978  0E92                     	;# 
   979  0E93                     	;# 
   980  0E94                     	;# 
   981  0E95                     	;# 
   982  0E96                     	;# 
   983  0E97                     	;# 
   984  0E9C                     	;# 
   985  0E9D                     	;# 
   986  0E9E                     	;# 
   987  0EA1                     	;# 
   988  0EA2                     	;# 
   989  0EA3                     	;# 
   990  0EA4                     	;# 
   991  0EA5                     	;# 
   992  0EA9                     	;# 
   993  0EAA                     	;# 
   994  0EAB                     	;# 
   995  0EAC                     	;# 
   996  0EB1                     	;# 
   997  0EB2                     	;# 
   998  0EB3                     	;# 
   999  0EB8                     	;# 
  1000  0EB9                     	;# 
  1001  0EBA                     	;# 
  1002  0EBB                     	;# 
  1003  0EBC                     	;# 
  1004  0EBD                     	;# 
  1005  0EBE                     	;# 
  1006  0EC3                     	;# 
  1007  0EC5                     	;# 
  1008  0EC6                     	;# 
  1009  0EC7                     	;# 
  1010  0EC8                     	;# 
  1011  0EC9                     	;# 
  1012  0ECA                     	;# 
  1013  0ECB                     	;# 
  1014  0ECC                     	;# 
  1015  0F10                     	;# 
  1016  0F11                     	;# 
  1017  0F12                     	;# 
  1018  0F13                     	;# 
  1019  0F14                     	;# 
  1020  0F15                     	;# 
  1021  0F16                     	;# 
  1022  0F17                     	;# 
  1023  0F18                     	;# 
  1024  0F19                     	;# 
  1025  0F1A                     	;# 
  1026  0F1B                     	;# 
  1027  0F1C                     	;# 
  1028  0F1D                     	;# 
  1029  0F1E                     	;# 
  1030  0F1F                     	;# 
  1031  0F20                     	;# 
  1032  0F21                     	;# 
  1033  0F22                     	;# 
  1034  0F23                     	;# 
  1035  0F24                     	;# 
  1036  0F25                     	;# 
  1037  0F26                     	;# 
  1038  0F27                     	;# 
  1039  0F38                     	;# 
  1040  0F39                     	;# 
  1041  0F3A                     	;# 
  1042  0F3B                     	;# 
  1043  0F3C                     	;# 
  1044  0F3D                     	;# 
  1045  0F3E                     	;# 
  1046  0F3F                     	;# 
  1047  0F40                     	;# 
  1048  0F41                     	;# 
  1049  0F43                     	;# 
  1050  0F44                     	;# 
  1051  0F45                     	;# 
  1052  0F46                     	;# 
  1053  0F47                     	;# 
  1054  0F48                     	;# 
  1055  0F49                     	;# 
  1056  0F4A                     	;# 
  1057  0F4B                     	;# 
  1058  0F4C                     	;# 
  1059  0F4E                     	;# 
  1060  0F4F                     	;# 
  1061  0F50                     	;# 
  1062  0F51                     	;# 
  1063  0F52                     	;# 
  1064  0F53                     	;# 
  1065  0F54                     	;# 
  1066  0F55                     	;# 
  1067  0F56                     	;# 
  1068  0F57                     	;# 
  1069  0F65                     	;# 
  1070  0F68                     	;# 
  1071  0F69                     	;# 
  1072  0F6A                     	;# 
  1073  0F6B                     	;# 
  1074  0FE4                     	;# 
  1075  0FE5                     	;# 
  1076  0FE6                     	;# 
  1077  0FE7                     	;# 
  1078  0FE8                     	;# 
  1079  0FE9                     	;# 
  1080  0FEA                     	;# 
  1081  0FEB                     	;# 
  1082  0FED                     	;# 
  1083  0FEE                     	;# 
  1084  0FEF                     	;# 
  1085  0000                     	;# 
  1086  0001                     	;# 
  1087  0002                     	;# 
  1088  0003                     	;# 
  1089  0004                     	;# 
  1090  0005                     	;# 
  1091  0006                     	;# 
  1092  0007                     	;# 
  1093  0008                     	;# 
  1094  0009                     	;# 
  1095  000A                     	;# 
  1096  000B                     	;# 
  1097  000C                     	;# 
  1098  000D                     	;# 
  1099  000E                     	;# 
  1100  0010                     	;# 
  1101  0011                     	;# 
  1102  0012                     	;# 
  1103  0013                     	;# 
  1104  0016                     	;# 
  1105  0017                     	;# 
  1106  0018                     	;# 
  1107  001C                     	;# 
  1108  001C                     	;# 
  1109  001D                     	;# 
  1110  001D                     	;# 
  1111  001E                     	;# 
  1112  001F                     	;# 
  1113  008C                     	;# 
  1114  008C                     	;# 
  1115  008D                     	;# 
  1116  008E                     	;# 
  1117  008E                     	;# 
  1118  008F                     	;# 
  1119  0090                     	;# 
  1120  0090                     	;# 
  1121  0091                     	;# 
  1122  0093                     	;# 
  1123  0094                     	;# 
  1124  0095                     	;# 
  1125  0096                     	;# 
  1126  0097                     	;# 
  1127  0098                     	;# 
  1128  0099                     	;# 
  1129  009A                     	;# 
  1130  009B                     	;# 
  1131  009C                     	;# 
  1132  009D                     	;# 
  1133  009E                     	;# 
  1134  010C                     	;# 
  1135  010D                     	;# 
  1136  010E                     	;# 
  1137  010E                     	;# 
  1138  010F                     	;# 
  1139  0110                     	;# 
  1140  0110                     	;# 
  1141  0111                     	;# 
  1142  0112                     	;# 
  1143  0112                     	;# 
  1144  0113                     	;# 
  1145  0114                     	;# 
  1146  0114                     	;# 
  1147  0115                     	;# 
  1148  0116                     	;# 
  1149  0116                     	;# 
  1150  0117                     	;# 
  1151  0119                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  011A                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011B                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011C                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011D                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011E                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011F                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  018C                     	;# 
  1177  018D                     	;# 
  1178  018E                     	;# 
  1179  018F                     	;# 
  1180  0190                     	;# 
  1181  0191                     	;# 
  1182  0192                     	;# 
  1183  0196                     	;# 
  1184  0197                     	;# 
  1185  0198                     	;# 
  1186  0199                     	;# 
  1187  019A                     	;# 
  1188  019B                     	;# 
  1189  019C                     	;# 
  1190  020C                     	;# 
  1191  020D                     	;# 
  1192  020E                     	;# 
  1193  020F                     	;# 
  1194  020F                     	;# 
  1195  0210                     	;# 
  1196  0210                     	;# 
  1197  0211                     	;# 
  1198  0211                     	;# 
  1199  0212                     	;# 
  1200  0213                     	;# 
  1201  0214                     	;# 
  1202  0215                     	;# 
  1203  0215                     	;# 
  1204  0216                     	;# 
  1205  0216                     	;# 
  1206  0217                     	;# 
  1207  0217                     	;# 
  1208  0218                     	;# 
  1209  0219                     	;# 
  1210  021A                     	;# 
  1211  021B                     	;# 
  1212  021B                     	;# 
  1213  021C                     	;# 
  1214  021C                     	;# 
  1215  021D                     	;# 
  1216  021D                     	;# 
  1217  021E                     	;# 
  1218  021F                     	;# 
  1219  028C                     	;# 
  1220  028C                     	;# 
  1221  028D                     	;# 
  1222  028D                     	;# 
  1223  028E                     	;# 
  1224  028F                     	;# 
  1225  0290                     	;# 
  1226  0290                     	;# 
  1227  0291                     	;# 
  1228  0292                     	;# 
  1229  0292                     	;# 
  1230  0293                     	;# 
  1231  0293                     	;# 
  1232  0294                     	;# 
  1233  0295                     	;# 
  1234  0296                     	;# 
  1235  0296                     	;# 
  1236  0297                     	;# 
  1237  0298                     	;# 
  1238  0298                     	;# 
  1239  0299                     	;# 
  1240  0299                     	;# 
  1241  029A                     	;# 
  1242  029B                     	;# 
  1243  029C                     	;# 
  1244  029C                     	;# 
  1245  029D                     	;# 
  1246  030C                     	;# 
  1247  030C                     	;# 
  1248  030D                     	;# 
  1249  030E                     	;# 
  1250  030F                     	;# 
  1251  0310                     	;# 
  1252  0310                     	;# 
  1253  0311                     	;# 
  1254  0312                     	;# 
  1255  0313                     	;# 
  1256  0314                     	;# 
  1257  0314                     	;# 
  1258  0315                     	;# 
  1259  0316                     	;# 
  1260  0317                     	;# 
  1261  0318                     	;# 
  1262  0318                     	;# 
  1263  0319                     	;# 
  1264  031A                     	;# 
  1265  031B                     	;# 
  1266  031C                     	;# 
  1267  031C                     	;# 
  1268  031D                     	;# 
  1269  031E                     	;# 
  1270  031F                     	;# 
  1271  038C                     	;# 
  1272  038D                     	;# 
  1273  038E                     	;# 
  1274  0390                     	;# 
  1275  0391                     	;# 
  1276  0392                     	;# 
  1277  040C                     	;# 
  1278  040D                     	;# 
  1279  040E                     	;# 
  1280  040F                     	;# 
  1281  0410                     	;# 
  1282  0411                     	;# 
  1283  0416                     	;# 
  1284  0416                     	;# 
  1285  0417                     	;# 
  1286  0418                     	;# 
  1287  0418                     	;# 
  1288  0419                     	;# 
  1289  041A                     	;# 
  1290  041A                     	;# 
  1291  041B                     	;# 
  1292  041C                     	;# 
  1293  041C                     	;# 
  1294  041D                     	;# 
  1295  041E                     	;# 
  1296  041F                     	;# 
  1297  048C                     	;# 
  1298  048C                     	;# 
  1299  048D                     	;# 
  1300  048E                     	;# 
  1301  048F                     	;# 
  1302  048F                     	;# 
  1303  0490                     	;# 
  1304  0491                     	;# 
  1305  0492                     	;# 
  1306  0492                     	;# 
  1307  0493                     	;# 
  1308  0494                     	;# 
  1309  0495                     	;# 
  1310  0495                     	;# 
  1311  0496                     	;# 
  1312  0497                     	;# 
  1313  0498                     	;# 
  1314  0499                     	;# 
  1315  049A                     	;# 
  1316  049B                     	;# 
  1317  049C                     	;# 
  1318  049D                     	;# 
  1319  050C                     	;# 
  1320  050C                     	;# 
  1321  050D                     	;# 
  1322  050E                     	;# 
  1323  050F                     	;# 
  1324  050F                     	;# 
  1325  0510                     	;# 
  1326  0511                     	;# 
  1327  0512                     	;# 
  1328  0512                     	;# 
  1329  0513                     	;# 
  1330  0514                     	;# 
  1331  0515                     	;# 
  1332  0515                     	;# 
  1333  0516                     	;# 
  1334  0517                     	;# 
  1335  0518                     	;# 
  1336  0519                     	;# 
  1337  051A                     	;# 
  1338  051B                     	;# 
  1339  051C                     	;# 
  1340  051D                     	;# 
  1341  058C                     	;# 
  1342  058C                     	;# 
  1343  058D                     	;# 
  1344  058E                     	;# 
  1345  058F                     	;# 
  1346  058F                     	;# 
  1347  0590                     	;# 
  1348  0591                     	;# 
  1349  0592                     	;# 
  1350  0593                     	;# 
  1351  060C                     	;# 
  1352  060D                     	;# 
  1353  060E                     	;# 
  1354  060F                     	;# 
  1355  0610                     	;# 
  1356  0611                     	;# 
  1357  0612                     	;# 
  1358  0613                     	;# 
  1359  0614                     	;# 
  1360  0616                     	;# 
  1361  0617                     	;# 
  1362  0618                     	;# 
  1363  0619                     	;# 
  1364  061A                     	;# 
  1365  061B                     	;# 
  1366  061C                     	;# 
  1367  061D                     	;# 
  1368  061E                     	;# 
  1369  068C                     	;# 
  1370  068D                     	;# 
  1371  068E                     	;# 
  1372  068F                     	;# 
  1373  0690                     	;# 
  1374  0691                     	;# 
  1375  0692                     	;# 
  1376  0693                     	;# 
  1377  0694                     	;# 
  1378  070C                     	;# 
  1379  070D                     	;# 
  1380  070E                     	;# 
  1381  070F                     	;# 
  1382  0710                     	;# 
  1383  0711                     	;# 
  1384  0712                     	;# 
  1385  0713                     	;# 
  1386  0714                     	;# 
  1387  0716                     	;# 
  1388  0717                     	;# 
  1389  0718                     	;# 
  1390  0719                     	;# 
  1391  071A                     	;# 
  1392  071B                     	;# 
  1393  071C                     	;# 
  1394  071D                     	;# 
  1395  071E                     	;# 
  1396  0796                     	;# 
  1397  0797                     	;# 
  1398  0798                     	;# 
  1399  0799                     	;# 
  1400  079A                     	;# 
  1401  079B                     	;# 
  1402  080C                     	;# 
  1403  080D                     	;# 
  1404  080E                     	;# 
  1405  080F                     	;# 
  1406  0810                     	;# 
  1407  0811                     	;# 
  1408  0812                     	;# 
  1409  0813                     	;# 
  1410  0814                     	;# 
  1411  081A                     	;# 
  1412  081B                     	;# 
  1413  081C                     	;# 
  1414  081D                     	;# 
  1415  081E                     	;# 
  1416  081F                     	;# 
  1417  088C                     	;# 
  1418  088D                     	;# 
  1419  088E                     	;# 
  1420  088F                     	;# 
  1421  0890                     	;# 
  1422  0891                     	;# 
  1423  0892                     	;# 
  1424  0893                     	;# 
  1425  0895                     	;# 
  1426  0896                     	;# 
  1427  0897                     	;# 
  1428  0898                     	;# 
  1429  0899                     	;# 
  1430  089A                     	;# 
  1431  089B                     	;# 
  1432  090C                     	;# 
  1433  090E                     	;# 
  1434  090F                     	;# 
  1435  091F                     	;# 
  1436  091F                     	;# 
  1437  098F                     	;# 
  1438  098F                     	;# 
  1439  0990                     	;# 
  1440  0991                     	;# 
  1441  0992                     	;# 
  1442  0993                     	;# 
  1443  0994                     	;# 
  1444  0995                     	;# 
  1445  0996                     	;# 
  1446  0997                     	;# 
  1447  0E0F                     	;# 
  1448  0E10                     	;# 
  1449  0E11                     	;# 
  1450  0E12                     	;# 
  1451  0E13                     	;# 
  1452  0E14                     	;# 
  1453  0E15                     	;# 
  1454  0E16                     	;# 
  1455  0E17                     	;# 
  1456  0E18                     	;# 
  1457  0E19                     	;# 
  1458  0E1A                     	;# 
  1459  0E1B                     	;# 
  1460  0E1C                     	;# 
  1461  0E1D                     	;# 
  1462  0E1E                     	;# 
  1463  0E1F                     	;# 
  1464  0E20                     	;# 
  1465  0E21                     	;# 
  1466  0E22                     	;# 
  1467  0E23                     	;# 
  1468  0E24                     	;# 
  1469  0E25                     	;# 
  1470  0E26                     	;# 
  1471  0E27                     	;# 
  1472  0E28                     	;# 
  1473  0E29                     	;# 
  1474  0E2A                     	;# 
  1475  0E2B                     	;# 
  1476  0E2C                     	;# 
  1477  0E2D                     	;# 
  1478  0E2E                     	;# 
  1479  0E2F                     	;# 
  1480  0E30                     	;# 
  1481  0E31                     	;# 
  1482  0E32                     	;# 
  1483  0E33                     	;# 
  1484  0E34                     	;# 
  1485  0E35                     	;# 
  1486  0E36                     	;# 
  1487  0E37                     	;# 
  1488  0E8F                     	;# 
  1489  0E90                     	;# 
  1490  0E91                     	;# 
  1491  0E92                     	;# 
  1492  0E93                     	;# 
  1493  0E94                     	;# 
  1494  0E95                     	;# 
  1495  0E96                     	;# 
  1496  0E97                     	;# 
  1497  0E9C                     	;# 
  1498  0E9D                     	;# 
  1499  0E9E                     	;# 
  1500  0EA1                     	;# 
  1501  0EA2                     	;# 
  1502  0EA3                     	;# 
  1503  0EA4                     	;# 
  1504  0EA5                     	;# 
  1505  0EA9                     	;# 
  1506  0EAA                     	;# 
  1507  0EAB                     	;# 
  1508  0EAC                     	;# 
  1509  0EB1                     	;# 
  1510  0EB2                     	;# 
  1511  0EB3                     	;# 
  1512  0EB8                     	;# 
  1513  0EB9                     	;# 
  1514  0EBA                     	;# 
  1515  0EBB                     	;# 
  1516  0EBC                     	;# 
  1517  0EBD                     	;# 
  1518  0EBE                     	;# 
  1519  0EC3                     	;# 
  1520  0EC5                     	;# 
  1521  0EC6                     	;# 
  1522  0EC7                     	;# 
  1523  0EC8                     	;# 
  1524  0EC9                     	;# 
  1525  0ECA                     	;# 
  1526  0ECB                     	;# 
  1527  0ECC                     	;# 
  1528  0F10                     	;# 
  1529  0F11                     	;# 
  1530  0F12                     	;# 
  1531  0F13                     	;# 
  1532  0F14                     	;# 
  1533  0F15                     	;# 
  1534  0F16                     	;# 
  1535  0F17                     	;# 
  1536  0F18                     	;# 
  1537  0F19                     	;# 
  1538  0F1A                     	;# 
  1539  0F1B                     	;# 
  1540  0F1C                     	;# 
  1541  0F1D                     	;# 
  1542  0F1E                     	;# 
  1543  0F1F                     	;# 
  1544  0F20                     	;# 
  1545  0F21                     	;# 
  1546  0F22                     	;# 
  1547  0F23                     	;# 
  1548  0F24                     	;# 
  1549  0F25                     	;# 
  1550  0F26                     	;# 
  1551  0F27                     	;# 
  1552  0F38                     	;# 
  1553  0F39                     	;# 
  1554  0F3A                     	;# 
  1555  0F3B                     	;# 
  1556  0F3C                     	;# 
  1557  0F3D                     	;# 
  1558  0F3E                     	;# 
  1559  0F3F                     	;# 
  1560  0F40                     	;# 
  1561  0F41                     	;# 
  1562  0F43                     	;# 
  1563  0F44                     	;# 
  1564  0F45                     	;# 
  1565  0F46                     	;# 
  1566  0F47                     	;# 
  1567  0F48                     	;# 
  1568  0F49                     	;# 
  1569  0F4A                     	;# 
  1570  0F4B                     	;# 
  1571  0F4C                     	;# 
  1572  0F4E                     	;# 
  1573  0F4F                     	;# 
  1574  0F50                     	;# 
  1575  0F51                     	;# 
  1576  0F52                     	;# 
  1577  0F53                     	;# 
  1578  0F54                     	;# 
  1579  0F55                     	;# 
  1580  0F56                     	;# 
  1581  0F57                     	;# 
  1582  0F65                     	;# 
  1583  0F68                     	;# 
  1584  0F69                     	;# 
  1585  0F6A                     	;# 
  1586  0F6B                     	;# 
  1587  0FE4                     	;# 
  1588  0FE5                     	;# 
  1589  0FE6                     	;# 
  1590  0FE7                     	;# 
  1591  0FE8                     	;# 
  1592  0FE9                     	;# 
  1593  0FEA                     	;# 
  1594  0FEB                     	;# 
  1595  0FED                     	;# 
  1596  0FEE                     	;# 
  1597  0FEF                     	;# 
  1598  0000                     	;# 
  1599  0001                     	;# 
  1600  0002                     	;# 
  1601  0003                     	;# 
  1602  0004                     	;# 
  1603  0005                     	;# 
  1604  0006                     	;# 
  1605  0007                     	;# 
  1606  0008                     	;# 
  1607  0009                     	;# 
  1608  000A                     	;# 
  1609  000B                     	;# 
  1610  000C                     	;# 
  1611  000D                     	;# 
  1612  000E                     	;# 
  1613  0010                     	;# 
  1614  0011                     	;# 
  1615  0012                     	;# 
  1616  0013                     	;# 
  1617  0016                     	;# 
  1618  0017                     	;# 
  1619  0018                     	;# 
  1620  001C                     	;# 
  1621  001C                     	;# 
  1622  001D                     	;# 
  1623  001D                     	;# 
  1624  001E                     	;# 
  1625  001F                     	;# 
  1626  008C                     	;# 
  1627  008C                     	;# 
  1628  008D                     	;# 
  1629  008E                     	;# 
  1630  008E                     	;# 
  1631  008F                     	;# 
  1632  0090                     	;# 
  1633  0090                     	;# 
  1634  0091                     	;# 
  1635  0093                     	;# 
  1636  0094                     	;# 
  1637  0095                     	;# 
  1638  0096                     	;# 
  1639  0097                     	;# 
  1640  0098                     	;# 
  1641  0099                     	;# 
  1642  009A                     	;# 
  1643  009B                     	;# 
  1644  009C                     	;# 
  1645  009D                     	;# 
  1646  009E                     	;# 
  1647  010C                     	;# 
  1648  010D                     	;# 
  1649  010E                     	;# 
  1650  010E                     	;# 
  1651  010F                     	;# 
  1652  0110                     	;# 
  1653  0110                     	;# 
  1654  0111                     	;# 
  1655  0112                     	;# 
  1656  0112                     	;# 
  1657  0113                     	;# 
  1658  0114                     	;# 
  1659  0114                     	;# 
  1660  0115                     	;# 
  1661  0116                     	;# 
  1662  0116                     	;# 
  1663  0117                     	;# 
  1664  0119                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  011A                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011B                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011C                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011D                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011E                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011F                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  018C                     	;# 
  1690  018D                     	;# 
  1691  018E                     	;# 
  1692  018F                     	;# 
  1693  0190                     	;# 
  1694  0191                     	;# 
  1695  0192                     	;# 
  1696  0196                     	;# 
  1697  0197                     	;# 
  1698  0198                     	;# 
  1699  0199                     	;# 
  1700  019A                     	;# 
  1701  019B                     	;# 
  1702  019C                     	;# 
  1703  020C                     	;# 
  1704  020D                     	;# 
  1705  020E                     	;# 
  1706  020F                     	;# 
  1707  020F                     	;# 
  1708  0210                     	;# 
  1709  0210                     	;# 
  1710  0211                     	;# 
  1711  0211                     	;# 
  1712  0212                     	;# 
  1713  0213                     	;# 
  1714  0214                     	;# 
  1715  0215                     	;# 
  1716  0215                     	;# 
  1717  0216                     	;# 
  1718  0216                     	;# 
  1719  0217                     	;# 
  1720  0217                     	;# 
  1721  0218                     	;# 
  1722  0219                     	;# 
  1723  021A                     	;# 
  1724  021B                     	;# 
  1725  021B                     	;# 
  1726  021C                     	;# 
  1727  021C                     	;# 
  1728  021D                     	;# 
  1729  021D                     	;# 
  1730  021E                     	;# 
  1731  021F                     	;# 
  1732  028C                     	;# 
  1733  028C                     	;# 
  1734  028D                     	;# 
  1735  028D                     	;# 
  1736  028E                     	;# 
  1737  028F                     	;# 
  1738  0290                     	;# 
  1739  0290                     	;# 
  1740  0291                     	;# 
  1741  0292                     	;# 
  1742  0292                     	;# 
  1743  0293                     	;# 
  1744  0293                     	;# 
  1745  0294                     	;# 
  1746  0295                     	;# 
  1747  0296                     	;# 
  1748  0296                     	;# 
  1749  0297                     	;# 
  1750  0298                     	;# 
  1751  0298                     	;# 
  1752  0299                     	;# 
  1753  0299                     	;# 
  1754  029A                     	;# 
  1755  029B                     	;# 
  1756  029C                     	;# 
  1757  029C                     	;# 
  1758  029D                     	;# 
  1759  030C                     	;# 
  1760  030C                     	;# 
  1761  030D                     	;# 
  1762  030E                     	;# 
  1763  030F                     	;# 
  1764  0310                     	;# 
  1765  0310                     	;# 
  1766  0311                     	;# 
  1767  0312                     	;# 
  1768  0313                     	;# 
  1769  0314                     	;# 
  1770  0314                     	;# 
  1771  0315                     	;# 
  1772  0316                     	;# 
  1773  0317                     	;# 
  1774  0318                     	;# 
  1775  0318                     	;# 
  1776  0319                     	;# 
  1777  031A                     	;# 
  1778  031B                     	;# 
  1779  031C                     	;# 
  1780  031C                     	;# 
  1781  031D                     	;# 
  1782  031E                     	;# 
  1783  031F                     	;# 
  1784  038C                     	;# 
  1785  038D                     	;# 
  1786  038E                     	;# 
  1787  0390                     	;# 
  1788  0391                     	;# 
  1789  0392                     	;# 
  1790  040C                     	;# 
  1791  040D                     	;# 
  1792  040E                     	;# 
  1793  040F                     	;# 
  1794  0410                     	;# 
  1795  0411                     	;# 
  1796  0416                     	;# 
  1797  0416                     	;# 
  1798  0417                     	;# 
  1799  0418                     	;# 
  1800  0418                     	;# 
  1801  0419                     	;# 
  1802  041A                     	;# 
  1803  041A                     	;# 
  1804  041B                     	;# 
  1805  041C                     	;# 
  1806  041C                     	;# 
  1807  041D                     	;# 
  1808  041E                     	;# 
  1809  041F                     	;# 
  1810  048C                     	;# 
  1811  048C                     	;# 
  1812  048D                     	;# 
  1813  048E                     	;# 
  1814  048F                     	;# 
  1815  048F                     	;# 
  1816  0490                     	;# 
  1817  0491                     	;# 
  1818  0492                     	;# 
  1819  0492                     	;# 
  1820  0493                     	;# 
  1821  0494                     	;# 
  1822  0495                     	;# 
  1823  0495                     	;# 
  1824  0496                     	;# 
  1825  0497                     	;# 
  1826  0498                     	;# 
  1827  0499                     	;# 
  1828  049A                     	;# 
  1829  049B                     	;# 
  1830  049C                     	;# 
  1831  049D                     	;# 
  1832  050C                     	;# 
  1833  050C                     	;# 
  1834  050D                     	;# 
  1835  050E                     	;# 
  1836  050F                     	;# 
  1837  050F                     	;# 
  1838  0510                     	;# 
  1839  0511                     	;# 
  1840  0512                     	;# 
  1841  0512                     	;# 
  1842  0513                     	;# 
  1843  0514                     	;# 
  1844  0515                     	;# 
  1845  0515                     	;# 
  1846  0516                     	;# 
  1847  0517                     	;# 
  1848  0518                     	;# 
  1849  0519                     	;# 
  1850  051A                     	;# 
  1851  051B                     	;# 
  1852  051C                     	;# 
  1853  051D                     	;# 
  1854  058C                     	;# 
  1855  058C                     	;# 
  1856  058D                     	;# 
  1857  058E                     	;# 
  1858  058F                     	;# 
  1859  058F                     	;# 
  1860  0590                     	;# 
  1861  0591                     	;# 
  1862  0592                     	;# 
  1863  0593                     	;# 
  1864  060C                     	;# 
  1865  060D                     	;# 
  1866  060E                     	;# 
  1867  060F                     	;# 
  1868  0610                     	;# 
  1869  0611                     	;# 
  1870  0612                     	;# 
  1871  0613                     	;# 
  1872  0614                     	;# 
  1873  0616                     	;# 
  1874  0617                     	;# 
  1875  0618                     	;# 
  1876  0619                     	;# 
  1877  061A                     	;# 
  1878  061B                     	;# 
  1879  061C                     	;# 
  1880  061D                     	;# 
  1881  061E                     	;# 
  1882  068C                     	;# 
  1883  068D                     	;# 
  1884  068E                     	;# 
  1885  068F                     	;# 
  1886  0690                     	;# 
  1887  0691                     	;# 
  1888  0692                     	;# 
  1889  0693                     	;# 
  1890  0694                     	;# 
  1891  070C                     	;# 
  1892  070D                     	;# 
  1893  070E                     	;# 
  1894  070F                     	;# 
  1895  0710                     	;# 
  1896  0711                     	;# 
  1897  0712                     	;# 
  1898  0713                     	;# 
  1899  0714                     	;# 
  1900  0716                     	;# 
  1901  0717                     	;# 
  1902  0718                     	;# 
  1903  0719                     	;# 
  1904  071A                     	;# 
  1905  071B                     	;# 
  1906  071C                     	;# 
  1907  071D                     	;# 
  1908  071E                     	;# 
  1909  0796                     	;# 
  1910  0797                     	;# 
  1911  0798                     	;# 
  1912  0799                     	;# 
  1913  079A                     	;# 
  1914  079B                     	;# 
  1915  080C                     	;# 
  1916  080D                     	;# 
  1917  080E                     	;# 
  1918  080F                     	;# 
  1919  0810                     	;# 
  1920  0811                     	;# 
  1921  0812                     	;# 
  1922  0813                     	;# 
  1923  0814                     	;# 
  1924  081A                     	;# 
  1925  081B                     	;# 
  1926  081C                     	;# 
  1927  081D                     	;# 
  1928  081E                     	;# 
  1929  081F                     	;# 
  1930  088C                     	;# 
  1931  088D                     	;# 
  1932  088E                     	;# 
  1933  088F                     	;# 
  1934  0890                     	;# 
  1935  0891                     	;# 
  1936  0892                     	;# 
  1937  0893                     	;# 
  1938  0895                     	;# 
  1939  0896                     	;# 
  1940  0897                     	;# 
  1941  0898                     	;# 
  1942  0899                     	;# 
  1943  089A                     	;# 
  1944  089B                     	;# 
  1945  090C                     	;# 
  1946  090E                     	;# 
  1947  090F                     	;# 
  1948  091F                     	;# 
  1949  091F                     	;# 
  1950  098F                     	;# 
  1951  098F                     	;# 
  1952  0990                     	;# 
  1953  0991                     	;# 
  1954  0992                     	;# 
  1955  0993                     	;# 
  1956  0994                     	;# 
  1957  0995                     	;# 
  1958  0996                     	;# 
  1959  0997                     	;# 
  1960  0E0F                     	;# 
  1961  0E10                     	;# 
  1962  0E11                     	;# 
  1963  0E12                     	;# 
  1964  0E13                     	;# 
  1965  0E14                     	;# 
  1966  0E15                     	;# 
  1967  0E16                     	;# 
  1968  0E17                     	;# 
  1969  0E18                     	;# 
  1970  0E19                     	;# 
  1971  0E1A                     	;# 
  1972  0E1B                     	;# 
  1973  0E1C                     	;# 
  1974  0E1D                     	;# 
  1975  0E1E                     	;# 
  1976  0E1F                     	;# 
  1977  0E20                     	;# 
  1978  0E21                     	;# 
  1979  0E22                     	;# 
  1980  0E23                     	;# 
  1981  0E24                     	;# 
  1982  0E25                     	;# 
  1983  0E26                     	;# 
  1984  0E27                     	;# 
  1985  0E28                     	;# 
  1986  0E29                     	;# 
  1987  0E2A                     	;# 
  1988  0E2B                     	;# 
  1989  0E2C                     	;# 
  1990  0E2D                     	;# 
  1991  0E2E                     	;# 
  1992  0E2F                     	;# 
  1993  0E30                     	;# 
  1994  0E31                     	;# 
  1995  0E32                     	;# 
  1996  0E33                     	;# 
  1997  0E34                     	;# 
  1998  0E35                     	;# 
  1999  0E36                     	;# 
  2000  0E37                     	;# 
  2001  0E8F                     	;# 
  2002  0E90                     	;# 
  2003  0E91                     	;# 
  2004  0E92                     	;# 
  2005  0E93                     	;# 
  2006  0E94                     	;# 
  2007  0E95                     	;# 
  2008  0E96                     	;# 
  2009  0E97                     	;# 
  2010  0E9C                     	;# 
  2011  0E9D                     	;# 
  2012  0E9E                     	;# 
  2013  0EA1                     	;# 
  2014  0EA2                     	;# 
  2015  0EA3                     	;# 
  2016  0EA4                     	;# 
  2017  0EA5                     	;# 
  2018  0EA9                     	;# 
  2019  0EAA                     	;# 
  2020  0EAB                     	;# 
  2021  0EAC                     	;# 
  2022  0EB1                     	;# 
  2023  0EB2                     	;# 
  2024  0EB3                     	;# 
  2025  0EB8                     	;# 
  2026  0EB9                     	;# 
  2027  0EBA                     	;# 
  2028  0EBB                     	;# 
  2029  0EBC                     	;# 
  2030  0EBD                     	;# 
  2031  0EBE                     	;# 
  2032  0EC3                     	;# 
  2033  0EC5                     	;# 
  2034  0EC6                     	;# 
  2035  0EC7                     	;# 
  2036  0EC8                     	;# 
  2037  0EC9                     	;# 
  2038  0ECA                     	;# 
  2039  0ECB                     	;# 
  2040  0ECC                     	;# 
  2041  0F10                     	;# 
  2042  0F11                     	;# 
  2043  0F12                     	;# 
  2044  0F13                     	;# 
  2045  0F14                     	;# 
  2046  0F15                     	;# 
  2047  0F16                     	;# 
  2048  0F17                     	;# 
  2049  0F18                     	;# 
  2050  0F19                     	;# 
  2051  0F1A                     	;# 
  2052  0F1B                     	;# 
  2053  0F1C                     	;# 
  2054  0F1D                     	;# 
  2055  0F1E                     	;# 
  2056  0F1F                     	;# 
  2057  0F20                     	;# 
  2058  0F21                     	;# 
  2059  0F22                     	;# 
  2060  0F23                     	;# 
  2061  0F24                     	;# 
  2062  0F25                     	;# 
  2063  0F26                     	;# 
  2064  0F27                     	;# 
  2065  0F38                     	;# 
  2066  0F39                     	;# 
  2067  0F3A                     	;# 
  2068  0F3B                     	;# 
  2069  0F3C                     	;# 
  2070  0F3D                     	;# 
  2071  0F3E                     	;# 
  2072  0F3F                     	;# 
  2073  0F40                     	;# 
  2074  0F41                     	;# 
  2075  0F43                     	;# 
  2076  0F44                     	;# 
  2077  0F45                     	;# 
  2078  0F46                     	;# 
  2079  0F47                     	;# 
  2080  0F48                     	;# 
  2081  0F49                     	;# 
  2082  0F4A                     	;# 
  2083  0F4B                     	;# 
  2084  0F4C                     	;# 
  2085  0F4E                     	;# 
  2086  0F4F                     	;# 
  2087  0F50                     	;# 
  2088  0F51                     	;# 
  2089  0F52                     	;# 
  2090  0F53                     	;# 
  2091  0F54                     	;# 
  2092  0F55                     	;# 
  2093  0F56                     	;# 
  2094  0F57                     	;# 
  2095  0F65                     	;# 
  2096  0F68                     	;# 
  2097  0F69                     	;# 
  2098  0F6A                     	;# 
  2099  0F6B                     	;# 
  2100  0FE4                     	;# 
  2101  0FE5                     	;# 
  2102  0FE6                     	;# 
  2103  0FE7                     	;# 
  2104  0FE8                     	;# 
  2105  0FE9                     	;# 
  2106  0FEA                     	;# 
  2107  0FEB                     	;# 
  2108  0FED                     	;# 
  2109  0FEE                     	;# 
  2110  0FEF                     	;# 
  2111  0000                     	;# 
  2112  0001                     	;# 
  2113  0002                     	;# 
  2114  0003                     	;# 
  2115  0004                     	;# 
  2116  0005                     	;# 
  2117  0006                     	;# 
  2118  0007                     	;# 
  2119  0008                     	;# 
  2120  0009                     	;# 
  2121  000A                     	;# 
  2122  000B                     	;# 
  2123  000C                     	;# 
  2124  000D                     	;# 
  2125  000E                     	;# 
  2126  0010                     	;# 
  2127  0011                     	;# 
  2128  0012                     	;# 
  2129  0013                     	;# 
  2130  0016                     	;# 
  2131  0017                     	;# 
  2132  0018                     	;# 
  2133  001C                     	;# 
  2134  001C                     	;# 
  2135  001D                     	;# 
  2136  001D                     	;# 
  2137  001E                     	;# 
  2138  001F                     	;# 
  2139  008C                     	;# 
  2140  008C                     	;# 
  2141  008D                     	;# 
  2142  008E                     	;# 
  2143  008E                     	;# 
  2144  008F                     	;# 
  2145  0090                     	;# 
  2146  0090                     	;# 
  2147  0091                     	;# 
  2148  0093                     	;# 
  2149  0094                     	;# 
  2150  0095                     	;# 
  2151  0096                     	;# 
  2152  0097                     	;# 
  2153  0098                     	;# 
  2154  0099                     	;# 
  2155  009A                     	;# 
  2156  009B                     	;# 
  2157  009C                     	;# 
  2158  009D                     	;# 
  2159  009E                     	;# 
  2160  010C                     	;# 
  2161  010D                     	;# 
  2162  010E                     	;# 
  2163  010E                     	;# 
  2164  010F                     	;# 
  2165  0110                     	;# 
  2166  0110                     	;# 
  2167  0111                     	;# 
  2168  0112                     	;# 
  2169  0112                     	;# 
  2170  0113                     	;# 
  2171  0114                     	;# 
  2172  0114                     	;# 
  2173  0115                     	;# 
  2174  0116                     	;# 
  2175  0116                     	;# 
  2176  0117                     	;# 
  2177  0119                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  011A                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011B                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011C                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011D                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011E                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011F                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  018C                     	;# 
  2203  018D                     	;# 
  2204  018E                     	;# 
  2205  018F                     	;# 
  2206  0190                     	;# 
  2207  0191                     	;# 
  2208  0192                     	;# 
  2209  0196                     	;# 
  2210  0197                     	;# 
  2211  0198                     	;# 
  2212  0199                     	;# 
  2213  019A                     	;# 
  2214  019B                     	;# 
  2215  019C                     	;# 
  2216  020C                     	;# 
  2217  020D                     	;# 
  2218  020E                     	;# 
  2219  020F                     	;# 
  2220  020F                     	;# 
  2221  0210                     	;# 
  2222  0210                     	;# 
  2223  0211                     	;# 
  2224  0211                     	;# 
  2225  0212                     	;# 
  2226  0213                     	;# 
  2227  0214                     	;# 
  2228  0215                     	;# 
  2229  0215                     	;# 
  2230  0216                     	;# 
  2231  0216                     	;# 
  2232  0217                     	;# 
  2233  0217                     	;# 
  2234  0218                     	;# 
  2235  0219                     	;# 
  2236  021A                     	;# 
  2237  021B                     	;# 
  2238  021B                     	;# 
  2239  021C                     	;# 
  2240  021C                     	;# 
  2241  021D                     	;# 
  2242  021D                     	;# 
  2243  021E                     	;# 
  2244  021F                     	;# 
  2245  028C                     	;# 
  2246  028C                     	;# 
  2247  028D                     	;# 
  2248  028D                     	;# 
  2249  028E                     	;# 
  2250  028F                     	;# 
  2251  0290                     	;# 
  2252  0290                     	;# 
  2253  0291                     	;# 
  2254  0292                     	;# 
  2255  0292                     	;# 
  2256  0293                     	;# 
  2257  0293                     	;# 
  2258  0294                     	;# 
  2259  0295                     	;# 
  2260  0296                     	;# 
  2261  0296                     	;# 
  2262  0297                     	;# 
  2263  0298                     	;# 
  2264  0298                     	;# 
  2265  0299                     	;# 
  2266  0299                     	;# 
  2267  029A                     	;# 
  2268  029B                     	;# 
  2269  029C                     	;# 
  2270  029C                     	;# 
  2271  029D                     	;# 
  2272  030C                     	;# 
  2273  030C                     	;# 
  2274  030D                     	;# 
  2275  030E                     	;# 
  2276  030F                     	;# 
  2277  0310                     	;# 
  2278  0310                     	;# 
  2279  0311                     	;# 
  2280  0312                     	;# 
  2281  0313                     	;# 
  2282  0314                     	;# 
  2283  0314                     	;# 
  2284  0315                     	;# 
  2285  0316                     	;# 
  2286  0317                     	;# 
  2287  0318                     	;# 
  2288  0318                     	;# 
  2289  0319                     	;# 
  2290  031A                     	;# 
  2291  031B                     	;# 
  2292  031C                     	;# 
  2293  031C                     	;# 
  2294  031D                     	;# 
  2295  031E                     	;# 
  2296  031F                     	;# 
  2297  038C                     	;# 
  2298  038D                     	;# 
  2299  038E                     	;# 
  2300  0390                     	;# 
  2301  0391                     	;# 
  2302  0392                     	;# 
  2303  040C                     	;# 
  2304  040D                     	;# 
  2305  040E                     	;# 
  2306  040F                     	;# 
  2307  0410                     	;# 
  2308  0411                     	;# 
  2309  0416                     	;# 
  2310  0416                     	;# 
  2311  0417                     	;# 
  2312  0418                     	;# 
  2313  0418                     	;# 
  2314  0419                     	;# 
  2315  041A                     	;# 
  2316  041A                     	;# 
  2317  041B                     	;# 
  2318  041C                     	;# 
  2319  041C                     	;# 
  2320  041D                     	;# 
  2321  041E                     	;# 
  2322  041F                     	;# 
  2323  048C                     	;# 
  2324  048C                     	;# 
  2325  048D                     	;# 
  2326  048E                     	;# 
  2327  048F                     	;# 
  2328  048F                     	;# 
  2329  0490                     	;# 
  2330  0491                     	;# 
  2331  0492                     	;# 
  2332  0492                     	;# 
  2333  0493                     	;# 
  2334  0494                     	;# 
  2335  0495                     	;# 
  2336  0495                     	;# 
  2337  0496                     	;# 
  2338  0497                     	;# 
  2339  0498                     	;# 
  2340  0499                     	;# 
  2341  049A                     	;# 
  2342  049B                     	;# 
  2343  049C                     	;# 
  2344  049D                     	;# 
  2345  050C                     	;# 
  2346  050C                     	;# 
  2347  050D                     	;# 
  2348  050E                     	;# 
  2349  050F                     	;# 
  2350  050F                     	;# 
  2351  0510                     	;# 
  2352  0511                     	;# 
  2353  0512                     	;# 
  2354  0512                     	;# 
  2355  0513                     	;# 
  2356  0514                     	;# 
  2357  0515                     	;# 
  2358  0515                     	;# 
  2359  0516                     	;# 
  2360  0517                     	;# 
  2361  0518                     	;# 
  2362  0519                     	;# 
  2363  051A                     	;# 
  2364  051B                     	;# 
  2365  051C                     	;# 
  2366  051D                     	;# 
  2367  058C                     	;# 
  2368  058C                     	;# 
  2369  058D                     	;# 
  2370  058E                     	;# 
  2371  058F                     	;# 
  2372  058F                     	;# 
  2373  0590                     	;# 
  2374  0591                     	;# 
  2375  0592                     	;# 
  2376  0593                     	;# 
  2377  060C                     	;# 
  2378  060D                     	;# 
  2379  060E                     	;# 
  2380  060F                     	;# 
  2381  0610                     	;# 
  2382  0611                     	;# 
  2383  0612                     	;# 
  2384  0613                     	;# 
  2385  0614                     	;# 
  2386  0616                     	;# 
  2387  0617                     	;# 
  2388  0618                     	;# 
  2389  0619                     	;# 
  2390  061A                     	;# 
  2391  061B                     	;# 
  2392  061C                     	;# 
  2393  061D                     	;# 
  2394  061E                     	;# 
  2395  068C                     	;# 
  2396  068D                     	;# 
  2397  068E                     	;# 
  2398  068F                     	;# 
  2399  0690                     	;# 
  2400  0691                     	;# 
  2401  0692                     	;# 
  2402  0693                     	;# 
  2403  0694                     	;# 
  2404  070C                     	;# 
  2405  070D                     	;# 
  2406  070E                     	;# 
  2407  070F                     	;# 
  2408  0710                     	;# 
  2409  0711                     	;# 
  2410  0712                     	;# 
  2411  0713                     	;# 
  2412  0714                     	;# 
  2413  0716                     	;# 
  2414  0717                     	;# 
  2415  0718                     	;# 
  2416  0719                     	;# 
  2417  071A                     	;# 
  2418  071B                     	;# 
  2419  071C                     	;# 
  2420  071D                     	;# 
  2421  071E                     	;# 
  2422  0796                     	;# 
  2423  0797                     	;# 
  2424  0798                     	;# 
  2425  0799                     	;# 
  2426  079A                     	;# 
  2427  079B                     	;# 
  2428  080C                     	;# 
  2429  080D                     	;# 
  2430  080E                     	;# 
  2431  080F                     	;# 
  2432  0810                     	;# 
  2433  0811                     	;# 
  2434  0812                     	;# 
  2435  0813                     	;# 
  2436  0814                     	;# 
  2437  081A                     	;# 
  2438  081B                     	;# 
  2439  081C                     	;# 
  2440  081D                     	;# 
  2441  081E                     	;# 
  2442  081F                     	;# 
  2443  088C                     	;# 
  2444  088D                     	;# 
  2445  088E                     	;# 
  2446  088F                     	;# 
  2447  0890                     	;# 
  2448  0891                     	;# 
  2449  0892                     	;# 
  2450  0893                     	;# 
  2451  0895                     	;# 
  2452  0896                     	;# 
  2453  0897                     	;# 
  2454  0898                     	;# 
  2455  0899                     	;# 
  2456  089A                     	;# 
  2457  089B                     	;# 
  2458  090C                     	;# 
  2459  090E                     	;# 
  2460  090F                     	;# 
  2461  091F                     	;# 
  2462  091F                     	;# 
  2463  098F                     	;# 
  2464  098F                     	;# 
  2465  0990                     	;# 
  2466  0991                     	;# 
  2467  0992                     	;# 
  2468  0993                     	;# 
  2469  0994                     	;# 
  2470  0995                     	;# 
  2471  0996                     	;# 
  2472  0997                     	;# 
  2473  0E0F                     	;# 
  2474  0E10                     	;# 
  2475  0E11                     	;# 
  2476  0E12                     	;# 
  2477  0E13                     	;# 
  2478  0E14                     	;# 
  2479  0E15                     	;# 
  2480  0E16                     	;# 
  2481  0E17                     	;# 
  2482  0E18                     	;# 
  2483  0E19                     	;# 
  2484  0E1A                     	;# 
  2485  0E1B                     	;# 
  2486  0E1C                     	;# 
  2487  0E1D                     	;# 
  2488  0E1E                     	;# 
  2489  0E1F                     	;# 
  2490  0E20                     	;# 
  2491  0E21                     	;# 
  2492  0E22                     	;# 
  2493  0E23                     	;# 
  2494  0E24                     	;# 
  2495  0E25                     	;# 
  2496  0E26                     	;# 
  2497  0E27                     	;# 
  2498  0E28                     	;# 
  2499  0E29                     	;# 
  2500  0E2A                     	;# 
  2501  0E2B                     	;# 
  2502  0E2C                     	;# 
  2503  0E2D                     	;# 
  2504  0E2E                     	;# 
  2505  0E2F                     	;# 
  2506  0E30                     	;# 
  2507  0E31                     	;# 
  2508  0E32                     	;# 
  2509  0E33                     	;# 
  2510  0E34                     	;# 
  2511  0E35                     	;# 
  2512  0E36                     	;# 
  2513  0E37                     	;# 
  2514  0E8F                     	;# 
  2515  0E90                     	;# 
  2516  0E91                     	;# 
  2517  0E92                     	;# 
  2518  0E93                     	;# 
  2519  0E94                     	;# 
  2520  0E95                     	;# 
  2521  0E96                     	;# 
  2522  0E97                     	;# 
  2523  0E9C                     	;# 
  2524  0E9D                     	;# 
  2525  0E9E                     	;# 
  2526  0EA1                     	;# 
  2527  0EA2                     	;# 
  2528  0EA3                     	;# 
  2529  0EA4                     	;# 
  2530  0EA5                     	;# 
  2531  0EA9                     	;# 
  2532  0EAA                     	;# 
  2533  0EAB                     	;# 
  2534  0EAC                     	;# 
  2535  0EB1                     	;# 
  2536  0EB2                     	;# 
  2537  0EB3                     	;# 
  2538  0EB8                     	;# 
  2539  0EB9                     	;# 
  2540  0EBA                     	;# 
  2541  0EBB                     	;# 
  2542  0EBC                     	;# 
  2543  0EBD                     	;# 
  2544  0EBE                     	;# 
  2545  0EC3                     	;# 
  2546  0EC5                     	;# 
  2547  0EC6                     	;# 
  2548  0EC7                     	;# 
  2549  0EC8                     	;# 
  2550  0EC9                     	;# 
  2551  0ECA                     	;# 
  2552  0ECB                     	;# 
  2553  0ECC                     	;# 
  2554  0F10                     	;# 
  2555  0F11                     	;# 
  2556  0F12                     	;# 
  2557  0F13                     	;# 
  2558  0F14                     	;# 
  2559  0F15                     	;# 
  2560  0F16                     	;# 
  2561  0F17                     	;# 
  2562  0F18                     	;# 
  2563  0F19                     	;# 
  2564  0F1A                     	;# 
  2565  0F1B                     	;# 
  2566  0F1C                     	;# 
  2567  0F1D                     	;# 
  2568  0F1E                     	;# 
  2569  0F1F                     	;# 
  2570  0F20                     	;# 
  2571  0F21                     	;# 
  2572  0F22                     	;# 
  2573  0F23                     	;# 
  2574  0F24                     	;# 
  2575  0F25                     	;# 
  2576  0F26                     	;# 
  2577  0F27                     	;# 
  2578  0F38                     	;# 
  2579  0F39                     	;# 
  2580  0F3A                     	;# 
  2581  0F3B                     	;# 
  2582  0F3C                     	;# 
  2583  0F3D                     	;# 
  2584  0F3E                     	;# 
  2585  0F3F                     	;# 
  2586  0F40                     	;# 
  2587  0F41                     	;# 
  2588  0F43                     	;# 
  2589  0F44                     	;# 
  2590  0F45                     	;# 
  2591  0F46                     	;# 
  2592  0F47                     	;# 
  2593  0F48                     	;# 
  2594  0F49                     	;# 
  2595  0F4A                     	;# 
  2596  0F4B                     	;# 
  2597  0F4C                     	;# 
  2598  0F4E                     	;# 
  2599  0F4F                     	;# 
  2600  0F50                     	;# 
  2601  0F51                     	;# 
  2602  0F52                     	;# 
  2603  0F53                     	;# 
  2604  0F54                     	;# 
  2605  0F55                     	;# 
  2606  0F56                     	;# 
  2607  0F57                     	;# 
  2608  0F65                     	;# 
  2609  0F68                     	;# 
  2610  0F69                     	;# 
  2611  0F6A                     	;# 
  2612  0F6B                     	;# 
  2613  0FE4                     	;# 
  2614  0FE5                     	;# 
  2615  0FE6                     	;# 
  2616  0FE7                     	;# 
  2617  0FE8                     	;# 
  2618  0FE9                     	;# 
  2619  0FEA                     	;# 
  2620  0FEB                     	;# 
  2621  0FED                     	;# 
  2622  0FEE                     	;# 
  2623  0FEF                     	;# 
  2624  0000                     	;# 
  2625  0001                     	;# 
  2626  0002                     	;# 
  2627  0003                     	;# 
  2628  0004                     	;# 
  2629  0005                     	;# 
  2630  0006                     	;# 
  2631  0007                     	;# 
  2632  0008                     	;# 
  2633  0009                     	;# 
  2634  000A                     	;# 
  2635  000B                     	;# 
  2636  000C                     	;# 
  2637  000D                     	;# 
  2638  000E                     	;# 
  2639  0010                     	;# 
  2640  0011                     	;# 
  2641  0012                     	;# 
  2642  0013                     	;# 
  2643  0016                     	;# 
  2644  0017                     	;# 
  2645  0018                     	;# 
  2646  001C                     	;# 
  2647  001C                     	;# 
  2648  001D                     	;# 
  2649  001D                     	;# 
  2650  001E                     	;# 
  2651  001F                     	;# 
  2652  008C                     	;# 
  2653  008C                     	;# 
  2654  008D                     	;# 
  2655  008E                     	;# 
  2656  008E                     	;# 
  2657  008F                     	;# 
  2658  0090                     	;# 
  2659  0090                     	;# 
  2660  0091                     	;# 
  2661  0093                     	;# 
  2662  0094                     	;# 
  2663  0095                     	;# 
  2664  0096                     	;# 
  2665  0097                     	;# 
  2666  0098                     	;# 
  2667  0099                     	;# 
  2668  009A                     	;# 
  2669  009B                     	;# 
  2670  009C                     	;# 
  2671  009D                     	;# 
  2672  009E                     	;# 
  2673  010C                     	;# 
  2674  010D                     	;# 
  2675  010E                     	;# 
  2676  010E                     	;# 
  2677  010F                     	;# 
  2678  0110                     	;# 
  2679  0110                     	;# 
  2680  0111                     	;# 
  2681  0112                     	;# 
  2682  0112                     	;# 
  2683  0113                     	;# 
  2684  0114                     	;# 
  2685  0114                     	;# 
  2686  0115                     	;# 
  2687  0116                     	;# 
  2688  0116                     	;# 
  2689  0117                     	;# 
  2690  0119                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  011A                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011B                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011C                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011D                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011E                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011F                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  018C                     	;# 
  2716  018D                     	;# 
  2717  018E                     	;# 
  2718  018F                     	;# 
  2719  0190                     	;# 
  2720  0191                     	;# 
  2721  0192                     	;# 
  2722  0196                     	;# 
  2723  0197                     	;# 
  2724  0198                     	;# 
  2725  0199                     	;# 
  2726  019A                     	;# 
  2727  019B                     	;# 
  2728  019C                     	;# 
  2729  020C                     	;# 
  2730  020D                     	;# 
  2731  020E                     	;# 
  2732  020F                     	;# 
  2733  020F                     	;# 
  2734  0210                     	;# 
  2735  0210                     	;# 
  2736  0211                     	;# 
  2737  0211                     	;# 
  2738  0212                     	;# 
  2739  0213                     	;# 
  2740  0214                     	;# 
  2741  0215                     	;# 
  2742  0215                     	;# 
  2743  0216                     	;# 
  2744  0216                     	;# 
  2745  0217                     	;# 
  2746  0217                     	;# 
  2747  0218                     	;# 
  2748  0219                     	;# 
  2749  021A                     	;# 
  2750  021B                     	;# 
  2751  021B                     	;# 
  2752  021C                     	;# 
  2753  021C                     	;# 
  2754  021D                     	;# 
  2755  021D                     	;# 
  2756  021E                     	;# 
  2757  021F                     	;# 
  2758  028C                     	;# 
  2759  028C                     	;# 
  2760  028D                     	;# 
  2761  028D                     	;# 
  2762  028E                     	;# 
  2763  028F                     	;# 
  2764  0290                     	;# 
  2765  0290                     	;# 
  2766  0291                     	;# 
  2767  0292                     	;# 
  2768  0292                     	;# 
  2769  0293                     	;# 
  2770  0293                     	;# 
  2771  0294                     	;# 
  2772  0295                     	;# 
  2773  0296                     	;# 
  2774  0296                     	;# 
  2775  0297                     	;# 
  2776  0298                     	;# 
  2777  0298                     	;# 
  2778  0299                     	;# 
  2779  0299                     	;# 
  2780  029A                     	;# 
  2781  029B                     	;# 
  2782  029C                     	;# 
  2783  029C                     	;# 
  2784  029D                     	;# 
  2785  030C                     	;# 
  2786  030C                     	;# 
  2787  030D                     	;# 
  2788  030E                     	;# 
  2789  030F                     	;# 
  2790  0310                     	;# 
  2791  0310                     	;# 
  2792  0311                     	;# 
  2793  0312                     	;# 
  2794  0313                     	;# 
  2795  0314                     	;# 
  2796  0314                     	;# 
  2797  0315                     	;# 
  2798  0316                     	;# 
  2799  0317                     	;# 
  2800  0318                     	;# 
  2801  0318                     	;# 
  2802  0319                     	;# 
  2803  031A                     	;# 
  2804  031B                     	;# 
  2805  031C                     	;# 
  2806  031C                     	;# 
  2807  031D                     	;# 
  2808  031E                     	;# 
  2809  031F                     	;# 
  2810  038C                     	;# 
  2811  038D                     	;# 
  2812  038E                     	;# 
  2813  0390                     	;# 
  2814  0391                     	;# 
  2815  0392                     	;# 
  2816  040C                     	;# 
  2817  040D                     	;# 
  2818  040E                     	;# 
  2819  040F                     	;# 
  2820  0410                     	;# 
  2821  0411                     	;# 
  2822  0416                     	;# 
  2823  0416                     	;# 
  2824  0417                     	;# 
  2825  0418                     	;# 
  2826  0418                     	;# 
  2827  0419                     	;# 
  2828  041A                     	;# 
  2829  041A                     	;# 
  2830  041B                     	;# 
  2831  041C                     	;# 
  2832  041C                     	;# 
  2833  041D                     	;# 
  2834  041E                     	;# 
  2835  041F                     	;# 
  2836  048C                     	;# 
  2837  048C                     	;# 
  2838  048D                     	;# 
  2839  048E                     	;# 
  2840  048F                     	;# 
  2841  048F                     	;# 
  2842  0490                     	;# 
  2843  0491                     	;# 
  2844  0492                     	;# 
  2845  0492                     	;# 
  2846  0493                     	;# 
  2847  0494                     	;# 
  2848  0495                     	;# 
  2849  0495                     	;# 
  2850  0496                     	;# 
  2851  0497                     	;# 
  2852  0498                     	;# 
  2853  0499                     	;# 
  2854  049A                     	;# 
  2855  049B                     	;# 
  2856  049C                     	;# 
  2857  049D                     	;# 
  2858  050C                     	;# 
  2859  050C                     	;# 
  2860  050D                     	;# 
  2861  050E                     	;# 
  2862  050F                     	;# 
  2863  050F                     	;# 
  2864  0510                     	;# 
  2865  0511                     	;# 
  2866  0512                     	;# 
  2867  0512                     	;# 
  2868  0513                     	;# 
  2869  0514                     	;# 
  2870  0515                     	;# 
  2871  0515                     	;# 
  2872  0516                     	;# 
  2873  0517                     	;# 
  2874  0518                     	;# 
  2875  0519                     	;# 
  2876  051A                     	;# 
  2877  051B                     	;# 
  2878  051C                     	;# 
  2879  051D                     	;# 
  2880  058C                     	;# 
  2881  058C                     	;# 
  2882  058D                     	;# 
  2883  058E                     	;# 
  2884  058F                     	;# 
  2885  058F                     	;# 
  2886  0590                     	;# 
  2887  0591                     	;# 
  2888  0592                     	;# 
  2889  0593                     	;# 
  2890  060C                     	;# 
  2891  060D                     	;# 
  2892  060E                     	;# 
  2893  060F                     	;# 
  2894  0610                     	;# 
  2895  0611                     	;# 
  2896  0612                     	;# 
  2897  0613                     	;# 
  2898  0614                     	;# 
  2899  0616                     	;# 
  2900  0617                     	;# 
  2901  0618                     	;# 
  2902  0619                     	;# 
  2903  061A                     	;# 
  2904  061B                     	;# 
  2905  061C                     	;# 
  2906  061D                     	;# 
  2907  061E                     	;# 
  2908  068C                     	;# 
  2909  068D                     	;# 
  2910  068E                     	;# 
  2911  068F                     	;# 
  2912  0690                     	;# 
  2913  0691                     	;# 
  2914  0692                     	;# 
  2915  0693                     	;# 
  2916  0694                     	;# 
  2917  070C                     	;# 
  2918  070D                     	;# 
  2919  070E                     	;# 
  2920  070F                     	;# 
  2921  0710                     	;# 
  2922  0711                     	;# 
  2923  0712                     	;# 
  2924  0713                     	;# 
  2925  0714                     	;# 
  2926  0716                     	;# 
  2927  0717                     	;# 
  2928  0718                     	;# 
  2929  0719                     	;# 
  2930  071A                     	;# 
  2931  071B                     	;# 
  2932  071C                     	;# 
  2933  071D                     	;# 
  2934  071E                     	;# 
  2935  0796                     	;# 
  2936  0797                     	;# 
  2937  0798                     	;# 
  2938  0799                     	;# 
  2939  079A                     	;# 
  2940  079B                     	;# 
  2941  080C                     	;# 
  2942  080D                     	;# 
  2943  080E                     	;# 
  2944  080F                     	;# 
  2945  0810                     	;# 
  2946  0811                     	;# 
  2947  0812                     	;# 
  2948  0813                     	;# 
  2949  0814                     	;# 
  2950  081A                     	;# 
  2951  081B                     	;# 
  2952  081C                     	;# 
  2953  081D                     	;# 
  2954  081E                     	;# 
  2955  081F                     	;# 
  2956  088C                     	;# 
  2957  088D                     	;# 
  2958  088E                     	;# 
  2959  088F                     	;# 
  2960  0890                     	;# 
  2961  0891                     	;# 
  2962  0892                     	;# 
  2963  0893                     	;# 
  2964  0895                     	;# 
  2965  0896                     	;# 
  2966  0897                     	;# 
  2967  0898                     	;# 
  2968  0899                     	;# 
  2969  089A                     	;# 
  2970  089B                     	;# 
  2971  090C                     	;# 
  2972  090E                     	;# 
  2973  090F                     	;# 
  2974  091F                     	;# 
  2975  091F                     	;# 
  2976  098F                     	;# 
  2977  098F                     	;# 
  2978  0990                     	;# 
  2979  0991                     	;# 
  2980  0992                     	;# 
  2981  0993                     	;# 
  2982  0994                     	;# 
  2983  0995                     	;# 
  2984  0996                     	;# 
  2985  0997                     	;# 
  2986  0E0F                     	;# 
  2987  0E10                     	;# 
  2988  0E11                     	;# 
  2989  0E12                     	;# 
  2990  0E13                     	;# 
  2991  0E14                     	;# 
  2992  0E15                     	;# 
  2993  0E16                     	;# 
  2994  0E17                     	;# 
  2995  0E18                     	;# 
  2996  0E19                     	;# 
  2997  0E1A                     	;# 
  2998  0E1B                     	;# 
  2999  0E1C                     	;# 
  3000  0E1D                     	;# 
  3001  0E1E                     	;# 
  3002  0E1F                     	;# 
  3003  0E20                     	;# 
  3004  0E21                     	;# 
  3005  0E22                     	;# 
  3006  0E23                     	;# 
  3007  0E24                     	;# 
  3008  0E25                     	;# 
  3009  0E26                     	;# 
  3010  0E27                     	;# 
  3011  0E28                     	;# 
  3012  0E29                     	;# 
  3013  0E2A                     	;# 
  3014  0E2B                     	;# 
  3015  0E2C                     	;# 
  3016  0E2D                     	;# 
  3017  0E2E                     	;# 
  3018  0E2F                     	;# 
  3019  0E30                     	;# 
  3020  0E31                     	;# 
  3021  0E32                     	;# 
  3022  0E33                     	;# 
  3023  0E34                     	;# 
  3024  0E35                     	;# 
  3025  0E36                     	;# 
  3026  0E37                     	;# 
  3027  0E8F                     	;# 
  3028  0E90                     	;# 
  3029  0E91                     	;# 
  3030  0E92                     	;# 
  3031  0E93                     	;# 
  3032  0E94                     	;# 
  3033  0E95                     	;# 
  3034  0E96                     	;# 
  3035  0E97                     	;# 
  3036  0E9C                     	;# 
  3037  0E9D                     	;# 
  3038  0E9E                     	;# 
  3039  0EA1                     	;# 
  3040  0EA2                     	;# 
  3041  0EA3                     	;# 
  3042  0EA4                     	;# 
  3043  0EA5                     	;# 
  3044  0EA9                     	;# 
  3045  0EAA                     	;# 
  3046  0EAB                     	;# 
  3047  0EAC                     	;# 
  3048  0EB1                     	;# 
  3049  0EB2                     	;# 
  3050  0EB3                     	;# 
  3051  0EB8                     	;# 
  3052  0EB9                     	;# 
  3053  0EBA                     	;# 
  3054  0EBB                     	;# 
  3055  0EBC                     	;# 
  3056  0EBD                     	;# 
  3057  0EBE                     	;# 
  3058  0EC3                     	;# 
  3059  0EC5                     	;# 
  3060  0EC6                     	;# 
  3061  0EC7                     	;# 
  3062  0EC8                     	;# 
  3063  0EC9                     	;# 
  3064  0ECA                     	;# 
  3065  0ECB                     	;# 
  3066  0ECC                     	;# 
  3067  0F10                     	;# 
  3068  0F11                     	;# 
  3069  0F12                     	;# 
  3070  0F13                     	;# 
  3071  0F14                     	;# 
  3072  0F15                     	;# 
  3073  0F16                     	;# 
  3074  0F17                     	;# 
  3075  0F18                     	;# 
  3076  0F19                     	;# 
  3077  0F1A                     	;# 
  3078  0F1B                     	;# 
  3079  0F1C                     	;# 
  3080  0F1D                     	;# 
  3081  0F1E                     	;# 
  3082  0F1F                     	;# 
  3083  0F20                     	;# 
  3084  0F21                     	;# 
  3085  0F22                     	;# 
  3086  0F23                     	;# 
  3087  0F24                     	;# 
  3088  0F25                     	;# 
  3089  0F26                     	;# 
  3090  0F27                     	;# 
  3091  0F38                     	;# 
  3092  0F39                     	;# 
  3093  0F3A                     	;# 
  3094  0F3B                     	;# 
  3095  0F3C                     	;# 
  3096  0F3D                     	;# 
  3097  0F3E                     	;# 
  3098  0F3F                     	;# 
  3099  0F40                     	;# 
  3100  0F41                     	;# 
  3101  0F43                     	;# 
  3102  0F44                     	;# 
  3103  0F45                     	;# 
  3104  0F46                     	;# 
  3105  0F47                     	;# 
  3106  0F48                     	;# 
  3107  0F49                     	;# 
  3108  0F4A                     	;# 
  3109  0F4B                     	;# 
  3110  0F4C                     	;# 
  3111  0F4E                     	;# 
  3112  0F4F                     	;# 
  3113  0F50                     	;# 
  3114  0F51                     	;# 
  3115  0F52                     	;# 
  3116  0F53                     	;# 
  3117  0F54                     	;# 
  3118  0F55                     	;# 
  3119  0F56                     	;# 
  3120  0F57                     	;# 
  3121  0F65                     	;# 
  3122  0F68                     	;# 
  3123  0F69                     	;# 
  3124  0F6A                     	;# 
  3125  0F6B                     	;# 
  3126  0FE4                     	;# 
  3127  0FE5                     	;# 
  3128  0FE6                     	;# 
  3129  0FE7                     	;# 
  3130  0FE8                     	;# 
  3131  0FE9                     	;# 
  3132  0FEA                     	;# 
  3133  0FEB                     	;# 
  3134  0FED                     	;# 
  3135  0FEE                     	;# 
  3136  0FEF                     	;# 
  3137  0000                     	;# 
  3138  0001                     	;# 
  3139  0002                     	;# 
  3140  0003                     	;# 
  3141  0004                     	;# 
  3142  0005                     	;# 
  3143  0006                     	;# 
  3144  0007                     	;# 
  3145  0008                     	;# 
  3146  0009                     	;# 
  3147  000A                     	;# 
  3148  000B                     	;# 
  3149  000C                     	;# 
  3150  000D                     	;# 
  3151  000E                     	;# 
  3152  0010                     	;# 
  3153  0011                     	;# 
  3154  0012                     	;# 
  3155  0013                     	;# 
  3156  0016                     	;# 
  3157  0017                     	;# 
  3158  0018                     	;# 
  3159  001C                     	;# 
  3160  001C                     	;# 
  3161  001D                     	;# 
  3162  001D                     	;# 
  3163  001E                     	;# 
  3164  001F                     	;# 
  3165  008C                     	;# 
  3166  008C                     	;# 
  3167  008D                     	;# 
  3168  008E                     	;# 
  3169  008E                     	;# 
  3170  008F                     	;# 
  3171  0090                     	;# 
  3172  0090                     	;# 
  3173  0091                     	;# 
  3174  0093                     	;# 
  3175  0094                     	;# 
  3176  0095                     	;# 
  3177  0096                     	;# 
  3178  0097                     	;# 
  3179  0098                     	;# 
  3180  0099                     	;# 
  3181  009A                     	;# 
  3182  009B                     	;# 
  3183  009C                     	;# 
  3184  009D                     	;# 
  3185  009E                     	;# 
  3186  010C                     	;# 
  3187  010D                     	;# 
  3188  010E                     	;# 
  3189  010E                     	;# 
  3190  010F                     	;# 
  3191  0110                     	;# 
  3192  0110                     	;# 
  3193  0111                     	;# 
  3194  0112                     	;# 
  3195  0112                     	;# 
  3196  0113                     	;# 
  3197  0114                     	;# 
  3198  0114                     	;# 
  3199  0115                     	;# 
  3200  0116                     	;# 
  3201  0116                     	;# 
  3202  0117                     	;# 
  3203  0119                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  011A                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011B                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011C                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011D                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011E                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011F                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  018C                     	;# 
  3229  018D                     	;# 
  3230  018E                     	;# 
  3231  018F                     	;# 
  3232  0190                     	;# 
  3233  0191                     	;# 
  3234  0192                     	;# 
  3235  0196                     	;# 
  3236  0197                     	;# 
  3237  0198                     	;# 
  3238  0199                     	;# 
  3239  019A                     	;# 
  3240  019B                     	;# 
  3241  019C                     	;# 
  3242  020C                     	;# 
  3243  020D                     	;# 
  3244  020E                     	;# 
  3245  020F                     	;# 
  3246  020F                     	;# 
  3247  0210                     	;# 
  3248  0210                     	;# 
  3249  0211                     	;# 
  3250  0211                     	;# 
  3251  0212                     	;# 
  3252  0213                     	;# 
  3253  0214                     	;# 
  3254  0215                     	;# 
  3255  0215                     	;# 
  3256  0216                     	;# 
  3257  0216                     	;# 
  3258  0217                     	;# 
  3259  0217                     	;# 
  3260  0218                     	;# 
  3261  0219                     	;# 
  3262  021A                     	;# 
  3263  021B                     	;# 
  3264  021B                     	;# 
  3265  021C                     	;# 
  3266  021C                     	;# 
  3267  021D                     	;# 
  3268  021D                     	;# 
  3269  021E                     	;# 
  3270  021F                     	;# 
  3271  028C                     	;# 
  3272  028C                     	;# 
  3273  028D                     	;# 
  3274  028D                     	;# 
  3275  028E                     	;# 
  3276  028F                     	;# 
  3277  0290                     	;# 
  3278  0290                     	;# 
  3279  0291                     	;# 
  3280  0292                     	;# 
  3281  0292                     	;# 
  3282  0293                     	;# 
  3283  0293                     	;# 
  3284  0294                     	;# 
  3285  0295                     	;# 
  3286  0296                     	;# 
  3287  0296                     	;# 
  3288  0297                     	;# 
  3289  0298                     	;# 
  3290  0298                     	;# 
  3291  0299                     	;# 
  3292  0299                     	;# 
  3293  029A                     	;# 
  3294  029B                     	;# 
  3295  029C                     	;# 
  3296  029C                     	;# 
  3297  029D                     	;# 
  3298  030C                     	;# 
  3299  030C                     	;# 
  3300  030D                     	;# 
  3301  030E                     	;# 
  3302  030F                     	;# 
  3303  0310                     	;# 
  3304  0310                     	;# 
  3305  0311                     	;# 
  3306  0312                     	;# 
  3307  0313                     	;# 
  3308  0314                     	;# 
  3309  0314                     	;# 
  3310  0315                     	;# 
  3311  0316                     	;# 
  3312  0317                     	;# 
  3313  0318                     	;# 
  3314  0318                     	;# 
  3315  0319                     	;# 
  3316  031A                     	;# 
  3317  031B                     	;# 
  3318  031C                     	;# 
  3319  031C                     	;# 
  3320  031D                     	;# 
  3321  031E                     	;# 
  3322  031F                     	;# 
  3323  038C                     	;# 
  3324  038D                     	;# 
  3325  038E                     	;# 
  3326  0390                     	;# 
  3327  0391                     	;# 
  3328  0392                     	;# 
  3329  040C                     	;# 
  3330  040D                     	;# 
  3331  040E                     	;# 
  3332  040F                     	;# 
  3333  0410                     	;# 
  3334  0411                     	;# 
  3335  0416                     	;# 
  3336  0416                     	;# 
  3337  0417                     	;# 
  3338  0418                     	;# 
  3339  0418                     	;# 
  3340  0419                     	;# 
  3341  041A                     	;# 
  3342  041A                     	;# 
  3343  041B                     	;# 
  3344  041C                     	;# 
  3345  041C                     	;# 
  3346  041D                     	;# 
  3347  041E                     	;# 
  3348  041F                     	;# 
  3349  048C                     	;# 
  3350  048C                     	;# 
  3351  048D                     	;# 
  3352  048E                     	;# 
  3353  048F                     	;# 
  3354  048F                     	;# 
  3355  0490                     	;# 
  3356  0491                     	;# 
  3357  0492                     	;# 
  3358  0492                     	;# 
  3359  0493                     	;# 
  3360  0494                     	;# 
  3361  0495                     	;# 
  3362  0495                     	;# 
  3363  0496                     	;# 
  3364  0497                     	;# 
  3365  0498                     	;# 
  3366  0499                     	;# 
  3367  049A                     	;# 
  3368  049B                     	;# 
  3369  049C                     	;# 
  3370  049D                     	;# 
  3371  050C                     	;# 
  3372  050C                     	;# 
  3373  050D                     	;# 
  3374  050E                     	;# 
  3375  050F                     	;# 
  3376  050F                     	;# 
  3377  0510                     	;# 
  3378  0511                     	;# 
  3379  0512                     	;# 
  3380  0512                     	;# 
  3381  0513                     	;# 
  3382  0514                     	;# 
  3383  0515                     	;# 
  3384  0515                     	;# 
  3385  0516                     	;# 
  3386  0517                     	;# 
  3387  0518                     	;# 
  3388  0519                     	;# 
  3389  051A                     	;# 
  3390  051B                     	;# 
  3391  051C                     	;# 
  3392  051D                     	;# 
  3393  058C                     	;# 
  3394  058C                     	;# 
  3395  058D                     	;# 
  3396  058E                     	;# 
  3397  058F                     	;# 
  3398  058F                     	;# 
  3399  0590                     	;# 
  3400  0591                     	;# 
  3401  0592                     	;# 
  3402  0593                     	;# 
  3403  060C                     	;# 
  3404  060D                     	;# 
  3405  060E                     	;# 
  3406  060F                     	;# 
  3407  0610                     	;# 
  3408  0611                     	;# 
  3409  0612                     	;# 
  3410  0613                     	;# 
  3411  0614                     	;# 
  3412  0616                     	;# 
  3413  0617                     	;# 
  3414  0618                     	;# 
  3415  0619                     	;# 
  3416  061A                     	;# 
  3417  061B                     	;# 
  3418  061C                     	;# 
  3419  061D                     	;# 
  3420  061E                     	;# 
  3421  068C                     	;# 
  3422  068D                     	;# 
  3423  068E                     	;# 
  3424  068F                     	;# 
  3425  0690                     	;# 
  3426  0691                     	;# 
  3427  0692                     	;# 
  3428  0693                     	;# 
  3429  0694                     	;# 
  3430  070C                     	;# 
  3431  070D                     	;# 
  3432  070E                     	;# 
  3433  070F                     	;# 
  3434  0710                     	;# 
  3435  0711                     	;# 
  3436  0712                     	;# 
  3437  0713                     	;# 
  3438  0714                     	;# 
  3439  0716                     	;# 
  3440  0717                     	;# 
  3441  0718                     	;# 
  3442  0719                     	;# 
  3443  071A                     	;# 
  3444  071B                     	;# 
  3445  071C                     	;# 
  3446  071D                     	;# 
  3447  071E                     	;# 
  3448  0796                     	;# 
  3449  0797                     	;# 
  3450  0798                     	;# 
  3451  0799                     	;# 
  3452  079A                     	;# 
  3453  079B                     	;# 
  3454  080C                     	;# 
  3455  080D                     	;# 
  3456  080E                     	;# 
  3457  080F                     	;# 
  3458  0810                     	;# 
  3459  0811                     	;# 
  3460  0812                     	;# 
  3461  0813                     	;# 
  3462  0814                     	;# 
  3463  081A                     	;# 
  3464  081B                     	;# 
  3465  081C                     	;# 
  3466  081D                     	;# 
  3467  081E                     	;# 
  3468  081F                     	;# 
  3469  088C                     	;# 
  3470  088D                     	;# 
  3471  088E                     	;# 
  3472  088F                     	;# 
  3473  0890                     	;# 
  3474  0891                     	;# 
  3475  0892                     	;# 
  3476  0893                     	;# 
  3477  0895                     	;# 
  3478  0896                     	;# 
  3479  0897                     	;# 
  3480  0898                     	;# 
  3481  0899                     	;# 
  3482  089A                     	;# 
  3483  089B                     	;# 
  3484  090C                     	;# 
  3485  090E                     	;# 
  3486  090F                     	;# 
  3487  091F                     	;# 
  3488  091F                     	;# 
  3489  098F                     	;# 
  3490  098F                     	;# 
  3491  0990                     	;# 
  3492  0991                     	;# 
  3493  0992                     	;# 
  3494  0993                     	;# 
  3495  0994                     	;# 
  3496  0995                     	;# 
  3497  0996                     	;# 
  3498  0997                     	;# 
  3499  0E0F                     	;# 
  3500  0E10                     	;# 
  3501  0E11                     	;# 
  3502  0E12                     	;# 
  3503  0E13                     	;# 
  3504  0E14                     	;# 
  3505  0E15                     	;# 
  3506  0E16                     	;# 
  3507  0E17                     	;# 
  3508  0E18                     	;# 
  3509  0E19                     	;# 
  3510  0E1A                     	;# 
  3511  0E1B                     	;# 
  3512  0E1C                     	;# 
  3513  0E1D                     	;# 
  3514  0E1E                     	;# 
  3515  0E1F                     	;# 
  3516  0E20                     	;# 
  3517  0E21                     	;# 
  3518  0E22                     	;# 
  3519  0E23                     	;# 
  3520  0E24                     	;# 
  3521  0E25                     	;# 
  3522  0E26                     	;# 
  3523  0E27                     	;# 
  3524  0E28                     	;# 
  3525  0E29                     	;# 
  3526  0E2A                     	;# 
  3527  0E2B                     	;# 
  3528  0E2C                     	;# 
  3529  0E2D                     	;# 
  3530  0E2E                     	;# 
  3531  0E2F                     	;# 
  3532  0E30                     	;# 
  3533  0E31                     	;# 
  3534  0E32                     	;# 
  3535  0E33                     	;# 
  3536  0E34                     	;# 
  3537  0E35                     	;# 
  3538  0E36                     	;# 
  3539  0E37                     	;# 
  3540  0E8F                     	;# 
  3541  0E90                     	;# 
  3542  0E91                     	;# 
  3543  0E92                     	;# 
  3544  0E93                     	;# 
  3545  0E94                     	;# 
  3546  0E95                     	;# 
  3547  0E96                     	;# 
  3548  0E97                     	;# 
  3549  0E9C                     	;# 
  3550  0E9D                     	;# 
  3551  0E9E                     	;# 
  3552  0EA1                     	;# 
  3553  0EA2                     	;# 
  3554  0EA3                     	;# 
  3555  0EA4                     	;# 
  3556  0EA5                     	;# 
  3557  0EA9                     	;# 
  3558  0EAA                     	;# 
  3559  0EAB                     	;# 
  3560  0EAC                     	;# 
  3561  0EB1                     	;# 
  3562  0EB2                     	;# 
  3563  0EB3                     	;# 
  3564  0EB8                     	;# 
  3565  0EB9                     	;# 
  3566  0EBA                     	;# 
  3567  0EBB                     	;# 
  3568  0EBC                     	;# 
  3569  0EBD                     	;# 
  3570  0EBE                     	;# 
  3571  0EC3                     	;# 
  3572  0EC5                     	;# 
  3573  0EC6                     	;# 
  3574  0EC7                     	;# 
  3575  0EC8                     	;# 
  3576  0EC9                     	;# 
  3577  0ECA                     	;# 
  3578  0ECB                     	;# 
  3579  0ECC                     	;# 
  3580  0F10                     	;# 
  3581  0F11                     	;# 
  3582  0F12                     	;# 
  3583  0F13                     	;# 
  3584  0F14                     	;# 
  3585  0F15                     	;# 
  3586  0F16                     	;# 
  3587  0F17                     	;# 
  3588  0F18                     	;# 
  3589  0F19                     	;# 
  3590  0F1A                     	;# 
  3591  0F1B                     	;# 
  3592  0F1C                     	;# 
  3593  0F1D                     	;# 
  3594  0F1E                     	;# 
  3595  0F1F                     	;# 
  3596  0F20                     	;# 
  3597  0F21                     	;# 
  3598  0F22                     	;# 
  3599  0F23                     	;# 
  3600  0F24                     	;# 
  3601  0F25                     	;# 
  3602  0F26                     	;# 
  3603  0F27                     	;# 
  3604  0F38                     	;# 
  3605  0F39                     	;# 
  3606  0F3A                     	;# 
  3607  0F3B                     	;# 
  3608  0F3C                     	;# 
  3609  0F3D                     	;# 
  3610  0F3E                     	;# 
  3611  0F3F                     	;# 
  3612  0F40                     	;# 
  3613  0F41                     	;# 
  3614  0F43                     	;# 
  3615  0F44                     	;# 
  3616  0F45                     	;# 
  3617  0F46                     	;# 
  3618  0F47                     	;# 
  3619  0F48                     	;# 
  3620  0F49                     	;# 
  3621  0F4A                     	;# 
  3622  0F4B                     	;# 
  3623  0F4C                     	;# 
  3624  0F4E                     	;# 
  3625  0F4F                     	;# 
  3626  0F50                     	;# 
  3627  0F51                     	;# 
  3628  0F52                     	;# 
  3629  0F53                     	;# 
  3630  0F54                     	;# 
  3631  0F55                     	;# 
  3632  0F56                     	;# 
  3633  0F57                     	;# 
  3634  0F65                     	;# 
  3635  0F68                     	;# 
  3636  0F69                     	;# 
  3637  0F6A                     	;# 
  3638  0F6B                     	;# 
  3639  0FE4                     	;# 
  3640  0FE5                     	;# 
  3641  0FE6                     	;# 
  3642  0FE7                     	;# 
  3643  0FE8                     	;# 
  3644  0FE9                     	;# 
  3645  0FEA                     	;# 
  3646  0FEB                     	;# 
  3647  0FED                     	;# 
  3648  0FEE                     	;# 
  3649  0FEF                     	;# 
  3650  0000                     	;# 
  3651  0001                     	;# 
  3652  0002                     	;# 
  3653  0003                     	;# 
  3654  0004                     	;# 
  3655  0005                     	;# 
  3656  0006                     	;# 
  3657  0007                     	;# 
  3658  0008                     	;# 
  3659  0009                     	;# 
  3660  000A                     	;# 
  3661  000B                     	;# 
  3662  000C                     	;# 
  3663  000D                     	;# 
  3664  000E                     	;# 
  3665  0010                     	;# 
  3666  0011                     	;# 
  3667  0012                     	;# 
  3668  0013                     	;# 
  3669  0016                     	;# 
  3670  0017                     	;# 
  3671  0018                     	;# 
  3672  001C                     	;# 
  3673  001C                     	;# 
  3674  001D                     	;# 
  3675  001D                     	;# 
  3676  001E                     	;# 
  3677  001F                     	;# 
  3678  008C                     	;# 
  3679  008C                     	;# 
  3680  008D                     	;# 
  3681  008E                     	;# 
  3682  008E                     	;# 
  3683  008F                     	;# 
  3684  0090                     	;# 
  3685  0090                     	;# 
  3686  0091                     	;# 
  3687  0093                     	;# 
  3688  0094                     	;# 
  3689  0095                     	;# 
  3690  0096                     	;# 
  3691  0097                     	;# 
  3692  0098                     	;# 
  3693  0099                     	;# 
  3694  009A                     	;# 
  3695  009B                     	;# 
  3696  009C                     	;# 
  3697  009D                     	;# 
  3698  009E                     	;# 
  3699  010C                     	;# 
  3700  010D                     	;# 
  3701  010E                     	;# 
  3702  010E                     	;# 
  3703  010F                     	;# 
  3704  0110                     	;# 
  3705  0110                     	;# 
  3706  0111                     	;# 
  3707  0112                     	;# 
  3708  0112                     	;# 
  3709  0113                     	;# 
  3710  0114                     	;# 
  3711  0114                     	;# 
  3712  0115                     	;# 
  3713  0116                     	;# 
  3714  0116                     	;# 
  3715  0117                     	;# 
  3716  0119                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  011A                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011B                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011C                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011D                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011E                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011F                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  018C                     	;# 
  3742  018D                     	;# 
  3743  018E                     	;# 
  3744  018F                     	;# 
  3745  0190                     	;# 
  3746  0191                     	;# 
  3747  0192                     	;# 
  3748  0196                     	;# 
  3749  0197                     	;# 
  3750  0198                     	;# 
  3751  0199                     	;# 
  3752  019A                     	;# 
  3753  019B                     	;# 
  3754  019C                     	;# 
  3755  020C                     	;# 
  3756  020D                     	;# 
  3757  020E                     	;# 
  3758  020F                     	;# 
  3759  020F                     	;# 
  3760  0210                     	;# 
  3761  0210                     	;# 
  3762  0211                     	;# 
  3763  0211                     	;# 
  3764  0212                     	;# 
  3765  0213                     	;# 
  3766  0214                     	;# 
  3767  0215                     	;# 
  3768  0215                     	;# 
  3769  0216                     	;# 
  3770  0216                     	;# 
  3771  0217                     	;# 
  3772  0217                     	;# 
  3773  0218                     	;# 
  3774  0219                     	;# 
  3775  021A                     	;# 
  3776  021B                     	;# 
  3777  021B                     	;# 
  3778  021C                     	;# 
  3779  021C                     	;# 
  3780  021D                     	;# 
  3781  021D                     	;# 
  3782  021E                     	;# 
  3783  021F                     	;# 
  3784  028C                     	;# 
  3785  028C                     	;# 
  3786  028D                     	;# 
  3787  028D                     	;# 
  3788  028E                     	;# 
  3789  028F                     	;# 
  3790  0290                     	;# 
  3791  0290                     	;# 
  3792  0291                     	;# 
  3793  0292                     	;# 
  3794  0292                     	;# 
  3795  0293                     	;# 
  3796  0293                     	;# 
  3797  0294                     	;# 
  3798  0295                     	;# 
  3799  0296                     	;# 
  3800  0296                     	;# 
  3801  0297                     	;# 
  3802  0298                     	;# 
  3803  0298                     	;# 
  3804  0299                     	;# 
  3805  0299                     	;# 
  3806  029A                     	;# 
  3807  029B                     	;# 
  3808  029C                     	;# 
  3809  029C                     	;# 
  3810  029D                     	;# 
  3811  030C                     	;# 
  3812  030C                     	;# 
  3813  030D                     	;# 
  3814  030E                     	;# 
  3815  030F                     	;# 
  3816  0310                     	;# 
  3817  0310                     	;# 
  3818  0311                     	;# 
  3819  0312                     	;# 
  3820  0313                     	;# 
  3821  0314                     	;# 
  3822  0314                     	;# 
  3823  0315                     	;# 
  3824  0316                     	;# 
  3825  0317                     	;# 
  3826  0318                     	;# 
  3827  0318                     	;# 
  3828  0319                     	;# 
  3829  031A                     	;# 
  3830  031B                     	;# 
  3831  031C                     	;# 
  3832  031C                     	;# 
  3833  031D                     	;# 
  3834  031E                     	;# 
  3835  031F                     	;# 
  3836  038C                     	;# 
  3837  038D                     	;# 
  3838  038E                     	;# 
  3839  0390                     	;# 
  3840  0391                     	;# 
  3841  0392                     	;# 
  3842  040C                     	;# 
  3843  040D                     	;# 
  3844  040E                     	;# 
  3845  040F                     	;# 
  3846  0410                     	;# 
  3847  0411                     	;# 
  3848  0416                     	;# 
  3849  0416                     	;# 
  3850  0417                     	;# 
  3851  0418                     	;# 
  3852  0418                     	;# 
  3853  0419                     	;# 
  3854  041A                     	;# 
  3855  041A                     	;# 
  3856  041B                     	;# 
  3857  041C                     	;# 
  3858  041C                     	;# 
  3859  041D                     	;# 
  3860  041E                     	;# 
  3861  041F                     	;# 
  3862  048C                     	;# 
  3863  048C                     	;# 
  3864  048D                     	;# 
  3865  048E                     	;# 
  3866  048F                     	;# 
  3867  048F                     	;# 
  3868  0490                     	;# 
  3869  0491                     	;# 
  3870  0492                     	;# 
  3871  0492                     	;# 
  3872  0493                     	;# 
  3873  0494                     	;# 
  3874  0495                     	;# 
  3875  0495                     	;# 
  3876  0496                     	;# 
  3877  0497                     	;# 
  3878  0498                     	;# 
  3879  0499                     	;# 
  3880  049A                     	;# 
  3881  049B                     	;# 
  3882  049C                     	;# 
  3883  049D                     	;# 
  3884  050C                     	;# 
  3885  050C                     	;# 
  3886  050D                     	;# 
  3887  050E                     	;# 
  3888  050F                     	;# 
  3889  050F                     	;# 
  3890  0510                     	;# 
  3891  0511                     	;# 
  3892  0512                     	;# 
  3893  0512                     	;# 
  3894  0513                     	;# 
  3895  0514                     	;# 
  3896  0515                     	;# 
  3897  0515                     	;# 
  3898  0516                     	;# 
  3899  0517                     	;# 
  3900  0518                     	;# 
  3901  0519                     	;# 
  3902  051A                     	;# 
  3903  051B                     	;# 
  3904  051C                     	;# 
  3905  051D                     	;# 
  3906  058C                     	;# 
  3907  058C                     	;# 
  3908  058D                     	;# 
  3909  058E                     	;# 
  3910  058F                     	;# 
  3911  058F                     	;# 
  3912  0590                     	;# 
  3913  0591                     	;# 
  3914  0592                     	;# 
  3915  0593                     	;# 
  3916  060C                     	;# 
  3917  060D                     	;# 
  3918  060E                     	;# 
  3919  060F                     	;# 
  3920  0610                     	;# 
  3921  0611                     	;# 
  3922  0612                     	;# 
  3923  0613                     	;# 
  3924  0614                     	;# 
  3925  0616                     	;# 
  3926  0617                     	;# 
  3927  0618                     	;# 
  3928  0619                     	;# 
  3929  061A                     	;# 
  3930  061B                     	;# 
  3931  061C                     	;# 
  3932  061D                     	;# 
  3933  061E                     	;# 
  3934  068C                     	;# 
  3935  068D                     	;# 
  3936  068E                     	;# 
  3937  068F                     	;# 
  3938  0690                     	;# 
  3939  0691                     	;# 
  3940  0692                     	;# 
  3941  0693                     	;# 
  3942  0694                     	;# 
  3943  070C                     	;# 
  3944  070D                     	;# 
  3945  070E                     	;# 
  3946  070F                     	;# 
  3947  0710                     	;# 
  3948  0711                     	;# 
  3949  0712                     	;# 
  3950  0713                     	;# 
  3951  0714                     	;# 
  3952  0716                     	;# 
  3953  0717                     	;# 
  3954  0718                     	;# 
  3955  0719                     	;# 
  3956  071A                     	;# 
  3957  071B                     	;# 
  3958  071C                     	;# 
  3959  071D                     	;# 
  3960  071E                     	;# 
  3961  0796                     	;# 
  3962  0797                     	;# 
  3963  0798                     	;# 
  3964  0799                     	;# 
  3965  079A                     	;# 
  3966  079B                     	;# 
  3967  080C                     	;# 
  3968  080D                     	;# 
  3969  080E                     	;# 
  3970  080F                     	;# 
  3971  0810                     	;# 
  3972  0811                     	;# 
  3973  0812                     	;# 
  3974  0813                     	;# 
  3975  0814                     	;# 
  3976  081A                     	;# 
  3977  081B                     	;# 
  3978  081C                     	;# 
  3979  081D                     	;# 
  3980  081E                     	;# 
  3981  081F                     	;# 
  3982  088C                     	;# 
  3983  088D                     	;# 
  3984  088E                     	;# 
  3985  088F                     	;# 
  3986  0890                     	;# 
  3987  0891                     	;# 
  3988  0892                     	;# 
  3989  0893                     	;# 
  3990  0895                     	;# 
  3991  0896                     	;# 
  3992  0897                     	;# 
  3993  0898                     	;# 
  3994  0899                     	;# 
  3995  089A                     	;# 
  3996  089B                     	;# 
  3997  090C                     	;# 
  3998  090E                     	;# 
  3999  090F                     	;# 
  4000  091F                     	;# 
  4001  091F                     	;# 
  4002  098F                     	;# 
  4003  098F                     	;# 
  4004  0990                     	;# 
  4005  0991                     	;# 
  4006  0992                     	;# 
  4007  0993                     	;# 
  4008  0994                     	;# 
  4009  0995                     	;# 
  4010  0996                     	;# 
  4011  0997                     	;# 
  4012  0E0F                     	;# 
  4013  0E10                     	;# 
  4014  0E11                     	;# 
  4015  0E12                     	;# 
  4016  0E13                     	;# 
  4017  0E14                     	;# 
  4018  0E15                     	;# 
  4019  0E16                     	;# 
  4020  0E17                     	;# 
  4021  0E18                     	;# 
  4022  0E19                     	;# 
  4023  0E1A                     	;# 
  4024  0E1B                     	;# 
  4025  0E1C                     	;# 
  4026  0E1D                     	;# 
  4027  0E1E                     	;# 
  4028  0E1F                     	;# 
  4029  0E20                     	;# 
  4030  0E21                     	;# 
  4031  0E22                     	;# 
  4032  0E23                     	;# 
  4033  0E24                     	;# 
  4034  0E25                     	;# 
  4035  0E26                     	;# 
  4036  0E27                     	;# 
  4037  0E28                     	;# 
  4038  0E29                     	;# 
  4039  0E2A                     	;# 
  4040  0E2B                     	;# 
  4041  0E2C                     	;# 
  4042  0E2D                     	;# 
  4043  0E2E                     	;# 
  4044  0E2F                     	;# 
  4045  0E30                     	;# 
  4046  0E31                     	;# 
  4047  0E32                     	;# 
  4048  0E33                     	;# 
  4049  0E34                     	;# 
  4050  0E35                     	;# 
  4051  0E36                     	;# 
  4052  0E37                     	;# 
  4053  0E8F                     	;# 
  4054  0E90                     	;# 
  4055  0E91                     	;# 
  4056  0E92                     	;# 
  4057  0E93                     	;# 
  4058  0E94                     	;# 
  4059  0E95                     	;# 
  4060  0E96                     	;# 
  4061  0E97                     	;# 
  4062  0E9C                     	;# 
  4063  0E9D                     	;# 
  4064  0E9E                     	;# 
  4065  0EA1                     	;# 
  4066  0EA2                     	;# 
  4067  0EA3                     	;# 
  4068  0EA4                     	;# 
  4069  0EA5                     	;# 
  4070  0EA9                     	;# 
  4071  0EAA                     	;# 
  4072  0EAB                     	;# 
  4073  0EAC                     	;# 
  4074  0EB1                     	;# 
  4075  0EB2                     	;# 
  4076  0EB3                     	;# 
  4077  0EB8                     	;# 
  4078  0EB9                     	;# 
  4079  0EBA                     	;# 
  4080  0EBB                     	;# 
  4081  0EBC                     	;# 
  4082  0EBD                     	;# 
  4083  0EBE                     	;# 
  4084  0EC3                     	;# 
  4085  0EC5                     	;# 
  4086  0EC6                     	;# 
  4087  0EC7                     	;# 
  4088  0EC8                     	;# 
  4089  0EC9                     	;# 
  4090  0ECA                     	;# 
  4091  0ECB                     	;# 
  4092  0ECC                     	;# 
  4093  0F10                     	;# 
  4094  0F11                     	;# 
  4095  0F12                     	;# 
  4096  0F13                     	;# 
  4097  0F14                     	;# 
  4098  0F15                     	;# 
  4099  0F16                     	;# 
  4100  0F17                     	;# 
  4101  0F18                     	;# 
  4102  0F19                     	;# 
  4103  0F1A                     	;# 
  4104  0F1B                     	;# 
  4105  0F1C                     	;# 
  4106  0F1D                     	;# 
  4107  0F1E                     	;# 
  4108  0F1F                     	;# 
  4109  0F20                     	;# 
  4110  0F21                     	;# 
  4111  0F22                     	;# 
  4112  0F23                     	;# 
  4113  0F24                     	;# 
  4114  0F25                     	;# 
  4115  0F26                     	;# 
  4116  0F27                     	;# 
  4117  0F38                     	;# 
  4118  0F39                     	;# 
  4119  0F3A                     	;# 
  4120  0F3B                     	;# 
  4121  0F3C                     	;# 
  4122  0F3D                     	;# 
  4123  0F3E                     	;# 
  4124  0F3F                     	;# 
  4125  0F40                     	;# 
  4126  0F41                     	;# 
  4127  0F43                     	;# 
  4128  0F44                     	;# 
  4129  0F45                     	;# 
  4130  0F46                     	;# 
  4131  0F47                     	;# 
  4132  0F48                     	;# 
  4133  0F49                     	;# 
  4134  0F4A                     	;# 
  4135  0F4B                     	;# 
  4136  0F4C                     	;# 
  4137  0F4E                     	;# 
  4138  0F4F                     	;# 
  4139  0F50                     	;# 
  4140  0F51                     	;# 
  4141  0F52                     	;# 
  4142  0F53                     	;# 
  4143  0F54                     	;# 
  4144  0F55                     	;# 
  4145  0F56                     	;# 
  4146  0F57                     	;# 
  4147  0F65                     	;# 
  4148  0F68                     	;# 
  4149  0F69                     	;# 
  4150  0F6A                     	;# 
  4151  0F6B                     	;# 
  4152  0FE4                     	;# 
  4153  0FE5                     	;# 
  4154  0FE6                     	;# 
  4155  0FE7                     	;# 
  4156  0FE8                     	;# 
  4157  0FE9                     	;# 
  4158  0FEA                     	;# 
  4159  0FEB                     	;# 
  4160  0FED                     	;# 
  4161  0FEE                     	;# 
  4162  0FEF                     	;# 
  4163  0000                     	;# 
  4164  0001                     	;# 
  4165  0002                     	;# 
  4166  0003                     	;# 
  4167  0004                     	;# 
  4168  0005                     	;# 
  4169  0006                     	;# 
  4170  0007                     	;# 
  4171  0008                     	;# 
  4172  0009                     	;# 
  4173  000A                     	;# 
  4174  000B                     	;# 
  4175  000C                     	;# 
  4176  000D                     	;# 
  4177  000E                     	;# 
  4178  0010                     	;# 
  4179  0011                     	;# 
  4180  0012                     	;# 
  4181  0013                     	;# 
  4182  0016                     	;# 
  4183  0017                     	;# 
  4184  0018                     	;# 
  4185  001C                     	;# 
  4186  001C                     	;# 
  4187  001D                     	;# 
  4188  001D                     	;# 
  4189  001E                     	;# 
  4190  001F                     	;# 
  4191  008C                     	;# 
  4192  008C                     	;# 
  4193  008D                     	;# 
  4194  008E                     	;# 
  4195  008E                     	;# 
  4196  008F                     	;# 
  4197  0090                     	;# 
  4198  0090                     	;# 
  4199  0091                     	;# 
  4200  0093                     	;# 
  4201  0094                     	;# 
  4202  0095                     	;# 
  4203  0096                     	;# 
  4204  0097                     	;# 
  4205  0098                     	;# 
  4206  0099                     	;# 
  4207  009A                     	;# 
  4208  009B                     	;# 
  4209  009C                     	;# 
  4210  009D                     	;# 
  4211  009E                     	;# 
  4212  010C                     	;# 
  4213  010D                     	;# 
  4214  010E                     	;# 
  4215  010E                     	;# 
  4216  010F                     	;# 
  4217  0110                     	;# 
  4218  0110                     	;# 
  4219  0111                     	;# 
  4220  0112                     	;# 
  4221  0112                     	;# 
  4222  0113                     	;# 
  4223  0114                     	;# 
  4224  0114                     	;# 
  4225  0115                     	;# 
  4226  0116                     	;# 
  4227  0116                     	;# 
  4228  0117                     	;# 
  4229  0119                     	;# 
  4230  0119                     	;# 
  4231  0119                     	;# 
  4232  011A                     	;# 
  4233  011A                     	;# 
  4234  011A                     	;# 
  4235  011B                     	;# 
  4236  011B                     	;# 
  4237  011B                     	;# 
  4238  011B                     	;# 
  4239  011B                     	;# 
  4240  011C                     	;# 
  4241  011C                     	;# 
  4242  011C                     	;# 
  4243  011D                     	;# 
  4244  011D                     	;# 
  4245  011D                     	;# 
  4246  011E                     	;# 
  4247  011E                     	;# 
  4248  011E                     	;# 
  4249  011F                     	;# 
  4250  011F                     	;# 
  4251  011F                     	;# 
  4252  011F                     	;# 
  4253  011F                     	;# 
  4254  018C                     	;# 
  4255  018D                     	;# 
  4256  018E                     	;# 
  4257  018F                     	;# 
  4258  0190                     	;# 
  4259  0191                     	;# 
  4260  0192                     	;# 
  4261  0196                     	;# 
  4262  0197                     	;# 
  4263  0198                     	;# 
  4264  0199                     	;# 
  4265  019A                     	;# 
  4266  019B                     	;# 
  4267  019C                     	;# 
  4268  020C                     	;# 
  4269  020D                     	;# 
  4270  020E                     	;# 
  4271  020F                     	;# 
  4272  020F                     	;# 
  4273  0210                     	;# 
  4274  0210                     	;# 
  4275  0211                     	;# 
  4276  0211                     	;# 
  4277  0212                     	;# 
  4278  0213                     	;# 
  4279  0214                     	;# 
  4280  0215                     	;# 
  4281  0215                     	;# 
  4282  0216                     	;# 
  4283  0216                     	;# 
  4284  0217                     	;# 
  4285  0217                     	;# 
  4286  0218                     	;# 
  4287  0219                     	;# 
  4288  021A                     	;# 
  4289  021B                     	;# 
  4290  021B                     	;# 
  4291  021C                     	;# 
  4292  021C                     	;# 
  4293  021D                     	;# 
  4294  021D                     	;# 
  4295  021E                     	;# 
  4296  021F                     	;# 
  4297  028C                     	;# 
  4298  028C                     	;# 
  4299  028D                     	;# 
  4300  028D                     	;# 
  4301  028E                     	;# 
  4302  028F                     	;# 
  4303  0290                     	;# 
  4304  0290                     	;# 
  4305  0291                     	;# 
  4306  0292                     	;# 
  4307  0292                     	;# 
  4308  0293                     	;# 
  4309  0293                     	;# 
  4310  0294                     	;# 
  4311  0295                     	;# 
  4312  0296                     	;# 
  4313  0296                     	;# 
  4314  0297                     	;# 
  4315  0298                     	;# 
  4316  0298                     	;# 
  4317  0299                     	;# 
  4318  0299                     	;# 
  4319  029A                     	;# 
  4320  029B                     	;# 
  4321  029C                     	;# 
  4322  029C                     	;# 
  4323  029D                     	;# 
  4324  030C                     	;# 
  4325  030C                     	;# 
  4326  030D                     	;# 
  4327  030E                     	;# 
  4328  030F                     	;# 
  4329  0310                     	;# 
  4330  0310                     	;# 
  4331  0311                     	;# 
  4332  0312                     	;# 
  4333  0313                     	;# 
  4334  0314                     	;# 
  4335  0314                     	;# 
  4336  0315                     	;# 
  4337  0316                     	;# 
  4338  0317                     	;# 
  4339  0318                     	;# 
  4340  0318                     	;# 
  4341  0319                     	;# 
  4342  031A                     	;# 
  4343  031B                     	;# 
  4344  031C                     	;# 
  4345  031C                     	;# 
  4346  031D                     	;# 
  4347  031E                     	;# 
  4348  031F                     	;# 
  4349  038C                     	;# 
  4350  038D                     	;# 
  4351  038E                     	;# 
  4352  0390                     	;# 
  4353  0391                     	;# 
  4354  0392                     	;# 
  4355  040C                     	;# 
  4356  040D                     	;# 
  4357  040E                     	;# 
  4358  040F                     	;# 
  4359  0410                     	;# 
  4360  0411                     	;# 
  4361  0416                     	;# 
  4362  0416                     	;# 
  4363  0417                     	;# 
  4364  0418                     	;# 
  4365  0418                     	;# 
  4366  0419                     	;# 
  4367  041A                     	;# 
  4368  041A                     	;# 
  4369  041B                     	;# 
  4370  041C                     	;# 
  4371  041C                     	;# 
  4372  041D                     	;# 
  4373  041E                     	;# 
  4374  041F                     	;# 
  4375  048C                     	;# 
  4376  048C                     	;# 
  4377  048D                     	;# 
  4378  048E                     	;# 
  4379  048F                     	;# 
  4380  048F                     	;# 
  4381  0490                     	;# 
  4382  0491                     	;# 
  4383  0492                     	;# 
  4384  0492                     	;# 
  4385  0493                     	;# 
  4386  0494                     	;# 
  4387  0495                     	;# 
  4388  0495                     	;# 
  4389  0496                     	;# 
  4390  0497                     	;# 
  4391  0498                     	;# 
  4392  0499                     	;# 
  4393  049A                     	;# 
  4394  049B                     	;# 
  4395  049C                     	;# 
  4396  049D                     	;# 
  4397  050C                     	;# 
  4398  050C                     	;# 
  4399  050D                     	;# 
  4400  050E                     	;# 
  4401  050F                     	;# 
  4402  050F                     	;# 
  4403  0510                     	;# 
  4404  0511                     	;# 
  4405  0512                     	;# 
  4406  0512                     	;# 
  4407  0513                     	;# 
  4408  0514                     	;# 
  4409  0515                     	;# 
  4410  0515                     	;# 
  4411  0516                     	;# 
  4412  0517                     	;# 
  4413  0518                     	;# 
  4414  0519                     	;# 
  4415  051A                     	;# 
  4416  051B                     	;# 
  4417  051C                     	;# 
  4418  051D                     	;# 
  4419  058C                     	;# 
  4420  058C                     	;# 
  4421  058D                     	;# 
  4422  058E                     	;# 
  4423  058F                     	;# 
  4424  058F                     	;# 
  4425  0590                     	;# 
  4426  0591                     	;# 
  4427  0592                     	;# 
  4428  0593                     	;# 
  4429  060C                     	;# 
  4430  060D                     	;# 
  4431  060E                     	;# 
  4432  060F                     	;# 
  4433  0610                     	;# 
  4434  0611                     	;# 
  4435  0612                     	;# 
  4436  0613                     	;# 
  4437  0614                     	;# 
  4438  0616                     	;# 
  4439  0617                     	;# 
  4440  0618                     	;# 
  4441  0619                     	;# 
  4442  061A                     	;# 
  4443  061B                     	;# 
  4444  061C                     	;# 
  4445  061D                     	;# 
  4446  061E                     	;# 
  4447  068C                     	;# 
  4448  068D                     	;# 
  4449  068E                     	;# 
  4450  068F                     	;# 
  4451  0690                     	;# 
  4452  0691                     	;# 
  4453  0692                     	;# 
  4454  0693                     	;# 
  4455  0694                     	;# 
  4456  070C                     	;# 
  4457  070D                     	;# 
  4458  070E                     	;# 
  4459  070F                     	;# 
  4460  0710                     	;# 
  4461  0711                     	;# 
  4462  0712                     	;# 
  4463  0713                     	;# 
  4464  0714                     	;# 
  4465  0716                     	;# 
  4466  0717                     	;# 
  4467  0718                     	;# 
  4468  0719                     	;# 
  4469  071A                     	;# 
  4470  071B                     	;# 
  4471  071C                     	;# 
  4472  071D                     	;# 
  4473  071E                     	;# 
  4474  0796                     	;# 
  4475  0797                     	;# 
  4476  0798                     	;# 
  4477  0799                     	;# 
  4478  079A                     	;# 
  4479  079B                     	;# 
  4480  080C                     	;# 
  4481  080D                     	;# 
  4482  080E                     	;# 
  4483  080F                     	;# 
  4484  0810                     	;# 
  4485  0811                     	;# 
  4486  0812                     	;# 
  4487  0813                     	;# 
  4488  0814                     	;# 
  4489  081A                     	;# 
  4490  081B                     	;# 
  4491  081C                     	;# 
  4492  081D                     	;# 
  4493  081E                     	;# 
  4494  081F                     	;# 
  4495  088C                     	;# 
  4496  088D                     	;# 
  4497  088E                     	;# 
  4498  088F                     	;# 
  4499  0890                     	;# 
  4500  0891                     	;# 
  4501  0892                     	;# 
  4502  0893                     	;# 
  4503  0895                     	;# 
  4504  0896                     	;# 
  4505  0897                     	;# 
  4506  0898                     	;# 
  4507  0899                     	;# 
  4508  089A                     	;# 
  4509  089B                     	;# 
  4510  090C                     	;# 
  4511  090E                     	;# 
  4512  090F                     	;# 
  4513  091F                     	;# 
  4514  091F                     	;# 
  4515  098F                     	;# 
  4516  098F                     	;# 
  4517  0990                     	;# 
  4518  0991                     	;# 
  4519  0992                     	;# 
  4520  0993                     	;# 
  4521  0994                     	;# 
  4522  0995                     	;# 
  4523  0996                     	;# 
  4524  0997                     	;# 
  4525  0E0F                     	;# 
  4526  0E10                     	;# 
  4527  0E11                     	;# 
  4528  0E12                     	;# 
  4529  0E13                     	;# 
  4530  0E14                     	;# 
  4531  0E15                     	;# 
  4532  0E16                     	;# 
  4533  0E17                     	;# 
  4534  0E18                     	;# 
  4535  0E19                     	;# 
  4536  0E1A                     	;# 
  4537  0E1B                     	;# 
  4538  0E1C                     	;# 
  4539  0E1D                     	;# 
  4540  0E1E                     	;# 
  4541  0E1F                     	;# 
  4542  0E20                     	;# 
  4543  0E21                     	;# 
  4544  0E22                     	;# 
  4545  0E23                     	;# 
  4546  0E24                     	;# 
  4547  0E25                     	;# 
  4548  0E26                     	;# 
  4549  0E27                     	;# 
  4550  0E28                     	;# 
  4551  0E29                     	;# 
  4552  0E2A                     	;# 
  4553  0E2B                     	;# 
  4554  0E2C                     	;# 
  4555  0E2D                     	;# 
  4556  0E2E                     	;# 
  4557  0E2F                     	;# 
  4558  0E30                     	;# 
  4559  0E31                     	;# 
  4560  0E32                     	;# 
  4561  0E33                     	;# 
  4562  0E34                     	;# 
  4563  0E35                     	;# 
  4564  0E36                     	;# 
  4565  0E37                     	;# 
  4566  0E8F                     	;# 
  4567  0E90                     	;# 
  4568  0E91                     	;# 
  4569  0E92                     	;# 
  4570  0E93                     	;# 
  4571  0E94                     	;# 
  4572  0E95                     	;# 
  4573  0E96                     	;# 
  4574  0E97                     	;# 
  4575  0E9C                     	;# 
  4576  0E9D                     	;# 
  4577  0E9E                     	;# 
  4578  0EA1                     	;# 
  4579  0EA2                     	;# 
  4580  0EA3                     	;# 
  4581  0EA4                     	;# 
  4582  0EA5                     	;# 
  4583  0EA9                     	;# 
  4584  0EAA                     	;# 
  4585  0EAB                     	;# 
  4586  0EAC                     	;# 
  4587  0EB1                     	;# 
  4588  0EB2                     	;# 
  4589  0EB3                     	;# 
  4590  0EB8                     	;# 
  4591  0EB9                     	;# 
  4592  0EBA                     	;# 
  4593  0EBB                     	;# 
  4594  0EBC                     	;# 
  4595  0EBD                     	;# 
  4596  0EBE                     	;# 
  4597  0EC3                     	;# 
  4598  0EC5                     	;# 
  4599  0EC6                     	;# 
  4600  0EC7                     	;# 
  4601  0EC8                     	;# 
  4602  0EC9                     	;# 
  4603  0ECA                     	;# 
  4604  0ECB                     	;# 
  4605  0ECC                     	;# 
  4606  0F10                     	;# 
  4607  0F11                     	;# 
  4608  0F12                     	;# 
  4609  0F13                     	;# 
  4610  0F14                     	;# 
  4611  0F15                     	;# 
  4612  0F16                     	;# 
  4613  0F17                     	;# 
  4614  0F18                     	;# 
  4615  0F19                     	;# 
  4616  0F1A                     	;# 
  4617  0F1B                     	;# 
  4618  0F1C                     	;# 
  4619  0F1D                     	;# 
  4620  0F1E                     	;# 
  4621  0F1F                     	;# 
  4622  0F20                     	;# 
  4623  0F21                     	;# 
  4624  0F22                     	;# 
  4625  0F23                     	;# 
  4626  0F24                     	;# 
  4627  0F25                     	;# 
  4628  0F26                     	;# 
  4629  0F27                     	;# 
  4630  0F38                     	;# 
  4631  0F39                     	;# 
  4632  0F3A                     	;# 
  4633  0F3B                     	;# 
  4634  0F3C                     	;# 
  4635  0F3D                     	;# 
  4636  0F3E                     	;# 
  4637  0F3F                     	;# 
  4638  0F40                     	;# 
  4639  0F41                     	;# 
  4640  0F43                     	;# 
  4641  0F44                     	;# 
  4642  0F45                     	;# 
  4643  0F46                     	;# 
  4644  0F47                     	;# 
  4645  0F48                     	;# 
  4646  0F49                     	;# 
  4647  0F4A                     	;# 
  4648  0F4B                     	;# 
  4649  0F4C                     	;# 
  4650  0F4E                     	;# 
  4651  0F4F                     	;# 
  4652  0F50                     	;# 
  4653  0F51                     	;# 
  4654  0F52                     	;# 
  4655  0F53                     	;# 
  4656  0F54                     	;# 
  4657  0F55                     	;# 
  4658  0F56                     	;# 
  4659  0F57                     	;# 
  4660  0F65                     	;# 
  4661  0F68                     	;# 
  4662  0F69                     	;# 
  4663  0F6A                     	;# 
  4664  0F6B                     	;# 
  4665  0FE4                     	;# 
  4666  0FE5                     	;# 
  4667  0FE6                     	;# 
  4668  0FE7                     	;# 
  4669  0FE8                     	;# 
  4670  0FE9                     	;# 
  4671  0FEA                     	;# 
  4672  0FEB                     	;# 
  4673  0FED                     	;# 
  4674  0FEE                     	;# 
  4675  0FEF                     	;# 
  4676                           
  4677                           	psect	idataBANK1
  4678  17AE                     __pidataBANK1:	
  4679                           
  4680                           ;initializer for _Kd
  4681  17AE  3401               	retlw	1
  4682  17AF  3400               	retlw	0
  4683                           
  4684                           ;initializer for _Ki
  4685  17B0  3401               	retlw	1
  4686  17B1  3400               	retlw	0
  4687                           
  4688                           ;initializer for _Kp
  4689  17B2  3404               	retlw	4
  4690  17B3  3400               	retlw	0
  4691                           
  4692                           	psect	idataBANK3
  4693  0828                     __pidataBANK3:	
  4694                           
  4695                           ;initializer for ___cgram
  4696  0828  340C               	retlw	12
  4697  0829  3412               	retlw	18
  4698  082A  3412               	retlw	18
  4699  082B  340C               	retlw	12
  4700  082C  3400               	retlw	0
  4701  082D  3400               	retlw	0
  4702  082E  3400               	retlw	0
  4703  082F  3400               	retlw	0
  4704  0830  3408               	retlw	8
  4705  0831  3404               	retlw	4
  4706  0832  3402               	retlw	2
  4707  0833  341F               	retlw	31
  4708  0834  3402               	retlw	2
  4709  0835  3404               	retlw	4
  4710  0836  3408               	retlw	8
  4711  0837  3400               	retlw	0
  4712                           
  4713                           ;initializer for _channels
  4714  0838  3401               	retlw	1
  4715  0839  3400               	retlw	0
  4716  083A  3403               	retlw	3
  4717  083B  3400               	retlw	0
  4718                           
  4719                           ;initializer for _pidMaxOutput
  4720  083C  34FF               	retlw	255
  4721  083D  3407               	retlw	7
  4722                           
  4723                           	psect	stringtext
  4724  1000                     __pstringtext:	
  4725  1000                     log@coeff:	
  4726  1000  3400               	retlw	0
  4727  1001  3400               	retlw	0
  4728  1002  3400               	retlw	0
  4729  1003  3400               	retlw	0
  4730  1004  3480               	retlw	128
  4731  1005  343F               	retlw	63
  4732  1006  34F0               	retlw	240
  4733  1007  34FF               	retlw	255
  4734  1008  34BE               	retlw	190
  4735  1009  34E2               	retlw	226
  4736  100A  34A9               	retlw	169
  4737  100B  343E               	retlw	62
  4738  100C  3483               	retlw	131
  4739  100D  3476               	retlw	118
  4740  100E  34BE               	retlw	190
  4741  100F  34AE               	retlw	174
  4742  1010  342B               	retlw	43
  4743  1011  343E               	retlw	62
  4744  1012  343C               	retlw	60
  4745  1013  34C3               	retlw	195
  4746  1014  34BD               	retlw	189
  4747  1015  34D2               	retlw	210
  4748  1016  3413               	retlw	19
  4749  1017  343D               	retlw	61
  4750  1018  3478               	retlw	120
  4751  1019  34D3               	retlw	211
  4752  101A  34BB               	retlw	187
  4753  101B                     __end_oflog@coeff:	
  4754  0016                     _LATA	set	22
  4755  0017                     _LATB	set	23
  4756  0018                     _LATC	set	24
  4757  0011                     _TRISA	set	17
  4758  0012                     _TRISB	set	18
  4759  0013                     _TRISC	set	19
  4760  005F                     _GIE	set	95
  4761  00C2                     _LATC2	set	194
  4762  0060                     _RA0	set	96
  4763  0062                     _RA2	set	98
  4764  0066                     _RA6	set	102
  4765  0067                     _RA7	set	103
  4766  0068                     _RB0	set	104
  4767  0069                     _RB1	set	105
  4768  0070                     _RC0	set	112
  4769  0071                     _RC1	set	113
  4770  009D                     _ADACQ	set	157
  4771  0099                     _ADACT	set	153
  4772  009B                     _ADCAP	set	155
  4773  0098                     _ADCLK	set	152
  4774  0093                     _ADCON0	set	147
  4775  0093                     _ADCON0bits	set	147
  4776  0094                     _ADCON1	set	148
  4777  0095                     _ADCON2	set	149
  4778  0096                     _ADCON3	set	150
  4779  009E                     _ADPCH	set	158
  4780  009C                     _ADPRE	set	156
  4781  009A                     _ADREF	set	154
  4782  008D                     _ADRESH	set	141
  4783  008C                     _ADRESL	set	140
  4784  0097                     _ADSTAT	set	151
  4785  010F                     _ADLTHH	set	271
  4786  010E                     _ADLTHL	set	270
  4787  010D                     _ADRPT	set	269
  4788  0113                     _ADSTPTH	set	275
  4789  0112                     _ADSTPTL	set	274
  4790  0111                     _ADUTHH	set	273
  4791  0110                     _ADUTHL	set	272
  4792  021F                     _CCPTMRS1bits	set	543
  4793  0290                     _T2CLKCON	set	656
  4794  028E                     _T2CON	set	654
  4795  028E                     _T2CONbits	set	654
  4796  028F                     _T2HLT	set	655
  4797  028D                     _T2PR	set	653
  4798  0291                     _T2RST	set	657
  4799  028C                     _T2TMR	set	652
  4800  0392                     _PWM7CON	set	914
  4801  0391                     _PWM7DCH	set	913
  4802  0390                     _PWM7DCL	set	912
  4803  0716                     _PIE0bits	set	1814
  4804  0710                     _PIR4bits	set	1808
  4805  088D                     _OSCCON1	set	2189
  4806  088F                     _OSCCON3	set	2191
  4807  0891                     _OSCEN	set	2193
  4808  0893                     _OSCFRQ	set	2195
  4809  0892                     _OSCTUNE	set	2194
  4810  090C                     _FVRCON	set	2316
  4811  0E8F                     _PPSLOCK	set	3727
  4812  0E8F                     _PPSLOCKbits	set	3727
  4813  0F38                     _ANSELA	set	3896
  4814  0F43                     _ANSELB	set	3907
  4815  0F4E                     _ANSELC	set	3918
  4816  0F23                     _RC3PPS	set	3875
  4817  0F39                     _WPUA	set	3897
  4818  0F44                     _WPUB	set	3908
  4819  0F4F                     _WPUC	set	3919
  4820  0F65                     _WPUE	set	3941
  4821  101B                     STR_2:	
  4822  101B  344F               	retlw	79	;'O'
  4823  101C  3475               	retlw	117	;'u'
  4824  101D  3474               	retlw	116	;'t'
  4825  101E  3470               	retlw	112	;'p'
  4826  101F  3475               	retlw	117	;'u'
  4827  1020  3474               	retlw	116	;'t'
  4828  1021  343A               	retlw	58	;':'
  4829  1022  3400               	retlw	0
  4830  1023                     STR_1:	
  4831  1023  3450               	retlw	80	;'P'
  4832  1024  3469               	retlw	105	;'i'
  4833  1025  3474               	retlw	116	;'t'
  4834  1026  343A               	retlw	58	;':'
  4835  1027  3400               	retlw	0
  4836                           
  4837                           ; #config settings
  4838  0000                     
  4839                           	psect	cinit
  4840  07C6                     start_initialization:	
  4841  07C6                     __initialization:	
  4842                           
  4843                           ; Initialize objects allocated to BANK1
  4844  07C6  30AE               	movlw	low __pidataBANK1
  4845  07C7  0084               	movwf	4
  4846  07C8  3097               	movlw	(high __pidataBANK1)| (0+128)
  4847  07C9  0085               	movwf	5
  4848  07CA  30E8               	movlw	low __pdataBANK1
  4849  07CB  0086               	movwf	6
  4850  07CC  3000               	movlw	high __pdataBANK1
  4851  07CD  0087               	movwf	7
  4852  07CE  3006               	movlw	6
  4853  07CF  3197  27A8  3187   	fcall	init_ram
  4854                           
  4855                           ; Initialize objects allocated to BANK3
  4856  07D2  3028               	movlw	low __pidataBANK3
  4857  07D3  0084               	movwf	4
  4858  07D4  3088               	movlw	(high __pidataBANK3)| (0+128)
  4859  07D5  0085               	movwf	5
  4860  07D6  30A0               	movlw	low __pdataBANK3
  4861  07D7  0086               	movwf	6
  4862  07D8  3001               	movlw	high __pdataBANK3
  4863  07D9  0087               	movwf	7
  4864  07DA  3016               	movlw	22
  4865  07DB  3197  27A8  3187   	fcall	init_ram
  4866                           
  4867                           ; Clear objects allocated to BANK1
  4868  07DE  30C8               	movlw	low __pbssBANK1
  4869  07DF  0084               	movwf	4
  4870  07E0  3000               	movlw	high __pbssBANK1
  4871  07E1  0085               	movwf	5
  4872  07E2  3020               	movlw	32
  4873  07E3  3197  27A2  3187   	fcall	clear_ram0
  4874                           
  4875                           ; Clear objects allocated to BANK3
  4876  07E6  30C4               	movlw	low __pbssBANK3
  4877  07E7  0084               	movwf	4
  4878  07E8  3001               	movlw	high __pbssBANK3
  4879  07E9  0085               	movwf	5
  4880  07EA  3009               	movlw	9
  4881  07EB  3197  27A2  3187   	fcall	clear_ram0
  4882                           
  4883                           ; Clear objects allocated to BANK4
  4884  07EE  3020               	movlw	low __pbssBANK4
  4885  07EF  0084               	movwf	4
  4886  07F0  3002               	movlw	high __pbssBANK4
  4887  07F1  0085               	movwf	5
  4888  07F2  3050               	movlw	80
  4889  07F3  3197  27A2  3187   	fcall	clear_ram0
  4890                           
  4891                           ; Clear objects allocated to BANK5
  4892  07F6  30A0               	movlw	low __pbssBANK5
  4893  07F7  0084               	movwf	4
  4894  07F8  3002               	movlw	high __pbssBANK5
  4895  07F9  0085               	movwf	5
  4896  07FA  3050               	movlw	80
  4897  07FB  3197  27A2         	fcall	clear_ram0
  4898  07FD                     end_of_initialization:	
  4899                           ;End of C runtime variable initialization code
  4900                           
  4901  07FD                     __end_of__initialization:	
  4902  07FD  0020               	movlb	0
  4903  07FE  3184  2C7C         	ljmp	_main	;jump to C main() function
  4904                           
  4905                           	psect	bssBANK1
  4906  00C8                     __pbssBANK1:	
  4907  00C8                     _totals:	
  4908  00C8                     	ds	8
  4909  00D0                     _Result:	
  4910  00D0                     	ds	2
  4911  00D2                     _derivativeValue:	
  4912  00D2                     	ds	2
  4913  00D4                     _errno:	
  4914  00D4                     	ds	2
  4915  00D6                     _error:	
  4916  00D6                     	ds	2
  4917  00D8                     _errorValue:	
  4918  00D8                     	ds	2
  4919  00DA                     _lastSign:	
  4920  00DA                     	ds	2
  4921  00DC                     _pidCount:	
  4922  00DC                     	ds	2
  4923  00DE                     _pidIntegrated:	
  4924  00DE                     	ds	2
  4925  00E0                     _pidMinOutput:	
  4926  00E0                     	ds	2
  4927  00E2                     _pidPrevError:	
  4928  00E2                     	ds	2
  4929  00E4                     _sampleIndex:	
  4930  00E4                     	ds	2
  4931  00E6                     _signPositive:	
  4932  00E6                     	ds	2
  4933                           
  4934                           	psect	dataBANK1
  4935  00E8                     __pdataBANK1:	
  4936  00E8                     _Kd:	
  4937  00E8                     	ds	2
  4938  00EA                     _Ki:	
  4939  00EA                     	ds	2
  4940  00EC                     _Kp:	
  4941  00EC                     	ds	2
  4942                           
  4943                           	psect	bssBANK3
  4944  01C4                     __pbssBANK3:	
  4945  01C4                     LCD_Write_Int@F13690:	
  4946  01C4                     	ds	5
  4947  01C9                     main@F13660:	
  4948  01C9                     	ds	4
  4949                           
  4950                           	psect	dataBANK3
  4951  01A0                     __pdataBANK3:	
  4952  01A0                     ___cgram:	
  4953  01A0                     	ds	16
  4954  01B0                     _channels:	
  4955  01B0                     	ds	4
  4956  01B4                     _pidMaxOutput:	
  4957  01B4                     	ds	2
  4958                           
  4959                           	psect	bssBANK4
  4960  0220                     __pbssBANK4:	
  4961  0220                     _samples:	
  4962  0220                     	ds	80
  4963                           
  4964                           	psect	bssBANK5
  4965  02A0                     __pbssBANK5:	
  4966  02A0                     main@F13668:	
  4967  02A0                     	ds	80
  4968                           
  4969                           	psect	inittext
  4970  17A8                     init_ram:	
  4971  17A8  00FE               	movwf	126
  4972  17A9                     initloop:	
  4973  17A9  0012               	moviw fsr0++
  4974  17AA  001E               	movwi fsr1++
  4975  17AB  0BFE               	decfsz	126,f
  4976  17AC  2FA9               	goto	initloop
  4977  17AD  3400               	retlw	0
  4978                           
  4979                           	psect	clrtext
  4980  17A2                     clear_ram0:	
  4981                           ;	Called with FSR0 containing the base address, and
  4982                           ;	WREG with the size to clear
  4983                           
  4984  17A2  0064               	clrwdt	;clear the watchdog before getting into this loop
  4985  17A3                     clrloop0:	
  4986  17A3  0180               	clrf	0	;clear RAM location pointed to by FSR
  4987  17A4  3101               	addfsr 0,1
  4988  17A5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4989  17A6  2FA3               	goto	clrloop0	;have we reached the end yet?
  4990  17A7  3400               	retlw	0	;all done for this memory range, return
  4991                           
  4992                           	psect	cstackBANK3
  4993  01B6                     __pcstackBANK3:	
  4994  01B6                     main@outputTotal:	
  4995                           
  4996                           ; 4 bytes @ 0x0
  4997  01B6                     	ds	4
  4998  01BA                     main@dutyCycle6:	
  4999                           
  5000                           ; 2 bytes @ 0x4
  5001  01BA                     	ds	2
  5002  01BC                     main@analogs:	
  5003                           
  5004                           ; 4 bytes @ 0x6
  5005  01BC                     	ds	4
  5006  01C0                     main@j:	
  5007                           
  5008                           ; 1 bytes @ 0xA
  5009  01C0                     	ds	1
  5010  01C1                     main@set:	
  5011                           
  5012                           ; 2 bytes @ 0xB
  5013  01C1                     	ds	2
  5014  01C3                     main@delayCount:	
  5015                           
  5016                           ; 1 bytes @ 0xD
  5017  01C3                     	ds	1
  5018                           
  5019                           	psect	cstackBANK2
  5020  0120                     __pcstackBANK2:	
  5021  0120                     main@outputSamples:	
  5022                           
  5023                           ; 80 bytes @ 0x0
  5024  0120                     	ds	80
  5025                           
  5026                           	psect	cstackBANK1
  5027  00A0                     __pcstackBANK1:	
  5028  00A0                     ??___fttol:	
  5029                           
  5030                           ; 1 bytes @ 0x0
  5031  00A0                     	ds	4
  5032  00A4                     ___fttol@sign1:	
  5033                           
  5034                           ; 1 bytes @ 0x4
  5035  00A4                     	ds	1
  5036  00A5                     ___fttol@lval:	
  5037                           
  5038                           ; 4 bytes @ 0x5
  5039  00A5                     	ds	4
  5040  00A9                     ___fttol@exp1:	
  5041                           
  5042                           ; 1 bytes @ 0x9
  5043  00A9                     	ds	1
  5044  00AA                     ??_main:	
  5045                           
  5046                           ; 1 bytes @ 0xA
  5047  00AA                     	ds	10
  5048  00B4                     main@choice:	
  5049                           
  5050                           ; 1 bytes @ 0x14
  5051  00B4                     	ds	1
  5052  00B5                     main@C_or_F:	
  5053                           
  5054                           ; 1 bytes @ 0x15
  5055  00B5                     	ds	1
  5056  00B6                     main@startDelay:	
  5057                           
  5058                           ; 1 bytes @ 0x16
  5059  00B6                     	ds	1
  5060  00B7                     main@resetDelay:	
  5061                           
  5062                           ; 1 bytes @ 0x17
  5063  00B7                     	ds	1
  5064  00B8                     main@tPadCount:	
  5065                           
  5066                           ; 1 bytes @ 0x18
  5067  00B8                     	ds	1
  5068  00B9                     main@output:	
  5069                           
  5070                           ; 2 bytes @ 0x19
  5071  00B9                     	ds	2
  5072  00BB                     main@holdOutput:	
  5073                           
  5074                           ; 1 bytes @ 0x1B
  5075  00BB                     	ds	1
  5076  00BC                     main@lidOpenCount:	
  5077                           
  5078                           ; 1 bytes @ 0x1C
  5079  00BC                     	ds	1
  5080  00BD                     main@dutyCycle7:	
  5081                           
  5082                           ; 2 bytes @ 0x1D
  5083  00BD                     	ds	2
  5084  00BF                     main@menuDelay:	
  5085                           
  5086                           ; 1 bytes @ 0x1F
  5087  00BF                     	ds	1
  5088  00C0                     main@loop:	
  5089                           
  5090                           ; 1 bytes @ 0x20
  5091  00C0                     	ds	1
  5092  00C1                     main@lastTemperature:	
  5093                           
  5094                           ; 2 bytes @ 0x21
  5095  00C1                     	ds	2
  5096  00C3                     main@pidPeriodCounter:	
  5097                           
  5098                           ; 2 bytes @ 0x23
  5099  00C3                     	ds	2
  5100  00C5                     main@currentTemperature:	
  5101                           
  5102                           ; 2 bytes @ 0x25
  5103  00C5                     	ds	2
  5104  00C7                     main@outputIndex:	
  5105                           
  5106                           ; 1 bytes @ 0x27
  5107  00C7                     	ds	1
  5108                           
  5109                           	psect	cstackCOMMON
  5110  0070                     __pcstackCOMMON:	
  5111  0070                     ?___ftge:	
  5112  0070                     ?_LCD_Cmd:	
  5113                           ; 1 bit 
  5114                           
  5115  0070                     ?_LCD_Write_Char:	
  5116                           ; 1 bytes @ 0x0
  5117                           
  5118  0070                     ?_OSCILLATOR_Initialize:	
  5119                           ; 1 bytes @ 0x0
  5120                           
  5121  0070                     ??_OSCILLATOR_Initialize:	
  5122                           ; 1 bytes @ 0x0
  5123                           
  5124  0070                     ?_TMR2_Initialize:	
  5125                           ; 1 bytes @ 0x0
  5126                           
  5127  0070                     ??_TMR2_Initialize:	
  5128                           ; 1 bytes @ 0x0
  5129                           
  5130  0070                     ?_ADCC_Initialize:	
  5131                           ; 1 bytes @ 0x0
  5132                           
  5133  0070                     ??_ADCC_Initialize:	
  5134                           ; 1 bytes @ 0x0
  5135                           
  5136  0070                     ?_InitCustomChars:	
  5137                           ; 1 bytes @ 0x0
  5138                           
  5139  0070                     ?_LCD_Port:	
  5140                           ; 1 bytes @ 0x0
  5141                           
  5142  0070                     ??_LCD_Port:	
  5143                           ; 1 bytes @ 0x0
  5144                           
  5145  0070                     ?_LCD_Clear:	
  5146                           ; 1 bytes @ 0x0
  5147                           
  5148  0070                     ?_LCD_Init:	
  5149                           ; 1 bytes @ 0x0
  5150                           
  5151  0070                     ?_PIN_MANAGER_Initialize:	
  5152                           ; 1 bytes @ 0x0
  5153                           
  5154  0070                     ??_PIN_MANAGER_Initialize:	
  5155                           ; 1 bytes @ 0x0
  5156                           
  5157  0070                     ?_PWM_Initialize:	
  5158                           ; 1 bytes @ 0x0
  5159                           
  5160  0070                     ??_PWM_Initialize:	
  5161                           ; 1 bytes @ 0x0
  5162                           
  5163  0070                     ?_PWM7_LoadDutyValue:	
  5164                           ; 1 bytes @ 0x0
  5165                           
  5166  0070                     ?_SYSTEM_Initialize:	
  5167                           ; 1 bytes @ 0x0
  5168                           
  5169  0070                     ?_main:	
  5170                           ; 1 bytes @ 0x0
  5171                           
  5172  0070                     ?___bmul:	
  5173                           ; 1 bytes @ 0x0
  5174                           
  5175  0070                     ?_ADCRead:	
  5176                           ; 1 bytes @ 0x0
  5177                           
  5178  0070                     ?___wmul:	
  5179                           ; 2 bytes @ 0x0
  5180                           
  5181  0070                     ?___awdiv:	
  5182                           ; 2 bytes @ 0x0
  5183                           
  5184  0070                     ?___awmod:	
  5185                           ; 2 bytes @ 0x0
  5186                           
  5187  0070                     ?___ftpack:	
  5188                           ; 2 bytes @ 0x0
  5189                           
  5190  0070                     ?_frexp:	
  5191                           ; 3 bytes @ 0x0
  5192                           
  5193  0070                     ?___aldiv:	
  5194                           ; 3 bytes @ 0x0
  5195                           
  5196  0070                     LCD_Port@a:	
  5197                           ; 4 bytes @ 0x0
  5198                           
  5199  0070                     PIN_MANAGER_Initialize@state:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202  0070                     ___bmul@multiplicand:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208  0070                     ___wmul@multiplier:	
  5209                           ; 2 bytes @ 0x0
  5210                           
  5211  0070                     ___awdiv@divisor:	
  5212                           ; 2 bytes @ 0x0
  5213                           
  5214  0070                     ___awmod@divisor:	
  5215                           ; 2 bytes @ 0x0
  5216                           
  5217  0070                     ___ftpack@arg:	
  5218                           ; 2 bytes @ 0x0
  5219                           
  5220  0070                     ___ftge@ff1:	
  5221                           ; 3 bytes @ 0x0
  5222                           
  5223  0070                     frexp@value:	
  5224                           ; 3 bytes @ 0x0
  5225                           
  5226  0070                     ___aldiv@divisor:	
  5227                           ; 3 bytes @ 0x0
  5228                           
  5229                           
  5230                           ; 4 bytes @ 0x0
  5231  0070                     	ds	1
  5232  0071                     ??_LCD_Cmd:	
  5233  0071                     ??_LCD_Write_Char:	
  5234                           ; 1 bytes @ 0x1
  5235                           
  5236  0071                     ??___bmul:	
  5237                           ; 1 bytes @ 0x1
  5238                           
  5239                           
  5240                           ; 1 bytes @ 0x1
  5241  0071                     	ds	1
  5242  0072                     ??_PWM7_LoadDutyValue:	
  5243  0072                     LCD_Write_Char@temp:	
  5244                           ; 1 bytes @ 0x2
  5245                           
  5246  0072                     ___bmul@product:	
  5247                           ; 1 bytes @ 0x2
  5248                           
  5249  0072                     ___wmul@multiplicand:	
  5250                           ; 1 bytes @ 0x2
  5251                           
  5252  0072                     ___awdiv@dividend:	
  5253                           ; 2 bytes @ 0x2
  5254                           
  5255  0072                     ___awmod@dividend:	
  5256                           ; 2 bytes @ 0x2
  5257                           
  5258                           
  5259                           ; 2 bytes @ 0x2
  5260  0072                     	ds	1
  5261  0073                     ??_ADCRead:	
  5262  0073                     ADCRead@channel:	
  5263                           ; 1 bytes @ 0x3
  5264                           
  5265  0073                     LCD_Cmd@a:	
  5266                           ; 1 bytes @ 0x3
  5267                           
  5268  0073                     LCD_Write_Char@y:	
  5269                           ; 1 bytes @ 0x3
  5270                           
  5271  0073                     ___bmul@multiplier:	
  5272                           ; 1 bytes @ 0x3
  5273                           
  5274  0073                     ___ftpack@exp:	
  5275                           ; 1 bytes @ 0x3
  5276                           
  5277  0073                     frexp@eptr:	
  5278                           ; 1 bytes @ 0x3
  5279                           
  5280  0073                     ___ftge@ff2:	
  5281                           ; 1 bytes @ 0x3
  5282                           
  5283                           
  5284                           ; 3 bytes @ 0x3
  5285  0073                     	ds	1
  5286  0074                     ??_frexp:	
  5287  0074                     ??_LCD_Clear:	
  5288                           ; 1 bytes @ 0x4
  5289                           
  5290  0074                     ?_LCD_Set_Cursor:	
  5291                           ; 1 bytes @ 0x4
  5292                           
  5293  0074                     ??_LCD_Init:	
  5294                           ; 1 bytes @ 0x4
  5295                           
  5296  0074                     ??___wmul:	
  5297                           ; 1 bytes @ 0x4
  5298                           
  5299  0074                     ??___awdiv:	
  5300                           ; 1 bytes @ 0x4
  5301                           
  5302  0074                     ??___awmod:	
  5303                           ; 1 bytes @ 0x4
  5304                           
  5305  0074                     LCD_Set_Cursor@y:	
  5306                           ; 1 bytes @ 0x4
  5307                           
  5308  0074                     LCD_Write_Char@a:	
  5309                           ; 1 bytes @ 0x4
  5310                           
  5311  0074                     ___ftpack@sign:	
  5312                           ; 1 bytes @ 0x4
  5313                           
  5314  0074                     ___wmul@product:	
  5315                           ; 1 bytes @ 0x4
  5316                           
  5317  0074                     ___aldiv@dividend:	
  5318                           ; 2 bytes @ 0x4
  5319                           
  5320                           
  5321                           ; 4 bytes @ 0x4
  5322  0074                     	ds	1
  5323  0075                     ??___ftpack:	
  5324  0075                     ??_InitCustomChars:	
  5325                           ; 1 bytes @ 0x5
  5326                           
  5327  0075                     ??_LCD_Set_Cursor:	
  5328                           ; 1 bytes @ 0x5
  5329                           
  5330  0075                     ?_LCD_Write_String:	
  5331                           ; 1 bytes @ 0x5
  5332                           
  5333  0075                     ___awdiv@counter:	
  5334                           ; 1 bytes @ 0x5
  5335                           
  5336  0075                     ___awmod@counter:	
  5337                           ; 1 bytes @ 0x5
  5338                           
  5339  0075                     LCD_Write_String@a:	
  5340                           ; 1 bytes @ 0x5
  5341                           
  5342                           
  5343                           ; 2 bytes @ 0x5
  5344  0075                     	ds	1
  5345  0076                     ??___ftge:	
  5346  0076                     InitCustomChars@i:	
  5347                           ; 1 bytes @ 0x6
  5348                           
  5349  0076                     ___awdiv@sign:	
  5350                           ; 1 bytes @ 0x6
  5351                           
  5352  0076                     ___awmod@sign:	
  5353                           ; 1 bytes @ 0x6
  5354                           
  5355                           
  5356                           ; 1 bytes @ 0x6
  5357  0076                     	ds	1
  5358  0077                     ??_LCD_Write_String:	
  5359  0077                     LCD_Set_Cursor@x:	
  5360                           ; 1 bytes @ 0x7
  5361                           
  5362  0077                     LCD_Init@style:	
  5363                           ; 1 bytes @ 0x7
  5364                           
  5365  0077                     ___awdiv@quotient:	
  5366                           ; 1 bytes @ 0x7
  5367                           
  5368                           
  5369                           ; 2 bytes @ 0x7
  5370  0077                     	ds	1
  5371  0078                     ??_SYSTEM_Initialize:	
  5372  0078                     ??___aldiv:	
  5373                           ; 1 bytes @ 0x8
  5374                           
  5375  0078                     ?___awtoft:	
  5376                           ; 1 bytes @ 0x8
  5377                           
  5378  0078                     LCD_Set_Cursor@z:	
  5379                           ; 3 bytes @ 0x8
  5380                           
  5381  0078                     LCD_Write_String@i:	
  5382                           ; 1 bytes @ 0x8
  5383                           
  5384  0078                     ___awtoft@c:	
  5385                           ; 2 bytes @ 0x8
  5386                           
  5387                           
  5388                           ; 2 bytes @ 0x8
  5389  0078                     	ds	1
  5390  0079                     ?_LCD_Write_Int:	
  5391  0079                     LCD_Set_Cursor@w:	
  5392                           ; 1 bytes @ 0x9
  5393                           
  5394  0079                     readAnalog@analog_channel:	
  5395                           ; 1 bytes @ 0x9
  5396                           
  5397  0079                     LCD_Write_Int@value:	
  5398                           ; 2 bytes @ 0x9
  5399                           
  5400                           
  5401                           ; 2 bytes @ 0x9
  5402  0079                     	ds	1
  5403  007A                     LCD_Set_Cursor@temp:	
  5404                           
  5405                           ; 1 bytes @ 0xA
  5406  007A                     	ds	1
  5407  007B                     ??___awtoft:	
  5408  007B                     LCD_Write_Int@fieldLength:	
  5409                           ; 1 bytes @ 0xB
  5410                           
  5411  007B                     readAnalog@value:	
  5412                           ; 1 bytes @ 0xB
  5413                           
  5414                           
  5415                           ; 2 bytes @ 0xB
  5416  007B                     	ds	1
  5417  007C                     LCD_Write_Int@numPlaces:	
  5418                           
  5419                           ; 1 bytes @ 0xC
  5420  007C                     	ds	1
  5421  007D                     LCD_Write_Int@sign:	
  5422  007D                     ___awtoft@sign:	
  5423                           ; 1 bytes @ 0xD
  5424                           
  5425                           
  5426                           ; 1 bytes @ 0xD
  5427  007D                     	ds	1
  5428  007E                     ??_eval_poly:	
  5429  007E                     ??_tempCalc:	
  5430                           ; 1 bytes @ 0xE
  5431                           
  5432  007E                     ??___ftsub:	
  5433                           ; 1 bytes @ 0xE
  5434                           
  5435                           
  5436                           	psect	cstackBANK0
  5437  0020                     __pcstackBANK0:	
  5438                           ; 1 bytes @ 0xE
  5439                           
  5440  0020                     ??_LCD_Write_Int:	
  5441  0020                     ?_PID_Calculate:	
  5442                           ; 1 bytes @ 0x0
  5443                           
  5444  0020                     ?___ftmul:	
  5445                           ; 3 bytes @ 0x0
  5446                           
  5447  0020                     ___aldiv@counter:	
  5448                           ; 3 bytes @ 0x0
  5449                           
  5450  0020                     PID_Calculate@setpoint:	
  5451                           ; 1 bytes @ 0x0
  5452                           
  5453  0020                     ___ftmul@f1:	
  5454                           ; 2 bytes @ 0x0
  5455                           
  5456                           
  5457                           ; 3 bytes @ 0x0
  5458  0020                     	ds	1
  5459  0021                     ___aldiv@sign:	
  5460                           
  5461                           ; 1 bytes @ 0x1
  5462  0021                     	ds	1
  5463  0022                     PID_Calculate@temp:	
  5464  0022                     ___aldiv@quotient:	
  5465                           ; 2 bytes @ 0x2
  5466                           
  5467                           
  5468                           ; 4 bytes @ 0x2
  5469  0022                     	ds	1
  5470  0023                     ___ftmul@f2:	
  5471                           
  5472                           ; 3 bytes @ 0x3
  5473  0023                     	ds	1
  5474  0024                     ??_PID_Calculate:	
  5475                           
  5476                           ; 1 bytes @ 0x4
  5477  0024                     	ds	1
  5478  0025                     LCD_Write_Int@str:	
  5479                           
  5480                           ; 5 bytes @ 0x5
  5481  0025                     	ds	1
  5482  0026                     ??___ftmul:	
  5483  0026                     ?_readAnalog:	
  5484                           ; 1 bytes @ 0x6
  5485                           
  5486  0026                     readAnalog@channel:	
  5487                           ; 2 bytes @ 0x6
  5488                           
  5489                           
  5490                           ; 2 bytes @ 0x6
  5491  0026                     	ds	2
  5492  0028                     ??_readAnalog:	
  5493                           
  5494                           ; 1 bytes @ 0x8
  5495  0028                     	ds	2
  5496  002A                     ___ftmul@exp:	
  5497  002A                     LCD_Write_Int@j:	
  5498                           ; 1 bytes @ 0xA
  5499                           
  5500                           
  5501                           ; 2 bytes @ 0xA
  5502  002A                     	ds	1
  5503  002B                     ___ftmul@f3_as_product:	
  5504                           
  5505                           ; 3 bytes @ 0xB
  5506  002B                     	ds	1
  5507  002C                     LCD_Write_Int@i:	
  5508                           
  5509                           ; 2 bytes @ 0xC
  5510  002C                     	ds	2
  5511  002E                     ___ftmul@cntr:	
  5512                           
  5513                           ; 1 bytes @ 0xE
  5514  002E                     	ds	1
  5515  002F                     ___ftmul@sign:	
  5516                           
  5517                           ; 1 bytes @ 0xF
  5518  002F                     	ds	1
  5519  0030                     ?___ftdiv:	
  5520  0030                     ___ftdiv@f2:	
  5521                           ; 3 bytes @ 0x10
  5522                           
  5523                           
  5524                           ; 3 bytes @ 0x10
  5525  0030                     	ds	3
  5526  0033                     ___ftdiv@f1:	
  5527                           
  5528                           ; 3 bytes @ 0x13
  5529  0033                     	ds	3
  5530  0036                     ??___ftdiv:	
  5531                           
  5532                           ; 1 bytes @ 0x16
  5533  0036                     	ds	4
  5534  003A                     ___ftdiv@cntr:	
  5535                           
  5536                           ; 1 bytes @ 0x1A
  5537  003A                     	ds	1
  5538  003B                     ___ftdiv@f3:	
  5539                           
  5540                           ; 3 bytes @ 0x1B
  5541  003B                     	ds	3
  5542  003E                     ___ftdiv@exp:	
  5543                           
  5544                           ; 1 bytes @ 0x1E
  5545  003E                     	ds	1
  5546  003F                     ___ftdiv@sign:	
  5547                           
  5548                           ; 1 bytes @ 0x1F
  5549  003F                     	ds	1
  5550  0040                     ?___ftadd:	
  5551  0040                     ___ftadd@f1:	
  5552                           ; 3 bytes @ 0x20
  5553                           
  5554                           
  5555                           ; 3 bytes @ 0x20
  5556  0040                     	ds	3
  5557  0043                     ___ftadd@f2:	
  5558                           
  5559                           ; 3 bytes @ 0x23
  5560  0043                     	ds	3
  5561  0046                     ??___ftadd:	
  5562                           
  5563                           ; 1 bytes @ 0x26
  5564  0046                     	ds	4
  5565  004A                     ___ftadd@sign:	
  5566                           
  5567                           ; 1 bytes @ 0x2A
  5568  004A                     	ds	1
  5569  004B                     ___ftadd@exp2:	
  5570                           
  5571                           ; 1 bytes @ 0x2B
  5572  004B                     	ds	1
  5573  004C                     ___ftadd@exp1:	
  5574                           
  5575                           ; 1 bytes @ 0x2C
  5576  004C                     	ds	1
  5577  004D                     ?_eval_poly:	
  5578  004D                     ?___ftsub:	
  5579                           ; 3 bytes @ 0x2D
  5580                           
  5581  004D                     ___ftsub@f2:	
  5582                           ; 3 bytes @ 0x2D
  5583                           
  5584  004D                     eval_poly@x:	
  5585                           ; 3 bytes @ 0x2D
  5586                           
  5587                           
  5588                           ; 3 bytes @ 0x2D
  5589  004D                     	ds	3
  5590  0050                     eval_poly@d:	
  5591  0050                     ___ftsub@f1:	
  5592                           ; 2 bytes @ 0x30
  5593                           
  5594                           
  5595                           ; 3 bytes @ 0x30
  5596  0050                     	ds	2
  5597  0052                     eval_poly@n:	
  5598                           
  5599                           ; 2 bytes @ 0x32
  5600  0052                     	ds	2
  5601  0054                     eval_poly@res:	
  5602                           
  5603                           ; 3 bytes @ 0x34
  5604  0054                     	ds	3
  5605  0057                     ?_log:	
  5606  0057                     log@x:	
  5607                           ; 3 bytes @ 0x37
  5608                           
  5609                           
  5610                           ; 3 bytes @ 0x37
  5611  0057                     	ds	3
  5612  005A                     ??_log:	
  5613                           
  5614                           ; 1 bytes @ 0x3A
  5615  005A                     	ds	1
  5616  005B                     log@exponent:	
  5617                           
  5618                           ; 2 bytes @ 0x3B
  5619  005B                     	ds	2
  5620  005D                     ?_tempCalc:	
  5621  005D                     tempCalc@analogValue:	
  5622                           ; 3 bytes @ 0x3D
  5623                           
  5624                           
  5625                           ; 2 bytes @ 0x3D
  5626  005D                     	ds	3
  5627  0060                     tempCalc@R:	
  5628                           
  5629                           ; 3 bytes @ 0x40
  5630  0060                     	ds	3
  5631  0063                     _tempCalc$986:	
  5632                           
  5633                           ; 3 bytes @ 0x43
  5634  0063                     	ds	3
  5635  0066                     tempCalc@steinhart:	
  5636                           
  5637                           ; 3 bytes @ 0x46
  5638  0066                     	ds	3
  5639  0069                     ?___fttol:	
  5640  0069                     ___fttol@f1:	
  5641                           ; 4 bytes @ 0x49
  5642                           
  5643                           
  5644                           ; 3 bytes @ 0x49
  5645  0069                     	ds	4
  5646  006D                     main@bCount:	
  5647                           
  5648                           ; 2 bytes @ 0x4D
  5649  006D                     	ds	2
  5650  006F                     main@x:	
  5651                           
  5652                           ; 1 bytes @ 0x4F
  5653  006F                     	ds	1
  5654                           
  5655                           	psect	maintext
  5656  047C                     __pmaintext:	
  5657 ;;
  5658 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  5659 ;;
  5660 ;; *************** function _main *****************
  5661 ;; Defined at:
  5662 ;;		line 27 in file "main.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  outputSample   80    0[BANK2 ] int [40]
  5667 ;;  analogs         4    6[BANK3 ] unsigned int [2]
  5668 ;;  outputTotal     4    0[BANK3 ] long 
  5669 ;;  displayTemp2    3    0        float 
  5670 ;;  displayTemp     3    0        float 
  5671 ;;  set             2   11[BANK3 ] int 
  5672 ;;  dutyCycle6      2    4[BANK3 ] unsigned int 
  5673 ;;  currentTempe    2   37[BANK1 ] int 
  5674 ;;  pidPeriodCou    2   35[BANK1 ] int 
  5675 ;;  lastTemperat    2   33[BANK1 ] int 
  5676 ;;  dutyCycle7      2   29[BANK1 ] unsigned int 
  5677 ;;  output          2   25[BANK1 ] int 
  5678 ;;  bCount          2   77[BANK0 ] unsigned int 
  5679 ;;  delayCount      1   13[BANK3 ] unsigned char 
  5680 ;;  j               1   10[BANK3 ] unsigned char 
  5681 ;;  outputIndex     1   39[BANK1 ] unsigned char 
  5682 ;;  loop            1   32[BANK1 ] unsigned char 
  5683 ;;  menuDelay       1   31[BANK1 ] unsigned char 
  5684 ;;  lidOpenCount    1   28[BANK1 ] unsigned char 
  5685 ;;  holdOutput      1   27[BANK1 ] unsigned char 
  5686 ;;  tPadCount       1   24[BANK1 ] unsigned char 
  5687 ;;  resetDelay      1   23[BANK1 ] unsigned char 
  5688 ;;  startDelay      1   22[BANK1 ] unsigned char 
  5689 ;;  C_or_F          1   21[BANK1 ] unsigned char 
  5690 ;;  choice          1   20[BANK1 ] unsigned char 
  5691 ;;  x               1   79[BANK0 ] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      void 
  5694 ;; Registers used:
  5695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : B1F/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Locals:         0       3      20      80      14       0       0       0       0       0       0       0       
      +0       0
  5703 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Totals:         0       3      30      80      14       0       0       0       0       0       0       0       
      +0       0
  5705 ;;Total ram usage:      127 bytes
  5706 ;; Hardware stack levels required when called:    5
  5707 ;; This function calls:
  5708 ;;		_LCD_Clear
  5709 ;;		_LCD_Set_Cursor
  5710 ;;		_LCD_Write_Char
  5711 ;;		_LCD_Write_Int
  5712 ;;		_LCD_Write_String
  5713 ;;		_PID_Calculate
  5714 ;;		_PWM7_LoadDutyValue
  5715 ;;		_SYSTEM_Initialize
  5716 ;;		___aldiv
  5717 ;;		___fttol
  5718 ;;		_readAnalog
  5719 ;;		_tempCalc
  5720 ;; This function is called by:
  5721 ;;		Startup code after reset
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           
  5726                           ;psect for function _main
  5727  047C                     _main:	
  5728                           
  5729                           ;main.c: 31: SYSTEM_Initialize();
  5730                           
  5731                           ;incstack = 0
  5732                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5733  047C  3189  21E0  3184   	fcall	_SYSTEM_Initialize
  5734                           
  5735                           ;main.c: 33: uint16_t analogs[2] = {0};
  5736  047F  0023               	movlb	3	; select bank3
  5737  0480  084C               	movf	(main@F13660+3)^(0+384),w
  5738  0481  00BF               	movwf	(main@analogs+3)^(0+384)
  5739  0482  084B               	movf	(main@F13660+2)^(0+384),w
  5740  0483  00BE               	movwf	(main@analogs+2)^(0+384)
  5741  0484  084A               	movf	(main@F13660+1)^(0+384),w
  5742  0485  00BD               	movwf	(main@analogs+1)^(0+384)
  5743  0486  0849               	movf	main@F13660^(0+384),w
  5744  0487  00BC               	movwf	main@analogs^(0+384)
  5745                           
  5746                           ;main.c: 35: int set = 2250;
  5747  0488  30CA               	movlw	202
  5748  0489  00C1               	movwf	main@set^(0+384)
  5749  048A  3008               	movlw	8
  5750  048B  00C2               	movwf	(main@set^(0+384)+1)
  5751                           
  5752                           ;main.c: 37: char menuDelay = 0;
  5753  048C  0021               	movlb	1	; select bank1
  5754  048D  01BF               	clrf	main@menuDelay^(0+128)
  5755                           
  5756                           ;main.c: 39: char delayCount = 0;
  5757  048E  0023               	movlb	3	; select bank3
  5758  048F  01C3               	clrf	main@delayCount^(0+384)
  5759                           
  5760                           ;main.c: 41: int output = 0;
  5761  0490  0021               	movlb	1	; select bank1
  5762  0491  01B9               	clrf	main@output^(0+128)
  5763  0492  01BA               	clrf	(main@output+1)^(0+128)
  5764                           
  5765                           ;main.c: 43: int32_t outputTotal = 0;
  5766  0493  3000               	movlw	0
  5767  0494  0023               	movlb	3	; select bank3
  5768  0495  00B9               	movwf	(main@outputTotal+3)^(0+384)
  5769  0496  3000               	movlw	0
  5770  0497  00B8               	movwf	(main@outputTotal+2)^(0+384)
  5771  0498  3000               	movlw	0
  5772  0499  00B7               	movwf	(main@outputTotal+1)^(0+384)
  5773  049A  3000               	movlw	0
  5774  049B  00B6               	movwf	main@outputTotal^(0+384)
  5775                           
  5776                           ;main.c: 45: char outputIndex = 0;
  5777  049C  0021               	movlb	1	; select bank1
  5778  049D  01C7               	clrf	main@outputIndex^(0+128)
  5779                           
  5780                           ;main.c: 47: int16_t outputSamples[40]= {0};
  5781  049E  30A0               	movlw	low main@F13668
  5782  049F  0086               	movwf	6
  5783  04A0  3002               	movlw	high main@F13668
  5784  04A1  0087               	movwf	7
  5785  04A2  3020               	movlw	low main@outputSamples
  5786  04A3  0084               	movwf	4
  5787  04A4  3001               	movlw	high main@outputSamples
  5788  04A5  0085               	movwf	5
  5789  04A6  3050               	movlw	80
  5790  04A7  00AA               	movwf	??_main^(0+128)
  5791  04A8                     u3270:	
  5792  04A8  0016               	moviw fsr1++
  5793  04A9  001A               	movwi fsr0++
  5794  04AA  0BAA               	decfsz	??_main^(0+128),f
  5795  04AB  2CA8               	goto	u3270
  5796                           
  5797                           ;main.c: 49: char holdOutput = 0;
  5798  04AC  01BB               	clrf	main@holdOutput^(0+128)
  5799                           
  5800                           ;main.c: 51: int currentTemperature = 750;
  5801  04AD  30EE               	movlw	238
  5802  04AE  00C5               	movwf	main@currentTemperature^(0+128)
  5803  04AF  3002               	movlw	2
  5804  04B0  00C6               	movwf	(main@currentTemperature^(0+128)+1)
  5805                           
  5806                           ;main.c: 53: int lastTemperature = 750;
  5807  04B1  30EE               	movlw	238
  5808  04B2  00C1               	movwf	main@lastTemperature^(0+128)
  5809  04B3  3002               	movlw	2
  5810  04B4  00C2               	movwf	(main@lastTemperature^(0+128)+1)
  5811                           
  5812                           ;main.c: 55: char lidOpenCount = 0;
  5813  04B5  01BC               	clrf	main@lidOpenCount^(0+128)
  5814                           
  5815                           ;main.c: 57: float displayTemp, displayTemp2;
  5816                           ;main.c: 59: char j = 0;
  5817  04B6  0023               	movlb	3	; select bank3
  5818  04B7  01C0               	clrf	main@j^(0+384)
  5819                           
  5820                           ;main.c: 61: char x = 0;
  5821  04B8  0020               	movlb	0	; select bank0
  5822  04B9  01EF               	clrf	main@x
  5823                           
  5824                           ;main.c: 63: int pidPeriodCounter = 0;
  5825  04BA  0021               	movlb	1	; select bank1
  5826  04BB  01C3               	clrf	main@pidPeriodCounter^(0+128)
  5827  04BC  01C4               	clrf	(main@pidPeriodCounter+1)^(0+128)
  5828                           
  5829                           ;main.c: 65: extern int pidMaxOutput;
  5830                           ;main.c: 67: unsigned char loop = 64;
  5831  04BD  3040               	movlw	64
  5832  04BE  00AA               	movwf	??_main^(0+128)
  5833  04BF  082A               	movf	??_main^(0+128),w
  5834  04C0  00C0               	movwf	main@loop^(0+128)
  5835                           
  5836                           ;main.c: 69: char choice = 2;
  5837  04C1  3002               	movlw	2
  5838  04C2  00AA               	movwf	??_main^(0+128)
  5839  04C3  082A               	movf	??_main^(0+128),w
  5840  04C4  00B4               	movwf	main@choice^(0+128)
  5841                           
  5842                           ;main.c: 71: char C_or_F = 1;
  5843  04C5  01B5               	clrf	main@C_or_F^(0+128)
  5844  04C6  0AB5               	incf	main@C_or_F^(0+128),f
  5845                           
  5846                           ;main.c: 73: unsigned int bCount = 0;
  5847  04C7  0020               	movlb	0	; select bank0
  5848  04C8  01ED               	clrf	main@bCount
  5849  04C9  01EE               	clrf	main@bCount+1
  5850                           
  5851                           ;main.c: 75: unsigned char startDelay = 0;
  5852  04CA  0021               	movlb	1	; select bank1
  5853  04CB  01B6               	clrf	main@startDelay^(0+128)
  5854                           
  5855                           ;main.c: 77: unsigned char resetDelay = 0;
  5856  04CC  01B7               	clrf	main@resetDelay^(0+128)
  5857                           
  5858                           ;main.c: 79: unsigned char tPadCount = 10;
  5859  04CD  300A               	movlw	10
  5860  04CE  00AA               	movwf	??_main^(0+128)
  5861  04CF  082A               	movf	??_main^(0+128),w
  5862  04D0  00B8               	movwf	main@tPadCount^(0+128)
  5863                           
  5864                           ;main.c: 82: uint16_t dutyCycle6 = 0;
  5865  04D1  0023               	movlb	3	; select bank3
  5866  04D2  01BA               	clrf	main@dutyCycle6^(0+384)
  5867  04D3  01BB               	clrf	(main@dutyCycle6+1)^(0+384)
  5868                           
  5869                           ;main.c: 84: uint16_t dutyCycle7 = 523;
  5870  04D4  300B               	movlw	11
  5871  04D5  0021               	movlb	1	; select bank1
  5872  04D6  00BD               	movwf	main@dutyCycle7^(0+128)
  5873  04D7  3002               	movlw	2
  5874  04D8  00BE               	movwf	(main@dutyCycle7^(0+128)+1)
  5875                           
  5876                           ;main.c: 88: PWM7_LoadDutyValue(dutyCycle7);
  5877  04D9  083E               	movf	(main@dutyCycle7+1)^(0+128),w
  5878  04DA  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  5879  04DB  083D               	movf	main@dutyCycle7^(0+128),w
  5880  04DC  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  5881  04DD  3188  2012  3184   	fcall	_PWM7_LoadDutyValue
  5882                           
  5883                           ;main.c: 90: _delay((unsigned long)((300)*(32000000/4000.0)));
  5884  04E0  300D               	movlw	13
  5885  04E1  0021               	movlb	1	; select bank1
  5886  04E2  00AC               	movwf	(??_main^(0+128)+2)
  5887  04E3  302D               	movlw	45
  5888  04E4  00AB               	movwf	(??_main^(0+128)+1)
  5889  04E5  30E2               	movlw	226
  5890  04E6  00AA               	movwf	??_main^(0+128)
  5891  04E7                     u3517:	
  5892  04E7  0BAA               	decfsz	??_main^(0+128),f
  5893  04E8  2CE7               	goto	u3517
  5894  04E9  0BAB               	decfsz	(??_main^(0+128)+1),f
  5895  04EA  2CE7               	goto	u3517
  5896  04EB  0BAC               	decfsz	(??_main^(0+128)+2),f
  5897  04EC  2CE7               	goto	u3517
  5898  04ED  3200               	nop2
  5899                           
  5900                           ;main.c: 92: LCD_Clear();
  5901  04EE  3197  27B4  3184   	fcall	_LCD_Clear
  5902  04F1                     l2859:	
  5903                           ;main.c: 96: while (1)
  5904                           
  5905                           
  5906                           ;main.c: 97: {
  5907                           ;main.c: 98: if(loop>253)
  5908  04F1  30FE               	movlw	254
  5909  04F2  0021               	movlb	1	; select bank1
  5910  04F3  0240               	subwf	main@loop^(0+128),w
  5911  04F4  1C03               	skipc
  5912  04F5  2E7F               	goto	l2927
  5913                           
  5914                           ;main.c: 99: {
  5915                           ;main.c: 100: PWM7_LoadDutyValue(dutyCycle7);
  5916  04F6  083E               	movf	(main@dutyCycle7+1)^(0+128),w
  5917  04F7  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  5918  04F8  083D               	movf	main@dutyCycle7^(0+128),w
  5919  04F9  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  5920  04FA  3188  2012  3184   	fcall	_PWM7_LoadDutyValue
  5921                           
  5922                           ;main.c: 102: { LCD_Set_Cursor(0,0); LCD_Write_String("Pit:");};
  5923  04FD  01F4               	clrf	LCD_Set_Cursor@y
  5924  04FE  3000               	movlw	0
  5925  04FF  3189  21A1  3184   	fcall	_LCD_Set_Cursor
  5926  0502  3023               	movlw	low (STR_1| (0+32768))
  5927  0503  00F5               	movwf	LCD_Write_String@a
  5928  0504  3090               	movlw	high (STR_1| (0+32768))
  5929  0505  00F6               	movwf	LCD_Write_String@a+1
  5930  0506  3188  2056  3184   	fcall	_LCD_Write_String
  5931                           
  5932                           ;main.c: 103: { LCD_Set_Cursor(5,0); LCD_Write_Int(analogs[1],-1, 1, 0);};
  5933  0509  01F4               	clrf	LCD_Set_Cursor@y
  5934  050A  3005               	movlw	5
  5935  050B  3189  21A1  3184   	fcall	_LCD_Set_Cursor
  5936  050E  0023               	movlb	3	; select bank3
  5937  050F  083F               	movf	((main@analogs+1)^(0+384)+2),w
  5938  0510  00FA               	movwf	LCD_Write_Int@value+1
  5939  0511  083E               	movf	(main@analogs^(0+384)+2),w
  5940  0512  00F9               	movwf	LCD_Write_Int@value
  5941  0513  01FB               	clrf	LCD_Write_Int@fieldLength
  5942  0514  03FB               	decf	LCD_Write_Int@fieldLength,f
  5943  0515  01FC               	clrf	LCD_Write_Int@numPlaces
  5944  0516  0AFC               	incf	LCD_Write_Int@numPlaces,f
  5945  0517  01FD               	clrf	LCD_Write_Int@sign
  5946  0518  318F  2737  3184   	fcall	_LCD_Write_Int
  5947                           
  5948                           ;main.c: 104: LCD_Write_Char(0);
  5949  051B  3000               	movlw	0
  5950  051C  3189  2109  3184   	fcall	_LCD_Write_Char
  5951                           
  5952                           ;main.c: 105: LCD_Write_Char(70);
  5953  051F  3046               	movlw	70
  5954  0520  3189  2109  3184   	fcall	_LCD_Write_Char
  5955                           
  5956                           ;main.c: 106: LCD_Write_Char(' ');
  5957  0523  3020               	movlw	32
  5958  0524  3189  2109  3184   	fcall	_LCD_Write_Char
  5959                           
  5960                           ;main.c: 107: LCD_Write_Char(' ');
  5961  0527  3020               	movlw	32
  5962  0528  3189  2109  3184   	fcall	_LCD_Write_Char
  5963                           
  5964                           ;main.c: 109: { LCD_Set_Cursor(0,1); LCD_Write_String("Output:");};
  5965  052B  01F4               	clrf	LCD_Set_Cursor@y
  5966  052C  0AF4               	incf	LCD_Set_Cursor@y,f
  5967  052D  3000               	movlw	0
  5968  052E  3189  21A1  3184   	fcall	_LCD_Set_Cursor
  5969  0531  301B               	movlw	low (STR_2| (0+32768))
  5970  0532  00F5               	movwf	LCD_Write_String@a
  5971  0533  3090               	movlw	high (STR_2| (0+32768))
  5972  0534  00F6               	movwf	LCD_Write_String@a+1
  5973  0535  3188  2056  3184   	fcall	_LCD_Write_String
  5974                           
  5975                           ;main.c: 110: LCD_Write_Char(' ');
  5976  0538  3020               	movlw	32
  5977  0539  3189  2109  3184   	fcall	_LCD_Write_Char
  5978                           
  5979                           ;main.c: 111: LCD_Write_Int(dutyCycle6,5,0,0);
  5980  053C  0023               	movlb	3	; select bank3
  5981  053D  083B               	movf	(main@dutyCycle6+1)^(0+384),w
  5982  053E  00FA               	movwf	LCD_Write_Int@value+1
  5983  053F  083A               	movf	main@dutyCycle6^(0+384),w
  5984  0540  00F9               	movwf	LCD_Write_Int@value
  5985  0541  3005               	movlw	5
  5986  0542  0021               	movlb	1	; select bank1
  5987  0543  00AA               	movwf	??_main^(0+128)
  5988  0544  082A               	movf	??_main^(0+128),w
  5989  0545  00FB               	movwf	LCD_Write_Int@fieldLength
  5990  0546  01FC               	clrf	LCD_Write_Int@numPlaces
  5991  0547  01FD               	clrf	LCD_Write_Int@sign
  5992  0548  318F  2737  3184   	fcall	_LCD_Write_Int
  5993                           
  5994                           ;main.c: 121: if(holdOutput==0)
  5995  054B  0021               	movlb	1	; select bank1
  5996  054C  083B               	movf	main@holdOutput^(0+128),w
  5997  054D  1D03               	btfss	3,2
  5998  054E  2E1E               	goto	l2901
  5999                           
  6000                           ;main.c: 122: {
  6001                           ;main.c: 123: output = PID_Calculate(set,analogs[1]);
  6002  054F  0023               	movlb	3	; select bank3
  6003  0550  083F               	movf	((main@analogs+1)^(0+384)+2),w
  6004  0551  0020               	movlb	0	; select bank0
  6005  0552  00A3               	movwf	PID_Calculate@temp+1
  6006  0553  0023               	movlb	3	; select bank3
  6007  0554  083E               	movf	(main@analogs^(0+384)+2),w
  6008  0555  0020               	movlb	0	; select bank0
  6009  0556  00A2               	movwf	PID_Calculate@temp
  6010  0557  0023               	movlb	3	; select bank3
  6011  0558  0842               	movf	(main@set+1)^(0+384),w
  6012  0559  0020               	movlb	0	; select bank0
  6013  055A  00A1               	movwf	PID_Calculate@setpoint+1
  6014  055B  0023               	movlb	3	; select bank3
  6015  055C  0841               	movf	main@set^(0+384),w
  6016  055D  0020               	movlb	0	; select bank0
  6017  055E  00A0               	movwf	PID_Calculate@setpoint
  6018  055F  3181  2138  3184   	fcall	_PID_Calculate
  6019  0562  0020               	movlb	0	; select bank0
  6020  0563  0820               	movf	?_PID_Calculate,w
  6021  0564  00E9               	movwf	___fttol@f1
  6022  0565  0821               	movf	?_PID_Calculate+1,w
  6023  0566  00EA               	movwf	___fttol@f1+1
  6024  0567  0822               	movf	?_PID_Calculate+2,w
  6025  0568  00EB               	movwf	___fttol@f1+2
  6026  0569  318C  2485  3184   	fcall	___fttol
  6027  056C  0020               	movlb	0	; select bank0
  6028  056D  086A               	movf	?___fttol+1,w
  6029  056E  0021               	movlb	1	; select bank1
  6030  056F  00BA               	movwf	(main@output+1)^(0+128)
  6031  0570  0020               	movlb	0	; select bank0
  6032  0571  0869               	movf	?___fttol,w
  6033  0572  0021               	movlb	1	; select bank1
  6034  0573  00B9               	movwf	main@output^(0+128)
  6035                           
  6036                           ;main.c: 124: outputTotal = outputTotal - outputSamples[outputIndex];
  6037  0574  0023               	movlb	3	; select bank3
  6038  0575  0836               	movf	main@outputTotal^(0+384),w
  6039  0576  0021               	movlb	1	; select bank1
  6040  0577  00AA               	movwf	??_main^(0+128)
  6041  0578  0023               	movlb	3	; select bank3
  6042  0579  0837               	movf	(main@outputTotal+1)^(0+384),w
  6043  057A  0021               	movlb	1	; select bank1
  6044  057B  00AB               	movwf	(??_main^(0+128)+1)
  6045  057C  0023               	movlb	3	; select bank3
  6046  057D  0838               	movf	(main@outputTotal+2)^(0+384),w
  6047  057E  0021               	movlb	1	; select bank1
  6048  057F  00AC               	movwf	(??_main^(0+128)+2)
  6049  0580  0023               	movlb	3	; select bank3
  6050  0581  0839               	movf	(main@outputTotal+3)^(0+384),w
  6051  0582  0021               	movlb	1	; select bank1
  6052  0583  00AD               	movwf	(??_main^(0+128)+3)
  6053  0584  3547               	lslf	main@outputIndex^(0+128),w
  6054  0585  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6055  0586  0086               	movwf	6
  6056  0587  3001               	movlw	1	; select bank2/3
  6057  0588  0087               	movwf	7
  6058  0589  3F40               	moviw [0]fsr1
  6059  058A  00AE               	movwf	(??_main+4)^(0+128)
  6060  058B  3F41               	moviw [1]fsr1
  6061  058C  00AF               	movwf	((??_main+4)^(0+128)+1)
  6062  058D  082E               	movf	(??_main+4)^(0+128),w
  6063  058E  00B0               	movwf	(??_main+6)^(0+128)
  6064  058F  082F               	movf	(??_main+5)^(0+128),w
  6065  0590  00B1               	movwf	((??_main+6)^(0+128)+1)
  6066  0591  3000               	movlw	0
  6067  0592  1BB1               	btfsc	((??_main+6)^(0+128)+1),7
  6068  0593  30FF               	movlw	255
  6069  0594  00B2               	movwf	((??_main+6)^(0+128)+2)
  6070  0595  00B3               	movwf	((??_main+6)^(0+128)+3)
  6071  0596  09B0               	comf	(??_main+6)^(0+128),f
  6072  0597  09B1               	comf	((??_main+6)^(0+128)+1),f
  6073  0598  09B2               	comf	((??_main+6)^(0+128)+2),f
  6074  0599  09B3               	comf	((??_main+6)^(0+128)+3),f
  6075  059A  0AB0               	incf	(??_main+6)^(0+128),f
  6076  059B  1903               	skipnz
  6077  059C  0AB1               	incf	((??_main+6)^(0+128)+1),f
  6078  059D  1903               	skipnz
  6079  059E  0AB2               	incf	((??_main+6)^(0+128)+2),f
  6080  059F  1903               	skipnz
  6081  05A0  0AB3               	incf	((??_main+6)^(0+128)+3),f
  6082  05A1  0830               	movf	(??_main+6)^(0+128),w
  6083  05A2  07AA               	addwf	??_main^(0+128),f
  6084  05A3  0831               	movf	(??_main+7)^(0+128),w
  6085  05A4  3DAB               	addwfc	(??_main^(0+128)+1),f
  6086  05A5  0832               	movf	(??_main+8)^(0+128),w
  6087  05A6  3DAC               	addwfc	(??_main^(0+128)+2),f
  6088  05A7  0833               	movf	(??_main+9)^(0+128),w
  6089  05A8  3DAD               	addwfc	(??_main^(0+128)+3),f
  6090  05A9  082D               	movf	(??_main+3)^(0+128),w
  6091  05AA  0023               	movlb	3	; select bank3
  6092  05AB  00B9               	movwf	(main@outputTotal+3)^(0+384)
  6093  05AC  0021               	movlb	1	; select bank1
  6094  05AD  082C               	movf	(??_main+2)^(0+128),w
  6095  05AE  0023               	movlb	3	; select bank3
  6096  05AF  00B8               	movwf	(main@outputTotal+2)^(0+384)
  6097  05B0  0021               	movlb	1	; select bank1
  6098  05B1  082B               	movf	(??_main+1)^(0+128),w
  6099  05B2  0023               	movlb	3	; select bank3
  6100  05B3  00B7               	movwf	(main@outputTotal+1)^(0+384)
  6101  05B4  0021               	movlb	1	; select bank1
  6102  05B5  082A               	movf	??_main^(0+128),w
  6103  05B6  0023               	movlb	3	; select bank3
  6104  05B7  00B6               	movwf	main@outputTotal^(0+384)
  6105                           
  6106                           ;main.c: 125: outputSamples[outputIndex] = output;
  6107  05B8  0021               	movlb	1	; select bank1
  6108  05B9  3547               	lslf	main@outputIndex^(0+128),w
  6109  05BA  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6110  05BB  0086               	movwf	6
  6111  05BC  3001               	movlw	1	; select bank2/3
  6112  05BD  0087               	movwf	7
  6113  05BE  0839               	movf	main@output^(0+128),w
  6114  05BF  3FC0               	movwi [0]fsr1
  6115  05C0  083A               	movf	(main@output+1)^(0+128),w
  6116  05C1  3FC1               	movwi [1]fsr1
  6117                           
  6118                           ;main.c: 126: outputTotal = outputTotal + outputSamples[outputIndex];
  6119  05C2  0023               	movlb	3	; select bank3
  6120  05C3  0836               	movf	main@outputTotal^(0+384),w
  6121  05C4  0021               	movlb	1	; select bank1
  6122  05C5  00AA               	movwf	??_main^(0+128)
  6123  05C6  0023               	movlb	3	; select bank3
  6124  05C7  0837               	movf	(main@outputTotal+1)^(0+384),w
  6125  05C8  0021               	movlb	1	; select bank1
  6126  05C9  00AB               	movwf	(??_main^(0+128)+1)
  6127  05CA  0023               	movlb	3	; select bank3
  6128  05CB  0838               	movf	(main@outputTotal+2)^(0+384),w
  6129  05CC  0021               	movlb	1	; select bank1
  6130  05CD  00AC               	movwf	(??_main^(0+128)+2)
  6131  05CE  0023               	movlb	3	; select bank3
  6132  05CF  0839               	movf	(main@outputTotal+3)^(0+384),w
  6133  05D0  0021               	movlb	1	; select bank1
  6134  05D1  00AD               	movwf	(??_main^(0+128)+3)
  6135  05D2  3547               	lslf	main@outputIndex^(0+128),w
  6136  05D3  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6137  05D4  0086               	movwf	6
  6138  05D5  3001               	movlw	1	; select bank2/3
  6139  05D6  0087               	movwf	7
  6140  05D7  3F40               	moviw [0]fsr1
  6141  05D8  00AE               	movwf	(??_main+4)^(0+128)
  6142  05D9  3F41               	moviw [1]fsr1
  6143  05DA  00AF               	movwf	((??_main+4)^(0+128)+1)
  6144  05DB  082E               	movf	(??_main+4)^(0+128),w
  6145  05DC  00B0               	movwf	(??_main+6)^(0+128)
  6146  05DD  082F               	movf	(??_main+5)^(0+128),w
  6147  05DE  00B1               	movwf	((??_main+6)^(0+128)+1)
  6148  05DF  3000               	movlw	0
  6149  05E0  1BB1               	btfsc	((??_main+6)^(0+128)+1),7
  6150  05E1  30FF               	movlw	255
  6151  05E2  00B2               	movwf	((??_main+6)^(0+128)+2)
  6152  05E3  00B3               	movwf	((??_main+6)^(0+128)+3)
  6153  05E4  0830               	movf	(??_main+6)^(0+128),w
  6154  05E5  07AA               	addwf	??_main^(0+128),f
  6155  05E6  0831               	movf	(??_main+7)^(0+128),w
  6156  05E7  3DAB               	addwfc	(??_main^(0+128)+1),f
  6157  05E8  0832               	movf	(??_main+8)^(0+128),w
  6158  05E9  3DAC               	addwfc	(??_main^(0+128)+2),f
  6159  05EA  0833               	movf	(??_main+9)^(0+128),w
  6160  05EB  3DAD               	addwfc	(??_main^(0+128)+3),f
  6161  05EC  082D               	movf	(??_main+3)^(0+128),w
  6162  05ED  0023               	movlb	3	; select bank3
  6163  05EE  00B9               	movwf	(main@outputTotal+3)^(0+384)
  6164  05EF  0021               	movlb	1	; select bank1
  6165  05F0  082C               	movf	(??_main+2)^(0+128),w
  6166  05F1  0023               	movlb	3	; select bank3
  6167  05F2  00B8               	movwf	(main@outputTotal+2)^(0+384)
  6168  05F3  0021               	movlb	1	; select bank1
  6169  05F4  082B               	movf	(??_main+1)^(0+128),w
  6170  05F5  0023               	movlb	3	; select bank3
  6171  05F6  00B7               	movwf	(main@outputTotal+1)^(0+384)
  6172  05F7  0021               	movlb	1	; select bank1
  6173  05F8  082A               	movf	??_main^(0+128),w
  6174  05F9  0023               	movlb	3	; select bank3
  6175  05FA  00B6               	movwf	main@outputTotal^(0+384)
  6176                           
  6177                           ;main.c: 127: dutyCycle6 = outputTotal/40;
  6178  05FB  3000               	movlw	0
  6179  05FC  00F3               	movwf	___aldiv@divisor+3
  6180  05FD  3000               	movlw	0
  6181  05FE  00F2               	movwf	___aldiv@divisor+2
  6182  05FF  3000               	movlw	0
  6183  0600  00F1               	movwf	___aldiv@divisor+1
  6184  0601  3028               	movlw	40
  6185  0602  00F0               	movwf	___aldiv@divisor
  6186  0603  0839               	movf	(main@outputTotal+3)^(0+384),w
  6187  0604  00F7               	movwf	___aldiv@dividend+3
  6188  0605  0838               	movf	(main@outputTotal+2)^(0+384),w
  6189  0606  00F6               	movwf	___aldiv@dividend+2
  6190  0607  0837               	movf	(main@outputTotal+1)^(0+384),w
  6191  0608  00F5               	movwf	___aldiv@dividend+1
  6192  0609  0836               	movf	main@outputTotal^(0+384),w
  6193  060A  00F4               	movwf	___aldiv@dividend
  6194  060B  318B  237C  3184   	fcall	___aldiv
  6195  060E  0871               	movf	?___aldiv+1,w
  6196  060F  0023               	movlb	3	; select bank3
  6197  0610  00BB               	movwf	(main@dutyCycle6+1)^(0+384)
  6198  0611  0870               	movf	?___aldiv,w
  6199  0612  00BA               	movwf	main@dutyCycle6^(0+384)
  6200                           
  6201                           ;main.c: 129: outputIndex+=1;
  6202  0613  3001               	movlw	1
  6203  0614  0021               	movlb	1	; select bank1
  6204  0615  00AA               	movwf	??_main^(0+128)
  6205  0616  082A               	movf	??_main^(0+128),w
  6206  0617  07C7               	addwf	main@outputIndex^(0+128),f
  6207                           
  6208                           ;main.c: 130: if(outputIndex >= 40)outputIndex = 0;
  6209  0618  3028               	movlw	40
  6210  0619  0247               	subwf	main@outputIndex^(0+128),w
  6211  061A  1C03               	skipc
  6212  061B  2E24               	goto	l2905
  6213  061C  01C7               	clrf	main@outputIndex^(0+128)
  6214                           
  6215                           ;main.c: 131: }
  6216  061D  2E24               	goto	l2905
  6217  061E                     l2901:	
  6218                           
  6219                           ;main.c: 132: else
  6220                           ;main.c: 133: {
  6221                           ;main.c: 134: dutyCycle6=0;
  6222  061E  0023               	movlb	3	; select bank3
  6223  061F  01BA               	clrf	main@dutyCycle6^(0+384)
  6224  0620  01BB               	clrf	(main@dutyCycle6+1)^(0+384)
  6225                           
  6226                           ;main.c: 135: holdOutput-=1;
  6227  0621  3001               	movlw	1
  6228  0622  0021               	movlb	1	; select bank1
  6229  0623  02BB               	subwf	main@holdOutput^(0+128),f
  6230  0624                     l2905:	
  6231                           
  6232                           ;main.c: 136: }
  6233                           ;main.c: 138: currentTemperature=analogs[1];
  6234  0624  0023               	movlb	3	; select bank3
  6235  0625  083F               	movf	((main@analogs+1)^(0+384)+2),w
  6236  0626  0021               	movlb	1	; select bank1
  6237  0627  00C6               	movwf	(main@currentTemperature+1)^(0+128)
  6238  0628  0023               	movlb	3	; select bank3
  6239  0629  083E               	movf	(main@analogs^(0+384)+2),w
  6240  062A  0021               	movlb	1	; select bank1
  6241  062B  00C5               	movwf	main@currentTemperature^(0+128)
  6242                           
  6243                           ;main.c: 140: if(lidOpenCount<10)
  6244  062C  300A               	movlw	10
  6245  062D  023C               	subwf	main@lidOpenCount^(0+128),w
  6246  062E  1803               	skipnc
  6247  062F  2E35               	goto	l2911
  6248                           
  6249                           ;main.c: 141: {
  6250                           ;main.c: 142: lidOpenCount+=1;
  6251  0630  3001               	movlw	1
  6252  0631  00AA               	movwf	??_main^(0+128)
  6253  0632  082A               	movf	??_main^(0+128),w
  6254  0633  07BC               	addwf	main@lidOpenCount^(0+128),f
  6255                           
  6256                           ;main.c: 143: }
  6257  0634  2E3A               	goto	l2915
  6258  0635                     l2911:	
  6259                           
  6260                           ;main.c: 144: else
  6261                           ;main.c: 145: {
  6262                           ;main.c: 146: lastTemperature=currentTemperature;
  6263  0635  0846               	movf	(main@currentTemperature+1)^(0+128),w
  6264  0636  00C2               	movwf	(main@lastTemperature+1)^(0+128)
  6265  0637  0845               	movf	main@currentTemperature^(0+128),w
  6266  0638  00C1               	movwf	main@lastTemperature^(0+128)
  6267                           
  6268                           ;main.c: 147: lidOpenCount=0;
  6269  0639  01BC               	clrf	main@lidOpenCount^(0+128)
  6270  063A                     l2915:	
  6271                           
  6272                           ;main.c: 148: }
  6273                           ;main.c: 150: if(lastTemperature-currentTemperature>10 || lastTemperature-currentTempera
      +                          ture<-10)
  6274  063A  0945               	comf	main@currentTemperature^(0+128),w
  6275  063B  00AA               	movwf	??_main^(0+128)
  6276  063C  0946               	comf	(main@currentTemperature+1)^(0+128),w
  6277  063D  00AB               	movwf	(??_main^(0+128)+1)
  6278  063E  0AAA               	incf	??_main^(0+128),f
  6279  063F  1903               	skipnz
  6280  0640  0AAB               	incf	(??_main^(0+128)+1),f
  6281  0641  0841               	movf	main@lastTemperature^(0+128),w
  6282  0642  072A               	addwf	??_main^(0+128),w
  6283  0643  00AC               	movwf	(??_main+2)^(0+128)
  6284  0644  0842               	movf	(main@lastTemperature+1)^(0+128),w
  6285  0645  3D2B               	addwfc	(??_main+1)^(0+128),w
  6286  0646  00AD               	movwf	(??_main+3)^(0+128)
  6287  0647  082D               	movf	(??_main+3)^(0+128),w
  6288  0648  3A80               	xorlw	128
  6289  0649  00AE               	movwf	(??_main+4)^(0+128)
  6290  064A  3080               	movlw	128
  6291  064B  022E               	subwf	(??_main+4)^(0+128),w
  6292  064C  1D03               	skipz
  6293  064D  2E50               	goto	u3325
  6294  064E  300B               	movlw	11
  6295  064F  022C               	subwf	(??_main+2)^(0+128),w
  6296  0650                     u3325:	
  6297  0650  1803               	skipnc
  6298  0651  2E6B               	goto	l2919
  6299  0652  0021               	movlb	1	; select bank1
  6300  0653  0945               	comf	main@currentTemperature^(0+128),w
  6301  0654  00AA               	movwf	??_main^(0+128)
  6302  0655  0946               	comf	(main@currentTemperature+1)^(0+128),w
  6303  0656  00AB               	movwf	(??_main^(0+128)+1)
  6304  0657  0AAA               	incf	??_main^(0+128),f
  6305  0658  1903               	skipnz
  6306  0659  0AAB               	incf	(??_main^(0+128)+1),f
  6307  065A  0841               	movf	main@lastTemperature^(0+128),w
  6308  065B  072A               	addwf	??_main^(0+128),w
  6309  065C  00AC               	movwf	(??_main+2)^(0+128)
  6310  065D  0842               	movf	(main@lastTemperature+1)^(0+128),w
  6311  065E  3D2B               	addwfc	(??_main+1)^(0+128),w
  6312  065F  00AD               	movwf	(??_main+3)^(0+128)
  6313  0660  082D               	movf	(??_main+3)^(0+128),w
  6314  0661  3A80               	xorlw	128
  6315  0662  00AE               	movwf	(??_main+4)^(0+128)
  6316  0663  307F               	movlw	127
  6317  0664  022E               	subwf	(??_main+4)^(0+128),w
  6318  0665  1D03               	skipz
  6319  0666  2E69               	goto	u3335
  6320  0667  30F6               	movlw	246
  6321  0668  022C               	subwf	(??_main+2)^(0+128),w
  6322  0669                     u3335:	
  6323  0669  1803               	skipnc
  6324  066A  2E73               	goto	l2923
  6325  066B                     l2919:	
  6326                           
  6327                           ;main.c: 151: {
  6328                           ;main.c: 152: dutyCycle6=0;
  6329  066B  0023               	movlb	3	; select bank3
  6330  066C  01BA               	clrf	main@dutyCycle6^(0+384)
  6331  066D  01BB               	clrf	(main@dutyCycle6+1)^(0+384)
  6332                           
  6333                           ;main.c: 153: holdOutput=60;
  6334  066E  303C               	movlw	60
  6335  066F  0021               	movlb	1	; select bank1
  6336  0670  00AA               	movwf	??_main^(0+128)
  6337  0671  082A               	movf	??_main^(0+128),w
  6338  0672  00BB               	movwf	main@holdOutput^(0+128)
  6339  0673                     l2923:	
  6340                           
  6341                           ;main.c: 154: }
  6342                           ;main.c: 156: if(dutyCycle6<50)dutyCycle6=0;
  6343  0673  3000               	movlw	0
  6344  0674  0023               	movlb	3	; select bank3
  6345  0675  023B               	subwf	(main@dutyCycle6+1)^(0+384),w
  6346  0676  3032               	movlw	50
  6347  0677  1903               	skipnz
  6348  0678  023A               	subwf	main@dutyCycle6^(0+384),w
  6349  0679  1803               	skipnc
  6350  067A  2E7D               	goto	l346
  6351  067B  01BA               	clrf	main@dutyCycle6^(0+384)
  6352  067C  01BB               	clrf	(main@dutyCycle6+1)^(0+384)
  6353  067D                     l346:	
  6354                           
  6355                           ;main.c: 164: loop=0;
  6356  067D  0021               	movlb	1	; select bank1
  6357  067E  01C0               	clrf	main@loop^(0+128)
  6358  067F                     l2927:	
  6359                           
  6360                           ;main.c: 165: }
  6361                           ;main.c: 167: pidPeriodCounter+=1;
  6362  067F  3001               	movlw	1
  6363  0680  07C3               	addwf	main@pidPeriodCounter^(0+128),f
  6364  0681  3000               	movlw	0
  6365  0682  3DC4               	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  6366                           
  6367                           ;main.c: 169: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  6368  0683  0023               	movlb	3	; select bank3
  6369  0684  0835               	movf	(_pidMaxOutput+1)^(0+384),w
  6370  0685  3A80               	xorlw	128
  6371  0686  0021               	movlb	1	; select bank1
  6372  0687  00AA               	movwf	??_main^(0+128)
  6373  0688  0844               	movf	(main@pidPeriodCounter+1)^(0+128),w
  6374  0689  3A80               	xorlw	128
  6375  068A  022A               	subwf	??_main^(0+128),w
  6376  068B  1D03               	skipz
  6377  068C  2E90               	goto	u3355
  6378  068D  0843               	movf	main@pidPeriodCounter^(0+128),w
  6379  068E  0023               	movlb	3	; select bank3
  6380  068F  0234               	subwf	_pidMaxOutput^(0+384),w
  6381  0690                     u3355:	
  6382  0690  1803               	skipnc
  6383  0691  2E95               	goto	l2933
  6384  0692  0021               	movlb	1	; select bank1
  6385  0693  01C3               	clrf	main@pidPeriodCounter^(0+128)
  6386  0694  01C4               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6387  0695                     l2933:	
  6388                           
  6389                           ;main.c: 171: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  6390  0695  0023               	movlb	3	; select bank3
  6391  0696  083B               	movf	(main@dutyCycle6+1)^(0+384),w
  6392  0697  0021               	movlb	1	; select bank1
  6393  0698  0244               	subwf	(main@pidPeriodCounter+1)^(0+128),w
  6394  0699  1D03               	skipz
  6395  069A  2E9F               	goto	u3365
  6396  069B  0023               	movlb	3	; select bank3
  6397  069C  083A               	movf	main@dutyCycle6^(0+384),w
  6398  069D  0021               	movlb	1	; select bank1
  6399  069E  0243               	subwf	main@pidPeriodCounter^(0+128),w
  6400  069F                     u3365:	
  6401  069F  1803               	skipnc
  6402  06A0  2EA4               	goto	l348
  6403  06A1  0020               	movlb	0	; select bank0
  6404  06A2  1518               	bsf	24,2	;volatile
  6405  06A3  2EA6               	goto	l2937
  6406  06A4                     l348:	
  6407                           
  6408                           ;main.c: 172: else LATC2=0;
  6409  06A4  0020               	movlb	0	; select bank0
  6410  06A5  1118               	bcf	24,2	;volatile
  6411  06A6                     l2937:	
  6412                           
  6413                           ;main.c: 174: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  6414  06A6  0023               	movlb	3	; select bank3
  6415  06A7  01C0               	clrf	main@j^(0+384)
  6416  06A8  3002               	movlw	2
  6417  06A9  0240               	subwf	main@j^(0+384),w
  6418  06AA  1803               	btfsc	3,0
  6419  06AB  2ECF               	goto	l2949
  6420  06AC                     l2943:	
  6421  06AC  0840               	movf	main@j^(0+384),w
  6422  06AD  0021               	movlb	1	; select bank1
  6423  06AE  00AA               	movwf	??_main^(0+128)
  6424  06AF  01AB               	clrf	(??_main^(0+128)+1)
  6425  06B0  082A               	movf	??_main^(0+128),w
  6426  06B1  0020               	movlb	0	; select bank0
  6427  06B2  00A6               	movwf	readAnalog@channel
  6428  06B3  0021               	movlb	1	; select bank1
  6429  06B4  082B               	movf	(??_main+1)^(0+128),w
  6430  06B5  0020               	movlb	0	; select bank0
  6431  06B6  00A7               	movwf	readAnalog@channel+1
  6432  06B7  3183  2361  3184   	fcall	_readAnalog
  6433  06BA  0023               	movlb	3	; select bank3
  6434  06BB  3540               	lslf	main@j^(0+384),w
  6435  06BC  3EBC               	addlw	(low (main@analogs| (0+256)))& (0+255)
  6436  06BD  0086               	movwf	6
  6437  06BE  3001               	movlw	1	; select bank3/4
  6438  06BF  0087               	movwf	7
  6439  06C0  0020               	movlb	0	; select bank0
  6440  06C1  0826               	movf	?_readAnalog,w
  6441  06C2  3FC0               	movwi [0]fsr1
  6442  06C3  0827               	movf	?_readAnalog+1,w
  6443  06C4  3FC1               	movwi [1]fsr1
  6444  06C5  3001               	movlw	1
  6445  06C6  0021               	movlb	1	; select bank1
  6446  06C7  00AA               	movwf	??_main^(0+128)
  6447  06C8  082A               	movf	??_main^(0+128),w
  6448  06C9  0023               	movlb	3	; select bank3
  6449  06CA  07C0               	addwf	main@j^(0+384),f
  6450  06CB  3002               	movlw	2
  6451  06CC  0240               	subwf	main@j^(0+384),w
  6452  06CD  1C03               	skipc
  6453  06CE  2EAC               	goto	l2943
  6454  06CF                     l2949:	
  6455                           
  6456                           ;main.c: 177: analogs[0]=tempCalc(analogs[0]);
  6457  06CF  083D               	movf	(main@analogs+1)^(0+384),w
  6458  06D0  0020               	movlb	0	; select bank0
  6459  06D1  00DE               	movwf	tempCalc@analogValue+1
  6460  06D2  0023               	movlb	3	; select bank3
  6461  06D3  083C               	movf	main@analogs^(0+384),w
  6462  06D4  0020               	movlb	0	; select bank0
  6463  06D5  00DD               	movwf	tempCalc@analogValue
  6464  06D6  3182  224C  3184   	fcall	_tempCalc
  6465  06D9  0020               	movlb	0	; select bank0
  6466  06DA  085D               	movf	?_tempCalc,w
  6467  06DB  00E9               	movwf	___fttol@f1
  6468  06DC  085E               	movf	?_tempCalc+1,w
  6469  06DD  00EA               	movwf	___fttol@f1+1
  6470  06DE  085F               	movf	?_tempCalc+2,w
  6471  06DF  00EB               	movwf	___fttol@f1+2
  6472  06E0  318C  2485  3184   	fcall	___fttol
  6473  06E3  0020               	movlb	0	; select bank0
  6474  06E4  086A               	movf	?___fttol+1,w
  6475  06E5  0023               	movlb	3	; select bank3
  6476  06E6  00BD               	movwf	(main@analogs+1)^(0+384)
  6477  06E7  0020               	movlb	0	; select bank0
  6478  06E8  0869               	movf	?___fttol,w
  6479  06E9  0023               	movlb	3	; select bank3
  6480  06EA  00BC               	movwf	main@analogs^(0+384)
  6481                           
  6482                           ;main.c: 179: analogs[1]=tempCalc(analogs[1]);
  6483  06EB  083F               	movf	((main@analogs+1)^(0+384)+2),w
  6484  06EC  0020               	movlb	0	; select bank0
  6485  06ED  00DE               	movwf	tempCalc@analogValue+1
  6486  06EE  0023               	movlb	3	; select bank3
  6487  06EF  083E               	movf	(main@analogs^(0+384)+2),w
  6488  06F0  0020               	movlb	0	; select bank0
  6489  06F1  00DD               	movwf	tempCalc@analogValue
  6490  06F2  3182  224C  3184   	fcall	_tempCalc
  6491  06F5  0020               	movlb	0	; select bank0
  6492  06F6  085D               	movf	?_tempCalc,w
  6493  06F7  00E9               	movwf	___fttol@f1
  6494  06F8  085E               	movf	?_tempCalc+1,w
  6495  06F9  00EA               	movwf	___fttol@f1+1
  6496  06FA  085F               	movf	?_tempCalc+2,w
  6497  06FB  00EB               	movwf	___fttol@f1+2
  6498  06FC  318C  2485  3184   	fcall	___fttol
  6499  06FF  0020               	movlb	0	; select bank0
  6500  0700  086A               	movf	?___fttol+1,w
  6501  0701  0023               	movlb	3	; select bank3
  6502  0702  00BF               	movwf	((main@analogs+1)^(0+384)+2)
  6503  0703  0020               	movlb	0	; select bank0
  6504  0704  0869               	movf	?___fttol,w
  6505  0705  0023               	movlb	3	; select bank3
  6506  0706  00BE               	movwf	(main@analogs^(0+384)+2)
  6507                           
  6508                           ;main.c: 183: if(RB0==1)
  6509  0707  0020               	movlb	0	; select bank0
  6510  0708  1C0D               	btfss	13,0	;volatile
  6511  0709  2F5B               	goto	l2973
  6512                           
  6513                           ;main.c: 184: {
  6514                           ;main.c: 185: delayCount+=2;
  6515  070A  3002               	movlw	2
  6516  070B  0021               	movlb	1	; select bank1
  6517  070C  00AA               	movwf	??_main^(0+128)
  6518  070D  082A               	movf	??_main^(0+128),w
  6519  070E  0023               	movlb	3	; select bank3
  6520  070F  07C3               	addwf	main@delayCount^(0+384),f
  6521                           
  6522                           ;main.c: 186: set+=1;
  6523  0710  3001               	movlw	1
  6524  0711  07C1               	addwf	main@set^(0+384),f
  6525  0712  3000               	movlw	0
  6526  0713  3DC2               	addwfc	(main@set+1)^(0+384),f
  6527                           
  6528                           ;main.c: 187: if(set>2750)set=2750;
  6529  0714  0842               	movf	(main@set+1)^(0+384),w
  6530  0715  3A80               	xorlw	128
  6531  0716  0021               	movlb	1	; select bank1
  6532  0717  00AA               	movwf	??_main^(0+128)
  6533  0718  308A               	movlw	138
  6534  0719  022A               	subwf	??_main^(0+128),w
  6535  071A  1D03               	skipz
  6536  071B  2F1F               	goto	u3405
  6537  071C  30BF               	movlw	191
  6538  071D  0023               	movlb	3	; select bank3
  6539  071E  0241               	subwf	main@set^(0+384),w
  6540  071F                     u3405:	
  6541  071F  1C03               	skipc
  6542  0720  2F26               	goto	l2961
  6543  0721  30BE               	movlw	190
  6544  0722  0023               	movlb	3	; select bank3
  6545  0723  00C1               	movwf	main@set^(0+384)
  6546  0724  300A               	movlw	10
  6547  0725  00C2               	movwf	(main@set^(0+384)+1)
  6548  0726                     l2961:	
  6549                           
  6550                           ;main.c: 188: { LCD_Set_Cursor(5,0); LCD_Write_Int(set,-1, 1, 0);};
  6551  0726  01F4               	clrf	LCD_Set_Cursor@y
  6552  0727  3005               	movlw	5
  6553  0728  3189  21A1  3184   	fcall	_LCD_Set_Cursor
  6554  072B  0023               	movlb	3	; select bank3
  6555  072C  0842               	movf	(main@set+1)^(0+384),w
  6556  072D  00FA               	movwf	LCD_Write_Int@value+1
  6557  072E  0841               	movf	main@set^(0+384),w
  6558  072F  00F9               	movwf	LCD_Write_Int@value
  6559  0730  01FB               	clrf	LCD_Write_Int@fieldLength
  6560  0731  03FB               	decf	LCD_Write_Int@fieldLength,f
  6561  0732  01FC               	clrf	LCD_Write_Int@numPlaces
  6562  0733  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6563  0734  01FD               	clrf	LCD_Write_Int@sign
  6564  0735  318F  2737  3184   	fcall	_LCD_Write_Int
  6565                           
  6566                           ;main.c: 189: menuDelay=255;
  6567  0738  30FF               	movlw	255
  6568  0739  0021               	movlb	1	; select bank1
  6569  073A  00AA               	movwf	??_main^(0+128)
  6570  073B  082A               	movf	??_main^(0+128),w
  6571  073C  00BF               	movwf	main@menuDelay^(0+128)
  6572                           
  6573                           ;main.c: 190: if(delayCount<30)
  6574  073D  301E               	movlw	30
  6575  073E  0023               	movlb	3	; select bank3
  6576  073F  0243               	subwf	main@delayCount^(0+384),w
  6577  0740  1803               	skipnc
  6578  0741  2F50               	goto	l354
  6579                           
  6580                           ;main.c: 191: {
  6581                           ;main.c: 192: _delay((unsigned long)((150)*(32000000/4000.0)));
  6582  0742  3007               	movlw	7
  6583  0743  0021               	movlb	1	; select bank1
  6584  0744  00AC               	movwf	(??_main^(0+128)+2)
  6585  0745  3017               	movlw	23
  6586  0746  00AB               	movwf	(??_main^(0+128)+1)
  6587  0747  306F               	movlw	111
  6588  0748  00AA               	movwf	??_main^(0+128)
  6589  0749                     u3527:	
  6590  0749  0BAA               	decfsz	??_main^(0+128),f
  6591  074A  2F49               	goto	u3527
  6592  074B  0BAB               	decfsz	(??_main^(0+128)+1),f
  6593  074C  2F49               	goto	u3527
  6594  074D  0BAC               	decfsz	(??_main^(0+128)+2),f
  6595  074E  2F49               	goto	u3527
  6596  074F  0000               	nop
  6597  0750                     l354:	
  6598                           
  6599                           ;main.c: 193: }
  6600                           ;main.c: 199: if(delayCount>(30+10))delayCount=(30+10);
  6601  0750  3029               	movlw	41
  6602  0751  0023               	movlb	3	; select bank3
  6603  0752  0243               	subwf	main@delayCount^(0+384),w
  6604  0753  1C03               	skipc
  6605  0754  2F5B               	goto	l2973
  6606  0755  3028               	movlw	40
  6607  0756  0021               	movlb	1	; select bank1
  6608  0757  00AA               	movwf	??_main^(0+128)
  6609  0758  082A               	movf	??_main^(0+128),w
  6610  0759  0023               	movlb	3	; select bank3
  6611  075A  00C3               	movwf	main@delayCount^(0+384)
  6612  075B                     l2973:	
  6613                           
  6614                           ;main.c: 200: }
  6615                           ;main.c: 202: if(RB1==1)
  6616  075B  0020               	movlb	0	; select bank0
  6617  075C  1C8D               	btfss	13,1	;volatile
  6618  075D  2FAF               	goto	l2995
  6619                           
  6620                           ;main.c: 203: {
  6621                           ;main.c: 204: delayCount+=2;
  6622  075E  3002               	movlw	2
  6623  075F  0021               	movlb	1	; select bank1
  6624  0760  00AA               	movwf	??_main^(0+128)
  6625  0761  082A               	movf	??_main^(0+128),w
  6626  0762  0023               	movlb	3	; select bank3
  6627  0763  07C3               	addwf	main@delayCount^(0+384),f
  6628                           
  6629                           ;main.c: 205: set-=1;
  6630  0764  30FF               	movlw	255
  6631  0765  07C1               	addwf	main@set^(0+384),f
  6632  0766  30FF               	movlw	255
  6633  0767  3DC2               	addwfc	(main@set+1)^(0+384),f
  6634                           
  6635                           ;main.c: 206: if(set<750)set=750;
  6636  0768  0842               	movf	(main@set+1)^(0+384),w
  6637  0769  3A80               	xorlw	128
  6638  076A  0021               	movlb	1	; select bank1
  6639  076B  00AA               	movwf	??_main^(0+128)
  6640  076C  3082               	movlw	130
  6641  076D  022A               	subwf	??_main^(0+128),w
  6642  076E  1D03               	skipz
  6643  076F  2F73               	goto	u3445
  6644  0770  30EE               	movlw	238
  6645  0771  0023               	movlb	3	; select bank3
  6646  0772  0241               	subwf	main@set^(0+384),w
  6647  0773                     u3445:	
  6648  0773  1803               	skipnc
  6649  0774  2F7A               	goto	l2983
  6650  0775  30EE               	movlw	238
  6651  0776  0023               	movlb	3	; select bank3
  6652  0777  00C1               	movwf	main@set^(0+384)
  6653  0778  3002               	movlw	2
  6654  0779  00C2               	movwf	(main@set^(0+384)+1)
  6655  077A                     l2983:	
  6656                           
  6657                           ;main.c: 207: { LCD_Set_Cursor(5,0); LCD_Write_Int(set,-1, 1, 0);};
  6658  077A  01F4               	clrf	LCD_Set_Cursor@y
  6659  077B  3005               	movlw	5
  6660  077C  3189  21A1  3184   	fcall	_LCD_Set_Cursor
  6661  077F  0023               	movlb	3	; select bank3
  6662  0780  0842               	movf	(main@set+1)^(0+384),w
  6663  0781  00FA               	movwf	LCD_Write_Int@value+1
  6664  0782  0841               	movf	main@set^(0+384),w
  6665  0783  00F9               	movwf	LCD_Write_Int@value
  6666  0784  01FB               	clrf	LCD_Write_Int@fieldLength
  6667  0785  03FB               	decf	LCD_Write_Int@fieldLength,f
  6668  0786  01FC               	clrf	LCD_Write_Int@numPlaces
  6669  0787  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6670  0788  01FD               	clrf	LCD_Write_Int@sign
  6671  0789  318F  2737  3184   	fcall	_LCD_Write_Int
  6672                           
  6673                           ;main.c: 208: menuDelay=255;
  6674  078C  30FF               	movlw	255
  6675  078D  0021               	movlb	1	; select bank1
  6676  078E  00AA               	movwf	??_main^(0+128)
  6677  078F  082A               	movf	??_main^(0+128),w
  6678  0790  00BF               	movwf	main@menuDelay^(0+128)
  6679                           
  6680                           ;main.c: 210: if(delayCount<30)
  6681  0791  301E               	movlw	30
  6682  0792  0023               	movlb	3	; select bank3
  6683  0793  0243               	subwf	main@delayCount^(0+384),w
  6684  0794  1803               	skipnc
  6685  0795  2FA4               	goto	l358
  6686                           
  6687                           ;main.c: 211: {
  6688                           ;main.c: 212: _delay((unsigned long)((150)*(32000000/4000.0)));
  6689  0796  3007               	movlw	7
  6690  0797  0021               	movlb	1	; select bank1
  6691  0798  00AC               	movwf	(??_main^(0+128)+2)
  6692  0799  3017               	movlw	23
  6693  079A  00AB               	movwf	(??_main^(0+128)+1)
  6694  079B  306F               	movlw	111
  6695  079C  00AA               	movwf	??_main^(0+128)
  6696  079D                     u3537:	
  6697  079D  0BAA               	decfsz	??_main^(0+128),f
  6698  079E  2F9D               	goto	u3537
  6699  079F  0BAB               	decfsz	(??_main^(0+128)+1),f
  6700  07A0  2F9D               	goto	u3537
  6701  07A1  0BAC               	decfsz	(??_main^(0+128)+2),f
  6702  07A2  2F9D               	goto	u3537
  6703  07A3  0000               	nop
  6704  07A4                     l358:	
  6705                           
  6706                           ;main.c: 213: }
  6707                           ;main.c: 219: if(delayCount>(30+10))delayCount=(30+10);
  6708  07A4  3029               	movlw	41
  6709  07A5  0023               	movlb	3	; select bank3
  6710  07A6  0243               	subwf	main@delayCount^(0+384),w
  6711  07A7  1C03               	skipc
  6712  07A8  2FAF               	goto	l2995
  6713  07A9  3028               	movlw	40
  6714  07AA  0021               	movlb	1	; select bank1
  6715  07AB  00AA               	movwf	??_main^(0+128)
  6716  07AC  082A               	movf	??_main^(0+128),w
  6717  07AD  0023               	movlb	3	; select bank3
  6718  07AE  00C3               	movwf	main@delayCount^(0+384)
  6719  07AF                     l2995:	
  6720                           
  6721                           ;main.c: 220: }
  6722                           ;main.c: 222: if(delayCount>0)delayCount-=1;
  6723  07AF  0023               	movlb	3	; select bank3
  6724  07B0  0843               	movf	main@delayCount^(0+384),w
  6725  07B1  1903               	btfsc	3,2
  6726  07B2  2FB5               	goto	l2999
  6727  07B3  3001               	movlw	1
  6728  07B4  02C3               	subwf	main@delayCount^(0+384),f
  6729  07B5                     l2999:	
  6730                           
  6731                           ;main.c: 224: if(!(RB1 || RB0))
  6732  07B5  0020               	movlb	0	; select bank0
  6733  07B6  1C8D               	btfss	13,1	;volatile
  6734  07B7  180D               	btfsc	13,0	;volatile
  6735  07B8  2FC0               	goto	l3009
  6736                           
  6737                           ;main.c: 225: {
  6738                           ;main.c: 226: if(menuDelay>0)
  6739  07B9  0021               	movlb	1	; select bank1
  6740  07BA  083F               	movf	main@menuDelay^(0+128),w
  6741  07BB  1903               	btfsc	3,2
  6742  07BC  2FC0               	goto	l3009
  6743                           
  6744                           ;main.c: 227: {
  6745                           ;main.c: 228: loop=0;
  6746  07BD  01C0               	clrf	main@loop^(0+128)
  6747                           
  6748                           ;main.c: 229: menuDelay-=1;
  6749  07BE  3001               	movlw	1
  6750  07BF  02BF               	subwf	main@menuDelay^(0+128),f
  6751  07C0                     l3009:	
  6752                           
  6753                           ;main.c: 230: }
  6754                           ;main.c: 231: }
  6755                           ;main.c: 431: loop+=1;
  6756  07C0  3001               	movlw	1
  6757  07C1  0021               	movlb	1	; select bank1
  6758  07C2  00AA               	movwf	??_main^(0+128)
  6759  07C3  082A               	movf	??_main^(0+128),w
  6760  07C4  07C0               	addwf	main@loop^(0+128),f
  6761  07C5  2CF1               	goto	l2859
  6762  07C6                     __end_of_main:	
  6763                           
  6764                           	psect	text1
  6765  024C                     __ptext1:	
  6766 ;; *************** function _tempCalc *****************
  6767 ;; Defined at:
  6768 ;;		line 4 in file "tempCalc.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  analogValue     2   61[BANK0 ] int 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  steinhart       3   70[BANK0 ] float 
  6773 ;;  R               3   64[BANK0 ] float 
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  3   61[BANK0 ] float 
  6776 ;; Registers used:
  6777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6783 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;Total ram usage:       12 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    4
  6790 ;; This function calls:
  6791 ;;		___awtoft
  6792 ;;		___ftadd
  6793 ;;		___ftdiv
  6794 ;;		___ftmul
  6795 ;;		___ftsub
  6796 ;;		_log
  6797 ;; This function is called by:
  6798 ;;		_main
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           
  6803                           ;psect for function _tempCalc
  6804  024C                     _tempCalc:	
  6805                           
  6806                           ;tempCalc.c: 6: float R, steinhart;
  6807                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  6808                           
  6809                           ;incstack = 0
  6810                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6811  024C  3000               	movlw	0
  6812  024D  0020               	movlb	0	; select bank0
  6813  024E  00C0               	movwf	___ftadd@f1
  6814  024F  3080               	movlw	128
  6815  0250  00C1               	movwf	___ftadd@f1+1
  6816  0251  30BF               	movlw	191
  6817  0252  00C2               	movwf	___ftadd@f1+2
  6818  0253  085E               	movf	tempCalc@analogValue+1,w
  6819  0254  00F9               	movwf	___awtoft@c+1
  6820  0255  085D               	movf	tempCalc@analogValue,w
  6821  0256  00F8               	movwf	___awtoft@c
  6822  0257  3188  20C3  3182   	fcall	___awtoft
  6823  025A  0878               	movf	?___awtoft,w
  6824  025B  0020               	movlb	0	; select bank0
  6825  025C  00B0               	movwf	___ftdiv@f2
  6826  025D  0879               	movf	?___awtoft+1,w
  6827  025E  00B1               	movwf	___ftdiv@f2+1
  6828  025F  087A               	movf	?___awtoft+2,w
  6829  0260  00B2               	movwf	___ftdiv@f2+2
  6830  0261  30C0               	movlw	192
  6831  0262  00B3               	movwf	___ftdiv@f1
  6832  0263  307F               	movlw	127
  6833  0264  00B4               	movwf	___ftdiv@f1+1
  6834  0265  3044               	movlw	68
  6835  0266  00B5               	movwf	___ftdiv@f1+2
  6836  0267  318D  252A  3182   	fcall	___ftdiv
  6837  026A  0020               	movlb	0	; select bank0
  6838  026B  0830               	movf	?___ftdiv,w
  6839  026C  00C3               	movwf	___ftadd@f2
  6840  026D  0831               	movf	?___ftdiv+1,w
  6841  026E  00C4               	movwf	___ftadd@f2+1
  6842  026F  0832               	movf	?___ftdiv+2,w
  6843  0270  00C5               	movwf	___ftadd@f2+2
  6844  0271  3180  2042  3182   	fcall	___ftadd
  6845  0274  0020               	movlb	0	; select bank0
  6846  0275  0840               	movf	?___ftadd,w
  6847  0276  00E3               	movwf	_tempCalc$986
  6848  0277  0841               	movf	?___ftadd+1,w
  6849  0278  00E4               	movwf	_tempCalc$986+1
  6850  0279  0842               	movf	?___ftadd+2,w
  6851  027A  00E5               	movwf	_tempCalc$986+2
  6852                           
  6853                           ;tempCalc.c: 6: float R, steinhart;
  6854                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  6855  027B  0863               	movf	_tempCalc$986,w
  6856  027C  00B0               	movwf	___ftdiv@f2
  6857  027D  0864               	movf	_tempCalc$986+1,w
  6858  027E  00B1               	movwf	___ftdiv@f2+1
  6859  027F  0865               	movf	_tempCalc$986+2,w
  6860  0280  00B2               	movwf	___ftdiv@f2+2
  6861  0281  3060               	movlw	96
  6862  0282  00B3               	movwf	___ftdiv@f1
  6863  0283  301A               	movlw	26
  6864  0284  00B4               	movwf	___ftdiv@f1+1
  6865  0285  3046               	movlw	70
  6866  0286  00B5               	movwf	___ftdiv@f1+2
  6867  0287  318D  252A  3182   	fcall	___ftdiv
  6868  028A  0020               	movlb	0	; select bank0
  6869  028B  0830               	movf	?___ftdiv,w
  6870  028C  00E0               	movwf	tempCalc@R
  6871  028D  0831               	movf	?___ftdiv+1,w
  6872  028E  00E1               	movwf	tempCalc@R+1
  6873  028F  0832               	movf	?___ftdiv+2,w
  6874  0290  00E2               	movwf	tempCalc@R+2
  6875                           
  6876                           ;tempCalc.c: 10: steinhart = R /10000;
  6877  0291  3040               	movlw	64
  6878  0292  00B0               	movwf	___ftdiv@f2
  6879  0293  301C               	movlw	28
  6880  0294  00B1               	movwf	___ftdiv@f2+1
  6881  0295  3046               	movlw	70
  6882  0296  00B2               	movwf	___ftdiv@f2+2
  6883  0297  0860               	movf	tempCalc@R,w
  6884  0298  00B3               	movwf	___ftdiv@f1
  6885  0299  0861               	movf	tempCalc@R+1,w
  6886  029A  00B4               	movwf	___ftdiv@f1+1
  6887  029B  0862               	movf	tempCalc@R+2,w
  6888  029C  00B5               	movwf	___ftdiv@f1+2
  6889  029D  318D  252A  3182   	fcall	___ftdiv
  6890  02A0  0020               	movlb	0	; select bank0
  6891  02A1  0830               	movf	?___ftdiv,w
  6892  02A2  00E6               	movwf	tempCalc@steinhart
  6893  02A3  0831               	movf	?___ftdiv+1,w
  6894  02A4  00E7               	movwf	tempCalc@steinhart+1
  6895  02A5  0832               	movf	?___ftdiv+2,w
  6896  02A6  00E8               	movwf	tempCalc@steinhart+2
  6897                           
  6898                           ;tempCalc.c: 11: steinhart = log(steinhart);
  6899  02A7  0866               	movf	tempCalc@steinhart,w
  6900  02A8  00D7               	movwf	log@x
  6901  02A9  0867               	movf	tempCalc@steinhart+1,w
  6902  02AA  00D8               	movwf	log@x+1
  6903  02AB  0868               	movf	tempCalc@steinhart+2,w
  6904  02AC  00D9               	movwf	log@x+2
  6905  02AD  318D  25D3  3182   	fcall	_log
  6906  02B0  0020               	movlb	0	; select bank0
  6907  02B1  0857               	movf	?_log,w
  6908  02B2  00E6               	movwf	tempCalc@steinhart
  6909  02B3  0858               	movf	?_log+1,w
  6910  02B4  00E7               	movwf	tempCalc@steinhart+1
  6911  02B5  0859               	movf	?_log+2,w
  6912  02B6  00E8               	movwf	tempCalc@steinhart+2
  6913                           
  6914                           ;tempCalc.c: 12: steinhart /= 3930;
  6915  02B7  30A0               	movlw	160
  6916  02B8  00B0               	movwf	___ftdiv@f2
  6917  02B9  3075               	movlw	117
  6918  02BA  00B1               	movwf	___ftdiv@f2+1
  6919  02BB  3045               	movlw	69
  6920  02BC  00B2               	movwf	___ftdiv@f2+2
  6921  02BD  0866               	movf	tempCalc@steinhart,w
  6922  02BE  00B3               	movwf	___ftdiv@f1
  6923  02BF  0867               	movf	tempCalc@steinhart+1,w
  6924  02C0  00B4               	movwf	___ftdiv@f1+1
  6925  02C1  0868               	movf	tempCalc@steinhart+2,w
  6926  02C2  00B5               	movwf	___ftdiv@f1+2
  6927  02C3  318D  252A  3182   	fcall	___ftdiv
  6928  02C6  0020               	movlb	0	; select bank0
  6929  02C7  0830               	movf	?___ftdiv,w
  6930  02C8  00E6               	movwf	tempCalc@steinhart
  6931  02C9  0831               	movf	?___ftdiv+1,w
  6932  02CA  00E7               	movwf	tempCalc@steinhart+1
  6933  02CB  0832               	movf	?___ftdiv+2,w
  6934  02CC  00E8               	movwf	tempCalc@steinhart+2
  6935                           
  6936                           ;tempCalc.c: 14: steinhart += 1.0 / (25 + 273.15);
  6937  02CD  30CF               	movlw	207
  6938  02CE  00C0               	movwf	___ftadd@f1
  6939  02CF  305B               	movlw	91
  6940  02D0  00C1               	movwf	___ftadd@f1+1
  6941  02D1  303B               	movlw	59
  6942  02D2  00C2               	movwf	___ftadd@f1+2
  6943  02D3  0866               	movf	tempCalc@steinhart,w
  6944  02D4  00C3               	movwf	___ftadd@f2
  6945  02D5  0867               	movf	tempCalc@steinhart+1,w
  6946  02D6  00C4               	movwf	___ftadd@f2+1
  6947  02D7  0868               	movf	tempCalc@steinhart+2,w
  6948  02D8  00C5               	movwf	___ftadd@f2+2
  6949  02D9  3180  2042  3182   	fcall	___ftadd
  6950  02DC  0020               	movlb	0	; select bank0
  6951  02DD  0840               	movf	?___ftadd,w
  6952  02DE  00E6               	movwf	tempCalc@steinhart
  6953  02DF  0841               	movf	?___ftadd+1,w
  6954  02E0  00E7               	movwf	tempCalc@steinhart+1
  6955  02E1  0842               	movf	?___ftadd+2,w
  6956  02E2  00E8               	movwf	tempCalc@steinhart+2
  6957                           
  6958                           ;tempCalc.c: 15: steinhart = 1.0 / steinhart;
  6959  02E3  0866               	movf	tempCalc@steinhart,w
  6960  02E4  00B0               	movwf	___ftdiv@f2
  6961  02E5  0867               	movf	tempCalc@steinhart+1,w
  6962  02E6  00B1               	movwf	___ftdiv@f2+1
  6963  02E7  0868               	movf	tempCalc@steinhart+2,w
  6964  02E8  00B2               	movwf	___ftdiv@f2+2
  6965  02E9  3000               	movlw	0
  6966  02EA  00B3               	movwf	___ftdiv@f1
  6967  02EB  3080               	movlw	128
  6968  02EC  00B4               	movwf	___ftdiv@f1+1
  6969  02ED  303F               	movlw	63
  6970  02EE  00B5               	movwf	___ftdiv@f1+2
  6971  02EF  318D  252A  3182   	fcall	___ftdiv
  6972  02F2  0020               	movlb	0	; select bank0
  6973  02F3  0830               	movf	?___ftdiv,w
  6974  02F4  00E6               	movwf	tempCalc@steinhart
  6975  02F5  0831               	movf	?___ftdiv+1,w
  6976  02F6  00E7               	movwf	tempCalc@steinhart+1
  6977  02F7  0832               	movf	?___ftdiv+2,w
  6978  02F8  00E8               	movwf	tempCalc@steinhart+2
  6979                           
  6980                           ;tempCalc.c: 16: steinhart -= 273.15;
  6981  02F9  3093               	movlw	147
  6982  02FA  00CD               	movwf	___ftsub@f2
  6983  02FB  3088               	movlw	136
  6984  02FC  00CE               	movwf	___ftsub@f2+1
  6985  02FD  3043               	movlw	67
  6986  02FE  00CF               	movwf	___ftsub@f2+2
  6987  02FF  0866               	movf	tempCalc@steinhart,w
  6988  0300  00D0               	movwf	___ftsub@f1
  6989  0301  0867               	movf	tempCalc@steinhart+1,w
  6990  0302  00D1               	movwf	___ftsub@f1+1
  6991  0303  0868               	movf	tempCalc@steinhart+2,w
  6992  0304  00D2               	movwf	___ftsub@f1+2
  6993  0305  3188  20A5  3182   	fcall	___ftsub
  6994  0308  0020               	movlb	0	; select bank0
  6995  0309  084D               	movf	?___ftsub,w
  6996  030A  00E6               	movwf	tempCalc@steinhart
  6997  030B  084E               	movf	?___ftsub+1,w
  6998  030C  00E7               	movwf	tempCalc@steinhart+1
  6999  030D  084F               	movf	?___ftsub+2,w
  7000  030E  00E8               	movwf	tempCalc@steinhart+2
  7001                           
  7002                           ;tempCalc.c: 18: steinhart*=10;
  7003  030F  3000               	movlw	0
  7004  0310  00A0               	movwf	___ftmul@f1
  7005  0311  3020               	movlw	32
  7006  0312  00A1               	movwf	___ftmul@f1+1
  7007  0313  3041               	movlw	65
  7008  0314  00A2               	movwf	___ftmul@f1+2
  7009  0315  0866               	movf	tempCalc@steinhart,w
  7010  0316  00A3               	movwf	___ftmul@f2
  7011  0317  0867               	movf	tempCalc@steinhart+1,w
  7012  0318  00A4               	movwf	___ftmul@f2+1
  7013  0319  0868               	movf	tempCalc@steinhart+2,w
  7014  031A  00A5               	movwf	___ftmul@f2+2
  7015  031B  318E  2683  3182   	fcall	___ftmul
  7016  031E  0020               	movlb	0	; select bank0
  7017  031F  0820               	movf	?___ftmul,w
  7018  0320  00E6               	movwf	tempCalc@steinhart
  7019  0321  0821               	movf	?___ftmul+1,w
  7020  0322  00E7               	movwf	tempCalc@steinhart+1
  7021  0323  0822               	movf	?___ftmul+2,w
  7022  0324  00E8               	movwf	tempCalc@steinhart+2
  7023                           
  7024                           ;tempCalc.c: 20: steinhart = steinhart*9/5+320;
  7025  0325  3000               	movlw	0
  7026  0326  00C0               	movwf	___ftadd@f1
  7027  0327  30A0               	movlw	160
  7028  0328  00C1               	movwf	___ftadd@f1+1
  7029  0329  3043               	movlw	67
  7030  032A  00C2               	movwf	___ftadd@f1+2
  7031  032B  3000               	movlw	0
  7032  032C  00B0               	movwf	___ftdiv@f2
  7033  032D  30A0               	movlw	160
  7034  032E  00B1               	movwf	___ftdiv@f2+1
  7035  032F  3040               	movlw	64
  7036  0330  00B2               	movwf	___ftdiv@f2+2
  7037  0331  3000               	movlw	0
  7038  0332  00A0               	movwf	___ftmul@f1
  7039  0333  3010               	movlw	16
  7040  0334  00A1               	movwf	___ftmul@f1+1
  7041  0335  3041               	movlw	65
  7042  0336  00A2               	movwf	___ftmul@f1+2
  7043  0337  0866               	movf	tempCalc@steinhart,w
  7044  0338  00A3               	movwf	___ftmul@f2
  7045  0339  0867               	movf	tempCalc@steinhart+1,w
  7046  033A  00A4               	movwf	___ftmul@f2+1
  7047  033B  0868               	movf	tempCalc@steinhart+2,w
  7048  033C  00A5               	movwf	___ftmul@f2+2
  7049  033D  318E  2683  3182   	fcall	___ftmul
  7050  0340  0020               	movlb	0	; select bank0
  7051  0341  0820               	movf	?___ftmul,w
  7052  0342  00B3               	movwf	___ftdiv@f1
  7053  0343  0821               	movf	?___ftmul+1,w
  7054  0344  00B4               	movwf	___ftdiv@f1+1
  7055  0345  0822               	movf	?___ftmul+2,w
  7056  0346  00B5               	movwf	___ftdiv@f1+2
  7057  0347  318D  252A  3182   	fcall	___ftdiv
  7058  034A  0020               	movlb	0	; select bank0
  7059  034B  0830               	movf	?___ftdiv,w
  7060  034C  00C3               	movwf	___ftadd@f2
  7061  034D  0831               	movf	?___ftdiv+1,w
  7062  034E  00C4               	movwf	___ftadd@f2+1
  7063  034F  0832               	movf	?___ftdiv+2,w
  7064  0350  00C5               	movwf	___ftadd@f2+2
  7065  0351  3180  2042         	fcall	___ftadd
  7066  0353  0020               	movlb	0	; select bank0
  7067  0354  0840               	movf	?___ftadd,w
  7068  0355  00E6               	movwf	tempCalc@steinhart
  7069  0356  0841               	movf	?___ftadd+1,w
  7070  0357  00E7               	movwf	tempCalc@steinhart+1
  7071  0358  0842               	movf	?___ftadd+2,w
  7072  0359  00E8               	movwf	tempCalc@steinhart+2
  7073                           
  7074                           ;tempCalc.c: 22: return steinhart;
  7075  035A  0866               	movf	tempCalc@steinhart,w
  7076  035B  00DD               	movwf	?_tempCalc
  7077  035C  0867               	movf	tempCalc@steinhart+1,w
  7078  035D  00DE               	movwf	?_tempCalc+1
  7079  035E  0868               	movf	tempCalc@steinhart+2,w
  7080  035F  00DF               	movwf	?_tempCalc+2
  7081  0360  0008               	return
  7082  0361                     __end_of_tempCalc:	
  7083                           
  7084                           	psect	text2
  7085  0DD3                     __ptext2:	
  7086 ;; *************** function _log *****************
  7087 ;; Defined at:
  7088 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  x               3   55[BANK0 ] float 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  exponent        2   59[BANK0 ] int 
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  3   55[BANK0 ] int 
  7095 ;; Registers used:
  7096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7102 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7103 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7104 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;Total ram usage:        6 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; Hardware stack levels required when called:    3
  7109 ;; This function calls:
  7110 ;;		___awtoft
  7111 ;;		___ftadd
  7112 ;;		___ftge
  7113 ;;		___ftmul
  7114 ;;		_eval_poly
  7115 ;;		_frexp
  7116 ;; This function is called by:
  7117 ;;		_tempCalc
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           
  7122                           ;psect for function _log
  7123  0DD3                     _log:	
  7124                           
  7125                           ;incstack = 0
  7126                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7127  0DD3  0020               	movlb	0	; select bank0
  7128  0DD4  0857               	movf	log@x,w
  7129  0DD5  00F0               	movwf	___ftge@ff1
  7130  0DD6  0858               	movf	log@x+1,w
  7131  0DD7  00F1               	movwf	___ftge@ff1+1
  7132  0DD8  0859               	movf	log@x+2,w
  7133  0DD9  00F2               	movwf	___ftge@ff1+2
  7134  0DDA  3000               	movlw	0
  7135  0DDB  00F3               	movwf	___ftge@ff2
  7136  0DDC  3000               	movlw	0
  7137  0DDD  00F4               	movwf	___ftge@ff2+1
  7138  0DDE  3000               	movlw	0
  7139  0DDF  00F5               	movwf	___ftge@ff2+2
  7140  0DE0  3189  2166  318D   	fcall	___ftge
  7141  0DE3  1803               	btfsc	3,0
  7142  0DE4  2DF2               	goto	l2371
  7143  0DE5  3021               	movlw	33
  7144  0DE6  0021               	movlb	1	; select bank1
  7145  0DE7  00D4               	movwf	_errno^(0+128)
  7146  0DE8  3000               	movlw	0
  7147  0DE9  00D5               	movwf	(_errno^(0+128)+1)
  7148  0DEA  3000               	movlw	0
  7149  0DEB  0020               	movlb	0	; select bank0
  7150  0DEC  00D7               	movwf	?_log
  7151  0DED  3000               	movlw	0
  7152  0DEE  00D8               	movwf	?_log+1
  7153  0DEF  3000               	movlw	0
  7154  0DF0  00D9               	movwf	?_log+2
  7155  0DF1  0008               	return
  7156  0DF2                     l2371:	
  7157  0DF2  0020               	movlb	0	; select bank0
  7158  0DF3  0859               	movf	log@x+2,w
  7159  0DF4  0458               	iorwf	log@x+1,w
  7160  0DF5  0457               	iorwf	log@x,w
  7161  0DF6  1D03               	skipz
  7162  0DF7  2E05               	goto	l2377
  7163  0DF8  3022               	movlw	34
  7164  0DF9  0021               	movlb	1	; select bank1
  7165  0DFA  00D4               	movwf	_errno^(0+128)
  7166  0DFB  3000               	movlw	0
  7167  0DFC  00D5               	movwf	(_errno^(0+128)+1)
  7168  0DFD  3000               	movlw	0
  7169  0DFE  0020               	movlb	0	; select bank0
  7170  0DFF  00D7               	movwf	?_log
  7171  0E00  3000               	movlw	0
  7172  0E01  00D8               	movwf	?_log+1
  7173  0E02  3000               	movlw	0
  7174  0E03  00D9               	movwf	?_log+2
  7175  0E04  0008               	return
  7176  0E05                     l2377:	
  7177  0E05  3000               	movlw	0
  7178  0E06  00C0               	movwf	___ftadd@f1
  7179  0E07  3080               	movlw	128
  7180  0E08  00C1               	movwf	___ftadd@f1+1
  7181  0E09  30BF               	movlw	191
  7182  0E0A  00C2               	movwf	___ftadd@f1+2
  7183  0E0B  3000               	movlw	0
  7184  0E0C  00A0               	movwf	___ftmul@f1
  7185  0E0D  3000               	movlw	0
  7186  0E0E  00A1               	movwf	___ftmul@f1+1
  7187  0E0F  3040               	movlw	64
  7188  0E10  00A2               	movwf	___ftmul@f1+2
  7189  0E11  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7190  0E12  00DA               	movwf	??_log
  7191  0E13  085A               	movf	??_log,w
  7192  0E14  00F3               	movwf	frexp@eptr
  7193  0E15  0857               	movf	log@x,w
  7194  0E16  00F0               	movwf	frexp@value
  7195  0E17  0858               	movf	log@x+1,w
  7196  0E18  00F1               	movwf	frexp@value+1
  7197  0E19  0859               	movf	log@x+2,w
  7198  0E1A  00F2               	movwf	frexp@value+2
  7199  0E1B  3180  2007  318D   	fcall	_frexp
  7200  0E1E  0870               	movf	?_frexp,w
  7201  0E1F  0020               	movlb	0	; select bank0
  7202  0E20  00A3               	movwf	___ftmul@f2
  7203  0E21  0871               	movf	?_frexp+1,w
  7204  0E22  00A4               	movwf	___ftmul@f2+1
  7205  0E23  0872               	movf	?_frexp+2,w
  7206  0E24  00A5               	movwf	___ftmul@f2+2
  7207  0E25  318E  2683  318D   	fcall	___ftmul
  7208  0E28  0020               	movlb	0	; select bank0
  7209  0E29  0820               	movf	?___ftmul,w
  7210  0E2A  00C3               	movwf	___ftadd@f2
  7211  0E2B  0821               	movf	?___ftmul+1,w
  7212  0E2C  00C4               	movwf	___ftadd@f2+1
  7213  0E2D  0822               	movf	?___ftmul+2,w
  7214  0E2E  00C5               	movwf	___ftadd@f2+2
  7215  0E2F  3180  2042  318D   	fcall	___ftadd
  7216  0E32  0020               	movlb	0	; select bank0
  7217  0E33  0840               	movf	?___ftadd,w
  7218  0E34  00D7               	movwf	log@x
  7219  0E35  0841               	movf	?___ftadd+1,w
  7220  0E36  00D8               	movwf	log@x+1
  7221  0E37  0842               	movf	?___ftadd+2,w
  7222  0E38  00D9               	movwf	log@x+2
  7223  0E39  30FF               	movlw	255
  7224  0E3A  07DB               	addwf	log@exponent,f
  7225  0E3B  30FF               	movlw	255
  7226  0E3C  3DDC               	addwfc	log@exponent+1,f
  7227  0E3D  0857               	movf	log@x,w
  7228  0E3E  00CD               	movwf	eval_poly@x
  7229  0E3F  0858               	movf	log@x+1,w
  7230  0E40  00CE               	movwf	eval_poly@x+1
  7231  0E41  0859               	movf	log@x+2,w
  7232  0E42  00CF               	movwf	eval_poly@x+2
  7233  0E43  3000               	movlw	low (log@coeff| (0+32768))
  7234  0E44  00D0               	movwf	eval_poly@d
  7235  0E45  3090               	movlw	high (log@coeff| (0+32768))
  7236  0E46  00D1               	movwf	eval_poly@d+1
  7237  0E47  3008               	movlw	8
  7238  0E48  00D2               	movwf	eval_poly@n
  7239  0E49  3000               	movlw	0
  7240  0E4A  00D3               	movwf	eval_poly@n+1
  7241  0E4B  318A  22B8  318D   	fcall	_eval_poly
  7242  0E4E  0020               	movlb	0	; select bank0
  7243  0E4F  084D               	movf	?_eval_poly,w
  7244  0E50  00D7               	movwf	log@x
  7245  0E51  084E               	movf	?_eval_poly+1,w
  7246  0E52  00D8               	movwf	log@x+1
  7247  0E53  084F               	movf	?_eval_poly+2,w
  7248  0E54  00D9               	movwf	log@x+2
  7249  0E55  0857               	movf	log@x,w
  7250  0E56  00C0               	movwf	___ftadd@f1
  7251  0E57  0858               	movf	log@x+1,w
  7252  0E58  00C1               	movwf	___ftadd@f1+1
  7253  0E59  0859               	movf	log@x+2,w
  7254  0E5A  00C2               	movwf	___ftadd@f1+2
  7255  0E5B  3072               	movlw	114
  7256  0E5C  00A0               	movwf	___ftmul@f1
  7257  0E5D  3031               	movlw	49
  7258  0E5E  00A1               	movwf	___ftmul@f1+1
  7259  0E5F  303F               	movlw	63
  7260  0E60  00A2               	movwf	___ftmul@f1+2
  7261  0E61  085C               	movf	log@exponent+1,w
  7262  0E62  00F9               	movwf	___awtoft@c+1
  7263  0E63  085B               	movf	log@exponent,w
  7264  0E64  00F8               	movwf	___awtoft@c
  7265  0E65  3188  20C3  318D   	fcall	___awtoft
  7266  0E68  0878               	movf	?___awtoft,w
  7267  0E69  0020               	movlb	0	; select bank0
  7268  0E6A  00A3               	movwf	___ftmul@f2
  7269  0E6B  0879               	movf	?___awtoft+1,w
  7270  0E6C  00A4               	movwf	___ftmul@f2+1
  7271  0E6D  087A               	movf	?___awtoft+2,w
  7272  0E6E  00A5               	movwf	___ftmul@f2+2
  7273  0E6F  318E  2683  318D   	fcall	___ftmul
  7274  0E72  0020               	movlb	0	; select bank0
  7275  0E73  0820               	movf	?___ftmul,w
  7276  0E74  00C3               	movwf	___ftadd@f2
  7277  0E75  0821               	movf	?___ftmul+1,w
  7278  0E76  00C4               	movwf	___ftadd@f2+1
  7279  0E77  0822               	movf	?___ftmul+2,w
  7280  0E78  00C5               	movwf	___ftadd@f2+2
  7281  0E79  3180  2042         	fcall	___ftadd
  7282  0E7B  0020               	movlb	0	; select bank0
  7283  0E7C  0840               	movf	?___ftadd,w
  7284  0E7D  00D7               	movwf	?_log
  7285  0E7E  0841               	movf	?___ftadd+1,w
  7286  0E7F  00D8               	movwf	?_log+1
  7287  0E80  0842               	movf	?___ftadd+2,w
  7288  0E81  00D9               	movwf	?_log+2
  7289  0E82  0008               	return
  7290  0E83                     __end_of_log:	
  7291                           
  7292                           	psect	text3
  7293  0007                     __ptext3:	
  7294 ;; *************** function _frexp *****************
  7295 ;; Defined at:
  7296 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  value           3    0[COMMON] int 
  7299 ;;  eptr            1    3[COMMON] PTR int 
  7300 ;;		 -> log@exponent(2), 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;		None
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  3    0[COMMON] PTR int 
  7305 ;; Registers used:
  7306 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7316 ;;Total ram usage:        6 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; This function calls:
  7319 ;;		Nothing
  7320 ;; This function is called by:
  7321 ;;		_log
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           
  7326                           ;psect for function _frexp
  7327  0007                     _frexp:	
  7328                           
  7329                           ;incstack = 0
  7330                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7331  0007  0872               	movf	frexp@value+2,w
  7332  0008  0471               	iorwf	frexp@value+1,w
  7333  0009  0470               	iorwf	frexp@value,w
  7334  000A  1D03               	skipz
  7335  000B  2819               	goto	l2201
  7336  000C  0873               	movf	frexp@eptr,w
  7337  000D  0086               	movwf	6
  7338  000E  0187               	clrf	7
  7339  000F  3000               	movlw	0
  7340  0010  3FC0               	movwi [0]fsr1
  7341  0011  3FC1               	movwi [1]fsr1
  7342  0012  3000               	movlw	0
  7343  0013  00F0               	movwf	?_frexp
  7344  0014  3000               	movlw	0
  7345  0015  00F1               	movwf	?_frexp+1
  7346  0016  3000               	movlw	0
  7347  0017  00F2               	movwf	?_frexp+2
  7348  0018  0008               	return
  7349  0019                     l2201:	
  7350  0019  0872               	movf	frexp@value+2,w
  7351  001A  397F               	andlw	127
  7352  001B  00F4               	movwf	??_frexp
  7353  001C  01F5               	clrf	??_frexp+1
  7354  001D  35F4               	lslf	??_frexp,f
  7355  001E  0DF5               	rlf	??_frexp+1,f
  7356  001F  0873               	movf	frexp@eptr,w
  7357  0020  0086               	movwf	6
  7358  0021  0187               	clrf	7
  7359  0022  0874               	movf	??_frexp,w
  7360  0023  3FC0               	movwi [0]fsr1
  7361  0024  0875               	movf	??_frexp+1,w
  7362  0025  3FC1               	movwi [1]fsr1
  7363  0026  0D71               	rlf	frexp@value+1,w
  7364  0027  0D71               	rlf	frexp@value+1,w
  7365  0028  3901               	andlw	1
  7366  0029  00F4               	movwf	??_frexp
  7367  002A  01F5               	clrf	??_frexp+1
  7368  002B  0873               	movf	frexp@eptr,w
  7369  002C  0086               	movwf	6
  7370  002D  0187               	clrf	7
  7371  002E  0874               	movf	??_frexp,w
  7372  002F  0481               	iorwf	1,f
  7373  0030  3141               	addfsr 1,1
  7374  0031  0875               	movf	??_frexp+1,w
  7375  0032  0481               	iorwf	1,f
  7376  0033  0873               	movf	frexp@eptr,w
  7377  0034  0086               	movwf	6
  7378  0035  0187               	clrf	7
  7379  0036  3082               	movlw	130
  7380  0037  0781               	addwf	1,f
  7381  0038  3141               	addfsr 1,1
  7382  0039  30FF               	movlw	255
  7383  003A  3D81               	addwfc	1,f
  7384  003B  317F               	addfsr 1,-1
  7385  003C  0872               	movf	frexp@value+2,w
  7386  003D  3980               	andlw	-128
  7387  003E  383F               	iorlw	63
  7388  003F  00F2               	movwf	frexp@value+2
  7389  0040  13F1               	bcf	frexp@value+1,7
  7390  0041  0008               	return
  7391  0042                     __end_of_frexp:	
  7392                           
  7393                           	psect	text4
  7394  0AB8                     __ptext4:	
  7395 ;; *************** function _eval_poly *****************
  7396 ;; Defined at:
  7397 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  x               3   45[BANK0 ] PTR int 
  7400 ;;  d               2   48[BANK0 ] PTR const 
  7401 ;;		 -> log@coeff(27), 
  7402 ;;  n               2   50[BANK0 ] int 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  res             3   52[BANK0 ] int 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  3   45[BANK0 ] int 
  7407 ;; Registers used:
  7408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7414 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;Total ram usage:       10 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    2
  7421 ;; This function calls:
  7422 ;;		___ftadd
  7423 ;;		___ftmul
  7424 ;;		___wmul
  7425 ;; This function is called by:
  7426 ;;		_log
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           
  7431                           ;psect for function _eval_poly
  7432  0AB8                     _eval_poly:	
  7433                           
  7434                           ;incstack = 0
  7435                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7436  0AB8  0020               	movlb	0	; select bank0
  7437  0AB9  0853               	movf	eval_poly@n+1,w
  7438  0ABA  00F1               	movwf	___wmul@multiplier+1
  7439  0ABB  0852               	movf	eval_poly@n,w
  7440  0ABC  00F0               	movwf	___wmul@multiplier
  7441  0ABD  3003               	movlw	3
  7442  0ABE  00F2               	movwf	___wmul@multiplicand
  7443  0ABF  3000               	movlw	0
  7444  0AC0  00F3               	movwf	___wmul@multiplicand+1
  7445  0AC1  3188  208A  318A   	fcall	___wmul
  7446  0AC4  0020               	movlb	0	; select bank0
  7447  0AC5  0850               	movf	eval_poly@d,w
  7448  0AC6  0770               	addwf	?___wmul,w
  7449  0AC7  0084               	movwf	4
  7450  0AC8  0851               	movf	eval_poly@d+1,w
  7451  0AC9  3D71               	addwfc	?___wmul+1,w
  7452  0ACA  0085               	movwf	5
  7453  0ACB  3F00               	moviw [0]fsr0
  7454  0ACC  00D4               	movwf	eval_poly@res
  7455  0ACD  3F01               	moviw [1]fsr0
  7456  0ACE  00D5               	movwf	eval_poly@res+1
  7457  0ACF  3F02               	moviw [2]fsr0
  7458  0AD0                     L1:	
  7459  0AD0  00D6               	movwf	eval_poly@res+2
  7460  0AD1  0852               	movf	eval_poly@n,w
  7461  0AD2  0453               	iorwf	eval_poly@n+1,w
  7462  0AD3  1903               	btfsc	3,2
  7463  0AD4  2B11               	goto	l2219
  7464  0AD5  30FF               	movlw	255
  7465  0AD6  07D2               	addwf	eval_poly@n,f
  7466  0AD7  30FF               	movlw	255
  7467  0AD8  3DD3               	addwfc	eval_poly@n+1,f
  7468  0AD9  0853               	movf	eval_poly@n+1,w
  7469  0ADA  00F1               	movwf	___wmul@multiplier+1
  7470  0ADB  0852               	movf	eval_poly@n,w
  7471  0ADC  00F0               	movwf	___wmul@multiplier
  7472  0ADD  3003               	movlw	3
  7473  0ADE  00F2               	movwf	___wmul@multiplicand
  7474  0ADF  3000               	movlw	0
  7475  0AE0  00F3               	movwf	___wmul@multiplicand+1
  7476  0AE1  3188  208A  318A   	fcall	___wmul
  7477  0AE4  0020               	movlb	0	; select bank0
  7478  0AE5  0850               	movf	eval_poly@d,w
  7479  0AE6  0770               	addwf	?___wmul,w
  7480  0AE7  0084               	movwf	4
  7481  0AE8  0851               	movf	eval_poly@d+1,w
  7482  0AE9  3D71               	addwfc	?___wmul+1,w
  7483  0AEA  0085               	movwf	5
  7484  0AEB  3F00               	moviw [0]fsr0
  7485  0AEC  00C0               	movwf	___ftadd@f1
  7486  0AED  3F01               	moviw [1]fsr0
  7487  0AEE  00C1               	movwf	___ftadd@f1+1
  7488  0AEF  3F02               	moviw [2]fsr0
  7489  0AF0  00C2               	movwf	___ftadd@f1+2
  7490  0AF1  0854               	movf	eval_poly@res,w
  7491  0AF2  00A0               	movwf	___ftmul@f1
  7492  0AF3  0855               	movf	eval_poly@res+1,w
  7493  0AF4  00A1               	movwf	___ftmul@f1+1
  7494  0AF5  0856               	movf	eval_poly@res+2,w
  7495  0AF6  00A2               	movwf	___ftmul@f1+2
  7496  0AF7  084D               	movf	eval_poly@x,w
  7497  0AF8  00A3               	movwf	___ftmul@f2
  7498  0AF9  084E               	movf	eval_poly@x+1,w
  7499  0AFA  00A4               	movwf	___ftmul@f2+1
  7500  0AFB  084F               	movf	eval_poly@x+2,w
  7501  0AFC  00A5               	movwf	___ftmul@f2+2
  7502  0AFD  318E  2683  318A   	fcall	___ftmul
  7503  0B00  0020               	movlb	0	; select bank0
  7504  0B01  0820               	movf	?___ftmul,w
  7505  0B02  00C3               	movwf	___ftadd@f2
  7506  0B03  0821               	movf	?___ftmul+1,w
  7507  0B04  00C4               	movwf	___ftadd@f2+1
  7508  0B05  0822               	movf	?___ftmul+2,w
  7509  0B06  00C5               	movwf	___ftadd@f2+2
  7510  0B07  3180  2042  318A   	fcall	___ftadd
  7511  0B0A  0020               	movlb	0	; select bank0
  7512  0B0B  0840               	movf	?___ftadd,w
  7513  0B0C  00D4               	movwf	eval_poly@res
  7514  0B0D  0841               	movf	?___ftadd+1,w
  7515  0B0E  00D5               	movwf	eval_poly@res+1
  7516  0B0F  0842               	movf	?___ftadd+2,w
  7517  0B10  2AD0               	goto	L1
  7518  0B11                     l2219:	
  7519  0B11  0854               	movf	eval_poly@res,w
  7520  0B12  00CD               	movwf	?_eval_poly
  7521  0B13  0855               	movf	eval_poly@res+1,w
  7522  0B14  00CE               	movwf	?_eval_poly+1
  7523  0B15  0856               	movf	eval_poly@res+2,w
  7524  0B16  00CF               	movwf	?_eval_poly+2
  7525  0B17  0008               	return
  7526  0B18                     __end_of_eval_poly:	
  7527                           
  7528                           	psect	text5
  7529  0E83                     __ptext5:	
  7530 ;; *************** function ___ftmul *****************
  7531 ;; Defined at:
  7532 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  f1              3    0[BANK0 ] float 
  7535 ;;  f2              3    3[BANK0 ] float 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7538 ;;  sign            1   15[BANK0 ] unsigned char 
  7539 ;;  cntr            1   14[BANK0 ] unsigned char 
  7540 ;;  exp             1   10[BANK0 ] unsigned char 
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  3    0[BANK0 ] float 
  7543 ;; Registers used:
  7544 ;;		wreg, status,2, status,0, pclath, cstack
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7550 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7551 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7552 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7553 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7554 ;;Total ram usage:       16 bytes
  7555 ;; Hardware stack levels used:    1
  7556 ;; Hardware stack levels required when called:    1
  7557 ;; This function calls:
  7558 ;;		___ftpack
  7559 ;; This function is called by:
  7560 ;;		_tempCalc
  7561 ;;		_log
  7562 ;;		_eval_poly
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           
  7567                           ;psect for function ___ftmul
  7568  0E83                     ___ftmul:	
  7569                           
  7570                           ;incstack = 0
  7571                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7572  0E83  0020               	movlb	0	; select bank0
  7573  0E84  0820               	movf	___ftmul@f1,w
  7574  0E85  00A6               	movwf	??___ftmul
  7575  0E86  0821               	movf	___ftmul@f1+1,w
  7576  0E87  00A7               	movwf	??___ftmul+1
  7577  0E88  0822               	movf	___ftmul@f1+2,w
  7578  0E89  00A8               	movwf	??___ftmul+2
  7579  0E8A  1003               	clrc
  7580  0E8B  0D27               	rlf	??___ftmul+1,w
  7581  0E8C  0D28               	rlf	??___ftmul+2,w
  7582  0E8D  00A9               	movwf	??___ftmul+3
  7583  0E8E  0829               	movf	??___ftmul+3,w
  7584  0E8F  00AA               	movwf	___ftmul@exp
  7585  0E90  082A               	movf	___ftmul@exp,w
  7586  0E91  1D03               	btfss	3,2
  7587  0E92  2E9A               	goto	l2087
  7588  0E93  3000               	movlw	0
  7589  0E94  00A0               	movwf	?___ftmul
  7590  0E95  3000               	movlw	0
  7591  0E96  00A1               	movwf	?___ftmul+1
  7592  0E97  3000               	movlw	0
  7593  0E98  00A2               	movwf	?___ftmul+2
  7594  0E99  0008               	return
  7595  0E9A                     l2087:	
  7596  0E9A  0823               	movf	___ftmul@f2,w
  7597  0E9B  00A6               	movwf	??___ftmul
  7598  0E9C  0824               	movf	___ftmul@f2+1,w
  7599  0E9D  00A7               	movwf	??___ftmul+1
  7600  0E9E  0825               	movf	___ftmul@f2+2,w
  7601  0E9F  00A8               	movwf	??___ftmul+2
  7602  0EA0  1003               	clrc
  7603  0EA1  0D27               	rlf	??___ftmul+1,w
  7604  0EA2  0D28               	rlf	??___ftmul+2,w
  7605  0EA3  00A9               	movwf	??___ftmul+3
  7606  0EA4  0829               	movf	??___ftmul+3,w
  7607  0EA5  00AF               	movwf	___ftmul@sign
  7608  0EA6  082F               	movf	___ftmul@sign,w
  7609  0EA7  1D03               	btfss	3,2
  7610  0EA8  2EB0               	goto	l2093
  7611  0EA9  3000               	movlw	0
  7612  0EAA  00A0               	movwf	?___ftmul
  7613  0EAB  3000               	movlw	0
  7614  0EAC  00A1               	movwf	?___ftmul+1
  7615  0EAD  3000               	movlw	0
  7616  0EAE  00A2               	movwf	?___ftmul+2
  7617  0EAF  0008               	return
  7618  0EB0                     l2093:	
  7619  0EB0  082F               	movf	___ftmul@sign,w
  7620  0EB1  3E7B               	addlw	123
  7621  0EB2  00A6               	movwf	??___ftmul
  7622  0EB3  0826               	movf	??___ftmul,w
  7623  0EB4  07AA               	addwf	___ftmul@exp,f
  7624  0EB5  0820               	movf	___ftmul@f1,w
  7625  0EB6  00A6               	movwf	??___ftmul
  7626  0EB7  0821               	movf	___ftmul@f1+1,w
  7627  0EB8  00A7               	movwf	??___ftmul+1
  7628  0EB9  0822               	movf	___ftmul@f1+2,w
  7629  0EBA  00A8               	movwf	??___ftmul+2
  7630  0EBB  3010               	movlw	16
  7631  0EBC                     u2215:	
  7632  0EBC  36A8               	lsrf	??___ftmul+2,f
  7633  0EBD  0CA7               	rrf	??___ftmul+1,f
  7634  0EBE  0CA6               	rrf	??___ftmul,f
  7635  0EBF  0B89               	decfsz	9,f
  7636  0EC0  2EBC               	goto	u2215
  7637  0EC1  0826               	movf	??___ftmul,w
  7638  0EC2  00A9               	movwf	??___ftmul+3
  7639  0EC3  0829               	movf	??___ftmul+3,w
  7640  0EC4  00AF               	movwf	___ftmul@sign
  7641  0EC5  0823               	movf	___ftmul@f2,w
  7642  0EC6  00A6               	movwf	??___ftmul
  7643  0EC7  0824               	movf	___ftmul@f2+1,w
  7644  0EC8  00A7               	movwf	??___ftmul+1
  7645  0EC9  0825               	movf	___ftmul@f2+2,w
  7646  0ECA  00A8               	movwf	??___ftmul+2
  7647  0ECB  3010               	movlw	16
  7648  0ECC                     u2225:	
  7649  0ECC  36A8               	lsrf	??___ftmul+2,f
  7650  0ECD  0CA7               	rrf	??___ftmul+1,f
  7651  0ECE  0CA6               	rrf	??___ftmul,f
  7652  0ECF  0B89               	decfsz	9,f
  7653  0ED0  2ECC               	goto	u2225
  7654  0ED1  0826               	movf	??___ftmul,w
  7655  0ED2  00A9               	movwf	??___ftmul+3
  7656  0ED3  0829               	movf	??___ftmul+3,w
  7657  0ED4  06AF               	xorwf	___ftmul@sign,f
  7658  0ED5  3080               	movlw	128
  7659  0ED6  00A6               	movwf	??___ftmul
  7660  0ED7  0826               	movf	??___ftmul,w
  7661  0ED8  05AF               	andwf	___ftmul@sign,f
  7662  0ED9  17A1               	bsf	___ftmul@f1+1,7
  7663  0EDA  17A4               	bsf	___ftmul@f2+1,7
  7664  0EDB  30FF               	movlw	255
  7665  0EDC  05A3               	andwf	___ftmul@f2,f
  7666  0EDD  30FF               	movlw	255
  7667  0EDE  05A4               	andwf	___ftmul@f2+1,f
  7668  0EDF  3000               	movlw	0
  7669  0EE0  05A5               	andwf	___ftmul@f2+2,f
  7670  0EE1  3000               	movlw	0
  7671  0EE2  00AB               	movwf	___ftmul@f3_as_product
  7672  0EE3  3000               	movlw	0
  7673  0EE4  00AC               	movwf	___ftmul@f3_as_product+1
  7674  0EE5  3000               	movlw	0
  7675  0EE6  00AD               	movwf	___ftmul@f3_as_product+2
  7676  0EE7  3007               	movlw	7
  7677  0EE8  00A6               	movwf	??___ftmul
  7678  0EE9  0826               	movf	??___ftmul,w
  7679  0EEA  00AE               	movwf	___ftmul@cntr
  7680  0EEB                     l2105:	
  7681  0EEB  1C20               	btfss	___ftmul@f1,0
  7682  0EEC  2EF3               	goto	l2109
  7683  0EED  0823               	movf	___ftmul@f2,w
  7684  0EEE  07AB               	addwf	___ftmul@f3_as_product,f
  7685  0EEF  0824               	movf	___ftmul@f2+1,w
  7686  0EF0  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7687  0EF1  0825               	movf	___ftmul@f2+2,w
  7688  0EF2  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7689  0EF3                     l2109:	
  7690  0EF3  3001               	movlw	1
  7691  0EF4                     u2245:	
  7692  0EF4  36A2               	lsrf	___ftmul@f1+2,f
  7693  0EF5  0CA1               	rrf	___ftmul@f1+1,f
  7694  0EF6  0CA0               	rrf	___ftmul@f1,f
  7695  0EF7  0B89               	decfsz	9,f
  7696  0EF8  2EF4               	goto	u2245
  7697  0EF9  3001               	movlw	1
  7698  0EFA                     u2255:	
  7699  0EFA  35A3               	lslf	___ftmul@f2,f
  7700  0EFB  0DA4               	rlf	___ftmul@f2+1,f
  7701  0EFC  0DA5               	rlf	___ftmul@f2+2,f
  7702  0EFD  0B89               	decfsz	9,f
  7703  0EFE  2EFA               	goto	u2255
  7704  0EFF  3001               	movlw	1
  7705  0F00  02AE               	subwf	___ftmul@cntr,f
  7706  0F01  1D03               	btfss	3,2
  7707  0F02  2EEB               	goto	l2105
  7708  0F03  3009               	movlw	9
  7709  0F04  00A6               	movwf	??___ftmul
  7710  0F05  0826               	movf	??___ftmul,w
  7711  0F06  00AE               	movwf	___ftmul@cntr
  7712  0F07                     l2117:	
  7713  0F07  1C20               	btfss	___ftmul@f1,0
  7714  0F08  2F0F               	goto	l2121
  7715  0F09  0823               	movf	___ftmul@f2,w
  7716  0F0A  07AB               	addwf	___ftmul@f3_as_product,f
  7717  0F0B  0824               	movf	___ftmul@f2+1,w
  7718  0F0C  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7719  0F0D  0825               	movf	___ftmul@f2+2,w
  7720  0F0E  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7721  0F0F                     l2121:	
  7722  0F0F  3001               	movlw	1
  7723  0F10                     u2285:	
  7724  0F10  36A2               	lsrf	___ftmul@f1+2,f
  7725  0F11  0CA1               	rrf	___ftmul@f1+1,f
  7726  0F12  0CA0               	rrf	___ftmul@f1,f
  7727  0F13  0B89               	decfsz	9,f
  7728  0F14  2F10               	goto	u2285
  7729  0F15  3001               	movlw	1
  7730  0F16                     u2295:	
  7731  0F16  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7732  0F17  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7733  0F18  0CAB               	rrf	___ftmul@f3_as_product,f
  7734  0F19  0B89               	decfsz	9,f
  7735  0F1A  2F16               	goto	u2295
  7736  0F1B  3001               	movlw	1
  7737  0F1C  02AE               	subwf	___ftmul@cntr,f
  7738  0F1D  1D03               	btfss	3,2
  7739  0F1E  2F07               	goto	l2117
  7740  0F1F  082B               	movf	___ftmul@f3_as_product,w
  7741  0F20  00F0               	movwf	___ftpack@arg
  7742  0F21  082C               	movf	___ftmul@f3_as_product+1,w
  7743  0F22  00F1               	movwf	___ftpack@arg+1
  7744  0F23  082D               	movf	___ftmul@f3_as_product+2,w
  7745  0F24  00F2               	movwf	___ftpack@arg+2
  7746  0F25  082A               	movf	___ftmul@exp,w
  7747  0F26  00A6               	movwf	??___ftmul
  7748  0F27  0826               	movf	??___ftmul,w
  7749  0F28  00F3               	movwf	___ftpack@exp
  7750  0F29  082F               	movf	___ftmul@sign,w
  7751  0F2A  00A7               	movwf	??___ftmul+1
  7752  0F2B  0827               	movf	??___ftmul+1,w
  7753  0F2C  00F4               	movwf	___ftpack@sign
  7754  0F2D  318B  2318         	fcall	___ftpack
  7755  0F2F  0870               	movf	?___ftpack,w
  7756  0F30  0020               	movlb	0	; select bank0
  7757  0F31  00A0               	movwf	?___ftmul
  7758  0F32  0871               	movf	?___ftpack+1,w
  7759  0F33  00A1               	movwf	?___ftmul+1
  7760  0F34  0872               	movf	?___ftpack+2,w
  7761  0F35  00A2               	movwf	?___ftmul+2
  7762  0F36  0008               	return
  7763  0F37                     __end_of___ftmul:	
  7764                           
  7765                           	psect	text6
  7766  0966                     __ptext6:	
  7767 ;; *************** function ___ftge *****************
  7768 ;; Defined at:
  7769 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;  ff1             3    0[COMMON] float 
  7772 ;;  ff2             3    3[COMMON] float 
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;		None               void
  7777 ;; Registers used:
  7778 ;;		wreg, status,2, status,0
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7784 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7788 ;;Total ram usage:        9 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; This function calls:
  7791 ;;		Nothing
  7792 ;; This function is called by:
  7793 ;;		_log
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           
  7798                           ;psect for function ___ftge
  7799  0966                     ___ftge:	
  7800                           
  7801                           ;incstack = 0
  7802                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7803  0966  1FF2               	btfss	___ftge@ff1+2,7
  7804  0967  297C               	goto	l2177
  7805  0968  0970               	comf	___ftge@ff1,w
  7806  0969  00F6               	movwf	??___ftge
  7807  096A  0971               	comf	___ftge@ff1+1,w
  7808  096B  00F7               	movwf	??___ftge+1
  7809  096C  0972               	comf	___ftge@ff1+2,w
  7810  096D  00F8               	movwf	??___ftge+2
  7811  096E  0AF6               	incf	??___ftge,f
  7812  096F  1903               	skipnz
  7813  0970  0AF7               	incf	??___ftge+1,f
  7814  0971  1903               	skipnz
  7815  0972  0AF8               	incf	??___ftge+2,f
  7816  0973  3000               	movlw	0
  7817  0974  0776               	addwf	??___ftge,w
  7818  0975  00F0               	movwf	___ftge@ff1
  7819  0976  3000               	movlw	0
  7820  0977  3D77               	addwfc	??___ftge+1,w
  7821  0978  00F1               	movwf	___ftge@ff1+1
  7822  0979  3080               	movlw	128
  7823  097A  3D78               	addwfc	??___ftge+2,w
  7824  097B  00F2               	movwf	___ftge@ff1+2
  7825  097C                     l2177:	
  7826  097C  1FF5               	btfss	___ftge@ff2+2,7
  7827  097D  2992               	goto	l2181
  7828  097E  0973               	comf	___ftge@ff2,w
  7829  097F  00F6               	movwf	??___ftge
  7830  0980  0974               	comf	___ftge@ff2+1,w
  7831  0981  00F7               	movwf	??___ftge+1
  7832  0982  0975               	comf	___ftge@ff2+2,w
  7833  0983  00F8               	movwf	??___ftge+2
  7834  0984  0AF6               	incf	??___ftge,f
  7835  0985  1903               	skipnz
  7836  0986  0AF7               	incf	??___ftge+1,f
  7837  0987  1903               	skipnz
  7838  0988  0AF8               	incf	??___ftge+2,f
  7839  0989  3000               	movlw	0
  7840  098A  0776               	addwf	??___ftge,w
  7841  098B  00F3               	movwf	___ftge@ff2
  7842  098C  3000               	movlw	0
  7843  098D  3D77               	addwfc	??___ftge+1,w
  7844  098E  00F4               	movwf	___ftge@ff2+1
  7845  098F  3080               	movlw	128
  7846  0990  3D78               	addwfc	??___ftge+2,w
  7847  0991  00F5               	movwf	___ftge@ff2+2
  7848  0992                     l2181:	
  7849  0992  3080               	movlw	128
  7850  0993  06F2               	xorwf	___ftge@ff1+2,f
  7851  0994  3080               	movlw	128
  7852  0995  06F5               	xorwf	___ftge@ff2+2,f
  7853  0996  0875               	movf	___ftge@ff2+2,w
  7854  0997  0272               	subwf	___ftge@ff1+2,w
  7855  0998  1D03               	skipz
  7856  0999  0008               	return
  7857  099A  0874               	movf	___ftge@ff2+1,w
  7858  099B  0271               	subwf	___ftge@ff1+1,w
  7859  099C  1D03               	skipz
  7860  099D  0008               	return
  7861  099E  0873               	movf	___ftge@ff2,w
  7862  099F  0270               	subwf	___ftge@ff1,w
  7863  09A0  0008               	return
  7864  09A1                     __end_of___ftge:	
  7865                           
  7866                           	psect	text7
  7867  08A5                     __ptext7:	
  7868 ;; *************** function ___ftsub *****************
  7869 ;; Defined at:
  7870 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  f2              3   45[BANK0 ] float 
  7873 ;;  f1              3   48[BANK0 ] float 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;		None
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  3   45[BANK0 ] float 
  7878 ;; Registers used:
  7879 ;;		wreg, status,2, status,0, pclath, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7885 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;Total ram usage:        6 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    2
  7892 ;; This function calls:
  7893 ;;		___ftadd
  7894 ;; This function is called by:
  7895 ;;		_tempCalc
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           
  7900                           ;psect for function ___ftsub
  7901  08A5                     ___ftsub:	
  7902                           
  7903                           ;incstack = 0
  7904                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7905  08A5  0020               	movlb	0	; select bank0
  7906  08A6  084F               	movf	___ftsub@f2+2,w
  7907  08A7  044E               	iorwf	___ftsub@f2+1,w
  7908  08A8  044D               	iorwf	___ftsub@f2,w
  7909  08A9  1903               	skipnz
  7910  08AA  28AD               	goto	l2569
  7911  08AB  3080               	movlw	128
  7912  08AC  06CF               	xorwf	___ftsub@f2+2,f
  7913  08AD                     l2569:	
  7914  08AD  0850               	movf	___ftsub@f1,w
  7915  08AE  00C0               	movwf	___ftadd@f1
  7916  08AF  0851               	movf	___ftsub@f1+1,w
  7917  08B0  00C1               	movwf	___ftadd@f1+1
  7918  08B1  0852               	movf	___ftsub@f1+2,w
  7919  08B2  00C2               	movwf	___ftadd@f1+2
  7920  08B3  084D               	movf	___ftsub@f2,w
  7921  08B4  00C3               	movwf	___ftadd@f2
  7922  08B5  084E               	movf	___ftsub@f2+1,w
  7923  08B6  00C4               	movwf	___ftadd@f2+1
  7924  08B7  084F               	movf	___ftsub@f2+2,w
  7925  08B8  00C5               	movwf	___ftadd@f2+2
  7926  08B9  3180  2042         	fcall	___ftadd
  7927  08BB  0020               	movlb	0	; select bank0
  7928  08BC  0840               	movf	?___ftadd,w
  7929  08BD  00CD               	movwf	?___ftsub
  7930  08BE  0841               	movf	?___ftadd+1,w
  7931  08BF  00CE               	movwf	?___ftsub+1
  7932  08C0  0842               	movf	?___ftadd+2,w
  7933  08C1  00CF               	movwf	?___ftsub+2
  7934  08C2  0008               	return
  7935  08C3                     __end_of___ftsub:	
  7936                           
  7937                           	psect	text8
  7938  0042                     __ptext8:	
  7939 ;; *************** function ___ftadd *****************
  7940 ;; Defined at:
  7941 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  f1              3   32[BANK0 ] float 
  7944 ;;  f2              3   35[BANK0 ] float 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  exp1            1   44[BANK0 ] unsigned char 
  7947 ;;  exp2            1   43[BANK0 ] unsigned char 
  7948 ;;  sign            1   42[BANK0 ] unsigned char 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  3   32[BANK0 ] float 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0, pclath, cstack
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7958 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;Total ram usage:       13 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    1
  7965 ;; This function calls:
  7966 ;;		___ftpack
  7967 ;; This function is called by:
  7968 ;;		_tempCalc
  7969 ;;		___ftsub
  7970 ;;		_log
  7971 ;;		_eval_poly
  7972 ;; This function uses a non-reentrant model
  7973 ;;
  7974                           
  7975                           
  7976                           ;psect for function ___ftadd
  7977  0042                     ___ftadd:	
  7978                           
  7979                           ;incstack = 0
  7980                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7981  0042  0020               	movlb	0	; select bank0
  7982  0043  0840               	movf	___ftadd@f1,w
  7983  0044  00C6               	movwf	??___ftadd
  7984  0045  0841               	movf	___ftadd@f1+1,w
  7985  0046  00C7               	movwf	??___ftadd+1
  7986  0047  0842               	movf	___ftadd@f1+2,w
  7987  0048  00C8               	movwf	??___ftadd+2
  7988  0049  1003               	clrc
  7989  004A  0D47               	rlf	??___ftadd+1,w
  7990  004B  0D48               	rlf	??___ftadd+2,w
  7991  004C  00C9               	movwf	??___ftadd+3
  7992  004D  0849               	movf	??___ftadd+3,w
  7993  004E  00CC               	movwf	___ftadd@exp1
  7994  004F  0843               	movf	___ftadd@f2,w
  7995  0050  00C6               	movwf	??___ftadd
  7996  0051  0844               	movf	___ftadd@f2+1,w
  7997  0052  00C7               	movwf	??___ftadd+1
  7998  0053  0845               	movf	___ftadd@f2+2,w
  7999  0054  00C8               	movwf	??___ftadd+2
  8000  0055  1003               	clrc
  8001  0056  0D47               	rlf	??___ftadd+1,w
  8002  0057  0D48               	rlf	??___ftadd+2,w
  8003  0058  00C9               	movwf	??___ftadd+3
  8004  0059  0849               	movf	??___ftadd+3,w
  8005  005A  00CB               	movwf	___ftadd@exp2
  8006  005B  084C               	movf	___ftadd@exp1,w
  8007  005C  1903               	btfsc	3,2
  8008  005D  286A               	goto	l2017
  8009  005E  084B               	movf	___ftadd@exp2,w
  8010  005F  024C               	subwf	___ftadd@exp1,w
  8011  0060  1803               	skipnc
  8012  0061  2871               	goto	l2021
  8013  0062  034C               	decf	___ftadd@exp1,w
  8014  0063  3AFF               	xorlw	255
  8015  0064  074B               	addwf	___ftadd@exp2,w
  8016  0065  00C6               	movwf	??___ftadd
  8017  0066  3019               	movlw	25
  8018  0067  0246               	subwf	??___ftadd,w
  8019  0068  1C03               	skipc
  8020  0069  2871               	goto	l2021
  8021  006A                     l2017:	
  8022  006A  0843               	movf	___ftadd@f2,w
  8023  006B  00C0               	movwf	?___ftadd
  8024  006C  0844               	movf	___ftadd@f2+1,w
  8025  006D  00C1               	movwf	?___ftadd+1
  8026  006E  0845               	movf	___ftadd@f2+2,w
  8027  006F  00C2               	movwf	?___ftadd+2
  8028  0070  0008               	return
  8029  0071                     l2021:	
  8030  0071  084B               	movf	___ftadd@exp2,w
  8031  0072  1903               	btfsc	3,2
  8032  0073  0008               	return
  8033  0074  084C               	movf	___ftadd@exp1,w
  8034  0075  024B               	subwf	___ftadd@exp2,w
  8035  0076  1803               	skipnc
  8036  0077  2880               	goto	l2027
  8037  0078  034B               	decf	___ftadd@exp2,w
  8038  0079  3AFF               	xorlw	255
  8039  007A  074C               	addwf	___ftadd@exp1,w
  8040  007B  00C6               	movwf	??___ftadd
  8041  007C  3019               	movlw	25
  8042  007D  0246               	subwf	??___ftadd,w
  8043  007E  1803               	btfsc	3,0
  8044  007F  0008               	return
  8045  0080                     l2027:	
  8046  0080  3006               	movlw	6
  8047  0081  00C6               	movwf	??___ftadd
  8048  0082  0846               	movf	??___ftadd,w
  8049  0083  00CA               	movwf	___ftadd@sign
  8050  0084  1BC2               	btfsc	___ftadd@f1+2,7
  8051  0085  17CA               	bsf	___ftadd@sign,7
  8052  0086  1BC5               	btfsc	___ftadd@f2+2,7
  8053  0087  174A               	bsf	___ftadd@sign,6
  8054  0088  17C1               	bsf	___ftadd@f1+1,7
  8055  0089  30FF               	movlw	255
  8056  008A  05C0               	andwf	___ftadd@f1,f
  8057  008B  30FF               	movlw	255
  8058  008C  05C1               	andwf	___ftadd@f1+1,f
  8059  008D  3000               	movlw	0
  8060  008E  05C2               	andwf	___ftadd@f1+2,f
  8061  008F  17C4               	bsf	___ftadd@f2+1,7
  8062  0090  30FF               	movlw	255
  8063  0091  05C3               	andwf	___ftadd@f2,f
  8064  0092  30FF               	movlw	255
  8065  0093  05C4               	andwf	___ftadd@f2+1,f
  8066  0094  3000               	movlw	0
  8067  0095  05C5               	andwf	___ftadd@f2+2,f
  8068  0096  084B               	movf	___ftadd@exp2,w
  8069  0097  024C               	subwf	___ftadd@exp1,w
  8070  0098  1803               	skipnc
  8071  0099  28BC               	goto	l2049
  8072  009A                     l2039:	
  8073  009A  3001               	movlw	1
  8074  009B                     u2055:	
  8075  009B  35C3               	lslf	___ftadd@f2,f
  8076  009C  0DC4               	rlf	___ftadd@f2+1,f
  8077  009D  0DC5               	rlf	___ftadd@f2+2,f
  8078  009E  0B89               	decfsz	9,f
  8079  009F  289B               	goto	u2055
  8080  00A0  3001               	movlw	1
  8081  00A1  02CB               	subwf	___ftadd@exp2,f
  8082  00A2  084B               	movf	___ftadd@exp2,w
  8083  00A3  064C               	xorwf	___ftadd@exp1,w
  8084  00A4  1903               	skipnz
  8085  00A5  28B7               	goto	l2047
  8086  00A6  3001               	movlw	1
  8087  00A7  02CA               	subwf	___ftadd@sign,f
  8088  00A8  084A               	movf	___ftadd@sign,w
  8089  00A9  3907               	andlw	7
  8090  00AA  1903               	btfsc	3,2
  8091  00AB  28B7               	goto	l2047
  8092  00AC  289A               	goto	l2039
  8093  00AD                     l2045:	
  8094  00AD  3001               	movlw	1
  8095  00AE                     u2085:	
  8096  00AE  36C2               	lsrf	___ftadd@f1+2,f
  8097  00AF  0CC1               	rrf	___ftadd@f1+1,f
  8098  00B0  0CC0               	rrf	___ftadd@f1,f
  8099  00B1  0B89               	decfsz	9,f
  8100  00B2  28AE               	goto	u2085
  8101  00B3  3001               	movlw	1
  8102  00B4  00C6               	movwf	??___ftadd
  8103  00B5  0846               	movf	??___ftadd,w
  8104  00B6  07CC               	addwf	___ftadd@exp1,f
  8105  00B7                     l2047:	
  8106  00B7  084C               	movf	___ftadd@exp1,w
  8107  00B8  064B               	xorwf	___ftadd@exp2,w
  8108  00B9  1903               	btfsc	3,2
  8109  00BA  28E1               	goto	l639
  8110  00BB  28AD               	goto	l2045
  8111  00BC                     l2049:	
  8112  00BC  084C               	movf	___ftadd@exp1,w
  8113  00BD  024B               	subwf	___ftadd@exp2,w
  8114  00BE  1803               	skipnc
  8115  00BF  28E1               	goto	l639
  8116  00C0                     l2051:	
  8117  00C0  3001               	movlw	1
  8118  00C1                     u2115:	
  8119  00C1  35C0               	lslf	___ftadd@f1,f
  8120  00C2  0DC1               	rlf	___ftadd@f1+1,f
  8121  00C3  0DC2               	rlf	___ftadd@f1+2,f
  8122  00C4  0B89               	decfsz	9,f
  8123  00C5  28C1               	goto	u2115
  8124  00C6  3001               	movlw	1
  8125  00C7  02CC               	subwf	___ftadd@exp1,f
  8126  00C8  084B               	movf	___ftadd@exp2,w
  8127  00C9  064C               	xorwf	___ftadd@exp1,w
  8128  00CA  1903               	skipnz
  8129  00CB  28DD               	goto	l2059
  8130  00CC  3001               	movlw	1
  8131  00CD  02CA               	subwf	___ftadd@sign,f
  8132  00CE  084A               	movf	___ftadd@sign,w
  8133  00CF  3907               	andlw	7
  8134  00D0  1903               	btfsc	3,2
  8135  00D1  28DD               	goto	l2059
  8136  00D2  28C0               	goto	l2051
  8137  00D3                     l2057:	
  8138  00D3  3001               	movlw	1
  8139  00D4                     u2145:	
  8140  00D4  36C5               	lsrf	___ftadd@f2+2,f
  8141  00D5  0CC4               	rrf	___ftadd@f2+1,f
  8142  00D6  0CC3               	rrf	___ftadd@f2,f
  8143  00D7  0B89               	decfsz	9,f
  8144  00D8  28D4               	goto	u2145
  8145  00D9  3001               	movlw	1
  8146  00DA  00C6               	movwf	??___ftadd
  8147  00DB  0846               	movf	??___ftadd,w
  8148  00DC  07CB               	addwf	___ftadd@exp2,f
  8149  00DD                     l2059:	
  8150  00DD  084C               	movf	___ftadd@exp1,w
  8151  00DE  064B               	xorwf	___ftadd@exp2,w
  8152  00DF  1D03               	skipz
  8153  00E0  28D3               	goto	l2057
  8154  00E1                     l639:	
  8155  00E1  1FCA               	btfss	___ftadd@sign,7
  8156  00E2  28F3               	goto	l2063
  8157  00E3  30FF               	movlw	255
  8158  00E4  06C0               	xorwf	___ftadd@f1,f
  8159  00E5  30FF               	movlw	255
  8160  00E6  06C1               	xorwf	___ftadd@f1+1,f
  8161  00E7  30FF               	movlw	255
  8162  00E8  06C2               	xorwf	___ftadd@f1+2,f
  8163  00E9  3001               	movlw	1
  8164  00EA  07C0               	addwf	___ftadd@f1,f
  8165  00EB  3000               	movlw	0
  8166  00EC  1803               	skipnc
  8167  00ED  3001               	movlw	1
  8168  00EE  07C1               	addwf	___ftadd@f1+1,f
  8169  00EF  3000               	movlw	0
  8170  00F0  1803               	skipnc
  8171  00F1  3001               	movlw	1
  8172  00F2  07C2               	addwf	___ftadd@f1+2,f
  8173  00F3                     l2063:	
  8174  00F3  1F4A               	btfss	___ftadd@sign,6
  8175  00F4  2905               	goto	l2067
  8176  00F5  30FF               	movlw	255
  8177  00F6  06C3               	xorwf	___ftadd@f2,f
  8178  00F7  30FF               	movlw	255
  8179  00F8  06C4               	xorwf	___ftadd@f2+1,f
  8180  00F9  30FF               	movlw	255
  8181  00FA  06C5               	xorwf	___ftadd@f2+2,f
  8182  00FB  3001               	movlw	1
  8183  00FC  07C3               	addwf	___ftadd@f2,f
  8184  00FD  3000               	movlw	0
  8185  00FE  1803               	skipnc
  8186  00FF  3001               	movlw	1
  8187  0100  07C4               	addwf	___ftadd@f2+1,f
  8188  0101  3000               	movlw	0
  8189  0102  1803               	skipnc
  8190  0103  3001               	movlw	1
  8191  0104  07C5               	addwf	___ftadd@f2+2,f
  8192  0105                     l2067:	
  8193  0105  01CA               	clrf	___ftadd@sign
  8194  0106  0840               	movf	___ftadd@f1,w
  8195  0107  07C3               	addwf	___ftadd@f2,f
  8196  0108  0841               	movf	___ftadd@f1+1,w
  8197  0109  3DC4               	addwfc	___ftadd@f2+1,f
  8198  010A  0842               	movf	___ftadd@f1+2,w
  8199  010B  3DC5               	addwfc	___ftadd@f2+2,f
  8200  010C  1FC5               	btfss	___ftadd@f2+2,7
  8201  010D  2920               	goto	l2077
  8202  010E  30FF               	movlw	255
  8203  010F  06C3               	xorwf	___ftadd@f2,f
  8204  0110  30FF               	movlw	255
  8205  0111  06C4               	xorwf	___ftadd@f2+1,f
  8206  0112  30FF               	movlw	255
  8207  0113  06C5               	xorwf	___ftadd@f2+2,f
  8208  0114  3001               	movlw	1
  8209  0115  07C3               	addwf	___ftadd@f2,f
  8210  0116  3000               	movlw	0
  8211  0117  1803               	skipnc
  8212  0118  3001               	movlw	1
  8213  0119  07C4               	addwf	___ftadd@f2+1,f
  8214  011A  3000               	movlw	0
  8215  011B  1803               	skipnc
  8216  011C  3001               	movlw	1
  8217  011D  07C5               	addwf	___ftadd@f2+2,f
  8218  011E  01CA               	clrf	___ftadd@sign
  8219  011F  0ACA               	incf	___ftadd@sign,f
  8220  0120                     l2077:	
  8221  0120  0843               	movf	___ftadd@f2,w
  8222  0121  00F0               	movwf	___ftpack@arg
  8223  0122  0844               	movf	___ftadd@f2+1,w
  8224  0123  00F1               	movwf	___ftpack@arg+1
  8225  0124  0845               	movf	___ftadd@f2+2,w
  8226  0125  00F2               	movwf	___ftpack@arg+2
  8227  0126  084C               	movf	___ftadd@exp1,w
  8228  0127  00C6               	movwf	??___ftadd
  8229  0128  0846               	movf	??___ftadd,w
  8230  0129  00F3               	movwf	___ftpack@exp
  8231  012A  084A               	movf	___ftadd@sign,w
  8232  012B  00C7               	movwf	??___ftadd+1
  8233  012C  0847               	movf	??___ftadd+1,w
  8234  012D  00F4               	movwf	___ftpack@sign
  8235  012E  318B  2318         	fcall	___ftpack
  8236  0130  0870               	movf	?___ftpack,w
  8237  0131  0020               	movlb	0	; select bank0
  8238  0132  00C0               	movwf	?___ftadd
  8239  0133  0871               	movf	?___ftpack+1,w
  8240  0134  00C1               	movwf	?___ftadd+1
  8241  0135  0872               	movf	?___ftpack+2,w
  8242  0136  00C2               	movwf	?___ftadd+2
  8243  0137  0008               	return
  8244  0138                     __end_of___ftadd:	
  8245                           
  8246                           	psect	text9
  8247  0D2A                     __ptext9:	
  8248 ;; *************** function ___ftdiv *****************
  8249 ;; Defined at:
  8250 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  f2              3   16[BANK0 ] float 
  8253 ;;  f1              3   19[BANK0 ] float 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  f3              3   27[BANK0 ] float 
  8256 ;;  sign            1   31[BANK0 ] unsigned char 
  8257 ;;  exp             1   30[BANK0 ] unsigned char 
  8258 ;;  cntr            1   26[BANK0 ] unsigned char 
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  3   16[BANK0 ] float 
  8261 ;; Registers used:
  8262 ;;		wreg, status,2, status,0, pclath, cstack
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8268 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8269 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8270 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;Total ram usage:       16 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:    1
  8275 ;; This function calls:
  8276 ;;		___ftpack
  8277 ;; This function is called by:
  8278 ;;		_tempCalc
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           
  8283                           ;psect for function ___ftdiv
  8284  0D2A                     ___ftdiv:	
  8285                           
  8286                           ;incstack = 0
  8287                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8288  0D2A  0020               	movlb	0	; select bank0
  8289  0D2B  0833               	movf	___ftdiv@f1,w
  8290  0D2C  00B6               	movwf	??___ftdiv
  8291  0D2D  0834               	movf	___ftdiv@f1+1,w
  8292  0D2E  00B7               	movwf	??___ftdiv+1
  8293  0D2F  0835               	movf	___ftdiv@f1+2,w
  8294  0D30  00B8               	movwf	??___ftdiv+2
  8295  0D31  1003               	clrc
  8296  0D32  0D37               	rlf	??___ftdiv+1,w
  8297  0D33  0D38               	rlf	??___ftdiv+2,w
  8298  0D34  00B9               	movwf	??___ftdiv+3
  8299  0D35  0839               	movf	??___ftdiv+3,w
  8300  0D36  00BE               	movwf	___ftdiv@exp
  8301  0D37  083E               	movf	___ftdiv@exp,w
  8302  0D38  1D03               	btfss	3,2
  8303  0D39  2D41               	goto	l2529
  8304  0D3A  3000               	movlw	0
  8305  0D3B  00B0               	movwf	?___ftdiv
  8306  0D3C  3000               	movlw	0
  8307  0D3D  00B1               	movwf	?___ftdiv+1
  8308  0D3E  3000               	movlw	0
  8309  0D3F  00B2               	movwf	?___ftdiv+2
  8310  0D40  0008               	return
  8311  0D41                     l2529:	
  8312  0D41  0830               	movf	___ftdiv@f2,w
  8313  0D42  00B6               	movwf	??___ftdiv
  8314  0D43  0831               	movf	___ftdiv@f2+1,w
  8315  0D44  00B7               	movwf	??___ftdiv+1
  8316  0D45  0832               	movf	___ftdiv@f2+2,w
  8317  0D46  00B8               	movwf	??___ftdiv+2
  8318  0D47  1003               	clrc
  8319  0D48  0D37               	rlf	??___ftdiv+1,w
  8320  0D49  0D38               	rlf	??___ftdiv+2,w
  8321  0D4A  00B9               	movwf	??___ftdiv+3
  8322  0D4B  0839               	movf	??___ftdiv+3,w
  8323  0D4C  00BF               	movwf	___ftdiv@sign
  8324  0D4D  083F               	movf	___ftdiv@sign,w
  8325  0D4E  1D03               	btfss	3,2
  8326  0D4F  2D57               	goto	l2535
  8327  0D50  3000               	movlw	0
  8328  0D51  00B0               	movwf	?___ftdiv
  8329  0D52  3000               	movlw	0
  8330  0D53  00B1               	movwf	?___ftdiv+1
  8331  0D54  3000               	movlw	0
  8332  0D55  00B2               	movwf	?___ftdiv+2
  8333  0D56  0008               	return
  8334  0D57                     l2535:	
  8335  0D57  3000               	movlw	0
  8336  0D58  00BB               	movwf	___ftdiv@f3
  8337  0D59  3000               	movlw	0
  8338  0D5A  00BC               	movwf	___ftdiv@f3+1
  8339  0D5B  3000               	movlw	0
  8340  0D5C  00BD               	movwf	___ftdiv@f3+2
  8341  0D5D  3089               	movlw	137
  8342  0D5E  073F               	addwf	___ftdiv@sign,w
  8343  0D5F  00B6               	movwf	??___ftdiv
  8344  0D60  0836               	movf	??___ftdiv,w
  8345  0D61  02BE               	subwf	___ftdiv@exp,f
  8346  0D62  0833               	movf	___ftdiv@f1,w
  8347  0D63  00B6               	movwf	??___ftdiv
  8348  0D64  0834               	movf	___ftdiv@f1+1,w
  8349  0D65  00B7               	movwf	??___ftdiv+1
  8350  0D66  0835               	movf	___ftdiv@f1+2,w
  8351  0D67  00B8               	movwf	??___ftdiv+2
  8352  0D68  3010               	movlw	16
  8353  0D69                     u2785:	
  8354  0D69  36B8               	lsrf	??___ftdiv+2,f
  8355  0D6A  0CB7               	rrf	??___ftdiv+1,f
  8356  0D6B  0CB6               	rrf	??___ftdiv,f
  8357  0D6C  0B89               	decfsz	9,f
  8358  0D6D  2D69               	goto	u2785
  8359  0D6E  0836               	movf	??___ftdiv,w
  8360  0D6F  00B9               	movwf	??___ftdiv+3
  8361  0D70  0839               	movf	??___ftdiv+3,w
  8362  0D71  00BF               	movwf	___ftdiv@sign
  8363  0D72  0830               	movf	___ftdiv@f2,w
  8364  0D73  00B6               	movwf	??___ftdiv
  8365  0D74  0831               	movf	___ftdiv@f2+1,w
  8366  0D75  00B7               	movwf	??___ftdiv+1
  8367  0D76  0832               	movf	___ftdiv@f2+2,w
  8368  0D77  00B8               	movwf	??___ftdiv+2
  8369  0D78  3010               	movlw	16
  8370  0D79                     u2795:	
  8371  0D79  36B8               	lsrf	??___ftdiv+2,f
  8372  0D7A  0CB7               	rrf	??___ftdiv+1,f
  8373  0D7B  0CB6               	rrf	??___ftdiv,f
  8374  0D7C  0B89               	decfsz	9,f
  8375  0D7D  2D79               	goto	u2795
  8376  0D7E  0836               	movf	??___ftdiv,w
  8377  0D7F  00B9               	movwf	??___ftdiv+3
  8378  0D80  0839               	movf	??___ftdiv+3,w
  8379  0D81  06BF               	xorwf	___ftdiv@sign,f
  8380  0D82  3080               	movlw	128
  8381  0D83  00B6               	movwf	??___ftdiv
  8382  0D84  0836               	movf	??___ftdiv,w
  8383  0D85  05BF               	andwf	___ftdiv@sign,f
  8384  0D86  17B4               	bsf	___ftdiv@f1+1,7
  8385  0D87  30FF               	movlw	255
  8386  0D88  05B3               	andwf	___ftdiv@f1,f
  8387  0D89  30FF               	movlw	255
  8388  0D8A  05B4               	andwf	___ftdiv@f1+1,f
  8389  0D8B  3000               	movlw	0
  8390  0D8C  05B5               	andwf	___ftdiv@f1+2,f
  8391  0D8D  17B1               	bsf	___ftdiv@f2+1,7
  8392  0D8E  30FF               	movlw	255
  8393  0D8F  05B0               	andwf	___ftdiv@f2,f
  8394  0D90  30FF               	movlw	255
  8395  0D91  05B1               	andwf	___ftdiv@f2+1,f
  8396  0D92  3000               	movlw	0
  8397  0D93  05B2               	andwf	___ftdiv@f2+2,f
  8398  0D94  3018               	movlw	24
  8399  0D95  00B6               	movwf	??___ftdiv
  8400  0D96  0836               	movf	??___ftdiv,w
  8401  0D97  00BA               	movwf	___ftdiv@cntr
  8402  0D98                     l2549:	
  8403  0D98  3001               	movlw	1
  8404  0D99                     u2805:	
  8405  0D99  35BB               	lslf	___ftdiv@f3,f
  8406  0D9A  0DBC               	rlf	___ftdiv@f3+1,f
  8407  0D9B  0DBD               	rlf	___ftdiv@f3+2,f
  8408  0D9C  0B89               	decfsz	9,f
  8409  0D9D  2D99               	goto	u2805
  8410  0D9E  0832               	movf	___ftdiv@f2+2,w
  8411  0D9F  0235               	subwf	___ftdiv@f1+2,w
  8412  0DA0  1D03               	skipz
  8413  0DA1  2DA8               	goto	u2815
  8414  0DA2  0831               	movf	___ftdiv@f2+1,w
  8415  0DA3  0234               	subwf	___ftdiv@f1+1,w
  8416  0DA4  1D03               	skipz
  8417  0DA5  2DA8               	goto	u2815
  8418  0DA6  0830               	movf	___ftdiv@f2,w
  8419  0DA7  0233               	subwf	___ftdiv@f1,w
  8420  0DA8                     u2815:	
  8421  0DA8  1C03               	skipc
  8422  0DA9  2DB1               	goto	l2557
  8423  0DAA  0830               	movf	___ftdiv@f2,w
  8424  0DAB  02B3               	subwf	___ftdiv@f1,f
  8425  0DAC  0831               	movf	___ftdiv@f2+1,w
  8426  0DAD  3BB4               	subwfb	___ftdiv@f1+1,f
  8427  0DAE  0832               	movf	___ftdiv@f2+2,w
  8428  0DAF  3BB5               	subwfb	___ftdiv@f1+2,f
  8429  0DB0  143B               	bsf	___ftdiv@f3,0
  8430  0DB1                     l2557:	
  8431  0DB1  3001               	movlw	1
  8432  0DB2                     u2825:	
  8433  0DB2  35B3               	lslf	___ftdiv@f1,f
  8434  0DB3  0DB4               	rlf	___ftdiv@f1+1,f
  8435  0DB4  0DB5               	rlf	___ftdiv@f1+2,f
  8436  0DB5  0B89               	decfsz	9,f
  8437  0DB6  2DB2               	goto	u2825
  8438  0DB7  3001               	movlw	1
  8439  0DB8  02BA               	subwf	___ftdiv@cntr,f
  8440  0DB9  1D03               	btfss	3,2
  8441  0DBA  2D98               	goto	l2549
  8442  0DBB  083B               	movf	___ftdiv@f3,w
  8443  0DBC  00F0               	movwf	___ftpack@arg
  8444  0DBD  083C               	movf	___ftdiv@f3+1,w
  8445  0DBE  00F1               	movwf	___ftpack@arg+1
  8446  0DBF  083D               	movf	___ftdiv@f3+2,w
  8447  0DC0  00F2               	movwf	___ftpack@arg+2
  8448  0DC1  083E               	movf	___ftdiv@exp,w
  8449  0DC2  00B6               	movwf	??___ftdiv
  8450  0DC3  0836               	movf	??___ftdiv,w
  8451  0DC4  00F3               	movwf	___ftpack@exp
  8452  0DC5  083F               	movf	___ftdiv@sign,w
  8453  0DC6  00B7               	movwf	??___ftdiv+1
  8454  0DC7  0837               	movf	??___ftdiv+1,w
  8455  0DC8  00F4               	movwf	___ftpack@sign
  8456  0DC9  318B  2318         	fcall	___ftpack
  8457  0DCB  0870               	movf	?___ftpack,w
  8458  0DCC  0020               	movlb	0	; select bank0
  8459  0DCD  00B0               	movwf	?___ftdiv
  8460  0DCE  0871               	movf	?___ftpack+1,w
  8461  0DCF  00B1               	movwf	?___ftdiv+1
  8462  0DD0  0872               	movf	?___ftpack+2,w
  8463  0DD1  00B2               	movwf	?___ftdiv+2
  8464  0DD2  0008               	return
  8465  0DD3                     __end_of___ftdiv:	
  8466                           
  8467                           	psect	text10
  8468  0361                     __ptext10:	
  8469 ;; *************** function _readAnalog *****************
  8470 ;; Defined at:
  8471 ;;		line 38 in file "adc.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;  channel         2    6[BANK0 ] int 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;  value           2   11[COMMON] int 
  8476 ;;  analog_chann    2    9[COMMON] int 
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  2    6[BANK0 ] int 
  8479 ;; Registers used:
  8480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8486 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8490 ;;Total ram usage:       21 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; Hardware stack levels required when called:    1
  8493 ;; This function calls:
  8494 ;;		_ADCRead
  8495 ;;		___aldiv
  8496 ;;		___bmul
  8497 ;; This function is called by:
  8498 ;;		_main
  8499 ;; This function uses a non-reentrant model
  8500 ;;
  8501                           
  8502                           
  8503                           ;psect for function _readAnalog
  8504  0361                     _readAnalog:	
  8505                           
  8506                           ;adc.c: 40: int value;
  8507                           ;adc.c: 42: int analog_channel = channels[channel];
  8508                           
  8509                           ;incstack = 0
  8510                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8511  0361  0020               	movlb	0	; select bank0
  8512  0362  3526               	lslf	readAnalog@channel,w
  8513  0363  3EB0               	addlw	(low (_channels| (0+256)))& (0+255)
  8514  0364  0086               	movwf	6
  8515  0365  3001               	movlw	1	; select bank3/4
  8516  0366  0087               	movwf	7
  8517  0367  3F40               	moviw [0]fsr1
  8518  0368  00F9               	movwf	readAnalog@analog_channel
  8519  0369  3F41               	moviw [1]fsr1
  8520  036A  00FA               	movwf	readAnalog@analog_channel+1
  8521                           
  8522                           ;adc.c: 44: value = ADCRead(analog_channel);
  8523  036B  0879               	movf	readAnalog@analog_channel,w
  8524  036C  3197  27DE  3183   	fcall	_ADCRead
  8525  036F  0871               	movf	?_ADCRead+1,w
  8526  0370  00FC               	movwf	readAnalog@value+1
  8527  0371  0870               	movf	?_ADCRead,w
  8528  0372  00FB               	movwf	readAnalog@value
  8529                           
  8530                           ;adc.c: 46: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  8531  0373  0020               	movlb	0	; select bank0
  8532  0374  0826               	movf	readAnalog@channel,w
  8533  0375  00A8               	movwf	??_readAnalog
  8534  0376  3001               	movlw	1
  8535  0377                     u2855:	
  8536  0377  35A8               	lslf	??_readAnalog,f
  8537  0378  3EFF               	addlw	-1
  8538  0379  1D03               	skipz
  8539  037A  2B77               	goto	u2855
  8540  037B  3528               	lslf	??_readAnalog,w
  8541  037C  3EC8               	addlw	(low (_totals| 0))& (0+255)
  8542  037D  0086               	movwf	6
  8543  037E  0187               	clrf	7
  8544  037F  3F40               	moviw [0]fsr1
  8545  0380  00A9               	movwf	??_readAnalog+1
  8546  0381  3F41               	moviw [1]fsr1
  8547  0382  00AA               	movwf	??_readAnalog+2
  8548  0383  3F42               	moviw [2]fsr1
  8549  0384  00AB               	movwf	??_readAnalog+3
  8550  0385  3F43               	moviw [3]fsr1
  8551  0386  00AC               	movwf	??_readAnalog+4
  8552  0387  0021               	movlb	1	; select bank1
  8553  0388  0864               	movf	_sampleIndex^(0+128),w
  8554  0389  0020               	movlb	0	; select bank0
  8555  038A  00AD               	movwf	??_readAnalog+5
  8556  038B  3001               	movlw	1
  8557  038C                     u2865:	
  8558  038C  35AD               	lslf	??_readAnalog+5,f
  8559  038D  0B89               	decfsz	9,f
  8560  038E  2B8C               	goto	u2865
  8561  038F  3028               	movlw	40
  8562  0390  00AE               	movwf	??_readAnalog+6
  8563  0391  082E               	movf	??_readAnalog+6,w
  8564  0392  00F0               	movwf	___bmul@multiplicand
  8565  0393  0826               	movf	readAnalog@channel,w
  8566  0394  3188  2001  3183   	fcall	___bmul
  8567  0397  3E20               	addlw	(low (_samples| (0+512)))& (0+255)
  8568  0398  0020               	movlb	0	; select bank0
  8569  0399  072D               	addwf	??_readAnalog+5,w
  8570  039A  00AF               	movwf	??_readAnalog+7
  8571  039B  082F               	movf	??_readAnalog+7,w
  8572  039C  0086               	movwf	6
  8573  039D  3002               	movlw	2	; select bank4/5
  8574  039E  0087               	movwf	7
  8575  039F  3F40               	moviw [0]fsr1
  8576  03A0  00B0               	movwf	??_readAnalog+8
  8577  03A1  3F41               	moviw [1]fsr1
  8578  03A2  00B1               	movwf	??_readAnalog+9
  8579  03A3  0830               	movf	??_readAnalog+8,w
  8580  03A4  00B2               	movwf	??_readAnalog+10
  8581  03A5  0831               	movf	??_readAnalog+9,w
  8582  03A6  00B3               	movwf	??_readAnalog+11
  8583  03A7  01B4               	clrf	??_readAnalog+12
  8584  03A8  01B5               	clrf	??_readAnalog+13
  8585  03A9  09B2               	comf	??_readAnalog+10,f
  8586  03AA  09B3               	comf	??_readAnalog+11,f
  8587  03AB  09B4               	comf	??_readAnalog+12,f
  8588  03AC  09B5               	comf	??_readAnalog+13,f
  8589  03AD  0AB2               	incf	??_readAnalog+10,f
  8590  03AE  1903               	skipnz
  8591  03AF  0AB3               	incf	??_readAnalog+11,f
  8592  03B0  1903               	skipnz
  8593  03B1  0AB4               	incf	??_readAnalog+12,f
  8594  03B2  1903               	skipnz
  8595  03B3  0AB5               	incf	??_readAnalog+13,f
  8596  03B4  0832               	movf	??_readAnalog+10,w
  8597  03B5  07A9               	addwf	??_readAnalog+1,f
  8598  03B6  0833               	movf	??_readAnalog+11,w
  8599  03B7  3DAA               	addwfc	??_readAnalog+2,f
  8600  03B8  0834               	movf	??_readAnalog+12,w
  8601  03B9  3DAB               	addwfc	??_readAnalog+3,f
  8602  03BA  0835               	movf	??_readAnalog+13,w
  8603  03BB  3DAC               	addwfc	??_readAnalog+4,f
  8604  03BC  0826               	movf	readAnalog@channel,w
  8605  03BD  00B6               	movwf	??_readAnalog+14
  8606  03BE  3001               	movlw	1
  8607  03BF                     u2875:	
  8608  03BF  35B6               	lslf	??_readAnalog+14,f
  8609  03C0  3EFF               	addlw	-1
  8610  03C1  1D03               	skipz
  8611  03C2  2BBF               	goto	u2875
  8612  03C3  3536               	lslf	??_readAnalog+14,w
  8613  03C4  3EC8               	addlw	(low (_totals| 0))& (0+255)
  8614  03C5  0086               	movwf	6
  8615  03C6  0187               	clrf	7
  8616  03C7  0829               	movf	??_readAnalog+1,w
  8617  03C8  3FC0               	movwi [0]fsr1
  8618  03C9  082A               	movf	??_readAnalog+2,w
  8619  03CA  3FC1               	movwi [1]fsr1
  8620  03CB  082B               	movf	??_readAnalog+3,w
  8621  03CC  3FC2               	movwi [2]fsr1
  8622  03CD  082C               	movf	??_readAnalog+4,w
  8623  03CE  3FC3               	movwi [3]fsr1
  8624                           
  8625                           ;adc.c: 48: samples[channel][sampleIndex] = value;
  8626  03CF  0021               	movlb	1	; select bank1
  8627  03D0  0864               	movf	_sampleIndex^(0+128),w
  8628  03D1  0020               	movlb	0	; select bank0
  8629  03D2  00A8               	movwf	??_readAnalog
  8630  03D3  3001               	movlw	1
  8631  03D4                     u2885:	
  8632  03D4  35A8               	lslf	??_readAnalog,f
  8633  03D5  0B89               	decfsz	9,f
  8634  03D6  2BD4               	goto	u2885
  8635  03D7  3028               	movlw	40
  8636  03D8  00A9               	movwf	??_readAnalog+1
  8637  03D9  0829               	movf	??_readAnalog+1,w
  8638  03DA  00F0               	movwf	___bmul@multiplicand
  8639  03DB  0826               	movf	readAnalog@channel,w
  8640  03DC  3188  2001  3183   	fcall	___bmul
  8641  03DF  3E20               	addlw	(low (_samples| (0+512)))& (0+255)
  8642  03E0  0020               	movlb	0	; select bank0
  8643  03E1  0728               	addwf	??_readAnalog,w
  8644  03E2  00AA               	movwf	??_readAnalog+2
  8645  03E3  082A               	movf	??_readAnalog+2,w
  8646  03E4  0086               	movwf	6
  8647  03E5  3002               	movlw	2	; select bank4/5
  8648  03E6  0087               	movwf	7
  8649  03E7  087B               	movf	readAnalog@value,w
  8650  03E8  3FC0               	movwi [0]fsr1
  8651  03E9  087C               	movf	readAnalog@value+1,w
  8652  03EA  3FC1               	movwi [1]fsr1
  8653                           
  8654                           ;adc.c: 50: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  8655  03EB  0826               	movf	readAnalog@channel,w
  8656  03EC  00A8               	movwf	??_readAnalog
  8657  03ED  3001               	movlw	1
  8658  03EE                     u2895:	
  8659  03EE  35A8               	lslf	??_readAnalog,f
  8660  03EF  3EFF               	addlw	-1
  8661  03F0  1D03               	skipz
  8662  03F1  2BEE               	goto	u2895
  8663  03F2  3528               	lslf	??_readAnalog,w
  8664  03F3  3EC8               	addlw	(low (_totals| 0))& (0+255)
  8665  03F4  0086               	movwf	6
  8666  03F5  0187               	clrf	7
  8667  03F6  3F40               	moviw [0]fsr1
  8668  03F7  00A9               	movwf	??_readAnalog+1
  8669  03F8  3F41               	moviw [1]fsr1
  8670  03F9  00AA               	movwf	??_readAnalog+2
  8671  03FA  3F42               	moviw [2]fsr1
  8672  03FB  00AB               	movwf	??_readAnalog+3
  8673  03FC  3F43               	moviw [3]fsr1
  8674  03FD  00AC               	movwf	??_readAnalog+4
  8675  03FE  0021               	movlb	1	; select bank1
  8676  03FF  0864               	movf	_sampleIndex^(0+128),w
  8677  0400  0020               	movlb	0	; select bank0
  8678  0401  00AD               	movwf	??_readAnalog+5
  8679  0402  3001               	movlw	1
  8680  0403                     u2905:	
  8681  0403  35AD               	lslf	??_readAnalog+5,f
  8682  0404  0B89               	decfsz	9,f
  8683  0405  2C03               	goto	u2905
  8684  0406  3028               	movlw	40
  8685  0407  00AE               	movwf	??_readAnalog+6
  8686  0408  082E               	movf	??_readAnalog+6,w
  8687  0409  00F0               	movwf	___bmul@multiplicand
  8688  040A  0826               	movf	readAnalog@channel,w
  8689  040B  3188  2001  3183   	fcall	___bmul
  8690  040E  3E20               	addlw	(low (_samples| (0+512)))& (0+255)
  8691  040F  0020               	movlb	0	; select bank0
  8692  0410  072D               	addwf	??_readAnalog+5,w
  8693  0411  00AF               	movwf	??_readAnalog+7
  8694  0412  082F               	movf	??_readAnalog+7,w
  8695  0413  0086               	movwf	6
  8696  0414  3002               	movlw	2	; select bank4/5
  8697  0415  0087               	movwf	7
  8698  0416  3F40               	moviw [0]fsr1
  8699  0417  00B0               	movwf	??_readAnalog+8
  8700  0418  3F41               	moviw [1]fsr1
  8701  0419  00B1               	movwf	??_readAnalog+9
  8702  041A  0830               	movf	??_readAnalog+8,w
  8703  041B  00B2               	movwf	??_readAnalog+10
  8704  041C  0831               	movf	??_readAnalog+9,w
  8705  041D  00B3               	movwf	??_readAnalog+11
  8706  041E  01B4               	clrf	??_readAnalog+12
  8707  041F  01B5               	clrf	??_readAnalog+13
  8708  0420  0832               	movf	??_readAnalog+10,w
  8709  0421  07A9               	addwf	??_readAnalog+1,f
  8710  0422  0833               	movf	??_readAnalog+11,w
  8711  0423  3DAA               	addwfc	??_readAnalog+2,f
  8712  0424  0834               	movf	??_readAnalog+12,w
  8713  0425  3DAB               	addwfc	??_readAnalog+3,f
  8714  0426  0835               	movf	??_readAnalog+13,w
  8715  0427  3DAC               	addwfc	??_readAnalog+4,f
  8716  0428  0826               	movf	readAnalog@channel,w
  8717  0429  00B6               	movwf	??_readAnalog+14
  8718  042A  3001               	movlw	1
  8719  042B                     u2915:	
  8720  042B  35B6               	lslf	??_readAnalog+14,f
  8721  042C  3EFF               	addlw	-1
  8722  042D  1D03               	skipz
  8723  042E  2C2B               	goto	u2915
  8724  042F  3536               	lslf	??_readAnalog+14,w
  8725  0430  3EC8               	addlw	(low (_totals| 0))& (0+255)
  8726  0431  0086               	movwf	6
  8727  0432  0187               	clrf	7
  8728  0433  0829               	movf	??_readAnalog+1,w
  8729  0434  3FC0               	movwi [0]fsr1
  8730  0435  082A               	movf	??_readAnalog+2,w
  8731  0436  3FC1               	movwi [1]fsr1
  8732  0437  082B               	movf	??_readAnalog+3,w
  8733  0438  3FC2               	movwi [2]fsr1
  8734  0439  082C               	movf	??_readAnalog+4,w
  8735  043A  3FC3               	movwi [3]fsr1
  8736                           
  8737                           ;adc.c: 52: if(channel>=(2-1))
  8738  043B  0827               	movf	readAnalog@channel+1,w
  8739  043C  3A80               	xorlw	128
  8740  043D  00A8               	movwf	??_readAnalog
  8741  043E  3080               	movlw	128
  8742  043F  0228               	subwf	??_readAnalog,w
  8743  0440  1D03               	skipz
  8744  0441  2C44               	goto	u2925
  8745  0442  3001               	movlw	1
  8746  0443  0226               	subwf	readAnalog@channel,w
  8747  0444                     u2925:	
  8748  0444  1C03               	skipc
  8749  0445  2C54               	goto	l2587
  8750                           
  8751                           ;adc.c: 53: {
  8752                           ;adc.c: 54: sampleIndex+=1;
  8753  0446  3001               	movlw	1
  8754  0447  0021               	movlb	1	; select bank1
  8755  0448  07E4               	addwf	_sampleIndex^(0+128),f
  8756  0449  3000               	movlw	0
  8757  044A  3DE5               	addwfc	(_sampleIndex+1)^(0+128),f
  8758                           
  8759                           ;adc.c: 55: if(sampleIndex >= 20)sampleIndex = 0;
  8760  044B  3000               	movlw	0
  8761  044C  0265               	subwf	(_sampleIndex+1)^(0+128),w
  8762  044D  3014               	movlw	20
  8763  044E  1903               	skipnz
  8764  044F  0264               	subwf	_sampleIndex^(0+128),w
  8765  0450  1C03               	skipc
  8766  0451  2C54               	goto	l2587
  8767  0452  01E4               	clrf	_sampleIndex^(0+128)
  8768  0453  01E5               	clrf	(_sampleIndex+1)^(0+128)
  8769  0454                     l2587:	
  8770                           
  8771                           ;adc.c: 56: }
  8772                           ;adc.c: 58: value = totals[channel]/20;
  8773  0454  3000               	movlw	0
  8774  0455  00F3               	movwf	___aldiv@divisor+3
  8775  0456  3000               	movlw	0
  8776  0457  00F2               	movwf	___aldiv@divisor+2
  8777  0458  3000               	movlw	0
  8778  0459  00F1               	movwf	___aldiv@divisor+1
  8779  045A  3014               	movlw	20
  8780  045B  00F0               	movwf	___aldiv@divisor
  8781  045C  0020               	movlb	0	; select bank0
  8782  045D  0826               	movf	readAnalog@channel,w
  8783  045E  00A8               	movwf	??_readAnalog
  8784  045F  3001               	movlw	1
  8785  0460                     u2945:	
  8786  0460  35A8               	lslf	??_readAnalog,f
  8787  0461  3EFF               	addlw	-1
  8788  0462  1D03               	skipz
  8789  0463  2C60               	goto	u2945
  8790  0464  3528               	lslf	??_readAnalog,w
  8791  0465  3EC8               	addlw	(low (_totals| 0))& (0+255)
  8792  0466  0086               	movwf	6
  8793  0467  0187               	clrf	7
  8794  0468  3F40               	moviw [0]fsr1
  8795  0469  00F4               	movwf	___aldiv@dividend
  8796  046A  3F41               	moviw [1]fsr1
  8797  046B  00F5               	movwf	___aldiv@dividend+1
  8798  046C  3F42               	moviw [2]fsr1
  8799  046D  00F6               	movwf	___aldiv@dividend+2
  8800  046E  3F43               	moviw [3]fsr1
  8801  046F  00F7               	movwf	___aldiv@dividend+3
  8802  0470  318B  237C         	fcall	___aldiv
  8803  0472  0871               	movf	?___aldiv+1,w
  8804  0473  00FC               	movwf	readAnalog@value+1
  8805  0474  0870               	movf	?___aldiv,w
  8806  0475  00FB               	movwf	readAnalog@value
  8807                           
  8808                           ;adc.c: 60: return value;
  8809  0476  087C               	movf	readAnalog@value+1,w
  8810  0477  0020               	movlb	0	; select bank0
  8811  0478  00A7               	movwf	?_readAnalog+1
  8812  0479  087B               	movf	readAnalog@value,w
  8813  047A  00A6               	movwf	?_readAnalog
  8814  047B  0008               	return
  8815  047C                     __end_of_readAnalog:	
  8816                           
  8817                           	psect	text11
  8818  0801                     __ptext11:	
  8819 ;; *************** function ___bmul *****************
  8820 ;; Defined at:
  8821 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;  multiplier      1    wreg     unsigned char 
  8824 ;;  multiplicand    1    0[COMMON] unsigned char 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;  multiplier      1    3[COMMON] unsigned char 
  8827 ;;  product         1    2[COMMON] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      unsigned char 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2, status,0
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8837 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;Total ram usage:        4 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_readAnalog
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           
  8851                           ;psect for function ___bmul
  8852  0801                     ___bmul:	
  8853                           
  8854                           ;incstack = 0
  8855                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8856                           ;___bmul@multiplier stored from wreg
  8857  0801  00F3               	movwf	___bmul@multiplier
  8858  0802  01F2               	clrf	___bmul@product
  8859  0803                     l2389:	
  8860  0803  1C73               	btfss	___bmul@multiplier,0
  8861  0804  2809               	goto	l2393
  8862  0805  0870               	movf	___bmul@multiplicand,w
  8863  0806  00F1               	movwf	??___bmul
  8864  0807  0871               	movf	??___bmul,w
  8865  0808  07F2               	addwf	___bmul@product,f
  8866  0809                     l2393:	
  8867  0809  1003               	clrc
  8868  080A  0DF0               	rlf	___bmul@multiplicand,f
  8869  080B  1003               	clrc
  8870  080C  0CF3               	rrf	___bmul@multiplier,f
  8871  080D  0873               	movf	___bmul@multiplier,w
  8872  080E  1D03               	btfss	3,2
  8873  080F  2803               	goto	l2389
  8874  0810  0872               	movf	___bmul@product,w
  8875  0811  0008               	return
  8876  0812                     __end_of___bmul:	
  8877                           
  8878                           	psect	text12
  8879  0B7C                     __ptext12:	
  8880 ;; *************** function ___aldiv *****************
  8881 ;; Defined at:
  8882 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  divisor         4    0[COMMON] long 
  8885 ;;  dividend        4    4[COMMON] long 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;  quotient        4    2[BANK0 ] long 
  8888 ;;  sign            1    1[BANK0 ] unsigned char 
  8889 ;;  counter         1    0[BANK0 ] unsigned char 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  4    0[COMMON] long 
  8892 ;; Registers used:
  8893 ;;		wreg, status,2, status,0
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8899 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;Total ram usage:       15 bytes
  8904 ;; Hardware stack levels used:    1
  8905 ;; This function calls:
  8906 ;;		Nothing
  8907 ;; This function is called by:
  8908 ;;		_readAnalog
  8909 ;;		_main
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           
  8914                           ;psect for function ___aldiv
  8915  0B7C                     ___aldiv:	
  8916                           
  8917                           ;incstack = 0
  8918                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8919  0B7C  0020               	movlb	0	; select bank0
  8920  0B7D  01A1               	clrf	___aldiv@sign
  8921  0B7E  1FF3               	btfss	___aldiv@divisor+3,7
  8922  0B7F  2B8D               	goto	l502
  8923  0B80  09F0               	comf	___aldiv@divisor,f
  8924  0B81  09F1               	comf	___aldiv@divisor+1,f
  8925  0B82  09F2               	comf	___aldiv@divisor+2,f
  8926  0B83  09F3               	comf	___aldiv@divisor+3,f
  8927  0B84  0AF0               	incf	___aldiv@divisor,f
  8928  0B85  1903               	skipnz
  8929  0B86  0AF1               	incf	___aldiv@divisor+1,f
  8930  0B87  1903               	skipnz
  8931  0B88  0AF2               	incf	___aldiv@divisor+2,f
  8932  0B89  1903               	skipnz
  8933  0B8A  0AF3               	incf	___aldiv@divisor+3,f
  8934  0B8B  01A1               	clrf	___aldiv@sign
  8935  0B8C  0AA1               	incf	___aldiv@sign,f
  8936  0B8D                     l502:	
  8937  0B8D  1FF7               	btfss	___aldiv@dividend+3,7
  8938  0B8E  2B9E               	goto	l2411
  8939  0B8F  09F4               	comf	___aldiv@dividend,f
  8940  0B90  09F5               	comf	___aldiv@dividend+1,f
  8941  0B91  09F6               	comf	___aldiv@dividend+2,f
  8942  0B92  09F7               	comf	___aldiv@dividend+3,f
  8943  0B93  0AF4               	incf	___aldiv@dividend,f
  8944  0B94  1903               	skipnz
  8945  0B95  0AF5               	incf	___aldiv@dividend+1,f
  8946  0B96  1903               	skipnz
  8947  0B97  0AF6               	incf	___aldiv@dividend+2,f
  8948  0B98  1903               	skipnz
  8949  0B99  0AF7               	incf	___aldiv@dividend+3,f
  8950  0B9A  3001               	movlw	1
  8951  0B9B  00F8               	movwf	??___aldiv
  8952  0B9C  0878               	movf	??___aldiv,w
  8953  0B9D  06A1               	xorwf	___aldiv@sign,f
  8954  0B9E                     l2411:	
  8955  0B9E  3000               	movlw	0
  8956  0B9F  00A5               	movwf	___aldiv@quotient+3
  8957  0BA0  3000               	movlw	0
  8958  0BA1  00A4               	movwf	___aldiv@quotient+2
  8959  0BA2  3000               	movlw	0
  8960  0BA3  00A3               	movwf	___aldiv@quotient+1
  8961  0BA4  3000               	movlw	0
  8962  0BA5  00A2               	movwf	___aldiv@quotient
  8963  0BA6  0873               	movf	___aldiv@divisor+3,w
  8964  0BA7  0472               	iorwf	___aldiv@divisor+2,w
  8965  0BA8  0471               	iorwf	___aldiv@divisor+1,w
  8966  0BA9  0470               	iorwf	___aldiv@divisor,w
  8967  0BAA  1903               	skipnz
  8968  0BAB  2BE7               	goto	l2433
  8969  0BAC  01A0               	clrf	___aldiv@counter
  8970  0BAD  0AA0               	incf	___aldiv@counter,f
  8971  0BAE                     l2419:	
  8972  0BAE  1BF3               	btfsc	___aldiv@divisor+3,7
  8973  0BAF  2BBC               	goto	l2421
  8974  0BB0  3001               	movlw	1
  8975  0BB1                     u2505:	
  8976  0BB1  35F0               	lslf	___aldiv@divisor,f
  8977  0BB2  0DF1               	rlf	___aldiv@divisor+1,f
  8978  0BB3  0DF2               	rlf	___aldiv@divisor+2,f
  8979  0BB4  0DF3               	rlf	___aldiv@divisor+3,f
  8980  0BB5  0B89               	decfsz	9,f
  8981  0BB6  2BB1               	goto	u2505
  8982  0BB7  3001               	movlw	1
  8983  0BB8  00F8               	movwf	??___aldiv
  8984  0BB9  0878               	movf	??___aldiv,w
  8985  0BBA  07A0               	addwf	___aldiv@counter,f
  8986  0BBB  2BAE               	goto	l2419
  8987  0BBC                     l2421:	
  8988  0BBC  3001               	movlw	1
  8989  0BBD                     u2525:	
  8990  0BBD  35A2               	lslf	___aldiv@quotient,f
  8991  0BBE  0DA3               	rlf	___aldiv@quotient+1,f
  8992  0BBF  0DA4               	rlf	___aldiv@quotient+2,f
  8993  0BC0  0DA5               	rlf	___aldiv@quotient+3,f
  8994  0BC1  0B89               	decfsz	9,f
  8995  0BC2  2BBD               	goto	u2525
  8996  0BC3  0873               	movf	___aldiv@divisor+3,w
  8997  0BC4  0277               	subwf	___aldiv@dividend+3,w
  8998  0BC5  1D03               	skipz
  8999  0BC6  2BD1               	goto	u2535
  9000  0BC7  0872               	movf	___aldiv@divisor+2,w
  9001  0BC8  0276               	subwf	___aldiv@dividend+2,w
  9002  0BC9  1D03               	skipz
  9003  0BCA  2BD1               	goto	u2535
  9004  0BCB  0871               	movf	___aldiv@divisor+1,w
  9005  0BCC  0275               	subwf	___aldiv@dividend+1,w
  9006  0BCD  1D03               	skipz
  9007  0BCE  2BD1               	goto	u2535
  9008  0BCF  0870               	movf	___aldiv@divisor,w
  9009  0BD0  0274               	subwf	___aldiv@dividend,w
  9010  0BD1                     u2535:	
  9011  0BD1  1C03               	skipc
  9012  0BD2  2BDC               	goto	l2429
  9013  0BD3  0870               	movf	___aldiv@divisor,w
  9014  0BD4  02F4               	subwf	___aldiv@dividend,f
  9015  0BD5  0871               	movf	___aldiv@divisor+1,w
  9016  0BD6  3BF5               	subwfb	___aldiv@dividend+1,f
  9017  0BD7  0872               	movf	___aldiv@divisor+2,w
  9018  0BD8  3BF6               	subwfb	___aldiv@dividend+2,f
  9019  0BD9  0873               	movf	___aldiv@divisor+3,w
  9020  0BDA  3BF7               	subwfb	___aldiv@dividend+3,f
  9021  0BDB  1422               	bsf	___aldiv@quotient,0
  9022  0BDC                     l2429:	
  9023  0BDC  3001               	movlw	1
  9024  0BDD                     u2545:	
  9025  0BDD  36F3               	lsrf	___aldiv@divisor+3,f
  9026  0BDE  0CF2               	rrf	___aldiv@divisor+2,f
  9027  0BDF  0CF1               	rrf	___aldiv@divisor+1,f
  9028  0BE0  0CF0               	rrf	___aldiv@divisor,f
  9029  0BE1  0B89               	decfsz	9,f
  9030  0BE2  2BDD               	goto	u2545
  9031  0BE3  3001               	movlw	1
  9032  0BE4  02A0               	subwf	___aldiv@counter,f
  9033  0BE5  1D03               	btfss	3,2
  9034  0BE6  2BBC               	goto	l2421
  9035  0BE7                     l2433:	
  9036  0BE7  0821               	movf	___aldiv@sign,w
  9037  0BE8  1903               	btfsc	3,2
  9038  0BE9  2BF5               	goto	l2437
  9039  0BEA  09A2               	comf	___aldiv@quotient,f
  9040  0BEB  09A3               	comf	___aldiv@quotient+1,f
  9041  0BEC  09A4               	comf	___aldiv@quotient+2,f
  9042  0BED  09A5               	comf	___aldiv@quotient+3,f
  9043  0BEE  0AA2               	incf	___aldiv@quotient,f
  9044  0BEF  1903               	skipnz
  9045  0BF0  0AA3               	incf	___aldiv@quotient+1,f
  9046  0BF1  1903               	skipnz
  9047  0BF2  0AA4               	incf	___aldiv@quotient+2,f
  9048  0BF3  1903               	skipnz
  9049  0BF4  0AA5               	incf	___aldiv@quotient+3,f
  9050  0BF5                     l2437:	
  9051  0BF5  0825               	movf	___aldiv@quotient+3,w
  9052  0BF6  00F3               	movwf	?___aldiv+3
  9053  0BF7  0824               	movf	___aldiv@quotient+2,w
  9054  0BF8  00F2               	movwf	?___aldiv+2
  9055  0BF9  0823               	movf	___aldiv@quotient+1,w
  9056  0BFA  00F1               	movwf	?___aldiv+1
  9057  0BFB  0822               	movf	___aldiv@quotient,w
  9058  0BFC  00F0               	movwf	?___aldiv
  9059  0BFD  0008               	return
  9060  0BFE                     __end_of___aldiv:	
  9061                           
  9062                           	psect	text13
  9063  17DE                     __ptext13:	
  9064 ;; *************** function _ADCRead *****************
  9065 ;; Defined at:
  9066 ;;		line 20 in file "adc.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;  channel         1    wreg     enum E13559
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  channel         1    3[COMMON] enum E13559
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  2    0[COMMON] unsigned int 
  9073 ;; Registers used:
  9074 ;;		wreg
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9080 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;Total ram usage:        4 bytes
  9085 ;; Hardware stack levels used:    1
  9086 ;; This function calls:
  9087 ;;		Nothing
  9088 ;; This function is called by:
  9089 ;;		_readAnalog
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           
  9094                           ;psect for function _ADCRead
  9095  17DE                     _ADCRead:	
  9096                           
  9097                           ;incstack = 0
  9098                           ; Regs used in _ADCRead: [wreg]
  9099                           ;ADCRead@channel stored from wreg
  9100  17DE  00F3               	movwf	ADCRead@channel
  9101                           
  9102                           ;adc.c: 22: ADPCH = channel;
  9103  17DF  0873               	movf	ADCRead@channel,w
  9104  17E0  0021               	movlb	1	; select bank1
  9105  17E1  009E               	movwf	30	;volatile
  9106                           
  9107                           ;adc.c: 24: ADCON0bits.ADON = 1;
  9108  17E2  1793               	bsf	19,7	;volatile
  9109                           
  9110                           ;adc.c: 26: ADCON0bits.ADCONT = 0;
  9111  17E3  1313               	bcf	19,6	;volatile
  9112                           
  9113                           ;adc.c: 28: ADCON0bits.ADGO = 1;
  9114  17E4  1413               	bsf	19,0	;volatile
  9115  17E5                     l55:	
  9116                           ;adc.c: 31: {
  9117                           
  9118                           ;adc.c: 30: while(ADCON0bits.ADGO)
  9119                           
  9120  17E5  1813               	btfsc	19,0	;volatile
  9121  17E6  2FE5               	goto	l55
  9122                           
  9123                           ;adc.c: 32: }
  9124                           ;adc.c: 34: return ((ADRESH<<8)+ADRESL);
  9125  17E7  080D               	movf	13,w	;volatile
  9126  17E8  00F1               	movwf	?_ADCRead+1
  9127  17E9  080C               	movf	12,w	;volatile
  9128  17EA  00F0               	movwf	?_ADCRead
  9129  17EB  0008               	return
  9130  17EC                     __end_of_ADCRead:	
  9131                           
  9132                           	psect	text14
  9133  0C85                     __ptext14:	
  9134 ;; *************** function ___fttol *****************
  9135 ;; Defined at:
  9136 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;  f1              3   73[BANK0 ] float 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  lval            4    5[BANK1 ] unsigned long 
  9141 ;;  exp1            1    9[BANK1 ] unsigned char 
  9142 ;;  sign1           1    4[BANK1 ] unsigned char 
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  4   73[BANK0 ] long 
  9145 ;; Registers used:
  9146 ;;		wreg, status,2, status,0
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9154 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;Total ram usage:       14 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; This function calls:
  9159 ;;		Nothing
  9160 ;; This function is called by:
  9161 ;;		_main
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165                           
  9166                           ;psect for function ___fttol
  9167  0C85                     ___fttol:	
  9168                           
  9169                           ;incstack = 0
  9170                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9171  0C85  0020               	movlb	0	; select bank0
  9172  0C86  0869               	movf	___fttol@f1,w
  9173  0C87  0021               	movlb	1	; select bank1
  9174  0C88  00A0               	movwf	??___fttol^(0+128)
  9175  0C89  0020               	movlb	0	; select bank0
  9176  0C8A  086A               	movf	___fttol@f1+1,w
  9177  0C8B  0021               	movlb	1	; select bank1
  9178  0C8C  00A1               	movwf	(??___fttol^(0+128)+1)
  9179  0C8D  0020               	movlb	0	; select bank0
  9180  0C8E  086B               	movf	___fttol@f1+2,w
  9181  0C8F  0021               	movlb	1	; select bank1
  9182  0C90  00A2               	movwf	(??___fttol^(0+128)+2)
  9183  0C91  1003               	clrc
  9184  0C92  0D21               	rlf	(??___fttol^(0+128)+1),w
  9185  0C93  0D22               	rlf	(??___fttol^(0+128)+2),w
  9186  0C94  00A3               	movwf	(??___fttol+3)^(0+128)
  9187  0C95  0823               	movf	(??___fttol+3)^(0+128),w
  9188  0C96  00A9               	movwf	___fttol@exp1^(0+128)
  9189  0C97  0829               	movf	___fttol@exp1^(0+128),w
  9190  0C98  1D03               	btfss	3,2
  9191  0C99  2CA4               	goto	l2767
  9192  0C9A  3000               	movlw	0
  9193  0C9B  0020               	movlb	0	; select bank0
  9194  0C9C  00EC               	movwf	?___fttol+3
  9195  0C9D  3000               	movlw	0
  9196  0C9E  00EB               	movwf	?___fttol+2
  9197  0C9F  3000               	movlw	0
  9198  0CA0  00EA               	movwf	?___fttol+1
  9199  0CA1  3000               	movlw	0
  9200  0CA2  00E9               	movwf	?___fttol
  9201  0CA3  0008               	return
  9202  0CA4                     l2767:	
  9203  0CA4  0020               	movlb	0	; select bank0
  9204  0CA5  0869               	movf	___fttol@f1,w
  9205  0CA6  0021               	movlb	1	; select bank1
  9206  0CA7  00A0               	movwf	??___fttol^(0+128)
  9207  0CA8  0020               	movlb	0	; select bank0
  9208  0CA9  086A               	movf	___fttol@f1+1,w
  9209  0CAA  0021               	movlb	1	; select bank1
  9210  0CAB  00A1               	movwf	(??___fttol^(0+128)+1)
  9211  0CAC  0020               	movlb	0	; select bank0
  9212  0CAD  086B               	movf	___fttol@f1+2,w
  9213  0CAE  0021               	movlb	1	; select bank1
  9214  0CAF  00A2               	movwf	(??___fttol^(0+128)+2)
  9215  0CB0  3017               	movlw	23
  9216  0CB1                     u3185:	
  9217  0CB1  36A2               	lsrf	(??___fttol^(0+128)+2),f
  9218  0CB2  0CA1               	rrf	(??___fttol^(0+128)+1),f
  9219  0CB3  0CA0               	rrf	??___fttol^(0+128),f
  9220  0CB4  0B89               	decfsz	9,f
  9221  0CB5  2CB1               	goto	u3185
  9222  0CB6  0820               	movf	??___fttol^(0+128),w
  9223  0CB7  00A3               	movwf	(??___fttol+3)^(0+128)
  9224  0CB8  0823               	movf	(??___fttol+3)^(0+128),w
  9225  0CB9  00A4               	movwf	___fttol@sign1^(0+128)
  9226  0CBA  0020               	movlb	0	; select bank0
  9227  0CBB  17EA               	bsf	___fttol@f1+1,7
  9228  0CBC  30FF               	movlw	255
  9229  0CBD  05E9               	andwf	___fttol@f1,f
  9230  0CBE  30FF               	movlw	255
  9231  0CBF  05EA               	andwf	___fttol@f1+1,f
  9232  0CC0  3000               	movlw	0
  9233  0CC1  05EB               	andwf	___fttol@f1+2,f
  9234  0CC2  0869               	movf	___fttol@f1,w
  9235  0CC3  0021               	movlb	1	; select bank1
  9236  0CC4  00A5               	movwf	___fttol@lval^(0+128)
  9237  0CC5  0020               	movlb	0	; select bank0
  9238  0CC6  086A               	movf	___fttol@f1+1,w
  9239  0CC7  0021               	movlb	1	; select bank1
  9240  0CC8  00A6               	movwf	(___fttol@lval^(0+128)+1)
  9241  0CC9  0020               	movlb	0	; select bank0
  9242  0CCA  086B               	movf	___fttol@f1+2,w
  9243  0CCB  0021               	movlb	1	; select bank1
  9244  0CCC  00A7               	movwf	(___fttol@lval^(0+128)+2)
  9245  0CCD  01A8               	clrf	(___fttol@lval^(0+128)+3)
  9246  0CCE  308E               	movlw	142
  9247  0CCF  02A9               	subwf	___fttol@exp1^(0+128),f
  9248  0CD0  1FA9               	btfss	___fttol@exp1^(0+128),7
  9249  0CD1  2CF0               	goto	l2787
  9250  0CD2  0829               	movf	___fttol@exp1^(0+128),w
  9251  0CD3  3A80               	xorlw	128
  9252  0CD4  3E8F               	addlw	143
  9253  0CD5  1803               	skipnc
  9254  0CD6  2CE1               	goto	l2785
  9255  0CD7  3000               	movlw	0
  9256  0CD8  0020               	movlb	0	; select bank0
  9257  0CD9  00EC               	movwf	?___fttol+3
  9258  0CDA  3000               	movlw	0
  9259  0CDB  00EB               	movwf	?___fttol+2
  9260  0CDC  3000               	movlw	0
  9261  0CDD  00EA               	movwf	?___fttol+1
  9262  0CDE  3000               	movlw	0
  9263  0CDF  00E9               	movwf	?___fttol
  9264  0CE0  0008               	return
  9265  0CE1                     l2785:	
  9266  0CE1  3001               	movlw	1
  9267  0CE2                     u3215:	
  9268  0CE2  0021               	movlb	1	; select bank1
  9269  0CE3  36A8               	lsrf	(___fttol@lval+3)^(0+128),f
  9270  0CE4  0CA7               	rrf	(___fttol@lval+2)^(0+128),f
  9271  0CE5  0CA6               	rrf	(___fttol@lval+1)^(0+128),f
  9272  0CE6  0CA5               	rrf	___fttol@lval^(0+128),f
  9273  0CE7  0B89               	decfsz	9,f
  9274  0CE8  2CE2               	goto	u3215
  9275  0CE9  3001               	movlw	1
  9276  0CEA  00A0               	movwf	??___fttol^(0+128)
  9277  0CEB  0820               	movf	??___fttol^(0+128),w
  9278  0CEC  07A9               	addwf	___fttol@exp1^(0+128),f
  9279  0CED  1903               	btfsc	3,2
  9280  0CEE  2D0C               	goto	l2795
  9281  0CEF  2CE1               	goto	l2785
  9282  0CF0                     l2787:	
  9283  0CF0  3018               	movlw	24
  9284  0CF1  0229               	subwf	___fttol@exp1^(0+128),w
  9285  0CF2  1C03               	skipc
  9286  0CF3  2D08               	goto	l699
  9287  0CF4  3000               	movlw	0
  9288  0CF5  0020               	movlb	0	; select bank0
  9289  0CF6  00EC               	movwf	?___fttol+3
  9290  0CF7  3000               	movlw	0
  9291  0CF8  00EB               	movwf	?___fttol+2
  9292  0CF9  3000               	movlw	0
  9293  0CFA  00EA               	movwf	?___fttol+1
  9294  0CFB  3000               	movlw	0
  9295  0CFC  00E9               	movwf	?___fttol
  9296  0CFD  0008               	return
  9297  0CFE                     l2793:	
  9298  0CFE  3001               	movlw	1
  9299  0CFF                     u3245:	
  9300  0CFF  0021               	movlb	1	; select bank1
  9301  0D00  35A5               	lslf	___fttol@lval^(0+128),f
  9302  0D01  0DA6               	rlf	(___fttol@lval+1)^(0+128),f
  9303  0D02  0DA7               	rlf	(___fttol@lval+2)^(0+128),f
  9304  0D03  0DA8               	rlf	(___fttol@lval+3)^(0+128),f
  9305  0D04  0B89               	decfsz	9,f
  9306  0D05  2CFF               	goto	u3245
  9307  0D06  3001               	movlw	1
  9308  0D07  02A9               	subwf	___fttol@exp1^(0+128),f
  9309  0D08                     l699:	
  9310  0D08  0021               	movlb	1	; select bank1
  9311  0D09  0829               	movf	___fttol@exp1^(0+128),w
  9312  0D0A  1D03               	btfss	3,2
  9313  0D0B  2CFE               	goto	l2793
  9314  0D0C                     l2795:	
  9315  0D0C  0824               	movf	___fttol@sign1^(0+128),w
  9316  0D0D  1903               	btfsc	3,2
  9317  0D0E  2D1A               	goto	l2799
  9318  0D0F  09A5               	comf	___fttol@lval^(0+128),f
  9319  0D10  09A6               	comf	(___fttol@lval+1)^(0+128),f
  9320  0D11  09A7               	comf	(___fttol@lval+2)^(0+128),f
  9321  0D12  09A8               	comf	(___fttol@lval+3)^(0+128),f
  9322  0D13  0AA5               	incf	___fttol@lval^(0+128),f
  9323  0D14  1903               	skipnz
  9324  0D15  0AA6               	incf	(___fttol@lval+1)^(0+128),f
  9325  0D16  1903               	skipnz
  9326  0D17  0AA7               	incf	(___fttol@lval+2)^(0+128),f
  9327  0D18  1903               	skipnz
  9328  0D19  0AA8               	incf	(___fttol@lval+3)^(0+128),f
  9329  0D1A                     l2799:	
  9330  0D1A  0828               	movf	(___fttol@lval+3)^(0+128),w
  9331  0D1B  0020               	movlb	0	; select bank0
  9332  0D1C  00EC               	movwf	?___fttol+3
  9333  0D1D  0021               	movlb	1	; select bank1
  9334  0D1E  0827               	movf	(___fttol@lval+2)^(0+128),w
  9335  0D1F  0020               	movlb	0	; select bank0
  9336  0D20  00EB               	movwf	?___fttol+2
  9337  0D21  0021               	movlb	1	; select bank1
  9338  0D22  0826               	movf	(___fttol@lval+1)^(0+128),w
  9339  0D23  0020               	movlb	0	; select bank0
  9340  0D24  00EA               	movwf	?___fttol+1
  9341  0D25  0021               	movlb	1	; select bank1
  9342  0D26  0825               	movf	___fttol@lval^(0+128),w
  9343  0D27  0020               	movlb	0	; select bank0
  9344  0D28  00E9               	movwf	?___fttol
  9345  0D29  0008               	return
  9346  0D2A                     __end_of___fttol:	
  9347                           
  9348                           	psect	text15
  9349  09E0                     __ptext15:	
  9350 ;; *************** function _SYSTEM_Initialize *****************
  9351 ;; Defined at:
  9352 ;;		line 71 in file "system.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;		None
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;		None
  9357 ;; Return value:  Size  Location     Type
  9358 ;;                  1    wreg      void 
  9359 ;; Registers used:
  9360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9361 ;; Tracked objects:
  9362 ;;		On entry : 0/0
  9363 ;;		On exit  : 0/0
  9364 ;;		Unchanged: 0/0
  9365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;Total ram usage:        3 bytes
  9371 ;; Hardware stack levels used:    1
  9372 ;; Hardware stack levels required when called:    3
  9373 ;; This function calls:
  9374 ;;		_ADCC_Initialize
  9375 ;;		_InitCustomChars
  9376 ;;		_LCD_Clear
  9377 ;;		_LCD_Init
  9378 ;;		_OSCILLATOR_Initialize
  9379 ;;		_PIN_MANAGER_Initialize
  9380 ;;		_PWM_Initialize
  9381 ;;		_TMR2_Initialize
  9382 ;; This function is called by:
  9383 ;;		_main
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           
  9388                           ;psect for function _SYSTEM_Initialize
  9389  09E0                     _SYSTEM_Initialize:	
  9390                           
  9391                           ;system.c: 73: PIN_MANAGER_Initialize();
  9392                           
  9393                           ;incstack = 0
  9394                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9395  09E0  3189  2135  3189   	fcall	_PIN_MANAGER_Initialize
  9396                           
  9397                           ;system.c: 74: OSCILLATOR_Initialize();
  9398  09E3  3197  27BC  3189   	fcall	_OSCILLATOR_Initialize
  9399                           
  9400                           ;system.c: 75: FVRCON = 0x00;
  9401  09E6  0032               	movlb	18	; select bank18
  9402  09E7  018C               	clrf	12	;volatile
  9403                           
  9404                           ;system.c: 76: ADCC_Initialize();
  9405  09E8  3188  2070  3189   	fcall	_ADCC_Initialize
  9406                           
  9407                           ;system.c: 77: PWM_Initialize();
  9408  09EB  3197  27C5  3189   	fcall	_PWM_Initialize
  9409                           
  9410                           ;system.c: 79: TMR2_Initialize();
  9411  09EE  3197  27D0  3189   	fcall	_TMR2_Initialize
  9412                           
  9413                           ;system.c: 80: LCD_Init(0X00);
  9414  09F1  3000               	movlw	0
  9415  09F2  318B  23FE  3189   	fcall	_LCD_Init
  9416                           
  9417                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  9418  09F5  3009               	movlw	9
  9419  09F6  00FA               	movwf	??_SYSTEM_Initialize+2
  9420  09F7  301E               	movlw	30
  9421  09F8  00F9               	movwf	??_SYSTEM_Initialize+1
  9422  09F9  30EB               	movlw	235
  9423  09FA  00F8               	movwf	??_SYSTEM_Initialize
  9424  09FB                     u3547:	
  9425  09FB  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9426  09FC  29FB               	goto	u3547
  9427  09FD  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9428  09FE  29FB               	goto	u3547
  9429  09FF  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9430  0A00  29FB               	goto	u3547
  9431  0A01  0000               	nop
  9432                           
  9433                           ;system.c: 82: LCD_Clear();
  9434  0A02  3197  27B4  3189   	fcall	_LCD_Clear
  9435                           
  9436                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
  9437  0A05  3005               	movlw	5
  9438  0A06  00FA               	movwf	??_SYSTEM_Initialize+2
  9439  0A07  300F               	movlw	15
  9440  0A08  00F9               	movwf	??_SYSTEM_Initialize+1
  9441  0A09  30F4               	movlw	244
  9442  0A0A  00F8               	movwf	??_SYSTEM_Initialize
  9443  0A0B                     u3557:	
  9444  0A0B  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9445  0A0C  2A0B               	goto	u3557
  9446  0A0D  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9447  0A0E  2A0B               	goto	u3557
  9448  0A0F  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9449  0A10  2A0B               	goto	u3557
  9450                           
  9451                           ;system.c: 84: InitCustomChars();
  9452  0A11  3188  20E3  3189   	fcall	_InitCustomChars
  9453                           
  9454                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  9455  0A14  3009               	movlw	9
  9456  0A15  00FA               	movwf	??_SYSTEM_Initialize+2
  9457  0A16  301E               	movlw	30
  9458  0A17  00F9               	movwf	??_SYSTEM_Initialize+1
  9459  0A18  30EB               	movlw	235
  9460  0A19  00F8               	movwf	??_SYSTEM_Initialize
  9461  0A1A                     u3567:	
  9462  0A1A  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9463  0A1B  2A1A               	goto	u3567
  9464  0A1C  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9465  0A1D  2A1A               	goto	u3567
  9466  0A1E  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9467  0A1F  2A1A               	goto	u3567
  9468  0A20  0000               	nop
  9469  0A21  0008               	return
  9470  0A22                     __end_of_SYSTEM_Initialize:	
  9471                           
  9472                           	psect	text16
  9473  17D0                     __ptext16:	
  9474 ;; *************** function _TMR2_Initialize *****************
  9475 ;; Defined at:
  9476 ;;		line 3 in file "tmr2.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;		None
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;		None
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      void 
  9483 ;; Registers used:
  9484 ;;		wreg, status,2
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9494 ;;Total ram usage:        0 bytes
  9495 ;; Hardware stack levels used:    1
  9496 ;; This function calls:
  9497 ;;		Nothing
  9498 ;; This function is called by:
  9499 ;;		_SYSTEM_Initialize
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503                           
  9504                           ;psect for function _TMR2_Initialize
  9505  17D0                     _TMR2_Initialize:	
  9506                           
  9507                           ;tmr2.c: 5: T2CON = 0x00;
  9508                           
  9509                           ;incstack = 0
  9510                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9511  17D0  0025               	movlb	5	; select bank5
  9512  17D1  018E               	clrf	14	;volatile
  9513                           
  9514                           ;tmr2.c: 7: T2CLKCON = 0x01;
  9515  17D2  3001               	movlw	1
  9516  17D3  0090               	movwf	16	;volatile
  9517                           
  9518                           ;tmr2.c: 9: T2HLT = 0x00;
  9519  17D4  018F               	clrf	15	;volatile
  9520                           
  9521                           ;tmr2.c: 11: T2RST = 0x00;
  9522  17D5  0191               	clrf	17	;volatile
  9523                           
  9524                           ;tmr2.c: 13: T2PR = 0xFF;
  9525  17D6  30FF               	movlw	255
  9526  17D7  008D               	movwf	13	;volatile
  9527                           
  9528                           ;tmr2.c: 15: T2TMR = 0x00;
  9529  17D8  018C               	clrf	12	;volatile
  9530                           
  9531                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  9532  17D9  002E               	movlb	14	; select bank14
  9533  17DA  1090               	bcf	16,1	;volatile
  9534                           
  9535                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  9536  17DB  0025               	movlb	5	; select bank5
  9537  17DC  178E               	bsf	14,7	;volatile
  9538  17DD  0008               	return
  9539  17DE                     __end_of_TMR2_Initialize:	
  9540                           
  9541                           	psect	text17
  9542  17C5                     __ptext17:	
  9543 ;; *************** function _PWM_Initialize *****************
  9544 ;; Defined at:
  9545 ;;		line 3 in file "pwm.c"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;		None
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;		None
  9550 ;; Return value:  Size  Location     Type
  9551 ;;                  1    wreg      void 
  9552 ;; Registers used:
  9553 ;;		wreg, status,2, status,0
  9554 ;; Tracked objects:
  9555 ;;		On entry : 0/0
  9556 ;;		On exit  : 0/0
  9557 ;;		Unchanged: 0/0
  9558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;Total ram usage:        0 bytes
  9564 ;; Hardware stack levels used:    1
  9565 ;; This function calls:
  9566 ;;		Nothing
  9567 ;; This function is called by:
  9568 ;;		_SYSTEM_Initialize
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           
  9573                           ;psect for function _PWM_Initialize
  9574  17C5                     _PWM_Initialize:	
  9575                           
  9576                           ;pwm.c: 14: PWM7CON = 0x80;
  9577                           
  9578                           ;incstack = 0
  9579                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
  9580  17C5  3080               	movlw	128
  9581  17C6  0027               	movlb	7	; select bank7
  9582  17C7  0092               	movwf	18	;volatile
  9583                           
  9584                           ;pwm.c: 16: PWM7DCH = 0x00;
  9585  17C8  0191               	clrf	17	;volatile
  9586                           
  9587                           ;pwm.c: 18: PWM7DCL = 0x00;
  9588  17C9  0190               	clrf	16	;volatile
  9589                           
  9590                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
  9591  17CA  0024               	movlb	4	; select bank4
  9592  17CB  081F               	movf	31,w	;volatile
  9593  17CC  39F3               	andlw	-13
  9594  17CD  3804               	iorlw	4
  9595  17CE  009F               	movwf	31	;volatile
  9596  17CF  0008               	return
  9597  17D0                     __end_of_PWM_Initialize:	
  9598                           
  9599                           	psect	text18
  9600  0935                     __ptext18:	
  9601 ;; *************** function _PIN_MANAGER_Initialize *****************
  9602 ;; Defined at:
  9603 ;;		line 5 in file "pin_manager.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;		None
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  state           1    0[COMMON] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg, status,2
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9621 ;;Total ram usage:        1 bytes
  9622 ;; Hardware stack levels used:    1
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_SYSTEM_Initialize
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function _PIN_MANAGER_Initialize
  9632  0935                     _PIN_MANAGER_Initialize:	
  9633                           
  9634                           ;pin_manager.c: 7: LATA = 0x00;
  9635                           
  9636                           ;incstack = 0
  9637                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9638  0935  0020               	movlb	0	; select bank0
  9639  0936  0196               	clrf	22	;volatile
  9640                           
  9641                           ;pin_manager.c: 8: LATB = 0x00;
  9642  0937  0197               	clrf	23	;volatile
  9643                           
  9644                           ;pin_manager.c: 9: LATC = 0x00;
  9645  0938  0198               	clrf	24	;volatile
  9646                           
  9647                           ;pin_manager.c: 11: WPUA = 0x00;
  9648  0939  003E               	movlb	30	; select bank30
  9649  093A  01B9               	clrf	57	;volatile
  9650                           
  9651                           ;pin_manager.c: 12: WPUB = 0x00;
  9652  093B  01C4               	clrf	68	;volatile
  9653                           
  9654                           ;pin_manager.c: 13: WPUC = 0x00;
  9655  093C  01CF               	clrf	79	;volatile
  9656                           
  9657                           ;pin_manager.c: 14: WPUE = 0x8;
  9658  093D  3008               	movlw	8
  9659  093E  00E5               	movwf	101	;volatile
  9660                           
  9661                           ;pin_manager.c: 16: TRISA = 0x0A;
  9662  093F  300A               	movlw	10
  9663  0940  0020               	movlb	0	; select bank0
  9664  0941  0091               	movwf	17	;volatile
  9665                           
  9666                           ;pin_manager.c: 17: TRISB = 0x07;
  9667  0942  3007               	movlw	7
  9668  0943  0092               	movwf	18	;volatile
  9669                           
  9670                           ;pin_manager.c: 18: TRISC = 0x00;
  9671  0944  0193               	clrf	19	;volatile
  9672                           
  9673                           ;pin_manager.c: 20: ANSELA = 0x0A;
  9674  0945  300A               	movlw	10
  9675  0946  003E               	movlb	30	; select bank30
  9676  0947  00B8               	movwf	56	;volatile
  9677                           
  9678                           ;pin_manager.c: 21: ANSELB = 0x00;
  9679  0948  01C3               	clrf	67	;volatile
  9680                           
  9681                           ;pin_manager.c: 22: ANSELC = 0x00;
  9682  0949  01CE               	clrf	78	;volatile
  9683                           
  9684                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  9685  094A  002E               	movlb	14	; select bank14
  9686  094B  1216               	bcf	22,4	;volatile
  9687                           
  9688                           ;pin_manager.c: 25: bool state = GIE;
  9689  094C  3000               	movlw	0
  9690  094D  1B8B               	btfsc	11,7	;volatile
  9691  094E  3001               	movlw	1
  9692  094F  00F0               	movwf	PIN_MANAGER_Initialize@state
  9693                           
  9694                           ;pin_manager.c: 26: GIE = 0;
  9695  0950  138B               	bcf	11,7	;volatile
  9696                           
  9697                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  9698  0951  3055               	movlw	85
  9699  0952  003D               	movlb	29	; select bank29
  9700  0953  008F               	movwf	15	;volatile
  9701                           
  9702                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  9703  0954  30AA               	movlw	170
  9704  0955  008F               	movwf	15	;volatile
  9705                           
  9706                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  9707  0956  100F               	bcf	15,0	;volatile
  9708                           
  9709                           ;pin_manager.c: 33: RC3PPS = 0X0F;
  9710  0957  300F               	movlw	15
  9711  0958  003E               	movlb	30	; select bank30
  9712  0959  00A3               	movwf	35	;volatile
  9713                           
  9714                           ;pin_manager.c: 37: PPSLOCK = 0x55;
  9715  095A  3055               	movlw	85
  9716  095B  003D               	movlb	29	; select bank29
  9717  095C  008F               	movwf	15	;volatile
  9718                           
  9719                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
  9720  095D  30AA               	movlw	170
  9721  095E  008F               	movwf	15	;volatile
  9722                           
  9723                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
  9724  095F  140F               	bsf	15,0	;volatile
  9725                           
  9726                           ;pin_manager.c: 40: GIE = state;
  9727  0960  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9728  0961  2964               	goto	u2410
  9729  0962  178B               	bsf	11,7	;volatile
  9730  0963  0008               	return
  9731  0964                     u2410:	
  9732  0964  138B               	bcf	11,7	;volatile
  9733  0965  0008               	return
  9734  0966                     __end_of_PIN_MANAGER_Initialize:	
  9735                           
  9736                           	psect	text19
  9737  17BC                     __ptext19:	
  9738 ;; *************** function _OSCILLATOR_Initialize *****************
  9739 ;; Defined at:
  9740 ;;		line 89 in file "system.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;		None
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;		None
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  1    wreg      void 
  9747 ;; Registers used:
  9748 ;;		wreg, status,2
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;Total ram usage:        0 bytes
  9759 ;; Hardware stack levels used:    1
  9760 ;; This function calls:
  9761 ;;		Nothing
  9762 ;; This function is called by:
  9763 ;;		_SYSTEM_Initialize
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           
  9768                           ;psect for function _OSCILLATOR_Initialize
  9769  17BC                     _OSCILLATOR_Initialize:	
  9770                           
  9771                           ;system.c: 91: OSCCON1 = 0x60;
  9772                           
  9773                           ;incstack = 0
  9774                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9775  17BC  3060               	movlw	96
  9776  17BD  0031               	movlb	17	; select bank17
  9777  17BE  008D               	movwf	13	;volatile
  9778                           
  9779                           ;system.c: 92: OSCCON3 = 0x00;
  9780  17BF  018F               	clrf	15	;volatile
  9781                           
  9782                           ;system.c: 93: OSCEN = 0x00;
  9783  17C0  0191               	clrf	17	;volatile
  9784                           
  9785                           ;system.c: 94: OSCFRQ = 0x06;
  9786  17C1  3006               	movlw	6
  9787  17C2  0093               	movwf	19	;volatile
  9788                           
  9789                           ;system.c: 95: OSCTUNE = 0x00;
  9790  17C3  0192               	clrf	18	;volatile
  9791  17C4  0008               	return
  9792  17C5                     __end_of_OSCILLATOR_Initialize:	
  9793                           
  9794                           	psect	text20
  9795  0BFE                     __ptext20:	
  9796 ;; *************** function _LCD_Init *****************
  9797 ;; Defined at:
  9798 ;;		line 154 in file "lcd.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  style           1    wreg     unsigned char 
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;  style           1    7[COMMON] unsigned char 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      void 
  9805 ;; Registers used:
  9806 ;;		wreg, status,2, status,0, pclath, cstack
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;Total ram usage:        4 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:    2
  9819 ;; This function calls:
  9820 ;;		_LCD_Cmd
  9821 ;;		_LCD_Port
  9822 ;; This function is called by:
  9823 ;;		_SYSTEM_Initialize
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           
  9828                           ;psect for function _LCD_Init
  9829  0BFE                     _LCD_Init:	
  9830                           
  9831                           ;incstack = 0
  9832                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9833                           ;LCD_Init@style stored from wreg
  9834  0BFE  00F7               	movwf	LCD_Init@style
  9835                           
  9836                           ;lcd.c: 156: LCD_Port(0x00);
  9837  0BFF  3000               	movlw	0
  9838  0C00  3188  203E  318B   	fcall	_LCD_Port
  9839                           
  9840                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
  9841  0C03  3005               	movlw	5
  9842  0C04  00F6               	movwf	??_LCD_Init+2
  9843  0C05  300F               	movlw	15
  9844  0C06  00F5               	movwf	??_LCD_Init+1
  9845  0C07  30F4               	movlw	244
  9846  0C08  00F4               	movwf	??_LCD_Init
  9847  0C09                     u3577:	
  9848  0C09  0BF4               	decfsz	??_LCD_Init,f
  9849  0C0A  2C09               	goto	u3577
  9850  0C0B  0BF5               	decfsz	??_LCD_Init+1,f
  9851  0C0C  2C09               	goto	u3577
  9852  0C0D  0BF6               	decfsz	??_LCD_Init+2,f
  9853  0C0E  2C09               	goto	u3577
  9854                           
  9855                           ;lcd.c: 160: LCD_Cmd(0x03);
  9856  0C0F  3003               	movlw	3
  9857  0C10  3197  27EC  318B   	fcall	_LCD_Cmd
  9858                           
  9859                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
  9860  0C13  3068               	movlw	104
  9861  0C14  00F5               	movwf	??_LCD_Init+1
  9862  0C15  30E4               	movlw	228
  9863  0C16  00F4               	movwf	??_LCD_Init
  9864  0C17                     u3587:	
  9865  0C17  0BF4               	decfsz	??_LCD_Init,f
  9866  0C18  2C17               	goto	u3587
  9867  0C19  0BF5               	decfsz	??_LCD_Init+1,f
  9868  0C1A  2C17               	goto	u3587
  9869  0C1B  0000               	nop
  9870                           
  9871                           ;lcd.c: 164: LCD_Cmd(0x03);
  9872  0C1C  3003               	movlw	3
  9873  0C1D  3197  27EC  318B   	fcall	_LCD_Cmd
  9874                           
  9875                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9876  0C20  3089               	movlw	137
  9877  0C21  00F4               	movwf	??_LCD_Init
  9878  0C22                     u3597:	
  9879  0C22  3200               	nop2
  9880  0C23  3200               	nop2
  9881  0C24  0BF4               	decfsz	??_LCD_Init,f
  9882  0C25  2C22               	goto	u3597
  9883                           
  9884                           ;lcd.c: 168: LCD_Cmd(0x03);
  9885  0C26  3003               	movlw	3
  9886  0C27  3197  27EC  318B   	fcall	_LCD_Cmd
  9887                           
  9888                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9889  0C2A  3089               	movlw	137
  9890  0C2B  00F4               	movwf	??_LCD_Init
  9891  0C2C                     u3607:	
  9892  0C2C  3200               	nop2
  9893  0C2D  3200               	nop2
  9894  0C2E  0BF4               	decfsz	??_LCD_Init,f
  9895  0C2F  2C2C               	goto	u3607
  9896                           
  9897                           ;lcd.c: 172: LCD_Cmd(0x02);
  9898  0C30  3002               	movlw	2
  9899  0C31  3197  27EC  318B   	fcall	_LCD_Cmd
  9900                           
  9901                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9902  0C34  3089               	movlw	137
  9903  0C35  00F4               	movwf	??_LCD_Init
  9904  0C36                     u3617:	
  9905  0C36  3200               	nop2
  9906  0C37  3200               	nop2
  9907  0C38  0BF4               	decfsz	??_LCD_Init,f
  9908  0C39  2C36               	goto	u3617
  9909                           
  9910                           ;lcd.c: 176: LCD_Cmd(0x2);
  9911  0C3A  3002               	movlw	2
  9912  0C3B  3197  27EC  318B   	fcall	_LCD_Cmd
  9913                           
  9914                           ;lcd.c: 178: LCD_Cmd(0x8);
  9915  0C3E  3008               	movlw	8
  9916  0C3F  3197  27EC  318B   	fcall	_LCD_Cmd
  9917                           
  9918                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9919  0C42  3089               	movlw	137
  9920  0C43  00F4               	movwf	??_LCD_Init
  9921  0C44                     u3627:	
  9922  0C44  3200               	nop2
  9923  0C45  3200               	nop2
  9924  0C46  0BF4               	decfsz	??_LCD_Init,f
  9925  0C47  2C44               	goto	u3627
  9926                           
  9927                           ;lcd.c: 182: LCD_Cmd(0x0);
  9928  0C48  3000               	movlw	0
  9929  0C49  3197  27EC  318B   	fcall	_LCD_Cmd
  9930                           
  9931                           ;lcd.c: 184: LCD_Cmd(0x8);
  9932  0C4C  3008               	movlw	8
  9933  0C4D  3197  27EC  318B   	fcall	_LCD_Cmd
  9934                           
  9935                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9936  0C50  3089               	movlw	137
  9937  0C51  00F4               	movwf	??_LCD_Init
  9938  0C52                     u3637:	
  9939  0C52  3200               	nop2
  9940  0C53  3200               	nop2
  9941  0C54  0BF4               	decfsz	??_LCD_Init,f
  9942  0C55  2C52               	goto	u3637
  9943                           
  9944                           ;lcd.c: 188: LCD_Cmd(0x0);
  9945  0C56  3000               	movlw	0
  9946  0C57  3197  27EC  318B   	fcall	_LCD_Cmd
  9947                           
  9948                           ;lcd.c: 190: LCD_Cmd(0x1);
  9949  0C5A  3001               	movlw	1
  9950  0C5B  3197  27EC  318B   	fcall	_LCD_Cmd
  9951                           
  9952                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
  9953  0C5E  3034               	movlw	52
  9954  0C5F  00F5               	movwf	??_LCD_Init+1
  9955  0C60  30F1               	movlw	241
  9956  0C61  00F4               	movwf	??_LCD_Init
  9957  0C62                     u3647:	
  9958  0C62  0BF4               	decfsz	??_LCD_Init,f
  9959  0C63  2C62               	goto	u3647
  9960  0C64  0BF5               	decfsz	??_LCD_Init+1,f
  9961  0C65  2C62               	goto	u3647
  9962  0C66  3200               	nop2
  9963                           
  9964                           ;lcd.c: 194: LCD_Cmd(0x0);
  9965  0C67  3000               	movlw	0
  9966  0C68  3197  27EC  318B   	fcall	_LCD_Cmd
  9967                           
  9968                           ;lcd.c: 196: LCD_Cmd(0x6);
  9969  0C6B  3006               	movlw	6
  9970  0C6C  3197  27EC  318B   	fcall	_LCD_Cmd
  9971                           
  9972                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9973  0C6F  3089               	movlw	137
  9974  0C70  00F4               	movwf	??_LCD_Init
  9975  0C71                     u3657:	
  9976  0C71  3200               	nop2
  9977  0C72  3200               	nop2
  9978  0C73  0BF4               	decfsz	??_LCD_Init,f
  9979  0C74  2C71               	goto	u3657
  9980                           
  9981                           ;lcd.c: 200: LCD_Cmd(0x0);
  9982  0C75  3000               	movlw	0
  9983  0C76  3197  27EC  318B   	fcall	_LCD_Cmd
  9984                           
  9985                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  9986  0C79  0877               	movf	LCD_Init@style,w
  9987  0C7A  380C               	iorlw	12
  9988  0C7B  3197  27EC  318B   	fcall	_LCD_Cmd
  9989                           
  9990                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9991  0C7E  3089               	movlw	137
  9992  0C7F  00F4               	movwf	??_LCD_Init
  9993  0C80                     u3667:	
  9994  0C80  3200               	nop2
  9995  0C81  3200               	nop2
  9996  0C82  0BF4               	decfsz	??_LCD_Init,f
  9997  0C83  2C80               	goto	u3667
  9998  0C84  0008               	return
  9999  0C85                     __end_of_LCD_Init:	
 10000                           
 10001                           	psect	text21
 10002  17B4                     __ptext21:	
 10003 ;; *************** function _LCD_Clear *****************
 10004 ;; Defined at:
 10005 ;;		line 75 in file "lcd.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;		None
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		wreg, status,2, status,0, pclath, cstack
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;Total ram usage:        0 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    2
 10026 ;; This function calls:
 10027 ;;		_LCD_Cmd
 10028 ;; This function is called by:
 10029 ;;		_SYSTEM_Initialize
 10030 ;;		_main
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           
 10035                           ;psect for function _LCD_Clear
 10036  17B4                     _LCD_Clear:	
 10037                           
 10038                           ;lcd.c: 77: LCD_Cmd(0);
 10039                           
 10040                           ;incstack = 0
 10041                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10042  17B4  3000               	movlw	0
 10043  17B5  3197  27EC  3197   	fcall	_LCD_Cmd
 10044                           
 10045                           ;lcd.c: 78: LCD_Cmd(1);
 10046  17B8  3001               	movlw	1
 10047  17B9  3197  27EC         	fcall	_LCD_Cmd
 10048  17BB  0008               	return
 10049  17BC                     __end_of_LCD_Clear:	
 10050                           
 10051                           	psect	text22
 10052  08E3                     __ptext22:	
 10053 ;; *************** function _InitCustomChars *****************
 10054 ;; Defined at:
 10055 ;;		line 29 in file "lcd.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;		None
 10058 ;; Auto vars:     Size  Location     Type
 10059 ;;  i               1    6[COMMON] unsigned char 
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  1    wreg      void 
 10062 ;; Registers used:
 10063 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10071 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10073 ;;Total ram usage:        2 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; Hardware stack levels required when called:    2
 10076 ;; This function calls:
 10077 ;;		_LCD_Cmd
 10078 ;;		_LCD_Write_Char
 10079 ;; This function is called by:
 10080 ;;		_SYSTEM_Initialize
 10081 ;; This function uses a non-reentrant model
 10082 ;;
 10083                           
 10084                           
 10085                           ;psect for function _InitCustomChars
 10086  08E3                     _InitCustomChars:	
 10087                           
 10088                           ;lcd.c: 31: uint8_t i;
 10089                           ;lcd.c: 32: LCD_Cmd(0x04);
 10090                           
 10091                           ;incstack = 0
 10092                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10093  08E3  3004               	movlw	4
 10094  08E4  3197  27EC  3188   	fcall	_LCD_Cmd
 10095                           
 10096                           ;lcd.c: 33: LCD_Cmd(0x00);
 10097  08E7  3000               	movlw	0
 10098  08E8  3197  27EC  3188   	fcall	_LCD_Cmd
 10099                           
 10100                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10101  08EB  01F6               	clrf	InitCustomChars@i
 10102  08EC  3010               	movlw	16
 10103  08ED  0276               	subwf	InitCustomChars@i,w
 10104  08EE  1803               	btfsc	3,0
 10105  08EF  2901               	goto	l2261
 10106  08F0                     l2255:	
 10107                           
 10108                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10109  08F0  0876               	movf	InitCustomChars@i,w
 10110  08F1  3EA0               	addlw	(low (___cgram| (0+256)))& (0+255)
 10111  08F2  0086               	movwf	6
 10112  08F3  3001               	movlw	1	; select bank3/4
 10113  08F4  0087               	movwf	7
 10114  08F5  0801               	movf	1,w
 10115  08F6  3189  2109  3188   	fcall	_LCD_Write_Char
 10116  08F9  3001               	movlw	1
 10117  08FA  00F5               	movwf	??_InitCustomChars
 10118  08FB  0875               	movf	??_InitCustomChars,w
 10119  08FC  07F6               	addwf	InitCustomChars@i,f
 10120  08FD  3010               	movlw	16
 10121  08FE  0276               	subwf	InitCustomChars@i,w
 10122  08FF  1C03               	skipc
 10123  0900  28F0               	goto	l2255
 10124  0901                     l2261:	
 10125                           
 10126                           ;lcd.c: 36: LCD_Cmd(0);
 10127  0901  3000               	movlw	0
 10128  0902  3197  27EC  3188   	fcall	_LCD_Cmd
 10129                           
 10130                           ;lcd.c: 37: LCD_Cmd(2);
 10131  0905  3002               	movlw	2
 10132  0906  3197  27EC         	fcall	_LCD_Cmd
 10133  0908  0008               	return
 10134  0909                     __end_of_InitCustomChars:	
 10135                           
 10136                           	psect	text23
 10137  0870                     __ptext23:	
 10138 ;; *************** function _ADCC_Initialize *****************
 10139 ;; Defined at:
 10140 ;;		line 64 in file "adc.c"
 10141 ;; Parameters:    Size  Location     Type
 10142 ;;		None
 10143 ;; Auto vars:     Size  Location     Type
 10144 ;;		None
 10145 ;; Return value:  Size  Location     Type
 10146 ;;                  1    wreg      void 
 10147 ;; Registers used:
 10148 ;;		wreg, status,2
 10149 ;; Tracked objects:
 10150 ;;		On entry : 0/0
 10151 ;;		On exit  : 0/0
 10152 ;;		Unchanged: 0/0
 10153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10158 ;;Total ram usage:        0 bytes
 10159 ;; Hardware stack levels used:    1
 10160 ;; This function calls:
 10161 ;;		Nothing
 10162 ;; This function is called by:
 10163 ;;		_SYSTEM_Initialize
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           
 10168                           ;psect for function _ADCC_Initialize
 10169  0870                     _ADCC_Initialize:	
 10170                           
 10171                           ;adc.c: 66: ADCON1 = 0x00;
 10172                           
 10173                           ;incstack = 0
 10174                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10175  0870  0021               	movlb	1	; select bank1
 10176  0871  0194               	clrf	20	;volatile
 10177                           
 10178                           ;adc.c: 68: ADCON2 = 0x00;
 10179  0872  0195               	clrf	21	;volatile
 10180                           
 10181                           ;adc.c: 70: ADCON3 = 0x00;
 10182  0873  0196               	clrf	22	;volatile
 10183                           
 10184                           ;adc.c: 72: ADACT = 0x00;
 10185  0874  0199               	clrf	25	;volatile
 10186                           
 10187                           ;adc.c: 74: ADSTAT = 0x00;
 10188  0875  0197               	clrf	23	;volatile
 10189                           
 10190                           ;adc.c: 77: ADCLK = 0x3F;
 10191  0876  303F               	movlw	63
 10192  0877  0098               	movwf	24	;volatile
 10193                           
 10194                           ;adc.c: 85: ADREF = 0x00;
 10195  0878  019A               	clrf	26	;volatile
 10196                           
 10197                           ;adc.c: 87: ADCAP = 0x00;
 10198  0879  019B               	clrf	27	;volatile
 10199                           
 10200                           ;adc.c: 90: ADPRE = 0x07;
 10201  087A  3007               	movlw	7
 10202  087B  009C               	movwf	28	;volatile
 10203                           
 10204                           ;adc.c: 92: ADACQ = 0x00;
 10205  087C  019D               	clrf	29	;volatile
 10206                           
 10207                           ;adc.c: 94: ADPCH = 0x00;
 10208  087D  019E               	clrf	30	;volatile
 10209                           
 10210                           ;adc.c: 96: ADRPT = 0x00;
 10211  087E  0022               	movlb	2	; select bank2
 10212  087F  018D               	clrf	13	;volatile
 10213                           
 10214                           ;adc.c: 98: ADLTHL = 0x00;
 10215  0880  018E               	clrf	14	;volatile
 10216                           
 10217                           ;adc.c: 100: ADLTHH = 0x00;
 10218  0881  018F               	clrf	15	;volatile
 10219                           
 10220                           ;adc.c: 102: ADUTHL = 0x00;
 10221  0882  0190               	clrf	16	;volatile
 10222                           
 10223                           ;adc.c: 104: ADUTHH = 0x00;
 10224  0883  0191               	clrf	17	;volatile
 10225                           
 10226                           ;adc.c: 106: ADSTPTL = 0x00;
 10227  0884  0192               	clrf	18	;volatile
 10228                           
 10229                           ;adc.c: 108: ADSTPTH = 0x00;
 10230  0885  0193               	clrf	19	;volatile
 10231                           
 10232                           ;adc.c: 110: ADCON0 = 0x84;
 10233  0886  3084               	movlw	132
 10234  0887  0021               	movlb	1	; select bank1
 10235  0888  0093               	movwf	19	;volatile
 10236  0889  0008               	return
 10237  088A                     __end_of_ADCC_Initialize:	
 10238                           
 10239                           	psect	text24
 10240  0812                     __ptext24:	
 10241 ;; *************** function _PWM7_LoadDutyValue *****************
 10242 ;; Defined at:
 10243 ;;		line 32 in file "pwm.c"
 10244 ;; Parameters:    Size  Location     Type
 10245 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;		None
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  1    wreg      void 
 10250 ;; Registers used:
 10251 ;;		wreg, status,2, status,0
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10260 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10261 ;;Total ram usage:        4 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; This function calls:
 10264 ;;		Nothing
 10265 ;; This function is called by:
 10266 ;;		_main
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           
 10271                           ;psect for function _PWM7_LoadDutyValue
 10272  0812                     _PWM7_LoadDutyValue:	
 10273                           
 10274                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10275                           
 10276                           ;incstack = 0
 10277                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10278  0812  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10279  0813  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10280  0814  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10281  0815  00F2               	movwf	??_PWM7_LoadDutyValue
 10282  0816  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10283  0817  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10284  0818  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10285  0819  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10286  081A  0872               	movf	??_PWM7_LoadDutyValue,w
 10287  081B  0027               	movlb	7	; select bank7
 10288  081C  0091               	movwf	17	;volatile
 10289                           
 10290                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10291  081D  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10292  081E  3903               	andlw	3
 10293  081F  00F2               	movwf	??_PWM7_LoadDutyValue
 10294  0820  3005               	movlw	5
 10295  0821                     u3165:	
 10296  0821  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10297  0822  3EFF               	addlw	-1
 10298  0823  1D03               	skipz
 10299  0824  2821               	goto	u3165
 10300  0825  3572               	lslf	??_PWM7_LoadDutyValue,w
 10301  0826  0090               	movwf	16	;volatile
 10302  0827  0008               	return
 10303  0828                     __end_of_PWM7_LoadDutyValue:	
 10304                           
 10305                           	psect	text25
 10306  0138                     __ptext25:	
 10307 ;; *************** function _PID_Calculate *****************
 10308 ;; Defined at:
 10309 ;;		line 21 in file "pid.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;  setpoint        2    0[BANK0 ] int 
 10312 ;;  temp            2    2[BANK0 ] int 
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;		None
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  3    0[BANK0 ] float 
 10317 ;; Registers used:
 10318 ;;		wreg, status,2, status,0, pclath, cstack
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10327 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;Total ram usage:        6 bytes
 10329 ;; Hardware stack levels used:    1
 10330 ;; Hardware stack levels required when called:    2
 10331 ;; This function calls:
 10332 ;;		___awtoft
 10333 ;;		___wmul
 10334 ;; This function is called by:
 10335 ;;		_main
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           
 10340                           ;psect for function _PID_Calculate
 10341  0138                     _PID_Calculate:	
 10342                           
 10343                           ;pid.c: 23: pidCount+=1;
 10344                           
 10345                           ;incstack = 0
 10346                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 10347  0138  3001               	movlw	1
 10348  0139  0021               	movlb	1	; select bank1
 10349  013A  07DC               	addwf	_pidCount^(0+128),f
 10350  013B  3000               	movlw	0
 10351  013C  3DDD               	addwfc	(_pidCount+1)^(0+128),f
 10352                           
 10353                           ;pid.c: 26: error = setpoint - temp;
 10354  013D  0020               	movlb	0	; select bank0
 10355  013E  0922               	comf	PID_Calculate@temp,w
 10356  013F  00A4               	movwf	??_PID_Calculate
 10357  0140  0923               	comf	PID_Calculate@temp+1,w
 10358  0141  00A5               	movwf	??_PID_Calculate+1
 10359  0142  0AA4               	incf	??_PID_Calculate,f
 10360  0143  1903               	skipnz
 10361  0144  0AA5               	incf	??_PID_Calculate+1,f
 10362  0145  0820               	movf	PID_Calculate@setpoint,w
 10363  0146  0724               	addwf	??_PID_Calculate,w
 10364  0147  0021               	movlb	1	; select bank1
 10365  0148  00D6               	movwf	_error^(0+128)
 10366  0149  0020               	movlb	0	; select bank0
 10367  014A  0821               	movf	PID_Calculate@setpoint+1,w
 10368  014B  3D25               	addwfc	??_PID_Calculate+1,w
 10369  014C  0021               	movlb	1	; select bank1
 10370  014D  00D7               	movwf	(_error+1)^(0+128)
 10371                           
 10372                           ;pid.c: 28: errorValue = error * Kp;
 10373  014E  0857               	movf	(_error+1)^(0+128),w
 10374  014F  00F1               	movwf	___wmul@multiplier+1
 10375  0150  0856               	movf	_error^(0+128),w
 10376  0151  00F0               	movwf	___wmul@multiplier
 10377  0152  086D               	movf	(_Kp+1)^(0+128),w
 10378  0153  00F3               	movwf	___wmul@multiplicand+1
 10379  0154  086C               	movf	_Kp^(0+128),w
 10380  0155  00F2               	movwf	___wmul@multiplicand
 10381  0156  3188  208A  3181   	fcall	___wmul
 10382  0159  0871               	movf	?___wmul+1,w
 10383  015A  0021               	movlb	1	; select bank1
 10384  015B  00D9               	movwf	(_errorValue+1)^(0+128)
 10385  015C  0870               	movf	?___wmul,w
 10386  015D  00D8               	movwf	_errorValue^(0+128)
 10387                           
 10388                           ;pid.c: 31: if(error>0)signPositive=1;
 10389  015E  0857               	movf	(_error+1)^(0+128),w
 10390  015F  3A80               	xorlw	128
 10391  0160  0020               	movlb	0	; select bank0
 10392  0161  00A4               	movwf	??_PID_Calculate
 10393  0162  3080               	movlw	128
 10394  0163  0224               	subwf	??_PID_Calculate,w
 10395  0164  1D03               	skipz
 10396  0165  2969               	goto	u3095
 10397  0166  3001               	movlw	1
 10398  0167  0021               	movlb	1	; select bank1
 10399  0168  0256               	subwf	_error^(0+128),w
 10400  0169                     u3095:	
 10401  0169  1C03               	skipc
 10402  016A  2971               	goto	l2681
 10403  016B  3001               	movlw	1
 10404  016C  0021               	movlb	1	; select bank1
 10405  016D  00E6               	movwf	_signPositive^(0+128)
 10406  016E  3000               	movlw	0
 10407  016F  00E7               	movwf	(_signPositive^(0+128)+1)
 10408  0170  2974               	goto	l2683
 10409  0171                     l2681:	
 10410                           
 10411                           ;pid.c: 33: else signPositive=0;
 10412  0171  0021               	movlb	1	; select bank1
 10413  0172  01E6               	clrf	_signPositive^(0+128)
 10414  0173  01E7               	clrf	(_signPositive+1)^(0+128)
 10415  0174                     l2683:	
 10416                           
 10417                           ;pid.c: 35: if(signPositive!=lastSign)pidIntegrated=0;
 10418  0174  085B               	movf	(_lastSign+1)^(0+128),w
 10419  0175  0667               	xorwf	(_signPositive+1)^(0+128),w
 10420  0176  1D03               	skipz
 10421  0177  297A               	goto	u3105
 10422  0178  085A               	movf	_lastSign^(0+128),w
 10423  0179  0666               	xorwf	_signPositive^(0+128),w
 10424  017A                     u3105:	
 10425  017A  1903               	skipnz
 10426  017B  297E               	goto	l2687
 10427  017C  01DE               	clrf	_pidIntegrated^(0+128)
 10428  017D  01DF               	clrf	(_pidIntegrated+1)^(0+128)
 10429  017E                     l2687:	
 10430                           
 10431                           ;pid.c: 37: lastSign=signPositive;
 10432  017E  0867               	movf	(_signPositive+1)^(0+128),w
 10433  017F  00DB               	movwf	(_lastSign+1)^(0+128)
 10434  0180  0866               	movf	_signPositive^(0+128),w
 10435  0181  00DA               	movwf	_lastSign^(0+128)
 10436                           
 10437                           ;pid.c: 41: derivativeValue=(error-pidPrevError)*Kd;
 10438  0182  0962               	comf	_pidPrevError^(0+128),w
 10439  0183  0020               	movlb	0	; select bank0
 10440  0184  00A4               	movwf	??_PID_Calculate
 10441  0185  0021               	movlb	1	; select bank1
 10442  0186  0963               	comf	(_pidPrevError+1)^(0+128),w
 10443  0187  0020               	movlb	0	; select bank0
 10444  0188  00A5               	movwf	??_PID_Calculate+1
 10445  0189  0AA4               	incf	??_PID_Calculate,f
 10446  018A  1903               	skipnz
 10447  018B  0AA5               	incf	??_PID_Calculate+1,f
 10448  018C  0021               	movlb	1	; select bank1
 10449  018D  0856               	movf	_error^(0+128),w
 10450  018E  0020               	movlb	0	; select bank0
 10451  018F  0724               	addwf	??_PID_Calculate,w
 10452  0190  00F0               	movwf	___wmul@multiplier
 10453  0191  0021               	movlb	1	; select bank1
 10454  0192  0857               	movf	(_error+1)^(0+128),w
 10455  0193  0020               	movlb	0	; select bank0
 10456  0194  3D25               	addwfc	??_PID_Calculate+1,w
 10457  0195  00F1               	movwf	___wmul@multiplier+1
 10458  0196  0021               	movlb	1	; select bank1
 10459  0197  0869               	movf	(_Kd+1)^(0+128),w
 10460  0198  00F3               	movwf	___wmul@multiplicand+1
 10461  0199  0868               	movf	_Kd^(0+128),w
 10462  019A  00F2               	movwf	___wmul@multiplicand
 10463  019B  3188  208A  3181   	fcall	___wmul
 10464  019E  0871               	movf	?___wmul+1,w
 10465  019F  0021               	movlb	1	; select bank1
 10466  01A0  00D3               	movwf	(_derivativeValue+1)^(0+128)
 10467  01A1  0870               	movf	?___wmul,w
 10468  01A2  00D2               	movwf	_derivativeValue^(0+128)
 10469                           
 10470                           ;pid.c: 42: pidPrevError = error;
 10471  01A3  0857               	movf	(_error+1)^(0+128),w
 10472  01A4  00E3               	movwf	(_pidPrevError+1)^(0+128)
 10473  01A5  0856               	movf	_error^(0+128),w
 10474  01A6  00E2               	movwf	_pidPrevError^(0+128)
 10475                           
 10476                           ;pid.c: 45: if(pidCount>20)
 10477  01A7  085D               	movf	(_pidCount+1)^(0+128),w
 10478  01A8  3A80               	xorlw	128
 10479  01A9  0020               	movlb	0	; select bank0
 10480  01AA  00A4               	movwf	??_PID_Calculate
 10481  01AB  3080               	movlw	128
 10482  01AC  0224               	subwf	??_PID_Calculate,w
 10483  01AD  1D03               	skipz
 10484  01AE  29B2               	goto	u3115
 10485  01AF  3015               	movlw	21
 10486  01B0  0021               	movlb	1	; select bank1
 10487  01B1  025C               	subwf	_pidCount^(0+128),w
 10488  01B2                     u3115:	
 10489  01B2  1C03               	skipc
 10490  01B3  29F9               	goto	l2705
 10491                           
 10492                           ;pid.c: 46: {
 10493                           ;pid.c: 47: pidIntegrated = pidIntegrated + (error * Ki);
 10494  01B4  0021               	movlb	1	; select bank1
 10495  01B5  0857               	movf	(_error+1)^(0+128),w
 10496  01B6  00F1               	movwf	___wmul@multiplier+1
 10497  01B7  0856               	movf	_error^(0+128),w
 10498  01B8  00F0               	movwf	___wmul@multiplier
 10499  01B9  086B               	movf	(_Ki+1)^(0+128),w
 10500  01BA  00F3               	movwf	___wmul@multiplicand+1
 10501  01BB  086A               	movf	_Ki^(0+128),w
 10502  01BC  00F2               	movwf	___wmul@multiplicand
 10503  01BD  3188  208A  3181   	fcall	___wmul
 10504  01C0  0021               	movlb	1	; select bank1
 10505  01C1  085E               	movf	_pidIntegrated^(0+128),w
 10506  01C2  0770               	addwf	?___wmul,w
 10507  01C3  00DE               	movwf	_pidIntegrated^(0+128)
 10508  01C4  085F               	movf	(_pidIntegrated+1)^(0+128),w
 10509  01C5  3D71               	addwfc	?___wmul+1,w
 10510  01C6  00DF               	movwf	(_pidIntegrated+1)^(0+128)
 10511                           
 10512                           ;pid.c: 49: if (pidIntegrated< pidMinOutput)
 10513  01C7  085F               	movf	(_pidIntegrated+1)^(0+128),w
 10514  01C8  3A80               	xorlw	128
 10515  01C9  0020               	movlb	0	; select bank0
 10516  01CA  00A4               	movwf	??_PID_Calculate
 10517  01CB  0021               	movlb	1	; select bank1
 10518  01CC  0861               	movf	(_pidMinOutput+1)^(0+128),w
 10519  01CD  3A80               	xorlw	128
 10520  01CE  0020               	movlb	0	; select bank0
 10521  01CF  0224               	subwf	??_PID_Calculate,w
 10522  01D0  1D03               	skipz
 10523  01D1  29D5               	goto	u3125
 10524  01D2  0021               	movlb	1	; select bank1
 10525  01D3  0860               	movf	_pidMinOutput^(0+128),w
 10526  01D4  025E               	subwf	_pidIntegrated^(0+128),w
 10527  01D5                     u3125:	
 10528  01D5  1803               	skipnc
 10529  01D6  29DC               	goto	l182
 10530                           
 10531                           ;pid.c: 50: {
 10532                           ;pid.c: 51: pidIntegrated= pidMinOutput;
 10533  01D7  0021               	movlb	1	; select bank1
 10534  01D8  0861               	movf	(_pidMinOutput+1)^(0+128),w
 10535  01D9  00DF               	movwf	(_pidIntegrated+1)^(0+128)
 10536  01DA  0860               	movf	_pidMinOutput^(0+128),w
 10537  01DB  00DE               	movwf	_pidIntegrated^(0+128)
 10538  01DC                     l182:	
 10539                           
 10540                           ;pid.c: 52: }
 10541                           ;pid.c: 54: if (pidIntegrated> pidMaxOutput)
 10542  01DC  0023               	movlb	3	; select bank3
 10543  01DD  0835               	movf	(_pidMaxOutput+1)^(0+384),w
 10544  01DE  3A80               	xorlw	128
 10545  01DF  0020               	movlb	0	; select bank0
 10546  01E0  00A4               	movwf	??_PID_Calculate
 10547  01E1  0021               	movlb	1	; select bank1
 10548  01E2  085F               	movf	(_pidIntegrated+1)^(0+128),w
 10549  01E3  3A80               	xorlw	128
 10550  01E4  0020               	movlb	0	; select bank0
 10551  01E5  0224               	subwf	??_PID_Calculate,w
 10552  01E6  1D03               	skipz
 10553  01E7  29EC               	goto	u3135
 10554  01E8  0021               	movlb	1	; select bank1
 10555  01E9  085E               	movf	_pidIntegrated^(0+128),w
 10556  01EA  0023               	movlb	3	; select bank3
 10557  01EB  0234               	subwf	_pidMaxOutput^(0+384),w
 10558  01EC                     u3135:	
 10559  01EC  1803               	skipnc
 10560  01ED  29F6               	goto	l2703
 10561                           
 10562                           ;pid.c: 55: {
 10563                           ;pid.c: 56: pidIntegrated= pidMaxOutput;
 10564  01EE  0023               	movlb	3	; select bank3
 10565  01EF  0835               	movf	(_pidMaxOutput+1)^(0+384),w
 10566  01F0  0021               	movlb	1	; select bank1
 10567  01F1  00DF               	movwf	(_pidIntegrated+1)^(0+128)
 10568  01F2  0023               	movlb	3	; select bank3
 10569  01F3  0834               	movf	_pidMaxOutput^(0+384),w
 10570  01F4  0021               	movlb	1	; select bank1
 10571  01F5  00DE               	movwf	_pidIntegrated^(0+128)
 10572  01F6                     l2703:	
 10573                           
 10574                           ;pid.c: 57: }
 10575                           ;pid.c: 58: pidCount=0;
 10576  01F6  0021               	movlb	1	; select bank1
 10577  01F7  01DC               	clrf	_pidCount^(0+128)
 10578  01F8  01DD               	clrf	(_pidCount+1)^(0+128)
 10579  01F9                     l2705:	
 10580                           
 10581                           ;pid.c: 59: }
 10582                           ;pid.c: 62: Result = errorValue+pidIntegrated+derivativeValue;
 10583  01F9  0021               	movlb	1	; select bank1
 10584  01FA  085E               	movf	_pidIntegrated^(0+128),w
 10585  01FB  0758               	addwf	_errorValue^(0+128),w
 10586  01FC  0020               	movlb	0	; select bank0
 10587  01FD  00A4               	movwf	??_PID_Calculate
 10588  01FE  0021               	movlb	1	; select bank1
 10589  01FF  085F               	movf	(_pidIntegrated+1)^(0+128),w
 10590  0200  3D59               	addwfc	(_errorValue+1)^(0+128),w
 10591  0201  0020               	movlb	0	; select bank0
 10592  0202  00A5               	movwf	??_PID_Calculate+1
 10593  0203  0021               	movlb	1	; select bank1
 10594  0204  0852               	movf	_derivativeValue^(0+128),w
 10595  0205  0020               	movlb	0	; select bank0
 10596  0206  0724               	addwf	??_PID_Calculate,w
 10597  0207  0021               	movlb	1	; select bank1
 10598  0208  00D0               	movwf	_Result^(0+128)
 10599  0209  0853               	movf	(_derivativeValue+1)^(0+128),w
 10600  020A  0020               	movlb	0	; select bank0
 10601  020B  3D25               	addwfc	??_PID_Calculate+1,w
 10602  020C  0021               	movlb	1	; select bank1
 10603  020D  00D1               	movwf	(_Result+1)^(0+128)
 10604                           
 10605                           ;pid.c: 64: if (Result < pidMinOutput)
 10606  020E  0851               	movf	(_Result+1)^(0+128),w
 10607  020F  3A80               	xorlw	128
 10608  0210  0020               	movlb	0	; select bank0
 10609  0211  00A4               	movwf	??_PID_Calculate
 10610  0212  0021               	movlb	1	; select bank1
 10611  0213  0861               	movf	(_pidMinOutput+1)^(0+128),w
 10612  0214  3A80               	xorlw	128
 10613  0215  0020               	movlb	0	; select bank0
 10614  0216  0224               	subwf	??_PID_Calculate,w
 10615  0217  1D03               	skipz
 10616  0218  2A1C               	goto	u3145
 10617  0219  0021               	movlb	1	; select bank1
 10618  021A  0860               	movf	_pidMinOutput^(0+128),w
 10619  021B  0250               	subwf	_Result^(0+128),w
 10620  021C                     u3145:	
 10621  021C  1803               	skipnc
 10622  021D  2A23               	goto	l184
 10623                           
 10624                           ;pid.c: 65: {
 10625                           ;pid.c: 66: Result = pidMinOutput;
 10626  021E  0021               	movlb	1	; select bank1
 10627  021F  0861               	movf	(_pidMinOutput+1)^(0+128),w
 10628  0220  00D1               	movwf	(_Result+1)^(0+128)
 10629  0221  0860               	movf	_pidMinOutput^(0+128),w
 10630  0222  00D0               	movwf	_Result^(0+128)
 10631  0223                     l184:	
 10632                           
 10633                           ;pid.c: 67: }
 10634                           ;pid.c: 69: if (Result > pidMaxOutput)
 10635  0223  0023               	movlb	3	; select bank3
 10636  0224  0835               	movf	(_pidMaxOutput+1)^(0+384),w
 10637  0225  3A80               	xorlw	128
 10638  0226  0020               	movlb	0	; select bank0
 10639  0227  00A4               	movwf	??_PID_Calculate
 10640  0228  0021               	movlb	1	; select bank1
 10641  0229  0851               	movf	(_Result+1)^(0+128),w
 10642  022A  3A80               	xorlw	128
 10643  022B  0020               	movlb	0	; select bank0
 10644  022C  0224               	subwf	??_PID_Calculate,w
 10645  022D  1D03               	skipz
 10646  022E  2A33               	goto	u3155
 10647  022F  0021               	movlb	1	; select bank1
 10648  0230  0850               	movf	_Result^(0+128),w
 10649  0231  0023               	movlb	3	; select bank3
 10650  0232  0234               	subwf	_pidMaxOutput^(0+384),w
 10651  0233                     u3155:	
 10652  0233  1803               	skipnc
 10653  0234  2A3D               	goto	l2713
 10654                           
 10655                           ;pid.c: 70: {
 10656                           ;pid.c: 71: Result = pidMaxOutput;
 10657  0235  0023               	movlb	3	; select bank3
 10658  0236  0835               	movf	(_pidMaxOutput+1)^(0+384),w
 10659  0237  0021               	movlb	1	; select bank1
 10660  0238  00D1               	movwf	(_Result+1)^(0+128)
 10661  0239  0023               	movlb	3	; select bank3
 10662  023A  0834               	movf	_pidMaxOutput^(0+384),w
 10663  023B  0021               	movlb	1	; select bank1
 10664  023C  00D0               	movwf	_Result^(0+128)
 10665  023D                     l2713:	
 10666                           
 10667                           ;pid.c: 72: }
 10668                           ;pid.c: 74: return (Result);
 10669  023D  0021               	movlb	1	; select bank1
 10670  023E  0851               	movf	(_Result+1)^(0+128),w
 10671  023F  00F9               	movwf	___awtoft@c+1
 10672  0240  0850               	movf	_Result^(0+128),w
 10673  0241  00F8               	movwf	___awtoft@c
 10674  0242  3188  20C3         	fcall	___awtoft
 10675  0244  0878               	movf	?___awtoft,w
 10676  0245  0020               	movlb	0	; select bank0
 10677  0246  00A0               	movwf	?_PID_Calculate
 10678  0247  0879               	movf	?___awtoft+1,w
 10679  0248  00A1               	movwf	?_PID_Calculate+1
 10680  0249  087A               	movf	?___awtoft+2,w
 10681  024A  00A2               	movwf	?_PID_Calculate+2
 10682  024B  0008               	return
 10683  024C                     __end_of_PID_Calculate:	
 10684                           
 10685                           	psect	text26
 10686  088A                     __ptext26:	
 10687 ;; *************** function ___wmul *****************
 10688 ;; Defined at:
 10689 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;  multiplier      2    0[COMMON] unsigned int 
 10692 ;;  multiplicand    2    2[COMMON] unsigned int 
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;  product         2    4[COMMON] unsigned int 
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  2    0[COMMON] unsigned int 
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, status,0
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;Total ram usage:        6 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; This function calls:
 10711 ;;		Nothing
 10712 ;; This function is called by:
 10713 ;;		_PID_Calculate
 10714 ;;		_eval_poly
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           
 10719                           ;psect for function ___wmul
 10720  088A                     ___wmul:	
 10721                           
 10722                           ;incstack = 0
 10723                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10724  088A  01F4               	clrf	___wmul@product
 10725  088B  01F5               	clrf	___wmul@product+1
 10726  088C                     l1999:	
 10727  088C  1C70               	btfss	___wmul@multiplier,0
 10728  088D  2892               	goto	l447
 10729  088E  0872               	movf	___wmul@multiplicand,w
 10730  088F  07F4               	addwf	___wmul@product,f
 10731  0890  0873               	movf	___wmul@multiplicand+1,w
 10732  0891  3DF5               	addwfc	___wmul@product+1,f
 10733  0892                     l447:	
 10734  0892  3001               	movlw	1
 10735  0893                     u1935:	
 10736  0893  35F2               	lslf	___wmul@multiplicand,f
 10737  0894  0DF3               	rlf	___wmul@multiplicand+1,f
 10738  0895  0B89               	decfsz	9,f
 10739  0896  2893               	goto	u1935
 10740  0897  3001               	movlw	1
 10741  0898                     u1945:	
 10742  0898  36F1               	lsrf	___wmul@multiplier+1,f
 10743  0899  0CF0               	rrf	___wmul@multiplier,f
 10744  089A  0B89               	decfsz	9,f
 10745  089B  2898               	goto	u1945
 10746  089C  0870               	movf	___wmul@multiplier,w
 10747  089D  0471               	iorwf	___wmul@multiplier+1,w
 10748  089E  1D03               	btfss	3,2
 10749  089F  288C               	goto	l1999
 10750  08A0  0875               	movf	___wmul@product+1,w
 10751  08A1  00F1               	movwf	?___wmul+1
 10752  08A2  0874               	movf	___wmul@product,w
 10753  08A3  00F0               	movwf	?___wmul
 10754  08A4  0008               	return
 10755  08A5                     __end_of___wmul:	
 10756                           
 10757                           	psect	text27
 10758  08C3                     __ptext27:	
 10759 ;; *************** function ___awtoft *****************
 10760 ;; Defined at:
 10761 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;  c               2    8[COMMON] int 
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;  sign            1   13[COMMON] unsigned char 
 10766 ;; Return value:  Size  Location     Type
 10767 ;;                  3    8[COMMON] float 
 10768 ;; Registers used:
 10769 ;;		wreg, status,2, status,0, pclath, cstack
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10775 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10778 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10779 ;;Total ram usage:        6 bytes
 10780 ;; Hardware stack levels used:    1
 10781 ;; Hardware stack levels required when called:    1
 10782 ;; This function calls:
 10783 ;;		___ftpack
 10784 ;; This function is called by:
 10785 ;;		_PID_Calculate
 10786 ;;		_tempCalc
 10787 ;;		_log
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           
 10792                           ;psect for function ___awtoft
 10793  08C3                     ___awtoft:	
 10794                           
 10795                           ;incstack = 0
 10796                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 10797  08C3  01FD               	clrf	___awtoft@sign
 10798  08C4  1FF9               	btfss	___awtoft@c+1,7
 10799  08C5  28CD               	goto	l2169
 10800  08C6  09F8               	comf	___awtoft@c,f
 10801  08C7  09F9               	comf	___awtoft@c+1,f
 10802  08C8  0AF8               	incf	___awtoft@c,f
 10803  08C9  1903               	skipnz
 10804  08CA  0AF9               	incf	___awtoft@c+1,f
 10805  08CB  01FD               	clrf	___awtoft@sign
 10806  08CC  0AFD               	incf	___awtoft@sign,f
 10807  08CD                     l2169:	
 10808  08CD  0878               	movf	___awtoft@c,w
 10809  08CE  00F0               	movwf	___ftpack@arg
 10810  08CF  0879               	movf	___awtoft@c+1,w
 10811  08D0  00F1               	movwf	___ftpack@arg+1
 10812  08D1  01F2               	clrf	___ftpack@arg+2
 10813  08D2  308E               	movlw	142
 10814  08D3  00FB               	movwf	??___awtoft
 10815  08D4  087B               	movf	??___awtoft,w
 10816  08D5  00F3               	movwf	___ftpack@exp
 10817  08D6  087D               	movf	___awtoft@sign,w
 10818  08D7  00FC               	movwf	??___awtoft+1
 10819  08D8  087C               	movf	??___awtoft+1,w
 10820  08D9  00F4               	movwf	___ftpack@sign
 10821  08DA  318B  2318         	fcall	___ftpack
 10822  08DC  0870               	movf	?___ftpack,w
 10823  08DD  00F8               	movwf	?___awtoft
 10824  08DE  0871               	movf	?___ftpack+1,w
 10825  08DF  00F9               	movwf	?___awtoft+1
 10826  08E0  0872               	movf	?___ftpack+2,w
 10827  08E1  00FA               	movwf	?___awtoft+2
 10828  08E2  0008               	return
 10829  08E3                     __end_of___awtoft:	
 10830                           
 10831                           	psect	text28
 10832  0B18                     __ptext28:	
 10833 ;; *************** function ___ftpack *****************
 10834 ;; Defined at:
 10835 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 10836 ;; Parameters:    Size  Location     Type
 10837 ;;  arg             3    0[COMMON] unsigned um
 10838 ;;  exp             1    3[COMMON] unsigned char 
 10839 ;;  sign            1    4[COMMON] unsigned char 
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;		None
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  3    0[COMMON] float 
 10844 ;; Registers used:
 10845 ;;		wreg, status,2, status,0
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10851 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10854 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10855 ;;Total ram usage:        8 bytes
 10856 ;; Hardware stack levels used:    1
 10857 ;; This function calls:
 10858 ;;		Nothing
 10859 ;; This function is called by:
 10860 ;;		___awtoft
 10861 ;;		___ftadd
 10862 ;;		___ftdiv
 10863 ;;		___ftmul
 10864 ;; This function uses a non-reentrant model
 10865 ;;
 10866                           
 10867                           
 10868                           ;psect for function ___ftpack
 10869  0B18                     ___ftpack:	
 10870                           
 10871                           ;incstack = 0
 10872                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10873  0B18  0873               	movf	___ftpack@exp,w
 10874  0B19  1903               	btfsc	3,2
 10875  0B1A  2B20               	goto	l1953
 10876  0B1B  0872               	movf	___ftpack@arg+2,w
 10877  0B1C  0471               	iorwf	___ftpack@arg+1,w
 10878  0B1D  0470               	iorwf	___ftpack@arg,w
 10879  0B1E  1D03               	skipz
 10880  0B1F  2B31               	goto	l1959
 10881  0B20                     l1953:	
 10882  0B20  3000               	movlw	0
 10883  0B21  00F0               	movwf	?___ftpack
 10884  0B22  3000               	movlw	0
 10885  0B23  00F1               	movwf	?___ftpack+1
 10886  0B24  3000               	movlw	0
 10887  0B25  00F2               	movwf	?___ftpack+2
 10888  0B26  0008               	return
 10889  0B27                     l1957:	
 10890  0B27  3001               	movlw	1
 10891  0B28  00F5               	movwf	??___ftpack
 10892  0B29  0875               	movf	??___ftpack,w
 10893  0B2A  07F3               	addwf	___ftpack@exp,f
 10894  0B2B  3001               	movlw	1
 10895  0B2C                     u1785:	
 10896  0B2C  36F2               	lsrf	___ftpack@arg+2,f
 10897  0B2D  0CF1               	rrf	___ftpack@arg+1,f
 10898  0B2E  0CF0               	rrf	___ftpack@arg,f
 10899  0B2F  0B89               	decfsz	9,f
 10900  0B30  2B2C               	goto	u1785
 10901  0B31                     l1959:	
 10902  0B31  30FE               	movlw	254
 10903  0B32  0572               	andwf	___ftpack@arg+2,w
 10904  0B33  1903               	btfsc	3,2
 10905  0B34  2B4A               	goto	l608
 10906  0B35  2B27               	goto	l1957
 10907  0B36                     l1961:	
 10908  0B36  3001               	movlw	1
 10909  0B37  00F5               	movwf	??___ftpack
 10910  0B38  0875               	movf	??___ftpack,w
 10911  0B39  07F3               	addwf	___ftpack@exp,f
 10912  0B3A  3001               	movlw	1
 10913  0B3B  07F0               	addwf	___ftpack@arg,f
 10914  0B3C  3000               	movlw	0
 10915  0B3D  1803               	skipnc
 10916  0B3E  3001               	movlw	1
 10917  0B3F  07F1               	addwf	___ftpack@arg+1,f
 10918  0B40  3000               	movlw	0
 10919  0B41  1803               	skipnc
 10920  0B42  3001               	movlw	1
 10921  0B43  07F2               	addwf	___ftpack@arg+2,f
 10922  0B44  3001               	movlw	1
 10923  0B45                     u1805:	
 10924  0B45  36F2               	lsrf	___ftpack@arg+2,f
 10925  0B46  0CF1               	rrf	___ftpack@arg+1,f
 10926  0B47  0CF0               	rrf	___ftpack@arg,f
 10927  0B48  0B89               	decfsz	9,f
 10928  0B49  2B45               	goto	u1805
 10929  0B4A                     l608:	
 10930  0B4A  30FF               	movlw	255
 10931  0B4B  0572               	andwf	___ftpack@arg+2,w
 10932  0B4C  1903               	btfsc	3,2
 10933  0B4D  2B57               	goto	l1969
 10934  0B4E  2B36               	goto	l1961
 10935  0B4F                     l1967:	
 10936  0B4F  3001               	movlw	1
 10937  0B50  02F3               	subwf	___ftpack@exp,f
 10938  0B51  3001               	movlw	1
 10939  0B52                     u1825:	
 10940  0B52  35F0               	lslf	___ftpack@arg,f
 10941  0B53  0DF1               	rlf	___ftpack@arg+1,f
 10942  0B54  0DF2               	rlf	___ftpack@arg+2,f
 10943  0B55  0B89               	decfsz	9,f
 10944  0B56  2B52               	goto	u1825
 10945  0B57                     l1969:	
 10946  0B57  1BF1               	btfsc	___ftpack@arg+1,7
 10947  0B58  2B5D               	goto	l615
 10948  0B59  3002               	movlw	2
 10949  0B5A  0273               	subwf	___ftpack@exp,w
 10950  0B5B  1803               	skipnc
 10951  0B5C  2B4F               	goto	l1967
 10952  0B5D                     l615:	
 10953  0B5D  1873               	btfsc	___ftpack@exp,0
 10954  0B5E  2B65               	goto	l616
 10955  0B5F  30FF               	movlw	255
 10956  0B60  05F0               	andwf	___ftpack@arg,f
 10957  0B61  307F               	movlw	127
 10958  0B62  05F1               	andwf	___ftpack@arg+1,f
 10959  0B63  30FF               	movlw	255
 10960  0B64  05F2               	andwf	___ftpack@arg+2,f
 10961  0B65                     l616:	
 10962  0B65  1003               	clrc
 10963  0B66  0CF3               	rrf	___ftpack@exp,f
 10964  0B67  0873               	movf	___ftpack@exp,w
 10965  0B68  00F5               	movwf	??___ftpack
 10966  0B69  01F6               	clrf	??___ftpack+1
 10967  0B6A  01F7               	clrf	??___ftpack+2
 10968  0B6B  3010               	movlw	16
 10969  0B6C                     u1865:	
 10970  0B6C  35F5               	lslf	??___ftpack,f
 10971  0B6D  0DF6               	rlf	??___ftpack+1,f
 10972  0B6E  0DF7               	rlf	??___ftpack+2,f
 10973  0B6F  0B89               	decfsz	9,f
 10974  0B70  2B6C               	goto	u1865
 10975  0B71  0875               	movf	??___ftpack,w
 10976  0B72  04F0               	iorwf	___ftpack@arg,f
 10977  0B73  0876               	movf	??___ftpack+1,w
 10978  0B74  04F1               	iorwf	___ftpack@arg+1,f
 10979  0B75  0877               	movf	??___ftpack+2,w
 10980  0B76  04F2               	iorwf	___ftpack@arg+2,f
 10981  0B77  0874               	movf	___ftpack@sign,w
 10982  0B78  1903               	btfsc	3,2
 10983  0B79  0008               	return
 10984  0B7A  17F2               	bsf	___ftpack@arg+2,7
 10985  0B7B  0008               	return
 10986  0B7C                     __end_of___ftpack:	
 10987                           
 10988                           	psect	text29
 10989  0856                     __ptext29:	
 10990 ;; *************** function _LCD_Write_String *****************
 10991 ;; Defined at:
 10992 ;;		line 239 in file "lcd.c"
 10993 ;; Parameters:    Size  Location     Type
 10994 ;;  a               2    5[COMMON] PTR const unsigned char 
 10995 ;;		 -> STR_2(8), STR_1(5), 
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;  i               2    8[COMMON] int 
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  1    wreg      void 
 11000 ;; Registers used:
 11001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11002 ;; Tracked objects:
 11003 ;;		On entry : 0/0
 11004 ;;		On exit  : 0/0
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11010 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11011 ;;Total ram usage:        5 bytes
 11012 ;; Hardware stack levels used:    1
 11013 ;; Hardware stack levels required when called:    2
 11014 ;; This function calls:
 11015 ;;		_LCD_Write_Char
 11016 ;; This function is called by:
 11017 ;;		_main
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           
 11022                           ;psect for function _LCD_Write_String
 11023  0856                     _LCD_Write_String:	
 11024                           
 11025                           ;lcd.c: 241: int i;
 11026                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 11027                           
 11028                           ;incstack = 0
 11029                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11030  0856  01F8               	clrf	LCD_Write_String@i
 11031  0857  01F9               	clrf	LCD_Write_String@i+1
 11032  0858                     l2619:	
 11033  0858  0875               	movf	LCD_Write_String@a,w
 11034  0859  0778               	addwf	LCD_Write_String@i,w
 11035  085A  0084               	movwf	4
 11036  085B  0876               	movf	LCD_Write_String@a+1,w
 11037  085C  3D79               	addwfc	LCD_Write_String@i+1,w
 11038  085D  0085               	movwf	5
 11039  085E  0012               	moviw fsr0++
 11040  085F  1903               	btfsc	3,2
 11041  0860  0008               	return
 11042                           
 11043                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 11044  0861  0875               	movf	LCD_Write_String@a,w
 11045  0862  0778               	addwf	LCD_Write_String@i,w
 11046  0863  0084               	movwf	4
 11047  0864  0876               	movf	LCD_Write_String@a+1,w
 11048  0865  3D79               	addwfc	LCD_Write_String@i+1,w
 11049  0866  0085               	movwf	5
 11050  0867  0800               	movf	0,w	;code access
 11051  0868  3189  2109  3188   	fcall	_LCD_Write_Char
 11052  086B  3001               	movlw	1
 11053  086C  07F8               	addwf	LCD_Write_String@i,f
 11054  086D  3000               	movlw	0
 11055  086E  3DF9               	addwfc	LCD_Write_String@i+1,f
 11056  086F  2858               	goto	l2619
 11057  0870                     __end_of_LCD_Write_String:	
 11058                           
 11059                           	psect	text30
 11060  0F37                     __ptext30:	
 11061 ;; *************** function _LCD_Write_Int *****************
 11062 ;; Defined at:
 11063 ;;		line 246 in file "lcd.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;  value           2    9[COMMON] int 
 11066 ;;  fieldLength     1   11[COMMON] char 
 11067 ;;  numPlaces       1   12[COMMON] char 
 11068 ;;  sign            1   13[COMMON] char 
 11069 ;; Auto vars:     Size  Location     Type
 11070 ;;  str             5    5[BANK0 ] unsigned char [5]
 11071 ;;  i               2   12[BANK0 ] int 
 11072 ;;  j               2   10[BANK0 ] int 
 11073 ;; Return value:  Size  Location     Type
 11074 ;;                  1    wreg      void 
 11075 ;; Registers used:
 11076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11077 ;; Tracked objects:
 11078 ;;		On entry : 0/0
 11079 ;;		On exit  : 0/0
 11080 ;;		Unchanged: 0/0
 11081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11082 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11084 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11085 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11086 ;;Total ram usage:       19 bytes
 11087 ;; Hardware stack levels used:    1
 11088 ;; Hardware stack levels required when called:    2
 11089 ;; This function calls:
 11090 ;;		_LCD_Write_Char
 11091 ;;		___awdiv
 11092 ;;		___awmod
 11093 ;; This function is called by:
 11094 ;;		_main
 11095 ;; This function uses a non-reentrant model
 11096 ;;
 11097                           
 11098                           
 11099                           ;psect for function _LCD_Write_Int
 11100  0F37                     _LCD_Write_Int:	
 11101                           
 11102                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 11103                           
 11104                           ;incstack = 0
 11105                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11106  0F37  30C4               	movlw	low LCD_Write_Int@F13690
 11107  0F38  0086               	movwf	6
 11108  0F39  3001               	movlw	high LCD_Write_Int@F13690
 11109  0F3A  0087               	movwf	7
 11110  0F3B  3025               	movlw	low LCD_Write_Int@str
 11111  0F3C  0084               	movwf	4
 11112  0F3D  3000               	movlw	high LCD_Write_Int@str
 11113  0F3E  0085               	movwf	5
 11114  0F3F  3005               	movlw	5
 11115  0F40  0020               	movlb	0	; select bank0
 11116  0F41  00A0               	movwf	??_LCD_Write_Int
 11117  0F42                     u3000:	
 11118  0F42  0016               	moviw fsr1++
 11119  0F43  001A               	movwi fsr0++
 11120  0F44  0BA0               	decfsz	??_LCD_Write_Int,f
 11121  0F45  2F42               	goto	u3000
 11122                           
 11123                           ;lcd.c: 249: int i=4,j=0;
 11124  0F46  3004               	movlw	4
 11125  0F47  00AC               	movwf	LCD_Write_Int@i
 11126  0F48  3000               	movlw	0
 11127  0F49  00AD               	movwf	LCD_Write_Int@i+1
 11128  0F4A  01AA               	clrf	LCD_Write_Int@j
 11129  0F4B  01AB               	clrf	LCD_Write_Int@j+1
 11130                           
 11131                           ;lcd.c: 251: if(value<0)
 11132  0F4C  1FFA               	btfss	LCD_Write_Int@value+1,7
 11133  0F4D  2F58               	goto	l2633
 11134                           
 11135                           ;lcd.c: 252: {
 11136                           ;lcd.c: 253: LCD_Write_Char('-');
 11137  0F4E  302D               	movlw	45
 11138  0F4F  3189  2109  318F   	fcall	_LCD_Write_Char
 11139                           
 11140                           ;lcd.c: 254: value=value*-1;
 11141  0F52  09F9               	comf	LCD_Write_Int@value,f
 11142  0F53  09FA               	comf	LCD_Write_Int@value+1,f
 11143  0F54  0AF9               	incf	LCD_Write_Int@value,f
 11144  0F55  1903               	skipnz
 11145  0F56  0AFA               	incf	LCD_Write_Int@value+1,f
 11146                           
 11147                           ;lcd.c: 255: }
 11148  0F57  2F5F               	goto	l2643
 11149  0F58                     l2633:	
 11150                           
 11151                           ;lcd.c: 257: else
 11152                           ;lcd.c: 258: {
 11153                           ;lcd.c: 259: if(sign == 1)
 11154  0F58  037D               	decf	LCD_Write_Int@sign,w
 11155  0F59  1D03               	btfss	3,2
 11156  0F5A  2F5F               	goto	l2643
 11157                           
 11158                           ;lcd.c: 260: {
 11159                           ;lcd.c: 261: LCD_Write_Char('+');
 11160  0F5B  302B               	movlw	43
 11161  0F5C  3189  2109  318F   	fcall	_LCD_Write_Char
 11162  0F5F                     l2643:	
 11163                           ;lcd.c: 262: }
 11164                           ;lcd.c: 263: }
 11165                           ;lcd.c: 265: while(value)
 11166                           
 11167  0F5F  0879               	movf	LCD_Write_Int@value,w
 11168  0F60  047A               	iorwf	LCD_Write_Int@value+1,w
 11169  0F61  1903               	btfsc	3,2
 11170  0F62  2F8C               	goto	l2645
 11171                           
 11172                           ;lcd.c: 266: {
 11173                           ;lcd.c: 267: str[i]=value%10;
 11174  0F63  300A               	movlw	10
 11175  0F64  00F0               	movwf	___awmod@divisor
 11176  0F65  3000               	movlw	0
 11177  0F66  00F1               	movwf	___awmod@divisor+1
 11178  0F67  087A               	movf	LCD_Write_Int@value+1,w
 11179  0F68  00F3               	movwf	___awmod@dividend+1
 11180  0F69  0879               	movf	LCD_Write_Int@value,w
 11181  0F6A  00F2               	movwf	___awmod@dividend
 11182  0F6B  318A  2222  318F   	fcall	___awmod
 11183  0F6E  0870               	movf	?___awmod,w
 11184  0F6F  0020               	movlb	0	; select bank0
 11185  0F70  00A0               	movwf	??_LCD_Write_Int
 11186  0F71  082C               	movf	LCD_Write_Int@i,w
 11187  0F72  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11188  0F73  0086               	movwf	6
 11189  0F74  0187               	clrf	7
 11190  0F75  0820               	movf	??_LCD_Write_Int,w
 11191  0F76  0081               	movwf	1
 11192                           
 11193                           ;lcd.c: 268: value=value/10;
 11194  0F77  300A               	movlw	10
 11195  0F78  00F0               	movwf	___awdiv@divisor
 11196  0F79  3000               	movlw	0
 11197  0F7A  00F1               	movwf	___awdiv@divisor+1
 11198  0F7B  087A               	movf	LCD_Write_Int@value+1,w
 11199  0F7C  00F3               	movwf	___awdiv@dividend+1
 11200  0F7D  0879               	movf	LCD_Write_Int@value,w
 11201  0F7E  00F2               	movwf	___awdiv@dividend
 11202  0F7F  318A  2267  318F   	fcall	___awdiv
 11203  0F82  0871               	movf	?___awdiv+1,w
 11204  0F83  00FA               	movwf	LCD_Write_Int@value+1
 11205  0F84  0870               	movf	?___awdiv,w
 11206  0F85  00F9               	movwf	LCD_Write_Int@value
 11207                           
 11208                           ;lcd.c: 269: i--;
 11209  0F86  30FF               	movlw	255
 11210  0F87  0020               	movlb	0	; select bank0
 11211  0F88  07AC               	addwf	LCD_Write_Int@i,f
 11212  0F89  30FF               	movlw	255
 11213  0F8A  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11214  0F8B  2F5F               	goto	l2643
 11215  0F8C                     l2645:	
 11216                           
 11217                           ;lcd.c: 270: }
 11218                           ;lcd.c: 271: if(fieldLength==-1)
 11219  0F8C  0A7B               	incf	LCD_Write_Int@fieldLength,w
 11220  0F8D  1903               	btfsc	3,2
 11221  0F8E  2F95               	goto	l2651
 11222  0F8F  2F9E               	goto	l2653
 11223  0F90                     l2649:	
 11224                           ;lcd.c: 272: {
 11225                           ;lcd.c: 273: while(str[j]==0)
 11226                           
 11227                           
 11228                           ;lcd.c: 274: {
 11229                           ;lcd.c: 275: j++;
 11230  0F90  3001               	movlw	1
 11231  0F91  0020               	movlb	0	; select bank0
 11232  0F92  07AA               	addwf	LCD_Write_Int@j,f
 11233  0F93  3000               	movlw	0
 11234  0F94  3DAB               	addwfc	LCD_Write_Int@j+1,f
 11235  0F95                     l2651:	
 11236  0F95  0020               	movlb	0	; select bank0
 11237  0F96  082A               	movf	LCD_Write_Int@j,w
 11238  0F97  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11239  0F98  0086               	movwf	6
 11240  0F99  0187               	clrf	7
 11241  0F9A  0801               	movf	1,w
 11242  0F9B  1D03               	btfss	3,2
 11243  0F9C  2FAF               	goto	l2655
 11244  0F9D  2F90               	goto	l2649
 11245  0F9E                     l2653:	
 11246                           ;lcd.c: 276: }
 11247                           ;lcd.c: 277: }
 11248                           
 11249                           
 11250                           ;lcd.c: 278: else
 11251                           ;lcd.c: 279: {
 11252                           ;lcd.c: 280: j=5-fieldLength;
 11253  0F9E  087B               	movf	LCD_Write_Int@fieldLength,w
 11254  0F9F  0020               	movlb	0	; select bank0
 11255  0FA0  00A0               	movwf	??_LCD_Write_Int
 11256  0FA1  01A1               	clrf	??_LCD_Write_Int+1
 11257  0FA2  1BA0               	btfsc	??_LCD_Write_Int,7
 11258  0FA3  03A1               	decf	??_LCD_Write_Int+1,f
 11259  0FA4  09A0               	comf	??_LCD_Write_Int,f
 11260  0FA5  09A1               	comf	??_LCD_Write_Int+1,f
 11261  0FA6  0AA0               	incf	??_LCD_Write_Int,f
 11262  0FA7  1903               	skipnz
 11263  0FA8  0AA1               	incf	??_LCD_Write_Int+1,f
 11264  0FA9  0820               	movf	??_LCD_Write_Int,w
 11265  0FAA  3E05               	addlw	5
 11266  0FAB  00AA               	movwf	LCD_Write_Int@j
 11267  0FAC  3000               	movlw	0
 11268  0FAD  3D21               	addwfc	??_LCD_Write_Int+1,w
 11269  0FAE  00AB               	movwf	LCD_Write_Int@j+1
 11270  0FAF                     l2655:	
 11271                           
 11272                           ;lcd.c: 281: }
 11273                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11274  0FAF  082B               	movf	LCD_Write_Int@j+1,w
 11275  0FB0  00AD               	movwf	LCD_Write_Int@i+1
 11276  0FB1  082A               	movf	LCD_Write_Int@j,w
 11277  0FB2  00AC               	movwf	LCD_Write_Int@i
 11278  0FB3                     l2661:	
 11279  0FB3  087C               	movf	LCD_Write_Int@numPlaces,w
 11280  0FB4  00A0               	movwf	??_LCD_Write_Int
 11281  0FB5  01A1               	clrf	??_LCD_Write_Int+1
 11282  0FB6  1BA0               	btfsc	??_LCD_Write_Int,7
 11283  0FB7  03A1               	decf	??_LCD_Write_Int+1,f
 11284  0FB8  09A0               	comf	??_LCD_Write_Int,f
 11285  0FB9  09A1               	comf	??_LCD_Write_Int+1,f
 11286  0FBA  0AA0               	incf	??_LCD_Write_Int,f
 11287  0FBB  1903               	skipnz
 11288  0FBC  0AA1               	incf	??_LCD_Write_Int+1,f
 11289  0FBD  0820               	movf	??_LCD_Write_Int,w
 11290  0FBE  3E05               	addlw	5
 11291  0FBF  00A2               	movwf	??_LCD_Write_Int+2
 11292  0FC0  3000               	movlw	0
 11293  0FC1  3D21               	addwfc	??_LCD_Write_Int+1,w
 11294  0FC2  00A3               	movwf	??_LCD_Write_Int+3
 11295  0FC3  082D               	movf	LCD_Write_Int@i+1,w
 11296  0FC4  3A80               	xorlw	128
 11297  0FC5  00A4               	movwf	??_LCD_Write_Int+4
 11298  0FC6  0823               	movf	??_LCD_Write_Int+3,w
 11299  0FC7  3A80               	xorlw	128
 11300  0FC8  0224               	subwf	??_LCD_Write_Int+4,w
 11301  0FC9  1D03               	skipz
 11302  0FCA  2FCD               	goto	u3065
 11303  0FCB  0822               	movf	??_LCD_Write_Int+2,w
 11304  0FCC  022C               	subwf	LCD_Write_Int@i,w
 11305  0FCD                     u3065:	
 11306  0FCD  1803               	btfsc	3,0
 11307  0FCE  2FDF               	goto	l2663
 11308                           
 11309                           ;lcd.c: 284: {
 11310                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11311  0FCF  0020               	movlb	0	; select bank0
 11312  0FD0  082C               	movf	LCD_Write_Int@i,w
 11313  0FD1  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11314  0FD2  0086               	movwf	6
 11315  0FD3  0187               	clrf	7
 11316  0FD4  0801               	movf	1,w
 11317  0FD5  3E30               	addlw	48
 11318  0FD6  3189  2109  318F   	fcall	_LCD_Write_Char
 11319  0FD9  3001               	movlw	1
 11320  0FDA  0020               	movlb	0	; select bank0
 11321  0FDB  07AC               	addwf	LCD_Write_Int@i,f
 11322  0FDC  3000               	movlw	0
 11323  0FDD  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11324  0FDE  2FB3               	goto	l2661
 11325  0FDF                     l2663:	
 11326                           
 11327                           ;lcd.c: 286: }
 11328                           ;lcd.c: 288: if(numPlaces == 1)
 11329  0FDF  037C               	decf	LCD_Write_Int@numPlaces,w
 11330  0FE0  1D03               	btfss	3,2
 11331  0FE1  2FEC               	goto	l2667
 11332                           
 11333                           ;lcd.c: 289: {
 11334                           ;lcd.c: 290: LCD_Write_Char(46);
 11335  0FE2  302E               	movlw	46
 11336  0FE3  3189  2109  318F   	fcall	_LCD_Write_Char
 11337                           
 11338                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11339  0FE6  0020               	movlb	0	; select bank0
 11340  0FE7  0829               	movf	LCD_Write_Int@str+4,w
 11341  0FE8  3E30               	addlw	48
 11342  0FE9  3189  2109  318F   	fcall	_LCD_Write_Char
 11343  0FEC                     l2667:	
 11344                           
 11345                           ;lcd.c: 292: }
 11346                           ;lcd.c: 294: if(numPlaces == 2)
 11347  0FEC  3002               	movlw	2
 11348  0FED  067C               	xorwf	LCD_Write_Int@numPlaces,w
 11349  0FEE  1D03               	btfss	3,2
 11350  0FEF  0008               	return
 11351                           
 11352                           ;lcd.c: 295: {
 11353                           ;lcd.c: 296: LCD_Write_Char(46);
 11354  0FF0  302E               	movlw	46
 11355  0FF1  3189  2109  318F   	fcall	_LCD_Write_Char
 11356                           
 11357                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11358  0FF4  0020               	movlb	0	; select bank0
 11359  0FF5  0828               	movf	LCD_Write_Int@str+3,w
 11360  0FF6  3E30               	addlw	48
 11361  0FF7  3189  2109  318F   	fcall	_LCD_Write_Char
 11362                           
 11363                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11364  0FFA  0020               	movlb	0	; select bank0
 11365  0FFB  0829               	movf	LCD_Write_Int@str+4,w
 11366  0FFC  3E30               	addlw	48
 11367  0FFD  3189  2109         	fcall	_LCD_Write_Char
 11368  0FFF  0008               	return
 11369  1000                     __end_of_LCD_Write_Int:	
 11370                           
 11371                           	psect	text31
 11372  0A22                     __ptext31:	
 11373 ;; *************** function ___awmod *****************
 11374 ;; Defined at:
 11375 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;  divisor         2    0[COMMON] int 
 11378 ;;  dividend        2    2[COMMON] int 
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;  sign            1    6[COMMON] unsigned char 
 11381 ;;  counter         1    5[COMMON] unsigned char 
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  2    0[COMMON] int 
 11384 ;; Registers used:
 11385 ;;		wreg, status,2, status,0
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11394 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11395 ;;Total ram usage:        7 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		_LCD_Write_Int
 11401 ;; This function uses a non-reentrant model
 11402 ;;
 11403                           
 11404                           
 11405                           ;psect for function ___awmod
 11406  0A22                     ___awmod:	
 11407                           
 11408                           ;incstack = 0
 11409                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11410  0A22  01F6               	clrf	___awmod@sign
 11411  0A23  1FF3               	btfss	___awmod@dividend+1,7
 11412  0A24  2A2C               	goto	l2493
 11413  0A25  09F2               	comf	___awmod@dividend,f
 11414  0A26  09F3               	comf	___awmod@dividend+1,f
 11415  0A27  0AF2               	incf	___awmod@dividend,f
 11416  0A28  1903               	skipnz
 11417  0A29  0AF3               	incf	___awmod@dividend+1,f
 11418  0A2A  01F6               	clrf	___awmod@sign
 11419  0A2B  0AF6               	incf	___awmod@sign,f
 11420  0A2C                     l2493:	
 11421  0A2C  1FF1               	btfss	___awmod@divisor+1,7
 11422  0A2D  2A33               	goto	l2497
 11423  0A2E  09F0               	comf	___awmod@divisor,f
 11424  0A2F  09F1               	comf	___awmod@divisor+1,f
 11425  0A30  0AF0               	incf	___awmod@divisor,f
 11426  0A31  1903               	skipnz
 11427  0A32  0AF1               	incf	___awmod@divisor+1,f
 11428  0A33                     l2497:	
 11429  0A33  0870               	movf	___awmod@divisor,w
 11430  0A34  0471               	iorwf	___awmod@divisor+1,w
 11431  0A35  1903               	btfsc	3,2
 11432  0A36  2A5A               	goto	l2515
 11433  0A37  01F5               	clrf	___awmod@counter
 11434  0A38  0AF5               	incf	___awmod@counter,f
 11435  0A39                     l2505:	
 11436  0A39  1BF1               	btfsc	___awmod@divisor+1,7
 11437  0A3A  2A45               	goto	l2507
 11438  0A3B  3001               	movlw	1
 11439  0A3C                     u2705:	
 11440  0A3C  35F0               	lslf	___awmod@divisor,f
 11441  0A3D  0DF1               	rlf	___awmod@divisor+1,f
 11442  0A3E  0B89               	decfsz	9,f
 11443  0A3F  2A3C               	goto	u2705
 11444  0A40  3001               	movlw	1
 11445  0A41  00F4               	movwf	??___awmod
 11446  0A42  0874               	movf	??___awmod,w
 11447  0A43  07F5               	addwf	___awmod@counter,f
 11448  0A44  2A39               	goto	l2505
 11449  0A45                     l2507:	
 11450  0A45  0871               	movf	___awmod@divisor+1,w
 11451  0A46  0273               	subwf	___awmod@dividend+1,w
 11452  0A47  1D03               	skipz
 11453  0A48  2A4B               	goto	u2725
 11454  0A49  0870               	movf	___awmod@divisor,w
 11455  0A4A  0272               	subwf	___awmod@dividend,w
 11456  0A4B                     u2725:	
 11457  0A4B  1C03               	skipc
 11458  0A4C  2A51               	goto	l2511
 11459  0A4D  0870               	movf	___awmod@divisor,w
 11460  0A4E  02F2               	subwf	___awmod@dividend,f
 11461  0A4F  0871               	movf	___awmod@divisor+1,w
 11462  0A50  3BF3               	subwfb	___awmod@dividend+1,f
 11463  0A51                     l2511:	
 11464  0A51  3001               	movlw	1
 11465  0A52                     u2735:	
 11466  0A52  36F1               	lsrf	___awmod@divisor+1,f
 11467  0A53  0CF0               	rrf	___awmod@divisor,f
 11468  0A54  0B89               	decfsz	9,f
 11469  0A55  2A52               	goto	u2735
 11470  0A56  3001               	movlw	1
 11471  0A57  02F5               	subwf	___awmod@counter,f
 11472  0A58  1D03               	btfss	3,2
 11473  0A59  2A45               	goto	l2507
 11474  0A5A                     l2515:	
 11475  0A5A  0876               	movf	___awmod@sign,w
 11476  0A5B  1903               	btfsc	3,2
 11477  0A5C  2A62               	goto	l2519
 11478  0A5D  09F2               	comf	___awmod@dividend,f
 11479  0A5E  09F3               	comf	___awmod@dividend+1,f
 11480  0A5F  0AF2               	incf	___awmod@dividend,f
 11481  0A60  1903               	skipnz
 11482  0A61  0AF3               	incf	___awmod@dividend+1,f
 11483  0A62                     l2519:	
 11484  0A62  0873               	movf	___awmod@dividend+1,w
 11485  0A63  00F1               	movwf	?___awmod+1
 11486  0A64  0872               	movf	___awmod@dividend,w
 11487  0A65  00F0               	movwf	?___awmod
 11488  0A66  0008               	return
 11489  0A67                     __end_of___awmod:	
 11490                           
 11491                           	psect	text32
 11492  0A67                     __ptext32:	
 11493 ;; *************** function ___awdiv *****************
 11494 ;; Defined at:
 11495 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;  divisor         2    0[COMMON] int 
 11498 ;;  dividend        2    2[COMMON] int 
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;  quotient        2    7[COMMON] int 
 11501 ;;  sign            1    6[COMMON] unsigned char 
 11502 ;;  counter         1    5[COMMON] unsigned char 
 11503 ;; Return value:  Size  Location     Type
 11504 ;;                  2    0[COMMON] int 
 11505 ;; Registers used:
 11506 ;;		wreg, status,2, status,0
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11513 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11515 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11516 ;;Total ram usage:        9 bytes
 11517 ;; Hardware stack levels used:    1
 11518 ;; This function calls:
 11519 ;;		Nothing
 11520 ;; This function is called by:
 11521 ;;		_LCD_Write_Int
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           
 11525                           
 11526                           ;psect for function ___awdiv
 11527  0A67                     ___awdiv:	
 11528                           
 11529                           ;incstack = 0
 11530                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11531  0A67  01F6               	clrf	___awdiv@sign
 11532  0A68  1FF1               	btfss	___awdiv@divisor+1,7
 11533  0A69  2A71               	goto	l2449
 11534  0A6A  09F0               	comf	___awdiv@divisor,f
 11535  0A6B  09F1               	comf	___awdiv@divisor+1,f
 11536  0A6C  0AF0               	incf	___awdiv@divisor,f
 11537  0A6D  1903               	skipnz
 11538  0A6E  0AF1               	incf	___awdiv@divisor+1,f
 11539  0A6F  01F6               	clrf	___awdiv@sign
 11540  0A70  0AF6               	incf	___awdiv@sign,f
 11541  0A71                     l2449:	
 11542  0A71  1FF3               	btfss	___awdiv@dividend+1,7
 11543  0A72  2A7C               	goto	l2455
 11544  0A73  09F2               	comf	___awdiv@dividend,f
 11545  0A74  09F3               	comf	___awdiv@dividend+1,f
 11546  0A75  0AF2               	incf	___awdiv@dividend,f
 11547  0A76  1903               	skipnz
 11548  0A77  0AF3               	incf	___awdiv@dividend+1,f
 11549  0A78  3001               	movlw	1
 11550  0A79  00F4               	movwf	??___awdiv
 11551  0A7A  0874               	movf	??___awdiv,w
 11552  0A7B  06F6               	xorwf	___awdiv@sign,f
 11553  0A7C                     l2455:	
 11554  0A7C  01F7               	clrf	___awdiv@quotient
 11555  0A7D  01F8               	clrf	___awdiv@quotient+1
 11556  0A7E  0870               	movf	___awdiv@divisor,w
 11557  0A7F  0471               	iorwf	___awdiv@divisor+1,w
 11558  0A80  1903               	btfsc	3,2
 11559  0A81  2AAB               	goto	l2477
 11560  0A82  01F5               	clrf	___awdiv@counter
 11561  0A83  0AF5               	incf	___awdiv@counter,f
 11562  0A84                     l2465:	
 11563  0A84  1BF1               	btfsc	___awdiv@divisor+1,7
 11564  0A85  2A90               	goto	l2467
 11565  0A86  3001               	movlw	1
 11566  0A87                     u2605:	
 11567  0A87  35F0               	lslf	___awdiv@divisor,f
 11568  0A88  0DF1               	rlf	___awdiv@divisor+1,f
 11569  0A89  0B89               	decfsz	9,f
 11570  0A8A  2A87               	goto	u2605
 11571  0A8B  3001               	movlw	1
 11572  0A8C  00F4               	movwf	??___awdiv
 11573  0A8D  0874               	movf	??___awdiv,w
 11574  0A8E  07F5               	addwf	___awdiv@counter,f
 11575  0A8F  2A84               	goto	l2465
 11576  0A90                     l2467:	
 11577  0A90  3001               	movlw	1
 11578  0A91                     u2625:	
 11579  0A91  35F7               	lslf	___awdiv@quotient,f
 11580  0A92  0DF8               	rlf	___awdiv@quotient+1,f
 11581  0A93  0B89               	decfsz	9,f
 11582  0A94  2A91               	goto	u2625
 11583  0A95  0871               	movf	___awdiv@divisor+1,w
 11584  0A96  0273               	subwf	___awdiv@dividend+1,w
 11585  0A97  1D03               	skipz
 11586  0A98  2A9B               	goto	u2635
 11587  0A99  0870               	movf	___awdiv@divisor,w
 11588  0A9A  0272               	subwf	___awdiv@dividend,w
 11589  0A9B                     u2635:	
 11590  0A9B  1C03               	skipc
 11591  0A9C  2AA2               	goto	l2473
 11592  0A9D  0870               	movf	___awdiv@divisor,w
 11593  0A9E  02F2               	subwf	___awdiv@dividend,f
 11594  0A9F  0871               	movf	___awdiv@divisor+1,w
 11595  0AA0  3BF3               	subwfb	___awdiv@dividend+1,f
 11596  0AA1  1477               	bsf	___awdiv@quotient,0
 11597  0AA2                     l2473:	
 11598  0AA2  3001               	movlw	1
 11599  0AA3                     u2645:	
 11600  0AA3  36F1               	lsrf	___awdiv@divisor+1,f
 11601  0AA4  0CF0               	rrf	___awdiv@divisor,f
 11602  0AA5  0B89               	decfsz	9,f
 11603  0AA6  2AA3               	goto	u2645
 11604  0AA7  3001               	movlw	1
 11605  0AA8  02F5               	subwf	___awdiv@counter,f
 11606  0AA9  1D03               	btfss	3,2
 11607  0AAA  2A90               	goto	l2467
 11608  0AAB                     l2477:	
 11609  0AAB  0876               	movf	___awdiv@sign,w
 11610  0AAC  1903               	btfsc	3,2
 11611  0AAD  2AB3               	goto	l2481
 11612  0AAE  09F7               	comf	___awdiv@quotient,f
 11613  0AAF  09F8               	comf	___awdiv@quotient+1,f
 11614  0AB0  0AF7               	incf	___awdiv@quotient,f
 11615  0AB1  1903               	skipnz
 11616  0AB2  0AF8               	incf	___awdiv@quotient+1,f
 11617  0AB3                     l2481:	
 11618  0AB3  0878               	movf	___awdiv@quotient+1,w
 11619  0AB4  00F1               	movwf	?___awdiv+1
 11620  0AB5  0877               	movf	___awdiv@quotient,w
 11621  0AB6  00F0               	movwf	?___awdiv
 11622  0AB7  0008               	return
 11623  0AB8                     __end_of___awdiv:	
 11624                           
 11625                           	psect	text33
 11626  0909                     __ptext33:	
 11627 ;; *************** function _LCD_Write_Char *****************
 11628 ;; Defined at:
 11629 ;;		line 223 in file "lcd.c"
 11630 ;; Parameters:    Size  Location     Type
 11631 ;;  a               1    wreg     const unsigned char 
 11632 ;; Auto vars:     Size  Location     Type
 11633 ;;  a               1    4[COMMON] const unsigned char 
 11634 ;;  y               1    3[COMMON] unsigned char 
 11635 ;;  temp            1    2[COMMON] unsigned char 
 11636 ;; Return value:  Size  Location     Type
 11637 ;;                  1    wreg      void 
 11638 ;; Registers used:
 11639 ;;		wreg, status,2, status,0, pclath, cstack
 11640 ;; Tracked objects:
 11641 ;;		On entry : 0/0
 11642 ;;		On exit  : 0/0
 11643 ;;		Unchanged: 0/0
 11644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11646 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11648 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11649 ;;Total ram usage:        4 bytes
 11650 ;; Hardware stack levels used:    1
 11651 ;; Hardware stack levels required when called:    1
 11652 ;; This function calls:
 11653 ;;		_LCD_Port
 11654 ;; This function is called by:
 11655 ;;		_InitCustomChars
 11656 ;;		_LCD_Write_String
 11657 ;;		_LCD_Write_Int
 11658 ;;		_main
 11659 ;; This function uses a non-reentrant model
 11660 ;;
 11661                           
 11662                           
 11663                           ;psect for function _LCD_Write_Char
 11664  0909                     _LCD_Write_Char:	
 11665                           
 11666                           ;incstack = 0
 11667                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11668                           ;LCD_Write_Char@a stored from wreg
 11669  0909  00F4               	movwf	LCD_Write_Char@a
 11670                           
 11671                           ;lcd.c: 225: char temp,y;
 11672                           ;lcd.c: 226: temp = a&0x0F;
 11673  090A  0874               	movf	LCD_Write_Char@a,w
 11674  090B  390F               	andlw	15
 11675  090C  00F1               	movwf	??_LCD_Write_Char
 11676  090D  0871               	movf	??_LCD_Write_Char,w
 11677  090E  00F2               	movwf	LCD_Write_Char@temp
 11678                           
 11679                           ;lcd.c: 227: y = a&0xF0;
 11680  090F  0874               	movf	LCD_Write_Char@a,w
 11681  0910  39F0               	andlw	240
 11682  0911  00F1               	movwf	??_LCD_Write_Char
 11683  0912  0871               	movf	??_LCD_Write_Char,w
 11684  0913  00F3               	movwf	LCD_Write_Char@y
 11685                           
 11686                           ;lcd.c: 228: RA0 = 1;
 11687  0914  0020               	movlb	0	; select bank0
 11688  0915  140C               	bsf	12,0	;volatile
 11689                           
 11690                           ;lcd.c: 229: LCD_Port(y>>4);
 11691  0916  0873               	movf	LCD_Write_Char@y,w
 11692  0917  00F1               	movwf	??_LCD_Write_Char
 11693  0918  3004               	movlw	4
 11694  0919                     u2315:	
 11695  0919  36F1               	lsrf	??_LCD_Write_Char,f
 11696  091A  0B89               	decfsz	9,f
 11697  091B  2919               	goto	u2315
 11698  091C  0871               	movf	??_LCD_Write_Char,w
 11699  091D  3188  203E  3189   	fcall	_LCD_Port
 11700                           
 11701                           ;lcd.c: 230: RA2 = 1;
 11702  0920  0020               	movlb	0	; select bank0
 11703  0921  150C               	bsf	12,2	;volatile
 11704                           
 11705                           ;lcd.c: 231: RA2 = 0;
 11706  0922  110C               	bcf	12,2	;volatile
 11707                           
 11708                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11709  0923  306A               	movlw	106
 11710  0924  00F1               	movwf	??_LCD_Write_Char
 11711  0925                     u3677:	
 11712  0925  0BF1               	decfsz	??_LCD_Write_Char,f
 11713  0926  2925               	goto	u3677
 11714  0927  0000               	nop
 11715                           
 11716                           ;lcd.c: 233: LCD_Port(temp);
 11717  0928  0872               	movf	LCD_Write_Char@temp,w
 11718  0929  3188  203E  3189   	fcall	_LCD_Port
 11719                           
 11720                           ;lcd.c: 234: RA2 = 1;
 11721  092C  0020               	movlb	0	; select bank0
 11722  092D  150C               	bsf	12,2	;volatile
 11723                           
 11724                           ;lcd.c: 235: RA2 = 0;
 11725  092E  110C               	bcf	12,2	;volatile
 11726                           
 11727                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11728  092F  306A               	movlw	106
 11729  0930  00F1               	movwf	??_LCD_Write_Char
 11730  0931                     u3687:	
 11731  0931  0BF1               	decfsz	??_LCD_Write_Char,f
 11732  0932  2931               	goto	u3687
 11733  0933  0000               	nop
 11734  0934  0008               	return
 11735  0935                     __end_of_LCD_Write_Char:	
 11736                           
 11737                           	psect	text34
 11738  09A1                     __ptext34:	
 11739 ;; *************** function _LCD_Set_Cursor *****************
 11740 ;; Defined at:
 11741 ;;		line 82 in file "lcd.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;  x               1    wreg     unsigned char 
 11744 ;;  y               1    4[COMMON] unsigned char 
 11745 ;; Auto vars:     Size  Location     Type
 11746 ;;  x               1    7[COMMON] unsigned char 
 11747 ;;  temp            1   10[COMMON] unsigned char 
 11748 ;;  w               1    9[COMMON] unsigned char 
 11749 ;;  z               1    8[COMMON] unsigned char 
 11750 ;; Return value:  Size  Location     Type
 11751 ;;                  1    wreg      void 
 11752 ;; Registers used:
 11753 ;;		wreg, status,2, status,0, pclath, cstack
 11754 ;; Tracked objects:
 11755 ;;		On entry : 0/0
 11756 ;;		On exit  : 0/0
 11757 ;;		Unchanged: 0/0
 11758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11759 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11760 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11762 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11763 ;;Total ram usage:        7 bytes
 11764 ;; Hardware stack levels used:    1
 11765 ;; Hardware stack levels required when called:    2
 11766 ;; This function calls:
 11767 ;;		_LCD_Cmd
 11768 ;; This function is called by:
 11769 ;;		_main
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773                           
 11774                           ;psect for function _LCD_Set_Cursor
 11775  09A1                     _LCD_Set_Cursor:	
 11776                           
 11777                           ;incstack = 0
 11778                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11779                           ;LCD_Set_Cursor@x stored from wreg
 11780  09A1  00F7               	movwf	LCD_Set_Cursor@x
 11781                           
 11782                           ;lcd.c: 86: char temp,z,w;
 11783                           ;lcd.c: 88: if(y == 0)
 11784  09A2  0874               	movf	LCD_Set_Cursor@y,w
 11785  09A3  1D03               	btfss	3,2
 11786  09A4  29C1               	goto	l2603
 11787                           
 11788                           ;lcd.c: 89: {
 11789                           ;lcd.c: 90: temp = 0x80 + x;
 11790  09A5  0877               	movf	LCD_Set_Cursor@x,w
 11791  09A6  3E80               	addlw	128
 11792  09A7  00F5               	movwf	??_LCD_Set_Cursor
 11793  09A8  0875               	movf	??_LCD_Set_Cursor,w
 11794  09A9  00FA               	movwf	LCD_Set_Cursor@temp
 11795                           
 11796                           ;lcd.c: 91: z = temp>>4;
 11797  09AA  087A               	movf	LCD_Set_Cursor@temp,w
 11798  09AB  00F5               	movwf	??_LCD_Set_Cursor
 11799  09AC  3004               	movlw	4
 11800  09AD                     u2965:	
 11801  09AD  36F5               	lsrf	??_LCD_Set_Cursor,f
 11802  09AE  0B89               	decfsz	9,f
 11803  09AF  29AD               	goto	u2965
 11804  09B0  0875               	movf	??_LCD_Set_Cursor,w
 11805  09B1  00F6               	movwf	??_LCD_Set_Cursor+1
 11806  09B2  0876               	movf	??_LCD_Set_Cursor+1,w
 11807  09B3  00F8               	movwf	LCD_Set_Cursor@z
 11808                           
 11809                           ;lcd.c: 92: w = temp & 0x0F;
 11810  09B4  087A               	movf	LCD_Set_Cursor@temp,w
 11811  09B5  390F               	andlw	15
 11812  09B6  00F5               	movwf	??_LCD_Set_Cursor
 11813  09B7  0875               	movf	??_LCD_Set_Cursor,w
 11814  09B8  00F9               	movwf	LCD_Set_Cursor@w
 11815                           
 11816                           ;lcd.c: 93: LCD_Cmd(z);
 11817  09B9  0878               	movf	LCD_Set_Cursor@z,w
 11818  09BA  3197  27EC  3189   	fcall	_LCD_Cmd
 11819                           
 11820                           ;lcd.c: 94: LCD_Cmd(w);
 11821  09BD  0879               	movf	LCD_Set_Cursor@w,w
 11822  09BE  3197  27EC         	fcall	_LCD_Cmd
 11823                           
 11824                           ;lcd.c: 95: }
 11825  09C0  0008               	return
 11826  09C1                     l2603:	
 11827                           
 11828                           ;lcd.c: 97: else if(y == 1)
 11829  09C1  0374               	decf	LCD_Set_Cursor@y,w
 11830  09C2  1D03               	btfss	3,2
 11831  09C3  0008               	return
 11832                           
 11833                           ;lcd.c: 98: {
 11834                           ;lcd.c: 99: temp = 0xC0 + x;
 11835  09C4  0877               	movf	LCD_Set_Cursor@x,w
 11836  09C5  3EC0               	addlw	192
 11837  09C6  00F5               	movwf	??_LCD_Set_Cursor
 11838  09C7  0875               	movf	??_LCD_Set_Cursor,w
 11839  09C8  00FA               	movwf	LCD_Set_Cursor@temp
 11840                           
 11841                           ;lcd.c: 100: z = temp>>4;
 11842  09C9  087A               	movf	LCD_Set_Cursor@temp,w
 11843  09CA  00F5               	movwf	??_LCD_Set_Cursor
 11844  09CB  3004               	movlw	4
 11845  09CC                     u2985:	
 11846  09CC  36F5               	lsrf	??_LCD_Set_Cursor,f
 11847  09CD  0B89               	decfsz	9,f
 11848  09CE  29CC               	goto	u2985
 11849  09CF  0875               	movf	??_LCD_Set_Cursor,w
 11850  09D0  00F6               	movwf	??_LCD_Set_Cursor+1
 11851  09D1  0876               	movf	??_LCD_Set_Cursor+1,w
 11852  09D2  00F8               	movwf	LCD_Set_Cursor@z
 11853                           
 11854                           ;lcd.c: 101: w = temp & 0x0F;
 11855  09D3  087A               	movf	LCD_Set_Cursor@temp,w
 11856  09D4  390F               	andlw	15
 11857  09D5  00F5               	movwf	??_LCD_Set_Cursor
 11858  09D6  0875               	movf	??_LCD_Set_Cursor,w
 11859  09D7  00F9               	movwf	LCD_Set_Cursor@w
 11860                           
 11861                           ;lcd.c: 102: LCD_Cmd(z);
 11862  09D8  0878               	movf	LCD_Set_Cursor@z,w
 11863  09D9  3197  27EC  3189   	fcall	_LCD_Cmd
 11864                           
 11865                           ;lcd.c: 103: LCD_Cmd(w);
 11866  09DC  0879               	movf	LCD_Set_Cursor@w,w
 11867  09DD  3197  27EC         	fcall	_LCD_Cmd
 11868  09DF  0008               	return
 11869  09E0                     __end_of_LCD_Set_Cursor:	
 11870                           
 11871                           	psect	text35
 11872  17EC                     __ptext35:	
 11873 ;; *************** function _LCD_Cmd *****************
 11874 ;; Defined at:
 11875 ;;		line 65 in file "lcd.c"
 11876 ;; Parameters:    Size  Location     Type
 11877 ;;  a               1    wreg     unsigned char 
 11878 ;; Auto vars:     Size  Location     Type
 11879 ;;  a               1    3[COMMON] unsigned char 
 11880 ;; Return value:  Size  Location     Type
 11881 ;;                  1    wreg      void 
 11882 ;; Registers used:
 11883 ;;		wreg, status,2, status,0, pclath, cstack
 11884 ;; Tracked objects:
 11885 ;;		On entry : 0/0
 11886 ;;		On exit  : 0/0
 11887 ;;		Unchanged: 0/0
 11888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;Total ram usage:        3 bytes
 11894 ;; Hardware stack levels used:    1
 11895 ;; Hardware stack levels required when called:    1
 11896 ;; This function calls:
 11897 ;;		_LCD_Port
 11898 ;; This function is called by:
 11899 ;;		_InitCustomChars
 11900 ;;		_LCD_Clear
 11901 ;;		_LCD_Set_Cursor
 11902 ;;		_LCD_Init
 11903 ;; This function uses a non-reentrant model
 11904 ;;
 11905                           
 11906                           
 11907                           ;psect for function _LCD_Cmd
 11908  17EC                     _LCD_Cmd:	
 11909                           
 11910                           ;incstack = 0
 11911                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11912                           ;LCD_Cmd@a stored from wreg
 11913  17EC  00F3               	movwf	LCD_Cmd@a
 11914                           
 11915                           ;lcd.c: 67: RA0 = 0;
 11916  17ED  0020               	movlb	0	; select bank0
 11917  17EE  100C               	bcf	12,0	;volatile
 11918                           
 11919                           ;lcd.c: 68: LCD_Port(a);
 11920  17EF  0873               	movf	LCD_Cmd@a,w
 11921  17F0  3188  203E  3197   	fcall	_LCD_Port
 11922                           
 11923                           ;lcd.c: 69: RA2 = 1;
 11924  17F3  0020               	movlb	0	; select bank0
 11925  17F4  150C               	bsf	12,2	;volatile
 11926                           
 11927                           ;lcd.c: 70: RA2 = 0;
 11928  17F5  110C               	bcf	12,2	;volatile
 11929                           
 11930                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11931  17F6  302A               	movlw	42
 11932  17F7  00F2               	movwf	??_LCD_Cmd+1
 11933  17F8  308D               	movlw	141
 11934  17F9  00F1               	movwf	??_LCD_Cmd
 11935  17FA                     u3697:	
 11936  17FA  0BF1               	decfsz	??_LCD_Cmd,f
 11937  17FB  2FFA               	goto	u3697
 11938  17FC  0BF2               	decfsz	??_LCD_Cmd+1,f
 11939  17FD  2FFA               	goto	u3697
 11940  17FE  3200               	nop2
 11941  17FF  0008               	return
 11942  1800                     __end_of_LCD_Cmd:	
 11943                           
 11944                           	psect	text36
 11945  083E                     __ptext36:	
 11946 ;; *************** function _LCD_Port *****************
 11947 ;; Defined at:
 11948 ;;		line 41 in file "lcd.c"
 11949 ;; Parameters:    Size  Location     Type
 11950 ;;  a               1    wreg     unsigned char 
 11951 ;; Auto vars:     Size  Location     Type
 11952 ;;  a               1    0[COMMON] unsigned char 
 11953 ;; Return value:  Size  Location     Type
 11954 ;;                  1    wreg      void 
 11955 ;; Registers used:
 11956 ;;		wreg
 11957 ;; Tracked objects:
 11958 ;;		On entry : 0/0
 11959 ;;		On exit  : 0/0
 11960 ;;		Unchanged: 0/0
 11961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11966 ;;Total ram usage:        1 bytes
 11967 ;; Hardware stack levels used:    1
 11968 ;; This function calls:
 11969 ;;		Nothing
 11970 ;; This function is called by:
 11971 ;;		_LCD_Cmd
 11972 ;;		_LCD_Init
 11973 ;;		_LCD_Write_Char
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           
 11978                           ;psect for function _LCD_Port
 11979  083E                     _LCD_Port:	
 11980                           
 11981                           ;incstack = 0
 11982                           ; Regs used in _LCD_Port: [wreg]
 11983                           ;LCD_Port@a stored from wreg
 11984  083E  00F0               	movwf	LCD_Port@a
 11985                           
 11986                           ;lcd.c: 43: if(a & 1)
 11987  083F  1C70               	btfss	LCD_Port@a,0
 11988  0840  2844               	goto	l94
 11989                           
 11990                           ;lcd.c: 44: RA7 = 1;
 11991  0841  0020               	movlb	0	; select bank0
 11992  0842  178C               	bsf	12,7	;volatile
 11993  0843  2846               	goto	l1985
 11994  0844                     l94:	
 11995                           
 11996                           ;lcd.c: 45: else
 11997                           ;lcd.c: 46: RA7 = 0;
 11998  0844  0020               	movlb	0	; select bank0
 11999  0845  138C               	bcf	12,7	;volatile
 12000  0846                     l1985:	
 12001                           
 12002                           ;lcd.c: 48: if(a & 2)
 12003  0846  1CF0               	btfss	LCD_Port@a,1
 12004  0847  284A               	goto	l96
 12005                           
 12006                           ;lcd.c: 49: RA6 = 1;
 12007  0848  170C               	bsf	12,6	;volatile
 12008  0849  284B               	goto	l1989
 12009  084A                     l96:	
 12010                           
 12011                           ;lcd.c: 50: else
 12012                           ;lcd.c: 51: RA6 = 0;
 12013  084A  130C               	bcf	12,6	;volatile
 12014  084B                     l1989:	
 12015                           
 12016                           ;lcd.c: 53: if(a & 4)
 12017  084B  1D70               	btfss	LCD_Port@a,2
 12018  084C  284F               	goto	l98
 12019                           
 12020                           ;lcd.c: 54: RC0 = 1;
 12021  084D  140E               	bsf	14,0	;volatile
 12022  084E  2850               	goto	l1993
 12023  084F                     l98:	
 12024                           
 12025                           ;lcd.c: 55: else
 12026                           ;lcd.c: 56: RC0 = 0;
 12027  084F  100E               	bcf	14,0	;volatile
 12028  0850                     l1993:	
 12029                           
 12030                           ;lcd.c: 58: if(a & 8)
 12031  0850  1DF0               	btfss	LCD_Port@a,3
 12032  0851  2854               	goto	l100
 12033                           
 12034                           ;lcd.c: 59: RC1 = 1;
 12035  0852  148E               	bsf	14,1	;volatile
 12036  0853  0008               	return
 12037  0854                     l100:	
 12038                           
 12039                           ;lcd.c: 60: else
 12040                           ;lcd.c: 61: RC1 = 0;
 12041  0854  108E               	bcf	14,1	;volatile
 12042  0855  0008               	return
 12043  0856                     __end_of_LCD_Port:	
 12044  007E                     btemp	set	126	;btemp
 12045  007E                     wtemp	set	126
 12046  007E                     wtemp0	set	126
 12047  0080                     wtemp1	set	128
 12048  0082                     wtemp2	set	130
 12049  0084                     wtemp3	set	132
 12050  0086                     wtemp4	set	134
 12051  0088                     wtemp5	set	136
 12052  007F                     wtemp6	set	127
 12053  007E                     ttemp	set	126
 12054  007E                     ttemp0	set	126
 12055  0081                     ttemp1	set	129
 12056  0084                     ttemp2	set	132
 12057  0087                     ttemp3	set	135
 12058  007F                     ttemp4	set	127
 12059  007E                     ltemp	set	126
 12060  007E                     ltemp0	set	126
 12061  0082                     ltemp1	set	130
 12062  0086                     ltemp2	set	134
 12063  0080                     ltemp3	set	128


Data Sizes:
    Strings     13
    Constant    27
    Data        28
    BSS         201
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     40      78
    BANK2            80     80      80
    BANK3            80     14      45
    BANK4            80      0      80
    BANK5            80      0      80
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _PID_Calculate->___awtoft
    ___awtoft->___ftpack
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->___fttol
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    ___fttol->_tempCalc

Critical Paths under _main in BANK1

    _main->___fttol

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               133   133      0   40672
                                             77 BANK0      3     3      0
                                             10 BANK1     30    30      0
                                              0 BANK2     80    80      0
                                              0 BANK3     14    14      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___fttol
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   30184
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   15852
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7053
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2    1046
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     411
                                             73 BANK0      4     0      4
                                              0 BANK1     10    10      0
                      _PID_Calculate (ARG)
                           _tempCalc (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    2891
                                              0 BANK0      6     2      4
                           ___awtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     784
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1957
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     374
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2335
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     645
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___awtoft
       ___ftpack
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   ___fttol
     _PID_Calculate (ARG)
       ___awtoft
         ___ftpack
       ___wmul
     _tempCalc (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _frexp
   _readAnalog
     _ADCRead
     ___aldiv
     ___bmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     28      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      E      2D      11       56.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      50      15      100.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1C9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1C9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Mar 31 14:46:14 2018

                 ___bmul@product 0072          __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000  
                             l55 17E5                               l94 0844                               l96 084A  
                             l98 084F                               _Kd 00E8                               _Ki 00EA  
                             _Kp 00EC                     ___awdiv@sign 0076              ___wmul@multiplicand 0072  
                   ___ftadd@exp1 004C                     ___ftadd@exp2 004B                      __CFG_LVP$ON 0000  
                   ___ftadd@sign 004A                              l100 0854                              l182 01DC  
                            l502 0B8D                              l184 0223                              l354 0750  
                            l346 067D                              l348 06A4                              l358 07A4  
                            l615 0B5D                              l447 0892                              l616 0B65  
                            l608 0B4A                              l639 00E1                              l699 0D08  
                            _GIE 005F                              _RA0 0060                              _RB0 0068  
                            _RA2 0062                              _RB1 0069                              _RC0 0070  
                            _RC1 0071                              _RA6 0066                              _RA7 0067  
                   __CFG_CPD$OFF 0000                              _log 0DD3                  __end_of_ADCRead 17EC  
                   ___awmod@sign 0076                  _TMR2_Initialize 17D0                     __CFG_BORV$LO 0000  
                            wreg 0009                      main@analogs 01BC                  __end_of_LCD_Cmd 1800  
                   __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A                   _LCD_Set_Cursor 09A1  
                   ___ftdiv@sign 003F                             l2021 0071                             l2017 006A  
                           l2121 0F0F                             l2105 0EEB                             l2201 0019  
                           l2051 00C0                             l2027 0080                             l2045 00AD  
                           l2117 0F07                             l2109 0EF3                             l2063 00F3  
                           l2047 00B7                             l2039 009A                             l2057 00D3  
                           l2049 00BC                             l3009 07C0                             l2411 0B9E  
                           l2067 0105                             l2059 00DD                             l2219 0B11  
                           l2261 0901                             l2421 0BBC                             l2077 0120  
                           l2181 0992                             l2093 0EB0                             l2511 0A51  
                           l2255 08F0                             l2087 0E9A                             l2505 0A39  
                           l2169 08CD                             l2433 0BE7                             l2177 097C  
                           l2603 09C1                             l2507 0A45                             l2515 0A5A  
                           l2419 0BAE                             l2371 0DF2                             l2437 0BF5  
                           l2429 0BDC                             l2455 0A7C                             l2519 0A62  
                           l2703 01F6                             l2535 0D57                             l2481 0AB3  
                           l2473 0AA2                             l2465 0A84                             l2449 0A71  
                           l2633 0F58                             l2713 023D                             l2705 01F9  
                           l2393 0809                             l2529 0D41                             l2377 0E05  
                           l2467 0A90                             l2651 0F95                             l2643 0F5F  
                           l2619 0858                             l2477 0AAB                             l2493 0A2C  
                           l2661 0FB3                             l2653 0F9E                             l2645 0F8C  
                           l2389 0803                             l2557 0DB1                             l2549 0D98  
                           l2901 061E                             l2663 0FDF                             l2655 0FAF  
                           l2911 0635                             l2497 0A33                             l2649 0F90  
                           l1961 0B36                             l1953 0B20                             l2681 0171  
                           l2569 08AD                             l2905 0624                             l2667 0FEC  
                           l2683 0174                             l2587 0454                             l2923 0673  
                           l2915 063A                             l1957 0B27                             l2933 0695  
                           l1967 0B4F                             l1959 0B31                             l2687 017E  
                           l2767 0CA4                             l2943 06AC                             l2919 066B  
                           l2927 067F                             l1993 0850                             l1985 0846  
                           l1969 0B57                             l2793 0CFE                             l2785 0CE1  
                           l2961 0726                             l2937 06A6                             l2795 0D0C  
                           l2787 0CF0                             l2859 04F1                             l1989 084B  
                           l2973 075B                             l2949 06CF                             l1999 088C  
                           l2799 0D1A                             l2983 077A                             l2995 07AF  
                           ?_log 0057                             l2999 07B5                             STR_1 1023  
                           STR_2 101B                             u3000 0F42                             u2115 00C1  
                           _LATA 0016                             _LATB 0017                             u2055 009B  
                           u2215 0EBC                             _LATC 0018                             u3105 017A  
                           u2145 00D4                             u2225 0ECC                             u2410 0964  
                           u2315 0919                             u3115 01B2                             u3125 01D5  
                           u2085 00AE                             u2245 0EF4                             u3135 01EC  
                           u3215 0CE2                             u2255 0EFA                             u3065 0FCD  
                           u3145 021C                             u2505 0BB1                             _T2PR 028D  
                           u3155 0233                             u2605 0A87                             u1805 0B45  
                           u3165 0821                             u3245 0CFF                             u2525 0BBD  
                           u2285 0F10                             u3405 071F                             u3325 0650  
                           u3270 04A8                             u3095 0169                             u2535 0BD1  
                           u2295 0F16                             u3335 0669                             u2625 0A91  
                           u2705 0A3C                             u1825 0B52                             u3185 0CB1  
                           u2545 0BDD                             u2635 0A9B                             u3355 0690  
                           u2645 0AA3                             u2725 0A4B                             u2805 0D99  
                           u3445 0773                             u3365 069F                             u3517 04E7  
                           u2735 0A52                             u1935 0893                             u3607 0C2C  
                           u2815 0DA8                             u3527 0749                             u1865 0B6C  
                           u1785 0B2C                             u1945 0898                             u3617 0C36  
                           u2905 0403                             u2825 0DB2                             u3537 079D  
                           u3627 0C44                             u3547 09FB                             u2915 042B  
                           u3637 0C52                             u3557 0A0B                             u2925 0444  
                           u3647 0C62                             u3567 0A1A                             u2855 0377  
                           u3657 0C71                             u3577 0C09                             u2945 0460  
                           u2865 038C                             u2785 0D69                             u3667 0C80  
                           u3587 0C17                             u2875 03BF                             u2795 0D79  
                           u2965 09AD                             u3677 0925                             u3597 0C22  
                           u2885 03D4                             u3687 0931                             u2895 03EE  
                           u3697 17FA                             u2985 09CC              tempCalc@analogValue 005D  
                           _WPUA 0F39                             _WPUB 0F44                             _WPUC 0F4F  
                           _WPUE 0F65                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
              ?_LCD_Write_String 0075                             _main 047C                     ___ftpack@arg 0070  
             __size_of_LCD_Clear 0008                     ___ftpack@exp 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           log@x 0057                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 0002               ??_LCD_Write_String 0077                             ttemp 007E  
                           wtemp 007E                    __CFG_CSWEN$ON 0000                ___bmul@multiplier 0073  
                  __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E                    _LCD_Write_Int 0F37  
                   ___ftmul@sign 002F                     ___fttol@exp1 00A9                            ??_log 005A  
                   ___fttol@lval 00A5                 __end_of_LCD_Init 0C85                 __end_of_LCD_Port 0856  
 __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 17C5                  __end_of___aldiv 0BFE  
                          _ADACQ 009D                            _ADCAP 009B                            _ADACT 0099  
                          ?_main 0070                            _ADCLK 0098                            _ADPCH 009E  
                          _ADREF 009A                  __end_of___awdiv 0AB8                            _ADPRE 009C  
                __end_of___ftadd 0138                    __CFG_WDTE$OFF 0000                  __end_of___awmod 0A67  
                          _ADRPT 010D                  __end_of___ftdiv 0DD3                  __end_of___ftmul 0F37  
                ___awdiv@divisor 0070                  __end_of___ftsub 08C3                  __end_of___fttol 0D2A  
                          _T2CON 028E                            _LATC2 00C2                            _T2HLT 028F  
                          _T2TMR 028C                            _T2RST 0291                  ___awdiv@counter 0075  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013           __end_of_LCD_Set_Cursor 09E0                    ___awtoft@sign 007D  
                          _frexp 0007                            _errno 00D4                            _error 00D6  
                  ___ftpack@sign 0074                            main@j 01C0                            main@x 006F  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F                 InitCustomChars@i 0076  
                 ?_LCD_Write_Int 0079                   _LCD_Write_Char 0909                  __initialization 07C6  
                    log@exponent 005B                     __end_of_main 07C6                readAnalog@channel 0026  
        __end_of_TMR2_Initialize 17DE                        ??_ADCRead 0073                    main@tPadCount 00B8  
                         ??_main 00AA                    ___fttol@sign1 00A4                __end_of_LCD_Clear 17BC  
                      ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                         ?_frexp 0070                           _ADLTHH 010F                           _ADLTHL 010E  
                         _ADRESH 008D                           _ADRESL 008C                           _ADSTAT 0097  
                         _ADUTHH 0111                 ___awdiv@dividend 0072                           _ADUTHL 0110  
               __end_of___awtoft 08E3                           _ANSELA 0F38                           _ANSELB 0F43  
                         _ANSELC 0F4E                 __end_of___ftpack 0B7C                           _RC3PPS 0F23  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                           _OSCFRQ 0893  
                  main@menuDelay 00BF           __end_of_LCD_Write_Char 0935                   __CFG_PWRTE$OFF 0000  
                         _Result 00D0                     _CCPTMRS1bits 021F                           ___bmul 0801  
                         ___ftge 0966           LCD_Write_Int@numPlaces 007C                        ??___aldiv 0078  
                         ___wmul 088A                        ??___awdiv 0074                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                   _PWM_Initialize 17C5  
                      ??___ftdiv 0036                        ??___ftmul 0026                        ??___ftsub 007E  
                      ??___fttol 00A0           main@currentTemperature 00C5                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075                           _totals 00C8  
          ___ftmul@f3_as_product 002B                 __end_of_tempCalc 0361                  _ADCC_Initialize 0870  
               LCD_Write_Int@str 0025                  _InitCustomChars 08E3                  LCD_Set_Cursor@w 0079  
                LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078  
                  _pidIntegrated 00DE         readAnalog@analog_channel 0079                _SYSTEM_Initialize 09E0  
               __end_oflog@coeff 101B          __end_of__initialization 07FD                        ?_LCD_Init 0070  
                      ?_LCD_Port 0070                       ___ftadd@f1 0040                       ___ftadd@f2 0043  
                _derivativeValue 00D2                       ___ftge@ff1 0070                       ___ftge@ff2 0073  
                ??_LCD_Write_Int 0020               ?_SYSTEM_Initialize 0070                     eval_poly@res 0054  
                     ___ftdiv@f1 0033                       ___ftdiv@f2 0030                       ___ftdiv@f3 003B  
                ?_LCD_Write_Char 0070                    LCD_Init@style 0077                       ___awtoft@c 0078  
            ___bmul@multiplicand 0070                       ___ftmul@f1 0020                       ___ftmul@f2 0023  
         __end_of_PWM_Initialize 17D0                       ___ftsub@f1 0050                       ___ftsub@f2 004D  
                     ___fttol@f1 0069                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 17AE                     __pidataBANK3 0828              ??_SYSTEM_Initialize 0078  
                  __end_of_frexp 0042                 ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016  
                 main@delayCount 01C3                          ??_frexp 0074        __end_of_SYSTEM_Initialize 0A22  
                     __pbssBANK1 00C8                       __pbssBANK3 01C4                       __pbssBANK4 0220  
                     __pbssBANK5 02A0               __size_of_eval_poly 0060                       ??_LCD_Init 0074  
                     ??_LCD_Port 0070           __size_of_PID_Calculate 0114                  ?_PWM_Initialize 0070  
                     __pmaintext 047C                          ?___bmul 0070                          ?___ftge 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 088A  
                        _ADCRead 17DE        __size_of_LCD_Write_String 001A                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
       __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000          __end_of_InitCustomChars 0909  
                        _LCD_Cmd 17EC                   main@holdOutput 00BB                 main@lidOpenCount 00BC  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM7DCH 0391                          _PWM7DCL 0390                          _PWM7CON 0392  
                        _PPSLOCK 0E8F                   main@dutyCycle6 01BA                   main@dutyCycle7 00BD  
          PID_Calculate@setpoint 0020                        ?_tempCalc 005D                       _readAnalog 0361  
                        ___aldiv 0B7C                  __size_of___bmul 0011                          ___cgram 01A0  
                __size_of___ftge 003B                          ___awdiv 0A67                          ___ftadd 0042  
                        ___awmod 0A22                          ___ftdiv 0D2A                  __size_of___wmul 001B  
                        ___ftmul 0E83                          ___ftsub 08A5                          ___fttol 0C85  
                     _errorValue 00D8                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0B18                 ??_LCD_Set_Cursor 0075                          __ptext1 024C  
                        __ptext2 0DD3                          __ptext3 0007                          __ptext4 0AB8  
                        __ptext5 0E83                          __ptext6 0966                          __ptext7 08A5  
                        __ptext8 0042                          __ptext9 0D2A                    _PID_Calculate 0138  
                 main@resetDelay 00B7            _OSCILLATOR_Initialize 17BC                        _T2CONbits 028E  
                   __size_of_log 00B0                 ___awmod@dividend 0072                   ADCRead@channel 0073  
               ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070                          _samples 0220  
                      _LCD_Clear 17B4       __size_of_SYSTEM_Initialize 0042                          clrloop0 17A3  
                        main@set 01C1             end_of_initialization 07FD                          init_ram 17A8  
                        initloop 17A9                       ??_tempCalc 007E                 ___aldiv@quotient 0022  
                 main@startDelay 00B6                LCD_Write_Int@sign 007D                       main@F13660 01C9  
                     main@F13668 02A0                     __pstringtext 1000                 ?_ADCC_Initialize 0070  
          __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0020                 ?_InitCustomChars 0070  
                     main@C_or_F 00B5                       ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000  
                     main@bCount 006D                LCD_Write_String@a 0075                LCD_Write_String@i 0078  
               ??_LCD_Write_Char 0071                       main@choice 00B4                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 0087                __size_of_LCD_Port 0018                       main@output 00B9  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                   __end_of___bmul 0812  
                 __end_of___ftge 09A1                   __end_of___wmul 08A5                 _LCD_Write_String 0856  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07C6                       eval_poly@d 0050  
                     eval_poly@n 0052                       eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0031  
                    __end_of_log 0E83                       frexp@value 0070                 ??_PWM_Initialize 0070  
       LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 1000                 __CFG_LPBOREN$OFF 0000  
                       ??___bmul 0071                         ??___ftge 0076                tempCalc@steinhart 0066  
                       ??___wmul 0074                     _pidMaxOutput 01B4                      __pdataBANK1 00E8  
                    __pdataBANK3 01A0                  ??_PID_Calculate 0024       __end_of_PWM7_LoadDutyValue 0828  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
   PWM7_LoadDutyValue@dutyCycle7 0070                     _pidMinOutput 00E0                         ?_LCD_Cmd 0070  
              __size_of___awtoft 0020                __size_of___ftpack 0064                         LCD_Cmd@a 0073  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
                  __pcstackBANK2 0120                    __pcstackBANK3 01B6         __size_of_TMR2_Initialize 000E  
                    ??_LCD_Clear 0074              __size_of_readAnalog 011B                     _pidPrevError 00E2  
         _PIN_MANAGER_Initialize 0935                         ?___aldiv 0070                __size_of_tempCalc 0115  
                       ?___awdiv 0070                         ?___ftadd 0040                         ?___awmod 0070  
                       ?___ftdiv 0030                         ?___ftmul 0020                         ?___ftsub 004D  
                       ?___fttol 0069              main@lastTemperature 00C1                        _eval_poly 0AB8  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0BFE                   ___wmul@product 0074  
                       _LCD_Port 083E                        clear_ram0 17A2                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 000E                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0014  
       __end_of_LCD_Write_String 0870                ??_TMR2_Initialize 0070                  readAnalog@value 007B  
                      frexp@eptr 0073                     ??_readAnalog 0028                     _tempCalc$986 0063  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002C                   LCD_Write_Int@j 002A  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 00A5                         ___awtoft 08C3  
                       ___ftpack 0B18         __size_of_ADCC_Initialize 001A                         _channels 01B0  
              PID_Calculate@temp 0022                         __ptext10 0361                         __ptext11 0801  
                       __ptext20 0BFE                         __ptext12 0B7C                         __ptext21 17B4  
                       __ptext13 17DE                         __ptext30 0F37                         __ptext22 08E3  
                       __ptext14 0C85                         __ptext31 0A22                         __ptext23 0870  
                       __ptext15 09E0                         __ptext32 0A67                         __ptext24 0812  
                       __ptext16 17D0                         __ptext33 0909                         __ptext25 0138  
                       __ptext17 17C5                         __ptext34 09A1                         __ptext26 088A  
                       __ptext18 0935                         __ptext35 17EC                         __ptext27 08C3  
                       __ptext19 17BC                         __ptext36 083E                         __ptext28 0B18  
                       __ptext29 0856               __end_of_readAnalog 047C          __size_of_LCD_Set_Cursor 003F  
                   _signPositive 00E6                        tempCalc@R 0060         __size_of_InitCustomChars 0026  
                       _lastSign 00DA              LCD_Write_Int@F13690 01C4                         _pidCount 00DC  
                  __size_of_main 034A             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 024C  
                       main@loop 00C0      PIN_MANAGER_Initialize@state 0070                         log@coeff 1000  
                    ??_eval_poly 007E                      _sampleIndex 00E4               _PWM7_LoadDutyValue 0812  
             LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070              ?_PWM7_LoadDutyValue 0070  
              main@outputSamples 0120                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002C             main@pidPeriodCounter 00C3               LCD_Set_Cursor@temp 007A  
             LCD_Write_Int@value 0079            __end_of_PID_Calculate 024C             ??_PWM7_LoadDutyValue 0072  
                   ___aldiv@sign 0021           __size_of_LCD_Write_Int 00C9                  main@outputIndex 00C7  
 __end_of_PIN_MANAGER_Initialize 0966                ??_ADCC_Initialize 0070                  main@outputTotal 01B6  
              ??_InitCustomChars 0075  
