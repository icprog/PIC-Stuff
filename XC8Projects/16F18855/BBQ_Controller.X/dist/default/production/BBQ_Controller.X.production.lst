

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Apr 04 16:24:40 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x620,48
    57                           	dabs	1,0x5A0,80
    58                           	dabs	1,0x550,32
    59                           	dabs	1,0x2350,0,_samples
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  001C                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0110                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018E                     	;# 
   155  018F                     	;# 
   156  0190                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0198                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  020E                     	;# 
   169  020F                     	;# 
   170  020F                     	;# 
   171  0210                     	;# 
   172  0210                     	;# 
   173  0211                     	;# 
   174  0211                     	;# 
   175  0212                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0216                     	;# 
   181  0216                     	;# 
   182  0217                     	;# 
   183  0217                     	;# 
   184  0218                     	;# 
   185  0219                     	;# 
   186  021A                     	;# 
   187  021B                     	;# 
   188  021B                     	;# 
   189  021C                     	;# 
   190  021C                     	;# 
   191  021D                     	;# 
   192  021D                     	;# 
   193  021E                     	;# 
   194  021F                     	;# 
   195  028C                     	;# 
   196  028C                     	;# 
   197  028D                     	;# 
   198  028D                     	;# 
   199  028E                     	;# 
   200  028F                     	;# 
   201  0290                     	;# 
   202  0290                     	;# 
   203  0291                     	;# 
   204  0292                     	;# 
   205  0292                     	;# 
   206  0293                     	;# 
   207  0293                     	;# 
   208  0294                     	;# 
   209  0295                     	;# 
   210  0296                     	;# 
   211  0296                     	;# 
   212  0297                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  0299                     	;# 
   217  029A                     	;# 
   218  029B                     	;# 
   219  029C                     	;# 
   220  029C                     	;# 
   221  029D                     	;# 
   222  030C                     	;# 
   223  030C                     	;# 
   224  030D                     	;# 
   225  030E                     	;# 
   226  030F                     	;# 
   227  0310                     	;# 
   228  0310                     	;# 
   229  0311                     	;# 
   230  0312                     	;# 
   231  0313                     	;# 
   232  0314                     	;# 
   233  0314                     	;# 
   234  0315                     	;# 
   235  0316                     	;# 
   236  0317                     	;# 
   237  0318                     	;# 
   238  0318                     	;# 
   239  0319                     	;# 
   240  031A                     	;# 
   241  031B                     	;# 
   242  031C                     	;# 
   243  031C                     	;# 
   244  031D                     	;# 
   245  031E                     	;# 
   246  031F                     	;# 
   247  038C                     	;# 
   248  038D                     	;# 
   249  038E                     	;# 
   250  0390                     	;# 
   251  0391                     	;# 
   252  0392                     	;# 
   253  040C                     	;# 
   254  040D                     	;# 
   255  040E                     	;# 
   256  040F                     	;# 
   257  0410                     	;# 
   258  0411                     	;# 
   259  0416                     	;# 
   260  0416                     	;# 
   261  0417                     	;# 
   262  0418                     	;# 
   263  0418                     	;# 
   264  0419                     	;# 
   265  041A                     	;# 
   266  041A                     	;# 
   267  041B                     	;# 
   268  041C                     	;# 
   269  041C                     	;# 
   270  041D                     	;# 
   271  041E                     	;# 
   272  041F                     	;# 
   273  048C                     	;# 
   274  048C                     	;# 
   275  048D                     	;# 
   276  048E                     	;# 
   277  048F                     	;# 
   278  048F                     	;# 
   279  0490                     	;# 
   280  0491                     	;# 
   281  0492                     	;# 
   282  0492                     	;# 
   283  0493                     	;# 
   284  0494                     	;# 
   285  0495                     	;# 
   286  0495                     	;# 
   287  0496                     	;# 
   288  0497                     	;# 
   289  0498                     	;# 
   290  0499                     	;# 
   291  049A                     	;# 
   292  049B                     	;# 
   293  049C                     	;# 
   294  049D                     	;# 
   295  050C                     	;# 
   296  050C                     	;# 
   297  050D                     	;# 
   298  050E                     	;# 
   299  050F                     	;# 
   300  050F                     	;# 
   301  0510                     	;# 
   302  0511                     	;# 
   303  0512                     	;# 
   304  0512                     	;# 
   305  0513                     	;# 
   306  0514                     	;# 
   307  0515                     	;# 
   308  0515                     	;# 
   309  0516                     	;# 
   310  0517                     	;# 
   311  0518                     	;# 
   312  0519                     	;# 
   313  051A                     	;# 
   314  051B                     	;# 
   315  051C                     	;# 
   316  051D                     	;# 
   317  058C                     	;# 
   318  058C                     	;# 
   319  058D                     	;# 
   320  058E                     	;# 
   321  058F                     	;# 
   322  058F                     	;# 
   323  0590                     	;# 
   324  0591                     	;# 
   325  0592                     	;# 
   326  0593                     	;# 
   327  060C                     	;# 
   328  060D                     	;# 
   329  060E                     	;# 
   330  060F                     	;# 
   331  0610                     	;# 
   332  0611                     	;# 
   333  0612                     	;# 
   334  0613                     	;# 
   335  0614                     	;# 
   336  0616                     	;# 
   337  0617                     	;# 
   338  0618                     	;# 
   339  0619                     	;# 
   340  061A                     	;# 
   341  061B                     	;# 
   342  061C                     	;# 
   343  061D                     	;# 
   344  061E                     	;# 
   345  068C                     	;# 
   346  068D                     	;# 
   347  068E                     	;# 
   348  068F                     	;# 
   349  0690                     	;# 
   350  0691                     	;# 
   351  0692                     	;# 
   352  0693                     	;# 
   353  0694                     	;# 
   354  070C                     	;# 
   355  070D                     	;# 
   356  070E                     	;# 
   357  070F                     	;# 
   358  0710                     	;# 
   359  0711                     	;# 
   360  0712                     	;# 
   361  0713                     	;# 
   362  0714                     	;# 
   363  0716                     	;# 
   364  0717                     	;# 
   365  0718                     	;# 
   366  0719                     	;# 
   367  071A                     	;# 
   368  071B                     	;# 
   369  071C                     	;# 
   370  071D                     	;# 
   371  071E                     	;# 
   372  0796                     	;# 
   373  0797                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  079A                     	;# 
   377  079B                     	;# 
   378  080C                     	;# 
   379  080D                     	;# 
   380  080E                     	;# 
   381  080F                     	;# 
   382  0810                     	;# 
   383  0811                     	;# 
   384  0812                     	;# 
   385  0813                     	;# 
   386  0814                     	;# 
   387  081A                     	;# 
   388  081B                     	;# 
   389  081C                     	;# 
   390  081D                     	;# 
   391  081E                     	;# 
   392  081F                     	;# 
   393  088C                     	;# 
   394  088D                     	;# 
   395  088E                     	;# 
   396  088F                     	;# 
   397  0890                     	;# 
   398  0891                     	;# 
   399  0892                     	;# 
   400  0893                     	;# 
   401  0895                     	;# 
   402  0896                     	;# 
   403  0897                     	;# 
   404  0898                     	;# 
   405  0899                     	;# 
   406  089A                     	;# 
   407  089B                     	;# 
   408  090C                     	;# 
   409  090E                     	;# 
   410  090F                     	;# 
   411  091F                     	;# 
   412  091F                     	;# 
   413  098F                     	;# 
   414  098F                     	;# 
   415  0990                     	;# 
   416  0991                     	;# 
   417  0992                     	;# 
   418  0993                     	;# 
   419  0994                     	;# 
   420  0995                     	;# 
   421  0996                     	;# 
   422  0997                     	;# 
   423  0E0F                     	;# 
   424  0E10                     	;# 
   425  0E11                     	;# 
   426  0E12                     	;# 
   427  0E13                     	;# 
   428  0E14                     	;# 
   429  0E15                     	;# 
   430  0E16                     	;# 
   431  0E17                     	;# 
   432  0E18                     	;# 
   433  0E19                     	;# 
   434  0E1A                     	;# 
   435  0E1B                     	;# 
   436  0E1C                     	;# 
   437  0E1D                     	;# 
   438  0E1E                     	;# 
   439  0E1F                     	;# 
   440  0E20                     	;# 
   441  0E21                     	;# 
   442  0E22                     	;# 
   443  0E23                     	;# 
   444  0E24                     	;# 
   445  0E25                     	;# 
   446  0E26                     	;# 
   447  0E27                     	;# 
   448  0E28                     	;# 
   449  0E29                     	;# 
   450  0E2A                     	;# 
   451  0E2B                     	;# 
   452  0E2C                     	;# 
   453  0E2D                     	;# 
   454  0E2E                     	;# 
   455  0E2F                     	;# 
   456  0E30                     	;# 
   457  0E31                     	;# 
   458  0E32                     	;# 
   459  0E33                     	;# 
   460  0E34                     	;# 
   461  0E35                     	;# 
   462  0E36                     	;# 
   463  0E37                     	;# 
   464  0E8F                     	;# 
   465  0E90                     	;# 
   466  0E91                     	;# 
   467  0E92                     	;# 
   468  0E93                     	;# 
   469  0E94                     	;# 
   470  0E95                     	;# 
   471  0E96                     	;# 
   472  0E97                     	;# 
   473  0E9C                     	;# 
   474  0E9D                     	;# 
   475  0E9E                     	;# 
   476  0EA1                     	;# 
   477  0EA2                     	;# 
   478  0EA3                     	;# 
   479  0EA4                     	;# 
   480  0EA5                     	;# 
   481  0EA9                     	;# 
   482  0EAA                     	;# 
   483  0EAB                     	;# 
   484  0EAC                     	;# 
   485  0EB1                     	;# 
   486  0EB2                     	;# 
   487  0EB3                     	;# 
   488  0EB8                     	;# 
   489  0EB9                     	;# 
   490  0EBA                     	;# 
   491  0EBB                     	;# 
   492  0EBC                     	;# 
   493  0EBD                     	;# 
   494  0EBE                     	;# 
   495  0EC3                     	;# 
   496  0EC5                     	;# 
   497  0EC6                     	;# 
   498  0EC7                     	;# 
   499  0EC8                     	;# 
   500  0EC9                     	;# 
   501  0ECA                     	;# 
   502  0ECB                     	;# 
   503  0ECC                     	;# 
   504  0F10                     	;# 
   505  0F11                     	;# 
   506  0F12                     	;# 
   507  0F13                     	;# 
   508  0F14                     	;# 
   509  0F15                     	;# 
   510  0F16                     	;# 
   511  0F17                     	;# 
   512  0F18                     	;# 
   513  0F19                     	;# 
   514  0F1A                     	;# 
   515  0F1B                     	;# 
   516  0F1C                     	;# 
   517  0F1D                     	;# 
   518  0F1E                     	;# 
   519  0F1F                     	;# 
   520  0F20                     	;# 
   521  0F21                     	;# 
   522  0F22                     	;# 
   523  0F23                     	;# 
   524  0F24                     	;# 
   525  0F25                     	;# 
   526  0F26                     	;# 
   527  0F27                     	;# 
   528  0F38                     	;# 
   529  0F39                     	;# 
   530  0F3A                     	;# 
   531  0F3B                     	;# 
   532  0F3C                     	;# 
   533  0F3D                     	;# 
   534  0F3E                     	;# 
   535  0F3F                     	;# 
   536  0F40                     	;# 
   537  0F41                     	;# 
   538  0F43                     	;# 
   539  0F44                     	;# 
   540  0F45                     	;# 
   541  0F46                     	;# 
   542  0F47                     	;# 
   543  0F48                     	;# 
   544  0F49                     	;# 
   545  0F4A                     	;# 
   546  0F4B                     	;# 
   547  0F4C                     	;# 
   548  0F4E                     	;# 
   549  0F4F                     	;# 
   550  0F50                     	;# 
   551  0F51                     	;# 
   552  0F52                     	;# 
   553  0F53                     	;# 
   554  0F54                     	;# 
   555  0F55                     	;# 
   556  0F56                     	;# 
   557  0F57                     	;# 
   558  0F65                     	;# 
   559  0F68                     	;# 
   560  0F69                     	;# 
   561  0F6A                     	;# 
   562  0F6B                     	;# 
   563  0FE4                     	;# 
   564  0FE5                     	;# 
   565  0FE6                     	;# 
   566  0FE7                     	;# 
   567  0FE8                     	;# 
   568  0FE9                     	;# 
   569  0FEA                     	;# 
   570  0FEB                     	;# 
   571  0FED                     	;# 
   572  0FEE                     	;# 
   573  0FEF                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  0008                     	;# 
   583  0009                     	;# 
   584  000A                     	;# 
   585  000B                     	;# 
   586  000C                     	;# 
   587  000D                     	;# 
   588  000E                     	;# 
   589  0010                     	;# 
   590  0011                     	;# 
   591  0012                     	;# 
   592  0013                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  001C                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001D                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  008C                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  008E                     	;# 
   607  008F                     	;# 
   608  0090                     	;# 
   609  0090                     	;# 
   610  0091                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0096                     	;# 
   615  0097                     	;# 
   616  0098                     	;# 
   617  0099                     	;# 
   618  009A                     	;# 
   619  009B                     	;# 
   620  009C                     	;# 
   621  009D                     	;# 
   622  009E                     	;# 
   623  010C                     	;# 
   624  010D                     	;# 
   625  010E                     	;# 
   626  010E                     	;# 
   627  010F                     	;# 
   628  0110                     	;# 
   629  0110                     	;# 
   630  0111                     	;# 
   631  0112                     	;# 
   632  0112                     	;# 
   633  0113                     	;# 
   634  0114                     	;# 
   635  0114                     	;# 
   636  0115                     	;# 
   637  0116                     	;# 
   638  0116                     	;# 
   639  0117                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  0119                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011A                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011C                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011E                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  018C                     	;# 
   666  018D                     	;# 
   667  018E                     	;# 
   668  018F                     	;# 
   669  0190                     	;# 
   670  0191                     	;# 
   671  0192                     	;# 
   672  0196                     	;# 
   673  0197                     	;# 
   674  0198                     	;# 
   675  0199                     	;# 
   676  019A                     	;# 
   677  019B                     	;# 
   678  019C                     	;# 
   679  020C                     	;# 
   680  020D                     	;# 
   681  020E                     	;# 
   682  020F                     	;# 
   683  020F                     	;# 
   684  0210                     	;# 
   685  0210                     	;# 
   686  0211                     	;# 
   687  0211                     	;# 
   688  0212                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0216                     	;# 
   694  0216                     	;# 
   695  0217                     	;# 
   696  0217                     	;# 
   697  0218                     	;# 
   698  0219                     	;# 
   699  021A                     	;# 
   700  021B                     	;# 
   701  021B                     	;# 
   702  021C                     	;# 
   703  021C                     	;# 
   704  021D                     	;# 
   705  021D                     	;# 
   706  021E                     	;# 
   707  021F                     	;# 
   708  028C                     	;# 
   709  028C                     	;# 
   710  028D                     	;# 
   711  028D                     	;# 
   712  028E                     	;# 
   713  028F                     	;# 
   714  0290                     	;# 
   715  0290                     	;# 
   716  0291                     	;# 
   717  0292                     	;# 
   718  0292                     	;# 
   719  0293                     	;# 
   720  0293                     	;# 
   721  0294                     	;# 
   722  0295                     	;# 
   723  0296                     	;# 
   724  0296                     	;# 
   725  0297                     	;# 
   726  0298                     	;# 
   727  0298                     	;# 
   728  0299                     	;# 
   729  0299                     	;# 
   730  029A                     	;# 
   731  029B                     	;# 
   732  029C                     	;# 
   733  029C                     	;# 
   734  029D                     	;# 
   735  030C                     	;# 
   736  030C                     	;# 
   737  030D                     	;# 
   738  030E                     	;# 
   739  030F                     	;# 
   740  0310                     	;# 
   741  0310                     	;# 
   742  0311                     	;# 
   743  0312                     	;# 
   744  0313                     	;# 
   745  0314                     	;# 
   746  0314                     	;# 
   747  0315                     	;# 
   748  0316                     	;# 
   749  0317                     	;# 
   750  0318                     	;# 
   751  0318                     	;# 
   752  0319                     	;# 
   753  031A                     	;# 
   754  031B                     	;# 
   755  031C                     	;# 
   756  031C                     	;# 
   757  031D                     	;# 
   758  031E                     	;# 
   759  031F                     	;# 
   760  038C                     	;# 
   761  038D                     	;# 
   762  038E                     	;# 
   763  0390                     	;# 
   764  0391                     	;# 
   765  0392                     	;# 
   766  040C                     	;# 
   767  040D                     	;# 
   768  040E                     	;# 
   769  040F                     	;# 
   770  0410                     	;# 
   771  0411                     	;# 
   772  0416                     	;# 
   773  0416                     	;# 
   774  0417                     	;# 
   775  0418                     	;# 
   776  0418                     	;# 
   777  0419                     	;# 
   778  041A                     	;# 
   779  041A                     	;# 
   780  041B                     	;# 
   781  041C                     	;# 
   782  041C                     	;# 
   783  041D                     	;# 
   784  041E                     	;# 
   785  041F                     	;# 
   786  048C                     	;# 
   787  048C                     	;# 
   788  048D                     	;# 
   789  048E                     	;# 
   790  048F                     	;# 
   791  048F                     	;# 
   792  0490                     	;# 
   793  0491                     	;# 
   794  0492                     	;# 
   795  0492                     	;# 
   796  0493                     	;# 
   797  0494                     	;# 
   798  0495                     	;# 
   799  0495                     	;# 
   800  0496                     	;# 
   801  0497                     	;# 
   802  0498                     	;# 
   803  0499                     	;# 
   804  049A                     	;# 
   805  049B                     	;# 
   806  049C                     	;# 
   807  049D                     	;# 
   808  050C                     	;# 
   809  050C                     	;# 
   810  050D                     	;# 
   811  050E                     	;# 
   812  050F                     	;# 
   813  050F                     	;# 
   814  0510                     	;# 
   815  0511                     	;# 
   816  0512                     	;# 
   817  0512                     	;# 
   818  0513                     	;# 
   819  0514                     	;# 
   820  0515                     	;# 
   821  0515                     	;# 
   822  0516                     	;# 
   823  0517                     	;# 
   824  0518                     	;# 
   825  0519                     	;# 
   826  051A                     	;# 
   827  051B                     	;# 
   828  051C                     	;# 
   829  051D                     	;# 
   830  058C                     	;# 
   831  058C                     	;# 
   832  058D                     	;# 
   833  058E                     	;# 
   834  058F                     	;# 
   835  058F                     	;# 
   836  0590                     	;# 
   837  0591                     	;# 
   838  0592                     	;# 
   839  0593                     	;# 
   840  060C                     	;# 
   841  060D                     	;# 
   842  060E                     	;# 
   843  060F                     	;# 
   844  0610                     	;# 
   845  0611                     	;# 
   846  0612                     	;# 
   847  0613                     	;# 
   848  0614                     	;# 
   849  0616                     	;# 
   850  0617                     	;# 
   851  0618                     	;# 
   852  0619                     	;# 
   853  061A                     	;# 
   854  061B                     	;# 
   855  061C                     	;# 
   856  061D                     	;# 
   857  061E                     	;# 
   858  068C                     	;# 
   859  068D                     	;# 
   860  068E                     	;# 
   861  068F                     	;# 
   862  0690                     	;# 
   863  0691                     	;# 
   864  0692                     	;# 
   865  0693                     	;# 
   866  0694                     	;# 
   867  070C                     	;# 
   868  070D                     	;# 
   869  070E                     	;# 
   870  070F                     	;# 
   871  0710                     	;# 
   872  0711                     	;# 
   873  0712                     	;# 
   874  0713                     	;# 
   875  0714                     	;# 
   876  0716                     	;# 
   877  0717                     	;# 
   878  0718                     	;# 
   879  0719                     	;# 
   880  071A                     	;# 
   881  071B                     	;# 
   882  071C                     	;# 
   883  071D                     	;# 
   884  071E                     	;# 
   885  0796                     	;# 
   886  0797                     	;# 
   887  0798                     	;# 
   888  0799                     	;# 
   889  079A                     	;# 
   890  079B                     	;# 
   891  080C                     	;# 
   892  080D                     	;# 
   893  080E                     	;# 
   894  080F                     	;# 
   895  0810                     	;# 
   896  0811                     	;# 
   897  0812                     	;# 
   898  0813                     	;# 
   899  0814                     	;# 
   900  081A                     	;# 
   901  081B                     	;# 
   902  081C                     	;# 
   903  081D                     	;# 
   904  081E                     	;# 
   905  081F                     	;# 
   906  088C                     	;# 
   907  088D                     	;# 
   908  088E                     	;# 
   909  088F                     	;# 
   910  0890                     	;# 
   911  0891                     	;# 
   912  0892                     	;# 
   913  0893                     	;# 
   914  0895                     	;# 
   915  0896                     	;# 
   916  0897                     	;# 
   917  0898                     	;# 
   918  0899                     	;# 
   919  089A                     	;# 
   920  089B                     	;# 
   921  090C                     	;# 
   922  090E                     	;# 
   923  090F                     	;# 
   924  091F                     	;# 
   925  091F                     	;# 
   926  098F                     	;# 
   927  098F                     	;# 
   928  0990                     	;# 
   929  0991                     	;# 
   930  0992                     	;# 
   931  0993                     	;# 
   932  0994                     	;# 
   933  0995                     	;# 
   934  0996                     	;# 
   935  0997                     	;# 
   936  0E0F                     	;# 
   937  0E10                     	;# 
   938  0E11                     	;# 
   939  0E12                     	;# 
   940  0E13                     	;# 
   941  0E14                     	;# 
   942  0E15                     	;# 
   943  0E16                     	;# 
   944  0E17                     	;# 
   945  0E18                     	;# 
   946  0E19                     	;# 
   947  0E1A                     	;# 
   948  0E1B                     	;# 
   949  0E1C                     	;# 
   950  0E1D                     	;# 
   951  0E1E                     	;# 
   952  0E1F                     	;# 
   953  0E20                     	;# 
   954  0E21                     	;# 
   955  0E22                     	;# 
   956  0E23                     	;# 
   957  0E24                     	;# 
   958  0E25                     	;# 
   959  0E26                     	;# 
   960  0E27                     	;# 
   961  0E28                     	;# 
   962  0E29                     	;# 
   963  0E2A                     	;# 
   964  0E2B                     	;# 
   965  0E2C                     	;# 
   966  0E2D                     	;# 
   967  0E2E                     	;# 
   968  0E2F                     	;# 
   969  0E30                     	;# 
   970  0E31                     	;# 
   971  0E32                     	;# 
   972  0E33                     	;# 
   973  0E34                     	;# 
   974  0E35                     	;# 
   975  0E36                     	;# 
   976  0E37                     	;# 
   977  0E8F                     	;# 
   978  0E90                     	;# 
   979  0E91                     	;# 
   980  0E92                     	;# 
   981  0E93                     	;# 
   982  0E94                     	;# 
   983  0E95                     	;# 
   984  0E96                     	;# 
   985  0E97                     	;# 
   986  0E9C                     	;# 
   987  0E9D                     	;# 
   988  0E9E                     	;# 
   989  0EA1                     	;# 
   990  0EA2                     	;# 
   991  0EA3                     	;# 
   992  0EA4                     	;# 
   993  0EA5                     	;# 
   994  0EA9                     	;# 
   995  0EAA                     	;# 
   996  0EAB                     	;# 
   997  0EAC                     	;# 
   998  0EB1                     	;# 
   999  0EB2                     	;# 
  1000  0EB3                     	;# 
  1001  0EB8                     	;# 
  1002  0EB9                     	;# 
  1003  0EBA                     	;# 
  1004  0EBB                     	;# 
  1005  0EBC                     	;# 
  1006  0EBD                     	;# 
  1007  0EBE                     	;# 
  1008  0EC3                     	;# 
  1009  0EC5                     	;# 
  1010  0EC6                     	;# 
  1011  0EC7                     	;# 
  1012  0EC8                     	;# 
  1013  0EC9                     	;# 
  1014  0ECA                     	;# 
  1015  0ECB                     	;# 
  1016  0ECC                     	;# 
  1017  0F10                     	;# 
  1018  0F11                     	;# 
  1019  0F12                     	;# 
  1020  0F13                     	;# 
  1021  0F14                     	;# 
  1022  0F15                     	;# 
  1023  0F16                     	;# 
  1024  0F17                     	;# 
  1025  0F18                     	;# 
  1026  0F19                     	;# 
  1027  0F1A                     	;# 
  1028  0F1B                     	;# 
  1029  0F1C                     	;# 
  1030  0F1D                     	;# 
  1031  0F1E                     	;# 
  1032  0F1F                     	;# 
  1033  0F20                     	;# 
  1034  0F21                     	;# 
  1035  0F22                     	;# 
  1036  0F23                     	;# 
  1037  0F24                     	;# 
  1038  0F25                     	;# 
  1039  0F26                     	;# 
  1040  0F27                     	;# 
  1041  0F38                     	;# 
  1042  0F39                     	;# 
  1043  0F3A                     	;# 
  1044  0F3B                     	;# 
  1045  0F3C                     	;# 
  1046  0F3D                     	;# 
  1047  0F3E                     	;# 
  1048  0F3F                     	;# 
  1049  0F40                     	;# 
  1050  0F41                     	;# 
  1051  0F43                     	;# 
  1052  0F44                     	;# 
  1053  0F45                     	;# 
  1054  0F46                     	;# 
  1055  0F47                     	;# 
  1056  0F48                     	;# 
  1057  0F49                     	;# 
  1058  0F4A                     	;# 
  1059  0F4B                     	;# 
  1060  0F4C                     	;# 
  1061  0F4E                     	;# 
  1062  0F4F                     	;# 
  1063  0F50                     	;# 
  1064  0F51                     	;# 
  1065  0F52                     	;# 
  1066  0F53                     	;# 
  1067  0F54                     	;# 
  1068  0F55                     	;# 
  1069  0F56                     	;# 
  1070  0F57                     	;# 
  1071  0F65                     	;# 
  1072  0F68                     	;# 
  1073  0F69                     	;# 
  1074  0F6A                     	;# 
  1075  0F6B                     	;# 
  1076  0FE4                     	;# 
  1077  0FE5                     	;# 
  1078  0FE6                     	;# 
  1079  0FE7                     	;# 
  1080  0FE8                     	;# 
  1081  0FE9                     	;# 
  1082  0FEA                     	;# 
  1083  0FEB                     	;# 
  1084  0FED                     	;# 
  1085  0FEE                     	;# 
  1086  0FEF                     	;# 
  1087  0000                     	;# 
  1088  0001                     	;# 
  1089  0002                     	;# 
  1090  0003                     	;# 
  1091  0004                     	;# 
  1092  0005                     	;# 
  1093  0006                     	;# 
  1094  0007                     	;# 
  1095  0008                     	;# 
  1096  0009                     	;# 
  1097  000A                     	;# 
  1098  000B                     	;# 
  1099  000C                     	;# 
  1100  000D                     	;# 
  1101  000E                     	;# 
  1102  0010                     	;# 
  1103  0011                     	;# 
  1104  0012                     	;# 
  1105  0013                     	;# 
  1106  0016                     	;# 
  1107  0017                     	;# 
  1108  0018                     	;# 
  1109  001C                     	;# 
  1110  001C                     	;# 
  1111  001D                     	;# 
  1112  001D                     	;# 
  1113  001E                     	;# 
  1114  001F                     	;# 
  1115  008C                     	;# 
  1116  008C                     	;# 
  1117  008D                     	;# 
  1118  008E                     	;# 
  1119  008E                     	;# 
  1120  008F                     	;# 
  1121  0090                     	;# 
  1122  0090                     	;# 
  1123  0091                     	;# 
  1124  0093                     	;# 
  1125  0094                     	;# 
  1126  0095                     	;# 
  1127  0096                     	;# 
  1128  0097                     	;# 
  1129  0098                     	;# 
  1130  0099                     	;# 
  1131  009A                     	;# 
  1132  009B                     	;# 
  1133  009C                     	;# 
  1134  009D                     	;# 
  1135  009E                     	;# 
  1136  010C                     	;# 
  1137  010D                     	;# 
  1138  010E                     	;# 
  1139  010E                     	;# 
  1140  010F                     	;# 
  1141  0110                     	;# 
  1142  0110                     	;# 
  1143  0111                     	;# 
  1144  0112                     	;# 
  1145  0112                     	;# 
  1146  0113                     	;# 
  1147  0114                     	;# 
  1148  0114                     	;# 
  1149  0115                     	;# 
  1150  0116                     	;# 
  1151  0116                     	;# 
  1152  0117                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  0119                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011A                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011C                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011D                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011E                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  018C                     	;# 
  1179  018D                     	;# 
  1180  018E                     	;# 
  1181  018F                     	;# 
  1182  0190                     	;# 
  1183  0191                     	;# 
  1184  0192                     	;# 
  1185  0196                     	;# 
  1186  0197                     	;# 
  1187  0198                     	;# 
  1188  0199                     	;# 
  1189  019A                     	;# 
  1190  019B                     	;# 
  1191  019C                     	;# 
  1192  020C                     	;# 
  1193  020D                     	;# 
  1194  020E                     	;# 
  1195  020F                     	;# 
  1196  020F                     	;# 
  1197  0210                     	;# 
  1198  0210                     	;# 
  1199  0211                     	;# 
  1200  0211                     	;# 
  1201  0212                     	;# 
  1202  0213                     	;# 
  1203  0214                     	;# 
  1204  0215                     	;# 
  1205  0215                     	;# 
  1206  0216                     	;# 
  1207  0216                     	;# 
  1208  0217                     	;# 
  1209  0217                     	;# 
  1210  0218                     	;# 
  1211  0219                     	;# 
  1212  021A                     	;# 
  1213  021B                     	;# 
  1214  021B                     	;# 
  1215  021C                     	;# 
  1216  021C                     	;# 
  1217  021D                     	;# 
  1218  021D                     	;# 
  1219  021E                     	;# 
  1220  021F                     	;# 
  1221  028C                     	;# 
  1222  028C                     	;# 
  1223  028D                     	;# 
  1224  028D                     	;# 
  1225  028E                     	;# 
  1226  028F                     	;# 
  1227  0290                     	;# 
  1228  0290                     	;# 
  1229  0291                     	;# 
  1230  0292                     	;# 
  1231  0292                     	;# 
  1232  0293                     	;# 
  1233  0293                     	;# 
  1234  0294                     	;# 
  1235  0295                     	;# 
  1236  0296                     	;# 
  1237  0296                     	;# 
  1238  0297                     	;# 
  1239  0298                     	;# 
  1240  0298                     	;# 
  1241  0299                     	;# 
  1242  0299                     	;# 
  1243  029A                     	;# 
  1244  029B                     	;# 
  1245  029C                     	;# 
  1246  029C                     	;# 
  1247  029D                     	;# 
  1248  030C                     	;# 
  1249  030C                     	;# 
  1250  030D                     	;# 
  1251  030E                     	;# 
  1252  030F                     	;# 
  1253  0310                     	;# 
  1254  0310                     	;# 
  1255  0311                     	;# 
  1256  0312                     	;# 
  1257  0313                     	;# 
  1258  0314                     	;# 
  1259  0314                     	;# 
  1260  0315                     	;# 
  1261  0316                     	;# 
  1262  0317                     	;# 
  1263  0318                     	;# 
  1264  0318                     	;# 
  1265  0319                     	;# 
  1266  031A                     	;# 
  1267  031B                     	;# 
  1268  031C                     	;# 
  1269  031C                     	;# 
  1270  031D                     	;# 
  1271  031E                     	;# 
  1272  031F                     	;# 
  1273  038C                     	;# 
  1274  038D                     	;# 
  1275  038E                     	;# 
  1276  0390                     	;# 
  1277  0391                     	;# 
  1278  0392                     	;# 
  1279  040C                     	;# 
  1280  040D                     	;# 
  1281  040E                     	;# 
  1282  040F                     	;# 
  1283  0410                     	;# 
  1284  0411                     	;# 
  1285  0416                     	;# 
  1286  0416                     	;# 
  1287  0417                     	;# 
  1288  0418                     	;# 
  1289  0418                     	;# 
  1290  0419                     	;# 
  1291  041A                     	;# 
  1292  041A                     	;# 
  1293  041B                     	;# 
  1294  041C                     	;# 
  1295  041C                     	;# 
  1296  041D                     	;# 
  1297  041E                     	;# 
  1298  041F                     	;# 
  1299  048C                     	;# 
  1300  048C                     	;# 
  1301  048D                     	;# 
  1302  048E                     	;# 
  1303  048F                     	;# 
  1304  048F                     	;# 
  1305  0490                     	;# 
  1306  0491                     	;# 
  1307  0492                     	;# 
  1308  0492                     	;# 
  1309  0493                     	;# 
  1310  0494                     	;# 
  1311  0495                     	;# 
  1312  0495                     	;# 
  1313  0496                     	;# 
  1314  0497                     	;# 
  1315  0498                     	;# 
  1316  0499                     	;# 
  1317  049A                     	;# 
  1318  049B                     	;# 
  1319  049C                     	;# 
  1320  049D                     	;# 
  1321  050C                     	;# 
  1322  050C                     	;# 
  1323  050D                     	;# 
  1324  050E                     	;# 
  1325  050F                     	;# 
  1326  050F                     	;# 
  1327  0510                     	;# 
  1328  0511                     	;# 
  1329  0512                     	;# 
  1330  0512                     	;# 
  1331  0513                     	;# 
  1332  0514                     	;# 
  1333  0515                     	;# 
  1334  0515                     	;# 
  1335  0516                     	;# 
  1336  0517                     	;# 
  1337  0518                     	;# 
  1338  0519                     	;# 
  1339  051A                     	;# 
  1340  051B                     	;# 
  1341  051C                     	;# 
  1342  051D                     	;# 
  1343  058C                     	;# 
  1344  058C                     	;# 
  1345  058D                     	;# 
  1346  058E                     	;# 
  1347  058F                     	;# 
  1348  058F                     	;# 
  1349  0590                     	;# 
  1350  0591                     	;# 
  1351  0592                     	;# 
  1352  0593                     	;# 
  1353  060C                     	;# 
  1354  060D                     	;# 
  1355  060E                     	;# 
  1356  060F                     	;# 
  1357  0610                     	;# 
  1358  0611                     	;# 
  1359  0612                     	;# 
  1360  0613                     	;# 
  1361  0614                     	;# 
  1362  0616                     	;# 
  1363  0617                     	;# 
  1364  0618                     	;# 
  1365  0619                     	;# 
  1366  061A                     	;# 
  1367  061B                     	;# 
  1368  061C                     	;# 
  1369  061D                     	;# 
  1370  061E                     	;# 
  1371  068C                     	;# 
  1372  068D                     	;# 
  1373  068E                     	;# 
  1374  068F                     	;# 
  1375  0690                     	;# 
  1376  0691                     	;# 
  1377  0692                     	;# 
  1378  0693                     	;# 
  1379  0694                     	;# 
  1380  070C                     	;# 
  1381  070D                     	;# 
  1382  070E                     	;# 
  1383  070F                     	;# 
  1384  0710                     	;# 
  1385  0711                     	;# 
  1386  0712                     	;# 
  1387  0713                     	;# 
  1388  0714                     	;# 
  1389  0716                     	;# 
  1390  0717                     	;# 
  1391  0718                     	;# 
  1392  0719                     	;# 
  1393  071A                     	;# 
  1394  071B                     	;# 
  1395  071C                     	;# 
  1396  071D                     	;# 
  1397  071E                     	;# 
  1398  0796                     	;# 
  1399  0797                     	;# 
  1400  0798                     	;# 
  1401  0799                     	;# 
  1402  079A                     	;# 
  1403  079B                     	;# 
  1404  080C                     	;# 
  1405  080D                     	;# 
  1406  080E                     	;# 
  1407  080F                     	;# 
  1408  0810                     	;# 
  1409  0811                     	;# 
  1410  0812                     	;# 
  1411  0813                     	;# 
  1412  0814                     	;# 
  1413  081A                     	;# 
  1414  081B                     	;# 
  1415  081C                     	;# 
  1416  081D                     	;# 
  1417  081E                     	;# 
  1418  081F                     	;# 
  1419  088C                     	;# 
  1420  088D                     	;# 
  1421  088E                     	;# 
  1422  088F                     	;# 
  1423  0890                     	;# 
  1424  0891                     	;# 
  1425  0892                     	;# 
  1426  0893                     	;# 
  1427  0895                     	;# 
  1428  0896                     	;# 
  1429  0897                     	;# 
  1430  0898                     	;# 
  1431  0899                     	;# 
  1432  089A                     	;# 
  1433  089B                     	;# 
  1434  090C                     	;# 
  1435  090E                     	;# 
  1436  090F                     	;# 
  1437  091F                     	;# 
  1438  091F                     	;# 
  1439  098F                     	;# 
  1440  098F                     	;# 
  1441  0990                     	;# 
  1442  0991                     	;# 
  1443  0992                     	;# 
  1444  0993                     	;# 
  1445  0994                     	;# 
  1446  0995                     	;# 
  1447  0996                     	;# 
  1448  0997                     	;# 
  1449  0E0F                     	;# 
  1450  0E10                     	;# 
  1451  0E11                     	;# 
  1452  0E12                     	;# 
  1453  0E13                     	;# 
  1454  0E14                     	;# 
  1455  0E15                     	;# 
  1456  0E16                     	;# 
  1457  0E17                     	;# 
  1458  0E18                     	;# 
  1459  0E19                     	;# 
  1460  0E1A                     	;# 
  1461  0E1B                     	;# 
  1462  0E1C                     	;# 
  1463  0E1D                     	;# 
  1464  0E1E                     	;# 
  1465  0E1F                     	;# 
  1466  0E20                     	;# 
  1467  0E21                     	;# 
  1468  0E22                     	;# 
  1469  0E23                     	;# 
  1470  0E24                     	;# 
  1471  0E25                     	;# 
  1472  0E26                     	;# 
  1473  0E27                     	;# 
  1474  0E28                     	;# 
  1475  0E29                     	;# 
  1476  0E2A                     	;# 
  1477  0E2B                     	;# 
  1478  0E2C                     	;# 
  1479  0E2D                     	;# 
  1480  0E2E                     	;# 
  1481  0E2F                     	;# 
  1482  0E30                     	;# 
  1483  0E31                     	;# 
  1484  0E32                     	;# 
  1485  0E33                     	;# 
  1486  0E34                     	;# 
  1487  0E35                     	;# 
  1488  0E36                     	;# 
  1489  0E37                     	;# 
  1490  0E8F                     	;# 
  1491  0E90                     	;# 
  1492  0E91                     	;# 
  1493  0E92                     	;# 
  1494  0E93                     	;# 
  1495  0E94                     	;# 
  1496  0E95                     	;# 
  1497  0E96                     	;# 
  1498  0E97                     	;# 
  1499  0E9C                     	;# 
  1500  0E9D                     	;# 
  1501  0E9E                     	;# 
  1502  0EA1                     	;# 
  1503  0EA2                     	;# 
  1504  0EA3                     	;# 
  1505  0EA4                     	;# 
  1506  0EA5                     	;# 
  1507  0EA9                     	;# 
  1508  0EAA                     	;# 
  1509  0EAB                     	;# 
  1510  0EAC                     	;# 
  1511  0EB1                     	;# 
  1512  0EB2                     	;# 
  1513  0EB3                     	;# 
  1514  0EB8                     	;# 
  1515  0EB9                     	;# 
  1516  0EBA                     	;# 
  1517  0EBB                     	;# 
  1518  0EBC                     	;# 
  1519  0EBD                     	;# 
  1520  0EBE                     	;# 
  1521  0EC3                     	;# 
  1522  0EC5                     	;# 
  1523  0EC6                     	;# 
  1524  0EC7                     	;# 
  1525  0EC8                     	;# 
  1526  0EC9                     	;# 
  1527  0ECA                     	;# 
  1528  0ECB                     	;# 
  1529  0ECC                     	;# 
  1530  0F10                     	;# 
  1531  0F11                     	;# 
  1532  0F12                     	;# 
  1533  0F13                     	;# 
  1534  0F14                     	;# 
  1535  0F15                     	;# 
  1536  0F16                     	;# 
  1537  0F17                     	;# 
  1538  0F18                     	;# 
  1539  0F19                     	;# 
  1540  0F1A                     	;# 
  1541  0F1B                     	;# 
  1542  0F1C                     	;# 
  1543  0F1D                     	;# 
  1544  0F1E                     	;# 
  1545  0F1F                     	;# 
  1546  0F20                     	;# 
  1547  0F21                     	;# 
  1548  0F22                     	;# 
  1549  0F23                     	;# 
  1550  0F24                     	;# 
  1551  0F25                     	;# 
  1552  0F26                     	;# 
  1553  0F27                     	;# 
  1554  0F38                     	;# 
  1555  0F39                     	;# 
  1556  0F3A                     	;# 
  1557  0F3B                     	;# 
  1558  0F3C                     	;# 
  1559  0F3D                     	;# 
  1560  0F3E                     	;# 
  1561  0F3F                     	;# 
  1562  0F40                     	;# 
  1563  0F41                     	;# 
  1564  0F43                     	;# 
  1565  0F44                     	;# 
  1566  0F45                     	;# 
  1567  0F46                     	;# 
  1568  0F47                     	;# 
  1569  0F48                     	;# 
  1570  0F49                     	;# 
  1571  0F4A                     	;# 
  1572  0F4B                     	;# 
  1573  0F4C                     	;# 
  1574  0F4E                     	;# 
  1575  0F4F                     	;# 
  1576  0F50                     	;# 
  1577  0F51                     	;# 
  1578  0F52                     	;# 
  1579  0F53                     	;# 
  1580  0F54                     	;# 
  1581  0F55                     	;# 
  1582  0F56                     	;# 
  1583  0F57                     	;# 
  1584  0F65                     	;# 
  1585  0F68                     	;# 
  1586  0F69                     	;# 
  1587  0F6A                     	;# 
  1588  0F6B                     	;# 
  1589  0FE4                     	;# 
  1590  0FE5                     	;# 
  1591  0FE6                     	;# 
  1592  0FE7                     	;# 
  1593  0FE8                     	;# 
  1594  0FE9                     	;# 
  1595  0FEA                     	;# 
  1596  0FEB                     	;# 
  1597  0FED                     	;# 
  1598  0FEE                     	;# 
  1599  0FEF                     	;# 
  1600  0000                     	;# 
  1601  0001                     	;# 
  1602  0002                     	;# 
  1603  0003                     	;# 
  1604  0004                     	;# 
  1605  0005                     	;# 
  1606  0006                     	;# 
  1607  0007                     	;# 
  1608  0008                     	;# 
  1609  0009                     	;# 
  1610  000A                     	;# 
  1611  000B                     	;# 
  1612  000C                     	;# 
  1613  000D                     	;# 
  1614  000E                     	;# 
  1615  0010                     	;# 
  1616  0011                     	;# 
  1617  0012                     	;# 
  1618  0013                     	;# 
  1619  0016                     	;# 
  1620  0017                     	;# 
  1621  0018                     	;# 
  1622  001C                     	;# 
  1623  001C                     	;# 
  1624  001D                     	;# 
  1625  001D                     	;# 
  1626  001E                     	;# 
  1627  001F                     	;# 
  1628  008C                     	;# 
  1629  008C                     	;# 
  1630  008D                     	;# 
  1631  008E                     	;# 
  1632  008E                     	;# 
  1633  008F                     	;# 
  1634  0090                     	;# 
  1635  0090                     	;# 
  1636  0091                     	;# 
  1637  0093                     	;# 
  1638  0094                     	;# 
  1639  0095                     	;# 
  1640  0096                     	;# 
  1641  0097                     	;# 
  1642  0098                     	;# 
  1643  0099                     	;# 
  1644  009A                     	;# 
  1645  009B                     	;# 
  1646  009C                     	;# 
  1647  009D                     	;# 
  1648  009E                     	;# 
  1649  010C                     	;# 
  1650  010D                     	;# 
  1651  010E                     	;# 
  1652  010E                     	;# 
  1653  010F                     	;# 
  1654  0110                     	;# 
  1655  0110                     	;# 
  1656  0111                     	;# 
  1657  0112                     	;# 
  1658  0112                     	;# 
  1659  0113                     	;# 
  1660  0114                     	;# 
  1661  0114                     	;# 
  1662  0115                     	;# 
  1663  0116                     	;# 
  1664  0116                     	;# 
  1665  0117                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  0119                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011A                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011C                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011D                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011E                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  018C                     	;# 
  1692  018D                     	;# 
  1693  018E                     	;# 
  1694  018F                     	;# 
  1695  0190                     	;# 
  1696  0191                     	;# 
  1697  0192                     	;# 
  1698  0196                     	;# 
  1699  0197                     	;# 
  1700  0198                     	;# 
  1701  0199                     	;# 
  1702  019A                     	;# 
  1703  019B                     	;# 
  1704  019C                     	;# 
  1705  020C                     	;# 
  1706  020D                     	;# 
  1707  020E                     	;# 
  1708  020F                     	;# 
  1709  020F                     	;# 
  1710  0210                     	;# 
  1711  0210                     	;# 
  1712  0211                     	;# 
  1713  0211                     	;# 
  1714  0212                     	;# 
  1715  0213                     	;# 
  1716  0214                     	;# 
  1717  0215                     	;# 
  1718  0215                     	;# 
  1719  0216                     	;# 
  1720  0216                     	;# 
  1721  0217                     	;# 
  1722  0217                     	;# 
  1723  0218                     	;# 
  1724  0219                     	;# 
  1725  021A                     	;# 
  1726  021B                     	;# 
  1727  021B                     	;# 
  1728  021C                     	;# 
  1729  021C                     	;# 
  1730  021D                     	;# 
  1731  021D                     	;# 
  1732  021E                     	;# 
  1733  021F                     	;# 
  1734  028C                     	;# 
  1735  028C                     	;# 
  1736  028D                     	;# 
  1737  028D                     	;# 
  1738  028E                     	;# 
  1739  028F                     	;# 
  1740  0290                     	;# 
  1741  0290                     	;# 
  1742  0291                     	;# 
  1743  0292                     	;# 
  1744  0292                     	;# 
  1745  0293                     	;# 
  1746  0293                     	;# 
  1747  0294                     	;# 
  1748  0295                     	;# 
  1749  0296                     	;# 
  1750  0296                     	;# 
  1751  0297                     	;# 
  1752  0298                     	;# 
  1753  0298                     	;# 
  1754  0299                     	;# 
  1755  0299                     	;# 
  1756  029A                     	;# 
  1757  029B                     	;# 
  1758  029C                     	;# 
  1759  029C                     	;# 
  1760  029D                     	;# 
  1761  030C                     	;# 
  1762  030C                     	;# 
  1763  030D                     	;# 
  1764  030E                     	;# 
  1765  030F                     	;# 
  1766  0310                     	;# 
  1767  0310                     	;# 
  1768  0311                     	;# 
  1769  0312                     	;# 
  1770  0313                     	;# 
  1771  0314                     	;# 
  1772  0314                     	;# 
  1773  0315                     	;# 
  1774  0316                     	;# 
  1775  0317                     	;# 
  1776  0318                     	;# 
  1777  0318                     	;# 
  1778  0319                     	;# 
  1779  031A                     	;# 
  1780  031B                     	;# 
  1781  031C                     	;# 
  1782  031C                     	;# 
  1783  031D                     	;# 
  1784  031E                     	;# 
  1785  031F                     	;# 
  1786  038C                     	;# 
  1787  038D                     	;# 
  1788  038E                     	;# 
  1789  0390                     	;# 
  1790  0391                     	;# 
  1791  0392                     	;# 
  1792  040C                     	;# 
  1793  040D                     	;# 
  1794  040E                     	;# 
  1795  040F                     	;# 
  1796  0410                     	;# 
  1797  0411                     	;# 
  1798  0416                     	;# 
  1799  0416                     	;# 
  1800  0417                     	;# 
  1801  0418                     	;# 
  1802  0418                     	;# 
  1803  0419                     	;# 
  1804  041A                     	;# 
  1805  041A                     	;# 
  1806  041B                     	;# 
  1807  041C                     	;# 
  1808  041C                     	;# 
  1809  041D                     	;# 
  1810  041E                     	;# 
  1811  041F                     	;# 
  1812  048C                     	;# 
  1813  048C                     	;# 
  1814  048D                     	;# 
  1815  048E                     	;# 
  1816  048F                     	;# 
  1817  048F                     	;# 
  1818  0490                     	;# 
  1819  0491                     	;# 
  1820  0492                     	;# 
  1821  0492                     	;# 
  1822  0493                     	;# 
  1823  0494                     	;# 
  1824  0495                     	;# 
  1825  0495                     	;# 
  1826  0496                     	;# 
  1827  0497                     	;# 
  1828  0498                     	;# 
  1829  0499                     	;# 
  1830  049A                     	;# 
  1831  049B                     	;# 
  1832  049C                     	;# 
  1833  049D                     	;# 
  1834  050C                     	;# 
  1835  050C                     	;# 
  1836  050D                     	;# 
  1837  050E                     	;# 
  1838  050F                     	;# 
  1839  050F                     	;# 
  1840  0510                     	;# 
  1841  0511                     	;# 
  1842  0512                     	;# 
  1843  0512                     	;# 
  1844  0513                     	;# 
  1845  0514                     	;# 
  1846  0515                     	;# 
  1847  0515                     	;# 
  1848  0516                     	;# 
  1849  0517                     	;# 
  1850  0518                     	;# 
  1851  0519                     	;# 
  1852  051A                     	;# 
  1853  051B                     	;# 
  1854  051C                     	;# 
  1855  051D                     	;# 
  1856  058C                     	;# 
  1857  058C                     	;# 
  1858  058D                     	;# 
  1859  058E                     	;# 
  1860  058F                     	;# 
  1861  058F                     	;# 
  1862  0590                     	;# 
  1863  0591                     	;# 
  1864  0592                     	;# 
  1865  0593                     	;# 
  1866  060C                     	;# 
  1867  060D                     	;# 
  1868  060E                     	;# 
  1869  060F                     	;# 
  1870  0610                     	;# 
  1871  0611                     	;# 
  1872  0612                     	;# 
  1873  0613                     	;# 
  1874  0614                     	;# 
  1875  0616                     	;# 
  1876  0617                     	;# 
  1877  0618                     	;# 
  1878  0619                     	;# 
  1879  061A                     	;# 
  1880  061B                     	;# 
  1881  061C                     	;# 
  1882  061D                     	;# 
  1883  061E                     	;# 
  1884  068C                     	;# 
  1885  068D                     	;# 
  1886  068E                     	;# 
  1887  068F                     	;# 
  1888  0690                     	;# 
  1889  0691                     	;# 
  1890  0692                     	;# 
  1891  0693                     	;# 
  1892  0694                     	;# 
  1893  070C                     	;# 
  1894  070D                     	;# 
  1895  070E                     	;# 
  1896  070F                     	;# 
  1897  0710                     	;# 
  1898  0711                     	;# 
  1899  0712                     	;# 
  1900  0713                     	;# 
  1901  0714                     	;# 
  1902  0716                     	;# 
  1903  0717                     	;# 
  1904  0718                     	;# 
  1905  0719                     	;# 
  1906  071A                     	;# 
  1907  071B                     	;# 
  1908  071C                     	;# 
  1909  071D                     	;# 
  1910  071E                     	;# 
  1911  0796                     	;# 
  1912  0797                     	;# 
  1913  0798                     	;# 
  1914  0799                     	;# 
  1915  079A                     	;# 
  1916  079B                     	;# 
  1917  080C                     	;# 
  1918  080D                     	;# 
  1919  080E                     	;# 
  1920  080F                     	;# 
  1921  0810                     	;# 
  1922  0811                     	;# 
  1923  0812                     	;# 
  1924  0813                     	;# 
  1925  0814                     	;# 
  1926  081A                     	;# 
  1927  081B                     	;# 
  1928  081C                     	;# 
  1929  081D                     	;# 
  1930  081E                     	;# 
  1931  081F                     	;# 
  1932  088C                     	;# 
  1933  088D                     	;# 
  1934  088E                     	;# 
  1935  088F                     	;# 
  1936  0890                     	;# 
  1937  0891                     	;# 
  1938  0892                     	;# 
  1939  0893                     	;# 
  1940  0895                     	;# 
  1941  0896                     	;# 
  1942  0897                     	;# 
  1943  0898                     	;# 
  1944  0899                     	;# 
  1945  089A                     	;# 
  1946  089B                     	;# 
  1947  090C                     	;# 
  1948  090E                     	;# 
  1949  090F                     	;# 
  1950  091F                     	;# 
  1951  091F                     	;# 
  1952  098F                     	;# 
  1953  098F                     	;# 
  1954  0990                     	;# 
  1955  0991                     	;# 
  1956  0992                     	;# 
  1957  0993                     	;# 
  1958  0994                     	;# 
  1959  0995                     	;# 
  1960  0996                     	;# 
  1961  0997                     	;# 
  1962  0E0F                     	;# 
  1963  0E10                     	;# 
  1964  0E11                     	;# 
  1965  0E12                     	;# 
  1966  0E13                     	;# 
  1967  0E14                     	;# 
  1968  0E15                     	;# 
  1969  0E16                     	;# 
  1970  0E17                     	;# 
  1971  0E18                     	;# 
  1972  0E19                     	;# 
  1973  0E1A                     	;# 
  1974  0E1B                     	;# 
  1975  0E1C                     	;# 
  1976  0E1D                     	;# 
  1977  0E1E                     	;# 
  1978  0E1F                     	;# 
  1979  0E20                     	;# 
  1980  0E21                     	;# 
  1981  0E22                     	;# 
  1982  0E23                     	;# 
  1983  0E24                     	;# 
  1984  0E25                     	;# 
  1985  0E26                     	;# 
  1986  0E27                     	;# 
  1987  0E28                     	;# 
  1988  0E29                     	;# 
  1989  0E2A                     	;# 
  1990  0E2B                     	;# 
  1991  0E2C                     	;# 
  1992  0E2D                     	;# 
  1993  0E2E                     	;# 
  1994  0E2F                     	;# 
  1995  0E30                     	;# 
  1996  0E31                     	;# 
  1997  0E32                     	;# 
  1998  0E33                     	;# 
  1999  0E34                     	;# 
  2000  0E35                     	;# 
  2001  0E36                     	;# 
  2002  0E37                     	;# 
  2003  0E8F                     	;# 
  2004  0E90                     	;# 
  2005  0E91                     	;# 
  2006  0E92                     	;# 
  2007  0E93                     	;# 
  2008  0E94                     	;# 
  2009  0E95                     	;# 
  2010  0E96                     	;# 
  2011  0E97                     	;# 
  2012  0E9C                     	;# 
  2013  0E9D                     	;# 
  2014  0E9E                     	;# 
  2015  0EA1                     	;# 
  2016  0EA2                     	;# 
  2017  0EA3                     	;# 
  2018  0EA4                     	;# 
  2019  0EA5                     	;# 
  2020  0EA9                     	;# 
  2021  0EAA                     	;# 
  2022  0EAB                     	;# 
  2023  0EAC                     	;# 
  2024  0EB1                     	;# 
  2025  0EB2                     	;# 
  2026  0EB3                     	;# 
  2027  0EB8                     	;# 
  2028  0EB9                     	;# 
  2029  0EBA                     	;# 
  2030  0EBB                     	;# 
  2031  0EBC                     	;# 
  2032  0EBD                     	;# 
  2033  0EBE                     	;# 
  2034  0EC3                     	;# 
  2035  0EC5                     	;# 
  2036  0EC6                     	;# 
  2037  0EC7                     	;# 
  2038  0EC8                     	;# 
  2039  0EC9                     	;# 
  2040  0ECA                     	;# 
  2041  0ECB                     	;# 
  2042  0ECC                     	;# 
  2043  0F10                     	;# 
  2044  0F11                     	;# 
  2045  0F12                     	;# 
  2046  0F13                     	;# 
  2047  0F14                     	;# 
  2048  0F15                     	;# 
  2049  0F16                     	;# 
  2050  0F17                     	;# 
  2051  0F18                     	;# 
  2052  0F19                     	;# 
  2053  0F1A                     	;# 
  2054  0F1B                     	;# 
  2055  0F1C                     	;# 
  2056  0F1D                     	;# 
  2057  0F1E                     	;# 
  2058  0F1F                     	;# 
  2059  0F20                     	;# 
  2060  0F21                     	;# 
  2061  0F22                     	;# 
  2062  0F23                     	;# 
  2063  0F24                     	;# 
  2064  0F25                     	;# 
  2065  0F26                     	;# 
  2066  0F27                     	;# 
  2067  0F38                     	;# 
  2068  0F39                     	;# 
  2069  0F3A                     	;# 
  2070  0F3B                     	;# 
  2071  0F3C                     	;# 
  2072  0F3D                     	;# 
  2073  0F3E                     	;# 
  2074  0F3F                     	;# 
  2075  0F40                     	;# 
  2076  0F41                     	;# 
  2077  0F43                     	;# 
  2078  0F44                     	;# 
  2079  0F45                     	;# 
  2080  0F46                     	;# 
  2081  0F47                     	;# 
  2082  0F48                     	;# 
  2083  0F49                     	;# 
  2084  0F4A                     	;# 
  2085  0F4B                     	;# 
  2086  0F4C                     	;# 
  2087  0F4E                     	;# 
  2088  0F4F                     	;# 
  2089  0F50                     	;# 
  2090  0F51                     	;# 
  2091  0F52                     	;# 
  2092  0F53                     	;# 
  2093  0F54                     	;# 
  2094  0F55                     	;# 
  2095  0F56                     	;# 
  2096  0F57                     	;# 
  2097  0F65                     	;# 
  2098  0F68                     	;# 
  2099  0F69                     	;# 
  2100  0F6A                     	;# 
  2101  0F6B                     	;# 
  2102  0FE4                     	;# 
  2103  0FE5                     	;# 
  2104  0FE6                     	;# 
  2105  0FE7                     	;# 
  2106  0FE8                     	;# 
  2107  0FE9                     	;# 
  2108  0FEA                     	;# 
  2109  0FEB                     	;# 
  2110  0FED                     	;# 
  2111  0FEE                     	;# 
  2112  0FEF                     	;# 
  2113  0000                     	;# 
  2114  0001                     	;# 
  2115  0002                     	;# 
  2116  0003                     	;# 
  2117  0004                     	;# 
  2118  0005                     	;# 
  2119  0006                     	;# 
  2120  0007                     	;# 
  2121  0008                     	;# 
  2122  0009                     	;# 
  2123  000A                     	;# 
  2124  000B                     	;# 
  2125  000C                     	;# 
  2126  000D                     	;# 
  2127  000E                     	;# 
  2128  0010                     	;# 
  2129  0011                     	;# 
  2130  0012                     	;# 
  2131  0013                     	;# 
  2132  0016                     	;# 
  2133  0017                     	;# 
  2134  0018                     	;# 
  2135  001C                     	;# 
  2136  001C                     	;# 
  2137  001D                     	;# 
  2138  001D                     	;# 
  2139  001E                     	;# 
  2140  001F                     	;# 
  2141  008C                     	;# 
  2142  008C                     	;# 
  2143  008D                     	;# 
  2144  008E                     	;# 
  2145  008E                     	;# 
  2146  008F                     	;# 
  2147  0090                     	;# 
  2148  0090                     	;# 
  2149  0091                     	;# 
  2150  0093                     	;# 
  2151  0094                     	;# 
  2152  0095                     	;# 
  2153  0096                     	;# 
  2154  0097                     	;# 
  2155  0098                     	;# 
  2156  0099                     	;# 
  2157  009A                     	;# 
  2158  009B                     	;# 
  2159  009C                     	;# 
  2160  009D                     	;# 
  2161  009E                     	;# 
  2162  010C                     	;# 
  2163  010D                     	;# 
  2164  010E                     	;# 
  2165  010E                     	;# 
  2166  010F                     	;# 
  2167  0110                     	;# 
  2168  0110                     	;# 
  2169  0111                     	;# 
  2170  0112                     	;# 
  2171  0112                     	;# 
  2172  0113                     	;# 
  2173  0114                     	;# 
  2174  0114                     	;# 
  2175  0115                     	;# 
  2176  0116                     	;# 
  2177  0116                     	;# 
  2178  0117                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  0119                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011A                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011C                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011D                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011E                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  018C                     	;# 
  2205  018D                     	;# 
  2206  018E                     	;# 
  2207  018F                     	;# 
  2208  0190                     	;# 
  2209  0191                     	;# 
  2210  0192                     	;# 
  2211  0196                     	;# 
  2212  0197                     	;# 
  2213  0198                     	;# 
  2214  0199                     	;# 
  2215  019A                     	;# 
  2216  019B                     	;# 
  2217  019C                     	;# 
  2218  020C                     	;# 
  2219  020D                     	;# 
  2220  020E                     	;# 
  2221  020F                     	;# 
  2222  020F                     	;# 
  2223  0210                     	;# 
  2224  0210                     	;# 
  2225  0211                     	;# 
  2226  0211                     	;# 
  2227  0212                     	;# 
  2228  0213                     	;# 
  2229  0214                     	;# 
  2230  0215                     	;# 
  2231  0215                     	;# 
  2232  0216                     	;# 
  2233  0216                     	;# 
  2234  0217                     	;# 
  2235  0217                     	;# 
  2236  0218                     	;# 
  2237  0219                     	;# 
  2238  021A                     	;# 
  2239  021B                     	;# 
  2240  021B                     	;# 
  2241  021C                     	;# 
  2242  021C                     	;# 
  2243  021D                     	;# 
  2244  021D                     	;# 
  2245  021E                     	;# 
  2246  021F                     	;# 
  2247  028C                     	;# 
  2248  028C                     	;# 
  2249  028D                     	;# 
  2250  028D                     	;# 
  2251  028E                     	;# 
  2252  028F                     	;# 
  2253  0290                     	;# 
  2254  0290                     	;# 
  2255  0291                     	;# 
  2256  0292                     	;# 
  2257  0292                     	;# 
  2258  0293                     	;# 
  2259  0293                     	;# 
  2260  0294                     	;# 
  2261  0295                     	;# 
  2262  0296                     	;# 
  2263  0296                     	;# 
  2264  0297                     	;# 
  2265  0298                     	;# 
  2266  0298                     	;# 
  2267  0299                     	;# 
  2268  0299                     	;# 
  2269  029A                     	;# 
  2270  029B                     	;# 
  2271  029C                     	;# 
  2272  029C                     	;# 
  2273  029D                     	;# 
  2274  030C                     	;# 
  2275  030C                     	;# 
  2276  030D                     	;# 
  2277  030E                     	;# 
  2278  030F                     	;# 
  2279  0310                     	;# 
  2280  0310                     	;# 
  2281  0311                     	;# 
  2282  0312                     	;# 
  2283  0313                     	;# 
  2284  0314                     	;# 
  2285  0314                     	;# 
  2286  0315                     	;# 
  2287  0316                     	;# 
  2288  0317                     	;# 
  2289  0318                     	;# 
  2290  0318                     	;# 
  2291  0319                     	;# 
  2292  031A                     	;# 
  2293  031B                     	;# 
  2294  031C                     	;# 
  2295  031C                     	;# 
  2296  031D                     	;# 
  2297  031E                     	;# 
  2298  031F                     	;# 
  2299  038C                     	;# 
  2300  038D                     	;# 
  2301  038E                     	;# 
  2302  0390                     	;# 
  2303  0391                     	;# 
  2304  0392                     	;# 
  2305  040C                     	;# 
  2306  040D                     	;# 
  2307  040E                     	;# 
  2308  040F                     	;# 
  2309  0410                     	;# 
  2310  0411                     	;# 
  2311  0416                     	;# 
  2312  0416                     	;# 
  2313  0417                     	;# 
  2314  0418                     	;# 
  2315  0418                     	;# 
  2316  0419                     	;# 
  2317  041A                     	;# 
  2318  041A                     	;# 
  2319  041B                     	;# 
  2320  041C                     	;# 
  2321  041C                     	;# 
  2322  041D                     	;# 
  2323  041E                     	;# 
  2324  041F                     	;# 
  2325  048C                     	;# 
  2326  048C                     	;# 
  2327  048D                     	;# 
  2328  048E                     	;# 
  2329  048F                     	;# 
  2330  048F                     	;# 
  2331  0490                     	;# 
  2332  0491                     	;# 
  2333  0492                     	;# 
  2334  0492                     	;# 
  2335  0493                     	;# 
  2336  0494                     	;# 
  2337  0495                     	;# 
  2338  0495                     	;# 
  2339  0496                     	;# 
  2340  0497                     	;# 
  2341  0498                     	;# 
  2342  0499                     	;# 
  2343  049A                     	;# 
  2344  049B                     	;# 
  2345  049C                     	;# 
  2346  049D                     	;# 
  2347  050C                     	;# 
  2348  050C                     	;# 
  2349  050D                     	;# 
  2350  050E                     	;# 
  2351  050F                     	;# 
  2352  050F                     	;# 
  2353  0510                     	;# 
  2354  0511                     	;# 
  2355  0512                     	;# 
  2356  0512                     	;# 
  2357  0513                     	;# 
  2358  0514                     	;# 
  2359  0515                     	;# 
  2360  0515                     	;# 
  2361  0516                     	;# 
  2362  0517                     	;# 
  2363  0518                     	;# 
  2364  0519                     	;# 
  2365  051A                     	;# 
  2366  051B                     	;# 
  2367  051C                     	;# 
  2368  051D                     	;# 
  2369  058C                     	;# 
  2370  058C                     	;# 
  2371  058D                     	;# 
  2372  058E                     	;# 
  2373  058F                     	;# 
  2374  058F                     	;# 
  2375  0590                     	;# 
  2376  0591                     	;# 
  2377  0592                     	;# 
  2378  0593                     	;# 
  2379  060C                     	;# 
  2380  060D                     	;# 
  2381  060E                     	;# 
  2382  060F                     	;# 
  2383  0610                     	;# 
  2384  0611                     	;# 
  2385  0612                     	;# 
  2386  0613                     	;# 
  2387  0614                     	;# 
  2388  0616                     	;# 
  2389  0617                     	;# 
  2390  0618                     	;# 
  2391  0619                     	;# 
  2392  061A                     	;# 
  2393  061B                     	;# 
  2394  061C                     	;# 
  2395  061D                     	;# 
  2396  061E                     	;# 
  2397  068C                     	;# 
  2398  068D                     	;# 
  2399  068E                     	;# 
  2400  068F                     	;# 
  2401  0690                     	;# 
  2402  0691                     	;# 
  2403  0692                     	;# 
  2404  0693                     	;# 
  2405  0694                     	;# 
  2406  070C                     	;# 
  2407  070D                     	;# 
  2408  070E                     	;# 
  2409  070F                     	;# 
  2410  0710                     	;# 
  2411  0711                     	;# 
  2412  0712                     	;# 
  2413  0713                     	;# 
  2414  0714                     	;# 
  2415  0716                     	;# 
  2416  0717                     	;# 
  2417  0718                     	;# 
  2418  0719                     	;# 
  2419  071A                     	;# 
  2420  071B                     	;# 
  2421  071C                     	;# 
  2422  071D                     	;# 
  2423  071E                     	;# 
  2424  0796                     	;# 
  2425  0797                     	;# 
  2426  0798                     	;# 
  2427  0799                     	;# 
  2428  079A                     	;# 
  2429  079B                     	;# 
  2430  080C                     	;# 
  2431  080D                     	;# 
  2432  080E                     	;# 
  2433  080F                     	;# 
  2434  0810                     	;# 
  2435  0811                     	;# 
  2436  0812                     	;# 
  2437  0813                     	;# 
  2438  0814                     	;# 
  2439  081A                     	;# 
  2440  081B                     	;# 
  2441  081C                     	;# 
  2442  081D                     	;# 
  2443  081E                     	;# 
  2444  081F                     	;# 
  2445  088C                     	;# 
  2446  088D                     	;# 
  2447  088E                     	;# 
  2448  088F                     	;# 
  2449  0890                     	;# 
  2450  0891                     	;# 
  2451  0892                     	;# 
  2452  0893                     	;# 
  2453  0895                     	;# 
  2454  0896                     	;# 
  2455  0897                     	;# 
  2456  0898                     	;# 
  2457  0899                     	;# 
  2458  089A                     	;# 
  2459  089B                     	;# 
  2460  090C                     	;# 
  2461  090E                     	;# 
  2462  090F                     	;# 
  2463  091F                     	;# 
  2464  091F                     	;# 
  2465  098F                     	;# 
  2466  098F                     	;# 
  2467  0990                     	;# 
  2468  0991                     	;# 
  2469  0992                     	;# 
  2470  0993                     	;# 
  2471  0994                     	;# 
  2472  0995                     	;# 
  2473  0996                     	;# 
  2474  0997                     	;# 
  2475  0E0F                     	;# 
  2476  0E10                     	;# 
  2477  0E11                     	;# 
  2478  0E12                     	;# 
  2479  0E13                     	;# 
  2480  0E14                     	;# 
  2481  0E15                     	;# 
  2482  0E16                     	;# 
  2483  0E17                     	;# 
  2484  0E18                     	;# 
  2485  0E19                     	;# 
  2486  0E1A                     	;# 
  2487  0E1B                     	;# 
  2488  0E1C                     	;# 
  2489  0E1D                     	;# 
  2490  0E1E                     	;# 
  2491  0E1F                     	;# 
  2492  0E20                     	;# 
  2493  0E21                     	;# 
  2494  0E22                     	;# 
  2495  0E23                     	;# 
  2496  0E24                     	;# 
  2497  0E25                     	;# 
  2498  0E26                     	;# 
  2499  0E27                     	;# 
  2500  0E28                     	;# 
  2501  0E29                     	;# 
  2502  0E2A                     	;# 
  2503  0E2B                     	;# 
  2504  0E2C                     	;# 
  2505  0E2D                     	;# 
  2506  0E2E                     	;# 
  2507  0E2F                     	;# 
  2508  0E30                     	;# 
  2509  0E31                     	;# 
  2510  0E32                     	;# 
  2511  0E33                     	;# 
  2512  0E34                     	;# 
  2513  0E35                     	;# 
  2514  0E36                     	;# 
  2515  0E37                     	;# 
  2516  0E8F                     	;# 
  2517  0E90                     	;# 
  2518  0E91                     	;# 
  2519  0E92                     	;# 
  2520  0E93                     	;# 
  2521  0E94                     	;# 
  2522  0E95                     	;# 
  2523  0E96                     	;# 
  2524  0E97                     	;# 
  2525  0E9C                     	;# 
  2526  0E9D                     	;# 
  2527  0E9E                     	;# 
  2528  0EA1                     	;# 
  2529  0EA2                     	;# 
  2530  0EA3                     	;# 
  2531  0EA4                     	;# 
  2532  0EA5                     	;# 
  2533  0EA9                     	;# 
  2534  0EAA                     	;# 
  2535  0EAB                     	;# 
  2536  0EAC                     	;# 
  2537  0EB1                     	;# 
  2538  0EB2                     	;# 
  2539  0EB3                     	;# 
  2540  0EB8                     	;# 
  2541  0EB9                     	;# 
  2542  0EBA                     	;# 
  2543  0EBB                     	;# 
  2544  0EBC                     	;# 
  2545  0EBD                     	;# 
  2546  0EBE                     	;# 
  2547  0EC3                     	;# 
  2548  0EC5                     	;# 
  2549  0EC6                     	;# 
  2550  0EC7                     	;# 
  2551  0EC8                     	;# 
  2552  0EC9                     	;# 
  2553  0ECA                     	;# 
  2554  0ECB                     	;# 
  2555  0ECC                     	;# 
  2556  0F10                     	;# 
  2557  0F11                     	;# 
  2558  0F12                     	;# 
  2559  0F13                     	;# 
  2560  0F14                     	;# 
  2561  0F15                     	;# 
  2562  0F16                     	;# 
  2563  0F17                     	;# 
  2564  0F18                     	;# 
  2565  0F19                     	;# 
  2566  0F1A                     	;# 
  2567  0F1B                     	;# 
  2568  0F1C                     	;# 
  2569  0F1D                     	;# 
  2570  0F1E                     	;# 
  2571  0F1F                     	;# 
  2572  0F20                     	;# 
  2573  0F21                     	;# 
  2574  0F22                     	;# 
  2575  0F23                     	;# 
  2576  0F24                     	;# 
  2577  0F25                     	;# 
  2578  0F26                     	;# 
  2579  0F27                     	;# 
  2580  0F38                     	;# 
  2581  0F39                     	;# 
  2582  0F3A                     	;# 
  2583  0F3B                     	;# 
  2584  0F3C                     	;# 
  2585  0F3D                     	;# 
  2586  0F3E                     	;# 
  2587  0F3F                     	;# 
  2588  0F40                     	;# 
  2589  0F41                     	;# 
  2590  0F43                     	;# 
  2591  0F44                     	;# 
  2592  0F45                     	;# 
  2593  0F46                     	;# 
  2594  0F47                     	;# 
  2595  0F48                     	;# 
  2596  0F49                     	;# 
  2597  0F4A                     	;# 
  2598  0F4B                     	;# 
  2599  0F4C                     	;# 
  2600  0F4E                     	;# 
  2601  0F4F                     	;# 
  2602  0F50                     	;# 
  2603  0F51                     	;# 
  2604  0F52                     	;# 
  2605  0F53                     	;# 
  2606  0F54                     	;# 
  2607  0F55                     	;# 
  2608  0F56                     	;# 
  2609  0F57                     	;# 
  2610  0F65                     	;# 
  2611  0F68                     	;# 
  2612  0F69                     	;# 
  2613  0F6A                     	;# 
  2614  0F6B                     	;# 
  2615  0FE4                     	;# 
  2616  0FE5                     	;# 
  2617  0FE6                     	;# 
  2618  0FE7                     	;# 
  2619  0FE8                     	;# 
  2620  0FE9                     	;# 
  2621  0FEA                     	;# 
  2622  0FEB                     	;# 
  2623  0FED                     	;# 
  2624  0FEE                     	;# 
  2625  0FEF                     	;# 
  2626  0000                     	;# 
  2627  0001                     	;# 
  2628  0002                     	;# 
  2629  0003                     	;# 
  2630  0004                     	;# 
  2631  0005                     	;# 
  2632  0006                     	;# 
  2633  0007                     	;# 
  2634  0008                     	;# 
  2635  0009                     	;# 
  2636  000A                     	;# 
  2637  000B                     	;# 
  2638  000C                     	;# 
  2639  000D                     	;# 
  2640  000E                     	;# 
  2641  0010                     	;# 
  2642  0011                     	;# 
  2643  0012                     	;# 
  2644  0013                     	;# 
  2645  0016                     	;# 
  2646  0017                     	;# 
  2647  0018                     	;# 
  2648  001C                     	;# 
  2649  001C                     	;# 
  2650  001D                     	;# 
  2651  001D                     	;# 
  2652  001E                     	;# 
  2653  001F                     	;# 
  2654  008C                     	;# 
  2655  008C                     	;# 
  2656  008D                     	;# 
  2657  008E                     	;# 
  2658  008E                     	;# 
  2659  008F                     	;# 
  2660  0090                     	;# 
  2661  0090                     	;# 
  2662  0091                     	;# 
  2663  0093                     	;# 
  2664  0094                     	;# 
  2665  0095                     	;# 
  2666  0096                     	;# 
  2667  0097                     	;# 
  2668  0098                     	;# 
  2669  0099                     	;# 
  2670  009A                     	;# 
  2671  009B                     	;# 
  2672  009C                     	;# 
  2673  009D                     	;# 
  2674  009E                     	;# 
  2675  010C                     	;# 
  2676  010D                     	;# 
  2677  010E                     	;# 
  2678  010E                     	;# 
  2679  010F                     	;# 
  2680  0110                     	;# 
  2681  0110                     	;# 
  2682  0111                     	;# 
  2683  0112                     	;# 
  2684  0112                     	;# 
  2685  0113                     	;# 
  2686  0114                     	;# 
  2687  0114                     	;# 
  2688  0115                     	;# 
  2689  0116                     	;# 
  2690  0116                     	;# 
  2691  0117                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  0119                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011A                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011C                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011D                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011E                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  018C                     	;# 
  2718  018D                     	;# 
  2719  018E                     	;# 
  2720  018F                     	;# 
  2721  0190                     	;# 
  2722  0191                     	;# 
  2723  0192                     	;# 
  2724  0196                     	;# 
  2725  0197                     	;# 
  2726  0198                     	;# 
  2727  0199                     	;# 
  2728  019A                     	;# 
  2729  019B                     	;# 
  2730  019C                     	;# 
  2731  020C                     	;# 
  2732  020D                     	;# 
  2733  020E                     	;# 
  2734  020F                     	;# 
  2735  020F                     	;# 
  2736  0210                     	;# 
  2737  0210                     	;# 
  2738  0211                     	;# 
  2739  0211                     	;# 
  2740  0212                     	;# 
  2741  0213                     	;# 
  2742  0214                     	;# 
  2743  0215                     	;# 
  2744  0215                     	;# 
  2745  0216                     	;# 
  2746  0216                     	;# 
  2747  0217                     	;# 
  2748  0217                     	;# 
  2749  0218                     	;# 
  2750  0219                     	;# 
  2751  021A                     	;# 
  2752  021B                     	;# 
  2753  021B                     	;# 
  2754  021C                     	;# 
  2755  021C                     	;# 
  2756  021D                     	;# 
  2757  021D                     	;# 
  2758  021E                     	;# 
  2759  021F                     	;# 
  2760  028C                     	;# 
  2761  028C                     	;# 
  2762  028D                     	;# 
  2763  028D                     	;# 
  2764  028E                     	;# 
  2765  028F                     	;# 
  2766  0290                     	;# 
  2767  0290                     	;# 
  2768  0291                     	;# 
  2769  0292                     	;# 
  2770  0292                     	;# 
  2771  0293                     	;# 
  2772  0293                     	;# 
  2773  0294                     	;# 
  2774  0295                     	;# 
  2775  0296                     	;# 
  2776  0296                     	;# 
  2777  0297                     	;# 
  2778  0298                     	;# 
  2779  0298                     	;# 
  2780  0299                     	;# 
  2781  0299                     	;# 
  2782  029A                     	;# 
  2783  029B                     	;# 
  2784  029C                     	;# 
  2785  029C                     	;# 
  2786  029D                     	;# 
  2787  030C                     	;# 
  2788  030C                     	;# 
  2789  030D                     	;# 
  2790  030E                     	;# 
  2791  030F                     	;# 
  2792  0310                     	;# 
  2793  0310                     	;# 
  2794  0311                     	;# 
  2795  0312                     	;# 
  2796  0313                     	;# 
  2797  0314                     	;# 
  2798  0314                     	;# 
  2799  0315                     	;# 
  2800  0316                     	;# 
  2801  0317                     	;# 
  2802  0318                     	;# 
  2803  0318                     	;# 
  2804  0319                     	;# 
  2805  031A                     	;# 
  2806  031B                     	;# 
  2807  031C                     	;# 
  2808  031C                     	;# 
  2809  031D                     	;# 
  2810  031E                     	;# 
  2811  031F                     	;# 
  2812  038C                     	;# 
  2813  038D                     	;# 
  2814  038E                     	;# 
  2815  0390                     	;# 
  2816  0391                     	;# 
  2817  0392                     	;# 
  2818  040C                     	;# 
  2819  040D                     	;# 
  2820  040E                     	;# 
  2821  040F                     	;# 
  2822  0410                     	;# 
  2823  0411                     	;# 
  2824  0416                     	;# 
  2825  0416                     	;# 
  2826  0417                     	;# 
  2827  0418                     	;# 
  2828  0418                     	;# 
  2829  0419                     	;# 
  2830  041A                     	;# 
  2831  041A                     	;# 
  2832  041B                     	;# 
  2833  041C                     	;# 
  2834  041C                     	;# 
  2835  041D                     	;# 
  2836  041E                     	;# 
  2837  041F                     	;# 
  2838  048C                     	;# 
  2839  048C                     	;# 
  2840  048D                     	;# 
  2841  048E                     	;# 
  2842  048F                     	;# 
  2843  048F                     	;# 
  2844  0490                     	;# 
  2845  0491                     	;# 
  2846  0492                     	;# 
  2847  0492                     	;# 
  2848  0493                     	;# 
  2849  0494                     	;# 
  2850  0495                     	;# 
  2851  0495                     	;# 
  2852  0496                     	;# 
  2853  0497                     	;# 
  2854  0498                     	;# 
  2855  0499                     	;# 
  2856  049A                     	;# 
  2857  049B                     	;# 
  2858  049C                     	;# 
  2859  049D                     	;# 
  2860  050C                     	;# 
  2861  050C                     	;# 
  2862  050D                     	;# 
  2863  050E                     	;# 
  2864  050F                     	;# 
  2865  050F                     	;# 
  2866  0510                     	;# 
  2867  0511                     	;# 
  2868  0512                     	;# 
  2869  0512                     	;# 
  2870  0513                     	;# 
  2871  0514                     	;# 
  2872  0515                     	;# 
  2873  0515                     	;# 
  2874  0516                     	;# 
  2875  0517                     	;# 
  2876  0518                     	;# 
  2877  0519                     	;# 
  2878  051A                     	;# 
  2879  051B                     	;# 
  2880  051C                     	;# 
  2881  051D                     	;# 
  2882  058C                     	;# 
  2883  058C                     	;# 
  2884  058D                     	;# 
  2885  058E                     	;# 
  2886  058F                     	;# 
  2887  058F                     	;# 
  2888  0590                     	;# 
  2889  0591                     	;# 
  2890  0592                     	;# 
  2891  0593                     	;# 
  2892  060C                     	;# 
  2893  060D                     	;# 
  2894  060E                     	;# 
  2895  060F                     	;# 
  2896  0610                     	;# 
  2897  0611                     	;# 
  2898  0612                     	;# 
  2899  0613                     	;# 
  2900  0614                     	;# 
  2901  0616                     	;# 
  2902  0617                     	;# 
  2903  0618                     	;# 
  2904  0619                     	;# 
  2905  061A                     	;# 
  2906  061B                     	;# 
  2907  061C                     	;# 
  2908  061D                     	;# 
  2909  061E                     	;# 
  2910  068C                     	;# 
  2911  068D                     	;# 
  2912  068E                     	;# 
  2913  068F                     	;# 
  2914  0690                     	;# 
  2915  0691                     	;# 
  2916  0692                     	;# 
  2917  0693                     	;# 
  2918  0694                     	;# 
  2919  070C                     	;# 
  2920  070D                     	;# 
  2921  070E                     	;# 
  2922  070F                     	;# 
  2923  0710                     	;# 
  2924  0711                     	;# 
  2925  0712                     	;# 
  2926  0713                     	;# 
  2927  0714                     	;# 
  2928  0716                     	;# 
  2929  0717                     	;# 
  2930  0718                     	;# 
  2931  0719                     	;# 
  2932  071A                     	;# 
  2933  071B                     	;# 
  2934  071C                     	;# 
  2935  071D                     	;# 
  2936  071E                     	;# 
  2937  0796                     	;# 
  2938  0797                     	;# 
  2939  0798                     	;# 
  2940  0799                     	;# 
  2941  079A                     	;# 
  2942  079B                     	;# 
  2943  080C                     	;# 
  2944  080D                     	;# 
  2945  080E                     	;# 
  2946  080F                     	;# 
  2947  0810                     	;# 
  2948  0811                     	;# 
  2949  0812                     	;# 
  2950  0813                     	;# 
  2951  0814                     	;# 
  2952  081A                     	;# 
  2953  081B                     	;# 
  2954  081C                     	;# 
  2955  081D                     	;# 
  2956  081E                     	;# 
  2957  081F                     	;# 
  2958  088C                     	;# 
  2959  088D                     	;# 
  2960  088E                     	;# 
  2961  088F                     	;# 
  2962  0890                     	;# 
  2963  0891                     	;# 
  2964  0892                     	;# 
  2965  0893                     	;# 
  2966  0895                     	;# 
  2967  0896                     	;# 
  2968  0897                     	;# 
  2969  0898                     	;# 
  2970  0899                     	;# 
  2971  089A                     	;# 
  2972  089B                     	;# 
  2973  090C                     	;# 
  2974  090E                     	;# 
  2975  090F                     	;# 
  2976  091F                     	;# 
  2977  091F                     	;# 
  2978  098F                     	;# 
  2979  098F                     	;# 
  2980  0990                     	;# 
  2981  0991                     	;# 
  2982  0992                     	;# 
  2983  0993                     	;# 
  2984  0994                     	;# 
  2985  0995                     	;# 
  2986  0996                     	;# 
  2987  0997                     	;# 
  2988  0E0F                     	;# 
  2989  0E10                     	;# 
  2990  0E11                     	;# 
  2991  0E12                     	;# 
  2992  0E13                     	;# 
  2993  0E14                     	;# 
  2994  0E15                     	;# 
  2995  0E16                     	;# 
  2996  0E17                     	;# 
  2997  0E18                     	;# 
  2998  0E19                     	;# 
  2999  0E1A                     	;# 
  3000  0E1B                     	;# 
  3001  0E1C                     	;# 
  3002  0E1D                     	;# 
  3003  0E1E                     	;# 
  3004  0E1F                     	;# 
  3005  0E20                     	;# 
  3006  0E21                     	;# 
  3007  0E22                     	;# 
  3008  0E23                     	;# 
  3009  0E24                     	;# 
  3010  0E25                     	;# 
  3011  0E26                     	;# 
  3012  0E27                     	;# 
  3013  0E28                     	;# 
  3014  0E29                     	;# 
  3015  0E2A                     	;# 
  3016  0E2B                     	;# 
  3017  0E2C                     	;# 
  3018  0E2D                     	;# 
  3019  0E2E                     	;# 
  3020  0E2F                     	;# 
  3021  0E30                     	;# 
  3022  0E31                     	;# 
  3023  0E32                     	;# 
  3024  0E33                     	;# 
  3025  0E34                     	;# 
  3026  0E35                     	;# 
  3027  0E36                     	;# 
  3028  0E37                     	;# 
  3029  0E8F                     	;# 
  3030  0E90                     	;# 
  3031  0E91                     	;# 
  3032  0E92                     	;# 
  3033  0E93                     	;# 
  3034  0E94                     	;# 
  3035  0E95                     	;# 
  3036  0E96                     	;# 
  3037  0E97                     	;# 
  3038  0E9C                     	;# 
  3039  0E9D                     	;# 
  3040  0E9E                     	;# 
  3041  0EA1                     	;# 
  3042  0EA2                     	;# 
  3043  0EA3                     	;# 
  3044  0EA4                     	;# 
  3045  0EA5                     	;# 
  3046  0EA9                     	;# 
  3047  0EAA                     	;# 
  3048  0EAB                     	;# 
  3049  0EAC                     	;# 
  3050  0EB1                     	;# 
  3051  0EB2                     	;# 
  3052  0EB3                     	;# 
  3053  0EB8                     	;# 
  3054  0EB9                     	;# 
  3055  0EBA                     	;# 
  3056  0EBB                     	;# 
  3057  0EBC                     	;# 
  3058  0EBD                     	;# 
  3059  0EBE                     	;# 
  3060  0EC3                     	;# 
  3061  0EC5                     	;# 
  3062  0EC6                     	;# 
  3063  0EC7                     	;# 
  3064  0EC8                     	;# 
  3065  0EC9                     	;# 
  3066  0ECA                     	;# 
  3067  0ECB                     	;# 
  3068  0ECC                     	;# 
  3069  0F10                     	;# 
  3070  0F11                     	;# 
  3071  0F12                     	;# 
  3072  0F13                     	;# 
  3073  0F14                     	;# 
  3074  0F15                     	;# 
  3075  0F16                     	;# 
  3076  0F17                     	;# 
  3077  0F18                     	;# 
  3078  0F19                     	;# 
  3079  0F1A                     	;# 
  3080  0F1B                     	;# 
  3081  0F1C                     	;# 
  3082  0F1D                     	;# 
  3083  0F1E                     	;# 
  3084  0F1F                     	;# 
  3085  0F20                     	;# 
  3086  0F21                     	;# 
  3087  0F22                     	;# 
  3088  0F23                     	;# 
  3089  0F24                     	;# 
  3090  0F25                     	;# 
  3091  0F26                     	;# 
  3092  0F27                     	;# 
  3093  0F38                     	;# 
  3094  0F39                     	;# 
  3095  0F3A                     	;# 
  3096  0F3B                     	;# 
  3097  0F3C                     	;# 
  3098  0F3D                     	;# 
  3099  0F3E                     	;# 
  3100  0F3F                     	;# 
  3101  0F40                     	;# 
  3102  0F41                     	;# 
  3103  0F43                     	;# 
  3104  0F44                     	;# 
  3105  0F45                     	;# 
  3106  0F46                     	;# 
  3107  0F47                     	;# 
  3108  0F48                     	;# 
  3109  0F49                     	;# 
  3110  0F4A                     	;# 
  3111  0F4B                     	;# 
  3112  0F4C                     	;# 
  3113  0F4E                     	;# 
  3114  0F4F                     	;# 
  3115  0F50                     	;# 
  3116  0F51                     	;# 
  3117  0F52                     	;# 
  3118  0F53                     	;# 
  3119  0F54                     	;# 
  3120  0F55                     	;# 
  3121  0F56                     	;# 
  3122  0F57                     	;# 
  3123  0F65                     	;# 
  3124  0F68                     	;# 
  3125  0F69                     	;# 
  3126  0F6A                     	;# 
  3127  0F6B                     	;# 
  3128  0FE4                     	;# 
  3129  0FE5                     	;# 
  3130  0FE6                     	;# 
  3131  0FE7                     	;# 
  3132  0FE8                     	;# 
  3133  0FE9                     	;# 
  3134  0FEA                     	;# 
  3135  0FEB                     	;# 
  3136  0FED                     	;# 
  3137  0FEE                     	;# 
  3138  0FEF                     	;# 
  3139  0000                     	;# 
  3140  0001                     	;# 
  3141  0002                     	;# 
  3142  0003                     	;# 
  3143  0004                     	;# 
  3144  0005                     	;# 
  3145  0006                     	;# 
  3146  0007                     	;# 
  3147  0008                     	;# 
  3148  0009                     	;# 
  3149  000A                     	;# 
  3150  000B                     	;# 
  3151  000C                     	;# 
  3152  000D                     	;# 
  3153  000E                     	;# 
  3154  0010                     	;# 
  3155  0011                     	;# 
  3156  0012                     	;# 
  3157  0013                     	;# 
  3158  0016                     	;# 
  3159  0017                     	;# 
  3160  0018                     	;# 
  3161  001C                     	;# 
  3162  001C                     	;# 
  3163  001D                     	;# 
  3164  001D                     	;# 
  3165  001E                     	;# 
  3166  001F                     	;# 
  3167  008C                     	;# 
  3168  008C                     	;# 
  3169  008D                     	;# 
  3170  008E                     	;# 
  3171  008E                     	;# 
  3172  008F                     	;# 
  3173  0090                     	;# 
  3174  0090                     	;# 
  3175  0091                     	;# 
  3176  0093                     	;# 
  3177  0094                     	;# 
  3178  0095                     	;# 
  3179  0096                     	;# 
  3180  0097                     	;# 
  3181  0098                     	;# 
  3182  0099                     	;# 
  3183  009A                     	;# 
  3184  009B                     	;# 
  3185  009C                     	;# 
  3186  009D                     	;# 
  3187  009E                     	;# 
  3188  010C                     	;# 
  3189  010D                     	;# 
  3190  010E                     	;# 
  3191  010E                     	;# 
  3192  010F                     	;# 
  3193  0110                     	;# 
  3194  0110                     	;# 
  3195  0111                     	;# 
  3196  0112                     	;# 
  3197  0112                     	;# 
  3198  0113                     	;# 
  3199  0114                     	;# 
  3200  0114                     	;# 
  3201  0115                     	;# 
  3202  0116                     	;# 
  3203  0116                     	;# 
  3204  0117                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  0119                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011A                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011C                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011D                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011E                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  018C                     	;# 
  3231  018D                     	;# 
  3232  018E                     	;# 
  3233  018F                     	;# 
  3234  0190                     	;# 
  3235  0191                     	;# 
  3236  0192                     	;# 
  3237  0196                     	;# 
  3238  0197                     	;# 
  3239  0198                     	;# 
  3240  0199                     	;# 
  3241  019A                     	;# 
  3242  019B                     	;# 
  3243  019C                     	;# 
  3244  020C                     	;# 
  3245  020D                     	;# 
  3246  020E                     	;# 
  3247  020F                     	;# 
  3248  020F                     	;# 
  3249  0210                     	;# 
  3250  0210                     	;# 
  3251  0211                     	;# 
  3252  0211                     	;# 
  3253  0212                     	;# 
  3254  0213                     	;# 
  3255  0214                     	;# 
  3256  0215                     	;# 
  3257  0215                     	;# 
  3258  0216                     	;# 
  3259  0216                     	;# 
  3260  0217                     	;# 
  3261  0217                     	;# 
  3262  0218                     	;# 
  3263  0219                     	;# 
  3264  021A                     	;# 
  3265  021B                     	;# 
  3266  021B                     	;# 
  3267  021C                     	;# 
  3268  021C                     	;# 
  3269  021D                     	;# 
  3270  021D                     	;# 
  3271  021E                     	;# 
  3272  021F                     	;# 
  3273  028C                     	;# 
  3274  028C                     	;# 
  3275  028D                     	;# 
  3276  028D                     	;# 
  3277  028E                     	;# 
  3278  028F                     	;# 
  3279  0290                     	;# 
  3280  0290                     	;# 
  3281  0291                     	;# 
  3282  0292                     	;# 
  3283  0292                     	;# 
  3284  0293                     	;# 
  3285  0293                     	;# 
  3286  0294                     	;# 
  3287  0295                     	;# 
  3288  0296                     	;# 
  3289  0296                     	;# 
  3290  0297                     	;# 
  3291  0298                     	;# 
  3292  0298                     	;# 
  3293  0299                     	;# 
  3294  0299                     	;# 
  3295  029A                     	;# 
  3296  029B                     	;# 
  3297  029C                     	;# 
  3298  029C                     	;# 
  3299  029D                     	;# 
  3300  030C                     	;# 
  3301  030C                     	;# 
  3302  030D                     	;# 
  3303  030E                     	;# 
  3304  030F                     	;# 
  3305  0310                     	;# 
  3306  0310                     	;# 
  3307  0311                     	;# 
  3308  0312                     	;# 
  3309  0313                     	;# 
  3310  0314                     	;# 
  3311  0314                     	;# 
  3312  0315                     	;# 
  3313  0316                     	;# 
  3314  0317                     	;# 
  3315  0318                     	;# 
  3316  0318                     	;# 
  3317  0319                     	;# 
  3318  031A                     	;# 
  3319  031B                     	;# 
  3320  031C                     	;# 
  3321  031C                     	;# 
  3322  031D                     	;# 
  3323  031E                     	;# 
  3324  031F                     	;# 
  3325  038C                     	;# 
  3326  038D                     	;# 
  3327  038E                     	;# 
  3328  0390                     	;# 
  3329  0391                     	;# 
  3330  0392                     	;# 
  3331  040C                     	;# 
  3332  040D                     	;# 
  3333  040E                     	;# 
  3334  040F                     	;# 
  3335  0410                     	;# 
  3336  0411                     	;# 
  3337  0416                     	;# 
  3338  0416                     	;# 
  3339  0417                     	;# 
  3340  0418                     	;# 
  3341  0418                     	;# 
  3342  0419                     	;# 
  3343  041A                     	;# 
  3344  041A                     	;# 
  3345  041B                     	;# 
  3346  041C                     	;# 
  3347  041C                     	;# 
  3348  041D                     	;# 
  3349  041E                     	;# 
  3350  041F                     	;# 
  3351  048C                     	;# 
  3352  048C                     	;# 
  3353  048D                     	;# 
  3354  048E                     	;# 
  3355  048F                     	;# 
  3356  048F                     	;# 
  3357  0490                     	;# 
  3358  0491                     	;# 
  3359  0492                     	;# 
  3360  0492                     	;# 
  3361  0493                     	;# 
  3362  0494                     	;# 
  3363  0495                     	;# 
  3364  0495                     	;# 
  3365  0496                     	;# 
  3366  0497                     	;# 
  3367  0498                     	;# 
  3368  0499                     	;# 
  3369  049A                     	;# 
  3370  049B                     	;# 
  3371  049C                     	;# 
  3372  049D                     	;# 
  3373  050C                     	;# 
  3374  050C                     	;# 
  3375  050D                     	;# 
  3376  050E                     	;# 
  3377  050F                     	;# 
  3378  050F                     	;# 
  3379  0510                     	;# 
  3380  0511                     	;# 
  3381  0512                     	;# 
  3382  0512                     	;# 
  3383  0513                     	;# 
  3384  0514                     	;# 
  3385  0515                     	;# 
  3386  0515                     	;# 
  3387  0516                     	;# 
  3388  0517                     	;# 
  3389  0518                     	;# 
  3390  0519                     	;# 
  3391  051A                     	;# 
  3392  051B                     	;# 
  3393  051C                     	;# 
  3394  051D                     	;# 
  3395  058C                     	;# 
  3396  058C                     	;# 
  3397  058D                     	;# 
  3398  058E                     	;# 
  3399  058F                     	;# 
  3400  058F                     	;# 
  3401  0590                     	;# 
  3402  0591                     	;# 
  3403  0592                     	;# 
  3404  0593                     	;# 
  3405  060C                     	;# 
  3406  060D                     	;# 
  3407  060E                     	;# 
  3408  060F                     	;# 
  3409  0610                     	;# 
  3410  0611                     	;# 
  3411  0612                     	;# 
  3412  0613                     	;# 
  3413  0614                     	;# 
  3414  0616                     	;# 
  3415  0617                     	;# 
  3416  0618                     	;# 
  3417  0619                     	;# 
  3418  061A                     	;# 
  3419  061B                     	;# 
  3420  061C                     	;# 
  3421  061D                     	;# 
  3422  061E                     	;# 
  3423  068C                     	;# 
  3424  068D                     	;# 
  3425  068E                     	;# 
  3426  068F                     	;# 
  3427  0690                     	;# 
  3428  0691                     	;# 
  3429  0692                     	;# 
  3430  0693                     	;# 
  3431  0694                     	;# 
  3432  070C                     	;# 
  3433  070D                     	;# 
  3434  070E                     	;# 
  3435  070F                     	;# 
  3436  0710                     	;# 
  3437  0711                     	;# 
  3438  0712                     	;# 
  3439  0713                     	;# 
  3440  0714                     	;# 
  3441  0716                     	;# 
  3442  0717                     	;# 
  3443  0718                     	;# 
  3444  0719                     	;# 
  3445  071A                     	;# 
  3446  071B                     	;# 
  3447  071C                     	;# 
  3448  071D                     	;# 
  3449  071E                     	;# 
  3450  0796                     	;# 
  3451  0797                     	;# 
  3452  0798                     	;# 
  3453  0799                     	;# 
  3454  079A                     	;# 
  3455  079B                     	;# 
  3456  080C                     	;# 
  3457  080D                     	;# 
  3458  080E                     	;# 
  3459  080F                     	;# 
  3460  0810                     	;# 
  3461  0811                     	;# 
  3462  0812                     	;# 
  3463  0813                     	;# 
  3464  0814                     	;# 
  3465  081A                     	;# 
  3466  081B                     	;# 
  3467  081C                     	;# 
  3468  081D                     	;# 
  3469  081E                     	;# 
  3470  081F                     	;# 
  3471  088C                     	;# 
  3472  088D                     	;# 
  3473  088E                     	;# 
  3474  088F                     	;# 
  3475  0890                     	;# 
  3476  0891                     	;# 
  3477  0892                     	;# 
  3478  0893                     	;# 
  3479  0895                     	;# 
  3480  0896                     	;# 
  3481  0897                     	;# 
  3482  0898                     	;# 
  3483  0899                     	;# 
  3484  089A                     	;# 
  3485  089B                     	;# 
  3486  090C                     	;# 
  3487  090E                     	;# 
  3488  090F                     	;# 
  3489  091F                     	;# 
  3490  091F                     	;# 
  3491  098F                     	;# 
  3492  098F                     	;# 
  3493  0990                     	;# 
  3494  0991                     	;# 
  3495  0992                     	;# 
  3496  0993                     	;# 
  3497  0994                     	;# 
  3498  0995                     	;# 
  3499  0996                     	;# 
  3500  0997                     	;# 
  3501  0E0F                     	;# 
  3502  0E10                     	;# 
  3503  0E11                     	;# 
  3504  0E12                     	;# 
  3505  0E13                     	;# 
  3506  0E14                     	;# 
  3507  0E15                     	;# 
  3508  0E16                     	;# 
  3509  0E17                     	;# 
  3510  0E18                     	;# 
  3511  0E19                     	;# 
  3512  0E1A                     	;# 
  3513  0E1B                     	;# 
  3514  0E1C                     	;# 
  3515  0E1D                     	;# 
  3516  0E1E                     	;# 
  3517  0E1F                     	;# 
  3518  0E20                     	;# 
  3519  0E21                     	;# 
  3520  0E22                     	;# 
  3521  0E23                     	;# 
  3522  0E24                     	;# 
  3523  0E25                     	;# 
  3524  0E26                     	;# 
  3525  0E27                     	;# 
  3526  0E28                     	;# 
  3527  0E29                     	;# 
  3528  0E2A                     	;# 
  3529  0E2B                     	;# 
  3530  0E2C                     	;# 
  3531  0E2D                     	;# 
  3532  0E2E                     	;# 
  3533  0E2F                     	;# 
  3534  0E30                     	;# 
  3535  0E31                     	;# 
  3536  0E32                     	;# 
  3537  0E33                     	;# 
  3538  0E34                     	;# 
  3539  0E35                     	;# 
  3540  0E36                     	;# 
  3541  0E37                     	;# 
  3542  0E8F                     	;# 
  3543  0E90                     	;# 
  3544  0E91                     	;# 
  3545  0E92                     	;# 
  3546  0E93                     	;# 
  3547  0E94                     	;# 
  3548  0E95                     	;# 
  3549  0E96                     	;# 
  3550  0E97                     	;# 
  3551  0E9C                     	;# 
  3552  0E9D                     	;# 
  3553  0E9E                     	;# 
  3554  0EA1                     	;# 
  3555  0EA2                     	;# 
  3556  0EA3                     	;# 
  3557  0EA4                     	;# 
  3558  0EA5                     	;# 
  3559  0EA9                     	;# 
  3560  0EAA                     	;# 
  3561  0EAB                     	;# 
  3562  0EAC                     	;# 
  3563  0EB1                     	;# 
  3564  0EB2                     	;# 
  3565  0EB3                     	;# 
  3566  0EB8                     	;# 
  3567  0EB9                     	;# 
  3568  0EBA                     	;# 
  3569  0EBB                     	;# 
  3570  0EBC                     	;# 
  3571  0EBD                     	;# 
  3572  0EBE                     	;# 
  3573  0EC3                     	;# 
  3574  0EC5                     	;# 
  3575  0EC6                     	;# 
  3576  0EC7                     	;# 
  3577  0EC8                     	;# 
  3578  0EC9                     	;# 
  3579  0ECA                     	;# 
  3580  0ECB                     	;# 
  3581  0ECC                     	;# 
  3582  0F10                     	;# 
  3583  0F11                     	;# 
  3584  0F12                     	;# 
  3585  0F13                     	;# 
  3586  0F14                     	;# 
  3587  0F15                     	;# 
  3588  0F16                     	;# 
  3589  0F17                     	;# 
  3590  0F18                     	;# 
  3591  0F19                     	;# 
  3592  0F1A                     	;# 
  3593  0F1B                     	;# 
  3594  0F1C                     	;# 
  3595  0F1D                     	;# 
  3596  0F1E                     	;# 
  3597  0F1F                     	;# 
  3598  0F20                     	;# 
  3599  0F21                     	;# 
  3600  0F22                     	;# 
  3601  0F23                     	;# 
  3602  0F24                     	;# 
  3603  0F25                     	;# 
  3604  0F26                     	;# 
  3605  0F27                     	;# 
  3606  0F38                     	;# 
  3607  0F39                     	;# 
  3608  0F3A                     	;# 
  3609  0F3B                     	;# 
  3610  0F3C                     	;# 
  3611  0F3D                     	;# 
  3612  0F3E                     	;# 
  3613  0F3F                     	;# 
  3614  0F40                     	;# 
  3615  0F41                     	;# 
  3616  0F43                     	;# 
  3617  0F44                     	;# 
  3618  0F45                     	;# 
  3619  0F46                     	;# 
  3620  0F47                     	;# 
  3621  0F48                     	;# 
  3622  0F49                     	;# 
  3623  0F4A                     	;# 
  3624  0F4B                     	;# 
  3625  0F4C                     	;# 
  3626  0F4E                     	;# 
  3627  0F4F                     	;# 
  3628  0F50                     	;# 
  3629  0F51                     	;# 
  3630  0F52                     	;# 
  3631  0F53                     	;# 
  3632  0F54                     	;# 
  3633  0F55                     	;# 
  3634  0F56                     	;# 
  3635  0F57                     	;# 
  3636  0F65                     	;# 
  3637  0F68                     	;# 
  3638  0F69                     	;# 
  3639  0F6A                     	;# 
  3640  0F6B                     	;# 
  3641  0FE4                     	;# 
  3642  0FE5                     	;# 
  3643  0FE6                     	;# 
  3644  0FE7                     	;# 
  3645  0FE8                     	;# 
  3646  0FE9                     	;# 
  3647  0FEA                     	;# 
  3648  0FEB                     	;# 
  3649  0FED                     	;# 
  3650  0FEE                     	;# 
  3651  0FEF                     	;# 
  3652  0000                     	;# 
  3653  0001                     	;# 
  3654  0002                     	;# 
  3655  0003                     	;# 
  3656  0004                     	;# 
  3657  0005                     	;# 
  3658  0006                     	;# 
  3659  0007                     	;# 
  3660  0008                     	;# 
  3661  0009                     	;# 
  3662  000A                     	;# 
  3663  000B                     	;# 
  3664  000C                     	;# 
  3665  000D                     	;# 
  3666  000E                     	;# 
  3667  0010                     	;# 
  3668  0011                     	;# 
  3669  0012                     	;# 
  3670  0013                     	;# 
  3671  0016                     	;# 
  3672  0017                     	;# 
  3673  0018                     	;# 
  3674  001C                     	;# 
  3675  001C                     	;# 
  3676  001D                     	;# 
  3677  001D                     	;# 
  3678  001E                     	;# 
  3679  001F                     	;# 
  3680  008C                     	;# 
  3681  008C                     	;# 
  3682  008D                     	;# 
  3683  008E                     	;# 
  3684  008E                     	;# 
  3685  008F                     	;# 
  3686  0090                     	;# 
  3687  0090                     	;# 
  3688  0091                     	;# 
  3689  0093                     	;# 
  3690  0094                     	;# 
  3691  0095                     	;# 
  3692  0096                     	;# 
  3693  0097                     	;# 
  3694  0098                     	;# 
  3695  0099                     	;# 
  3696  009A                     	;# 
  3697  009B                     	;# 
  3698  009C                     	;# 
  3699  009D                     	;# 
  3700  009E                     	;# 
  3701  010C                     	;# 
  3702  010D                     	;# 
  3703  010E                     	;# 
  3704  010E                     	;# 
  3705  010F                     	;# 
  3706  0110                     	;# 
  3707  0110                     	;# 
  3708  0111                     	;# 
  3709  0112                     	;# 
  3710  0112                     	;# 
  3711  0113                     	;# 
  3712  0114                     	;# 
  3713  0114                     	;# 
  3714  0115                     	;# 
  3715  0116                     	;# 
  3716  0116                     	;# 
  3717  0117                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  0119                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011A                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011C                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011D                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011E                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  018C                     	;# 
  3744  018D                     	;# 
  3745  018E                     	;# 
  3746  018F                     	;# 
  3747  0190                     	;# 
  3748  0191                     	;# 
  3749  0192                     	;# 
  3750  0196                     	;# 
  3751  0197                     	;# 
  3752  0198                     	;# 
  3753  0199                     	;# 
  3754  019A                     	;# 
  3755  019B                     	;# 
  3756  019C                     	;# 
  3757  020C                     	;# 
  3758  020D                     	;# 
  3759  020E                     	;# 
  3760  020F                     	;# 
  3761  020F                     	;# 
  3762  0210                     	;# 
  3763  0210                     	;# 
  3764  0211                     	;# 
  3765  0211                     	;# 
  3766  0212                     	;# 
  3767  0213                     	;# 
  3768  0214                     	;# 
  3769  0215                     	;# 
  3770  0215                     	;# 
  3771  0216                     	;# 
  3772  0216                     	;# 
  3773  0217                     	;# 
  3774  0217                     	;# 
  3775  0218                     	;# 
  3776  0219                     	;# 
  3777  021A                     	;# 
  3778  021B                     	;# 
  3779  021B                     	;# 
  3780  021C                     	;# 
  3781  021C                     	;# 
  3782  021D                     	;# 
  3783  021D                     	;# 
  3784  021E                     	;# 
  3785  021F                     	;# 
  3786  028C                     	;# 
  3787  028C                     	;# 
  3788  028D                     	;# 
  3789  028D                     	;# 
  3790  028E                     	;# 
  3791  028F                     	;# 
  3792  0290                     	;# 
  3793  0290                     	;# 
  3794  0291                     	;# 
  3795  0292                     	;# 
  3796  0292                     	;# 
  3797  0293                     	;# 
  3798  0293                     	;# 
  3799  0294                     	;# 
  3800  0295                     	;# 
  3801  0296                     	;# 
  3802  0296                     	;# 
  3803  0297                     	;# 
  3804  0298                     	;# 
  3805  0298                     	;# 
  3806  0299                     	;# 
  3807  0299                     	;# 
  3808  029A                     	;# 
  3809  029B                     	;# 
  3810  029C                     	;# 
  3811  029C                     	;# 
  3812  029D                     	;# 
  3813  030C                     	;# 
  3814  030C                     	;# 
  3815  030D                     	;# 
  3816  030E                     	;# 
  3817  030F                     	;# 
  3818  0310                     	;# 
  3819  0310                     	;# 
  3820  0311                     	;# 
  3821  0312                     	;# 
  3822  0313                     	;# 
  3823  0314                     	;# 
  3824  0314                     	;# 
  3825  0315                     	;# 
  3826  0316                     	;# 
  3827  0317                     	;# 
  3828  0318                     	;# 
  3829  0318                     	;# 
  3830  0319                     	;# 
  3831  031A                     	;# 
  3832  031B                     	;# 
  3833  031C                     	;# 
  3834  031C                     	;# 
  3835  031D                     	;# 
  3836  031E                     	;# 
  3837  031F                     	;# 
  3838  038C                     	;# 
  3839  038D                     	;# 
  3840  038E                     	;# 
  3841  0390                     	;# 
  3842  0391                     	;# 
  3843  0392                     	;# 
  3844  040C                     	;# 
  3845  040D                     	;# 
  3846  040E                     	;# 
  3847  040F                     	;# 
  3848  0410                     	;# 
  3849  0411                     	;# 
  3850  0416                     	;# 
  3851  0416                     	;# 
  3852  0417                     	;# 
  3853  0418                     	;# 
  3854  0418                     	;# 
  3855  0419                     	;# 
  3856  041A                     	;# 
  3857  041A                     	;# 
  3858  041B                     	;# 
  3859  041C                     	;# 
  3860  041C                     	;# 
  3861  041D                     	;# 
  3862  041E                     	;# 
  3863  041F                     	;# 
  3864  048C                     	;# 
  3865  048C                     	;# 
  3866  048D                     	;# 
  3867  048E                     	;# 
  3868  048F                     	;# 
  3869  048F                     	;# 
  3870  0490                     	;# 
  3871  0491                     	;# 
  3872  0492                     	;# 
  3873  0492                     	;# 
  3874  0493                     	;# 
  3875  0494                     	;# 
  3876  0495                     	;# 
  3877  0495                     	;# 
  3878  0496                     	;# 
  3879  0497                     	;# 
  3880  0498                     	;# 
  3881  0499                     	;# 
  3882  049A                     	;# 
  3883  049B                     	;# 
  3884  049C                     	;# 
  3885  049D                     	;# 
  3886  050C                     	;# 
  3887  050C                     	;# 
  3888  050D                     	;# 
  3889  050E                     	;# 
  3890  050F                     	;# 
  3891  050F                     	;# 
  3892  0510                     	;# 
  3893  0511                     	;# 
  3894  0512                     	;# 
  3895  0512                     	;# 
  3896  0513                     	;# 
  3897  0514                     	;# 
  3898  0515                     	;# 
  3899  0515                     	;# 
  3900  0516                     	;# 
  3901  0517                     	;# 
  3902  0518                     	;# 
  3903  0519                     	;# 
  3904  051A                     	;# 
  3905  051B                     	;# 
  3906  051C                     	;# 
  3907  051D                     	;# 
  3908  058C                     	;# 
  3909  058C                     	;# 
  3910  058D                     	;# 
  3911  058E                     	;# 
  3912  058F                     	;# 
  3913  058F                     	;# 
  3914  0590                     	;# 
  3915  0591                     	;# 
  3916  0592                     	;# 
  3917  0593                     	;# 
  3918  060C                     	;# 
  3919  060D                     	;# 
  3920  060E                     	;# 
  3921  060F                     	;# 
  3922  0610                     	;# 
  3923  0611                     	;# 
  3924  0612                     	;# 
  3925  0613                     	;# 
  3926  0614                     	;# 
  3927  0616                     	;# 
  3928  0617                     	;# 
  3929  0618                     	;# 
  3930  0619                     	;# 
  3931  061A                     	;# 
  3932  061B                     	;# 
  3933  061C                     	;# 
  3934  061D                     	;# 
  3935  061E                     	;# 
  3936  068C                     	;# 
  3937  068D                     	;# 
  3938  068E                     	;# 
  3939  068F                     	;# 
  3940  0690                     	;# 
  3941  0691                     	;# 
  3942  0692                     	;# 
  3943  0693                     	;# 
  3944  0694                     	;# 
  3945  070C                     	;# 
  3946  070D                     	;# 
  3947  070E                     	;# 
  3948  070F                     	;# 
  3949  0710                     	;# 
  3950  0711                     	;# 
  3951  0712                     	;# 
  3952  0713                     	;# 
  3953  0714                     	;# 
  3954  0716                     	;# 
  3955  0717                     	;# 
  3956  0718                     	;# 
  3957  0719                     	;# 
  3958  071A                     	;# 
  3959  071B                     	;# 
  3960  071C                     	;# 
  3961  071D                     	;# 
  3962  071E                     	;# 
  3963  0796                     	;# 
  3964  0797                     	;# 
  3965  0798                     	;# 
  3966  0799                     	;# 
  3967  079A                     	;# 
  3968  079B                     	;# 
  3969  080C                     	;# 
  3970  080D                     	;# 
  3971  080E                     	;# 
  3972  080F                     	;# 
  3973  0810                     	;# 
  3974  0811                     	;# 
  3975  0812                     	;# 
  3976  0813                     	;# 
  3977  0814                     	;# 
  3978  081A                     	;# 
  3979  081B                     	;# 
  3980  081C                     	;# 
  3981  081D                     	;# 
  3982  081E                     	;# 
  3983  081F                     	;# 
  3984  088C                     	;# 
  3985  088D                     	;# 
  3986  088E                     	;# 
  3987  088F                     	;# 
  3988  0890                     	;# 
  3989  0891                     	;# 
  3990  0892                     	;# 
  3991  0893                     	;# 
  3992  0895                     	;# 
  3993  0896                     	;# 
  3994  0897                     	;# 
  3995  0898                     	;# 
  3996  0899                     	;# 
  3997  089A                     	;# 
  3998  089B                     	;# 
  3999  090C                     	;# 
  4000  090E                     	;# 
  4001  090F                     	;# 
  4002  091F                     	;# 
  4003  091F                     	;# 
  4004  098F                     	;# 
  4005  098F                     	;# 
  4006  0990                     	;# 
  4007  0991                     	;# 
  4008  0992                     	;# 
  4009  0993                     	;# 
  4010  0994                     	;# 
  4011  0995                     	;# 
  4012  0996                     	;# 
  4013  0997                     	;# 
  4014  0E0F                     	;# 
  4015  0E10                     	;# 
  4016  0E11                     	;# 
  4017  0E12                     	;# 
  4018  0E13                     	;# 
  4019  0E14                     	;# 
  4020  0E15                     	;# 
  4021  0E16                     	;# 
  4022  0E17                     	;# 
  4023  0E18                     	;# 
  4024  0E19                     	;# 
  4025  0E1A                     	;# 
  4026  0E1B                     	;# 
  4027  0E1C                     	;# 
  4028  0E1D                     	;# 
  4029  0E1E                     	;# 
  4030  0E1F                     	;# 
  4031  0E20                     	;# 
  4032  0E21                     	;# 
  4033  0E22                     	;# 
  4034  0E23                     	;# 
  4035  0E24                     	;# 
  4036  0E25                     	;# 
  4037  0E26                     	;# 
  4038  0E27                     	;# 
  4039  0E28                     	;# 
  4040  0E29                     	;# 
  4041  0E2A                     	;# 
  4042  0E2B                     	;# 
  4043  0E2C                     	;# 
  4044  0E2D                     	;# 
  4045  0E2E                     	;# 
  4046  0E2F                     	;# 
  4047  0E30                     	;# 
  4048  0E31                     	;# 
  4049  0E32                     	;# 
  4050  0E33                     	;# 
  4051  0E34                     	;# 
  4052  0E35                     	;# 
  4053  0E36                     	;# 
  4054  0E37                     	;# 
  4055  0E8F                     	;# 
  4056  0E90                     	;# 
  4057  0E91                     	;# 
  4058  0E92                     	;# 
  4059  0E93                     	;# 
  4060  0E94                     	;# 
  4061  0E95                     	;# 
  4062  0E96                     	;# 
  4063  0E97                     	;# 
  4064  0E9C                     	;# 
  4065  0E9D                     	;# 
  4066  0E9E                     	;# 
  4067  0EA1                     	;# 
  4068  0EA2                     	;# 
  4069  0EA3                     	;# 
  4070  0EA4                     	;# 
  4071  0EA5                     	;# 
  4072  0EA9                     	;# 
  4073  0EAA                     	;# 
  4074  0EAB                     	;# 
  4075  0EAC                     	;# 
  4076  0EB1                     	;# 
  4077  0EB2                     	;# 
  4078  0EB3                     	;# 
  4079  0EB8                     	;# 
  4080  0EB9                     	;# 
  4081  0EBA                     	;# 
  4082  0EBB                     	;# 
  4083  0EBC                     	;# 
  4084  0EBD                     	;# 
  4085  0EBE                     	;# 
  4086  0EC3                     	;# 
  4087  0EC5                     	;# 
  4088  0EC6                     	;# 
  4089  0EC7                     	;# 
  4090  0EC8                     	;# 
  4091  0EC9                     	;# 
  4092  0ECA                     	;# 
  4093  0ECB                     	;# 
  4094  0ECC                     	;# 
  4095  0F10                     	;# 
  4096  0F11                     	;# 
  4097  0F12                     	;# 
  4098  0F13                     	;# 
  4099  0F14                     	;# 
  4100  0F15                     	;# 
  4101  0F16                     	;# 
  4102  0F17                     	;# 
  4103  0F18                     	;# 
  4104  0F19                     	;# 
  4105  0F1A                     	;# 
  4106  0F1B                     	;# 
  4107  0F1C                     	;# 
  4108  0F1D                     	;# 
  4109  0F1E                     	;# 
  4110  0F1F                     	;# 
  4111  0F20                     	;# 
  4112  0F21                     	;# 
  4113  0F22                     	;# 
  4114  0F23                     	;# 
  4115  0F24                     	;# 
  4116  0F25                     	;# 
  4117  0F26                     	;# 
  4118  0F27                     	;# 
  4119  0F38                     	;# 
  4120  0F39                     	;# 
  4121  0F3A                     	;# 
  4122  0F3B                     	;# 
  4123  0F3C                     	;# 
  4124  0F3D                     	;# 
  4125  0F3E                     	;# 
  4126  0F3F                     	;# 
  4127  0F40                     	;# 
  4128  0F41                     	;# 
  4129  0F43                     	;# 
  4130  0F44                     	;# 
  4131  0F45                     	;# 
  4132  0F46                     	;# 
  4133  0F47                     	;# 
  4134  0F48                     	;# 
  4135  0F49                     	;# 
  4136  0F4A                     	;# 
  4137  0F4B                     	;# 
  4138  0F4C                     	;# 
  4139  0F4E                     	;# 
  4140  0F4F                     	;# 
  4141  0F50                     	;# 
  4142  0F51                     	;# 
  4143  0F52                     	;# 
  4144  0F53                     	;# 
  4145  0F54                     	;# 
  4146  0F55                     	;# 
  4147  0F56                     	;# 
  4148  0F57                     	;# 
  4149  0F65                     	;# 
  4150  0F68                     	;# 
  4151  0F69                     	;# 
  4152  0F6A                     	;# 
  4153  0F6B                     	;# 
  4154  0FE4                     	;# 
  4155  0FE5                     	;# 
  4156  0FE6                     	;# 
  4157  0FE7                     	;# 
  4158  0FE8                     	;# 
  4159  0FE9                     	;# 
  4160  0FEA                     	;# 
  4161  0FEB                     	;# 
  4162  0FED                     	;# 
  4163  0FEE                     	;# 
  4164  0FEF                     	;# 
  4165  0000                     	;# 
  4166  0001                     	;# 
  4167  0002                     	;# 
  4168  0003                     	;# 
  4169  0004                     	;# 
  4170  0005                     	;# 
  4171  0006                     	;# 
  4172  0007                     	;# 
  4173  0008                     	;# 
  4174  0009                     	;# 
  4175  000A                     	;# 
  4176  000B                     	;# 
  4177  000C                     	;# 
  4178  000D                     	;# 
  4179  000E                     	;# 
  4180  0010                     	;# 
  4181  0011                     	;# 
  4182  0012                     	;# 
  4183  0013                     	;# 
  4184  0016                     	;# 
  4185  0017                     	;# 
  4186  0018                     	;# 
  4187  001C                     	;# 
  4188  001C                     	;# 
  4189  001D                     	;# 
  4190  001D                     	;# 
  4191  001E                     	;# 
  4192  001F                     	;# 
  4193  008C                     	;# 
  4194  008C                     	;# 
  4195  008D                     	;# 
  4196  008E                     	;# 
  4197  008E                     	;# 
  4198  008F                     	;# 
  4199  0090                     	;# 
  4200  0090                     	;# 
  4201  0091                     	;# 
  4202  0093                     	;# 
  4203  0094                     	;# 
  4204  0095                     	;# 
  4205  0096                     	;# 
  4206  0097                     	;# 
  4207  0098                     	;# 
  4208  0099                     	;# 
  4209  009A                     	;# 
  4210  009B                     	;# 
  4211  009C                     	;# 
  4212  009D                     	;# 
  4213  009E                     	;# 
  4214  010C                     	;# 
  4215  010D                     	;# 
  4216  010E                     	;# 
  4217  010E                     	;# 
  4218  010F                     	;# 
  4219  0110                     	;# 
  4220  0110                     	;# 
  4221  0111                     	;# 
  4222  0112                     	;# 
  4223  0112                     	;# 
  4224  0113                     	;# 
  4225  0114                     	;# 
  4226  0114                     	;# 
  4227  0115                     	;# 
  4228  0116                     	;# 
  4229  0116                     	;# 
  4230  0117                     	;# 
  4231  0119                     	;# 
  4232  0119                     	;# 
  4233  0119                     	;# 
  4234  011A                     	;# 
  4235  011A                     	;# 
  4236  011A                     	;# 
  4237  011B                     	;# 
  4238  011B                     	;# 
  4239  011B                     	;# 
  4240  011B                     	;# 
  4241  011B                     	;# 
  4242  011C                     	;# 
  4243  011C                     	;# 
  4244  011C                     	;# 
  4245  011D                     	;# 
  4246  011D                     	;# 
  4247  011D                     	;# 
  4248  011E                     	;# 
  4249  011E                     	;# 
  4250  011E                     	;# 
  4251  011F                     	;# 
  4252  011F                     	;# 
  4253  011F                     	;# 
  4254  011F                     	;# 
  4255  011F                     	;# 
  4256  018C                     	;# 
  4257  018D                     	;# 
  4258  018E                     	;# 
  4259  018F                     	;# 
  4260  0190                     	;# 
  4261  0191                     	;# 
  4262  0192                     	;# 
  4263  0196                     	;# 
  4264  0197                     	;# 
  4265  0198                     	;# 
  4266  0199                     	;# 
  4267  019A                     	;# 
  4268  019B                     	;# 
  4269  019C                     	;# 
  4270  020C                     	;# 
  4271  020D                     	;# 
  4272  020E                     	;# 
  4273  020F                     	;# 
  4274  020F                     	;# 
  4275  0210                     	;# 
  4276  0210                     	;# 
  4277  0211                     	;# 
  4278  0211                     	;# 
  4279  0212                     	;# 
  4280  0213                     	;# 
  4281  0214                     	;# 
  4282  0215                     	;# 
  4283  0215                     	;# 
  4284  0216                     	;# 
  4285  0216                     	;# 
  4286  0217                     	;# 
  4287  0217                     	;# 
  4288  0218                     	;# 
  4289  0219                     	;# 
  4290  021A                     	;# 
  4291  021B                     	;# 
  4292  021B                     	;# 
  4293  021C                     	;# 
  4294  021C                     	;# 
  4295  021D                     	;# 
  4296  021D                     	;# 
  4297  021E                     	;# 
  4298  021F                     	;# 
  4299  028C                     	;# 
  4300  028C                     	;# 
  4301  028D                     	;# 
  4302  028D                     	;# 
  4303  028E                     	;# 
  4304  028F                     	;# 
  4305  0290                     	;# 
  4306  0290                     	;# 
  4307  0291                     	;# 
  4308  0292                     	;# 
  4309  0292                     	;# 
  4310  0293                     	;# 
  4311  0293                     	;# 
  4312  0294                     	;# 
  4313  0295                     	;# 
  4314  0296                     	;# 
  4315  0296                     	;# 
  4316  0297                     	;# 
  4317  0298                     	;# 
  4318  0298                     	;# 
  4319  0299                     	;# 
  4320  0299                     	;# 
  4321  029A                     	;# 
  4322  029B                     	;# 
  4323  029C                     	;# 
  4324  029C                     	;# 
  4325  029D                     	;# 
  4326  030C                     	;# 
  4327  030C                     	;# 
  4328  030D                     	;# 
  4329  030E                     	;# 
  4330  030F                     	;# 
  4331  0310                     	;# 
  4332  0310                     	;# 
  4333  0311                     	;# 
  4334  0312                     	;# 
  4335  0313                     	;# 
  4336  0314                     	;# 
  4337  0314                     	;# 
  4338  0315                     	;# 
  4339  0316                     	;# 
  4340  0317                     	;# 
  4341  0318                     	;# 
  4342  0318                     	;# 
  4343  0319                     	;# 
  4344  031A                     	;# 
  4345  031B                     	;# 
  4346  031C                     	;# 
  4347  031C                     	;# 
  4348  031D                     	;# 
  4349  031E                     	;# 
  4350  031F                     	;# 
  4351  038C                     	;# 
  4352  038D                     	;# 
  4353  038E                     	;# 
  4354  0390                     	;# 
  4355  0391                     	;# 
  4356  0392                     	;# 
  4357  040C                     	;# 
  4358  040D                     	;# 
  4359  040E                     	;# 
  4360  040F                     	;# 
  4361  0410                     	;# 
  4362  0411                     	;# 
  4363  0416                     	;# 
  4364  0416                     	;# 
  4365  0417                     	;# 
  4366  0418                     	;# 
  4367  0418                     	;# 
  4368  0419                     	;# 
  4369  041A                     	;# 
  4370  041A                     	;# 
  4371  041B                     	;# 
  4372  041C                     	;# 
  4373  041C                     	;# 
  4374  041D                     	;# 
  4375  041E                     	;# 
  4376  041F                     	;# 
  4377  048C                     	;# 
  4378  048C                     	;# 
  4379  048D                     	;# 
  4380  048E                     	;# 
  4381  048F                     	;# 
  4382  048F                     	;# 
  4383  0490                     	;# 
  4384  0491                     	;# 
  4385  0492                     	;# 
  4386  0492                     	;# 
  4387  0493                     	;# 
  4388  0494                     	;# 
  4389  0495                     	;# 
  4390  0495                     	;# 
  4391  0496                     	;# 
  4392  0497                     	;# 
  4393  0498                     	;# 
  4394  0499                     	;# 
  4395  049A                     	;# 
  4396  049B                     	;# 
  4397  049C                     	;# 
  4398  049D                     	;# 
  4399  050C                     	;# 
  4400  050C                     	;# 
  4401  050D                     	;# 
  4402  050E                     	;# 
  4403  050F                     	;# 
  4404  050F                     	;# 
  4405  0510                     	;# 
  4406  0511                     	;# 
  4407  0512                     	;# 
  4408  0512                     	;# 
  4409  0513                     	;# 
  4410  0514                     	;# 
  4411  0515                     	;# 
  4412  0515                     	;# 
  4413  0516                     	;# 
  4414  0517                     	;# 
  4415  0518                     	;# 
  4416  0519                     	;# 
  4417  051A                     	;# 
  4418  051B                     	;# 
  4419  051C                     	;# 
  4420  051D                     	;# 
  4421  058C                     	;# 
  4422  058C                     	;# 
  4423  058D                     	;# 
  4424  058E                     	;# 
  4425  058F                     	;# 
  4426  058F                     	;# 
  4427  0590                     	;# 
  4428  0591                     	;# 
  4429  0592                     	;# 
  4430  0593                     	;# 
  4431  060C                     	;# 
  4432  060D                     	;# 
  4433  060E                     	;# 
  4434  060F                     	;# 
  4435  0610                     	;# 
  4436  0611                     	;# 
  4437  0612                     	;# 
  4438  0613                     	;# 
  4439  0614                     	;# 
  4440  0616                     	;# 
  4441  0617                     	;# 
  4442  0618                     	;# 
  4443  0619                     	;# 
  4444  061A                     	;# 
  4445  061B                     	;# 
  4446  061C                     	;# 
  4447  061D                     	;# 
  4448  061E                     	;# 
  4449  068C                     	;# 
  4450  068D                     	;# 
  4451  068E                     	;# 
  4452  068F                     	;# 
  4453  0690                     	;# 
  4454  0691                     	;# 
  4455  0692                     	;# 
  4456  0693                     	;# 
  4457  0694                     	;# 
  4458  070C                     	;# 
  4459  070D                     	;# 
  4460  070E                     	;# 
  4461  070F                     	;# 
  4462  0710                     	;# 
  4463  0711                     	;# 
  4464  0712                     	;# 
  4465  0713                     	;# 
  4466  0714                     	;# 
  4467  0716                     	;# 
  4468  0717                     	;# 
  4469  0718                     	;# 
  4470  0719                     	;# 
  4471  071A                     	;# 
  4472  071B                     	;# 
  4473  071C                     	;# 
  4474  071D                     	;# 
  4475  071E                     	;# 
  4476  0796                     	;# 
  4477  0797                     	;# 
  4478  0798                     	;# 
  4479  0799                     	;# 
  4480  079A                     	;# 
  4481  079B                     	;# 
  4482  080C                     	;# 
  4483  080D                     	;# 
  4484  080E                     	;# 
  4485  080F                     	;# 
  4486  0810                     	;# 
  4487  0811                     	;# 
  4488  0812                     	;# 
  4489  0813                     	;# 
  4490  0814                     	;# 
  4491  081A                     	;# 
  4492  081B                     	;# 
  4493  081C                     	;# 
  4494  081D                     	;# 
  4495  081E                     	;# 
  4496  081F                     	;# 
  4497  088C                     	;# 
  4498  088D                     	;# 
  4499  088E                     	;# 
  4500  088F                     	;# 
  4501  0890                     	;# 
  4502  0891                     	;# 
  4503  0892                     	;# 
  4504  0893                     	;# 
  4505  0895                     	;# 
  4506  0896                     	;# 
  4507  0897                     	;# 
  4508  0898                     	;# 
  4509  0899                     	;# 
  4510  089A                     	;# 
  4511  089B                     	;# 
  4512  090C                     	;# 
  4513  090E                     	;# 
  4514  090F                     	;# 
  4515  091F                     	;# 
  4516  091F                     	;# 
  4517  098F                     	;# 
  4518  098F                     	;# 
  4519  0990                     	;# 
  4520  0991                     	;# 
  4521  0992                     	;# 
  4522  0993                     	;# 
  4523  0994                     	;# 
  4524  0995                     	;# 
  4525  0996                     	;# 
  4526  0997                     	;# 
  4527  0E0F                     	;# 
  4528  0E10                     	;# 
  4529  0E11                     	;# 
  4530  0E12                     	;# 
  4531  0E13                     	;# 
  4532  0E14                     	;# 
  4533  0E15                     	;# 
  4534  0E16                     	;# 
  4535  0E17                     	;# 
  4536  0E18                     	;# 
  4537  0E19                     	;# 
  4538  0E1A                     	;# 
  4539  0E1B                     	;# 
  4540  0E1C                     	;# 
  4541  0E1D                     	;# 
  4542  0E1E                     	;# 
  4543  0E1F                     	;# 
  4544  0E20                     	;# 
  4545  0E21                     	;# 
  4546  0E22                     	;# 
  4547  0E23                     	;# 
  4548  0E24                     	;# 
  4549  0E25                     	;# 
  4550  0E26                     	;# 
  4551  0E27                     	;# 
  4552  0E28                     	;# 
  4553  0E29                     	;# 
  4554  0E2A                     	;# 
  4555  0E2B                     	;# 
  4556  0E2C                     	;# 
  4557  0E2D                     	;# 
  4558  0E2E                     	;# 
  4559  0E2F                     	;# 
  4560  0E30                     	;# 
  4561  0E31                     	;# 
  4562  0E32                     	;# 
  4563  0E33                     	;# 
  4564  0E34                     	;# 
  4565  0E35                     	;# 
  4566  0E36                     	;# 
  4567  0E37                     	;# 
  4568  0E8F                     	;# 
  4569  0E90                     	;# 
  4570  0E91                     	;# 
  4571  0E92                     	;# 
  4572  0E93                     	;# 
  4573  0E94                     	;# 
  4574  0E95                     	;# 
  4575  0E96                     	;# 
  4576  0E97                     	;# 
  4577  0E9C                     	;# 
  4578  0E9D                     	;# 
  4579  0E9E                     	;# 
  4580  0EA1                     	;# 
  4581  0EA2                     	;# 
  4582  0EA3                     	;# 
  4583  0EA4                     	;# 
  4584  0EA5                     	;# 
  4585  0EA9                     	;# 
  4586  0EAA                     	;# 
  4587  0EAB                     	;# 
  4588  0EAC                     	;# 
  4589  0EB1                     	;# 
  4590  0EB2                     	;# 
  4591  0EB3                     	;# 
  4592  0EB8                     	;# 
  4593  0EB9                     	;# 
  4594  0EBA                     	;# 
  4595  0EBB                     	;# 
  4596  0EBC                     	;# 
  4597  0EBD                     	;# 
  4598  0EBE                     	;# 
  4599  0EC3                     	;# 
  4600  0EC5                     	;# 
  4601  0EC6                     	;# 
  4602  0EC7                     	;# 
  4603  0EC8                     	;# 
  4604  0EC9                     	;# 
  4605  0ECA                     	;# 
  4606  0ECB                     	;# 
  4607  0ECC                     	;# 
  4608  0F10                     	;# 
  4609  0F11                     	;# 
  4610  0F12                     	;# 
  4611  0F13                     	;# 
  4612  0F14                     	;# 
  4613  0F15                     	;# 
  4614  0F16                     	;# 
  4615  0F17                     	;# 
  4616  0F18                     	;# 
  4617  0F19                     	;# 
  4618  0F1A                     	;# 
  4619  0F1B                     	;# 
  4620  0F1C                     	;# 
  4621  0F1D                     	;# 
  4622  0F1E                     	;# 
  4623  0F1F                     	;# 
  4624  0F20                     	;# 
  4625  0F21                     	;# 
  4626  0F22                     	;# 
  4627  0F23                     	;# 
  4628  0F24                     	;# 
  4629  0F25                     	;# 
  4630  0F26                     	;# 
  4631  0F27                     	;# 
  4632  0F38                     	;# 
  4633  0F39                     	;# 
  4634  0F3A                     	;# 
  4635  0F3B                     	;# 
  4636  0F3C                     	;# 
  4637  0F3D                     	;# 
  4638  0F3E                     	;# 
  4639  0F3F                     	;# 
  4640  0F40                     	;# 
  4641  0F41                     	;# 
  4642  0F43                     	;# 
  4643  0F44                     	;# 
  4644  0F45                     	;# 
  4645  0F46                     	;# 
  4646  0F47                     	;# 
  4647  0F48                     	;# 
  4648  0F49                     	;# 
  4649  0F4A                     	;# 
  4650  0F4B                     	;# 
  4651  0F4C                     	;# 
  4652  0F4E                     	;# 
  4653  0F4F                     	;# 
  4654  0F50                     	;# 
  4655  0F51                     	;# 
  4656  0F52                     	;# 
  4657  0F53                     	;# 
  4658  0F54                     	;# 
  4659  0F55                     	;# 
  4660  0F56                     	;# 
  4661  0F57                     	;# 
  4662  0F65                     	;# 
  4663  0F68                     	;# 
  4664  0F69                     	;# 
  4665  0F6A                     	;# 
  4666  0F6B                     	;# 
  4667  0FE4                     	;# 
  4668  0FE5                     	;# 
  4669  0FE6                     	;# 
  4670  0FE7                     	;# 
  4671  0FE8                     	;# 
  4672  0FE9                     	;# 
  4673  0FEA                     	;# 
  4674  0FEB                     	;# 
  4675  0FED                     	;# 
  4676  0FEE                     	;# 
  4677  0FEF                     	;# 
  4678  0000                     	;# 
  4679  0001                     	;# 
  4680  0002                     	;# 
  4681  0003                     	;# 
  4682  0004                     	;# 
  4683  0005                     	;# 
  4684  0006                     	;# 
  4685  0007                     	;# 
  4686  0008                     	;# 
  4687  0009                     	;# 
  4688  000A                     	;# 
  4689  000B                     	;# 
  4690  000C                     	;# 
  4691  000D                     	;# 
  4692  000E                     	;# 
  4693  0010                     	;# 
  4694  0011                     	;# 
  4695  0012                     	;# 
  4696  0013                     	;# 
  4697  0016                     	;# 
  4698  0017                     	;# 
  4699  0018                     	;# 
  4700  001C                     	;# 
  4701  001C                     	;# 
  4702  001D                     	;# 
  4703  001D                     	;# 
  4704  001E                     	;# 
  4705  001F                     	;# 
  4706  008C                     	;# 
  4707  008C                     	;# 
  4708  008D                     	;# 
  4709  008E                     	;# 
  4710  008E                     	;# 
  4711  008F                     	;# 
  4712  0090                     	;# 
  4713  0090                     	;# 
  4714  0091                     	;# 
  4715  0093                     	;# 
  4716  0094                     	;# 
  4717  0095                     	;# 
  4718  0096                     	;# 
  4719  0097                     	;# 
  4720  0098                     	;# 
  4721  0099                     	;# 
  4722  009A                     	;# 
  4723  009B                     	;# 
  4724  009C                     	;# 
  4725  009D                     	;# 
  4726  009E                     	;# 
  4727  010C                     	;# 
  4728  010D                     	;# 
  4729  010E                     	;# 
  4730  010E                     	;# 
  4731  010F                     	;# 
  4732  0110                     	;# 
  4733  0110                     	;# 
  4734  0111                     	;# 
  4735  0112                     	;# 
  4736  0112                     	;# 
  4737  0113                     	;# 
  4738  0114                     	;# 
  4739  0114                     	;# 
  4740  0115                     	;# 
  4741  0116                     	;# 
  4742  0116                     	;# 
  4743  0117                     	;# 
  4744  0119                     	;# 
  4745  0119                     	;# 
  4746  0119                     	;# 
  4747  011A                     	;# 
  4748  011A                     	;# 
  4749  011A                     	;# 
  4750  011B                     	;# 
  4751  011B                     	;# 
  4752  011B                     	;# 
  4753  011B                     	;# 
  4754  011B                     	;# 
  4755  011C                     	;# 
  4756  011C                     	;# 
  4757  011C                     	;# 
  4758  011D                     	;# 
  4759  011D                     	;# 
  4760  011D                     	;# 
  4761  011E                     	;# 
  4762  011E                     	;# 
  4763  011E                     	;# 
  4764  011F                     	;# 
  4765  011F                     	;# 
  4766  011F                     	;# 
  4767  011F                     	;# 
  4768  011F                     	;# 
  4769  018C                     	;# 
  4770  018D                     	;# 
  4771  018E                     	;# 
  4772  018F                     	;# 
  4773  0190                     	;# 
  4774  0191                     	;# 
  4775  0192                     	;# 
  4776  0196                     	;# 
  4777  0197                     	;# 
  4778  0198                     	;# 
  4779  0199                     	;# 
  4780  019A                     	;# 
  4781  019B                     	;# 
  4782  019C                     	;# 
  4783  020C                     	;# 
  4784  020D                     	;# 
  4785  020E                     	;# 
  4786  020F                     	;# 
  4787  020F                     	;# 
  4788  0210                     	;# 
  4789  0210                     	;# 
  4790  0211                     	;# 
  4791  0211                     	;# 
  4792  0212                     	;# 
  4793  0213                     	;# 
  4794  0214                     	;# 
  4795  0215                     	;# 
  4796  0215                     	;# 
  4797  0216                     	;# 
  4798  0216                     	;# 
  4799  0217                     	;# 
  4800  0217                     	;# 
  4801  0218                     	;# 
  4802  0219                     	;# 
  4803  021A                     	;# 
  4804  021B                     	;# 
  4805  021B                     	;# 
  4806  021C                     	;# 
  4807  021C                     	;# 
  4808  021D                     	;# 
  4809  021D                     	;# 
  4810  021E                     	;# 
  4811  021F                     	;# 
  4812  028C                     	;# 
  4813  028C                     	;# 
  4814  028D                     	;# 
  4815  028D                     	;# 
  4816  028E                     	;# 
  4817  028F                     	;# 
  4818  0290                     	;# 
  4819  0290                     	;# 
  4820  0291                     	;# 
  4821  0292                     	;# 
  4822  0292                     	;# 
  4823  0293                     	;# 
  4824  0293                     	;# 
  4825  0294                     	;# 
  4826  0295                     	;# 
  4827  0296                     	;# 
  4828  0296                     	;# 
  4829  0297                     	;# 
  4830  0298                     	;# 
  4831  0298                     	;# 
  4832  0299                     	;# 
  4833  0299                     	;# 
  4834  029A                     	;# 
  4835  029B                     	;# 
  4836  029C                     	;# 
  4837  029C                     	;# 
  4838  029D                     	;# 
  4839  030C                     	;# 
  4840  030C                     	;# 
  4841  030D                     	;# 
  4842  030E                     	;# 
  4843  030F                     	;# 
  4844  0310                     	;# 
  4845  0310                     	;# 
  4846  0311                     	;# 
  4847  0312                     	;# 
  4848  0313                     	;# 
  4849  0314                     	;# 
  4850  0314                     	;# 
  4851  0315                     	;# 
  4852  0316                     	;# 
  4853  0317                     	;# 
  4854  0318                     	;# 
  4855  0318                     	;# 
  4856  0319                     	;# 
  4857  031A                     	;# 
  4858  031B                     	;# 
  4859  031C                     	;# 
  4860  031C                     	;# 
  4861  031D                     	;# 
  4862  031E                     	;# 
  4863  031F                     	;# 
  4864  038C                     	;# 
  4865  038D                     	;# 
  4866  038E                     	;# 
  4867  0390                     	;# 
  4868  0391                     	;# 
  4869  0392                     	;# 
  4870  040C                     	;# 
  4871  040D                     	;# 
  4872  040E                     	;# 
  4873  040F                     	;# 
  4874  0410                     	;# 
  4875  0411                     	;# 
  4876  0416                     	;# 
  4877  0416                     	;# 
  4878  0417                     	;# 
  4879  0418                     	;# 
  4880  0418                     	;# 
  4881  0419                     	;# 
  4882  041A                     	;# 
  4883  041A                     	;# 
  4884  041B                     	;# 
  4885  041C                     	;# 
  4886  041C                     	;# 
  4887  041D                     	;# 
  4888  041E                     	;# 
  4889  041F                     	;# 
  4890  048C                     	;# 
  4891  048C                     	;# 
  4892  048D                     	;# 
  4893  048E                     	;# 
  4894  048F                     	;# 
  4895  048F                     	;# 
  4896  0490                     	;# 
  4897  0491                     	;# 
  4898  0492                     	;# 
  4899  0492                     	;# 
  4900  0493                     	;# 
  4901  0494                     	;# 
  4902  0495                     	;# 
  4903  0495                     	;# 
  4904  0496                     	;# 
  4905  0497                     	;# 
  4906  0498                     	;# 
  4907  0499                     	;# 
  4908  049A                     	;# 
  4909  049B                     	;# 
  4910  049C                     	;# 
  4911  049D                     	;# 
  4912  050C                     	;# 
  4913  050C                     	;# 
  4914  050D                     	;# 
  4915  050E                     	;# 
  4916  050F                     	;# 
  4917  050F                     	;# 
  4918  0510                     	;# 
  4919  0511                     	;# 
  4920  0512                     	;# 
  4921  0512                     	;# 
  4922  0513                     	;# 
  4923  0514                     	;# 
  4924  0515                     	;# 
  4925  0515                     	;# 
  4926  0516                     	;# 
  4927  0517                     	;# 
  4928  0518                     	;# 
  4929  0519                     	;# 
  4930  051A                     	;# 
  4931  051B                     	;# 
  4932  051C                     	;# 
  4933  051D                     	;# 
  4934  058C                     	;# 
  4935  058C                     	;# 
  4936  058D                     	;# 
  4937  058E                     	;# 
  4938  058F                     	;# 
  4939  058F                     	;# 
  4940  0590                     	;# 
  4941  0591                     	;# 
  4942  0592                     	;# 
  4943  0593                     	;# 
  4944  060C                     	;# 
  4945  060D                     	;# 
  4946  060E                     	;# 
  4947  060F                     	;# 
  4948  0610                     	;# 
  4949  0611                     	;# 
  4950  0612                     	;# 
  4951  0613                     	;# 
  4952  0614                     	;# 
  4953  0616                     	;# 
  4954  0617                     	;# 
  4955  0618                     	;# 
  4956  0619                     	;# 
  4957  061A                     	;# 
  4958  061B                     	;# 
  4959  061C                     	;# 
  4960  061D                     	;# 
  4961  061E                     	;# 
  4962  068C                     	;# 
  4963  068D                     	;# 
  4964  068E                     	;# 
  4965  068F                     	;# 
  4966  0690                     	;# 
  4967  0691                     	;# 
  4968  0692                     	;# 
  4969  0693                     	;# 
  4970  0694                     	;# 
  4971  070C                     	;# 
  4972  070D                     	;# 
  4973  070E                     	;# 
  4974  070F                     	;# 
  4975  0710                     	;# 
  4976  0711                     	;# 
  4977  0712                     	;# 
  4978  0713                     	;# 
  4979  0714                     	;# 
  4980  0716                     	;# 
  4981  0717                     	;# 
  4982  0718                     	;# 
  4983  0719                     	;# 
  4984  071A                     	;# 
  4985  071B                     	;# 
  4986  071C                     	;# 
  4987  071D                     	;# 
  4988  071E                     	;# 
  4989  0796                     	;# 
  4990  0797                     	;# 
  4991  0798                     	;# 
  4992  0799                     	;# 
  4993  079A                     	;# 
  4994  079B                     	;# 
  4995  080C                     	;# 
  4996  080D                     	;# 
  4997  080E                     	;# 
  4998  080F                     	;# 
  4999  0810                     	;# 
  5000  0811                     	;# 
  5001  0812                     	;# 
  5002  0813                     	;# 
  5003  0814                     	;# 
  5004  081A                     	;# 
  5005  081B                     	;# 
  5006  081C                     	;# 
  5007  081D                     	;# 
  5008  081E                     	;# 
  5009  081F                     	;# 
  5010  088C                     	;# 
  5011  088D                     	;# 
  5012  088E                     	;# 
  5013  088F                     	;# 
  5014  0890                     	;# 
  5015  0891                     	;# 
  5016  0892                     	;# 
  5017  0893                     	;# 
  5018  0895                     	;# 
  5019  0896                     	;# 
  5020  0897                     	;# 
  5021  0898                     	;# 
  5022  0899                     	;# 
  5023  089A                     	;# 
  5024  089B                     	;# 
  5025  090C                     	;# 
  5026  090E                     	;# 
  5027  090F                     	;# 
  5028  091F                     	;# 
  5029  091F                     	;# 
  5030  098F                     	;# 
  5031  098F                     	;# 
  5032  0990                     	;# 
  5033  0991                     	;# 
  5034  0992                     	;# 
  5035  0993                     	;# 
  5036  0994                     	;# 
  5037  0995                     	;# 
  5038  0996                     	;# 
  5039  0997                     	;# 
  5040  0E0F                     	;# 
  5041  0E10                     	;# 
  5042  0E11                     	;# 
  5043  0E12                     	;# 
  5044  0E13                     	;# 
  5045  0E14                     	;# 
  5046  0E15                     	;# 
  5047  0E16                     	;# 
  5048  0E17                     	;# 
  5049  0E18                     	;# 
  5050  0E19                     	;# 
  5051  0E1A                     	;# 
  5052  0E1B                     	;# 
  5053  0E1C                     	;# 
  5054  0E1D                     	;# 
  5055  0E1E                     	;# 
  5056  0E1F                     	;# 
  5057  0E20                     	;# 
  5058  0E21                     	;# 
  5059  0E22                     	;# 
  5060  0E23                     	;# 
  5061  0E24                     	;# 
  5062  0E25                     	;# 
  5063  0E26                     	;# 
  5064  0E27                     	;# 
  5065  0E28                     	;# 
  5066  0E29                     	;# 
  5067  0E2A                     	;# 
  5068  0E2B                     	;# 
  5069  0E2C                     	;# 
  5070  0E2D                     	;# 
  5071  0E2E                     	;# 
  5072  0E2F                     	;# 
  5073  0E30                     	;# 
  5074  0E31                     	;# 
  5075  0E32                     	;# 
  5076  0E33                     	;# 
  5077  0E34                     	;# 
  5078  0E35                     	;# 
  5079  0E36                     	;# 
  5080  0E37                     	;# 
  5081  0E8F                     	;# 
  5082  0E90                     	;# 
  5083  0E91                     	;# 
  5084  0E92                     	;# 
  5085  0E93                     	;# 
  5086  0E94                     	;# 
  5087  0E95                     	;# 
  5088  0E96                     	;# 
  5089  0E97                     	;# 
  5090  0E9C                     	;# 
  5091  0E9D                     	;# 
  5092  0E9E                     	;# 
  5093  0EA1                     	;# 
  5094  0EA2                     	;# 
  5095  0EA3                     	;# 
  5096  0EA4                     	;# 
  5097  0EA5                     	;# 
  5098  0EA9                     	;# 
  5099  0EAA                     	;# 
  5100  0EAB                     	;# 
  5101  0EAC                     	;# 
  5102  0EB1                     	;# 
  5103  0EB2                     	;# 
  5104  0EB3                     	;# 
  5105  0EB8                     	;# 
  5106  0EB9                     	;# 
  5107  0EBA                     	;# 
  5108  0EBB                     	;# 
  5109  0EBC                     	;# 
  5110  0EBD                     	;# 
  5111  0EBE                     	;# 
  5112  0EC3                     	;# 
  5113  0EC5                     	;# 
  5114  0EC6                     	;# 
  5115  0EC7                     	;# 
  5116  0EC8                     	;# 
  5117  0EC9                     	;# 
  5118  0ECA                     	;# 
  5119  0ECB                     	;# 
  5120  0ECC                     	;# 
  5121  0F10                     	;# 
  5122  0F11                     	;# 
  5123  0F12                     	;# 
  5124  0F13                     	;# 
  5125  0F14                     	;# 
  5126  0F15                     	;# 
  5127  0F16                     	;# 
  5128  0F17                     	;# 
  5129  0F18                     	;# 
  5130  0F19                     	;# 
  5131  0F1A                     	;# 
  5132  0F1B                     	;# 
  5133  0F1C                     	;# 
  5134  0F1D                     	;# 
  5135  0F1E                     	;# 
  5136  0F1F                     	;# 
  5137  0F20                     	;# 
  5138  0F21                     	;# 
  5139  0F22                     	;# 
  5140  0F23                     	;# 
  5141  0F24                     	;# 
  5142  0F25                     	;# 
  5143  0F26                     	;# 
  5144  0F27                     	;# 
  5145  0F38                     	;# 
  5146  0F39                     	;# 
  5147  0F3A                     	;# 
  5148  0F3B                     	;# 
  5149  0F3C                     	;# 
  5150  0F3D                     	;# 
  5151  0F3E                     	;# 
  5152  0F3F                     	;# 
  5153  0F40                     	;# 
  5154  0F41                     	;# 
  5155  0F43                     	;# 
  5156  0F44                     	;# 
  5157  0F45                     	;# 
  5158  0F46                     	;# 
  5159  0F47                     	;# 
  5160  0F48                     	;# 
  5161  0F49                     	;# 
  5162  0F4A                     	;# 
  5163  0F4B                     	;# 
  5164  0F4C                     	;# 
  5165  0F4E                     	;# 
  5166  0F4F                     	;# 
  5167  0F50                     	;# 
  5168  0F51                     	;# 
  5169  0F52                     	;# 
  5170  0F53                     	;# 
  5171  0F54                     	;# 
  5172  0F55                     	;# 
  5173  0F56                     	;# 
  5174  0F57                     	;# 
  5175  0F65                     	;# 
  5176  0F68                     	;# 
  5177  0F69                     	;# 
  5178  0F6A                     	;# 
  5179  0F6B                     	;# 
  5180  0FE4                     	;# 
  5181  0FE5                     	;# 
  5182  0FE6                     	;# 
  5183  0FE7                     	;# 
  5184  0FE8                     	;# 
  5185  0FE9                     	;# 
  5186  0FEA                     	;# 
  5187  0FEB                     	;# 
  5188  0FED                     	;# 
  5189  0FEE                     	;# 
  5190  0FEF                     	;_samples
  5191                           
  5192                           	psect	idataBANK1
  5193  0000'                    __pidataBANK1:	
  5194                           
  5195                           ;initializer for _Kd
  5196  0000' 3401               	retlw	1
  5197  0001' 3400               	retlw	0
  5198                           
  5199                           ;initializer for _Ki
  5200  0002' 3401               	retlw	1
  5201  0003' 3400               	retlw	0
  5202                           
  5203                           ;initializer for _Kp
  5204  0004' 3404               	retlw	4
  5205  0005' 3400               	retlw	0
  5206                           
  5207                           	psect	idataBANK3
  5208  0000'                    __pidataBANK3:	
  5209                           
  5210                           ;initializer for ___cgram
  5211  0000' 340C               	retlw	12
  5212  0001' 3412               	retlw	18
  5213  0002' 3412               	retlw	18
  5214  0003' 340C               	retlw	12
  5215  0004' 3400               	retlw	0
  5216  0005' 3400               	retlw	0
  5217  0006' 3400               	retlw	0
  5218  0007' 3400               	retlw	0
  5219  0008' 3408               	retlw	8
  5220  0009' 3404               	retlw	4
  5221  000A' 3402               	retlw	2
  5222  000B' 341F               	retlw	31
  5223  000C' 3402               	retlw	2
  5224  000D' 3404               	retlw	4
  5225  000E' 3408               	retlw	8
  5226  000F' 3400               	retlw	0
  5227                           
  5228                           ;initializer for _rangeSet
  5229  0010' 344B               	retlw	75
  5230  0011' 3400               	retlw	0
  5231  0012' 3413               	retlw	19
  5232  0013' 3401               	retlw	1
  5233  0014' 3400               	retlw	0
  5234  0015' 3400               	retlw	0
  5235  0016' 34FF               	retlw	255
  5236  0017' 3403               	retlw	3
  5237                           
  5238                           ;initializer for _channels
  5239  0018' 3401               	retlw	1
  5240  0019' 3400               	retlw	0
  5241  001A' 3403               	retlw	3
  5242  001B' 3400               	retlw	0
  5243                           
  5244                           ;initializer for _pidMaxOutput
  5245  001C' 34FF               	retlw	255
  5246  001D' 3407               	retlw	7
  5247                           
  5248                           	psect	stringtext
  5249  0000'                    __pstringtext:	
  5250  0000'                    log@coeff:	
  5251  0000' 3400               	retlw	0
  5252  0001' 3400               	retlw	0
  5253  0002' 3400               	retlw	0
  5254  0003' 3400               	retlw	0
  5255  0004' 3480               	retlw	128
  5256  0005' 343F               	retlw	63
  5257  0006' 34F0               	retlw	240
  5258  0007' 34FF               	retlw	255
  5259  0008' 34BE               	retlw	190
  5260  0009' 34E2               	retlw	226
  5261  000A' 34A9               	retlw	169
  5262  000B' 343E               	retlw	62
  5263  000C' 3483               	retlw	131
  5264  000D' 3476               	retlw	118
  5265  000E' 34BE               	retlw	190
  5266  000F' 34AE               	retlw	174
  5267  0010' 342B               	retlw	43
  5268  0011' 343E               	retlw	62
  5269  0012' 343C               	retlw	60
  5270  0013' 34C3               	retlw	195
  5271  0014' 34BD               	retlw	189
  5272  0015' 34D2               	retlw	210
  5273  0016' 3413               	retlw	19
  5274  0017' 343D               	retlw	61
  5275  0018' 3478               	retlw	120
  5276  0019' 34D3               	retlw	211
  5277  001A' 34BB               	retlw	187
  5278  001B'                    __end_oflog@coeff:	
  5279  0016                     _LATA	set	22
  5280  0017                     _LATB	set	23
  5281  0018                     _LATC	set	24
  5282  0011                     _TRISA	set	17
  5283  0012                     _TRISB	set	18
  5284  0013                     _TRISC	set	19
  5285  005F                     _GIE	set	95
  5286  00C2                     _LATC2	set	194
  5287  0060                     _RA0	set	96
  5288  0062                     _RA2	set	98
  5289  0066                     _RA6	set	102
  5290  0067                     _RA7	set	103
  5291  0068                     _RB0	set	104
  5292  0069                     _RB1	set	105
  5293  006A                     _RB2	set	106
  5294  0070                     _RC0	set	112
  5295  0071                     _RC1	set	113
  5296  009D                     _ADACQ	set	157
  5297  0099                     _ADACT	set	153
  5298  009B                     _ADCAP	set	155
  5299  0098                     _ADCLK	set	152
  5300  0093                     _ADCON0	set	147
  5301  0093                     _ADCON0bits	set	147
  5302  0094                     _ADCON1	set	148
  5303  0095                     _ADCON2	set	149
  5304  0096                     _ADCON3	set	150
  5305  009E                     _ADPCH	set	158
  5306  009C                     _ADPRE	set	156
  5307  009A                     _ADREF	set	154
  5308  008D                     _ADRESH	set	141
  5309  008C                     _ADRESL	set	140
  5310  0097                     _ADSTAT	set	151
  5311  010F                     _ADLTHH	set	271
  5312  010E                     _ADLTHL	set	270
  5313  010D                     _ADRPT	set	269
  5314  0113                     _ADSTPTH	set	275
  5315  0112                     _ADSTPTL	set	274
  5316  0111                     _ADUTHH	set	273
  5317  0110                     _ADUTHL	set	272
  5318  021F                     _CCPTMRS1bits	set	543
  5319  0290                     _T2CLKCON	set	656
  5320  028E                     _T2CON	set	654
  5321  028E                     _T2CONbits	set	654
  5322  028F                     _T2HLT	set	655
  5323  028D                     _T2PR	set	653
  5324  0291                     _T2RST	set	657
  5325  028C                     _T2TMR	set	652
  5326  0392                     _PWM7CON	set	914
  5327  0391                     _PWM7DCH	set	913
  5328  0390                     _PWM7DCL	set	912
  5329  0716                     _PIE0bits	set	1814
  5330  0710                     _PIR4bits	set	1808
  5331  088D                     _OSCCON1	set	2189
  5332  088F                     _OSCCON3	set	2191
  5333  0891                     _OSCEN	set	2193
  5334  0893                     _OSCFRQ	set	2195
  5335  0892                     _OSCTUNE	set	2194
  5336  090C                     _FVRCON	set	2316
  5337  0E8F                     _PPSLOCK	set	3727
  5338  0E8F                     _PPSLOCKbits	set	3727
  5339  0F38                     _ANSELA	set	3896
  5340  0F43                     _ANSELB	set	3907
  5341  0F4E                     _ANSELC	set	3918
  5342  0F23                     _RC3PPS	set	3875
  5343  0F39                     _WPUA	set	3897
  5344  0F44                     _WPUB	set	3908
  5345  0F4F                     _WPUC	set	3919
  5346  0F65                     _WPUE	set	3941
  5347  001B'                    STR_4:	
  5348  001B' 3420               	retlw	32	;' '
  5349  001C' 3420               	retlw	32	;' '
  5350  001D' 3450               	retlw	80	;'P'
  5351  001E' 3469               	retlw	105	;'i'
  5352  001F' 3474               	retlw	116	;'t'
  5353  0020' 3420               	retlw	32	;' '
  5354  0021' 3453               	retlw	83	;'S'
  5355  0022' 3465               	retlw	101	;'e'
  5356  0023' 3474               	retlw	116	;'t'
  5357  0024' 3470               	retlw	112	;'p'
  5358  0025' 346F               	retlw	111	;'o'
  5359  0026' 3469               	retlw	105	;'i'
  5360  0027' 346E               	retlw	110	;'n'
  5361  0028' 3474               	retlw	116	;'t'
  5362  0029' 3420               	retlw	32	;' '
  5363  002A' 3420               	retlw	32	;' '
  5364  002B' 3400               	retlw	0
  5365  002C'                    STR_3:	
  5366  002C' 3455               	retlw	85	;'U'
  5367  002D' 3470               	retlw	112	;'p'
  5368  002E' 342F               	retlw	47	;'/'
  5369  002F' 3444               	retlw	68	;'D'
  5370  0030' 346F               	retlw	111	;'o'
  5371  0031' 3477               	retlw	119	;'w'
  5372  0032' 346E               	retlw	110	;'n'
  5373  0033' 3420               	retlw	32	;' '
  5374  0034' 3474               	retlw	116	;'t'
  5375  0035' 346F               	retlw	111	;'o'
  5376  0036' 3420               	retlw	32	;' '
  5377  0037' 3453               	retlw	83	;'S'
  5378  0038' 3465               	retlw	101	;'e'
  5379  0039' 3474               	retlw	116	;'t'
  5380  003A' 343A               	retlw	58	;':'
  5381  003B' 3400               	retlw	0
  5382  003C'                    STR_2:	
  5383  003C' 344F               	retlw	79	;'O'
  5384  003D' 3475               	retlw	117	;'u'
  5385  003E' 3474               	retlw	116	;'t'
  5386  003F' 3470               	retlw	112	;'p'
  5387  0040' 3475               	retlw	117	;'u'
  5388  0041' 3474               	retlw	116	;'t'
  5389  0042' 343A               	retlw	58	;':'
  5390  0043' 3400               	retlw	0
  5391  0044'                    STR_1:	
  5392  0044' 3450               	retlw	80	;'P'
  5393  0045' 3469               	retlw	105	;'i'
  5394  0046' 3474               	retlw	116	;'t'
  5395  0047' 343A               	retlw	58	;':'
  5396  0048' 3400               	retlw	0
  5397                           
  5398                           ; #config settings
  5399  0000                     
  5400                           	psect	cinit
  5401  0000'                    start_initialization:	
  5402  0000'                    __initialization:		;BIGRAM
  5403                           
  5404                           ; Initialize objects allocated to BANK1
  5405  0000' 3000'              	movlw	low __pidataBANK1
  5406  0001' 0084               	movwf	4
  5407  0002' 3000'              	movlw	(high __pidataBANK1)| (0+128)
  5408  0003' 0085               	movwf	5
  5409  0004' 3000'              	movlw	low __pdataBANK1
  5410  0005' 0086               	movwf	6
  5411  0006' 3000'              	movlw	high __pdataBANK1
  5412  0007' 0087               	movwf	7
  5413  0008' 3000               	movlw	0
  5414  0009' 00FF               	movwf	btemp+1
  5415  000A' 3006               	movlw	6
  5416  000B' 3180' 2000' 3180'  	fcall	init_ram
  5417                           
  5418                           ; Initialize objects allocated to BANK3
  5419  000E' 3000'              	movlw	low __pidataBANK3
  5420  000F' 0084               	movwf	4
  5421  0010' 3000'              	movlw	(high __pidataBANK3)| (0+128)
  5422  0011' 0085               	movwf	5
  5423  0012' 3000'              	movlw	low __pdataBANK3
  5424  0013' 0086               	movwf	6
  5425  0014' 3000'              	movlw	high __pdataBANK3
  5426  0015' 0087               	movwf	7
  5427  0016' 3000               	movlw	0
  5428  0017' 00FF               	movwf	btemp+1
  5429  0018' 301E               	movlw	30
  5430  0019' 3180' 2000' 3180'  	fcall	init_ram
  5431                           
  5432                           ; Clear objects allocated to BIGRAM
  5433  001C' 3050               	movlw	low (0+9040)
  5434  001D' 0084               	movwf	4
  5435  001E' 3023               	movlw	high (0+9040)
  5436  001F' 0085               	movwf	5
  5437  0020' 30A0               	movlw	160
  5438  0021' 00FE               	movwf	btemp
  5439  0022' 3000               	movlw	0
  5440  0023' 00FF               	movwf	btemp+1
  5441  0024' 3180' 2000' 3180'  	fcall	clear_ram0
  5442                           
  5443                           ; Clear objects allocated to BANK1
  5444  0027' 3000'              	movlw	low __pbssBANK1
  5445  0028' 0084               	movwf	4
  5446  0029' 3000'              	movlw	high __pbssBANK1
  5447  002A' 0085               	movwf	5
  5448  002B' 301E               	movlw	30
  5449  002C' 00FE               	movwf	btemp
  5450  002D' 3000               	movlw	0
  5451  002E' 00FF               	movwf	btemp+1
  5452  002F' 3180' 2000' 3180'  	fcall	clear_ram0
  5453                           
  5454                           ; Clear objects allocated to BANK3
  5455  0032' 3000'              	movlw	low __pbssBANK3
  5456  0033' 0084               	movwf	4
  5457  0034' 3000'              	movlw	high __pbssBANK3
  5458  0035' 0085               	movwf	5
  5459  0036' 3011               	movlw	17
  5460  0037' 00FE               	movwf	btemp
  5461  0038' 3000               	movlw	0
  5462  0039' 00FF               	movwf	btemp+1
  5463  003A' 3180' 2000' 3180'  	fcall	clear_ram0
  5464                           
  5465                           ; Clear objects allocated to BANK4
  5466  003D' 3000'              	movlw	low __pbssBANK4
  5467  003E' 0084               	movwf	4
  5468  003F' 3000'              	movlw	high __pbssBANK4
  5469  0040' 0085               	movwf	5
  5470  0041' 3050               	movlw	80
  5471  0042' 00FE               	movwf	btemp
  5472  0043' 3000               	movlw	0
  5473  0044' 00FF               	movwf	btemp+1
  5474  0045' 3180' 2000'        	fcall	clear_ram0
  5475  0047'                    end_of_initialization:	
  5476                           ;End of C runtime variable initialization code
  5477                           
  5478  0047'                    __end_of__initialization:	
  5479  0047' 0020               	movlb	0
  5480  0048' 3180' 2800'        	ljmp	_main	;jump to C main() function
  5481                           
  5482                           	psect	bssBANK1
  5483  0000'                    __pbssBANK1:	
  5484  0000'                    _Result:	
  5485  0000'                    	ds	2
  5486  0002'                    _derivativeValue:	
  5487  0002'                    	ds	2
  5488  0004'                    _errno:	
  5489  0004'                    	ds	2
  5490  0006'                    _error:	
  5491  0006'                    	ds	2
  5492  0008'                    _errorValue:	
  5493  0008'                    	ds	2
  5494  000A'                    _lastSign:	
  5495  000A'                    	ds	2
  5496  000C'                    _pidCount:	
  5497  000C'                    	ds	2
  5498  000E'                    _pidIntegrated:	
  5499  000E'                    	ds	2
  5500  0010'                    _pidMinOutput:	
  5501  0010'                    	ds	2
  5502  0012'                    _pidPrevError:	
  5503  0012'                    	ds	2
  5504  0014'                    _sampleIndex:	
  5505  0014'                    	ds	2
  5506  0016'                    _signPositive:	
  5507  0016'                    	ds	2
  5508  0018'                    _timer:	
  5509  0018'                    	ds	2
  5510  001A'                    _delayCount:	
  5511  001A'                    	ds	1
  5512  001B'                    _key:	
  5513  001B'                    	ds	1
  5514  001C'                    _menuDelay:	
  5515  001C'                    	ds	1
  5516  001D'                    _testKey:	
  5517  001D'                    	ds	1
  5518                           
  5519                           	psect	dataBANK1
  5520  0000'                    __pdataBANK1:	
  5521  0000'                    _Kd:	
  5522  0000'                    	ds	2
  5523  0002'                    _Ki:	
  5524  0002'                    	ds	2
  5525  0004'                    _Kp:	
  5526  0004'                    	ds	2
  5527                           
  5528                           	psect	bssBANK3
  5529  0000'                    __pbssBANK3:	
  5530  0000'                    _totals:	
  5531  0000'                    	ds	8
  5532  0008'                    LCD_Write_Int@F13694:	
  5533  0008'                    	ds	5
  5534  000D'                    main@F13664:	
  5535  000D'                    	ds	4
  5536                           
  5537                           	psect	dataBANK3
  5538  0000'                    __pdataBANK3:	
  5539  0000'                    ___cgram:	
  5540  0000'                    	ds	16
  5541  0010'                    _rangeSet:	
  5542  0010'                    	ds	8
  5543  0018'                    _channels:	
  5544  0018'                    	ds	4
  5545  001C'                    _pidMaxOutput:	
  5546  001C'                    	ds	2
  5547                           
  5548                           	psect	bssBANK4
  5549  0000'                    __pbssBANK4:	
  5550  0000'                    main@F13671:	
  5551  0000'                    	ds	80
  5552                           
  5553                           	psect	inittext
  5554  0000'                    init_ram:	
  5555  0000' 00FE               	movwf	126
  5556  0001'                    initloop:	
  5557  0001' 0012               	moviw fsr0++
  5558  0002' 001E               	movwi fsr1++
  5559  0003' 3001               	movlw	1
  5560  0004' 02FE               	subwf	126,f
  5561  0005' 3000               	movlw	0
  5562  0006' 3BFF               	subwfb	127,f
  5563  0007' 087F               	movf	127,w
  5564  0008' 047E               	iorwf	126,w
  5565  0009' 1903               	btfsc	3,2
  5566  000A' 3400               	retlw	0
  5567  000B' 2800'              	goto	initloop
  5568                           
  5569                           	psect	clrtext
  5570  0000'                    clear_ram0:	
  5571                           ;	Called with FSR0 containing the base address, and
  5572                           ;	btemp/btemp+1 has the size to clear
  5573                           
  5574  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  5575  0001'                    clrloop0:	
  5576  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  5577  0002' 3101               	addfsr 0,1
  5578  0003' 3001               	movlw	1
  5579  0004' 02FE               	subwf	126,f
  5580  0005' 3000               	movlw	0
  5581  0006' 3BFF               	subwfb	127,f
  5582  0007' 087F               	movf	127,w
  5583  0008' 047E               	iorwf	126,w
  5584  0009' 1903               	btfsc	3,2
  5585  000A' 3400               	retlw	0	;all done for this memory range, return
  5586  000B' 2800'              	goto	clrloop0	;have we reached the end yet?
  5587                           
  5588                           	psect	cstackBANK3
  5589  0000'                    __pcstackBANK3:	
  5590  0000'                    main@outputTotal:	
  5591                           
  5592                           ; 4 bytes @ 0x0
  5593  0000'                    	ds	4
  5594  0004'                    main@dutyCycle6:	
  5595                           
  5596                           ; 2 bytes @ 0x4
  5597  0004'                    	ds	2
  5598  0006'                    main@analogs:	
  5599                           
  5600                           ; 4 bytes @ 0x6
  5601  0006'                    	ds	4
  5602  000A'                    main@outputIndex:	
  5603                           
  5604                           ; 1 bytes @ 0xA
  5605  000A'                    	ds	1
  5606  000B'                    main@j:	
  5607                           
  5608                           ; 1 bytes @ 0xB
  5609  000B'                    	ds	1
  5610                           
  5611                           	psect	cstackBANK2
  5612  0000'                    __pcstackBANK2:	
  5613  0000'                    main@outputSamples:	
  5614                           
  5615                           ; 80 bytes @ 0x0
  5616  0000'                    	ds	80
  5617                           
  5618                           	psect	cstackBANK1
  5619  0000'                    __pcstackBANK1:	
  5620  0000'                    ??___fttol:	
  5621                           
  5622                           ; 1 bytes @ 0x0
  5623  0000'                    	ds	4
  5624  0004'                    ___fttol@sign1:	
  5625                           
  5626                           ; 1 bytes @ 0x4
  5627  0004'                    	ds	1
  5628  0005'                    ___fttol@lval:	
  5629                           
  5630                           ; 4 bytes @ 0x5
  5631  0005'                    	ds	4
  5632  0009'                    ___fttol@exp1:	
  5633                           
  5634                           ; 1 bytes @ 0x9
  5635  0009'                    	ds	1
  5636  000A'                    ??_main:	
  5637                           
  5638                           ; 1 bytes @ 0xA
  5639  000A'                    	ds	10
  5640  0014'                    main@choice:	
  5641                           
  5642                           ; 1 bytes @ 0x14
  5643  0014'                    	ds	1
  5644  0015'                    main@C_or_F:	
  5645                           
  5646                           ; 1 bytes @ 0x15
  5647  0015'                    	ds	1
  5648  0016'                    main@startDelay:	
  5649                           
  5650                           ; 1 bytes @ 0x16
  5651  0016'                    	ds	1
  5652  0017'                    main@resetDelay:	
  5653                           
  5654                           ; 1 bytes @ 0x17
  5655  0017'                    	ds	1
  5656  0018'                    main@tPadCount:	
  5657                           
  5658                           ; 1 bytes @ 0x18
  5659  0018'                    	ds	1
  5660  0019'                    main@set:	
  5661                           
  5662                           ; 1 bytes @ 0x19
  5663  0019'                    	ds	1
  5664  001A'                    main@pitSetpoint:	
  5665                           
  5666                           ; 2 bytes @ 0x1A
  5667  001A'                    	ds	2
  5668  001C'                    main@output:	
  5669                           
  5670                           ; 2 bytes @ 0x1C
  5671  001C'                    	ds	2
  5672  001E'                    main@holdOutput:	
  5673                           
  5674                           ; 1 bytes @ 0x1E
  5675  001E'                    	ds	1
  5676  001F'                    main@lidOpenCount:	
  5677                           
  5678                           ; 1 bytes @ 0x1F
  5679  001F'                    	ds	1
  5680  0020'                    main@loop:	
  5681                           
  5682                           ; 1 bytes @ 0x20
  5683  0020'                    	ds	1
  5684  0021'                    main@dutyCycle7:	
  5685                           
  5686                           ; 2 bytes @ 0x21
  5687  0021'                    	ds	2
  5688  0023'                    main@lastTemperature:	
  5689                           
  5690                           ; 2 bytes @ 0x23
  5691  0023'                    	ds	2
  5692  0025'                    main@pidPeriodCounter:	
  5693                           
  5694                           ; 2 bytes @ 0x25
  5695  0025'                    	ds	2
  5696  0027'                    main@currentTemperature:	
  5697                           
  5698                           ; 2 bytes @ 0x27
  5699  0027'                    	ds	2
  5700                           
  5701                           	psect	cstackCOMMON
  5702  0000'                    __pcstackCOMMON:	
  5703  0000'                    ?___ftge:	
  5704  0000'                    ?_LCD_Cmd:	
  5705                           ; 1 bit 
  5706                           
  5707  0000'                    ?_LCD_Write_Char:	
  5708                           ; 1 bytes @ 0x0
  5709                           
  5710  0000'                    ?_OSCILLATOR_Initialize:	
  5711                           ; 1 bytes @ 0x0
  5712                           
  5713  0000'                    ??_OSCILLATOR_Initialize:	
  5714                           ; 1 bytes @ 0x0
  5715                           
  5716  0000'                    ?_ADCC_Initialize:	
  5717                           ; 1 bytes @ 0x0
  5718                           
  5719  0000'                    ??_ADCC_Initialize:	
  5720                           ; 1 bytes @ 0x0
  5721                           
  5722  0000'                    ?_PWM_Initialize:	
  5723                           ; 1 bytes @ 0x0
  5724                           
  5725  0000'                    ??_PWM_Initialize:	
  5726                           ; 1 bytes @ 0x0
  5727                           
  5728  0000'                    ?_TMR2_Initialize:	
  5729                           ; 1 bytes @ 0x0
  5730                           
  5731  0000'                    ??_TMR2_Initialize:	
  5732                           ; 1 bytes @ 0x0
  5733                           
  5734  0000'                    ?_InitCustomChars:	
  5735                           ; 1 bytes @ 0x0
  5736                           
  5737  0000'                    ?_LCD_Port:	
  5738                           ; 1 bytes @ 0x0
  5739                           
  5740  0000'                    ??_LCD_Port:	
  5741                           ; 1 bytes @ 0x0
  5742                           
  5743  0000'                    ?_LCD_Clear:	
  5744                           ; 1 bytes @ 0x0
  5745                           
  5746  0000'                    ?_LCD_Init:	
  5747                           ; 1 bytes @ 0x0
  5748                           
  5749  0000'                    ?_PIN_MANAGER_Initialize:	
  5750                           ; 1 bytes @ 0x0
  5751                           
  5752  0000'                    ??_PIN_MANAGER_Initialize:	
  5753                           ; 1 bytes @ 0x0
  5754                           
  5755  0000'                    ?_SYSTEM_Initialize:	
  5756                           ; 1 bytes @ 0x0
  5757                           
  5758  0000'                    ?_PWM7_LoadDutyValue:	
  5759                           ; 1 bytes @ 0x0
  5760                           
  5761  0000'                    ?_main:	
  5762                           ; 1 bytes @ 0x0
  5763                           
  5764  0000'                    ?_ADCRead:	
  5765                           ; 1 bytes @ 0x0
  5766                           
  5767  0000'                    ?___wmul:	
  5768                           ; 2 bytes @ 0x0
  5769                           
  5770  0000'                    ?___awdiv:	
  5771                           ; 2 bytes @ 0x0
  5772                           
  5773  0000'                    ?___awmod:	
  5774                           ; 2 bytes @ 0x0
  5775                           
  5776  0000'                    ?___ftpack:	
  5777                           ; 2 bytes @ 0x0
  5778                           
  5779  0000'                    ?_frexp:	
  5780                           ; 3 bytes @ 0x0
  5781                           
  5782  0000'                    ?___aldiv:	
  5783                           ; 3 bytes @ 0x0
  5784                           
  5785  0000'                    LCD_Port@a:	
  5786                           ; 4 bytes @ 0x0
  5787                           
  5788  0000'                    PIN_MANAGER_Initialize@state:	
  5789                           ; 1 bytes @ 0x0
  5790                           
  5791  0000'                    PWM7_LoadDutyValue@dutyCycle7:	
  5792                           ; 1 bytes @ 0x0
  5793                           
  5794  0000'                    ___wmul@multiplier:	
  5795                           ; 2 bytes @ 0x0
  5796                           
  5797  0000'                    ___awdiv@divisor:	
  5798                           ; 2 bytes @ 0x0
  5799                           
  5800  0000'                    ___awmod@divisor:	
  5801                           ; 2 bytes @ 0x0
  5802                           
  5803  0000'                    ___ftpack@arg:	
  5804                           ; 2 bytes @ 0x0
  5805                           
  5806  0000'                    ___ftge@ff1:	
  5807                           ; 3 bytes @ 0x0
  5808                           
  5809  0000'                    frexp@value:	
  5810                           ; 3 bytes @ 0x0
  5811                           
  5812  0000'                    ___aldiv@divisor:	
  5813                           ; 3 bytes @ 0x0
  5814                           
  5815                           
  5816                           ; 4 bytes @ 0x0
  5817  0000'                    	ds	1
  5818  0001'                    ??_LCD_Cmd:	
  5819  0001'                    ??_LCD_Write_Char:	
  5820                           ; 1 bytes @ 0x1
  5821                           
  5822                           
  5823                           ; 1 bytes @ 0x1
  5824  0001'                    	ds	1
  5825  0002'                    ??_PWM7_LoadDutyValue:	
  5826  0002'                    LCD_Write_Char@temp:	
  5827                           ; 1 bytes @ 0x2
  5828                           
  5829  0002'                    ___wmul@multiplicand:	
  5830                           ; 1 bytes @ 0x2
  5831                           
  5832  0002'                    ___awdiv@dividend:	
  5833                           ; 2 bytes @ 0x2
  5834                           
  5835  0002'                    ___awmod@dividend:	
  5836                           ; 2 bytes @ 0x2
  5837                           
  5838                           
  5839                           ; 2 bytes @ 0x2
  5840  0002'                    	ds	1
  5841  0003'                    ??_ADCRead:	
  5842  0003'                    LCD_Cmd@a:	
  5843                           ; 1 bytes @ 0x3
  5844                           
  5845  0003'                    LCD_Write_Char@y:	
  5846                           ; 1 bytes @ 0x3
  5847                           
  5848  0003'                    ADCRead@channel:	
  5849                           ; 1 bytes @ 0x3
  5850                           
  5851  0003'                    ___ftpack@exp:	
  5852                           ; 1 bytes @ 0x3
  5853                           
  5854  0003'                    frexp@eptr:	
  5855                           ; 1 bytes @ 0x3
  5856                           
  5857  0003'                    ___ftge@ff2:	
  5858                           ; 1 bytes @ 0x3
  5859                           
  5860                           
  5861                           ; 3 bytes @ 0x3
  5862  0003'                    	ds	1
  5863  0004'                    ??_frexp:	
  5864  0004'                    ??_LCD_Clear:	
  5865                           ; 1 bytes @ 0x4
  5866                           
  5867  0004'                    ?_LCD_Set_Cursor:	
  5868                           ; 1 bytes @ 0x4
  5869                           
  5870  0004'                    ??_LCD_Init:	
  5871                           ; 1 bytes @ 0x4
  5872                           
  5873  0004'                    ??___wmul:	
  5874                           ; 1 bytes @ 0x4
  5875                           
  5876  0004'                    ??___awdiv:	
  5877                           ; 1 bytes @ 0x4
  5878                           
  5879  0004'                    ??___awmod:	
  5880                           ; 1 bytes @ 0x4
  5881                           
  5882  0004'                    LCD_Set_Cursor@y:	
  5883                           ; 1 bytes @ 0x4
  5884                           
  5885  0004'                    LCD_Write_Char@a:	
  5886                           ; 1 bytes @ 0x4
  5887                           
  5888  0004'                    ___ftpack@sign:	
  5889                           ; 1 bytes @ 0x4
  5890                           
  5891  0004'                    ___wmul@product:	
  5892                           ; 1 bytes @ 0x4
  5893                           
  5894  0004'                    ___aldiv@dividend:	
  5895                           ; 2 bytes @ 0x4
  5896                           
  5897                           
  5898                           ; 4 bytes @ 0x4
  5899  0004'                    	ds	1
  5900  0005'                    ??___ftpack:	
  5901  0005'                    ??_InitCustomChars:	
  5902                           ; 1 bytes @ 0x5
  5903                           
  5904  0005'                    ??_LCD_Set_Cursor:	
  5905                           ; 1 bytes @ 0x5
  5906                           
  5907  0005'                    ?_LCD_Write_String:	
  5908                           ; 1 bytes @ 0x5
  5909                           
  5910  0005'                    ___awdiv@counter:	
  5911                           ; 1 bytes @ 0x5
  5912                           
  5913  0005'                    ___awmod@counter:	
  5914                           ; 1 bytes @ 0x5
  5915                           
  5916  0005'                    LCD_Write_String@a:	
  5917                           ; 1 bytes @ 0x5
  5918                           
  5919                           
  5920                           ; 2 bytes @ 0x5
  5921  0005'                    	ds	1
  5922  0006'                    ??___ftge:	
  5923  0006'                    ?_PID_Calculate:	
  5924                           ; 1 bytes @ 0x6
  5925                           
  5926  0006'                    InitCustomChars@i:	
  5927                           ; 2 bytes @ 0x6
  5928                           
  5929  0006'                    ___awdiv@sign:	
  5930                           ; 1 bytes @ 0x6
  5931                           
  5932  0006'                    ___awmod@sign:	
  5933                           ; 1 bytes @ 0x6
  5934                           
  5935  0006'                    PID_Calculate@setpoint:	
  5936                           ; 1 bytes @ 0x6
  5937                           
  5938                           
  5939                           ; 2 bytes @ 0x6
  5940  0006'                    	ds	1
  5941  0007'                    ??_LCD_Write_String:	
  5942  0007'                    LCD_Set_Cursor@x:	
  5943                           ; 1 bytes @ 0x7
  5944                           
  5945  0007'                    LCD_Init@style:	
  5946                           ; 1 bytes @ 0x7
  5947                           
  5948  0007'                    ___awdiv@quotient:	
  5949                           ; 1 bytes @ 0x7
  5950                           
  5951                           
  5952                           ; 2 bytes @ 0x7
  5953  0007'                    	ds	1
  5954  0008'                    ??_SYSTEM_Initialize:	
  5955  0008'                    ??___aldiv:	
  5956                           ; 1 bytes @ 0x8
  5957                           
  5958  0008'                    ?___awtoft:	
  5959                           ; 1 bytes @ 0x8
  5960                           
  5961  0008'                    LCD_Set_Cursor@z:	
  5962                           ; 3 bytes @ 0x8
  5963                           
  5964  0008'                    LCD_Write_String@i:	
  5965                           ; 1 bytes @ 0x8
  5966                           
  5967  0008'                    PID_Calculate@temp:	
  5968                           ; 2 bytes @ 0x8
  5969                           
  5970  0008'                    ___awtoft@c:	
  5971                           ; 2 bytes @ 0x8
  5972                           
  5973                           
  5974                           ; 2 bytes @ 0x8
  5975  0008'                    	ds	1
  5976  0009'                    ?_LCD_Write_Int:	
  5977  0009'                    LCD_Set_Cursor@w:	
  5978                           ; 1 bytes @ 0x9
  5979                           
  5980  0009'                    LCD_Write_Int@value:	
  5981                           ; 1 bytes @ 0x9
  5982                           
  5983  0009'                    readAnalog@analog_channel:	
  5984                           ; 2 bytes @ 0x9
  5985                           
  5986                           
  5987                           ; 2 bytes @ 0x9
  5988  0009'                    	ds	1
  5989  000A'                    ??_PID_Calculate:	
  5990  000A'                    LCD_Set_Cursor@temp:	
  5991                           ; 1 bytes @ 0xA
  5992                           
  5993                           
  5994                           ; 1 bytes @ 0xA
  5995  000A'                    	ds	1
  5996  000B'                    ??___awtoft:	
  5997  000B'                    LCD_Write_Int@fieldLength:	
  5998                           ; 1 bytes @ 0xB
  5999                           
  6000  000B'                    readAnalog@value:	
  6001                           ; 1 bytes @ 0xB
  6002                           
  6003                           
  6004                           ; 2 bytes @ 0xB
  6005  000B'                    	ds	1
  6006  000C'                    LCD_Write_Int@numPlaces:	
  6007                           
  6008                           ; 1 bytes @ 0xC
  6009  000C'                    	ds	1
  6010  000D'                    LCD_Write_Int@sign:	
  6011  000D'                    ___awtoft@sign:	
  6012                           ; 1 bytes @ 0xD
  6013                           
  6014                           
  6015                           ; 1 bytes @ 0xD
  6016  000D'                    	ds	1
  6017  000E'                    ??_eval_poly:	
  6018  000E'                    ??_tempCalc:	
  6019                           ; 1 bytes @ 0xE
  6020                           
  6021  000E'                    ??___ftsub:	
  6022                           ; 1 bytes @ 0xE
  6023                           
  6024                           
  6025                           	psect	cstackBANK0
  6026  0000'                    __pcstackBANK0:	
  6027                           ; 1 bytes @ 0xE
  6028                           
  6029  0000'                    ??_LCD_Write_Int:	
  6030  0000'                    ?___ftmul:	
  6031                           ; 1 bytes @ 0x0
  6032                           
  6033  0000'                    ___aldiv@counter:	
  6034                           ; 3 bytes @ 0x0
  6035                           
  6036  0000'                    ___ftmul@f1:	
  6037                           ; 1 bytes @ 0x0
  6038                           
  6039                           
  6040                           ; 3 bytes @ 0x0
  6041  0000'                    	ds	1
  6042  0001'                    ___aldiv@sign:	
  6043                           
  6044                           ; 1 bytes @ 0x1
  6045  0001'                    	ds	1
  6046  0002'                    ___aldiv@quotient:	
  6047                           
  6048                           ; 4 bytes @ 0x2
  6049  0002'                    	ds	1
  6050  0003'                    ___ftmul@f2:	
  6051                           
  6052                           ; 3 bytes @ 0x3
  6053  0003'                    	ds	2
  6054  0005'                    LCD_Write_Int@str:	
  6055                           
  6056                           ; 5 bytes @ 0x5
  6057  0005'                    	ds	1
  6058  0006'                    ??___ftmul:	
  6059  0006'                    ?_readAnalog:	
  6060                           ; 1 bytes @ 0x6
  6061                           
  6062  0006'                    readAnalog@channel:	
  6063                           ; 2 bytes @ 0x6
  6064                           
  6065                           
  6066                           ; 2 bytes @ 0x6
  6067  0006'                    	ds	2
  6068  0008'                    ??_readAnalog:	
  6069                           
  6070                           ; 1 bytes @ 0x8
  6071  0008'                    	ds	2
  6072  000A'                    ___ftmul@exp:	
  6073  000A'                    LCD_Write_Int@j:	
  6074                           ; 1 bytes @ 0xA
  6075                           
  6076                           
  6077                           ; 2 bytes @ 0xA
  6078  000A'                    	ds	1
  6079  000B'                    ___ftmul@f3_as_product:	
  6080                           
  6081                           ; 3 bytes @ 0xB
  6082  000B'                    	ds	1
  6083  000C'                    LCD_Write_Int@i:	
  6084                           
  6085                           ; 2 bytes @ 0xC
  6086  000C'                    	ds	2
  6087  000E'                    ___ftmul@cntr:	
  6088                           
  6089                           ; 1 bytes @ 0xE
  6090  000E'                    	ds	1
  6091  000F'                    ___ftmul@sign:	
  6092                           
  6093                           ; 1 bytes @ 0xF
  6094  000F'                    	ds	1
  6095  0010'                    ?___ftdiv:	
  6096  0010'                    ___ftdiv@f2:	
  6097                           ; 3 bytes @ 0x10
  6098                           
  6099                           
  6100                           ; 3 bytes @ 0x10
  6101  0010'                    	ds	3
  6102  0013'                    ___ftdiv@f1:	
  6103                           
  6104                           ; 3 bytes @ 0x13
  6105  0013'                    	ds	3
  6106  0016'                    ??___ftdiv:	
  6107                           
  6108                           ; 1 bytes @ 0x16
  6109  0016'                    	ds	4
  6110  001A'                    ___ftdiv@cntr:	
  6111                           
  6112                           ; 1 bytes @ 0x1A
  6113  001A'                    	ds	1
  6114  001B'                    ___ftdiv@f3:	
  6115                           
  6116                           ; 3 bytes @ 0x1B
  6117  001B'                    	ds	3
  6118  001E'                    ___ftdiv@exp:	
  6119                           
  6120                           ; 1 bytes @ 0x1E
  6121  001E'                    	ds	1
  6122  001F'                    ___ftdiv@sign:	
  6123                           
  6124                           ; 1 bytes @ 0x1F
  6125  001F'                    	ds	1
  6126  0020'                    ?___ftadd:	
  6127  0020'                    ___ftadd@f1:	
  6128                           ; 3 bytes @ 0x20
  6129                           
  6130                           
  6131                           ; 3 bytes @ 0x20
  6132  0020'                    	ds	3
  6133  0023'                    ___ftadd@f2:	
  6134                           
  6135                           ; 3 bytes @ 0x23
  6136  0023'                    	ds	3
  6137  0026'                    ??___ftadd:	
  6138                           
  6139                           ; 1 bytes @ 0x26
  6140  0026'                    	ds	4
  6141  002A'                    ___ftadd@sign:	
  6142                           
  6143                           ; 1 bytes @ 0x2A
  6144  002A'                    	ds	1
  6145  002B'                    ___ftadd@exp2:	
  6146                           
  6147                           ; 1 bytes @ 0x2B
  6148  002B'                    	ds	1
  6149  002C'                    ___ftadd@exp1:	
  6150                           
  6151                           ; 1 bytes @ 0x2C
  6152  002C'                    	ds	1
  6153  002D'                    ?_eval_poly:	
  6154  002D'                    ?___ftsub:	
  6155                           ; 3 bytes @ 0x2D
  6156                           
  6157  002D'                    ___ftsub@f2:	
  6158                           ; 3 bytes @ 0x2D
  6159                           
  6160  002D'                    eval_poly@x:	
  6161                           ; 3 bytes @ 0x2D
  6162                           
  6163                           
  6164                           ; 3 bytes @ 0x2D
  6165  002D'                    	ds	3
  6166  0030'                    eval_poly@d:	
  6167  0030'                    ___ftsub@f1:	
  6168                           ; 2 bytes @ 0x30
  6169                           
  6170                           
  6171                           ; 3 bytes @ 0x30
  6172  0030'                    	ds	2
  6173  0032'                    eval_poly@n:	
  6174                           
  6175                           ; 2 bytes @ 0x32
  6176  0032'                    	ds	2
  6177  0034'                    eval_poly@res:	
  6178                           
  6179                           ; 3 bytes @ 0x34
  6180  0034'                    	ds	3
  6181  0037'                    ?_log:	
  6182  0037'                    log@x:	
  6183                           ; 3 bytes @ 0x37
  6184                           
  6185                           
  6186                           ; 3 bytes @ 0x37
  6187  0037'                    	ds	3
  6188  003A'                    ??_log:	
  6189                           
  6190                           ; 1 bytes @ 0x3A
  6191  003A'                    	ds	1
  6192  003B'                    log@exponent:	
  6193                           
  6194                           ; 2 bytes @ 0x3B
  6195  003B'                    	ds	2
  6196  003D'                    ?_tempCalc:	
  6197  003D'                    tempCalc@analogValue:	
  6198                           ; 3 bytes @ 0x3D
  6199                           
  6200                           
  6201                           ; 2 bytes @ 0x3D
  6202  003D'                    	ds	3
  6203  0040'                    tempCalc@R:	
  6204                           
  6205                           ; 3 bytes @ 0x40
  6206  0040'                    	ds	3
  6207  0043'                    _tempCalc$1008:	
  6208                           
  6209                           ; 3 bytes @ 0x43
  6210  0043'                    	ds	3
  6211  0046'                    tempCalc@steinhart:	
  6212                           
  6213                           ; 3 bytes @ 0x46
  6214  0046'                    	ds	3
  6215  0049'                    ?___fttol:	
  6216  0049'                    ___fttol@f1:	
  6217                           ; 4 bytes @ 0x49
  6218                           
  6219                           
  6220                           ; 3 bytes @ 0x49
  6221  0049'                    	ds	4
  6222  004D'                    main@bCount:	
  6223                           
  6224                           ; 2 bytes @ 0x4D
  6225  004D'                    	ds	2
  6226  004F'                    main@x:	
  6227                           
  6228                           ; 1 bytes @ 0x4F
  6229  004F'                    	ds	1
  6230                           
  6231                           	psect	maintext
  6232  0000'                    __pmaintext:	
  6233 ;;
  6234 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6235 ;;
  6236 ;; *************** function _main *****************
  6237 ;; Defined at:
  6238 ;;		line 26 in file "main.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;		None
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;  outputSample   80    0[BANK2 ] int [40]
  6243 ;;  analogs         4    6[BANK3 ] unsigned int [2]
  6244 ;;  outputTotal     4    0[BANK3 ] long 
  6245 ;;  displayTemp2    3    0        float 
  6246 ;;  displayTemp     3    0        float 
  6247 ;;  dutyCycle6      2    4[BANK3 ] unsigned int 
  6248 ;;  currentTempe    2   39[BANK1 ] int 
  6249 ;;  pidPeriodCou    2   37[BANK1 ] int 
  6250 ;;  lastTemperat    2   35[BANK1 ] int 
  6251 ;;  dutyCycle7      2   33[BANK1 ] unsigned int 
  6252 ;;  output          2   28[BANK1 ] int 
  6253 ;;  pitSetpoint     2   26[BANK1 ] int 
  6254 ;;  bCount          2   77[BANK0 ] unsigned int 
  6255 ;;  j               1   11[BANK3 ] unsigned char 
  6256 ;;  outputIndex     1   10[BANK3 ] unsigned char 
  6257 ;;  loop            1   32[BANK1 ] unsigned char 
  6258 ;;  lidOpenCount    1   31[BANK1 ] unsigned char 
  6259 ;;  holdOutput      1   30[BANK1 ] unsigned char 
  6260 ;;  set             1   25[BANK1 ] unsigned char 
  6261 ;;  tPadCount       1   24[BANK1 ] unsigned char 
  6262 ;;  resetDelay      1   23[BANK1 ] unsigned char 
  6263 ;;  startDelay      1   22[BANK1 ] unsigned char 
  6264 ;;  C_or_F          1   21[BANK1 ] unsigned char 
  6265 ;;  choice          1   20[BANK1 ] unsigned char 
  6266 ;;  x               1   79[BANK0 ] unsigned char 
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  1    wreg      void 
  6269 ;; Registers used:
  6270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6271 ;; Tracked objects:
  6272 ;;		On entry : B1F/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;      Locals:         0       3      21      80      12       0       0       0       0       0       0       0       
      +0       0
  6278 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;      Totals:         0       3      31      80      12       0       0       0       0       0       0       0       
      +0       0
  6280 ;;Total ram usage:      126 bytes
  6281 ;; Hardware stack levels required when called:    5
  6282 ;; This function calls:
  6283 ;;		_LCD_Clear
  6284 ;;		_LCD_Set_Cursor
  6285 ;;		_LCD_Write_Char
  6286 ;;		_LCD_Write_Int
  6287 ;;		_LCD_Write_String
  6288 ;;		_PID_Calculate
  6289 ;;		_PWM7_LoadDutyValue
  6290 ;;		_SYSTEM_Initialize
  6291 ;;		___aldiv
  6292 ;;		___fttol
  6293 ;;		_readAnalog
  6294 ;;		_tempCalc
  6295 ;; This function is called by:
  6296 ;;		Startup code after reset
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           
  6301                           ;psect for function _main
  6302  0000'                    _main:	
  6303                           
  6304                           ;main.c: 28: SYSTEM_Initialize();
  6305                           
  6306                           ;incstack = 0
  6307                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6308  0000' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
  6309                           
  6310                           ;main.c: 30: uint16_t analogs[2] = {0};
  6311  0003' 0023               	movlb	3	; select bank3
  6312  0004' 0800'              	movf	(main@F13664+3)^(0+384),w
  6313  0005' 0080'              	movwf	(main@analogs+3)^(0+384)
  6314  0006' 0800'              	movf	(main@F13664+2)^(0+384),w
  6315  0007' 0080'              	movwf	(main@analogs+2)^(0+384)
  6316  0008' 0800'              	movf	(main@F13664+1)^(0+384),w
  6317  0009' 0080'              	movwf	(main@analogs+1)^(0+384)
  6318  000A' 0800'              	movf	main@F13664^(0+384),w
  6319  000B' 0080'              	movwf	main@analogs^(0+384)
  6320                           
  6321                           ;main.c: 32: int pitSetpoint = 2250;
  6322  000C' 30CA               	movlw	202
  6323  000D' 0021               	movlb	1	; select bank1
  6324  000E' 0080'              	movwf	main@pitSetpoint^(0+128)
  6325  000F' 3008               	movlw	8
  6326  0010' 0081'              	movwf	(main@pitSetpoint^(0+128)+1)
  6327                           
  6328                           ;main.c: 34: char set = 0;
  6329  0011' 0180'              	clrf	main@set^(0+128)
  6330                           
  6331                           ;main.c: 40: int output = 0;
  6332  0012' 0180'              	clrf	main@output^(0+128)
  6333  0013' 0180'              	clrf	(main@output+1)^(0+128)
  6334                           
  6335                           ;main.c: 42: int32_t outputTotal = 0;
  6336  0014' 3000               	movlw	0
  6337  0015' 0023               	movlb	3	; select bank3
  6338  0016' 0080'              	movwf	(main@outputTotal+3)^(0+384)
  6339  0017' 3000               	movlw	0
  6340  0018' 0080'              	movwf	(main@outputTotal+2)^(0+384)
  6341  0019' 3000               	movlw	0
  6342  001A' 0080'              	movwf	(main@outputTotal+1)^(0+384)
  6343  001B' 3000               	movlw	0
  6344  001C' 0080'              	movwf	main@outputTotal^(0+384)
  6345                           
  6346                           ;main.c: 44: char outputIndex = 0;
  6347  001D' 0180'              	clrf	main@outputIndex^(0+384)
  6348                           
  6349                           ;main.c: 46: int16_t outputSamples[40]= {0};
  6350  001E' 3000'              	movlw	low main@F13671
  6351  001F' 0086               	movwf	6
  6352  0020' 3000'              	movlw	high main@F13671
  6353  0021' 0087               	movwf	7
  6354  0022' 3000'              	movlw	low main@outputSamples
  6355  0023' 0084               	movwf	4
  6356  0024' 3000'              	movlw	high main@outputSamples
  6357  0025' 0085               	movwf	5
  6358  0026' 3050               	movlw	80
  6359  0027' 0021               	movlb	1	; select bank1
  6360  0028' 0080'              	movwf	??_main^(0+128)
  6361  0029'                    u3190:	
  6362  0029' 0016               	moviw fsr1++
  6363  002A' 001A               	movwi fsr0++
  6364  002B' 0B80'              	decfsz	??_main^(0+128),f
  6365  002C' 2800'              	goto	u3190
  6366                           
  6367                           ;main.c: 48: char holdOutput = 0;
  6368  002D' 0180'              	clrf	main@holdOutput^(0+128)
  6369                           
  6370                           ;main.c: 50: int currentTemperature = 750;
  6371  002E' 30EE               	movlw	238
  6372  002F' 0080'              	movwf	main@currentTemperature^(0+128)
  6373  0030' 3002               	movlw	2
  6374  0031' 0081'              	movwf	(main@currentTemperature^(0+128)+1)
  6375                           
  6376                           ;main.c: 52: int lastTemperature = 750;
  6377  0032' 30EE               	movlw	238
  6378  0033' 0080'              	movwf	main@lastTemperature^(0+128)
  6379  0034' 3002               	movlw	2
  6380  0035' 0081'              	movwf	(main@lastTemperature^(0+128)+1)
  6381                           
  6382                           ;main.c: 54: char lidOpenCount = 0;
  6383  0036' 0180'              	clrf	main@lidOpenCount^(0+128)
  6384                           
  6385                           ;main.c: 56: float displayTemp, displayTemp2;
  6386                           ;main.c: 58: char j = 0;
  6387  0037' 0023               	movlb	3	; select bank3
  6388  0038' 0180'              	clrf	main@j^(0+384)
  6389                           
  6390                           ;main.c: 60: char x = 0;
  6391  0039' 0020               	movlb	0	; select bank0
  6392  003A' 01CF'              	clrf	main@x
  6393                           
  6394                           ;main.c: 62: int pidPeriodCounter = 0;
  6395  003B' 0021               	movlb	1	; select bank1
  6396  003C' 0180'              	clrf	main@pidPeriodCounter^(0+128)
  6397  003D' 0180'              	clrf	(main@pidPeriodCounter+1)^(0+128)
  6398                           
  6399                           ;main.c: 64: extern int pidMaxOutput;
  6400                           ;main.c: 66: unsigned char loop = 64;
  6401  003E' 3040               	movlw	64
  6402  003F' 0080'              	movwf	??_main^(0+128)
  6403  0040' 0800'              	movf	??_main^(0+128),w
  6404  0041' 0080'              	movwf	main@loop^(0+128)
  6405                           
  6406                           ;main.c: 68: char choice = 2;
  6407  0042' 3002               	movlw	2
  6408  0043' 0080'              	movwf	??_main^(0+128)
  6409  0044' 0800'              	movf	??_main^(0+128),w
  6410  0045' 0080'              	movwf	main@choice^(0+128)
  6411                           
  6412                           ;main.c: 70: char C_or_F = 1;
  6413  0046' 0180'              	clrf	main@C_or_F^(0+128)
  6414  0047' 0A80'              	incf	main@C_or_F^(0+128),f
  6415                           
  6416                           ;main.c: 72: unsigned int bCount = 0;
  6417  0048' 0020               	movlb	0	; select bank0
  6418  0049' 01CD'              	clrf	main@bCount
  6419  004A' 01CE'              	clrf	main@bCount+1
  6420                           
  6421                           ;main.c: 74: unsigned char startDelay = 0;
  6422  004B' 0021               	movlb	1	; select bank1
  6423  004C' 0180'              	clrf	main@startDelay^(0+128)
  6424                           
  6425                           ;main.c: 76: unsigned char resetDelay = 0;
  6426  004D' 0180'              	clrf	main@resetDelay^(0+128)
  6427                           
  6428                           ;main.c: 78: unsigned char tPadCount = 10;
  6429  004E' 300A               	movlw	10
  6430  004F' 0080'              	movwf	??_main^(0+128)
  6431  0050' 0800'              	movf	??_main^(0+128),w
  6432  0051' 0080'              	movwf	main@tPadCount^(0+128)
  6433                           
  6434                           ;main.c: 81: uint16_t dutyCycle6 = 0;
  6435  0052' 0023               	movlb	3	; select bank3
  6436  0053' 0180'              	clrf	main@dutyCycle6^(0+384)
  6437  0054' 0180'              	clrf	(main@dutyCycle6+1)^(0+384)
  6438                           
  6439                           ;main.c: 83: uint16_t dutyCycle7 = 523;
  6440  0055' 300B               	movlw	11
  6441  0056' 0021               	movlb	1	; select bank1
  6442  0057' 0080'              	movwf	main@dutyCycle7^(0+128)
  6443  0058' 3002               	movlw	2
  6444  0059' 0081'              	movwf	(main@dutyCycle7^(0+128)+1)
  6445                           
  6446                           ;main.c: 87: PWM7_LoadDutyValue(dutyCycle7);
  6447  005A' 0800'              	movf	(main@dutyCycle7+1)^(0+128),w
  6448  005B' 0081'              	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6449  005C' 0800'              	movf	main@dutyCycle7^(0+128),w
  6450  005D' 0080'              	movwf	PWM7_LoadDutyValue@dutyCycle7
  6451  005E' 3180' 2000' 3180'  	fcall	_PWM7_LoadDutyValue
  6452                           
  6453                           ;main.c: 89: _delay((unsigned long)((300)*(32000000/4000.0)));
  6454  0061' 300D               	movlw	13
  6455  0062' 0021               	movlb	1	; select bank1
  6456  0063' 0082'              	movwf	(??_main^(0+128)+2)
  6457  0064' 302D               	movlw	45
  6458  0065' 0081'              	movwf	(??_main^(0+128)+1)
  6459  0066' 30E2               	movlw	226
  6460  0067' 0080'              	movwf	??_main^(0+128)
  6461  0068'                    u3377:	
  6462  0068' 0B80'              	decfsz	??_main^(0+128),f
  6463  0069' 2800'              	goto	u3377
  6464  006A' 0B81'              	decfsz	(??_main^(0+128)+1),f
  6465  006B' 2800'              	goto	u3377
  6466  006C' 0B82'              	decfsz	(??_main^(0+128)+2),f
  6467  006D' 2800'              	goto	u3377
  6468  006E' 3200               	nop2
  6469                           
  6470                           ;main.c: 91: LCD_Clear();
  6471  006F' 3180' 2000' 3180'  	fcall	_LCD_Clear
  6472  0072'                    l2855:	
  6473                           ;main.c: 94: while (1)
  6474                           
  6475                           
  6476                           ;main.c: 95: {
  6477                           ;main.c: 96: if(loop>253)
  6478  0072' 30FE               	movlw	254
  6479  0073' 0021               	movlb	1	; select bank1
  6480  0074' 0200'              	subwf	main@loop^(0+128),w
  6481  0075' 1C03               	skipc
  6482  0076' 2800'              	goto	l2923
  6483                           
  6484                           ;main.c: 97: {
  6485                           ;main.c: 98: PWM7_LoadDutyValue(dutyCycle7);
  6486  0077' 0800'              	movf	(main@dutyCycle7+1)^(0+128),w
  6487  0078' 0081'              	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6488  0079' 0800'              	movf	main@dutyCycle7^(0+128),w
  6489  007A' 0080'              	movwf	PWM7_LoadDutyValue@dutyCycle7
  6490  007B' 3180' 2000' 3180'  	fcall	_PWM7_LoadDutyValue
  6491                           
  6492                           ;main.c: 100: { LCD_Set_Cursor(0,0); LCD_Write_String("Pit:");};
  6493  007E' 0184'              	clrf	LCD_Set_Cursor@y
  6494  007F' 3000               	movlw	0
  6495  0080' 3180' 2000' 3180'  	fcall	_LCD_Set_Cursor
  6496  0083' 3000'              	movlw	low (STR_1| (0+32768))
  6497  0084' 0085'              	movwf	LCD_Write_String@a
  6498  0085' 3000'              	movlw	high (STR_1| (0+32768))
  6499  0086' 0086'              	movwf	LCD_Write_String@a+1
  6500  0087' 3180' 2000' 3180'  	fcall	_LCD_Write_String
  6501                           
  6502                           ;main.c: 101: { LCD_Set_Cursor(5,0); LCD_Write_Int(analogs[1],-1, 1, 0);};
  6503  008A' 0184'              	clrf	LCD_Set_Cursor@y
  6504  008B' 3005               	movlw	5
  6505  008C' 3180' 2000' 3180'  	fcall	_LCD_Set_Cursor
  6506  008F' 0023               	movlb	3	; select bank3
  6507  0090' 0802'              	movf	((main@analogs+1)^(0+384)+2),w
  6508  0091' 008A'              	movwf	LCD_Write_Int@value+1
  6509  0092' 0802'              	movf	(main@analogs^(0+384)+2),w
  6510  0093' 0089'              	movwf	LCD_Write_Int@value
  6511  0094' 018B'              	clrf	LCD_Write_Int@fieldLength
  6512  0095' 038B'              	decf	LCD_Write_Int@fieldLength,f
  6513  0096' 018C'              	clrf	LCD_Write_Int@numPlaces
  6514  0097' 0A8C'              	incf	LCD_Write_Int@numPlaces,f
  6515  0098' 018D'              	clrf	LCD_Write_Int@sign
  6516  0099' 3180' 2000' 3180'  	fcall	_LCD_Write_Int
  6517                           
  6518                           ;main.c: 102: LCD_Write_Char(0);
  6519  009C' 3000               	movlw	0
  6520  009D' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  6521                           
  6522                           ;main.c: 103: LCD_Write_Char(70);
  6523  00A0' 3046               	movlw	70
  6524  00A1' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  6525                           
  6526                           ;main.c: 104: LCD_Write_Char(' ');
  6527  00A4' 3020               	movlw	32
  6528  00A5' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  6529                           
  6530                           ;main.c: 105: LCD_Write_Char(' ');
  6531  00A8' 3020               	movlw	32
  6532  00A9' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  6533                           
  6534                           ;main.c: 107: { LCD_Set_Cursor(0,1); LCD_Write_String("Output:");};
  6535  00AC' 0184'              	clrf	LCD_Set_Cursor@y
  6536  00AD' 0A84'              	incf	LCD_Set_Cursor@y,f
  6537  00AE' 3000               	movlw	0
  6538  00AF' 3180' 2000' 3180'  	fcall	_LCD_Set_Cursor
  6539  00B2' 3000'              	movlw	low (STR_2| (0+32768))
  6540  00B3' 0085'              	movwf	LCD_Write_String@a
  6541  00B4' 3000'              	movlw	high (STR_2| (0+32768))
  6542  00B5' 0086'              	movwf	LCD_Write_String@a+1
  6543  00B6' 3180' 2000' 3180'  	fcall	_LCD_Write_String
  6544                           
  6545                           ;main.c: 108: LCD_Write_Char(' ');
  6546  00B9' 3020               	movlw	32
  6547  00BA' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
  6548                           
  6549                           ;main.c: 109: LCD_Write_Int(dutyCycle6,5,0,0);
  6550  00BD' 0023               	movlb	3	; select bank3
  6551  00BE' 0800'              	movf	(main@dutyCycle6+1)^(0+384),w
  6552  00BF' 008A'              	movwf	LCD_Write_Int@value+1
  6553  00C0' 0800'              	movf	main@dutyCycle6^(0+384),w
  6554  00C1' 0089'              	movwf	LCD_Write_Int@value
  6555  00C2' 3005               	movlw	5
  6556  00C3' 0021               	movlb	1	; select bank1
  6557  00C4' 0080'              	movwf	??_main^(0+128)
  6558  00C5' 0800'              	movf	??_main^(0+128),w
  6559  00C6' 008B'              	movwf	LCD_Write_Int@fieldLength
  6560  00C7' 018C'              	clrf	LCD_Write_Int@numPlaces
  6561  00C8' 018D'              	clrf	LCD_Write_Int@sign
  6562  00C9' 3180' 2000' 3180'  	fcall	_LCD_Write_Int
  6563                           
  6564                           ;main.c: 114: if(holdOutput==0)
  6565  00CC' 0021               	movlb	1	; select bank1
  6566  00CD' 0800'              	movf	main@holdOutput^(0+128),w
  6567  00CE' 1D03               	btfss	3,2
  6568  00CF' 2800'              	goto	l2897
  6569                           
  6570                           ;main.c: 115: {
  6571                           ;main.c: 116: output = PID_Calculate(pitSetpoint,analogs[1]);
  6572  00D0' 0800'              	movf	(main@pitSetpoint+1)^(0+128),w
  6573  00D1' 0087'              	movwf	PID_Calculate@setpoint+1
  6574  00D2' 0800'              	movf	main@pitSetpoint^(0+128),w
  6575  00D3' 0086'              	movwf	PID_Calculate@setpoint
  6576  00D4' 0023               	movlb	3	; select bank3
  6577  00D5' 0802'              	movf	((main@analogs+1)^(0+384)+2),w
  6578  00D6' 0089'              	movwf	PID_Calculate@temp+1
  6579  00D7' 0802'              	movf	(main@analogs^(0+384)+2),w
  6580  00D8' 0088'              	movwf	PID_Calculate@temp
  6581  00D9' 3180' 2000' 3180'  	fcall	_PID_Calculate
  6582  00DC' 0807'              	movf	?_PID_Calculate+1,w
  6583  00DD' 0021               	movlb	1	; select bank1
  6584  00DE' 0080'              	movwf	(main@output+1)^(0+128)
  6585  00DF' 0806'              	movf	?_PID_Calculate,w
  6586  00E0' 0080'              	movwf	main@output^(0+128)
  6587                           
  6588                           ;main.c: 117: outputTotal = outputTotal - outputSamples[outputIndex];
  6589  00E1' 0023               	movlb	3	; select bank3
  6590  00E2' 0800'              	movf	main@outputTotal^(0+384),w
  6591  00E3' 0021               	movlb	1	; select bank1
  6592  00E4' 0080'              	movwf	??_main^(0+128)
  6593  00E5' 0023               	movlb	3	; select bank3
  6594  00E6' 0800'              	movf	(main@outputTotal+1)^(0+384),w
  6595  00E7' 0021               	movlb	1	; select bank1
  6596  00E8' 0081'              	movwf	(??_main^(0+128)+1)
  6597  00E9' 0023               	movlb	3	; select bank3
  6598  00EA' 0800'              	movf	(main@outputTotal+2)^(0+384),w
  6599  00EB' 0021               	movlb	1	; select bank1
  6600  00EC' 0082'              	movwf	(??_main^(0+128)+2)
  6601  00ED' 0023               	movlb	3	; select bank3
  6602  00EE' 0800'              	movf	(main@outputTotal+3)^(0+384),w
  6603  00EF' 0021               	movlb	1	; select bank1
  6604  00F0' 0083'              	movwf	(??_main^(0+128)+3)
  6605  00F1' 0023               	movlb	3	; select bank3
  6606  00F2' 3500'              	lslf	main@outputIndex^(0+384),w
  6607  00F3' 3E00'              	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6608  00F4' 0086               	movwf	6
  6609  00F5' 3001               	movlw	1	; select bank2/3
  6610  00F6' 0087               	movwf	7
  6611  00F7' 3F40               	moviw [0]fsr1
  6612  00F8' 0021               	movlb	1	; select bank1
  6613  00F9' 0080'              	movwf	(??_main+4)^(0+128)
  6614  00FA' 3F41               	moviw [1]fsr1
  6615  00FB' 0081'              	movwf	((??_main+4)^(0+128)+1)
  6616  00FC' 0800'              	movf	(??_main+4)^(0+128),w
  6617  00FD' 0080'              	movwf	(??_main+6)^(0+128)
  6618  00FE' 0800'              	movf	(??_main+5)^(0+128),w
  6619  00FF' 0081'              	movwf	((??_main+6)^(0+128)+1)
  6620  0100' 3000               	movlw	0
  6621  0101' 1B81'              	btfsc	((??_main+6)^(0+128)+1),7
  6622  0102' 30FF               	movlw	255
  6623  0103' 0082'              	movwf	((??_main+6)^(0+128)+2)
  6624  0104' 0083'              	movwf	((??_main+6)^(0+128)+3)
  6625  0105' 0980'              	comf	(??_main+6)^(0+128),f
  6626  0106' 0981'              	comf	((??_main+6)^(0+128)+1),f
  6627  0107' 0982'              	comf	((??_main+6)^(0+128)+2),f
  6628  0108' 0983'              	comf	((??_main+6)^(0+128)+3),f
  6629  0109' 0A80'              	incf	(??_main+6)^(0+128),f
  6630  010A' 1903               	skipnz
  6631  010B' 0A81'              	incf	((??_main+6)^(0+128)+1),f
  6632  010C' 1903               	skipnz
  6633  010D' 0A82'              	incf	((??_main+6)^(0+128)+2),f
  6634  010E' 1903               	skipnz
  6635  010F' 0A83'              	incf	((??_main+6)^(0+128)+3),f
  6636  0110' 0800'              	movf	(??_main+6)^(0+128),w
  6637  0111' 0780'              	addwf	??_main^(0+128),f
  6638  0112' 0800'              	movf	(??_main+7)^(0+128),w
  6639  0113' 3D81'              	addwfc	(??_main^(0+128)+1),f
  6640  0114' 0800'              	movf	(??_main+8)^(0+128),w
  6641  0115' 3D82'              	addwfc	(??_main^(0+128)+2),f
  6642  0116' 0800'              	movf	(??_main+9)^(0+128),w
  6643  0117' 3D83'              	addwfc	(??_main^(0+128)+3),f
  6644  0118' 0800'              	movf	(??_main+3)^(0+128),w
  6645  0119' 0023               	movlb	3	; select bank3
  6646  011A' 0080'              	movwf	(main@outputTotal+3)^(0+384)
  6647  011B' 0021               	movlb	1	; select bank1
  6648  011C' 0800'              	movf	(??_main+2)^(0+128),w
  6649  011D' 0023               	movlb	3	; select bank3
  6650  011E' 0080'              	movwf	(main@outputTotal+2)^(0+384)
  6651  011F' 0021               	movlb	1	; select bank1
  6652  0120' 0800'              	movf	(??_main+1)^(0+128),w
  6653  0121' 0023               	movlb	3	; select bank3
  6654  0122' 0080'              	movwf	(main@outputTotal+1)^(0+384)
  6655  0123' 0021               	movlb	1	; select bank1
  6656  0124' 0800'              	movf	??_main^(0+128),w
  6657  0125' 0023               	movlb	3	; select bank3
  6658  0126' 0080'              	movwf	main@outputTotal^(0+384)
  6659                           
  6660                           ;main.c: 118: outputSamples[outputIndex] = output;
  6661  0127' 3500'              	lslf	main@outputIndex^(0+384),w
  6662  0128' 3E00'              	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6663  0129' 0086               	movwf	6
  6664  012A' 3001               	movlw	1	; select bank2/3
  6665  012B' 0087               	movwf	7
  6666  012C' 0021               	movlb	1	; select bank1
  6667  012D' 0800'              	movf	main@output^(0+128),w
  6668  012E' 3FC0               	movwi [0]fsr1
  6669  012F' 0800'              	movf	(main@output+1)^(0+128),w
  6670  0130' 3FC1               	movwi [1]fsr1
  6671                           
  6672                           ;main.c: 119: outputTotal = outputTotal + outputSamples[outputIndex];
  6673  0131' 0023               	movlb	3	; select bank3
  6674  0132' 0800'              	movf	main@outputTotal^(0+384),w
  6675  0133' 0021               	movlb	1	; select bank1
  6676  0134' 0080'              	movwf	??_main^(0+128)
  6677  0135' 0023               	movlb	3	; select bank3
  6678  0136' 0800'              	movf	(main@outputTotal+1)^(0+384),w
  6679  0137' 0021               	movlb	1	; select bank1
  6680  0138' 0081'              	movwf	(??_main^(0+128)+1)
  6681  0139' 0023               	movlb	3	; select bank3
  6682  013A' 0800'              	movf	(main@outputTotal+2)^(0+384),w
  6683  013B' 0021               	movlb	1	; select bank1
  6684  013C' 0082'              	movwf	(??_main^(0+128)+2)
  6685  013D' 0023               	movlb	3	; select bank3
  6686  013E' 0800'              	movf	(main@outputTotal+3)^(0+384),w
  6687  013F' 0021               	movlb	1	; select bank1
  6688  0140' 0083'              	movwf	(??_main^(0+128)+3)
  6689  0141' 0023               	movlb	3	; select bank3
  6690  0142' 3500'              	lslf	main@outputIndex^(0+384),w
  6691  0143' 3E00'              	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6692  0144' 0086               	movwf	6
  6693  0145' 3001               	movlw	1	; select bank2/3
  6694  0146' 0087               	movwf	7
  6695  0147' 3F40               	moviw [0]fsr1
  6696  0148' 0021               	movlb	1	; select bank1
  6697  0149' 0080'              	movwf	(??_main+4)^(0+128)
  6698  014A' 3F41               	moviw [1]fsr1
  6699  014B' 0081'              	movwf	((??_main+4)^(0+128)+1)
  6700  014C' 0800'              	movf	(??_main+4)^(0+128),w
  6701  014D' 0080'              	movwf	(??_main+6)^(0+128)
  6702  014E' 0800'              	movf	(??_main+5)^(0+128),w
  6703  014F' 0081'              	movwf	((??_main+6)^(0+128)+1)
  6704  0150' 3000               	movlw	0
  6705  0151' 1B81'              	btfsc	((??_main+6)^(0+128)+1),7
  6706  0152' 30FF               	movlw	255
  6707  0153' 0082'              	movwf	((??_main+6)^(0+128)+2)
  6708  0154' 0083'              	movwf	((??_main+6)^(0+128)+3)
  6709  0155' 0800'              	movf	(??_main+6)^(0+128),w
  6710  0156' 0780'              	addwf	??_main^(0+128),f
  6711  0157' 0800'              	movf	(??_main+7)^(0+128),w
  6712  0158' 3D81'              	addwfc	(??_main^(0+128)+1),f
  6713  0159' 0800'              	movf	(??_main+8)^(0+128),w
  6714  015A' 3D82'              	addwfc	(??_main^(0+128)+2),f
  6715  015B' 0800'              	movf	(??_main+9)^(0+128),w
  6716  015C' 3D83'              	addwfc	(??_main^(0+128)+3),f
  6717  015D' 0800'              	movf	(??_main+3)^(0+128),w
  6718  015E' 0023               	movlb	3	; select bank3
  6719  015F' 0080'              	movwf	(main@outputTotal+3)^(0+384)
  6720  0160' 0021               	movlb	1	; select bank1
  6721  0161' 0800'              	movf	(??_main+2)^(0+128),w
  6722  0162' 0023               	movlb	3	; select bank3
  6723  0163' 0080'              	movwf	(main@outputTotal+2)^(0+384)
  6724  0164' 0021               	movlb	1	; select bank1
  6725  0165' 0800'              	movf	(??_main+1)^(0+128),w
  6726  0166' 0023               	movlb	3	; select bank3
  6727  0167' 0080'              	movwf	(main@outputTotal+1)^(0+384)
  6728  0168' 0021               	movlb	1	; select bank1
  6729  0169' 0800'              	movf	??_main^(0+128),w
  6730  016A' 0023               	movlb	3	; select bank3
  6731  016B' 0080'              	movwf	main@outputTotal^(0+384)
  6732                           
  6733                           ;main.c: 120: dutyCycle6 = outputTotal/40;
  6734  016C' 3000               	movlw	0
  6735  016D' 0083'              	movwf	___aldiv@divisor+3
  6736  016E' 3000               	movlw	0
  6737  016F' 0082'              	movwf	___aldiv@divisor+2
  6738  0170' 3000               	movlw	0
  6739  0171' 0081'              	movwf	___aldiv@divisor+1
  6740  0172' 3028               	movlw	40
  6741  0173' 0080'              	movwf	___aldiv@divisor
  6742  0174' 0800'              	movf	(main@outputTotal+3)^(0+384),w
  6743  0175' 0087'              	movwf	___aldiv@dividend+3
  6744  0176' 0800'              	movf	(main@outputTotal+2)^(0+384),w
  6745  0177' 0086'              	movwf	___aldiv@dividend+2
  6746  0178' 0800'              	movf	(main@outputTotal+1)^(0+384),w
  6747  0179' 0085'              	movwf	___aldiv@dividend+1
  6748  017A' 0800'              	movf	main@outputTotal^(0+384),w
  6749  017B' 0084'              	movwf	___aldiv@dividend
  6750  017C' 3180' 2000' 3180'  	fcall	___aldiv
  6751  017F' 0801'              	movf	?___aldiv+1,w
  6752  0180' 0023               	movlb	3	; select bank3
  6753  0181' 0080'              	movwf	(main@dutyCycle6+1)^(0+384)
  6754  0182' 0800'              	movf	?___aldiv,w
  6755  0183' 0080'              	movwf	main@dutyCycle6^(0+384)
  6756                           
  6757                           ;main.c: 122: outputIndex+=1;
  6758  0184' 3001               	movlw	1
  6759  0185' 0021               	movlb	1	; select bank1
  6760  0186' 0080'              	movwf	??_main^(0+128)
  6761  0187' 0800'              	movf	??_main^(0+128),w
  6762  0188' 0023               	movlb	3	; select bank3
  6763  0189' 0780'              	addwf	main@outputIndex^(0+384),f
  6764                           
  6765                           ;main.c: 123: if(outputIndex >= 40)outputIndex = 0;
  6766  018A' 3028               	movlw	40
  6767  018B' 0200'              	subwf	main@outputIndex^(0+384),w
  6768  018C' 1C03               	skipc
  6769  018D' 2800'              	goto	l2901
  6770  018E' 0180'              	clrf	main@outputIndex^(0+384)
  6771                           
  6772                           ;main.c: 124: }
  6773  018F' 2800'              	goto	l2901
  6774  0190'                    l2897:	
  6775                           
  6776                           ;main.c: 125: else
  6777                           ;main.c: 126: {
  6778                           ;main.c: 127: dutyCycle6=0;
  6779  0190' 0023               	movlb	3	; select bank3
  6780  0191' 0180'              	clrf	main@dutyCycle6^(0+384)
  6781  0192' 0180'              	clrf	(main@dutyCycle6+1)^(0+384)
  6782                           
  6783                           ;main.c: 128: holdOutput-=1;
  6784  0193' 3001               	movlw	1
  6785  0194' 0021               	movlb	1	; select bank1
  6786  0195' 0280'              	subwf	main@holdOutput^(0+128),f
  6787  0196'                    l2901:	
  6788                           
  6789                           ;main.c: 129: }
  6790                           ;main.c: 131: currentTemperature=analogs[1];
  6791  0196' 0023               	movlb	3	; select bank3
  6792  0197' 0802'              	movf	((main@analogs+1)^(0+384)+2),w
  6793  0198' 0021               	movlb	1	; select bank1
  6794  0199' 0080'              	movwf	(main@currentTemperature+1)^(0+128)
  6795  019A' 0023               	movlb	3	; select bank3
  6796  019B' 0802'              	movf	(main@analogs^(0+384)+2),w
  6797  019C' 0021               	movlb	1	; select bank1
  6798  019D' 0080'              	movwf	main@currentTemperature^(0+128)
  6799                           
  6800                           ;main.c: 133: if(lidOpenCount<10)
  6801  019E' 300A               	movlw	10
  6802  019F' 0200'              	subwf	main@lidOpenCount^(0+128),w
  6803  01A0' 1803               	skipnc
  6804  01A1' 2800'              	goto	l2907
  6805                           
  6806                           ;main.c: 134: {
  6807                           ;main.c: 135: lidOpenCount+=1;
  6808  01A2' 3001               	movlw	1
  6809  01A3' 0080'              	movwf	??_main^(0+128)
  6810  01A4' 0800'              	movf	??_main^(0+128),w
  6811  01A5' 0780'              	addwf	main@lidOpenCount^(0+128),f
  6812                           
  6813                           ;main.c: 136: }
  6814  01A6' 2800'              	goto	l2911
  6815  01A7'                    l2907:	
  6816                           
  6817                           ;main.c: 137: else
  6818                           ;main.c: 138: {
  6819                           ;main.c: 139: lastTemperature=currentTemperature;
  6820  01A7' 0800'              	movf	(main@currentTemperature+1)^(0+128),w
  6821  01A8' 0080'              	movwf	(main@lastTemperature+1)^(0+128)
  6822  01A9' 0800'              	movf	main@currentTemperature^(0+128),w
  6823  01AA' 0080'              	movwf	main@lastTemperature^(0+128)
  6824                           
  6825                           ;main.c: 140: lidOpenCount=0;
  6826  01AB' 0180'              	clrf	main@lidOpenCount^(0+128)
  6827  01AC'                    l2911:	
  6828                           
  6829                           ;main.c: 141: }
  6830                           ;main.c: 143: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6831  01AC' 0900'              	comf	main@currentTemperature^(0+128),w
  6832  01AD' 0080'              	movwf	??_main^(0+128)
  6833  01AE' 0900'              	comf	(main@currentTemperature+1)^(0+128),w
  6834  01AF' 0081'              	movwf	(??_main^(0+128)+1)
  6835  01B0' 0A80'              	incf	??_main^(0+128),f
  6836  01B1' 1903               	skipnz
  6837  01B2' 0A81'              	incf	(??_main^(0+128)+1),f
  6838  01B3' 0800'              	movf	main@lastTemperature^(0+128),w
  6839  01B4' 0700'              	addwf	??_main^(0+128),w
  6840  01B5' 0080'              	movwf	(??_main+2)^(0+128)
  6841  01B6' 0800'              	movf	(main@lastTemperature+1)^(0+128),w
  6842  01B7' 3D00'              	addwfc	(??_main+1)^(0+128),w
  6843  01B8' 0080'              	movwf	(??_main+3)^(0+128)
  6844  01B9' 0800'              	movf	(??_main+3)^(0+128),w
  6845  01BA' 3A80               	xorlw	128
  6846  01BB' 0080'              	movwf	(??_main+4)^(0+128)
  6847  01BC' 3080               	movlw	128
  6848  01BD' 0200'              	subwf	(??_main+4)^(0+128),w
  6849  01BE' 1D03               	skipz
  6850  01BF' 2800'              	goto	u3245
  6851  01C0' 3065               	movlw	101
  6852  01C1' 0200'              	subwf	(??_main+2)^(0+128),w
  6853  01C2'                    u3245:	
  6854  01C2' 1803               	skipnc
  6855  01C3' 2800'              	goto	l2915
  6856  01C4' 0021               	movlb	1	; select bank1
  6857  01C5' 0900'              	comf	main@currentTemperature^(0+128),w
  6858  01C6' 0080'              	movwf	??_main^(0+128)
  6859  01C7' 0900'              	comf	(main@currentTemperature+1)^(0+128),w
  6860  01C8' 0081'              	movwf	(??_main^(0+128)+1)
  6861  01C9' 0A80'              	incf	??_main^(0+128),f
  6862  01CA' 1903               	skipnz
  6863  01CB' 0A81'              	incf	(??_main^(0+128)+1),f
  6864  01CC' 0800'              	movf	main@lastTemperature^(0+128),w
  6865  01CD' 0700'              	addwf	??_main^(0+128),w
  6866  01CE' 0080'              	movwf	(??_main+2)^(0+128)
  6867  01CF' 0800'              	movf	(main@lastTemperature+1)^(0+128),w
  6868  01D0' 3D00'              	addwfc	(??_main+1)^(0+128),w
  6869  01D1' 0080'              	movwf	(??_main+3)^(0+128)
  6870  01D2' 0800'              	movf	(??_main+3)^(0+128),w
  6871  01D3' 3A80               	xorlw	128
  6872  01D4' 0080'              	movwf	(??_main+4)^(0+128)
  6873  01D5' 307F               	movlw	127
  6874  01D6' 0200'              	subwf	(??_main+4)^(0+128),w
  6875  01D7' 1D03               	skipz
  6876  01D8' 2800'              	goto	u3255
  6877  01D9' 309C               	movlw	156
  6878  01DA' 0200'              	subwf	(??_main+2)^(0+128),w
  6879  01DB'                    u3255:	
  6880  01DB' 1803               	skipnc
  6881  01DC' 2800'              	goto	l2919
  6882  01DD'                    l2915:	
  6883                           
  6884                           ;main.c: 144: {
  6885                           ;main.c: 145: dutyCycle6=0;
  6886  01DD' 0023               	movlb	3	; select bank3
  6887  01DE' 0180'              	clrf	main@dutyCycle6^(0+384)
  6888  01DF' 0180'              	clrf	(main@dutyCycle6+1)^(0+384)
  6889                           
  6890                           ;main.c: 146: holdOutput=60;
  6891  01E0' 303C               	movlw	60
  6892  01E1' 0021               	movlb	1	; select bank1
  6893  01E2' 0080'              	movwf	??_main^(0+128)
  6894  01E3' 0800'              	movf	??_main^(0+128),w
  6895  01E4' 0080'              	movwf	main@holdOutput^(0+128)
  6896  01E5'                    l2919:	
  6897                           
  6898                           ;main.c: 147: }
  6899                           ;main.c: 149: if(dutyCycle6<50)dutyCycle6=0;
  6900  01E5' 3000               	movlw	0
  6901  01E6' 0023               	movlb	3	; select bank3
  6902  01E7' 0200'              	subwf	(main@dutyCycle6+1)^(0+384),w
  6903  01E8' 3032               	movlw	50
  6904  01E9' 1903               	skipnz
  6905  01EA' 0200'              	subwf	main@dutyCycle6^(0+384),w
  6906  01EB' 1803               	skipnc
  6907  01EC' 2800'              	goto	l344
  6908  01ED' 0180'              	clrf	main@dutyCycle6^(0+384)
  6909  01EE' 0180'              	clrf	(main@dutyCycle6+1)^(0+384)
  6910  01EF'                    l344:	
  6911                           
  6912                           ;main.c: 151: loop=0;
  6913  01EF' 0021               	movlb	1	; select bank1
  6914  01F0' 0180'              	clrf	main@loop^(0+128)
  6915  01F1'                    l2923:	
  6916                           
  6917                           ;main.c: 152: }
  6918                           ;main.c: 154: pidPeriodCounter+=1;
  6919  01F1' 3001               	movlw	1
  6920  01F2' 0780'              	addwf	main@pidPeriodCounter^(0+128),f
  6921  01F3' 3000               	movlw	0
  6922  01F4' 3D80'              	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  6923                           
  6924                           ;main.c: 156: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  6925  01F5' 0023               	movlb	3	; select bank3
  6926  01F6' 0800'              	movf	(_pidMaxOutput+1)^(0+384),w
  6927  01F7' 3A80               	xorlw	128
  6928  01F8' 0021               	movlb	1	; select bank1
  6929  01F9' 0080'              	movwf	??_main^(0+128)
  6930  01FA' 0800'              	movf	(main@pidPeriodCounter+1)^(0+128),w
  6931  01FB' 3A80               	xorlw	128
  6932  01FC' 0200'              	subwf	??_main^(0+128),w
  6933  01FD' 1D03               	skipz
  6934  01FE' 2800'              	goto	u3275
  6935  01FF' 0800'              	movf	main@pidPeriodCounter^(0+128),w
  6936  0200' 0023               	movlb	3	; select bank3
  6937  0201' 0200'              	subwf	_pidMaxOutput^(0+384),w
  6938  0202'                    u3275:	
  6939  0202' 1803               	skipnc
  6940  0203' 2800'              	goto	l2929
  6941  0204' 0021               	movlb	1	; select bank1
  6942  0205' 0180'              	clrf	main@pidPeriodCounter^(0+128)
  6943  0206' 0180'              	clrf	(main@pidPeriodCounter+1)^(0+128)
  6944  0207'                    l2929:	
  6945                           
  6946                           ;main.c: 158: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  6947  0207' 0023               	movlb	3	; select bank3
  6948  0208' 0800'              	movf	(main@dutyCycle6+1)^(0+384),w
  6949  0209' 0021               	movlb	1	; select bank1
  6950  020A' 0200'              	subwf	(main@pidPeriodCounter+1)^(0+128),w
  6951  020B' 1D03               	skipz
  6952  020C' 2800'              	goto	u3285
  6953  020D' 0023               	movlb	3	; select bank3
  6954  020E' 0800'              	movf	main@dutyCycle6^(0+384),w
  6955  020F' 0021               	movlb	1	; select bank1
  6956  0210' 0200'              	subwf	main@pidPeriodCounter^(0+128),w
  6957  0211'                    u3285:	
  6958  0211' 1803               	skipnc
  6959  0212' 2800'              	goto	l346
  6960  0213' 0020               	movlb	0	; select bank0
  6961  0214' 1518               	bsf	24,2	;volatile
  6962  0215' 2800'              	goto	l2933
  6963  0216'                    l346:	
  6964                           
  6965                           ;main.c: 159: else LATC2=0;
  6966  0216' 0020               	movlb	0	; select bank0
  6967  0217' 1118               	bcf	24,2	;volatile
  6968  0218'                    l2933:	
  6969                           
  6970                           ;main.c: 161: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  6971  0218' 0023               	movlb	3	; select bank3
  6972  0219' 0180'              	clrf	main@j^(0+384)
  6973  021A' 3002               	movlw	2
  6974  021B' 0200'              	subwf	main@j^(0+384),w
  6975  021C' 1803               	btfsc	3,0
  6976  021D' 2800'              	goto	l2945
  6977  021E'                    l2939:	
  6978  021E' 0800'              	movf	main@j^(0+384),w
  6979  021F' 0021               	movlb	1	; select bank1
  6980  0220' 0080'              	movwf	??_main^(0+128)
  6981  0221' 0181'              	clrf	(??_main^(0+128)+1)
  6982  0222' 0800'              	movf	??_main^(0+128),w
  6983  0223' 0020               	movlb	0	; select bank0
  6984  0224' 0086'              	movwf	readAnalog@channel
  6985  0225' 0021               	movlb	1	; select bank1
  6986  0226' 0800'              	movf	(??_main+1)^(0+128),w
  6987  0227' 0020               	movlb	0	; select bank0
  6988  0228' 0087'              	movwf	readAnalog@channel+1
  6989  0229' 3180' 2000' 3180'  	fcall	_readAnalog
  6990  022C' 0023               	movlb	3	; select bank3
  6991  022D' 3500'              	lslf	main@j^(0+384),w
  6992  022E' 3E00'              	addlw	(low (main@analogs| (0+256)))& (0+255)
  6993  022F' 0086               	movwf	6
  6994  0230' 3001               	movlw	1	; select bank3/4
  6995  0231' 0087               	movwf	7
  6996  0232' 0020               	movlb	0	; select bank0
  6997  0233' 0806'              	movf	?_readAnalog,w
  6998  0234' 3FC0               	movwi [0]fsr1
  6999  0235' 0807'              	movf	?_readAnalog+1,w
  7000  0236' 3FC1               	movwi [1]fsr1
  7001  0237' 3001               	movlw	1
  7002  0238' 0021               	movlb	1	; select bank1
  7003  0239' 0080'              	movwf	??_main^(0+128)
  7004  023A' 0800'              	movf	??_main^(0+128),w
  7005  023B' 0023               	movlb	3	; select bank3
  7006  023C' 0780'              	addwf	main@j^(0+384),f
  7007  023D' 3002               	movlw	2
  7008  023E' 0200'              	subwf	main@j^(0+384),w
  7009  023F' 1C03               	skipc
  7010  0240' 2800'              	goto	l2939
  7011  0241'                    l2945:	
  7012                           
  7013                           ;main.c: 163: analogs[0]=tempCalc(analogs[0]);
  7014  0241' 0800'              	movf	(main@analogs+1)^(0+384),w
  7015  0242' 0020               	movlb	0	; select bank0
  7016  0243' 00BE'              	movwf	tempCalc@analogValue+1
  7017  0244' 0023               	movlb	3	; select bank3
  7018  0245' 0800'              	movf	main@analogs^(0+384),w
  7019  0246' 0020               	movlb	0	; select bank0
  7020  0247' 00BD'              	movwf	tempCalc@analogValue
  7021  0248' 3180' 2000' 3180'  	fcall	_tempCalc
  7022  024B' 0020               	movlb	0	; select bank0
  7023  024C' 083D'              	movf	?_tempCalc,w
  7024  024D' 00C9'              	movwf	___fttol@f1
  7025  024E' 083E'              	movf	?_tempCalc+1,w
  7026  024F' 00CA'              	movwf	___fttol@f1+1
  7027  0250' 083F'              	movf	?_tempCalc+2,w
  7028  0251' 00CB'              	movwf	___fttol@f1+2
  7029  0252' 3180' 2000' 3180'  	fcall	___fttol
  7030  0255' 0020               	movlb	0	; select bank0
  7031  0256' 084A'              	movf	?___fttol+1,w
  7032  0257' 0023               	movlb	3	; select bank3
  7033  0258' 0080'              	movwf	(main@analogs+1)^(0+384)
  7034  0259' 0020               	movlb	0	; select bank0
  7035  025A' 0849'              	movf	?___fttol,w
  7036  025B' 0023               	movlb	3	; select bank3
  7037  025C' 0080'              	movwf	main@analogs^(0+384)
  7038                           
  7039                           ;main.c: 165: analogs[1]=tempCalc(analogs[1]);
  7040  025D' 0802'              	movf	((main@analogs+1)^(0+384)+2),w
  7041  025E' 0020               	movlb	0	; select bank0
  7042  025F' 00BE'              	movwf	tempCalc@analogValue+1
  7043  0260' 0023               	movlb	3	; select bank3
  7044  0261' 0802'              	movf	(main@analogs^(0+384)+2),w
  7045  0262' 0020               	movlb	0	; select bank0
  7046  0263' 00BD'              	movwf	tempCalc@analogValue
  7047  0264' 3180' 2000' 3180'  	fcall	_tempCalc
  7048  0267' 0020               	movlb	0	; select bank0
  7049  0268' 083D'              	movf	?_tempCalc,w
  7050  0269' 00C9'              	movwf	___fttol@f1
  7051  026A' 083E'              	movf	?_tempCalc+1,w
  7052  026B' 00CA'              	movwf	___fttol@f1+1
  7053  026C' 083F'              	movf	?_tempCalc+2,w
  7054  026D' 00CB'              	movwf	___fttol@f1+2
  7055  026E' 3180' 2000' 3180'  	fcall	___fttol
  7056  0271' 0020               	movlb	0	; select bank0
  7057  0272' 084A'              	movf	?___fttol+1,w
  7058  0273' 0023               	movlb	3	; select bank3
  7059  0274' 0082'              	movwf	((main@analogs+1)^(0+384)+2)
  7060  0275' 0020               	movlb	0	; select bank0
  7061  0276' 0849'              	movf	?___fttol,w
  7062  0277' 0023               	movlb	3	; select bank3
  7063  0278' 0082'              	movwf	(main@analogs^(0+384)+2)
  7064                           
  7065                           ;main.c: 173: if(RB2==1)
  7066  0279' 0020               	movlb	0	; select bank0
  7067  027A' 1D0D               	btfss	13,2	;volatile
  7068  027B' 2800'              	goto	l2957
  7069                           
  7070                           ;main.c: 174: {
  7071                           ;main.c: 179: { LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Set:");};
  7072  027C' 0184'              	clrf	LCD_Set_Cursor@y
  7073  027D' 3000               	movlw	0
  7074  027E' 3180' 2000' 3180'  	fcall	_LCD_Set_Cursor
  7075  0281' 3000'              	movlw	low (STR_3| (0+32768))
  7076  0282' 0085'              	movwf	LCD_Write_String@a
  7077  0283' 3000'              	movlw	high (STR_3| (0+32768))
  7078  0284' 0086'              	movwf	LCD_Write_String@a+1
  7079  0285' 3180' 2000' 3180'  	fcall	_LCD_Write_String
  7080                           
  7081                           ;main.c: 180: { LCD_Set_Cursor(0,1); LCD_Write_String("  Pit Setpoint  ");};
  7082  0288' 0184'              	clrf	LCD_Set_Cursor@y
  7083  0289' 0A84'              	incf	LCD_Set_Cursor@y,f
  7084  028A' 3000               	movlw	0
  7085  028B' 3180' 2000' 3180'  	fcall	_LCD_Set_Cursor
  7086  028E' 3000'              	movlw	low (STR_4| (0+32768))
  7087  028F' 0085'              	movwf	LCD_Write_String@a
  7088  0290' 3000'              	movlw	high (STR_4| (0+32768))
  7089  0291' 0086'              	movwf	LCD_Write_String@a+1
  7090  0292' 3180' 2000' 3180'  	fcall	_LCD_Write_String
  7091                           
  7092                           ;main.c: 181: set = 0;
  7093  0295' 0021               	movlb	1	; select bank1
  7094  0296' 0180'              	clrf	main@set^(0+128)
  7095  0297'                    l2957:	
  7096                           
  7097                           ;main.c: 183: }
  7098                           ;main.c: 422: loop+=1;
  7099  0297' 3001               	movlw	1
  7100  0298' 0021               	movlb	1	; select bank1
  7101  0299' 0080'              	movwf	??_main^(0+128)
  7102  029A' 0800'              	movf	??_main^(0+128),w
  7103  029B' 0780'              	addwf	main@loop^(0+128),f
  7104  029C' 2800'              	goto	l2855
  7105  029D'                    __end_of_main:	
  7106                           
  7107                           	psect	text1
  7108  0000'                    __ptext1:	
  7109 ;; *************** function _tempCalc *****************
  7110 ;; Defined at:
  7111 ;;		line 4 in file "tempCalc.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  analogValue     2   61[BANK0 ] int 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  steinhart       3   70[BANK0 ] float 
  7116 ;;  R               3   64[BANK0 ] float 
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  3   61[BANK0 ] float 
  7119 ;; Registers used:
  7120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7126 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;Total ram usage:       12 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    4
  7133 ;; This function calls:
  7134 ;;		___awtoft
  7135 ;;		___ftadd
  7136 ;;		___ftdiv
  7137 ;;		___ftmul
  7138 ;;		___ftsub
  7139 ;;		_log
  7140 ;; This function is called by:
  7141 ;;		_main
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           
  7146                           ;psect for function _tempCalc
  7147  0000'                    _tempCalc:	
  7148                           
  7149                           ;tempCalc.c: 6: float R, steinhart;
  7150                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  7151                           
  7152                           ;incstack = 0
  7153                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7154  0000' 3000               	movlw	0
  7155  0001' 0020               	movlb	0	; select bank0
  7156  0002' 00A0'              	movwf	___ftadd@f1
  7157  0003' 3080               	movlw	128
  7158  0004' 00A1'              	movwf	___ftadd@f1+1
  7159  0005' 30BF               	movlw	191
  7160  0006' 00A2'              	movwf	___ftadd@f1+2
  7161  0007' 083E'              	movf	tempCalc@analogValue+1,w
  7162  0008' 0089'              	movwf	___awtoft@c+1
  7163  0009' 083D'              	movf	tempCalc@analogValue,w
  7164  000A' 0088'              	movwf	___awtoft@c
  7165  000B' 3180' 2000' 3180'  	fcall	___awtoft
  7166  000E' 0808'              	movf	?___awtoft,w
  7167  000F' 0020               	movlb	0	; select bank0
  7168  0010' 0090'              	movwf	___ftdiv@f2
  7169  0011' 0809'              	movf	?___awtoft+1,w
  7170  0012' 0091'              	movwf	___ftdiv@f2+1
  7171  0013' 080A'              	movf	?___awtoft+2,w
  7172  0014' 0092'              	movwf	___ftdiv@f2+2
  7173  0015' 30C0               	movlw	192
  7174  0016' 0093'              	movwf	___ftdiv@f1
  7175  0017' 307F               	movlw	127
  7176  0018' 0094'              	movwf	___ftdiv@f1+1
  7177  0019' 3044               	movlw	68
  7178  001A' 0095'              	movwf	___ftdiv@f1+2
  7179  001B' 3180' 2000' 3180'  	fcall	___ftdiv
  7180  001E' 0020               	movlb	0	; select bank0
  7181  001F' 0810'              	movf	?___ftdiv,w
  7182  0020' 00A3'              	movwf	___ftadd@f2
  7183  0021' 0811'              	movf	?___ftdiv+1,w
  7184  0022' 00A4'              	movwf	___ftadd@f2+1
  7185  0023' 0812'              	movf	?___ftdiv+2,w
  7186  0024' 00A5'              	movwf	___ftadd@f2+2
  7187  0025' 3180' 2000' 3180'  	fcall	___ftadd
  7188  0028' 0020               	movlb	0	; select bank0
  7189  0029' 0820'              	movf	?___ftadd,w
  7190  002A' 00C3'              	movwf	_tempCalc$1008
  7191  002B' 0821'              	movf	?___ftadd+1,w
  7192  002C' 00C4'              	movwf	_tempCalc$1008+1
  7193  002D' 0822'              	movf	?___ftadd+2,w
  7194  002E' 00C5'              	movwf	_tempCalc$1008+2
  7195                           
  7196                           ;tempCalc.c: 6: float R, steinhart;
  7197                           ;tempCalc.c: 8: R = 9880/(1023/(float)analogValue - 1);
  7198  002F' 0843'              	movf	_tempCalc$1008,w
  7199  0030' 0090'              	movwf	___ftdiv@f2
  7200  0031' 0844'              	movf	_tempCalc$1008+1,w
  7201  0032' 0091'              	movwf	___ftdiv@f2+1
  7202  0033' 0845'              	movf	_tempCalc$1008+2,w
  7203  0034' 0092'              	movwf	___ftdiv@f2+2
  7204  0035' 3060               	movlw	96
  7205  0036' 0093'              	movwf	___ftdiv@f1
  7206  0037' 301A               	movlw	26
  7207  0038' 0094'              	movwf	___ftdiv@f1+1
  7208  0039' 3046               	movlw	70
  7209  003A' 0095'              	movwf	___ftdiv@f1+2
  7210  003B' 3180' 2000' 3180'  	fcall	___ftdiv
  7211  003E' 0020               	movlb	0	; select bank0
  7212  003F' 0810'              	movf	?___ftdiv,w
  7213  0040' 00C0'              	movwf	tempCalc@R
  7214  0041' 0811'              	movf	?___ftdiv+1,w
  7215  0042' 00C1'              	movwf	tempCalc@R+1
  7216  0043' 0812'              	movf	?___ftdiv+2,w
  7217  0044' 00C2'              	movwf	tempCalc@R+2
  7218                           
  7219                           ;tempCalc.c: 10: steinhart = R /10000;
  7220  0045' 3040               	movlw	64
  7221  0046' 0090'              	movwf	___ftdiv@f2
  7222  0047' 301C               	movlw	28
  7223  0048' 0091'              	movwf	___ftdiv@f2+1
  7224  0049' 3046               	movlw	70
  7225  004A' 0092'              	movwf	___ftdiv@f2+2
  7226  004B' 0840'              	movf	tempCalc@R,w
  7227  004C' 0093'              	movwf	___ftdiv@f1
  7228  004D' 0841'              	movf	tempCalc@R+1,w
  7229  004E' 0094'              	movwf	___ftdiv@f1+1
  7230  004F' 0842'              	movf	tempCalc@R+2,w
  7231  0050' 0095'              	movwf	___ftdiv@f1+2
  7232  0051' 3180' 2000' 3180'  	fcall	___ftdiv
  7233  0054' 0020               	movlb	0	; select bank0
  7234  0055' 0810'              	movf	?___ftdiv,w
  7235  0056' 00C6'              	movwf	tempCalc@steinhart
  7236  0057' 0811'              	movf	?___ftdiv+1,w
  7237  0058' 00C7'              	movwf	tempCalc@steinhart+1
  7238  0059' 0812'              	movf	?___ftdiv+2,w
  7239  005A' 00C8'              	movwf	tempCalc@steinhart+2
  7240                           
  7241                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7242  005B' 0846'              	movf	tempCalc@steinhart,w
  7243  005C' 00B7'              	movwf	log@x
  7244  005D' 0847'              	movf	tempCalc@steinhart+1,w
  7245  005E' 00B8'              	movwf	log@x+1
  7246  005F' 0848'              	movf	tempCalc@steinhart+2,w
  7247  0060' 00B9'              	movwf	log@x+2
  7248  0061' 3180' 2000' 3180'  	fcall	_log
  7249  0064' 0020               	movlb	0	; select bank0
  7250  0065' 0837'              	movf	?_log,w
  7251  0066' 00C6'              	movwf	tempCalc@steinhart
  7252  0067' 0838'              	movf	?_log+1,w
  7253  0068' 00C7'              	movwf	tempCalc@steinhart+1
  7254  0069' 0839'              	movf	?_log+2,w
  7255  006A' 00C8'              	movwf	tempCalc@steinhart+2
  7256                           
  7257                           ;tempCalc.c: 12: steinhart /= 3930;
  7258  006B' 30A0               	movlw	160
  7259  006C' 0090'              	movwf	___ftdiv@f2
  7260  006D' 3075               	movlw	117
  7261  006E' 0091'              	movwf	___ftdiv@f2+1
  7262  006F' 3045               	movlw	69
  7263  0070' 0092'              	movwf	___ftdiv@f2+2
  7264  0071' 0846'              	movf	tempCalc@steinhart,w
  7265  0072' 0093'              	movwf	___ftdiv@f1
  7266  0073' 0847'              	movf	tempCalc@steinhart+1,w
  7267  0074' 0094'              	movwf	___ftdiv@f1+1
  7268  0075' 0848'              	movf	tempCalc@steinhart+2,w
  7269  0076' 0095'              	movwf	___ftdiv@f1+2
  7270  0077' 3180' 2000' 3180'  	fcall	___ftdiv
  7271  007A' 0020               	movlb	0	; select bank0
  7272  007B' 0810'              	movf	?___ftdiv,w
  7273  007C' 00C6'              	movwf	tempCalc@steinhart
  7274  007D' 0811'              	movf	?___ftdiv+1,w
  7275  007E' 00C7'              	movwf	tempCalc@steinhart+1
  7276  007F' 0812'              	movf	?___ftdiv+2,w
  7277  0080' 00C8'              	movwf	tempCalc@steinhart+2
  7278                           
  7279                           ;tempCalc.c: 14: steinhart += 1.0 / (25 + 273.15);
  7280  0081' 30CF               	movlw	207
  7281  0082' 00A0'              	movwf	___ftadd@f1
  7282  0083' 305B               	movlw	91
  7283  0084' 00A1'              	movwf	___ftadd@f1+1
  7284  0085' 303B               	movlw	59
  7285  0086' 00A2'              	movwf	___ftadd@f1+2
  7286  0087' 0846'              	movf	tempCalc@steinhart,w
  7287  0088' 00A3'              	movwf	___ftadd@f2
  7288  0089' 0847'              	movf	tempCalc@steinhart+1,w
  7289  008A' 00A4'              	movwf	___ftadd@f2+1
  7290  008B' 0848'              	movf	tempCalc@steinhart+2,w
  7291  008C' 00A5'              	movwf	___ftadd@f2+2
  7292  008D' 3180' 2000' 3180'  	fcall	___ftadd
  7293  0090' 0020               	movlb	0	; select bank0
  7294  0091' 0820'              	movf	?___ftadd,w
  7295  0092' 00C6'              	movwf	tempCalc@steinhart
  7296  0093' 0821'              	movf	?___ftadd+1,w
  7297  0094' 00C7'              	movwf	tempCalc@steinhart+1
  7298  0095' 0822'              	movf	?___ftadd+2,w
  7299  0096' 00C8'              	movwf	tempCalc@steinhart+2
  7300                           
  7301                           ;tempCalc.c: 15: steinhart = 1.0 / steinhart;
  7302  0097' 0846'              	movf	tempCalc@steinhart,w
  7303  0098' 0090'              	movwf	___ftdiv@f2
  7304  0099' 0847'              	movf	tempCalc@steinhart+1,w
  7305  009A' 0091'              	movwf	___ftdiv@f2+1
  7306  009B' 0848'              	movf	tempCalc@steinhart+2,w
  7307  009C' 0092'              	movwf	___ftdiv@f2+2
  7308  009D' 3000               	movlw	0
  7309  009E' 0093'              	movwf	___ftdiv@f1
  7310  009F' 3080               	movlw	128
  7311  00A0' 0094'              	movwf	___ftdiv@f1+1
  7312  00A1' 303F               	movlw	63
  7313  00A2' 0095'              	movwf	___ftdiv@f1+2
  7314  00A3' 3180' 2000' 3180'  	fcall	___ftdiv
  7315  00A6' 0020               	movlb	0	; select bank0
  7316  00A7' 0810'              	movf	?___ftdiv,w
  7317  00A8' 00C6'              	movwf	tempCalc@steinhart
  7318  00A9' 0811'              	movf	?___ftdiv+1,w
  7319  00AA' 00C7'              	movwf	tempCalc@steinhart+1
  7320  00AB' 0812'              	movf	?___ftdiv+2,w
  7321  00AC' 00C8'              	movwf	tempCalc@steinhart+2
  7322                           
  7323                           ;tempCalc.c: 16: steinhart -= 273.15;
  7324  00AD' 3093               	movlw	147
  7325  00AE' 00AD'              	movwf	___ftsub@f2
  7326  00AF' 3088               	movlw	136
  7327  00B0' 00AE'              	movwf	___ftsub@f2+1
  7328  00B1' 3043               	movlw	67
  7329  00B2' 00AF'              	movwf	___ftsub@f2+2
  7330  00B3' 0846'              	movf	tempCalc@steinhart,w
  7331  00B4' 00B0'              	movwf	___ftsub@f1
  7332  00B5' 0847'              	movf	tempCalc@steinhart+1,w
  7333  00B6' 00B1'              	movwf	___ftsub@f1+1
  7334  00B7' 0848'              	movf	tempCalc@steinhart+2,w
  7335  00B8' 00B2'              	movwf	___ftsub@f1+2
  7336  00B9' 3180' 2000' 3180'  	fcall	___ftsub
  7337  00BC' 0020               	movlb	0	; select bank0
  7338  00BD' 082D'              	movf	?___ftsub,w
  7339  00BE' 00C6'              	movwf	tempCalc@steinhart
  7340  00BF' 082E'              	movf	?___ftsub+1,w
  7341  00C0' 00C7'              	movwf	tempCalc@steinhart+1
  7342  00C1' 082F'              	movf	?___ftsub+2,w
  7343  00C2' 00C8'              	movwf	tempCalc@steinhart+2
  7344                           
  7345                           ;tempCalc.c: 18: steinhart*=10;
  7346  00C3' 3000               	movlw	0
  7347  00C4' 0080'              	movwf	___ftmul@f1
  7348  00C5' 3020               	movlw	32
  7349  00C6' 0081'              	movwf	___ftmul@f1+1
  7350  00C7' 3041               	movlw	65
  7351  00C8' 0082'              	movwf	___ftmul@f1+2
  7352  00C9' 0846'              	movf	tempCalc@steinhart,w
  7353  00CA' 0083'              	movwf	___ftmul@f2
  7354  00CB' 0847'              	movf	tempCalc@steinhart+1,w
  7355  00CC' 0084'              	movwf	___ftmul@f2+1
  7356  00CD' 0848'              	movf	tempCalc@steinhart+2,w
  7357  00CE' 0085'              	movwf	___ftmul@f2+2
  7358  00CF' 3180' 2000' 3180'  	fcall	___ftmul
  7359  00D2' 0020               	movlb	0	; select bank0
  7360  00D3' 0800'              	movf	?___ftmul,w
  7361  00D4' 00C6'              	movwf	tempCalc@steinhart
  7362  00D5' 0801'              	movf	?___ftmul+1,w
  7363  00D6' 00C7'              	movwf	tempCalc@steinhart+1
  7364  00D7' 0802'              	movf	?___ftmul+2,w
  7365  00D8' 00C8'              	movwf	tempCalc@steinhart+2
  7366                           
  7367                           ;tempCalc.c: 20: steinhart = steinhart*9/5+320;
  7368  00D9' 3000               	movlw	0
  7369  00DA' 00A0'              	movwf	___ftadd@f1
  7370  00DB' 30A0               	movlw	160
  7371  00DC' 00A1'              	movwf	___ftadd@f1+1
  7372  00DD' 3043               	movlw	67
  7373  00DE' 00A2'              	movwf	___ftadd@f1+2
  7374  00DF' 3000               	movlw	0
  7375  00E0' 0090'              	movwf	___ftdiv@f2
  7376  00E1' 30A0               	movlw	160
  7377  00E2' 0091'              	movwf	___ftdiv@f2+1
  7378  00E3' 3040               	movlw	64
  7379  00E4' 0092'              	movwf	___ftdiv@f2+2
  7380  00E5' 3000               	movlw	0
  7381  00E6' 0080'              	movwf	___ftmul@f1
  7382  00E7' 3010               	movlw	16
  7383  00E8' 0081'              	movwf	___ftmul@f1+1
  7384  00E9' 3041               	movlw	65
  7385  00EA' 0082'              	movwf	___ftmul@f1+2
  7386  00EB' 0846'              	movf	tempCalc@steinhart,w
  7387  00EC' 0083'              	movwf	___ftmul@f2
  7388  00ED' 0847'              	movf	tempCalc@steinhart+1,w
  7389  00EE' 0084'              	movwf	___ftmul@f2+1
  7390  00EF' 0848'              	movf	tempCalc@steinhart+2,w
  7391  00F0' 0085'              	movwf	___ftmul@f2+2
  7392  00F1' 3180' 2000' 3180'  	fcall	___ftmul
  7393  00F4' 0020               	movlb	0	; select bank0
  7394  00F5' 0800'              	movf	?___ftmul,w
  7395  00F6' 0093'              	movwf	___ftdiv@f1
  7396  00F7' 0801'              	movf	?___ftmul+1,w
  7397  00F8' 0094'              	movwf	___ftdiv@f1+1
  7398  00F9' 0802'              	movf	?___ftmul+2,w
  7399  00FA' 0095'              	movwf	___ftdiv@f1+2
  7400  00FB' 3180' 2000' 3180'  	fcall	___ftdiv
  7401  00FE' 0020               	movlb	0	; select bank0
  7402  00FF' 0810'              	movf	?___ftdiv,w
  7403  0100' 00A3'              	movwf	___ftadd@f2
  7404  0101' 0811'              	movf	?___ftdiv+1,w
  7405  0102' 00A4'              	movwf	___ftadd@f2+1
  7406  0103' 0812'              	movf	?___ftdiv+2,w
  7407  0104' 00A5'              	movwf	___ftadd@f2+2
  7408  0105' 3180' 2000'        	fcall	___ftadd
  7409  0107' 0020               	movlb	0	; select bank0
  7410  0108' 0820'              	movf	?___ftadd,w
  7411  0109' 00C6'              	movwf	tempCalc@steinhart
  7412  010A' 0821'              	movf	?___ftadd+1,w
  7413  010B' 00C7'              	movwf	tempCalc@steinhart+1
  7414  010C' 0822'              	movf	?___ftadd+2,w
  7415  010D' 00C8'              	movwf	tempCalc@steinhart+2
  7416                           
  7417                           ;tempCalc.c: 22: return steinhart;
  7418  010E' 0846'              	movf	tempCalc@steinhart,w
  7419  010F' 00BD'              	movwf	?_tempCalc
  7420  0110' 0847'              	movf	tempCalc@steinhart+1,w
  7421  0111' 00BE'              	movwf	?_tempCalc+1
  7422  0112' 0848'              	movf	tempCalc@steinhart+2,w
  7423  0113' 00BF'              	movwf	?_tempCalc+2
  7424  0114' 0008               	return
  7425  0115'                    __end_of_tempCalc:	
  7426                           
  7427                           	psect	text2
  7428  0000'                    __ptext2:	
  7429 ;; *************** function _log *****************
  7430 ;; Defined at:
  7431 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;  x               3   55[BANK0 ] float 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;  exponent        2   59[BANK0 ] int 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  3   55[BANK0 ] int 
  7438 ;; Registers used:
  7439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7445 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;Total ram usage:        6 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    3
  7452 ;; This function calls:
  7453 ;;		___awtoft
  7454 ;;		___ftadd
  7455 ;;		___ftge
  7456 ;;		___ftmul
  7457 ;;		_eval_poly
  7458 ;;		_frexp
  7459 ;; This function is called by:
  7460 ;;		_tempCalc
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           
  7465                           ;psect for function _log
  7466  0000'                    _log:	
  7467                           
  7468                           ;incstack = 0
  7469                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7470  0000' 0020               	movlb	0	; select bank0
  7471  0001' 0837'              	movf	log@x,w
  7472  0002' 0080'              	movwf	___ftge@ff1
  7473  0003' 0838'              	movf	log@x+1,w
  7474  0004' 0081'              	movwf	___ftge@ff1+1
  7475  0005' 0839'              	movf	log@x+2,w
  7476  0006' 0082'              	movwf	___ftge@ff1+2
  7477  0007' 3000               	movlw	0
  7478  0008' 0083'              	movwf	___ftge@ff2
  7479  0009' 3000               	movlw	0
  7480  000A' 0084'              	movwf	___ftge@ff2+1
  7481  000B' 3000               	movlw	0
  7482  000C' 0085'              	movwf	___ftge@ff2+2
  7483  000D' 3180' 2000' 3180'  	fcall	___ftge
  7484  0010' 1803               	btfsc	3,0
  7485  0011' 2800'              	goto	l2357
  7486  0012' 3021               	movlw	33
  7487  0013' 0021               	movlb	1	; select bank1
  7488  0014' 0080'              	movwf	_errno^(0+128)
  7489  0015' 3000               	movlw	0
  7490  0016' 0081'              	movwf	(_errno^(0+128)+1)
  7491  0017' 3000               	movlw	0
  7492  0018' 0020               	movlb	0	; select bank0
  7493  0019' 00B7'              	movwf	?_log
  7494  001A' 3000               	movlw	0
  7495  001B' 00B8'              	movwf	?_log+1
  7496  001C' 3000               	movlw	0
  7497  001D' 00B9'              	movwf	?_log+2
  7498  001E' 0008               	return
  7499  001F'                    l2357:	
  7500  001F' 0020               	movlb	0	; select bank0
  7501  0020' 0839'              	movf	log@x+2,w
  7502  0021' 0438'              	iorwf	log@x+1,w
  7503  0022' 0437'              	iorwf	log@x,w
  7504  0023' 1D03               	skipz
  7505  0024' 2800'              	goto	l2363
  7506  0025' 3022               	movlw	34
  7507  0026' 0021               	movlb	1	; select bank1
  7508  0027' 0080'              	movwf	_errno^(0+128)
  7509  0028' 3000               	movlw	0
  7510  0029' 0081'              	movwf	(_errno^(0+128)+1)
  7511  002A' 3000               	movlw	0
  7512  002B' 0020               	movlb	0	; select bank0
  7513  002C' 00B7'              	movwf	?_log
  7514  002D' 3000               	movlw	0
  7515  002E' 00B8'              	movwf	?_log+1
  7516  002F' 3000               	movlw	0
  7517  0030' 00B9'              	movwf	?_log+2
  7518  0031' 0008               	return
  7519  0032'                    l2363:	
  7520  0032' 3000               	movlw	0
  7521  0033' 00A0'              	movwf	___ftadd@f1
  7522  0034' 3080               	movlw	128
  7523  0035' 00A1'              	movwf	___ftadd@f1+1
  7524  0036' 30BF               	movlw	191
  7525  0037' 00A2'              	movwf	___ftadd@f1+2
  7526  0038' 3000               	movlw	0
  7527  0039' 0080'              	movwf	___ftmul@f1
  7528  003A' 3000               	movlw	0
  7529  003B' 0081'              	movwf	___ftmul@f1+1
  7530  003C' 3040               	movlw	64
  7531  003D' 0082'              	movwf	___ftmul@f1+2
  7532  003E' 3000'              	movlw	(low (log@exponent| 0))& (0+255)
  7533  003F' 00BA'              	movwf	??_log
  7534  0040' 083A'              	movf	??_log,w
  7535  0041' 0083'              	movwf	frexp@eptr
  7536  0042' 0837'              	movf	log@x,w
  7537  0043' 0080'              	movwf	frexp@value
  7538  0044' 0838'              	movf	log@x+1,w
  7539  0045' 0081'              	movwf	frexp@value+1
  7540  0046' 0839'              	movf	log@x+2,w
  7541  0047' 0082'              	movwf	frexp@value+2
  7542  0048' 3180' 2000' 3180'  	fcall	_frexp
  7543  004B' 0800'              	movf	?_frexp,w
  7544  004C' 0020               	movlb	0	; select bank0
  7545  004D' 0083'              	movwf	___ftmul@f2
  7546  004E' 0801'              	movf	?_frexp+1,w
  7547  004F' 0084'              	movwf	___ftmul@f2+1
  7548  0050' 0802'              	movf	?_frexp+2,w
  7549  0051' 0085'              	movwf	___ftmul@f2+2
  7550  0052' 3180' 2000' 3180'  	fcall	___ftmul
  7551  0055' 0020               	movlb	0	; select bank0
  7552  0056' 0800'              	movf	?___ftmul,w
  7553  0057' 00A3'              	movwf	___ftadd@f2
  7554  0058' 0801'              	movf	?___ftmul+1,w
  7555  0059' 00A4'              	movwf	___ftadd@f2+1
  7556  005A' 0802'              	movf	?___ftmul+2,w
  7557  005B' 00A5'              	movwf	___ftadd@f2+2
  7558  005C' 3180' 2000' 3180'  	fcall	___ftadd
  7559  005F' 0020               	movlb	0	; select bank0
  7560  0060' 0820'              	movf	?___ftadd,w
  7561  0061' 00B7'              	movwf	log@x
  7562  0062' 0821'              	movf	?___ftadd+1,w
  7563  0063' 00B8'              	movwf	log@x+1
  7564  0064' 0822'              	movf	?___ftadd+2,w
  7565  0065' 00B9'              	movwf	log@x+2
  7566  0066' 30FF               	movlw	255
  7567  0067' 07BB'              	addwf	log@exponent,f
  7568  0068' 30FF               	movlw	255
  7569  0069' 3DBC'              	addwfc	log@exponent+1,f
  7570  006A' 0837'              	movf	log@x,w
  7571  006B' 00AD'              	movwf	eval_poly@x
  7572  006C' 0838'              	movf	log@x+1,w
  7573  006D' 00AE'              	movwf	eval_poly@x+1
  7574  006E' 0839'              	movf	log@x+2,w
  7575  006F' 00AF'              	movwf	eval_poly@x+2
  7576  0070' 3000'              	movlw	low (log@coeff| (0+32768))
  7577  0071' 00B0'              	movwf	eval_poly@d
  7578  0072' 3000'              	movlw	high (log@coeff| (0+32768))
  7579  0073' 00B1'              	movwf	eval_poly@d+1
  7580  0074' 3008               	movlw	8
  7581  0075' 00B2'              	movwf	eval_poly@n
  7582  0076' 3000               	movlw	0
  7583  0077' 00B3'              	movwf	eval_poly@n+1
  7584  0078' 3180' 2000' 3180'  	fcall	_eval_poly
  7585  007B' 0020               	movlb	0	; select bank0
  7586  007C' 082D'              	movf	?_eval_poly,w
  7587  007D' 00B7'              	movwf	log@x
  7588  007E' 082E'              	movf	?_eval_poly+1,w
  7589  007F' 00B8'              	movwf	log@x+1
  7590  0080' 082F'              	movf	?_eval_poly+2,w
  7591  0081' 00B9'              	movwf	log@x+2
  7592  0082' 0837'              	movf	log@x,w
  7593  0083' 00A0'              	movwf	___ftadd@f1
  7594  0084' 0838'              	movf	log@x+1,w
  7595  0085' 00A1'              	movwf	___ftadd@f1+1
  7596  0086' 0839'              	movf	log@x+2,w
  7597  0087' 00A2'              	movwf	___ftadd@f1+2
  7598  0088' 3072               	movlw	114
  7599  0089' 0080'              	movwf	___ftmul@f1
  7600  008A' 3031               	movlw	49
  7601  008B' 0081'              	movwf	___ftmul@f1+1
  7602  008C' 303F               	movlw	63
  7603  008D' 0082'              	movwf	___ftmul@f1+2
  7604  008E' 083C'              	movf	log@exponent+1,w
  7605  008F' 0089'              	movwf	___awtoft@c+1
  7606  0090' 083B'              	movf	log@exponent,w
  7607  0091' 0088'              	movwf	___awtoft@c
  7608  0092' 3180' 2000' 3180'  	fcall	___awtoft
  7609  0095' 0808'              	movf	?___awtoft,w
  7610  0096' 0020               	movlb	0	; select bank0
  7611  0097' 0083'              	movwf	___ftmul@f2
  7612  0098' 0809'              	movf	?___awtoft+1,w
  7613  0099' 0084'              	movwf	___ftmul@f2+1
  7614  009A' 080A'              	movf	?___awtoft+2,w
  7615  009B' 0085'              	movwf	___ftmul@f2+2
  7616  009C' 3180' 2000' 3180'  	fcall	___ftmul
  7617  009F' 0020               	movlb	0	; select bank0
  7618  00A0' 0800'              	movf	?___ftmul,w
  7619  00A1' 00A3'              	movwf	___ftadd@f2
  7620  00A2' 0801'              	movf	?___ftmul+1,w
  7621  00A3' 00A4'              	movwf	___ftadd@f2+1
  7622  00A4' 0802'              	movf	?___ftmul+2,w
  7623  00A5' 00A5'              	movwf	___ftadd@f2+2
  7624  00A6' 3180' 2000'        	fcall	___ftadd
  7625  00A8' 0020               	movlb	0	; select bank0
  7626  00A9' 0820'              	movf	?___ftadd,w
  7627  00AA' 00B7'              	movwf	?_log
  7628  00AB' 0821'              	movf	?___ftadd+1,w
  7629  00AC' 00B8'              	movwf	?_log+1
  7630  00AD' 0822'              	movf	?___ftadd+2,w
  7631  00AE' 00B9'              	movwf	?_log+2
  7632  00AF' 0008               	return
  7633  00B0'                    __end_of_log:	
  7634                           
  7635                           	psect	text3
  7636  0000'                    __ptext3:	
  7637 ;; *************** function _frexp *****************
  7638 ;; Defined at:
  7639 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  value           3    0[COMMON] int 
  7642 ;;  eptr            1    3[COMMON] PTR int 
  7643 ;;		 -> log@exponent(2), 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;		None
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  3    0[COMMON] PTR int 
  7648 ;; Registers used:
  7649 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;Total ram usage:        6 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; This function calls:
  7662 ;;		Nothing
  7663 ;; This function is called by:
  7664 ;;		_log
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           
  7669                           ;psect for function _frexp
  7670  0000'                    _frexp:	
  7671                           
  7672                           ;incstack = 0
  7673                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7674  0000' 0802'              	movf	frexp@value+2,w
  7675  0001' 0401'              	iorwf	frexp@value+1,w
  7676  0002' 0400'              	iorwf	frexp@value,w
  7677  0003' 1D03               	skipz
  7678  0004' 2800'              	goto	l2199
  7679  0005' 0803'              	movf	frexp@eptr,w
  7680  0006' 0086               	movwf	6
  7681  0007' 0187               	clrf	7
  7682  0008' 3000               	movlw	0
  7683  0009' 3FC0               	movwi [0]fsr1
  7684  000A' 3FC1               	movwi [1]fsr1
  7685  000B' 3000               	movlw	0
  7686  000C' 0080'              	movwf	?_frexp
  7687  000D' 3000               	movlw	0
  7688  000E' 0081'              	movwf	?_frexp+1
  7689  000F' 3000               	movlw	0
  7690  0010' 0082'              	movwf	?_frexp+2
  7691  0011' 0008               	return
  7692  0012'                    l2199:	
  7693  0012' 0802'              	movf	frexp@value+2,w
  7694  0013' 397F               	andlw	127
  7695  0014' 0084'              	movwf	??_frexp
  7696  0015' 0185'              	clrf	??_frexp+1
  7697  0016' 3584'              	lslf	??_frexp,f
  7698  0017' 0D85'              	rlf	??_frexp+1,f
  7699  0018' 0803'              	movf	frexp@eptr,w
  7700  0019' 0086               	movwf	6
  7701  001A' 0187               	clrf	7
  7702  001B' 0804'              	movf	??_frexp,w
  7703  001C' 3FC0               	movwi [0]fsr1
  7704  001D' 0805'              	movf	??_frexp+1,w
  7705  001E' 3FC1               	movwi [1]fsr1
  7706  001F' 0D01'              	rlf	frexp@value+1,w
  7707  0020' 0D01'              	rlf	frexp@value+1,w
  7708  0021' 3901               	andlw	1
  7709  0022' 0084'              	movwf	??_frexp
  7710  0023' 0185'              	clrf	??_frexp+1
  7711  0024' 0803'              	movf	frexp@eptr,w
  7712  0025' 0086               	movwf	6
  7713  0026' 0187               	clrf	7
  7714  0027' 0804'              	movf	??_frexp,w
  7715  0028' 0481               	iorwf	1,f
  7716  0029' 3141               	addfsr 1,1
  7717  002A' 0805'              	movf	??_frexp+1,w
  7718  002B' 0481               	iorwf	1,f
  7719  002C' 0803'              	movf	frexp@eptr,w
  7720  002D' 0086               	movwf	6
  7721  002E' 0187               	clrf	7
  7722  002F' 3082               	movlw	130
  7723  0030' 0781               	addwf	1,f
  7724  0031' 3141               	addfsr 1,1
  7725  0032' 30FF               	movlw	255
  7726  0033' 3D81               	addwfc	1,f
  7727  0034' 317F               	addfsr 1,-1
  7728  0035' 0802'              	movf	frexp@value+2,w
  7729  0036' 3980               	andlw	-128
  7730  0037' 383F               	iorlw	63
  7731  0038' 0082'              	movwf	frexp@value+2
  7732  0039' 1381'              	bcf	frexp@value+1,7
  7733  003A' 0008               	return
  7734  003B'                    __end_of_frexp:	
  7735                           
  7736                           	psect	text4
  7737  0000'                    __ptext4:	
  7738 ;; *************** function _eval_poly *****************
  7739 ;; Defined at:
  7740 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  x               3   45[BANK0 ] PTR int 
  7743 ;;  d               2   48[BANK0 ] PTR const 
  7744 ;;		 -> log@coeff(27), 
  7745 ;;  n               2   50[BANK0 ] int 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;  res             3   52[BANK0 ] int 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  3   45[BANK0 ] int 
  7750 ;; Registers used:
  7751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7757 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;Total ram usage:       10 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    2
  7764 ;; This function calls:
  7765 ;;		___ftadd
  7766 ;;		___ftmul
  7767 ;;		___wmul
  7768 ;; This function is called by:
  7769 ;;		_log
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           
  7774                           ;psect for function _eval_poly
  7775  0000'                    _eval_poly:	
  7776                           
  7777                           ;incstack = 0
  7778                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7779  0000' 0020               	movlb	0	; select bank0
  7780  0001' 0833'              	movf	eval_poly@n+1,w
  7781  0002' 0081'              	movwf	___wmul@multiplier+1
  7782  0003' 0832'              	movf	eval_poly@n,w
  7783  0004' 0080'              	movwf	___wmul@multiplier
  7784  0005' 3003               	movlw	3
  7785  0006' 0082'              	movwf	___wmul@multiplicand
  7786  0007' 3000               	movlw	0
  7787  0008' 0083'              	movwf	___wmul@multiplicand+1
  7788  0009' 3180' 2000' 3180'  	fcall	___wmul
  7789  000C' 0020               	movlb	0	; select bank0
  7790  000D' 0830'              	movf	eval_poly@d,w
  7791  000E' 0700'              	addwf	?___wmul,w
  7792  000F' 0084               	movwf	4
  7793  0010' 0831'              	movf	eval_poly@d+1,w
  7794  0011' 3D01'              	addwfc	?___wmul+1,w
  7795  0012' 0085               	movwf	5
  7796  0013' 3F00               	moviw [0]fsr0
  7797  0014' 00B4'              	movwf	eval_poly@res
  7798  0015' 3F01               	moviw [1]fsr0
  7799  0016' 00B5'              	movwf	eval_poly@res+1
  7800  0017' 3F02               	moviw [2]fsr0
  7801  0018'                    L1:	
  7802  0018' 00B6'              	movwf	eval_poly@res+2
  7803  0019' 0832'              	movf	eval_poly@n,w
  7804  001A' 0433'              	iorwf	eval_poly@n+1,w
  7805  001B' 1903               	btfsc	3,2
  7806  001C' 2800'              	goto	l2217
  7807  001D' 30FF               	movlw	255
  7808  001E' 07B2'              	addwf	eval_poly@n,f
  7809  001F' 30FF               	movlw	255
  7810  0020' 3DB3'              	addwfc	eval_poly@n+1,f
  7811  0021' 0833'              	movf	eval_poly@n+1,w
  7812  0022' 0081'              	movwf	___wmul@multiplier+1
  7813  0023' 0832'              	movf	eval_poly@n,w
  7814  0024' 0080'              	movwf	___wmul@multiplier
  7815  0025' 3003               	movlw	3
  7816  0026' 0082'              	movwf	___wmul@multiplicand
  7817  0027' 3000               	movlw	0
  7818  0028' 0083'              	movwf	___wmul@multiplicand+1
  7819  0029' 3180' 2000' 3180'  	fcall	___wmul
  7820  002C' 0020               	movlb	0	; select bank0
  7821  002D' 0830'              	movf	eval_poly@d,w
  7822  002E' 0700'              	addwf	?___wmul,w
  7823  002F' 0084               	movwf	4
  7824  0030' 0831'              	movf	eval_poly@d+1,w
  7825  0031' 3D01'              	addwfc	?___wmul+1,w
  7826  0032' 0085               	movwf	5
  7827  0033' 3F00               	moviw [0]fsr0
  7828  0034' 00A0'              	movwf	___ftadd@f1
  7829  0035' 3F01               	moviw [1]fsr0
  7830  0036' 00A1'              	movwf	___ftadd@f1+1
  7831  0037' 3F02               	moviw [2]fsr0
  7832  0038' 00A2'              	movwf	___ftadd@f1+2
  7833  0039' 0834'              	movf	eval_poly@res,w
  7834  003A' 0080'              	movwf	___ftmul@f1
  7835  003B' 0835'              	movf	eval_poly@res+1,w
  7836  003C' 0081'              	movwf	___ftmul@f1+1
  7837  003D' 0836'              	movf	eval_poly@res+2,w
  7838  003E' 0082'              	movwf	___ftmul@f1+2
  7839  003F' 082D'              	movf	eval_poly@x,w
  7840  0040' 0083'              	movwf	___ftmul@f2
  7841  0041' 082E'              	movf	eval_poly@x+1,w
  7842  0042' 0084'              	movwf	___ftmul@f2+1
  7843  0043' 082F'              	movf	eval_poly@x+2,w
  7844  0044' 0085'              	movwf	___ftmul@f2+2
  7845  0045' 3180' 2000' 3180'  	fcall	___ftmul
  7846  0048' 0020               	movlb	0	; select bank0
  7847  0049' 0800'              	movf	?___ftmul,w
  7848  004A' 00A3'              	movwf	___ftadd@f2
  7849  004B' 0801'              	movf	?___ftmul+1,w
  7850  004C' 00A4'              	movwf	___ftadd@f2+1
  7851  004D' 0802'              	movf	?___ftmul+2,w
  7852  004E' 00A5'              	movwf	___ftadd@f2+2
  7853  004F' 3180' 2000' 3180'  	fcall	___ftadd
  7854  0052' 0020               	movlb	0	; select bank0
  7855  0053' 0820'              	movf	?___ftadd,w
  7856  0054' 00B4'              	movwf	eval_poly@res
  7857  0055' 0821'              	movf	?___ftadd+1,w
  7858  0056' 00B5'              	movwf	eval_poly@res+1
  7859  0057' 0822'              	movf	?___ftadd+2,w
  7860  0058' 2800'              	goto	L1
  7861  0059'                    l2217:	
  7862  0059' 0834'              	movf	eval_poly@res,w
  7863  005A' 00AD'              	movwf	?_eval_poly
  7864  005B' 0835'              	movf	eval_poly@res+1,w
  7865  005C' 00AE'              	movwf	?_eval_poly+1
  7866  005D' 0836'              	movf	eval_poly@res+2,w
  7867  005E' 00AF'              	movwf	?_eval_poly+2
  7868  005F' 0008               	return
  7869  0060'                    __end_of_eval_poly:	
  7870                           
  7871                           	psect	text5
  7872  0000'                    __ptext5:	
  7873 ;; *************** function ___ftmul *****************
  7874 ;; Defined at:
  7875 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  f1              3    0[BANK0 ] float 
  7878 ;;  f2              3    3[BANK0 ] float 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7881 ;;  sign            1   15[BANK0 ] unsigned char 
  7882 ;;  cntr            1   14[BANK0 ] unsigned char 
  7883 ;;  exp             1   10[BANK0 ] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  3    0[BANK0 ] float 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0, pclath, cstack
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7893 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7894 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7896 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7897 ;;Total ram usage:       16 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:    1
  7900 ;; This function calls:
  7901 ;;		___ftpack
  7902 ;; This function is called by:
  7903 ;;		_tempCalc
  7904 ;;		_log
  7905 ;;		_eval_poly
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           
  7910                           ;psect for function ___ftmul
  7911  0000'                    ___ftmul:	
  7912                           
  7913                           ;incstack = 0
  7914                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7915  0000' 0020               	movlb	0	; select bank0
  7916  0001' 0800'              	movf	___ftmul@f1,w
  7917  0002' 0086'              	movwf	??___ftmul
  7918  0003' 0801'              	movf	___ftmul@f1+1,w
  7919  0004' 0087'              	movwf	??___ftmul+1
  7920  0005' 0802'              	movf	___ftmul@f1+2,w
  7921  0006' 0088'              	movwf	??___ftmul+2
  7922  0007' 1003               	clrc
  7923  0008' 0D07'              	rlf	??___ftmul+1,w
  7924  0009' 0D08'              	rlf	??___ftmul+2,w
  7925  000A' 0089'              	movwf	??___ftmul+3
  7926  000B' 0809'              	movf	??___ftmul+3,w
  7927  000C' 008A'              	movwf	___ftmul@exp
  7928  000D' 080A'              	movf	___ftmul@exp,w
  7929  000E' 1D03               	btfss	3,2
  7930  000F' 2800'              	goto	l2085
  7931  0010' 3000               	movlw	0
  7932  0011' 0080'              	movwf	?___ftmul
  7933  0012' 3000               	movlw	0
  7934  0013' 0081'              	movwf	?___ftmul+1
  7935  0014' 3000               	movlw	0
  7936  0015' 0082'              	movwf	?___ftmul+2
  7937  0016' 0008               	return
  7938  0017'                    l2085:	
  7939  0017' 0803'              	movf	___ftmul@f2,w
  7940  0018' 0086'              	movwf	??___ftmul
  7941  0019' 0804'              	movf	___ftmul@f2+1,w
  7942  001A' 0087'              	movwf	??___ftmul+1
  7943  001B' 0805'              	movf	___ftmul@f2+2,w
  7944  001C' 0088'              	movwf	??___ftmul+2
  7945  001D' 1003               	clrc
  7946  001E' 0D07'              	rlf	??___ftmul+1,w
  7947  001F' 0D08'              	rlf	??___ftmul+2,w
  7948  0020' 0089'              	movwf	??___ftmul+3
  7949  0021' 0809'              	movf	??___ftmul+3,w
  7950  0022' 008F'              	movwf	___ftmul@sign
  7951  0023' 080F'              	movf	___ftmul@sign,w
  7952  0024' 1D03               	btfss	3,2
  7953  0025' 2800'              	goto	l2091
  7954  0026' 3000               	movlw	0
  7955  0027' 0080'              	movwf	?___ftmul
  7956  0028' 3000               	movlw	0
  7957  0029' 0081'              	movwf	?___ftmul+1
  7958  002A' 3000               	movlw	0
  7959  002B' 0082'              	movwf	?___ftmul+2
  7960  002C' 0008               	return
  7961  002D'                    l2091:	
  7962  002D' 080F'              	movf	___ftmul@sign,w
  7963  002E' 3E7B               	addlw	123
  7964  002F' 0086'              	movwf	??___ftmul
  7965  0030' 0806'              	movf	??___ftmul,w
  7966  0031' 078A'              	addwf	___ftmul@exp,f
  7967  0032' 0800'              	movf	___ftmul@f1,w
  7968  0033' 0086'              	movwf	??___ftmul
  7969  0034' 0801'              	movf	___ftmul@f1+1,w
  7970  0035' 0087'              	movwf	??___ftmul+1
  7971  0036' 0802'              	movf	___ftmul@f1+2,w
  7972  0037' 0088'              	movwf	??___ftmul+2
  7973  0038' 3010               	movlw	16
  7974  0039'                    u2145:	
  7975  0039' 3688'              	lsrf	??___ftmul+2,f
  7976  003A' 0C87'              	rrf	??___ftmul+1,f
  7977  003B' 0C86'              	rrf	??___ftmul,f
  7978  003C' 0B89               	decfsz	9,f
  7979  003D' 2800'              	goto	u2145
  7980  003E' 0806'              	movf	??___ftmul,w
  7981  003F' 0089'              	movwf	??___ftmul+3
  7982  0040' 0809'              	movf	??___ftmul+3,w
  7983  0041' 008F'              	movwf	___ftmul@sign
  7984  0042' 0803'              	movf	___ftmul@f2,w
  7985  0043' 0086'              	movwf	??___ftmul
  7986  0044' 0804'              	movf	___ftmul@f2+1,w
  7987  0045' 0087'              	movwf	??___ftmul+1
  7988  0046' 0805'              	movf	___ftmul@f2+2,w
  7989  0047' 0088'              	movwf	??___ftmul+2
  7990  0048' 3010               	movlw	16
  7991  0049'                    u2155:	
  7992  0049' 3688'              	lsrf	??___ftmul+2,f
  7993  004A' 0C87'              	rrf	??___ftmul+1,f
  7994  004B' 0C86'              	rrf	??___ftmul,f
  7995  004C' 0B89               	decfsz	9,f
  7996  004D' 2800'              	goto	u2155
  7997  004E' 0806'              	movf	??___ftmul,w
  7998  004F' 0089'              	movwf	??___ftmul+3
  7999  0050' 0809'              	movf	??___ftmul+3,w
  8000  0051' 068F'              	xorwf	___ftmul@sign,f
  8001  0052' 3080               	movlw	128
  8002  0053' 0086'              	movwf	??___ftmul
  8003  0054' 0806'              	movf	??___ftmul,w
  8004  0055' 058F'              	andwf	___ftmul@sign,f
  8005  0056' 1781'              	bsf	___ftmul@f1+1,7
  8006  0057' 1784'              	bsf	___ftmul@f2+1,7
  8007  0058' 30FF               	movlw	255
  8008  0059' 0583'              	andwf	___ftmul@f2,f
  8009  005A' 30FF               	movlw	255
  8010  005B' 0584'              	andwf	___ftmul@f2+1,f
  8011  005C' 3000               	movlw	0
  8012  005D' 0585'              	andwf	___ftmul@f2+2,f
  8013  005E' 3000               	movlw	0
  8014  005F' 008B'              	movwf	___ftmul@f3_as_product
  8015  0060' 3000               	movlw	0
  8016  0061' 008C'              	movwf	___ftmul@f3_as_product+1
  8017  0062' 3000               	movlw	0
  8018  0063' 008D'              	movwf	___ftmul@f3_as_product+2
  8019  0064' 3007               	movlw	7
  8020  0065' 0086'              	movwf	??___ftmul
  8021  0066' 0806'              	movf	??___ftmul,w
  8022  0067' 008E'              	movwf	___ftmul@cntr
  8023  0068'                    l2103:	
  8024  0068' 1C00'              	btfss	___ftmul@f1,0
  8025  0069' 2800'              	goto	l2107
  8026  006A' 0803'              	movf	___ftmul@f2,w
  8027  006B' 078B'              	addwf	___ftmul@f3_as_product,f
  8028  006C' 0804'              	movf	___ftmul@f2+1,w
  8029  006D' 3D8C'              	addwfc	___ftmul@f3_as_product+1,f
  8030  006E' 0805'              	movf	___ftmul@f2+2,w
  8031  006F' 3D8D'              	addwfc	___ftmul@f3_as_product+2,f
  8032  0070'                    l2107:	
  8033  0070' 3001               	movlw	1
  8034  0071'                    u2175:	
  8035  0071' 3682'              	lsrf	___ftmul@f1+2,f
  8036  0072' 0C81'              	rrf	___ftmul@f1+1,f
  8037  0073' 0C80'              	rrf	___ftmul@f1,f
  8038  0074' 0B89               	decfsz	9,f
  8039  0075' 2800'              	goto	u2175
  8040  0076' 3001               	movlw	1
  8041  0077'                    u2185:	
  8042  0077' 3583'              	lslf	___ftmul@f2,f
  8043  0078' 0D84'              	rlf	___ftmul@f2+1,f
  8044  0079' 0D85'              	rlf	___ftmul@f2+2,f
  8045  007A' 0B89               	decfsz	9,f
  8046  007B' 2800'              	goto	u2185
  8047  007C' 3001               	movlw	1
  8048  007D' 028E'              	subwf	___ftmul@cntr,f
  8049  007E' 1D03               	btfss	3,2
  8050  007F' 2800'              	goto	l2103
  8051  0080' 3009               	movlw	9
  8052  0081' 0086'              	movwf	??___ftmul
  8053  0082' 0806'              	movf	??___ftmul,w
  8054  0083' 008E'              	movwf	___ftmul@cntr
  8055  0084'                    l2115:	
  8056  0084' 1C00'              	btfss	___ftmul@f1,0
  8057  0085' 2800'              	goto	l2119
  8058  0086' 0803'              	movf	___ftmul@f2,w
  8059  0087' 078B'              	addwf	___ftmul@f3_as_product,f
  8060  0088' 0804'              	movf	___ftmul@f2+1,w
  8061  0089' 3D8C'              	addwfc	___ftmul@f3_as_product+1,f
  8062  008A' 0805'              	movf	___ftmul@f2+2,w
  8063  008B' 3D8D'              	addwfc	___ftmul@f3_as_product+2,f
  8064  008C'                    l2119:	
  8065  008C' 3001               	movlw	1
  8066  008D'                    u2215:	
  8067  008D' 3682'              	lsrf	___ftmul@f1+2,f
  8068  008E' 0C81'              	rrf	___ftmul@f1+1,f
  8069  008F' 0C80'              	rrf	___ftmul@f1,f
  8070  0090' 0B89               	decfsz	9,f
  8071  0091' 2800'              	goto	u2215
  8072  0092' 3001               	movlw	1
  8073  0093'                    u2225:	
  8074  0093' 368D'              	lsrf	___ftmul@f3_as_product+2,f
  8075  0094' 0C8C'              	rrf	___ftmul@f3_as_product+1,f
  8076  0095' 0C8B'              	rrf	___ftmul@f3_as_product,f
  8077  0096' 0B89               	decfsz	9,f
  8078  0097' 2800'              	goto	u2225
  8079  0098' 3001               	movlw	1
  8080  0099' 028E'              	subwf	___ftmul@cntr,f
  8081  009A' 1D03               	btfss	3,2
  8082  009B' 2800'              	goto	l2115
  8083  009C' 080B'              	movf	___ftmul@f3_as_product,w
  8084  009D' 0080'              	movwf	___ftpack@arg
  8085  009E' 080C'              	movf	___ftmul@f3_as_product+1,w
  8086  009F' 0081'              	movwf	___ftpack@arg+1
  8087  00A0' 080D'              	movf	___ftmul@f3_as_product+2,w
  8088  00A1' 0082'              	movwf	___ftpack@arg+2
  8089  00A2' 080A'              	movf	___ftmul@exp,w
  8090  00A3' 0086'              	movwf	??___ftmul
  8091  00A4' 0806'              	movf	??___ftmul,w
  8092  00A5' 0083'              	movwf	___ftpack@exp
  8093  00A6' 080F'              	movf	___ftmul@sign,w
  8094  00A7' 0087'              	movwf	??___ftmul+1
  8095  00A8' 0807'              	movf	??___ftmul+1,w
  8096  00A9' 0084'              	movwf	___ftpack@sign
  8097  00AA' 3180' 2000'        	fcall	___ftpack
  8098  00AC' 0800'              	movf	?___ftpack,w
  8099  00AD' 0020               	movlb	0	; select bank0
  8100  00AE' 0080'              	movwf	?___ftmul
  8101  00AF' 0801'              	movf	?___ftpack+1,w
  8102  00B0' 0081'              	movwf	?___ftmul+1
  8103  00B1' 0802'              	movf	?___ftpack+2,w
  8104  00B2' 0082'              	movwf	?___ftmul+2
  8105  00B3' 0008               	return
  8106  00B4'                    __end_of___ftmul:	
  8107                           
  8108                           	psect	text6
  8109  0000'                    __ptext6:	
  8110 ;; *************** function ___ftge *****************
  8111 ;; Defined at:
  8112 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;  ff1             3    0[COMMON] float 
  8115 ;;  ff2             3    3[COMMON] float 
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;		None
  8118 ;; Return value:  Size  Location     Type
  8119 ;;		None               void
  8120 ;; Registers used:
  8121 ;;		wreg, status,2, status,0
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8127 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8130 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;Total ram usage:        9 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_log
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           
  8141                           ;psect for function ___ftge
  8142  0000'                    ___ftge:	
  8143                           
  8144                           ;incstack = 0
  8145                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8146  0000' 1F82'              	btfss	___ftge@ff1+2,7
  8147  0001' 2800'              	goto	l2175
  8148  0002' 0900'              	comf	___ftge@ff1,w
  8149  0003' 0086'              	movwf	??___ftge
  8150  0004' 0901'              	comf	___ftge@ff1+1,w
  8151  0005' 0087'              	movwf	??___ftge+1
  8152  0006' 0902'              	comf	___ftge@ff1+2,w
  8153  0007' 0088'              	movwf	??___ftge+2
  8154  0008' 0A86'              	incf	??___ftge,f
  8155  0009' 1903               	skipnz
  8156  000A' 0A87'              	incf	??___ftge+1,f
  8157  000B' 1903               	skipnz
  8158  000C' 0A88'              	incf	??___ftge+2,f
  8159  000D' 3000               	movlw	0
  8160  000E' 0706'              	addwf	??___ftge,w
  8161  000F' 0080'              	movwf	___ftge@ff1
  8162  0010' 3000               	movlw	0
  8163  0011' 3D07'              	addwfc	??___ftge+1,w
  8164  0012' 0081'              	movwf	___ftge@ff1+1
  8165  0013' 3080               	movlw	128
  8166  0014' 3D08'              	addwfc	??___ftge+2,w
  8167  0015' 0082'              	movwf	___ftge@ff1+2
  8168  0016'                    l2175:	
  8169  0016' 1F85'              	btfss	___ftge@ff2+2,7
  8170  0017' 2800'              	goto	l2179
  8171  0018' 0903'              	comf	___ftge@ff2,w
  8172  0019' 0086'              	movwf	??___ftge
  8173  001A' 0904'              	comf	___ftge@ff2+1,w
  8174  001B' 0087'              	movwf	??___ftge+1
  8175  001C' 0905'              	comf	___ftge@ff2+2,w
  8176  001D' 0088'              	movwf	??___ftge+2
  8177  001E' 0A86'              	incf	??___ftge,f
  8178  001F' 1903               	skipnz
  8179  0020' 0A87'              	incf	??___ftge+1,f
  8180  0021' 1903               	skipnz
  8181  0022' 0A88'              	incf	??___ftge+2,f
  8182  0023' 3000               	movlw	0
  8183  0024' 0706'              	addwf	??___ftge,w
  8184  0025' 0083'              	movwf	___ftge@ff2
  8185  0026' 3000               	movlw	0
  8186  0027' 3D07'              	addwfc	??___ftge+1,w
  8187  0028' 0084'              	movwf	___ftge@ff2+1
  8188  0029' 3080               	movlw	128
  8189  002A' 3D08'              	addwfc	??___ftge+2,w
  8190  002B' 0085'              	movwf	___ftge@ff2+2
  8191  002C'                    l2179:	
  8192  002C' 3080               	movlw	128
  8193  002D' 0682'              	xorwf	___ftge@ff1+2,f
  8194  002E' 3080               	movlw	128
  8195  002F' 0685'              	xorwf	___ftge@ff2+2,f
  8196  0030' 0805'              	movf	___ftge@ff2+2,w
  8197  0031' 0202'              	subwf	___ftge@ff1+2,w
  8198  0032' 1D03               	skipz
  8199  0033' 0008               	return
  8200  0034' 0804'              	movf	___ftge@ff2+1,w
  8201  0035' 0201'              	subwf	___ftge@ff1+1,w
  8202  0036' 1D03               	skipz
  8203  0037' 0008               	return
  8204  0038' 0803'              	movf	___ftge@ff2,w
  8205  0039' 0200'              	subwf	___ftge@ff1,w
  8206  003A' 0008               	return
  8207  003B'                    __end_of___ftge:	
  8208                           
  8209                           	psect	text7
  8210  0000'                    __ptext7:	
  8211 ;; *************** function ___awtoft *****************
  8212 ;; Defined at:
  8213 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;  c               2    8[COMMON] int 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  sign            1   13[COMMON] unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  3    8[COMMON] float 
  8220 ;; Registers used:
  8221 ;;		wreg, status,2, status,0, pclath, cstack
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8227 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;Total ram usage:        6 bytes
  8232 ;; Hardware stack levels used:    1
  8233 ;; Hardware stack levels required when called:    1
  8234 ;; This function calls:
  8235 ;;		___ftpack
  8236 ;; This function is called by:
  8237 ;;		_tempCalc
  8238 ;;		_log
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           
  8243                           ;psect for function ___awtoft
  8244  0000'                    ___awtoft:	
  8245                           
  8246                           ;incstack = 0
  8247                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8248  0000' 018D'              	clrf	___awtoft@sign
  8249  0001' 1F89'              	btfss	___awtoft@c+1,7
  8250  0002' 2800'              	goto	l2167
  8251  0003' 0988'              	comf	___awtoft@c,f
  8252  0004' 0989'              	comf	___awtoft@c+1,f
  8253  0005' 0A88'              	incf	___awtoft@c,f
  8254  0006' 1903               	skipnz
  8255  0007' 0A89'              	incf	___awtoft@c+1,f
  8256  0008' 018D'              	clrf	___awtoft@sign
  8257  0009' 0A8D'              	incf	___awtoft@sign,f
  8258  000A'                    l2167:	
  8259  000A' 0808'              	movf	___awtoft@c,w
  8260  000B' 0080'              	movwf	___ftpack@arg
  8261  000C' 0809'              	movf	___awtoft@c+1,w
  8262  000D' 0081'              	movwf	___ftpack@arg+1
  8263  000E' 0182'              	clrf	___ftpack@arg+2
  8264  000F' 308E               	movlw	142
  8265  0010' 008B'              	movwf	??___awtoft
  8266  0011' 080B'              	movf	??___awtoft,w
  8267  0012' 0083'              	movwf	___ftpack@exp
  8268  0013' 080D'              	movf	___awtoft@sign,w
  8269  0014' 008C'              	movwf	??___awtoft+1
  8270  0015' 080C'              	movf	??___awtoft+1,w
  8271  0016' 0084'              	movwf	___ftpack@sign
  8272  0017' 3180' 2000'        	fcall	___ftpack
  8273  0019' 0800'              	movf	?___ftpack,w
  8274  001A' 0088'              	movwf	?___awtoft
  8275  001B' 0801'              	movf	?___ftpack+1,w
  8276  001C' 0089'              	movwf	?___awtoft+1
  8277  001D' 0802'              	movf	?___ftpack+2,w
  8278  001E' 008A'              	movwf	?___awtoft+2
  8279  001F' 0008               	return
  8280  0020'                    __end_of___awtoft:	
  8281                           
  8282                           	psect	text8
  8283  0000'                    __ptext8:	
  8284 ;; *************** function ___ftsub *****************
  8285 ;; Defined at:
  8286 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  f2              3   45[BANK0 ] float 
  8289 ;;  f1              3   48[BANK0 ] float 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;		None
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  3   45[BANK0 ] float 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0, pclath, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8301 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8304 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;Total ram usage:        6 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:    2
  8308 ;; This function calls:
  8309 ;;		___ftadd
  8310 ;; This function is called by:
  8311 ;;		_tempCalc
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           
  8316                           ;psect for function ___ftsub
  8317  0000'                    ___ftsub:	
  8318                           
  8319                           ;incstack = 0
  8320                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8321  0000' 0020               	movlb	0	; select bank0
  8322  0001' 082F'              	movf	___ftsub@f2+2,w
  8323  0002' 042E'              	iorwf	___ftsub@f2+1,w
  8324  0003' 042D'              	iorwf	___ftsub@f2,w
  8325  0004' 1903               	skipnz
  8326  0005' 2800'              	goto	l2553
  8327  0006' 3080               	movlw	128
  8328  0007' 06AF'              	xorwf	___ftsub@f2+2,f
  8329  0008'                    l2553:	
  8330  0008' 0830'              	movf	___ftsub@f1,w
  8331  0009' 00A0'              	movwf	___ftadd@f1
  8332  000A' 0831'              	movf	___ftsub@f1+1,w
  8333  000B' 00A1'              	movwf	___ftadd@f1+1
  8334  000C' 0832'              	movf	___ftsub@f1+2,w
  8335  000D' 00A2'              	movwf	___ftadd@f1+2
  8336  000E' 082D'              	movf	___ftsub@f2,w
  8337  000F' 00A3'              	movwf	___ftadd@f2
  8338  0010' 082E'              	movf	___ftsub@f2+1,w
  8339  0011' 00A4'              	movwf	___ftadd@f2+1
  8340  0012' 082F'              	movf	___ftsub@f2+2,w
  8341  0013' 00A5'              	movwf	___ftadd@f2+2
  8342  0014' 3180' 2000'        	fcall	___ftadd
  8343  0016' 0020               	movlb	0	; select bank0
  8344  0017' 0820'              	movf	?___ftadd,w
  8345  0018' 00AD'              	movwf	?___ftsub
  8346  0019' 0821'              	movf	?___ftadd+1,w
  8347  001A' 00AE'              	movwf	?___ftsub+1
  8348  001B' 0822'              	movf	?___ftadd+2,w
  8349  001C' 00AF'              	movwf	?___ftsub+2
  8350  001D' 0008               	return
  8351  001E'                    __end_of___ftsub:	
  8352                           
  8353                           	psect	text9
  8354  0000'                    __ptext9:	
  8355 ;; *************** function ___ftadd *****************
  8356 ;; Defined at:
  8357 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;  f1              3   32[BANK0 ] float 
  8360 ;;  f2              3   35[BANK0 ] float 
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;  exp1            1   44[BANK0 ] unsigned char 
  8363 ;;  exp2            1   43[BANK0 ] unsigned char 
  8364 ;;  sign            1   42[BANK0 ] unsigned char 
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  3   32[BANK0 ] float 
  8367 ;; Registers used:
  8368 ;;		wreg, status,2, status,0, pclath, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8374 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8375 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;Total ram usage:       13 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; Hardware stack levels required when called:    1
  8381 ;; This function calls:
  8382 ;;		___ftpack
  8383 ;; This function is called by:
  8384 ;;		_tempCalc
  8385 ;;		___ftsub
  8386 ;;		_log
  8387 ;;		_eval_poly
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           
  8392                           ;psect for function ___ftadd
  8393  0000'                    ___ftadd:	
  8394                           
  8395                           ;incstack = 0
  8396                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8397  0000' 0020               	movlb	0	; select bank0
  8398  0001' 0820'              	movf	___ftadd@f1,w
  8399  0002' 00A6'              	movwf	??___ftadd
  8400  0003' 0821'              	movf	___ftadd@f1+1,w
  8401  0004' 00A7'              	movwf	??___ftadd+1
  8402  0005' 0822'              	movf	___ftadd@f1+2,w
  8403  0006' 00A8'              	movwf	??___ftadd+2
  8404  0007' 1003               	clrc
  8405  0008' 0D27'              	rlf	??___ftadd+1,w
  8406  0009' 0D28'              	rlf	??___ftadd+2,w
  8407  000A' 00A9'              	movwf	??___ftadd+3
  8408  000B' 0829'              	movf	??___ftadd+3,w
  8409  000C' 00AC'              	movwf	___ftadd@exp1
  8410  000D' 0823'              	movf	___ftadd@f2,w
  8411  000E' 00A6'              	movwf	??___ftadd
  8412  000F' 0824'              	movf	___ftadd@f2+1,w
  8413  0010' 00A7'              	movwf	??___ftadd+1
  8414  0011' 0825'              	movf	___ftadd@f2+2,w
  8415  0012' 00A8'              	movwf	??___ftadd+2
  8416  0013' 1003               	clrc
  8417  0014' 0D27'              	rlf	??___ftadd+1,w
  8418  0015' 0D28'              	rlf	??___ftadd+2,w
  8419  0016' 00A9'              	movwf	??___ftadd+3
  8420  0017' 0829'              	movf	??___ftadd+3,w
  8421  0018' 00AB'              	movwf	___ftadd@exp2
  8422  0019' 082C'              	movf	___ftadd@exp1,w
  8423  001A' 1903               	btfsc	3,2
  8424  001B' 2800'              	goto	l2015
  8425  001C' 082B'              	movf	___ftadd@exp2,w
  8426  001D' 022C'              	subwf	___ftadd@exp1,w
  8427  001E' 1803               	skipnc
  8428  001F' 2800'              	goto	l2019
  8429  0020' 032C'              	decf	___ftadd@exp1,w
  8430  0021' 3AFF               	xorlw	255
  8431  0022' 072B'              	addwf	___ftadd@exp2,w
  8432  0023' 00A6'              	movwf	??___ftadd
  8433  0024' 3019               	movlw	25
  8434  0025' 0226'              	subwf	??___ftadd,w
  8435  0026' 1C03               	skipc
  8436  0027' 2800'              	goto	l2019
  8437  0028'                    l2015:	
  8438  0028' 0823'              	movf	___ftadd@f2,w
  8439  0029' 00A0'              	movwf	?___ftadd
  8440  002A' 0824'              	movf	___ftadd@f2+1,w
  8441  002B' 00A1'              	movwf	?___ftadd+1
  8442  002C' 0825'              	movf	___ftadd@f2+2,w
  8443  002D' 00A2'              	movwf	?___ftadd+2
  8444  002E' 0008               	return
  8445  002F'                    l2019:	
  8446  002F' 082B'              	movf	___ftadd@exp2,w
  8447  0030' 1903               	btfsc	3,2
  8448  0031' 0008               	return
  8449  0032' 082C'              	movf	___ftadd@exp1,w
  8450  0033' 022B'              	subwf	___ftadd@exp2,w
  8451  0034' 1803               	skipnc
  8452  0035' 2800'              	goto	l2025
  8453  0036' 032B'              	decf	___ftadd@exp2,w
  8454  0037' 3AFF               	xorlw	255
  8455  0038' 072C'              	addwf	___ftadd@exp1,w
  8456  0039' 00A6'              	movwf	??___ftadd
  8457  003A' 3019               	movlw	25
  8458  003B' 0226'              	subwf	??___ftadd,w
  8459  003C' 1803               	btfsc	3,0
  8460  003D' 0008               	return
  8461  003E'                    l2025:	
  8462  003E' 3006               	movlw	6
  8463  003F' 00A6'              	movwf	??___ftadd
  8464  0040' 0826'              	movf	??___ftadd,w
  8465  0041' 00AA'              	movwf	___ftadd@sign
  8466  0042' 1BA2'              	btfsc	___ftadd@f1+2,7
  8467  0043' 17AA'              	bsf	___ftadd@sign,7
  8468  0044' 1BA5'              	btfsc	___ftadd@f2+2,7
  8469  0045' 172A'              	bsf	___ftadd@sign,6
  8470  0046' 17A1'              	bsf	___ftadd@f1+1,7
  8471  0047' 30FF               	movlw	255
  8472  0048' 05A0'              	andwf	___ftadd@f1,f
  8473  0049' 30FF               	movlw	255
  8474  004A' 05A1'              	andwf	___ftadd@f1+1,f
  8475  004B' 3000               	movlw	0
  8476  004C' 05A2'              	andwf	___ftadd@f1+2,f
  8477  004D' 17A4'              	bsf	___ftadd@f2+1,7
  8478  004E' 30FF               	movlw	255
  8479  004F' 05A3'              	andwf	___ftadd@f2,f
  8480  0050' 30FF               	movlw	255
  8481  0051' 05A4'              	andwf	___ftadd@f2+1,f
  8482  0052' 3000               	movlw	0
  8483  0053' 05A5'              	andwf	___ftadd@f2+2,f
  8484  0054' 082B'              	movf	___ftadd@exp2,w
  8485  0055' 022C'              	subwf	___ftadd@exp1,w
  8486  0056' 1803               	skipnc
  8487  0057' 2800'              	goto	l2047
  8488  0058'                    l2037:	
  8489  0058' 3001               	movlw	1
  8490  0059'                    u1985:	
  8491  0059' 35A3'              	lslf	___ftadd@f2,f
  8492  005A' 0DA4'              	rlf	___ftadd@f2+1,f
  8493  005B' 0DA5'              	rlf	___ftadd@f2+2,f
  8494  005C' 0B89               	decfsz	9,f
  8495  005D' 2800'              	goto	u1985
  8496  005E' 3001               	movlw	1
  8497  005F' 02AB'              	subwf	___ftadd@exp2,f
  8498  0060' 082B'              	movf	___ftadd@exp2,w
  8499  0061' 062C'              	xorwf	___ftadd@exp1,w
  8500  0062' 1903               	skipnz
  8501  0063' 2800'              	goto	l2045
  8502  0064' 3001               	movlw	1
  8503  0065' 02AA'              	subwf	___ftadd@sign,f
  8504  0066' 082A'              	movf	___ftadd@sign,w
  8505  0067' 3907               	andlw	7
  8506  0068' 1903               	btfsc	3,2
  8507  0069' 2800'              	goto	l2045
  8508  006A' 2800'              	goto	l2037
  8509  006B'                    l2043:	
  8510  006B' 3001               	movlw	1
  8511  006C'                    u2015:	
  8512  006C' 36A2'              	lsrf	___ftadd@f1+2,f
  8513  006D' 0CA1'              	rrf	___ftadd@f1+1,f
  8514  006E' 0CA0'              	rrf	___ftadd@f1,f
  8515  006F' 0B89               	decfsz	9,f
  8516  0070' 2800'              	goto	u2015
  8517  0071' 3001               	movlw	1
  8518  0072' 00A6'              	movwf	??___ftadd
  8519  0073' 0826'              	movf	??___ftadd,w
  8520  0074' 07AC'              	addwf	___ftadd@exp1,f
  8521  0075'                    l2045:	
  8522  0075' 082C'              	movf	___ftadd@exp1,w
  8523  0076' 062B'              	xorwf	___ftadd@exp2,w
  8524  0077' 1903               	btfsc	3,2
  8525  0078' 2800'              	goto	l667
  8526  0079' 2800'              	goto	l2043
  8527  007A'                    l2047:	
  8528  007A' 082C'              	movf	___ftadd@exp1,w
  8529  007B' 022B'              	subwf	___ftadd@exp2,w
  8530  007C' 1803               	skipnc
  8531  007D' 2800'              	goto	l667
  8532  007E'                    l2049:	
  8533  007E' 3001               	movlw	1
  8534  007F'                    u2045:	
  8535  007F' 35A0'              	lslf	___ftadd@f1,f
  8536  0080' 0DA1'              	rlf	___ftadd@f1+1,f
  8537  0081' 0DA2'              	rlf	___ftadd@f1+2,f
  8538  0082' 0B89               	decfsz	9,f
  8539  0083' 2800'              	goto	u2045
  8540  0084' 3001               	movlw	1
  8541  0085' 02AC'              	subwf	___ftadd@exp1,f
  8542  0086' 082B'              	movf	___ftadd@exp2,w
  8543  0087' 062C'              	xorwf	___ftadd@exp1,w
  8544  0088' 1903               	skipnz
  8545  0089' 2800'              	goto	l2057
  8546  008A' 3001               	movlw	1
  8547  008B' 02AA'              	subwf	___ftadd@sign,f
  8548  008C' 082A'              	movf	___ftadd@sign,w
  8549  008D' 3907               	andlw	7
  8550  008E' 1903               	btfsc	3,2
  8551  008F' 2800'              	goto	l2057
  8552  0090' 2800'              	goto	l2049
  8553  0091'                    l2055:	
  8554  0091' 3001               	movlw	1
  8555  0092'                    u2075:	
  8556  0092' 36A5'              	lsrf	___ftadd@f2+2,f
  8557  0093' 0CA4'              	rrf	___ftadd@f2+1,f
  8558  0094' 0CA3'              	rrf	___ftadd@f2,f
  8559  0095' 0B89               	decfsz	9,f
  8560  0096' 2800'              	goto	u2075
  8561  0097' 3001               	movlw	1
  8562  0098' 00A6'              	movwf	??___ftadd
  8563  0099' 0826'              	movf	??___ftadd,w
  8564  009A' 07AB'              	addwf	___ftadd@exp2,f
  8565  009B'                    l2057:	
  8566  009B' 082C'              	movf	___ftadd@exp1,w
  8567  009C' 062B'              	xorwf	___ftadd@exp2,w
  8568  009D' 1D03               	skipz
  8569  009E' 2800'              	goto	l2055
  8570  009F'                    l667:	
  8571  009F' 1FAA'              	btfss	___ftadd@sign,7
  8572  00A0' 2800'              	goto	l2061
  8573  00A1' 30FF               	movlw	255
  8574  00A2' 06A0'              	xorwf	___ftadd@f1,f
  8575  00A3' 30FF               	movlw	255
  8576  00A4' 06A1'              	xorwf	___ftadd@f1+1,f
  8577  00A5' 30FF               	movlw	255
  8578  00A6' 06A2'              	xorwf	___ftadd@f1+2,f
  8579  00A7' 3001               	movlw	1
  8580  00A8' 07A0'              	addwf	___ftadd@f1,f
  8581  00A9' 3000               	movlw	0
  8582  00AA' 1803               	skipnc
  8583  00AB' 3001               	movlw	1
  8584  00AC' 07A1'              	addwf	___ftadd@f1+1,f
  8585  00AD' 3000               	movlw	0
  8586  00AE' 1803               	skipnc
  8587  00AF' 3001               	movlw	1
  8588  00B0' 07A2'              	addwf	___ftadd@f1+2,f
  8589  00B1'                    l2061:	
  8590  00B1' 1F2A'              	btfss	___ftadd@sign,6
  8591  00B2' 2800'              	goto	l2065
  8592  00B3' 30FF               	movlw	255
  8593  00B4' 06A3'              	xorwf	___ftadd@f2,f
  8594  00B5' 30FF               	movlw	255
  8595  00B6' 06A4'              	xorwf	___ftadd@f2+1,f
  8596  00B7' 30FF               	movlw	255
  8597  00B8' 06A5'              	xorwf	___ftadd@f2+2,f
  8598  00B9' 3001               	movlw	1
  8599  00BA' 07A3'              	addwf	___ftadd@f2,f
  8600  00BB' 3000               	movlw	0
  8601  00BC' 1803               	skipnc
  8602  00BD' 3001               	movlw	1
  8603  00BE' 07A4'              	addwf	___ftadd@f2+1,f
  8604  00BF' 3000               	movlw	0
  8605  00C0' 1803               	skipnc
  8606  00C1' 3001               	movlw	1
  8607  00C2' 07A5'              	addwf	___ftadd@f2+2,f
  8608  00C3'                    l2065:	
  8609  00C3' 01AA'              	clrf	___ftadd@sign
  8610  00C4' 0820'              	movf	___ftadd@f1,w
  8611  00C5' 07A3'              	addwf	___ftadd@f2,f
  8612  00C6' 0821'              	movf	___ftadd@f1+1,w
  8613  00C7' 3DA4'              	addwfc	___ftadd@f2+1,f
  8614  00C8' 0822'              	movf	___ftadd@f1+2,w
  8615  00C9' 3DA5'              	addwfc	___ftadd@f2+2,f
  8616  00CA' 1FA5'              	btfss	___ftadd@f2+2,7
  8617  00CB' 2800'              	goto	l2075
  8618  00CC' 30FF               	movlw	255
  8619  00CD' 06A3'              	xorwf	___ftadd@f2,f
  8620  00CE' 30FF               	movlw	255
  8621  00CF' 06A4'              	xorwf	___ftadd@f2+1,f
  8622  00D0' 30FF               	movlw	255
  8623  00D1' 06A5'              	xorwf	___ftadd@f2+2,f
  8624  00D2' 3001               	movlw	1
  8625  00D3' 07A3'              	addwf	___ftadd@f2,f
  8626  00D4' 3000               	movlw	0
  8627  00D5' 1803               	skipnc
  8628  00D6' 3001               	movlw	1
  8629  00D7' 07A4'              	addwf	___ftadd@f2+1,f
  8630  00D8' 3000               	movlw	0
  8631  00D9' 1803               	skipnc
  8632  00DA' 3001               	movlw	1
  8633  00DB' 07A5'              	addwf	___ftadd@f2+2,f
  8634  00DC' 01AA'              	clrf	___ftadd@sign
  8635  00DD' 0AAA'              	incf	___ftadd@sign,f
  8636  00DE'                    l2075:	
  8637  00DE' 0823'              	movf	___ftadd@f2,w
  8638  00DF' 0080'              	movwf	___ftpack@arg
  8639  00E0' 0824'              	movf	___ftadd@f2+1,w
  8640  00E1' 0081'              	movwf	___ftpack@arg+1
  8641  00E2' 0825'              	movf	___ftadd@f2+2,w
  8642  00E3' 0082'              	movwf	___ftpack@arg+2
  8643  00E4' 082C'              	movf	___ftadd@exp1,w
  8644  00E5' 00A6'              	movwf	??___ftadd
  8645  00E6' 0826'              	movf	??___ftadd,w
  8646  00E7' 0083'              	movwf	___ftpack@exp
  8647  00E8' 082A'              	movf	___ftadd@sign,w
  8648  00E9' 00A7'              	movwf	??___ftadd+1
  8649  00EA' 0827'              	movf	??___ftadd+1,w
  8650  00EB' 0084'              	movwf	___ftpack@sign
  8651  00EC' 3180' 2000'        	fcall	___ftpack
  8652  00EE' 0800'              	movf	?___ftpack,w
  8653  00EF' 0020               	movlb	0	; select bank0
  8654  00F0' 00A0'              	movwf	?___ftadd
  8655  00F1' 0801'              	movf	?___ftpack+1,w
  8656  00F2' 00A1'              	movwf	?___ftadd+1
  8657  00F3' 0802'              	movf	?___ftpack+2,w
  8658  00F4' 00A2'              	movwf	?___ftadd+2
  8659  00F5' 0008               	return
  8660  00F6'                    __end_of___ftadd:	
  8661                           
  8662                           	psect	text10
  8663  0000'                    __ptext10:	
  8664 ;; *************** function ___ftdiv *****************
  8665 ;; Defined at:
  8666 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  f2              3   16[BANK0 ] float 
  8669 ;;  f1              3   19[BANK0 ] float 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;  f3              3   27[BANK0 ] float 
  8672 ;;  sign            1   31[BANK0 ] unsigned char 
  8673 ;;  exp             1   30[BANK0 ] unsigned char 
  8674 ;;  cntr            1   26[BANK0 ] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  3   16[BANK0 ] float 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0, pclath, cstack
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8684 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8685 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8686 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8687 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8688 ;;Total ram usage:       16 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:    1
  8691 ;; This function calls:
  8692 ;;		___ftpack
  8693 ;; This function is called by:
  8694 ;;		_tempCalc
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           
  8699                           ;psect for function ___ftdiv
  8700  0000'                    ___ftdiv:	
  8701                           
  8702                           ;incstack = 0
  8703                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8704  0000' 0020               	movlb	0	; select bank0
  8705  0001' 0813'              	movf	___ftdiv@f1,w
  8706  0002' 0096'              	movwf	??___ftdiv
  8707  0003' 0814'              	movf	___ftdiv@f1+1,w
  8708  0004' 0097'              	movwf	??___ftdiv+1
  8709  0005' 0815'              	movf	___ftdiv@f1+2,w
  8710  0006' 0098'              	movwf	??___ftdiv+2
  8711  0007' 1003               	clrc
  8712  0008' 0D17'              	rlf	??___ftdiv+1,w
  8713  0009' 0D18'              	rlf	??___ftdiv+2,w
  8714  000A' 0099'              	movwf	??___ftdiv+3
  8715  000B' 0819'              	movf	??___ftdiv+3,w
  8716  000C' 009E'              	movwf	___ftdiv@exp
  8717  000D' 081E'              	movf	___ftdiv@exp,w
  8718  000E' 1D03               	btfss	3,2
  8719  000F' 2800'              	goto	l2513
  8720  0010' 3000               	movlw	0
  8721  0011' 0090'              	movwf	?___ftdiv
  8722  0012' 3000               	movlw	0
  8723  0013' 0091'              	movwf	?___ftdiv+1
  8724  0014' 3000               	movlw	0
  8725  0015' 0092'              	movwf	?___ftdiv+2
  8726  0016' 0008               	return
  8727  0017'                    l2513:	
  8728  0017' 0810'              	movf	___ftdiv@f2,w
  8729  0018' 0096'              	movwf	??___ftdiv
  8730  0019' 0811'              	movf	___ftdiv@f2+1,w
  8731  001A' 0097'              	movwf	??___ftdiv+1
  8732  001B' 0812'              	movf	___ftdiv@f2+2,w
  8733  001C' 0098'              	movwf	??___ftdiv+2
  8734  001D' 1003               	clrc
  8735  001E' 0D17'              	rlf	??___ftdiv+1,w
  8736  001F' 0D18'              	rlf	??___ftdiv+2,w
  8737  0020' 0099'              	movwf	??___ftdiv+3
  8738  0021' 0819'              	movf	??___ftdiv+3,w
  8739  0022' 009F'              	movwf	___ftdiv@sign
  8740  0023' 081F'              	movf	___ftdiv@sign,w
  8741  0024' 1D03               	btfss	3,2
  8742  0025' 2800'              	goto	l2519
  8743  0026' 3000               	movlw	0
  8744  0027' 0090'              	movwf	?___ftdiv
  8745  0028' 3000               	movlw	0
  8746  0029' 0091'              	movwf	?___ftdiv+1
  8747  002A' 3000               	movlw	0
  8748  002B' 0092'              	movwf	?___ftdiv+2
  8749  002C' 0008               	return
  8750  002D'                    l2519:	
  8751  002D' 3000               	movlw	0
  8752  002E' 009B'              	movwf	___ftdiv@f3
  8753  002F' 3000               	movlw	0
  8754  0030' 009C'              	movwf	___ftdiv@f3+1
  8755  0031' 3000               	movlw	0
  8756  0032' 009D'              	movwf	___ftdiv@f3+2
  8757  0033' 3089               	movlw	137
  8758  0034' 071F'              	addwf	___ftdiv@sign,w
  8759  0035' 0096'              	movwf	??___ftdiv
  8760  0036' 0816'              	movf	??___ftdiv,w
  8761  0037' 029E'              	subwf	___ftdiv@exp,f
  8762  0038' 0813'              	movf	___ftdiv@f1,w
  8763  0039' 0096'              	movwf	??___ftdiv
  8764  003A' 0814'              	movf	___ftdiv@f1+1,w
  8765  003B' 0097'              	movwf	??___ftdiv+1
  8766  003C' 0815'              	movf	___ftdiv@f1+2,w
  8767  003D' 0098'              	movwf	??___ftdiv+2
  8768  003E' 3010               	movlw	16
  8769  003F'                    u2695:	
  8770  003F' 3698'              	lsrf	??___ftdiv+2,f
  8771  0040' 0C97'              	rrf	??___ftdiv+1,f
  8772  0041' 0C96'              	rrf	??___ftdiv,f
  8773  0042' 0B89               	decfsz	9,f
  8774  0043' 2800'              	goto	u2695
  8775  0044' 0816'              	movf	??___ftdiv,w
  8776  0045' 0099'              	movwf	??___ftdiv+3
  8777  0046' 0819'              	movf	??___ftdiv+3,w
  8778  0047' 009F'              	movwf	___ftdiv@sign
  8779  0048' 0810'              	movf	___ftdiv@f2,w
  8780  0049' 0096'              	movwf	??___ftdiv
  8781  004A' 0811'              	movf	___ftdiv@f2+1,w
  8782  004B' 0097'              	movwf	??___ftdiv+1
  8783  004C' 0812'              	movf	___ftdiv@f2+2,w
  8784  004D' 0098'              	movwf	??___ftdiv+2
  8785  004E' 3010               	movlw	16
  8786  004F'                    u2705:	
  8787  004F' 3698'              	lsrf	??___ftdiv+2,f
  8788  0050' 0C97'              	rrf	??___ftdiv+1,f
  8789  0051' 0C96'              	rrf	??___ftdiv,f
  8790  0052' 0B89               	decfsz	9,f
  8791  0053' 2800'              	goto	u2705
  8792  0054' 0816'              	movf	??___ftdiv,w
  8793  0055' 0099'              	movwf	??___ftdiv+3
  8794  0056' 0819'              	movf	??___ftdiv+3,w
  8795  0057' 069F'              	xorwf	___ftdiv@sign,f
  8796  0058' 3080               	movlw	128
  8797  0059' 0096'              	movwf	??___ftdiv
  8798  005A' 0816'              	movf	??___ftdiv,w
  8799  005B' 059F'              	andwf	___ftdiv@sign,f
  8800  005C' 1794'              	bsf	___ftdiv@f1+1,7
  8801  005D' 30FF               	movlw	255
  8802  005E' 0593'              	andwf	___ftdiv@f1,f
  8803  005F' 30FF               	movlw	255
  8804  0060' 0594'              	andwf	___ftdiv@f1+1,f
  8805  0061' 3000               	movlw	0
  8806  0062' 0595'              	andwf	___ftdiv@f1+2,f
  8807  0063' 1791'              	bsf	___ftdiv@f2+1,7
  8808  0064' 30FF               	movlw	255
  8809  0065' 0590'              	andwf	___ftdiv@f2,f
  8810  0066' 30FF               	movlw	255
  8811  0067' 0591'              	andwf	___ftdiv@f2+1,f
  8812  0068' 3000               	movlw	0
  8813  0069' 0592'              	andwf	___ftdiv@f2+2,f
  8814  006A' 3018               	movlw	24
  8815  006B' 0096'              	movwf	??___ftdiv
  8816  006C' 0816'              	movf	??___ftdiv,w
  8817  006D' 009A'              	movwf	___ftdiv@cntr
  8818  006E'                    l2533:	
  8819  006E' 3001               	movlw	1
  8820  006F'                    u2715:	
  8821  006F' 359B'              	lslf	___ftdiv@f3,f
  8822  0070' 0D9C'              	rlf	___ftdiv@f3+1,f
  8823  0071' 0D9D'              	rlf	___ftdiv@f3+2,f
  8824  0072' 0B89               	decfsz	9,f
  8825  0073' 2800'              	goto	u2715
  8826  0074' 0812'              	movf	___ftdiv@f2+2,w
  8827  0075' 0215'              	subwf	___ftdiv@f1+2,w
  8828  0076' 1D03               	skipz
  8829  0077' 2800'              	goto	u2725
  8830  0078' 0811'              	movf	___ftdiv@f2+1,w
  8831  0079' 0214'              	subwf	___ftdiv@f1+1,w
  8832  007A' 1D03               	skipz
  8833  007B' 2800'              	goto	u2725
  8834  007C' 0810'              	movf	___ftdiv@f2,w
  8835  007D' 0213'              	subwf	___ftdiv@f1,w
  8836  007E'                    u2725:	
  8837  007E' 1C03               	skipc
  8838  007F' 2800'              	goto	l2541
  8839  0080' 0810'              	movf	___ftdiv@f2,w
  8840  0081' 0293'              	subwf	___ftdiv@f1,f
  8841  0082' 0811'              	movf	___ftdiv@f2+1,w
  8842  0083' 3B94'              	subwfb	___ftdiv@f1+1,f
  8843  0084' 0812'              	movf	___ftdiv@f2+2,w
  8844  0085' 3B95'              	subwfb	___ftdiv@f1+2,f
  8845  0086' 141B'              	bsf	___ftdiv@f3,0
  8846  0087'                    l2541:	
  8847  0087' 3001               	movlw	1
  8848  0088'                    u2735:	
  8849  0088' 3593'              	lslf	___ftdiv@f1,f
  8850  0089' 0D94'              	rlf	___ftdiv@f1+1,f
  8851  008A' 0D95'              	rlf	___ftdiv@f1+2,f
  8852  008B' 0B89               	decfsz	9,f
  8853  008C' 2800'              	goto	u2735
  8854  008D' 3001               	movlw	1
  8855  008E' 029A'              	subwf	___ftdiv@cntr,f
  8856  008F' 1D03               	btfss	3,2
  8857  0090' 2800'              	goto	l2533
  8858  0091' 081B'              	movf	___ftdiv@f3,w
  8859  0092' 0080'              	movwf	___ftpack@arg
  8860  0093' 081C'              	movf	___ftdiv@f3+1,w
  8861  0094' 0081'              	movwf	___ftpack@arg+1
  8862  0095' 081D'              	movf	___ftdiv@f3+2,w
  8863  0096' 0082'              	movwf	___ftpack@arg+2
  8864  0097' 081E'              	movf	___ftdiv@exp,w
  8865  0098' 0096'              	movwf	??___ftdiv
  8866  0099' 0816'              	movf	??___ftdiv,w
  8867  009A' 0083'              	movwf	___ftpack@exp
  8868  009B' 081F'              	movf	___ftdiv@sign,w
  8869  009C' 0097'              	movwf	??___ftdiv+1
  8870  009D' 0817'              	movf	??___ftdiv+1,w
  8871  009E' 0084'              	movwf	___ftpack@sign
  8872  009F' 3180' 2000'        	fcall	___ftpack
  8873  00A1' 0800'              	movf	?___ftpack,w
  8874  00A2' 0020               	movlb	0	; select bank0
  8875  00A3' 0090'              	movwf	?___ftdiv
  8876  00A4' 0801'              	movf	?___ftpack+1,w
  8877  00A5' 0091'              	movwf	?___ftdiv+1
  8878  00A6' 0802'              	movf	?___ftpack+2,w
  8879  00A7' 0092'              	movwf	?___ftdiv+2
  8880  00A8' 0008               	return
  8881  00A9'                    __end_of___ftdiv:	
  8882                           
  8883                           	psect	text11
  8884  0000'                    __ptext11:	
  8885 ;; *************** function ___ftpack *****************
  8886 ;; Defined at:
  8887 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  arg             3    0[COMMON] unsigned um
  8890 ;;  exp             1    3[COMMON] unsigned char 
  8891 ;;  sign            1    4[COMMON] unsigned char 
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;		None
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  3    0[COMMON] float 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2, status,0
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8903 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8907 ;;Total ram usage:        8 bytes
  8908 ;; Hardware stack levels used:    1
  8909 ;; This function calls:
  8910 ;;		Nothing
  8911 ;; This function is called by:
  8912 ;;		___awtoft
  8913 ;;		___ftadd
  8914 ;;		___ftdiv
  8915 ;;		___ftmul
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           
  8920                           ;psect for function ___ftpack
  8921  0000'                    ___ftpack:	
  8922                           
  8923                           ;incstack = 0
  8924                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8925  0000' 0803'              	movf	___ftpack@exp,w
  8926  0001' 1903               	btfsc	3,2
  8927  0002' 2800'              	goto	l1951
  8928  0003' 0802'              	movf	___ftpack@arg+2,w
  8929  0004' 0401'              	iorwf	___ftpack@arg+1,w
  8930  0005' 0400'              	iorwf	___ftpack@arg,w
  8931  0006' 1D03               	skipz
  8932  0007' 2800'              	goto	l1957
  8933  0008'                    l1951:	
  8934  0008' 3000               	movlw	0
  8935  0009' 0080'              	movwf	?___ftpack
  8936  000A' 3000               	movlw	0
  8937  000B' 0081'              	movwf	?___ftpack+1
  8938  000C' 3000               	movlw	0
  8939  000D' 0082'              	movwf	?___ftpack+2
  8940  000E' 0008               	return
  8941  000F'                    l1955:	
  8942  000F' 3001               	movlw	1
  8943  0010' 0085'              	movwf	??___ftpack
  8944  0011' 0805'              	movf	??___ftpack,w
  8945  0012' 0783'              	addwf	___ftpack@exp,f
  8946  0013' 3001               	movlw	1
  8947  0014'                    u1715:	
  8948  0014' 3682'              	lsrf	___ftpack@arg+2,f
  8949  0015' 0C81'              	rrf	___ftpack@arg+1,f
  8950  0016' 0C80'              	rrf	___ftpack@arg,f
  8951  0017' 0B89               	decfsz	9,f
  8952  0018' 2800'              	goto	u1715
  8953  0019'                    l1957:	
  8954  0019' 30FE               	movlw	254
  8955  001A' 0502'              	andwf	___ftpack@arg+2,w
  8956  001B' 1903               	btfsc	3,2
  8957  001C' 2800'              	goto	l636
  8958  001D' 2800'              	goto	l1955
  8959  001E'                    l1959:	
  8960  001E' 3001               	movlw	1
  8961  001F' 0085'              	movwf	??___ftpack
  8962  0020' 0805'              	movf	??___ftpack,w
  8963  0021' 0783'              	addwf	___ftpack@exp,f
  8964  0022' 3001               	movlw	1
  8965  0023' 0780'              	addwf	___ftpack@arg,f
  8966  0024' 3000               	movlw	0
  8967  0025' 1803               	skipnc
  8968  0026' 3001               	movlw	1
  8969  0027' 0781'              	addwf	___ftpack@arg+1,f
  8970  0028' 3000               	movlw	0
  8971  0029' 1803               	skipnc
  8972  002A' 3001               	movlw	1
  8973  002B' 0782'              	addwf	___ftpack@arg+2,f
  8974  002C' 3001               	movlw	1
  8975  002D'                    u1735:	
  8976  002D' 3682'              	lsrf	___ftpack@arg+2,f
  8977  002E' 0C81'              	rrf	___ftpack@arg+1,f
  8978  002F' 0C80'              	rrf	___ftpack@arg,f
  8979  0030' 0B89               	decfsz	9,f
  8980  0031' 2800'              	goto	u1735
  8981  0032'                    l636:	
  8982  0032' 30FF               	movlw	255
  8983  0033' 0502'              	andwf	___ftpack@arg+2,w
  8984  0034' 1903               	btfsc	3,2
  8985  0035' 2800'              	goto	l1967
  8986  0036' 2800'              	goto	l1959
  8987  0037'                    l1965:	
  8988  0037' 3001               	movlw	1
  8989  0038' 0283'              	subwf	___ftpack@exp,f
  8990  0039' 3001               	movlw	1
  8991  003A'                    u1755:	
  8992  003A' 3580'              	lslf	___ftpack@arg,f
  8993  003B' 0D81'              	rlf	___ftpack@arg+1,f
  8994  003C' 0D82'              	rlf	___ftpack@arg+2,f
  8995  003D' 0B89               	decfsz	9,f
  8996  003E' 2800'              	goto	u1755
  8997  003F'                    l1967:	
  8998  003F' 1B81'              	btfsc	___ftpack@arg+1,7
  8999  0040' 2800'              	goto	l643
  9000  0041' 3002               	movlw	2
  9001  0042' 0203'              	subwf	___ftpack@exp,w
  9002  0043' 1803               	skipnc
  9003  0044' 2800'              	goto	l1965
  9004  0045'                    l643:	
  9005  0045' 1803'              	btfsc	___ftpack@exp,0
  9006  0046' 2800'              	goto	l644
  9007  0047' 30FF               	movlw	255
  9008  0048' 0580'              	andwf	___ftpack@arg,f
  9009  0049' 307F               	movlw	127
  9010  004A' 0581'              	andwf	___ftpack@arg+1,f
  9011  004B' 30FF               	movlw	255
  9012  004C' 0582'              	andwf	___ftpack@arg+2,f
  9013  004D'                    l644:	
  9014  004D' 1003               	clrc
  9015  004E' 0C83'              	rrf	___ftpack@exp,f
  9016  004F' 0803'              	movf	___ftpack@exp,w
  9017  0050' 0085'              	movwf	??___ftpack
  9018  0051' 0186'              	clrf	??___ftpack+1
  9019  0052' 0187'              	clrf	??___ftpack+2
  9020  0053' 3010               	movlw	16
  9021  0054'                    u1795:	
  9022  0054' 3585'              	lslf	??___ftpack,f
  9023  0055' 0D86'              	rlf	??___ftpack+1,f
  9024  0056' 0D87'              	rlf	??___ftpack+2,f
  9025  0057' 0B89               	decfsz	9,f
  9026  0058' 2800'              	goto	u1795
  9027  0059' 0805'              	movf	??___ftpack,w
  9028  005A' 0480'              	iorwf	___ftpack@arg,f
  9029  005B' 0806'              	movf	??___ftpack+1,w
  9030  005C' 0481'              	iorwf	___ftpack@arg+1,f
  9031  005D' 0807'              	movf	??___ftpack+2,w
  9032  005E' 0482'              	iorwf	___ftpack@arg+2,f
  9033  005F' 0804'              	movf	___ftpack@sign,w
  9034  0060' 1903               	btfsc	3,2
  9035  0061' 0008               	return
  9036  0062' 1782'              	bsf	___ftpack@arg+2,7
  9037  0063' 0008               	return
  9038  0064'                    __end_of___ftpack:	
  9039                           
  9040                           	psect	text12
  9041  0000'                    __ptext12:	
  9042 ;; *************** function _readAnalog *****************
  9043 ;; Defined at:
  9044 ;;		line 34 in file "adc.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;  channel         2    6[BANK0 ] int 
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;  value           2   11[COMMON] int 
  9049 ;;  analog_chann    2    9[COMMON] int 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  2    6[BANK0 ] int 
  9052 ;; Registers used:
  9053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9059 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;Total ram usage:       22 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:    1
  9066 ;; This function calls:
  9067 ;;		_ADCRead
  9068 ;;		___aldiv
  9069 ;;		___wmul
  9070 ;; This function is called by:
  9071 ;;		_main
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           
  9076                           ;psect for function _readAnalog
  9077  0000'                    _readAnalog:	
  9078                           
  9079                           ;adc.c: 36: int value;
  9080                           ;adc.c: 38: int analog_channel = channels[channel];
  9081                           
  9082                           ;incstack = 0
  9083                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9084  0000' 0020               	movlb	0	; select bank0
  9085  0001' 3506'              	lslf	readAnalog@channel,w
  9086  0002' 3E00'              	addlw	(low (_channels| (0+256)))& (0+255)
  9087  0003' 0086               	movwf	6
  9088  0004' 3001               	movlw	1	; select bank3/4
  9089  0005' 0087               	movwf	7
  9090  0006' 3F40               	moviw [0]fsr1
  9091  0007' 0089'              	movwf	readAnalog@analog_channel
  9092  0008' 3F41               	moviw [1]fsr1
  9093  0009' 008A'              	movwf	readAnalog@analog_channel+1
  9094                           
  9095                           ;adc.c: 40: value = ADCRead(analog_channel);
  9096  000A' 0809'              	movf	readAnalog@analog_channel,w
  9097  000B' 3180' 2000' 3180'  	fcall	_ADCRead
  9098  000E' 0801'              	movf	?_ADCRead+1,w
  9099  000F' 008C'              	movwf	readAnalog@value+1
  9100  0010' 0800'              	movf	?_ADCRead,w
  9101  0011' 008B'              	movwf	readAnalog@value
  9102                           
  9103                           ;adc.c: 42: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9104  0012' 0020               	movlb	0	; select bank0
  9105  0013' 0806'              	movf	readAnalog@channel,w
  9106  0014' 0088'              	movwf	??_readAnalog
  9107  0015' 3001               	movlw	1
  9108  0016'                    u2985:	
  9109  0016' 3588'              	lslf	??_readAnalog,f
  9110  0017' 3EFF               	addlw	-1
  9111  0018' 1D03               	skipz
  9112  0019' 2800'              	goto	u2985
  9113  001A' 3508'              	lslf	??_readAnalog,w
  9114  001B' 3E00'              	addlw	(low (_totals| (0+256)))& (0+255)
  9115  001C' 0086               	movwf	6
  9116  001D' 3001               	movlw	1	; select bank3/4
  9117  001E' 0087               	movwf	7
  9118  001F' 3F40               	moviw [0]fsr1
  9119  0020' 0089'              	movwf	??_readAnalog+1
  9120  0021' 3F41               	moviw [1]fsr1
  9121  0022' 008A'              	movwf	??_readAnalog+2
  9122  0023' 3F42               	moviw [2]fsr1
  9123  0024' 008B'              	movwf	??_readAnalog+3
  9124  0025' 3F43               	moviw [3]fsr1
  9125  0026' 008C'              	movwf	??_readAnalog+4
  9126  0027' 0021               	movlb	1	; select bank1
  9127  0028' 0800'              	movf	(_sampleIndex+1)^(0+128),w
  9128  0029' 0020               	movlb	0	; select bank0
  9129  002A' 008E'              	movwf	??_readAnalog+6
  9130  002B' 0021               	movlb	1	; select bank1
  9131  002C' 0800'              	movf	_sampleIndex^(0+128),w
  9132  002D' 0020               	movlb	0	; select bank0
  9133  002E' 008D'              	movwf	??_readAnalog+5
  9134  002F' 358D'              	lslf	??_readAnalog+5,f
  9135  0030' 0D8E'              	rlf	??_readAnalog+6,f
  9136  0031' 0807'              	movf	readAnalog@channel+1,w
  9137  0032' 0081'              	movwf	___wmul@multiplier+1
  9138  0033' 0806'              	movf	readAnalog@channel,w
  9139  0034' 0080'              	movwf	___wmul@multiplier
  9140  0035' 3050               	movlw	80
  9141  0036' 0082'              	movwf	___wmul@multiplicand
  9142  0037' 3000               	movlw	0
  9143  0038' 0083'              	movwf	___wmul@multiplicand+1
  9144  0039' 3180' 2000' 3180'  	fcall	___wmul
  9145  003C' 3050               	movlw	80
  9146  003D' 0020               	movlb	0	; select bank0
  9147  003E' 008F'              	movwf	??_readAnalog+7
  9148  003F' 3023               	movlw	35
  9149  0040' 0090'              	movwf	??_readAnalog+8
  9150  0041' 0800'              	movf	?___wmul,w
  9151  0042' 070F'              	addwf	??_readAnalog+7,w
  9152  0043' 0091'              	movwf	??_readAnalog+9
  9153  0044' 0801'              	movf	?___wmul+1,w
  9154  0045' 3D10'              	addwfc	??_readAnalog+8,w
  9155  0046' 0092'              	movwf	??_readAnalog+10
  9156  0047' 0811'              	movf	??_readAnalog+9,w
  9157  0048' 070D'              	addwf	??_readAnalog+5,w
  9158  0049' 0084               	movwf	4
  9159  004A' 0812'              	movf	??_readAnalog+10,w
  9160  004B' 3D0E'              	addwfc	??_readAnalog+6,w
  9161  004C' 0085               	movwf	5
  9162  004D' 3F00               	moviw [0]fsr0
  9163  004E' 0093'              	movwf	??_readAnalog+11
  9164  004F' 3F01               	moviw [1]fsr0
  9165  0050' 0094'              	movwf	??_readAnalog+12
  9166  0051' 0195'              	clrf	??_readAnalog+13
  9167  0052' 0196'              	clrf	??_readAnalog+14
  9168  0053' 0993'              	comf	??_readAnalog+11,f
  9169  0054' 0994'              	comf	??_readAnalog+12,f
  9170  0055' 0995'              	comf	??_readAnalog+13,f
  9171  0056' 0996'              	comf	??_readAnalog+14,f
  9172  0057' 0A93'              	incf	??_readAnalog+11,f
  9173  0058' 1903               	skipnz
  9174  0059' 0A94'              	incf	??_readAnalog+12,f
  9175  005A' 1903               	skipnz
  9176  005B' 0A95'              	incf	??_readAnalog+13,f
  9177  005C' 1903               	skipnz
  9178  005D' 0A96'              	incf	??_readAnalog+14,f
  9179  005E' 0813'              	movf	??_readAnalog+11,w
  9180  005F' 0789'              	addwf	??_readAnalog+1,f
  9181  0060' 0814'              	movf	??_readAnalog+12,w
  9182  0061' 3D8A'              	addwfc	??_readAnalog+2,f
  9183  0062' 0815'              	movf	??_readAnalog+13,w
  9184  0063' 3D8B'              	addwfc	??_readAnalog+3,f
  9185  0064' 0816'              	movf	??_readAnalog+14,w
  9186  0065' 3D8C'              	addwfc	??_readAnalog+4,f
  9187  0066' 0806'              	movf	readAnalog@channel,w
  9188  0067' 0097'              	movwf	??_readAnalog+15
  9189  0068' 3001               	movlw	1
  9190  0069'                    u2995:	
  9191  0069' 3597'              	lslf	??_readAnalog+15,f
  9192  006A' 3EFF               	addlw	-1
  9193  006B' 1D03               	skipz
  9194  006C' 2800'              	goto	u2995
  9195  006D' 3517'              	lslf	??_readAnalog+15,w
  9196  006E' 3E00'              	addlw	(low (_totals| (0+256)))& (0+255)
  9197  006F' 0086               	movwf	6
  9198  0070' 3001               	movlw	1	; select bank3/4
  9199  0071' 0087               	movwf	7
  9200  0072' 0809'              	movf	??_readAnalog+1,w
  9201  0073' 3FC0               	movwi [0]fsr1
  9202  0074' 080A'              	movf	??_readAnalog+2,w
  9203  0075' 3FC1               	movwi [1]fsr1
  9204  0076' 080B'              	movf	??_readAnalog+3,w
  9205  0077' 3FC2               	movwi [2]fsr1
  9206  0078' 080C'              	movf	??_readAnalog+4,w
  9207  0079' 3FC3               	movwi [3]fsr1
  9208                           
  9209                           ;adc.c: 44: samples[channel][sampleIndex] = value;
  9210  007A' 0021               	movlb	1	; select bank1
  9211  007B' 0800'              	movf	(_sampleIndex+1)^(0+128),w
  9212  007C' 0020               	movlb	0	; select bank0
  9213  007D' 0089'              	movwf	??_readAnalog+1
  9214  007E' 0021               	movlb	1	; select bank1
  9215  007F' 0800'              	movf	_sampleIndex^(0+128),w
  9216  0080' 0020               	movlb	0	; select bank0
  9217  0081' 0088'              	movwf	??_readAnalog
  9218  0082' 3588'              	lslf	??_readAnalog,f
  9219  0083' 0D89'              	rlf	??_readAnalog+1,f
  9220  0084' 0807'              	movf	readAnalog@channel+1,w
  9221  0085' 0081'              	movwf	___wmul@multiplier+1
  9222  0086' 0806'              	movf	readAnalog@channel,w
  9223  0087' 0080'              	movwf	___wmul@multiplier
  9224  0088' 3050               	movlw	80
  9225  0089' 0082'              	movwf	___wmul@multiplicand
  9226  008A' 3000               	movlw	0
  9227  008B' 0083'              	movwf	___wmul@multiplicand+1
  9228  008C' 3180' 2000' 3180'  	fcall	___wmul
  9229  008F' 3050               	movlw	80
  9230  0090' 0020               	movlb	0	; select bank0
  9231  0091' 008A'              	movwf	??_readAnalog+2
  9232  0092' 3023               	movlw	35
  9233  0093' 008B'              	movwf	??_readAnalog+3
  9234  0094' 0800'              	movf	?___wmul,w
  9235  0095' 070A'              	addwf	??_readAnalog+2,w
  9236  0096' 008C'              	movwf	??_readAnalog+4
  9237  0097' 0801'              	movf	?___wmul+1,w
  9238  0098' 3D0B'              	addwfc	??_readAnalog+3,w
  9239  0099' 008D'              	movwf	??_readAnalog+5
  9240  009A' 0808'              	movf	??_readAnalog,w
  9241  009B' 070C'              	addwf	??_readAnalog+4,w
  9242  009C' 0086               	movwf	6
  9243  009D' 0809'              	movf	??_readAnalog+1,w
  9244  009E' 3D0D'              	addwfc	??_readAnalog+5,w
  9245  009F' 0087               	movwf	7
  9246  00A0' 080B'              	movf	readAnalog@value,w
  9247  00A1' 3FC0               	movwi [0]fsr1
  9248  00A2' 080C'              	movf	readAnalog@value+1,w
  9249  00A3' 3FC1               	movwi [1]fsr1
  9250                           
  9251                           ;adc.c: 46: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9252  00A4' 0806'              	movf	readAnalog@channel,w
  9253  00A5' 0088'              	movwf	??_readAnalog
  9254  00A6' 3001               	movlw	1
  9255  00A7'                    u3005:	
  9256  00A7' 3588'              	lslf	??_readAnalog,f
  9257  00A8' 3EFF               	addlw	-1
  9258  00A9' 1D03               	skipz
  9259  00AA' 2800'              	goto	u3005
  9260  00AB' 3508'              	lslf	??_readAnalog,w
  9261  00AC' 3E00'              	addlw	(low (_totals| (0+256)))& (0+255)
  9262  00AD' 0086               	movwf	6
  9263  00AE' 3001               	movlw	1	; select bank3/4
  9264  00AF' 0087               	movwf	7
  9265  00B0' 3F40               	moviw [0]fsr1
  9266  00B1' 0089'              	movwf	??_readAnalog+1
  9267  00B2' 3F41               	moviw [1]fsr1
  9268  00B3' 008A'              	movwf	??_readAnalog+2
  9269  00B4' 3F42               	moviw [2]fsr1
  9270  00B5' 008B'              	movwf	??_readAnalog+3
  9271  00B6' 3F43               	moviw [3]fsr1
  9272  00B7' 008C'              	movwf	??_readAnalog+4
  9273  00B8' 0021               	movlb	1	; select bank1
  9274  00B9' 0800'              	movf	(_sampleIndex+1)^(0+128),w
  9275  00BA' 0020               	movlb	0	; select bank0
  9276  00BB' 008E'              	movwf	??_readAnalog+6
  9277  00BC' 0021               	movlb	1	; select bank1
  9278  00BD' 0800'              	movf	_sampleIndex^(0+128),w
  9279  00BE' 0020               	movlb	0	; select bank0
  9280  00BF' 008D'              	movwf	??_readAnalog+5
  9281  00C0' 358D'              	lslf	??_readAnalog+5,f
  9282  00C1' 0D8E'              	rlf	??_readAnalog+6,f
  9283  00C2' 0807'              	movf	readAnalog@channel+1,w
  9284  00C3' 0081'              	movwf	___wmul@multiplier+1
  9285  00C4' 0806'              	movf	readAnalog@channel,w
  9286  00C5' 0080'              	movwf	___wmul@multiplier
  9287  00C6' 3050               	movlw	80
  9288  00C7' 0082'              	movwf	___wmul@multiplicand
  9289  00C8' 3000               	movlw	0
  9290  00C9' 0083'              	movwf	___wmul@multiplicand+1
  9291  00CA' 3180' 2000' 3180'  	fcall	___wmul
  9292  00CD' 3050               	movlw	80
  9293  00CE' 0020               	movlb	0	; select bank0
  9294  00CF' 008F'              	movwf	??_readAnalog+7
  9295  00D0' 3023               	movlw	35
  9296  00D1' 0090'              	movwf	??_readAnalog+8
  9297  00D2' 0800'              	movf	?___wmul,w
  9298  00D3' 070F'              	addwf	??_readAnalog+7,w
  9299  00D4' 0091'              	movwf	??_readAnalog+9
  9300  00D5' 0801'              	movf	?___wmul+1,w
  9301  00D6' 3D10'              	addwfc	??_readAnalog+8,w
  9302  00D7' 0092'              	movwf	??_readAnalog+10
  9303  00D8' 0811'              	movf	??_readAnalog+9,w
  9304  00D9' 070D'              	addwf	??_readAnalog+5,w
  9305  00DA' 0084               	movwf	4
  9306  00DB' 0812'              	movf	??_readAnalog+10,w
  9307  00DC' 3D0E'              	addwfc	??_readAnalog+6,w
  9308  00DD' 0085               	movwf	5
  9309  00DE' 3F00               	moviw [0]fsr0
  9310  00DF' 0093'              	movwf	??_readAnalog+11
  9311  00E0' 3F01               	moviw [1]fsr0
  9312  00E1' 0094'              	movwf	??_readAnalog+12
  9313  00E2' 0195'              	clrf	??_readAnalog+13
  9314  00E3' 0196'              	clrf	??_readAnalog+14
  9315  00E4' 0813'              	movf	??_readAnalog+11,w
  9316  00E5' 0789'              	addwf	??_readAnalog+1,f
  9317  00E6' 0814'              	movf	??_readAnalog+12,w
  9318  00E7' 3D8A'              	addwfc	??_readAnalog+2,f
  9319  00E8' 0815'              	movf	??_readAnalog+13,w
  9320  00E9' 3D8B'              	addwfc	??_readAnalog+3,f
  9321  00EA' 0816'              	movf	??_readAnalog+14,w
  9322  00EB' 3D8C'              	addwfc	??_readAnalog+4,f
  9323  00EC' 0806'              	movf	readAnalog@channel,w
  9324  00ED' 0097'              	movwf	??_readAnalog+15
  9325  00EE' 3001               	movlw	1
  9326  00EF'                    u3015:	
  9327  00EF' 3597'              	lslf	??_readAnalog+15,f
  9328  00F0' 3EFF               	addlw	-1
  9329  00F1' 1D03               	skipz
  9330  00F2' 2800'              	goto	u3015
  9331  00F3' 3517'              	lslf	??_readAnalog+15,w
  9332  00F4' 3E00'              	addlw	(low (_totals| (0+256)))& (0+255)
  9333  00F5' 0086               	movwf	6
  9334  00F6' 3001               	movlw	1	; select bank3/4
  9335  00F7' 0087               	movwf	7
  9336  00F8' 0809'              	movf	??_readAnalog+1,w
  9337  00F9' 3FC0               	movwi [0]fsr1
  9338  00FA' 080A'              	movf	??_readAnalog+2,w
  9339  00FB' 3FC1               	movwi [1]fsr1
  9340  00FC' 080B'              	movf	??_readAnalog+3,w
  9341  00FD' 3FC2               	movwi [2]fsr1
  9342  00FE' 080C'              	movf	??_readAnalog+4,w
  9343  00FF' 3FC3               	movwi [3]fsr1
  9344                           
  9345                           ;adc.c: 48: if(channel>=(2-1))
  9346  0100' 0807'              	movf	readAnalog@channel+1,w
  9347  0101' 3A80               	xorlw	128
  9348  0102' 0088'              	movwf	??_readAnalog
  9349  0103' 3080               	movlw	128
  9350  0104' 0208'              	subwf	??_readAnalog,w
  9351  0105' 1D03               	skipz
  9352  0106' 2800'              	goto	u3025
  9353  0107' 3001               	movlw	1
  9354  0108' 0206'              	subwf	readAnalog@channel,w
  9355  0109'                    u3025:	
  9356  0109' 1C03               	skipc
  9357  010A' 2800'              	goto	l2737
  9358                           
  9359                           ;adc.c: 49: {
  9360                           ;adc.c: 50: sampleIndex+=1;
  9361  010B' 3001               	movlw	1
  9362  010C' 0021               	movlb	1	; select bank1
  9363  010D' 0780'              	addwf	_sampleIndex^(0+128),f
  9364  010E' 3000               	movlw	0
  9365  010F' 3D80'              	addwfc	(_sampleIndex+1)^(0+128),f
  9366                           
  9367                           ;adc.c: 51: if(sampleIndex >= 40)sampleIndex = 0;
  9368  0110' 3000               	movlw	0
  9369  0111' 0200'              	subwf	(_sampleIndex+1)^(0+128),w
  9370  0112' 3028               	movlw	40
  9371  0113' 1903               	skipnz
  9372  0114' 0200'              	subwf	_sampleIndex^(0+128),w
  9373  0115' 1C03               	skipc
  9374  0116' 2800'              	goto	l2737
  9375  0117' 0180'              	clrf	_sampleIndex^(0+128)
  9376  0118' 0180'              	clrf	(_sampleIndex+1)^(0+128)
  9377  0119'                    l2737:	
  9378                           
  9379                           ;adc.c: 52: }
  9380                           ;adc.c: 54: value = totals[channel]/40;
  9381  0119' 3000               	movlw	0
  9382  011A' 0083'              	movwf	___aldiv@divisor+3
  9383  011B' 3000               	movlw	0
  9384  011C' 0082'              	movwf	___aldiv@divisor+2
  9385  011D' 3000               	movlw	0
  9386  011E' 0081'              	movwf	___aldiv@divisor+1
  9387  011F' 3028               	movlw	40
  9388  0120' 0080'              	movwf	___aldiv@divisor
  9389  0121' 0020               	movlb	0	; select bank0
  9390  0122' 0806'              	movf	readAnalog@channel,w
  9391  0123' 0088'              	movwf	??_readAnalog
  9392  0124' 3001               	movlw	1
  9393  0125'                    u3045:	
  9394  0125' 3588'              	lslf	??_readAnalog,f
  9395  0126' 3EFF               	addlw	-1
  9396  0127' 1D03               	skipz
  9397  0128' 2800'              	goto	u3045
  9398  0129' 3508'              	lslf	??_readAnalog,w
  9399  012A' 3E00'              	addlw	(low (_totals| (0+256)))& (0+255)
  9400  012B' 0086               	movwf	6
  9401  012C' 3001               	movlw	1	; select bank3/4
  9402  012D' 0087               	movwf	7
  9403  012E' 3F40               	moviw [0]fsr1
  9404  012F' 0084'              	movwf	___aldiv@dividend
  9405  0130' 3F41               	moviw [1]fsr1
  9406  0131' 0085'              	movwf	___aldiv@dividend+1
  9407  0132' 3F42               	moviw [2]fsr1
  9408  0133' 0086'              	movwf	___aldiv@dividend+2
  9409  0134' 3F43               	moviw [3]fsr1
  9410  0135' 0087'              	movwf	___aldiv@dividend+3
  9411  0136' 3180' 2000'        	fcall	___aldiv
  9412  0138' 0801'              	movf	?___aldiv+1,w
  9413  0139' 008C'              	movwf	readAnalog@value+1
  9414  013A' 0800'              	movf	?___aldiv,w
  9415  013B' 008B'              	movwf	readAnalog@value
  9416                           
  9417                           ;adc.c: 56: return value;
  9418  013C' 080C'              	movf	readAnalog@value+1,w
  9419  013D' 0020               	movlb	0	; select bank0
  9420  013E' 0087'              	movwf	?_readAnalog+1
  9421  013F' 080B'              	movf	readAnalog@value,w
  9422  0140' 0086'              	movwf	?_readAnalog
  9423  0141' 0008               	return
  9424  0142'                    __end_of_readAnalog:	
  9425                           
  9426                           	psect	text13
  9427  0000'                    __ptext13:	
  9428 ;; *************** function ___aldiv *****************
  9429 ;; Defined at:
  9430 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;  divisor         4    0[COMMON] long 
  9433 ;;  dividend        4    4[COMMON] long 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;  quotient        4    2[BANK0 ] long 
  9436 ;;  sign            1    1[BANK0 ] unsigned char 
  9437 ;;  counter         1    0[BANK0 ] unsigned char 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  4    0[COMMON] long 
  9440 ;; Registers used:
  9441 ;;		wreg, status,2, status,0
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9447 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9448 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9450 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9451 ;;Total ram usage:       15 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; This function calls:
  9454 ;;		Nothing
  9455 ;; This function is called by:
  9456 ;;		_readAnalog
  9457 ;;		_main
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           
  9461                           
  9462                           ;psect for function ___aldiv
  9463  0000'                    ___aldiv:	
  9464                           
  9465                           ;incstack = 0
  9466                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9467  0000' 0020               	movlb	0	; select bank0
  9468  0001' 0181'              	clrf	___aldiv@sign
  9469  0002' 1F83'              	btfss	___aldiv@divisor+3,7
  9470  0003' 2800'              	goto	l530
  9471  0004' 0980'              	comf	___aldiv@divisor,f
  9472  0005' 0981'              	comf	___aldiv@divisor+1,f
  9473  0006' 0982'              	comf	___aldiv@divisor+2,f
  9474  0007' 0983'              	comf	___aldiv@divisor+3,f
  9475  0008' 0A80'              	incf	___aldiv@divisor,f
  9476  0009' 1903               	skipnz
  9477  000A' 0A81'              	incf	___aldiv@divisor+1,f
  9478  000B' 1903               	skipnz
  9479  000C' 0A82'              	incf	___aldiv@divisor+2,f
  9480  000D' 1903               	skipnz
  9481  000E' 0A83'              	incf	___aldiv@divisor+3,f
  9482  000F' 0181'              	clrf	___aldiv@sign
  9483  0010' 0A81'              	incf	___aldiv@sign,f
  9484  0011'                    l530:	
  9485  0011' 1F87'              	btfss	___aldiv@dividend+3,7
  9486  0012' 2800'              	goto	l2395
  9487  0013' 0984'              	comf	___aldiv@dividend,f
  9488  0014' 0985'              	comf	___aldiv@dividend+1,f
  9489  0015' 0986'              	comf	___aldiv@dividend+2,f
  9490  0016' 0987'              	comf	___aldiv@dividend+3,f
  9491  0017' 0A84'              	incf	___aldiv@dividend,f
  9492  0018' 1903               	skipnz
  9493  0019' 0A85'              	incf	___aldiv@dividend+1,f
  9494  001A' 1903               	skipnz
  9495  001B' 0A86'              	incf	___aldiv@dividend+2,f
  9496  001C' 1903               	skipnz
  9497  001D' 0A87'              	incf	___aldiv@dividend+3,f
  9498  001E' 3001               	movlw	1
  9499  001F' 0088'              	movwf	??___aldiv
  9500  0020' 0808'              	movf	??___aldiv,w
  9501  0021' 0681'              	xorwf	___aldiv@sign,f
  9502  0022'                    l2395:	
  9503  0022' 3000               	movlw	0
  9504  0023' 0085'              	movwf	___aldiv@quotient+3
  9505  0024' 3000               	movlw	0
  9506  0025' 0084'              	movwf	___aldiv@quotient+2
  9507  0026' 3000               	movlw	0
  9508  0027' 0083'              	movwf	___aldiv@quotient+1
  9509  0028' 3000               	movlw	0
  9510  0029' 0082'              	movwf	___aldiv@quotient
  9511  002A' 0803'              	movf	___aldiv@divisor+3,w
  9512  002B' 0402'              	iorwf	___aldiv@divisor+2,w
  9513  002C' 0401'              	iorwf	___aldiv@divisor+1,w
  9514  002D' 0400'              	iorwf	___aldiv@divisor,w
  9515  002E' 1903               	skipnz
  9516  002F' 2800'              	goto	l2417
  9517  0030' 0180'              	clrf	___aldiv@counter
  9518  0031' 0A80'              	incf	___aldiv@counter,f
  9519  0032'                    l2403:	
  9520  0032' 1B83'              	btfsc	___aldiv@divisor+3,7
  9521  0033' 2800'              	goto	l2405
  9522  0034' 3001               	movlw	1
  9523  0035'                    u2415:	
  9524  0035' 3580'              	lslf	___aldiv@divisor,f
  9525  0036' 0D81'              	rlf	___aldiv@divisor+1,f
  9526  0037' 0D82'              	rlf	___aldiv@divisor+2,f
  9527  0038' 0D83'              	rlf	___aldiv@divisor+3,f
  9528  0039' 0B89               	decfsz	9,f
  9529  003A' 2800'              	goto	u2415
  9530  003B' 3001               	movlw	1
  9531  003C' 0088'              	movwf	??___aldiv
  9532  003D' 0808'              	movf	??___aldiv,w
  9533  003E' 0780'              	addwf	___aldiv@counter,f
  9534  003F' 2800'              	goto	l2403
  9535  0040'                    l2405:	
  9536  0040' 3001               	movlw	1
  9537  0041'                    u2435:	
  9538  0041' 3582'              	lslf	___aldiv@quotient,f
  9539  0042' 0D83'              	rlf	___aldiv@quotient+1,f
  9540  0043' 0D84'              	rlf	___aldiv@quotient+2,f
  9541  0044' 0D85'              	rlf	___aldiv@quotient+3,f
  9542  0045' 0B89               	decfsz	9,f
  9543  0046' 2800'              	goto	u2435
  9544  0047' 0803'              	movf	___aldiv@divisor+3,w
  9545  0048' 0207'              	subwf	___aldiv@dividend+3,w
  9546  0049' 1D03               	skipz
  9547  004A' 2800'              	goto	u2445
  9548  004B' 0802'              	movf	___aldiv@divisor+2,w
  9549  004C' 0206'              	subwf	___aldiv@dividend+2,w
  9550  004D' 1D03               	skipz
  9551  004E' 2800'              	goto	u2445
  9552  004F' 0801'              	movf	___aldiv@divisor+1,w
  9553  0050' 0205'              	subwf	___aldiv@dividend+1,w
  9554  0051' 1D03               	skipz
  9555  0052' 2800'              	goto	u2445
  9556  0053' 0800'              	movf	___aldiv@divisor,w
  9557  0054' 0204'              	subwf	___aldiv@dividend,w
  9558  0055'                    u2445:	
  9559  0055' 1C03               	skipc
  9560  0056' 2800'              	goto	l2413
  9561  0057' 0800'              	movf	___aldiv@divisor,w
  9562  0058' 0284'              	subwf	___aldiv@dividend,f
  9563  0059' 0801'              	movf	___aldiv@divisor+1,w
  9564  005A' 3B85'              	subwfb	___aldiv@dividend+1,f
  9565  005B' 0802'              	movf	___aldiv@divisor+2,w
  9566  005C' 3B86'              	subwfb	___aldiv@dividend+2,f
  9567  005D' 0803'              	movf	___aldiv@divisor+3,w
  9568  005E' 3B87'              	subwfb	___aldiv@dividend+3,f
  9569  005F' 1402'              	bsf	___aldiv@quotient,0
  9570  0060'                    l2413:	
  9571  0060' 3001               	movlw	1
  9572  0061'                    u2455:	
  9573  0061' 3683'              	lsrf	___aldiv@divisor+3,f
  9574  0062' 0C82'              	rrf	___aldiv@divisor+2,f
  9575  0063' 0C81'              	rrf	___aldiv@divisor+1,f
  9576  0064' 0C80'              	rrf	___aldiv@divisor,f
  9577  0065' 0B89               	decfsz	9,f
  9578  0066' 2800'              	goto	u2455
  9579  0067' 3001               	movlw	1
  9580  0068' 0280'              	subwf	___aldiv@counter,f
  9581  0069' 1D03               	btfss	3,2
  9582  006A' 2800'              	goto	l2405
  9583  006B'                    l2417:	
  9584  006B' 0801'              	movf	___aldiv@sign,w
  9585  006C' 1903               	btfsc	3,2
  9586  006D' 2800'              	goto	l2421
  9587  006E' 0982'              	comf	___aldiv@quotient,f
  9588  006F' 0983'              	comf	___aldiv@quotient+1,f
  9589  0070' 0984'              	comf	___aldiv@quotient+2,f
  9590  0071' 0985'              	comf	___aldiv@quotient+3,f
  9591  0072' 0A82'              	incf	___aldiv@quotient,f
  9592  0073' 1903               	skipnz
  9593  0074' 0A83'              	incf	___aldiv@quotient+1,f
  9594  0075' 1903               	skipnz
  9595  0076' 0A84'              	incf	___aldiv@quotient+2,f
  9596  0077' 1903               	skipnz
  9597  0078' 0A85'              	incf	___aldiv@quotient+3,f
  9598  0079'                    l2421:	
  9599  0079' 0805'              	movf	___aldiv@quotient+3,w
  9600  007A' 0083'              	movwf	?___aldiv+3
  9601  007B' 0804'              	movf	___aldiv@quotient+2,w
  9602  007C' 0082'              	movwf	?___aldiv+2
  9603  007D' 0803'              	movf	___aldiv@quotient+1,w
  9604  007E' 0081'              	movwf	?___aldiv+1
  9605  007F' 0802'              	movf	___aldiv@quotient,w
  9606  0080' 0080'              	movwf	?___aldiv
  9607  0081' 0008               	return
  9608  0082'                    __end_of___aldiv:	
  9609                           
  9610                           	psect	text14
  9611  0000'                    __ptext14:	
  9612 ;; *************** function _ADCRead *****************
  9613 ;; Defined at:
  9614 ;;		line 16 in file "adc.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  channel         1    wreg     enum E13559
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;  channel         1    3[COMMON] enum E13559
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  2    0[COMMON] unsigned int 
  9621 ;; Registers used:
  9622 ;;		wreg
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9628 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9631 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9632 ;;Total ram usage:        4 bytes
  9633 ;; Hardware stack levels used:    1
  9634 ;; This function calls:
  9635 ;;		Nothing
  9636 ;; This function is called by:
  9637 ;;		_readAnalog
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           
  9642                           ;psect for function _ADCRead
  9643  0000'                    _ADCRead:	
  9644                           
  9645                           ;incstack = 0
  9646                           ; Regs used in _ADCRead: [wreg]
  9647                           ;ADCRead@channel stored from wreg
  9648  0000' 0083'              	movwf	ADCRead@channel
  9649                           
  9650                           ;adc.c: 18: ADPCH = channel;
  9651  0001' 0803'              	movf	ADCRead@channel,w
  9652  0002' 0021               	movlb	1	; select bank1
  9653  0003' 009E               	movwf	30	;volatile
  9654                           
  9655                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9656  0004' 1793               	bsf	19,7	;volatile
  9657                           
  9658                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9659  0005' 1313               	bcf	19,6	;volatile
  9660                           
  9661                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9662  0006' 1413               	bsf	19,0	;volatile
  9663  0007'                    l288:	
  9664                           ;adc.c: 27: {
  9665                           
  9666                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9667                           
  9668  0007' 1813               	btfsc	19,0	;volatile
  9669  0008' 2800'              	goto	l288
  9670                           
  9671                           ;adc.c: 28: }
  9672                           ;adc.c: 30: return ((ADRESH<<8)+ADRESL);
  9673  0009' 080D               	movf	13,w	;volatile
  9674  000A' 0081'              	movwf	?_ADCRead+1
  9675  000B' 080C               	movf	12,w	;volatile
  9676  000C' 0080'              	movwf	?_ADCRead
  9677  000D' 0008               	return
  9678  000E'                    __end_of_ADCRead:	
  9679                           
  9680                           	psect	text15
  9681  0000'                    __ptext15:	
  9682 ;; *************** function ___fttol *****************
  9683 ;; Defined at:
  9684 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;  f1              3   73[BANK0 ] float 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;  lval            4    5[BANK1 ] unsigned long 
  9689 ;;  exp1            1    9[BANK1 ] unsigned char 
  9690 ;;  sign1           1    4[BANK1 ] unsigned char 
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  4   73[BANK0 ] long 
  9693 ;; Registers used:
  9694 ;;		wreg, status,2, status,0
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9700 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9701 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9702 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0
  9704 ;;Total ram usage:       14 bytes
  9705 ;; Hardware stack levels used:    1
  9706 ;; This function calls:
  9707 ;;		Nothing
  9708 ;; This function is called by:
  9709 ;;		_main
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713                           
  9714                           ;psect for function ___fttol
  9715  0000'                    ___fttol:	
  9716                           
  9717                           ;incstack = 0
  9718                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9719  0000' 0020               	movlb	0	; select bank0
  9720  0001' 0849'              	movf	___fttol@f1,w
  9721  0002' 0021               	movlb	1	; select bank1
  9722  0003' 0080'              	movwf	??___fttol^(0+128)
  9723  0004' 0020               	movlb	0	; select bank0
  9724  0005' 084A'              	movf	___fttol@f1+1,w
  9725  0006' 0021               	movlb	1	; select bank1
  9726  0007' 0081'              	movwf	(??___fttol^(0+128)+1)
  9727  0008' 0020               	movlb	0	; select bank0
  9728  0009' 084B'              	movf	___fttol@f1+2,w
  9729  000A' 0021               	movlb	1	; select bank1
  9730  000B' 0082'              	movwf	(??___fttol^(0+128)+2)
  9731  000C' 1003               	clrc
  9732  000D' 0D01'              	rlf	(??___fttol^(0+128)+1),w
  9733  000E' 0D02'              	rlf	(??___fttol^(0+128)+2),w
  9734  000F' 0080'              	movwf	(??___fttol+3)^(0+128)
  9735  0010' 0800'              	movf	(??___fttol+3)^(0+128),w
  9736  0011' 0080'              	movwf	___fttol@exp1^(0+128)
  9737  0012' 0800'              	movf	___fttol@exp1^(0+128),w
  9738  0013' 1D03               	btfss	3,2
  9739  0014' 2800'              	goto	l2765
  9740  0015' 3000               	movlw	0
  9741  0016' 0020               	movlb	0	; select bank0
  9742  0017' 00CC'              	movwf	?___fttol+3
  9743  0018' 3000               	movlw	0
  9744  0019' 00CB'              	movwf	?___fttol+2
  9745  001A' 3000               	movlw	0
  9746  001B' 00CA'              	movwf	?___fttol+1
  9747  001C' 3000               	movlw	0
  9748  001D' 00C9'              	movwf	?___fttol
  9749  001E' 0008               	return
  9750  001F'                    l2765:	
  9751  001F' 0020               	movlb	0	; select bank0
  9752  0020' 0849'              	movf	___fttol@f1,w
  9753  0021' 0021               	movlb	1	; select bank1
  9754  0022' 0080'              	movwf	??___fttol^(0+128)
  9755  0023' 0020               	movlb	0	; select bank0
  9756  0024' 084A'              	movf	___fttol@f1+1,w
  9757  0025' 0021               	movlb	1	; select bank1
  9758  0026' 0081'              	movwf	(??___fttol^(0+128)+1)
  9759  0027' 0020               	movlb	0	; select bank0
  9760  0028' 084B'              	movf	___fttol@f1+2,w
  9761  0029' 0021               	movlb	1	; select bank1
  9762  002A' 0082'              	movwf	(??___fttol^(0+128)+2)
  9763  002B' 3017               	movlw	23
  9764  002C'                    u3105:	
  9765  002C' 3682'              	lsrf	(??___fttol^(0+128)+2),f
  9766  002D' 0C81'              	rrf	(??___fttol^(0+128)+1),f
  9767  002E' 0C80'              	rrf	??___fttol^(0+128),f
  9768  002F' 0B89               	decfsz	9,f
  9769  0030' 2800'              	goto	u3105
  9770  0031' 0800'              	movf	??___fttol^(0+128),w
  9771  0032' 0080'              	movwf	(??___fttol+3)^(0+128)
  9772  0033' 0800'              	movf	(??___fttol+3)^(0+128),w
  9773  0034' 0080'              	movwf	___fttol@sign1^(0+128)
  9774  0035' 0020               	movlb	0	; select bank0
  9775  0036' 17CA'              	bsf	___fttol@f1+1,7
  9776  0037' 30FF               	movlw	255
  9777  0038' 05C9'              	andwf	___fttol@f1,f
  9778  0039' 30FF               	movlw	255
  9779  003A' 05CA'              	andwf	___fttol@f1+1,f
  9780  003B' 3000               	movlw	0
  9781  003C' 05CB'              	andwf	___fttol@f1+2,f
  9782  003D' 0849'              	movf	___fttol@f1,w
  9783  003E' 0021               	movlb	1	; select bank1
  9784  003F' 0080'              	movwf	___fttol@lval^(0+128)
  9785  0040' 0020               	movlb	0	; select bank0
  9786  0041' 084A'              	movf	___fttol@f1+1,w
  9787  0042' 0021               	movlb	1	; select bank1
  9788  0043' 0081'              	movwf	(___fttol@lval^(0+128)+1)
  9789  0044' 0020               	movlb	0	; select bank0
  9790  0045' 084B'              	movf	___fttol@f1+2,w
  9791  0046' 0021               	movlb	1	; select bank1
  9792  0047' 0082'              	movwf	(___fttol@lval^(0+128)+2)
  9793  0048' 0183'              	clrf	(___fttol@lval^(0+128)+3)
  9794  0049' 308E               	movlw	142
  9795  004A' 0280'              	subwf	___fttol@exp1^(0+128),f
  9796  004B' 1F80'              	btfss	___fttol@exp1^(0+128),7
  9797  004C' 2800'              	goto	l2785
  9798  004D' 0800'              	movf	___fttol@exp1^(0+128),w
  9799  004E' 3A80               	xorlw	128
  9800  004F' 3E8F               	addlw	143
  9801  0050' 1803               	skipnc
  9802  0051' 2800'              	goto	l2783
  9803  0052' 3000               	movlw	0
  9804  0053' 0020               	movlb	0	; select bank0
  9805  0054' 00CC'              	movwf	?___fttol+3
  9806  0055' 3000               	movlw	0
  9807  0056' 00CB'              	movwf	?___fttol+2
  9808  0057' 3000               	movlw	0
  9809  0058' 00CA'              	movwf	?___fttol+1
  9810  0059' 3000               	movlw	0
  9811  005A' 00C9'              	movwf	?___fttol
  9812  005B' 0008               	return
  9813  005C'                    l2783:	
  9814  005C' 3001               	movlw	1
  9815  005D'                    u3135:	
  9816  005D' 0021               	movlb	1	; select bank1
  9817  005E' 3680'              	lsrf	(___fttol@lval+3)^(0+128),f
  9818  005F' 0C80'              	rrf	(___fttol@lval+2)^(0+128),f
  9819  0060' 0C80'              	rrf	(___fttol@lval+1)^(0+128),f
  9820  0061' 0C80'              	rrf	___fttol@lval^(0+128),f
  9821  0062' 0B89               	decfsz	9,f
  9822  0063' 2800'              	goto	u3135
  9823  0064' 3001               	movlw	1
  9824  0065' 0080'              	movwf	??___fttol^(0+128)
  9825  0066' 0800'              	movf	??___fttol^(0+128),w
  9826  0067' 0780'              	addwf	___fttol@exp1^(0+128),f
  9827  0068' 1903               	btfsc	3,2
  9828  0069' 2800'              	goto	l2793
  9829  006A' 2800'              	goto	l2783
  9830  006B'                    l2785:	
  9831  006B' 3018               	movlw	24
  9832  006C' 0200'              	subwf	___fttol@exp1^(0+128),w
  9833  006D' 1C03               	skipc
  9834  006E' 2800'              	goto	l727
  9835  006F' 3000               	movlw	0
  9836  0070' 0020               	movlb	0	; select bank0
  9837  0071' 00CC'              	movwf	?___fttol+3
  9838  0072' 3000               	movlw	0
  9839  0073' 00CB'              	movwf	?___fttol+2
  9840  0074' 3000               	movlw	0
  9841  0075' 00CA'              	movwf	?___fttol+1
  9842  0076' 3000               	movlw	0
  9843  0077' 00C9'              	movwf	?___fttol
  9844  0078' 0008               	return
  9845  0079'                    l2791:	
  9846  0079' 3001               	movlw	1
  9847  007A'                    u3165:	
  9848  007A' 0021               	movlb	1	; select bank1
  9849  007B' 3580'              	lslf	___fttol@lval^(0+128),f
  9850  007C' 0D80'              	rlf	(___fttol@lval+1)^(0+128),f
  9851  007D' 0D80'              	rlf	(___fttol@lval+2)^(0+128),f
  9852  007E' 0D80'              	rlf	(___fttol@lval+3)^(0+128),f
  9853  007F' 0B89               	decfsz	9,f
  9854  0080' 2800'              	goto	u3165
  9855  0081' 3001               	movlw	1
  9856  0082' 0280'              	subwf	___fttol@exp1^(0+128),f
  9857  0083'                    l727:	
  9858  0083' 0021               	movlb	1	; select bank1
  9859  0084' 0800'              	movf	___fttol@exp1^(0+128),w
  9860  0085' 1D03               	btfss	3,2
  9861  0086' 2800'              	goto	l2791
  9862  0087'                    l2793:	
  9863  0087' 0800'              	movf	___fttol@sign1^(0+128),w
  9864  0088' 1903               	btfsc	3,2
  9865  0089' 2800'              	goto	l2797
  9866  008A' 0980'              	comf	___fttol@lval^(0+128),f
  9867  008B' 0980'              	comf	(___fttol@lval+1)^(0+128),f
  9868  008C' 0980'              	comf	(___fttol@lval+2)^(0+128),f
  9869  008D' 0980'              	comf	(___fttol@lval+3)^(0+128),f
  9870  008E' 0A80'              	incf	___fttol@lval^(0+128),f
  9871  008F' 1903               	skipnz
  9872  0090' 0A80'              	incf	(___fttol@lval+1)^(0+128),f
  9873  0091' 1903               	skipnz
  9874  0092' 0A80'              	incf	(___fttol@lval+2)^(0+128),f
  9875  0093' 1903               	skipnz
  9876  0094' 0A80'              	incf	(___fttol@lval+3)^(0+128),f
  9877  0095'                    l2797:	
  9878  0095' 0800'              	movf	(___fttol@lval+3)^(0+128),w
  9879  0096' 0020               	movlb	0	; select bank0
  9880  0097' 00CC'              	movwf	?___fttol+3
  9881  0098' 0021               	movlb	1	; select bank1
  9882  0099' 0800'              	movf	(___fttol@lval+2)^(0+128),w
  9883  009A' 0020               	movlb	0	; select bank0
  9884  009B' 00CB'              	movwf	?___fttol+2
  9885  009C' 0021               	movlb	1	; select bank1
  9886  009D' 0800'              	movf	(___fttol@lval+1)^(0+128),w
  9887  009E' 0020               	movlb	0	; select bank0
  9888  009F' 00CA'              	movwf	?___fttol+1
  9889  00A0' 0021               	movlb	1	; select bank1
  9890  00A1' 0800'              	movf	___fttol@lval^(0+128),w
  9891  00A2' 0020               	movlb	0	; select bank0
  9892  00A3' 00C9'              	movwf	?___fttol
  9893  00A4' 0008               	return
  9894  00A5'                    __end_of___fttol:	
  9895                           
  9896                           	psect	text16
  9897  0000'                    __ptext16:	
  9898 ;; *************** function _SYSTEM_Initialize *****************
  9899 ;; Defined at:
  9900 ;;		line 71 in file "system.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;		None
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;		None
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      void 
  9907 ;; Registers used:
  9908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9916 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;Total ram usage:        3 bytes
  9919 ;; Hardware stack levels used:    1
  9920 ;; Hardware stack levels required when called:    3
  9921 ;; This function calls:
  9922 ;;		_ADCC_Initialize
  9923 ;;		_InitCustomChars
  9924 ;;		_LCD_Clear
  9925 ;;		_LCD_Init
  9926 ;;		_OSCILLATOR_Initialize
  9927 ;;		_PIN_MANAGER_Initialize
  9928 ;;		_PWM_Initialize
  9929 ;;		_TMR2_Initialize
  9930 ;; This function is called by:
  9931 ;;		_main
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           
  9936                           ;psect for function _SYSTEM_Initialize
  9937  0000'                    _SYSTEM_Initialize:	
  9938                           
  9939                           ;system.c: 73: PIN_MANAGER_Initialize();
  9940                           
  9941                           ;incstack = 0
  9942                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9943  0000' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
  9944                           
  9945                           ;system.c: 74: OSCILLATOR_Initialize();
  9946  0003' 3180' 2000' 3180'  	fcall	_OSCILLATOR_Initialize
  9947                           
  9948                           ;system.c: 75: FVRCON = 0x00;
  9949  0006' 0032               	movlb	18	; select bank18
  9950  0007' 018C               	clrf	12	;volatile
  9951                           
  9952                           ;system.c: 76: ADCC_Initialize();
  9953  0008' 3180' 2000' 3180'  	fcall	_ADCC_Initialize
  9954                           
  9955                           ;system.c: 77: PWM_Initialize();
  9956  000B' 3180' 2000' 3180'  	fcall	_PWM_Initialize
  9957                           
  9958                           ;system.c: 79: TMR2_Initialize();
  9959  000E' 3180' 2000' 3180'  	fcall	_TMR2_Initialize
  9960                           
  9961                           ;system.c: 80: LCD_Init(0X00);
  9962  0011' 3000               	movlw	0
  9963  0012' 3180' 2000' 3180'  	fcall	_LCD_Init
  9964                           
  9965                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  9966  0015' 3009               	movlw	9
  9967  0016' 008A'              	movwf	??_SYSTEM_Initialize+2
  9968  0017' 301E               	movlw	30
  9969  0018' 0089'              	movwf	??_SYSTEM_Initialize+1
  9970  0019' 30EB               	movlw	235
  9971  001A' 0088'              	movwf	??_SYSTEM_Initialize
  9972  001B'                    u3387:	
  9973  001B' 0B88'              	decfsz	??_SYSTEM_Initialize,f
  9974  001C' 2800'              	goto	u3387
  9975  001D' 0B89'              	decfsz	??_SYSTEM_Initialize+1,f
  9976  001E' 2800'              	goto	u3387
  9977  001F' 0B8A'              	decfsz	??_SYSTEM_Initialize+2,f
  9978  0020' 2800'              	goto	u3387
  9979  0021' 0000               	nop
  9980                           
  9981                           ;system.c: 82: LCD_Clear();
  9982  0022' 3180' 2000' 3180'  	fcall	_LCD_Clear
  9983                           
  9984                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
  9985  0025' 3005               	movlw	5
  9986  0026' 008A'              	movwf	??_SYSTEM_Initialize+2
  9987  0027' 300F               	movlw	15
  9988  0028' 0089'              	movwf	??_SYSTEM_Initialize+1
  9989  0029' 30F4               	movlw	244
  9990  002A' 0088'              	movwf	??_SYSTEM_Initialize
  9991  002B'                    u3397:	
  9992  002B' 0B88'              	decfsz	??_SYSTEM_Initialize,f
  9993  002C' 2800'              	goto	u3397
  9994  002D' 0B89'              	decfsz	??_SYSTEM_Initialize+1,f
  9995  002E' 2800'              	goto	u3397
  9996  002F' 0B8A'              	decfsz	??_SYSTEM_Initialize+2,f
  9997  0030' 2800'              	goto	u3397
  9998                           
  9999                           ;system.c: 84: InitCustomChars();
 10000  0031' 3180' 2000' 3180'  	fcall	_InitCustomChars
 10001                           
 10002                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 10003  0034' 3009               	movlw	9
 10004  0035' 008A'              	movwf	??_SYSTEM_Initialize+2
 10005  0036' 301E               	movlw	30
 10006  0037' 0089'              	movwf	??_SYSTEM_Initialize+1
 10007  0038' 30EB               	movlw	235
 10008  0039' 0088'              	movwf	??_SYSTEM_Initialize
 10009  003A'                    u3407:	
 10010  003A' 0B88'              	decfsz	??_SYSTEM_Initialize,f
 10011  003B' 2800'              	goto	u3407
 10012  003C' 0B89'              	decfsz	??_SYSTEM_Initialize+1,f
 10013  003D' 2800'              	goto	u3407
 10014  003E' 0B8A'              	decfsz	??_SYSTEM_Initialize+2,f
 10015  003F' 2800'              	goto	u3407
 10016  0040' 0000               	nop
 10017  0041' 0008               	return
 10018  0042'                    __end_of_SYSTEM_Initialize:	
 10019                           
 10020                           	psect	text17
 10021  0000'                    __ptext17:	
 10022 ;; *************** function _TMR2_Initialize *****************
 10023 ;; Defined at:
 10024 ;;		line 3 in file "tmr2.c"
 10025 ;; Parameters:    Size  Location     Type
 10026 ;;		None
 10027 ;; Auto vars:     Size  Location     Type
 10028 ;;		None
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  1    wreg      void 
 10031 ;; Registers used:
 10032 ;;		wreg, status,2
 10033 ;; Tracked objects:
 10034 ;;		On entry : 0/0
 10035 ;;		On exit  : 0/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;Total ram usage:        0 bytes
 10043 ;; Hardware stack levels used:    1
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_SYSTEM_Initialize
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           
 10052                           ;psect for function _TMR2_Initialize
 10053  0000'                    _TMR2_Initialize:	
 10054                           
 10055                           ;tmr2.c: 5: T2CON = 0x00;
 10056                           
 10057                           ;incstack = 0
 10058                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10059  0000' 0025               	movlb	5	; select bank5
 10060  0001' 018E               	clrf	14	;volatile
 10061                           
 10062                           ;tmr2.c: 7: T2CLKCON = 0x01;
 10063  0002' 3001               	movlw	1
 10064  0003' 0090               	movwf	16	;volatile
 10065                           
 10066                           ;tmr2.c: 9: T2HLT = 0x00;
 10067  0004' 018F               	clrf	15	;volatile
 10068                           
 10069                           ;tmr2.c: 11: T2RST = 0x00;
 10070  0005' 0191               	clrf	17	;volatile
 10071                           
 10072                           ;tmr2.c: 13: T2PR = 0xFF;
 10073  0006' 30FF               	movlw	255
 10074  0007' 008D               	movwf	13	;volatile
 10075                           
 10076                           ;tmr2.c: 15: T2TMR = 0x00;
 10077  0008' 018C               	clrf	12	;volatile
 10078                           
 10079                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 10080  0009' 002E               	movlb	14	; select bank14
 10081  000A' 1090               	bcf	16,1	;volatile
 10082                           
 10083                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 10084  000B' 0025               	movlb	5	; select bank5
 10085  000C' 178E               	bsf	14,7	;volatile
 10086  000D' 0008               	return
 10087  000E'                    __end_of_TMR2_Initialize:	
 10088                           
 10089                           	psect	text18
 10090  0000'                    __ptext18:	
 10091 ;; *************** function _PWM_Initialize *****************
 10092 ;; Defined at:
 10093 ;;		line 3 in file "pwm.c"
 10094 ;; Parameters:    Size  Location     Type
 10095 ;;		None
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;		None
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  1    wreg      void 
 10100 ;; Registers used:
 10101 ;;		wreg, status,2, status,0
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10111 ;;Total ram usage:        0 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; This function calls:
 10114 ;;		Nothing
 10115 ;; This function is called by:
 10116 ;;		_SYSTEM_Initialize
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           
 10121                           ;psect for function _PWM_Initialize
 10122  0000'                    _PWM_Initialize:	
 10123                           
 10124                           ;pwm.c: 14: PWM7CON = 0x80;
 10125                           
 10126                           ;incstack = 0
 10127                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 10128  0000' 3080               	movlw	128
 10129  0001' 0027               	movlb	7	; select bank7
 10130  0002' 0092               	movwf	18	;volatile
 10131                           
 10132                           ;pwm.c: 16: PWM7DCH = 0x00;
 10133  0003' 0191               	clrf	17	;volatile
 10134                           
 10135                           ;pwm.c: 18: PWM7DCL = 0x00;
 10136  0004' 0190               	clrf	16	;volatile
 10137                           
 10138                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
 10139  0005' 0024               	movlb	4	; select bank4
 10140  0006' 081F               	movf	31,w	;volatile
 10141  0007' 39F3               	andlw	-13
 10142  0008' 3804               	iorlw	4
 10143  0009' 009F               	movwf	31	;volatile
 10144  000A' 0008               	return
 10145  000B'                    __end_of_PWM_Initialize:	
 10146                           
 10147                           	psect	text19
 10148  0000'                    __ptext19:	
 10149 ;; *************** function _PIN_MANAGER_Initialize *****************
 10150 ;; Defined at:
 10151 ;;		line 5 in file "pin_manager.c"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;		None
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;  state           1    0[COMMON] unsigned char 
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      void 
 10158 ;; Registers used:
 10159 ;;		wreg, status,2
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10169 ;;Total ram usage:        1 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; This function calls:
 10172 ;;		Nothing
 10173 ;; This function is called by:
 10174 ;;		_SYSTEM_Initialize
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           
 10179                           ;psect for function _PIN_MANAGER_Initialize
 10180  0000'                    _PIN_MANAGER_Initialize:	
 10181                           
 10182                           ;pin_manager.c: 7: LATA = 0x00;
 10183                           
 10184                           ;incstack = 0
 10185                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10186  0000' 0020               	movlb	0	; select bank0
 10187  0001' 0196               	clrf	22	;volatile
 10188                           
 10189                           ;pin_manager.c: 8: LATB = 0x00;
 10190  0002' 0197               	clrf	23	;volatile
 10191                           
 10192                           ;pin_manager.c: 9: LATC = 0x00;
 10193  0003' 0198               	clrf	24	;volatile
 10194                           
 10195                           ;pin_manager.c: 11: WPUA = 0x00;
 10196  0004' 003E               	movlb	30	; select bank30
 10197  0005' 01B9               	clrf	57	;volatile
 10198                           
 10199                           ;pin_manager.c: 12: WPUB = 0x00;
 10200  0006' 01C4               	clrf	68	;volatile
 10201                           
 10202                           ;pin_manager.c: 13: WPUC = 0x00;
 10203  0007' 01CF               	clrf	79	;volatile
 10204                           
 10205                           ;pin_manager.c: 14: WPUE = 0x8;
 10206  0008' 3008               	movlw	8
 10207  0009' 00E5               	movwf	101	;volatile
 10208                           
 10209                           ;pin_manager.c: 16: TRISA = 0x0A;
 10210  000A' 300A               	movlw	10
 10211  000B' 0020               	movlb	0	; select bank0
 10212  000C' 0091               	movwf	17	;volatile
 10213                           
 10214                           ;pin_manager.c: 17: TRISB = 0x07;
 10215  000D' 3007               	movlw	7
 10216  000E' 0092               	movwf	18	;volatile
 10217                           
 10218                           ;pin_manager.c: 18: TRISC = 0x00;
 10219  000F' 0193               	clrf	19	;volatile
 10220                           
 10221                           ;pin_manager.c: 20: ANSELA = 0x0A;
 10222  0010' 300A               	movlw	10
 10223  0011' 003E               	movlb	30	; select bank30
 10224  0012' 00B8               	movwf	56	;volatile
 10225                           
 10226                           ;pin_manager.c: 21: ANSELB = 0x00;
 10227  0013' 01C3               	clrf	67	;volatile
 10228                           
 10229                           ;pin_manager.c: 22: ANSELC = 0x00;
 10230  0014' 01CE               	clrf	78	;volatile
 10231                           
 10232                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 10233  0015' 002E               	movlb	14	; select bank14
 10234  0016' 1216               	bcf	22,4	;volatile
 10235                           
 10236                           ;pin_manager.c: 25: bool state = GIE;
 10237  0017' 3000               	movlw	0
 10238  0018' 1B8B               	btfsc	11,7	;volatile
 10239  0019' 3001               	movlw	1
 10240  001A' 0080'              	movwf	PIN_MANAGER_Initialize@state
 10241                           
 10242                           ;pin_manager.c: 26: GIE = 0;
 10243  001B' 138B               	bcf	11,7	;volatile
 10244                           
 10245                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 10246  001C' 3055               	movlw	85
 10247  001D' 003D               	movlb	29	; select bank29
 10248  001E' 008F               	movwf	15	;volatile
 10249                           
 10250                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 10251  001F' 30AA               	movlw	170
 10252  0020' 008F               	movwf	15	;volatile
 10253                           
 10254                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 10255  0021' 100F               	bcf	15,0	;volatile
 10256                           
 10257                           ;pin_manager.c: 33: RC3PPS = 0X0F;
 10258  0022' 300F               	movlw	15
 10259  0023' 003E               	movlb	30	; select bank30
 10260  0024' 00A3               	movwf	35	;volatile
 10261                           
 10262                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 10263  0025' 3055               	movlw	85
 10264  0026' 003D               	movlb	29	; select bank29
 10265  0027' 008F               	movwf	15	;volatile
 10266                           
 10267                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 10268  0028' 30AA               	movlw	170
 10269  0029' 008F               	movwf	15	;volatile
 10270                           
 10271                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 10272  002A' 140F               	bsf	15,0	;volatile
 10273                           
 10274                           ;pin_manager.c: 40: GIE = state;
 10275  002B' 1C00'              	btfss	PIN_MANAGER_Initialize@state,0
 10276  002C' 2800'              	goto	u2330
 10277  002D' 178B               	bsf	11,7	;volatile
 10278  002E' 0008               	return
 10279  002F'                    u2330:	
 10280  002F' 138B               	bcf	11,7	;volatile
 10281  0030' 0008               	return
 10282  0031'                    __end_of_PIN_MANAGER_Initialize:	
 10283                           
 10284                           	psect	text20
 10285  0000'                    __ptext20:	
 10286 ;; *************** function _OSCILLATOR_Initialize *****************
 10287 ;; Defined at:
 10288 ;;		line 89 in file "system.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;		None
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;		None
 10293 ;; Return value:  Size  Location     Type
 10294 ;;                  1    wreg      void 
 10295 ;; Registers used:
 10296 ;;		wreg, status,2
 10297 ;; Tracked objects:
 10298 ;;		On entry : 0/0
 10299 ;;		On exit  : 0/0
 10300 ;;		Unchanged: 0/0
 10301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10306 ;;Total ram usage:        0 bytes
 10307 ;; Hardware stack levels used:    1
 10308 ;; This function calls:
 10309 ;;		Nothing
 10310 ;; This function is called by:
 10311 ;;		_SYSTEM_Initialize
 10312 ;; This function uses a non-reentrant model
 10313 ;;
 10314                           
 10315                           
 10316                           ;psect for function _OSCILLATOR_Initialize
 10317  0000'                    _OSCILLATOR_Initialize:	
 10318                           
 10319                           ;system.c: 91: OSCCON1 = 0x60;
 10320                           
 10321                           ;incstack = 0
 10322                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10323  0000' 3060               	movlw	96
 10324  0001' 0031               	movlb	17	; select bank17
 10325  0002' 008D               	movwf	13	;volatile
 10326                           
 10327                           ;system.c: 92: OSCCON3 = 0x00;
 10328  0003' 018F               	clrf	15	;volatile
 10329                           
 10330                           ;system.c: 93: OSCEN = 0x00;
 10331  0004' 0191               	clrf	17	;volatile
 10332                           
 10333                           ;system.c: 94: OSCFRQ = 0x06;
 10334  0005' 3006               	movlw	6
 10335  0006' 0093               	movwf	19	;volatile
 10336                           
 10337                           ;system.c: 95: OSCTUNE = 0x00;
 10338  0007' 0192               	clrf	18	;volatile
 10339  0008' 0008               	return
 10340  0009'                    __end_of_OSCILLATOR_Initialize:	
 10341                           
 10342                           	psect	text21
 10343  0000'                    __ptext21:	
 10344 ;; *************** function _LCD_Init *****************
 10345 ;; Defined at:
 10346 ;;		line 154 in file "lcd.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  style           1    wreg     unsigned char 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  style           1    7[COMMON] unsigned char 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg, status,2, status,0, pclath, cstack
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10363 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;Total ram usage:        4 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; Hardware stack levels required when called:    2
 10367 ;; This function calls:
 10368 ;;		_LCD_Cmd
 10369 ;;		_LCD_Port
 10370 ;; This function is called by:
 10371 ;;		_SYSTEM_Initialize
 10372 ;; This function uses a non-reentrant model
 10373 ;;
 10374                           
 10375                           
 10376                           ;psect for function _LCD_Init
 10377  0000'                    _LCD_Init:	
 10378                           
 10379                           ;incstack = 0
 10380                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10381                           ;LCD_Init@style stored from wreg
 10382  0000' 0087'              	movwf	LCD_Init@style
 10383                           
 10384                           ;lcd.c: 156: LCD_Port(0x00);
 10385  0001' 3000               	movlw	0
 10386  0002' 3180' 2000' 3180'  	fcall	_LCD_Port
 10387                           
 10388                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 10389  0005' 3005               	movlw	5
 10390  0006' 0086'              	movwf	??_LCD_Init+2
 10391  0007' 300F               	movlw	15
 10392  0008' 0085'              	movwf	??_LCD_Init+1
 10393  0009' 30F4               	movlw	244
 10394  000A' 0084'              	movwf	??_LCD_Init
 10395  000B'                    u3417:	
 10396  000B' 0B84'              	decfsz	??_LCD_Init,f
 10397  000C' 2800'              	goto	u3417
 10398  000D' 0B85'              	decfsz	??_LCD_Init+1,f
 10399  000E' 2800'              	goto	u3417
 10400  000F' 0B86'              	decfsz	??_LCD_Init+2,f
 10401  0010' 2800'              	goto	u3417
 10402                           
 10403                           ;lcd.c: 160: LCD_Cmd(0x03);
 10404  0011' 3003               	movlw	3
 10405  0012' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10406                           
 10407                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 10408  0015' 3068               	movlw	104
 10409  0016' 0085'              	movwf	??_LCD_Init+1
 10410  0017' 30E4               	movlw	228
 10411  0018' 0084'              	movwf	??_LCD_Init
 10412  0019'                    u3427:	
 10413  0019' 0B84'              	decfsz	??_LCD_Init,f
 10414  001A' 2800'              	goto	u3427
 10415  001B' 0B85'              	decfsz	??_LCD_Init+1,f
 10416  001C' 2800'              	goto	u3427
 10417  001D' 0000               	nop
 10418                           
 10419                           ;lcd.c: 164: LCD_Cmd(0x03);
 10420  001E' 3003               	movlw	3
 10421  001F' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10422                           
 10423                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10424  0022' 3089               	movlw	137
 10425  0023' 0084'              	movwf	??_LCD_Init
 10426  0024'                    u3437:	
 10427  0024' 3200               	nop2
 10428  0025' 3200               	nop2
 10429  0026' 0B84'              	decfsz	??_LCD_Init,f
 10430  0027' 2800'              	goto	u3437
 10431                           
 10432                           ;lcd.c: 168: LCD_Cmd(0x03);
 10433  0028' 3003               	movlw	3
 10434  0029' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10435                           
 10436                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10437  002C' 3089               	movlw	137
 10438  002D' 0084'              	movwf	??_LCD_Init
 10439  002E'                    u3447:	
 10440  002E' 3200               	nop2
 10441  002F' 3200               	nop2
 10442  0030' 0B84'              	decfsz	??_LCD_Init,f
 10443  0031' 2800'              	goto	u3447
 10444                           
 10445                           ;lcd.c: 172: LCD_Cmd(0x02);
 10446  0032' 3002               	movlw	2
 10447  0033' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10448                           
 10449                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10450  0036' 3089               	movlw	137
 10451  0037' 0084'              	movwf	??_LCD_Init
 10452  0038'                    u3457:	
 10453  0038' 3200               	nop2
 10454  0039' 3200               	nop2
 10455  003A' 0B84'              	decfsz	??_LCD_Init,f
 10456  003B' 2800'              	goto	u3457
 10457                           
 10458                           ;lcd.c: 176: LCD_Cmd(0x2);
 10459  003C' 3002               	movlw	2
 10460  003D' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10461                           
 10462                           ;lcd.c: 178: LCD_Cmd(0x8);
 10463  0040' 3008               	movlw	8
 10464  0041' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10465                           
 10466                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10467  0044' 3089               	movlw	137
 10468  0045' 0084'              	movwf	??_LCD_Init
 10469  0046'                    u3467:	
 10470  0046' 3200               	nop2
 10471  0047' 3200               	nop2
 10472  0048' 0B84'              	decfsz	??_LCD_Init,f
 10473  0049' 2800'              	goto	u3467
 10474                           
 10475                           ;lcd.c: 182: LCD_Cmd(0x0);
 10476  004A' 3000               	movlw	0
 10477  004B' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10478                           
 10479                           ;lcd.c: 184: LCD_Cmd(0x8);
 10480  004E' 3008               	movlw	8
 10481  004F' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10482                           
 10483                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10484  0052' 3089               	movlw	137
 10485  0053' 0084'              	movwf	??_LCD_Init
 10486  0054'                    u3477:	
 10487  0054' 3200               	nop2
 10488  0055' 3200               	nop2
 10489  0056' 0B84'              	decfsz	??_LCD_Init,f
 10490  0057' 2800'              	goto	u3477
 10491                           
 10492                           ;lcd.c: 188: LCD_Cmd(0x0);
 10493  0058' 3000               	movlw	0
 10494  0059' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10495                           
 10496                           ;lcd.c: 190: LCD_Cmd(0x1);
 10497  005C' 3001               	movlw	1
 10498  005D' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10499                           
 10500                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 10501  0060' 3034               	movlw	52
 10502  0061' 0085'              	movwf	??_LCD_Init+1
 10503  0062' 30F1               	movlw	241
 10504  0063' 0084'              	movwf	??_LCD_Init
 10505  0064'                    u3487:	
 10506  0064' 0B84'              	decfsz	??_LCD_Init,f
 10507  0065' 2800'              	goto	u3487
 10508  0066' 0B85'              	decfsz	??_LCD_Init+1,f
 10509  0067' 2800'              	goto	u3487
 10510  0068' 3200               	nop2
 10511                           
 10512                           ;lcd.c: 194: LCD_Cmd(0x0);
 10513  0069' 3000               	movlw	0
 10514  006A' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10515                           
 10516                           ;lcd.c: 196: LCD_Cmd(0x6);
 10517  006D' 3006               	movlw	6
 10518  006E' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10519                           
 10520                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10521  0071' 3089               	movlw	137
 10522  0072' 0084'              	movwf	??_LCD_Init
 10523  0073'                    u3497:	
 10524  0073' 3200               	nop2
 10525  0074' 3200               	nop2
 10526  0075' 0B84'              	decfsz	??_LCD_Init,f
 10527  0076' 2800'              	goto	u3497
 10528                           
 10529                           ;lcd.c: 200: LCD_Cmd(0x0);
 10530  0077' 3000               	movlw	0
 10531  0078' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10532                           
 10533                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10534  007B' 0807'              	movf	LCD_Init@style,w
 10535  007C' 380C               	iorlw	12
 10536  007D' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10537                           
 10538                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10539  0080' 3089               	movlw	137
 10540  0081' 0084'              	movwf	??_LCD_Init
 10541  0082'                    u3507:	
 10542  0082' 3200               	nop2
 10543  0083' 3200               	nop2
 10544  0084' 0B84'              	decfsz	??_LCD_Init,f
 10545  0085' 2800'              	goto	u3507
 10546  0086' 0008               	return
 10547  0087'                    __end_of_LCD_Init:	
 10548                           
 10549                           	psect	text22
 10550  0000'                    __ptext22:	
 10551 ;; *************** function _LCD_Clear *****************
 10552 ;; Defined at:
 10553 ;;		line 75 in file "lcd.c"
 10554 ;; Parameters:    Size  Location     Type
 10555 ;;		None
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;		None
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  1    wreg      void 
 10560 ;; Registers used:
 10561 ;;		wreg, status,2, status,0, pclath, cstack
 10562 ;; Tracked objects:
 10563 ;;		On entry : 0/0
 10564 ;;		On exit  : 0/0
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10571 ;;Total ram usage:        0 bytes
 10572 ;; Hardware stack levels used:    1
 10573 ;; Hardware stack levels required when called:    2
 10574 ;; This function calls:
 10575 ;;		_LCD_Cmd
 10576 ;; This function is called by:
 10577 ;;		_SYSTEM_Initialize
 10578 ;;		_main
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           
 10583                           ;psect for function _LCD_Clear
 10584  0000'                    _LCD_Clear:	
 10585                           
 10586                           ;lcd.c: 77: LCD_Cmd(0);
 10587                           
 10588                           ;incstack = 0
 10589                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10590  0000' 3000               	movlw	0
 10591  0001' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10592                           
 10593                           ;lcd.c: 78: LCD_Cmd(1);
 10594  0004' 3001               	movlw	1
 10595  0005' 3180' 2000'        	fcall	_LCD_Cmd
 10596  0007' 0008               	return
 10597  0008'                    __end_of_LCD_Clear:	
 10598                           
 10599                           	psect	text23
 10600  0000'                    __ptext23:	
 10601 ;; *************** function _InitCustomChars *****************
 10602 ;; Defined at:
 10603 ;;		line 29 in file "lcd.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;		None
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;  i               1    6[COMMON] unsigned char 
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  1    wreg      void 
 10610 ;; Registers used:
 10611 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/0
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;Total ram usage:        2 bytes
 10622 ;; Hardware stack levels used:    1
 10623 ;; Hardware stack levels required when called:    2
 10624 ;; This function calls:
 10625 ;;		_LCD_Cmd
 10626 ;;		_LCD_Write_Char
 10627 ;; This function is called by:
 10628 ;;		_SYSTEM_Initialize
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           
 10633                           ;psect for function _InitCustomChars
 10634  0000'                    _InitCustomChars:	
 10635                           
 10636                           ;lcd.c: 31: uint8_t i;
 10637                           ;lcd.c: 32: LCD_Cmd(0x04);
 10638                           
 10639                           ;incstack = 0
 10640                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10641  0000' 3004               	movlw	4
 10642  0001' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10643                           
 10644                           ;lcd.c: 33: LCD_Cmd(0x00);
 10645  0004' 3000               	movlw	0
 10646  0005' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10647                           
 10648                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10649  0008' 0186'              	clrf	InitCustomChars@i
 10650  0009' 3010               	movlw	16
 10651  000A' 0206'              	subwf	InitCustomChars@i,w
 10652  000B' 1803               	btfsc	3,0
 10653  000C' 2800'              	goto	l2235
 10654  000D'                    l2229:	
 10655                           
 10656                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10657  000D' 0806'              	movf	InitCustomChars@i,w
 10658  000E' 3E00'              	addlw	(low (___cgram| (0+256)))& (0+255)
 10659  000F' 0086               	movwf	6
 10660  0010' 3001               	movlw	1	; select bank3/4
 10661  0011' 0087               	movwf	7
 10662  0012' 0801               	movf	1,w
 10663  0013' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
 10664  0016' 3001               	movlw	1
 10665  0017' 0085'              	movwf	??_InitCustomChars
 10666  0018' 0805'              	movf	??_InitCustomChars,w
 10667  0019' 0786'              	addwf	InitCustomChars@i,f
 10668  001A' 3010               	movlw	16
 10669  001B' 0206'              	subwf	InitCustomChars@i,w
 10670  001C' 1C03               	skipc
 10671  001D' 2800'              	goto	l2229
 10672  001E'                    l2235:	
 10673                           
 10674                           ;lcd.c: 36: LCD_Cmd(0);
 10675  001E' 3000               	movlw	0
 10676  001F' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 10677                           
 10678                           ;lcd.c: 37: LCD_Cmd(2);
 10679  0022' 3002               	movlw	2
 10680  0023' 3180' 2000'        	fcall	_LCD_Cmd
 10681  0025' 0008               	return
 10682  0026'                    __end_of_InitCustomChars:	
 10683                           
 10684                           	psect	text24
 10685  0000'                    __ptext24:	
 10686 ;; *************** function _ADCC_Initialize *****************
 10687 ;; Defined at:
 10688 ;;		line 60 in file "adc.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;		None
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;		None
 10693 ;; Return value:  Size  Location     Type
 10694 ;;                  1    wreg      void 
 10695 ;; Registers used:
 10696 ;;		wreg, status,2
 10697 ;; Tracked objects:
 10698 ;;		On entry : 0/0
 10699 ;;		On exit  : 0/0
 10700 ;;		Unchanged: 0/0
 10701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;Total ram usage:        0 bytes
 10707 ;; Hardware stack levels used:    1
 10708 ;; This function calls:
 10709 ;;		Nothing
 10710 ;; This function is called by:
 10711 ;;		_SYSTEM_Initialize
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           
 10716                           ;psect for function _ADCC_Initialize
 10717  0000'                    _ADCC_Initialize:	
 10718                           
 10719                           ;adc.c: 62: ADCON1 = 0x00;
 10720                           
 10721                           ;incstack = 0
 10722                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10723  0000' 0021               	movlb	1	; select bank1
 10724  0001' 0194               	clrf	20	;volatile
 10725                           
 10726                           ;adc.c: 64: ADCON2 = 0x00;
 10727  0002' 0195               	clrf	21	;volatile
 10728                           
 10729                           ;adc.c: 66: ADCON3 = 0x00;
 10730  0003' 0196               	clrf	22	;volatile
 10731                           
 10732                           ;adc.c: 68: ADACT = 0x00;
 10733  0004' 0199               	clrf	25	;volatile
 10734                           
 10735                           ;adc.c: 70: ADSTAT = 0x00;
 10736  0005' 0197               	clrf	23	;volatile
 10737                           
 10738                           ;adc.c: 73: ADCLK = 0x3F;
 10739  0006' 303F               	movlw	63
 10740  0007' 0098               	movwf	24	;volatile
 10741                           
 10742                           ;adc.c: 81: ADREF = 0x00;
 10743  0008' 019A               	clrf	26	;volatile
 10744                           
 10745                           ;adc.c: 83: ADCAP = 0x00;
 10746  0009' 019B               	clrf	27	;volatile
 10747                           
 10748                           ;adc.c: 86: ADPRE = 0x07;
 10749  000A' 3007               	movlw	7
 10750  000B' 009C               	movwf	28	;volatile
 10751                           
 10752                           ;adc.c: 88: ADACQ = 0x00;
 10753  000C' 019D               	clrf	29	;volatile
 10754                           
 10755                           ;adc.c: 90: ADPCH = 0x00;
 10756  000D' 019E               	clrf	30	;volatile
 10757                           
 10758                           ;adc.c: 92: ADRPT = 0x00;
 10759  000E' 0022               	movlb	2	; select bank2
 10760  000F' 018D               	clrf	13	;volatile
 10761                           
 10762                           ;adc.c: 94: ADLTHL = 0x00;
 10763  0010' 018E               	clrf	14	;volatile
 10764                           
 10765                           ;adc.c: 96: ADLTHH = 0x00;
 10766  0011' 018F               	clrf	15	;volatile
 10767                           
 10768                           ;adc.c: 98: ADUTHL = 0x00;
 10769  0012' 0190               	clrf	16	;volatile
 10770                           
 10771                           ;adc.c: 100: ADUTHH = 0x00;
 10772  0013' 0191               	clrf	17	;volatile
 10773                           
 10774                           ;adc.c: 102: ADSTPTL = 0x00;
 10775  0014' 0192               	clrf	18	;volatile
 10776                           
 10777                           ;adc.c: 104: ADSTPTH = 0x00;
 10778  0015' 0193               	clrf	19	;volatile
 10779                           
 10780                           ;adc.c: 106: ADCON0 = 0x84;
 10781  0016' 3084               	movlw	132
 10782  0017' 0021               	movlb	1	; select bank1
 10783  0018' 0093               	movwf	19	;volatile
 10784  0019' 0008               	return
 10785  001A'                    __end_of_ADCC_Initialize:	
 10786                           
 10787                           	psect	text25
 10788  0000'                    __ptext25:	
 10789 ;; *************** function _PWM7_LoadDutyValue *****************
 10790 ;; Defined at:
 10791 ;;		line 32 in file "pwm.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;		None
 10796 ;; Return value:  Size  Location     Type
 10797 ;;                  1    wreg      void 
 10798 ;; Registers used:
 10799 ;;		wreg, status,2, status,0
 10800 ;; Tracked objects:
 10801 ;;		On entry : 0/0
 10802 ;;		On exit  : 0/0
 10803 ;;		Unchanged: 0/0
 10804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;Total ram usage:        4 bytes
 10810 ;; Hardware stack levels used:    1
 10811 ;; This function calls:
 10812 ;;		Nothing
 10813 ;; This function is called by:
 10814 ;;		_main
 10815 ;; This function uses a non-reentrant model
 10816 ;;
 10817                           
 10818                           
 10819                           ;psect for function _PWM7_LoadDutyValue
 10820  0000'                    _PWM7_LoadDutyValue:	
 10821                           
 10822                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10823                           
 10824                           ;incstack = 0
 10825                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10826  0000' 0801'              	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10827  0001' 0083'              	movwf	??_PWM7_LoadDutyValue+1
 10828  0002' 0800'              	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10829  0003' 0082'              	movwf	??_PWM7_LoadDutyValue
 10830  0004' 3683'              	lsrf	??_PWM7_LoadDutyValue+1,f
 10831  0005' 0C82'              	rrf	??_PWM7_LoadDutyValue,f
 10832  0006' 3683'              	lsrf	??_PWM7_LoadDutyValue+1,f
 10833  0007' 0C82'              	rrf	??_PWM7_LoadDutyValue,f
 10834  0008' 0802'              	movf	??_PWM7_LoadDutyValue,w
 10835  0009' 0027               	movlb	7	; select bank7
 10836  000A' 0091               	movwf	17	;volatile
 10837                           
 10838                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10839  000B' 0800'              	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10840  000C' 3903               	andlw	3
 10841  000D' 0082'              	movwf	??_PWM7_LoadDutyValue
 10842  000E' 3005               	movlw	5
 10843  000F'                    u2905:	
 10844  000F' 3582'              	lslf	??_PWM7_LoadDutyValue,f
 10845  0010' 3EFF               	addlw	-1
 10846  0011' 1D03               	skipz
 10847  0012' 2800'              	goto	u2905
 10848  0013' 3502'              	lslf	??_PWM7_LoadDutyValue,w
 10849  0014' 0090               	movwf	16	;volatile
 10850  0015' 0008               	return
 10851  0016'                    __end_of_PWM7_LoadDutyValue:	
 10852                           
 10853                           	psect	text26
 10854  0000'                    __ptext26:	
 10855 ;; *************** function _PID_Calculate *****************
 10856 ;; Defined at:
 10857 ;;		line 21 in file "pid.c"
 10858 ;; Parameters:    Size  Location     Type
 10859 ;;  setpoint        2    6[COMMON] int 
 10860 ;;  temp            2    8[COMMON] int 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;		None
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  2    6[COMMON] int 
 10865 ;; Registers used:
 10866 ;;		wreg, status,2, status,0, pclath, cstack
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10875 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10876 ;;Total ram usage:        6 bytes
 10877 ;; Hardware stack levels used:    1
 10878 ;; Hardware stack levels required when called:    1
 10879 ;; This function calls:
 10880 ;;		___wmul
 10881 ;; This function is called by:
 10882 ;;		_main
 10883 ;; This function uses a non-reentrant model
 10884 ;;
 10885                           
 10886                           
 10887                           ;psect for function _PID_Calculate
 10888  0000'                    _PID_Calculate:	
 10889                           
 10890                           ;pid.c: 23: pidCount+=1;
 10891                           
 10892                           ;incstack = 0
 10893                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 10894  0000' 3001               	movlw	1
 10895  0001' 0021               	movlb	1	; select bank1
 10896  0002' 0780'              	addwf	_pidCount^(0+128),f
 10897  0003' 3000               	movlw	0
 10898  0004' 3D80'              	addwfc	(_pidCount+1)^(0+128),f
 10899                           
 10900                           ;pid.c: 26: error = setpoint - temp;
 10901  0005' 0908'              	comf	PID_Calculate@temp,w
 10902  0006' 008A'              	movwf	??_PID_Calculate
 10903  0007' 0909'              	comf	PID_Calculate@temp+1,w
 10904  0008' 008B'              	movwf	??_PID_Calculate+1
 10905  0009' 0A8A'              	incf	??_PID_Calculate,f
 10906  000A' 1903               	skipnz
 10907  000B' 0A8B'              	incf	??_PID_Calculate+1,f
 10908  000C' 0806'              	movf	PID_Calculate@setpoint,w
 10909  000D' 070A'              	addwf	??_PID_Calculate,w
 10910  000E' 0080'              	movwf	_error^(0+128)
 10911  000F' 0807'              	movf	PID_Calculate@setpoint+1,w
 10912  0010' 3D0B'              	addwfc	??_PID_Calculate+1,w
 10913  0011' 0080'              	movwf	(_error+1)^(0+128)
 10914                           
 10915                           ;pid.c: 28: errorValue = error * Kp;
 10916  0012' 0800'              	movf	(_error+1)^(0+128),w
 10917  0013' 0081'              	movwf	___wmul@multiplier+1
 10918  0014' 0800'              	movf	_error^(0+128),w
 10919  0015' 0080'              	movwf	___wmul@multiplier
 10920  0016' 0800'              	movf	(_Kp+1)^(0+128),w
 10921  0017' 0083'              	movwf	___wmul@multiplicand+1
 10922  0018' 0800'              	movf	_Kp^(0+128),w
 10923  0019' 0082'              	movwf	___wmul@multiplicand
 10924  001A' 3180' 2000' 3180'  	fcall	___wmul
 10925  001D' 0801'              	movf	?___wmul+1,w
 10926  001E' 0021               	movlb	1	; select bank1
 10927  001F' 0080'              	movwf	(_errorValue+1)^(0+128)
 10928  0020' 0800'              	movf	?___wmul,w
 10929  0021' 0080'              	movwf	_errorValue^(0+128)
 10930                           
 10931                           ;pid.c: 31: if(error>0)signPositive=1;
 10932  0022' 0800'              	movf	(_error+1)^(0+128),w
 10933  0023' 3A80               	xorlw	128
 10934  0024' 008A'              	movwf	??_PID_Calculate
 10935  0025' 3080               	movlw	128
 10936  0026' 020A'              	subwf	??_PID_Calculate,w
 10937  0027' 1D03               	skipz
 10938  0028' 2800'              	goto	u2915
 10939  0029' 3001               	movlw	1
 10940  002A' 0200'              	subwf	_error^(0+128),w
 10941  002B'                    u2915:	
 10942  002B' 1C03               	skipc
 10943  002C' 2800'              	goto	l2689
 10944  002D' 3001               	movlw	1
 10945  002E' 0021               	movlb	1	; select bank1
 10946  002F' 0080'              	movwf	_signPositive^(0+128)
 10947  0030' 3000               	movlw	0
 10948  0031' 0081'              	movwf	(_signPositive^(0+128)+1)
 10949  0032' 2800'              	goto	l2691
 10950  0033'                    l2689:	
 10951                           
 10952                           ;pid.c: 33: else signPositive=0;
 10953  0033' 0021               	movlb	1	; select bank1
 10954  0034' 0180'              	clrf	_signPositive^(0+128)
 10955  0035' 0180'              	clrf	(_signPositive+1)^(0+128)
 10956  0036'                    l2691:	
 10957                           
 10958                           ;pid.c: 35: if(signPositive!=lastSign)pidIntegrated=0;
 10959  0036' 0800'              	movf	(_lastSign+1)^(0+128),w
 10960  0037' 0600'              	xorwf	(_signPositive+1)^(0+128),w
 10961  0038' 1D03               	skipz
 10962  0039' 2800'              	goto	u2925
 10963  003A' 0800'              	movf	_lastSign^(0+128),w
 10964  003B' 0600'              	xorwf	_signPositive^(0+128),w
 10965  003C'                    u2925:	
 10966  003C' 1903               	skipnz
 10967  003D' 2800'              	goto	l2695
 10968  003E' 0180'              	clrf	_pidIntegrated^(0+128)
 10969  003F' 0180'              	clrf	(_pidIntegrated+1)^(0+128)
 10970  0040'                    l2695:	
 10971                           
 10972                           ;pid.c: 37: lastSign=signPositive;
 10973  0040' 0800'              	movf	(_signPositive+1)^(0+128),w
 10974  0041' 0080'              	movwf	(_lastSign+1)^(0+128)
 10975  0042' 0800'              	movf	_signPositive^(0+128),w
 10976  0043' 0080'              	movwf	_lastSign^(0+128)
 10977                           
 10978                           ;pid.c: 41: derivativeValue=(error-pidPrevError)*Kd;
 10979  0044' 0900'              	comf	_pidPrevError^(0+128),w
 10980  0045' 008A'              	movwf	??_PID_Calculate
 10981  0046' 0900'              	comf	(_pidPrevError+1)^(0+128),w
 10982  0047' 008B'              	movwf	??_PID_Calculate+1
 10983  0048' 0A8A'              	incf	??_PID_Calculate,f
 10984  0049' 1903               	skipnz
 10985  004A' 0A8B'              	incf	??_PID_Calculate+1,f
 10986  004B' 0800'              	movf	_error^(0+128),w
 10987  004C' 070A'              	addwf	??_PID_Calculate,w
 10988  004D' 0080'              	movwf	___wmul@multiplier
 10989  004E' 0800'              	movf	(_error+1)^(0+128),w
 10990  004F' 3D0B'              	addwfc	??_PID_Calculate+1,w
 10991  0050' 0081'              	movwf	___wmul@multiplier+1
 10992  0051' 0800'              	movf	(_Kd+1)^(0+128),w
 10993  0052' 0083'              	movwf	___wmul@multiplicand+1
 10994  0053' 0800'              	movf	_Kd^(0+128),w
 10995  0054' 0082'              	movwf	___wmul@multiplicand
 10996  0055' 3180' 2000' 3180'  	fcall	___wmul
 10997  0058' 0801'              	movf	?___wmul+1,w
 10998  0059' 0021               	movlb	1	; select bank1
 10999  005A' 0080'              	movwf	(_derivativeValue+1)^(0+128)
 11000  005B' 0800'              	movf	?___wmul,w
 11001  005C' 0080'              	movwf	_derivativeValue^(0+128)
 11002                           
 11003                           ;pid.c: 42: pidPrevError = error;
 11004  005D' 0800'              	movf	(_error+1)^(0+128),w
 11005  005E' 0080'              	movwf	(_pidPrevError+1)^(0+128)
 11006  005F' 0800'              	movf	_error^(0+128),w
 11007  0060' 0080'              	movwf	_pidPrevError^(0+128)
 11008                           
 11009                           ;pid.c: 45: if(pidCount>20)
 11010  0061' 0800'              	movf	(_pidCount+1)^(0+128),w
 11011  0062' 3A80               	xorlw	128
 11012  0063' 008A'              	movwf	??_PID_Calculate
 11013  0064' 3080               	movlw	128
 11014  0065' 020A'              	subwf	??_PID_Calculate,w
 11015  0066' 1D03               	skipz
 11016  0067' 2800'              	goto	u2935
 11017  0068' 3015               	movlw	21
 11018  0069' 0200'              	subwf	_pidCount^(0+128),w
 11019  006A'                    u2935:	
 11020  006A' 1C03               	skipc
 11021  006B' 2800'              	goto	l2713
 11022                           
 11023                           ;pid.c: 46: {
 11024                           ;pid.c: 47: pidIntegrated = pidIntegrated + (error * Ki);
 11025  006C' 0021               	movlb	1	; select bank1
 11026  006D' 0800'              	movf	(_error+1)^(0+128),w
 11027  006E' 0081'              	movwf	___wmul@multiplier+1
 11028  006F' 0800'              	movf	_error^(0+128),w
 11029  0070' 0080'              	movwf	___wmul@multiplier
 11030  0071' 0800'              	movf	(_Ki+1)^(0+128),w
 11031  0072' 0083'              	movwf	___wmul@multiplicand+1
 11032  0073' 0800'              	movf	_Ki^(0+128),w
 11033  0074' 0082'              	movwf	___wmul@multiplicand
 11034  0075' 3180' 2000' 3180'  	fcall	___wmul
 11035  0078' 0021               	movlb	1	; select bank1
 11036  0079' 0800'              	movf	_pidIntegrated^(0+128),w
 11037  007A' 0700'              	addwf	?___wmul,w
 11038  007B' 0080'              	movwf	_pidIntegrated^(0+128)
 11039  007C' 0800'              	movf	(_pidIntegrated+1)^(0+128),w
 11040  007D' 3D01'              	addwfc	?___wmul+1,w
 11041  007E' 0080'              	movwf	(_pidIntegrated+1)^(0+128)
 11042                           
 11043                           ;pid.c: 49: if (pidIntegrated< pidMinOutput)
 11044  007F' 0800'              	movf	(_pidIntegrated+1)^(0+128),w
 11045  0080' 3A80               	xorlw	128
 11046  0081' 008A'              	movwf	??_PID_Calculate
 11047  0082' 0800'              	movf	(_pidMinOutput+1)^(0+128),w
 11048  0083' 3A80               	xorlw	128
 11049  0084' 020A'              	subwf	??_PID_Calculate,w
 11050  0085' 1D03               	skipz
 11051  0086' 2800'              	goto	u2945
 11052  0087' 0800'              	movf	_pidMinOutput^(0+128),w
 11053  0088' 0200'              	subwf	_pidIntegrated^(0+128),w
 11054  0089'                    u2945:	
 11055  0089' 1803               	skipnc
 11056  008A' 2800'              	goto	l229
 11057                           
 11058                           ;pid.c: 50: {
 11059                           ;pid.c: 51: pidIntegrated= pidMinOutput;
 11060  008B' 0021               	movlb	1	; select bank1
 11061  008C' 0800'              	movf	(_pidMinOutput+1)^(0+128),w
 11062  008D' 0080'              	movwf	(_pidIntegrated+1)^(0+128)
 11063  008E' 0800'              	movf	_pidMinOutput^(0+128),w
 11064  008F' 0080'              	movwf	_pidIntegrated^(0+128)
 11065  0090'                    l229:	
 11066                           
 11067                           ;pid.c: 52: }
 11068                           ;pid.c: 54: if (pidIntegrated> pidMaxOutput)
 11069  0090' 0023               	movlb	3	; select bank3
 11070  0091' 0800'              	movf	(_pidMaxOutput+1)^(0+384),w
 11071  0092' 3A80               	xorlw	128
 11072  0093' 008A'              	movwf	??_PID_Calculate
 11073  0094' 0021               	movlb	1	; select bank1
 11074  0095' 0800'              	movf	(_pidIntegrated+1)^(0+128),w
 11075  0096' 3A80               	xorlw	128
 11076  0097' 020A'              	subwf	??_PID_Calculate,w
 11077  0098' 1D03               	skipz
 11078  0099' 2800'              	goto	u2955
 11079  009A' 0800'              	movf	_pidIntegrated^(0+128),w
 11080  009B' 0023               	movlb	3	; select bank3
 11081  009C' 0200'              	subwf	_pidMaxOutput^(0+384),w
 11082  009D'                    u2955:	
 11083  009D' 1803               	skipnc
 11084  009E' 2800'              	goto	l2711
 11085                           
 11086                           ;pid.c: 55: {
 11087                           ;pid.c: 56: pidIntegrated= pidMaxOutput;
 11088  009F' 0023               	movlb	3	; select bank3
 11089  00A0' 0800'              	movf	(_pidMaxOutput+1)^(0+384),w
 11090  00A1' 0021               	movlb	1	; select bank1
 11091  00A2' 0080'              	movwf	(_pidIntegrated+1)^(0+128)
 11092  00A3' 0023               	movlb	3	; select bank3
 11093  00A4' 0800'              	movf	_pidMaxOutput^(0+384),w
 11094  00A5' 0021               	movlb	1	; select bank1
 11095  00A6' 0080'              	movwf	_pidIntegrated^(0+128)
 11096  00A7'                    l2711:	
 11097                           
 11098                           ;pid.c: 57: }
 11099                           ;pid.c: 58: pidCount=0;
 11100  00A7' 0021               	movlb	1	; select bank1
 11101  00A8' 0180'              	clrf	_pidCount^(0+128)
 11102  00A9' 0180'              	clrf	(_pidCount+1)^(0+128)
 11103  00AA'                    l2713:	
 11104                           
 11105                           ;pid.c: 59: }
 11106                           ;pid.c: 62: Result = errorValue+pidIntegrated+derivativeValue;
 11107  00AA' 0021               	movlb	1	; select bank1
 11108  00AB' 0800'              	movf	_pidIntegrated^(0+128),w
 11109  00AC' 0700'              	addwf	_errorValue^(0+128),w
 11110  00AD' 008A'              	movwf	??_PID_Calculate
 11111  00AE' 0800'              	movf	(_pidIntegrated+1)^(0+128),w
 11112  00AF' 3D00'              	addwfc	(_errorValue+1)^(0+128),w
 11113  00B0' 008B'              	movwf	??_PID_Calculate+1
 11114  00B1' 0800'              	movf	_derivativeValue^(0+128),w
 11115  00B2' 070A'              	addwf	??_PID_Calculate,w
 11116  00B3' 0080'              	movwf	_Result^(0+128)
 11117  00B4' 0800'              	movf	(_derivativeValue+1)^(0+128),w
 11118  00B5' 3D0B'              	addwfc	??_PID_Calculate+1,w
 11119  00B6' 0080'              	movwf	(_Result+1)^(0+128)
 11120                           
 11121                           ;pid.c: 64: if (Result < pidMinOutput)
 11122  00B7' 0800'              	movf	(_Result+1)^(0+128),w
 11123  00B8' 3A80               	xorlw	128
 11124  00B9' 008A'              	movwf	??_PID_Calculate
 11125  00BA' 0800'              	movf	(_pidMinOutput+1)^(0+128),w
 11126  00BB' 3A80               	xorlw	128
 11127  00BC' 020A'              	subwf	??_PID_Calculate,w
 11128  00BD' 1D03               	skipz
 11129  00BE' 2800'              	goto	u2965
 11130  00BF' 0800'              	movf	_pidMinOutput^(0+128),w
 11131  00C0' 0200'              	subwf	_Result^(0+128),w
 11132  00C1'                    u2965:	
 11133  00C1' 1803               	skipnc
 11134  00C2' 2800'              	goto	l231
 11135                           
 11136                           ;pid.c: 65: {
 11137                           ;pid.c: 66: Result = pidMinOutput;
 11138  00C3' 0021               	movlb	1	; select bank1
 11139  00C4' 0800'              	movf	(_pidMinOutput+1)^(0+128),w
 11140  00C5' 0080'              	movwf	(_Result+1)^(0+128)
 11141  00C6' 0800'              	movf	_pidMinOutput^(0+128),w
 11142  00C7' 0080'              	movwf	_Result^(0+128)
 11143  00C8'                    l231:	
 11144                           
 11145                           ;pid.c: 67: }
 11146                           ;pid.c: 69: if (Result > pidMaxOutput)
 11147  00C8' 0023               	movlb	3	; select bank3
 11148  00C9' 0800'              	movf	(_pidMaxOutput+1)^(0+384),w
 11149  00CA' 3A80               	xorlw	128
 11150  00CB' 008A'              	movwf	??_PID_Calculate
 11151  00CC' 0021               	movlb	1	; select bank1
 11152  00CD' 0800'              	movf	(_Result+1)^(0+128),w
 11153  00CE' 3A80               	xorlw	128
 11154  00CF' 020A'              	subwf	??_PID_Calculate,w
 11155  00D0' 1D03               	skipz
 11156  00D1' 2800'              	goto	u2975
 11157  00D2' 0800'              	movf	_Result^(0+128),w
 11158  00D3' 0023               	movlb	3	; select bank3
 11159  00D4' 0200'              	subwf	_pidMaxOutput^(0+384),w
 11160  00D5'                    u2975:	
 11161  00D5' 1803               	skipnc
 11162  00D6' 2800'              	goto	l232
 11163                           
 11164                           ;pid.c: 70: {
 11165                           ;pid.c: 71: Result = pidMaxOutput;
 11166  00D7' 0023               	movlb	3	; select bank3
 11167  00D8' 0800'              	movf	(_pidMaxOutput+1)^(0+384),w
 11168  00D9' 0021               	movlb	1	; select bank1
 11169  00DA' 0080'              	movwf	(_Result+1)^(0+128)
 11170  00DB' 0023               	movlb	3	; select bank3
 11171  00DC' 0800'              	movf	_pidMaxOutput^(0+384),w
 11172  00DD' 0021               	movlb	1	; select bank1
 11173  00DE' 0080'              	movwf	_Result^(0+128)
 11174  00DF'                    l232:	
 11175                           
 11176                           ;pid.c: 72: }
 11177                           ;pid.c: 74: return (Result);
 11178  00DF' 0021               	movlb	1	; select bank1
 11179  00E0' 0800'              	movf	(_Result+1)^(0+128),w
 11180  00E1' 0087'              	movwf	?_PID_Calculate+1
 11181  00E2' 0800'              	movf	_Result^(0+128),w
 11182  00E3' 0086'              	movwf	?_PID_Calculate
 11183  00E4' 0008               	return
 11184  00E5'                    __end_of_PID_Calculate:	
 11185                           
 11186                           	psect	text27
 11187  0000'                    __ptext27:	
 11188 ;; *************** function ___wmul *****************
 11189 ;; Defined at:
 11190 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  multiplier      2    0[COMMON] unsigned int 
 11193 ;;  multiplicand    2    2[COMMON] unsigned int 
 11194 ;; Auto vars:     Size  Location     Type
 11195 ;;  product         2    4[COMMON] unsigned int 
 11196 ;; Return value:  Size  Location     Type
 11197 ;;                  2    0[COMMON] unsigned int 
 11198 ;; Registers used:
 11199 ;;		wreg, status,2, status,0
 11200 ;; Tracked objects:
 11201 ;;		On entry : 0/0
 11202 ;;		On exit  : 0/0
 11203 ;;		Unchanged: 0/0
 11204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11209 ;;Total ram usage:        6 bytes
 11210 ;; Hardware stack levels used:    1
 11211 ;; This function calls:
 11212 ;;		Nothing
 11213 ;; This function is called by:
 11214 ;;		_PID_Calculate
 11215 ;;		_readAnalog
 11216 ;;		_eval_poly
 11217 ;; This function uses a non-reentrant model
 11218 ;;
 11219                           
 11220                           
 11221                           ;psect for function ___wmul
 11222  0000'                    ___wmul:	
 11223                           
 11224                           ;incstack = 0
 11225                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11226  0000' 0184'              	clrf	___wmul@product
 11227  0001' 0185'              	clrf	___wmul@product+1
 11228  0002'                    l1997:	
 11229  0002' 1C00'              	btfss	___wmul@multiplier,0
 11230  0003' 2800'              	goto	l475
 11231  0004' 0802'              	movf	___wmul@multiplicand,w
 11232  0005' 0784'              	addwf	___wmul@product,f
 11233  0006' 0803'              	movf	___wmul@multiplicand+1,w
 11234  0007' 3D85'              	addwfc	___wmul@product+1,f
 11235  0008'                    l475:	
 11236  0008' 3001               	movlw	1
 11237  0009'                    u1865:	
 11238  0009' 3582'              	lslf	___wmul@multiplicand,f
 11239  000A' 0D83'              	rlf	___wmul@multiplicand+1,f
 11240  000B' 0B89               	decfsz	9,f
 11241  000C' 2800'              	goto	u1865
 11242  000D' 3001               	movlw	1
 11243  000E'                    u1875:	
 11244  000E' 3681'              	lsrf	___wmul@multiplier+1,f
 11245  000F' 0C80'              	rrf	___wmul@multiplier,f
 11246  0010' 0B89               	decfsz	9,f
 11247  0011' 2800'              	goto	u1875
 11248  0012' 0800'              	movf	___wmul@multiplier,w
 11249  0013' 0401'              	iorwf	___wmul@multiplier+1,w
 11250  0014' 1D03               	btfss	3,2
 11251  0015' 2800'              	goto	l1997
 11252  0016' 0805'              	movf	___wmul@product+1,w
 11253  0017' 0081'              	movwf	?___wmul+1
 11254  0018' 0804'              	movf	___wmul@product,w
 11255  0019' 0080'              	movwf	?___wmul
 11256  001A' 0008               	return
 11257  001B'                    __end_of___wmul:	
 11258                           
 11259                           	psect	text28
 11260  0000'                    __ptext28:	
 11261 ;; *************** function _LCD_Write_String *****************
 11262 ;; Defined at:
 11263 ;;		line 239 in file "lcd.c"
 11264 ;; Parameters:    Size  Location     Type
 11265 ;;  a               2    5[COMMON] PTR const unsigned char 
 11266 ;;		 -> STR_4(17), STR_3(16), STR_2(8), STR_1(5), 
 11267 ;; Auto vars:     Size  Location     Type
 11268 ;;  i               2    8[COMMON] int 
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      void 
 11271 ;; Registers used:
 11272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11280 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11281 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11282 ;;Total ram usage:        5 bytes
 11283 ;; Hardware stack levels used:    1
 11284 ;; Hardware stack levels required when called:    2
 11285 ;; This function calls:
 11286 ;;		_LCD_Write_Char
 11287 ;; This function is called by:
 11288 ;;		_main
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           
 11293                           ;psect for function _LCD_Write_String
 11294  0000'                    _LCD_Write_String:	
 11295                           
 11296                           ;lcd.c: 241: int i;
 11297                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 11298                           
 11299                           ;incstack = 0
 11300                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11301  0000' 0188'              	clrf	LCD_Write_String@i
 11302  0001' 0189'              	clrf	LCD_Write_String@i+1
 11303  0002'                    l2583:	
 11304  0002' 0805'              	movf	LCD_Write_String@a,w
 11305  0003' 0708'              	addwf	LCD_Write_String@i,w
 11306  0004' 0084               	movwf	4
 11307  0005' 0806'              	movf	LCD_Write_String@a+1,w
 11308  0006' 3D09'              	addwfc	LCD_Write_String@i+1,w
 11309  0007' 0085               	movwf	5
 11310  0008' 0012               	moviw fsr0++
 11311  0009' 1903               	btfsc	3,2
 11312  000A' 0008               	return
 11313                           
 11314                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 11315  000B' 0805'              	movf	LCD_Write_String@a,w
 11316  000C' 0708'              	addwf	LCD_Write_String@i,w
 11317  000D' 0084               	movwf	4
 11318  000E' 0806'              	movf	LCD_Write_String@a+1,w
 11319  000F' 3D09'              	addwfc	LCD_Write_String@i+1,w
 11320  0010' 0085               	movwf	5
 11321  0011' 0800               	movf	0,w	;code access
 11322  0012' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
 11323  0015' 3001               	movlw	1
 11324  0016' 0788'              	addwf	LCD_Write_String@i,f
 11325  0017' 3000               	movlw	0
 11326  0018' 3D89'              	addwfc	LCD_Write_String@i+1,f
 11327  0019' 2800'              	goto	l2583
 11328  001A'                    __end_of_LCD_Write_String:	
 11329                           
 11330                           	psect	text29
 11331  0000'                    __ptext29:	
 11332 ;; *************** function _LCD_Write_Int *****************
 11333 ;; Defined at:
 11334 ;;		line 246 in file "lcd.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;  value           2    9[COMMON] int 
 11337 ;;  fieldLength     1   11[COMMON] char 
 11338 ;;  numPlaces       1   12[COMMON] char 
 11339 ;;  sign            1   13[COMMON] char 
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;  str             5    5[BANK0 ] unsigned char [5]
 11342 ;;  i               2   12[BANK0 ] int 
 11343 ;;  j               2   10[BANK0 ] int 
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      void 
 11346 ;; Registers used:
 11347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11353 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11354 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11355 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11356 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11357 ;;Total ram usage:       19 bytes
 11358 ;; Hardware stack levels used:    1
 11359 ;; Hardware stack levels required when called:    2
 11360 ;; This function calls:
 11361 ;;		_LCD_Write_Char
 11362 ;;		___awdiv
 11363 ;;		___awmod
 11364 ;; This function is called by:
 11365 ;;		_main
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           
 11370                           ;psect for function _LCD_Write_Int
 11371  0000'                    _LCD_Write_Int:	
 11372                           
 11373                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 11374                           
 11375                           ;incstack = 0
 11376                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11377  0000' 3000'              	movlw	low LCD_Write_Int@F13694
 11378  0001' 0086               	movwf	6
 11379  0002' 3000'              	movlw	high LCD_Write_Int@F13694
 11380  0003' 0087               	movwf	7
 11381  0004' 3000'              	movlw	low LCD_Write_Int@str
 11382  0005' 0084               	movwf	4
 11383  0006' 3000'              	movlw	high LCD_Write_Int@str
 11384  0007' 0085               	movwf	5
 11385  0008' 3005               	movlw	5
 11386  0009' 0020               	movlb	0	; select bank0
 11387  000A' 0080'              	movwf	??_LCD_Write_Int
 11388  000B'                    u2810:	
 11389  000B' 0016               	moviw fsr1++
 11390  000C' 001A               	movwi fsr0++
 11391  000D' 0B80'              	decfsz	??_LCD_Write_Int,f
 11392  000E' 2800'              	goto	u2810
 11393                           
 11394                           ;lcd.c: 249: int i=4,j=0;
 11395  000F' 3004               	movlw	4
 11396  0010' 008C'              	movwf	LCD_Write_Int@i
 11397  0011' 3000               	movlw	0
 11398  0012' 008D'              	movwf	LCD_Write_Int@i+1
 11399  0013' 018A'              	clrf	LCD_Write_Int@j
 11400  0014' 018B'              	clrf	LCD_Write_Int@j+1
 11401                           
 11402                           ;lcd.c: 251: if(value<0)
 11403  0015' 1F8A'              	btfss	LCD_Write_Int@value+1,7
 11404  0016' 2800'              	goto	l2597
 11405                           
 11406                           ;lcd.c: 252: {
 11407                           ;lcd.c: 253: LCD_Write_Char('-');
 11408  0017' 302D               	movlw	45
 11409  0018' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
 11410                           
 11411                           ;lcd.c: 254: value=value*-1;
 11412  001B' 0989'              	comf	LCD_Write_Int@value,f
 11413  001C' 098A'              	comf	LCD_Write_Int@value+1,f
 11414  001D' 0A89'              	incf	LCD_Write_Int@value,f
 11415  001E' 1903               	skipnz
 11416  001F' 0A8A'              	incf	LCD_Write_Int@value+1,f
 11417                           
 11418                           ;lcd.c: 255: }
 11419  0020' 2800'              	goto	l2607
 11420  0021'                    l2597:	
 11421                           
 11422                           ;lcd.c: 257: else
 11423                           ;lcd.c: 258: {
 11424                           ;lcd.c: 259: if(sign == 1)
 11425  0021' 030D'              	decf	LCD_Write_Int@sign,w
 11426  0022' 1D03               	btfss	3,2
 11427  0023' 2800'              	goto	l2607
 11428                           
 11429                           ;lcd.c: 260: {
 11430                           ;lcd.c: 261: LCD_Write_Char('+');
 11431  0024' 302B               	movlw	43
 11432  0025' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
 11433  0028'                    l2607:	
 11434                           ;lcd.c: 262: }
 11435                           ;lcd.c: 263: }
 11436                           ;lcd.c: 265: while(value)
 11437                           
 11438  0028' 0809'              	movf	LCD_Write_Int@value,w
 11439  0029' 040A'              	iorwf	LCD_Write_Int@value+1,w
 11440  002A' 1903               	btfsc	3,2
 11441  002B' 2800'              	goto	l2609
 11442                           
 11443                           ;lcd.c: 266: {
 11444                           ;lcd.c: 267: str[i]=value%10;
 11445  002C' 300A               	movlw	10
 11446  002D' 0080'              	movwf	___awmod@divisor
 11447  002E' 3000               	movlw	0
 11448  002F' 0081'              	movwf	___awmod@divisor+1
 11449  0030' 080A'              	movf	LCD_Write_Int@value+1,w
 11450  0031' 0083'              	movwf	___awmod@dividend+1
 11451  0032' 0809'              	movf	LCD_Write_Int@value,w
 11452  0033' 0082'              	movwf	___awmod@dividend
 11453  0034' 3180' 2000' 3180'  	fcall	___awmod
 11454  0037' 0800'              	movf	?___awmod,w
 11455  0038' 0020               	movlb	0	; select bank0
 11456  0039' 0080'              	movwf	??_LCD_Write_Int
 11457  003A' 080C'              	movf	LCD_Write_Int@i,w
 11458  003B' 3E00'              	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11459  003C' 0086               	movwf	6
 11460  003D' 0187               	clrf	7
 11461  003E' 0800'              	movf	??_LCD_Write_Int,w
 11462  003F' 0081               	movwf	1
 11463                           
 11464                           ;lcd.c: 268: value=value/10;
 11465  0040' 300A               	movlw	10
 11466  0041' 0080'              	movwf	___awdiv@divisor
 11467  0042' 3000               	movlw	0
 11468  0043' 0081'              	movwf	___awdiv@divisor+1
 11469  0044' 080A'              	movf	LCD_Write_Int@value+1,w
 11470  0045' 0083'              	movwf	___awdiv@dividend+1
 11471  0046' 0809'              	movf	LCD_Write_Int@value,w
 11472  0047' 0082'              	movwf	___awdiv@dividend
 11473  0048' 3180' 2000' 3180'  	fcall	___awdiv
 11474  004B' 0801'              	movf	?___awdiv+1,w
 11475  004C' 008A'              	movwf	LCD_Write_Int@value+1
 11476  004D' 0800'              	movf	?___awdiv,w
 11477  004E' 0089'              	movwf	LCD_Write_Int@value
 11478                           
 11479                           ;lcd.c: 269: i--;
 11480  004F' 30FF               	movlw	255
 11481  0050' 0020               	movlb	0	; select bank0
 11482  0051' 078C'              	addwf	LCD_Write_Int@i,f
 11483  0052' 30FF               	movlw	255
 11484  0053' 3D8D'              	addwfc	LCD_Write_Int@i+1,f
 11485  0054' 2800'              	goto	l2607
 11486  0055'                    l2609:	
 11487                           
 11488                           ;lcd.c: 270: }
 11489                           ;lcd.c: 271: if(fieldLength==-1)
 11490  0055' 0A0B'              	incf	LCD_Write_Int@fieldLength,w
 11491  0056' 1903               	btfsc	3,2
 11492  0057' 2800'              	goto	l2615
 11493  0058' 2800'              	goto	l2617
 11494  0059'                    l2613:	
 11495                           ;lcd.c: 272: {
 11496                           ;lcd.c: 273: while(str[j]==0)
 11497                           
 11498                           
 11499                           ;lcd.c: 274: {
 11500                           ;lcd.c: 275: j++;
 11501  0059' 3001               	movlw	1
 11502  005A' 0020               	movlb	0	; select bank0
 11503  005B' 078A'              	addwf	LCD_Write_Int@j,f
 11504  005C' 3000               	movlw	0
 11505  005D' 3D8B'              	addwfc	LCD_Write_Int@j+1,f
 11506  005E'                    l2615:	
 11507  005E' 0020               	movlb	0	; select bank0
 11508  005F' 080A'              	movf	LCD_Write_Int@j,w
 11509  0060' 3E00'              	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11510  0061' 0086               	movwf	6
 11511  0062' 0187               	clrf	7
 11512  0063' 0801               	movf	1,w
 11513  0064' 1D03               	btfss	3,2
 11514  0065' 2800'              	goto	l2619
 11515  0066' 2800'              	goto	l2613
 11516  0067'                    l2617:	
 11517                           ;lcd.c: 276: }
 11518                           ;lcd.c: 277: }
 11519                           
 11520                           
 11521                           ;lcd.c: 278: else
 11522                           ;lcd.c: 279: {
 11523                           ;lcd.c: 280: j=5-fieldLength;
 11524  0067' 080B'              	movf	LCD_Write_Int@fieldLength,w
 11525  0068' 0020               	movlb	0	; select bank0
 11526  0069' 0080'              	movwf	??_LCD_Write_Int
 11527  006A' 0181'              	clrf	??_LCD_Write_Int+1
 11528  006B' 1B80'              	btfsc	??_LCD_Write_Int,7
 11529  006C' 0381'              	decf	??_LCD_Write_Int+1,f
 11530  006D' 0980'              	comf	??_LCD_Write_Int,f
 11531  006E' 0981'              	comf	??_LCD_Write_Int+1,f
 11532  006F' 0A80'              	incf	??_LCD_Write_Int,f
 11533  0070' 1903               	skipnz
 11534  0071' 0A81'              	incf	??_LCD_Write_Int+1,f
 11535  0072' 0800'              	movf	??_LCD_Write_Int,w
 11536  0073' 3E05               	addlw	5
 11537  0074' 008A'              	movwf	LCD_Write_Int@j
 11538  0075' 3000               	movlw	0
 11539  0076' 3D01'              	addwfc	??_LCD_Write_Int+1,w
 11540  0077' 008B'              	movwf	LCD_Write_Int@j+1
 11541  0078'                    l2619:	
 11542                           
 11543                           ;lcd.c: 281: }
 11544                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11545  0078' 080B'              	movf	LCD_Write_Int@j+1,w
 11546  0079' 008D'              	movwf	LCD_Write_Int@i+1
 11547  007A' 080A'              	movf	LCD_Write_Int@j,w
 11548  007B' 008C'              	movwf	LCD_Write_Int@i
 11549  007C'                    l2625:	
 11550  007C' 080C'              	movf	LCD_Write_Int@numPlaces,w
 11551  007D' 0080'              	movwf	??_LCD_Write_Int
 11552  007E' 0181'              	clrf	??_LCD_Write_Int+1
 11553  007F' 1B80'              	btfsc	??_LCD_Write_Int,7
 11554  0080' 0381'              	decf	??_LCD_Write_Int+1,f
 11555  0081' 0980'              	comf	??_LCD_Write_Int,f
 11556  0082' 0981'              	comf	??_LCD_Write_Int+1,f
 11557  0083' 0A80'              	incf	??_LCD_Write_Int,f
 11558  0084' 1903               	skipnz
 11559  0085' 0A81'              	incf	??_LCD_Write_Int+1,f
 11560  0086' 0800'              	movf	??_LCD_Write_Int,w
 11561  0087' 3E05               	addlw	5
 11562  0088' 0082'              	movwf	??_LCD_Write_Int+2
 11563  0089' 3000               	movlw	0
 11564  008A' 3D01'              	addwfc	??_LCD_Write_Int+1,w
 11565  008B' 0083'              	movwf	??_LCD_Write_Int+3
 11566  008C' 080D'              	movf	LCD_Write_Int@i+1,w
 11567  008D' 3A80               	xorlw	128
 11568  008E' 0084'              	movwf	??_LCD_Write_Int+4
 11569  008F' 0803'              	movf	??_LCD_Write_Int+3,w
 11570  0090' 3A80               	xorlw	128
 11571  0091' 0204'              	subwf	??_LCD_Write_Int+4,w
 11572  0092' 1D03               	skipz
 11573  0093' 2800'              	goto	u2875
 11574  0094' 0802'              	movf	??_LCD_Write_Int+2,w
 11575  0095' 020C'              	subwf	LCD_Write_Int@i,w
 11576  0096'                    u2875:	
 11577  0096' 1803               	btfsc	3,0
 11578  0097' 2800'              	goto	l2627
 11579                           
 11580                           ;lcd.c: 284: {
 11581                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11582  0098' 0020               	movlb	0	; select bank0
 11583  0099' 080C'              	movf	LCD_Write_Int@i,w
 11584  009A' 3E00'              	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11585  009B' 0086               	movwf	6
 11586  009C' 0187               	clrf	7
 11587  009D' 0801               	movf	1,w
 11588  009E' 3E30               	addlw	48
 11589  009F' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
 11590  00A2' 3001               	movlw	1
 11591  00A3' 0020               	movlb	0	; select bank0
 11592  00A4' 078C'              	addwf	LCD_Write_Int@i,f
 11593  00A5' 3000               	movlw	0
 11594  00A6' 3D8D'              	addwfc	LCD_Write_Int@i+1,f
 11595  00A7' 2800'              	goto	l2625
 11596  00A8'                    l2627:	
 11597                           
 11598                           ;lcd.c: 286: }
 11599                           ;lcd.c: 288: if(numPlaces == 1)
 11600  00A8' 030C'              	decf	LCD_Write_Int@numPlaces,w
 11601  00A9' 1D03               	btfss	3,2
 11602  00AA' 2800'              	goto	l2631
 11603                           
 11604                           ;lcd.c: 289: {
 11605                           ;lcd.c: 290: LCD_Write_Char(46);
 11606  00AB' 302E               	movlw	46
 11607  00AC' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
 11608                           
 11609                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11610  00AF' 0020               	movlb	0	; select bank0
 11611  00B0' 0809'              	movf	LCD_Write_Int@str+4,w
 11612  00B1' 3E30               	addlw	48
 11613  00B2' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
 11614  00B5'                    l2631:	
 11615                           
 11616                           ;lcd.c: 292: }
 11617                           ;lcd.c: 294: if(numPlaces == 2)
 11618  00B5' 3002               	movlw	2
 11619  00B6' 060C'              	xorwf	LCD_Write_Int@numPlaces,w
 11620  00B7' 1D03               	btfss	3,2
 11621  00B8' 0008               	return
 11622                           
 11623                           ;lcd.c: 295: {
 11624                           ;lcd.c: 296: LCD_Write_Char(46);
 11625  00B9' 302E               	movlw	46
 11626  00BA' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
 11627                           
 11628                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11629  00BD' 0020               	movlb	0	; select bank0
 11630  00BE' 0808'              	movf	LCD_Write_Int@str+3,w
 11631  00BF' 3E30               	addlw	48
 11632  00C0' 3180' 2000' 3180'  	fcall	_LCD_Write_Char
 11633                           
 11634                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11635  00C3' 0020               	movlb	0	; select bank0
 11636  00C4' 0809'              	movf	LCD_Write_Int@str+4,w
 11637  00C5' 3E30               	addlw	48
 11638  00C6' 3180' 2000'        	fcall	_LCD_Write_Char
 11639  00C8' 0008               	return
 11640  00C9'                    __end_of_LCD_Write_Int:	
 11641                           
 11642                           	psect	text30
 11643  0000'                    __ptext30:	
 11644 ;; *************** function ___awmod *****************
 11645 ;; Defined at:
 11646 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;  divisor         2    0[COMMON] int 
 11649 ;;  dividend        2    2[COMMON] int 
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;  sign            1    6[COMMON] unsigned char 
 11652 ;;  counter         1    5[COMMON] unsigned char 
 11653 ;; Return value:  Size  Location     Type
 11654 ;;                  2    0[COMMON] int 
 11655 ;; Registers used:
 11656 ;;		wreg, status,2, status,0
 11657 ;; Tracked objects:
 11658 ;;		On entry : 0/0
 11659 ;;		On exit  : 0/0
 11660 ;;		Unchanged: 0/0
 11661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;Total ram usage:        7 bytes
 11667 ;; Hardware stack levels used:    1
 11668 ;; This function calls:
 11669 ;;		Nothing
 11670 ;; This function is called by:
 11671 ;;		_LCD_Write_Int
 11672 ;; This function uses a non-reentrant model
 11673 ;;
 11674                           
 11675                           
 11676                           ;psect for function ___awmod
 11677  0000'                    ___awmod:	
 11678                           
 11679                           ;incstack = 0
 11680                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11681  0000' 0186'              	clrf	___awmod@sign
 11682  0001' 1F83'              	btfss	___awmod@dividend+1,7
 11683  0002' 2800'              	goto	l2477
 11684  0003' 0982'              	comf	___awmod@dividend,f
 11685  0004' 0983'              	comf	___awmod@dividend+1,f
 11686  0005' 0A82'              	incf	___awmod@dividend,f
 11687  0006' 1903               	skipnz
 11688  0007' 0A83'              	incf	___awmod@dividend+1,f
 11689  0008' 0186'              	clrf	___awmod@sign
 11690  0009' 0A86'              	incf	___awmod@sign,f
 11691  000A'                    l2477:	
 11692  000A' 1F81'              	btfss	___awmod@divisor+1,7
 11693  000B' 2800'              	goto	l2481
 11694  000C' 0980'              	comf	___awmod@divisor,f
 11695  000D' 0981'              	comf	___awmod@divisor+1,f
 11696  000E' 0A80'              	incf	___awmod@divisor,f
 11697  000F' 1903               	skipnz
 11698  0010' 0A81'              	incf	___awmod@divisor+1,f
 11699  0011'                    l2481:	
 11700  0011' 0800'              	movf	___awmod@divisor,w
 11701  0012' 0401'              	iorwf	___awmod@divisor+1,w
 11702  0013' 1903               	btfsc	3,2
 11703  0014' 2800'              	goto	l2499
 11704  0015' 0185'              	clrf	___awmod@counter
 11705  0016' 0A85'              	incf	___awmod@counter,f
 11706  0017'                    l2489:	
 11707  0017' 1B81'              	btfsc	___awmod@divisor+1,7
 11708  0018' 2800'              	goto	l2491
 11709  0019' 3001               	movlw	1
 11710  001A'                    u2615:	
 11711  001A' 3580'              	lslf	___awmod@divisor,f
 11712  001B' 0D81'              	rlf	___awmod@divisor+1,f
 11713  001C' 0B89               	decfsz	9,f
 11714  001D' 2800'              	goto	u2615
 11715  001E' 3001               	movlw	1
 11716  001F' 0084'              	movwf	??___awmod
 11717  0020' 0804'              	movf	??___awmod,w
 11718  0021' 0785'              	addwf	___awmod@counter,f
 11719  0022' 2800'              	goto	l2489
 11720  0023'                    l2491:	
 11721  0023' 0801'              	movf	___awmod@divisor+1,w
 11722  0024' 0203'              	subwf	___awmod@dividend+1,w
 11723  0025' 1D03               	skipz
 11724  0026' 2800'              	goto	u2635
 11725  0027' 0800'              	movf	___awmod@divisor,w
 11726  0028' 0202'              	subwf	___awmod@dividend,w
 11727  0029'                    u2635:	
 11728  0029' 1C03               	skipc
 11729  002A' 2800'              	goto	l2495
 11730  002B' 0800'              	movf	___awmod@divisor,w
 11731  002C' 0282'              	subwf	___awmod@dividend,f
 11732  002D' 0801'              	movf	___awmod@divisor+1,w
 11733  002E' 3B83'              	subwfb	___awmod@dividend+1,f
 11734  002F'                    l2495:	
 11735  002F' 3001               	movlw	1
 11736  0030'                    u2645:	
 11737  0030' 3681'              	lsrf	___awmod@divisor+1,f
 11738  0031' 0C80'              	rrf	___awmod@divisor,f
 11739  0032' 0B89               	decfsz	9,f
 11740  0033' 2800'              	goto	u2645
 11741  0034' 3001               	movlw	1
 11742  0035' 0285'              	subwf	___awmod@counter,f
 11743  0036' 1D03               	btfss	3,2
 11744  0037' 2800'              	goto	l2491
 11745  0038'                    l2499:	
 11746  0038' 0806'              	movf	___awmod@sign,w
 11747  0039' 1903               	btfsc	3,2
 11748  003A' 2800'              	goto	l2503
 11749  003B' 0982'              	comf	___awmod@dividend,f
 11750  003C' 0983'              	comf	___awmod@dividend+1,f
 11751  003D' 0A82'              	incf	___awmod@dividend,f
 11752  003E' 1903               	skipnz
 11753  003F' 0A83'              	incf	___awmod@dividend+1,f
 11754  0040'                    l2503:	
 11755  0040' 0803'              	movf	___awmod@dividend+1,w
 11756  0041' 0081'              	movwf	?___awmod+1
 11757  0042' 0802'              	movf	___awmod@dividend,w
 11758  0043' 0080'              	movwf	?___awmod
 11759  0044' 0008               	return
 11760  0045'                    __end_of___awmod:	
 11761                           
 11762                           	psect	text31
 11763  0000'                    __ptext31:	
 11764 ;; *************** function ___awdiv *****************
 11765 ;; Defined at:
 11766 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11767 ;; Parameters:    Size  Location     Type
 11768 ;;  divisor         2    0[COMMON] int 
 11769 ;;  dividend        2    2[COMMON] int 
 11770 ;; Auto vars:     Size  Location     Type
 11771 ;;  quotient        2    7[COMMON] int 
 11772 ;;  sign            1    6[COMMON] unsigned char 
 11773 ;;  counter         1    5[COMMON] unsigned char 
 11774 ;; Return value:  Size  Location     Type
 11775 ;;                  2    0[COMMON] int 
 11776 ;; Registers used:
 11777 ;;		wreg, status,2, status,0
 11778 ;; Tracked objects:
 11779 ;;		On entry : 0/0
 11780 ;;		On exit  : 0/0
 11781 ;;		Unchanged: 0/0
 11782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11783 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11787 ;;Total ram usage:        9 bytes
 11788 ;; Hardware stack levels used:    1
 11789 ;; This function calls:
 11790 ;;		Nothing
 11791 ;; This function is called by:
 11792 ;;		_LCD_Write_Int
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796                           
 11797                           ;psect for function ___awdiv
 11798  0000'                    ___awdiv:	
 11799                           
 11800                           ;incstack = 0
 11801                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11802  0000' 0186'              	clrf	___awdiv@sign
 11803  0001' 1F81'              	btfss	___awdiv@divisor+1,7
 11804  0002' 2800'              	goto	l2433
 11805  0003' 0980'              	comf	___awdiv@divisor,f
 11806  0004' 0981'              	comf	___awdiv@divisor+1,f
 11807  0005' 0A80'              	incf	___awdiv@divisor,f
 11808  0006' 1903               	skipnz
 11809  0007' 0A81'              	incf	___awdiv@divisor+1,f
 11810  0008' 0186'              	clrf	___awdiv@sign
 11811  0009' 0A86'              	incf	___awdiv@sign,f
 11812  000A'                    l2433:	
 11813  000A' 1F83'              	btfss	___awdiv@dividend+1,7
 11814  000B' 2800'              	goto	l2439
 11815  000C' 0982'              	comf	___awdiv@dividend,f
 11816  000D' 0983'              	comf	___awdiv@dividend+1,f
 11817  000E' 0A82'              	incf	___awdiv@dividend,f
 11818  000F' 1903               	skipnz
 11819  0010' 0A83'              	incf	___awdiv@dividend+1,f
 11820  0011' 3001               	movlw	1
 11821  0012' 0084'              	movwf	??___awdiv
 11822  0013' 0804'              	movf	??___awdiv,w
 11823  0014' 0686'              	xorwf	___awdiv@sign,f
 11824  0015'                    l2439:	
 11825  0015' 0187'              	clrf	___awdiv@quotient
 11826  0016' 0188'              	clrf	___awdiv@quotient+1
 11827  0017' 0800'              	movf	___awdiv@divisor,w
 11828  0018' 0401'              	iorwf	___awdiv@divisor+1,w
 11829  0019' 1903               	btfsc	3,2
 11830  001A' 2800'              	goto	l2461
 11831  001B' 0185'              	clrf	___awdiv@counter
 11832  001C' 0A85'              	incf	___awdiv@counter,f
 11833  001D'                    l2449:	
 11834  001D' 1B81'              	btfsc	___awdiv@divisor+1,7
 11835  001E' 2800'              	goto	l2451
 11836  001F' 3001               	movlw	1
 11837  0020'                    u2515:	
 11838  0020' 3580'              	lslf	___awdiv@divisor,f
 11839  0021' 0D81'              	rlf	___awdiv@divisor+1,f
 11840  0022' 0B89               	decfsz	9,f
 11841  0023' 2800'              	goto	u2515
 11842  0024' 3001               	movlw	1
 11843  0025' 0084'              	movwf	??___awdiv
 11844  0026' 0804'              	movf	??___awdiv,w
 11845  0027' 0785'              	addwf	___awdiv@counter,f
 11846  0028' 2800'              	goto	l2449
 11847  0029'                    l2451:	
 11848  0029' 3001               	movlw	1
 11849  002A'                    u2535:	
 11850  002A' 3587'              	lslf	___awdiv@quotient,f
 11851  002B' 0D88'              	rlf	___awdiv@quotient+1,f
 11852  002C' 0B89               	decfsz	9,f
 11853  002D' 2800'              	goto	u2535
 11854  002E' 0801'              	movf	___awdiv@divisor+1,w
 11855  002F' 0203'              	subwf	___awdiv@dividend+1,w
 11856  0030' 1D03               	skipz
 11857  0031' 2800'              	goto	u2545
 11858  0032' 0800'              	movf	___awdiv@divisor,w
 11859  0033' 0202'              	subwf	___awdiv@dividend,w
 11860  0034'                    u2545:	
 11861  0034' 1C03               	skipc
 11862  0035' 2800'              	goto	l2457
 11863  0036' 0800'              	movf	___awdiv@divisor,w
 11864  0037' 0282'              	subwf	___awdiv@dividend,f
 11865  0038' 0801'              	movf	___awdiv@divisor+1,w
 11866  0039' 3B83'              	subwfb	___awdiv@dividend+1,f
 11867  003A' 1407'              	bsf	___awdiv@quotient,0
 11868  003B'                    l2457:	
 11869  003B' 3001               	movlw	1
 11870  003C'                    u2555:	
 11871  003C' 3681'              	lsrf	___awdiv@divisor+1,f
 11872  003D' 0C80'              	rrf	___awdiv@divisor,f
 11873  003E' 0B89               	decfsz	9,f
 11874  003F' 2800'              	goto	u2555
 11875  0040' 3001               	movlw	1
 11876  0041' 0285'              	subwf	___awdiv@counter,f
 11877  0042' 1D03               	btfss	3,2
 11878  0043' 2800'              	goto	l2451
 11879  0044'                    l2461:	
 11880  0044' 0806'              	movf	___awdiv@sign,w
 11881  0045' 1903               	btfsc	3,2
 11882  0046' 2800'              	goto	l2465
 11883  0047' 0987'              	comf	___awdiv@quotient,f
 11884  0048' 0988'              	comf	___awdiv@quotient+1,f
 11885  0049' 0A87'              	incf	___awdiv@quotient,f
 11886  004A' 1903               	skipnz
 11887  004B' 0A88'              	incf	___awdiv@quotient+1,f
 11888  004C'                    l2465:	
 11889  004C' 0808'              	movf	___awdiv@quotient+1,w
 11890  004D' 0081'              	movwf	?___awdiv+1
 11891  004E' 0807'              	movf	___awdiv@quotient,w
 11892  004F' 0080'              	movwf	?___awdiv
 11893  0050' 0008               	return
 11894  0051'                    __end_of___awdiv:	
 11895                           
 11896                           	psect	text32
 11897  0000'                    __ptext32:	
 11898 ;; *************** function _LCD_Write_Char *****************
 11899 ;; Defined at:
 11900 ;;		line 223 in file "lcd.c"
 11901 ;; Parameters:    Size  Location     Type
 11902 ;;  a               1    wreg     const unsigned char 
 11903 ;; Auto vars:     Size  Location     Type
 11904 ;;  a               1    4[COMMON] const unsigned char 
 11905 ;;  y               1    3[COMMON] unsigned char 
 11906 ;;  temp            1    2[COMMON] unsigned char 
 11907 ;; Return value:  Size  Location     Type
 11908 ;;                  1    wreg      void 
 11909 ;; Registers used:
 11910 ;;		wreg, status,2, status,0, pclath, cstack
 11911 ;; Tracked objects:
 11912 ;;		On entry : 0/0
 11913 ;;		On exit  : 0/0
 11914 ;;		Unchanged: 0/0
 11915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11917 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11918 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11919 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11920 ;;Total ram usage:        4 bytes
 11921 ;; Hardware stack levels used:    1
 11922 ;; Hardware stack levels required when called:    1
 11923 ;; This function calls:
 11924 ;;		_LCD_Port
 11925 ;; This function is called by:
 11926 ;;		_InitCustomChars
 11927 ;;		_LCD_Write_String
 11928 ;;		_LCD_Write_Int
 11929 ;;		_main
 11930 ;; This function uses a non-reentrant model
 11931 ;;
 11932                           
 11933                           
 11934                           ;psect for function _LCD_Write_Char
 11935  0000'                    _LCD_Write_Char:	
 11936                           
 11937                           ;incstack = 0
 11938                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11939                           ;LCD_Write_Char@a stored from wreg
 11940  0000' 0084'              	movwf	LCD_Write_Char@a
 11941                           
 11942                           ;lcd.c: 225: char temp,y;
 11943                           ;lcd.c: 226: temp = a&0x0F;
 11944  0001' 0804'              	movf	LCD_Write_Char@a,w
 11945  0002' 390F               	andlw	15
 11946  0003' 0081'              	movwf	??_LCD_Write_Char
 11947  0004' 0801'              	movf	??_LCD_Write_Char,w
 11948  0005' 0082'              	movwf	LCD_Write_Char@temp
 11949                           
 11950                           ;lcd.c: 227: y = a&0xF0;
 11951  0006' 0804'              	movf	LCD_Write_Char@a,w
 11952  0007' 39F0               	andlw	240
 11953  0008' 0081'              	movwf	??_LCD_Write_Char
 11954  0009' 0801'              	movf	??_LCD_Write_Char,w
 11955  000A' 0083'              	movwf	LCD_Write_Char@y
 11956                           
 11957                           ;lcd.c: 228: RA0 = 1;
 11958  000B' 0020               	movlb	0	; select bank0
 11959  000C' 140C               	bsf	12,0	;volatile
 11960                           
 11961                           ;lcd.c: 229: LCD_Port(y>>4);
 11962  000D' 0803'              	movf	LCD_Write_Char@y,w
 11963  000E' 0081'              	movwf	??_LCD_Write_Char
 11964  000F' 3004               	movlw	4
 11965  0010'                    u2245:	
 11966  0010' 3681'              	lsrf	??_LCD_Write_Char,f
 11967  0011' 0B89               	decfsz	9,f
 11968  0012' 2800'              	goto	u2245
 11969  0013' 0801'              	movf	??_LCD_Write_Char,w
 11970  0014' 3180' 2000' 3180'  	fcall	_LCD_Port
 11971                           
 11972                           ;lcd.c: 230: RA2 = 1;
 11973  0017' 0020               	movlb	0	; select bank0
 11974  0018' 150C               	bsf	12,2	;volatile
 11975                           
 11976                           ;lcd.c: 231: RA2 = 0;
 11977  0019' 110C               	bcf	12,2	;volatile
 11978                           
 11979                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11980  001A' 306A               	movlw	106
 11981  001B' 0081'              	movwf	??_LCD_Write_Char
 11982  001C'                    u3517:	
 11983  001C' 0B81'              	decfsz	??_LCD_Write_Char,f
 11984  001D' 2800'              	goto	u3517
 11985  001E' 0000               	nop
 11986                           
 11987                           ;lcd.c: 233: LCD_Port(temp);
 11988  001F' 0802'              	movf	LCD_Write_Char@temp,w
 11989  0020' 3180' 2000' 3180'  	fcall	_LCD_Port
 11990                           
 11991                           ;lcd.c: 234: RA2 = 1;
 11992  0023' 0020               	movlb	0	; select bank0
 11993  0024' 150C               	bsf	12,2	;volatile
 11994                           
 11995                           ;lcd.c: 235: RA2 = 0;
 11996  0025' 110C               	bcf	12,2	;volatile
 11997                           
 11998                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11999  0026' 306A               	movlw	106
 12000  0027' 0081'              	movwf	??_LCD_Write_Char
 12001  0028'                    u3527:	
 12002  0028' 0B81'              	decfsz	??_LCD_Write_Char,f
 12003  0029' 2800'              	goto	u3527
 12004  002A' 0000               	nop
 12005  002B' 0008               	return
 12006  002C'                    __end_of_LCD_Write_Char:	
 12007                           
 12008                           	psect	text33
 12009  0000'                    __ptext33:	
 12010 ;; *************** function _LCD_Set_Cursor *****************
 12011 ;; Defined at:
 12012 ;;		line 82 in file "lcd.c"
 12013 ;; Parameters:    Size  Location     Type
 12014 ;;  x               1    wreg     unsigned char 
 12015 ;;  y               1    4[COMMON] unsigned char 
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;  x               1    7[COMMON] unsigned char 
 12018 ;;  temp            1   10[COMMON] unsigned char 
 12019 ;;  w               1    9[COMMON] unsigned char 
 12020 ;;  z               1    8[COMMON] unsigned char 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  1    wreg      void 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2, status,0, pclath, cstack
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12030 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;Total ram usage:        7 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    2
 12037 ;; This function calls:
 12038 ;;		_LCD_Cmd
 12039 ;; This function is called by:
 12040 ;;		_main
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           
 12045                           ;psect for function _LCD_Set_Cursor
 12046  0000'                    _LCD_Set_Cursor:	
 12047                           
 12048                           ;incstack = 0
 12049                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 12050                           ;LCD_Set_Cursor@x stored from wreg
 12051  0000' 0087'              	movwf	LCD_Set_Cursor@x
 12052                           
 12053                           ;lcd.c: 86: char temp,z,w;
 12054                           ;lcd.c: 88: if(y == 0)
 12055  0001' 0804'              	movf	LCD_Set_Cursor@y,w
 12056  0002' 1D03               	btfss	3,2
 12057  0003' 2800'              	goto	l2567
 12058                           
 12059                           ;lcd.c: 89: {
 12060                           ;lcd.c: 90: temp = 0x80 + x;
 12061  0004' 0807'              	movf	LCD_Set_Cursor@x,w
 12062  0005' 3E80               	addlw	128
 12063  0006' 0085'              	movwf	??_LCD_Set_Cursor
 12064  0007' 0805'              	movf	??_LCD_Set_Cursor,w
 12065  0008' 008A'              	movwf	LCD_Set_Cursor@temp
 12066                           
 12067                           ;lcd.c: 91: z = temp>>4;
 12068  0009' 080A'              	movf	LCD_Set_Cursor@temp,w
 12069  000A' 0085'              	movwf	??_LCD_Set_Cursor
 12070  000B' 3004               	movlw	4
 12071  000C'                    u2775:	
 12072  000C' 3685'              	lsrf	??_LCD_Set_Cursor,f
 12073  000D' 0B89               	decfsz	9,f
 12074  000E' 2800'              	goto	u2775
 12075  000F' 0805'              	movf	??_LCD_Set_Cursor,w
 12076  0010' 0086'              	movwf	??_LCD_Set_Cursor+1
 12077  0011' 0806'              	movf	??_LCD_Set_Cursor+1,w
 12078  0012' 0088'              	movwf	LCD_Set_Cursor@z
 12079                           
 12080                           ;lcd.c: 92: w = temp & 0x0F;
 12081  0013' 080A'              	movf	LCD_Set_Cursor@temp,w
 12082  0014' 390F               	andlw	15
 12083  0015' 0085'              	movwf	??_LCD_Set_Cursor
 12084  0016' 0805'              	movf	??_LCD_Set_Cursor,w
 12085  0017' 0089'              	movwf	LCD_Set_Cursor@w
 12086                           
 12087                           ;lcd.c: 93: LCD_Cmd(z);
 12088  0018' 0808'              	movf	LCD_Set_Cursor@z,w
 12089  0019' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 12090                           
 12091                           ;lcd.c: 94: LCD_Cmd(w);
 12092  001C' 0809'              	movf	LCD_Set_Cursor@w,w
 12093  001D' 3180' 2000'        	fcall	_LCD_Cmd
 12094                           
 12095                           ;lcd.c: 95: }
 12096  001F' 0008               	return
 12097  0020'                    l2567:	
 12098                           
 12099                           ;lcd.c: 97: else if(y == 1)
 12100  0020' 0304'              	decf	LCD_Set_Cursor@y,w
 12101  0021' 1D03               	btfss	3,2
 12102  0022' 0008               	return
 12103                           
 12104                           ;lcd.c: 98: {
 12105                           ;lcd.c: 99: temp = 0xC0 + x;
 12106  0023' 0807'              	movf	LCD_Set_Cursor@x,w
 12107  0024' 3EC0               	addlw	192
 12108  0025' 0085'              	movwf	??_LCD_Set_Cursor
 12109  0026' 0805'              	movf	??_LCD_Set_Cursor,w
 12110  0027' 008A'              	movwf	LCD_Set_Cursor@temp
 12111                           
 12112                           ;lcd.c: 100: z = temp>>4;
 12113  0028' 080A'              	movf	LCD_Set_Cursor@temp,w
 12114  0029' 0085'              	movwf	??_LCD_Set_Cursor
 12115  002A' 3004               	movlw	4
 12116  002B'                    u2795:	
 12117  002B' 3685'              	lsrf	??_LCD_Set_Cursor,f
 12118  002C' 0B89               	decfsz	9,f
 12119  002D' 2800'              	goto	u2795
 12120  002E' 0805'              	movf	??_LCD_Set_Cursor,w
 12121  002F' 0086'              	movwf	??_LCD_Set_Cursor+1
 12122  0030' 0806'              	movf	??_LCD_Set_Cursor+1,w
 12123  0031' 0088'              	movwf	LCD_Set_Cursor@z
 12124                           
 12125                           ;lcd.c: 101: w = temp & 0x0F;
 12126  0032' 080A'              	movf	LCD_Set_Cursor@temp,w
 12127  0033' 390F               	andlw	15
 12128  0034' 0085'              	movwf	??_LCD_Set_Cursor
 12129  0035' 0805'              	movf	??_LCD_Set_Cursor,w
 12130  0036' 0089'              	movwf	LCD_Set_Cursor@w
 12131                           
 12132                           ;lcd.c: 102: LCD_Cmd(z);
 12133  0037' 0808'              	movf	LCD_Set_Cursor@z,w
 12134  0038' 3180' 2000' 3180'  	fcall	_LCD_Cmd
 12135                           
 12136                           ;lcd.c: 103: LCD_Cmd(w);
 12137  003B' 0809'              	movf	LCD_Set_Cursor@w,w
 12138  003C' 3180' 2000'        	fcall	_LCD_Cmd
 12139  003E' 0008               	return
 12140  003F'                    __end_of_LCD_Set_Cursor:	
 12141                           
 12142                           	psect	text34
 12143  0000'                    __ptext34:	
 12144 ;; *************** function _LCD_Cmd *****************
 12145 ;; Defined at:
 12146 ;;		line 65 in file "lcd.c"
 12147 ;; Parameters:    Size  Location     Type
 12148 ;;  a               1    wreg     unsigned char 
 12149 ;; Auto vars:     Size  Location     Type
 12150 ;;  a               1    3[COMMON] unsigned char 
 12151 ;; Return value:  Size  Location     Type
 12152 ;;                  1    wreg      void 
 12153 ;; Registers used:
 12154 ;;		wreg, status,2, status,0, pclath, cstack
 12155 ;; Tracked objects:
 12156 ;;		On entry : 0/0
 12157 ;;		On exit  : 0/0
 12158 ;;		Unchanged: 0/0
 12159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12163 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12164 ;;Total ram usage:        3 bytes
 12165 ;; Hardware stack levels used:    1
 12166 ;; Hardware stack levels required when called:    1
 12167 ;; This function calls:
 12168 ;;		_LCD_Port
 12169 ;; This function is called by:
 12170 ;;		_InitCustomChars
 12171 ;;		_LCD_Clear
 12172 ;;		_LCD_Set_Cursor
 12173 ;;		_LCD_Init
 12174 ;; This function uses a non-reentrant model
 12175 ;;
 12176                           
 12177                           
 12178                           ;psect for function _LCD_Cmd
 12179  0000'                    _LCD_Cmd:	
 12180                           
 12181                           ;incstack = 0
 12182                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12183                           ;LCD_Cmd@a stored from wreg
 12184  0000' 0083'              	movwf	LCD_Cmd@a
 12185                           
 12186                           ;lcd.c: 67: RA0 = 0;
 12187  0001' 0020               	movlb	0	; select bank0
 12188  0002' 100C               	bcf	12,0	;volatile
 12189                           
 12190                           ;lcd.c: 68: LCD_Port(a);
 12191  0003' 0803'              	movf	LCD_Cmd@a,w
 12192  0004' 3180' 2000' 3180'  	fcall	_LCD_Port
 12193                           
 12194                           ;lcd.c: 69: RA2 = 1;
 12195  0007' 0020               	movlb	0	; select bank0
 12196  0008' 150C               	bsf	12,2	;volatile
 12197                           
 12198                           ;lcd.c: 70: RA2 = 0;
 12199  0009' 110C               	bcf	12,2	;volatile
 12200                           
 12201                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12202  000A' 302A               	movlw	42
 12203  000B' 0082'              	movwf	??_LCD_Cmd+1
 12204  000C' 308D               	movlw	141
 12205  000D' 0081'              	movwf	??_LCD_Cmd
 12206  000E'                    u3537:	
 12207  000E' 0B81'              	decfsz	??_LCD_Cmd,f
 12208  000F' 2800'              	goto	u3537
 12209  0010' 0B82'              	decfsz	??_LCD_Cmd+1,f
 12210  0011' 2800'              	goto	u3537
 12211  0012' 3200               	nop2
 12212  0013' 0008               	return
 12213  0014'                    __end_of_LCD_Cmd:	
 12214                           
 12215                           	psect	text35
 12216  0000'                    __ptext35:	
 12217 ;; *************** function _LCD_Port *****************
 12218 ;; Defined at:
 12219 ;;		line 41 in file "lcd.c"
 12220 ;; Parameters:    Size  Location     Type
 12221 ;;  a               1    wreg     unsigned char 
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;  a               1    0[COMMON] unsigned char 
 12224 ;; Return value:  Size  Location     Type
 12225 ;;                  1    wreg      void 
 12226 ;; Registers used:
 12227 ;;		wreg
 12228 ;; Tracked objects:
 12229 ;;		On entry : 0/0
 12230 ;;		On exit  : 0/0
 12231 ;;		Unchanged: 0/0
 12232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12237 ;;Total ram usage:        1 bytes
 12238 ;; Hardware stack levels used:    1
 12239 ;; This function calls:
 12240 ;;		Nothing
 12241 ;; This function is called by:
 12242 ;;		_LCD_Cmd
 12243 ;;		_LCD_Init
 12244 ;;		_LCD_Write_Char
 12245 ;; This function uses a non-reentrant model
 12246 ;;
 12247                           
 12248                           
 12249                           ;psect for function _LCD_Port
 12250  0000'                    _LCD_Port:	
 12251                           
 12252                           ;incstack = 0
 12253                           ; Regs used in _LCD_Port: [wreg]
 12254                           ;LCD_Port@a stored from wreg
 12255  0000' 0080'              	movwf	LCD_Port@a
 12256                           
 12257                           ;lcd.c: 43: if(a & 1)
 12258  0001' 1C00'              	btfss	LCD_Port@a,0
 12259  0002' 2800'              	goto	l28
 12260                           
 12261                           ;lcd.c: 44: RA7 = 1;
 12262  0003' 0020               	movlb	0	; select bank0
 12263  0004' 178C               	bsf	12,7	;volatile
 12264  0005' 2800'              	goto	l1983
 12265  0006'                    l28:	
 12266                           
 12267                           ;lcd.c: 45: else
 12268                           ;lcd.c: 46: RA7 = 0;
 12269  0006' 0020               	movlb	0	; select bank0
 12270  0007' 138C               	bcf	12,7	;volatile
 12271  0008'                    l1983:	
 12272                           
 12273                           ;lcd.c: 48: if(a & 2)
 12274  0008' 1C80'              	btfss	LCD_Port@a,1
 12275  0009' 2800'              	goto	l30
 12276                           
 12277                           ;lcd.c: 49: RA6 = 1;
 12278  000A' 170C               	bsf	12,6	;volatile
 12279  000B' 2800'              	goto	l1987
 12280  000C'                    l30:	
 12281                           
 12282                           ;lcd.c: 50: else
 12283                           ;lcd.c: 51: RA6 = 0;
 12284  000C' 130C               	bcf	12,6	;volatile
 12285  000D'                    l1987:	
 12286                           
 12287                           ;lcd.c: 53: if(a & 4)
 12288  000D' 1D00'              	btfss	LCD_Port@a,2
 12289  000E' 2800'              	goto	l32
 12290                           
 12291                           ;lcd.c: 54: RC0 = 1;
 12292  000F' 140E               	bsf	14,0	;volatile
 12293  0010' 2800'              	goto	l1991
 12294  0011'                    l32:	
 12295                           
 12296                           ;lcd.c: 55: else
 12297                           ;lcd.c: 56: RC0 = 0;
 12298  0011' 100E               	bcf	14,0	;volatile
 12299  0012'                    l1991:	
 12300                           
 12301                           ;lcd.c: 58: if(a & 8)
 12302  0012' 1D80'              	btfss	LCD_Port@a,3
 12303  0013' 2800'              	goto	l34
 12304                           
 12305                           ;lcd.c: 59: RC1 = 1;
 12306  0014' 148E               	bsf	14,1	;volatile
 12307  0015' 0008               	return
 12308  0016'                    l34:	
 12309                           
 12310                           ;lcd.c: 60: else
 12311                           ;lcd.c: 61: RC1 = 0;
 12312  0016' 108E               	bcf	14,1	;volatile
 12313  0017' 0008               	return
 12314  0018'                    __end_of_LCD_Port:	
 12315  007E                     btemp	set	126	;btemp
 12316  007E                     wtemp	set	126
 12317  007E                     wtemp0	set	126
 12318  0080                     wtemp1	set	128
 12319  0082                     wtemp2	set	130
 12320  0084                     wtemp3	set	132
 12321  0086                     wtemp4	set	134
 12322  0088                     wtemp5	set	136
 12323  007F                     wtemp6	set	127
 12324  007E                     ttemp	set	126
 12325  007E                     ttemp0	set	126
 12326  0081                     ttemp1	set	129
 12327  0084                     ttemp2	set	132
 12328  0087                     ttemp3	set	135
 12329  007F                     ttemp4	set	127
 12330  007E                     ltemp	set	126
 12331  007E                     ltemp0	set	126
 12332  0082                     ltemp1	set	130
 12333  0086                     ltemp2	set	134
 12334  0080                     ltemp3	set	128


Data Sizes:
    Strings     46
    Constant    27
    Data        36
    BSS         129
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     41      77
    BANK2            80     80      80
    BANK3            80     12      59
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           48      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[16]), STR_2(CODE[8]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _PID_Calculate->___wmul
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->___fttol
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    ___fttol->_tempCalc

Critical Paths under _main in BANK1

    _main->___fttol

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               132   132      0   39087
                                             77 BANK0      3     3      0
                                             10 BANK1     31    31      0
                                              0 BANK2     80    80      0
                                              0 BANK3     12    12      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___fttol
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   30234
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   15955
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7209
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1816
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             73 BANK0      4     0      4
                                              0 BANK1     10    10      0
                           _tempCalc (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1090
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     940
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     480
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    1911
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     645
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   ___fttol
     _tempCalc (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _frexp
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     29      4D       7       96.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      C      3B      11       73.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     186      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              30      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     186      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Apr 04 16:24:40 2018

        __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000                               l30 000C  
                             l32 0011                               l34 0016                               l28 0006  
                             _Kd 0000                               _Ki 0002                               _Kp 0004  
                   ___awdiv@sign 0006              ___wmul@multiplicand 0002                     ___ftadd@exp1 002C  
                   ___ftadd@exp2 002B                      __CFG_LVP$ON 0000                     ___ftadd@sign 002A  
                            l231 00C8                              l232 00DF                              l229 0090  
                            l344 01EF                              l530 0011                              l346 0216  
                            l288 0007                              l475 0008                              l643 0045  
                            l644 004D                              l636 0032                              l727 0083  
                            l667 009F                              _GIE 005F                              _RA0 0060  
                            _RB0 0068                              _RA2 0062                              _RB1 0069  
                            _RC0 0070                              _RB2 006A                              _RC1 0071  
                            _RA6 0066                              _RA7 0067                     __CFG_CPD$OFF 0000  
                            _key 001B                              _log 0000                              _set 0000* 
                __end_of_ADCRead 000E                     ___awmod@sign 0006                  _TMR2_Initialize 0000  
                   __CFG_BORV$LO 0000                              wreg 0009                      main@analogs 0006  
                __end_of_LCD_Cmd 0014                     __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 001A  
                 _LCD_Set_Cursor 0000                     ___ftdiv@sign 001F                             l2015 0028  
                           l2103 0068                             l2025 003E                             l2043 006B  
                           l2019 002F                             l2115 0084                             l2107 0070  
                           l2061 00B1                             l2045 0075                             l2037 0058  
                           l2055 0091                             l2047 007A                             l2119 008C  
                           l2065 00C3                             l2057 009B                             l2049 007E  
                           l2217 0059                             l2235 001E                             l2403 0032  
                           l2075 00DE                             l2091 002D                             l2229 000D  
                           l2421 0079                             l2413 0060                             l2405 0040  
                           l2085 0017                             l2503 0040                             l2167 000A  
                           l2175 0016                             l2433 000A                             l2417 006B  
                           l2513 0017                             l2451 0029                             l2179 002C  
                           l2363 0032                             l2461 0044                             l2613 0059  
                           l2541 0087                             l2533 006E                             l2357 001F  
                           l2439 0015                             l2631 00B5                             l2615 005E  
                           l2607 0028                             l2711 00A7                             l2519 002D  
                           l2199 0012                             l2465 004C                             l2457 003B  
                           l2449 001D                             l2481 0011                             l2625 007C  
                           l2617 0067                             l2609 0055                             l2713 00AA  
                           l2553 0008                             l2491 0023                             l2627 00A8  
                           l2619 0078                             l2395 0022                             l2477 000A  
                           l2901 0196                             l2567 0020                             l2495 002F  
                           l2583 0002                             l1951 0008                             l2911 01AC  
                           l2489 0017                             l2737 0119                             l2499 0038  
                           l2691 0036                             l1955 000F                             l2915 01DD  
                           l2907 01A7                             l2923 01F1                             l2597 0021  
                           l2765 001F                             l1965 0037                             l1957 0019  
                           l2933 0218                             l1991 0012                             l1983 0008  
                           l2695 0040                             l2791 0079                             l2783 005C  
                           l1967 003F                             l1959 001E                             l2919 01E5  
                           l2855 0072                             l2689 0033                             l2793 0087  
                           l2785 006B                             l2945 0241                             l2929 0207  
                           l1987 000D                             l2939 021E                             l1997 0002  
                           l2797 0095                             l2957 0297                             l2897 0190  
                           ?_log 0037                             STR_1 0044                             STR_2 003C  
                           STR_3 002C                             STR_4 001B                             u2015 006C  
                           u3005 00A7                             u2045 007F                             _LATA 0016  
                           _LATB 0017                             u3015 00EF                             u2215 008D  
                           _LATC 0018                             u3105 002C                             u3025 0109  
                           u2225 0093                             u2145 0039                             u2330 002F  
                           u2075 0092                             u2155 0049                             u2245 0010  
                           u3045 0125                             u3135 005D                             u2415 0035  
                           u2175 0071                             u2185 0077                             _T2PR 028D  
                           u2515 0020                             u2435 0041                             u1715 0014  
                           u3165 007A                             u2445 0055                             u3245 01C2  
                           u3190 0029                             u2535 002A                             u2615 001A  
                           u3407 003A                             u2455 0061                             u1735 002D  
                           u3255 01DB                             u2545 0034                             u3417 000B  
                           u2705 004F                             u2810 000B                             u2555 003C  
                           u2635 0029                             u3507 0082                             u3427 0019  
                           u1755 003A                             u2715 006F                             u3275 0202  
                           u3517 001C                             u2645 0030                             u3437 0024  
                           u2725 007E                             u3285 0211                             u3527 0028  
                           u3447 002E                             u2735 0088                             u3537 000E  
                           u1865 0009                             u2905 000F                             u3457 0038  
                           u3377 0068                             u1875 000E                             u2915 002B  
                           u3467 0046                             u3387 001B                             u1795 0054  
                           u2925 003C                             u3477 0054                             u3397 002B  
                           u2775 000C                             u2935 006A                             u3487 0064  
                           u2695 003F                             u2945 0089                             u3497 0073  
                           u1985 0059                             u2795 002B                             u2875 0096  
                           u2955 009D                             u2965 00C1                             u2975 00D5  
                           u2985 0016                             u2995 0069              tempCalc@analogValue 003D  
                           _WPUA 0F39                             _WPUB 0F44                             _WPUC 0F4F  
                           _WPUE 0F65                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
              ?_LCD_Write_String 0005                             _main 0000                     ___ftpack@arg 0000  
             __size_of_LCD_Clear 0008                     ___ftpack@exp 0003                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           log@x 0037                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 0000*              ??_LCD_Write_String 0007                             ttemp 007E  
                           wtemp 007E                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 000E                    _LCD_Write_Int 0000                     ___ftmul@sign 000F  
                   ___fttol@exp1 0009                            ??_log 003A                     ___fttol@lval 0005  
               __end_of_LCD_Init 0087                 __end_of_LCD_Port 0018   __size_of_OSCILLATOR_Initialize 0009  
  __end_of_OSCILLATOR_Initialize 0009                  __end_of___aldiv 0082                            _ADACQ 009D  
                          _ADCAP 009B                            _ADACT 0099                            ?_main 0000  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 0051                            _ADPRE 009C                  __end_of___ftadd 00F6  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0045                            _ADRPT 010D  
                __end_of___ftdiv 00A9                  __end_of___ftmul 00B4                  ___awdiv@divisor 0000  
                __end_of___ftsub 001E                  __end_of___fttol 00A5                            _T2CON 028E  
                          _LATC2 00C2                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0005                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
         __end_of_LCD_Set_Cursor 003F                    ___awtoft@sign 000D                            _frexp 0000  
                          _errno 0004                            _error 0006                    ___ftpack@sign 0004  
                          _timer 0018                            main@j 000B                            main@x 004F  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F                 InitCustomChars@i 0006  
                 ?_LCD_Write_Int 0009                   _LCD_Write_Char 0000                  __initialization 0000  
                    log@exponent 003B                     __end_of_main 029D                readAnalog@channel 0006  
        __end_of_TMR2_Initialize 000E                        ??_ADCRead 0003                    main@tPadCount 0018  
                         ??_main 000A                    ___fttol@sign1 0004                __end_of_LCD_Clear 0008  
                      ??_LCD_Cmd 0001                  ?_LCD_Set_Cursor 0004                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                         ?_frexp 0000                           _ADLTHH 010F                           _ADLTHL 010E  
                         _ADRESH 008D                           _ADRESL 008C                           _ADSTAT 0097  
                         _ADUTHH 0111                 ___awdiv@dividend 0002                           _ADUTHL 0110  
               __end_of___awtoft 0020                           _ANSELA 0F38                           _ANSELB 0F43  
                         _ANSELC 0F4E                 __end_of___ftpack 0064                           _RC3PPS 0F23  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                           _OSCFRQ 0893  
         __end_of_LCD_Write_Char 002C                   __CFG_PWRTE$OFF 0000                           _Result 0000  
                   _CCPTMRS1bits 021F                           ___ftge 0000           LCD_Write_Int@numPlaces 000C  
                      ??___aldiv 0008                           ___wmul 0000                        ??___awdiv 0004  
                      ??___ftadd 0026                   __CFG_STVREN$ON 0000                        ??___awmod 0004  
                 _PWM_Initialize 0000                        ??___ftdiv 0016                        ??___ftmul 0006  
                      ??___ftsub 000E                        ??___fttol 0000           main@currentTemperature 0027  
               ___awdiv@quotient 0007                  ___awmod@divisor 0000                  ___awmod@counter 0005  
                         _totals 0000            ___ftmul@f3_as_product 000B                 __end_of_tempCalc 0115  
                _ADCC_Initialize 0000                 LCD_Write_Int@str 0005                  _InitCustomChars 0000  
                LCD_Set_Cursor@w 0009                  LCD_Set_Cursor@x 0007                  LCD_Set_Cursor@y 0004  
                LCD_Set_Cursor@z 0008                    _pidIntegrated 000E         readAnalog@analog_channel 0009  
              _SYSTEM_Initialize 0000                 __end_oflog@coeff 001B          __end_of__initialization 0047  
                      ?_LCD_Init 0000                        ?_LCD_Port 0000                       ___ftadd@f1 0020  
                     ___ftadd@f2 0023                  _derivativeValue 0002                       ___ftge@ff1 0000  
                     ___ftge@ff2 0003                  ??_LCD_Write_Int 0000               ?_SYSTEM_Initialize 0000  
                   eval_poly@res 0034                       ___ftdiv@f1 0013                       ___ftdiv@f2 0010  
                     ___ftdiv@f3 001B                  ?_LCD_Write_Char 0000                    LCD_Init@style 0007  
                     ___awtoft@c 0008                       ___ftmul@f1 0000                       ___ftmul@f2 0003  
         __end_of_PWM_Initialize 000B                       ___ftsub@f1 0030                       ___ftsub@f2 002D  
                     ___fttol@f1 0049                   __pcstackCOMMON 0000                        LCD_Port@a 0000  
                   __pidataBANK1 0000                     __pidataBANK3 0000              ??_SYSTEM_Initialize 0008  
                  __end_of_frexp 003B                 ?_TMR2_Initialize 0000      __size_of_PWM7_LoadDutyValue 0016  
                        ??_frexp 0004        __end_of_SYSTEM_Initialize 0042                       __pbssBANK1 0000  
                     __pbssBANK3 0000                       __pbssBANK4 0000               __size_of_eval_poly 0060  
                     ??_LCD_Init 0004                       ??_LCD_Port 0000           __size_of_PID_Calculate 00E5  
                     _delayCount 001A                  ?_PWM_Initialize 0000                       __pmaintext 0000  
                        ?___ftge 0000                          ?___wmul 0000                  __CFG_PPS1WAY$ON 0000  
        __end_of_ADCC_Initialize 001A                          _ADCRead 0000        __size_of_LCD_Write_String 001A  
                      ?___awtoft 0008                        ?___ftpack 0000                          _ADSTPTH 0113  
                        _ADSTPTL 0112         __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000  
        __end_of_InitCustomChars 0026                          _LCD_Cmd 0000                   main@holdOutput 001E  
               main@lidOpenCount 001F                          _OSCCON1 088D                          _OSCCON3 088F  
                        _OSCTUNE 0892                          _PWM7DCH 0391                          _PWM7DCL 0390  
                        _PWM7CON 0392                          _PPSLOCK 0E8F                   main@dutyCycle6 0004  
                 main@dutyCycle7 0021            PID_Calculate@setpoint 0006                        ?_tempCalc 003D  
                     _readAnalog 0000                          ___aldiv 0000                          ___cgram 0000  
                __size_of___ftge 003B                          ___awdiv 0000                          ___ftadd 0000  
                        ___awmod 0000                          ___ftdiv 0000                  __size_of___wmul 001B  
                        ___ftmul 0000                          ___ftsub 0000                          ___fttol 0000  
                     _errorValue 0008                       ??___awtoft 000B                       ??___ftpack 0005  
              __end_of_eval_poly 0060                 ??_LCD_Set_Cursor 0005                          __ptext1 0000  
                        __ptext2 0000                          __ptext3 0000                          __ptext4 0000  
                        __ptext5 0000                          __ptext6 0000                          __ptext7 0000  
                        __ptext8 0000                          __ptext9 0000                    _PID_Calculate 0000  
                 main@resetDelay 0017            _OSCILLATOR_Initialize 0000                        _T2CONbits 028E  
                   __size_of_log 00B0                 ___awmod@dividend 0002                   ADCRead@channel 0003  
               ___aldiv@dividend 0004         ??_PIN_MANAGER_Initialize 0000                          _samples 2350  
                        _testKey 001D                        _LCD_Clear 0000       __size_of_SYSTEM_Initialize 0042  
                        clrloop0 0001                          main@set 0019             end_of_initialization 0047  
                        init_ram 0000                          initloop 0001                       ??_tempCalc 000E  
               ___aldiv@quotient 0002                   main@startDelay 0016                LCD_Write_Int@sign 000D  
                     main@F13671 0000                       main@F13664 000D                     __pstringtext 0000  
               ?_ADCC_Initialize 0000            __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0006  
               ?_InitCustomChars 0000                       main@C_or_F 0015                       ?_LCD_Clear 0000  
               __CFG_FEXTOSC$OFF 0000                       main@bCount 004D                LCD_Write_String@a 0005  
              LCD_Write_String@i 0008                 ??_LCD_Write_Char 0001                       main@choice 0014  
                    ___ftdiv@exp 001E                __size_of_LCD_Init 0087                __size_of_LCD_Port 0018  
                     main@output 001C                      ___ftmul@exp 000A                      ?_readAnalog 0006  
                 __end_of___ftge 003B                   __end_of___wmul 001B                 _LCD_Write_String 0000  
         ?_OSCILLATOR_Initialize 0000              start_initialization 0000                       eval_poly@d 0030  
                     eval_poly@n 0032                       eval_poly@x 002D  __size_of_PIN_MANAGER_Initialize 0031  
                    __end_of_log 00B0                       frexp@value 0000                 ??_PWM_Initialize 0000  
       LCD_Write_Int@fieldLength 000B            __end_of_LCD_Write_Int 00C9                 __CFG_LPBOREN$OFF 0000  
                       ??___ftge 0006                tempCalc@steinhart 0046                         ??___wmul 0004  
                   _pidMaxOutput 001C                    _tempCalc$1008 0043                      __pdataBANK1 0000  
                    __pdataBANK3 0000                  ??_PID_Calculate 000A       __end_of_PWM7_LoadDutyValue 0016  
                LCD_Write_Char@a 0004                  LCD_Write_Char@y 0003                         ?_ADCRead 0000  
   PWM7_LoadDutyValue@dutyCycle7 0000                     _pidMinOutput 0010                         ?_LCD_Cmd 0000  
              __size_of___awtoft 0020                __size_of___ftpack 0064                      __pbssBIGRAM 2350  
                       LCD_Cmd@a 0003                        ___latbits 0002                    __pcstackBANK0 0000  
                  __pcstackBANK1 0000                    __pcstackBANK2 0000                    __pcstackBANK3 0000  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0004              __size_of_readAnalog 0142  
                   _pidPrevError 0012           _PIN_MANAGER_Initialize 0000                         ?___aldiv 0000  
              __size_of_tempCalc 0115                         ?___awdiv 0000                         ?___ftadd 0020  
                       ?___awmod 0000                         ?___ftdiv 0010                         ?___ftmul 0000  
                       ?___ftsub 002D                         ?___fttol 0049              main@lastTemperature 0023  
                      _eval_poly 0000                        _menuDelay 001C                   __size_of_frexp 003B  
                       _T2CLKCON 0290                  ___aldiv@divisor 0000                  ___aldiv@counter 0000  
                       _LCD_Init 0000                   ___wmul@product 0004                         _LCD_Port 0000  
                      clear_ram0 0000                         _PIE0bits 0716                         _PIR4bits 0710  
               __size_of_ADCRead 000E                       _ADCON0bits 0093                ___wmul@multiplier 0000  
                     ?_eval_poly 002D                 __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 001A  
              ??_TMR2_Initialize 0000                  readAnalog@value 000B                        frexp@eptr 0003  
                   ??_readAnalog 0008          ??_OSCILLATOR_Initialize 0000                   LCD_Write_Int@i 000C  
                 LCD_Write_Int@j 000A                 __size_of___aldiv 0082                 __size_of___awdiv 0051  
               __size_of___ftadd 00F6                 __size_of___awmod 0045                 __size_of___ftdiv 00A9  
               __size_of___ftmul 00B4                 __size_of___ftsub 001E                 __size_of___fttol 00A5  
                       ___awtoft 0000                         ___ftpack 0000                  main@pitSetpoint 001A  
       __size_of_ADCC_Initialize 001A                         _channels 0018                PID_Calculate@temp 0008  
                       __ptext10 0000                         __ptext11 0000                         __ptext20 0000  
                       __ptext12 0000                         __ptext21 0000                         __ptext13 0000  
                       __ptext30 0000                         __ptext22 0000                         __ptext14 0000  
                       __ptext31 0000                         __ptext23 0000                         __ptext15 0000  
                       __ptext32 0000                         __ptext24 0000                         __ptext16 0000  
                       __ptext33 0000                         __ptext25 0000                         __ptext17 0000  
                       __ptext34 0000                         __ptext26 0000                         __ptext18 0000  
                       __ptext35 0000                         __ptext27 0000                         __ptext19 0000  
                       __ptext28 0000                         __ptext29 0000               __end_of_readAnalog 0142  
        __size_of_LCD_Set_Cursor 003F                     _signPositive 0016                        tempCalc@R 0040  
       __size_of_InitCustomChars 0026                         _lastSign 000A              LCD_Write_Int@F13694 0008  
                       _pidCount 000C                    __size_of_main 029D                         _rangeSet 0010  
           __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0000                         main@loop 0020  
    PIN_MANAGER_Initialize@state 0000                         log@coeff 0000                      ??_eval_poly 000E  
                    _sampleIndex 0014               _PWM7_LoadDutyValue 0000               LCD_Write_Char@temp 0002  
        ?_PIN_MANAGER_Initialize 0000              ?_PWM7_LoadDutyValue 0000                main@outputSamples 0000  
              __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C  
           main@pidPeriodCounter 0025               LCD_Set_Cursor@temp 000A               LCD_Write_Int@value 0009  
          __end_of_PID_Calculate 00E5             ??_PWM7_LoadDutyValue 0002                     ___aldiv@sign 0001  
         __size_of_LCD_Write_Int 00C9                  main@outputIndex 000A   __end_of_PIN_MANAGER_Initialize 0031  
              ??_ADCC_Initialize 0000                  main@outputTotal 0000                ??_InitCustomChars 0005  
