

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat May 12 22:07:37 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x620,48
    60                           	dabs	1,0x5A8,72
    61                           	dabs	1,0x2378,0,_samples
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  001C                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0110                     	;# 
   118  0110                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0119                     	;# 
   130  0119                     	;# 
   131  0119                     	;# 
   132  011A                     	;# 
   133  011A                     	;# 
   134  011A                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011B                     	;# 
   140  011C                     	;# 
   141  011C                     	;# 
   142  011C                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011D                     	;# 
   146  011E                     	;# 
   147  011E                     	;# 
   148  011E                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  011F                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  018E                     	;# 
   157  018F                     	;# 
   158  0190                     	;# 
   159  0191                     	;# 
   160  0192                     	;# 
   161  0196                     	;# 
   162  0197                     	;# 
   163  0198                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  020C                     	;# 
   169  020D                     	;# 
   170  020E                     	;# 
   171  020F                     	;# 
   172  020F                     	;# 
   173  0210                     	;# 
   174  0210                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0218                     	;# 
   187  0219                     	;# 
   188  021A                     	;# 
   189  021B                     	;# 
   190  021B                     	;# 
   191  021C                     	;# 
   192  021C                     	;# 
   193  021D                     	;# 
   194  021D                     	;# 
   195  021E                     	;# 
   196  021F                     	;# 
   197  028C                     	;# 
   198  028C                     	;# 
   199  028D                     	;# 
   200  028D                     	;# 
   201  028E                     	;# 
   202  028F                     	;# 
   203  0290                     	;# 
   204  0290                     	;# 
   205  0291                     	;# 
   206  0292                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0293                     	;# 
   210  0294                     	;# 
   211  0295                     	;# 
   212  0296                     	;# 
   213  0296                     	;# 
   214  0297                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  0299                     	;# 
   219  029A                     	;# 
   220  029B                     	;# 
   221  029C                     	;# 
   222  029C                     	;# 
   223  029D                     	;# 
   224  030C                     	;# 
   225  030C                     	;# 
   226  030D                     	;# 
   227  030E                     	;# 
   228  030F                     	;# 
   229  0310                     	;# 
   230  0310                     	;# 
   231  0311                     	;# 
   232  0312                     	;# 
   233  0313                     	;# 
   234  0314                     	;# 
   235  0314                     	;# 
   236  0315                     	;# 
   237  0316                     	;# 
   238  0317                     	;# 
   239  0318                     	;# 
   240  0318                     	;# 
   241  0319                     	;# 
   242  031A                     	;# 
   243  031B                     	;# 
   244  031C                     	;# 
   245  031C                     	;# 
   246  031D                     	;# 
   247  031E                     	;# 
   248  031F                     	;# 
   249  038C                     	;# 
   250  038D                     	;# 
   251  038E                     	;# 
   252  0390                     	;# 
   253  0391                     	;# 
   254  0392                     	;# 
   255  040C                     	;# 
   256  040D                     	;# 
   257  040E                     	;# 
   258  040F                     	;# 
   259  0410                     	;# 
   260  0411                     	;# 
   261  0416                     	;# 
   262  0416                     	;# 
   263  0417                     	;# 
   264  0418                     	;# 
   265  0418                     	;# 
   266  0419                     	;# 
   267  041A                     	;# 
   268  041A                     	;# 
   269  041B                     	;# 
   270  041C                     	;# 
   271  041C                     	;# 
   272  041D                     	;# 
   273  041E                     	;# 
   274  041F                     	;# 
   275  048C                     	;# 
   276  048C                     	;# 
   277  048D                     	;# 
   278  048E                     	;# 
   279  048F                     	;# 
   280  048F                     	;# 
   281  0490                     	;# 
   282  0491                     	;# 
   283  0492                     	;# 
   284  0492                     	;# 
   285  0493                     	;# 
   286  0494                     	;# 
   287  0495                     	;# 
   288  0495                     	;# 
   289  0496                     	;# 
   290  0497                     	;# 
   291  0498                     	;# 
   292  0499                     	;# 
   293  049A                     	;# 
   294  049B                     	;# 
   295  049C                     	;# 
   296  049D                     	;# 
   297  050C                     	;# 
   298  050C                     	;# 
   299  050D                     	;# 
   300  050E                     	;# 
   301  050F                     	;# 
   302  050F                     	;# 
   303  0510                     	;# 
   304  0511                     	;# 
   305  0512                     	;# 
   306  0512                     	;# 
   307  0513                     	;# 
   308  0514                     	;# 
   309  0515                     	;# 
   310  0515                     	;# 
   311  0516                     	;# 
   312  0517                     	;# 
   313  0518                     	;# 
   314  0519                     	;# 
   315  051A                     	;# 
   316  051B                     	;# 
   317  051C                     	;# 
   318  051D                     	;# 
   319  058C                     	;# 
   320  058C                     	;# 
   321  058D                     	;# 
   322  058E                     	;# 
   323  058F                     	;# 
   324  058F                     	;# 
   325  0590                     	;# 
   326  0591                     	;# 
   327  0592                     	;# 
   328  0593                     	;# 
   329  060C                     	;# 
   330  060D                     	;# 
   331  060E                     	;# 
   332  060F                     	;# 
   333  0610                     	;# 
   334  0611                     	;# 
   335  0612                     	;# 
   336  0613                     	;# 
   337  0614                     	;# 
   338  0616                     	;# 
   339  0617                     	;# 
   340  0618                     	;# 
   341  0619                     	;# 
   342  061A                     	;# 
   343  061B                     	;# 
   344  061C                     	;# 
   345  061D                     	;# 
   346  061E                     	;# 
   347  068C                     	;# 
   348  068D                     	;# 
   349  068E                     	;# 
   350  068F                     	;# 
   351  0690                     	;# 
   352  0691                     	;# 
   353  0692                     	;# 
   354  0693                     	;# 
   355  0694                     	;# 
   356  070C                     	;# 
   357  070D                     	;# 
   358  070E                     	;# 
   359  070F                     	;# 
   360  0710                     	;# 
   361  0711                     	;# 
   362  0712                     	;# 
   363  0713                     	;# 
   364  0714                     	;# 
   365  0716                     	;# 
   366  0717                     	;# 
   367  0718                     	;# 
   368  0719                     	;# 
   369  071A                     	;# 
   370  071B                     	;# 
   371  071C                     	;# 
   372  071D                     	;# 
   373  071E                     	;# 
   374  0796                     	;# 
   375  0797                     	;# 
   376  0798                     	;# 
   377  0799                     	;# 
   378  079A                     	;# 
   379  079B                     	;# 
   380  080C                     	;# 
   381  080D                     	;# 
   382  080E                     	;# 
   383  080F                     	;# 
   384  0810                     	;# 
   385  0811                     	;# 
   386  0812                     	;# 
   387  0813                     	;# 
   388  0814                     	;# 
   389  081A                     	;# 
   390  081B                     	;# 
   391  081C                     	;# 
   392  081D                     	;# 
   393  081E                     	;# 
   394  081F                     	;# 
   395  088C                     	;# 
   396  088D                     	;# 
   397  088E                     	;# 
   398  088F                     	;# 
   399  0890                     	;# 
   400  0891                     	;# 
   401  0892                     	;# 
   402  0893                     	;# 
   403  0895                     	;# 
   404  0896                     	;# 
   405  0897                     	;# 
   406  0898                     	;# 
   407  0899                     	;# 
   408  089A                     	;# 
   409  089B                     	;# 
   410  090C                     	;# 
   411  090E                     	;# 
   412  090F                     	;# 
   413  091F                     	;# 
   414  091F                     	;# 
   415  098F                     	;# 
   416  098F                     	;# 
   417  0990                     	;# 
   418  0991                     	;# 
   419  0992                     	;# 
   420  0993                     	;# 
   421  0994                     	;# 
   422  0995                     	;# 
   423  0996                     	;# 
   424  0997                     	;# 
   425  0E0F                     	;# 
   426  0E10                     	;# 
   427  0E11                     	;# 
   428  0E12                     	;# 
   429  0E13                     	;# 
   430  0E14                     	;# 
   431  0E15                     	;# 
   432  0E16                     	;# 
   433  0E17                     	;# 
   434  0E18                     	;# 
   435  0E19                     	;# 
   436  0E1A                     	;# 
   437  0E1B                     	;# 
   438  0E1C                     	;# 
   439  0E1D                     	;# 
   440  0E1E                     	;# 
   441  0E1F                     	;# 
   442  0E20                     	;# 
   443  0E21                     	;# 
   444  0E22                     	;# 
   445  0E23                     	;# 
   446  0E24                     	;# 
   447  0E25                     	;# 
   448  0E26                     	;# 
   449  0E27                     	;# 
   450  0E28                     	;# 
   451  0E29                     	;# 
   452  0E2A                     	;# 
   453  0E2B                     	;# 
   454  0E2C                     	;# 
   455  0E2D                     	;# 
   456  0E2E                     	;# 
   457  0E2F                     	;# 
   458  0E30                     	;# 
   459  0E31                     	;# 
   460  0E32                     	;# 
   461  0E33                     	;# 
   462  0E34                     	;# 
   463  0E35                     	;# 
   464  0E36                     	;# 
   465  0E37                     	;# 
   466  0E8F                     	;# 
   467  0E90                     	;# 
   468  0E91                     	;# 
   469  0E92                     	;# 
   470  0E93                     	;# 
   471  0E94                     	;# 
   472  0E95                     	;# 
   473  0E96                     	;# 
   474  0E97                     	;# 
   475  0E9C                     	;# 
   476  0E9D                     	;# 
   477  0E9E                     	;# 
   478  0EA1                     	;# 
   479  0EA2                     	;# 
   480  0EA3                     	;# 
   481  0EA4                     	;# 
   482  0EA5                     	;# 
   483  0EA9                     	;# 
   484  0EAA                     	;# 
   485  0EAB                     	;# 
   486  0EAC                     	;# 
   487  0EB1                     	;# 
   488  0EB2                     	;# 
   489  0EB3                     	;# 
   490  0EB8                     	;# 
   491  0EB9                     	;# 
   492  0EBA                     	;# 
   493  0EBB                     	;# 
   494  0EBC                     	;# 
   495  0EBD                     	;# 
   496  0EBE                     	;# 
   497  0EC3                     	;# 
   498  0EC5                     	;# 
   499  0EC6                     	;# 
   500  0EC7                     	;# 
   501  0EC8                     	;# 
   502  0EC9                     	;# 
   503  0ECA                     	;# 
   504  0ECB                     	;# 
   505  0ECC                     	;# 
   506  0F10                     	;# 
   507  0F11                     	;# 
   508  0F12                     	;# 
   509  0F13                     	;# 
   510  0F14                     	;# 
   511  0F15                     	;# 
   512  0F16                     	;# 
   513  0F17                     	;# 
   514  0F18                     	;# 
   515  0F19                     	;# 
   516  0F1A                     	;# 
   517  0F1B                     	;# 
   518  0F1C                     	;# 
   519  0F1D                     	;# 
   520  0F1E                     	;# 
   521  0F1F                     	;# 
   522  0F20                     	;# 
   523  0F21                     	;# 
   524  0F22                     	;# 
   525  0F23                     	;# 
   526  0F24                     	;# 
   527  0F25                     	;# 
   528  0F26                     	;# 
   529  0F27                     	;# 
   530  0F38                     	;# 
   531  0F39                     	;# 
   532  0F3A                     	;# 
   533  0F3B                     	;# 
   534  0F3C                     	;# 
   535  0F3D                     	;# 
   536  0F3E                     	;# 
   537  0F3F                     	;# 
   538  0F40                     	;# 
   539  0F41                     	;# 
   540  0F43                     	;# 
   541  0F44                     	;# 
   542  0F45                     	;# 
   543  0F46                     	;# 
   544  0F47                     	;# 
   545  0F48                     	;# 
   546  0F49                     	;# 
   547  0F4A                     	;# 
   548  0F4B                     	;# 
   549  0F4C                     	;# 
   550  0F4E                     	;# 
   551  0F4F                     	;# 
   552  0F50                     	;# 
   553  0F51                     	;# 
   554  0F52                     	;# 
   555  0F53                     	;# 
   556  0F54                     	;# 
   557  0F55                     	;# 
   558  0F56                     	;# 
   559  0F57                     	;# 
   560  0F65                     	;# 
   561  0F68                     	;# 
   562  0F69                     	;# 
   563  0F6A                     	;# 
   564  0F6B                     	;# 
   565  0FE4                     	;# 
   566  0FE5                     	;# 
   567  0FE6                     	;# 
   568  0FE7                     	;# 
   569  0FE8                     	;# 
   570  0FE9                     	;# 
   571  0FEA                     	;# 
   572  0FEB                     	;# 
   573  0FED                     	;# 
   574  0FEE                     	;# 
   575  0FEF                     	;# 
   576  0000                     	;# 
   577  0001                     	;# 
   578  0002                     	;# 
   579  0003                     	;# 
   580  0004                     	;# 
   581  0005                     	;# 
   582  0006                     	;# 
   583  0007                     	;# 
   584  0008                     	;# 
   585  0009                     	;# 
   586  000A                     	;# 
   587  000B                     	;# 
   588  000C                     	;# 
   589  000D                     	;# 
   590  000E                     	;# 
   591  0010                     	;# 
   592  0011                     	;# 
   593  0012                     	;# 
   594  0013                     	;# 
   595  0016                     	;# 
   596  0017                     	;# 
   597  0018                     	;# 
   598  001C                     	;# 
   599  001C                     	;# 
   600  001D                     	;# 
   601  001D                     	;# 
   602  001E                     	;# 
   603  001F                     	;# 
   604  008C                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0090                     	;# 
   612  0091                     	;# 
   613  0093                     	;# 
   614  0094                     	;# 
   615  0095                     	;# 
   616  0096                     	;# 
   617  0097                     	;# 
   618  0098                     	;# 
   619  0099                     	;# 
   620  009A                     	;# 
   621  009B                     	;# 
   622  009C                     	;# 
   623  009D                     	;# 
   624  009E                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0110                     	;# 
   631  0110                     	;# 
   632  0111                     	;# 
   633  0112                     	;# 
   634  0112                     	;# 
   635  0113                     	;# 
   636  0114                     	;# 
   637  0114                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0116                     	;# 
   641  0117                     	;# 
   642  0119                     	;# 
   643  0119                     	;# 
   644  0119                     	;# 
   645  011A                     	;# 
   646  011A                     	;# 
   647  011A                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011B                     	;# 
   653  011C                     	;# 
   654  011C                     	;# 
   655  011C                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011D                     	;# 
   659  011E                     	;# 
   660  011E                     	;# 
   661  011E                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  011F                     	;# 
   667  018C                     	;# 
   668  018D                     	;# 
   669  018E                     	;# 
   670  018F                     	;# 
   671  0190                     	;# 
   672  0191                     	;# 
   673  0192                     	;# 
   674  0196                     	;# 
   675  0197                     	;# 
   676  0198                     	;# 
   677  0199                     	;# 
   678  019A                     	;# 
   679  019B                     	;# 
   680  019C                     	;# 
   681  020C                     	;# 
   682  020D                     	;# 
   683  020E                     	;# 
   684  020F                     	;# 
   685  020F                     	;# 
   686  0210                     	;# 
   687  0210                     	;# 
   688  0211                     	;# 
   689  0211                     	;# 
   690  0212                     	;# 
   691  0213                     	;# 
   692  0214                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0216                     	;# 
   696  0216                     	;# 
   697  0217                     	;# 
   698  0217                     	;# 
   699  0218                     	;# 
   700  0219                     	;# 
   701  021A                     	;# 
   702  021B                     	;# 
   703  021B                     	;# 
   704  021C                     	;# 
   705  021C                     	;# 
   706  021D                     	;# 
   707  021D                     	;# 
   708  021E                     	;# 
   709  021F                     	;# 
   710  028C                     	;# 
   711  028C                     	;# 
   712  028D                     	;# 
   713  028D                     	;# 
   714  028E                     	;# 
   715  028F                     	;# 
   716  0290                     	;# 
   717  0290                     	;# 
   718  0291                     	;# 
   719  0292                     	;# 
   720  0292                     	;# 
   721  0293                     	;# 
   722  0293                     	;# 
   723  0294                     	;# 
   724  0295                     	;# 
   725  0296                     	;# 
   726  0296                     	;# 
   727  0297                     	;# 
   728  0298                     	;# 
   729  0298                     	;# 
   730  0299                     	;# 
   731  0299                     	;# 
   732  029A                     	;# 
   733  029B                     	;# 
   734  029C                     	;# 
   735  029C                     	;# 
   736  029D                     	;# 
   737  030C                     	;# 
   738  030C                     	;# 
   739  030D                     	;# 
   740  030E                     	;# 
   741  030F                     	;# 
   742  0310                     	;# 
   743  0310                     	;# 
   744  0311                     	;# 
   745  0312                     	;# 
   746  0313                     	;# 
   747  0314                     	;# 
   748  0314                     	;# 
   749  0315                     	;# 
   750  0316                     	;# 
   751  0317                     	;# 
   752  0318                     	;# 
   753  0318                     	;# 
   754  0319                     	;# 
   755  031A                     	;# 
   756  031B                     	;# 
   757  031C                     	;# 
   758  031C                     	;# 
   759  031D                     	;# 
   760  031E                     	;# 
   761  031F                     	;# 
   762  038C                     	;# 
   763  038D                     	;# 
   764  038E                     	;# 
   765  0390                     	;# 
   766  0391                     	;# 
   767  0392                     	;# 
   768  040C                     	;# 
   769  040D                     	;# 
   770  040E                     	;# 
   771  040F                     	;# 
   772  0410                     	;# 
   773  0411                     	;# 
   774  0416                     	;# 
   775  0416                     	;# 
   776  0417                     	;# 
   777  0418                     	;# 
   778  0418                     	;# 
   779  0419                     	;# 
   780  041A                     	;# 
   781  041A                     	;# 
   782  041B                     	;# 
   783  041C                     	;# 
   784  041C                     	;# 
   785  041D                     	;# 
   786  041E                     	;# 
   787  041F                     	;# 
   788  048C                     	;# 
   789  048C                     	;# 
   790  048D                     	;# 
   791  048E                     	;# 
   792  048F                     	;# 
   793  048F                     	;# 
   794  0490                     	;# 
   795  0491                     	;# 
   796  0492                     	;# 
   797  0492                     	;# 
   798  0493                     	;# 
   799  0494                     	;# 
   800  0495                     	;# 
   801  0495                     	;# 
   802  0496                     	;# 
   803  0497                     	;# 
   804  0498                     	;# 
   805  0499                     	;# 
   806  049A                     	;# 
   807  049B                     	;# 
   808  049C                     	;# 
   809  049D                     	;# 
   810  050C                     	;# 
   811  050C                     	;# 
   812  050D                     	;# 
   813  050E                     	;# 
   814  050F                     	;# 
   815  050F                     	;# 
   816  0510                     	;# 
   817  0511                     	;# 
   818  0512                     	;# 
   819  0512                     	;# 
   820  0513                     	;# 
   821  0514                     	;# 
   822  0515                     	;# 
   823  0515                     	;# 
   824  0516                     	;# 
   825  0517                     	;# 
   826  0518                     	;# 
   827  0519                     	;# 
   828  051A                     	;# 
   829  051B                     	;# 
   830  051C                     	;# 
   831  051D                     	;# 
   832  058C                     	;# 
   833  058C                     	;# 
   834  058D                     	;# 
   835  058E                     	;# 
   836  058F                     	;# 
   837  058F                     	;# 
   838  0590                     	;# 
   839  0591                     	;# 
   840  0592                     	;# 
   841  0593                     	;# 
   842  060C                     	;# 
   843  060D                     	;# 
   844  060E                     	;# 
   845  060F                     	;# 
   846  0610                     	;# 
   847  0611                     	;# 
   848  0612                     	;# 
   849  0613                     	;# 
   850  0614                     	;# 
   851  0616                     	;# 
   852  0617                     	;# 
   853  0618                     	;# 
   854  0619                     	;# 
   855  061A                     	;# 
   856  061B                     	;# 
   857  061C                     	;# 
   858  061D                     	;# 
   859  061E                     	;# 
   860  068C                     	;# 
   861  068D                     	;# 
   862  068E                     	;# 
   863  068F                     	;# 
   864  0690                     	;# 
   865  0691                     	;# 
   866  0692                     	;# 
   867  0693                     	;# 
   868  0694                     	;# 
   869  070C                     	;# 
   870  070D                     	;# 
   871  070E                     	;# 
   872  070F                     	;# 
   873  0710                     	;# 
   874  0711                     	;# 
   875  0712                     	;# 
   876  0713                     	;# 
   877  0714                     	;# 
   878  0716                     	;# 
   879  0717                     	;# 
   880  0718                     	;# 
   881  0719                     	;# 
   882  071A                     	;# 
   883  071B                     	;# 
   884  071C                     	;# 
   885  071D                     	;# 
   886  071E                     	;# 
   887  0796                     	;# 
   888  0797                     	;# 
   889  0798                     	;# 
   890  0799                     	;# 
   891  079A                     	;# 
   892  079B                     	;# 
   893  080C                     	;# 
   894  080D                     	;# 
   895  080E                     	;# 
   896  080F                     	;# 
   897  0810                     	;# 
   898  0811                     	;# 
   899  0812                     	;# 
   900  0813                     	;# 
   901  0814                     	;# 
   902  081A                     	;# 
   903  081B                     	;# 
   904  081C                     	;# 
   905  081D                     	;# 
   906  081E                     	;# 
   907  081F                     	;# 
   908  088C                     	;# 
   909  088D                     	;# 
   910  088E                     	;# 
   911  088F                     	;# 
   912  0890                     	;# 
   913  0891                     	;# 
   914  0892                     	;# 
   915  0893                     	;# 
   916  0895                     	;# 
   917  0896                     	;# 
   918  0897                     	;# 
   919  0898                     	;# 
   920  0899                     	;# 
   921  089A                     	;# 
   922  089B                     	;# 
   923  090C                     	;# 
   924  090E                     	;# 
   925  090F                     	;# 
   926  091F                     	;# 
   927  091F                     	;# 
   928  098F                     	;# 
   929  098F                     	;# 
   930  0990                     	;# 
   931  0991                     	;# 
   932  0992                     	;# 
   933  0993                     	;# 
   934  0994                     	;# 
   935  0995                     	;# 
   936  0996                     	;# 
   937  0997                     	;# 
   938  0E0F                     	;# 
   939  0E10                     	;# 
   940  0E11                     	;# 
   941  0E12                     	;# 
   942  0E13                     	;# 
   943  0E14                     	;# 
   944  0E15                     	;# 
   945  0E16                     	;# 
   946  0E17                     	;# 
   947  0E18                     	;# 
   948  0E19                     	;# 
   949  0E1A                     	;# 
   950  0E1B                     	;# 
   951  0E1C                     	;# 
   952  0E1D                     	;# 
   953  0E1E                     	;# 
   954  0E1F                     	;# 
   955  0E20                     	;# 
   956  0E21                     	;# 
   957  0E22                     	;# 
   958  0E23                     	;# 
   959  0E24                     	;# 
   960  0E25                     	;# 
   961  0E26                     	;# 
   962  0E27                     	;# 
   963  0E28                     	;# 
   964  0E29                     	;# 
   965  0E2A                     	;# 
   966  0E2B                     	;# 
   967  0E2C                     	;# 
   968  0E2D                     	;# 
   969  0E2E                     	;# 
   970  0E2F                     	;# 
   971  0E30                     	;# 
   972  0E31                     	;# 
   973  0E32                     	;# 
   974  0E33                     	;# 
   975  0E34                     	;# 
   976  0E35                     	;# 
   977  0E36                     	;# 
   978  0E37                     	;# 
   979  0E8F                     	;# 
   980  0E90                     	;# 
   981  0E91                     	;# 
   982  0E92                     	;# 
   983  0E93                     	;# 
   984  0E94                     	;# 
   985  0E95                     	;# 
   986  0E96                     	;# 
   987  0E97                     	;# 
   988  0E9C                     	;# 
   989  0E9D                     	;# 
   990  0E9E                     	;# 
   991  0EA1                     	;# 
   992  0EA2                     	;# 
   993  0EA3                     	;# 
   994  0EA4                     	;# 
   995  0EA5                     	;# 
   996  0EA9                     	;# 
   997  0EAA                     	;# 
   998  0EAB                     	;# 
   999  0EAC                     	;# 
  1000  0EB1                     	;# 
  1001  0EB2                     	;# 
  1002  0EB3                     	;# 
  1003  0EB8                     	;# 
  1004  0EB9                     	;# 
  1005  0EBA                     	;# 
  1006  0EBB                     	;# 
  1007  0EBC                     	;# 
  1008  0EBD                     	;# 
  1009  0EBE                     	;# 
  1010  0EC3                     	;# 
  1011  0EC5                     	;# 
  1012  0EC6                     	;# 
  1013  0EC7                     	;# 
  1014  0EC8                     	;# 
  1015  0EC9                     	;# 
  1016  0ECA                     	;# 
  1017  0ECB                     	;# 
  1018  0ECC                     	;# 
  1019  0F10                     	;# 
  1020  0F11                     	;# 
  1021  0F12                     	;# 
  1022  0F13                     	;# 
  1023  0F14                     	;# 
  1024  0F15                     	;# 
  1025  0F16                     	;# 
  1026  0F17                     	;# 
  1027  0F18                     	;# 
  1028  0F19                     	;# 
  1029  0F1A                     	;# 
  1030  0F1B                     	;# 
  1031  0F1C                     	;# 
  1032  0F1D                     	;# 
  1033  0F1E                     	;# 
  1034  0F1F                     	;# 
  1035  0F20                     	;# 
  1036  0F21                     	;# 
  1037  0F22                     	;# 
  1038  0F23                     	;# 
  1039  0F24                     	;# 
  1040  0F25                     	;# 
  1041  0F26                     	;# 
  1042  0F27                     	;# 
  1043  0F38                     	;# 
  1044  0F39                     	;# 
  1045  0F3A                     	;# 
  1046  0F3B                     	;# 
  1047  0F3C                     	;# 
  1048  0F3D                     	;# 
  1049  0F3E                     	;# 
  1050  0F3F                     	;# 
  1051  0F40                     	;# 
  1052  0F41                     	;# 
  1053  0F43                     	;# 
  1054  0F44                     	;# 
  1055  0F45                     	;# 
  1056  0F46                     	;# 
  1057  0F47                     	;# 
  1058  0F48                     	;# 
  1059  0F49                     	;# 
  1060  0F4A                     	;# 
  1061  0F4B                     	;# 
  1062  0F4C                     	;# 
  1063  0F4E                     	;# 
  1064  0F4F                     	;# 
  1065  0F50                     	;# 
  1066  0F51                     	;# 
  1067  0F52                     	;# 
  1068  0F53                     	;# 
  1069  0F54                     	;# 
  1070  0F55                     	;# 
  1071  0F56                     	;# 
  1072  0F57                     	;# 
  1073  0F65                     	;# 
  1074  0F68                     	;# 
  1075  0F69                     	;# 
  1076  0F6A                     	;# 
  1077  0F6B                     	;# 
  1078  0FE4                     	;# 
  1079  0FE5                     	;# 
  1080  0FE6                     	;# 
  1081  0FE7                     	;# 
  1082  0FE8                     	;# 
  1083  0FE9                     	;# 
  1084  0FEA                     	;# 
  1085  0FEB                     	;# 
  1086  0FED                     	;# 
  1087  0FEE                     	;# 
  1088  0FEF                     	;# 
  1089  0000                     	;# 
  1090  0001                     	;# 
  1091  0002                     	;# 
  1092  0003                     	;# 
  1093  0004                     	;# 
  1094  0005                     	;# 
  1095  0006                     	;# 
  1096  0007                     	;# 
  1097  0008                     	;# 
  1098  0009                     	;# 
  1099  000A                     	;# 
  1100  000B                     	;# 
  1101  000C                     	;# 
  1102  000D                     	;# 
  1103  000E                     	;# 
  1104  0010                     	;# 
  1105  0011                     	;# 
  1106  0012                     	;# 
  1107  0013                     	;# 
  1108  0016                     	;# 
  1109  0017                     	;# 
  1110  0018                     	;# 
  1111  001C                     	;# 
  1112  001C                     	;# 
  1113  001D                     	;# 
  1114  001D                     	;# 
  1115  001E                     	;# 
  1116  001F                     	;# 
  1117  008C                     	;# 
  1118  008C                     	;# 
  1119  008D                     	;# 
  1120  008E                     	;# 
  1121  008E                     	;# 
  1122  008F                     	;# 
  1123  0090                     	;# 
  1124  0090                     	;# 
  1125  0091                     	;# 
  1126  0093                     	;# 
  1127  0094                     	;# 
  1128  0095                     	;# 
  1129  0096                     	;# 
  1130  0097                     	;# 
  1131  0098                     	;# 
  1132  0099                     	;# 
  1133  009A                     	;# 
  1134  009B                     	;# 
  1135  009C                     	;# 
  1136  009D                     	;# 
  1137  009E                     	;# 
  1138  010C                     	;# 
  1139  010D                     	;# 
  1140  010E                     	;# 
  1141  010E                     	;# 
  1142  010F                     	;# 
  1143  0110                     	;# 
  1144  0110                     	;# 
  1145  0111                     	;# 
  1146  0112                     	;# 
  1147  0112                     	;# 
  1148  0113                     	;# 
  1149  0114                     	;# 
  1150  0114                     	;# 
  1151  0115                     	;# 
  1152  0116                     	;# 
  1153  0116                     	;# 
  1154  0117                     	;# 
  1155  0119                     	;# 
  1156  0119                     	;# 
  1157  0119                     	;# 
  1158  011A                     	;# 
  1159  011A                     	;# 
  1160  011A                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011B                     	;# 
  1166  011C                     	;# 
  1167  011C                     	;# 
  1168  011C                     	;# 
  1169  011D                     	;# 
  1170  011D                     	;# 
  1171  011D                     	;# 
  1172  011E                     	;# 
  1173  011E                     	;# 
  1174  011E                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  011F                     	;# 
  1180  018C                     	;# 
  1181  018D                     	;# 
  1182  018E                     	;# 
  1183  018F                     	;# 
  1184  0190                     	;# 
  1185  0191                     	;# 
  1186  0192                     	;# 
  1187  0196                     	;# 
  1188  0197                     	;# 
  1189  0198                     	;# 
  1190  0199                     	;# 
  1191  019A                     	;# 
  1192  019B                     	;# 
  1193  019C                     	;# 
  1194  020C                     	;# 
  1195  020D                     	;# 
  1196  020E                     	;# 
  1197  020F                     	;# 
  1198  020F                     	;# 
  1199  0210                     	;# 
  1200  0210                     	;# 
  1201  0211                     	;# 
  1202  0211                     	;# 
  1203  0212                     	;# 
  1204  0213                     	;# 
  1205  0214                     	;# 
  1206  0215                     	;# 
  1207  0215                     	;# 
  1208  0216                     	;# 
  1209  0216                     	;# 
  1210  0217                     	;# 
  1211  0217                     	;# 
  1212  0218                     	;# 
  1213  0219                     	;# 
  1214  021A                     	;# 
  1215  021B                     	;# 
  1216  021B                     	;# 
  1217  021C                     	;# 
  1218  021C                     	;# 
  1219  021D                     	;# 
  1220  021D                     	;# 
  1221  021E                     	;# 
  1222  021F                     	;# 
  1223  028C                     	;# 
  1224  028C                     	;# 
  1225  028D                     	;# 
  1226  028D                     	;# 
  1227  028E                     	;# 
  1228  028F                     	;# 
  1229  0290                     	;# 
  1230  0290                     	;# 
  1231  0291                     	;# 
  1232  0292                     	;# 
  1233  0292                     	;# 
  1234  0293                     	;# 
  1235  0293                     	;# 
  1236  0294                     	;# 
  1237  0295                     	;# 
  1238  0296                     	;# 
  1239  0296                     	;# 
  1240  0297                     	;# 
  1241  0298                     	;# 
  1242  0298                     	;# 
  1243  0299                     	;# 
  1244  0299                     	;# 
  1245  029A                     	;# 
  1246  029B                     	;# 
  1247  029C                     	;# 
  1248  029C                     	;# 
  1249  029D                     	;# 
  1250  030C                     	;# 
  1251  030C                     	;# 
  1252  030D                     	;# 
  1253  030E                     	;# 
  1254  030F                     	;# 
  1255  0310                     	;# 
  1256  0310                     	;# 
  1257  0311                     	;# 
  1258  0312                     	;# 
  1259  0313                     	;# 
  1260  0314                     	;# 
  1261  0314                     	;# 
  1262  0315                     	;# 
  1263  0316                     	;# 
  1264  0317                     	;# 
  1265  0318                     	;# 
  1266  0318                     	;# 
  1267  0319                     	;# 
  1268  031A                     	;# 
  1269  031B                     	;# 
  1270  031C                     	;# 
  1271  031C                     	;# 
  1272  031D                     	;# 
  1273  031E                     	;# 
  1274  031F                     	;# 
  1275  038C                     	;# 
  1276  038D                     	;# 
  1277  038E                     	;# 
  1278  0390                     	;# 
  1279  0391                     	;# 
  1280  0392                     	;# 
  1281  040C                     	;# 
  1282  040D                     	;# 
  1283  040E                     	;# 
  1284  040F                     	;# 
  1285  0410                     	;# 
  1286  0411                     	;# 
  1287  0416                     	;# 
  1288  0416                     	;# 
  1289  0417                     	;# 
  1290  0418                     	;# 
  1291  0418                     	;# 
  1292  0419                     	;# 
  1293  041A                     	;# 
  1294  041A                     	;# 
  1295  041B                     	;# 
  1296  041C                     	;# 
  1297  041C                     	;# 
  1298  041D                     	;# 
  1299  041E                     	;# 
  1300  041F                     	;# 
  1301  048C                     	;# 
  1302  048C                     	;# 
  1303  048D                     	;# 
  1304  048E                     	;# 
  1305  048F                     	;# 
  1306  048F                     	;# 
  1307  0490                     	;# 
  1308  0491                     	;# 
  1309  0492                     	;# 
  1310  0492                     	;# 
  1311  0493                     	;# 
  1312  0494                     	;# 
  1313  0495                     	;# 
  1314  0495                     	;# 
  1315  0496                     	;# 
  1316  0497                     	;# 
  1317  0498                     	;# 
  1318  0499                     	;# 
  1319  049A                     	;# 
  1320  049B                     	;# 
  1321  049C                     	;# 
  1322  049D                     	;# 
  1323  050C                     	;# 
  1324  050C                     	;# 
  1325  050D                     	;# 
  1326  050E                     	;# 
  1327  050F                     	;# 
  1328  050F                     	;# 
  1329  0510                     	;# 
  1330  0511                     	;# 
  1331  0512                     	;# 
  1332  0512                     	;# 
  1333  0513                     	;# 
  1334  0514                     	;# 
  1335  0515                     	;# 
  1336  0515                     	;# 
  1337  0516                     	;# 
  1338  0517                     	;# 
  1339  0518                     	;# 
  1340  0519                     	;# 
  1341  051A                     	;# 
  1342  051B                     	;# 
  1343  051C                     	;# 
  1344  051D                     	;# 
  1345  058C                     	;# 
  1346  058C                     	;# 
  1347  058D                     	;# 
  1348  058E                     	;# 
  1349  058F                     	;# 
  1350  058F                     	;# 
  1351  0590                     	;# 
  1352  0591                     	;# 
  1353  0592                     	;# 
  1354  0593                     	;# 
  1355  060C                     	;# 
  1356  060D                     	;# 
  1357  060E                     	;# 
  1358  060F                     	;# 
  1359  0610                     	;# 
  1360  0611                     	;# 
  1361  0612                     	;# 
  1362  0613                     	;# 
  1363  0614                     	;# 
  1364  0616                     	;# 
  1365  0617                     	;# 
  1366  0618                     	;# 
  1367  0619                     	;# 
  1368  061A                     	;# 
  1369  061B                     	;# 
  1370  061C                     	;# 
  1371  061D                     	;# 
  1372  061E                     	;# 
  1373  068C                     	;# 
  1374  068D                     	;# 
  1375  068E                     	;# 
  1376  068F                     	;# 
  1377  0690                     	;# 
  1378  0691                     	;# 
  1379  0692                     	;# 
  1380  0693                     	;# 
  1381  0694                     	;# 
  1382  070C                     	;# 
  1383  070D                     	;# 
  1384  070E                     	;# 
  1385  070F                     	;# 
  1386  0710                     	;# 
  1387  0711                     	;# 
  1388  0712                     	;# 
  1389  0713                     	;# 
  1390  0714                     	;# 
  1391  0716                     	;# 
  1392  0717                     	;# 
  1393  0718                     	;# 
  1394  0719                     	;# 
  1395  071A                     	;# 
  1396  071B                     	;# 
  1397  071C                     	;# 
  1398  071D                     	;# 
  1399  071E                     	;# 
  1400  0796                     	;# 
  1401  0797                     	;# 
  1402  0798                     	;# 
  1403  0799                     	;# 
  1404  079A                     	;# 
  1405  079B                     	;# 
  1406  080C                     	;# 
  1407  080D                     	;# 
  1408  080E                     	;# 
  1409  080F                     	;# 
  1410  0810                     	;# 
  1411  0811                     	;# 
  1412  0812                     	;# 
  1413  0813                     	;# 
  1414  0814                     	;# 
  1415  081A                     	;# 
  1416  081B                     	;# 
  1417  081C                     	;# 
  1418  081D                     	;# 
  1419  081E                     	;# 
  1420  081F                     	;# 
  1421  088C                     	;# 
  1422  088D                     	;# 
  1423  088E                     	;# 
  1424  088F                     	;# 
  1425  0890                     	;# 
  1426  0891                     	;# 
  1427  0892                     	;# 
  1428  0893                     	;# 
  1429  0895                     	;# 
  1430  0896                     	;# 
  1431  0897                     	;# 
  1432  0898                     	;# 
  1433  0899                     	;# 
  1434  089A                     	;# 
  1435  089B                     	;# 
  1436  090C                     	;# 
  1437  090E                     	;# 
  1438  090F                     	;# 
  1439  091F                     	;# 
  1440  091F                     	;# 
  1441  098F                     	;# 
  1442  098F                     	;# 
  1443  0990                     	;# 
  1444  0991                     	;# 
  1445  0992                     	;# 
  1446  0993                     	;# 
  1447  0994                     	;# 
  1448  0995                     	;# 
  1449  0996                     	;# 
  1450  0997                     	;# 
  1451  0E0F                     	;# 
  1452  0E10                     	;# 
  1453  0E11                     	;# 
  1454  0E12                     	;# 
  1455  0E13                     	;# 
  1456  0E14                     	;# 
  1457  0E15                     	;# 
  1458  0E16                     	;# 
  1459  0E17                     	;# 
  1460  0E18                     	;# 
  1461  0E19                     	;# 
  1462  0E1A                     	;# 
  1463  0E1B                     	;# 
  1464  0E1C                     	;# 
  1465  0E1D                     	;# 
  1466  0E1E                     	;# 
  1467  0E1F                     	;# 
  1468  0E20                     	;# 
  1469  0E21                     	;# 
  1470  0E22                     	;# 
  1471  0E23                     	;# 
  1472  0E24                     	;# 
  1473  0E25                     	;# 
  1474  0E26                     	;# 
  1475  0E27                     	;# 
  1476  0E28                     	;# 
  1477  0E29                     	;# 
  1478  0E2A                     	;# 
  1479  0E2B                     	;# 
  1480  0E2C                     	;# 
  1481  0E2D                     	;# 
  1482  0E2E                     	;# 
  1483  0E2F                     	;# 
  1484  0E30                     	;# 
  1485  0E31                     	;# 
  1486  0E32                     	;# 
  1487  0E33                     	;# 
  1488  0E34                     	;# 
  1489  0E35                     	;# 
  1490  0E36                     	;# 
  1491  0E37                     	;# 
  1492  0E8F                     	;# 
  1493  0E90                     	;# 
  1494  0E91                     	;# 
  1495  0E92                     	;# 
  1496  0E93                     	;# 
  1497  0E94                     	;# 
  1498  0E95                     	;# 
  1499  0E96                     	;# 
  1500  0E97                     	;# 
  1501  0E9C                     	;# 
  1502  0E9D                     	;# 
  1503  0E9E                     	;# 
  1504  0EA1                     	;# 
  1505  0EA2                     	;# 
  1506  0EA3                     	;# 
  1507  0EA4                     	;# 
  1508  0EA5                     	;# 
  1509  0EA9                     	;# 
  1510  0EAA                     	;# 
  1511  0EAB                     	;# 
  1512  0EAC                     	;# 
  1513  0EB1                     	;# 
  1514  0EB2                     	;# 
  1515  0EB3                     	;# 
  1516  0EB8                     	;# 
  1517  0EB9                     	;# 
  1518  0EBA                     	;# 
  1519  0EBB                     	;# 
  1520  0EBC                     	;# 
  1521  0EBD                     	;# 
  1522  0EBE                     	;# 
  1523  0EC3                     	;# 
  1524  0EC5                     	;# 
  1525  0EC6                     	;# 
  1526  0EC7                     	;# 
  1527  0EC8                     	;# 
  1528  0EC9                     	;# 
  1529  0ECA                     	;# 
  1530  0ECB                     	;# 
  1531  0ECC                     	;# 
  1532  0F10                     	;# 
  1533  0F11                     	;# 
  1534  0F12                     	;# 
  1535  0F13                     	;# 
  1536  0F14                     	;# 
  1537  0F15                     	;# 
  1538  0F16                     	;# 
  1539  0F17                     	;# 
  1540  0F18                     	;# 
  1541  0F19                     	;# 
  1542  0F1A                     	;# 
  1543  0F1B                     	;# 
  1544  0F1C                     	;# 
  1545  0F1D                     	;# 
  1546  0F1E                     	;# 
  1547  0F1F                     	;# 
  1548  0F20                     	;# 
  1549  0F21                     	;# 
  1550  0F22                     	;# 
  1551  0F23                     	;# 
  1552  0F24                     	;# 
  1553  0F25                     	;# 
  1554  0F26                     	;# 
  1555  0F27                     	;# 
  1556  0F38                     	;# 
  1557  0F39                     	;# 
  1558  0F3A                     	;# 
  1559  0F3B                     	;# 
  1560  0F3C                     	;# 
  1561  0F3D                     	;# 
  1562  0F3E                     	;# 
  1563  0F3F                     	;# 
  1564  0F40                     	;# 
  1565  0F41                     	;# 
  1566  0F43                     	;# 
  1567  0F44                     	;# 
  1568  0F45                     	;# 
  1569  0F46                     	;# 
  1570  0F47                     	;# 
  1571  0F48                     	;# 
  1572  0F49                     	;# 
  1573  0F4A                     	;# 
  1574  0F4B                     	;# 
  1575  0F4C                     	;# 
  1576  0F4E                     	;# 
  1577  0F4F                     	;# 
  1578  0F50                     	;# 
  1579  0F51                     	;# 
  1580  0F52                     	;# 
  1581  0F53                     	;# 
  1582  0F54                     	;# 
  1583  0F55                     	;# 
  1584  0F56                     	;# 
  1585  0F57                     	;# 
  1586  0F65                     	;# 
  1587  0F68                     	;# 
  1588  0F69                     	;# 
  1589  0F6A                     	;# 
  1590  0F6B                     	;# 
  1591  0FE4                     	;# 
  1592  0FE5                     	;# 
  1593  0FE6                     	;# 
  1594  0FE7                     	;# 
  1595  0FE8                     	;# 
  1596  0FE9                     	;# 
  1597  0FEA                     	;# 
  1598  0FEB                     	;# 
  1599  0FED                     	;# 
  1600  0FEE                     	;# 
  1601  0FEF                     	;# 
  1602  0000                     	;# 
  1603  0001                     	;# 
  1604  0002                     	;# 
  1605  0003                     	;# 
  1606  0004                     	;# 
  1607  0005                     	;# 
  1608  0006                     	;# 
  1609  0007                     	;# 
  1610  0008                     	;# 
  1611  0009                     	;# 
  1612  000A                     	;# 
  1613  000B                     	;# 
  1614  000C                     	;# 
  1615  000D                     	;# 
  1616  000E                     	;# 
  1617  0010                     	;# 
  1618  0011                     	;# 
  1619  0012                     	;# 
  1620  0013                     	;# 
  1621  0016                     	;# 
  1622  0017                     	;# 
  1623  0018                     	;# 
  1624  001C                     	;# 
  1625  001C                     	;# 
  1626  001D                     	;# 
  1627  001D                     	;# 
  1628  001E                     	;# 
  1629  001F                     	;# 
  1630  008C                     	;# 
  1631  008C                     	;# 
  1632  008D                     	;# 
  1633  008E                     	;# 
  1634  008E                     	;# 
  1635  008F                     	;# 
  1636  0090                     	;# 
  1637  0090                     	;# 
  1638  0091                     	;# 
  1639  0093                     	;# 
  1640  0094                     	;# 
  1641  0095                     	;# 
  1642  0096                     	;# 
  1643  0097                     	;# 
  1644  0098                     	;# 
  1645  0099                     	;# 
  1646  009A                     	;# 
  1647  009B                     	;# 
  1648  009C                     	;# 
  1649  009D                     	;# 
  1650  009E                     	;# 
  1651  010C                     	;# 
  1652  010D                     	;# 
  1653  010E                     	;# 
  1654  010E                     	;# 
  1655  010F                     	;# 
  1656  0110                     	;# 
  1657  0110                     	;# 
  1658  0111                     	;# 
  1659  0112                     	;# 
  1660  0112                     	;# 
  1661  0113                     	;# 
  1662  0114                     	;# 
  1663  0114                     	;# 
  1664  0115                     	;# 
  1665  0116                     	;# 
  1666  0116                     	;# 
  1667  0117                     	;# 
  1668  0119                     	;# 
  1669  0119                     	;# 
  1670  0119                     	;# 
  1671  011A                     	;# 
  1672  011A                     	;# 
  1673  011A                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011B                     	;# 
  1679  011C                     	;# 
  1680  011C                     	;# 
  1681  011C                     	;# 
  1682  011D                     	;# 
  1683  011D                     	;# 
  1684  011D                     	;# 
  1685  011E                     	;# 
  1686  011E                     	;# 
  1687  011E                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  011F                     	;# 
  1693  018C                     	;# 
  1694  018D                     	;# 
  1695  018E                     	;# 
  1696  018F                     	;# 
  1697  0190                     	;# 
  1698  0191                     	;# 
  1699  0192                     	;# 
  1700  0196                     	;# 
  1701  0197                     	;# 
  1702  0198                     	;# 
  1703  0199                     	;# 
  1704  019A                     	;# 
  1705  019B                     	;# 
  1706  019C                     	;# 
  1707  020C                     	;# 
  1708  020D                     	;# 
  1709  020E                     	;# 
  1710  020F                     	;# 
  1711  020F                     	;# 
  1712  0210                     	;# 
  1713  0210                     	;# 
  1714  0211                     	;# 
  1715  0211                     	;# 
  1716  0212                     	;# 
  1717  0213                     	;# 
  1718  0214                     	;# 
  1719  0215                     	;# 
  1720  0215                     	;# 
  1721  0216                     	;# 
  1722  0216                     	;# 
  1723  0217                     	;# 
  1724  0217                     	;# 
  1725  0218                     	;# 
  1726  0219                     	;# 
  1727  021A                     	;# 
  1728  021B                     	;# 
  1729  021B                     	;# 
  1730  021C                     	;# 
  1731  021C                     	;# 
  1732  021D                     	;# 
  1733  021D                     	;# 
  1734  021E                     	;# 
  1735  021F                     	;# 
  1736  028C                     	;# 
  1737  028C                     	;# 
  1738  028D                     	;# 
  1739  028D                     	;# 
  1740  028E                     	;# 
  1741  028F                     	;# 
  1742  0290                     	;# 
  1743  0290                     	;# 
  1744  0291                     	;# 
  1745  0292                     	;# 
  1746  0292                     	;# 
  1747  0293                     	;# 
  1748  0293                     	;# 
  1749  0294                     	;# 
  1750  0295                     	;# 
  1751  0296                     	;# 
  1752  0296                     	;# 
  1753  0297                     	;# 
  1754  0298                     	;# 
  1755  0298                     	;# 
  1756  0299                     	;# 
  1757  0299                     	;# 
  1758  029A                     	;# 
  1759  029B                     	;# 
  1760  029C                     	;# 
  1761  029C                     	;# 
  1762  029D                     	;# 
  1763  030C                     	;# 
  1764  030C                     	;# 
  1765  030D                     	;# 
  1766  030E                     	;# 
  1767  030F                     	;# 
  1768  0310                     	;# 
  1769  0310                     	;# 
  1770  0311                     	;# 
  1771  0312                     	;# 
  1772  0313                     	;# 
  1773  0314                     	;# 
  1774  0314                     	;# 
  1775  0315                     	;# 
  1776  0316                     	;# 
  1777  0317                     	;# 
  1778  0318                     	;# 
  1779  0318                     	;# 
  1780  0319                     	;# 
  1781  031A                     	;# 
  1782  031B                     	;# 
  1783  031C                     	;# 
  1784  031C                     	;# 
  1785  031D                     	;# 
  1786  031E                     	;# 
  1787  031F                     	;# 
  1788  038C                     	;# 
  1789  038D                     	;# 
  1790  038E                     	;# 
  1791  0390                     	;# 
  1792  0391                     	;# 
  1793  0392                     	;# 
  1794  040C                     	;# 
  1795  040D                     	;# 
  1796  040E                     	;# 
  1797  040F                     	;# 
  1798  0410                     	;# 
  1799  0411                     	;# 
  1800  0416                     	;# 
  1801  0416                     	;# 
  1802  0417                     	;# 
  1803  0418                     	;# 
  1804  0418                     	;# 
  1805  0419                     	;# 
  1806  041A                     	;# 
  1807  041A                     	;# 
  1808  041B                     	;# 
  1809  041C                     	;# 
  1810  041C                     	;# 
  1811  041D                     	;# 
  1812  041E                     	;# 
  1813  041F                     	;# 
  1814  048C                     	;# 
  1815  048C                     	;# 
  1816  048D                     	;# 
  1817  048E                     	;# 
  1818  048F                     	;# 
  1819  048F                     	;# 
  1820  0490                     	;# 
  1821  0491                     	;# 
  1822  0492                     	;# 
  1823  0492                     	;# 
  1824  0493                     	;# 
  1825  0494                     	;# 
  1826  0495                     	;# 
  1827  0495                     	;# 
  1828  0496                     	;# 
  1829  0497                     	;# 
  1830  0498                     	;# 
  1831  0499                     	;# 
  1832  049A                     	;# 
  1833  049B                     	;# 
  1834  049C                     	;# 
  1835  049D                     	;# 
  1836  050C                     	;# 
  1837  050C                     	;# 
  1838  050D                     	;# 
  1839  050E                     	;# 
  1840  050F                     	;# 
  1841  050F                     	;# 
  1842  0510                     	;# 
  1843  0511                     	;# 
  1844  0512                     	;# 
  1845  0512                     	;# 
  1846  0513                     	;# 
  1847  0514                     	;# 
  1848  0515                     	;# 
  1849  0515                     	;# 
  1850  0516                     	;# 
  1851  0517                     	;# 
  1852  0518                     	;# 
  1853  0519                     	;# 
  1854  051A                     	;# 
  1855  051B                     	;# 
  1856  051C                     	;# 
  1857  051D                     	;# 
  1858  058C                     	;# 
  1859  058C                     	;# 
  1860  058D                     	;# 
  1861  058E                     	;# 
  1862  058F                     	;# 
  1863  058F                     	;# 
  1864  0590                     	;# 
  1865  0591                     	;# 
  1866  0592                     	;# 
  1867  0593                     	;# 
  1868  060C                     	;# 
  1869  060D                     	;# 
  1870  060E                     	;# 
  1871  060F                     	;# 
  1872  0610                     	;# 
  1873  0611                     	;# 
  1874  0612                     	;# 
  1875  0613                     	;# 
  1876  0614                     	;# 
  1877  0616                     	;# 
  1878  0617                     	;# 
  1879  0618                     	;# 
  1880  0619                     	;# 
  1881  061A                     	;# 
  1882  061B                     	;# 
  1883  061C                     	;# 
  1884  061D                     	;# 
  1885  061E                     	;# 
  1886  068C                     	;# 
  1887  068D                     	;# 
  1888  068E                     	;# 
  1889  068F                     	;# 
  1890  0690                     	;# 
  1891  0691                     	;# 
  1892  0692                     	;# 
  1893  0693                     	;# 
  1894  0694                     	;# 
  1895  070C                     	;# 
  1896  070D                     	;# 
  1897  070E                     	;# 
  1898  070F                     	;# 
  1899  0710                     	;# 
  1900  0711                     	;# 
  1901  0712                     	;# 
  1902  0713                     	;# 
  1903  0714                     	;# 
  1904  0716                     	;# 
  1905  0717                     	;# 
  1906  0718                     	;# 
  1907  0719                     	;# 
  1908  071A                     	;# 
  1909  071B                     	;# 
  1910  071C                     	;# 
  1911  071D                     	;# 
  1912  071E                     	;# 
  1913  0796                     	;# 
  1914  0797                     	;# 
  1915  0798                     	;# 
  1916  0799                     	;# 
  1917  079A                     	;# 
  1918  079B                     	;# 
  1919  080C                     	;# 
  1920  080D                     	;# 
  1921  080E                     	;# 
  1922  080F                     	;# 
  1923  0810                     	;# 
  1924  0811                     	;# 
  1925  0812                     	;# 
  1926  0813                     	;# 
  1927  0814                     	;# 
  1928  081A                     	;# 
  1929  081B                     	;# 
  1930  081C                     	;# 
  1931  081D                     	;# 
  1932  081E                     	;# 
  1933  081F                     	;# 
  1934  088C                     	;# 
  1935  088D                     	;# 
  1936  088E                     	;# 
  1937  088F                     	;# 
  1938  0890                     	;# 
  1939  0891                     	;# 
  1940  0892                     	;# 
  1941  0893                     	;# 
  1942  0895                     	;# 
  1943  0896                     	;# 
  1944  0897                     	;# 
  1945  0898                     	;# 
  1946  0899                     	;# 
  1947  089A                     	;# 
  1948  089B                     	;# 
  1949  090C                     	;# 
  1950  090E                     	;# 
  1951  090F                     	;# 
  1952  091F                     	;# 
  1953  091F                     	;# 
  1954  098F                     	;# 
  1955  098F                     	;# 
  1956  0990                     	;# 
  1957  0991                     	;# 
  1958  0992                     	;# 
  1959  0993                     	;# 
  1960  0994                     	;# 
  1961  0995                     	;# 
  1962  0996                     	;# 
  1963  0997                     	;# 
  1964  0E0F                     	;# 
  1965  0E10                     	;# 
  1966  0E11                     	;# 
  1967  0E12                     	;# 
  1968  0E13                     	;# 
  1969  0E14                     	;# 
  1970  0E15                     	;# 
  1971  0E16                     	;# 
  1972  0E17                     	;# 
  1973  0E18                     	;# 
  1974  0E19                     	;# 
  1975  0E1A                     	;# 
  1976  0E1B                     	;# 
  1977  0E1C                     	;# 
  1978  0E1D                     	;# 
  1979  0E1E                     	;# 
  1980  0E1F                     	;# 
  1981  0E20                     	;# 
  1982  0E21                     	;# 
  1983  0E22                     	;# 
  1984  0E23                     	;# 
  1985  0E24                     	;# 
  1986  0E25                     	;# 
  1987  0E26                     	;# 
  1988  0E27                     	;# 
  1989  0E28                     	;# 
  1990  0E29                     	;# 
  1991  0E2A                     	;# 
  1992  0E2B                     	;# 
  1993  0E2C                     	;# 
  1994  0E2D                     	;# 
  1995  0E2E                     	;# 
  1996  0E2F                     	;# 
  1997  0E30                     	;# 
  1998  0E31                     	;# 
  1999  0E32                     	;# 
  2000  0E33                     	;# 
  2001  0E34                     	;# 
  2002  0E35                     	;# 
  2003  0E36                     	;# 
  2004  0E37                     	;# 
  2005  0E8F                     	;# 
  2006  0E90                     	;# 
  2007  0E91                     	;# 
  2008  0E92                     	;# 
  2009  0E93                     	;# 
  2010  0E94                     	;# 
  2011  0E95                     	;# 
  2012  0E96                     	;# 
  2013  0E97                     	;# 
  2014  0E9C                     	;# 
  2015  0E9D                     	;# 
  2016  0E9E                     	;# 
  2017  0EA1                     	;# 
  2018  0EA2                     	;# 
  2019  0EA3                     	;# 
  2020  0EA4                     	;# 
  2021  0EA5                     	;# 
  2022  0EA9                     	;# 
  2023  0EAA                     	;# 
  2024  0EAB                     	;# 
  2025  0EAC                     	;# 
  2026  0EB1                     	;# 
  2027  0EB2                     	;# 
  2028  0EB3                     	;# 
  2029  0EB8                     	;# 
  2030  0EB9                     	;# 
  2031  0EBA                     	;# 
  2032  0EBB                     	;# 
  2033  0EBC                     	;# 
  2034  0EBD                     	;# 
  2035  0EBE                     	;# 
  2036  0EC3                     	;# 
  2037  0EC5                     	;# 
  2038  0EC6                     	;# 
  2039  0EC7                     	;# 
  2040  0EC8                     	;# 
  2041  0EC9                     	;# 
  2042  0ECA                     	;# 
  2043  0ECB                     	;# 
  2044  0ECC                     	;# 
  2045  0F10                     	;# 
  2046  0F11                     	;# 
  2047  0F12                     	;# 
  2048  0F13                     	;# 
  2049  0F14                     	;# 
  2050  0F15                     	;# 
  2051  0F16                     	;# 
  2052  0F17                     	;# 
  2053  0F18                     	;# 
  2054  0F19                     	;# 
  2055  0F1A                     	;# 
  2056  0F1B                     	;# 
  2057  0F1C                     	;# 
  2058  0F1D                     	;# 
  2059  0F1E                     	;# 
  2060  0F1F                     	;# 
  2061  0F20                     	;# 
  2062  0F21                     	;# 
  2063  0F22                     	;# 
  2064  0F23                     	;# 
  2065  0F24                     	;# 
  2066  0F25                     	;# 
  2067  0F26                     	;# 
  2068  0F27                     	;# 
  2069  0F38                     	;# 
  2070  0F39                     	;# 
  2071  0F3A                     	;# 
  2072  0F3B                     	;# 
  2073  0F3C                     	;# 
  2074  0F3D                     	;# 
  2075  0F3E                     	;# 
  2076  0F3F                     	;# 
  2077  0F40                     	;# 
  2078  0F41                     	;# 
  2079  0F43                     	;# 
  2080  0F44                     	;# 
  2081  0F45                     	;# 
  2082  0F46                     	;# 
  2083  0F47                     	;# 
  2084  0F48                     	;# 
  2085  0F49                     	;# 
  2086  0F4A                     	;# 
  2087  0F4B                     	;# 
  2088  0F4C                     	;# 
  2089  0F4E                     	;# 
  2090  0F4F                     	;# 
  2091  0F50                     	;# 
  2092  0F51                     	;# 
  2093  0F52                     	;# 
  2094  0F53                     	;# 
  2095  0F54                     	;# 
  2096  0F55                     	;# 
  2097  0F56                     	;# 
  2098  0F57                     	;# 
  2099  0F65                     	;# 
  2100  0F68                     	;# 
  2101  0F69                     	;# 
  2102  0F6A                     	;# 
  2103  0F6B                     	;# 
  2104  0FE4                     	;# 
  2105  0FE5                     	;# 
  2106  0FE6                     	;# 
  2107  0FE7                     	;# 
  2108  0FE8                     	;# 
  2109  0FE9                     	;# 
  2110  0FEA                     	;# 
  2111  0FEB                     	;# 
  2112  0FED                     	;# 
  2113  0FEE                     	;# 
  2114  0FEF                     	;# 
  2115  0000                     	;# 
  2116  0001                     	;# 
  2117  0002                     	;# 
  2118  0003                     	;# 
  2119  0004                     	;# 
  2120  0005                     	;# 
  2121  0006                     	;# 
  2122  0007                     	;# 
  2123  0008                     	;# 
  2124  0009                     	;# 
  2125  000A                     	;# 
  2126  000B                     	;# 
  2127  000C                     	;# 
  2128  000D                     	;# 
  2129  000E                     	;# 
  2130  0010                     	;# 
  2131  0011                     	;# 
  2132  0012                     	;# 
  2133  0013                     	;# 
  2134  0016                     	;# 
  2135  0017                     	;# 
  2136  0018                     	;# 
  2137  001C                     	;# 
  2138  001C                     	;# 
  2139  001D                     	;# 
  2140  001D                     	;# 
  2141  001E                     	;# 
  2142  001F                     	;# 
  2143  008C                     	;# 
  2144  008C                     	;# 
  2145  008D                     	;# 
  2146  008E                     	;# 
  2147  008E                     	;# 
  2148  008F                     	;# 
  2149  0090                     	;# 
  2150  0090                     	;# 
  2151  0091                     	;# 
  2152  0093                     	;# 
  2153  0094                     	;# 
  2154  0095                     	;# 
  2155  0096                     	;# 
  2156  0097                     	;# 
  2157  0098                     	;# 
  2158  0099                     	;# 
  2159  009A                     	;# 
  2160  009B                     	;# 
  2161  009C                     	;# 
  2162  009D                     	;# 
  2163  009E                     	;# 
  2164  010C                     	;# 
  2165  010D                     	;# 
  2166  010E                     	;# 
  2167  010E                     	;# 
  2168  010F                     	;# 
  2169  0110                     	;# 
  2170  0110                     	;# 
  2171  0111                     	;# 
  2172  0112                     	;# 
  2173  0112                     	;# 
  2174  0113                     	;# 
  2175  0114                     	;# 
  2176  0114                     	;# 
  2177  0115                     	;# 
  2178  0116                     	;# 
  2179  0116                     	;# 
  2180  0117                     	;# 
  2181  0119                     	;# 
  2182  0119                     	;# 
  2183  0119                     	;# 
  2184  011A                     	;# 
  2185  011A                     	;# 
  2186  011A                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011B                     	;# 
  2192  011C                     	;# 
  2193  011C                     	;# 
  2194  011C                     	;# 
  2195  011D                     	;# 
  2196  011D                     	;# 
  2197  011D                     	;# 
  2198  011E                     	;# 
  2199  011E                     	;# 
  2200  011E                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  011F                     	;# 
  2206  018C                     	;# 
  2207  018D                     	;# 
  2208  018E                     	;# 
  2209  018F                     	;# 
  2210  0190                     	;# 
  2211  0191                     	;# 
  2212  0192                     	;# 
  2213  0196                     	;# 
  2214  0197                     	;# 
  2215  0198                     	;# 
  2216  0199                     	;# 
  2217  019A                     	;# 
  2218  019B                     	;# 
  2219  019C                     	;# 
  2220  020C                     	;# 
  2221  020D                     	;# 
  2222  020E                     	;# 
  2223  020F                     	;# 
  2224  020F                     	;# 
  2225  0210                     	;# 
  2226  0210                     	;# 
  2227  0211                     	;# 
  2228  0211                     	;# 
  2229  0212                     	;# 
  2230  0213                     	;# 
  2231  0214                     	;# 
  2232  0215                     	;# 
  2233  0215                     	;# 
  2234  0216                     	;# 
  2235  0216                     	;# 
  2236  0217                     	;# 
  2237  0217                     	;# 
  2238  0218                     	;# 
  2239  0219                     	;# 
  2240  021A                     	;# 
  2241  021B                     	;# 
  2242  021B                     	;# 
  2243  021C                     	;# 
  2244  021C                     	;# 
  2245  021D                     	;# 
  2246  021D                     	;# 
  2247  021E                     	;# 
  2248  021F                     	;# 
  2249  028C                     	;# 
  2250  028C                     	;# 
  2251  028D                     	;# 
  2252  028D                     	;# 
  2253  028E                     	;# 
  2254  028F                     	;# 
  2255  0290                     	;# 
  2256  0290                     	;# 
  2257  0291                     	;# 
  2258  0292                     	;# 
  2259  0292                     	;# 
  2260  0293                     	;# 
  2261  0293                     	;# 
  2262  0294                     	;# 
  2263  0295                     	;# 
  2264  0296                     	;# 
  2265  0296                     	;# 
  2266  0297                     	;# 
  2267  0298                     	;# 
  2268  0298                     	;# 
  2269  0299                     	;# 
  2270  0299                     	;# 
  2271  029A                     	;# 
  2272  029B                     	;# 
  2273  029C                     	;# 
  2274  029C                     	;# 
  2275  029D                     	;# 
  2276  030C                     	;# 
  2277  030C                     	;# 
  2278  030D                     	;# 
  2279  030E                     	;# 
  2280  030F                     	;# 
  2281  0310                     	;# 
  2282  0310                     	;# 
  2283  0311                     	;# 
  2284  0312                     	;# 
  2285  0313                     	;# 
  2286  0314                     	;# 
  2287  0314                     	;# 
  2288  0315                     	;# 
  2289  0316                     	;# 
  2290  0317                     	;# 
  2291  0318                     	;# 
  2292  0318                     	;# 
  2293  0319                     	;# 
  2294  031A                     	;# 
  2295  031B                     	;# 
  2296  031C                     	;# 
  2297  031C                     	;# 
  2298  031D                     	;# 
  2299  031E                     	;# 
  2300  031F                     	;# 
  2301  038C                     	;# 
  2302  038D                     	;# 
  2303  038E                     	;# 
  2304  0390                     	;# 
  2305  0391                     	;# 
  2306  0392                     	;# 
  2307  040C                     	;# 
  2308  040D                     	;# 
  2309  040E                     	;# 
  2310  040F                     	;# 
  2311  0410                     	;# 
  2312  0411                     	;# 
  2313  0416                     	;# 
  2314  0416                     	;# 
  2315  0417                     	;# 
  2316  0418                     	;# 
  2317  0418                     	;# 
  2318  0419                     	;# 
  2319  041A                     	;# 
  2320  041A                     	;# 
  2321  041B                     	;# 
  2322  041C                     	;# 
  2323  041C                     	;# 
  2324  041D                     	;# 
  2325  041E                     	;# 
  2326  041F                     	;# 
  2327  048C                     	;# 
  2328  048C                     	;# 
  2329  048D                     	;# 
  2330  048E                     	;# 
  2331  048F                     	;# 
  2332  048F                     	;# 
  2333  0490                     	;# 
  2334  0491                     	;# 
  2335  0492                     	;# 
  2336  0492                     	;# 
  2337  0493                     	;# 
  2338  0494                     	;# 
  2339  0495                     	;# 
  2340  0495                     	;# 
  2341  0496                     	;# 
  2342  0497                     	;# 
  2343  0498                     	;# 
  2344  0499                     	;# 
  2345  049A                     	;# 
  2346  049B                     	;# 
  2347  049C                     	;# 
  2348  049D                     	;# 
  2349  050C                     	;# 
  2350  050C                     	;# 
  2351  050D                     	;# 
  2352  050E                     	;# 
  2353  050F                     	;# 
  2354  050F                     	;# 
  2355  0510                     	;# 
  2356  0511                     	;# 
  2357  0512                     	;# 
  2358  0512                     	;# 
  2359  0513                     	;# 
  2360  0514                     	;# 
  2361  0515                     	;# 
  2362  0515                     	;# 
  2363  0516                     	;# 
  2364  0517                     	;# 
  2365  0518                     	;# 
  2366  0519                     	;# 
  2367  051A                     	;# 
  2368  051B                     	;# 
  2369  051C                     	;# 
  2370  051D                     	;# 
  2371  058C                     	;# 
  2372  058C                     	;# 
  2373  058D                     	;# 
  2374  058E                     	;# 
  2375  058F                     	;# 
  2376  058F                     	;# 
  2377  0590                     	;# 
  2378  0591                     	;# 
  2379  0592                     	;# 
  2380  0593                     	;# 
  2381  060C                     	;# 
  2382  060D                     	;# 
  2383  060E                     	;# 
  2384  060F                     	;# 
  2385  0610                     	;# 
  2386  0611                     	;# 
  2387  0612                     	;# 
  2388  0613                     	;# 
  2389  0614                     	;# 
  2390  0616                     	;# 
  2391  0617                     	;# 
  2392  0618                     	;# 
  2393  0619                     	;# 
  2394  061A                     	;# 
  2395  061B                     	;# 
  2396  061C                     	;# 
  2397  061D                     	;# 
  2398  061E                     	;# 
  2399  068C                     	;# 
  2400  068D                     	;# 
  2401  068E                     	;# 
  2402  068F                     	;# 
  2403  0690                     	;# 
  2404  0691                     	;# 
  2405  0692                     	;# 
  2406  0693                     	;# 
  2407  0694                     	;# 
  2408  070C                     	;# 
  2409  070D                     	;# 
  2410  070E                     	;# 
  2411  070F                     	;# 
  2412  0710                     	;# 
  2413  0711                     	;# 
  2414  0712                     	;# 
  2415  0713                     	;# 
  2416  0714                     	;# 
  2417  0716                     	;# 
  2418  0717                     	;# 
  2419  0718                     	;# 
  2420  0719                     	;# 
  2421  071A                     	;# 
  2422  071B                     	;# 
  2423  071C                     	;# 
  2424  071D                     	;# 
  2425  071E                     	;# 
  2426  0796                     	;# 
  2427  0797                     	;# 
  2428  0798                     	;# 
  2429  0799                     	;# 
  2430  079A                     	;# 
  2431  079B                     	;# 
  2432  080C                     	;# 
  2433  080D                     	;# 
  2434  080E                     	;# 
  2435  080F                     	;# 
  2436  0810                     	;# 
  2437  0811                     	;# 
  2438  0812                     	;# 
  2439  0813                     	;# 
  2440  0814                     	;# 
  2441  081A                     	;# 
  2442  081B                     	;# 
  2443  081C                     	;# 
  2444  081D                     	;# 
  2445  081E                     	;# 
  2446  081F                     	;# 
  2447  088C                     	;# 
  2448  088D                     	;# 
  2449  088E                     	;# 
  2450  088F                     	;# 
  2451  0890                     	;# 
  2452  0891                     	;# 
  2453  0892                     	;# 
  2454  0893                     	;# 
  2455  0895                     	;# 
  2456  0896                     	;# 
  2457  0897                     	;# 
  2458  0898                     	;# 
  2459  0899                     	;# 
  2460  089A                     	;# 
  2461  089B                     	;# 
  2462  090C                     	;# 
  2463  090E                     	;# 
  2464  090F                     	;# 
  2465  091F                     	;# 
  2466  091F                     	;# 
  2467  098F                     	;# 
  2468  098F                     	;# 
  2469  0990                     	;# 
  2470  0991                     	;# 
  2471  0992                     	;# 
  2472  0993                     	;# 
  2473  0994                     	;# 
  2474  0995                     	;# 
  2475  0996                     	;# 
  2476  0997                     	;# 
  2477  0E0F                     	;# 
  2478  0E10                     	;# 
  2479  0E11                     	;# 
  2480  0E12                     	;# 
  2481  0E13                     	;# 
  2482  0E14                     	;# 
  2483  0E15                     	;# 
  2484  0E16                     	;# 
  2485  0E17                     	;# 
  2486  0E18                     	;# 
  2487  0E19                     	;# 
  2488  0E1A                     	;# 
  2489  0E1B                     	;# 
  2490  0E1C                     	;# 
  2491  0E1D                     	;# 
  2492  0E1E                     	;# 
  2493  0E1F                     	;# 
  2494  0E20                     	;# 
  2495  0E21                     	;# 
  2496  0E22                     	;# 
  2497  0E23                     	;# 
  2498  0E24                     	;# 
  2499  0E25                     	;# 
  2500  0E26                     	;# 
  2501  0E27                     	;# 
  2502  0E28                     	;# 
  2503  0E29                     	;# 
  2504  0E2A                     	;# 
  2505  0E2B                     	;# 
  2506  0E2C                     	;# 
  2507  0E2D                     	;# 
  2508  0E2E                     	;# 
  2509  0E2F                     	;# 
  2510  0E30                     	;# 
  2511  0E31                     	;# 
  2512  0E32                     	;# 
  2513  0E33                     	;# 
  2514  0E34                     	;# 
  2515  0E35                     	;# 
  2516  0E36                     	;# 
  2517  0E37                     	;# 
  2518  0E8F                     	;# 
  2519  0E90                     	;# 
  2520  0E91                     	;# 
  2521  0E92                     	;# 
  2522  0E93                     	;# 
  2523  0E94                     	;# 
  2524  0E95                     	;# 
  2525  0E96                     	;# 
  2526  0E97                     	;# 
  2527  0E9C                     	;# 
  2528  0E9D                     	;# 
  2529  0E9E                     	;# 
  2530  0EA1                     	;# 
  2531  0EA2                     	;# 
  2532  0EA3                     	;# 
  2533  0EA4                     	;# 
  2534  0EA5                     	;# 
  2535  0EA9                     	;# 
  2536  0EAA                     	;# 
  2537  0EAB                     	;# 
  2538  0EAC                     	;# 
  2539  0EB1                     	;# 
  2540  0EB2                     	;# 
  2541  0EB3                     	;# 
  2542  0EB8                     	;# 
  2543  0EB9                     	;# 
  2544  0EBA                     	;# 
  2545  0EBB                     	;# 
  2546  0EBC                     	;# 
  2547  0EBD                     	;# 
  2548  0EBE                     	;# 
  2549  0EC3                     	;# 
  2550  0EC5                     	;# 
  2551  0EC6                     	;# 
  2552  0EC7                     	;# 
  2553  0EC8                     	;# 
  2554  0EC9                     	;# 
  2555  0ECA                     	;# 
  2556  0ECB                     	;# 
  2557  0ECC                     	;# 
  2558  0F10                     	;# 
  2559  0F11                     	;# 
  2560  0F12                     	;# 
  2561  0F13                     	;# 
  2562  0F14                     	;# 
  2563  0F15                     	;# 
  2564  0F16                     	;# 
  2565  0F17                     	;# 
  2566  0F18                     	;# 
  2567  0F19                     	;# 
  2568  0F1A                     	;# 
  2569  0F1B                     	;# 
  2570  0F1C                     	;# 
  2571  0F1D                     	;# 
  2572  0F1E                     	;# 
  2573  0F1F                     	;# 
  2574  0F20                     	;# 
  2575  0F21                     	;# 
  2576  0F22                     	;# 
  2577  0F23                     	;# 
  2578  0F24                     	;# 
  2579  0F25                     	;# 
  2580  0F26                     	;# 
  2581  0F27                     	;# 
  2582  0F38                     	;# 
  2583  0F39                     	;# 
  2584  0F3A                     	;# 
  2585  0F3B                     	;# 
  2586  0F3C                     	;# 
  2587  0F3D                     	;# 
  2588  0F3E                     	;# 
  2589  0F3F                     	;# 
  2590  0F40                     	;# 
  2591  0F41                     	;# 
  2592  0F43                     	;# 
  2593  0F44                     	;# 
  2594  0F45                     	;# 
  2595  0F46                     	;# 
  2596  0F47                     	;# 
  2597  0F48                     	;# 
  2598  0F49                     	;# 
  2599  0F4A                     	;# 
  2600  0F4B                     	;# 
  2601  0F4C                     	;# 
  2602  0F4E                     	;# 
  2603  0F4F                     	;# 
  2604  0F50                     	;# 
  2605  0F51                     	;# 
  2606  0F52                     	;# 
  2607  0F53                     	;# 
  2608  0F54                     	;# 
  2609  0F55                     	;# 
  2610  0F56                     	;# 
  2611  0F57                     	;# 
  2612  0F65                     	;# 
  2613  0F68                     	;# 
  2614  0F69                     	;# 
  2615  0F6A                     	;# 
  2616  0F6B                     	;# 
  2617  0FE4                     	;# 
  2618  0FE5                     	;# 
  2619  0FE6                     	;# 
  2620  0FE7                     	;# 
  2621  0FE8                     	;# 
  2622  0FE9                     	;# 
  2623  0FEA                     	;# 
  2624  0FEB                     	;# 
  2625  0FED                     	;# 
  2626  0FEE                     	;# 
  2627  0FEF                     	;# 
  2628  0000                     	;# 
  2629  0001                     	;# 
  2630  0002                     	;# 
  2631  0003                     	;# 
  2632  0004                     	;# 
  2633  0005                     	;# 
  2634  0006                     	;# 
  2635  0007                     	;# 
  2636  0008                     	;# 
  2637  0009                     	;# 
  2638  000A                     	;# 
  2639  000B                     	;# 
  2640  000C                     	;# 
  2641  000D                     	;# 
  2642  000E                     	;# 
  2643  0010                     	;# 
  2644  0011                     	;# 
  2645  0012                     	;# 
  2646  0013                     	;# 
  2647  0016                     	;# 
  2648  0017                     	;# 
  2649  0018                     	;# 
  2650  001C                     	;# 
  2651  001C                     	;# 
  2652  001D                     	;# 
  2653  001D                     	;# 
  2654  001E                     	;# 
  2655  001F                     	;# 
  2656  008C                     	;# 
  2657  008C                     	;# 
  2658  008D                     	;# 
  2659  008E                     	;# 
  2660  008E                     	;# 
  2661  008F                     	;# 
  2662  0090                     	;# 
  2663  0090                     	;# 
  2664  0091                     	;# 
  2665  0093                     	;# 
  2666  0094                     	;# 
  2667  0095                     	;# 
  2668  0096                     	;# 
  2669  0097                     	;# 
  2670  0098                     	;# 
  2671  0099                     	;# 
  2672  009A                     	;# 
  2673  009B                     	;# 
  2674  009C                     	;# 
  2675  009D                     	;# 
  2676  009E                     	;# 
  2677  010C                     	;# 
  2678  010D                     	;# 
  2679  010E                     	;# 
  2680  010E                     	;# 
  2681  010F                     	;# 
  2682  0110                     	;# 
  2683  0110                     	;# 
  2684  0111                     	;# 
  2685  0112                     	;# 
  2686  0112                     	;# 
  2687  0113                     	;# 
  2688  0114                     	;# 
  2689  0114                     	;# 
  2690  0115                     	;# 
  2691  0116                     	;# 
  2692  0116                     	;# 
  2693  0117                     	;# 
  2694  0119                     	;# 
  2695  0119                     	;# 
  2696  0119                     	;# 
  2697  011A                     	;# 
  2698  011A                     	;# 
  2699  011A                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011B                     	;# 
  2705  011C                     	;# 
  2706  011C                     	;# 
  2707  011C                     	;# 
  2708  011D                     	;# 
  2709  011D                     	;# 
  2710  011D                     	;# 
  2711  011E                     	;# 
  2712  011E                     	;# 
  2713  011E                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  011F                     	;# 
  2719  018C                     	;# 
  2720  018D                     	;# 
  2721  018E                     	;# 
  2722  018F                     	;# 
  2723  0190                     	;# 
  2724  0191                     	;# 
  2725  0192                     	;# 
  2726  0196                     	;# 
  2727  0197                     	;# 
  2728  0198                     	;# 
  2729  0199                     	;# 
  2730  019A                     	;# 
  2731  019B                     	;# 
  2732  019C                     	;# 
  2733  020C                     	;# 
  2734  020D                     	;# 
  2735  020E                     	;# 
  2736  020F                     	;# 
  2737  020F                     	;# 
  2738  0210                     	;# 
  2739  0210                     	;# 
  2740  0211                     	;# 
  2741  0211                     	;# 
  2742  0212                     	;# 
  2743  0213                     	;# 
  2744  0214                     	;# 
  2745  0215                     	;# 
  2746  0215                     	;# 
  2747  0216                     	;# 
  2748  0216                     	;# 
  2749  0217                     	;# 
  2750  0217                     	;# 
  2751  0218                     	;# 
  2752  0219                     	;# 
  2753  021A                     	;# 
  2754  021B                     	;# 
  2755  021B                     	;# 
  2756  021C                     	;# 
  2757  021C                     	;# 
  2758  021D                     	;# 
  2759  021D                     	;# 
  2760  021E                     	;# 
  2761  021F                     	;# 
  2762  028C                     	;# 
  2763  028C                     	;# 
  2764  028D                     	;# 
  2765  028D                     	;# 
  2766  028E                     	;# 
  2767  028F                     	;# 
  2768  0290                     	;# 
  2769  0290                     	;# 
  2770  0291                     	;# 
  2771  0292                     	;# 
  2772  0292                     	;# 
  2773  0293                     	;# 
  2774  0293                     	;# 
  2775  0294                     	;# 
  2776  0295                     	;# 
  2777  0296                     	;# 
  2778  0296                     	;# 
  2779  0297                     	;# 
  2780  0298                     	;# 
  2781  0298                     	;# 
  2782  0299                     	;# 
  2783  0299                     	;# 
  2784  029A                     	;# 
  2785  029B                     	;# 
  2786  029C                     	;# 
  2787  029C                     	;# 
  2788  029D                     	;# 
  2789  030C                     	;# 
  2790  030C                     	;# 
  2791  030D                     	;# 
  2792  030E                     	;# 
  2793  030F                     	;# 
  2794  0310                     	;# 
  2795  0310                     	;# 
  2796  0311                     	;# 
  2797  0312                     	;# 
  2798  0313                     	;# 
  2799  0314                     	;# 
  2800  0314                     	;# 
  2801  0315                     	;# 
  2802  0316                     	;# 
  2803  0317                     	;# 
  2804  0318                     	;# 
  2805  0318                     	;# 
  2806  0319                     	;# 
  2807  031A                     	;# 
  2808  031B                     	;# 
  2809  031C                     	;# 
  2810  031C                     	;# 
  2811  031D                     	;# 
  2812  031E                     	;# 
  2813  031F                     	;# 
  2814  038C                     	;# 
  2815  038D                     	;# 
  2816  038E                     	;# 
  2817  0390                     	;# 
  2818  0391                     	;# 
  2819  0392                     	;# 
  2820  040C                     	;# 
  2821  040D                     	;# 
  2822  040E                     	;# 
  2823  040F                     	;# 
  2824  0410                     	;# 
  2825  0411                     	;# 
  2826  0416                     	;# 
  2827  0416                     	;# 
  2828  0417                     	;# 
  2829  0418                     	;# 
  2830  0418                     	;# 
  2831  0419                     	;# 
  2832  041A                     	;# 
  2833  041A                     	;# 
  2834  041B                     	;# 
  2835  041C                     	;# 
  2836  041C                     	;# 
  2837  041D                     	;# 
  2838  041E                     	;# 
  2839  041F                     	;# 
  2840  048C                     	;# 
  2841  048C                     	;# 
  2842  048D                     	;# 
  2843  048E                     	;# 
  2844  048F                     	;# 
  2845  048F                     	;# 
  2846  0490                     	;# 
  2847  0491                     	;# 
  2848  0492                     	;# 
  2849  0492                     	;# 
  2850  0493                     	;# 
  2851  0494                     	;# 
  2852  0495                     	;# 
  2853  0495                     	;# 
  2854  0496                     	;# 
  2855  0497                     	;# 
  2856  0498                     	;# 
  2857  0499                     	;# 
  2858  049A                     	;# 
  2859  049B                     	;# 
  2860  049C                     	;# 
  2861  049D                     	;# 
  2862  050C                     	;# 
  2863  050C                     	;# 
  2864  050D                     	;# 
  2865  050E                     	;# 
  2866  050F                     	;# 
  2867  050F                     	;# 
  2868  0510                     	;# 
  2869  0511                     	;# 
  2870  0512                     	;# 
  2871  0512                     	;# 
  2872  0513                     	;# 
  2873  0514                     	;# 
  2874  0515                     	;# 
  2875  0515                     	;# 
  2876  0516                     	;# 
  2877  0517                     	;# 
  2878  0518                     	;# 
  2879  0519                     	;# 
  2880  051A                     	;# 
  2881  051B                     	;# 
  2882  051C                     	;# 
  2883  051D                     	;# 
  2884  058C                     	;# 
  2885  058C                     	;# 
  2886  058D                     	;# 
  2887  058E                     	;# 
  2888  058F                     	;# 
  2889  058F                     	;# 
  2890  0590                     	;# 
  2891  0591                     	;# 
  2892  0592                     	;# 
  2893  0593                     	;# 
  2894  060C                     	;# 
  2895  060D                     	;# 
  2896  060E                     	;# 
  2897  060F                     	;# 
  2898  0610                     	;# 
  2899  0611                     	;# 
  2900  0612                     	;# 
  2901  0613                     	;# 
  2902  0614                     	;# 
  2903  0616                     	;# 
  2904  0617                     	;# 
  2905  0618                     	;# 
  2906  0619                     	;# 
  2907  061A                     	;# 
  2908  061B                     	;# 
  2909  061C                     	;# 
  2910  061D                     	;# 
  2911  061E                     	;# 
  2912  068C                     	;# 
  2913  068D                     	;# 
  2914  068E                     	;# 
  2915  068F                     	;# 
  2916  0690                     	;# 
  2917  0691                     	;# 
  2918  0692                     	;# 
  2919  0693                     	;# 
  2920  0694                     	;# 
  2921  070C                     	;# 
  2922  070D                     	;# 
  2923  070E                     	;# 
  2924  070F                     	;# 
  2925  0710                     	;# 
  2926  0711                     	;# 
  2927  0712                     	;# 
  2928  0713                     	;# 
  2929  0714                     	;# 
  2930  0716                     	;# 
  2931  0717                     	;# 
  2932  0718                     	;# 
  2933  0719                     	;# 
  2934  071A                     	;# 
  2935  071B                     	;# 
  2936  071C                     	;# 
  2937  071D                     	;# 
  2938  071E                     	;# 
  2939  0796                     	;# 
  2940  0797                     	;# 
  2941  0798                     	;# 
  2942  0799                     	;# 
  2943  079A                     	;# 
  2944  079B                     	;# 
  2945  080C                     	;# 
  2946  080D                     	;# 
  2947  080E                     	;# 
  2948  080F                     	;# 
  2949  0810                     	;# 
  2950  0811                     	;# 
  2951  0812                     	;# 
  2952  0813                     	;# 
  2953  0814                     	;# 
  2954  081A                     	;# 
  2955  081B                     	;# 
  2956  081C                     	;# 
  2957  081D                     	;# 
  2958  081E                     	;# 
  2959  081F                     	;# 
  2960  088C                     	;# 
  2961  088D                     	;# 
  2962  088E                     	;# 
  2963  088F                     	;# 
  2964  0890                     	;# 
  2965  0891                     	;# 
  2966  0892                     	;# 
  2967  0893                     	;# 
  2968  0895                     	;# 
  2969  0896                     	;# 
  2970  0897                     	;# 
  2971  0898                     	;# 
  2972  0899                     	;# 
  2973  089A                     	;# 
  2974  089B                     	;# 
  2975  090C                     	;# 
  2976  090E                     	;# 
  2977  090F                     	;# 
  2978  091F                     	;# 
  2979  091F                     	;# 
  2980  098F                     	;# 
  2981  098F                     	;# 
  2982  0990                     	;# 
  2983  0991                     	;# 
  2984  0992                     	;# 
  2985  0993                     	;# 
  2986  0994                     	;# 
  2987  0995                     	;# 
  2988  0996                     	;# 
  2989  0997                     	;# 
  2990  0E0F                     	;# 
  2991  0E10                     	;# 
  2992  0E11                     	;# 
  2993  0E12                     	;# 
  2994  0E13                     	;# 
  2995  0E14                     	;# 
  2996  0E15                     	;# 
  2997  0E16                     	;# 
  2998  0E17                     	;# 
  2999  0E18                     	;# 
  3000  0E19                     	;# 
  3001  0E1A                     	;# 
  3002  0E1B                     	;# 
  3003  0E1C                     	;# 
  3004  0E1D                     	;# 
  3005  0E1E                     	;# 
  3006  0E1F                     	;# 
  3007  0E20                     	;# 
  3008  0E21                     	;# 
  3009  0E22                     	;# 
  3010  0E23                     	;# 
  3011  0E24                     	;# 
  3012  0E25                     	;# 
  3013  0E26                     	;# 
  3014  0E27                     	;# 
  3015  0E28                     	;# 
  3016  0E29                     	;# 
  3017  0E2A                     	;# 
  3018  0E2B                     	;# 
  3019  0E2C                     	;# 
  3020  0E2D                     	;# 
  3021  0E2E                     	;# 
  3022  0E2F                     	;# 
  3023  0E30                     	;# 
  3024  0E31                     	;# 
  3025  0E32                     	;# 
  3026  0E33                     	;# 
  3027  0E34                     	;# 
  3028  0E35                     	;# 
  3029  0E36                     	;# 
  3030  0E37                     	;# 
  3031  0E8F                     	;# 
  3032  0E90                     	;# 
  3033  0E91                     	;# 
  3034  0E92                     	;# 
  3035  0E93                     	;# 
  3036  0E94                     	;# 
  3037  0E95                     	;# 
  3038  0E96                     	;# 
  3039  0E97                     	;# 
  3040  0E9C                     	;# 
  3041  0E9D                     	;# 
  3042  0E9E                     	;# 
  3043  0EA1                     	;# 
  3044  0EA2                     	;# 
  3045  0EA3                     	;# 
  3046  0EA4                     	;# 
  3047  0EA5                     	;# 
  3048  0EA9                     	;# 
  3049  0EAA                     	;# 
  3050  0EAB                     	;# 
  3051  0EAC                     	;# 
  3052  0EB1                     	;# 
  3053  0EB2                     	;# 
  3054  0EB3                     	;# 
  3055  0EB8                     	;# 
  3056  0EB9                     	;# 
  3057  0EBA                     	;# 
  3058  0EBB                     	;# 
  3059  0EBC                     	;# 
  3060  0EBD                     	;# 
  3061  0EBE                     	;# 
  3062  0EC3                     	;# 
  3063  0EC5                     	;# 
  3064  0EC6                     	;# 
  3065  0EC7                     	;# 
  3066  0EC8                     	;# 
  3067  0EC9                     	;# 
  3068  0ECA                     	;# 
  3069  0ECB                     	;# 
  3070  0ECC                     	;# 
  3071  0F10                     	;# 
  3072  0F11                     	;# 
  3073  0F12                     	;# 
  3074  0F13                     	;# 
  3075  0F14                     	;# 
  3076  0F15                     	;# 
  3077  0F16                     	;# 
  3078  0F17                     	;# 
  3079  0F18                     	;# 
  3080  0F19                     	;# 
  3081  0F1A                     	;# 
  3082  0F1B                     	;# 
  3083  0F1C                     	;# 
  3084  0F1D                     	;# 
  3085  0F1E                     	;# 
  3086  0F1F                     	;# 
  3087  0F20                     	;# 
  3088  0F21                     	;# 
  3089  0F22                     	;# 
  3090  0F23                     	;# 
  3091  0F24                     	;# 
  3092  0F25                     	;# 
  3093  0F26                     	;# 
  3094  0F27                     	;# 
  3095  0F38                     	;# 
  3096  0F39                     	;# 
  3097  0F3A                     	;# 
  3098  0F3B                     	;# 
  3099  0F3C                     	;# 
  3100  0F3D                     	;# 
  3101  0F3E                     	;# 
  3102  0F3F                     	;# 
  3103  0F40                     	;# 
  3104  0F41                     	;# 
  3105  0F43                     	;# 
  3106  0F44                     	;# 
  3107  0F45                     	;# 
  3108  0F46                     	;# 
  3109  0F47                     	;# 
  3110  0F48                     	;# 
  3111  0F49                     	;# 
  3112  0F4A                     	;# 
  3113  0F4B                     	;# 
  3114  0F4C                     	;# 
  3115  0F4E                     	;# 
  3116  0F4F                     	;# 
  3117  0F50                     	;# 
  3118  0F51                     	;# 
  3119  0F52                     	;# 
  3120  0F53                     	;# 
  3121  0F54                     	;# 
  3122  0F55                     	;# 
  3123  0F56                     	;# 
  3124  0F57                     	;# 
  3125  0F65                     	;# 
  3126  0F68                     	;# 
  3127  0F69                     	;# 
  3128  0F6A                     	;# 
  3129  0F6B                     	;# 
  3130  0FE4                     	;# 
  3131  0FE5                     	;# 
  3132  0FE6                     	;# 
  3133  0FE7                     	;# 
  3134  0FE8                     	;# 
  3135  0FE9                     	;# 
  3136  0FEA                     	;# 
  3137  0FEB                     	;# 
  3138  0FED                     	;# 
  3139  0FEE                     	;# 
  3140  0FEF                     	;# 
  3141  0000                     	;# 
  3142  0001                     	;# 
  3143  0002                     	;# 
  3144  0003                     	;# 
  3145  0004                     	;# 
  3146  0005                     	;# 
  3147  0006                     	;# 
  3148  0007                     	;# 
  3149  0008                     	;# 
  3150  0009                     	;# 
  3151  000A                     	;# 
  3152  000B                     	;# 
  3153  000C                     	;# 
  3154  000D                     	;# 
  3155  000E                     	;# 
  3156  0010                     	;# 
  3157  0011                     	;# 
  3158  0012                     	;# 
  3159  0013                     	;# 
  3160  0016                     	;# 
  3161  0017                     	;# 
  3162  0018                     	;# 
  3163  001C                     	;# 
  3164  001C                     	;# 
  3165  001D                     	;# 
  3166  001D                     	;# 
  3167  001E                     	;# 
  3168  001F                     	;# 
  3169  008C                     	;# 
  3170  008C                     	;# 
  3171  008D                     	;# 
  3172  008E                     	;# 
  3173  008E                     	;# 
  3174  008F                     	;# 
  3175  0090                     	;# 
  3176  0090                     	;# 
  3177  0091                     	;# 
  3178  0093                     	;# 
  3179  0094                     	;# 
  3180  0095                     	;# 
  3181  0096                     	;# 
  3182  0097                     	;# 
  3183  0098                     	;# 
  3184  0099                     	;# 
  3185  009A                     	;# 
  3186  009B                     	;# 
  3187  009C                     	;# 
  3188  009D                     	;# 
  3189  009E                     	;# 
  3190  010C                     	;# 
  3191  010D                     	;# 
  3192  010E                     	;# 
  3193  010E                     	;# 
  3194  010F                     	;# 
  3195  0110                     	;# 
  3196  0110                     	;# 
  3197  0111                     	;# 
  3198  0112                     	;# 
  3199  0112                     	;# 
  3200  0113                     	;# 
  3201  0114                     	;# 
  3202  0114                     	;# 
  3203  0115                     	;# 
  3204  0116                     	;# 
  3205  0116                     	;# 
  3206  0117                     	;# 
  3207  0119                     	;# 
  3208  0119                     	;# 
  3209  0119                     	;# 
  3210  011A                     	;# 
  3211  011A                     	;# 
  3212  011A                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011B                     	;# 
  3218  011C                     	;# 
  3219  011C                     	;# 
  3220  011C                     	;# 
  3221  011D                     	;# 
  3222  011D                     	;# 
  3223  011D                     	;# 
  3224  011E                     	;# 
  3225  011E                     	;# 
  3226  011E                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  011F                     	;# 
  3232  018C                     	;# 
  3233  018D                     	;# 
  3234  018E                     	;# 
  3235  018F                     	;# 
  3236  0190                     	;# 
  3237  0191                     	;# 
  3238  0192                     	;# 
  3239  0196                     	;# 
  3240  0197                     	;# 
  3241  0198                     	;# 
  3242  0199                     	;# 
  3243  019A                     	;# 
  3244  019B                     	;# 
  3245  019C                     	;# 
  3246  020C                     	;# 
  3247  020D                     	;# 
  3248  020E                     	;# 
  3249  020F                     	;# 
  3250  020F                     	;# 
  3251  0210                     	;# 
  3252  0210                     	;# 
  3253  0211                     	;# 
  3254  0211                     	;# 
  3255  0212                     	;# 
  3256  0213                     	;# 
  3257  0214                     	;# 
  3258  0215                     	;# 
  3259  0215                     	;# 
  3260  0216                     	;# 
  3261  0216                     	;# 
  3262  0217                     	;# 
  3263  0217                     	;# 
  3264  0218                     	;# 
  3265  0219                     	;# 
  3266  021A                     	;# 
  3267  021B                     	;# 
  3268  021B                     	;# 
  3269  021C                     	;# 
  3270  021C                     	;# 
  3271  021D                     	;# 
  3272  021D                     	;# 
  3273  021E                     	;# 
  3274  021F                     	;# 
  3275  028C                     	;# 
  3276  028C                     	;# 
  3277  028D                     	;# 
  3278  028D                     	;# 
  3279  028E                     	;# 
  3280  028F                     	;# 
  3281  0290                     	;# 
  3282  0290                     	;# 
  3283  0291                     	;# 
  3284  0292                     	;# 
  3285  0292                     	;# 
  3286  0293                     	;# 
  3287  0293                     	;# 
  3288  0294                     	;# 
  3289  0295                     	;# 
  3290  0296                     	;# 
  3291  0296                     	;# 
  3292  0297                     	;# 
  3293  0298                     	;# 
  3294  0298                     	;# 
  3295  0299                     	;# 
  3296  0299                     	;# 
  3297  029A                     	;# 
  3298  029B                     	;# 
  3299  029C                     	;# 
  3300  029C                     	;# 
  3301  029D                     	;# 
  3302  030C                     	;# 
  3303  030C                     	;# 
  3304  030D                     	;# 
  3305  030E                     	;# 
  3306  030F                     	;# 
  3307  0310                     	;# 
  3308  0310                     	;# 
  3309  0311                     	;# 
  3310  0312                     	;# 
  3311  0313                     	;# 
  3312  0314                     	;# 
  3313  0314                     	;# 
  3314  0315                     	;# 
  3315  0316                     	;# 
  3316  0317                     	;# 
  3317  0318                     	;# 
  3318  0318                     	;# 
  3319  0319                     	;# 
  3320  031A                     	;# 
  3321  031B                     	;# 
  3322  031C                     	;# 
  3323  031C                     	;# 
  3324  031D                     	;# 
  3325  031E                     	;# 
  3326  031F                     	;# 
  3327  038C                     	;# 
  3328  038D                     	;# 
  3329  038E                     	;# 
  3330  0390                     	;# 
  3331  0391                     	;# 
  3332  0392                     	;# 
  3333  040C                     	;# 
  3334  040D                     	;# 
  3335  040E                     	;# 
  3336  040F                     	;# 
  3337  0410                     	;# 
  3338  0411                     	;# 
  3339  0416                     	;# 
  3340  0416                     	;# 
  3341  0417                     	;# 
  3342  0418                     	;# 
  3343  0418                     	;# 
  3344  0419                     	;# 
  3345  041A                     	;# 
  3346  041A                     	;# 
  3347  041B                     	;# 
  3348  041C                     	;# 
  3349  041C                     	;# 
  3350  041D                     	;# 
  3351  041E                     	;# 
  3352  041F                     	;# 
  3353  048C                     	;# 
  3354  048C                     	;# 
  3355  048D                     	;# 
  3356  048E                     	;# 
  3357  048F                     	;# 
  3358  048F                     	;# 
  3359  0490                     	;# 
  3360  0491                     	;# 
  3361  0492                     	;# 
  3362  0492                     	;# 
  3363  0493                     	;# 
  3364  0494                     	;# 
  3365  0495                     	;# 
  3366  0495                     	;# 
  3367  0496                     	;# 
  3368  0497                     	;# 
  3369  0498                     	;# 
  3370  0499                     	;# 
  3371  049A                     	;# 
  3372  049B                     	;# 
  3373  049C                     	;# 
  3374  049D                     	;# 
  3375  050C                     	;# 
  3376  050C                     	;# 
  3377  050D                     	;# 
  3378  050E                     	;# 
  3379  050F                     	;# 
  3380  050F                     	;# 
  3381  0510                     	;# 
  3382  0511                     	;# 
  3383  0512                     	;# 
  3384  0512                     	;# 
  3385  0513                     	;# 
  3386  0514                     	;# 
  3387  0515                     	;# 
  3388  0515                     	;# 
  3389  0516                     	;# 
  3390  0517                     	;# 
  3391  0518                     	;# 
  3392  0519                     	;# 
  3393  051A                     	;# 
  3394  051B                     	;# 
  3395  051C                     	;# 
  3396  051D                     	;# 
  3397  058C                     	;# 
  3398  058C                     	;# 
  3399  058D                     	;# 
  3400  058E                     	;# 
  3401  058F                     	;# 
  3402  058F                     	;# 
  3403  0590                     	;# 
  3404  0591                     	;# 
  3405  0592                     	;# 
  3406  0593                     	;# 
  3407  060C                     	;# 
  3408  060D                     	;# 
  3409  060E                     	;# 
  3410  060F                     	;# 
  3411  0610                     	;# 
  3412  0611                     	;# 
  3413  0612                     	;# 
  3414  0613                     	;# 
  3415  0614                     	;# 
  3416  0616                     	;# 
  3417  0617                     	;# 
  3418  0618                     	;# 
  3419  0619                     	;# 
  3420  061A                     	;# 
  3421  061B                     	;# 
  3422  061C                     	;# 
  3423  061D                     	;# 
  3424  061E                     	;# 
  3425  068C                     	;# 
  3426  068D                     	;# 
  3427  068E                     	;# 
  3428  068F                     	;# 
  3429  0690                     	;# 
  3430  0691                     	;# 
  3431  0692                     	;# 
  3432  0693                     	;# 
  3433  0694                     	;# 
  3434  070C                     	;# 
  3435  070D                     	;# 
  3436  070E                     	;# 
  3437  070F                     	;# 
  3438  0710                     	;# 
  3439  0711                     	;# 
  3440  0712                     	;# 
  3441  0713                     	;# 
  3442  0714                     	;# 
  3443  0716                     	;# 
  3444  0717                     	;# 
  3445  0718                     	;# 
  3446  0719                     	;# 
  3447  071A                     	;# 
  3448  071B                     	;# 
  3449  071C                     	;# 
  3450  071D                     	;# 
  3451  071E                     	;# 
  3452  0796                     	;# 
  3453  0797                     	;# 
  3454  0798                     	;# 
  3455  0799                     	;# 
  3456  079A                     	;# 
  3457  079B                     	;# 
  3458  080C                     	;# 
  3459  080D                     	;# 
  3460  080E                     	;# 
  3461  080F                     	;# 
  3462  0810                     	;# 
  3463  0811                     	;# 
  3464  0812                     	;# 
  3465  0813                     	;# 
  3466  0814                     	;# 
  3467  081A                     	;# 
  3468  081B                     	;# 
  3469  081C                     	;# 
  3470  081D                     	;# 
  3471  081E                     	;# 
  3472  081F                     	;# 
  3473  088C                     	;# 
  3474  088D                     	;# 
  3475  088E                     	;# 
  3476  088F                     	;# 
  3477  0890                     	;# 
  3478  0891                     	;# 
  3479  0892                     	;# 
  3480  0893                     	;# 
  3481  0895                     	;# 
  3482  0896                     	;# 
  3483  0897                     	;# 
  3484  0898                     	;# 
  3485  0899                     	;# 
  3486  089A                     	;# 
  3487  089B                     	;# 
  3488  090C                     	;# 
  3489  090E                     	;# 
  3490  090F                     	;# 
  3491  091F                     	;# 
  3492  091F                     	;# 
  3493  098F                     	;# 
  3494  098F                     	;# 
  3495  0990                     	;# 
  3496  0991                     	;# 
  3497  0992                     	;# 
  3498  0993                     	;# 
  3499  0994                     	;# 
  3500  0995                     	;# 
  3501  0996                     	;# 
  3502  0997                     	;# 
  3503  0E0F                     	;# 
  3504  0E10                     	;# 
  3505  0E11                     	;# 
  3506  0E12                     	;# 
  3507  0E13                     	;# 
  3508  0E14                     	;# 
  3509  0E15                     	;# 
  3510  0E16                     	;# 
  3511  0E17                     	;# 
  3512  0E18                     	;# 
  3513  0E19                     	;# 
  3514  0E1A                     	;# 
  3515  0E1B                     	;# 
  3516  0E1C                     	;# 
  3517  0E1D                     	;# 
  3518  0E1E                     	;# 
  3519  0E1F                     	;# 
  3520  0E20                     	;# 
  3521  0E21                     	;# 
  3522  0E22                     	;# 
  3523  0E23                     	;# 
  3524  0E24                     	;# 
  3525  0E25                     	;# 
  3526  0E26                     	;# 
  3527  0E27                     	;# 
  3528  0E28                     	;# 
  3529  0E29                     	;# 
  3530  0E2A                     	;# 
  3531  0E2B                     	;# 
  3532  0E2C                     	;# 
  3533  0E2D                     	;# 
  3534  0E2E                     	;# 
  3535  0E2F                     	;# 
  3536  0E30                     	;# 
  3537  0E31                     	;# 
  3538  0E32                     	;# 
  3539  0E33                     	;# 
  3540  0E34                     	;# 
  3541  0E35                     	;# 
  3542  0E36                     	;# 
  3543  0E37                     	;# 
  3544  0E8F                     	;# 
  3545  0E90                     	;# 
  3546  0E91                     	;# 
  3547  0E92                     	;# 
  3548  0E93                     	;# 
  3549  0E94                     	;# 
  3550  0E95                     	;# 
  3551  0E96                     	;# 
  3552  0E97                     	;# 
  3553  0E9C                     	;# 
  3554  0E9D                     	;# 
  3555  0E9E                     	;# 
  3556  0EA1                     	;# 
  3557  0EA2                     	;# 
  3558  0EA3                     	;# 
  3559  0EA4                     	;# 
  3560  0EA5                     	;# 
  3561  0EA9                     	;# 
  3562  0EAA                     	;# 
  3563  0EAB                     	;# 
  3564  0EAC                     	;# 
  3565  0EB1                     	;# 
  3566  0EB2                     	;# 
  3567  0EB3                     	;# 
  3568  0EB8                     	;# 
  3569  0EB9                     	;# 
  3570  0EBA                     	;# 
  3571  0EBB                     	;# 
  3572  0EBC                     	;# 
  3573  0EBD                     	;# 
  3574  0EBE                     	;# 
  3575  0EC3                     	;# 
  3576  0EC5                     	;# 
  3577  0EC6                     	;# 
  3578  0EC7                     	;# 
  3579  0EC8                     	;# 
  3580  0EC9                     	;# 
  3581  0ECA                     	;# 
  3582  0ECB                     	;# 
  3583  0ECC                     	;# 
  3584  0F10                     	;# 
  3585  0F11                     	;# 
  3586  0F12                     	;# 
  3587  0F13                     	;# 
  3588  0F14                     	;# 
  3589  0F15                     	;# 
  3590  0F16                     	;# 
  3591  0F17                     	;# 
  3592  0F18                     	;# 
  3593  0F19                     	;# 
  3594  0F1A                     	;# 
  3595  0F1B                     	;# 
  3596  0F1C                     	;# 
  3597  0F1D                     	;# 
  3598  0F1E                     	;# 
  3599  0F1F                     	;# 
  3600  0F20                     	;# 
  3601  0F21                     	;# 
  3602  0F22                     	;# 
  3603  0F23                     	;# 
  3604  0F24                     	;# 
  3605  0F25                     	;# 
  3606  0F26                     	;# 
  3607  0F27                     	;# 
  3608  0F38                     	;# 
  3609  0F39                     	;# 
  3610  0F3A                     	;# 
  3611  0F3B                     	;# 
  3612  0F3C                     	;# 
  3613  0F3D                     	;# 
  3614  0F3E                     	;# 
  3615  0F3F                     	;# 
  3616  0F40                     	;# 
  3617  0F41                     	;# 
  3618  0F43                     	;# 
  3619  0F44                     	;# 
  3620  0F45                     	;# 
  3621  0F46                     	;# 
  3622  0F47                     	;# 
  3623  0F48                     	;# 
  3624  0F49                     	;# 
  3625  0F4A                     	;# 
  3626  0F4B                     	;# 
  3627  0F4C                     	;# 
  3628  0F4E                     	;# 
  3629  0F4F                     	;# 
  3630  0F50                     	;# 
  3631  0F51                     	;# 
  3632  0F52                     	;# 
  3633  0F53                     	;# 
  3634  0F54                     	;# 
  3635  0F55                     	;# 
  3636  0F56                     	;# 
  3637  0F57                     	;# 
  3638  0F65                     	;# 
  3639  0F68                     	;# 
  3640  0F69                     	;# 
  3641  0F6A                     	;# 
  3642  0F6B                     	;# 
  3643  0FE4                     	;# 
  3644  0FE5                     	;# 
  3645  0FE6                     	;# 
  3646  0FE7                     	;# 
  3647  0FE8                     	;# 
  3648  0FE9                     	;# 
  3649  0FEA                     	;# 
  3650  0FEB                     	;# 
  3651  0FED                     	;# 
  3652  0FEE                     	;# 
  3653  0FEF                     	;# 
  3654  0000                     	;# 
  3655  0001                     	;# 
  3656  0002                     	;# 
  3657  0003                     	;# 
  3658  0004                     	;# 
  3659  0005                     	;# 
  3660  0006                     	;# 
  3661  0007                     	;# 
  3662  0008                     	;# 
  3663  0009                     	;# 
  3664  000A                     	;# 
  3665  000B                     	;# 
  3666  000C                     	;# 
  3667  000D                     	;# 
  3668  000E                     	;# 
  3669  0010                     	;# 
  3670  0011                     	;# 
  3671  0012                     	;# 
  3672  0013                     	;# 
  3673  0016                     	;# 
  3674  0017                     	;# 
  3675  0018                     	;# 
  3676  001C                     	;# 
  3677  001C                     	;# 
  3678  001D                     	;# 
  3679  001D                     	;# 
  3680  001E                     	;# 
  3681  001F                     	;# 
  3682  008C                     	;# 
  3683  008C                     	;# 
  3684  008D                     	;# 
  3685  008E                     	;# 
  3686  008E                     	;# 
  3687  008F                     	;# 
  3688  0090                     	;# 
  3689  0090                     	;# 
  3690  0091                     	;# 
  3691  0093                     	;# 
  3692  0094                     	;# 
  3693  0095                     	;# 
  3694  0096                     	;# 
  3695  0097                     	;# 
  3696  0098                     	;# 
  3697  0099                     	;# 
  3698  009A                     	;# 
  3699  009B                     	;# 
  3700  009C                     	;# 
  3701  009D                     	;# 
  3702  009E                     	;# 
  3703  010C                     	;# 
  3704  010D                     	;# 
  3705  010E                     	;# 
  3706  010E                     	;# 
  3707  010F                     	;# 
  3708  0110                     	;# 
  3709  0110                     	;# 
  3710  0111                     	;# 
  3711  0112                     	;# 
  3712  0112                     	;# 
  3713  0113                     	;# 
  3714  0114                     	;# 
  3715  0114                     	;# 
  3716  0115                     	;# 
  3717  0116                     	;# 
  3718  0116                     	;# 
  3719  0117                     	;# 
  3720  0119                     	;# 
  3721  0119                     	;# 
  3722  0119                     	;# 
  3723  011A                     	;# 
  3724  011A                     	;# 
  3725  011A                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011B                     	;# 
  3731  011C                     	;# 
  3732  011C                     	;# 
  3733  011C                     	;# 
  3734  011D                     	;# 
  3735  011D                     	;# 
  3736  011D                     	;# 
  3737  011E                     	;# 
  3738  011E                     	;# 
  3739  011E                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  011F                     	;# 
  3745  018C                     	;# 
  3746  018D                     	;# 
  3747  018E                     	;# 
  3748  018F                     	;# 
  3749  0190                     	;# 
  3750  0191                     	;# 
  3751  0192                     	;# 
  3752  0196                     	;# 
  3753  0197                     	;# 
  3754  0198                     	;# 
  3755  0199                     	;# 
  3756  019A                     	;# 
  3757  019B                     	;# 
  3758  019C                     	;# 
  3759  020C                     	;# 
  3760  020D                     	;# 
  3761  020E                     	;# 
  3762  020F                     	;# 
  3763  020F                     	;# 
  3764  0210                     	;# 
  3765  0210                     	;# 
  3766  0211                     	;# 
  3767  0211                     	;# 
  3768  0212                     	;# 
  3769  0213                     	;# 
  3770  0214                     	;# 
  3771  0215                     	;# 
  3772  0215                     	;# 
  3773  0216                     	;# 
  3774  0216                     	;# 
  3775  0217                     	;# 
  3776  0217                     	;# 
  3777  0218                     	;# 
  3778  0219                     	;# 
  3779  021A                     	;# 
  3780  021B                     	;# 
  3781  021B                     	;# 
  3782  021C                     	;# 
  3783  021C                     	;# 
  3784  021D                     	;# 
  3785  021D                     	;# 
  3786  021E                     	;# 
  3787  021F                     	;# 
  3788  028C                     	;# 
  3789  028C                     	;# 
  3790  028D                     	;# 
  3791  028D                     	;# 
  3792  028E                     	;# 
  3793  028F                     	;# 
  3794  0290                     	;# 
  3795  0290                     	;# 
  3796  0291                     	;# 
  3797  0292                     	;# 
  3798  0292                     	;# 
  3799  0293                     	;# 
  3800  0293                     	;# 
  3801  0294                     	;# 
  3802  0295                     	;# 
  3803  0296                     	;# 
  3804  0296                     	;# 
  3805  0297                     	;# 
  3806  0298                     	;# 
  3807  0298                     	;# 
  3808  0299                     	;# 
  3809  0299                     	;# 
  3810  029A                     	;# 
  3811  029B                     	;# 
  3812  029C                     	;# 
  3813  029C                     	;# 
  3814  029D                     	;# 
  3815  030C                     	;# 
  3816  030C                     	;# 
  3817  030D                     	;# 
  3818  030E                     	;# 
  3819  030F                     	;# 
  3820  0310                     	;# 
  3821  0310                     	;# 
  3822  0311                     	;# 
  3823  0312                     	;# 
  3824  0313                     	;# 
  3825  0314                     	;# 
  3826  0314                     	;# 
  3827  0315                     	;# 
  3828  0316                     	;# 
  3829  0317                     	;# 
  3830  0318                     	;# 
  3831  0318                     	;# 
  3832  0319                     	;# 
  3833  031A                     	;# 
  3834  031B                     	;# 
  3835  031C                     	;# 
  3836  031C                     	;# 
  3837  031D                     	;# 
  3838  031E                     	;# 
  3839  031F                     	;# 
  3840  038C                     	;# 
  3841  038D                     	;# 
  3842  038E                     	;# 
  3843  0390                     	;# 
  3844  0391                     	;# 
  3845  0392                     	;# 
  3846  040C                     	;# 
  3847  040D                     	;# 
  3848  040E                     	;# 
  3849  040F                     	;# 
  3850  0410                     	;# 
  3851  0411                     	;# 
  3852  0416                     	;# 
  3853  0416                     	;# 
  3854  0417                     	;# 
  3855  0418                     	;# 
  3856  0418                     	;# 
  3857  0419                     	;# 
  3858  041A                     	;# 
  3859  041A                     	;# 
  3860  041B                     	;# 
  3861  041C                     	;# 
  3862  041C                     	;# 
  3863  041D                     	;# 
  3864  041E                     	;# 
  3865  041F                     	;# 
  3866  048C                     	;# 
  3867  048C                     	;# 
  3868  048D                     	;# 
  3869  048E                     	;# 
  3870  048F                     	;# 
  3871  048F                     	;# 
  3872  0490                     	;# 
  3873  0491                     	;# 
  3874  0492                     	;# 
  3875  0492                     	;# 
  3876  0493                     	;# 
  3877  0494                     	;# 
  3878  0495                     	;# 
  3879  0495                     	;# 
  3880  0496                     	;# 
  3881  0497                     	;# 
  3882  0498                     	;# 
  3883  0499                     	;# 
  3884  049A                     	;# 
  3885  049B                     	;# 
  3886  049C                     	;# 
  3887  049D                     	;# 
  3888  050C                     	;# 
  3889  050C                     	;# 
  3890  050D                     	;# 
  3891  050E                     	;# 
  3892  050F                     	;# 
  3893  050F                     	;# 
  3894  0510                     	;# 
  3895  0511                     	;# 
  3896  0512                     	;# 
  3897  0512                     	;# 
  3898  0513                     	;# 
  3899  0514                     	;# 
  3900  0515                     	;# 
  3901  0515                     	;# 
  3902  0516                     	;# 
  3903  0517                     	;# 
  3904  0518                     	;# 
  3905  0519                     	;# 
  3906  051A                     	;# 
  3907  051B                     	;# 
  3908  051C                     	;# 
  3909  051D                     	;# 
  3910  058C                     	;# 
  3911  058C                     	;# 
  3912  058D                     	;# 
  3913  058E                     	;# 
  3914  058F                     	;# 
  3915  058F                     	;# 
  3916  0590                     	;# 
  3917  0591                     	;# 
  3918  0592                     	;# 
  3919  0593                     	;# 
  3920  060C                     	;# 
  3921  060D                     	;# 
  3922  060E                     	;# 
  3923  060F                     	;# 
  3924  0610                     	;# 
  3925  0611                     	;# 
  3926  0612                     	;# 
  3927  0613                     	;# 
  3928  0614                     	;# 
  3929  0616                     	;# 
  3930  0617                     	;# 
  3931  0618                     	;# 
  3932  0619                     	;# 
  3933  061A                     	;# 
  3934  061B                     	;# 
  3935  061C                     	;# 
  3936  061D                     	;# 
  3937  061E                     	;# 
  3938  068C                     	;# 
  3939  068D                     	;# 
  3940  068E                     	;# 
  3941  068F                     	;# 
  3942  0690                     	;# 
  3943  0691                     	;# 
  3944  0692                     	;# 
  3945  0693                     	;# 
  3946  0694                     	;# 
  3947  070C                     	;# 
  3948  070D                     	;# 
  3949  070E                     	;# 
  3950  070F                     	;# 
  3951  0710                     	;# 
  3952  0711                     	;# 
  3953  0712                     	;# 
  3954  0713                     	;# 
  3955  0714                     	;# 
  3956  0716                     	;# 
  3957  0717                     	;# 
  3958  0718                     	;# 
  3959  0719                     	;# 
  3960  071A                     	;# 
  3961  071B                     	;# 
  3962  071C                     	;# 
  3963  071D                     	;# 
  3964  071E                     	;# 
  3965  0796                     	;# 
  3966  0797                     	;# 
  3967  0798                     	;# 
  3968  0799                     	;# 
  3969  079A                     	;# 
  3970  079B                     	;# 
  3971  080C                     	;# 
  3972  080D                     	;# 
  3973  080E                     	;# 
  3974  080F                     	;# 
  3975  0810                     	;# 
  3976  0811                     	;# 
  3977  0812                     	;# 
  3978  0813                     	;# 
  3979  0814                     	;# 
  3980  081A                     	;# 
  3981  081B                     	;# 
  3982  081C                     	;# 
  3983  081D                     	;# 
  3984  081E                     	;# 
  3985  081F                     	;# 
  3986  088C                     	;# 
  3987  088D                     	;# 
  3988  088E                     	;# 
  3989  088F                     	;# 
  3990  0890                     	;# 
  3991  0891                     	;# 
  3992  0892                     	;# 
  3993  0893                     	;# 
  3994  0895                     	;# 
  3995  0896                     	;# 
  3996  0897                     	;# 
  3997  0898                     	;# 
  3998  0899                     	;# 
  3999  089A                     	;# 
  4000  089B                     	;# 
  4001  090C                     	;# 
  4002  090E                     	;# 
  4003  090F                     	;# 
  4004  091F                     	;# 
  4005  091F                     	;# 
  4006  098F                     	;# 
  4007  098F                     	;# 
  4008  0990                     	;# 
  4009  0991                     	;# 
  4010  0992                     	;# 
  4011  0993                     	;# 
  4012  0994                     	;# 
  4013  0995                     	;# 
  4014  0996                     	;# 
  4015  0997                     	;# 
  4016  0E0F                     	;# 
  4017  0E10                     	;# 
  4018  0E11                     	;# 
  4019  0E12                     	;# 
  4020  0E13                     	;# 
  4021  0E14                     	;# 
  4022  0E15                     	;# 
  4023  0E16                     	;# 
  4024  0E17                     	;# 
  4025  0E18                     	;# 
  4026  0E19                     	;# 
  4027  0E1A                     	;# 
  4028  0E1B                     	;# 
  4029  0E1C                     	;# 
  4030  0E1D                     	;# 
  4031  0E1E                     	;# 
  4032  0E1F                     	;# 
  4033  0E20                     	;# 
  4034  0E21                     	;# 
  4035  0E22                     	;# 
  4036  0E23                     	;# 
  4037  0E24                     	;# 
  4038  0E25                     	;# 
  4039  0E26                     	;# 
  4040  0E27                     	;# 
  4041  0E28                     	;# 
  4042  0E29                     	;# 
  4043  0E2A                     	;# 
  4044  0E2B                     	;# 
  4045  0E2C                     	;# 
  4046  0E2D                     	;# 
  4047  0E2E                     	;# 
  4048  0E2F                     	;# 
  4049  0E30                     	;# 
  4050  0E31                     	;# 
  4051  0E32                     	;# 
  4052  0E33                     	;# 
  4053  0E34                     	;# 
  4054  0E35                     	;# 
  4055  0E36                     	;# 
  4056  0E37                     	;# 
  4057  0E8F                     	;# 
  4058  0E90                     	;# 
  4059  0E91                     	;# 
  4060  0E92                     	;# 
  4061  0E93                     	;# 
  4062  0E94                     	;# 
  4063  0E95                     	;# 
  4064  0E96                     	;# 
  4065  0E97                     	;# 
  4066  0E9C                     	;# 
  4067  0E9D                     	;# 
  4068  0E9E                     	;# 
  4069  0EA1                     	;# 
  4070  0EA2                     	;# 
  4071  0EA3                     	;# 
  4072  0EA4                     	;# 
  4073  0EA5                     	;# 
  4074  0EA9                     	;# 
  4075  0EAA                     	;# 
  4076  0EAB                     	;# 
  4077  0EAC                     	;# 
  4078  0EB1                     	;# 
  4079  0EB2                     	;# 
  4080  0EB3                     	;# 
  4081  0EB8                     	;# 
  4082  0EB9                     	;# 
  4083  0EBA                     	;# 
  4084  0EBB                     	;# 
  4085  0EBC                     	;# 
  4086  0EBD                     	;# 
  4087  0EBE                     	;# 
  4088  0EC3                     	;# 
  4089  0EC5                     	;# 
  4090  0EC6                     	;# 
  4091  0EC7                     	;# 
  4092  0EC8                     	;# 
  4093  0EC9                     	;# 
  4094  0ECA                     	;# 
  4095  0ECB                     	;# 
  4096  0ECC                     	;# 
  4097  0F10                     	;# 
  4098  0F11                     	;# 
  4099  0F12                     	;# 
  4100  0F13                     	;# 
  4101  0F14                     	;# 
  4102  0F15                     	;# 
  4103  0F16                     	;# 
  4104  0F17                     	;# 
  4105  0F18                     	;# 
  4106  0F19                     	;# 
  4107  0F1A                     	;# 
  4108  0F1B                     	;# 
  4109  0F1C                     	;# 
  4110  0F1D                     	;# 
  4111  0F1E                     	;# 
  4112  0F1F                     	;# 
  4113  0F20                     	;# 
  4114  0F21                     	;# 
  4115  0F22                     	;# 
  4116  0F23                     	;# 
  4117  0F24                     	;# 
  4118  0F25                     	;# 
  4119  0F26                     	;# 
  4120  0F27                     	;# 
  4121  0F38                     	;# 
  4122  0F39                     	;# 
  4123  0F3A                     	;# 
  4124  0F3B                     	;# 
  4125  0F3C                     	;# 
  4126  0F3D                     	;# 
  4127  0F3E                     	;# 
  4128  0F3F                     	;# 
  4129  0F40                     	;# 
  4130  0F41                     	;# 
  4131  0F43                     	;# 
  4132  0F44                     	;# 
  4133  0F45                     	;# 
  4134  0F46                     	;# 
  4135  0F47                     	;# 
  4136  0F48                     	;# 
  4137  0F49                     	;# 
  4138  0F4A                     	;# 
  4139  0F4B                     	;# 
  4140  0F4C                     	;# 
  4141  0F4E                     	;# 
  4142  0F4F                     	;# 
  4143  0F50                     	;# 
  4144  0F51                     	;# 
  4145  0F52                     	;# 
  4146  0F53                     	;# 
  4147  0F54                     	;# 
  4148  0F55                     	;# 
  4149  0F56                     	;# 
  4150  0F57                     	;# 
  4151  0F65                     	;# 
  4152  0F68                     	;# 
  4153  0F69                     	;# 
  4154  0F6A                     	;# 
  4155  0F6B                     	;# 
  4156  0FE4                     	;# 
  4157  0FE5                     	;# 
  4158  0FE6                     	;# 
  4159  0FE7                     	;# 
  4160  0FE8                     	;# 
  4161  0FE9                     	;# 
  4162  0FEA                     	;# 
  4163  0FEB                     	;# 
  4164  0FED                     	;# 
  4165  0FEE                     	;# 
  4166  0FEF                     	;# 
  4167  0000                     	;# 
  4168  0001                     	;# 
  4169  0002                     	;# 
  4170  0003                     	;# 
  4171  0004                     	;# 
  4172  0005                     	;# 
  4173  0006                     	;# 
  4174  0007                     	;# 
  4175  0008                     	;# 
  4176  0009                     	;# 
  4177  000A                     	;# 
  4178  000B                     	;# 
  4179  000C                     	;# 
  4180  000D                     	;# 
  4181  000E                     	;# 
  4182  0010                     	;# 
  4183  0011                     	;# 
  4184  0012                     	;# 
  4185  0013                     	;# 
  4186  0016                     	;# 
  4187  0017                     	;# 
  4188  0018                     	;# 
  4189  001C                     	;# 
  4190  001C                     	;# 
  4191  001D                     	;# 
  4192  001D                     	;# 
  4193  001E                     	;# 
  4194  001F                     	;# 
  4195  008C                     	;# 
  4196  008C                     	;# 
  4197  008D                     	;# 
  4198  008E                     	;# 
  4199  008E                     	;# 
  4200  008F                     	;# 
  4201  0090                     	;# 
  4202  0090                     	;# 
  4203  0091                     	;# 
  4204  0093                     	;# 
  4205  0094                     	;# 
  4206  0095                     	;# 
  4207  0096                     	;# 
  4208  0097                     	;# 
  4209  0098                     	;# 
  4210  0099                     	;# 
  4211  009A                     	;# 
  4212  009B                     	;# 
  4213  009C                     	;# 
  4214  009D                     	;# 
  4215  009E                     	;# 
  4216  010C                     	;# 
  4217  010D                     	;# 
  4218  010E                     	;# 
  4219  010E                     	;# 
  4220  010F                     	;# 
  4221  0110                     	;# 
  4222  0110                     	;# 
  4223  0111                     	;# 
  4224  0112                     	;# 
  4225  0112                     	;# 
  4226  0113                     	;# 
  4227  0114                     	;# 
  4228  0114                     	;# 
  4229  0115                     	;# 
  4230  0116                     	;# 
  4231  0116                     	;# 
  4232  0117                     	;# 
  4233  0119                     	;# 
  4234  0119                     	;# 
  4235  0119                     	;# 
  4236  011A                     	;# 
  4237  011A                     	;# 
  4238  011A                     	;# 
  4239  011B                     	;# 
  4240  011B                     	;# 
  4241  011B                     	;# 
  4242  011B                     	;# 
  4243  011B                     	;# 
  4244  011C                     	;# 
  4245  011C                     	;# 
  4246  011C                     	;# 
  4247  011D                     	;# 
  4248  011D                     	;# 
  4249  011D                     	;# 
  4250  011E                     	;# 
  4251  011E                     	;# 
  4252  011E                     	;# 
  4253  011F                     	;# 
  4254  011F                     	;# 
  4255  011F                     	;# 
  4256  011F                     	;# 
  4257  011F                     	;# 
  4258  018C                     	;# 
  4259  018D                     	;# 
  4260  018E                     	;# 
  4261  018F                     	;# 
  4262  0190                     	;# 
  4263  0191                     	;# 
  4264  0192                     	;# 
  4265  0196                     	;# 
  4266  0197                     	;# 
  4267  0198                     	;# 
  4268  0199                     	;# 
  4269  019A                     	;# 
  4270  019B                     	;# 
  4271  019C                     	;# 
  4272  020C                     	;# 
  4273  020D                     	;# 
  4274  020E                     	;# 
  4275  020F                     	;# 
  4276  020F                     	;# 
  4277  0210                     	;# 
  4278  0210                     	;# 
  4279  0211                     	;# 
  4280  0211                     	;# 
  4281  0212                     	;# 
  4282  0213                     	;# 
  4283  0214                     	;# 
  4284  0215                     	;# 
  4285  0215                     	;# 
  4286  0216                     	;# 
  4287  0216                     	;# 
  4288  0217                     	;# 
  4289  0217                     	;# 
  4290  0218                     	;# 
  4291  0219                     	;# 
  4292  021A                     	;# 
  4293  021B                     	;# 
  4294  021B                     	;# 
  4295  021C                     	;# 
  4296  021C                     	;# 
  4297  021D                     	;# 
  4298  021D                     	;# 
  4299  021E                     	;# 
  4300  021F                     	;# 
  4301  028C                     	;# 
  4302  028C                     	;# 
  4303  028D                     	;# 
  4304  028D                     	;# 
  4305  028E                     	;# 
  4306  028F                     	;# 
  4307  0290                     	;# 
  4308  0290                     	;# 
  4309  0291                     	;# 
  4310  0292                     	;# 
  4311  0292                     	;# 
  4312  0293                     	;# 
  4313  0293                     	;# 
  4314  0294                     	;# 
  4315  0295                     	;# 
  4316  0296                     	;# 
  4317  0296                     	;# 
  4318  0297                     	;# 
  4319  0298                     	;# 
  4320  0298                     	;# 
  4321  0299                     	;# 
  4322  0299                     	;# 
  4323  029A                     	;# 
  4324  029B                     	;# 
  4325  029C                     	;# 
  4326  029C                     	;# 
  4327  029D                     	;# 
  4328  030C                     	;# 
  4329  030C                     	;# 
  4330  030D                     	;# 
  4331  030E                     	;# 
  4332  030F                     	;# 
  4333  0310                     	;# 
  4334  0310                     	;# 
  4335  0311                     	;# 
  4336  0312                     	;# 
  4337  0313                     	;# 
  4338  0314                     	;# 
  4339  0314                     	;# 
  4340  0315                     	;# 
  4341  0316                     	;# 
  4342  0317                     	;# 
  4343  0318                     	;# 
  4344  0318                     	;# 
  4345  0319                     	;# 
  4346  031A                     	;# 
  4347  031B                     	;# 
  4348  031C                     	;# 
  4349  031C                     	;# 
  4350  031D                     	;# 
  4351  031E                     	;# 
  4352  031F                     	;# 
  4353  038C                     	;# 
  4354  038D                     	;# 
  4355  038E                     	;# 
  4356  0390                     	;# 
  4357  0391                     	;# 
  4358  0392                     	;# 
  4359  040C                     	;# 
  4360  040D                     	;# 
  4361  040E                     	;# 
  4362  040F                     	;# 
  4363  0410                     	;# 
  4364  0411                     	;# 
  4365  0416                     	;# 
  4366  0416                     	;# 
  4367  0417                     	;# 
  4368  0418                     	;# 
  4369  0418                     	;# 
  4370  0419                     	;# 
  4371  041A                     	;# 
  4372  041A                     	;# 
  4373  041B                     	;# 
  4374  041C                     	;# 
  4375  041C                     	;# 
  4376  041D                     	;# 
  4377  041E                     	;# 
  4378  041F                     	;# 
  4379  048C                     	;# 
  4380  048C                     	;# 
  4381  048D                     	;# 
  4382  048E                     	;# 
  4383  048F                     	;# 
  4384  048F                     	;# 
  4385  0490                     	;# 
  4386  0491                     	;# 
  4387  0492                     	;# 
  4388  0492                     	;# 
  4389  0493                     	;# 
  4390  0494                     	;# 
  4391  0495                     	;# 
  4392  0495                     	;# 
  4393  0496                     	;# 
  4394  0497                     	;# 
  4395  0498                     	;# 
  4396  0499                     	;# 
  4397  049A                     	;# 
  4398  049B                     	;# 
  4399  049C                     	;# 
  4400  049D                     	;# 
  4401  050C                     	;# 
  4402  050C                     	;# 
  4403  050D                     	;# 
  4404  050E                     	;# 
  4405  050F                     	;# 
  4406  050F                     	;# 
  4407  0510                     	;# 
  4408  0511                     	;# 
  4409  0512                     	;# 
  4410  0512                     	;# 
  4411  0513                     	;# 
  4412  0514                     	;# 
  4413  0515                     	;# 
  4414  0515                     	;# 
  4415  0516                     	;# 
  4416  0517                     	;# 
  4417  0518                     	;# 
  4418  0519                     	;# 
  4419  051A                     	;# 
  4420  051B                     	;# 
  4421  051C                     	;# 
  4422  051D                     	;# 
  4423  058C                     	;# 
  4424  058C                     	;# 
  4425  058D                     	;# 
  4426  058E                     	;# 
  4427  058F                     	;# 
  4428  058F                     	;# 
  4429  0590                     	;# 
  4430  0591                     	;# 
  4431  0592                     	;# 
  4432  0593                     	;# 
  4433  060C                     	;# 
  4434  060D                     	;# 
  4435  060E                     	;# 
  4436  060F                     	;# 
  4437  0610                     	;# 
  4438  0611                     	;# 
  4439  0612                     	;# 
  4440  0613                     	;# 
  4441  0614                     	;# 
  4442  0616                     	;# 
  4443  0617                     	;# 
  4444  0618                     	;# 
  4445  0619                     	;# 
  4446  061A                     	;# 
  4447  061B                     	;# 
  4448  061C                     	;# 
  4449  061D                     	;# 
  4450  061E                     	;# 
  4451  068C                     	;# 
  4452  068D                     	;# 
  4453  068E                     	;# 
  4454  068F                     	;# 
  4455  0690                     	;# 
  4456  0691                     	;# 
  4457  0692                     	;# 
  4458  0693                     	;# 
  4459  0694                     	;# 
  4460  070C                     	;# 
  4461  070D                     	;# 
  4462  070E                     	;# 
  4463  070F                     	;# 
  4464  0710                     	;# 
  4465  0711                     	;# 
  4466  0712                     	;# 
  4467  0713                     	;# 
  4468  0714                     	;# 
  4469  0716                     	;# 
  4470  0717                     	;# 
  4471  0718                     	;# 
  4472  0719                     	;# 
  4473  071A                     	;# 
  4474  071B                     	;# 
  4475  071C                     	;# 
  4476  071D                     	;# 
  4477  071E                     	;# 
  4478  0796                     	;# 
  4479  0797                     	;# 
  4480  0798                     	;# 
  4481  0799                     	;# 
  4482  079A                     	;# 
  4483  079B                     	;# 
  4484  080C                     	;# 
  4485  080D                     	;# 
  4486  080E                     	;# 
  4487  080F                     	;# 
  4488  0810                     	;# 
  4489  0811                     	;# 
  4490  0812                     	;# 
  4491  0813                     	;# 
  4492  0814                     	;# 
  4493  081A                     	;# 
  4494  081B                     	;# 
  4495  081C                     	;# 
  4496  081D                     	;# 
  4497  081E                     	;# 
  4498  081F                     	;# 
  4499  088C                     	;# 
  4500  088D                     	;# 
  4501  088E                     	;# 
  4502  088F                     	;# 
  4503  0890                     	;# 
  4504  0891                     	;# 
  4505  0892                     	;# 
  4506  0893                     	;# 
  4507  0895                     	;# 
  4508  0896                     	;# 
  4509  0897                     	;# 
  4510  0898                     	;# 
  4511  0899                     	;# 
  4512  089A                     	;# 
  4513  089B                     	;# 
  4514  090C                     	;# 
  4515  090E                     	;# 
  4516  090F                     	;# 
  4517  091F                     	;# 
  4518  091F                     	;# 
  4519  098F                     	;# 
  4520  098F                     	;# 
  4521  0990                     	;# 
  4522  0991                     	;# 
  4523  0992                     	;# 
  4524  0993                     	;# 
  4525  0994                     	;# 
  4526  0995                     	;# 
  4527  0996                     	;# 
  4528  0997                     	;# 
  4529  0E0F                     	;# 
  4530  0E10                     	;# 
  4531  0E11                     	;# 
  4532  0E12                     	;# 
  4533  0E13                     	;# 
  4534  0E14                     	;# 
  4535  0E15                     	;# 
  4536  0E16                     	;# 
  4537  0E17                     	;# 
  4538  0E18                     	;# 
  4539  0E19                     	;# 
  4540  0E1A                     	;# 
  4541  0E1B                     	;# 
  4542  0E1C                     	;# 
  4543  0E1D                     	;# 
  4544  0E1E                     	;# 
  4545  0E1F                     	;# 
  4546  0E20                     	;# 
  4547  0E21                     	;# 
  4548  0E22                     	;# 
  4549  0E23                     	;# 
  4550  0E24                     	;# 
  4551  0E25                     	;# 
  4552  0E26                     	;# 
  4553  0E27                     	;# 
  4554  0E28                     	;# 
  4555  0E29                     	;# 
  4556  0E2A                     	;# 
  4557  0E2B                     	;# 
  4558  0E2C                     	;# 
  4559  0E2D                     	;# 
  4560  0E2E                     	;# 
  4561  0E2F                     	;# 
  4562  0E30                     	;# 
  4563  0E31                     	;# 
  4564  0E32                     	;# 
  4565  0E33                     	;# 
  4566  0E34                     	;# 
  4567  0E35                     	;# 
  4568  0E36                     	;# 
  4569  0E37                     	;# 
  4570  0E8F                     	;# 
  4571  0E90                     	;# 
  4572  0E91                     	;# 
  4573  0E92                     	;# 
  4574  0E93                     	;# 
  4575  0E94                     	;# 
  4576  0E95                     	;# 
  4577  0E96                     	;# 
  4578  0E97                     	;# 
  4579  0E9C                     	;# 
  4580  0E9D                     	;# 
  4581  0E9E                     	;# 
  4582  0EA1                     	;# 
  4583  0EA2                     	;# 
  4584  0EA3                     	;# 
  4585  0EA4                     	;# 
  4586  0EA5                     	;# 
  4587  0EA9                     	;# 
  4588  0EAA                     	;# 
  4589  0EAB                     	;# 
  4590  0EAC                     	;# 
  4591  0EB1                     	;# 
  4592  0EB2                     	;# 
  4593  0EB3                     	;# 
  4594  0EB8                     	;# 
  4595  0EB9                     	;# 
  4596  0EBA                     	;# 
  4597  0EBB                     	;# 
  4598  0EBC                     	;# 
  4599  0EBD                     	;# 
  4600  0EBE                     	;# 
  4601  0EC3                     	;# 
  4602  0EC5                     	;# 
  4603  0EC6                     	;# 
  4604  0EC7                     	;# 
  4605  0EC8                     	;# 
  4606  0EC9                     	;# 
  4607  0ECA                     	;# 
  4608  0ECB                     	;# 
  4609  0ECC                     	;# 
  4610  0F10                     	;# 
  4611  0F11                     	;# 
  4612  0F12                     	;# 
  4613  0F13                     	;# 
  4614  0F14                     	;# 
  4615  0F15                     	;# 
  4616  0F16                     	;# 
  4617  0F17                     	;# 
  4618  0F18                     	;# 
  4619  0F19                     	;# 
  4620  0F1A                     	;# 
  4621  0F1B                     	;# 
  4622  0F1C                     	;# 
  4623  0F1D                     	;# 
  4624  0F1E                     	;# 
  4625  0F1F                     	;# 
  4626  0F20                     	;# 
  4627  0F21                     	;# 
  4628  0F22                     	;# 
  4629  0F23                     	;# 
  4630  0F24                     	;# 
  4631  0F25                     	;# 
  4632  0F26                     	;# 
  4633  0F27                     	;# 
  4634  0F38                     	;# 
  4635  0F39                     	;# 
  4636  0F3A                     	;# 
  4637  0F3B                     	;# 
  4638  0F3C                     	;# 
  4639  0F3D                     	;# 
  4640  0F3E                     	;# 
  4641  0F3F                     	;# 
  4642  0F40                     	;# 
  4643  0F41                     	;# 
  4644  0F43                     	;# 
  4645  0F44                     	;# 
  4646  0F45                     	;# 
  4647  0F46                     	;# 
  4648  0F47                     	;# 
  4649  0F48                     	;# 
  4650  0F49                     	;# 
  4651  0F4A                     	;# 
  4652  0F4B                     	;# 
  4653  0F4C                     	;# 
  4654  0F4E                     	;# 
  4655  0F4F                     	;# 
  4656  0F50                     	;# 
  4657  0F51                     	;# 
  4658  0F52                     	;# 
  4659  0F53                     	;# 
  4660  0F54                     	;# 
  4661  0F55                     	;# 
  4662  0F56                     	;# 
  4663  0F57                     	;# 
  4664  0F65                     	;# 
  4665  0F68                     	;# 
  4666  0F69                     	;# 
  4667  0F6A                     	;# 
  4668  0F6B                     	;# 
  4669  0FE4                     	;# 
  4670  0FE5                     	;# 
  4671  0FE6                     	;# 
  4672  0FE7                     	;# 
  4673  0FE8                     	;# 
  4674  0FE9                     	;# 
  4675  0FEA                     	;# 
  4676  0FEB                     	;# 
  4677  0FED                     	;# 
  4678  0FEE                     	;# 
  4679  0FEF                     	;# 
  4680  0000                     	;# 
  4681  0001                     	;# 
  4682  0002                     	;# 
  4683  0003                     	;# 
  4684  0004                     	;# 
  4685  0005                     	;# 
  4686  0006                     	;# 
  4687  0007                     	;# 
  4688  0008                     	;# 
  4689  0009                     	;# 
  4690  000A                     	;# 
  4691  000B                     	;# 
  4692  000C                     	;# 
  4693  000D                     	;# 
  4694  000E                     	;# 
  4695  0010                     	;# 
  4696  0011                     	;# 
  4697  0012                     	;# 
  4698  0013                     	;# 
  4699  0016                     	;# 
  4700  0017                     	;# 
  4701  0018                     	;# 
  4702  001C                     	;# 
  4703  001C                     	;# 
  4704  001D                     	;# 
  4705  001D                     	;# 
  4706  001E                     	;# 
  4707  001F                     	;# 
  4708  008C                     	;# 
  4709  008C                     	;# 
  4710  008D                     	;# 
  4711  008E                     	;# 
  4712  008E                     	;# 
  4713  008F                     	;# 
  4714  0090                     	;# 
  4715  0090                     	;# 
  4716  0091                     	;# 
  4717  0093                     	;# 
  4718  0094                     	;# 
  4719  0095                     	;# 
  4720  0096                     	;# 
  4721  0097                     	;# 
  4722  0098                     	;# 
  4723  0099                     	;# 
  4724  009A                     	;# 
  4725  009B                     	;# 
  4726  009C                     	;# 
  4727  009D                     	;# 
  4728  009E                     	;# 
  4729  010C                     	;# 
  4730  010D                     	;# 
  4731  010E                     	;# 
  4732  010E                     	;# 
  4733  010F                     	;# 
  4734  0110                     	;# 
  4735  0110                     	;# 
  4736  0111                     	;# 
  4737  0112                     	;# 
  4738  0112                     	;# 
  4739  0113                     	;# 
  4740  0114                     	;# 
  4741  0114                     	;# 
  4742  0115                     	;# 
  4743  0116                     	;# 
  4744  0116                     	;# 
  4745  0117                     	;# 
  4746  0119                     	;# 
  4747  0119                     	;# 
  4748  0119                     	;# 
  4749  011A                     	;# 
  4750  011A                     	;# 
  4751  011A                     	;# 
  4752  011B                     	;# 
  4753  011B                     	;# 
  4754  011B                     	;# 
  4755  011B                     	;# 
  4756  011B                     	;# 
  4757  011C                     	;# 
  4758  011C                     	;# 
  4759  011C                     	;# 
  4760  011D                     	;# 
  4761  011D                     	;# 
  4762  011D                     	;# 
  4763  011E                     	;# 
  4764  011E                     	;# 
  4765  011E                     	;# 
  4766  011F                     	;# 
  4767  011F                     	;# 
  4768  011F                     	;# 
  4769  011F                     	;# 
  4770  011F                     	;# 
  4771  018C                     	;# 
  4772  018D                     	;# 
  4773  018E                     	;# 
  4774  018F                     	;# 
  4775  0190                     	;# 
  4776  0191                     	;# 
  4777  0192                     	;# 
  4778  0196                     	;# 
  4779  0197                     	;# 
  4780  0198                     	;# 
  4781  0199                     	;# 
  4782  019A                     	;# 
  4783  019B                     	;# 
  4784  019C                     	;# 
  4785  020C                     	;# 
  4786  020D                     	;# 
  4787  020E                     	;# 
  4788  020F                     	;# 
  4789  020F                     	;# 
  4790  0210                     	;# 
  4791  0210                     	;# 
  4792  0211                     	;# 
  4793  0211                     	;# 
  4794  0212                     	;# 
  4795  0213                     	;# 
  4796  0214                     	;# 
  4797  0215                     	;# 
  4798  0215                     	;# 
  4799  0216                     	;# 
  4800  0216                     	;# 
  4801  0217                     	;# 
  4802  0217                     	;# 
  4803  0218                     	;# 
  4804  0219                     	;# 
  4805  021A                     	;# 
  4806  021B                     	;# 
  4807  021B                     	;# 
  4808  021C                     	;# 
  4809  021C                     	;# 
  4810  021D                     	;# 
  4811  021D                     	;# 
  4812  021E                     	;# 
  4813  021F                     	;# 
  4814  028C                     	;# 
  4815  028C                     	;# 
  4816  028D                     	;# 
  4817  028D                     	;# 
  4818  028E                     	;# 
  4819  028F                     	;# 
  4820  0290                     	;# 
  4821  0290                     	;# 
  4822  0291                     	;# 
  4823  0292                     	;# 
  4824  0292                     	;# 
  4825  0293                     	;# 
  4826  0293                     	;# 
  4827  0294                     	;# 
  4828  0295                     	;# 
  4829  0296                     	;# 
  4830  0296                     	;# 
  4831  0297                     	;# 
  4832  0298                     	;# 
  4833  0298                     	;# 
  4834  0299                     	;# 
  4835  0299                     	;# 
  4836  029A                     	;# 
  4837  029B                     	;# 
  4838  029C                     	;# 
  4839  029C                     	;# 
  4840  029D                     	;# 
  4841  030C                     	;# 
  4842  030C                     	;# 
  4843  030D                     	;# 
  4844  030E                     	;# 
  4845  030F                     	;# 
  4846  0310                     	;# 
  4847  0310                     	;# 
  4848  0311                     	;# 
  4849  0312                     	;# 
  4850  0313                     	;# 
  4851  0314                     	;# 
  4852  0314                     	;# 
  4853  0315                     	;# 
  4854  0316                     	;# 
  4855  0317                     	;# 
  4856  0318                     	;# 
  4857  0318                     	;# 
  4858  0319                     	;# 
  4859  031A                     	;# 
  4860  031B                     	;# 
  4861  031C                     	;# 
  4862  031C                     	;# 
  4863  031D                     	;# 
  4864  031E                     	;# 
  4865  031F                     	;# 
  4866  038C                     	;# 
  4867  038D                     	;# 
  4868  038E                     	;# 
  4869  0390                     	;# 
  4870  0391                     	;# 
  4871  0392                     	;# 
  4872  040C                     	;# 
  4873  040D                     	;# 
  4874  040E                     	;# 
  4875  040F                     	;# 
  4876  0410                     	;# 
  4877  0411                     	;# 
  4878  0416                     	;# 
  4879  0416                     	;# 
  4880  0417                     	;# 
  4881  0418                     	;# 
  4882  0418                     	;# 
  4883  0419                     	;# 
  4884  041A                     	;# 
  4885  041A                     	;# 
  4886  041B                     	;# 
  4887  041C                     	;# 
  4888  041C                     	;# 
  4889  041D                     	;# 
  4890  041E                     	;# 
  4891  041F                     	;# 
  4892  048C                     	;# 
  4893  048C                     	;# 
  4894  048D                     	;# 
  4895  048E                     	;# 
  4896  048F                     	;# 
  4897  048F                     	;# 
  4898  0490                     	;# 
  4899  0491                     	;# 
  4900  0492                     	;# 
  4901  0492                     	;# 
  4902  0493                     	;# 
  4903  0494                     	;# 
  4904  0495                     	;# 
  4905  0495                     	;# 
  4906  0496                     	;# 
  4907  0497                     	;# 
  4908  0498                     	;# 
  4909  0499                     	;# 
  4910  049A                     	;# 
  4911  049B                     	;# 
  4912  049C                     	;# 
  4913  049D                     	;# 
  4914  050C                     	;# 
  4915  050C                     	;# 
  4916  050D                     	;# 
  4917  050E                     	;# 
  4918  050F                     	;# 
  4919  050F                     	;# 
  4920  0510                     	;# 
  4921  0511                     	;# 
  4922  0512                     	;# 
  4923  0512                     	;# 
  4924  0513                     	;# 
  4925  0514                     	;# 
  4926  0515                     	;# 
  4927  0515                     	;# 
  4928  0516                     	;# 
  4929  0517                     	;# 
  4930  0518                     	;# 
  4931  0519                     	;# 
  4932  051A                     	;# 
  4933  051B                     	;# 
  4934  051C                     	;# 
  4935  051D                     	;# 
  4936  058C                     	;# 
  4937  058C                     	;# 
  4938  058D                     	;# 
  4939  058E                     	;# 
  4940  058F                     	;# 
  4941  058F                     	;# 
  4942  0590                     	;# 
  4943  0591                     	;# 
  4944  0592                     	;# 
  4945  0593                     	;# 
  4946  060C                     	;# 
  4947  060D                     	;# 
  4948  060E                     	;# 
  4949  060F                     	;# 
  4950  0610                     	;# 
  4951  0611                     	;# 
  4952  0612                     	;# 
  4953  0613                     	;# 
  4954  0614                     	;# 
  4955  0616                     	;# 
  4956  0617                     	;# 
  4957  0618                     	;# 
  4958  0619                     	;# 
  4959  061A                     	;# 
  4960  061B                     	;# 
  4961  061C                     	;# 
  4962  061D                     	;# 
  4963  061E                     	;# 
  4964  068C                     	;# 
  4965  068D                     	;# 
  4966  068E                     	;# 
  4967  068F                     	;# 
  4968  0690                     	;# 
  4969  0691                     	;# 
  4970  0692                     	;# 
  4971  0693                     	;# 
  4972  0694                     	;# 
  4973  070C                     	;# 
  4974  070D                     	;# 
  4975  070E                     	;# 
  4976  070F                     	;# 
  4977  0710                     	;# 
  4978  0711                     	;# 
  4979  0712                     	;# 
  4980  0713                     	;# 
  4981  0714                     	;# 
  4982  0716                     	;# 
  4983  0717                     	;# 
  4984  0718                     	;# 
  4985  0719                     	;# 
  4986  071A                     	;# 
  4987  071B                     	;# 
  4988  071C                     	;# 
  4989  071D                     	;# 
  4990  071E                     	;# 
  4991  0796                     	;# 
  4992  0797                     	;# 
  4993  0798                     	;# 
  4994  0799                     	;# 
  4995  079A                     	;# 
  4996  079B                     	;# 
  4997  080C                     	;# 
  4998  080D                     	;# 
  4999  080E                     	;# 
  5000  080F                     	;# 
  5001  0810                     	;# 
  5002  0811                     	;# 
  5003  0812                     	;# 
  5004  0813                     	;# 
  5005  0814                     	;# 
  5006  081A                     	;# 
  5007  081B                     	;# 
  5008  081C                     	;# 
  5009  081D                     	;# 
  5010  081E                     	;# 
  5011  081F                     	;# 
  5012  088C                     	;# 
  5013  088D                     	;# 
  5014  088E                     	;# 
  5015  088F                     	;# 
  5016  0890                     	;# 
  5017  0891                     	;# 
  5018  0892                     	;# 
  5019  0893                     	;# 
  5020  0895                     	;# 
  5021  0896                     	;# 
  5022  0897                     	;# 
  5023  0898                     	;# 
  5024  0899                     	;# 
  5025  089A                     	;# 
  5026  089B                     	;# 
  5027  090C                     	;# 
  5028  090E                     	;# 
  5029  090F                     	;# 
  5030  091F                     	;# 
  5031  091F                     	;# 
  5032  098F                     	;# 
  5033  098F                     	;# 
  5034  0990                     	;# 
  5035  0991                     	;# 
  5036  0992                     	;# 
  5037  0993                     	;# 
  5038  0994                     	;# 
  5039  0995                     	;# 
  5040  0996                     	;# 
  5041  0997                     	;# 
  5042  0E0F                     	;# 
  5043  0E10                     	;# 
  5044  0E11                     	;# 
  5045  0E12                     	;# 
  5046  0E13                     	;# 
  5047  0E14                     	;# 
  5048  0E15                     	;# 
  5049  0E16                     	;# 
  5050  0E17                     	;# 
  5051  0E18                     	;# 
  5052  0E19                     	;# 
  5053  0E1A                     	;# 
  5054  0E1B                     	;# 
  5055  0E1C                     	;# 
  5056  0E1D                     	;# 
  5057  0E1E                     	;# 
  5058  0E1F                     	;# 
  5059  0E20                     	;# 
  5060  0E21                     	;# 
  5061  0E22                     	;# 
  5062  0E23                     	;# 
  5063  0E24                     	;# 
  5064  0E25                     	;# 
  5065  0E26                     	;# 
  5066  0E27                     	;# 
  5067  0E28                     	;# 
  5068  0E29                     	;# 
  5069  0E2A                     	;# 
  5070  0E2B                     	;# 
  5071  0E2C                     	;# 
  5072  0E2D                     	;# 
  5073  0E2E                     	;# 
  5074  0E2F                     	;# 
  5075  0E30                     	;# 
  5076  0E31                     	;# 
  5077  0E32                     	;# 
  5078  0E33                     	;# 
  5079  0E34                     	;# 
  5080  0E35                     	;# 
  5081  0E36                     	;# 
  5082  0E37                     	;# 
  5083  0E8F                     	;# 
  5084  0E90                     	;# 
  5085  0E91                     	;# 
  5086  0E92                     	;# 
  5087  0E93                     	;# 
  5088  0E94                     	;# 
  5089  0E95                     	;# 
  5090  0E96                     	;# 
  5091  0E97                     	;# 
  5092  0E9C                     	;# 
  5093  0E9D                     	;# 
  5094  0E9E                     	;# 
  5095  0EA1                     	;# 
  5096  0EA2                     	;# 
  5097  0EA3                     	;# 
  5098  0EA4                     	;# 
  5099  0EA5                     	;# 
  5100  0EA9                     	;# 
  5101  0EAA                     	;# 
  5102  0EAB                     	;# 
  5103  0EAC                     	;# 
  5104  0EB1                     	;# 
  5105  0EB2                     	;# 
  5106  0EB3                     	;# 
  5107  0EB8                     	;# 
  5108  0EB9                     	;# 
  5109  0EBA                     	;# 
  5110  0EBB                     	;# 
  5111  0EBC                     	;# 
  5112  0EBD                     	;# 
  5113  0EBE                     	;# 
  5114  0EC3                     	;# 
  5115  0EC5                     	;# 
  5116  0EC6                     	;# 
  5117  0EC7                     	;# 
  5118  0EC8                     	;# 
  5119  0EC9                     	;# 
  5120  0ECA                     	;# 
  5121  0ECB                     	;# 
  5122  0ECC                     	;# 
  5123  0F10                     	;# 
  5124  0F11                     	;# 
  5125  0F12                     	;# 
  5126  0F13                     	;# 
  5127  0F14                     	;# 
  5128  0F15                     	;# 
  5129  0F16                     	;# 
  5130  0F17                     	;# 
  5131  0F18                     	;# 
  5132  0F19                     	;# 
  5133  0F1A                     	;# 
  5134  0F1B                     	;# 
  5135  0F1C                     	;# 
  5136  0F1D                     	;# 
  5137  0F1E                     	;# 
  5138  0F1F                     	;# 
  5139  0F20                     	;# 
  5140  0F21                     	;# 
  5141  0F22                     	;# 
  5142  0F23                     	;# 
  5143  0F24                     	;# 
  5144  0F25                     	;# 
  5145  0F26                     	;# 
  5146  0F27                     	;# 
  5147  0F38                     	;# 
  5148  0F39                     	;# 
  5149  0F3A                     	;# 
  5150  0F3B                     	;# 
  5151  0F3C                     	;# 
  5152  0F3D                     	;# 
  5153  0F3E                     	;# 
  5154  0F3F                     	;# 
  5155  0F40                     	;# 
  5156  0F41                     	;# 
  5157  0F43                     	;# 
  5158  0F44                     	;# 
  5159  0F45                     	;# 
  5160  0F46                     	;# 
  5161  0F47                     	;# 
  5162  0F48                     	;# 
  5163  0F49                     	;# 
  5164  0F4A                     	;# 
  5165  0F4B                     	;# 
  5166  0F4C                     	;# 
  5167  0F4E                     	;# 
  5168  0F4F                     	;# 
  5169  0F50                     	;# 
  5170  0F51                     	;# 
  5171  0F52                     	;# 
  5172  0F53                     	;# 
  5173  0F54                     	;# 
  5174  0F55                     	;# 
  5175  0F56                     	;# 
  5176  0F57                     	;# 
  5177  0F65                     	;# 
  5178  0F68                     	;# 
  5179  0F69                     	;# 
  5180  0F6A                     	;# 
  5181  0F6B                     	;# 
  5182  0FE4                     	;# 
  5183  0FE5                     	;# 
  5184  0FE6                     	;# 
  5185  0FE7                     	;# 
  5186  0FE8                     	;# 
  5187  0FE9                     	;# 
  5188  0FEA                     	;# 
  5189  0FEB                     	;# 
  5190  0FED                     	;# 
  5191  0FEE                     	;# 
  5192  0FEF                     	;_samples
  5193                           
  5194                           	psect	idataBANK1
  5195  15E6                     __pidataBANK1:	
  5196                           
  5197                           ;initializer for _channels
  5198  15E6  3401               	retlw	1
  5199  15E7  3400               	retlw	0
  5200  15E8  3403               	retlw	3
  5201  15E9  3400               	retlw	0
  5202                           
  5203                           ;initializer for _desc
  5204  15EA  3470               	retlw	low (STR_1| (0+32768))
  5205  15EB  3490               	retlw	high (STR_1| (0+32768))
  5206  15EC  347B               	retlw	low (STR_2| (0+32768))
  5207  15ED  3490               	retlw	high (STR_2| (0+32768))
  5208                           
  5209                           ;initializer for _highRangeSet
  5210  15EE  34BE               	retlw	190
  5211  15EF  340A               	retlw	10
  5212  15F0  34FF               	retlw	255
  5213  15F1  3403               	retlw	3
  5214                           
  5215                           ;initializer for _lowRangeSet
  5216  15F2  34EE               	retlw	238
  5217  15F3  3402               	retlw	2
  5218  15F4  3400               	retlw	0
  5219  15F5  3400               	retlw	0
  5220                           
  5221                           ;initializer for _Kd
  5222  15F6  3402               	retlw	2
  5223  15F7  3400               	retlw	0
  5224                           
  5225                           ;initializer for _Ki
  5226  15F8  3404               	retlw	4
  5227  15F9  3400               	retlw	0
  5228                           
  5229                           ;initializer for _Kp
  5230  15FA  340A               	retlw	10
  5231  15FB  3400               	retlw	0
  5232                           
  5233                           	psect	idataBANK2
  5234  1550                     __pidataBANK2:	
  5235                           
  5236                           ;initializer for _setpoint
  5237  1550  3466               	retlw	102
  5238  1551  3408               	retlw	8
  5239  1552  340B               	retlw	11
  5240  1553  3402               	retlw	2
  5241                           
  5242                           ;initializer for _pidMaxOutput
  5243  1554  34FF               	retlw	255
  5244  1555  3407               	retlw	7
  5245                           
  5246                           ;initializer for _loop
  5247  1556  3440               	retlw	64
  5248                           
  5249                           	psect	idataBANK3
  5250  1599                     __pidataBANK3:	
  5251                           
  5252                           ;initializer for ___cgram
  5253  1599  340C               	retlw	12
  5254  159A  3412               	retlw	18
  5255  159B  3412               	retlw	18
  5256  159C  340C               	retlw	12
  5257  159D  3400               	retlw	0
  5258  159E  3400               	retlw	0
  5259  159F  3400               	retlw	0
  5260  15A0  3400               	retlw	0
  5261  15A1  3408               	retlw	8
  5262  15A2  3404               	retlw	4
  5263  15A3  3402               	retlw	2
  5264  15A4  341F               	retlw	31
  5265  15A5  3402               	retlw	2
  5266  15A6  3404               	retlw	4
  5267  15A7  3408               	retlw	8
  5268  15A8  3400               	retlw	0
  5269                           
  5270                           	psect	stringtext
  5271  1000                     __pstringtext:	
  5272  1000                     log@coeff:	
  5273  1000  3400               	retlw	0
  5274  1001  3400               	retlw	0
  5275  1002  3400               	retlw	0
  5276  1003  3400               	retlw	0
  5277  1004  3480               	retlw	128
  5278  1005  343F               	retlw	63
  5279  1006  34F0               	retlw	240
  5280  1007  34FF               	retlw	255
  5281  1008  34BE               	retlw	190
  5282  1009  34E2               	retlw	226
  5283  100A  34A9               	retlw	169
  5284  100B  343E               	retlw	62
  5285  100C  3483               	retlw	131
  5286  100D  3476               	retlw	118
  5287  100E  34BE               	retlw	190
  5288  100F  34AE               	retlw	174
  5289  1010  342B               	retlw	43
  5290  1011  343E               	retlw	62
  5291  1012  343C               	retlw	60
  5292  1013  34C3               	retlw	195
  5293  1014  34BD               	retlw	189
  5294  1015  34D2               	retlw	210
  5295  1016  3413               	retlw	19
  5296  1017  343D               	retlw	61
  5297  1018  3478               	retlw	120
  5298  1019  34D3               	retlw	211
  5299  101A  34BB               	retlw	187
  5300  101B                     __end_oflog@coeff:	
  5301  0016                     _LATA	set	22
  5302  0017                     _LATB	set	23
  5303  0018                     _LATC	set	24
  5304  0011                     _TRISA	set	17
  5305  0012                     _TRISB	set	18
  5306  0013                     _TRISC	set	19
  5307  005F                     _GIE	set	95
  5308  00C2                     _LATC2	set	194
  5309  0060                     _RA0	set	96
  5310  0062                     _RA2	set	98
  5311  0066                     _RA6	set	102
  5312  0067                     _RA7	set	103
  5313  0068                     _RB0	set	104
  5314  0069                     _RB1	set	105
  5315  006A                     _RB2	set	106
  5316  0070                     _RC0	set	112
  5317  0071                     _RC1	set	113
  5318  009A                     _TRISC2	set	154
  5319  009D                     _ADACQ	set	157
  5320  0099                     _ADACT	set	153
  5321  009B                     _ADCAP	set	155
  5322  0098                     _ADCLK	set	152
  5323  0093                     _ADCON0	set	147
  5324  0093                     _ADCON0bits	set	147
  5325  0094                     _ADCON1	set	148
  5326  0095                     _ADCON2	set	149
  5327  0096                     _ADCON3	set	150
  5328  009E                     _ADPCH	set	158
  5329  009C                     _ADPRE	set	156
  5330  009A                     _ADREF	set	154
  5331  008D                     _ADRESH	set	141
  5332  008C                     _ADRESL	set	140
  5333  0097                     _ADSTAT	set	151
  5334  010F                     _ADLTHH	set	271
  5335  010E                     _ADLTHL	set	270
  5336  010D                     _ADRPT	set	269
  5337  0113                     _ADSTPTH	set	275
  5338  0112                     _ADSTPTL	set	274
  5339  0111                     _ADUTHH	set	273
  5340  0110                     _ADUTHL	set	272
  5341  021F                     _CCPTMRS1bits	set	543
  5342  0290                     _T2CLKCON	set	656
  5343  028E                     _T2CON	set	654
  5344  028E                     _T2CONbits	set	654
  5345  028F                     _T2HLT	set	655
  5346  028D                     _T2PR	set	653
  5347  0291                     _T2RST	set	657
  5348  028C                     _T2TMR	set	652
  5349  0392                     _PWM7CON	set	914
  5350  0391                     _PWM7DCH	set	913
  5351  0390                     _PWM7DCL	set	912
  5352  0716                     _PIE0bits	set	1814
  5353  0710                     _PIR4bits	set	1808
  5354  088D                     _OSCCON1	set	2189
  5355  088F                     _OSCCON3	set	2191
  5356  0891                     _OSCEN	set	2193
  5357  0893                     _OSCFRQ	set	2195
  5358  0892                     _OSCTUNE	set	2194
  5359  090C                     _FVRCON	set	2316
  5360  0E8F                     _PPSLOCK	set	3727
  5361  0E8F                     _PPSLOCKbits	set	3727
  5362  0F38                     _ANSELA	set	3896
  5363  0F43                     _ANSELB	set	3907
  5364  0F4E                     _ANSELC	set	3918
  5365  0F23                     _RC3PPS	set	3875
  5366  0F39                     _WPUA	set	3897
  5367  0F44                     _WPUB	set	3908
  5368  0F4F                     _WPUC	set	3919
  5369  0F65                     _WPUE	set	3941
  5370  101B                     STR_6:	
  5371  101B  3441               	retlw	65	;'A'
  5372  101C  346C               	retlw	108	;'l'
  5373  101D  3474               	retlw	116	;'t'
  5374  101E  3465               	retlw	101	;'e'
  5375  101F  3472               	retlw	114	;'r'
  5376  1020  3420               	retlw	32	;' '
  5377  1021  3477               	retlw	119	;'w'
  5378  1022  3469               	retlw	105	;'i'
  5379  1023  3474               	retlw	116	;'t'
  5380  1024  3468               	retlw	104	;'h'
  5381  1025  3420               	retlw	32	;' '
  5382  1026  3455               	retlw	85	;'U'
  5383  1027  3470               	retlw	112	;'p'
  5384  1028  342F               	retlw	47	;'/'
  5385  1029  3444               	retlw	68	;'D'
  5386  102A  346E               	retlw	110	;'n'
  5387  102B  3400               	retlw	0
  5388  102C                     STR_7:	
  5389  102C  3445               	retlw	69	;'E'
  5390  102D  346E               	retlw	110	;'n'
  5391  102E  3474               	retlw	116	;'t'
  5392  102F  3465               	retlw	101	;'e'
  5393  1030  3472               	retlw	114	;'r'
  5394  1031  3420               	retlw	32	;' '
  5395  1032  344B               	retlw	75	;'K'
  5396  1033  3465               	retlw	101	;'e'
  5397  1034  3479               	retlw	121	;'y'
  5398  1035  3420               	retlw	32	;' '
  5399  1036  3474               	retlw	116	;'t'
  5400  1037  346F               	retlw	111	;'o'
  5401  1038  3420               	retlw	32	;' '
  5402  1039  3453               	retlw	83	;'S'
  5403  103A  3465               	retlw	101	;'e'
  5404  103B  3474               	retlw	116	;'t'
  5405  103C  3400               	retlw	0
  5406  103D                     STR_5:	
  5407  103D  3420               	retlw	32	;' '
  5408  103E  3420               	retlw	32	;' '
  5409  103F  3420               	retlw	32	;' '
  5410  1040  3447               	retlw	71	;'G'
  5411  1041  346F               	retlw	111	;'o'
  5412  1042  346F               	retlw	111	;'o'
  5413  1043  3464               	retlw	100	;'d'
  5414  1044  342D               	retlw	45	;'-'
  5415  1045  3442               	retlw	66	;'B'
  5416  1046  3479               	retlw	121	;'y'
  5417  1047  3465               	retlw	101	;'e'
  5418  1048  3421               	retlw	33	;'!'
  5419  1049  3421               	retlw	33	;'!'
  5420  104A  3420               	retlw	32	;' '
  5421  104B  3420               	retlw	32	;' '
  5422  104C  3420               	retlw	32	;' '
  5423  104D  3400               	retlw	0
  5424  104E                     STR_4:	
  5425  104E  3445               	retlw	69	;'E'
  5426  104F  346E               	retlw	110	;'n'
  5427  1050  3474               	retlw	116	;'t'
  5428  1051  3465               	retlw	101	;'e'
  5429  1052  3472               	retlw	114	;'r'
  5430  1053  3420               	retlw	32	;' '
  5431  1054  3474               	retlw	116	;'t'
  5432  1055  346F               	retlw	111	;'o'
  5433  1056  3420               	retlw	32	;' '
  5434  1057  3453               	retlw	83	;'S'
  5435  1058  3465               	retlw	101	;'e'
  5436  1059  346C               	retlw	108	;'l'
  5437  105A  3465               	retlw	101	;'e'
  5438  105B  3463               	retlw	99	;'c'
  5439  105C  3474               	retlw	116	;'t'
  5440  105D  3420               	retlw	32	;' '
  5441  105E  3400               	retlw	0
  5442  105F                     STR_3:	
  5443  105F  3455               	retlw	85	;'U'
  5444  1060  3470               	retlw	112	;'p'
  5445  1061  342F               	retlw	47	;'/'
  5446  1062  3444               	retlw	68	;'D'
  5447  1063  346F               	retlw	111	;'o'
  5448  1064  3477               	retlw	119	;'w'
  5449  1065  346E               	retlw	110	;'n'
  5450  1066  3420               	retlw	32	;' '
  5451  1067  3474               	retlw	116	;'t'
  5452  1068  346F               	retlw	111	;'o'
  5453  1069  3420               	retlw	32	;' '
  5454  106A  3441               	retlw	65	;'A'
  5455  106B  346C               	retlw	108	;'l'
  5456  106C  3474               	retlw	116	;'t'
  5457  106D  3465               	retlw	101	;'e'
  5458  106E  3472               	retlw	114	;'r'
  5459  106F  3400               	retlw	0
  5460  1070                     STR_1:	
  5461  1070  3420               	retlw	32	;' '
  5462  1071  3450               	retlw	80	;'P'
  5463  1072  3469               	retlw	105	;'i'
  5464  1073  3474               	retlw	116	;'t'
  5465  1074  3420               	retlw	32	;' '
  5466  1075  3454               	retlw	84	;'T'
  5467  1076  3465               	retlw	101	;'e'
  5468  1077  346D               	retlw	109	;'m'
  5469  1078  3470               	retlw	112	;'p'
  5470  1079  343A               	retlw	58	;':'
  5471  107A  3400               	retlw	0
  5472  107B                     STR_2:	
  5473  107B  3442               	retlw	66	;'B'
  5474  107C  3461               	retlw	97	;'a'
  5475  107D  3463               	retlw	99	;'c'
  5476  107E  346B               	retlw	107	;'k'
  5477  107F  344C               	retlw	76	;'L'
  5478  1080  3469               	retlw	105	;'i'
  5479  1081  3467               	retlw	103	;'g'
  5480  1082  3468               	retlw	104	;'h'
  5481  1083  3474               	retlw	116	;'t'
  5482  1084  343A               	retlw	58	;':'
  5483  1085  3400               	retlw	0
  5484                           
  5485                           ; #config settings
  5486  0000                     
  5487                           	psect	cinit
  5488  07AB                     start_initialization:	
  5489  07AB                     __initialization:		;BIGRAM
  5490                           
  5491                           ; Initialize objects allocated to BANK1
  5492  07AB  30E6               	movlw	low __pidataBANK1
  5493  07AC  0084               	movwf	4
  5494  07AD  3095               	movlw	(high __pidataBANK1)| (0+128)
  5495  07AE  0085               	movwf	5
  5496  07AF  30CA               	movlw	low __pdataBANK1
  5497  07B0  0086               	movwf	6
  5498  07B1  3000               	movlw	high __pdataBANK1
  5499  07B2  0087               	movwf	7
  5500  07B3  3000               	movlw	0
  5501  07B4  00FF               	movwf	btemp+1
  5502  07B5  3016               	movlw	22
  5503  07B6  3195  257F  3187   	fcall	init_ram
  5504                           
  5505                           ; Initialize objects allocated to BANK2
  5506  07B9  3050               	movlw	low __pidataBANK2
  5507  07BA  0084               	movwf	4
  5508  07BB  3095               	movlw	(high __pidataBANK2)| (0+128)
  5509  07BC  0085               	movwf	5
  5510  07BD  3069               	movlw	low __pdataBANK2
  5511  07BE  0086               	movwf	6
  5512  07BF  3001               	movlw	high __pdataBANK2
  5513  07C0  0087               	movwf	7
  5514  07C1  3000               	movlw	0
  5515  07C2  00FF               	movwf	btemp+1
  5516  07C3  3007               	movlw	7
  5517  07C4  3195  257F  3187   	fcall	init_ram
  5518                           
  5519                           ; Initialize objects allocated to BANK3
  5520  07C7  3099               	movlw	low __pidataBANK3
  5521  07C8  0084               	movwf	4
  5522  07C9  3095               	movlw	(high __pidataBANK3)| (0+128)
  5523  07CA  0085               	movwf	5
  5524  07CB  30D2               	movlw	low __pdataBANK3
  5525  07CC  0086               	movwf	6
  5526  07CD  3001               	movlw	high __pdataBANK3
  5527  07CE  0087               	movwf	7
  5528  07CF  3000               	movlw	0
  5529  07D0  00FF               	movwf	btemp+1
  5530  07D1  3010               	movlw	16
  5531  07D2  3195  257F  3187   	fcall	init_ram
  5532                           
  5533                           ; Clear objects allocated to BIGRAM
  5534  07D5  3078               	movlw	low (0+9080)
  5535  07D6  0084               	movwf	4
  5536  07D7  3023               	movlw	high (0+9080)
  5537  07D8  0085               	movwf	5
  5538  07D9  3078               	movlw	120
  5539  07DA  00FE               	movwf	btemp
  5540  07DB  3000               	movlw	0
  5541  07DC  00FF               	movwf	btemp+1
  5542  07DD  3195  2573  3187   	fcall	clear_ram0
  5543                           
  5544                           ; Clear objects allocated to BANK0
  5545  07E0  01E8               	clrf	__pbssBANK0& (0+127)
  5546  07E1  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  5547  07E2  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  5548  07E3  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  5549  07E4  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  5550  07E5  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  5551  07E6  01EE               	clrf	(__pbssBANK0+6)& (0+127)
  5552  07E7  01EF               	clrf	(__pbssBANK0+7)& (0+127)
  5553                           
  5554                           ; Clear objects allocated to BANK1
  5555  07E8  30A0               	movlw	low __pbssBANK1
  5556  07E9  0084               	movwf	4
  5557  07EA  3000               	movlw	high __pbssBANK1
  5558  07EB  0085               	movwf	5
  5559  07EC  302A               	movlw	42
  5560  07ED  00FE               	movwf	btemp
  5561  07EE  3000               	movlw	0
  5562  07EF  00FF               	movwf	btemp+1
  5563  07F0  3195  2573  3187   	fcall	clear_ram0
  5564                           
  5565                           ; Clear objects allocated to BANK3
  5566  07F3  30A0               	movlw	low __pbssBANK3
  5567  07F4  0084               	movwf	4
  5568  07F5  3001               	movlw	high __pbssBANK3
  5569  07F6  0085               	movwf	5
  5570  07F7  3032               	movlw	50
  5571  07F8  00FE               	movwf	btemp
  5572  07F9  3000               	movlw	0
  5573  07FA  00FF               	movwf	btemp+1
  5574  07FB  3195  2573         	fcall	clear_ram0
  5575  07FD                     end_of_initialization:	
  5576                           ;End of C runtime variable initialization code
  5577                           
  5578  07FD                     __end_of__initialization:	
  5579  07FD  0020               	movlb	0
  5580  07FE  3184  2CE8         	ljmp	_main	;jump to C main() function
  5581                           
  5582                           	psect	bssBANK0
  5583  0068                     __pbssBANK0:	
  5584  0068                     _error:	
  5585  0068                     	ds	2
  5586  006A                     _pidIntegrated:	
  5587  006A                     	ds	2
  5588  006C                     _choice:	
  5589  006C                     	ds	1
  5590  006D                     _delayCount:	
  5591  006D                     	ds	1
  5592  006E                     _key:	
  5593  006E                     	ds	1
  5594  006F                     _timer2:	
  5595  006F                     	ds	1
  5596                           
  5597                           	psect	bssBANK1
  5598  00A0                     __pbssBANK1:	
  5599  00A0                     _totals:	
  5600  00A0                     	ds	8
  5601  00A8                     LCD_Write_Int@F13694:	
  5602  00A8                     	ds	5
  5603  00AD                     main@F13664:	
  5604  00AD                     	ds	4
  5605  00B1                     _D_PrevError:	
  5606  00B1                     	ds	2
  5607  00B3                     _Result:	
  5608  00B3                     	ds	2
  5609  00B5                     _derivativeValue:	
  5610  00B5                     	ds	2
  5611  00B7                     _errno:	
  5612  00B7                     	ds	2
  5613  00B9                     _errorValue:	
  5614  00B9                     	ds	2
  5615  00BB                     _integralValue:	
  5616  00BB                     	ds	2
  5617  00BD                     _lastError:	
  5618  00BD                     	ds	2
  5619  00BF                     _menuDelay:	
  5620  00BF                     	ds	2
  5621  00C1                     _pidCount:	
  5622  00C1                     	ds	2
  5623  00C3                     _pidMinOutput:	
  5624  00C3                     	ds	2
  5625  00C5                     _sampleIndex:	
  5626  00C5                     	ds	2
  5627  00C7                     _timer:	
  5628  00C7                     	ds	2
  5629  00C9                     _testKey:	
  5630  00C9                     	ds	1
  5631                           
  5632                           	psect	dataBANK1
  5633  00CA                     __pdataBANK1:	
  5634  00CA                     _channels:	
  5635  00CA                     	ds	4
  5636  00CE                     _desc:	
  5637  00CE                     	ds	4
  5638  00D2                     _highRangeSet:	
  5639  00D2                     	ds	4
  5640  00D6                     _lowRangeSet:	
  5641  00D6                     	ds	4
  5642  00DA                     _Kd:	
  5643  00DA                     	ds	2
  5644  00DC                     _Ki:	
  5645  00DC                     	ds	2
  5646  00DE                     _Kp:	
  5647  00DE                     	ds	2
  5648                           
  5649                           	psect	dataBANK2
  5650  0169                     __pdataBANK2:	
  5651  0169                     _setpoint:	
  5652  0169                     	ds	4
  5653  016D                     _pidMaxOutput:	
  5654  016D                     	ds	2
  5655  016F                     _loop:	
  5656  016F                     	ds	1
  5657                           
  5658                           	psect	bssBANK3
  5659  01A0                     __pbssBANK3:	
  5660  01A0                     main@F13670:	
  5661  01A0                     	ds	50
  5662                           
  5663                           	psect	dataBANK3
  5664  01D2                     __pdataBANK3:	
  5665  01D2                     ___cgram:	
  5666  01D2                     	ds	16
  5667                           
  5668                           	psect	inittext
  5669  157F                     init_ram:	
  5670  157F  00FE               	movwf	126
  5671  1580                     initloop:	
  5672  1580  0012               	moviw fsr0++
  5673  1581  001E               	movwi fsr1++
  5674  1582  3001               	movlw	1
  5675  1583  02FE               	subwf	126,f
  5676  1584  3000               	movlw	0
  5677  1585  3BFF               	subwfb	127,f
  5678  1586  087F               	movf	127,w
  5679  1587  047E               	iorwf	126,w
  5680  1588  1903               	btfsc	3,2
  5681  1589  3400               	retlw	0
  5682  158A  2D80               	goto	initloop
  5683                           
  5684                           	psect	clrtext
  5685  1573                     clear_ram0:	
  5686                           ;	Called with FSR0 containing the base address, and
  5687                           ;	btemp/btemp+1 has the size to clear
  5688                           
  5689  1573  0064               	clrwdt	;clear the watchdog before getting into this loop
  5690  1574                     clrloop0:	
  5691  1574  0180               	clrf	0	;clear RAM location pointed to by FSR
  5692  1575  3101               	addfsr 0,1
  5693  1576  3001               	movlw	1
  5694  1577  02FE               	subwf	126,f
  5695  1578  3000               	movlw	0
  5696  1579  3BFF               	subwfb	127,f
  5697  157A  087F               	movf	127,w
  5698  157B  047E               	iorwf	126,w
  5699  157C  1903               	btfsc	3,2
  5700  157D  3400               	retlw	0	;all done for this memory range, return
  5701  157E  2D74               	goto	clrloop0	;have we reached the end yet?
  5702                           
  5703                           	psect	cstackBANK2
  5704  0120                     __pcstackBANK2:	
  5705  0120                     main@outputSamples:	
  5706                           
  5707                           ; 50 bytes @ 0x0
  5708  0120                     	ds	50
  5709  0152                     main@x:	
  5710                           
  5711                           ; 1 bytes @ 0x32
  5712  0152                     	ds	1
  5713  0153                     main@output:	
  5714                           
  5715                           ; 2 bytes @ 0x33
  5716  0153                     	ds	2
  5717  0155                     main@holdOutput:	
  5718                           
  5719                           ; 1 bytes @ 0x35
  5720  0155                     	ds	1
  5721  0156                     main@lidOpenCount:	
  5722                           
  5723                           ; 1 bytes @ 0x36
  5724  0156                     	ds	1
  5725  0157                     main@lastTemperature:	
  5726                           
  5727                           ; 2 bytes @ 0x37
  5728  0157                     	ds	2
  5729  0159                     main@pidPeriodCounter:	
  5730                           
  5731                           ; 2 bytes @ 0x39
  5732  0159                     	ds	2
  5733  015B                     main@currentTemperature:	
  5734                           
  5735                           ; 2 bytes @ 0x3B
  5736  015B                     	ds	2
  5737  015D                     main@outputTotal:	
  5738                           
  5739                           ; 4 bytes @ 0x3D
  5740  015D                     	ds	4
  5741  0161                     main@dutyCycle6:	
  5742                           
  5743                           ; 2 bytes @ 0x41
  5744  0161                     	ds	2
  5745  0163                     main@analogs:	
  5746                           
  5747                           ; 4 bytes @ 0x43
  5748  0163                     	ds	4
  5749  0167                     main@outputIndex:	
  5750                           
  5751                           ; 1 bytes @ 0x47
  5752  0167                     	ds	1
  5753  0168                     main@j:	
  5754                           
  5755                           ; 1 bytes @ 0x48
  5756  0168                     	ds	1
  5757                           
  5758                           	psect	cstackBANK1
  5759  00E0                     __pcstackBANK1:	
  5760  00E0                     ??_main:	
  5761                           
  5762                           ; 1 bytes @ 0x0
  5763  00E0                     	ds	10
  5764                           
  5765                           	psect	cstackCOMMON
  5766  0070                     __pcstackCOMMON:	
  5767  0070                     ?___ftge:	
  5768  0070                     ?_LCD_Cmd:	
  5769                           ; 1 bit 
  5770                           
  5771  0070                     ?_LCD_Write_Char:	
  5772                           ; 1 bytes @ 0x0
  5773                           
  5774  0070                     ?_OSCILLATOR_Initialize:	
  5775                           ; 1 bytes @ 0x0
  5776                           
  5777  0070                     ??_OSCILLATOR_Initialize:	
  5778                           ; 1 bytes @ 0x0
  5779                           
  5780  0070                     ?_TMR2_Initialize:	
  5781                           ; 1 bytes @ 0x0
  5782                           
  5783  0070                     ??_TMR2_Initialize:	
  5784                           ; 1 bytes @ 0x0
  5785                           
  5786  0070                     ?_ADCC_Initialize:	
  5787                           ; 1 bytes @ 0x0
  5788                           
  5789  0070                     ??_ADCC_Initialize:	
  5790                           ; 1 bytes @ 0x0
  5791                           
  5792  0070                     ?_InitCustomChars:	
  5793                           ; 1 bytes @ 0x0
  5794                           
  5795  0070                     ?_LCD_Port:	
  5796                           ; 1 bytes @ 0x0
  5797                           
  5798  0070                     ??_LCD_Port:	
  5799                           ; 1 bytes @ 0x0
  5800                           
  5801  0070                     ?_LCD_Clear:	
  5802                           ; 1 bytes @ 0x0
  5803                           
  5804  0070                     ?_LCD_Init:	
  5805                           ; 1 bytes @ 0x0
  5806                           
  5807  0070                     ?_PIN_MANAGER_Initialize:	
  5808                           ; 1 bytes @ 0x0
  5809                           
  5810  0070                     ??_PIN_MANAGER_Initialize:	
  5811                           ; 1 bytes @ 0x0
  5812                           
  5813  0070                     ?_PWM_Initialize:	
  5814                           ; 1 bytes @ 0x0
  5815                           
  5816  0070                     ??_PWM_Initialize:	
  5817                           ; 1 bytes @ 0x0
  5818                           
  5819  0070                     ?_PWM7_LoadDutyValue:	
  5820                           ; 1 bytes @ 0x0
  5821                           
  5822  0070                     ?_SYSTEM_Initialize:	
  5823                           ; 1 bytes @ 0x0
  5824                           
  5825  0070                     ?_readKey:	
  5826                           ; 1 bytes @ 0x0
  5827                           
  5828  0070                     ??_readKey:	
  5829                           ; 1 bytes @ 0x0
  5830                           
  5831  0070                     ?_menuChoice:	
  5832                           ; 1 bytes @ 0x0
  5833                           
  5834  0070                     ?_main:	
  5835                           ; 1 bytes @ 0x0
  5836                           
  5837  0070                     ?_ADCRead:	
  5838                           ; 1 bytes @ 0x0
  5839                           
  5840  0070                     ?___wmul:	
  5841                           ; 2 bytes @ 0x0
  5842                           
  5843  0070                     ?___awdiv:	
  5844                           ; 2 bytes @ 0x0
  5845                           
  5846  0070                     ?___awmod:	
  5847                           ; 2 bytes @ 0x0
  5848                           
  5849  0070                     ?___ftpack:	
  5850                           ; 2 bytes @ 0x0
  5851                           
  5852  0070                     ?_frexp:	
  5853                           ; 3 bytes @ 0x0
  5854                           
  5855  0070                     ?___aldiv:	
  5856                           ; 3 bytes @ 0x0
  5857                           
  5858  0070                     ?___fttol:	
  5859                           ; 4 bytes @ 0x0
  5860                           
  5861  0070                     LCD_Port@a:	
  5862                           ; 4 bytes @ 0x0
  5863                           
  5864  0070                     PIN_MANAGER_Initialize@state:	
  5865                           ; 1 bytes @ 0x0
  5866                           
  5867  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5868                           ; 1 bytes @ 0x0
  5869                           
  5870  0070                     ___wmul@multiplier:	
  5871                           ; 2 bytes @ 0x0
  5872                           
  5873  0070                     ___awdiv@divisor:	
  5874                           ; 2 bytes @ 0x0
  5875                           
  5876  0070                     ___awmod@divisor:	
  5877                           ; 2 bytes @ 0x0
  5878                           
  5879  0070                     ___ftpack@arg:	
  5880                           ; 2 bytes @ 0x0
  5881                           
  5882  0070                     ___ftge@ff1:	
  5883                           ; 3 bytes @ 0x0
  5884                           
  5885  0070                     ___fttol@f1:	
  5886                           ; 3 bytes @ 0x0
  5887                           
  5888  0070                     frexp@value:	
  5889                           ; 3 bytes @ 0x0
  5890                           
  5891  0070                     ___aldiv@divisor:	
  5892                           ; 3 bytes @ 0x0
  5893                           
  5894                           
  5895                           ; 4 bytes @ 0x0
  5896  0070                     	ds	1
  5897  0071                     ??_LCD_Cmd:	
  5898  0071                     ??_LCD_Write_Char:	
  5899                           ; 1 bytes @ 0x1
  5900                           
  5901                           
  5902                           ; 1 bytes @ 0x1
  5903  0071                     	ds	1
  5904  0072                     ??_PWM7_LoadDutyValue:	
  5905  0072                     LCD_Write_Char@temp:	
  5906                           ; 1 bytes @ 0x2
  5907                           
  5908  0072                     ___wmul@multiplicand:	
  5909                           ; 1 bytes @ 0x2
  5910                           
  5911  0072                     ___awdiv@dividend:	
  5912                           ; 2 bytes @ 0x2
  5913                           
  5914  0072                     ___awmod@dividend:	
  5915                           ; 2 bytes @ 0x2
  5916                           
  5917                           
  5918                           ; 2 bytes @ 0x2
  5919  0072                     	ds	1
  5920  0073                     ??_ADCRead:	
  5921  0073                     ADCRead@channel:	
  5922                           ; 1 bytes @ 0x3
  5923                           
  5924  0073                     LCD_Cmd@a:	
  5925                           ; 1 bytes @ 0x3
  5926                           
  5927  0073                     LCD_Write_Char@y:	
  5928                           ; 1 bytes @ 0x3
  5929                           
  5930  0073                     ___ftpack@exp:	
  5931                           ; 1 bytes @ 0x3
  5932                           
  5933  0073                     frexp@eptr:	
  5934                           ; 1 bytes @ 0x3
  5935                           
  5936  0073                     ___ftge@ff2:	
  5937                           ; 1 bytes @ 0x3
  5938                           
  5939                           
  5940                           ; 3 bytes @ 0x3
  5941  0073                     	ds	1
  5942  0074                     ??_frexp:	
  5943  0074                     ??_LCD_Clear:	
  5944                           ; 1 bytes @ 0x4
  5945                           
  5946  0074                     ?_LCD_Set_Cursor:	
  5947                           ; 1 bytes @ 0x4
  5948                           
  5949  0074                     ??_LCD_Init:	
  5950                           ; 1 bytes @ 0x4
  5951                           
  5952  0074                     ??___wmul:	
  5953                           ; 1 bytes @ 0x4
  5954                           
  5955  0074                     ??___awdiv:	
  5956                           ; 1 bytes @ 0x4
  5957                           
  5958  0074                     ??___awmod:	
  5959                           ; 1 bytes @ 0x4
  5960                           
  5961  0074                     ??___fttol:	
  5962                           ; 1 bytes @ 0x4
  5963                           
  5964  0074                     LCD_Set_Cursor@y:	
  5965                           ; 1 bytes @ 0x4
  5966                           
  5967  0074                     LCD_Write_Char@a:	
  5968                           ; 1 bytes @ 0x4
  5969                           
  5970  0074                     ___ftpack@sign:	
  5971                           ; 1 bytes @ 0x4
  5972                           
  5973  0074                     ___wmul@product:	
  5974                           ; 1 bytes @ 0x4
  5975                           
  5976  0074                     ___aldiv@dividend:	
  5977                           ; 2 bytes @ 0x4
  5978                           
  5979                           
  5980                           ; 4 bytes @ 0x4
  5981  0074                     	ds	1
  5982  0075                     ??___ftpack:	
  5983  0075                     ??_InitCustomChars:	
  5984                           ; 1 bytes @ 0x5
  5985                           
  5986  0075                     ??_LCD_Set_Cursor:	
  5987                           ; 1 bytes @ 0x5
  5988                           
  5989  0075                     ?_LCD_Write_String:	
  5990                           ; 1 bytes @ 0x5
  5991                           
  5992  0075                     ___awdiv@counter:	
  5993                           ; 1 bytes @ 0x5
  5994                           
  5995  0075                     ___awmod@counter:	
  5996                           ; 1 bytes @ 0x5
  5997                           
  5998  0075                     LCD_Write_String@a:	
  5999                           ; 1 bytes @ 0x5
  6000                           
  6001                           
  6002                           ; 2 bytes @ 0x5
  6003  0075                     	ds	1
  6004  0076                     ??___ftge:	
  6005  0076                     ?_PID_Calculate:	
  6006                           ; 1 bytes @ 0x6
  6007                           
  6008  0076                     InitCustomChars@i:	
  6009                           ; 2 bytes @ 0x6
  6010                           
  6011  0076                     ___awdiv@sign:	
  6012                           ; 1 bytes @ 0x6
  6013                           
  6014  0076                     ___awmod@sign:	
  6015                           ; 1 bytes @ 0x6
  6016                           
  6017  0076                     PID_Calculate@setpoint:	
  6018                           ; 1 bytes @ 0x6
  6019                           
  6020                           
  6021                           ; 2 bytes @ 0x6
  6022  0076                     	ds	1
  6023  0077                     ??_LCD_Write_String:	
  6024  0077                     LCD_Set_Cursor@x:	
  6025                           ; 1 bytes @ 0x7
  6026                           
  6027  0077                     LCD_Init@style:	
  6028                           ; 1 bytes @ 0x7
  6029                           
  6030  0077                     ___awdiv@quotient:	
  6031                           ; 1 bytes @ 0x7
  6032                           
  6033                           
  6034                           ; 2 bytes @ 0x7
  6035  0077                     	ds	1
  6036  0078                     ??_SYSTEM_Initialize:	
  6037  0078                     ??___aldiv:	
  6038                           ; 1 bytes @ 0x8
  6039                           
  6040  0078                     ?___awtoft:	
  6041                           ; 1 bytes @ 0x8
  6042                           
  6043  0078                     LCD_Set_Cursor@z:	
  6044                           ; 3 bytes @ 0x8
  6045                           
  6046  0078                     ___fttol@sign1:	
  6047                           ; 1 bytes @ 0x8
  6048                           
  6049  0078                     LCD_Write_String@i:	
  6050                           ; 1 bytes @ 0x8
  6051                           
  6052  0078                     PID_Calculate@temp:	
  6053                           ; 2 bytes @ 0x8
  6054                           
  6055  0078                     ___awtoft@c:	
  6056                           ; 2 bytes @ 0x8
  6057                           
  6058                           
  6059                           ; 2 bytes @ 0x8
  6060  0078                     	ds	1
  6061  0079                     ?_LCD_Write_Int:	
  6062  0079                     LCD_Set_Cursor@w:	
  6063                           ; 1 bytes @ 0x9
  6064                           
  6065  0079                     readAnalog@analog_channel:	
  6066                           ; 1 bytes @ 0x9
  6067                           
  6068  0079                     LCD_Write_Int@value:	
  6069                           ; 2 bytes @ 0x9
  6070                           
  6071  0079                     ___fttol@lval:	
  6072                           ; 2 bytes @ 0x9
  6073                           
  6074                           
  6075                           ; 4 bytes @ 0x9
  6076  0079                     	ds	1
  6077  007A                     ??_PID_Calculate:	
  6078  007A                     LCD_Set_Cursor@temp:	
  6079                           ; 1 bytes @ 0xA
  6080                           
  6081                           
  6082                           ; 1 bytes @ 0xA
  6083  007A                     	ds	1
  6084  007B                     ??___awtoft:	
  6085  007B                     LCD_Write_Int@fieldLength:	
  6086                           ; 1 bytes @ 0xB
  6087                           
  6088  007B                     readAnalog@value:	
  6089                           ; 1 bytes @ 0xB
  6090                           
  6091                           
  6092                           ; 2 bytes @ 0xB
  6093  007B                     	ds	1
  6094  007C                     LCD_Write_Int@numPlaces:	
  6095                           
  6096                           ; 1 bytes @ 0xC
  6097  007C                     	ds	1
  6098  007D                     LCD_Write_Int@sign:	
  6099  007D                     ___awtoft@sign:	
  6100                           ; 1 bytes @ 0xD
  6101                           
  6102  007D                     ___fttol@exp1:	
  6103                           ; 1 bytes @ 0xD
  6104                           
  6105                           
  6106                           ; 1 bytes @ 0xD
  6107  007D                     	ds	1
  6108  007E                     ??_eval_poly:	
  6109  007E                     ??_tempCalc:	
  6110                           ; 1 bytes @ 0xE
  6111                           
  6112  007E                     ??___ftsub:	
  6113                           ; 1 bytes @ 0xE
  6114                           
  6115                           
  6116                           	psect	cstackBANK0
  6117  0020                     __pcstackBANK0:	
  6118                           ; 1 bytes @ 0xE
  6119                           
  6120  0020                     ??_LCD_Write_Int:	
  6121  0020                     ?___ftmul:	
  6122                           ; 1 bytes @ 0x0
  6123                           
  6124  0020                     ___aldiv@counter:	
  6125                           ; 3 bytes @ 0x0
  6126                           
  6127  0020                     ___ftmul@f1:	
  6128                           ; 1 bytes @ 0x0
  6129                           
  6130                           
  6131                           ; 3 bytes @ 0x0
  6132  0020                     	ds	1
  6133  0021                     ___aldiv@sign:	
  6134                           
  6135                           ; 1 bytes @ 0x1
  6136  0021                     	ds	1
  6137  0022                     ___aldiv@quotient:	
  6138                           
  6139                           ; 4 bytes @ 0x2
  6140  0022                     	ds	1
  6141  0023                     ___ftmul@f2:	
  6142                           
  6143                           ; 3 bytes @ 0x3
  6144  0023                     	ds	2
  6145  0025                     LCD_Write_Int@str:	
  6146                           
  6147                           ; 5 bytes @ 0x5
  6148  0025                     	ds	1
  6149  0026                     ??___ftmul:	
  6150  0026                     ?_readAnalog:	
  6151                           ; 1 bytes @ 0x6
  6152                           
  6153  0026                     readAnalog@channel:	
  6154                           ; 2 bytes @ 0x6
  6155                           
  6156                           
  6157                           ; 2 bytes @ 0x6
  6158  0026                     	ds	2
  6159  0028                     ??_readAnalog:	
  6160                           
  6161                           ; 1 bytes @ 0x8
  6162  0028                     	ds	2
  6163  002A                     ___ftmul@exp:	
  6164  002A                     LCD_Write_Int@j:	
  6165                           ; 1 bytes @ 0xA
  6166                           
  6167                           
  6168                           ; 2 bytes @ 0xA
  6169  002A                     	ds	1
  6170  002B                     ___ftmul@f3_as_product:	
  6171                           
  6172                           ; 3 bytes @ 0xB
  6173  002B                     	ds	1
  6174  002C                     LCD_Write_Int@i:	
  6175                           
  6176                           ; 2 bytes @ 0xC
  6177  002C                     	ds	2
  6178  002E                     ??_menuChoice:	
  6179  002E                     ___ftmul@cntr:	
  6180                           ; 1 bytes @ 0xE
  6181                           
  6182                           
  6183                           ; 1 bytes @ 0xE
  6184  002E                     	ds	1
  6185  002F                     ___ftmul@sign:	
  6186                           
  6187                           ; 1 bytes @ 0xF
  6188  002F                     	ds	1
  6189  0030                     ?___ftdiv:	
  6190  0030                     ___ftdiv@f2:	
  6191                           ; 3 bytes @ 0x10
  6192                           
  6193                           
  6194                           ; 3 bytes @ 0x10
  6195  0030                     	ds	3
  6196  0033                     ___ftdiv@f1:	
  6197                           
  6198                           ; 3 bytes @ 0x13
  6199  0033                     	ds	3
  6200  0036                     ??___ftdiv:	
  6201                           
  6202                           ; 1 bytes @ 0x16
  6203  0036                     	ds	4
  6204  003A                     ___ftdiv@cntr:	
  6205                           
  6206                           ; 1 bytes @ 0x1A
  6207  003A                     	ds	1
  6208  003B                     ___ftdiv@f3:	
  6209                           
  6210                           ; 3 bytes @ 0x1B
  6211  003B                     	ds	3
  6212  003E                     ___ftdiv@exp:	
  6213                           
  6214                           ; 1 bytes @ 0x1E
  6215  003E                     	ds	1
  6216  003F                     ___ftdiv@sign:	
  6217                           
  6218                           ; 1 bytes @ 0x1F
  6219  003F                     	ds	1
  6220  0040                     ?___ftadd:	
  6221  0040                     ___ftadd@f1:	
  6222                           ; 3 bytes @ 0x20
  6223                           
  6224                           
  6225                           ; 3 bytes @ 0x20
  6226  0040                     	ds	3
  6227  0043                     ___ftadd@f2:	
  6228                           
  6229                           ; 3 bytes @ 0x23
  6230  0043                     	ds	3
  6231  0046                     ??___ftadd:	
  6232                           
  6233                           ; 1 bytes @ 0x26
  6234  0046                     	ds	4
  6235  004A                     ___ftadd@sign:	
  6236                           
  6237                           ; 1 bytes @ 0x2A
  6238  004A                     	ds	1
  6239  004B                     ___ftadd@exp2:	
  6240                           
  6241                           ; 1 bytes @ 0x2B
  6242  004B                     	ds	1
  6243  004C                     ___ftadd@exp1:	
  6244                           
  6245                           ; 1 bytes @ 0x2C
  6246  004C                     	ds	1
  6247  004D                     ?_eval_poly:	
  6248  004D                     ?___ftsub:	
  6249                           ; 3 bytes @ 0x2D
  6250                           
  6251  004D                     ___ftsub@f2:	
  6252                           ; 3 bytes @ 0x2D
  6253                           
  6254  004D                     eval_poly@x:	
  6255                           ; 3 bytes @ 0x2D
  6256                           
  6257                           
  6258                           ; 3 bytes @ 0x2D
  6259  004D                     	ds	3
  6260  0050                     eval_poly@d:	
  6261  0050                     ___ftsub@f1:	
  6262                           ; 2 bytes @ 0x30
  6263                           
  6264                           
  6265                           ; 3 bytes @ 0x30
  6266  0050                     	ds	2
  6267  0052                     eval_poly@n:	
  6268                           
  6269                           ; 2 bytes @ 0x32
  6270  0052                     	ds	2
  6271  0054                     eval_poly@res:	
  6272                           
  6273                           ; 3 bytes @ 0x34
  6274  0054                     	ds	3
  6275  0057                     ?_log:	
  6276  0057                     log@x:	
  6277                           ; 3 bytes @ 0x37
  6278                           
  6279                           
  6280                           ; 3 bytes @ 0x37
  6281  0057                     	ds	3
  6282  005A                     ??_log:	
  6283                           
  6284                           ; 1 bytes @ 0x3A
  6285  005A                     	ds	1
  6286  005B                     log@exponent:	
  6287                           
  6288                           ; 2 bytes @ 0x3B
  6289  005B                     	ds	2
  6290  005D                     ?_tempCalc:	
  6291  005D                     tempCalc@analogValue:	
  6292                           ; 2 bytes @ 0x3D
  6293                           
  6294                           
  6295                           ; 2 bytes @ 0x3D
  6296  005D                     	ds	2
  6297  005F                     tempCalc@R:	
  6298                           
  6299                           ; 3 bytes @ 0x3F
  6300  005F                     	ds	3
  6301  0062                     _tempCalc$1016:	
  6302                           
  6303                           ; 3 bytes @ 0x42
  6304  0062                     	ds	3
  6305  0065                     tempCalc@steinhart:	
  6306                           
  6307                           ; 3 bytes @ 0x45
  6308  0065                     	ds	3
  6309                           
  6310                           	psect	maintext
  6311  04E8                     __pmaintext:	
  6312 ;;
  6313 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6314 ;;
  6315 ;; *************** function _main *****************
  6316 ;; Defined at:
  6317 ;;		line 29 in file "main.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;		None
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  outputSample   50    0[BANK2 ] int [25]
  6322 ;;  analogs         4   67[BANK2 ] unsigned int [2]
  6323 ;;  outputTotal     4   61[BANK2 ] long 
  6324 ;;  dutyCycle6      2   65[BANK2 ] unsigned int 
  6325 ;;  currentTempe    2   59[BANK2 ] int 
  6326 ;;  pidPeriodCou    2   57[BANK2 ] int 
  6327 ;;  lastTemperat    2   55[BANK2 ] int 
  6328 ;;  output          2   51[BANK2 ] int 
  6329 ;;  j               1   72[BANK2 ] unsigned char 
  6330 ;;  outputIndex     1   71[BANK2 ] unsigned char 
  6331 ;;  lidOpenCount    1   54[BANK2 ] unsigned char 
  6332 ;;  holdOutput      1   53[BANK2 ] unsigned char 
  6333 ;;  x               1   50[BANK2 ] unsigned char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      void 
  6336 ;; Registers used:
  6337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : B1F/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;      Locals:         0       0       0      73       0       0       0       0       0       0       0       0       
      +0       0
  6345 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6346 ;;      Totals:         0       0      10      73       0       0       0       0       0       0       0       0       
      +0       0
  6347 ;;Total ram usage:       83 bytes
  6348 ;; Hardware stack levels required when called:    5
  6349 ;; This function calls:
  6350 ;;		_LCD_Clear
  6351 ;;		_LCD_Set_Cursor
  6352 ;;		_LCD_Write_Char
  6353 ;;		_LCD_Write_Int
  6354 ;;		_LCD_Write_String
  6355 ;;		_PID_Calculate
  6356 ;;		_PWM7_LoadDutyValue
  6357 ;;		_SYSTEM_Initialize
  6358 ;;		___aldiv
  6359 ;;		_menuChoice
  6360 ;;		_readAnalog
  6361 ;;		_tempCalc
  6362 ;; This function is called by:
  6363 ;;		Startup code after reset
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           
  6368                           ;psect for function _main
  6369  04E8                     _main:	
  6370                           
  6371                           ;main.c: 31: SYSTEM_Initialize();
  6372                           
  6373                           ;incstack = 0
  6374                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6375  04E8  3197  27BE  3184   	fcall	_SYSTEM_Initialize
  6376                           
  6377                           ;main.c: 33: uint16_t analogs[2] = {0};
  6378  04EB  0021               	movlb	1	; select bank1
  6379  04EC  0830               	movf	(main@F13664+3)^(0+128),w
  6380  04ED  0022               	movlb	2	; select bank2
  6381  04EE  00E6               	movwf	(main@analogs+3)^(0+256)
  6382  04EF  0021               	movlb	1	; select bank1
  6383  04F0  082F               	movf	(main@F13664+2)^(0+128),w
  6384  04F1  0022               	movlb	2	; select bank2
  6385  04F2  00E5               	movwf	(main@analogs+2)^(0+256)
  6386  04F3  0021               	movlb	1	; select bank1
  6387  04F4  082E               	movf	(main@F13664+1)^(0+128),w
  6388  04F5  0022               	movlb	2	; select bank2
  6389  04F6  00E4               	movwf	(main@analogs+1)^(0+256)
  6390  04F7  0021               	movlb	1	; select bank1
  6391  04F8  082D               	movf	main@F13664^(0+128),w
  6392  04F9  0022               	movlb	2	; select bank2
  6393  04FA  00E3               	movwf	main@analogs^(0+256)
  6394                           
  6395                           ;main.c: 35: extern int16_t setpoint[2];
  6396                           ;main.c: 43: int output = 0;
  6397  04FB  01D3               	clrf	main@output^(0+256)
  6398  04FC  01D4               	clrf	(main@output+1)^(0+256)
  6399                           
  6400                           ;main.c: 45: int32_t outputTotal = 0;
  6401  04FD  3000               	movlw	0
  6402  04FE  00E0               	movwf	(main@outputTotal+3)^(0+256)
  6403  04FF  3000               	movlw	0
  6404  0500  00DF               	movwf	(main@outputTotal+2)^(0+256)
  6405  0501  3000               	movlw	0
  6406  0502  00DE               	movwf	(main@outputTotal+1)^(0+256)
  6407  0503  3000               	movlw	0
  6408  0504  00DD               	movwf	main@outputTotal^(0+256)
  6409                           
  6410                           ;main.c: 47: char outputIndex = 0;
  6411  0505  01E7               	clrf	main@outputIndex^(0+256)
  6412                           
  6413                           ;main.c: 49: int16_t outputSamples[25]= {0};
  6414  0506  30A0               	movlw	low main@F13670
  6415  0507  0086               	movwf	6
  6416  0508  3001               	movlw	high main@F13670
  6417  0509  0087               	movwf	7
  6418  050A  3020               	movlw	low main@outputSamples
  6419  050B  0084               	movwf	4
  6420  050C  3001               	movlw	high main@outputSamples
  6421  050D  0085               	movwf	5
  6422  050E  3032               	movlw	50
  6423  050F  0021               	movlb	1	; select bank1
  6424  0510  00E0               	movwf	??_main^(0+128)
  6425  0511                     u3660:	
  6426  0511  0016               	moviw fsr1++
  6427  0512  001A               	movwi fsr0++
  6428  0513  0BE0               	decfsz	??_main^(0+128),f
  6429  0514  2D11               	goto	u3660
  6430                           
  6431                           ;main.c: 51: char holdOutput = 0;
  6432  0515  0022               	movlb	2	; select bank2
  6433  0516  01D5               	clrf	main@holdOutput^(0+256)
  6434                           
  6435                           ;main.c: 53: int currentTemperature = 750;
  6436  0517  30EE               	movlw	238
  6437  0518  00DB               	movwf	main@currentTemperature^(0+256)
  6438  0519  3002               	movlw	2
  6439  051A  00DC               	movwf	(main@currentTemperature^(0+256)+1)
  6440                           
  6441                           ;main.c: 55: int lastTemperature = 750;
  6442  051B  30EE               	movlw	238
  6443  051C  00D7               	movwf	main@lastTemperature^(0+256)
  6444  051D  3002               	movlw	2
  6445  051E  00D8               	movwf	(main@lastTemperature^(0+256)+1)
  6446                           
  6447                           ;main.c: 57: char lidOpenCount = 0;
  6448  051F  01D6               	clrf	main@lidOpenCount^(0+256)
  6449                           
  6450                           ;main.c: 61: char j = 0;
  6451  0520  01E8               	clrf	main@j^(0+256)
  6452                           
  6453                           ;main.c: 63: char x = 0;
  6454  0521  01D2               	clrf	main@x^(0+256)
  6455                           
  6456                           ;main.c: 65: int pidPeriodCounter = 0;
  6457  0522  01D9               	clrf	main@pidPeriodCounter^(0+256)
  6458  0523  01DA               	clrf	(main@pidPeriodCounter+1)^(0+256)
  6459                           
  6460                           ;main.c: 67: extern int pidMaxOutput;
  6461                           ;main.c: 69: extern unsigned char loop;
  6462                           ;main.c: 84: uint16_t dutyCycle6 = 0;
  6463  0524  01E1               	clrf	main@dutyCycle6^(0+256)
  6464  0525  01E2               	clrf	(main@dutyCycle6+1)^(0+256)
  6465                           
  6466                           ;main.c: 90: PWM7_LoadDutyValue(setpoint[1]);
  6467  0526  086C               	movf	((_setpoint+1)^(0+256)+2),w
  6468  0527  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6469  0528  086B               	movf	(_setpoint^(0+256)+2),w
  6470  0529  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6471  052A  3195  25D0  3184   	fcall	_PWM7_LoadDutyValue
  6472                           
  6473                           ;main.c: 92: _delay((unsigned long)((300)*(32000000/4000.0)));
  6474  052D  300D               	movlw	13
  6475  052E  0021               	movlb	1	; select bank1
  6476  052F  00E2               	movwf	(??_main^(0+128)+2)
  6477  0530  302D               	movlw	45
  6478  0531  00E1               	movwf	(??_main^(0+128)+1)
  6479  0532  30E2               	movlw	226
  6480  0533  00E0               	movwf	??_main^(0+128)
  6481  0534                     u3797:	
  6482  0534  0BE0               	decfsz	??_main^(0+128),f
  6483  0535  2D34               	goto	u3797
  6484  0536  0BE1               	decfsz	(??_main^(0+128)+1),f
  6485  0537  2D34               	goto	u3797
  6486  0538  0BE2               	decfsz	(??_main^(0+128)+2),f
  6487  0539  2D34               	goto	u3797
  6488  053A  3200               	nop2
  6489                           
  6490                           ;main.c: 94: LCD_Clear();
  6491  053B  3195  2557  3184   	fcall	_LCD_Clear
  6492  053E                     l3185:	
  6493                           ;main.c: 96: while (1)
  6494                           
  6495                           
  6496                           ;main.c: 97: {
  6497                           ;main.c: 98: extern int16_t errorValue;
  6498                           ;main.c: 99: extern int16_t integralValue;
  6499                           ;main.c: 100: extern int16_t derivativeValue;
  6500                           ;main.c: 102: if(loop>253)
  6501  053E  30FE               	movlw	254
  6502  053F  0022               	movlb	2	; select bank2
  6503  0540  026F               	subwf	_loop^(0+256),w
  6504  0541  1C03               	skipc
  6505  0542  2EF0               	goto	l3253
  6506                           
  6507                           ;main.c: 103: {
  6508                           ;main.c: 104: PWM7_LoadDutyValue(setpoint[1]);
  6509  0543  086C               	movf	((_setpoint+1)^(0+256)+2),w
  6510  0544  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6511  0545  086B               	movf	(_setpoint^(0+256)+2),w
  6512  0546  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6513  0547  3195  25D0  3184   	fcall	_PWM7_LoadDutyValue
  6514                           
  6515                           ;main.c: 106: { LCD_Set_Cursor(0,0); LCD_Write_Int(errorValue,5, 0, 0);};
  6516  054A  01F4               	clrf	LCD_Set_Cursor@y
  6517  054B  3000               	movlw	0
  6518  054C  3197  277F  3184   	fcall	_LCD_Set_Cursor
  6519  054F  0021               	movlb	1	; select bank1
  6520  0550  083A               	movf	(_errorValue+1)^(0+128),w
  6521  0551  00FA               	movwf	LCD_Write_Int@value+1
  6522  0552  0839               	movf	_errorValue^(0+128),w
  6523  0553  00F9               	movwf	LCD_Write_Int@value
  6524  0554  3005               	movlw	5
  6525  0555  00E0               	movwf	??_main^(0+128)
  6526  0556  0860               	movf	??_main^(0+128),w
  6527  0557  00FB               	movwf	LCD_Write_Int@fieldLength
  6528  0558  01FC               	clrf	LCD_Write_Int@numPlaces
  6529  0559  01FD               	clrf	LCD_Write_Int@sign
  6530  055A  318D  2505  3184   	fcall	_LCD_Write_Int
  6531                           
  6532                           ;main.c: 107: LCD_Write_Char(' ');
  6533  055D  3020               	movlw	32
  6534  055E  3196  26AC  3184   	fcall	_LCD_Write_Char
  6535                           
  6536                           ;main.c: 108: LCD_Write_Char(' ');
  6537  0561  3020               	movlw	32
  6538  0562  3196  26AC  3184   	fcall	_LCD_Write_Char
  6539                           
  6540                           ;main.c: 109: { LCD_Set_Cursor(8,0); LCD_Write_Int(integralValue,5, 0, 0);};
  6541  0565  01F4               	clrf	LCD_Set_Cursor@y
  6542  0566  3008               	movlw	8
  6543  0567  3197  277F  3184   	fcall	_LCD_Set_Cursor
  6544  056A  0021               	movlb	1	; select bank1
  6545  056B  083C               	movf	(_integralValue+1)^(0+128),w
  6546  056C  00FA               	movwf	LCD_Write_Int@value+1
  6547  056D  083B               	movf	_integralValue^(0+128),w
  6548  056E  00F9               	movwf	LCD_Write_Int@value
  6549  056F  3005               	movlw	5
  6550  0570  00E0               	movwf	??_main^(0+128)
  6551  0571  0860               	movf	??_main^(0+128),w
  6552  0572  00FB               	movwf	LCD_Write_Int@fieldLength
  6553  0573  01FC               	clrf	LCD_Write_Int@numPlaces
  6554  0574  01FD               	clrf	LCD_Write_Int@sign
  6555  0575  318D  2505  3184   	fcall	_LCD_Write_Int
  6556                           
  6557                           ;main.c: 110: LCD_Write_Char(' ');
  6558  0578  3020               	movlw	32
  6559  0579  3196  26AC  3184   	fcall	_LCD_Write_Char
  6560                           
  6561                           ;main.c: 111: LCD_Write_Char(' ');
  6562  057C  3020               	movlw	32
  6563  057D  3196  26AC  3184   	fcall	_LCD_Write_Char
  6564                           
  6565                           ;main.c: 113: { LCD_Set_Cursor(0,1); LCD_Write_Int(derivativeValue,5, 0, 0);};
  6566  0580  01F4               	clrf	LCD_Set_Cursor@y
  6567  0581  0AF4               	incf	LCD_Set_Cursor@y,f
  6568  0582  3000               	movlw	0
  6569  0583  3197  277F  3184   	fcall	_LCD_Set_Cursor
  6570  0586  0021               	movlb	1	; select bank1
  6571  0587  0836               	movf	(_derivativeValue+1)^(0+128),w
  6572  0588  00FA               	movwf	LCD_Write_Int@value+1
  6573  0589  0835               	movf	_derivativeValue^(0+128),w
  6574  058A  00F9               	movwf	LCD_Write_Int@value
  6575  058B  3005               	movlw	5
  6576  058C  00E0               	movwf	??_main^(0+128)
  6577  058D  0860               	movf	??_main^(0+128),w
  6578  058E  00FB               	movwf	LCD_Write_Int@fieldLength
  6579  058F  01FC               	clrf	LCD_Write_Int@numPlaces
  6580  0590  01FD               	clrf	LCD_Write_Int@sign
  6581  0591  318D  2505  3184   	fcall	_LCD_Write_Int
  6582                           
  6583                           ;main.c: 114: LCD_Write_Char(' ');
  6584  0594  3020               	movlw	32
  6585  0595  3196  26AC  3184   	fcall	_LCD_Write_Char
  6586                           
  6587                           ;main.c: 115: { LCD_Set_Cursor(6,1); LCD_Write_Int(analogs[1],4, 1, 0);};
  6588  0598  01F4               	clrf	LCD_Set_Cursor@y
  6589  0599  0AF4               	incf	LCD_Set_Cursor@y,f
  6590  059A  3006               	movlw	6
  6591  059B  3197  277F  3184   	fcall	_LCD_Set_Cursor
  6592  059E  0022               	movlb	2	; select bank2
  6593  059F  0866               	movf	((main@analogs+1)^(0+256)+2),w
  6594  05A0  00FA               	movwf	LCD_Write_Int@value+1
  6595  05A1  0865               	movf	(main@analogs^(0+256)+2),w
  6596  05A2  00F9               	movwf	LCD_Write_Int@value
  6597  05A3  3004               	movlw	4
  6598  05A4  0021               	movlb	1	; select bank1
  6599  05A5  00E0               	movwf	??_main^(0+128)
  6600  05A6  0860               	movf	??_main^(0+128),w
  6601  05A7  00FB               	movwf	LCD_Write_Int@fieldLength
  6602  05A8  01FC               	clrf	LCD_Write_Int@numPlaces
  6603  05A9  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6604  05AA  01FD               	clrf	LCD_Write_Int@sign
  6605  05AB  318D  2505  3184   	fcall	_LCD_Write_Int
  6606                           
  6607                           ;main.c: 116: { LCD_Set_Cursor(12,1); LCD_Write_Int(dutyCycle6,4, 0, 0);};
  6608  05AE  01F4               	clrf	LCD_Set_Cursor@y
  6609  05AF  0AF4               	incf	LCD_Set_Cursor@y,f
  6610  05B0  300C               	movlw	12
  6611  05B1  3197  277F  3184   	fcall	_LCD_Set_Cursor
  6612  05B4  0022               	movlb	2	; select bank2
  6613  05B5  0862               	movf	(main@dutyCycle6+1)^(0+256),w
  6614  05B6  00FA               	movwf	LCD_Write_Int@value+1
  6615  05B7  0861               	movf	main@dutyCycle6^(0+256),w
  6616  05B8  00F9               	movwf	LCD_Write_Int@value
  6617  05B9  3004               	movlw	4
  6618  05BA  0021               	movlb	1	; select bank1
  6619  05BB  00E0               	movwf	??_main^(0+128)
  6620  05BC  0860               	movf	??_main^(0+128),w
  6621  05BD  00FB               	movwf	LCD_Write_Int@fieldLength
  6622  05BE  01FC               	clrf	LCD_Write_Int@numPlaces
  6623  05BF  01FD               	clrf	LCD_Write_Int@sign
  6624  05C0  318D  2505  3184   	fcall	_LCD_Write_Int
  6625                           
  6626                           ;main.c: 132: if(holdOutput==0)
  6627  05C3  0022               	movlb	2	; select bank2
  6628  05C4  0855               	movf	main@holdOutput^(0+256),w
  6629  05C5  1D03               	btfss	3,2
  6630  05C6  2E85               	goto	l3227
  6631                           
  6632                           ;main.c: 133: {
  6633                           ;main.c: 134: output = PID_Calculate(setpoint[0]+20,analogs[1]);
  6634  05C7  0869               	movf	_setpoint^(0+256),w
  6635  05C8  3E14               	addlw	20
  6636  05C9  00F6               	movwf	PID_Calculate@setpoint
  6637  05CA  3000               	movlw	0
  6638  05CB  3D6A               	addwfc	(_setpoint+1)^(0+256),w
  6639  05CC  00F7               	movwf	PID_Calculate@setpoint+1
  6640  05CD  0866               	movf	((main@analogs+1)^(0+256)+2),w
  6641  05CE  00F9               	movwf	PID_Calculate@temp+1
  6642  05CF  0865               	movf	(main@analogs^(0+256)+2),w
  6643  05D0  00F8               	movwf	PID_Calculate@temp
  6644  05D1  3181  213C  3184   	fcall	_PID_Calculate
  6645  05D4  0877               	movf	?_PID_Calculate+1,w
  6646  05D5  0022               	movlb	2	; select bank2
  6647  05D6  00D4               	movwf	(main@output+1)^(0+256)
  6648  05D7  0876               	movf	?_PID_Calculate,w
  6649  05D8  00D3               	movwf	main@output^(0+256)
  6650                           
  6651                           ;main.c: 135: outputTotal = outputTotal - outputSamples[outputIndex];
  6652  05D9  085D               	movf	main@outputTotal^(0+256),w
  6653  05DA  0021               	movlb	1	; select bank1
  6654  05DB  00E0               	movwf	??_main^(0+128)
  6655  05DC  0022               	movlb	2	; select bank2
  6656  05DD  085E               	movf	(main@outputTotal+1)^(0+256),w
  6657  05DE  0021               	movlb	1	; select bank1
  6658  05DF  00E1               	movwf	(??_main^(0+128)+1)
  6659  05E0  0022               	movlb	2	; select bank2
  6660  05E1  085F               	movf	(main@outputTotal+2)^(0+256),w
  6661  05E2  0021               	movlb	1	; select bank1
  6662  05E3  00E2               	movwf	(??_main^(0+128)+2)
  6663  05E4  0022               	movlb	2	; select bank2
  6664  05E5  0860               	movf	(main@outputTotal+3)^(0+256),w
  6665  05E6  0021               	movlb	1	; select bank1
  6666  05E7  00E3               	movwf	(??_main^(0+128)+3)
  6667  05E8  0022               	movlb	2	; select bank2
  6668  05E9  3567               	lslf	main@outputIndex^(0+256),w
  6669  05EA  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6670  05EB  0086               	movwf	6
  6671  05EC  3001               	movlw	1	; select bank2/3
  6672  05ED  0087               	movwf	7
  6673  05EE  3F40               	moviw [0]fsr1
  6674  05EF  0021               	movlb	1	; select bank1
  6675  05F0  00E4               	movwf	(??_main+4)^(0+128)
  6676  05F1  3F41               	moviw [1]fsr1
  6677  05F2  00E5               	movwf	((??_main+4)^(0+128)+1)
  6678  05F3  0864               	movf	(??_main+4)^(0+128),w
  6679  05F4  00E6               	movwf	(??_main+6)^(0+128)
  6680  05F5  0865               	movf	(??_main+5)^(0+128),w
  6681  05F6  00E7               	movwf	((??_main+6)^(0+128)+1)
  6682  05F7  3000               	movlw	0
  6683  05F8  1BE7               	btfsc	((??_main+6)^(0+128)+1),7
  6684  05F9  30FF               	movlw	255
  6685  05FA  00E8               	movwf	((??_main+6)^(0+128)+2)
  6686  05FB  00E9               	movwf	((??_main+6)^(0+128)+3)
  6687  05FC  09E6               	comf	(??_main+6)^(0+128),f
  6688  05FD  09E7               	comf	((??_main+6)^(0+128)+1),f
  6689  05FE  09E8               	comf	((??_main+6)^(0+128)+2),f
  6690  05FF  09E9               	comf	((??_main+6)^(0+128)+3),f
  6691  0600  0AE6               	incf	(??_main+6)^(0+128),f
  6692  0601  1903               	skipnz
  6693  0602  0AE7               	incf	((??_main+6)^(0+128)+1),f
  6694  0603  1903               	skipnz
  6695  0604  0AE8               	incf	((??_main+6)^(0+128)+2),f
  6696  0605  1903               	skipnz
  6697  0606  0AE9               	incf	((??_main+6)^(0+128)+3),f
  6698  0607  0866               	movf	(??_main+6)^(0+128),w
  6699  0608  07E0               	addwf	??_main^(0+128),f
  6700  0609  0867               	movf	(??_main+7)^(0+128),w
  6701  060A  3DE1               	addwfc	(??_main^(0+128)+1),f
  6702  060B  0868               	movf	(??_main+8)^(0+128),w
  6703  060C  3DE2               	addwfc	(??_main^(0+128)+2),f
  6704  060D  0869               	movf	(??_main+9)^(0+128),w
  6705  060E  3DE3               	addwfc	(??_main^(0+128)+3),f
  6706  060F  0863               	movf	(??_main+3)^(0+128),w
  6707  0610  0022               	movlb	2	; select bank2
  6708  0611  00E0               	movwf	(main@outputTotal+3)^(0+256)
  6709  0612  0021               	movlb	1	; select bank1
  6710  0613  0862               	movf	(??_main+2)^(0+128),w
  6711  0614  0022               	movlb	2	; select bank2
  6712  0615  00DF               	movwf	(main@outputTotal+2)^(0+256)
  6713  0616  0021               	movlb	1	; select bank1
  6714  0617  0861               	movf	(??_main+1)^(0+128),w
  6715  0618  0022               	movlb	2	; select bank2
  6716  0619  00DE               	movwf	(main@outputTotal+1)^(0+256)
  6717  061A  0021               	movlb	1	; select bank1
  6718  061B  0860               	movf	??_main^(0+128),w
  6719  061C  0022               	movlb	2	; select bank2
  6720  061D  00DD               	movwf	main@outputTotal^(0+256)
  6721                           
  6722                           ;main.c: 136: outputSamples[outputIndex] = output;
  6723  061E  3567               	lslf	main@outputIndex^(0+256),w
  6724  061F  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6725  0620  0086               	movwf	6
  6726  0621  3001               	movlw	1	; select bank2/3
  6727  0622  0087               	movwf	7
  6728  0623  0853               	movf	main@output^(0+256),w
  6729  0624  3FC0               	movwi [0]fsr1
  6730  0625  0854               	movf	(main@output+1)^(0+256),w
  6731  0626  3FC1               	movwi [1]fsr1
  6732                           
  6733                           ;main.c: 137: outputTotal = outputTotal + outputSamples[outputIndex];
  6734  0627  085D               	movf	main@outputTotal^(0+256),w
  6735  0628  0021               	movlb	1	; select bank1
  6736  0629  00E0               	movwf	??_main^(0+128)
  6737  062A  0022               	movlb	2	; select bank2
  6738  062B  085E               	movf	(main@outputTotal+1)^(0+256),w
  6739  062C  0021               	movlb	1	; select bank1
  6740  062D  00E1               	movwf	(??_main^(0+128)+1)
  6741  062E  0022               	movlb	2	; select bank2
  6742  062F  085F               	movf	(main@outputTotal+2)^(0+256),w
  6743  0630  0021               	movlb	1	; select bank1
  6744  0631  00E2               	movwf	(??_main^(0+128)+2)
  6745  0632  0022               	movlb	2	; select bank2
  6746  0633  0860               	movf	(main@outputTotal+3)^(0+256),w
  6747  0634  0021               	movlb	1	; select bank1
  6748  0635  00E3               	movwf	(??_main^(0+128)+3)
  6749  0636  0022               	movlb	2	; select bank2
  6750  0637  3567               	lslf	main@outputIndex^(0+256),w
  6751  0638  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6752  0639  0086               	movwf	6
  6753  063A  3001               	movlw	1	; select bank2/3
  6754  063B  0087               	movwf	7
  6755  063C  3F40               	moviw [0]fsr1
  6756  063D  0021               	movlb	1	; select bank1
  6757  063E  00E4               	movwf	(??_main+4)^(0+128)
  6758  063F  3F41               	moviw [1]fsr1
  6759  0640  00E5               	movwf	((??_main+4)^(0+128)+1)
  6760  0641  0864               	movf	(??_main+4)^(0+128),w
  6761  0642  00E6               	movwf	(??_main+6)^(0+128)
  6762  0643  0865               	movf	(??_main+5)^(0+128),w
  6763  0644  00E7               	movwf	((??_main+6)^(0+128)+1)
  6764  0645  3000               	movlw	0
  6765  0646  1BE7               	btfsc	((??_main+6)^(0+128)+1),7
  6766  0647  30FF               	movlw	255
  6767  0648  00E8               	movwf	((??_main+6)^(0+128)+2)
  6768  0649  00E9               	movwf	((??_main+6)^(0+128)+3)
  6769  064A  0866               	movf	(??_main+6)^(0+128),w
  6770  064B  07E0               	addwf	??_main^(0+128),f
  6771  064C  0867               	movf	(??_main+7)^(0+128),w
  6772  064D  3DE1               	addwfc	(??_main^(0+128)+1),f
  6773  064E  0868               	movf	(??_main+8)^(0+128),w
  6774  064F  3DE2               	addwfc	(??_main^(0+128)+2),f
  6775  0650  0869               	movf	(??_main+9)^(0+128),w
  6776  0651  3DE3               	addwfc	(??_main^(0+128)+3),f
  6777  0652  0863               	movf	(??_main+3)^(0+128),w
  6778  0653  0022               	movlb	2	; select bank2
  6779  0654  00E0               	movwf	(main@outputTotal+3)^(0+256)
  6780  0655  0021               	movlb	1	; select bank1
  6781  0656  0862               	movf	(??_main+2)^(0+128),w
  6782  0657  0022               	movlb	2	; select bank2
  6783  0658  00DF               	movwf	(main@outputTotal+2)^(0+256)
  6784  0659  0021               	movlb	1	; select bank1
  6785  065A  0861               	movf	(??_main+1)^(0+128),w
  6786  065B  0022               	movlb	2	; select bank2
  6787  065C  00DE               	movwf	(main@outputTotal+1)^(0+256)
  6788  065D  0021               	movlb	1	; select bank1
  6789  065E  0860               	movf	??_main^(0+128),w
  6790  065F  0022               	movlb	2	; select bank2
  6791  0660  00DD               	movwf	main@outputTotal^(0+256)
  6792                           
  6793                           ;main.c: 138: dutyCycle6 = outputTotal/25;
  6794  0661  3000               	movlw	0
  6795  0662  00F3               	movwf	___aldiv@divisor+3
  6796  0663  3000               	movlw	0
  6797  0664  00F2               	movwf	___aldiv@divisor+2
  6798  0665  3000               	movlw	0
  6799  0666  00F1               	movwf	___aldiv@divisor+1
  6800  0667  3019               	movlw	25
  6801  0668  00F0               	movwf	___aldiv@divisor
  6802  0669  0860               	movf	(main@outputTotal+3)^(0+256),w
  6803  066A  00F7               	movwf	___aldiv@dividend+3
  6804  066B  085F               	movf	(main@outputTotal+2)^(0+256),w
  6805  066C  00F6               	movwf	___aldiv@dividend+2
  6806  066D  085E               	movf	(main@outputTotal+1)^(0+256),w
  6807  066E  00F5               	movwf	___aldiv@dividend+1
  6808  066F  085D               	movf	main@outputTotal^(0+256),w
  6809  0670  00F4               	movwf	___aldiv@dividend
  6810  0671  3189  2169  3184   	fcall	___aldiv
  6811  0674  0871               	movf	?___aldiv+1,w
  6812  0675  0022               	movlb	2	; select bank2
  6813  0676  00E2               	movwf	(main@dutyCycle6+1)^(0+256)
  6814  0677  0870               	movf	?___aldiv,w
  6815  0678  00E1               	movwf	main@dutyCycle6^(0+256)
  6816                           
  6817                           ;main.c: 140: outputIndex+=1;
  6818  0679  3001               	movlw	1
  6819  067A  0021               	movlb	1	; select bank1
  6820  067B  00E0               	movwf	??_main^(0+128)
  6821  067C  0860               	movf	??_main^(0+128),w
  6822  067D  0022               	movlb	2	; select bank2
  6823  067E  07E7               	addwf	main@outputIndex^(0+256),f
  6824                           
  6825                           ;main.c: 141: if(outputIndex >= 25)outputIndex = 0;
  6826  067F  3019               	movlw	25
  6827  0680  0267               	subwf	main@outputIndex^(0+256),w
  6828  0681  1C03               	skipc
  6829  0682  2E89               	goto	l3231
  6830  0683  01E7               	clrf	main@outputIndex^(0+256)
  6831                           
  6832                           ;main.c: 142: }
  6833  0684  2E89               	goto	l3231
  6834  0685                     l3227:	
  6835                           
  6836                           ;main.c: 143: else
  6837                           ;main.c: 144: {
  6838                           ;main.c: 145: dutyCycle6=0;
  6839  0685  01E1               	clrf	main@dutyCycle6^(0+256)
  6840  0686  01E2               	clrf	(main@dutyCycle6+1)^(0+256)
  6841                           
  6842                           ;main.c: 146: holdOutput-=1;
  6843  0687  3001               	movlw	1
  6844  0688  02D5               	subwf	main@holdOutput^(0+256),f
  6845  0689                     l3231:	
  6846                           
  6847                           ;main.c: 147: }
  6848                           ;main.c: 149: currentTemperature=analogs[1];
  6849  0689  0866               	movf	((main@analogs+1)^(0+256)+2),w
  6850  068A  00DC               	movwf	(main@currentTemperature+1)^(0+256)
  6851  068B  0865               	movf	(main@analogs^(0+256)+2),w
  6852  068C  00DB               	movwf	main@currentTemperature^(0+256)
  6853                           
  6854                           ;main.c: 151: if(lidOpenCount<10)
  6855  068D  300A               	movlw	10
  6856  068E  0256               	subwf	main@lidOpenCount^(0+256),w
  6857  068F  1803               	skipnc
  6858  0690  2E98               	goto	l3237
  6859                           
  6860                           ;main.c: 152: {
  6861                           ;main.c: 153: lidOpenCount+=1;
  6862  0691  3001               	movlw	1
  6863  0692  0021               	movlb	1	; select bank1
  6864  0693  00E0               	movwf	??_main^(0+128)
  6865  0694  0860               	movf	??_main^(0+128),w
  6866  0695  0022               	movlb	2	; select bank2
  6867  0696  07D6               	addwf	main@lidOpenCount^(0+256),f
  6868                           
  6869                           ;main.c: 154: }
  6870  0697  2E9D               	goto	l3241
  6871  0698                     l3237:	
  6872                           
  6873                           ;main.c: 155: else
  6874                           ;main.c: 156: {
  6875                           ;main.c: 157: lastTemperature=currentTemperature;
  6876  0698  085C               	movf	(main@currentTemperature+1)^(0+256),w
  6877  0699  00D8               	movwf	(main@lastTemperature+1)^(0+256)
  6878  069A  085B               	movf	main@currentTemperature^(0+256),w
  6879  069B  00D7               	movwf	main@lastTemperature^(0+256)
  6880                           
  6881                           ;main.c: 158: lidOpenCount=0;
  6882  069C  01D6               	clrf	main@lidOpenCount^(0+256)
  6883  069D                     l3241:	
  6884                           
  6885                           ;main.c: 159: }
  6886                           ;main.c: 161: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6887  069D  095B               	comf	main@currentTemperature^(0+256),w
  6888  069E  0021               	movlb	1	; select bank1
  6889  069F  00E0               	movwf	??_main^(0+128)
  6890  06A0  0022               	movlb	2	; select bank2
  6891  06A1  095C               	comf	(main@currentTemperature+1)^(0+256),w
  6892  06A2  0021               	movlb	1	; select bank1
  6893  06A3  00E1               	movwf	(??_main^(0+128)+1)
  6894  06A4  0AE0               	incf	??_main^(0+128),f
  6895  06A5  1903               	skipnz
  6896  06A6  0AE1               	incf	(??_main^(0+128)+1),f
  6897  06A7  0022               	movlb	2	; select bank2
  6898  06A8  0857               	movf	main@lastTemperature^(0+256),w
  6899  06A9  0021               	movlb	1	; select bank1
  6900  06AA  0760               	addwf	??_main^(0+128),w
  6901  06AB  00E2               	movwf	(??_main+2)^(0+128)
  6902  06AC  0022               	movlb	2	; select bank2
  6903  06AD  0858               	movf	(main@lastTemperature+1)^(0+256),w
  6904  06AE  0021               	movlb	1	; select bank1
  6905  06AF  3D61               	addwfc	(??_main+1)^(0+128),w
  6906  06B0  00E3               	movwf	(??_main+3)^(0+128)
  6907  06B1  0863               	movf	(??_main+3)^(0+128),w
  6908  06B2  3A80               	xorlw	128
  6909  06B3  00E4               	movwf	(??_main+4)^(0+128)
  6910  06B4  3080               	movlw	128
  6911  06B5  0264               	subwf	(??_main+4)^(0+128),w
  6912  06B6  1D03               	skipz
  6913  06B7  2EBA               	goto	u3715
  6914  06B8  3065               	movlw	101
  6915  06B9  0262               	subwf	(??_main+2)^(0+128),w
  6916  06BA                     u3715:	
  6917  06BA  1803               	skipnc
  6918  06BB  2EDC               	goto	l3245
  6919  06BC  0022               	movlb	2	; select bank2
  6920  06BD  095B               	comf	main@currentTemperature^(0+256),w
  6921  06BE  0021               	movlb	1	; select bank1
  6922  06BF  00E0               	movwf	??_main^(0+128)
  6923  06C0  0022               	movlb	2	; select bank2
  6924  06C1  095C               	comf	(main@currentTemperature+1)^(0+256),w
  6925  06C2  0021               	movlb	1	; select bank1
  6926  06C3  00E1               	movwf	(??_main^(0+128)+1)
  6927  06C4  0AE0               	incf	??_main^(0+128),f
  6928  06C5  1903               	skipnz
  6929  06C6  0AE1               	incf	(??_main^(0+128)+1),f
  6930  06C7  0022               	movlb	2	; select bank2
  6931  06C8  0857               	movf	main@lastTemperature^(0+256),w
  6932  06C9  0021               	movlb	1	; select bank1
  6933  06CA  0760               	addwf	??_main^(0+128),w
  6934  06CB  00E2               	movwf	(??_main+2)^(0+128)
  6935  06CC  0022               	movlb	2	; select bank2
  6936  06CD  0858               	movf	(main@lastTemperature+1)^(0+256),w
  6937  06CE  0021               	movlb	1	; select bank1
  6938  06CF  3D61               	addwfc	(??_main+1)^(0+128),w
  6939  06D0  00E3               	movwf	(??_main+3)^(0+128)
  6940  06D1  0863               	movf	(??_main+3)^(0+128),w
  6941  06D2  3A80               	xorlw	128
  6942  06D3  00E4               	movwf	(??_main+4)^(0+128)
  6943  06D4  307F               	movlw	127
  6944  06D5  0264               	subwf	(??_main+4)^(0+128),w
  6945  06D6  1D03               	skipz
  6946  06D7  2EDA               	goto	u3725
  6947  06D8  309C               	movlw	156
  6948  06D9  0262               	subwf	(??_main+2)^(0+128),w
  6949  06DA                     u3725:	
  6950  06DA  1803               	skipnc
  6951  06DB  2EE5               	goto	l3249
  6952  06DC                     l3245:	
  6953                           
  6954                           ;main.c: 162: {
  6955                           ;main.c: 163: dutyCycle6=0;
  6956  06DC  0022               	movlb	2	; select bank2
  6957  06DD  01E1               	clrf	main@dutyCycle6^(0+256)
  6958  06DE  01E2               	clrf	(main@dutyCycle6+1)^(0+256)
  6959                           
  6960                           ;main.c: 164: holdOutput=5;
  6961  06DF  3005               	movlw	5
  6962  06E0  0021               	movlb	1	; select bank1
  6963  06E1  00E0               	movwf	??_main^(0+128)
  6964  06E2  0860               	movf	??_main^(0+128),w
  6965  06E3  0022               	movlb	2	; select bank2
  6966  06E4  00D5               	movwf	main@holdOutput^(0+256)
  6967  06E5                     l3249:	
  6968                           
  6969                           ;main.c: 165: }
  6970                           ;main.c: 167: if(dutyCycle6<50)dutyCycle6=0;
  6971  06E5  3000               	movlw	0
  6972  06E6  0022               	movlb	2	; select bank2
  6973  06E7  0262               	subwf	(main@dutyCycle6+1)^(0+256),w
  6974  06E8  3032               	movlw	50
  6975  06E9  1903               	skipnz
  6976  06EA  0261               	subwf	main@dutyCycle6^(0+256),w
  6977  06EB  1803               	skipnc
  6978  06EC  2EEF               	goto	l450
  6979  06ED  01E1               	clrf	main@dutyCycle6^(0+256)
  6980  06EE  01E2               	clrf	(main@dutyCycle6+1)^(0+256)
  6981  06EF                     l450:	
  6982                           
  6983                           ;main.c: 169: loop=0;
  6984  06EF  01EF               	clrf	_loop^(0+256)
  6985  06F0                     l3253:	
  6986                           
  6987                           ;main.c: 170: }
  6988                           ;main.c: 172: pidPeriodCounter+=1;
  6989  06F0  3001               	movlw	1
  6990  06F1  07D9               	addwf	main@pidPeriodCounter^(0+256),f
  6991  06F2  3000               	movlw	0
  6992  06F3  3DDA               	addwfc	(main@pidPeriodCounter+1)^(0+256),f
  6993                           
  6994                           ;main.c: 174: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  6995  06F4  086E               	movf	(_pidMaxOutput+1)^(0+256),w
  6996  06F5  3A80               	xorlw	128
  6997  06F6  0021               	movlb	1	; select bank1
  6998  06F7  00E0               	movwf	??_main^(0+128)
  6999  06F8  0022               	movlb	2	; select bank2
  7000  06F9  085A               	movf	(main@pidPeriodCounter+1)^(0+256),w
  7001  06FA  3A80               	xorlw	128
  7002  06FB  0021               	movlb	1	; select bank1
  7003  06FC  0260               	subwf	??_main^(0+128),w
  7004  06FD  1D03               	skipz
  7005  06FE  2F02               	goto	u3745
  7006  06FF  0022               	movlb	2	; select bank2
  7007  0700  0859               	movf	main@pidPeriodCounter^(0+256),w
  7008  0701  026D               	subwf	_pidMaxOutput^(0+256),w
  7009  0702                     u3745:	
  7010  0702  1803               	skipnc
  7011  0703  2F07               	goto	l3259
  7012  0704  0022               	movlb	2	; select bank2
  7013  0705  01D9               	clrf	main@pidPeriodCounter^(0+256)
  7014  0706  01DA               	clrf	(main@pidPeriodCounter+1)^(0+256)
  7015  0707                     l3259:	
  7016                           
  7017                           ;main.c: 176: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  7018  0707  0022               	movlb	2	; select bank2
  7019  0708  0862               	movf	(main@dutyCycle6+1)^(0+256),w
  7020  0709  025A               	subwf	(main@pidPeriodCounter+1)^(0+256),w
  7021  070A  1D03               	skipz
  7022  070B  2F0E               	goto	u3755
  7023  070C  0861               	movf	main@dutyCycle6^(0+256),w
  7024  070D  0259               	subwf	main@pidPeriodCounter^(0+256),w
  7025  070E                     u3755:	
  7026  070E  1803               	skipnc
  7027  070F  2F13               	goto	l452
  7028  0710  0020               	movlb	0	; select bank0
  7029  0711  1518               	bsf	24,2	;volatile
  7030  0712  2F15               	goto	l3263
  7031  0713                     l452:	
  7032                           
  7033                           ;main.c: 177: else LATC2=0;
  7034  0713  0020               	movlb	0	; select bank0
  7035  0714  1118               	bcf	24,2	;volatile
  7036  0715                     l3263:	
  7037                           
  7038                           ;main.c: 179: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  7039  0715  0022               	movlb	2	; select bank2
  7040  0716  01E8               	clrf	main@j^(0+256)
  7041  0717  3002               	movlw	2
  7042  0718  0268               	subwf	main@j^(0+256),w
  7043  0719  1803               	btfsc	3,0
  7044  071A  2F3E               	goto	l3275
  7045  071B                     l3269:	
  7046  071B  0868               	movf	main@j^(0+256),w
  7047  071C  0021               	movlb	1	; select bank1
  7048  071D  00E0               	movwf	??_main^(0+128)
  7049  071E  01E1               	clrf	(??_main^(0+128)+1)
  7050  071F  0860               	movf	??_main^(0+128),w
  7051  0720  0020               	movlb	0	; select bank0
  7052  0721  00A6               	movwf	readAnalog@channel
  7053  0722  0021               	movlb	1	; select bank1
  7054  0723  0861               	movf	(??_main+1)^(0+128),w
  7055  0724  0020               	movlb	0	; select bank0
  7056  0725  00A7               	movwf	readAnalog@channel+1
  7057  0726  318E  26C4  3184   	fcall	_readAnalog
  7058  0729  0022               	movlb	2	; select bank2
  7059  072A  3568               	lslf	main@j^(0+256),w
  7060  072B  3E63               	addlw	(low (main@analogs| (0+256)))& (0+255)
  7061  072C  0086               	movwf	6
  7062  072D  3001               	movlw	1	; select bank2/3
  7063  072E  0087               	movwf	7
  7064  072F  0020               	movlb	0	; select bank0
  7065  0730  0826               	movf	?_readAnalog,w
  7066  0731  3FC0               	movwi [0]fsr1
  7067  0732  0827               	movf	?_readAnalog+1,w
  7068  0733  3FC1               	movwi [1]fsr1
  7069  0734  3001               	movlw	1
  7070  0735  0021               	movlb	1	; select bank1
  7071  0736  00E0               	movwf	??_main^(0+128)
  7072  0737  0860               	movf	??_main^(0+128),w
  7073  0738  0022               	movlb	2	; select bank2
  7074  0739  07E8               	addwf	main@j^(0+256),f
  7075  073A  3002               	movlw	2
  7076  073B  0268               	subwf	main@j^(0+256),w
  7077  073C  1C03               	skipc
  7078  073D  2F1B               	goto	l3269
  7079  073E                     l3275:	
  7080                           
  7081                           ;main.c: 181: analogs[0]=tempCalc(analogs[0]);
  7082  073E  0864               	movf	(main@analogs+1)^(0+256),w
  7083  073F  0020               	movlb	0	; select bank0
  7084  0740  00DE               	movwf	tempCalc@analogValue+1
  7085  0741  0022               	movlb	2	; select bank2
  7086  0742  0863               	movf	main@analogs^(0+256),w
  7087  0743  0020               	movlb	0	; select bank0
  7088  0744  00DD               	movwf	tempCalc@analogValue
  7089  0745  3180  201F  3184   	fcall	_tempCalc
  7090  0748  0020               	movlb	0	; select bank0
  7091  0749  085E               	movf	?_tempCalc+1,w
  7092  074A  0022               	movlb	2	; select bank2
  7093  074B  00E4               	movwf	(main@analogs+1)^(0+256)
  7094  074C  0020               	movlb	0	; select bank0
  7095  074D  085D               	movf	?_tempCalc,w
  7096  074E  0022               	movlb	2	; select bank2
  7097  074F  00E3               	movwf	main@analogs^(0+256)
  7098                           
  7099                           ;main.c: 183: analogs[1]=tempCalc(analogs[1]);
  7100  0750  0866               	movf	((main@analogs+1)^(0+256)+2),w
  7101  0751  0020               	movlb	0	; select bank0
  7102  0752  00DE               	movwf	tempCalc@analogValue+1
  7103  0753  0022               	movlb	2	; select bank2
  7104  0754  0865               	movf	(main@analogs^(0+256)+2),w
  7105  0755  0020               	movlb	0	; select bank0
  7106  0756  00DD               	movwf	tempCalc@analogValue
  7107  0757  3180  201F  3184   	fcall	_tempCalc
  7108  075A  0020               	movlb	0	; select bank0
  7109  075B  085E               	movf	?_tempCalc+1,w
  7110  075C  0022               	movlb	2	; select bank2
  7111  075D  00E6               	movwf	((main@analogs+1)^(0+256)+2)
  7112  075E  0020               	movlb	0	; select bank0
  7113  075F  085D               	movf	?_tempCalc,w
  7114  0760  0022               	movlb	2	; select bank2
  7115  0761  00E5               	movwf	(main@analogs^(0+256)+2)
  7116                           
  7117                           ;main.c: 186: if(RB2==1)
  7118  0762  0020               	movlb	0	; select bank0
  7119  0763  1D0D               	btfss	13,2	;volatile
  7120  0764  2FA4               	goto	l3295
  7121                           
  7122                           ;main.c: 187: {
  7123                           ;main.c: 188: TRISC2 = 1;
  7124  0765  1513               	bsf	19,2	;volatile
  7125                           
  7126                           ;main.c: 189: LCD_Clear();
  7127  0766  3195  2557  3184   	fcall	_LCD_Clear
  7128                           
  7129                           ;main.c: 190: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7130  0769  01F4               	clrf	LCD_Set_Cursor@y
  7131  076A  3000               	movlw	0
  7132  076B  3197  277F  3184   	fcall	_LCD_Set_Cursor
  7133  076E  301B               	movlw	low (STR_6| (0+32768))
  7134  076F  00F5               	movwf	LCD_Write_String@a
  7135  0770  3090               	movlw	high (STR_6| (0+32768))
  7136  0771  00F6               	movwf	LCD_Write_String@a+1
  7137  0772  3196  262E  3184   	fcall	_LCD_Write_String
  7138                           
  7139                           ;main.c: 191: { LCD_Set_Cursor(0,1); LCD_Write_String("Enter Key to Set");};
  7140  0775  01F4               	clrf	LCD_Set_Cursor@y
  7141  0776  0AF4               	incf	LCD_Set_Cursor@y,f
  7142  0777  3000               	movlw	0
  7143  0778  3197  277F  3184   	fcall	_LCD_Set_Cursor
  7144  077B  302C               	movlw	low (STR_7| (0+32768))
  7145  077C  00F5               	movwf	LCD_Write_String@a
  7146  077D  3090               	movlw	high (STR_7| (0+32768))
  7147  077E  00F6               	movwf	LCD_Write_String@a+1
  7148  077F  3196  262E  3184   	fcall	_LCD_Write_String
  7149                           
  7150                           ;main.c: 192: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7151  0782  303D               	movlw	61
  7152  0783  0021               	movlb	1	; select bank1
  7153  0784  00E2               	movwf	(??_main^(0+128)+2)
  7154  0785  30E1               	movlw	225
  7155  0786  00E1               	movwf	(??_main^(0+128)+1)
  7156  0787  307A               	movlw	122
  7157  0788  00E0               	movwf	??_main^(0+128)
  7158  0789                     u3807:	
  7159  0789  0BE0               	decfsz	??_main^(0+128),f
  7160  078A  2F89               	goto	u3807
  7161  078B  0BE1               	decfsz	(??_main^(0+128)+1),f
  7162  078C  2F89               	goto	u3807
  7163  078D  0BE2               	decfsz	(??_main^(0+128)+2),f
  7164  078E  2F89               	goto	u3807
  7165  078F  3200               	nop2
  7166                           
  7167                           ;main.c: 193: LCD_Clear();
  7168  0790  3195  2557  3184   	fcall	_LCD_Clear
  7169                           
  7170                           ;main.c: 194: menuChoice();
  7171  0793  3182  22AA  3184   	fcall	_menuChoice
  7172                           
  7173                           ;main.c: 195: _delay((unsigned long)((500)*(32000000/4000.0)));
  7174  0796  3015               	movlw	21
  7175  0797  0021               	movlb	1	; select bank1
  7176  0798  00E2               	movwf	(??_main^(0+128)+2)
  7177  0799  304B               	movlw	75
  7178  079A  00E1               	movwf	(??_main^(0+128)+1)
  7179  079B  30D1               	movlw	209
  7180  079C  00E0               	movwf	??_main^(0+128)
  7181  079D                     u3817:	
  7182  079D  0BE0               	decfsz	??_main^(0+128),f
  7183  079E  2F9D               	goto	u3817
  7184  079F  0BE1               	decfsz	(??_main^(0+128)+1),f
  7185  07A0  2F9D               	goto	u3817
  7186  07A1  0BE2               	decfsz	(??_main^(0+128)+2),f
  7187  07A2  2F9D               	goto	u3817
  7188  07A3  0000               	nop
  7189  07A4                     l3295:	
  7190                           
  7191                           ;main.c: 196: }
  7192                           ;main.c: 432: loop+=1;
  7193  07A4  3001               	movlw	1
  7194  07A5  0021               	movlb	1	; select bank1
  7195  07A6  00E0               	movwf	??_main^(0+128)
  7196  07A7  0860               	movf	??_main^(0+128),w
  7197  07A8  0022               	movlb	2	; select bank2
  7198  07A9  07EF               	addwf	_loop^(0+256),f
  7199  07AA  2D3E               	goto	l3185
  7200  07AB                     __end_of_main:	
  7201                           
  7202                           	psect	text1
  7203  001F                     __ptext1:	
  7204 ;; *************** function _tempCalc *****************
  7205 ;; Defined at:
  7206 ;;		line 4 in file "tempCalc.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  analogValue     2   61[BANK0 ] int 
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;  steinhart       3   69[BANK0 ] float 
  7211 ;;  R               3   63[BANK0 ] float 
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  2   61[BANK0 ] int 
  7214 ;; Registers used:
  7215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7216 ;; Tracked objects:
  7217 ;;		On entry : 0/0
  7218 ;;		On exit  : 0/0
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7221 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7224 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7225 ;;Total ram usage:       11 bytes
  7226 ;; Hardware stack levels used:    1
  7227 ;; Hardware stack levels required when called:    4
  7228 ;; This function calls:
  7229 ;;		___awtoft
  7230 ;;		___ftadd
  7231 ;;		___ftdiv
  7232 ;;		___ftmul
  7233 ;;		___ftsub
  7234 ;;		___fttol
  7235 ;;		_log
  7236 ;; This function is called by:
  7237 ;;		_main
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           
  7242                           ;psect for function _tempCalc
  7243  001F                     _tempCalc:	
  7244                           
  7245                           ;tempCalc.c: 6: float R, steinhart;
  7246                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7247                           
  7248                           ;incstack = 0
  7249                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7250  001F  3000               	movlw	0
  7251  0020  0020               	movlb	0	; select bank0
  7252  0021  00C0               	movwf	___ftadd@f1
  7253  0022  3080               	movlw	128
  7254  0023  00C1               	movwf	___ftadd@f1+1
  7255  0024  30BF               	movlw	191
  7256  0025  00C2               	movwf	___ftadd@f1+2
  7257  0026  085E               	movf	tempCalc@analogValue+1,w
  7258  0027  00F9               	movwf	___awtoft@c+1
  7259  0028  085D               	movf	tempCalc@analogValue,w
  7260  0029  00F8               	movwf	___awtoft@c
  7261  002A  3196  2666  3180   	fcall	___awtoft
  7262  002D  0878               	movf	?___awtoft,w
  7263  002E  0020               	movlb	0	; select bank0
  7264  002F  00B0               	movwf	___ftdiv@f2
  7265  0030  0879               	movf	?___awtoft+1,w
  7266  0031  00B1               	movwf	___ftdiv@f2+1
  7267  0032  087A               	movf	?___awtoft+2,w
  7268  0033  00B2               	movwf	___ftdiv@f2+2
  7269  0034  30C0               	movlw	192
  7270  0035  00B3               	movwf	___ftdiv@f1
  7271  0036  307F               	movlw	127
  7272  0037  00B4               	movwf	___ftdiv@f1+1
  7273  0038  3044               	movlw	68
  7274  0039  00B5               	movwf	___ftdiv@f1+2
  7275  003A  318A  22F8  3180   	fcall	___ftdiv
  7276  003D  0020               	movlb	0	; select bank0
  7277  003E  0830               	movf	?___ftdiv,w
  7278  003F  00C3               	movwf	___ftadd@f2
  7279  0040  0831               	movf	?___ftdiv+1,w
  7280  0041  00C4               	movwf	___ftadd@f2+1
  7281  0042  0832               	movf	?___ftdiv+2,w
  7282  0043  00C5               	movwf	___ftadd@f2+2
  7283  0044  318D  25CE  3180   	fcall	___ftadd
  7284  0047  0020               	movlb	0	; select bank0
  7285  0048  0840               	movf	?___ftadd,w
  7286  0049  00E2               	movwf	_tempCalc$1016
  7287  004A  0841               	movf	?___ftadd+1,w
  7288  004B  00E3               	movwf	_tempCalc$1016+1
  7289  004C  0842               	movf	?___ftadd+2,w
  7290  004D  00E4               	movwf	_tempCalc$1016+2
  7291                           
  7292                           ;tempCalc.c: 6: float R, steinhart;
  7293                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7294  004E  0862               	movf	_tempCalc$1016,w
  7295  004F  00B0               	movwf	___ftdiv@f2
  7296  0050  0863               	movf	_tempCalc$1016+1,w
  7297  0051  00B1               	movwf	___ftdiv@f2+1
  7298  0052  0864               	movf	_tempCalc$1016+2,w
  7299  0053  00B2               	movwf	___ftdiv@f2+2
  7300  0054  3088               	movlw	136
  7301  0055  00B3               	movwf	___ftdiv@f1
  7302  0056  301A               	movlw	26
  7303  0057  00B4               	movwf	___ftdiv@f1+1
  7304  0058  3046               	movlw	70
  7305  0059  00B5               	movwf	___ftdiv@f1+2
  7306  005A  318A  22F8  3180   	fcall	___ftdiv
  7307  005D  0020               	movlb	0	; select bank0
  7308  005E  0830               	movf	?___ftdiv,w
  7309  005F  00DF               	movwf	tempCalc@R
  7310  0060  0831               	movf	?___ftdiv+1,w
  7311  0061  00E0               	movwf	tempCalc@R+1
  7312  0062  0832               	movf	?___ftdiv+2,w
  7313  0063  00E1               	movwf	tempCalc@R+2
  7314                           
  7315                           ;tempCalc.c: 10: steinhart = R /9990;
  7316  0064  3018               	movlw	24
  7317  0065  00B0               	movwf	___ftdiv@f2
  7318  0066  301C               	movlw	28
  7319  0067  00B1               	movwf	___ftdiv@f2+1
  7320  0068  3046               	movlw	70
  7321  0069  00B2               	movwf	___ftdiv@f2+2
  7322  006A  085F               	movf	tempCalc@R,w
  7323  006B  00B3               	movwf	___ftdiv@f1
  7324  006C  0860               	movf	tempCalc@R+1,w
  7325  006D  00B4               	movwf	___ftdiv@f1+1
  7326  006E  0861               	movf	tempCalc@R+2,w
  7327  006F  00B5               	movwf	___ftdiv@f1+2
  7328  0070  318A  22F8  3180   	fcall	___ftdiv
  7329  0073  0020               	movlb	0	; select bank0
  7330  0074  0830               	movf	?___ftdiv,w
  7331  0075  00E5               	movwf	tempCalc@steinhart
  7332  0076  0831               	movf	?___ftdiv+1,w
  7333  0077  00E6               	movwf	tempCalc@steinhart+1
  7334  0078  0832               	movf	?___ftdiv+2,w
  7335  0079  00E7               	movwf	tempCalc@steinhart+2
  7336                           
  7337                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7338  007A  0865               	movf	tempCalc@steinhart,w
  7339  007B  00D7               	movwf	log@x
  7340  007C  0866               	movf	tempCalc@steinhart+1,w
  7341  007D  00D8               	movwf	log@x+1
  7342  007E  0867               	movf	tempCalc@steinhart+2,w
  7343  007F  00D9               	movwf	log@x+2
  7344  0080  318B  23A1  3180   	fcall	_log
  7345  0083  0020               	movlb	0	; select bank0
  7346  0084  0857               	movf	?_log,w
  7347  0085  00E5               	movwf	tempCalc@steinhart
  7348  0086  0858               	movf	?_log+1,w
  7349  0087  00E6               	movwf	tempCalc@steinhart+1
  7350  0088  0859               	movf	?_log+2,w
  7351  0089  00E7               	movwf	tempCalc@steinhart+2
  7352                           
  7353                           ;tempCalc.c: 12: steinhart /= 4030;
  7354  008A  30E0               	movlw	224
  7355  008B  00B0               	movwf	___ftdiv@f2
  7356  008C  307B               	movlw	123
  7357  008D  00B1               	movwf	___ftdiv@f2+1
  7358  008E  3045               	movlw	69
  7359  008F  00B2               	movwf	___ftdiv@f2+2
  7360  0090  0865               	movf	tempCalc@steinhart,w
  7361  0091  00B3               	movwf	___ftdiv@f1
  7362  0092  0866               	movf	tempCalc@steinhart+1,w
  7363  0093  00B4               	movwf	___ftdiv@f1+1
  7364  0094  0867               	movf	tempCalc@steinhart+2,w
  7365  0095  00B5               	movwf	___ftdiv@f1+2
  7366  0096  318A  22F8  3180   	fcall	___ftdiv
  7367  0099  0020               	movlb	0	; select bank0
  7368  009A  0830               	movf	?___ftdiv,w
  7369  009B  00E5               	movwf	tempCalc@steinhart
  7370  009C  0831               	movf	?___ftdiv+1,w
  7371  009D  00E6               	movwf	tempCalc@steinhart+1
  7372  009E  0832               	movf	?___ftdiv+2,w
  7373  009F  00E7               	movwf	tempCalc@steinhart+2
  7374                           
  7375                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  7376  00A0  30CF               	movlw	207
  7377  00A1  00C0               	movwf	___ftadd@f1
  7378  00A2  305B               	movlw	91
  7379  00A3  00C1               	movwf	___ftadd@f1+1
  7380  00A4  303B               	movlw	59
  7381  00A5  00C2               	movwf	___ftadd@f1+2
  7382  00A6  0865               	movf	tempCalc@steinhart,w
  7383  00A7  00C3               	movwf	___ftadd@f2
  7384  00A8  0866               	movf	tempCalc@steinhart+1,w
  7385  00A9  00C4               	movwf	___ftadd@f2+1
  7386  00AA  0867               	movf	tempCalc@steinhart+2,w
  7387  00AB  00C5               	movwf	___ftadd@f2+2
  7388  00AC  318D  25CE  3180   	fcall	___ftadd
  7389  00AF  0020               	movlb	0	; select bank0
  7390  00B0  0840               	movf	?___ftadd,w
  7391  00B1  00E5               	movwf	tempCalc@steinhart
  7392  00B2  0841               	movf	?___ftadd+1,w
  7393  00B3  00E6               	movwf	tempCalc@steinhart+1
  7394  00B4  0842               	movf	?___ftadd+2,w
  7395  00B5  00E7               	movwf	tempCalc@steinhart+2
  7396                           
  7397                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  7398  00B6  0865               	movf	tempCalc@steinhart,w
  7399  00B7  00B0               	movwf	___ftdiv@f2
  7400  00B8  0866               	movf	tempCalc@steinhart+1,w
  7401  00B9  00B1               	movwf	___ftdiv@f2+1
  7402  00BA  0867               	movf	tempCalc@steinhart+2,w
  7403  00BB  00B2               	movwf	___ftdiv@f2+2
  7404  00BC  3000               	movlw	0
  7405  00BD  00B3               	movwf	___ftdiv@f1
  7406  00BE  3080               	movlw	128
  7407  00BF  00B4               	movwf	___ftdiv@f1+1
  7408  00C0  303F               	movlw	63
  7409  00C1  00B5               	movwf	___ftdiv@f1+2
  7410  00C2  318A  22F8  3180   	fcall	___ftdiv
  7411  00C5  0020               	movlb	0	; select bank0
  7412  00C6  0830               	movf	?___ftdiv,w
  7413  00C7  00E5               	movwf	tempCalc@steinhart
  7414  00C8  0831               	movf	?___ftdiv+1,w
  7415  00C9  00E6               	movwf	tempCalc@steinhart+1
  7416  00CA  0832               	movf	?___ftdiv+2,w
  7417  00CB  00E7               	movwf	tempCalc@steinhart+2
  7418                           
  7419                           ;tempCalc.c: 17: steinhart -= 273.15;
  7420  00CC  3093               	movlw	147
  7421  00CD  00CD               	movwf	___ftsub@f2
  7422  00CE  3088               	movlw	136
  7423  00CF  00CE               	movwf	___ftsub@f2+1
  7424  00D0  3043               	movlw	67
  7425  00D1  00CF               	movwf	___ftsub@f2+2
  7426  00D2  0865               	movf	tempCalc@steinhart,w
  7427  00D3  00D0               	movwf	___ftsub@f1
  7428  00D4  0866               	movf	tempCalc@steinhart+1,w
  7429  00D5  00D1               	movwf	___ftsub@f1+1
  7430  00D6  0867               	movf	tempCalc@steinhart+2,w
  7431  00D7  00D2               	movwf	___ftsub@f1+2
  7432  00D8  3196  2648  3180   	fcall	___ftsub
  7433  00DB  0020               	movlb	0	; select bank0
  7434  00DC  084D               	movf	?___ftsub,w
  7435  00DD  00E5               	movwf	tempCalc@steinhart
  7436  00DE  084E               	movf	?___ftsub+1,w
  7437  00DF  00E6               	movwf	tempCalc@steinhart+1
  7438  00E0  084F               	movf	?___ftsub+2,w
  7439  00E1  00E7               	movwf	tempCalc@steinhart+2
  7440                           
  7441                           ;tempCalc.c: 19: steinhart*=10;
  7442  00E2  3000               	movlw	0
  7443  00E3  00A0               	movwf	___ftmul@f1
  7444  00E4  3020               	movlw	32
  7445  00E5  00A1               	movwf	___ftmul@f1+1
  7446  00E6  3041               	movlw	65
  7447  00E7  00A2               	movwf	___ftmul@f1+2
  7448  00E8  0865               	movf	tempCalc@steinhart,w
  7449  00E9  00A3               	movwf	___ftmul@f2
  7450  00EA  0866               	movf	tempCalc@steinhart+1,w
  7451  00EB  00A4               	movwf	___ftmul@f2+1
  7452  00EC  0867               	movf	tempCalc@steinhart+2,w
  7453  00ED  00A5               	movwf	___ftmul@f2+2
  7454  00EE  318C  2451  3180   	fcall	___ftmul
  7455  00F1  0020               	movlb	0	; select bank0
  7456  00F2  0820               	movf	?___ftmul,w
  7457  00F3  00E5               	movwf	tempCalc@steinhart
  7458  00F4  0821               	movf	?___ftmul+1,w
  7459  00F5  00E6               	movwf	tempCalc@steinhart+1
  7460  00F6  0822               	movf	?___ftmul+2,w
  7461  00F7  00E7               	movwf	tempCalc@steinhart+2
  7462                           
  7463                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  7464  00F8  3000               	movlw	0
  7465  00F9  00C0               	movwf	___ftadd@f1
  7466  00FA  30A0               	movlw	160
  7467  00FB  00C1               	movwf	___ftadd@f1+1
  7468  00FC  3043               	movlw	67
  7469  00FD  00C2               	movwf	___ftadd@f1+2
  7470  00FE  3000               	movlw	0
  7471  00FF  00B0               	movwf	___ftdiv@f2
  7472  0100  30A0               	movlw	160
  7473  0101  00B1               	movwf	___ftdiv@f2+1
  7474  0102  3040               	movlw	64
  7475  0103  00B2               	movwf	___ftdiv@f2+2
  7476  0104  3000               	movlw	0
  7477  0105  00A0               	movwf	___ftmul@f1
  7478  0106  3010               	movlw	16
  7479  0107  00A1               	movwf	___ftmul@f1+1
  7480  0108  3041               	movlw	65
  7481  0109  00A2               	movwf	___ftmul@f1+2
  7482  010A  0865               	movf	tempCalc@steinhart,w
  7483  010B  00A3               	movwf	___ftmul@f2
  7484  010C  0866               	movf	tempCalc@steinhart+1,w
  7485  010D  00A4               	movwf	___ftmul@f2+1
  7486  010E  0867               	movf	tempCalc@steinhart+2,w
  7487  010F  00A5               	movwf	___ftmul@f2+2
  7488  0110  318C  2451  3180   	fcall	___ftmul
  7489  0113  0020               	movlb	0	; select bank0
  7490  0114  0820               	movf	?___ftmul,w
  7491  0115  00B3               	movwf	___ftdiv@f1
  7492  0116  0821               	movf	?___ftmul+1,w
  7493  0117  00B4               	movwf	___ftdiv@f1+1
  7494  0118  0822               	movf	?___ftmul+2,w
  7495  0119  00B5               	movwf	___ftdiv@f1+2
  7496  011A  318A  22F8  3180   	fcall	___ftdiv
  7497  011D  0020               	movlb	0	; select bank0
  7498  011E  0830               	movf	?___ftdiv,w
  7499  011F  00C3               	movwf	___ftadd@f2
  7500  0120  0831               	movf	?___ftdiv+1,w
  7501  0121  00C4               	movwf	___ftadd@f2+1
  7502  0122  0832               	movf	?___ftdiv+2,w
  7503  0123  00C5               	movwf	___ftadd@f2+2
  7504  0124  318D  25CE  3180   	fcall	___ftadd
  7505  0127  0020               	movlb	0	; select bank0
  7506  0128  0840               	movf	?___ftadd,w
  7507  0129  00E5               	movwf	tempCalc@steinhart
  7508  012A  0841               	movf	?___ftadd+1,w
  7509  012B  00E6               	movwf	tempCalc@steinhart+1
  7510  012C  0842               	movf	?___ftadd+2,w
  7511  012D  00E7               	movwf	tempCalc@steinhart+2
  7512                           
  7513                           ;tempCalc.c: 23: return (int)steinhart;
  7514  012E  0865               	movf	tempCalc@steinhart,w
  7515  012F  00F0               	movwf	___fttol@f1
  7516  0130  0866               	movf	tempCalc@steinhart+1,w
  7517  0131  00F1               	movwf	___fttol@f1+1
  7518  0132  0867               	movf	tempCalc@steinhart+2,w
  7519  0133  00F2               	movwf	___fttol@f1+2
  7520  0134  3189  21EB         	fcall	___fttol
  7521  0136  0871               	movf	?___fttol+1,w
  7522  0137  0020               	movlb	0	; select bank0
  7523  0138  00DE               	movwf	?_tempCalc+1
  7524  0139  0870               	movf	?___fttol,w
  7525  013A  00DD               	movwf	?_tempCalc
  7526  013B  0008               	return
  7527  013C                     __end_of_tempCalc:	
  7528                           
  7529                           	psect	text2
  7530  0BA1                     __ptext2:	
  7531 ;; *************** function _log *****************
  7532 ;; Defined at:
  7533 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  x               3   55[BANK0 ] int 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  exponent        2   59[BANK0 ] int 
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  3   55[BANK0 ] int 
  7540 ;; Registers used:
  7541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7547 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7549 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7551 ;;Total ram usage:        6 bytes
  7552 ;; Hardware stack levels used:    1
  7553 ;; Hardware stack levels required when called:    3
  7554 ;; This function calls:
  7555 ;;		___awtoft
  7556 ;;		___ftadd
  7557 ;;		___ftge
  7558 ;;		___ftmul
  7559 ;;		_eval_poly
  7560 ;;		_frexp
  7561 ;; This function is called by:
  7562 ;;		_tempCalc
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           
  7567                           ;psect for function _log
  7568  0BA1                     _log:	
  7569                           
  7570                           ;incstack = 0
  7571                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7572  0BA1  0020               	movlb	0	; select bank0
  7573  0BA2  0857               	movf	log@x,w
  7574  0BA3  00F0               	movwf	___ftge@ff1
  7575  0BA4  0858               	movf	log@x+1,w
  7576  0BA5  00F1               	movwf	___ftge@ff1+1
  7577  0BA6  0859               	movf	log@x+2,w
  7578  0BA7  00F2               	movwf	___ftge@ff1+2
  7579  0BA8  3000               	movlw	0
  7580  0BA9  00F3               	movwf	___ftge@ff2
  7581  0BAA  3000               	movlw	0
  7582  0BAB  00F4               	movwf	___ftge@ff2+1
  7583  0BAC  3000               	movlw	0
  7584  0BAD  00F5               	movwf	___ftge@ff2+2
  7585  0BAE  3197  2709  318B   	fcall	___ftge
  7586  0BB1  1803               	btfsc	3,0
  7587  0BB2  2BC0               	goto	l2723
  7588  0BB3  3021               	movlw	33
  7589  0BB4  0021               	movlb	1	; select bank1
  7590  0BB5  00B7               	movwf	_errno^(0+128)
  7591  0BB6  3000               	movlw	0
  7592  0BB7  00B8               	movwf	(_errno^(0+128)+1)
  7593  0BB8  3000               	movlw	0
  7594  0BB9  0020               	movlb	0	; select bank0
  7595  0BBA  00D7               	movwf	?_log
  7596  0BBB  3000               	movlw	0
  7597  0BBC  00D8               	movwf	?_log+1
  7598  0BBD  3000               	movlw	0
  7599  0BBE  00D9               	movwf	?_log+2
  7600  0BBF  0008               	return
  7601  0BC0                     l2723:	
  7602  0BC0  0020               	movlb	0	; select bank0
  7603  0BC1  0859               	movf	log@x+2,w
  7604  0BC2  0458               	iorwf	log@x+1,w
  7605  0BC3  0457               	iorwf	log@x,w
  7606  0BC4  1D03               	skipz
  7607  0BC5  2BD3               	goto	l2729
  7608  0BC6  3022               	movlw	34
  7609  0BC7  0021               	movlb	1	; select bank1
  7610  0BC8  00B7               	movwf	_errno^(0+128)
  7611  0BC9  3000               	movlw	0
  7612  0BCA  00B8               	movwf	(_errno^(0+128)+1)
  7613  0BCB  3000               	movlw	0
  7614  0BCC  0020               	movlb	0	; select bank0
  7615  0BCD  00D7               	movwf	?_log
  7616  0BCE  3000               	movlw	0
  7617  0BCF  00D8               	movwf	?_log+1
  7618  0BD0  3000               	movlw	0
  7619  0BD1  00D9               	movwf	?_log+2
  7620  0BD2  0008               	return
  7621  0BD3                     l2729:	
  7622  0BD3  3000               	movlw	0
  7623  0BD4  00C0               	movwf	___ftadd@f1
  7624  0BD5  3080               	movlw	128
  7625  0BD6  00C1               	movwf	___ftadd@f1+1
  7626  0BD7  30BF               	movlw	191
  7627  0BD8  00C2               	movwf	___ftadd@f1+2
  7628  0BD9  3000               	movlw	0
  7629  0BDA  00A0               	movwf	___ftmul@f1
  7630  0BDB  3000               	movlw	0
  7631  0BDC  00A1               	movwf	___ftmul@f1+1
  7632  0BDD  3040               	movlw	64
  7633  0BDE  00A2               	movwf	___ftmul@f1+2
  7634  0BDF  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7635  0BE0  00DA               	movwf	??_log
  7636  0BE1  085A               	movf	??_log,w
  7637  0BE2  00F3               	movwf	frexp@eptr
  7638  0BE3  0857               	movf	log@x,w
  7639  0BE4  00F0               	movwf	frexp@value
  7640  0BE5  0858               	movf	log@x+1,w
  7641  0BE6  00F1               	movwf	frexp@value+1
  7642  0BE7  0859               	movf	log@x+2,w
  7643  0BE8  00F2               	movwf	frexp@value+2
  7644  0BE9  3197  2744  318B   	fcall	_frexp
  7645  0BEC  0870               	movf	?_frexp,w
  7646  0BED  0020               	movlb	0	; select bank0
  7647  0BEE  00A3               	movwf	___ftmul@f2
  7648  0BEF  0871               	movf	?_frexp+1,w
  7649  0BF0  00A4               	movwf	___ftmul@f2+1
  7650  0BF1  0872               	movf	?_frexp+2,w
  7651  0BF2  00A5               	movwf	___ftmul@f2+2
  7652  0BF3  318C  2451  318B   	fcall	___ftmul
  7653  0BF6  0020               	movlb	0	; select bank0
  7654  0BF7  0820               	movf	?___ftmul,w
  7655  0BF8  00C3               	movwf	___ftadd@f2
  7656  0BF9  0821               	movf	?___ftmul+1,w
  7657  0BFA  00C4               	movwf	___ftadd@f2+1
  7658  0BFB  0822               	movf	?___ftmul+2,w
  7659  0BFC  00C5               	movwf	___ftadd@f2+2
  7660  0BFD  318D  25CE  318B   	fcall	___ftadd
  7661  0C00  0020               	movlb	0	; select bank0
  7662  0C01  0840               	movf	?___ftadd,w
  7663  0C02  00D7               	movwf	log@x
  7664  0C03  0841               	movf	?___ftadd+1,w
  7665  0C04  00D8               	movwf	log@x+1
  7666  0C05  0842               	movf	?___ftadd+2,w
  7667  0C06  00D9               	movwf	log@x+2
  7668  0C07  30FF               	movlw	255
  7669  0C08  07DB               	addwf	log@exponent,f
  7670  0C09  30FF               	movlw	255
  7671  0C0A  3DDC               	addwfc	log@exponent+1,f
  7672  0C0B  0857               	movf	log@x,w
  7673  0C0C  00CD               	movwf	eval_poly@x
  7674  0C0D  0858               	movf	log@x+1,w
  7675  0C0E  00CE               	movwf	eval_poly@x+1
  7676  0C0F  0859               	movf	log@x+2,w
  7677  0C10  00CF               	movwf	eval_poly@x+2
  7678  0C11  3000               	movlw	low (log@coeff| (0+32768))
  7679  0C12  00D0               	movwf	eval_poly@d
  7680  0C13  3090               	movlw	high (log@coeff| (0+32768))
  7681  0C14  00D1               	movwf	eval_poly@d+1
  7682  0C15  3008               	movlw	8
  7683  0C16  00D2               	movwf	eval_poly@n
  7684  0C17  3000               	movlw	0
  7685  0C18  00D3               	movwf	eval_poly@n+1
  7686  0C19  3188  20A5  318B   	fcall	_eval_poly
  7687  0C1C  0020               	movlb	0	; select bank0
  7688  0C1D  084D               	movf	?_eval_poly,w
  7689  0C1E  00D7               	movwf	log@x
  7690  0C1F  084E               	movf	?_eval_poly+1,w
  7691  0C20  00D8               	movwf	log@x+1
  7692  0C21  084F               	movf	?_eval_poly+2,w
  7693  0C22  00D9               	movwf	log@x+2
  7694  0C23  0857               	movf	log@x,w
  7695  0C24  00C0               	movwf	___ftadd@f1
  7696  0C25  0858               	movf	log@x+1,w
  7697  0C26  00C1               	movwf	___ftadd@f1+1
  7698  0C27  0859               	movf	log@x+2,w
  7699  0C28  00C2               	movwf	___ftadd@f1+2
  7700  0C29  3072               	movlw	114
  7701  0C2A  00A0               	movwf	___ftmul@f1
  7702  0C2B  3031               	movlw	49
  7703  0C2C  00A1               	movwf	___ftmul@f1+1
  7704  0C2D  303F               	movlw	63
  7705  0C2E  00A2               	movwf	___ftmul@f1+2
  7706  0C2F  085C               	movf	log@exponent+1,w
  7707  0C30  00F9               	movwf	___awtoft@c+1
  7708  0C31  085B               	movf	log@exponent,w
  7709  0C32  00F8               	movwf	___awtoft@c
  7710  0C33  3196  2666  318B   	fcall	___awtoft
  7711  0C36  0878               	movf	?___awtoft,w
  7712  0C37  0020               	movlb	0	; select bank0
  7713  0C38  00A3               	movwf	___ftmul@f2
  7714  0C39  0879               	movf	?___awtoft+1,w
  7715  0C3A  00A4               	movwf	___ftmul@f2+1
  7716  0C3B  087A               	movf	?___awtoft+2,w
  7717  0C3C  00A5               	movwf	___ftmul@f2+2
  7718  0C3D  318C  2451  318B   	fcall	___ftmul
  7719  0C40  0020               	movlb	0	; select bank0
  7720  0C41  0820               	movf	?___ftmul,w
  7721  0C42  00C3               	movwf	___ftadd@f2
  7722  0C43  0821               	movf	?___ftmul+1,w
  7723  0C44  00C4               	movwf	___ftadd@f2+1
  7724  0C45  0822               	movf	?___ftmul+2,w
  7725  0C46  00C5               	movwf	___ftadd@f2+2
  7726  0C47  318D  25CE         	fcall	___ftadd
  7727  0C49  0020               	movlb	0	; select bank0
  7728  0C4A  0840               	movf	?___ftadd,w
  7729  0C4B  00D7               	movwf	?_log
  7730  0C4C  0841               	movf	?___ftadd+1,w
  7731  0C4D  00D8               	movwf	?_log+1
  7732  0C4E  0842               	movf	?___ftadd+2,w
  7733  0C4F  00D9               	movwf	?_log+2
  7734  0C50  0008               	return
  7735  0C51                     __end_of_log:	
  7736                           
  7737                           	psect	text3
  7738  1744                     __ptext3:	
  7739 ;; *************** function _frexp *****************
  7740 ;; Defined at:
  7741 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  value           3    0[COMMON] int 
  7744 ;;  eptr            1    3[COMMON] PTR int 
  7745 ;;		 -> log@exponent(2), 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;		None
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  3    0[COMMON] PTR int 
  7750 ;; Registers used:
  7751 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;Total ram usage:        6 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_log
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           
  7771                           ;psect for function _frexp
  7772  1744                     _frexp:	
  7773                           
  7774                           ;incstack = 0
  7775                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7776  1744  0872               	movf	frexp@value+2,w
  7777  1745  0471               	iorwf	frexp@value+1,w
  7778  1746  0470               	iorwf	frexp@value,w
  7779  1747  1D03               	skipz
  7780  1748  2F56               	goto	l2473
  7781  1749  0873               	movf	frexp@eptr,w
  7782  174A  0086               	movwf	6
  7783  174B  0187               	clrf	7
  7784  174C  3000               	movlw	0
  7785  174D  3FC0               	movwi [0]fsr1
  7786  174E  3FC1               	movwi [1]fsr1
  7787  174F  3000               	movlw	0
  7788  1750  00F0               	movwf	?_frexp
  7789  1751  3000               	movlw	0
  7790  1752  00F1               	movwf	?_frexp+1
  7791  1753  3000               	movlw	0
  7792  1754  00F2               	movwf	?_frexp+2
  7793  1755  0008               	return
  7794  1756                     l2473:	
  7795  1756  0872               	movf	frexp@value+2,w
  7796  1757  397F               	andlw	127
  7797  1758  00F4               	movwf	??_frexp
  7798  1759  01F5               	clrf	??_frexp+1
  7799  175A  35F4               	lslf	??_frexp,f
  7800  175B  0DF5               	rlf	??_frexp+1,f
  7801  175C  0873               	movf	frexp@eptr,w
  7802  175D  0086               	movwf	6
  7803  175E  0187               	clrf	7
  7804  175F  0874               	movf	??_frexp,w
  7805  1760  3FC0               	movwi [0]fsr1
  7806  1761  0875               	movf	??_frexp+1,w
  7807  1762  3FC1               	movwi [1]fsr1
  7808  1763  0D71               	rlf	frexp@value+1,w
  7809  1764  0D71               	rlf	frexp@value+1,w
  7810  1765  3901               	andlw	1
  7811  1766  00F4               	movwf	??_frexp
  7812  1767  01F5               	clrf	??_frexp+1
  7813  1768  0873               	movf	frexp@eptr,w
  7814  1769  0086               	movwf	6
  7815  176A  0187               	clrf	7
  7816  176B  0874               	movf	??_frexp,w
  7817  176C  0481               	iorwf	1,f
  7818  176D  3141               	addfsr 1,1
  7819  176E  0875               	movf	??_frexp+1,w
  7820  176F  0481               	iorwf	1,f
  7821  1770  0873               	movf	frexp@eptr,w
  7822  1771  0086               	movwf	6
  7823  1772  0187               	clrf	7
  7824  1773  3082               	movlw	130
  7825  1774  0781               	addwf	1,f
  7826  1775  3141               	addfsr 1,1
  7827  1776  30FF               	movlw	255
  7828  1777  3D81               	addwfc	1,f
  7829  1778  317F               	addfsr 1,-1
  7830  1779  0872               	movf	frexp@value+2,w
  7831  177A  3980               	andlw	-128
  7832  177B  383F               	iorlw	63
  7833  177C  00F2               	movwf	frexp@value+2
  7834  177D  13F1               	bcf	frexp@value+1,7
  7835  177E  0008               	return
  7836  177F                     __end_of_frexp:	
  7837                           
  7838                           	psect	text4
  7839  08A5                     __ptext4:	
  7840 ;; *************** function _eval_poly *****************
  7841 ;; Defined at:
  7842 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  x               3   45[BANK0 ] PTR int 
  7845 ;;  d               2   48[BANK0 ] PTR const 
  7846 ;;		 -> log@coeff(27), 
  7847 ;;  n               2   50[BANK0 ] int 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;  res             3   52[BANK0 ] int 
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  3   45[BANK0 ] int 
  7852 ;; Registers used:
  7853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7859 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7860 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;Total ram usage:       10 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    2
  7866 ;; This function calls:
  7867 ;;		___ftadd
  7868 ;;		___ftmul
  7869 ;;		___wmul
  7870 ;; This function is called by:
  7871 ;;		_log
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           
  7876                           ;psect for function _eval_poly
  7877  08A5                     _eval_poly:	
  7878                           
  7879                           ;incstack = 0
  7880                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7881  08A5  0020               	movlb	0	; select bank0
  7882  08A6  0853               	movf	eval_poly@n+1,w
  7883  08A7  00F1               	movwf	___wmul@multiplier+1
  7884  08A8  0852               	movf	eval_poly@n,w
  7885  08A9  00F0               	movwf	___wmul@multiplier
  7886  08AA  3003               	movlw	3
  7887  08AB  00F2               	movwf	___wmul@multiplicand
  7888  08AC  3000               	movlw	0
  7889  08AD  00F3               	movwf	___wmul@multiplicand+1
  7890  08AE  3180  2004  3188   	fcall	___wmul
  7891  08B1  0020               	movlb	0	; select bank0
  7892  08B2  0850               	movf	eval_poly@d,w
  7893  08B3  0770               	addwf	?___wmul,w
  7894  08B4  0084               	movwf	4
  7895  08B5  0851               	movf	eval_poly@d+1,w
  7896  08B6  3D71               	addwfc	?___wmul+1,w
  7897  08B7  0085               	movwf	5
  7898  08B8  3F00               	moviw [0]fsr0
  7899  08B9  00D4               	movwf	eval_poly@res
  7900  08BA  3F01               	moviw [1]fsr0
  7901  08BB  00D5               	movwf	eval_poly@res+1
  7902  08BC  3F02               	moviw [2]fsr0
  7903  08BD                     L1:	
  7904  08BD  00D6               	movwf	eval_poly@res+2
  7905  08BE  0852               	movf	eval_poly@n,w
  7906  08BF  0453               	iorwf	eval_poly@n+1,w
  7907  08C0  1903               	btfsc	3,2
  7908  08C1  28FE               	goto	l2491
  7909  08C2  30FF               	movlw	255
  7910  08C3  07D2               	addwf	eval_poly@n,f
  7911  08C4  30FF               	movlw	255
  7912  08C5  3DD3               	addwfc	eval_poly@n+1,f
  7913  08C6  0853               	movf	eval_poly@n+1,w
  7914  08C7  00F1               	movwf	___wmul@multiplier+1
  7915  08C8  0852               	movf	eval_poly@n,w
  7916  08C9  00F0               	movwf	___wmul@multiplier
  7917  08CA  3003               	movlw	3
  7918  08CB  00F2               	movwf	___wmul@multiplicand
  7919  08CC  3000               	movlw	0
  7920  08CD  00F3               	movwf	___wmul@multiplicand+1
  7921  08CE  3180  2004  3188   	fcall	___wmul
  7922  08D1  0020               	movlb	0	; select bank0
  7923  08D2  0850               	movf	eval_poly@d,w
  7924  08D3  0770               	addwf	?___wmul,w
  7925  08D4  0084               	movwf	4
  7926  08D5  0851               	movf	eval_poly@d+1,w
  7927  08D6  3D71               	addwfc	?___wmul+1,w
  7928  08D7  0085               	movwf	5
  7929  08D8  3F00               	moviw [0]fsr0
  7930  08D9  00C0               	movwf	___ftadd@f1
  7931  08DA  3F01               	moviw [1]fsr0
  7932  08DB  00C1               	movwf	___ftadd@f1+1
  7933  08DC  3F02               	moviw [2]fsr0
  7934  08DD  00C2               	movwf	___ftadd@f1+2
  7935  08DE  0854               	movf	eval_poly@res,w
  7936  08DF  00A0               	movwf	___ftmul@f1
  7937  08E0  0855               	movf	eval_poly@res+1,w
  7938  08E1  00A1               	movwf	___ftmul@f1+1
  7939  08E2  0856               	movf	eval_poly@res+2,w
  7940  08E3  00A2               	movwf	___ftmul@f1+2
  7941  08E4  084D               	movf	eval_poly@x,w
  7942  08E5  00A3               	movwf	___ftmul@f2
  7943  08E6  084E               	movf	eval_poly@x+1,w
  7944  08E7  00A4               	movwf	___ftmul@f2+1
  7945  08E8  084F               	movf	eval_poly@x+2,w
  7946  08E9  00A5               	movwf	___ftmul@f2+2
  7947  08EA  318C  2451  3188   	fcall	___ftmul
  7948  08ED  0020               	movlb	0	; select bank0
  7949  08EE  0820               	movf	?___ftmul,w
  7950  08EF  00C3               	movwf	___ftadd@f2
  7951  08F0  0821               	movf	?___ftmul+1,w
  7952  08F1  00C4               	movwf	___ftadd@f2+1
  7953  08F2  0822               	movf	?___ftmul+2,w
  7954  08F3  00C5               	movwf	___ftadd@f2+2
  7955  08F4  318D  25CE  3188   	fcall	___ftadd
  7956  08F7  0020               	movlb	0	; select bank0
  7957  08F8  0840               	movf	?___ftadd,w
  7958  08F9  00D4               	movwf	eval_poly@res
  7959  08FA  0841               	movf	?___ftadd+1,w
  7960  08FB  00D5               	movwf	eval_poly@res+1
  7961  08FC  0842               	movf	?___ftadd+2,w
  7962  08FD  28BD               	goto	L1
  7963  08FE                     l2491:	
  7964  08FE  0854               	movf	eval_poly@res,w
  7965  08FF  00CD               	movwf	?_eval_poly
  7966  0900  0855               	movf	eval_poly@res+1,w
  7967  0901  00CE               	movwf	?_eval_poly+1
  7968  0902  0856               	movf	eval_poly@res+2,w
  7969  0903  00CF               	movwf	?_eval_poly+2
  7970  0904  0008               	return
  7971  0905                     __end_of_eval_poly:	
  7972                           
  7973                           	psect	text5
  7974  0C51                     __ptext5:	
  7975 ;; *************** function ___ftmul *****************
  7976 ;; Defined at:
  7977 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;  f1              3    0[BANK0 ] float 
  7980 ;;  f2              3    3[BANK0 ] float 
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7983 ;;  sign            1   15[BANK0 ] unsigned char 
  7984 ;;  cntr            1   14[BANK0 ] unsigned char 
  7985 ;;  exp             1   10[BANK0 ] unsigned char 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  3    0[BANK0 ] float 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, status,0, pclath, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7995 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7996 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;Total ram usage:       16 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:    1
  8002 ;; This function calls:
  8003 ;;		___ftpack
  8004 ;; This function is called by:
  8005 ;;		_tempCalc
  8006 ;;		_log
  8007 ;;		_eval_poly
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           
  8012                           ;psect for function ___ftmul
  8013  0C51                     ___ftmul:	
  8014                           
  8015                           ;incstack = 0
  8016                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8017  0C51  0020               	movlb	0	; select bank0
  8018  0C52  0820               	movf	___ftmul@f1,w
  8019  0C53  00A6               	movwf	??___ftmul
  8020  0C54  0821               	movf	___ftmul@f1+1,w
  8021  0C55  00A7               	movwf	??___ftmul+1
  8022  0C56  0822               	movf	___ftmul@f1+2,w
  8023  0C57  00A8               	movwf	??___ftmul+2
  8024  0C58  1003               	clrc
  8025  0C59  0D27               	rlf	??___ftmul+1,w
  8026  0C5A  0D28               	rlf	??___ftmul+2,w
  8027  0C5B  00A9               	movwf	??___ftmul+3
  8028  0C5C  0829               	movf	??___ftmul+3,w
  8029  0C5D  00AA               	movwf	___ftmul@exp
  8030  0C5E  082A               	movf	___ftmul@exp,w
  8031  0C5F  1D03               	btfss	3,2
  8032  0C60  2C68               	goto	l2277
  8033  0C61  3000               	movlw	0
  8034  0C62  00A0               	movwf	?___ftmul
  8035  0C63  3000               	movlw	0
  8036  0C64  00A1               	movwf	?___ftmul+1
  8037  0C65  3000               	movlw	0
  8038  0C66  00A2               	movwf	?___ftmul+2
  8039  0C67  0008               	return
  8040  0C68                     l2277:	
  8041  0C68  0823               	movf	___ftmul@f2,w
  8042  0C69  00A6               	movwf	??___ftmul
  8043  0C6A  0824               	movf	___ftmul@f2+1,w
  8044  0C6B  00A7               	movwf	??___ftmul+1
  8045  0C6C  0825               	movf	___ftmul@f2+2,w
  8046  0C6D  00A8               	movwf	??___ftmul+2
  8047  0C6E  1003               	clrc
  8048  0C6F  0D27               	rlf	??___ftmul+1,w
  8049  0C70  0D28               	rlf	??___ftmul+2,w
  8050  0C71  00A9               	movwf	??___ftmul+3
  8051  0C72  0829               	movf	??___ftmul+3,w
  8052  0C73  00AF               	movwf	___ftmul@sign
  8053  0C74  082F               	movf	___ftmul@sign,w
  8054  0C75  1D03               	btfss	3,2
  8055  0C76  2C7E               	goto	l2283
  8056  0C77  3000               	movlw	0
  8057  0C78  00A0               	movwf	?___ftmul
  8058  0C79  3000               	movlw	0
  8059  0C7A  00A1               	movwf	?___ftmul+1
  8060  0C7B  3000               	movlw	0
  8061  0C7C  00A2               	movwf	?___ftmul+2
  8062  0C7D  0008               	return
  8063  0C7E                     l2283:	
  8064  0C7E  082F               	movf	___ftmul@sign,w
  8065  0C7F  3E7B               	addlw	123
  8066  0C80  00A6               	movwf	??___ftmul
  8067  0C81  0826               	movf	??___ftmul,w
  8068  0C82  07AA               	addwf	___ftmul@exp,f
  8069  0C83  0820               	movf	___ftmul@f1,w
  8070  0C84  00A6               	movwf	??___ftmul
  8071  0C85  0821               	movf	___ftmul@f1+1,w
  8072  0C86  00A7               	movwf	??___ftmul+1
  8073  0C87  0822               	movf	___ftmul@f1+2,w
  8074  0C88  00A8               	movwf	??___ftmul+2
  8075  0C89  3010               	movlw	16
  8076  0C8A                     u2355:	
  8077  0C8A  36A8               	lsrf	??___ftmul+2,f
  8078  0C8B  0CA7               	rrf	??___ftmul+1,f
  8079  0C8C  0CA6               	rrf	??___ftmul,f
  8080  0C8D  0B89               	decfsz	9,f
  8081  0C8E  2C8A               	goto	u2355
  8082  0C8F  0826               	movf	??___ftmul,w
  8083  0C90  00A9               	movwf	??___ftmul+3
  8084  0C91  0829               	movf	??___ftmul+3,w
  8085  0C92  00AF               	movwf	___ftmul@sign
  8086  0C93  0823               	movf	___ftmul@f2,w
  8087  0C94  00A6               	movwf	??___ftmul
  8088  0C95  0824               	movf	___ftmul@f2+1,w
  8089  0C96  00A7               	movwf	??___ftmul+1
  8090  0C97  0825               	movf	___ftmul@f2+2,w
  8091  0C98  00A8               	movwf	??___ftmul+2
  8092  0C99  3010               	movlw	16
  8093  0C9A                     u2365:	
  8094  0C9A  36A8               	lsrf	??___ftmul+2,f
  8095  0C9B  0CA7               	rrf	??___ftmul+1,f
  8096  0C9C  0CA6               	rrf	??___ftmul,f
  8097  0C9D  0B89               	decfsz	9,f
  8098  0C9E  2C9A               	goto	u2365
  8099  0C9F  0826               	movf	??___ftmul,w
  8100  0CA0  00A9               	movwf	??___ftmul+3
  8101  0CA1  0829               	movf	??___ftmul+3,w
  8102  0CA2  06AF               	xorwf	___ftmul@sign,f
  8103  0CA3  3080               	movlw	128
  8104  0CA4  00A6               	movwf	??___ftmul
  8105  0CA5  0826               	movf	??___ftmul,w
  8106  0CA6  05AF               	andwf	___ftmul@sign,f
  8107  0CA7  17A1               	bsf	___ftmul@f1+1,7
  8108  0CA8  17A4               	bsf	___ftmul@f2+1,7
  8109  0CA9  30FF               	movlw	255
  8110  0CAA  05A3               	andwf	___ftmul@f2,f
  8111  0CAB  30FF               	movlw	255
  8112  0CAC  05A4               	andwf	___ftmul@f2+1,f
  8113  0CAD  3000               	movlw	0
  8114  0CAE  05A5               	andwf	___ftmul@f2+2,f
  8115  0CAF  3000               	movlw	0
  8116  0CB0  00AB               	movwf	___ftmul@f3_as_product
  8117  0CB1  3000               	movlw	0
  8118  0CB2  00AC               	movwf	___ftmul@f3_as_product+1
  8119  0CB3  3000               	movlw	0
  8120  0CB4  00AD               	movwf	___ftmul@f3_as_product+2
  8121  0CB5  3007               	movlw	7
  8122  0CB6  00A6               	movwf	??___ftmul
  8123  0CB7  0826               	movf	??___ftmul,w
  8124  0CB8  00AE               	movwf	___ftmul@cntr
  8125  0CB9                     l2295:	
  8126  0CB9  1C20               	btfss	___ftmul@f1,0
  8127  0CBA  2CC1               	goto	l2299
  8128  0CBB  0823               	movf	___ftmul@f2,w
  8129  0CBC  07AB               	addwf	___ftmul@f3_as_product,f
  8130  0CBD  0824               	movf	___ftmul@f2+1,w
  8131  0CBE  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8132  0CBF  0825               	movf	___ftmul@f2+2,w
  8133  0CC0  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8134  0CC1                     l2299:	
  8135  0CC1  3001               	movlw	1
  8136  0CC2                     u2385:	
  8137  0CC2  36A2               	lsrf	___ftmul@f1+2,f
  8138  0CC3  0CA1               	rrf	___ftmul@f1+1,f
  8139  0CC4  0CA0               	rrf	___ftmul@f1,f
  8140  0CC5  0B89               	decfsz	9,f
  8141  0CC6  2CC2               	goto	u2385
  8142  0CC7  3001               	movlw	1
  8143  0CC8                     u2395:	
  8144  0CC8  35A3               	lslf	___ftmul@f2,f
  8145  0CC9  0DA4               	rlf	___ftmul@f2+1,f
  8146  0CCA  0DA5               	rlf	___ftmul@f2+2,f
  8147  0CCB  0B89               	decfsz	9,f
  8148  0CCC  2CC8               	goto	u2395
  8149  0CCD  3001               	movlw	1
  8150  0CCE  02AE               	subwf	___ftmul@cntr,f
  8151  0CCF  1D03               	btfss	3,2
  8152  0CD0  2CB9               	goto	l2295
  8153  0CD1  3009               	movlw	9
  8154  0CD2  00A6               	movwf	??___ftmul
  8155  0CD3  0826               	movf	??___ftmul,w
  8156  0CD4  00AE               	movwf	___ftmul@cntr
  8157  0CD5                     l2307:	
  8158  0CD5  1C20               	btfss	___ftmul@f1,0
  8159  0CD6  2CDD               	goto	l2311
  8160  0CD7  0823               	movf	___ftmul@f2,w
  8161  0CD8  07AB               	addwf	___ftmul@f3_as_product,f
  8162  0CD9  0824               	movf	___ftmul@f2+1,w
  8163  0CDA  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8164  0CDB  0825               	movf	___ftmul@f2+2,w
  8165  0CDC  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8166  0CDD                     l2311:	
  8167  0CDD  3001               	movlw	1
  8168  0CDE                     u2425:	
  8169  0CDE  36A2               	lsrf	___ftmul@f1+2,f
  8170  0CDF  0CA1               	rrf	___ftmul@f1+1,f
  8171  0CE0  0CA0               	rrf	___ftmul@f1,f
  8172  0CE1  0B89               	decfsz	9,f
  8173  0CE2  2CDE               	goto	u2425
  8174  0CE3  3001               	movlw	1
  8175  0CE4                     u2435:	
  8176  0CE4  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8177  0CE5  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8178  0CE6  0CAB               	rrf	___ftmul@f3_as_product,f
  8179  0CE7  0B89               	decfsz	9,f
  8180  0CE8  2CE4               	goto	u2435
  8181  0CE9  3001               	movlw	1
  8182  0CEA  02AE               	subwf	___ftmul@cntr,f
  8183  0CEB  1D03               	btfss	3,2
  8184  0CEC  2CD5               	goto	l2307
  8185  0CED  082B               	movf	___ftmul@f3_as_product,w
  8186  0CEE  00F0               	movwf	___ftpack@arg
  8187  0CEF  082C               	movf	___ftmul@f3_as_product+1,w
  8188  0CF0  00F1               	movwf	___ftpack@arg+1
  8189  0CF1  082D               	movf	___ftmul@f3_as_product+2,w
  8190  0CF2  00F2               	movwf	___ftpack@arg+2
  8191  0CF3  082A               	movf	___ftmul@exp,w
  8192  0CF4  00A6               	movwf	??___ftmul
  8193  0CF5  0826               	movf	??___ftmul,w
  8194  0CF6  00F3               	movwf	___ftpack@exp
  8195  0CF7  082F               	movf	___ftmul@sign,w
  8196  0CF8  00A7               	movwf	??___ftmul+1
  8197  0CF9  0827               	movf	??___ftmul+1,w
  8198  0CFA  00F4               	movwf	___ftpack@sign
  8199  0CFB  3189  2105         	fcall	___ftpack
  8200  0CFD  0870               	movf	?___ftpack,w
  8201  0CFE  0020               	movlb	0	; select bank0
  8202  0CFF  00A0               	movwf	?___ftmul
  8203  0D00  0871               	movf	?___ftpack+1,w
  8204  0D01  00A1               	movwf	?___ftmul+1
  8205  0D02  0872               	movf	?___ftpack+2,w
  8206  0D03  00A2               	movwf	?___ftmul+2
  8207  0D04  0008               	return
  8208  0D05                     __end_of___ftmul:	
  8209                           
  8210                           	psect	text6
  8211  1709                     __ptext6:	
  8212 ;; *************** function ___ftge *****************
  8213 ;; Defined at:
  8214 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;  ff1             3    0[COMMON] float 
  8217 ;;  ff2             3    3[COMMON] float 
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;		None
  8220 ;; Return value:  Size  Location     Type
  8221 ;;		None               void
  8222 ;; Registers used:
  8223 ;;		wreg, status,2, status,0
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8229 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8232 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8233 ;;Total ram usage:        9 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_log
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           
  8243                           ;psect for function ___ftge
  8244  1709                     ___ftge:	
  8245                           
  8246                           ;incstack = 0
  8247                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8248  1709  1FF2               	btfss	___ftge@ff1+2,7
  8249  170A  2F1F               	goto	l2449
  8250  170B  0970               	comf	___ftge@ff1,w
  8251  170C  00F6               	movwf	??___ftge
  8252  170D  0971               	comf	___ftge@ff1+1,w
  8253  170E  00F7               	movwf	??___ftge+1
  8254  170F  0972               	comf	___ftge@ff1+2,w
  8255  1710  00F8               	movwf	??___ftge+2
  8256  1711  0AF6               	incf	??___ftge,f
  8257  1712  1903               	skipnz
  8258  1713  0AF7               	incf	??___ftge+1,f
  8259  1714  1903               	skipnz
  8260  1715  0AF8               	incf	??___ftge+2,f
  8261  1716  3000               	movlw	0
  8262  1717  0776               	addwf	??___ftge,w
  8263  1718  00F0               	movwf	___ftge@ff1
  8264  1719  3000               	movlw	0
  8265  171A  3D77               	addwfc	??___ftge+1,w
  8266  171B  00F1               	movwf	___ftge@ff1+1
  8267  171C  3080               	movlw	128
  8268  171D  3D78               	addwfc	??___ftge+2,w
  8269  171E  00F2               	movwf	___ftge@ff1+2
  8270  171F                     l2449:	
  8271  171F  1FF5               	btfss	___ftge@ff2+2,7
  8272  1720  2F35               	goto	l2453
  8273  1721  0973               	comf	___ftge@ff2,w
  8274  1722  00F6               	movwf	??___ftge
  8275  1723  0974               	comf	___ftge@ff2+1,w
  8276  1724  00F7               	movwf	??___ftge+1
  8277  1725  0975               	comf	___ftge@ff2+2,w
  8278  1726  00F8               	movwf	??___ftge+2
  8279  1727  0AF6               	incf	??___ftge,f
  8280  1728  1903               	skipnz
  8281  1729  0AF7               	incf	??___ftge+1,f
  8282  172A  1903               	skipnz
  8283  172B  0AF8               	incf	??___ftge+2,f
  8284  172C  3000               	movlw	0
  8285  172D  0776               	addwf	??___ftge,w
  8286  172E  00F3               	movwf	___ftge@ff2
  8287  172F  3000               	movlw	0
  8288  1730  3D77               	addwfc	??___ftge+1,w
  8289  1731  00F4               	movwf	___ftge@ff2+1
  8290  1732  3080               	movlw	128
  8291  1733  3D78               	addwfc	??___ftge+2,w
  8292  1734  00F5               	movwf	___ftge@ff2+2
  8293  1735                     l2453:	
  8294  1735  3080               	movlw	128
  8295  1736  06F2               	xorwf	___ftge@ff1+2,f
  8296  1737  3080               	movlw	128
  8297  1738  06F5               	xorwf	___ftge@ff2+2,f
  8298  1739  0875               	movf	___ftge@ff2+2,w
  8299  173A  0272               	subwf	___ftge@ff1+2,w
  8300  173B  1D03               	skipz
  8301  173C  0008               	return
  8302  173D  0874               	movf	___ftge@ff2+1,w
  8303  173E  0271               	subwf	___ftge@ff1+1,w
  8304  173F  1D03               	skipz
  8305  1740  0008               	return
  8306  1741  0873               	movf	___ftge@ff2,w
  8307  1742  0270               	subwf	___ftge@ff1,w
  8308  1743  0008               	return
  8309  1744                     __end_of___ftge:	
  8310                           
  8311                           	psect	text7
  8312  1666                     __ptext7:	
  8313 ;; *************** function ___awtoft *****************
  8314 ;; Defined at:
  8315 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  c               2    8[COMMON] int 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  sign            1   13[COMMON] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  3    8[COMMON] float 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2, status,0, pclath, cstack
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8329 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;Total ram usage:        6 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:    1
  8336 ;; This function calls:
  8337 ;;		___ftpack
  8338 ;; This function is called by:
  8339 ;;		_tempCalc
  8340 ;;		_log
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           
  8345                           ;psect for function ___awtoft
  8346  1666                     ___awtoft:	
  8347                           
  8348                           ;incstack = 0
  8349                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8350  1666  01FD               	clrf	___awtoft@sign
  8351  1667  1FF9               	btfss	___awtoft@c+1,7
  8352  1668  2E70               	goto	l2441
  8353  1669  09F8               	comf	___awtoft@c,f
  8354  166A  09F9               	comf	___awtoft@c+1,f
  8355  166B  0AF8               	incf	___awtoft@c,f
  8356  166C  1903               	skipnz
  8357  166D  0AF9               	incf	___awtoft@c+1,f
  8358  166E  01FD               	clrf	___awtoft@sign
  8359  166F  0AFD               	incf	___awtoft@sign,f
  8360  1670                     l2441:	
  8361  1670  0878               	movf	___awtoft@c,w
  8362  1671  00F0               	movwf	___ftpack@arg
  8363  1672  0879               	movf	___awtoft@c+1,w
  8364  1673  00F1               	movwf	___ftpack@arg+1
  8365  1674  01F2               	clrf	___ftpack@arg+2
  8366  1675  308E               	movlw	142
  8367  1676  00FB               	movwf	??___awtoft
  8368  1677  087B               	movf	??___awtoft,w
  8369  1678  00F3               	movwf	___ftpack@exp
  8370  1679  087D               	movf	___awtoft@sign,w
  8371  167A  00FC               	movwf	??___awtoft+1
  8372  167B  087C               	movf	??___awtoft+1,w
  8373  167C  00F4               	movwf	___ftpack@sign
  8374  167D  3189  2105         	fcall	___ftpack
  8375  167F  0870               	movf	?___ftpack,w
  8376  1680  00F8               	movwf	?___awtoft
  8377  1681  0871               	movf	?___ftpack+1,w
  8378  1682  00F9               	movwf	?___awtoft+1
  8379  1683  0872               	movf	?___ftpack+2,w
  8380  1684  00FA               	movwf	?___awtoft+2
  8381  1685  0008               	return
  8382  1686                     __end_of___awtoft:	
  8383                           
  8384                           	psect	text8
  8385  09EB                     __ptext8:	
  8386 ;; *************** function ___fttol *****************
  8387 ;; Defined at:
  8388 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;  f1              3    0[COMMON] float 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  lval            4    9[COMMON] unsigned long 
  8393 ;;  exp1            1   13[COMMON] unsigned char 
  8394 ;;  sign1           1    8[COMMON] unsigned char 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  4    0[COMMON] long 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;Total ram usage:       14 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_tempCalc
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           
  8418                           ;psect for function ___fttol
  8419  09EB                     ___fttol:	
  8420                           
  8421                           ;incstack = 0
  8422                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8423  09EB  0870               	movf	___fttol@f1,w
  8424  09EC  00F4               	movwf	??___fttol
  8425  09ED  0871               	movf	___fttol@f1+1,w
  8426  09EE  00F5               	movwf	??___fttol+1
  8427  09EF  0872               	movf	___fttol@f1+2,w
  8428  09F0  00F6               	movwf	??___fttol+2
  8429  09F1  1003               	clrc
  8430  09F2  0D75               	rlf	??___fttol+1,w
  8431  09F3  0D76               	rlf	??___fttol+2,w
  8432  09F4  00F7               	movwf	??___fttol+3
  8433  09F5  0877               	movf	??___fttol+3,w
  8434  09F6  00FD               	movwf	___fttol@exp1
  8435  09F7  087D               	movf	___fttol@exp1,w
  8436  09F8  1D03               	btfss	3,2
  8437  09F9  2A03               	goto	l2851
  8438  09FA  3000               	movlw	0
  8439  09FB  00F3               	movwf	?___fttol+3
  8440  09FC  3000               	movlw	0
  8441  09FD  00F2               	movwf	?___fttol+2
  8442  09FE  3000               	movlw	0
  8443  09FF  00F1               	movwf	?___fttol+1
  8444  0A00  3000               	movlw	0
  8445  0A01  00F0               	movwf	?___fttol
  8446  0A02  0008               	return
  8447  0A03                     l2851:	
  8448  0A03  0870               	movf	___fttol@f1,w
  8449  0A04  00F4               	movwf	??___fttol
  8450  0A05  0871               	movf	___fttol@f1+1,w
  8451  0A06  00F5               	movwf	??___fttol+1
  8452  0A07  0872               	movf	___fttol@f1+2,w
  8453  0A08  00F6               	movwf	??___fttol+2
  8454  0A09  3017               	movlw	23
  8455  0A0A                     u3175:	
  8456  0A0A  36F6               	lsrf	??___fttol+2,f
  8457  0A0B  0CF5               	rrf	??___fttol+1,f
  8458  0A0C  0CF4               	rrf	??___fttol,f
  8459  0A0D  0B89               	decfsz	9,f
  8460  0A0E  2A0A               	goto	u3175
  8461  0A0F  0874               	movf	??___fttol,w
  8462  0A10  00F7               	movwf	??___fttol+3
  8463  0A11  0877               	movf	??___fttol+3,w
  8464  0A12  00F8               	movwf	___fttol@sign1
  8465  0A13  17F1               	bsf	___fttol@f1+1,7
  8466  0A14  30FF               	movlw	255
  8467  0A15  05F0               	andwf	___fttol@f1,f
  8468  0A16  30FF               	movlw	255
  8469  0A17  05F1               	andwf	___fttol@f1+1,f
  8470  0A18  3000               	movlw	0
  8471  0A19  05F2               	andwf	___fttol@f1+2,f
  8472  0A1A  0870               	movf	___fttol@f1,w
  8473  0A1B  00F9               	movwf	___fttol@lval
  8474  0A1C  0871               	movf	___fttol@f1+1,w
  8475  0A1D  00FA               	movwf	___fttol@lval+1
  8476  0A1E  0872               	movf	___fttol@f1+2,w
  8477  0A1F  00FB               	movwf	___fttol@lval+2
  8478  0A20  01FC               	clrf	___fttol@lval+3
  8479  0A21  308E               	movlw	142
  8480  0A22  02FD               	subwf	___fttol@exp1,f
  8481  0A23  1FFD               	btfss	___fttol@exp1,7
  8482  0A24  2A41               	goto	l2871
  8483  0A25  087D               	movf	___fttol@exp1,w
  8484  0A26  3A80               	xorlw	128
  8485  0A27  3E8F               	addlw	143
  8486  0A28  1803               	skipnc
  8487  0A29  2A33               	goto	l2869
  8488  0A2A  3000               	movlw	0
  8489  0A2B  00F3               	movwf	?___fttol+3
  8490  0A2C  3000               	movlw	0
  8491  0A2D  00F2               	movwf	?___fttol+2
  8492  0A2E  3000               	movlw	0
  8493  0A2F  00F1               	movwf	?___fttol+1
  8494  0A30  3000               	movlw	0
  8495  0A31  00F0               	movwf	?___fttol
  8496  0A32  0008               	return
  8497  0A33                     l2869:	
  8498  0A33  3001               	movlw	1
  8499  0A34                     u3205:	
  8500  0A34  36FC               	lsrf	___fttol@lval+3,f
  8501  0A35  0CFB               	rrf	___fttol@lval+2,f
  8502  0A36  0CFA               	rrf	___fttol@lval+1,f
  8503  0A37  0CF9               	rrf	___fttol@lval,f
  8504  0A38  0B89               	decfsz	9,f
  8505  0A39  2A34               	goto	u3205
  8506  0A3A  3001               	movlw	1
  8507  0A3B  00F4               	movwf	??___fttol
  8508  0A3C  0874               	movf	??___fttol,w
  8509  0A3D  07FD               	addwf	___fttol@exp1,f
  8510  0A3E  1903               	btfsc	3,2
  8511  0A3F  2A5A               	goto	l2879
  8512  0A40  2A33               	goto	l2869
  8513  0A41                     l2871:	
  8514  0A41  3018               	movlw	24
  8515  0A42  027D               	subwf	___fttol@exp1,w
  8516  0A43  1C03               	skipc
  8517  0A44  2A57               	goto	l793
  8518  0A45  3000               	movlw	0
  8519  0A46  00F3               	movwf	?___fttol+3
  8520  0A47  3000               	movlw	0
  8521  0A48  00F2               	movwf	?___fttol+2
  8522  0A49  3000               	movlw	0
  8523  0A4A  00F1               	movwf	?___fttol+1
  8524  0A4B  3000               	movlw	0
  8525  0A4C  00F0               	movwf	?___fttol
  8526  0A4D  0008               	return
  8527  0A4E                     l2877:	
  8528  0A4E  3001               	movlw	1
  8529  0A4F                     u3235:	
  8530  0A4F  35F9               	lslf	___fttol@lval,f
  8531  0A50  0DFA               	rlf	___fttol@lval+1,f
  8532  0A51  0DFB               	rlf	___fttol@lval+2,f
  8533  0A52  0DFC               	rlf	___fttol@lval+3,f
  8534  0A53  0B89               	decfsz	9,f
  8535  0A54  2A4F               	goto	u3235
  8536  0A55  3001               	movlw	1
  8537  0A56  02FD               	subwf	___fttol@exp1,f
  8538  0A57                     l793:	
  8539  0A57  087D               	movf	___fttol@exp1,w
  8540  0A58  1D03               	btfss	3,2
  8541  0A59  2A4E               	goto	l2877
  8542  0A5A                     l2879:	
  8543  0A5A  0878               	movf	___fttol@sign1,w
  8544  0A5B  1903               	btfsc	3,2
  8545  0A5C  2A68               	goto	l2883
  8546  0A5D  09F9               	comf	___fttol@lval,f
  8547  0A5E  09FA               	comf	___fttol@lval+1,f
  8548  0A5F  09FB               	comf	___fttol@lval+2,f
  8549  0A60  09FC               	comf	___fttol@lval+3,f
  8550  0A61  0AF9               	incf	___fttol@lval,f
  8551  0A62  1903               	skipnz
  8552  0A63  0AFA               	incf	___fttol@lval+1,f
  8553  0A64  1903               	skipnz
  8554  0A65  0AFB               	incf	___fttol@lval+2,f
  8555  0A66  1903               	skipnz
  8556  0A67  0AFC               	incf	___fttol@lval+3,f
  8557  0A68                     l2883:	
  8558  0A68  087C               	movf	___fttol@lval+3,w
  8559  0A69  00F3               	movwf	?___fttol+3
  8560  0A6A  087B               	movf	___fttol@lval+2,w
  8561  0A6B  00F2               	movwf	?___fttol+2
  8562  0A6C  087A               	movf	___fttol@lval+1,w
  8563  0A6D  00F1               	movwf	?___fttol+1
  8564  0A6E  0879               	movf	___fttol@lval,w
  8565  0A6F  00F0               	movwf	?___fttol
  8566  0A70  0008               	return
  8567  0A71                     __end_of___fttol:	
  8568                           
  8569                           	psect	text9
  8570  1648                     __ptext9:	
  8571 ;; *************** function ___ftsub *****************
  8572 ;; Defined at:
  8573 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  f2              3   45[BANK0 ] float 
  8576 ;;  f1              3   48[BANK0 ] float 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;		None
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  3   45[BANK0 ] float 
  8581 ;; Registers used:
  8582 ;;		wreg, status,2, status,0, pclath, cstack
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8588 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;Total ram usage:        6 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; Hardware stack levels required when called:    2
  8595 ;; This function calls:
  8596 ;;		___ftadd
  8597 ;; This function is called by:
  8598 ;;		_tempCalc
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           
  8603                           ;psect for function ___ftsub
  8604  1648                     ___ftsub:	
  8605                           
  8606                           ;incstack = 0
  8607                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8608  1648  0020               	movlb	0	; select bank0
  8609  1649  084F               	movf	___ftsub@f2+2,w
  8610  164A  044E               	iorwf	___ftsub@f2+1,w
  8611  164B  044D               	iorwf	___ftsub@f2,w
  8612  164C  1903               	skipnz
  8613  164D  2E50               	goto	l2841
  8614  164E  3080               	movlw	128
  8615  164F  06CF               	xorwf	___ftsub@f2+2,f
  8616  1650                     l2841:	
  8617  1650  0850               	movf	___ftsub@f1,w
  8618  1651  00C0               	movwf	___ftadd@f1
  8619  1652  0851               	movf	___ftsub@f1+1,w
  8620  1653  00C1               	movwf	___ftadd@f1+1
  8621  1654  0852               	movf	___ftsub@f1+2,w
  8622  1655  00C2               	movwf	___ftadd@f1+2
  8623  1656  084D               	movf	___ftsub@f2,w
  8624  1657  00C3               	movwf	___ftadd@f2
  8625  1658  084E               	movf	___ftsub@f2+1,w
  8626  1659  00C4               	movwf	___ftadd@f2+1
  8627  165A  084F               	movf	___ftsub@f2+2,w
  8628  165B  00C5               	movwf	___ftadd@f2+2
  8629  165C  318D  25CE         	fcall	___ftadd
  8630  165E  0020               	movlb	0	; select bank0
  8631  165F  0840               	movf	?___ftadd,w
  8632  1660  00CD               	movwf	?___ftsub
  8633  1661  0841               	movf	?___ftadd+1,w
  8634  1662  00CE               	movwf	?___ftsub+1
  8635  1663  0842               	movf	?___ftadd+2,w
  8636  1664  00CF               	movwf	?___ftsub+2
  8637  1665  0008               	return
  8638  1666                     __end_of___ftsub:	
  8639                           
  8640                           	psect	text10
  8641  0DCE                     __ptext10:	
  8642 ;; *************** function ___ftadd *****************
  8643 ;; Defined at:
  8644 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  f1              3   32[BANK0 ] float 
  8647 ;;  f2              3   35[BANK0 ] float 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  exp1            1   44[BANK0 ] unsigned char 
  8650 ;;  exp2            1   43[BANK0 ] unsigned char 
  8651 ;;  sign            1   42[BANK0 ] unsigned char 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  3   32[BANK0 ] float 
  8654 ;; Registers used:
  8655 ;;		wreg, status,2, status,0, pclath, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8661 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8662 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8663 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8664 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8665 ;;Total ram usage:       13 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:    1
  8668 ;; This function calls:
  8669 ;;		___ftpack
  8670 ;; This function is called by:
  8671 ;;		_tempCalc
  8672 ;;		___ftsub
  8673 ;;		_log
  8674 ;;		_eval_poly
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           
  8679                           ;psect for function ___ftadd
  8680  0DCE                     ___ftadd:	
  8681                           
  8682                           ;incstack = 0
  8683                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8684  0DCE  0020               	movlb	0	; select bank0
  8685  0DCF  0840               	movf	___ftadd@f1,w
  8686  0DD0  00C6               	movwf	??___ftadd
  8687  0DD1  0841               	movf	___ftadd@f1+1,w
  8688  0DD2  00C7               	movwf	??___ftadd+1
  8689  0DD3  0842               	movf	___ftadd@f1+2,w
  8690  0DD4  00C8               	movwf	??___ftadd+2
  8691  0DD5  1003               	clrc
  8692  0DD6  0D47               	rlf	??___ftadd+1,w
  8693  0DD7  0D48               	rlf	??___ftadd+2,w
  8694  0DD8  00C9               	movwf	??___ftadd+3
  8695  0DD9  0849               	movf	??___ftadd+3,w
  8696  0DDA  00CC               	movwf	___ftadd@exp1
  8697  0DDB  0843               	movf	___ftadd@f2,w
  8698  0DDC  00C6               	movwf	??___ftadd
  8699  0DDD  0844               	movf	___ftadd@f2+1,w
  8700  0DDE  00C7               	movwf	??___ftadd+1
  8701  0DDF  0845               	movf	___ftadd@f2+2,w
  8702  0DE0  00C8               	movwf	??___ftadd+2
  8703  0DE1  1003               	clrc
  8704  0DE2  0D47               	rlf	??___ftadd+1,w
  8705  0DE3  0D48               	rlf	??___ftadd+2,w
  8706  0DE4  00C9               	movwf	??___ftadd+3
  8707  0DE5  0849               	movf	??___ftadd+3,w
  8708  0DE6  00CB               	movwf	___ftadd@exp2
  8709  0DE7  084C               	movf	___ftadd@exp1,w
  8710  0DE8  1903               	btfsc	3,2
  8711  0DE9  2DF6               	goto	l2207
  8712  0DEA  084B               	movf	___ftadd@exp2,w
  8713  0DEB  024C               	subwf	___ftadd@exp1,w
  8714  0DEC  1803               	skipnc
  8715  0DED  2DFD               	goto	l2211
  8716  0DEE  034C               	decf	___ftadd@exp1,w
  8717  0DEF  3AFF               	xorlw	255
  8718  0DF0  074B               	addwf	___ftadd@exp2,w
  8719  0DF1  00C6               	movwf	??___ftadd
  8720  0DF2  3019               	movlw	25
  8721  0DF3  0246               	subwf	??___ftadd,w
  8722  0DF4  1C03               	skipc
  8723  0DF5  2DFD               	goto	l2211
  8724  0DF6                     l2207:	
  8725  0DF6  0843               	movf	___ftadd@f2,w
  8726  0DF7  00C0               	movwf	?___ftadd
  8727  0DF8  0844               	movf	___ftadd@f2+1,w
  8728  0DF9  00C1               	movwf	?___ftadd+1
  8729  0DFA  0845               	movf	___ftadd@f2+2,w
  8730  0DFB  00C2               	movwf	?___ftadd+2
  8731  0DFC  0008               	return
  8732  0DFD                     l2211:	
  8733  0DFD  084B               	movf	___ftadd@exp2,w
  8734  0DFE  1903               	btfsc	3,2
  8735  0DFF  0008               	return
  8736  0E00  084C               	movf	___ftadd@exp1,w
  8737  0E01  024B               	subwf	___ftadd@exp2,w
  8738  0E02  1803               	skipnc
  8739  0E03  2E0C               	goto	l2217
  8740  0E04  034B               	decf	___ftadd@exp2,w
  8741  0E05  3AFF               	xorlw	255
  8742  0E06  074C               	addwf	___ftadd@exp1,w
  8743  0E07  00C6               	movwf	??___ftadd
  8744  0E08  3019               	movlw	25
  8745  0E09  0246               	subwf	??___ftadd,w
  8746  0E0A  1803               	btfsc	3,0
  8747  0E0B  0008               	return
  8748  0E0C                     l2217:	
  8749  0E0C  3006               	movlw	6
  8750  0E0D  00C6               	movwf	??___ftadd
  8751  0E0E  0846               	movf	??___ftadd,w
  8752  0E0F  00CA               	movwf	___ftadd@sign
  8753  0E10  1BC2               	btfsc	___ftadd@f1+2,7
  8754  0E11  17CA               	bsf	___ftadd@sign,7
  8755  0E12  1BC5               	btfsc	___ftadd@f2+2,7
  8756  0E13  174A               	bsf	___ftadd@sign,6
  8757  0E14  17C1               	bsf	___ftadd@f1+1,7
  8758  0E15  30FF               	movlw	255
  8759  0E16  05C0               	andwf	___ftadd@f1,f
  8760  0E17  30FF               	movlw	255
  8761  0E18  05C1               	andwf	___ftadd@f1+1,f
  8762  0E19  3000               	movlw	0
  8763  0E1A  05C2               	andwf	___ftadd@f1+2,f
  8764  0E1B  17C4               	bsf	___ftadd@f2+1,7
  8765  0E1C  30FF               	movlw	255
  8766  0E1D  05C3               	andwf	___ftadd@f2,f
  8767  0E1E  30FF               	movlw	255
  8768  0E1F  05C4               	andwf	___ftadd@f2+1,f
  8769  0E20  3000               	movlw	0
  8770  0E21  05C5               	andwf	___ftadd@f2+2,f
  8771  0E22  084B               	movf	___ftadd@exp2,w
  8772  0E23  024C               	subwf	___ftadd@exp1,w
  8773  0E24  1803               	skipnc
  8774  0E25  2E48               	goto	l2239
  8775  0E26                     l2229:	
  8776  0E26  3001               	movlw	1
  8777  0E27                     u2195:	
  8778  0E27  35C3               	lslf	___ftadd@f2,f
  8779  0E28  0DC4               	rlf	___ftadd@f2+1,f
  8780  0E29  0DC5               	rlf	___ftadd@f2+2,f
  8781  0E2A  0B89               	decfsz	9,f
  8782  0E2B  2E27               	goto	u2195
  8783  0E2C  3001               	movlw	1
  8784  0E2D  02CB               	subwf	___ftadd@exp2,f
  8785  0E2E  084B               	movf	___ftadd@exp2,w
  8786  0E2F  064C               	xorwf	___ftadd@exp1,w
  8787  0E30  1903               	skipnz
  8788  0E31  2E43               	goto	l2237
  8789  0E32  3001               	movlw	1
  8790  0E33  02CA               	subwf	___ftadd@sign,f
  8791  0E34  084A               	movf	___ftadd@sign,w
  8792  0E35  3907               	andlw	7
  8793  0E36  1903               	btfsc	3,2
  8794  0E37  2E43               	goto	l2237
  8795  0E38  2E26               	goto	l2229
  8796  0E39                     l2235:	
  8797  0E39  3001               	movlw	1
  8798  0E3A                     u2225:	
  8799  0E3A  36C2               	lsrf	___ftadd@f1+2,f
  8800  0E3B  0CC1               	rrf	___ftadd@f1+1,f
  8801  0E3C  0CC0               	rrf	___ftadd@f1,f
  8802  0E3D  0B89               	decfsz	9,f
  8803  0E3E  2E3A               	goto	u2225
  8804  0E3F  3001               	movlw	1
  8805  0E40  00C6               	movwf	??___ftadd
  8806  0E41  0846               	movf	??___ftadd,w
  8807  0E42  07CC               	addwf	___ftadd@exp1,f
  8808  0E43                     l2237:	
  8809  0E43  084C               	movf	___ftadd@exp1,w
  8810  0E44  064B               	xorwf	___ftadd@exp2,w
  8811  0E45  1903               	btfsc	3,2
  8812  0E46  2E6D               	goto	l733
  8813  0E47  2E39               	goto	l2235
  8814  0E48                     l2239:	
  8815  0E48  084C               	movf	___ftadd@exp1,w
  8816  0E49  024B               	subwf	___ftadd@exp2,w
  8817  0E4A  1803               	skipnc
  8818  0E4B  2E6D               	goto	l733
  8819  0E4C                     l2241:	
  8820  0E4C  3001               	movlw	1
  8821  0E4D                     u2255:	
  8822  0E4D  35C0               	lslf	___ftadd@f1,f
  8823  0E4E  0DC1               	rlf	___ftadd@f1+1,f
  8824  0E4F  0DC2               	rlf	___ftadd@f1+2,f
  8825  0E50  0B89               	decfsz	9,f
  8826  0E51  2E4D               	goto	u2255
  8827  0E52  3001               	movlw	1
  8828  0E53  02CC               	subwf	___ftadd@exp1,f
  8829  0E54  084B               	movf	___ftadd@exp2,w
  8830  0E55  064C               	xorwf	___ftadd@exp1,w
  8831  0E56  1903               	skipnz
  8832  0E57  2E69               	goto	l2249
  8833  0E58  3001               	movlw	1
  8834  0E59  02CA               	subwf	___ftadd@sign,f
  8835  0E5A  084A               	movf	___ftadd@sign,w
  8836  0E5B  3907               	andlw	7
  8837  0E5C  1903               	btfsc	3,2
  8838  0E5D  2E69               	goto	l2249
  8839  0E5E  2E4C               	goto	l2241
  8840  0E5F                     l2247:	
  8841  0E5F  3001               	movlw	1
  8842  0E60                     u2285:	
  8843  0E60  36C5               	lsrf	___ftadd@f2+2,f
  8844  0E61  0CC4               	rrf	___ftadd@f2+1,f
  8845  0E62  0CC3               	rrf	___ftadd@f2,f
  8846  0E63  0B89               	decfsz	9,f
  8847  0E64  2E60               	goto	u2285
  8848  0E65  3001               	movlw	1
  8849  0E66  00C6               	movwf	??___ftadd
  8850  0E67  0846               	movf	??___ftadd,w
  8851  0E68  07CB               	addwf	___ftadd@exp2,f
  8852  0E69                     l2249:	
  8853  0E69  084C               	movf	___ftadd@exp1,w
  8854  0E6A  064B               	xorwf	___ftadd@exp2,w
  8855  0E6B  1D03               	skipz
  8856  0E6C  2E5F               	goto	l2247
  8857  0E6D                     l733:	
  8858  0E6D  1FCA               	btfss	___ftadd@sign,7
  8859  0E6E  2E7F               	goto	l2253
  8860  0E6F  30FF               	movlw	255
  8861  0E70  06C0               	xorwf	___ftadd@f1,f
  8862  0E71  30FF               	movlw	255
  8863  0E72  06C1               	xorwf	___ftadd@f1+1,f
  8864  0E73  30FF               	movlw	255
  8865  0E74  06C2               	xorwf	___ftadd@f1+2,f
  8866  0E75  3001               	movlw	1
  8867  0E76  07C0               	addwf	___ftadd@f1,f
  8868  0E77  3000               	movlw	0
  8869  0E78  1803               	skipnc
  8870  0E79  3001               	movlw	1
  8871  0E7A  07C1               	addwf	___ftadd@f1+1,f
  8872  0E7B  3000               	movlw	0
  8873  0E7C  1803               	skipnc
  8874  0E7D  3001               	movlw	1
  8875  0E7E  07C2               	addwf	___ftadd@f1+2,f
  8876  0E7F                     l2253:	
  8877  0E7F  1F4A               	btfss	___ftadd@sign,6
  8878  0E80  2E91               	goto	l2257
  8879  0E81  30FF               	movlw	255
  8880  0E82  06C3               	xorwf	___ftadd@f2,f
  8881  0E83  30FF               	movlw	255
  8882  0E84  06C4               	xorwf	___ftadd@f2+1,f
  8883  0E85  30FF               	movlw	255
  8884  0E86  06C5               	xorwf	___ftadd@f2+2,f
  8885  0E87  3001               	movlw	1
  8886  0E88  07C3               	addwf	___ftadd@f2,f
  8887  0E89  3000               	movlw	0
  8888  0E8A  1803               	skipnc
  8889  0E8B  3001               	movlw	1
  8890  0E8C  07C4               	addwf	___ftadd@f2+1,f
  8891  0E8D  3000               	movlw	0
  8892  0E8E  1803               	skipnc
  8893  0E8F  3001               	movlw	1
  8894  0E90  07C5               	addwf	___ftadd@f2+2,f
  8895  0E91                     l2257:	
  8896  0E91  01CA               	clrf	___ftadd@sign
  8897  0E92  0840               	movf	___ftadd@f1,w
  8898  0E93  07C3               	addwf	___ftadd@f2,f
  8899  0E94  0841               	movf	___ftadd@f1+1,w
  8900  0E95  3DC4               	addwfc	___ftadd@f2+1,f
  8901  0E96  0842               	movf	___ftadd@f1+2,w
  8902  0E97  3DC5               	addwfc	___ftadd@f2+2,f
  8903  0E98  1FC5               	btfss	___ftadd@f2+2,7
  8904  0E99  2EAC               	goto	l2267
  8905  0E9A  30FF               	movlw	255
  8906  0E9B  06C3               	xorwf	___ftadd@f2,f
  8907  0E9C  30FF               	movlw	255
  8908  0E9D  06C4               	xorwf	___ftadd@f2+1,f
  8909  0E9E  30FF               	movlw	255
  8910  0E9F  06C5               	xorwf	___ftadd@f2+2,f
  8911  0EA0  3001               	movlw	1
  8912  0EA1  07C3               	addwf	___ftadd@f2,f
  8913  0EA2  3000               	movlw	0
  8914  0EA3  1803               	skipnc
  8915  0EA4  3001               	movlw	1
  8916  0EA5  07C4               	addwf	___ftadd@f2+1,f
  8917  0EA6  3000               	movlw	0
  8918  0EA7  1803               	skipnc
  8919  0EA8  3001               	movlw	1
  8920  0EA9  07C5               	addwf	___ftadd@f2+2,f
  8921  0EAA  01CA               	clrf	___ftadd@sign
  8922  0EAB  0ACA               	incf	___ftadd@sign,f
  8923  0EAC                     l2267:	
  8924  0EAC  0843               	movf	___ftadd@f2,w
  8925  0EAD  00F0               	movwf	___ftpack@arg
  8926  0EAE  0844               	movf	___ftadd@f2+1,w
  8927  0EAF  00F1               	movwf	___ftpack@arg+1
  8928  0EB0  0845               	movf	___ftadd@f2+2,w
  8929  0EB1  00F2               	movwf	___ftpack@arg+2
  8930  0EB2  084C               	movf	___ftadd@exp1,w
  8931  0EB3  00C6               	movwf	??___ftadd
  8932  0EB4  0846               	movf	??___ftadd,w
  8933  0EB5  00F3               	movwf	___ftpack@exp
  8934  0EB6  084A               	movf	___ftadd@sign,w
  8935  0EB7  00C7               	movwf	??___ftadd+1
  8936  0EB8  0847               	movf	??___ftadd+1,w
  8937  0EB9  00F4               	movwf	___ftpack@sign
  8938  0EBA  3189  2105         	fcall	___ftpack
  8939  0EBC  0870               	movf	?___ftpack,w
  8940  0EBD  0020               	movlb	0	; select bank0
  8941  0EBE  00C0               	movwf	?___ftadd
  8942  0EBF  0871               	movf	?___ftpack+1,w
  8943  0EC0  00C1               	movwf	?___ftadd+1
  8944  0EC1  0872               	movf	?___ftpack+2,w
  8945  0EC2  00C2               	movwf	?___ftadd+2
  8946  0EC3  0008               	return
  8947  0EC4                     __end_of___ftadd:	
  8948                           
  8949                           	psect	text11
  8950  0AF8                     __ptext11:	
  8951 ;; *************** function ___ftdiv *****************
  8952 ;; Defined at:
  8953 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  f2              3   16[BANK0 ] float 
  8956 ;;  f1              3   19[BANK0 ] float 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;  f3              3   27[BANK0 ] float 
  8959 ;;  sign            1   31[BANK0 ] unsigned char 
  8960 ;;  exp             1   30[BANK0 ] unsigned char 
  8961 ;;  cntr            1   26[BANK0 ] unsigned char 
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  3   16[BANK0 ] float 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0, pclath, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8971 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8974 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8975 ;;Total ram usage:       16 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; Hardware stack levels required when called:    1
  8978 ;; This function calls:
  8979 ;;		___ftpack
  8980 ;; This function is called by:
  8981 ;;		_tempCalc
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           
  8986                           ;psect for function ___ftdiv
  8987  0AF8                     ___ftdiv:	
  8988                           
  8989                           ;incstack = 0
  8990                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8991  0AF8  0020               	movlb	0	; select bank0
  8992  0AF9  0833               	movf	___ftdiv@f1,w
  8993  0AFA  00B6               	movwf	??___ftdiv
  8994  0AFB  0834               	movf	___ftdiv@f1+1,w
  8995  0AFC  00B7               	movwf	??___ftdiv+1
  8996  0AFD  0835               	movf	___ftdiv@f1+2,w
  8997  0AFE  00B8               	movwf	??___ftdiv+2
  8998  0AFF  1003               	clrc
  8999  0B00  0D37               	rlf	??___ftdiv+1,w
  9000  0B01  0D38               	rlf	??___ftdiv+2,w
  9001  0B02  00B9               	movwf	??___ftdiv+3
  9002  0B03  0839               	movf	??___ftdiv+3,w
  9003  0B04  00BE               	movwf	___ftdiv@exp
  9004  0B05  083E               	movf	___ftdiv@exp,w
  9005  0B06  1D03               	btfss	3,2
  9006  0B07  2B0F               	goto	l2801
  9007  0B08  3000               	movlw	0
  9008  0B09  00B0               	movwf	?___ftdiv
  9009  0B0A  3000               	movlw	0
  9010  0B0B  00B1               	movwf	?___ftdiv+1
  9011  0B0C  3000               	movlw	0
  9012  0B0D  00B2               	movwf	?___ftdiv+2
  9013  0B0E  0008               	return
  9014  0B0F                     l2801:	
  9015  0B0F  0830               	movf	___ftdiv@f2,w
  9016  0B10  00B6               	movwf	??___ftdiv
  9017  0B11  0831               	movf	___ftdiv@f2+1,w
  9018  0B12  00B7               	movwf	??___ftdiv+1
  9019  0B13  0832               	movf	___ftdiv@f2+2,w
  9020  0B14  00B8               	movwf	??___ftdiv+2
  9021  0B15  1003               	clrc
  9022  0B16  0D37               	rlf	??___ftdiv+1,w
  9023  0B17  0D38               	rlf	??___ftdiv+2,w
  9024  0B18  00B9               	movwf	??___ftdiv+3
  9025  0B19  0839               	movf	??___ftdiv+3,w
  9026  0B1A  00BF               	movwf	___ftdiv@sign
  9027  0B1B  083F               	movf	___ftdiv@sign,w
  9028  0B1C  1D03               	btfss	3,2
  9029  0B1D  2B25               	goto	l2807
  9030  0B1E  3000               	movlw	0
  9031  0B1F  00B0               	movwf	?___ftdiv
  9032  0B20  3000               	movlw	0
  9033  0B21  00B1               	movwf	?___ftdiv+1
  9034  0B22  3000               	movlw	0
  9035  0B23  00B2               	movwf	?___ftdiv+2
  9036  0B24  0008               	return
  9037  0B25                     l2807:	
  9038  0B25  3000               	movlw	0
  9039  0B26  00BB               	movwf	___ftdiv@f3
  9040  0B27  3000               	movlw	0
  9041  0B28  00BC               	movwf	___ftdiv@f3+1
  9042  0B29  3000               	movlw	0
  9043  0B2A  00BD               	movwf	___ftdiv@f3+2
  9044  0B2B  3089               	movlw	137
  9045  0B2C  073F               	addwf	___ftdiv@sign,w
  9046  0B2D  00B6               	movwf	??___ftdiv
  9047  0B2E  0836               	movf	??___ftdiv,w
  9048  0B2F  02BE               	subwf	___ftdiv@exp,f
  9049  0B30  0833               	movf	___ftdiv@f1,w
  9050  0B31  00B6               	movwf	??___ftdiv
  9051  0B32  0834               	movf	___ftdiv@f1+1,w
  9052  0B33  00B7               	movwf	??___ftdiv+1
  9053  0B34  0835               	movf	___ftdiv@f1+2,w
  9054  0B35  00B8               	movwf	??___ftdiv+2
  9055  0B36  3010               	movlw	16
  9056  0B37                     u3095:	
  9057  0B37  36B8               	lsrf	??___ftdiv+2,f
  9058  0B38  0CB7               	rrf	??___ftdiv+1,f
  9059  0B39  0CB6               	rrf	??___ftdiv,f
  9060  0B3A  0B89               	decfsz	9,f
  9061  0B3B  2B37               	goto	u3095
  9062  0B3C  0836               	movf	??___ftdiv,w
  9063  0B3D  00B9               	movwf	??___ftdiv+3
  9064  0B3E  0839               	movf	??___ftdiv+3,w
  9065  0B3F  00BF               	movwf	___ftdiv@sign
  9066  0B40  0830               	movf	___ftdiv@f2,w
  9067  0B41  00B6               	movwf	??___ftdiv
  9068  0B42  0831               	movf	___ftdiv@f2+1,w
  9069  0B43  00B7               	movwf	??___ftdiv+1
  9070  0B44  0832               	movf	___ftdiv@f2+2,w
  9071  0B45  00B8               	movwf	??___ftdiv+2
  9072  0B46  3010               	movlw	16
  9073  0B47                     u3105:	
  9074  0B47  36B8               	lsrf	??___ftdiv+2,f
  9075  0B48  0CB7               	rrf	??___ftdiv+1,f
  9076  0B49  0CB6               	rrf	??___ftdiv,f
  9077  0B4A  0B89               	decfsz	9,f
  9078  0B4B  2B47               	goto	u3105
  9079  0B4C  0836               	movf	??___ftdiv,w
  9080  0B4D  00B9               	movwf	??___ftdiv+3
  9081  0B4E  0839               	movf	??___ftdiv+3,w
  9082  0B4F  06BF               	xorwf	___ftdiv@sign,f
  9083  0B50  3080               	movlw	128
  9084  0B51  00B6               	movwf	??___ftdiv
  9085  0B52  0836               	movf	??___ftdiv,w
  9086  0B53  05BF               	andwf	___ftdiv@sign,f
  9087  0B54  17B4               	bsf	___ftdiv@f1+1,7
  9088  0B55  30FF               	movlw	255
  9089  0B56  05B3               	andwf	___ftdiv@f1,f
  9090  0B57  30FF               	movlw	255
  9091  0B58  05B4               	andwf	___ftdiv@f1+1,f
  9092  0B59  3000               	movlw	0
  9093  0B5A  05B5               	andwf	___ftdiv@f1+2,f
  9094  0B5B  17B1               	bsf	___ftdiv@f2+1,7
  9095  0B5C  30FF               	movlw	255
  9096  0B5D  05B0               	andwf	___ftdiv@f2,f
  9097  0B5E  30FF               	movlw	255
  9098  0B5F  05B1               	andwf	___ftdiv@f2+1,f
  9099  0B60  3000               	movlw	0
  9100  0B61  05B2               	andwf	___ftdiv@f2+2,f
  9101  0B62  3018               	movlw	24
  9102  0B63  00B6               	movwf	??___ftdiv
  9103  0B64  0836               	movf	??___ftdiv,w
  9104  0B65  00BA               	movwf	___ftdiv@cntr
  9105  0B66                     l2821:	
  9106  0B66  3001               	movlw	1
  9107  0B67                     u3115:	
  9108  0B67  35BB               	lslf	___ftdiv@f3,f
  9109  0B68  0DBC               	rlf	___ftdiv@f3+1,f
  9110  0B69  0DBD               	rlf	___ftdiv@f3+2,f
  9111  0B6A  0B89               	decfsz	9,f
  9112  0B6B  2B67               	goto	u3115
  9113  0B6C  0832               	movf	___ftdiv@f2+2,w
  9114  0B6D  0235               	subwf	___ftdiv@f1+2,w
  9115  0B6E  1D03               	skipz
  9116  0B6F  2B76               	goto	u3125
  9117  0B70  0831               	movf	___ftdiv@f2+1,w
  9118  0B71  0234               	subwf	___ftdiv@f1+1,w
  9119  0B72  1D03               	skipz
  9120  0B73  2B76               	goto	u3125
  9121  0B74  0830               	movf	___ftdiv@f2,w
  9122  0B75  0233               	subwf	___ftdiv@f1,w
  9123  0B76                     u3125:	
  9124  0B76  1C03               	skipc
  9125  0B77  2B7F               	goto	l2829
  9126  0B78  0830               	movf	___ftdiv@f2,w
  9127  0B79  02B3               	subwf	___ftdiv@f1,f
  9128  0B7A  0831               	movf	___ftdiv@f2+1,w
  9129  0B7B  3BB4               	subwfb	___ftdiv@f1+1,f
  9130  0B7C  0832               	movf	___ftdiv@f2+2,w
  9131  0B7D  3BB5               	subwfb	___ftdiv@f1+2,f
  9132  0B7E  143B               	bsf	___ftdiv@f3,0
  9133  0B7F                     l2829:	
  9134  0B7F  3001               	movlw	1
  9135  0B80                     u3135:	
  9136  0B80  35B3               	lslf	___ftdiv@f1,f
  9137  0B81  0DB4               	rlf	___ftdiv@f1+1,f
  9138  0B82  0DB5               	rlf	___ftdiv@f1+2,f
  9139  0B83  0B89               	decfsz	9,f
  9140  0B84  2B80               	goto	u3135
  9141  0B85  3001               	movlw	1
  9142  0B86  02BA               	subwf	___ftdiv@cntr,f
  9143  0B87  1D03               	btfss	3,2
  9144  0B88  2B66               	goto	l2821
  9145  0B89  083B               	movf	___ftdiv@f3,w
  9146  0B8A  00F0               	movwf	___ftpack@arg
  9147  0B8B  083C               	movf	___ftdiv@f3+1,w
  9148  0B8C  00F1               	movwf	___ftpack@arg+1
  9149  0B8D  083D               	movf	___ftdiv@f3+2,w
  9150  0B8E  00F2               	movwf	___ftpack@arg+2
  9151  0B8F  083E               	movf	___ftdiv@exp,w
  9152  0B90  00B6               	movwf	??___ftdiv
  9153  0B91  0836               	movf	??___ftdiv,w
  9154  0B92  00F3               	movwf	___ftpack@exp
  9155  0B93  083F               	movf	___ftdiv@sign,w
  9156  0B94  00B7               	movwf	??___ftdiv+1
  9157  0B95  0837               	movf	??___ftdiv+1,w
  9158  0B96  00F4               	movwf	___ftpack@sign
  9159  0B97  3189  2105         	fcall	___ftpack
  9160  0B99  0870               	movf	?___ftpack,w
  9161  0B9A  0020               	movlb	0	; select bank0
  9162  0B9B  00B0               	movwf	?___ftdiv
  9163  0B9C  0871               	movf	?___ftpack+1,w
  9164  0B9D  00B1               	movwf	?___ftdiv+1
  9165  0B9E  0872               	movf	?___ftpack+2,w
  9166  0B9F  00B2               	movwf	?___ftdiv+2
  9167  0BA0  0008               	return
  9168  0BA1                     __end_of___ftdiv:	
  9169                           
  9170                           	psect	text12
  9171  0905                     __ptext12:	
  9172 ;; *************** function ___ftpack *****************
  9173 ;; Defined at:
  9174 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;  arg             3    0[COMMON] unsigned um
  9177 ;;  exp             1    3[COMMON] unsigned char 
  9178 ;;  sign            1    4[COMMON] unsigned char 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;		None
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  3    0[COMMON] float 
  9183 ;; Registers used:
  9184 ;;		wreg, status,2, status,0
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9190 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;Total ram usage:        8 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; This function calls:
  9197 ;;		Nothing
  9198 ;; This function is called by:
  9199 ;;		___awtoft
  9200 ;;		___ftadd
  9201 ;;		___ftdiv
  9202 ;;		___ftmul
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           
  9207                           ;psect for function ___ftpack
  9208  0905                     ___ftpack:	
  9209                           
  9210                           ;incstack = 0
  9211                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9212  0905  0873               	movf	___ftpack@exp,w
  9213  0906  1903               	btfsc	3,2
  9214  0907  290D               	goto	l2143
  9215  0908  0872               	movf	___ftpack@arg+2,w
  9216  0909  0471               	iorwf	___ftpack@arg+1,w
  9217  090A  0470               	iorwf	___ftpack@arg,w
  9218  090B  1D03               	skipz
  9219  090C  291E               	goto	l2149
  9220  090D                     l2143:	
  9221  090D  3000               	movlw	0
  9222  090E  00F0               	movwf	?___ftpack
  9223  090F  3000               	movlw	0
  9224  0910  00F1               	movwf	?___ftpack+1
  9225  0911  3000               	movlw	0
  9226  0912  00F2               	movwf	?___ftpack+2
  9227  0913  0008               	return
  9228  0914                     l2147:	
  9229  0914  3001               	movlw	1
  9230  0915  00F5               	movwf	??___ftpack
  9231  0916  0875               	movf	??___ftpack,w
  9232  0917  07F3               	addwf	___ftpack@exp,f
  9233  0918  3001               	movlw	1
  9234  0919                     u1925:	
  9235  0919  36F2               	lsrf	___ftpack@arg+2,f
  9236  091A  0CF1               	rrf	___ftpack@arg+1,f
  9237  091B  0CF0               	rrf	___ftpack@arg,f
  9238  091C  0B89               	decfsz	9,f
  9239  091D  2919               	goto	u1925
  9240  091E                     l2149:	
  9241  091E  30FE               	movlw	254
  9242  091F  0572               	andwf	___ftpack@arg+2,w
  9243  0920  1903               	btfsc	3,2
  9244  0921  2937               	goto	l702
  9245  0922  2914               	goto	l2147
  9246  0923                     l2151:	
  9247  0923  3001               	movlw	1
  9248  0924  00F5               	movwf	??___ftpack
  9249  0925  0875               	movf	??___ftpack,w
  9250  0926  07F3               	addwf	___ftpack@exp,f
  9251  0927  3001               	movlw	1
  9252  0928  07F0               	addwf	___ftpack@arg,f
  9253  0929  3000               	movlw	0
  9254  092A  1803               	skipnc
  9255  092B  3001               	movlw	1
  9256  092C  07F1               	addwf	___ftpack@arg+1,f
  9257  092D  3000               	movlw	0
  9258  092E  1803               	skipnc
  9259  092F  3001               	movlw	1
  9260  0930  07F2               	addwf	___ftpack@arg+2,f
  9261  0931  3001               	movlw	1
  9262  0932                     u1945:	
  9263  0932  36F2               	lsrf	___ftpack@arg+2,f
  9264  0933  0CF1               	rrf	___ftpack@arg+1,f
  9265  0934  0CF0               	rrf	___ftpack@arg,f
  9266  0935  0B89               	decfsz	9,f
  9267  0936  2932               	goto	u1945
  9268  0937                     l702:	
  9269  0937  30FF               	movlw	255
  9270  0938  0572               	andwf	___ftpack@arg+2,w
  9271  0939  1903               	btfsc	3,2
  9272  093A  2944               	goto	l2159
  9273  093B  2923               	goto	l2151
  9274  093C                     l2157:	
  9275  093C  3001               	movlw	1
  9276  093D  02F3               	subwf	___ftpack@exp,f
  9277  093E  3001               	movlw	1
  9278  093F                     u1965:	
  9279  093F  35F0               	lslf	___ftpack@arg,f
  9280  0940  0DF1               	rlf	___ftpack@arg+1,f
  9281  0941  0DF2               	rlf	___ftpack@arg+2,f
  9282  0942  0B89               	decfsz	9,f
  9283  0943  293F               	goto	u1965
  9284  0944                     l2159:	
  9285  0944  1BF1               	btfsc	___ftpack@arg+1,7
  9286  0945  294A               	goto	l709
  9287  0946  3002               	movlw	2
  9288  0947  0273               	subwf	___ftpack@exp,w
  9289  0948  1803               	skipnc
  9290  0949  293C               	goto	l2157
  9291  094A                     l709:	
  9292  094A  1873               	btfsc	___ftpack@exp,0
  9293  094B  2952               	goto	l710
  9294  094C  30FF               	movlw	255
  9295  094D  05F0               	andwf	___ftpack@arg,f
  9296  094E  307F               	movlw	127
  9297  094F  05F1               	andwf	___ftpack@arg+1,f
  9298  0950  30FF               	movlw	255
  9299  0951  05F2               	andwf	___ftpack@arg+2,f
  9300  0952                     l710:	
  9301  0952  1003               	clrc
  9302  0953  0CF3               	rrf	___ftpack@exp,f
  9303  0954  0873               	movf	___ftpack@exp,w
  9304  0955  00F5               	movwf	??___ftpack
  9305  0956  01F6               	clrf	??___ftpack+1
  9306  0957  01F7               	clrf	??___ftpack+2
  9307  0958  3010               	movlw	16
  9308  0959                     u2005:	
  9309  0959  35F5               	lslf	??___ftpack,f
  9310  095A  0DF6               	rlf	??___ftpack+1,f
  9311  095B  0DF7               	rlf	??___ftpack+2,f
  9312  095C  0B89               	decfsz	9,f
  9313  095D  2959               	goto	u2005
  9314  095E  0875               	movf	??___ftpack,w
  9315  095F  04F0               	iorwf	___ftpack@arg,f
  9316  0960  0876               	movf	??___ftpack+1,w
  9317  0961  04F1               	iorwf	___ftpack@arg+1,f
  9318  0962  0877               	movf	??___ftpack+2,w
  9319  0963  04F2               	iorwf	___ftpack@arg+2,f
  9320  0964  0874               	movf	___ftpack@sign,w
  9321  0965  1903               	btfsc	3,2
  9322  0966  0008               	return
  9323  0967  17F2               	bsf	___ftpack@arg+2,7
  9324  0968  0008               	return
  9325  0969                     __end_of___ftpack:	
  9326                           
  9327                           	psect	text13
  9328  0EC4                     __ptext13:	
  9329 ;; *************** function _readAnalog *****************
  9330 ;; Defined at:
  9331 ;;		line 34 in file "adc.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  channel         2    6[BANK0 ] int 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;  value           2   11[COMMON] int 
  9336 ;;  analog_chann    2    9[COMMON] int 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  2    6[BANK0 ] int 
  9339 ;; Registers used:
  9340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;Total ram usage:       22 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    1
  9353 ;; This function calls:
  9354 ;;		_ADCRead
  9355 ;;		___aldiv
  9356 ;;		___wmul
  9357 ;; This function is called by:
  9358 ;;		_main
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           
  9362                           
  9363                           ;psect for function _readAnalog
  9364  0EC4                     _readAnalog:	
  9365                           
  9366                           ;adc.c: 36: int value;
  9367                           ;adc.c: 38: int analog_channel = channels[channel];
  9368                           
  9369                           ;incstack = 0
  9370                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9371  0EC4  0020               	movlb	0	; select bank0
  9372  0EC5  3526               	lslf	readAnalog@channel,w
  9373  0EC6  3ECA               	addlw	(low (_channels| 0))& (0+255)
  9374  0EC7  0086               	movwf	6
  9375  0EC8  0187               	clrf	7
  9376  0EC9  3F40               	moviw [0]fsr1
  9377  0ECA  00F9               	movwf	readAnalog@analog_channel
  9378  0ECB  3F41               	moviw [1]fsr1
  9379  0ECC  00FA               	movwf	readAnalog@analog_channel+1
  9380                           
  9381                           ;adc.c: 40: value = ADCRead(analog_channel);
  9382  0ECD  0879               	movf	readAnalog@analog_channel,w
  9383  0ECE  3188  2001  318E   	fcall	_ADCRead
  9384  0ED1  0871               	movf	?_ADCRead+1,w
  9385  0ED2  00FC               	movwf	readAnalog@value+1
  9386  0ED3  0870               	movf	?_ADCRead,w
  9387  0ED4  00FB               	movwf	readAnalog@value
  9388                           
  9389                           ;adc.c: 42: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9390  0ED5  0020               	movlb	0	; select bank0
  9391  0ED6  0826               	movf	readAnalog@channel,w
  9392  0ED7  00A8               	movwf	??_readAnalog
  9393  0ED8  3001               	movlw	1
  9394  0ED9                     u3265:	
  9395  0ED9  35A8               	lslf	??_readAnalog,f
  9396  0EDA  3EFF               	addlw	-1
  9397  0EDB  1D03               	skipz
  9398  0EDC  2ED9               	goto	u3265
  9399  0EDD  3528               	lslf	??_readAnalog,w
  9400  0EDE  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9401  0EDF  0086               	movwf	6
  9402  0EE0  0187               	clrf	7
  9403  0EE1  3F40               	moviw [0]fsr1
  9404  0EE2  00A9               	movwf	??_readAnalog+1
  9405  0EE3  3F41               	moviw [1]fsr1
  9406  0EE4  00AA               	movwf	??_readAnalog+2
  9407  0EE5  3F42               	moviw [2]fsr1
  9408  0EE6  00AB               	movwf	??_readAnalog+3
  9409  0EE7  3F43               	moviw [3]fsr1
  9410  0EE8  00AC               	movwf	??_readAnalog+4
  9411  0EE9  0021               	movlb	1	; select bank1
  9412  0EEA  0846               	movf	(_sampleIndex+1)^(0+128),w
  9413  0EEB  0020               	movlb	0	; select bank0
  9414  0EEC  00AE               	movwf	??_readAnalog+6
  9415  0EED  0021               	movlb	1	; select bank1
  9416  0EEE  0845               	movf	_sampleIndex^(0+128),w
  9417  0EEF  0020               	movlb	0	; select bank0
  9418  0EF0  00AD               	movwf	??_readAnalog+5
  9419  0EF1  35AD               	lslf	??_readAnalog+5,f
  9420  0EF2  0DAE               	rlf	??_readAnalog+6,f
  9421  0EF3  0827               	movf	readAnalog@channel+1,w
  9422  0EF4  00F1               	movwf	___wmul@multiplier+1
  9423  0EF5  0826               	movf	readAnalog@channel,w
  9424  0EF6  00F0               	movwf	___wmul@multiplier
  9425  0EF7  303C               	movlw	60
  9426  0EF8  00F2               	movwf	___wmul@multiplicand
  9427  0EF9  3000               	movlw	0
  9428  0EFA  00F3               	movwf	___wmul@multiplicand+1
  9429  0EFB  3180  2004  318E   	fcall	___wmul
  9430  0EFE  3078               	movlw	120
  9431  0EFF  0020               	movlb	0	; select bank0
  9432  0F00  00AF               	movwf	??_readAnalog+7
  9433  0F01  3023               	movlw	35
  9434  0F02  00B0               	movwf	??_readAnalog+8
  9435  0F03  0870               	movf	?___wmul,w
  9436  0F04  072F               	addwf	??_readAnalog+7,w
  9437  0F05  00B1               	movwf	??_readAnalog+9
  9438  0F06  0871               	movf	?___wmul+1,w
  9439  0F07  3D30               	addwfc	??_readAnalog+8,w
  9440  0F08  00B2               	movwf	??_readAnalog+10
  9441  0F09  0831               	movf	??_readAnalog+9,w
  9442  0F0A  072D               	addwf	??_readAnalog+5,w
  9443  0F0B  0084               	movwf	4
  9444  0F0C  0832               	movf	??_readAnalog+10,w
  9445  0F0D  3D2E               	addwfc	??_readAnalog+6,w
  9446  0F0E  0085               	movwf	5
  9447  0F0F  3F00               	moviw [0]fsr0
  9448  0F10  00B3               	movwf	??_readAnalog+11
  9449  0F11  3F01               	moviw [1]fsr0
  9450  0F12  00B4               	movwf	??_readAnalog+12
  9451  0F13  01B5               	clrf	??_readAnalog+13
  9452  0F14  01B6               	clrf	??_readAnalog+14
  9453  0F15  09B3               	comf	??_readAnalog+11,f
  9454  0F16  09B4               	comf	??_readAnalog+12,f
  9455  0F17  09B5               	comf	??_readAnalog+13,f
  9456  0F18  09B6               	comf	??_readAnalog+14,f
  9457  0F19  0AB3               	incf	??_readAnalog+11,f
  9458  0F1A  1903               	skipnz
  9459  0F1B  0AB4               	incf	??_readAnalog+12,f
  9460  0F1C  1903               	skipnz
  9461  0F1D  0AB5               	incf	??_readAnalog+13,f
  9462  0F1E  1903               	skipnz
  9463  0F1F  0AB6               	incf	??_readAnalog+14,f
  9464  0F20  0833               	movf	??_readAnalog+11,w
  9465  0F21  07A9               	addwf	??_readAnalog+1,f
  9466  0F22  0834               	movf	??_readAnalog+12,w
  9467  0F23  3DAA               	addwfc	??_readAnalog+2,f
  9468  0F24  0835               	movf	??_readAnalog+13,w
  9469  0F25  3DAB               	addwfc	??_readAnalog+3,f
  9470  0F26  0836               	movf	??_readAnalog+14,w
  9471  0F27  3DAC               	addwfc	??_readAnalog+4,f
  9472  0F28  0826               	movf	readAnalog@channel,w
  9473  0F29  00B7               	movwf	??_readAnalog+15
  9474  0F2A  3001               	movlw	1
  9475  0F2B                     u3275:	
  9476  0F2B  35B7               	lslf	??_readAnalog+15,f
  9477  0F2C  3EFF               	addlw	-1
  9478  0F2D  1D03               	skipz
  9479  0F2E  2F2B               	goto	u3275
  9480  0F2F  3537               	lslf	??_readAnalog+15,w
  9481  0F30  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9482  0F31  0086               	movwf	6
  9483  0F32  0187               	clrf	7
  9484  0F33  0829               	movf	??_readAnalog+1,w
  9485  0F34  3FC0               	movwi [0]fsr1
  9486  0F35  082A               	movf	??_readAnalog+2,w
  9487  0F36  3FC1               	movwi [1]fsr1
  9488  0F37  082B               	movf	??_readAnalog+3,w
  9489  0F38  3FC2               	movwi [2]fsr1
  9490  0F39  082C               	movf	??_readAnalog+4,w
  9491  0F3A  3FC3               	movwi [3]fsr1
  9492                           
  9493                           ;adc.c: 44: samples[channel][sampleIndex] = value;
  9494  0F3B  0021               	movlb	1	; select bank1
  9495  0F3C  0846               	movf	(_sampleIndex+1)^(0+128),w
  9496  0F3D  0020               	movlb	0	; select bank0
  9497  0F3E  00A9               	movwf	??_readAnalog+1
  9498  0F3F  0021               	movlb	1	; select bank1
  9499  0F40  0845               	movf	_sampleIndex^(0+128),w
  9500  0F41  0020               	movlb	0	; select bank0
  9501  0F42  00A8               	movwf	??_readAnalog
  9502  0F43  35A8               	lslf	??_readAnalog,f
  9503  0F44  0DA9               	rlf	??_readAnalog+1,f
  9504  0F45  0827               	movf	readAnalog@channel+1,w
  9505  0F46  00F1               	movwf	___wmul@multiplier+1
  9506  0F47  0826               	movf	readAnalog@channel,w
  9507  0F48  00F0               	movwf	___wmul@multiplier
  9508  0F49  303C               	movlw	60
  9509  0F4A  00F2               	movwf	___wmul@multiplicand
  9510  0F4B  3000               	movlw	0
  9511  0F4C  00F3               	movwf	___wmul@multiplicand+1
  9512  0F4D  3180  2004  318E   	fcall	___wmul
  9513  0F50  3078               	movlw	120
  9514  0F51  0020               	movlb	0	; select bank0
  9515  0F52  00AA               	movwf	??_readAnalog+2
  9516  0F53  3023               	movlw	35
  9517  0F54  00AB               	movwf	??_readAnalog+3
  9518  0F55  0870               	movf	?___wmul,w
  9519  0F56  072A               	addwf	??_readAnalog+2,w
  9520  0F57  00AC               	movwf	??_readAnalog+4
  9521  0F58  0871               	movf	?___wmul+1,w
  9522  0F59  3D2B               	addwfc	??_readAnalog+3,w
  9523  0F5A  00AD               	movwf	??_readAnalog+5
  9524  0F5B  0828               	movf	??_readAnalog,w
  9525  0F5C  072C               	addwf	??_readAnalog+4,w
  9526  0F5D  0086               	movwf	6
  9527  0F5E  0829               	movf	??_readAnalog+1,w
  9528  0F5F  3D2D               	addwfc	??_readAnalog+5,w
  9529  0F60  0087               	movwf	7
  9530  0F61  087B               	movf	readAnalog@value,w
  9531  0F62  3FC0               	movwi [0]fsr1
  9532  0F63  087C               	movf	readAnalog@value+1,w
  9533  0F64  3FC1               	movwi [1]fsr1
  9534                           
  9535                           ;adc.c: 46: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9536  0F65  0826               	movf	readAnalog@channel,w
  9537  0F66  00A8               	movwf	??_readAnalog
  9538  0F67  3001               	movlw	1
  9539  0F68                     u3285:	
  9540  0F68  35A8               	lslf	??_readAnalog,f
  9541  0F69  3EFF               	addlw	-1
  9542  0F6A  1D03               	skipz
  9543  0F6B  2F68               	goto	u3285
  9544  0F6C  3528               	lslf	??_readAnalog,w
  9545  0F6D  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9546  0F6E  0086               	movwf	6
  9547  0F6F  0187               	clrf	7
  9548  0F70  3F40               	moviw [0]fsr1
  9549  0F71  00A9               	movwf	??_readAnalog+1
  9550  0F72  3F41               	moviw [1]fsr1
  9551  0F73  00AA               	movwf	??_readAnalog+2
  9552  0F74  3F42               	moviw [2]fsr1
  9553  0F75  00AB               	movwf	??_readAnalog+3
  9554  0F76  3F43               	moviw [3]fsr1
  9555  0F77  00AC               	movwf	??_readAnalog+4
  9556  0F78  0021               	movlb	1	; select bank1
  9557  0F79  0846               	movf	(_sampleIndex+1)^(0+128),w
  9558  0F7A  0020               	movlb	0	; select bank0
  9559  0F7B  00AE               	movwf	??_readAnalog+6
  9560  0F7C  0021               	movlb	1	; select bank1
  9561  0F7D  0845               	movf	_sampleIndex^(0+128),w
  9562  0F7E  0020               	movlb	0	; select bank0
  9563  0F7F  00AD               	movwf	??_readAnalog+5
  9564  0F80  35AD               	lslf	??_readAnalog+5,f
  9565  0F81  0DAE               	rlf	??_readAnalog+6,f
  9566  0F82  0827               	movf	readAnalog@channel+1,w
  9567  0F83  00F1               	movwf	___wmul@multiplier+1
  9568  0F84  0826               	movf	readAnalog@channel,w
  9569  0F85  00F0               	movwf	___wmul@multiplier
  9570  0F86  303C               	movlw	60
  9571  0F87  00F2               	movwf	___wmul@multiplicand
  9572  0F88  3000               	movlw	0
  9573  0F89  00F3               	movwf	___wmul@multiplicand+1
  9574  0F8A  3180  2004  318E   	fcall	___wmul
  9575  0F8D  3078               	movlw	120
  9576  0F8E  0020               	movlb	0	; select bank0
  9577  0F8F  00AF               	movwf	??_readAnalog+7
  9578  0F90  3023               	movlw	35
  9579  0F91  00B0               	movwf	??_readAnalog+8
  9580  0F92  0870               	movf	?___wmul,w
  9581  0F93  072F               	addwf	??_readAnalog+7,w
  9582  0F94  00B1               	movwf	??_readAnalog+9
  9583  0F95  0871               	movf	?___wmul+1,w
  9584  0F96  3D30               	addwfc	??_readAnalog+8,w
  9585  0F97  00B2               	movwf	??_readAnalog+10
  9586  0F98  0831               	movf	??_readAnalog+9,w
  9587  0F99  072D               	addwf	??_readAnalog+5,w
  9588  0F9A  0084               	movwf	4
  9589  0F9B  0832               	movf	??_readAnalog+10,w
  9590  0F9C  3D2E               	addwfc	??_readAnalog+6,w
  9591  0F9D  0085               	movwf	5
  9592  0F9E  3F00               	moviw [0]fsr0
  9593  0F9F  00B3               	movwf	??_readAnalog+11
  9594  0FA0  3F01               	moviw [1]fsr0
  9595  0FA1  00B4               	movwf	??_readAnalog+12
  9596  0FA2  01B5               	clrf	??_readAnalog+13
  9597  0FA3  01B6               	clrf	??_readAnalog+14
  9598  0FA4  0833               	movf	??_readAnalog+11,w
  9599  0FA5  07A9               	addwf	??_readAnalog+1,f
  9600  0FA6  0834               	movf	??_readAnalog+12,w
  9601  0FA7  3DAA               	addwfc	??_readAnalog+2,f
  9602  0FA8  0835               	movf	??_readAnalog+13,w
  9603  0FA9  3DAB               	addwfc	??_readAnalog+3,f
  9604  0FAA  0836               	movf	??_readAnalog+14,w
  9605  0FAB  3DAC               	addwfc	??_readAnalog+4,f
  9606  0FAC  0826               	movf	readAnalog@channel,w
  9607  0FAD  00B7               	movwf	??_readAnalog+15
  9608  0FAE  3001               	movlw	1
  9609  0FAF                     u3295:	
  9610  0FAF  35B7               	lslf	??_readAnalog+15,f
  9611  0FB0  3EFF               	addlw	-1
  9612  0FB1  1D03               	skipz
  9613  0FB2  2FAF               	goto	u3295
  9614  0FB3  3537               	lslf	??_readAnalog+15,w
  9615  0FB4  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9616  0FB5  0086               	movwf	6
  9617  0FB6  0187               	clrf	7
  9618  0FB7  0829               	movf	??_readAnalog+1,w
  9619  0FB8  3FC0               	movwi [0]fsr1
  9620  0FB9  082A               	movf	??_readAnalog+2,w
  9621  0FBA  3FC1               	movwi [1]fsr1
  9622  0FBB  082B               	movf	??_readAnalog+3,w
  9623  0FBC  3FC2               	movwi [2]fsr1
  9624  0FBD  082C               	movf	??_readAnalog+4,w
  9625  0FBE  3FC3               	movwi [3]fsr1
  9626                           
  9627                           ;adc.c: 48: if(channel>=(2-1))
  9628  0FBF  0827               	movf	readAnalog@channel+1,w
  9629  0FC0  3A80               	xorlw	128
  9630  0FC1  00A8               	movwf	??_readAnalog
  9631  0FC2  3080               	movlw	128
  9632  0FC3  0228               	subwf	??_readAnalog,w
  9633  0FC4  1D03               	skipz
  9634  0FC5  2FC8               	goto	u3305
  9635  0FC6  3001               	movlw	1
  9636  0FC7  0226               	subwf	readAnalog@channel,w
  9637  0FC8                     u3305:	
  9638  0FC8  1C03               	skipc
  9639  0FC9  2FD8               	goto	l2901
  9640                           
  9641                           ;adc.c: 49: {
  9642                           ;adc.c: 50: sampleIndex+=1;
  9643  0FCA  3001               	movlw	1
  9644  0FCB  0021               	movlb	1	; select bank1
  9645  0FCC  07C5               	addwf	_sampleIndex^(0+128),f
  9646  0FCD  3000               	movlw	0
  9647  0FCE  3DC6               	addwfc	(_sampleIndex+1)^(0+128),f
  9648                           
  9649                           ;adc.c: 51: if(sampleIndex >= 30)sampleIndex = 0;
  9650  0FCF  3000               	movlw	0
  9651  0FD0  0246               	subwf	(_sampleIndex+1)^(0+128),w
  9652  0FD1  301E               	movlw	30
  9653  0FD2  1903               	skipnz
  9654  0FD3  0245               	subwf	_sampleIndex^(0+128),w
  9655  0FD4  1C03               	skipc
  9656  0FD5  2FD8               	goto	l2901
  9657  0FD6  01C5               	clrf	_sampleIndex^(0+128)
  9658  0FD7  01C6               	clrf	(_sampleIndex+1)^(0+128)
  9659  0FD8                     l2901:	
  9660                           
  9661                           ;adc.c: 52: }
  9662                           ;adc.c: 54: value = totals[channel]/30;
  9663  0FD8  3000               	movlw	0
  9664  0FD9  00F3               	movwf	___aldiv@divisor+3
  9665  0FDA  3000               	movlw	0
  9666  0FDB  00F2               	movwf	___aldiv@divisor+2
  9667  0FDC  3000               	movlw	0
  9668  0FDD  00F1               	movwf	___aldiv@divisor+1
  9669  0FDE  301E               	movlw	30
  9670  0FDF  00F0               	movwf	___aldiv@divisor
  9671  0FE0  0020               	movlb	0	; select bank0
  9672  0FE1  0826               	movf	readAnalog@channel,w
  9673  0FE2  00A8               	movwf	??_readAnalog
  9674  0FE3  3001               	movlw	1
  9675  0FE4                     u3325:	
  9676  0FE4  35A8               	lslf	??_readAnalog,f
  9677  0FE5  3EFF               	addlw	-1
  9678  0FE6  1D03               	skipz
  9679  0FE7  2FE4               	goto	u3325
  9680  0FE8  3528               	lslf	??_readAnalog,w
  9681  0FE9  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9682  0FEA  0086               	movwf	6
  9683  0FEB  0187               	clrf	7
  9684  0FEC  3F40               	moviw [0]fsr1
  9685  0FED  00F4               	movwf	___aldiv@dividend
  9686  0FEE  3F41               	moviw [1]fsr1
  9687  0FEF  00F5               	movwf	___aldiv@dividend+1
  9688  0FF0  3F42               	moviw [2]fsr1
  9689  0FF1  00F6               	movwf	___aldiv@dividend+2
  9690  0FF2  3F43               	moviw [3]fsr1
  9691  0FF3  00F7               	movwf	___aldiv@dividend+3
  9692  0FF4  3189  2169         	fcall	___aldiv
  9693  0FF6  0871               	movf	?___aldiv+1,w
  9694  0FF7  00FC               	movwf	readAnalog@value+1
  9695  0FF8  0870               	movf	?___aldiv,w
  9696  0FF9  00FB               	movwf	readAnalog@value
  9697                           
  9698                           ;adc.c: 56: return value;
  9699  0FFA  087C               	movf	readAnalog@value+1,w
  9700  0FFB  0020               	movlb	0	; select bank0
  9701  0FFC  00A7               	movwf	?_readAnalog+1
  9702  0FFD  087B               	movf	readAnalog@value,w
  9703  0FFE  00A6               	movwf	?_readAnalog
  9704  0FFF  0008               	return
  9705  1000                     __end_of_readAnalog:	
  9706                           
  9707                           	psect	text14
  9708  0969                     __ptext14:	
  9709 ;; *************** function ___aldiv *****************
  9710 ;; Defined at:
  9711 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  divisor         4    0[COMMON] long 
  9714 ;;  dividend        4    4[COMMON] long 
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;  quotient        4    2[BANK0 ] long 
  9717 ;;  sign            1    1[BANK0 ] unsigned char 
  9718 ;;  counter         1    0[BANK0 ] unsigned char 
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  4    0[COMMON] long 
  9721 ;; Registers used:
  9722 ;;		wreg, status,2, status,0
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9728 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9731 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9732 ;;Total ram usage:       15 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; This function calls:
  9735 ;;		Nothing
  9736 ;; This function is called by:
  9737 ;;		_readAnalog
  9738 ;;		_main
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           
  9743                           ;psect for function ___aldiv
  9744  0969                     ___aldiv:	
  9745                           
  9746                           ;incstack = 0
  9747                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9748  0969  0020               	movlb	0	; select bank0
  9749  096A  01A1               	clrf	___aldiv@sign
  9750  096B  1FF3               	btfss	___aldiv@divisor+3,7
  9751  096C  297A               	goto	l596
  9752  096D  09F0               	comf	___aldiv@divisor,f
  9753  096E  09F1               	comf	___aldiv@divisor+1,f
  9754  096F  09F2               	comf	___aldiv@divisor+2,f
  9755  0970  09F3               	comf	___aldiv@divisor+3,f
  9756  0971  0AF0               	incf	___aldiv@divisor,f
  9757  0972  1903               	skipnz
  9758  0973  0AF1               	incf	___aldiv@divisor+1,f
  9759  0974  1903               	skipnz
  9760  0975  0AF2               	incf	___aldiv@divisor+2,f
  9761  0976  1903               	skipnz
  9762  0977  0AF3               	incf	___aldiv@divisor+3,f
  9763  0978  01A1               	clrf	___aldiv@sign
  9764  0979  0AA1               	incf	___aldiv@sign,f
  9765  097A                     l596:	
  9766  097A  1FF7               	btfss	___aldiv@dividend+3,7
  9767  097B  298B               	goto	l2765
  9768  097C  09F4               	comf	___aldiv@dividend,f
  9769  097D  09F5               	comf	___aldiv@dividend+1,f
  9770  097E  09F6               	comf	___aldiv@dividend+2,f
  9771  097F  09F7               	comf	___aldiv@dividend+3,f
  9772  0980  0AF4               	incf	___aldiv@dividend,f
  9773  0981  1903               	skipnz
  9774  0982  0AF5               	incf	___aldiv@dividend+1,f
  9775  0983  1903               	skipnz
  9776  0984  0AF6               	incf	___aldiv@dividend+2,f
  9777  0985  1903               	skipnz
  9778  0986  0AF7               	incf	___aldiv@dividend+3,f
  9779  0987  3001               	movlw	1
  9780  0988  00F8               	movwf	??___aldiv
  9781  0989  0878               	movf	??___aldiv,w
  9782  098A  06A1               	xorwf	___aldiv@sign,f
  9783  098B                     l2765:	
  9784  098B  3000               	movlw	0
  9785  098C  00A5               	movwf	___aldiv@quotient+3
  9786  098D  3000               	movlw	0
  9787  098E  00A4               	movwf	___aldiv@quotient+2
  9788  098F  3000               	movlw	0
  9789  0990  00A3               	movwf	___aldiv@quotient+1
  9790  0991  3000               	movlw	0
  9791  0992  00A2               	movwf	___aldiv@quotient
  9792  0993  0873               	movf	___aldiv@divisor+3,w
  9793  0994  0472               	iorwf	___aldiv@divisor+2,w
  9794  0995  0471               	iorwf	___aldiv@divisor+1,w
  9795  0996  0470               	iorwf	___aldiv@divisor,w
  9796  0997  1903               	skipnz
  9797  0998  29D4               	goto	l2787
  9798  0999  01A0               	clrf	___aldiv@counter
  9799  099A  0AA0               	incf	___aldiv@counter,f
  9800  099B                     l2773:	
  9801  099B  1BF3               	btfsc	___aldiv@divisor+3,7
  9802  099C  29A9               	goto	l2775
  9803  099D  3001               	movlw	1
  9804  099E                     u3005:	
  9805  099E  35F0               	lslf	___aldiv@divisor,f
  9806  099F  0DF1               	rlf	___aldiv@divisor+1,f
  9807  09A0  0DF2               	rlf	___aldiv@divisor+2,f
  9808  09A1  0DF3               	rlf	___aldiv@divisor+3,f
  9809  09A2  0B89               	decfsz	9,f
  9810  09A3  299E               	goto	u3005
  9811  09A4  3001               	movlw	1
  9812  09A5  00F8               	movwf	??___aldiv
  9813  09A6  0878               	movf	??___aldiv,w
  9814  09A7  07A0               	addwf	___aldiv@counter,f
  9815  09A8  299B               	goto	l2773
  9816  09A9                     l2775:	
  9817  09A9  3001               	movlw	1
  9818  09AA                     u3025:	
  9819  09AA  35A2               	lslf	___aldiv@quotient,f
  9820  09AB  0DA3               	rlf	___aldiv@quotient+1,f
  9821  09AC  0DA4               	rlf	___aldiv@quotient+2,f
  9822  09AD  0DA5               	rlf	___aldiv@quotient+3,f
  9823  09AE  0B89               	decfsz	9,f
  9824  09AF  29AA               	goto	u3025
  9825  09B0  0873               	movf	___aldiv@divisor+3,w
  9826  09B1  0277               	subwf	___aldiv@dividend+3,w
  9827  09B2  1D03               	skipz
  9828  09B3  29BE               	goto	u3035
  9829  09B4  0872               	movf	___aldiv@divisor+2,w
  9830  09B5  0276               	subwf	___aldiv@dividend+2,w
  9831  09B6  1D03               	skipz
  9832  09B7  29BE               	goto	u3035
  9833  09B8  0871               	movf	___aldiv@divisor+1,w
  9834  09B9  0275               	subwf	___aldiv@dividend+1,w
  9835  09BA  1D03               	skipz
  9836  09BB  29BE               	goto	u3035
  9837  09BC  0870               	movf	___aldiv@divisor,w
  9838  09BD  0274               	subwf	___aldiv@dividend,w
  9839  09BE                     u3035:	
  9840  09BE  1C03               	skipc
  9841  09BF  29C9               	goto	l2783
  9842  09C0  0870               	movf	___aldiv@divisor,w
  9843  09C1  02F4               	subwf	___aldiv@dividend,f
  9844  09C2  0871               	movf	___aldiv@divisor+1,w
  9845  09C3  3BF5               	subwfb	___aldiv@dividend+1,f
  9846  09C4  0872               	movf	___aldiv@divisor+2,w
  9847  09C5  3BF6               	subwfb	___aldiv@dividend+2,f
  9848  09C6  0873               	movf	___aldiv@divisor+3,w
  9849  09C7  3BF7               	subwfb	___aldiv@dividend+3,f
  9850  09C8  1422               	bsf	___aldiv@quotient,0
  9851  09C9                     l2783:	
  9852  09C9  3001               	movlw	1
  9853  09CA                     u3045:	
  9854  09CA  36F3               	lsrf	___aldiv@divisor+3,f
  9855  09CB  0CF2               	rrf	___aldiv@divisor+2,f
  9856  09CC  0CF1               	rrf	___aldiv@divisor+1,f
  9857  09CD  0CF0               	rrf	___aldiv@divisor,f
  9858  09CE  0B89               	decfsz	9,f
  9859  09CF  29CA               	goto	u3045
  9860  09D0  3001               	movlw	1
  9861  09D1  02A0               	subwf	___aldiv@counter,f
  9862  09D2  1D03               	btfss	3,2
  9863  09D3  29A9               	goto	l2775
  9864  09D4                     l2787:	
  9865  09D4  0821               	movf	___aldiv@sign,w
  9866  09D5  1903               	btfsc	3,2
  9867  09D6  29E2               	goto	l2791
  9868  09D7  09A2               	comf	___aldiv@quotient,f
  9869  09D8  09A3               	comf	___aldiv@quotient+1,f
  9870  09D9  09A4               	comf	___aldiv@quotient+2,f
  9871  09DA  09A5               	comf	___aldiv@quotient+3,f
  9872  09DB  0AA2               	incf	___aldiv@quotient,f
  9873  09DC  1903               	skipnz
  9874  09DD  0AA3               	incf	___aldiv@quotient+1,f
  9875  09DE  1903               	skipnz
  9876  09DF  0AA4               	incf	___aldiv@quotient+2,f
  9877  09E0  1903               	skipnz
  9878  09E1  0AA5               	incf	___aldiv@quotient+3,f
  9879  09E2                     l2791:	
  9880  09E2  0825               	movf	___aldiv@quotient+3,w
  9881  09E3  00F3               	movwf	?___aldiv+3
  9882  09E4  0824               	movf	___aldiv@quotient+2,w
  9883  09E5  00F2               	movwf	?___aldiv+2
  9884  09E6  0823               	movf	___aldiv@quotient+1,w
  9885  09E7  00F1               	movwf	?___aldiv+1
  9886  09E8  0822               	movf	___aldiv@quotient,w
  9887  09E9  00F0               	movwf	?___aldiv
  9888  09EA  0008               	return
  9889  09EB                     __end_of___aldiv:	
  9890                           
  9891                           	psect	text15
  9892  0801                     __ptext15:	
  9893 ;; *************** function _ADCRead *****************
  9894 ;; Defined at:
  9895 ;;		line 16 in file "adc.c"
  9896 ;; Parameters:    Size  Location     Type
  9897 ;;  channel         1    wreg     enum E13559
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;  channel         1    3[COMMON] enum E13559
  9900 ;; Return value:  Size  Location     Type
  9901 ;;                  2    0[COMMON] unsigned int 
  9902 ;; Registers used:
  9903 ;;		wreg
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9909 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9912 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9913 ;;Total ram usage:        4 bytes
  9914 ;; Hardware stack levels used:    1
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_readAnalog
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           
  9923                           ;psect for function _ADCRead
  9924  0801                     _ADCRead:	
  9925                           
  9926                           ;incstack = 0
  9927                           ; Regs used in _ADCRead: [wreg]
  9928                           ;ADCRead@channel stored from wreg
  9929  0801  00F3               	movwf	ADCRead@channel
  9930                           
  9931                           ;adc.c: 18: ADPCH = channel;
  9932  0802  0873               	movf	ADCRead@channel,w
  9933  0803  0021               	movlb	1	; select bank1
  9934  0804  009E               	movwf	30	;volatile
  9935                           
  9936                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9937  0805  1793               	bsf	19,7	;volatile
  9938                           
  9939                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9940  0806  1313               	bcf	19,6	;volatile
  9941                           
  9942                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9943  0807  1413               	bsf	19,0	;volatile
  9944  0808                     l55:	
  9945                           ;adc.c: 27: {
  9946                           
  9947                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9948                           
  9949  0808  1813               	btfsc	19,0	;volatile
  9950  0809  2808               	goto	l55
  9951                           
  9952                           ;adc.c: 28: }
  9953                           ;adc.c: 30: return ((ADRESH<<8)+ADRESL);
  9954  080A  080D               	movf	13,w	;volatile
  9955  080B  00F1               	movwf	?_ADCRead+1
  9956  080C  080C               	movf	12,w	;volatile
  9957  080D  00F0               	movwf	?_ADCRead
  9958  080E  0008               	return
  9959  080F                     __end_of_ADCRead:	
  9960                           
  9961                           	psect	text16
  9962  02AA                     __ptext16:	
  9963 ;; *************** function _menuChoice *****************
  9964 ;; Defined at:
  9965 ;;		line 52 in file "menu.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;		None
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;		None
  9970 ;; Return value:  Size  Location     Type
  9971 ;;                  1    wreg      void 
  9972 ;; Registers used:
  9973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9982 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9983 ;;Total ram usage:        5 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; Hardware stack levels required when called:    3
  9986 ;; This function calls:
  9987 ;;		_LCD_Clear
  9988 ;;		_LCD_Set_Cursor
  9989 ;;		_LCD_Write_Char
  9990 ;;		_LCD_Write_Int
  9991 ;;		_LCD_Write_String
  9992 ;;		_PWM7_LoadDutyValue
  9993 ;;		_readKey
  9994 ;; This function is called by:
  9995 ;;		_main
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           
 10000                           ;psect for function _menuChoice
 10001  02AA                     _menuChoice:	
 10002  02AA                     l3033:	
 10003                           ;menu.c: 54: while(RB2 != 1)
 10004                           
 10005                           ;incstack = 0
 10006                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10007                           
 10008  02AA  0020               	movlb	0	; select bank0
 10009  02AB  190D               	btfsc	13,2	;volatile
 10010  02AC  2B02               	goto	l3035
 10011                           
 10012                           ;menu.c: 55: {
 10013                           ;menu.c: 56: choice = readKey();
 10014  02AD  3195  25A9  3182   	fcall	_readKey
 10015  02B0  0020               	movlb	0	; select bank0
 10016  02B1  00AE               	movwf	??_menuChoice
 10017  02B2  082E               	movf	??_menuChoice,w
 10018  02B3  00EC               	movwf	_choice
 10019                           
 10020                           ;menu.c: 58: if(timer > 4000)
 10021  02B4  0021               	movlb	1	; select bank1
 10022  02B5  0848               	movf	(_timer+1)^(0+128),w
 10023  02B6  3A80               	xorlw	128
 10024  02B7  0020               	movlb	0	; select bank0
 10025  02B8  00AE               	movwf	??_menuChoice
 10026  02B9  308F               	movlw	143
 10027  02BA  022E               	subwf	??_menuChoice,w
 10028  02BB  1D03               	skipz
 10029  02BC  2AC0               	goto	u3455
 10030  02BD  30A1               	movlw	161
 10031  02BE  0021               	movlb	1	; select bank1
 10032  02BF  0247               	subwf	_timer^(0+128),w
 10033  02C0                     u3455:	
 10034  02C0  1C03               	skipc
 10035  02C1  2AC6               	goto	l3011
 10036                           
 10037                           ;menu.c: 59: {
 10038                           ;menu.c: 60: timer = 0;
 10039  02C2  0021               	movlb	1	; select bank1
 10040  02C3  01C7               	clrf	_timer^(0+128)
 10041  02C4  01C8               	clrf	(_timer+1)^(0+128)
 10042                           
 10043                           ;menu.c: 61: goto Exit;
 10044  02C5  2CDA               	goto	l3143
 10045  02C6                     l3011:	
 10046                           
 10047                           ;menu.c: 62: }
 10048                           ;menu.c: 64: if(timer2>125){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}
      +                          else { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
 10049  02C6  307E               	movlw	126
 10050  02C7  0020               	movlb	0	; select bank0
 10051  02C8  026F               	subwf	_timer2,w
 10052  02C9  1C03               	skipc
 10053  02CA  2AD4               	goto	l3017
 10054  02CB  01F4               	clrf	LCD_Set_Cursor@y
 10055  02CC  3000               	movlw	0
 10056  02CD  3197  277F  3182   	fcall	_LCD_Set_Cursor
 10057  02D0  305F               	movlw	low (STR_3| (0+32768))
 10058  02D1  00F5               	movwf	LCD_Write_String@a
 10059  02D2  3090               	movlw	high (STR_3| (0+32768))
 10060  02D3  2ADC               	goto	L3
 10061  02D4                     l3017:	
 10062  02D4  01F4               	clrf	LCD_Set_Cursor@y
 10063  02D5  3000               	movlw	0
 10064  02D6  3197  277F  3182   	fcall	_LCD_Set_Cursor
 10065  02D9  304E               	movlw	low (STR_4| (0+32768))
 10066  02DA  00F5               	movwf	LCD_Write_String@a
 10067  02DB  3090               	movlw	high (STR_4| (0+32768))
 10068  02DC                     L3:	
 10069  02DC  00F6               	movwf	LCD_Write_String@a+1
 10070  02DD  3196  262E  3182   	fcall	_LCD_Write_String
 10071                           
 10072                           ;menu.c: 66: { LCD_Set_Cursor(0,1); LCD_Write_String(desc[choice]);};
 10073  02E0  01F4               	clrf	LCD_Set_Cursor@y
 10074  02E1  0AF4               	incf	LCD_Set_Cursor@y,f
 10075  02E2  3000               	movlw	0
 10076  02E3  3197  277F  3182   	fcall	_LCD_Set_Cursor
 10077  02E6  0020               	movlb	0	; select bank0
 10078  02E7  356C               	lslf	_choice,w
 10079  02E8  3ECE               	addlw	(low (_desc| 0))& (0+255)
 10080  02E9  0086               	movwf	6
 10081  02EA  0187               	clrf	7
 10082  02EB  3F40               	moviw [0]fsr1
 10083  02EC  00F5               	movwf	LCD_Write_String@a
 10084  02ED  3F41               	moviw [1]fsr1
 10085  02EE  00F6               	movwf	LCD_Write_String@a+1
 10086  02EF  3196  262E  3182   	fcall	_LCD_Write_String
 10087                           
 10088                           ;menu.c: 68: if(timer2>249)timer2=0;
 10089  02F2  30FA               	movlw	250
 10090  02F3  0020               	movlb	0	; select bank0
 10091  02F4  026F               	subwf	_timer2,w
 10092  02F5  1803               	btfsc	3,0
 10093  02F6  01EF               	clrf	_timer2
 10094                           
 10095                           ;menu.c: 70: timer+=1;
 10096  02F7  3001               	movlw	1
 10097  02F8  0021               	movlb	1	; select bank1
 10098  02F9  07C7               	addwf	_timer^(0+128),f
 10099  02FA  3000               	movlw	0
 10100  02FB  3DC8               	addwfc	(_timer+1)^(0+128),f
 10101                           
 10102                           ;menu.c: 71: timer2+=1;
 10103  02FC  3001               	movlw	1
 10104  02FD  0020               	movlb	0	; select bank0
 10105  02FE  00AE               	movwf	??_menuChoice
 10106  02FF  082E               	movf	??_menuChoice,w
 10107  0300  07EF               	addwf	_timer2,f
 10108  0301  2AAA               	goto	l3033
 10109  0302                     l3035:	
 10110                           
 10111                           ;menu.c: 72: }
 10112                           ;menu.c: 73: timer=0;
 10113  0302  0021               	movlb	1	; select bank1
 10114  0303  01C7               	clrf	_timer^(0+128)
 10115  0304  01C8               	clrf	(_timer+1)^(0+128)
 10116                           
 10117                           ;menu.c: 74: timer2=0;
 10118  0305  0020               	movlb	0	; select bank0
 10119  0306  01EF               	clrf	_timer2
 10120                           
 10121                           ;menu.c: 76: _delay((unsigned long)((1000)*(32000000/4000.0)));
 10122  0307  3029               	movlw	41
 10123  0308  00B0               	movwf	??_menuChoice+2
 10124  0309  3096               	movlw	150
 10125  030A  00AF               	movwf	??_menuChoice+1
 10126  030B  30A6               	movlw	166
 10127  030C  00AE               	movwf	??_menuChoice
 10128  030D                     u3827:	
 10129  030D  0BAE               	decfsz	??_menuChoice,f
 10130  030E  2B0D               	goto	u3827
 10131  030F  0BAF               	decfsz	??_menuChoice+1,f
 10132  0310  2B0D               	goto	u3827
 10133  0311  0BB0               	decfsz	??_menuChoice+2,f
 10134  0312  2B0D               	goto	u3827
 10135                           
 10136                           ;menu.c: 78: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1, 
      +                          0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10137  0313  0020               	movlb	0	; select bank0
 10138  0314  086C               	movf	_choice,w
 10139  0315  1D03               	btfss	3,2
 10140  0316  2B2C               	goto	l3045
 10141  0317  01F4               	clrf	LCD_Set_Cursor@y
 10142  0318  0AF4               	incf	LCD_Set_Cursor@y,f
 10143  0319  300A               	movlw	10
 10144  031A  3197  277F  3182   	fcall	_LCD_Set_Cursor
 10145  031D  0020               	movlb	0	; select bank0
 10146  031E  356C               	lslf	_choice,w
 10147  031F  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10148  0320  0086               	movwf	6
 10149  0321  3001               	movlw	1	; select bank2/3
 10150  0322  0087               	movwf	7
 10151  0323  3F40               	moviw [0]fsr1
 10152  0324  00F9               	movwf	LCD_Write_Int@value
 10153  0325  3F41               	moviw [1]fsr1
 10154  0326  00FA               	movwf	LCD_Write_Int@value+1
 10155  0327  01FB               	clrf	LCD_Write_Int@fieldLength
 10156  0328  03FB               	decf	LCD_Write_Int@fieldLength,f
 10157  0329  01FC               	clrf	LCD_Write_Int@numPlaces
 10158  032A  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10159  032B  2B3F               	goto	L4
 10160  032C                     l3045:	
 10161  032C  01F4               	clrf	LCD_Set_Cursor@y
 10162  032D  0AF4               	incf	LCD_Set_Cursor@y,f
 10163  032E  300A               	movlw	10
 10164  032F  3197  277F  3182   	fcall	_LCD_Set_Cursor
 10165  0332  0020               	movlb	0	; select bank0
 10166  0333  356C               	lslf	_choice,w
 10167  0334  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10168  0335  0086               	movwf	6
 10169  0336  3001               	movlw	1	; select bank2/3
 10170  0337  0087               	movwf	7
 10171  0338  3F40               	moviw [0]fsr1
 10172  0339  00F9               	movwf	LCD_Write_Int@value
 10173  033A  3F41               	moviw [1]fsr1
 10174  033B  00FA               	movwf	LCD_Write_Int@value+1
 10175  033C  01FB               	clrf	LCD_Write_Int@fieldLength
 10176  033D  03FB               	decf	LCD_Write_Int@fieldLength,f
 10177  033E  01FC               	clrf	LCD_Write_Int@numPlaces
 10178  033F                     L4:	
 10179  033F  01FD               	clrf	LCD_Write_Int@sign
 10180  0340  318D  2505  3182   	fcall	_LCD_Write_Int
 10181                           
 10182                           ;menu.c: 80: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10183  0343  3052               	movlw	82
 10184  0344  0020               	movlb	0	; select bank0
 10185  0345  00B0               	movwf	??_menuChoice+2
 10186  0346  302C               	movlw	44
 10187  0347  00AF               	movwf	??_menuChoice+1
 10188  0348  304F               	movlw	79
 10189  0349  00AE               	movwf	??_menuChoice
 10190  034A                     u3837:	
 10191  034A  0BAE               	decfsz	??_menuChoice,f
 10192  034B  2B4A               	goto	u3837
 10193  034C  0BAF               	decfsz	??_menuChoice+1,f
 10194  034D  2B4A               	goto	u3837
 10195  034E  0BB0               	decfsz	??_menuChoice+2,f
 10196  034F  2B4A               	goto	u3837
 10197  0350  3200               	nop2
 10198                           
 10199                           ;menu.c: 82: while(RB2 != 1)
 10200  0351  2CAC               	goto	l3141
 10201  0352                     l3061:	
 10202                           ;menu.c: 89: goto Exit;
 10203                           
 10204                           
 10205                           ;menu.c: 90: }
 10206                           ;menu.c: 91: _delay((unsigned long)((2)*(32000000/4000.0)));
 10207  0352  3015               	movlw	21
 10208  0353  0020               	movlb	0	; select bank0
 10209  0354  00AF               	movwf	??_menuChoice+1
 10210  0355  30C6               	movlw	198
 10211  0356  00AE               	movwf	??_menuChoice
 10212  0357                     u3857:	
 10213  0357  0BAE               	decfsz	??_menuChoice,f
 10214  0358  2B57               	goto	u3857
 10215  0359  0BAF               	decfsz	??_menuChoice+1,f
 10216  035A  2B57               	goto	u3857
 10217  035B  0000               	nop
 10218                           
 10219                           ;menu.c: 92: timer+=1;
 10220  035C  3001               	movlw	1
 10221  035D  0021               	movlb	1	; select bank1
 10222  035E  07C7               	addwf	_timer^(0+128),f
 10223  035F  3000               	movlw	0
 10224  0360  3DC8               	addwfc	(_timer+1)^(0+128),f
 10225                           
 10226                           ;menu.c: 94: if(RB0==1)
 10227  0361  0020               	movlb	0	; select bank0
 10228  0362  1C0D               	btfss	13,0	;volatile
 10229  0363  2BF4               	goto	l3095
 10230                           
 10231                           ;menu.c: 95: {
 10232                           ;menu.c: 96: delayCount+=2;
 10233  0364  3002               	movlw	2
 10234  0365  00AE               	movwf	??_menuChoice
 10235  0366  082E               	movf	??_menuChoice,w
 10236  0367  07ED               	addwf	_delayCount,f
 10237                           
 10238                           ;menu.c: 98: setpoint[choice]+=1;
 10239  0368  356C               	lslf	_choice,w
 10240  0369  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10241  036A  0086               	movwf	6
 10242  036B  3001               	movlw	1	; select bank2/3
 10243  036C  0087               	movwf	7
 10244  036D  3001               	movlw	1
 10245  036E  0781               	addwf	1,f
 10246  036F  3141               	addfsr 1,1
 10247  0370  1803               	skipnc
 10248  0371  0A81               	incf	1,f
 10249                           
 10250                           ;menu.c: 99: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[choi
      +                          ce];
 10251  0372  356C               	lslf	_choice,w
 10252  0373  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10253  0374  0086               	movwf	6
 10254  0375  3001               	movlw	1	; select bank2/3
 10255  0376  0087               	movwf	7
 10256  0377  3F40               	moviw [0]fsr1
 10257  0378  00AE               	movwf	??_menuChoice
 10258  0379  3F41               	moviw [1]fsr1
 10259  037A  00AF               	movwf	??_menuChoice+1
 10260  037B  356C               	lslf	_choice,w
 10261  037C  3ED2               	addlw	(low (_highRangeSet| 0))& (0+255)
 10262  037D  0086               	movwf	6
 10263  037E  0187               	clrf	7
 10264  037F  3F40               	moviw [0]fsr1
 10265  0380  00B0               	movwf	??_menuChoice+2
 10266  0381  3F41               	moviw [1]fsr1
 10267  0382  00B1               	movwf	??_menuChoice+3
 10268  0383  0831               	movf	??_menuChoice+3,w
 10269  0384  3A80               	xorlw	128
 10270  0385  00B2               	movwf	??_menuChoice+4
 10271  0386  082F               	movf	??_menuChoice+1,w
 10272  0387  3A80               	xorlw	128
 10273  0388  0232               	subwf	??_menuChoice+4,w
 10274  0389  1D03               	skipz
 10275  038A  2B8D               	goto	u3525
 10276  038B  082E               	movf	??_menuChoice,w
 10277  038C  0230               	subwf	??_menuChoice+2,w
 10278  038D                     u3525:	
 10279  038D  1803               	skipnc
 10280  038E  2B9D               	goto	l3073
 10281  038F  0020               	movlb	0	; select bank0
 10282  0390  356C               	lslf	_choice,w
 10283  0391  3ED2               	addlw	(low (_highRangeSet| 0))& (0+255)
 10284  0392  0086               	movwf	6
 10285  0393  0187               	clrf	7
 10286  0394  356C               	lslf	_choice,w
 10287  0395  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10288  0396  0084               	movwf	4
 10289  0397  3001               	movlw	1	; select bank2/3
 10290  0398  0085               	movwf	5
 10291  0399  3F40               	moviw [0]fsr1
 10292  039A  3F80               	movwi [0]fsr0
 10293  039B  3F41               	moviw [1]fsr1
 10294  039C  3F81               	movwi [1]fsr0
 10295  039D                     l3073:	
 10296                           
 10297                           ;menu.c: 100: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10298  039D  0020               	movlb	0	; select bank0
 10299  039E  086C               	movf	_choice,w
 10300  039F  1D03               	btfss	3,2
 10301  03A0  2BB6               	goto	l3079
 10302  03A1  01F4               	clrf	LCD_Set_Cursor@y
 10303  03A2  0AF4               	incf	LCD_Set_Cursor@y,f
 10304  03A3  300A               	movlw	10
 10305  03A4  3197  277F  3182   	fcall	_LCD_Set_Cursor
 10306  03A7  0020               	movlb	0	; select bank0
 10307  03A8  356C               	lslf	_choice,w
 10308  03A9  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10309  03AA  0086               	movwf	6
 10310  03AB  3001               	movlw	1	; select bank2/3
 10311  03AC  0087               	movwf	7
 10312  03AD  3F40               	moviw [0]fsr1
 10313  03AE  00F9               	movwf	LCD_Write_Int@value
 10314  03AF  3F41               	moviw [1]fsr1
 10315  03B0  00FA               	movwf	LCD_Write_Int@value+1
 10316  03B1  01FB               	clrf	LCD_Write_Int@fieldLength
 10317  03B2  03FB               	decf	LCD_Write_Int@fieldLength,f
 10318  03B3  01FC               	clrf	LCD_Write_Int@numPlaces
 10319  03B4  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10320  03B5  2BC9               	goto	L5
 10321  03B6                     l3079:	
 10322  03B6  01F4               	clrf	LCD_Set_Cursor@y
 10323  03B7  0AF4               	incf	LCD_Set_Cursor@y,f
 10324  03B8  300A               	movlw	10
 10325  03B9  3197  277F  3182   	fcall	_LCD_Set_Cursor
 10326  03BC  0020               	movlb	0	; select bank0
 10327  03BD  356C               	lslf	_choice,w
 10328  03BE  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10329  03BF  0086               	movwf	6
 10330  03C0  3001               	movlw	1	; select bank2/3
 10331  03C1  0087               	movwf	7
 10332  03C2  3F40               	moviw [0]fsr1
 10333  03C3  00F9               	movwf	LCD_Write_Int@value
 10334  03C4  3F41               	moviw [1]fsr1
 10335  03C5  00FA               	movwf	LCD_Write_Int@value+1
 10336  03C6  01FB               	clrf	LCD_Write_Int@fieldLength
 10337  03C7  03FB               	decf	LCD_Write_Int@fieldLength,f
 10338  03C8  01FC               	clrf	LCD_Write_Int@numPlaces
 10339  03C9                     L5:	
 10340  03C9  01FD               	clrf	LCD_Write_Int@sign
 10341  03CA  318D  2505  3182   	fcall	_LCD_Write_Int
 10342                           
 10343                           ;menu.c: 101: LCD_Write_Char(' ');
 10344  03CD  3020               	movlw	32
 10345  03CE  3196  26AC  3182   	fcall	_LCD_Write_Char
 10346                           
 10347                           ;menu.c: 102: menuDelay=1255;
 10348  03D1  30E7               	movlw	231
 10349  03D2  0021               	movlb	1	; select bank1
 10350  03D3  00BF               	movwf	_menuDelay^(0+128)
 10351  03D4  3004               	movlw	4
 10352  03D5  00C0               	movwf	(_menuDelay^(0+128)+1)
 10353                           
 10354                           ;menu.c: 103: if(delayCount<30)
 10355  03D6  301E               	movlw	30
 10356  03D7  0020               	movlb	0	; select bank0
 10357  03D8  026D               	subwf	_delayCount,w
 10358  03D9  1803               	skipnc
 10359  03DA  2BE8               	goto	l379
 10360                           
 10361                           ;menu.c: 104: {
 10362                           ;menu.c: 105: _delay((unsigned long)((150)*(32000000/4000.0)));
 10363  03DB  3007               	movlw	7
 10364  03DC  00B0               	movwf	??_menuChoice+2
 10365  03DD  3017               	movlw	23
 10366  03DE  00AF               	movwf	??_menuChoice+1
 10367  03DF  306F               	movlw	111
 10368  03E0  00AE               	movwf	??_menuChoice
 10369  03E1                     u3867:	
 10370  03E1  0BAE               	decfsz	??_menuChoice,f
 10371  03E2  2BE1               	goto	u3867
 10372  03E3  0BAF               	decfsz	??_menuChoice+1,f
 10373  03E4  2BE1               	goto	u3867
 10374  03E5  0BB0               	decfsz	??_menuChoice+2,f
 10375  03E6  2BE1               	goto	u3867
 10376  03E7  0000               	nop
 10377  03E8                     l379:	
 10378                           
 10379                           ;menu.c: 106: }
 10380                           ;menu.c: 107: if(delayCount>(30+10))delayCount=(30+10);
 10381  03E8  3029               	movlw	41
 10382  03E9  0020               	movlb	0	; select bank0
 10383  03EA  026D               	subwf	_delayCount,w
 10384  03EB  1C03               	skipc
 10385  03EC  2BF1               	goto	l3093
 10386  03ED  3028               	movlw	40
 10387  03EE  00AE               	movwf	??_menuChoice
 10388  03EF  082E               	movf	??_menuChoice,w
 10389  03F0  00ED               	movwf	_delayCount
 10390  03F1                     l3093:	
 10391                           
 10392                           ;menu.c: 109: timer=0;
 10393  03F1  0021               	movlb	1	; select bank1
 10394  03F2  01C7               	clrf	_timer^(0+128)
 10395  03F3  01C8               	clrf	(_timer+1)^(0+128)
 10396  03F4                     l3095:	
 10397                           
 10398                           ;menu.c: 110: }
 10399                           ;menu.c: 113: if(RB1==1)
 10400  03F4  0020               	movlb	0	; select bank0
 10401  03F5  1C8D               	btfss	13,1	;volatile
 10402  03F6  2C88               	goto	l3127
 10403                           
 10404                           ;menu.c: 114: {
 10405                           ;menu.c: 115: delayCount+=2;
 10406  03F7  3002               	movlw	2
 10407  03F8  00AE               	movwf	??_menuChoice
 10408  03F9  082E               	movf	??_menuChoice,w
 10409  03FA  07ED               	addwf	_delayCount,f
 10410                           
 10411                           ;menu.c: 116: setpoint[choice]-=1;
 10412  03FB  356C               	lslf	_choice,w
 10413  03FC  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10414  03FD  0086               	movwf	6
 10415  03FE  3001               	movlw	1	; select bank2/3
 10416  03FF  0087               	movwf	7
 10417  0400  30FF               	movlw	255
 10418  0401  0781               	addwf	1,f
 10419  0402  3141               	addfsr 1,1
 10420  0403  30FF               	movlw	255
 10421  0404  3D81               	addwfc	1,f
 10422  0405  317F               	addfsr 1,-1
 10423                           
 10424                           ;menu.c: 117: if(setpoint[choice]<lowRangeSet[choice])setpoint[choice]=lowRangeSet[choic
      +                          e];
 10425  0406  356C               	lslf	_choice,w
 10426  0407  3ED6               	addlw	(low (_lowRangeSet| 0))& (0+255)
 10427  0408  0086               	movwf	6
 10428  0409  0187               	clrf	7
 10429  040A  3F40               	moviw [0]fsr1
 10430  040B  00AE               	movwf	??_menuChoice
 10431  040C  3F41               	moviw [1]fsr1
 10432  040D  00AF               	movwf	??_menuChoice+1
 10433  040E  356C               	lslf	_choice,w
 10434  040F  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10435  0410  0086               	movwf	6
 10436  0411  3001               	movlw	1	; select bank2/3
 10437  0412  0087               	movwf	7
 10438  0413  3F40               	moviw [0]fsr1
 10439  0414  00B0               	movwf	??_menuChoice+2
 10440  0415  3F41               	moviw [1]fsr1
 10441  0416  00B1               	movwf	??_menuChoice+3
 10442  0417  0831               	movf	??_menuChoice+3,w
 10443  0418  3A80               	xorlw	128
 10444  0419  00B2               	movwf	??_menuChoice+4
 10445  041A  082F               	movf	??_menuChoice+1,w
 10446  041B  3A80               	xorlw	128
 10447  041C  0232               	subwf	??_menuChoice+4,w
 10448  041D  1D03               	skipz
 10449  041E  2C21               	goto	u3575
 10450  041F  082E               	movf	??_menuChoice,w
 10451  0420  0230               	subwf	??_menuChoice+2,w
 10452  0421                     u3575:	
 10453  0421  1803               	skipnc
 10454  0422  2C31               	goto	l3105
 10455  0423  0020               	movlb	0	; select bank0
 10456  0424  356C               	lslf	_choice,w
 10457  0425  3ED6               	addlw	(low (_lowRangeSet| 0))& (0+255)
 10458  0426  0086               	movwf	6
 10459  0427  0187               	clrf	7
 10460  0428  356C               	lslf	_choice,w
 10461  0429  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10462  042A  0084               	movwf	4
 10463  042B  3001               	movlw	1	; select bank2/3
 10464  042C  0085               	movwf	5
 10465  042D  3F40               	moviw [0]fsr1
 10466  042E  3F80               	movwi [0]fsr0
 10467  042F  3F41               	moviw [1]fsr1
 10468  0430  3F81               	movwi [1]fsr0
 10469  0431                     l3105:	
 10470                           
 10471                           ;menu.c: 118: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10472  0431  0020               	movlb	0	; select bank0
 10473  0432  086C               	movf	_choice,w
 10474  0433  1D03               	btfss	3,2
 10475  0434  2C4A               	goto	l3111
 10476  0435  01F4               	clrf	LCD_Set_Cursor@y
 10477  0436  0AF4               	incf	LCD_Set_Cursor@y,f
 10478  0437  300A               	movlw	10
 10479  0438  3197  277F  3182   	fcall	_LCD_Set_Cursor
 10480  043B  0020               	movlb	0	; select bank0
 10481  043C  356C               	lslf	_choice,w
 10482  043D  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10483  043E  0086               	movwf	6
 10484  043F  3001               	movlw	1	; select bank2/3
 10485  0440  0087               	movwf	7
 10486  0441  3F40               	moviw [0]fsr1
 10487  0442  00F9               	movwf	LCD_Write_Int@value
 10488  0443  3F41               	moviw [1]fsr1
 10489  0444  00FA               	movwf	LCD_Write_Int@value+1
 10490  0445  01FB               	clrf	LCD_Write_Int@fieldLength
 10491  0446  03FB               	decf	LCD_Write_Int@fieldLength,f
 10492  0447  01FC               	clrf	LCD_Write_Int@numPlaces
 10493  0448  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10494  0449  2C5D               	goto	L6
 10495  044A                     l3111:	
 10496  044A  01F4               	clrf	LCD_Set_Cursor@y
 10497  044B  0AF4               	incf	LCD_Set_Cursor@y,f
 10498  044C  300A               	movlw	10
 10499  044D  3197  277F  3182   	fcall	_LCD_Set_Cursor
 10500  0450  0020               	movlb	0	; select bank0
 10501  0451  356C               	lslf	_choice,w
 10502  0452  3E69               	addlw	(low (_setpoint| (0+256)))& (0+255)
 10503  0453  0086               	movwf	6
 10504  0454  3001               	movlw	1	; select bank2/3
 10505  0455  0087               	movwf	7
 10506  0456  3F40               	moviw [0]fsr1
 10507  0457  00F9               	movwf	LCD_Write_Int@value
 10508  0458  3F41               	moviw [1]fsr1
 10509  0459  00FA               	movwf	LCD_Write_Int@value+1
 10510  045A  01FB               	clrf	LCD_Write_Int@fieldLength
 10511  045B  03FB               	decf	LCD_Write_Int@fieldLength,f
 10512  045C  01FC               	clrf	LCD_Write_Int@numPlaces
 10513  045D                     L6:	
 10514  045D  01FD               	clrf	LCD_Write_Int@sign
 10515  045E  318D  2505  3182   	fcall	_LCD_Write_Int
 10516                           
 10517                           ;menu.c: 119: LCD_Write_Char(' ');
 10518  0461  3020               	movlw	32
 10519  0462  3196  26AC  3182   	fcall	_LCD_Write_Char
 10520                           
 10521                           ;menu.c: 120: menuDelay=1255;
 10522  0465  30E7               	movlw	231
 10523  0466  0021               	movlb	1	; select bank1
 10524  0467  00BF               	movwf	_menuDelay^(0+128)
 10525  0468  3004               	movlw	4
 10526  0469  00C0               	movwf	(_menuDelay^(0+128)+1)
 10527                           
 10528                           ;menu.c: 122: if(delayCount<30)
 10529  046A  301E               	movlw	30
 10530  046B  0020               	movlb	0	; select bank0
 10531  046C  026D               	subwf	_delayCount,w
 10532  046D  1803               	skipnc
 10533  046E  2C7C               	goto	l385
 10534                           
 10535                           ;menu.c: 123: {
 10536                           ;menu.c: 124: _delay((unsigned long)((150)*(32000000/4000.0)));
 10537  046F  3007               	movlw	7
 10538  0470  00B0               	movwf	??_menuChoice+2
 10539  0471  3017               	movlw	23
 10540  0472  00AF               	movwf	??_menuChoice+1
 10541  0473  306F               	movlw	111
 10542  0474  00AE               	movwf	??_menuChoice
 10543  0475                     u3877:	
 10544  0475  0BAE               	decfsz	??_menuChoice,f
 10545  0476  2C75               	goto	u3877
 10546  0477  0BAF               	decfsz	??_menuChoice+1,f
 10547  0478  2C75               	goto	u3877
 10548  0479  0BB0               	decfsz	??_menuChoice+2,f
 10549  047A  2C75               	goto	u3877
 10550  047B  0000               	nop
 10551  047C                     l385:	
 10552                           
 10553                           ;menu.c: 125: }
 10554                           ;menu.c: 127: if(delayCount>(30+10))delayCount=(30+10);
 10555  047C  3029               	movlw	41
 10556  047D  0020               	movlb	0	; select bank0
 10557  047E  026D               	subwf	_delayCount,w
 10558  047F  1C03               	skipc
 10559  0480  2C85               	goto	l3125
 10560  0481  3028               	movlw	40
 10561  0482  00AE               	movwf	??_menuChoice
 10562  0483  082E               	movf	??_menuChoice,w
 10563  0484  00ED               	movwf	_delayCount
 10564  0485                     l3125:	
 10565                           
 10566                           ;menu.c: 129: timer=0;
 10567  0485  0021               	movlb	1	; select bank1
 10568  0486  01C7               	clrf	_timer^(0+128)
 10569  0487  01C8               	clrf	(_timer+1)^(0+128)
 10570  0488                     l3127:	
 10571                           
 10572                           ;menu.c: 130: }
 10573                           ;menu.c: 132: PWM7_LoadDutyValue(setpoint[1]);
 10574  0488  0022               	movlb	2	; select bank2
 10575  0489  086C               	movf	((_setpoint+1)^(0+256)+2),w
 10576  048A  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
 10577  048B  086B               	movf	(_setpoint^(0+256)+2),w
 10578  048C  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
 10579  048D  3195  25D0  3182   	fcall	_PWM7_LoadDutyValue
 10580                           
 10581                           ;menu.c: 135: if(delayCount>0)delayCount-=1;
 10582  0490  0020               	movlb	0	; select bank0
 10583  0491  086D               	movf	_delayCount,w
 10584  0492  1903               	btfsc	3,2
 10585  0493  2C96               	goto	l3133
 10586  0494  3001               	movlw	1
 10587  0495  02ED               	subwf	_delayCount,f
 10588  0496                     l3133:	
 10589                           
 10590                           ;menu.c: 137: if(!(RB1 || RB0))
 10591  0496  1C8D               	btfss	13,1	;volatile
 10592  0497  180D               	btfsc	13,0	;volatile
 10593  0498  2CAC               	goto	l3141
 10594                           
 10595                           ;menu.c: 138: {
 10596                           ;menu.c: 139: if(menuDelay>0)
 10597  0499  0021               	movlb	1	; select bank1
 10598  049A  0840               	movf	(_menuDelay+1)^(0+128),w
 10599  049B  3A80               	xorlw	128
 10600  049C  0020               	movlb	0	; select bank0
 10601  049D  00AE               	movwf	??_menuChoice
 10602  049E  3080               	movlw	128
 10603  049F  022E               	subwf	??_menuChoice,w
 10604  04A0  1D03               	skipz
 10605  04A1  2CA5               	goto	u3645
 10606  04A2  3001               	movlw	1
 10607  04A3  0021               	movlb	1	; select bank1
 10608  04A4  023F               	subwf	_menuDelay^(0+128),w
 10609  04A5                     u3645:	
 10610  04A5  1C03               	skipc
 10611  04A6  2CAC               	goto	l3141
 10612                           
 10613                           ;menu.c: 140: {
 10614                           ;menu.c: 141: menuDelay-=1;
 10615  04A7  30FF               	movlw	255
 10616  04A8  0021               	movlb	1	; select bank1
 10617  04A9  07BF               	addwf	_menuDelay^(0+128),f
 10618  04AA  30FF               	movlw	255
 10619  04AB  3DC0               	addwfc	(_menuDelay+1)^(0+128),f
 10620  04AC                     l3141:	
 10621  04AC  0020               	movlb	0	; select bank0
 10622  04AD  190D               	btfsc	13,2	;volatile
 10623  04AE  2CDA               	goto	l3143
 10624                           
 10625                           ;menu.c: 83: {
 10626                           ;menu.c: 84: if(timer > 4000)
 10627  04AF  0021               	movlb	1	; select bank1
 10628  04B0  0848               	movf	(_timer+1)^(0+128),w
 10629  04B1  3A80               	xorlw	128
 10630  04B2  0020               	movlb	0	; select bank0
 10631  04B3  00AE               	movwf	??_menuChoice
 10632  04B4  308F               	movlw	143
 10633  04B5  022E               	subwf	??_menuChoice,w
 10634  04B6  1D03               	skipz
 10635  04B7  2CBB               	goto	u3505
 10636  04B8  30A1               	movlw	161
 10637  04B9  0021               	movlb	1	; select bank1
 10638  04BA  0247               	subwf	_timer^(0+128),w
 10639  04BB                     u3505:	
 10640  04BB  1C03               	skipc
 10641  04BC  2B52               	goto	l3061
 10642                           
 10643                           ;menu.c: 85: {
 10644                           ;menu.c: 86: timer = 0;
 10645  04BD  0021               	movlb	1	; select bank1
 10646  04BE  01C7               	clrf	_timer^(0+128)
 10647  04BF  01C8               	clrf	(_timer+1)^(0+128)
 10648                           
 10649                           ;menu.c: 87: { LCD_Set_Cursor(0,0); LCD_Write_String("   Good-Bye!!   ");};
 10650  04C0  01F4               	clrf	LCD_Set_Cursor@y
 10651  04C1  3000               	movlw	0
 10652  04C2  3197  277F  3182   	fcall	_LCD_Set_Cursor
 10653  04C5  303D               	movlw	low (STR_5| (0+32768))
 10654  04C6  00F5               	movwf	LCD_Write_String@a
 10655  04C7  3090               	movlw	high (STR_5| (0+32768))
 10656  04C8  00F6               	movwf	LCD_Write_String@a+1
 10657  04C9  3196  262E  3182   	fcall	_LCD_Write_String
 10658                           
 10659                           ;menu.c: 88: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10660  04CC  3052               	movlw	82
 10661  04CD  0020               	movlb	0	; select bank0
 10662  04CE  00B0               	movwf	??_menuChoice+2
 10663  04CF  302C               	movlw	44
 10664  04D0  00AF               	movwf	??_menuChoice+1
 10665  04D1  304F               	movlw	79
 10666  04D2  00AE               	movwf	??_menuChoice
 10667  04D3                     u3847:	
 10668  04D3  0BAE               	decfsz	??_menuChoice,f
 10669  04D4  2CD3               	goto	u3847
 10670  04D5  0BAF               	decfsz	??_menuChoice+1,f
 10671  04D6  2CD3               	goto	u3847
 10672  04D7  0BB0               	decfsz	??_menuChoice+2,f
 10673  04D8  2CD3               	goto	u3847
 10674  04D9  3200               	nop2
 10675  04DA                     l3143:	
 10676                           ;menu.c: 142: }
 10677                           ;menu.c: 143: }
 10678                           ;menu.c: 144: }
 10679                           ;menu.c: 145: Exit:
 10680                           
 10681                           
 10682                           ;menu.c: 146: timer=0;
 10683  04DA  0021               	movlb	1	; select bank1
 10684  04DB  01C7               	clrf	_timer^(0+128)
 10685  04DC  01C8               	clrf	(_timer+1)^(0+128)
 10686                           
 10687                           ;menu.c: 147: loop=254;
 10688  04DD  30FE               	movlw	254
 10689  04DE  0020               	movlb	0	; select bank0
 10690  04DF  00AE               	movwf	??_menuChoice
 10691  04E0  082E               	movf	??_menuChoice,w
 10692  04E1  0022               	movlb	2	; select bank2
 10693  04E2  00EF               	movwf	_loop^(0+256)
 10694                           
 10695                           ;menu.c: 148: LCD_Clear();
 10696  04E3  3195  2557         	fcall	_LCD_Clear
 10697                           
 10698                           ;menu.c: 149: TRISC2 = 0;
 10699  04E5  0020               	movlb	0	; select bank0
 10700  04E6  1113               	bcf	19,2	;volatile
 10701  04E7  0008               	return
 10702  04E8                     __end_of_menuChoice:	
 10703                           
 10704                           	psect	text17
 10705  15A9                     __ptext17:	
 10706 ;; *************** function _readKey *****************
 10707 ;; Defined at:
 10708 ;;		line 37 in file "menu.c"
 10709 ;; Parameters:    Size  Location     Type
 10710 ;;		None
 10711 ;; Auto vars:     Size  Location     Type
 10712 ;;		None
 10713 ;; Return value:  Size  Location     Type
 10714 ;;                  1    wreg      unsigned char 
 10715 ;; Registers used:
 10716 ;;		wreg, status,2, status,0
 10717 ;; Tracked objects:
 10718 ;;		On entry : 0/0
 10719 ;;		On exit  : 0/0
 10720 ;;		Unchanged: 0/0
 10721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10726 ;;Total ram usage:        1 bytes
 10727 ;; Hardware stack levels used:    1
 10728 ;; This function calls:
 10729 ;;		Nothing
 10730 ;; This function is called by:
 10731 ;;		_menuChoice
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           
 10736                           ;psect for function _readKey
 10737  15A9                     _readKey:	
 10738                           
 10739                           ;menu.c: 39: if(RB1==1)
 10740                           
 10741                           ;incstack = 0
 10742                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10743  15A9  0020               	movlb	0	; select bank0
 10744  15AA  1C8D               	btfss	13,1	;volatile
 10745  15AB  2DB1               	goto	l2745
 10746                           
 10747                           ;menu.c: 40: {
 10748                           ;menu.c: 41: if(key>0)key-=1;
 10749  15AC  086E               	movf	_key,w
 10750  15AD  1903               	btfsc	3,2
 10751  15AE  2DB1               	goto	l2745
 10752  15AF  3001               	movlw	1
 10753  15B0  02EE               	subwf	_key,f
 10754  15B1                     l2745:	
 10755                           
 10756                           ;menu.c: 42: }
 10757                           ;menu.c: 44: if(RB0==1)
 10758  15B1  1C0D               	btfss	13,0	;volatile
 10759  15B2  2DBA               	goto	l2751
 10760                           
 10761                           ;menu.c: 45: {
 10762                           ;menu.c: 46: if(key<1)key+=1;
 10763  15B3  086E               	movf	_key,w
 10764  15B4  1D03               	btfss	3,2
 10765  15B5  2DBA               	goto	l2751
 10766  15B6  3001               	movlw	1
 10767  15B7  00F0               	movwf	??_readKey
 10768  15B8  0870               	movf	??_readKey,w
 10769  15B9  07EE               	addwf	_key,f
 10770  15BA                     l2751:	
 10771                           
 10772                           ;menu.c: 47: }
 10773                           ;menu.c: 49: return key;
 10774  15BA  086E               	movf	_key,w
 10775  15BB  0008               	return
 10776  15BC                     __end_of_readKey:	
 10777                           
 10778                           	psect	text18
 10779  15D0                     __ptext18:	
 10780 ;; *************** function _PWM7_LoadDutyValue *****************
 10781 ;; Defined at:
 10782 ;;		line 32 in file "pwm.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;		None
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      void 
 10789 ;; Registers used:
 10790 ;;		wreg, status,2, status,0
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;Total ram usage:        4 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; This function calls:
 10803 ;;		Nothing
 10804 ;; This function is called by:
 10805 ;;		_menuChoice
 10806 ;;		_main
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           
 10811                           ;psect for function _PWM7_LoadDutyValue
 10812  15D0                     _PWM7_LoadDutyValue:	
 10813                           
 10814                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10815                           
 10816                           ;incstack = 0
 10817                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10818  15D0  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10819  15D1  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10820  15D2  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10821  15D3  00F2               	movwf	??_PWM7_LoadDutyValue
 10822  15D4  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10823  15D5  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10824  15D6  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10825  15D7  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10826  15D8  0872               	movf	??_PWM7_LoadDutyValue,w
 10827  15D9  0027               	movlb	7	; select bank7
 10828  15DA  0091               	movwf	17	;volatile
 10829                           
 10830                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10831  15DB  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10832  15DC  3903               	andlw	3
 10833  15DD  00F2               	movwf	??_PWM7_LoadDutyValue
 10834  15DE  3005               	movlw	5
 10835  15DF                     u2905:	
 10836  15DF  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10837  15E0  3EFF               	addlw	-1
 10838  15E1  1D03               	skipz
 10839  15E2  2DDF               	goto	u2905
 10840  15E3  3572               	lslf	??_PWM7_LoadDutyValue,w
 10841  15E4  0090               	movwf	16	;volatile
 10842  15E5  0008               	return
 10843  15E6                     __end_of_PWM7_LoadDutyValue:	
 10844                           
 10845                           	psect	text19
 10846  162E                     __ptext19:	
 10847 ;; *************** function _LCD_Write_String *****************
 10848 ;; Defined at:
 10849 ;;		line 239 in file "lcd.c"
 10850 ;; Parameters:    Size  Location     Type
 10851 ;;  a               2    5[COMMON] PTR const unsigned char 
 10852 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 10853 ;;		 -> STR_3(17), STR_2(11), STR_1(11), 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;  i               2    8[COMMON] int 
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      void 
 10858 ;; Registers used:
 10859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;Total ram usage:        5 bytes
 10870 ;; Hardware stack levels used:    1
 10871 ;; Hardware stack levels required when called:    2
 10872 ;; This function calls:
 10873 ;;		_LCD_Write_Char
 10874 ;; This function is called by:
 10875 ;;		_menuChoice
 10876 ;;		_main
 10877 ;; This function uses a non-reentrant model
 10878 ;;
 10879                           
 10880                           
 10881                           ;psect for function _LCD_Write_String
 10882  162E                     _LCD_Write_String:	
 10883                           
 10884                           ;lcd.c: 241: int i;
 10885                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10886                           
 10887                           ;incstack = 0
 10888                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10889  162E  01F8               	clrf	LCD_Write_String@i
 10890  162F  01F9               	clrf	LCD_Write_String@i+1
 10891  1630                     l2597:	
 10892  1630  0875               	movf	LCD_Write_String@a,w
 10893  1631  0778               	addwf	LCD_Write_String@i,w
 10894  1632  0084               	movwf	4
 10895  1633  0876               	movf	LCD_Write_String@a+1,w
 10896  1634  3D79               	addwfc	LCD_Write_String@i+1,w
 10897  1635  0085               	movwf	5
 10898  1636  0012               	moviw fsr0++
 10899  1637  1903               	btfsc	3,2
 10900  1638  0008               	return
 10901                           
 10902                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10903  1639  0875               	movf	LCD_Write_String@a,w
 10904  163A  0778               	addwf	LCD_Write_String@i,w
 10905  163B  0084               	movwf	4
 10906  163C  0876               	movf	LCD_Write_String@a+1,w
 10907  163D  3D79               	addwfc	LCD_Write_String@i+1,w
 10908  163E  0085               	movwf	5
 10909  163F  0800               	movf	0,w	;code access
 10910  1640  3196  26AC  3196   	fcall	_LCD_Write_Char
 10911  1643  3001               	movlw	1
 10912  1644  07F8               	addwf	LCD_Write_String@i,f
 10913  1645  3000               	movlw	0
 10914  1646  3DF9               	addwfc	LCD_Write_String@i+1,f
 10915  1647  2E30               	goto	l2597
 10916  1648                     __end_of_LCD_Write_String:	
 10917                           
 10918                           	psect	text20
 10919  0D05                     __ptext20:	
 10920 ;; *************** function _LCD_Write_Int *****************
 10921 ;; Defined at:
 10922 ;;		line 246 in file "lcd.c"
 10923 ;; Parameters:    Size  Location     Type
 10924 ;;  value           2    9[COMMON] int 
 10925 ;;  fieldLength     1   11[COMMON] char 
 10926 ;;  numPlaces       1   12[COMMON] char 
 10927 ;;  sign            1   13[COMMON] char 
 10928 ;; Auto vars:     Size  Location     Type
 10929 ;;  str             5    5[BANK0 ] unsigned char [5]
 10930 ;;  i               2   12[BANK0 ] int 
 10931 ;;  j               2   10[BANK0 ] int 
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  1    wreg      void 
 10934 ;; Registers used:
 10935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10936 ;; Tracked objects:
 10937 ;;		On entry : 0/0
 10938 ;;		On exit  : 0/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10941 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;Total ram usage:       19 bytes
 10946 ;; Hardware stack levels used:    1
 10947 ;; Hardware stack levels required when called:    2
 10948 ;; This function calls:
 10949 ;;		_LCD_Write_Char
 10950 ;;		___awdiv
 10951 ;;		___awmod
 10952 ;; This function is called by:
 10953 ;;		_menuChoice
 10954 ;;		_main
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           
 10959                           ;psect for function _LCD_Write_Int
 10960  0D05                     _LCD_Write_Int:	
 10961                           
 10962                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10963                           
 10964                           ;incstack = 0
 10965                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10966  0D05  30A8               	movlw	low LCD_Write_Int@F13694
 10967  0D06  0086               	movwf	6
 10968  0D07  3000               	movlw	high LCD_Write_Int@F13694
 10969  0D08  0087               	movwf	7
 10970  0D09  3025               	movlw	low LCD_Write_Int@str
 10971  0D0A  0084               	movwf	4
 10972  0D0B  3000               	movlw	high LCD_Write_Int@str
 10973  0D0C  0085               	movwf	5
 10974  0D0D  3005               	movlw	5
 10975  0D0E  0020               	movlb	0	; select bank0
 10976  0D0F  00A0               	movwf	??_LCD_Write_Int
 10977  0D10                     u2790:	
 10978  0D10  0016               	moviw fsr1++
 10979  0D11  001A               	movwi fsr0++
 10980  0D12  0BA0               	decfsz	??_LCD_Write_Int,f
 10981  0D13  2D10               	goto	u2790
 10982                           
 10983                           ;lcd.c: 249: int i=4,j=0;
 10984  0D14  3004               	movlw	4
 10985  0D15  00AC               	movwf	LCD_Write_Int@i
 10986  0D16  3000               	movlw	0
 10987  0D17  00AD               	movwf	LCD_Write_Int@i+1
 10988  0D18  01AA               	clrf	LCD_Write_Int@j
 10989  0D19  01AB               	clrf	LCD_Write_Int@j+1
 10990                           
 10991                           ;lcd.c: 251: if(value<0)
 10992  0D1A  1FFA               	btfss	LCD_Write_Int@value+1,7
 10993  0D1B  2D26               	goto	l2611
 10994                           
 10995                           ;lcd.c: 252: {
 10996                           ;lcd.c: 253: LCD_Write_Char('-');
 10997  0D1C  302D               	movlw	45
 10998  0D1D  3196  26AC  318D   	fcall	_LCD_Write_Char
 10999                           
 11000                           ;lcd.c: 254: value=value*-1;
 11001  0D20  09F9               	comf	LCD_Write_Int@value,f
 11002  0D21  09FA               	comf	LCD_Write_Int@value+1,f
 11003  0D22  0AF9               	incf	LCD_Write_Int@value,f
 11004  0D23  1903               	skipnz
 11005  0D24  0AFA               	incf	LCD_Write_Int@value+1,f
 11006                           
 11007                           ;lcd.c: 255: }
 11008  0D25  2D2D               	goto	l2621
 11009  0D26                     l2611:	
 11010                           
 11011                           ;lcd.c: 257: else
 11012                           ;lcd.c: 258: {
 11013                           ;lcd.c: 259: if(sign == 1)
 11014  0D26  037D               	decf	LCD_Write_Int@sign,w
 11015  0D27  1D03               	btfss	3,2
 11016  0D28  2D2D               	goto	l2621
 11017                           
 11018                           ;lcd.c: 260: {
 11019                           ;lcd.c: 261: LCD_Write_Char('+');
 11020  0D29  302B               	movlw	43
 11021  0D2A  3196  26AC  318D   	fcall	_LCD_Write_Char
 11022  0D2D                     l2621:	
 11023                           ;lcd.c: 262: }
 11024                           ;lcd.c: 263: }
 11025                           ;lcd.c: 265: while(value)
 11026                           
 11027  0D2D  0879               	movf	LCD_Write_Int@value,w
 11028  0D2E  047A               	iorwf	LCD_Write_Int@value+1,w
 11029  0D2F  1903               	btfsc	3,2
 11030  0D30  2D5A               	goto	l2623
 11031                           
 11032                           ;lcd.c: 266: {
 11033                           ;lcd.c: 267: str[i]=value%10;
 11034  0D31  300A               	movlw	10
 11035  0D32  00F0               	movwf	___awmod@divisor
 11036  0D33  3000               	movlw	0
 11037  0D34  00F1               	movwf	___awmod@divisor+1
 11038  0D35  087A               	movf	LCD_Write_Int@value+1,w
 11039  0D36  00F3               	movwf	___awmod@dividend+1
 11040  0D37  0879               	movf	LCD_Write_Int@value,w
 11041  0D38  00F2               	movwf	___awmod@dividend
 11042  0D39  3188  200F  318D   	fcall	___awmod
 11043  0D3C  0870               	movf	?___awmod,w
 11044  0D3D  0020               	movlb	0	; select bank0
 11045  0D3E  00A0               	movwf	??_LCD_Write_Int
 11046  0D3F  082C               	movf	LCD_Write_Int@i,w
 11047  0D40  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11048  0D41  0086               	movwf	6
 11049  0D42  0187               	clrf	7
 11050  0D43  0820               	movf	??_LCD_Write_Int,w
 11051  0D44  0081               	movwf	1
 11052                           
 11053                           ;lcd.c: 268: value=value/10;
 11054  0D45  300A               	movlw	10
 11055  0D46  00F0               	movwf	___awdiv@divisor
 11056  0D47  3000               	movlw	0
 11057  0D48  00F1               	movwf	___awdiv@divisor+1
 11058  0D49  087A               	movf	LCD_Write_Int@value+1,w
 11059  0D4A  00F3               	movwf	___awdiv@dividend+1
 11060  0D4B  0879               	movf	LCD_Write_Int@value,w
 11061  0D4C  00F2               	movwf	___awdiv@dividend
 11062  0D4D  3188  2054  318D   	fcall	___awdiv
 11063  0D50  0871               	movf	?___awdiv+1,w
 11064  0D51  00FA               	movwf	LCD_Write_Int@value+1
 11065  0D52  0870               	movf	?___awdiv,w
 11066  0D53  00F9               	movwf	LCD_Write_Int@value
 11067                           
 11068                           ;lcd.c: 269: i--;
 11069  0D54  30FF               	movlw	255
 11070  0D55  0020               	movlb	0	; select bank0
 11071  0D56  07AC               	addwf	LCD_Write_Int@i,f
 11072  0D57  30FF               	movlw	255
 11073  0D58  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11074  0D59  2D2D               	goto	l2621
 11075  0D5A                     l2623:	
 11076                           
 11077                           ;lcd.c: 270: }
 11078                           ;lcd.c: 271: if(fieldLength==-1)
 11079  0D5A  0A7B               	incf	LCD_Write_Int@fieldLength,w
 11080  0D5B  1903               	btfsc	3,2
 11081  0D5C  2D63               	goto	l2629
 11082  0D5D  2D6C               	goto	l2631
 11083  0D5E                     l2627:	
 11084                           ;lcd.c: 272: {
 11085                           ;lcd.c: 273: while(str[j]==0)
 11086                           
 11087                           
 11088                           ;lcd.c: 274: {
 11089                           ;lcd.c: 275: j++;
 11090  0D5E  3001               	movlw	1
 11091  0D5F  0020               	movlb	0	; select bank0
 11092  0D60  07AA               	addwf	LCD_Write_Int@j,f
 11093  0D61  3000               	movlw	0
 11094  0D62  3DAB               	addwfc	LCD_Write_Int@j+1,f
 11095  0D63                     l2629:	
 11096  0D63  0020               	movlb	0	; select bank0
 11097  0D64  082A               	movf	LCD_Write_Int@j,w
 11098  0D65  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11099  0D66  0086               	movwf	6
 11100  0D67  0187               	clrf	7
 11101  0D68  0801               	movf	1,w
 11102  0D69  1D03               	btfss	3,2
 11103  0D6A  2D7D               	goto	l2633
 11104  0D6B  2D5E               	goto	l2627
 11105  0D6C                     l2631:	
 11106                           ;lcd.c: 276: }
 11107                           ;lcd.c: 277: }
 11108                           
 11109                           
 11110                           ;lcd.c: 278: else
 11111                           ;lcd.c: 279: {
 11112                           ;lcd.c: 280: j=5-fieldLength;
 11113  0D6C  087B               	movf	LCD_Write_Int@fieldLength,w
 11114  0D6D  0020               	movlb	0	; select bank0
 11115  0D6E  00A0               	movwf	??_LCD_Write_Int
 11116  0D6F  01A1               	clrf	??_LCD_Write_Int+1
 11117  0D70  1BA0               	btfsc	??_LCD_Write_Int,7
 11118  0D71  03A1               	decf	??_LCD_Write_Int+1,f
 11119  0D72  09A0               	comf	??_LCD_Write_Int,f
 11120  0D73  09A1               	comf	??_LCD_Write_Int+1,f
 11121  0D74  0AA0               	incf	??_LCD_Write_Int,f
 11122  0D75  1903               	skipnz
 11123  0D76  0AA1               	incf	??_LCD_Write_Int+1,f
 11124  0D77  0820               	movf	??_LCD_Write_Int,w
 11125  0D78  3E05               	addlw	5
 11126  0D79  00AA               	movwf	LCD_Write_Int@j
 11127  0D7A  3000               	movlw	0
 11128  0D7B  3D21               	addwfc	??_LCD_Write_Int+1,w
 11129  0D7C  00AB               	movwf	LCD_Write_Int@j+1
 11130  0D7D                     l2633:	
 11131                           
 11132                           ;lcd.c: 281: }
 11133                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11134  0D7D  082B               	movf	LCD_Write_Int@j+1,w
 11135  0D7E  00AD               	movwf	LCD_Write_Int@i+1
 11136  0D7F  082A               	movf	LCD_Write_Int@j,w
 11137  0D80  00AC               	movwf	LCD_Write_Int@i
 11138  0D81                     l2639:	
 11139  0D81  087C               	movf	LCD_Write_Int@numPlaces,w
 11140  0D82  00A0               	movwf	??_LCD_Write_Int
 11141  0D83  01A1               	clrf	??_LCD_Write_Int+1
 11142  0D84  1BA0               	btfsc	??_LCD_Write_Int,7
 11143  0D85  03A1               	decf	??_LCD_Write_Int+1,f
 11144  0D86  09A0               	comf	??_LCD_Write_Int,f
 11145  0D87  09A1               	comf	??_LCD_Write_Int+1,f
 11146  0D88  0AA0               	incf	??_LCD_Write_Int,f
 11147  0D89  1903               	skipnz
 11148  0D8A  0AA1               	incf	??_LCD_Write_Int+1,f
 11149  0D8B  0820               	movf	??_LCD_Write_Int,w
 11150  0D8C  3E05               	addlw	5
 11151  0D8D  00A2               	movwf	??_LCD_Write_Int+2
 11152  0D8E  3000               	movlw	0
 11153  0D8F  3D21               	addwfc	??_LCD_Write_Int+1,w
 11154  0D90  00A3               	movwf	??_LCD_Write_Int+3
 11155  0D91  082D               	movf	LCD_Write_Int@i+1,w
 11156  0D92  3A80               	xorlw	128
 11157  0D93  00A4               	movwf	??_LCD_Write_Int+4
 11158  0D94  0823               	movf	??_LCD_Write_Int+3,w
 11159  0D95  3A80               	xorlw	128
 11160  0D96  0224               	subwf	??_LCD_Write_Int+4,w
 11161  0D97  1D03               	skipz
 11162  0D98  2D9B               	goto	u2855
 11163  0D99  0822               	movf	??_LCD_Write_Int+2,w
 11164  0D9A  022C               	subwf	LCD_Write_Int@i,w
 11165  0D9B                     u2855:	
 11166  0D9B  1803               	btfsc	3,0
 11167  0D9C  2DAD               	goto	l2641
 11168                           
 11169                           ;lcd.c: 284: {
 11170                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11171  0D9D  0020               	movlb	0	; select bank0
 11172  0D9E  082C               	movf	LCD_Write_Int@i,w
 11173  0D9F  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11174  0DA0  0086               	movwf	6
 11175  0DA1  0187               	clrf	7
 11176  0DA2  0801               	movf	1,w
 11177  0DA3  3E30               	addlw	48
 11178  0DA4  3196  26AC  318D   	fcall	_LCD_Write_Char
 11179  0DA7  3001               	movlw	1
 11180  0DA8  0020               	movlb	0	; select bank0
 11181  0DA9  07AC               	addwf	LCD_Write_Int@i,f
 11182  0DAA  3000               	movlw	0
 11183  0DAB  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11184  0DAC  2D81               	goto	l2639
 11185  0DAD                     l2641:	
 11186                           
 11187                           ;lcd.c: 286: }
 11188                           ;lcd.c: 288: if(numPlaces == 1)
 11189  0DAD  037C               	decf	LCD_Write_Int@numPlaces,w
 11190  0DAE  1D03               	btfss	3,2
 11191  0DAF  2DBA               	goto	l2645
 11192                           
 11193                           ;lcd.c: 289: {
 11194                           ;lcd.c: 290: LCD_Write_Char(46);
 11195  0DB0  302E               	movlw	46
 11196  0DB1  3196  26AC  318D   	fcall	_LCD_Write_Char
 11197                           
 11198                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11199  0DB4  0020               	movlb	0	; select bank0
 11200  0DB5  0829               	movf	LCD_Write_Int@str+4,w
 11201  0DB6  3E30               	addlw	48
 11202  0DB7  3196  26AC  318D   	fcall	_LCD_Write_Char
 11203  0DBA                     l2645:	
 11204                           
 11205                           ;lcd.c: 292: }
 11206                           ;lcd.c: 294: if(numPlaces == 2)
 11207  0DBA  3002               	movlw	2
 11208  0DBB  067C               	xorwf	LCD_Write_Int@numPlaces,w
 11209  0DBC  1D03               	btfss	3,2
 11210  0DBD  0008               	return
 11211                           
 11212                           ;lcd.c: 295: {
 11213                           ;lcd.c: 296: LCD_Write_Char(46);
 11214  0DBE  302E               	movlw	46
 11215  0DBF  3196  26AC  318D   	fcall	_LCD_Write_Char
 11216                           
 11217                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11218  0DC2  0020               	movlb	0	; select bank0
 11219  0DC3  0828               	movf	LCD_Write_Int@str+3,w
 11220  0DC4  3E30               	addlw	48
 11221  0DC5  3196  26AC  318D   	fcall	_LCD_Write_Char
 11222                           
 11223                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11224  0DC8  0020               	movlb	0	; select bank0
 11225  0DC9  0829               	movf	LCD_Write_Int@str+4,w
 11226  0DCA  3E30               	addlw	48
 11227  0DCB  3196  26AC         	fcall	_LCD_Write_Char
 11228  0DCD  0008               	return
 11229  0DCE                     __end_of_LCD_Write_Int:	
 11230                           
 11231                           	psect	text21
 11232  080F                     __ptext21:	
 11233 ;; *************** function ___awmod *****************
 11234 ;; Defined at:
 11235 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  divisor         2    0[COMMON] int 
 11238 ;;  dividend        2    2[COMMON] int 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;  sign            1    6[COMMON] unsigned char 
 11241 ;;  counter         1    5[COMMON] unsigned char 
 11242 ;; Return value:  Size  Location     Type
 11243 ;;                  2    0[COMMON] int 
 11244 ;; Registers used:
 11245 ;;		wreg, status,2, status,0
 11246 ;; Tracked objects:
 11247 ;;		On entry : 0/0
 11248 ;;		On exit  : 0/0
 11249 ;;		Unchanged: 0/0
 11250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11254 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11255 ;;Total ram usage:        7 bytes
 11256 ;; Hardware stack levels used:    1
 11257 ;; This function calls:
 11258 ;;		Nothing
 11259 ;; This function is called by:
 11260 ;;		_LCD_Write_Int
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264                           
 11265                           ;psect for function ___awmod
 11266  080F                     ___awmod:	
 11267                           
 11268                           ;incstack = 0
 11269                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11270  080F  01F6               	clrf	___awmod@sign
 11271  0810  1FF3               	btfss	___awmod@dividend+1,7
 11272  0811  2819               	goto	l2403
 11273  0812  09F2               	comf	___awmod@dividend,f
 11274  0813  09F3               	comf	___awmod@dividend+1,f
 11275  0814  0AF2               	incf	___awmod@dividend,f
 11276  0815  1903               	skipnz
 11277  0816  0AF3               	incf	___awmod@dividend+1,f
 11278  0817  01F6               	clrf	___awmod@sign
 11279  0818  0AF6               	incf	___awmod@sign,f
 11280  0819                     l2403:	
 11281  0819  1FF1               	btfss	___awmod@divisor+1,7
 11282  081A  2820               	goto	l2407
 11283  081B  09F0               	comf	___awmod@divisor,f
 11284  081C  09F1               	comf	___awmod@divisor+1,f
 11285  081D  0AF0               	incf	___awmod@divisor,f
 11286  081E  1903               	skipnz
 11287  081F  0AF1               	incf	___awmod@divisor+1,f
 11288  0820                     l2407:	
 11289  0820  0870               	movf	___awmod@divisor,w
 11290  0821  0471               	iorwf	___awmod@divisor+1,w
 11291  0822  1903               	btfsc	3,2
 11292  0823  2847               	goto	l2425
 11293  0824  01F5               	clrf	___awmod@counter
 11294  0825  0AF5               	incf	___awmod@counter,f
 11295  0826                     l2415:	
 11296  0826  1BF1               	btfsc	___awmod@divisor+1,7
 11297  0827  2832               	goto	l2417
 11298  0828  3001               	movlw	1
 11299  0829                     u2595:	
 11300  0829  35F0               	lslf	___awmod@divisor,f
 11301  082A  0DF1               	rlf	___awmod@divisor+1,f
 11302  082B  0B89               	decfsz	9,f
 11303  082C  2829               	goto	u2595
 11304  082D  3001               	movlw	1
 11305  082E  00F4               	movwf	??___awmod
 11306  082F  0874               	movf	??___awmod,w
 11307  0830  07F5               	addwf	___awmod@counter,f
 11308  0831  2826               	goto	l2415
 11309  0832                     l2417:	
 11310  0832  0871               	movf	___awmod@divisor+1,w
 11311  0833  0273               	subwf	___awmod@dividend+1,w
 11312  0834  1D03               	skipz
 11313  0835  2838               	goto	u2615
 11314  0836  0870               	movf	___awmod@divisor,w
 11315  0837  0272               	subwf	___awmod@dividend,w
 11316  0838                     u2615:	
 11317  0838  1C03               	skipc
 11318  0839  283E               	goto	l2421
 11319  083A  0870               	movf	___awmod@divisor,w
 11320  083B  02F2               	subwf	___awmod@dividend,f
 11321  083C  0871               	movf	___awmod@divisor+1,w
 11322  083D  3BF3               	subwfb	___awmod@dividend+1,f
 11323  083E                     l2421:	
 11324  083E  3001               	movlw	1
 11325  083F                     u2625:	
 11326  083F  36F1               	lsrf	___awmod@divisor+1,f
 11327  0840  0CF0               	rrf	___awmod@divisor,f
 11328  0841  0B89               	decfsz	9,f
 11329  0842  283F               	goto	u2625
 11330  0843  3001               	movlw	1
 11331  0844  02F5               	subwf	___awmod@counter,f
 11332  0845  1D03               	btfss	3,2
 11333  0846  2832               	goto	l2417
 11334  0847                     l2425:	
 11335  0847  0876               	movf	___awmod@sign,w
 11336  0848  1903               	btfsc	3,2
 11337  0849  284F               	goto	l2429
 11338  084A  09F2               	comf	___awmod@dividend,f
 11339  084B  09F3               	comf	___awmod@dividend+1,f
 11340  084C  0AF2               	incf	___awmod@dividend,f
 11341  084D  1903               	skipnz
 11342  084E  0AF3               	incf	___awmod@dividend+1,f
 11343  084F                     l2429:	
 11344  084F  0873               	movf	___awmod@dividend+1,w
 11345  0850  00F1               	movwf	?___awmod+1
 11346  0851  0872               	movf	___awmod@dividend,w
 11347  0852  00F0               	movwf	?___awmod
 11348  0853  0008               	return
 11349  0854                     __end_of___awmod:	
 11350                           
 11351                           	psect	text22
 11352  0854                     __ptext22:	
 11353 ;; *************** function ___awdiv *****************
 11354 ;; Defined at:
 11355 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11356 ;; Parameters:    Size  Location     Type
 11357 ;;  divisor         2    0[COMMON] int 
 11358 ;;  dividend        2    2[COMMON] int 
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;  quotient        2    7[COMMON] int 
 11361 ;;  sign            1    6[COMMON] unsigned char 
 11362 ;;  counter         1    5[COMMON] unsigned char 
 11363 ;; Return value:  Size  Location     Type
 11364 ;;                  2    0[COMMON] int 
 11365 ;; Registers used:
 11366 ;;		wreg, status,2, status,0
 11367 ;; Tracked objects:
 11368 ;;		On entry : 0/0
 11369 ;;		On exit  : 0/0
 11370 ;;		Unchanged: 0/0
 11371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11373 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11375 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11376 ;;Total ram usage:        9 bytes
 11377 ;; Hardware stack levels used:    1
 11378 ;; This function calls:
 11379 ;;		Nothing
 11380 ;; This function is called by:
 11381 ;;		_LCD_Write_Int
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           
 11386                           ;psect for function ___awdiv
 11387  0854                     ___awdiv:	
 11388                           
 11389                           ;incstack = 0
 11390                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11391  0854  01F6               	clrf	___awdiv@sign
 11392  0855  1FF1               	btfss	___awdiv@divisor+1,7
 11393  0856  285E               	goto	l2359
 11394  0857  09F0               	comf	___awdiv@divisor,f
 11395  0858  09F1               	comf	___awdiv@divisor+1,f
 11396  0859  0AF0               	incf	___awdiv@divisor,f
 11397  085A  1903               	skipnz
 11398  085B  0AF1               	incf	___awdiv@divisor+1,f
 11399  085C  01F6               	clrf	___awdiv@sign
 11400  085D  0AF6               	incf	___awdiv@sign,f
 11401  085E                     l2359:	
 11402  085E  1FF3               	btfss	___awdiv@dividend+1,7
 11403  085F  2869               	goto	l2365
 11404  0860  09F2               	comf	___awdiv@dividend,f
 11405  0861  09F3               	comf	___awdiv@dividend+1,f
 11406  0862  0AF2               	incf	___awdiv@dividend,f
 11407  0863  1903               	skipnz
 11408  0864  0AF3               	incf	___awdiv@dividend+1,f
 11409  0865  3001               	movlw	1
 11410  0866  00F4               	movwf	??___awdiv
 11411  0867  0874               	movf	??___awdiv,w
 11412  0868  06F6               	xorwf	___awdiv@sign,f
 11413  0869                     l2365:	
 11414  0869  01F7               	clrf	___awdiv@quotient
 11415  086A  01F8               	clrf	___awdiv@quotient+1
 11416  086B  0870               	movf	___awdiv@divisor,w
 11417  086C  0471               	iorwf	___awdiv@divisor+1,w
 11418  086D  1903               	btfsc	3,2
 11419  086E  2898               	goto	l2387
 11420  086F  01F5               	clrf	___awdiv@counter
 11421  0870  0AF5               	incf	___awdiv@counter,f
 11422  0871                     l2375:	
 11423  0871  1BF1               	btfsc	___awdiv@divisor+1,7
 11424  0872  287D               	goto	l2377
 11425  0873  3001               	movlw	1
 11426  0874                     u2495:	
 11427  0874  35F0               	lslf	___awdiv@divisor,f
 11428  0875  0DF1               	rlf	___awdiv@divisor+1,f
 11429  0876  0B89               	decfsz	9,f
 11430  0877  2874               	goto	u2495
 11431  0878  3001               	movlw	1
 11432  0879  00F4               	movwf	??___awdiv
 11433  087A  0874               	movf	??___awdiv,w
 11434  087B  07F5               	addwf	___awdiv@counter,f
 11435  087C  2871               	goto	l2375
 11436  087D                     l2377:	
 11437  087D  3001               	movlw	1
 11438  087E                     u2515:	
 11439  087E  35F7               	lslf	___awdiv@quotient,f
 11440  087F  0DF8               	rlf	___awdiv@quotient+1,f
 11441  0880  0B89               	decfsz	9,f
 11442  0881  287E               	goto	u2515
 11443  0882  0871               	movf	___awdiv@divisor+1,w
 11444  0883  0273               	subwf	___awdiv@dividend+1,w
 11445  0884  1D03               	skipz
 11446  0885  2888               	goto	u2525
 11447  0886  0870               	movf	___awdiv@divisor,w
 11448  0887  0272               	subwf	___awdiv@dividend,w
 11449  0888                     u2525:	
 11450  0888  1C03               	skipc
 11451  0889  288F               	goto	l2383
 11452  088A  0870               	movf	___awdiv@divisor,w
 11453  088B  02F2               	subwf	___awdiv@dividend,f
 11454  088C  0871               	movf	___awdiv@divisor+1,w
 11455  088D  3BF3               	subwfb	___awdiv@dividend+1,f
 11456  088E  1477               	bsf	___awdiv@quotient,0
 11457  088F                     l2383:	
 11458  088F  3001               	movlw	1
 11459  0890                     u2535:	
 11460  0890  36F1               	lsrf	___awdiv@divisor+1,f
 11461  0891  0CF0               	rrf	___awdiv@divisor,f
 11462  0892  0B89               	decfsz	9,f
 11463  0893  2890               	goto	u2535
 11464  0894  3001               	movlw	1
 11465  0895  02F5               	subwf	___awdiv@counter,f
 11466  0896  1D03               	btfss	3,2
 11467  0897  287D               	goto	l2377
 11468  0898                     l2387:	
 11469  0898  0876               	movf	___awdiv@sign,w
 11470  0899  1903               	btfsc	3,2
 11471  089A  28A0               	goto	l2391
 11472  089B  09F7               	comf	___awdiv@quotient,f
 11473  089C  09F8               	comf	___awdiv@quotient+1,f
 11474  089D  0AF7               	incf	___awdiv@quotient,f
 11475  089E  1903               	skipnz
 11476  089F  0AF8               	incf	___awdiv@quotient+1,f
 11477  08A0                     l2391:	
 11478  08A0  0878               	movf	___awdiv@quotient+1,w
 11479  08A1  00F1               	movwf	?___awdiv+1
 11480  08A2  0877               	movf	___awdiv@quotient,w
 11481  08A3  00F0               	movwf	?___awdiv
 11482  08A4  0008               	return
 11483  08A5                     __end_of___awdiv:	
 11484                           
 11485                           	psect	text23
 11486  177F                     __ptext23:	
 11487 ;; *************** function _LCD_Set_Cursor *****************
 11488 ;; Defined at:
 11489 ;;		line 82 in file "lcd.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;  x               1    wreg     unsigned char 
 11492 ;;  y               1    4[COMMON] unsigned char 
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;  x               1    7[COMMON] unsigned char 
 11495 ;;  temp            1   10[COMMON] unsigned char 
 11496 ;;  w               1    9[COMMON] unsigned char 
 11497 ;;  z               1    8[COMMON] unsigned char 
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  1    wreg      void 
 11500 ;; Registers used:
 11501 ;;		wreg, status,2, status,0, pclath, cstack
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11507 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11510 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11511 ;;Total ram usage:        7 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; Hardware stack levels required when called:    2
 11514 ;; This function calls:
 11515 ;;		_LCD_Cmd
 11516 ;; This function is called by:
 11517 ;;		_menuChoice
 11518 ;;		_main
 11519 ;; This function uses a non-reentrant model
 11520 ;;
 11521                           
 11522                           
 11523                           ;psect for function _LCD_Set_Cursor
 11524  177F                     _LCD_Set_Cursor:	
 11525                           
 11526                           ;incstack = 0
 11527                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11528                           ;LCD_Set_Cursor@x stored from wreg
 11529  177F  00F7               	movwf	LCD_Set_Cursor@x
 11530                           
 11531                           ;lcd.c: 86: char temp,z,w;
 11532                           ;lcd.c: 88: if(y == 0)
 11533  1780  0874               	movf	LCD_Set_Cursor@y,w
 11534  1781  1D03               	btfss	3,2
 11535  1782  2F9F               	goto	l2547
 11536                           
 11537                           ;lcd.c: 89: {
 11538                           ;lcd.c: 90: temp = 0x80 + x;
 11539  1783  0877               	movf	LCD_Set_Cursor@x,w
 11540  1784  3E80               	addlw	128
 11541  1785  00F5               	movwf	??_LCD_Set_Cursor
 11542  1786  0875               	movf	??_LCD_Set_Cursor,w
 11543  1787  00FA               	movwf	LCD_Set_Cursor@temp
 11544                           
 11545                           ;lcd.c: 91: z = temp>>4;
 11546  1788  087A               	movf	LCD_Set_Cursor@temp,w
 11547  1789  00F5               	movwf	??_LCD_Set_Cursor
 11548  178A  3004               	movlw	4
 11549  178B                     u2755:	
 11550  178B  36F5               	lsrf	??_LCD_Set_Cursor,f
 11551  178C  0B89               	decfsz	9,f
 11552  178D  2F8B               	goto	u2755
 11553  178E  0875               	movf	??_LCD_Set_Cursor,w
 11554  178F  00F6               	movwf	??_LCD_Set_Cursor+1
 11555  1790  0876               	movf	??_LCD_Set_Cursor+1,w
 11556  1791  00F8               	movwf	LCD_Set_Cursor@z
 11557                           
 11558                           ;lcd.c: 92: w = temp & 0x0F;
 11559  1792  087A               	movf	LCD_Set_Cursor@temp,w
 11560  1793  390F               	andlw	15
 11561  1794  00F5               	movwf	??_LCD_Set_Cursor
 11562  1795  0875               	movf	??_LCD_Set_Cursor,w
 11563  1796  00F9               	movwf	LCD_Set_Cursor@w
 11564                           
 11565                           ;lcd.c: 93: LCD_Cmd(z);
 11566  1797  0878               	movf	LCD_Set_Cursor@z,w
 11567  1798  3195  25BC  3197   	fcall	_LCD_Cmd
 11568                           
 11569                           ;lcd.c: 94: LCD_Cmd(w);
 11570  179B  0879               	movf	LCD_Set_Cursor@w,w
 11571  179C  3195  25BC         	fcall	_LCD_Cmd
 11572                           
 11573                           ;lcd.c: 95: }
 11574  179E  0008               	return
 11575  179F                     l2547:	
 11576                           
 11577                           ;lcd.c: 97: else if(y == 1)
 11578  179F  0374               	decf	LCD_Set_Cursor@y,w
 11579  17A0  1D03               	btfss	3,2
 11580  17A1  0008               	return
 11581                           
 11582                           ;lcd.c: 98: {
 11583                           ;lcd.c: 99: temp = 0xC0 + x;
 11584  17A2  0877               	movf	LCD_Set_Cursor@x,w
 11585  17A3  3EC0               	addlw	192
 11586  17A4  00F5               	movwf	??_LCD_Set_Cursor
 11587  17A5  0875               	movf	??_LCD_Set_Cursor,w
 11588  17A6  00FA               	movwf	LCD_Set_Cursor@temp
 11589                           
 11590                           ;lcd.c: 100: z = temp>>4;
 11591  17A7  087A               	movf	LCD_Set_Cursor@temp,w
 11592  17A8  00F5               	movwf	??_LCD_Set_Cursor
 11593  17A9  3004               	movlw	4
 11594  17AA                     u2775:	
 11595  17AA  36F5               	lsrf	??_LCD_Set_Cursor,f
 11596  17AB  0B89               	decfsz	9,f
 11597  17AC  2FAA               	goto	u2775
 11598  17AD  0875               	movf	??_LCD_Set_Cursor,w
 11599  17AE  00F6               	movwf	??_LCD_Set_Cursor+1
 11600  17AF  0876               	movf	??_LCD_Set_Cursor+1,w
 11601  17B0  00F8               	movwf	LCD_Set_Cursor@z
 11602                           
 11603                           ;lcd.c: 101: w = temp & 0x0F;
 11604  17B1  087A               	movf	LCD_Set_Cursor@temp,w
 11605  17B2  390F               	andlw	15
 11606  17B3  00F5               	movwf	??_LCD_Set_Cursor
 11607  17B4  0875               	movf	??_LCD_Set_Cursor,w
 11608  17B5  00F9               	movwf	LCD_Set_Cursor@w
 11609                           
 11610                           ;lcd.c: 102: LCD_Cmd(z);
 11611  17B6  0878               	movf	LCD_Set_Cursor@z,w
 11612  17B7  3195  25BC  3197   	fcall	_LCD_Cmd
 11613                           
 11614                           ;lcd.c: 103: LCD_Cmd(w);
 11615  17BA  0879               	movf	LCD_Set_Cursor@w,w
 11616  17BB  3195  25BC         	fcall	_LCD_Cmd
 11617  17BD  0008               	return
 11618  17BE                     __end_of_LCD_Set_Cursor:	
 11619                           
 11620                           	psect	text24
 11621  17BE                     __ptext24:	
 11622 ;; *************** function _SYSTEM_Initialize *****************
 11623 ;; Defined at:
 11624 ;;		line 71 in file "system.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;		None
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;		None
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  1    wreg      void 
 11631 ;; Registers used:
 11632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11640 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11641 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11642 ;;Total ram usage:        3 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:    3
 11645 ;; This function calls:
 11646 ;;		_ADCC_Initialize
 11647 ;;		_InitCustomChars
 11648 ;;		_LCD_Clear
 11649 ;;		_LCD_Init
 11650 ;;		_OSCILLATOR_Initialize
 11651 ;;		_PIN_MANAGER_Initialize
 11652 ;;		_PWM_Initialize
 11653 ;;		_TMR2_Initialize
 11654 ;; This function is called by:
 11655 ;;		_main
 11656 ;; This function uses a non-reentrant model
 11657 ;;
 11658                           
 11659                           
 11660                           ;psect for function _SYSTEM_Initialize
 11661  17BE                     _SYSTEM_Initialize:	
 11662                           
 11663                           ;system.c: 73: PIN_MANAGER_Initialize();
 11664                           
 11665                           ;incstack = 0
 11666                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11667  17BE  3196  26D8  3197   	fcall	_PIN_MANAGER_Initialize
 11668                           
 11669                           ;system.c: 74: OSCILLATOR_Initialize();
 11670  17C1  3195  255F  3197   	fcall	_OSCILLATOR_Initialize
 11671                           
 11672                           ;system.c: 75: FVRCON = 0x00;
 11673  17C4  0032               	movlb	18	; select bank18
 11674  17C5  018C               	clrf	12	;volatile
 11675                           
 11676                           ;system.c: 76: ADCC_Initialize();
 11677  17C6  3196  2614  3197   	fcall	_ADCC_Initialize
 11678                           
 11679                           ;system.c: 77: PWM_Initialize();
 11680  17C9  3195  2568  3197   	fcall	_PWM_Initialize
 11681                           
 11682                           ;system.c: 79: TMR2_Initialize();
 11683  17CC  3195  258B  3197   	fcall	_TMR2_Initialize
 11684                           
 11685                           ;system.c: 80: LCD_Init(0X00);
 11686  17CF  3000               	movlw	0
 11687  17D0  318A  2271  3197   	fcall	_LCD_Init
 11688                           
 11689                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 11690  17D3  3009               	movlw	9
 11691  17D4  00FA               	movwf	??_SYSTEM_Initialize+2
 11692  17D5  301E               	movlw	30
 11693  17D6  00F9               	movwf	??_SYSTEM_Initialize+1
 11694  17D7  30EB               	movlw	235
 11695  17D8  00F8               	movwf	??_SYSTEM_Initialize
 11696  17D9                     u3887:	
 11697  17D9  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11698  17DA  2FD9               	goto	u3887
 11699  17DB  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11700  17DC  2FD9               	goto	u3887
 11701  17DD  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11702  17DE  2FD9               	goto	u3887
 11703  17DF  0000               	nop
 11704                           
 11705                           ;system.c: 82: LCD_Clear();
 11706  17E0  3195  2557  3197   	fcall	_LCD_Clear
 11707                           
 11708                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 11709  17E3  3005               	movlw	5
 11710  17E4  00FA               	movwf	??_SYSTEM_Initialize+2
 11711  17E5  300F               	movlw	15
 11712  17E6  00F9               	movwf	??_SYSTEM_Initialize+1
 11713  17E7  30F4               	movlw	244
 11714  17E8  00F8               	movwf	??_SYSTEM_Initialize
 11715  17E9                     u3897:	
 11716  17E9  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11717  17EA  2FE9               	goto	u3897
 11718  17EB  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11719  17EC  2FE9               	goto	u3897
 11720  17ED  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11721  17EE  2FE9               	goto	u3897
 11722                           
 11723                           ;system.c: 84: InitCustomChars();
 11724  17EF  3196  2686  3197   	fcall	_InitCustomChars
 11725                           
 11726                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11727  17F2  3009               	movlw	9
 11728  17F3  00FA               	movwf	??_SYSTEM_Initialize+2
 11729  17F4  301E               	movlw	30
 11730  17F5  00F9               	movwf	??_SYSTEM_Initialize+1
 11731  17F6  30EB               	movlw	235
 11732  17F7  00F8               	movwf	??_SYSTEM_Initialize
 11733  17F8                     u3907:	
 11734  17F8  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11735  17F9  2FF8               	goto	u3907
 11736  17FA  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11737  17FB  2FF8               	goto	u3907
 11738  17FC  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11739  17FD  2FF8               	goto	u3907
 11740  17FE  0000               	nop
 11741  17FF  0008               	return
 11742  1800                     __end_of_SYSTEM_Initialize:	
 11743                           
 11744                           	psect	text25
 11745  158B                     __ptext25:	
 11746 ;; *************** function _TMR2_Initialize *****************
 11747 ;; Defined at:
 11748 ;;		line 3 in file "tmr2.c"
 11749 ;; Parameters:    Size  Location     Type
 11750 ;;		None
 11751 ;; Auto vars:     Size  Location     Type
 11752 ;;		None
 11753 ;; Return value:  Size  Location     Type
 11754 ;;                  1    wreg      void 
 11755 ;; Registers used:
 11756 ;;		wreg, status,2
 11757 ;; Tracked objects:
 11758 ;;		On entry : 0/0
 11759 ;;		On exit  : 0/0
 11760 ;;		Unchanged: 0/0
 11761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;Total ram usage:        0 bytes
 11767 ;; Hardware stack levels used:    1
 11768 ;; This function calls:
 11769 ;;		Nothing
 11770 ;; This function is called by:
 11771 ;;		_SYSTEM_Initialize
 11772 ;; This function uses a non-reentrant model
 11773 ;;
 11774                           
 11775                           
 11776                           ;psect for function _TMR2_Initialize
 11777  158B                     _TMR2_Initialize:	
 11778                           
 11779                           ;tmr2.c: 5: T2CON = 0x00;
 11780                           
 11781                           ;incstack = 0
 11782                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11783  158B  0025               	movlb	5	; select bank5
 11784  158C  018E               	clrf	14	;volatile
 11785                           
 11786                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11787  158D  3001               	movlw	1
 11788  158E  0090               	movwf	16	;volatile
 11789                           
 11790                           ;tmr2.c: 9: T2HLT = 0x00;
 11791  158F  018F               	clrf	15	;volatile
 11792                           
 11793                           ;tmr2.c: 11: T2RST = 0x00;
 11794  1590  0191               	clrf	17	;volatile
 11795                           
 11796                           ;tmr2.c: 13: T2PR = 0xFF;
 11797  1591  30FF               	movlw	255
 11798  1592  008D               	movwf	13	;volatile
 11799                           
 11800                           ;tmr2.c: 15: T2TMR = 0x00;
 11801  1593  018C               	clrf	12	;volatile
 11802                           
 11803                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11804  1594  002E               	movlb	14	; select bank14
 11805  1595  1090               	bcf	16,1	;volatile
 11806                           
 11807                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11808  1596  0025               	movlb	5	; select bank5
 11809  1597  178E               	bsf	14,7	;volatile
 11810  1598  0008               	return
 11811  1599                     __end_of_TMR2_Initialize:	
 11812                           
 11813                           	psect	text26
 11814  1568                     __ptext26:	
 11815 ;; *************** function _PWM_Initialize *****************
 11816 ;; Defined at:
 11817 ;;		line 3 in file "pwm.c"
 11818 ;; Parameters:    Size  Location     Type
 11819 ;;		None
 11820 ;; Auto vars:     Size  Location     Type
 11821 ;;		None
 11822 ;; Return value:  Size  Location     Type
 11823 ;;                  1    wreg      void 
 11824 ;; Registers used:
 11825 ;;		wreg, status,2, status,0
 11826 ;; Tracked objects:
 11827 ;;		On entry : 0/0
 11828 ;;		On exit  : 0/0
 11829 ;;		Unchanged: 0/0
 11830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11835 ;;Total ram usage:        0 bytes
 11836 ;; Hardware stack levels used:    1
 11837 ;; This function calls:
 11838 ;;		Nothing
 11839 ;; This function is called by:
 11840 ;;		_SYSTEM_Initialize
 11841 ;; This function uses a non-reentrant model
 11842 ;;
 11843                           
 11844                           
 11845                           ;psect for function _PWM_Initialize
 11846  1568                     _PWM_Initialize:	
 11847                           
 11848                           ;pwm.c: 14: PWM7CON = 0x80;
 11849                           
 11850                           ;incstack = 0
 11851                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11852  1568  3080               	movlw	128
 11853  1569  0027               	movlb	7	; select bank7
 11854  156A  0092               	movwf	18	;volatile
 11855                           
 11856                           ;pwm.c: 16: PWM7DCH = 0x00;
 11857  156B  0191               	clrf	17	;volatile
 11858                           
 11859                           ;pwm.c: 18: PWM7DCL = 0x00;
 11860  156C  0190               	clrf	16	;volatile
 11861                           
 11862                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
 11863  156D  0024               	movlb	4	; select bank4
 11864  156E  081F               	movf	31,w	;volatile
 11865  156F  39F3               	andlw	-13
 11866  1570  3804               	iorlw	4
 11867  1571  009F               	movwf	31	;volatile
 11868  1572  0008               	return
 11869  1573                     __end_of_PWM_Initialize:	
 11870                           
 11871                           	psect	text27
 11872  16D8                     __ptext27:	
 11873 ;; *************** function _PIN_MANAGER_Initialize *****************
 11874 ;; Defined at:
 11875 ;;		line 5 in file "pin_manager.c"
 11876 ;; Parameters:    Size  Location     Type
 11877 ;;		None
 11878 ;; Auto vars:     Size  Location     Type
 11879 ;;  state           1    0[COMMON] unsigned char 
 11880 ;; Return value:  Size  Location     Type
 11881 ;;                  1    wreg      void 
 11882 ;; Registers used:
 11883 ;;		wreg, status,2
 11884 ;; Tracked objects:
 11885 ;;		On entry : 0/0
 11886 ;;		On exit  : 0/0
 11887 ;;		Unchanged: 0/0
 11888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;Total ram usage:        1 bytes
 11894 ;; Hardware stack levels used:    1
 11895 ;; This function calls:
 11896 ;;		Nothing
 11897 ;; This function is called by:
 11898 ;;		_SYSTEM_Initialize
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           
 11903                           ;psect for function _PIN_MANAGER_Initialize
 11904  16D8                     _PIN_MANAGER_Initialize:	
 11905                           
 11906                           ;pin_manager.c: 7: LATA = 0x00;
 11907                           
 11908                           ;incstack = 0
 11909                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11910  16D8  0020               	movlb	0	; select bank0
 11911  16D9  0196               	clrf	22	;volatile
 11912                           
 11913                           ;pin_manager.c: 8: LATB = 0x00;
 11914  16DA  0197               	clrf	23	;volatile
 11915                           
 11916                           ;pin_manager.c: 9: LATC = 0x00;
 11917  16DB  0198               	clrf	24	;volatile
 11918                           
 11919                           ;pin_manager.c: 11: WPUA = 0x00;
 11920  16DC  003E               	movlb	30	; select bank30
 11921  16DD  01B9               	clrf	57	;volatile
 11922                           
 11923                           ;pin_manager.c: 12: WPUB = 0x00;
 11924  16DE  01C4               	clrf	68	;volatile
 11925                           
 11926                           ;pin_manager.c: 13: WPUC = 0x00;
 11927  16DF  01CF               	clrf	79	;volatile
 11928                           
 11929                           ;pin_manager.c: 14: WPUE = 0x8;
 11930  16E0  3008               	movlw	8
 11931  16E1  00E5               	movwf	101	;volatile
 11932                           
 11933                           ;pin_manager.c: 16: TRISA = 0x0A;
 11934  16E2  300A               	movlw	10
 11935  16E3  0020               	movlb	0	; select bank0
 11936  16E4  0091               	movwf	17	;volatile
 11937                           
 11938                           ;pin_manager.c: 17: TRISB = 0x07;
 11939  16E5  3007               	movlw	7
 11940  16E6  0092               	movwf	18	;volatile
 11941                           
 11942                           ;pin_manager.c: 18: TRISC = 0x00;
 11943  16E7  0193               	clrf	19	;volatile
 11944                           
 11945                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11946  16E8  300A               	movlw	10
 11947  16E9  003E               	movlb	30	; select bank30
 11948  16EA  00B8               	movwf	56	;volatile
 11949                           
 11950                           ;pin_manager.c: 21: ANSELB = 0x00;
 11951  16EB  01C3               	clrf	67	;volatile
 11952                           
 11953                           ;pin_manager.c: 22: ANSELC = 0x00;
 11954  16EC  01CE               	clrf	78	;volatile
 11955                           
 11956                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11957  16ED  002E               	movlb	14	; select bank14
 11958  16EE  1216               	bcf	22,4	;volatile
 11959                           
 11960                           ;pin_manager.c: 25: bool state = GIE;
 11961  16EF  3000               	movlw	0
 11962  16F0  1B8B               	btfsc	11,7	;volatile
 11963  16F1  3001               	movlw	1
 11964  16F2  00F0               	movwf	PIN_MANAGER_Initialize@state
 11965                           
 11966                           ;pin_manager.c: 26: GIE = 0;
 11967  16F3  138B               	bcf	11,7	;volatile
 11968                           
 11969                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11970  16F4  3055               	movlw	85
 11971  16F5  003D               	movlb	29	; select bank29
 11972  16F6  008F               	movwf	15	;volatile
 11973                           
 11974                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11975  16F7  30AA               	movlw	170
 11976  16F8  008F               	movwf	15	;volatile
 11977                           
 11978                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11979  16F9  100F               	bcf	15,0	;volatile
 11980                           
 11981                           ;pin_manager.c: 33: RC3PPS = 0X0F;
 11982  16FA  300F               	movlw	15
 11983  16FB  003E               	movlb	30	; select bank30
 11984  16FC  00A3               	movwf	35	;volatile
 11985                           
 11986                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 11987  16FD  3055               	movlw	85
 11988  16FE  003D               	movlb	29	; select bank29
 11989  16FF  008F               	movwf	15	;volatile
 11990                           
 11991                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 11992  1700  30AA               	movlw	170
 11993  1701  008F               	movwf	15	;volatile
 11994                           
 11995                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 11996  1702  140F               	bsf	15,0	;volatile
 11997                           
 11998                           ;pin_manager.c: 40: GIE = state;
 11999  1703  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12000  1704  2F07               	goto	u2880
 12001  1705  178B               	bsf	11,7	;volatile
 12002  1706  0008               	return
 12003  1707                     u2880:	
 12004  1707  138B               	bcf	11,7	;volatile
 12005  1708  0008               	return
 12006  1709                     __end_of_PIN_MANAGER_Initialize:	
 12007                           
 12008                           	psect	text28
 12009  155F                     __ptext28:	
 12010 ;; *************** function _OSCILLATOR_Initialize *****************
 12011 ;; Defined at:
 12012 ;;		line 89 in file "system.c"
 12013 ;; Parameters:    Size  Location     Type
 12014 ;;		None
 12015 ;; Auto vars:     Size  Location     Type
 12016 ;;		None
 12017 ;; Return value:  Size  Location     Type
 12018 ;;                  1    wreg      void 
 12019 ;; Registers used:
 12020 ;;		wreg, status,2
 12021 ;; Tracked objects:
 12022 ;;		On entry : 0/0
 12023 ;;		On exit  : 0/0
 12024 ;;		Unchanged: 0/0
 12025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12030 ;;Total ram usage:        0 bytes
 12031 ;; Hardware stack levels used:    1
 12032 ;; This function calls:
 12033 ;;		Nothing
 12034 ;; This function is called by:
 12035 ;;		_SYSTEM_Initialize
 12036 ;; This function uses a non-reentrant model
 12037 ;;
 12038                           
 12039                           
 12040                           ;psect for function _OSCILLATOR_Initialize
 12041  155F                     _OSCILLATOR_Initialize:	
 12042                           
 12043                           ;system.c: 91: OSCCON1 = 0x60;
 12044                           
 12045                           ;incstack = 0
 12046                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12047  155F  3060               	movlw	96
 12048  1560  0031               	movlb	17	; select bank17
 12049  1561  008D               	movwf	13	;volatile
 12050                           
 12051                           ;system.c: 92: OSCCON3 = 0x00;
 12052  1562  018F               	clrf	15	;volatile
 12053                           
 12054                           ;system.c: 93: OSCEN = 0x00;
 12055  1563  0191               	clrf	17	;volatile
 12056                           
 12057                           ;system.c: 94: OSCFRQ = 0x06;
 12058  1564  3006               	movlw	6
 12059  1565  0093               	movwf	19	;volatile
 12060                           
 12061                           ;system.c: 95: OSCTUNE = 0x00;
 12062  1566  0192               	clrf	18	;volatile
 12063  1567  0008               	return
 12064  1568                     __end_of_OSCILLATOR_Initialize:	
 12065                           
 12066                           	psect	text29
 12067  0A71                     __ptext29:	
 12068 ;; *************** function _LCD_Init *****************
 12069 ;; Defined at:
 12070 ;;		line 154 in file "lcd.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;  style           1    wreg     unsigned char 
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;  style           1    7[COMMON] unsigned char 
 12075 ;; Return value:  Size  Location     Type
 12076 ;;                  1    wreg      void 
 12077 ;; Registers used:
 12078 ;;		wreg, status,2, status,0, pclath, cstack
 12079 ;; Tracked objects:
 12080 ;;		On entry : 0/0
 12081 ;;		On exit  : 0/0
 12082 ;;		Unchanged: 0/0
 12083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12086 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12087 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12088 ;;Total ram usage:        4 bytes
 12089 ;; Hardware stack levels used:    1
 12090 ;; Hardware stack levels required when called:    2
 12091 ;; This function calls:
 12092 ;;		_LCD_Cmd
 12093 ;;		_LCD_Port
 12094 ;; This function is called by:
 12095 ;;		_SYSTEM_Initialize
 12096 ;; This function uses a non-reentrant model
 12097 ;;
 12098                           
 12099                           
 12100                           ;psect for function _LCD_Init
 12101  0A71                     _LCD_Init:	
 12102                           
 12103                           ;incstack = 0
 12104                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 12105                           ;LCD_Init@style stored from wreg
 12106  0A71  00F7               	movwf	LCD_Init@style
 12107                           
 12108                           ;lcd.c: 156: LCD_Port(0x00);
 12109  0A72  3000               	movlw	0
 12110  0A73  3195  25FC  318A   	fcall	_LCD_Port
 12111                           
 12112                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 12113  0A76  3005               	movlw	5
 12114  0A77  00F6               	movwf	??_LCD_Init+2
 12115  0A78  300F               	movlw	15
 12116  0A79  00F5               	movwf	??_LCD_Init+1
 12117  0A7A  30F4               	movlw	244
 12118  0A7B  00F4               	movwf	??_LCD_Init
 12119  0A7C                     u3917:	
 12120  0A7C  0BF4               	decfsz	??_LCD_Init,f
 12121  0A7D  2A7C               	goto	u3917
 12122  0A7E  0BF5               	decfsz	??_LCD_Init+1,f
 12123  0A7F  2A7C               	goto	u3917
 12124  0A80  0BF6               	decfsz	??_LCD_Init+2,f
 12125  0A81  2A7C               	goto	u3917
 12126                           
 12127                           ;lcd.c: 160: LCD_Cmd(0x03);
 12128  0A82  3003               	movlw	3
 12129  0A83  3195  25BC  318A   	fcall	_LCD_Cmd
 12130                           
 12131                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 12132  0A86  3068               	movlw	104
 12133  0A87  00F5               	movwf	??_LCD_Init+1
 12134  0A88  30E4               	movlw	228
 12135  0A89  00F4               	movwf	??_LCD_Init
 12136  0A8A                     u3927:	
 12137  0A8A  0BF4               	decfsz	??_LCD_Init,f
 12138  0A8B  2A8A               	goto	u3927
 12139  0A8C  0BF5               	decfsz	??_LCD_Init+1,f
 12140  0A8D  2A8A               	goto	u3927
 12141  0A8E  0000               	nop
 12142                           
 12143                           ;lcd.c: 164: LCD_Cmd(0x03);
 12144  0A8F  3003               	movlw	3
 12145  0A90  3195  25BC  318A   	fcall	_LCD_Cmd
 12146                           
 12147                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12148  0A93  3089               	movlw	137
 12149  0A94  00F4               	movwf	??_LCD_Init
 12150  0A95                     u3937:	
 12151  0A95  3200               	nop2
 12152  0A96  3200               	nop2
 12153  0A97  0BF4               	decfsz	??_LCD_Init,f
 12154  0A98  2A95               	goto	u3937
 12155                           
 12156                           ;lcd.c: 168: LCD_Cmd(0x03);
 12157  0A99  3003               	movlw	3
 12158  0A9A  3195  25BC  318A   	fcall	_LCD_Cmd
 12159                           
 12160                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12161  0A9D  3089               	movlw	137
 12162  0A9E  00F4               	movwf	??_LCD_Init
 12163  0A9F                     u3947:	
 12164  0A9F  3200               	nop2
 12165  0AA0  3200               	nop2
 12166  0AA1  0BF4               	decfsz	??_LCD_Init,f
 12167  0AA2  2A9F               	goto	u3947
 12168                           
 12169                           ;lcd.c: 172: LCD_Cmd(0x02);
 12170  0AA3  3002               	movlw	2
 12171  0AA4  3195  25BC  318A   	fcall	_LCD_Cmd
 12172                           
 12173                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12174  0AA7  3089               	movlw	137
 12175  0AA8  00F4               	movwf	??_LCD_Init
 12176  0AA9                     u3957:	
 12177  0AA9  3200               	nop2
 12178  0AAA  3200               	nop2
 12179  0AAB  0BF4               	decfsz	??_LCD_Init,f
 12180  0AAC  2AA9               	goto	u3957
 12181                           
 12182                           ;lcd.c: 176: LCD_Cmd(0x2);
 12183  0AAD  3002               	movlw	2
 12184  0AAE  3195  25BC  318A   	fcall	_LCD_Cmd
 12185                           
 12186                           ;lcd.c: 178: LCD_Cmd(0x8);
 12187  0AB1  3008               	movlw	8
 12188  0AB2  3195  25BC  318A   	fcall	_LCD_Cmd
 12189                           
 12190                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12191  0AB5  3089               	movlw	137
 12192  0AB6  00F4               	movwf	??_LCD_Init
 12193  0AB7                     u3967:	
 12194  0AB7  3200               	nop2
 12195  0AB8  3200               	nop2
 12196  0AB9  0BF4               	decfsz	??_LCD_Init,f
 12197  0ABA  2AB7               	goto	u3967
 12198                           
 12199                           ;lcd.c: 182: LCD_Cmd(0x0);
 12200  0ABB  3000               	movlw	0
 12201  0ABC  3195  25BC  318A   	fcall	_LCD_Cmd
 12202                           
 12203                           ;lcd.c: 184: LCD_Cmd(0x8);
 12204  0ABF  3008               	movlw	8
 12205  0AC0  3195  25BC  318A   	fcall	_LCD_Cmd
 12206                           
 12207                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12208  0AC3  3089               	movlw	137
 12209  0AC4  00F4               	movwf	??_LCD_Init
 12210  0AC5                     u3977:	
 12211  0AC5  3200               	nop2
 12212  0AC6  3200               	nop2
 12213  0AC7  0BF4               	decfsz	??_LCD_Init,f
 12214  0AC8  2AC5               	goto	u3977
 12215                           
 12216                           ;lcd.c: 188: LCD_Cmd(0x0);
 12217  0AC9  3000               	movlw	0
 12218  0ACA  3195  25BC  318A   	fcall	_LCD_Cmd
 12219                           
 12220                           ;lcd.c: 190: LCD_Cmd(0x1);
 12221  0ACD  3001               	movlw	1
 12222  0ACE  3195  25BC  318A   	fcall	_LCD_Cmd
 12223                           
 12224                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 12225  0AD1  3034               	movlw	52
 12226  0AD2  00F5               	movwf	??_LCD_Init+1
 12227  0AD3  30F1               	movlw	241
 12228  0AD4  00F4               	movwf	??_LCD_Init
 12229  0AD5                     u3987:	
 12230  0AD5  0BF4               	decfsz	??_LCD_Init,f
 12231  0AD6  2AD5               	goto	u3987
 12232  0AD7  0BF5               	decfsz	??_LCD_Init+1,f
 12233  0AD8  2AD5               	goto	u3987
 12234  0AD9  3200               	nop2
 12235                           
 12236                           ;lcd.c: 194: LCD_Cmd(0x0);
 12237  0ADA  3000               	movlw	0
 12238  0ADB  3195  25BC  318A   	fcall	_LCD_Cmd
 12239                           
 12240                           ;lcd.c: 196: LCD_Cmd(0x6);
 12241  0ADE  3006               	movlw	6
 12242  0ADF  3195  25BC  318A   	fcall	_LCD_Cmd
 12243                           
 12244                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12245  0AE2  3089               	movlw	137
 12246  0AE3  00F4               	movwf	??_LCD_Init
 12247  0AE4                     u3997:	
 12248  0AE4  3200               	nop2
 12249  0AE5  3200               	nop2
 12250  0AE6  0BF4               	decfsz	??_LCD_Init,f
 12251  0AE7  2AE4               	goto	u3997
 12252                           
 12253                           ;lcd.c: 200: LCD_Cmd(0x0);
 12254  0AE8  3000               	movlw	0
 12255  0AE9  3195  25BC  318A   	fcall	_LCD_Cmd
 12256                           
 12257                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 12258  0AEC  0877               	movf	LCD_Init@style,w
 12259  0AED  380C               	iorlw	12
 12260  0AEE  3195  25BC  318A   	fcall	_LCD_Cmd
 12261                           
 12262                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12263  0AF1  3089               	movlw	137
 12264  0AF2  00F4               	movwf	??_LCD_Init
 12265  0AF3                     u4007:	
 12266  0AF3  3200               	nop2
 12267  0AF4  3200               	nop2
 12268  0AF5  0BF4               	decfsz	??_LCD_Init,f
 12269  0AF6  2AF3               	goto	u4007
 12270  0AF7  0008               	return
 12271  0AF8                     __end_of_LCD_Init:	
 12272                           
 12273                           	psect	text30
 12274  1557                     __ptext30:	
 12275 ;; *************** function _LCD_Clear *****************
 12276 ;; Defined at:
 12277 ;;		line 75 in file "lcd.c"
 12278 ;; Parameters:    Size  Location     Type
 12279 ;;		None
 12280 ;; Auto vars:     Size  Location     Type
 12281 ;;		None
 12282 ;; Return value:  Size  Location     Type
 12283 ;;                  1    wreg      void 
 12284 ;; Registers used:
 12285 ;;		wreg, status,2, status,0, pclath, cstack
 12286 ;; Tracked objects:
 12287 ;;		On entry : 0/0
 12288 ;;		On exit  : 0/0
 12289 ;;		Unchanged: 0/0
 12290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12295 ;;Total ram usage:        0 bytes
 12296 ;; Hardware stack levels used:    1
 12297 ;; Hardware stack levels required when called:    2
 12298 ;; This function calls:
 12299 ;;		_LCD_Cmd
 12300 ;; This function is called by:
 12301 ;;		_SYSTEM_Initialize
 12302 ;;		_menuChoice
 12303 ;;		_main
 12304 ;; This function uses a non-reentrant model
 12305 ;;
 12306                           
 12307                           
 12308                           ;psect for function _LCD_Clear
 12309  1557                     _LCD_Clear:	
 12310                           
 12311                           ;lcd.c: 77: LCD_Cmd(0);
 12312                           
 12313                           ;incstack = 0
 12314                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 12315  1557  3000               	movlw	0
 12316  1558  3195  25BC  3195   	fcall	_LCD_Cmd
 12317                           
 12318                           ;lcd.c: 78: LCD_Cmd(1);
 12319  155B  3001               	movlw	1
 12320  155C  3195  25BC         	fcall	_LCD_Cmd
 12321  155E  0008               	return
 12322  155F                     __end_of_LCD_Clear:	
 12323                           
 12324                           	psect	text31
 12325  1686                     __ptext31:	
 12326 ;; *************** function _InitCustomChars *****************
 12327 ;; Defined at:
 12328 ;;		line 29 in file "lcd.c"
 12329 ;; Parameters:    Size  Location     Type
 12330 ;;		None
 12331 ;; Auto vars:     Size  Location     Type
 12332 ;;  i               1    6[COMMON] unsigned char 
 12333 ;; Return value:  Size  Location     Type
 12334 ;;                  1    wreg      void 
 12335 ;; Registers used:
 12336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12337 ;; Tracked objects:
 12338 ;;		On entry : 0/0
 12339 ;;		On exit  : 0/0
 12340 ;;		Unchanged: 0/0
 12341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12346 ;;Total ram usage:        2 bytes
 12347 ;; Hardware stack levels used:    1
 12348 ;; Hardware stack levels required when called:    2
 12349 ;; This function calls:
 12350 ;;		_LCD_Cmd
 12351 ;;		_LCD_Write_Char
 12352 ;; This function is called by:
 12353 ;;		_SYSTEM_Initialize
 12354 ;; This function uses a non-reentrant model
 12355 ;;
 12356                           
 12357                           
 12358                           ;psect for function _InitCustomChars
 12359  1686                     _InitCustomChars:	
 12360                           
 12361                           ;lcd.c: 31: uint8_t i;
 12362                           ;lcd.c: 32: LCD_Cmd(0x04);
 12363                           
 12364                           ;incstack = 0
 12365                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12366  1686  3004               	movlw	4
 12367  1687  3195  25BC  3196   	fcall	_LCD_Cmd
 12368                           
 12369                           ;lcd.c: 33: LCD_Cmd(0x00);
 12370  168A  3000               	movlw	0
 12371  168B  3195  25BC  3196   	fcall	_LCD_Cmd
 12372                           
 12373                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 12374  168E  01F6               	clrf	InitCustomChars@i
 12375  168F  3010               	movlw	16
 12376  1690  0276               	subwf	InitCustomChars@i,w
 12377  1691  1803               	btfsc	3,0
 12378  1692  2EA4               	goto	l2533
 12379  1693                     l2527:	
 12380                           
 12381                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 12382  1693  0876               	movf	InitCustomChars@i,w
 12383  1694  3ED2               	addlw	(low (___cgram| (0+256)))& (0+255)
 12384  1695  0086               	movwf	6
 12385  1696  3001               	movlw	1	; select bank3/4
 12386  1697  0087               	movwf	7
 12387  1698  0801               	movf	1,w
 12388  1699  3196  26AC  3196   	fcall	_LCD_Write_Char
 12389  169C  3001               	movlw	1
 12390  169D  00F5               	movwf	??_InitCustomChars
 12391  169E  0875               	movf	??_InitCustomChars,w
 12392  169F  07F6               	addwf	InitCustomChars@i,f
 12393  16A0  3010               	movlw	16
 12394  16A1  0276               	subwf	InitCustomChars@i,w
 12395  16A2  1C03               	skipc
 12396  16A3  2E93               	goto	l2527
 12397  16A4                     l2533:	
 12398                           
 12399                           ;lcd.c: 36: LCD_Cmd(0);
 12400  16A4  3000               	movlw	0
 12401  16A5  3195  25BC  3196   	fcall	_LCD_Cmd
 12402                           
 12403                           ;lcd.c: 37: LCD_Cmd(2);
 12404  16A8  3002               	movlw	2
 12405  16A9  3195  25BC         	fcall	_LCD_Cmd
 12406  16AB  0008               	return
 12407  16AC                     __end_of_InitCustomChars:	
 12408                           
 12409                           	psect	text32
 12410  16AC                     __ptext32:	
 12411 ;; *************** function _LCD_Write_Char *****************
 12412 ;; Defined at:
 12413 ;;		line 223 in file "lcd.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;  a               1    wreg     const unsigned char 
 12416 ;; Auto vars:     Size  Location     Type
 12417 ;;  a               1    4[COMMON] const unsigned char 
 12418 ;;  y               1    3[COMMON] unsigned char 
 12419 ;;  temp            1    2[COMMON] unsigned char 
 12420 ;; Return value:  Size  Location     Type
 12421 ;;                  1    wreg      void 
 12422 ;; Registers used:
 12423 ;;		wreg, status,2, status,0, pclath, cstack
 12424 ;; Tracked objects:
 12425 ;;		On entry : 0/0
 12426 ;;		On exit  : 0/0
 12427 ;;		Unchanged: 0/0
 12428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12432 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12433 ;;Total ram usage:        4 bytes
 12434 ;; Hardware stack levels used:    1
 12435 ;; Hardware stack levels required when called:    1
 12436 ;; This function calls:
 12437 ;;		_LCD_Port
 12438 ;; This function is called by:
 12439 ;;		_InitCustomChars
 12440 ;;		_LCD_Write_String
 12441 ;;		_LCD_Write_Int
 12442 ;;		_menuChoice
 12443 ;;		_main
 12444 ;; This function uses a non-reentrant model
 12445 ;;
 12446                           
 12447                           
 12448                           ;psect for function _LCD_Write_Char
 12449  16AC                     _LCD_Write_Char:	
 12450                           
 12451                           ;incstack = 0
 12452                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12453                           ;LCD_Write_Char@a stored from wreg
 12454  16AC  00F4               	movwf	LCD_Write_Char@a
 12455                           
 12456                           ;lcd.c: 225: char temp,y;
 12457                           ;lcd.c: 226: temp = a&0x0F;
 12458  16AD  0874               	movf	LCD_Write_Char@a,w
 12459  16AE  390F               	andlw	15
 12460  16AF  00F1               	movwf	??_LCD_Write_Char
 12461  16B0  0871               	movf	??_LCD_Write_Char,w
 12462  16B1  00F2               	movwf	LCD_Write_Char@temp
 12463                           
 12464                           ;lcd.c: 227: y = a&0xF0;
 12465  16B2  0874               	movf	LCD_Write_Char@a,w
 12466  16B3  39F0               	andlw	240
 12467  16B4  00F1               	movwf	??_LCD_Write_Char
 12468  16B5  0871               	movf	??_LCD_Write_Char,w
 12469  16B6  00F3               	movwf	LCD_Write_Char@y
 12470                           
 12471                           ;lcd.c: 228: RA0 = 1;
 12472  16B7  0020               	movlb	0	; select bank0
 12473  16B8  140C               	bsf	12,0	;volatile
 12474                           
 12475                           ;lcd.c: 229: LCD_Port(y>>4);
 12476  16B9  0873               	movf	LCD_Write_Char@y,w
 12477  16BA  00F1               	movwf	??_LCD_Write_Char
 12478  16BB  3004               	movlw	4
 12479  16BC                     u2455:	
 12480  16BC  36F1               	lsrf	??_LCD_Write_Char,f
 12481  16BD  0B89               	decfsz	9,f
 12482  16BE  2EBC               	goto	u2455
 12483  16BF  0871               	movf	??_LCD_Write_Char,w
 12484  16C0  3195  25FC  3196   	fcall	_LCD_Port
 12485                           
 12486                           ;lcd.c: 230: RA2 = 1;
 12487  16C3  0020               	movlb	0	; select bank0
 12488  16C4  150C               	bsf	12,2	;volatile
 12489                           
 12490                           ;lcd.c: 231: RA2 = 0;
 12491  16C5  110C               	bcf	12,2	;volatile
 12492                           
 12493                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12494  16C6  306A               	movlw	106
 12495  16C7  00F1               	movwf	??_LCD_Write_Char
 12496  16C8                     u4017:	
 12497  16C8  0BF1               	decfsz	??_LCD_Write_Char,f
 12498  16C9  2EC8               	goto	u4017
 12499  16CA  0000               	nop
 12500                           
 12501                           ;lcd.c: 233: LCD_Port(temp);
 12502  16CB  0872               	movf	LCD_Write_Char@temp,w
 12503  16CC  3195  25FC  3196   	fcall	_LCD_Port
 12504                           
 12505                           ;lcd.c: 234: RA2 = 1;
 12506  16CF  0020               	movlb	0	; select bank0
 12507  16D0  150C               	bsf	12,2	;volatile
 12508                           
 12509                           ;lcd.c: 235: RA2 = 0;
 12510  16D1  110C               	bcf	12,2	;volatile
 12511                           
 12512                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12513  16D2  306A               	movlw	106
 12514  16D3  00F1               	movwf	??_LCD_Write_Char
 12515  16D4                     u4027:	
 12516  16D4  0BF1               	decfsz	??_LCD_Write_Char,f
 12517  16D5  2ED4               	goto	u4027
 12518  16D6  0000               	nop
 12519  16D7  0008               	return
 12520  16D8                     __end_of_LCD_Write_Char:	
 12521                           
 12522                           	psect	text33
 12523  15BC                     __ptext33:	
 12524 ;; *************** function _LCD_Cmd *****************
 12525 ;; Defined at:
 12526 ;;		line 65 in file "lcd.c"
 12527 ;; Parameters:    Size  Location     Type
 12528 ;;  a               1    wreg     unsigned char 
 12529 ;; Auto vars:     Size  Location     Type
 12530 ;;  a               1    3[COMMON] unsigned char 
 12531 ;; Return value:  Size  Location     Type
 12532 ;;                  1    wreg      void 
 12533 ;; Registers used:
 12534 ;;		wreg, status,2, status,0, pclath, cstack
 12535 ;; Tracked objects:
 12536 ;;		On entry : 0/0
 12537 ;;		On exit  : 0/0
 12538 ;;		Unchanged: 0/0
 12539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;Total ram usage:        3 bytes
 12545 ;; Hardware stack levels used:    1
 12546 ;; Hardware stack levels required when called:    1
 12547 ;; This function calls:
 12548 ;;		_LCD_Port
 12549 ;; This function is called by:
 12550 ;;		_InitCustomChars
 12551 ;;		_LCD_Clear
 12552 ;;		_LCD_Set_Cursor
 12553 ;;		_LCD_Init
 12554 ;; This function uses a non-reentrant model
 12555 ;;
 12556                           
 12557                           
 12558                           ;psect for function _LCD_Cmd
 12559  15BC                     _LCD_Cmd:	
 12560                           
 12561                           ;incstack = 0
 12562                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12563                           ;LCD_Cmd@a stored from wreg
 12564  15BC  00F3               	movwf	LCD_Cmd@a
 12565                           
 12566                           ;lcd.c: 67: RA0 = 0;
 12567  15BD  0020               	movlb	0	; select bank0
 12568  15BE  100C               	bcf	12,0	;volatile
 12569                           
 12570                           ;lcd.c: 68: LCD_Port(a);
 12571  15BF  0873               	movf	LCD_Cmd@a,w
 12572  15C0  3195  25FC  3195   	fcall	_LCD_Port
 12573                           
 12574                           ;lcd.c: 69: RA2 = 1;
 12575  15C3  0020               	movlb	0	; select bank0
 12576  15C4  150C               	bsf	12,2	;volatile
 12577                           
 12578                           ;lcd.c: 70: RA2 = 0;
 12579  15C5  110C               	bcf	12,2	;volatile
 12580                           
 12581                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12582  15C6  302A               	movlw	42
 12583  15C7  00F2               	movwf	??_LCD_Cmd+1
 12584  15C8  308D               	movlw	141
 12585  15C9  00F1               	movwf	??_LCD_Cmd
 12586  15CA                     u4037:	
 12587  15CA  0BF1               	decfsz	??_LCD_Cmd,f
 12588  15CB  2DCA               	goto	u4037
 12589  15CC  0BF2               	decfsz	??_LCD_Cmd+1,f
 12590  15CD  2DCA               	goto	u4037
 12591  15CE  3200               	nop2
 12592  15CF  0008               	return
 12593  15D0                     __end_of_LCD_Cmd:	
 12594                           
 12595                           	psect	text34
 12596  15FC                     __ptext34:	
 12597 ;; *************** function _LCD_Port *****************
 12598 ;; Defined at:
 12599 ;;		line 41 in file "lcd.c"
 12600 ;; Parameters:    Size  Location     Type
 12601 ;;  a               1    wreg     unsigned char 
 12602 ;; Auto vars:     Size  Location     Type
 12603 ;;  a               1    0[COMMON] unsigned char 
 12604 ;; Return value:  Size  Location     Type
 12605 ;;                  1    wreg      void 
 12606 ;; Registers used:
 12607 ;;		wreg
 12608 ;; Tracked objects:
 12609 ;;		On entry : 0/0
 12610 ;;		On exit  : 0/0
 12611 ;;		Unchanged: 0/0
 12612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;Total ram usage:        1 bytes
 12618 ;; Hardware stack levels used:    1
 12619 ;; This function calls:
 12620 ;;		Nothing
 12621 ;; This function is called by:
 12622 ;;		_LCD_Cmd
 12623 ;;		_LCD_Init
 12624 ;;		_LCD_Write_Char
 12625 ;; This function uses a non-reentrant model
 12626 ;;
 12627                           
 12628                           
 12629                           ;psect for function _LCD_Port
 12630  15FC                     _LCD_Port:	
 12631                           
 12632                           ;incstack = 0
 12633                           ; Regs used in _LCD_Port: [wreg]
 12634                           ;LCD_Port@a stored from wreg
 12635  15FC  00F0               	movwf	LCD_Port@a
 12636                           
 12637                           ;lcd.c: 43: if(a & 1)
 12638  15FD  1C70               	btfss	LCD_Port@a,0
 12639  15FE  2E02               	goto	l94
 12640                           
 12641                           ;lcd.c: 44: RA7 = 1;
 12642  15FF  0020               	movlb	0	; select bank0
 12643  1600  178C               	bsf	12,7	;volatile
 12644  1601  2E04               	goto	l2175
 12645  1602                     l94:	
 12646                           
 12647                           ;lcd.c: 45: else
 12648                           ;lcd.c: 46: RA7 = 0;
 12649  1602  0020               	movlb	0	; select bank0
 12650  1603  138C               	bcf	12,7	;volatile
 12651  1604                     l2175:	
 12652                           
 12653                           ;lcd.c: 48: if(a & 2)
 12654  1604  1CF0               	btfss	LCD_Port@a,1
 12655  1605  2E08               	goto	l96
 12656                           
 12657                           ;lcd.c: 49: RA6 = 1;
 12658  1606  170C               	bsf	12,6	;volatile
 12659  1607  2E09               	goto	l2179
 12660  1608                     l96:	
 12661                           
 12662                           ;lcd.c: 50: else
 12663                           ;lcd.c: 51: RA6 = 0;
 12664  1608  130C               	bcf	12,6	;volatile
 12665  1609                     l2179:	
 12666                           
 12667                           ;lcd.c: 53: if(a & 4)
 12668  1609  1D70               	btfss	LCD_Port@a,2
 12669  160A  2E0D               	goto	l98
 12670                           
 12671                           ;lcd.c: 54: RC0 = 1;
 12672  160B  140E               	bsf	14,0	;volatile
 12673  160C  2E0E               	goto	l2183
 12674  160D                     l98:	
 12675                           
 12676                           ;lcd.c: 55: else
 12677                           ;lcd.c: 56: RC0 = 0;
 12678  160D  100E               	bcf	14,0	;volatile
 12679  160E                     l2183:	
 12680                           
 12681                           ;lcd.c: 58: if(a & 8)
 12682  160E  1DF0               	btfss	LCD_Port@a,3
 12683  160F  2E12               	goto	l100
 12684                           
 12685                           ;lcd.c: 59: RC1 = 1;
 12686  1610  148E               	bsf	14,1	;volatile
 12687  1611  0008               	return
 12688  1612                     l100:	
 12689                           
 12690                           ;lcd.c: 60: else
 12691                           ;lcd.c: 61: RC1 = 0;
 12692  1612  108E               	bcf	14,1	;volatile
 12693  1613  0008               	return
 12694  1614                     __end_of_LCD_Port:	
 12695                           
 12696                           	psect	text35
 12697  1614                     __ptext35:	
 12698 ;; *************** function _ADCC_Initialize *****************
 12699 ;; Defined at:
 12700 ;;		line 60 in file "adc.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;		None
 12703 ;; Auto vars:     Size  Location     Type
 12704 ;;		None
 12705 ;; Return value:  Size  Location     Type
 12706 ;;                  1    wreg      void 
 12707 ;; Registers used:
 12708 ;;		wreg, status,2
 12709 ;; Tracked objects:
 12710 ;;		On entry : 0/0
 12711 ;;		On exit  : 0/0
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;Total ram usage:        0 bytes
 12719 ;; Hardware stack levels used:    1
 12720 ;; This function calls:
 12721 ;;		Nothing
 12722 ;; This function is called by:
 12723 ;;		_SYSTEM_Initialize
 12724 ;; This function uses a non-reentrant model
 12725 ;;
 12726                           
 12727                           
 12728                           ;psect for function _ADCC_Initialize
 12729  1614                     _ADCC_Initialize:	
 12730                           
 12731                           ;adc.c: 62: ADCON1 = 0x00;
 12732                           
 12733                           ;incstack = 0
 12734                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12735  1614  0021               	movlb	1	; select bank1
 12736  1615  0194               	clrf	20	;volatile
 12737                           
 12738                           ;adc.c: 64: ADCON2 = 0x00;
 12739  1616  0195               	clrf	21	;volatile
 12740                           
 12741                           ;adc.c: 66: ADCON3 = 0x00;
 12742  1617  0196               	clrf	22	;volatile
 12743                           
 12744                           ;adc.c: 68: ADACT = 0x00;
 12745  1618  0199               	clrf	25	;volatile
 12746                           
 12747                           ;adc.c: 70: ADSTAT = 0x00;
 12748  1619  0197               	clrf	23	;volatile
 12749                           
 12750                           ;adc.c: 73: ADCLK = 0x3F;
 12751  161A  303F               	movlw	63
 12752  161B  0098               	movwf	24	;volatile
 12753                           
 12754                           ;adc.c: 81: ADREF = 0x00;
 12755  161C  019A               	clrf	26	;volatile
 12756                           
 12757                           ;adc.c: 83: ADCAP = 0x00;
 12758  161D  019B               	clrf	27	;volatile
 12759                           
 12760                           ;adc.c: 86: ADPRE = 0x07;
 12761  161E  3007               	movlw	7
 12762  161F  009C               	movwf	28	;volatile
 12763                           
 12764                           ;adc.c: 88: ADACQ = 0x00;
 12765  1620  019D               	clrf	29	;volatile
 12766                           
 12767                           ;adc.c: 90: ADPCH = 0x00;
 12768  1621  019E               	clrf	30	;volatile
 12769                           
 12770                           ;adc.c: 92: ADRPT = 0x00;
 12771  1622  0022               	movlb	2	; select bank2
 12772  1623  018D               	clrf	13	;volatile
 12773                           
 12774                           ;adc.c: 94: ADLTHL = 0x00;
 12775  1624  018E               	clrf	14	;volatile
 12776                           
 12777                           ;adc.c: 96: ADLTHH = 0x00;
 12778  1625  018F               	clrf	15	;volatile
 12779                           
 12780                           ;adc.c: 98: ADUTHL = 0x00;
 12781  1626  0190               	clrf	16	;volatile
 12782                           
 12783                           ;adc.c: 100: ADUTHH = 0x00;
 12784  1627  0191               	clrf	17	;volatile
 12785                           
 12786                           ;adc.c: 102: ADSTPTL = 0x00;
 12787  1628  0192               	clrf	18	;volatile
 12788                           
 12789                           ;adc.c: 104: ADSTPTH = 0x00;
 12790  1629  0193               	clrf	19	;volatile
 12791                           
 12792                           ;adc.c: 106: ADCON0 = 0x84;
 12793  162A  3084               	movlw	132
 12794  162B  0021               	movlb	1	; select bank1
 12795  162C  0093               	movwf	19	;volatile
 12796  162D  0008               	return
 12797  162E                     __end_of_ADCC_Initialize:	
 12798                           
 12799                           	psect	text36
 12800  013C                     __ptext36:	
 12801 ;; *************** function _PID_Calculate *****************
 12802 ;; Defined at:
 12803 ;;		line 23 in file "pid.c"
 12804 ;; Parameters:    Size  Location     Type
 12805 ;;  setpoint        2    6[COMMON] int 
 12806 ;;  temp            2    8[COMMON] int 
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;		None
 12809 ;; Return value:  Size  Location     Type
 12810 ;;                  2    6[COMMON] int 
 12811 ;; Registers used:
 12812 ;;		wreg, status,2, status,0, pclath, cstack
 12813 ;; Tracked objects:
 12814 ;;		On entry : 0/0
 12815 ;;		On exit  : 0/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12821 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;Total ram usage:        6 bytes
 12823 ;; Hardware stack levels used:    1
 12824 ;; Hardware stack levels required when called:    1
 12825 ;; This function calls:
 12826 ;;		___wmul
 12827 ;; This function is called by:
 12828 ;;		_main
 12829 ;; This function uses a non-reentrant model
 12830 ;;
 12831                           
 12832                           
 12833                           ;psect for function _PID_Calculate
 12834  013C                     _PID_Calculate:	
 12835                           
 12836                           ;pid.c: 25: pidCount+=1;
 12837                           
 12838                           ;incstack = 0
 12839                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12840  013C  3001               	movlw	1
 12841  013D  0021               	movlb	1	; select bank1
 12842  013E  07C1               	addwf	_pidCount^(0+128),f
 12843  013F  3000               	movlw	0
 12844  0140  3DC2               	addwfc	(_pidCount+1)^(0+128),f
 12845                           
 12846                           ;pid.c: 28: error = setpoint - temp;
 12847  0141  0978               	comf	PID_Calculate@temp,w
 12848  0142  00FA               	movwf	??_PID_Calculate
 12849  0143  0979               	comf	PID_Calculate@temp+1,w
 12850  0144  00FB               	movwf	??_PID_Calculate+1
 12851  0145  0AFA               	incf	??_PID_Calculate,f
 12852  0146  1903               	skipnz
 12853  0147  0AFB               	incf	??_PID_Calculate+1,f
 12854  0148  0876               	movf	PID_Calculate@setpoint,w
 12855  0149  077A               	addwf	??_PID_Calculate,w
 12856  014A  0020               	movlb	0	; select bank0
 12857  014B  00E8               	movwf	_error
 12858  014C  0877               	movf	PID_Calculate@setpoint+1,w
 12859  014D  3D7B               	addwfc	??_PID_Calculate+1,w
 12860  014E  00E9               	movwf	_error+1
 12861                           
 12862                           ;pid.c: 30: errorValue = error * Kp;
 12863  014F  0869               	movf	_error+1,w
 12864  0150  00F1               	movwf	___wmul@multiplier+1
 12865  0151  0868               	movf	_error,w
 12866  0152  00F0               	movwf	___wmul@multiplier
 12867  0153  0021               	movlb	1	; select bank1
 12868  0154  085F               	movf	(_Kp+1)^(0+128),w
 12869  0155  00F3               	movwf	___wmul@multiplicand+1
 12870  0156  085E               	movf	_Kp^(0+128),w
 12871  0157  00F2               	movwf	___wmul@multiplicand
 12872  0158  3180  2004  3181   	fcall	___wmul
 12873  015B  0871               	movf	?___wmul+1,w
 12874  015C  0021               	movlb	1	; select bank1
 12875  015D  00BA               	movwf	(_errorValue+1)^(0+128)
 12876  015E  0870               	movf	?___wmul,w
 12877  015F  00B9               	movwf	_errorValue^(0+128)
 12878                           
 12879                           ;pid.c: 33: if(error>=0)
 12880  0160  0020               	movlb	0	; select bank0
 12881  0161  1BE9               	btfsc	_error+1,7
 12882  0162  29AC               	goto	l2925
 12883                           
 12884                           ;pid.c: 34: {
 12885                           ;pid.c: 35: if(error>lastError)
 12886  0163  0021               	movlb	1	; select bank1
 12887  0164  083E               	movf	(_lastError+1)^(0+128),w
 12888  0165  3A80               	xorlw	128
 12889  0166  00FA               	movwf	??_PID_Calculate
 12890  0167  0020               	movlb	0	; select bank0
 12891  0168  0869               	movf	_error+1,w
 12892  0169  3A80               	xorlw	128
 12893  016A  027A               	subwf	??_PID_Calculate,w
 12894  016B  1D03               	skipz
 12895  016C  2970               	goto	u3345
 12896  016D  0868               	movf	_error,w
 12897  016E  0021               	movlb	1	; select bank1
 12898  016F  023D               	subwf	_lastError^(0+128),w
 12899  0170                     u3345:	
 12900  0170  1803               	skipnc
 12901  0171  2992               	goto	l2921
 12902                           
 12903                           ;pid.c: 36: {
 12904                           ;pid.c: 37: if(pidIntegrated<2047)pidIntegrated = pidIntegrated + (error * Ki);
 12905  0172  0020               	movlb	0	; select bank0
 12906  0173  086B               	movf	_pidIntegrated+1,w
 12907  0174  3A80               	xorlw	128
 12908  0175  00FA               	movwf	??_PID_Calculate
 12909  0176  3087               	movlw	135
 12910  0177  027A               	subwf	??_PID_Calculate,w
 12911  0178  1D03               	skipz
 12912  0179  297C               	goto	u3355
 12913  017A  30FF               	movlw	255
 12914  017B  026A               	subwf	_pidIntegrated,w
 12915  017C                     u3355:	
 12916  017C  1803               	skipnc
 12917  017D  2A01               	goto	l2935
 12918  017E  0020               	movlb	0	; select bank0
 12919  017F  0869               	movf	_error+1,w
 12920  0180  00F1               	movwf	___wmul@multiplier+1
 12921  0181  0868               	movf	_error,w
 12922  0182  00F0               	movwf	___wmul@multiplier
 12923  0183  0021               	movlb	1	; select bank1
 12924  0184  085D               	movf	(_Ki+1)^(0+128),w
 12925  0185  00F3               	movwf	___wmul@multiplicand+1
 12926  0186  085C               	movf	_Ki^(0+128),w
 12927  0187  00F2               	movwf	___wmul@multiplicand
 12928  0188  3180  2004  3181   	fcall	___wmul
 12929  018B  0020               	movlb	0	; select bank0
 12930  018C  086A               	movf	_pidIntegrated,w
 12931  018D  0770               	addwf	?___wmul,w
 12932  018E  00EA               	movwf	_pidIntegrated
 12933  018F  086B               	movf	_pidIntegrated+1,w
 12934  0190  3D71               	addwfc	?___wmul+1,w
 12935  0191  2A00               	goto	L9
 12936  0192                     l2921:	
 12937                           ;pid.c: 38: }
 12938                           
 12939                           
 12940                           ;pid.c: 39: else
 12941                           ;pid.c: 40: {
 12942                           ;pid.c: 41: if(pidIntegrated>0)pidIntegrated = pidIntegrated - (error * Ki);
 12943  0192  0020               	movlb	0	; select bank0
 12944  0193  086B               	movf	_pidIntegrated+1,w
 12945  0194  3A80               	xorlw	128
 12946  0195  00FA               	movwf	??_PID_Calculate
 12947  0196  3080               	movlw	128
 12948  0197  027A               	subwf	??_PID_Calculate,w
 12949  0198  1D03               	skipz
 12950  0199  299C               	goto	u3365
 12951  019A  3001               	movlw	1
 12952  019B  026A               	subwf	_pidIntegrated,w
 12953  019C                     u3365:	
 12954  019C  1C03               	skipc
 12955  019D  2A01               	goto	l2935
 12956  019E  0020               	movlb	0	; select bank0
 12957  019F  0869               	movf	_error+1,w
 12958  01A0  00F1               	movwf	___wmul@multiplier+1
 12959  01A1  0868               	movf	_error,w
 12960  01A2  00F0               	movwf	___wmul@multiplier
 12961  01A3  0021               	movlb	1	; select bank1
 12962  01A4  085D               	movf	(_Ki+1)^(0+128),w
 12963  01A5  00F3               	movwf	___wmul@multiplicand+1
 12964  01A6  085C               	movf	_Ki^(0+128),w
 12965  01A7  00F2               	movwf	___wmul@multiplicand
 12966  01A8  3180  2004  3181   	fcall	___wmul
 12967  01AB  29D3               	goto	L10
 12968  01AC                     l2925:	
 12969                           ;pid.c: 42: }
 12970                           ;pid.c: 43: }
 12971                           
 12972                           
 12973                           ;pid.c: 44: else
 12974                           ;pid.c: 45: {
 12975                           ;pid.c: 46: if(error<lastError)
 12976  01AC  0869               	movf	_error+1,w
 12977  01AD  3A80               	xorlw	128
 12978  01AE  00FA               	movwf	??_PID_Calculate
 12979  01AF  0021               	movlb	1	; select bank1
 12980  01B0  083E               	movf	(_lastError+1)^(0+128),w
 12981  01B1  3A80               	xorlw	128
 12982  01B2  027A               	subwf	??_PID_Calculate,w
 12983  01B3  1D03               	skipz
 12984  01B4  29B8               	goto	u3375
 12985  01B5  083D               	movf	_lastError^(0+128),w
 12986  01B6  0020               	movlb	0	; select bank0
 12987  01B7  0268               	subwf	_error,w
 12988  01B8                     u3375:	
 12989  01B8  1803               	skipnc
 12990  01B9  29E1               	goto	l2931
 12991                           
 12992                           ;pid.c: 47: {
 12993                           ;pid.c: 48: if(pidIntegrated<2047)pidIntegrated = pidIntegrated - (error * Ki);
 12994  01BA  0020               	movlb	0	; select bank0
 12995  01BB  086B               	movf	_pidIntegrated+1,w
 12996  01BC  3A80               	xorlw	128
 12997  01BD  00FA               	movwf	??_PID_Calculate
 12998  01BE  3087               	movlw	135
 12999  01BF  027A               	subwf	??_PID_Calculate,w
 13000  01C0  1D03               	skipz
 13001  01C1  29C4               	goto	u3385
 13002  01C2  30FF               	movlw	255
 13003  01C3  026A               	subwf	_pidIntegrated,w
 13004  01C4                     u3385:	
 13005  01C4  1803               	skipnc
 13006  01C5  2A01               	goto	l2935
 13007  01C6  0020               	movlb	0	; select bank0
 13008  01C7  0869               	movf	_error+1,w
 13009  01C8  00F1               	movwf	___wmul@multiplier+1
 13010  01C9  0868               	movf	_error,w
 13011  01CA  00F0               	movwf	___wmul@multiplier
 13012  01CB  0021               	movlb	1	; select bank1
 13013  01CC  085D               	movf	(_Ki+1)^(0+128),w
 13014  01CD  00F3               	movwf	___wmul@multiplicand+1
 13015  01CE  085C               	movf	_Ki^(0+128),w
 13016  01CF  00F2               	movwf	___wmul@multiplicand
 13017  01D0  3180  2004  3181   	fcall	___wmul
 13018  01D3                     L10:	
 13019  01D3  0970               	comf	?___wmul,w
 13020  01D4  00FA               	movwf	??_PID_Calculate
 13021  01D5  0971               	comf	?___wmul+1,w
 13022  01D6  00FB               	movwf	??_PID_Calculate+1
 13023  01D7  0AFA               	incf	??_PID_Calculate,f
 13024  01D8  1903               	skipnz
 13025  01D9  0AFB               	incf	??_PID_Calculate+1,f
 13026  01DA  0020               	movlb	0	; select bank0
 13027  01DB  086A               	movf	_pidIntegrated,w
 13028  01DC  077A               	addwf	??_PID_Calculate,w
 13029  01DD  00EA               	movwf	_pidIntegrated
 13030  01DE  086B               	movf	_pidIntegrated+1,w
 13031  01DF  3D7B               	addwfc	??_PID_Calculate+1,w
 13032  01E0  2A00               	goto	L9
 13033  01E1                     l2931:	
 13034                           ;pid.c: 49: }
 13035                           
 13036                           
 13037                           ;pid.c: 50: else
 13038                           ;pid.c: 51: {
 13039                           ;pid.c: 52: if(pidIntegrated>0)pidIntegrated = pidIntegrated + (error * Ki);
 13040  01E1  0020               	movlb	0	; select bank0
 13041  01E2  086B               	movf	_pidIntegrated+1,w
 13042  01E3  3A80               	xorlw	128
 13043  01E4  00FA               	movwf	??_PID_Calculate
 13044  01E5  3080               	movlw	128
 13045  01E6  027A               	subwf	??_PID_Calculate,w
 13046  01E7  1D03               	skipz
 13047  01E8  29EB               	goto	u3395
 13048  01E9  3001               	movlw	1
 13049  01EA  026A               	subwf	_pidIntegrated,w
 13050  01EB                     u3395:	
 13051  01EB  1C03               	skipc
 13052  01EC  2A01               	goto	l2935
 13053  01ED  0020               	movlb	0	; select bank0
 13054  01EE  0869               	movf	_error+1,w
 13055  01EF  00F1               	movwf	___wmul@multiplier+1
 13056  01F0  0868               	movf	_error,w
 13057  01F1  00F0               	movwf	___wmul@multiplier
 13058  01F2  0021               	movlb	1	; select bank1
 13059  01F3  085D               	movf	(_Ki+1)^(0+128),w
 13060  01F4  00F3               	movwf	___wmul@multiplicand+1
 13061  01F5  085C               	movf	_Ki^(0+128),w
 13062  01F6  00F2               	movwf	___wmul@multiplicand
 13063  01F7  3180  2004  3181   	fcall	___wmul
 13064  01FA  0020               	movlb	0	; select bank0
 13065  01FB  086A               	movf	_pidIntegrated,w
 13066  01FC  0770               	addwf	?___wmul,w
 13067  01FD  00EA               	movwf	_pidIntegrated
 13068  01FE  086B               	movf	_pidIntegrated+1,w
 13069  01FF  3D71               	addwfc	?___wmul+1,w
 13070  0200                     L9:	
 13071  0200  00EB               	movwf	_pidIntegrated+1
 13072  0201                     l2935:	
 13073                           
 13074                           ;pid.c: 53: }
 13075                           ;pid.c: 54: }
 13076                           ;pid.c: 56: if (pidIntegrated< pidMinOutput)
 13077  0201  0020               	movlb	0	; select bank0
 13078  0202  086B               	movf	_pidIntegrated+1,w
 13079  0203  3A80               	xorlw	128
 13080  0204  00FA               	movwf	??_PID_Calculate
 13081  0205  0021               	movlb	1	; select bank1
 13082  0206  0844               	movf	(_pidMinOutput+1)^(0+128),w
 13083  0207  3A80               	xorlw	128
 13084  0208  027A               	subwf	??_PID_Calculate,w
 13085  0209  1D03               	skipz
 13086  020A  2A0E               	goto	u3405
 13087  020B  0843               	movf	_pidMinOutput^(0+128),w
 13088  020C  0020               	movlb	0	; select bank0
 13089  020D  026A               	subwf	_pidIntegrated,w
 13090  020E                     u3405:	
 13091  020E  1803               	skipnc
 13092  020F  2A18               	goto	l188
 13093                           
 13094                           ;pid.c: 57: {
 13095                           ;pid.c: 58: pidIntegrated= pidMinOutput;
 13096  0210  0021               	movlb	1	; select bank1
 13097  0211  0844               	movf	(_pidMinOutput+1)^(0+128),w
 13098  0212  0020               	movlb	0	; select bank0
 13099  0213  00EB               	movwf	_pidIntegrated+1
 13100  0214  0021               	movlb	1	; select bank1
 13101  0215  0843               	movf	_pidMinOutput^(0+128),w
 13102  0216  0020               	movlb	0	; select bank0
 13103  0217  00EA               	movwf	_pidIntegrated
 13104  0218                     l188:	
 13105                           
 13106                           ;pid.c: 59: }
 13107                           ;pid.c: 61: if (pidIntegrated> pidMaxOutput)
 13108  0218  0022               	movlb	2	; select bank2
 13109  0219  086E               	movf	(_pidMaxOutput+1)^(0+256),w
 13110  021A  3A80               	xorlw	128
 13111  021B  00FA               	movwf	??_PID_Calculate
 13112  021C  0020               	movlb	0	; select bank0
 13113  021D  086B               	movf	_pidIntegrated+1,w
 13114  021E  3A80               	xorlw	128
 13115  021F  027A               	subwf	??_PID_Calculate,w
 13116  0220  1D03               	skipz
 13117  0221  2A25               	goto	u3415
 13118  0222  086A               	movf	_pidIntegrated,w
 13119  0223  0022               	movlb	2	; select bank2
 13120  0224  026D               	subwf	_pidMaxOutput^(0+256),w
 13121  0225                     u3415:	
 13122  0225  1803               	skipnc
 13123  0226  2A2F               	goto	l189
 13124                           
 13125                           ;pid.c: 62: {
 13126                           ;pid.c: 63: pidIntegrated= pidMaxOutput;
 13127  0227  0022               	movlb	2	; select bank2
 13128  0228  086E               	movf	(_pidMaxOutput+1)^(0+256),w
 13129  0229  0020               	movlb	0	; select bank0
 13130  022A  00EB               	movwf	_pidIntegrated+1
 13131  022B  0022               	movlb	2	; select bank2
 13132  022C  086D               	movf	_pidMaxOutput^(0+256),w
 13133  022D  0020               	movlb	0	; select bank0
 13134  022E  00EA               	movwf	_pidIntegrated
 13135  022F                     l189:	
 13136                           
 13137                           ;pid.c: 64: }
 13138                           ;pid.c: 66: if(pidCount>4)
 13139  022F  0021               	movlb	1	; select bank1
 13140  0230  0842               	movf	(_pidCount+1)^(0+128),w
 13141  0231  3A80               	xorlw	128
 13142  0232  00FA               	movwf	??_PID_Calculate
 13143  0233  3080               	movlw	128
 13144  0234  027A               	subwf	??_PID_Calculate,w
 13145  0235  1D03               	skipz
 13146  0236  2A39               	goto	u3425
 13147  0237  3005               	movlw	5
 13148  0238  0241               	subwf	_pidCount^(0+128),w
 13149  0239                     u3425:	
 13150  0239  1C03               	skipc
 13151  023A  2A45               	goto	l2945
 13152                           
 13153                           ;pid.c: 67: {
 13154                           ;pid.c: 68: integralValue = pidIntegrated;
 13155  023B  0020               	movlb	0	; select bank0
 13156  023C  086B               	movf	_pidIntegrated+1,w
 13157  023D  0021               	movlb	1	; select bank1
 13158  023E  00BC               	movwf	(_integralValue+1)^(0+128)
 13159  023F  0020               	movlb	0	; select bank0
 13160  0240  086A               	movf	_pidIntegrated,w
 13161  0241  0021               	movlb	1	; select bank1
 13162  0242  00BB               	movwf	_integralValue^(0+128)
 13163                           
 13164                           ;pid.c: 69: pidCount=0;
 13165  0243  01C1               	clrf	_pidCount^(0+128)
 13166  0244  01C2               	clrf	(_pidCount+1)^(0+128)
 13167  0245                     l2945:	
 13168                           
 13169                           ;pid.c: 70: }
 13170                           ;pid.c: 72: lastError=error;
 13171  0245  0020               	movlb	0	; select bank0
 13172  0246  0869               	movf	_error+1,w
 13173  0247  0021               	movlb	1	; select bank1
 13174  0248  00BE               	movwf	(_lastError+1)^(0+128)
 13175  0249  0020               	movlb	0	; select bank0
 13176  024A  0868               	movf	_error,w
 13177  024B  0021               	movlb	1	; select bank1
 13178  024C  00BD               	movwf	_lastError^(0+128)
 13179                           
 13180                           ;pid.c: 75: derivativeValue=(error-D_PrevError)*Kd;
 13181  024D  0931               	comf	_D_PrevError^(0+128),w
 13182  024E  00FA               	movwf	??_PID_Calculate
 13183  024F  0932               	comf	(_D_PrevError+1)^(0+128),w
 13184  0250  00FB               	movwf	??_PID_Calculate+1
 13185  0251  0AFA               	incf	??_PID_Calculate,f
 13186  0252  1903               	skipnz
 13187  0253  0AFB               	incf	??_PID_Calculate+1,f
 13188  0254  0020               	movlb	0	; select bank0
 13189  0255  0868               	movf	_error,w
 13190  0256  077A               	addwf	??_PID_Calculate,w
 13191  0257  00F0               	movwf	___wmul@multiplier
 13192  0258  0869               	movf	_error+1,w
 13193  0259  3D7B               	addwfc	??_PID_Calculate+1,w
 13194  025A  00F1               	movwf	___wmul@multiplier+1
 13195  025B  0021               	movlb	1	; select bank1
 13196  025C  085B               	movf	(_Kd+1)^(0+128),w
 13197  025D  00F3               	movwf	___wmul@multiplicand+1
 13198  025E  085A               	movf	_Kd^(0+128),w
 13199  025F  00F2               	movwf	___wmul@multiplicand
 13200  0260  3180  2004  3181   	fcall	___wmul
 13201  0263  0871               	movf	?___wmul+1,w
 13202  0264  0021               	movlb	1	; select bank1
 13203  0265  00B6               	movwf	(_derivativeValue+1)^(0+128)
 13204  0266  0870               	movf	?___wmul,w
 13205  0267  00B5               	movwf	_derivativeValue^(0+128)
 13206                           
 13207                           ;pid.c: 76: D_PrevError = error;
 13208  0268  0020               	movlb	0	; select bank0
 13209  0269  0869               	movf	_error+1,w
 13210  026A  0021               	movlb	1	; select bank1
 13211  026B  00B2               	movwf	(_D_PrevError+1)^(0+128)
 13212  026C  0020               	movlb	0	; select bank0
 13213  026D  0868               	movf	_error,w
 13214  026E  0021               	movlb	1	; select bank1
 13215  026F  00B1               	movwf	_D_PrevError^(0+128)
 13216                           
 13217                           ;pid.c: 109: Result = errorValue+integralValue+derivativeValue;
 13218  0270  083B               	movf	_integralValue^(0+128),w
 13219  0271  0739               	addwf	_errorValue^(0+128),w
 13220  0272  00FA               	movwf	??_PID_Calculate
 13221  0273  083C               	movf	(_integralValue+1)^(0+128),w
 13222  0274  3D3A               	addwfc	(_errorValue+1)^(0+128),w
 13223  0275  00FB               	movwf	??_PID_Calculate+1
 13224  0276  0835               	movf	_derivativeValue^(0+128),w
 13225  0277  077A               	addwf	??_PID_Calculate,w
 13226  0278  00B3               	movwf	_Result^(0+128)
 13227  0279  0836               	movf	(_derivativeValue+1)^(0+128),w
 13228  027A  3D7B               	addwfc	??_PID_Calculate+1,w
 13229  027B  00B4               	movwf	(_Result+1)^(0+128)
 13230                           
 13231                           ;pid.c: 111: if (Result < pidMinOutput)
 13232  027C  0834               	movf	(_Result+1)^(0+128),w
 13233  027D  3A80               	xorlw	128
 13234  027E  00FA               	movwf	??_PID_Calculate
 13235  027F  0844               	movf	(_pidMinOutput+1)^(0+128),w
 13236  0280  3A80               	xorlw	128
 13237  0281  027A               	subwf	??_PID_Calculate,w
 13238  0282  1D03               	skipz
 13239  0283  2A86               	goto	u3435
 13240  0284  0843               	movf	_pidMinOutput^(0+128),w
 13241  0285  0233               	subwf	_Result^(0+128),w
 13242  0286                     u3435:	
 13243  0286  1803               	skipnc
 13244  0287  2A8D               	goto	l191
 13245                           
 13246                           ;pid.c: 112: {
 13247                           ;pid.c: 113: Result = pidMinOutput;
 13248  0288  0021               	movlb	1	; select bank1
 13249  0289  0844               	movf	(_pidMinOutput+1)^(0+128),w
 13250  028A  00B4               	movwf	(_Result+1)^(0+128)
 13251  028B  0843               	movf	_pidMinOutput^(0+128),w
 13252  028C  00B3               	movwf	_Result^(0+128)
 13253  028D                     l191:	
 13254                           
 13255                           ;pid.c: 114: }
 13256                           ;pid.c: 116: if (Result > pidMaxOutput)
 13257  028D  0022               	movlb	2	; select bank2
 13258  028E  086E               	movf	(_pidMaxOutput+1)^(0+256),w
 13259  028F  3A80               	xorlw	128
 13260  0290  00FA               	movwf	??_PID_Calculate
 13261  0291  0021               	movlb	1	; select bank1
 13262  0292  0834               	movf	(_Result+1)^(0+128),w
 13263  0293  3A80               	xorlw	128
 13264  0294  027A               	subwf	??_PID_Calculate,w
 13265  0295  1D03               	skipz
 13266  0296  2A9A               	goto	u3445
 13267  0297  0833               	movf	_Result^(0+128),w
 13268  0298  0022               	movlb	2	; select bank2
 13269  0299  026D               	subwf	_pidMaxOutput^(0+256),w
 13270  029A                     u3445:	
 13271  029A  1803               	skipnc
 13272  029B  2AA4               	goto	l192
 13273                           
 13274                           ;pid.c: 117: {
 13275                           ;pid.c: 118: Result = pidMaxOutput;
 13276  029C  0022               	movlb	2	; select bank2
 13277  029D  086E               	movf	(_pidMaxOutput+1)^(0+256),w
 13278  029E  0021               	movlb	1	; select bank1
 13279  029F  00B4               	movwf	(_Result+1)^(0+128)
 13280  02A0  0022               	movlb	2	; select bank2
 13281  02A1  086D               	movf	_pidMaxOutput^(0+256),w
 13282  02A2  0021               	movlb	1	; select bank1
 13283  02A3  00B3               	movwf	_Result^(0+128)
 13284  02A4                     l192:	
 13285                           
 13286                           ;pid.c: 119: }
 13287                           ;pid.c: 121: return (Result);
 13288  02A4  0021               	movlb	1	; select bank1
 13289  02A5  0834               	movf	(_Result+1)^(0+128),w
 13290  02A6  00F7               	movwf	?_PID_Calculate+1
 13291  02A7  0833               	movf	_Result^(0+128),w
 13292  02A8  00F6               	movwf	?_PID_Calculate
 13293  02A9  0008               	return
 13294  02AA                     __end_of_PID_Calculate:	
 13295                           
 13296                           	psect	text37
 13297  0004                     __ptext37:	
 13298 ;; *************** function ___wmul *****************
 13299 ;; Defined at:
 13300 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;  multiplier      2    0[COMMON] unsigned int 
 13303 ;;  multiplicand    2    2[COMMON] unsigned int 
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;  product         2    4[COMMON] unsigned int 
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  2    0[COMMON] unsigned int 
 13308 ;; Registers used:
 13309 ;;		wreg, status,2, status,0
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13318 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13319 ;;Total ram usage:        6 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; This function calls:
 13322 ;;		Nothing
 13323 ;; This function is called by:
 13324 ;;		_readAnalog
 13325 ;;		_PID_Calculate
 13326 ;;		_eval_poly
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           
 13330                           
 13331                           ;psect for function ___wmul
 13332  0004                     ___wmul:	
 13333                           
 13334                           ;incstack = 0
 13335                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13336  0004  01F4               	clrf	___wmul@product
 13337  0005  01F5               	clrf	___wmul@product+1
 13338  0006                     l2189:	
 13339  0006  1C70               	btfss	___wmul@multiplier,0
 13340  0007  280C               	goto	l541
 13341  0008  0872               	movf	___wmul@multiplicand,w
 13342  0009  07F4               	addwf	___wmul@product,f
 13343  000A  0873               	movf	___wmul@multiplicand+1,w
 13344  000B  3DF5               	addwfc	___wmul@product+1,f
 13345  000C                     l541:	
 13346  000C  3001               	movlw	1
 13347  000D                     u2075:	
 13348  000D  35F2               	lslf	___wmul@multiplicand,f
 13349  000E  0DF3               	rlf	___wmul@multiplicand+1,f
 13350  000F  0B89               	decfsz	9,f
 13351  0010  280D               	goto	u2075
 13352  0011  3001               	movlw	1
 13353  0012                     u2085:	
 13354  0012  36F1               	lsrf	___wmul@multiplier+1,f
 13355  0013  0CF0               	rrf	___wmul@multiplier,f
 13356  0014  0B89               	decfsz	9,f
 13357  0015  2812               	goto	u2085
 13358  0016  0870               	movf	___wmul@multiplier,w
 13359  0017  0471               	iorwf	___wmul@multiplier+1,w
 13360  0018  1D03               	btfss	3,2
 13361  0019  2806               	goto	l2189
 13362  001A  0875               	movf	___wmul@product+1,w
 13363  001B  00F1               	movwf	?___wmul+1
 13364  001C  0874               	movf	___wmul@product,w
 13365  001D  00F0               	movwf	?___wmul
 13366  001E  0008               	return
 13367  001F                     __end_of___wmul:	
 13368  007E                     btemp	set	126	;btemp
 13369  007E                     wtemp	set	126
 13370  007E                     wtemp0	set	126
 13371  0080                     wtemp1	set	128
 13372  0082                     wtemp2	set	130
 13373  0084                     wtemp3	set	132
 13374  0086                     wtemp4	set	134
 13375  0088                     wtemp5	set	136
 13376  007F                     wtemp6	set	127
 13377  007E                     ttemp	set	126
 13378  007E                     ttemp0	set	126
 13379  0081                     ttemp1	set	129
 13380  0084                     ttemp2	set	132
 13381  0087                     ttemp3	set	135
 13382  007F                     ttemp4	set	127
 13383  007E                     ltemp	set	126
 13384  007E                     ltemp0	set	126
 13385  0082                     ltemp1	set	130
 13386  0086                     ltemp2	set	134
 13387  0080                     ltemp3	set	128


Data Sizes:
    Strings     107
    Constant    27
    Data        45
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      80
    BANK1            80     10      74
    BANK2            80     73      80
    BANK3            80      0      66
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            8      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                83    83      0   48929
                                              0 BANK1     10    10      0
                                              0 BANK2     73    73      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30911
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16327
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7581
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    2188
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           5     5      0    6177
                                             14 BANK0      5     5      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM7_LoadDutyValue
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM7_LoadDutyValue                                   4     2      2     203
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     586
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       19    14      5    3819
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1281
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1462
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1312
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _PWM7_LoadDutyValue
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     49      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      42      11       82.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     13A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11               8      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     13A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat May 12 22:07:37 2018

        __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000                               l55 0808  
                             l94 1602                               l96 1608                               l98 160D  
                             _Kd 00DA                               _Ki 00DC                               _Kp 00DE  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 1612                              l191 028D                              l192 02A4  
                            l450 06EF                              l188 0218                              l452 0713  
                            l541 000C                              l189 022F                              l710 0952  
                            l702 0937                              l385 047C                              l379 03E8  
                            l709 094A                              l733 0E6D                              l596 097A  
                            l793 0A57                              _GIE 005F                              _RA0 0060  
                            _RB0 0068                              _RA2 0062                              _RB1 0069  
                            _RC0 0070                              _RB2 006A                              _RC1 0071  
                            _RA6 0066                              _RA7 0067                     __CFG_CPD$OFF 0000  
                            _key 006E                              _log 0BA1                  __end_of_ADCRead 080F  
                   ___awmod@sign 0076                  _TMR2_Initialize 158B                     __CFG_BORV$LO 0000  
                            wreg 0009                      main@analogs 0163                  __end_of_LCD_Cmd 15D0  
                   __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A                   _LCD_Set_Cursor 177F  
                   ___ftdiv@sign 003F                             l3011 02C6                             l2211 0DFD  
                           l3111 044A                             l2151 0923                             l2143 090D  
                           l2207 0DF6                             l2311 0CDD                             l3105 0431  
                           l3017 02D4                             l3033 02AA                             l2241 0E4C  
                           l2217 0E0C                             l2403 0819                             l3035 0302  
                           l2147 0914                             l2235 0E39                             l2307 0CD5  
                           l2421 083E                             l3133 0496                             l3125 0485  
                           l3061 0352                             l3141 04AC                             l3045 032C  
                           l2157 093C                             l2149 091E                             l2253 0E7F  
                           l2237 0E43                             l2229 0E26                             l2183 160E  
                           l2175 1604                             l2415 0826                             l2407 0820  
                           l3127 0488                             l3143 04DA                             l2159 0944  
                           l2247 0E5F                             l2239 0E48                             l3231 0689  
                           l2417 0832                             l2425 0847                             l3073 039D  
                           l2257 0E91                             l2249 0E69                             l2441 1670  
                           l3241 069D                             l2179 1609                             l2611 0D26  
                           l2267 0EAC                             l2283 0C7E                             l3227 0685  
                           l2189 0006                             l2533 16A4                             l2365 0869  
                           l2429 084F                             l2621 0D2D                             l3093 03F1  
                           l2453 1735                             l2277 0C68                             l3245 06DC  
                           l3237 0698                             l3253 06F0                             l2527 1693  
                           l2391 08A0                             l2383 088F                             l2375 0871  
                           l2359 085E                             l2631 0D6C                             l2623 0D5A  
                           l3079 03B6                             l3095 03F4                             l2295 0CB9  
                           l3263 0715                             l2377 087D                             l2641 0DAD  
                           l2633 0D7D                             l2801 0B0F                             l2449 171F  
                           l2473 1756                             l3249 06E5                             l3185 053E  
                           l2547 179F                             l2387 0898                             l2627 0D5E  
                           l2299 0CC1                             l2491 08FE                             l2723 0BC0  
                           l3275 073E                             l3259 0707                             l2645 0DBA  
                           l2629 0D63                             l2901 0FD8                             l2821 0B66  
                           l3269 071B                             l2639 0D81                             l2751 15BA  
                           l2807 0B25                             l3295 07A4                             l2921 0192  
                           l2745 15B1                             l2841 1650                             l2729 0BD3  
                           l2931 01E1                             l2851 0A03                             l2925 01AC  
                           l2597 1630                             l2773 099B                             l2765 098B  
                           l2829 0B7F                             l2935 0201                             l2791 09E2  
                           l2783 09C9                             l2775 09A9                             l2871 0A41  
                           l2945 0245                             l2787 09D4                             l2883 0A68  
                           l2877 0A4E                             l2869 0A33                             l2879 0A5A  
                           ?_log 0057                             STR_1 1070                             STR_2 107B  
                           STR_3 105F                             STR_4 104E                             STR_5 103D  
                           STR_6 101B                             STR_7 102C                             u2005 0959  
                           u3005 099E                             _LATA 0016                             _LATB 0017  
                           _LATC 0018                             u3025 09AA                             u3105 0B47  
                           u2225 0E3A                             u2075 000D                             u3035 09BE  
                           u3115 0B67                             u2085 0012                             u3045 09CA  
                           u3125 0B76                             u3205 0A34                             u4007 0AF3  
                           u3135 0B80                             u2255 0E4D                             u4017 16C8  
                           u3305 0FC8                             u2425 0CDE                             _T2PR 028D  
                           u4027 16D4                             u2515 087E                             u2195 0E27  
                           u3235 0A4F                             u2435 0CE4                             u2355 0C8A  
                           u3405 020E                             u4037 15CA                             u2525 0888  
                           u3325 0FE4                             u2285 0E60                             u2365 0C9A  
                           u3415 0225                             u2455 16BC                             u2535 0890  
                           u2615 0838                             u3095 0B37                             u3175 0A0A  
                           u3425 0239                             u3345 0170                             u2625 083F  
                           u3505 04BB                             u3265 0ED9                             u2385 0CC2  
                           u3435 0286                             u3355 017C                             u3275 0F2B  
                           u2395 0CC8                             u3445 029A                             u3365 019C  
                           u3525 038D                             u3285 0F68                             u1925 0919  
                           u3375 01B8                             u2495 0874                             u3455 02C0  
                           u3295 0FAF                             u3385 01C4                             u2905 15DF  
                           u1945 0932                             u3395 01EB                             u2755 178B  
                           u2595 0829                             u3715 06BA                             u3660 0511  
                           u3645 04A5                             u1965 093F                             u3725 06DA  
                           u2790 0D10                             u2775 17AA                             u2855 0D9B  
                           u3575 0421                             u3807 0789                             u2880 1707  
                           u3817 079D                             u3745 0702                             u3907 17F8  
                           u3827 030D                             u3755 070E                             u3917 0A7C  
                           u3837 034A                             u3927 0A8A                             u3847 04D3  
                           u3937 0A95                             u3857 0357                             u3947 0A9F  
                           u3867 03E1                             u3957 0AA9                             u3877 0475  
                           u3797 0534                             u3967 0AB7                             u3887 17D9  
                           u3977 0AC5                             u3897 17E9                             u3987 0AD5  
                           u3997 0AE4              tempCalc@analogValue 005D                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _desc 00CE                             _main 04E8                     ___ftpack@arg 0070  
             __size_of_LCD_Clear 0008                             _loop 016F                     ___ftpack@exp 0073  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             log@x 0057                    __CFG_BOREN$ON 0000  
                           ltemp 007E                             start 0002               ??_LCD_Write_String 0077  
                           ttemp 007E                             wtemp 007E                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E                    _LCD_Write_Int 0D05  
                   ___ftmul@sign 002F                     ___fttol@exp1 007D                            ??_log 005A  
                   ___fttol@lval 0079                 __end_of_LCD_Init 0AF8                 __end_of_LCD_Port 1614  
 __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 1568                  __end_of___aldiv 09EB  
                          _ADACQ 009D                            _ADCAP 009B                            _ADACT 0099  
                          ?_main 0070                            _ADCLK 0098                            _ADPCH 009E  
                          _ADREF 009A                  __end_of___awdiv 08A5                            _ADPRE 009C  
                __end_of___ftadd 0EC4                    __CFG_WDTE$OFF 0000                  __end_of___awmod 0854  
                          _ADRPT 010D                  __end_of___ftdiv 0BA1                  __end_of___ftmul 0D05  
                ___awdiv@divisor 0070                  __end_of___ftsub 1666                  __end_of___fttol 0A71  
                          _T2CON 028E                            _LATC2 00C2                            _T2HLT 028F  
                          _T2TMR 028C                            _T2RST 0291                  ___awdiv@counter 0075  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013           __end_of_LCD_Set_Cursor 17BE                    ___awtoft@sign 007D  
                __end_of_readKey 15BC                            _frexp 1744                            _errno 00B7  
                          _error 0068                    ___ftpack@sign 0074                            _timer 00C7  
                          main@j 0168                            main@x 0152                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                 InitCustomChars@i 0076                   ?_LCD_Write_Int 0079  
                 _LCD_Write_Char 16AC                  __initialization 07AB                      log@exponent 005B  
                   __end_of_main 07AB                readAnalog@channel 0026          __end_of_TMR2_Initialize 1599  
                      ??_ADCRead 0073                           ??_main 00E0                    ___fttol@sign1 0078  
              __end_of_LCD_Clear 155F                        ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074  
                         _ADCON0 0093                           _ADCON1 0094                           _ADCON2 0095  
                         _ADCON3 0096                           ?_frexp 0070                           _ADLTHH 010F  
                         _ADLTHL 010E                           _ADRESH 008D                           _ADRESL 008C  
                         _ADSTAT 0097                           _ADUTHH 0111                 ___awdiv@dividend 0072  
                         _ADUTHL 0110                 __end_of___awtoft 1686                           _ANSELA 0F38  
                         _ANSELB 0F43                           _ANSELC 0F4E                 __end_of___ftpack 0969  
                         _RC3PPS 0F23                   __CFG_WDTCCS$SC 0000                           _FVRCON 090C  
                         _OSCFRQ 0893                           _TRISC2 009A           __end_of_LCD_Write_Char 16D8  
                 __CFG_PWRTE$OFF 0000                           _Result 00B3                     _CCPTMRS1bits 021F  
                         ___ftge 1709           LCD_Write_Int@numPlaces 007C                        ??___aldiv 0078  
                         ___wmul 0004                        ??___awdiv 0074                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                   _PWM_Initialize 1568  
                      ??___ftdiv 0036                        ??___ftmul 0026                           _choice 006C  
                      ??___ftsub 007E                        ??___fttol 0074           main@currentTemperature 015B  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                           _timer2 006F  
                ___awmod@counter 0075                           _totals 00A0            ___ftmul@f3_as_product 002B  
               __end_of_tempCalc 013C                  _ADCC_Initialize 1614                        ??_readKey 0070  
               LCD_Write_Int@str 0025                  _InitCustomChars 1686                  LCD_Set_Cursor@w 0079  
                LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078  
                  _pidIntegrated 006A         readAnalog@analog_channel 0079                _SYSTEM_Initialize 17BE  
               __end_oflog@coeff 101B          __end_of__initialization 07FD                        ?_LCD_Init 0070  
                      ?_LCD_Port 0070                       ___ftadd@f1 0040                       ___ftadd@f2 0043  
                _derivativeValue 00B5                       ___ftge@ff1 0070                       ___ftge@ff2 0073  
                ??_LCD_Write_Int 0020               ?_SYSTEM_Initialize 0070                     eval_poly@res 0054  
                     ___ftdiv@f1 0033                       ___ftdiv@f2 0030                       ___ftdiv@f3 003B  
                ?_LCD_Write_Char 0070                    LCD_Init@style 0077                       ___awtoft@c 0078  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023           __end_of_PWM_Initialize 1573  
                     ___ftsub@f1 0050                       ___ftsub@f2 004D                       ___fttol@f1 0070  
                 __pcstackCOMMON 0070                        LCD_Port@a 0070                     __pidataBANK1 15E6  
                   __pidataBANK2 1550                     __pidataBANK3 1599              ??_SYSTEM_Initialize 0078  
                  __end_of_frexp 177F                 ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016  
                        ??_frexp 0074        __end_of_SYSTEM_Initialize 1800                       __pbssBANK0 0068  
                     __pbssBANK1 00A0                       __pbssBANK3 01A0               __size_of_eval_poly 0060  
                     ??_LCD_Init 0074                       ??_LCD_Port 0070           __size_of_PID_Calculate 016E  
                     _delayCount 006D                  ?_PWM_Initialize 0070                       __pmaintext 04E8  
                        ?___ftge 0070                          ?___wmul 0070                  __CFG_PPS1WAY$ON 0000  
        __end_of_ADCC_Initialize 162E                          _ADCRead 0801        __size_of_LCD_Write_String 001A  
                      ?___awtoft 0078                        ?___ftpack 0070                          _ADSTPTH 0113  
                        _ADSTPTL 0112         __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000  
        __end_of_InitCustomChars 16AC                          _LCD_Cmd 15BC                   main@holdOutput 0155  
               main@lidOpenCount 0156                          _OSCCON1 088D                          _OSCCON3 088F  
                        _OSCTUNE 0892                          _PWM7DCH 0391                          _PWM7DCL 0390  
                        _PWM7CON 0392                          _PPSLOCK 0E8F                   main@dutyCycle6 0161  
          PID_Calculate@setpoint 0076                        ?_tempCalc 005D                       _readAnalog 0EC4  
                  _integralValue 00BB                          ___aldiv 0969                          ___cgram 01D2  
                     _menuChoice 02AA                  __size_of___ftge 003B                          ___awdiv 0854  
                        ___ftadd 0DCE                          ___awmod 080F                          ___ftdiv 0AF8  
                __size_of___wmul 001B                          ___ftmul 0C51                          ___ftsub 1648  
                        ___fttol 09EB                       _errorValue 00B9                       ??___awtoft 007B  
                     ??___ftpack 0075                __end_of_eval_poly 0905                 ??_LCD_Set_Cursor 0075  
                        __ptext1 001F                          __ptext2 0BA1                          __ptext3 1744  
                        __ptext4 08A5                          __ptext5 0C51                          __ptext6 1709  
                        __ptext7 1666                          __ptext8 09EB                          __ptext9 1648  
                  _PID_Calculate 013C            _OSCILLATOR_Initialize 155F                          _readKey 15A9  
                      _T2CONbits 028E                     __size_of_log 00B0                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                     _highRangeSet 00D2                 ___aldiv@dividend 0074  
       ??_PIN_MANAGER_Initialize 0070                          _samples 2378                          _testKey 00C9  
                      _LCD_Clear 1557       __size_of_SYSTEM_Initialize 0042                          clrloop0 1574  
           end_of_initialization 07FD                          init_ram 157F                          initloop 1580  
                     ??_tempCalc 007E                 ___aldiv@quotient 0022                LCD_Write_Int@sign 007D  
                     main@F13670 01A0                       main@F13664 00AD                     __pstringtext 1000  
               ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0076  
               ?_InitCustomChars 0070                       ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000  
              LCD_Write_String@a 0075                LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071  
                    ___ftdiv@exp 003E                __size_of_LCD_Init 0087                __size_of_LCD_Port 0018  
                     main@output 0153                      ___ftmul@exp 002A                      ?_readAnalog 0026  
                    ?_menuChoice 0070                   __end_of___ftge 1744                   __end_of___wmul 001F  
               _LCD_Write_String 162E           ?_OSCILLATOR_Initialize 0070              start_initialization 07AB  
                     eval_poly@d 0050                       eval_poly@n 0052                       eval_poly@x 004D  
__size_of_PIN_MANAGER_Initialize 0031                      __end_of_log 0C51                       frexp@value 0070  
               ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 0DCE  
               __CFG_LPBOREN$OFF 0000                         ??___ftge 0076                tempCalc@steinhart 0065  
                       ??___wmul 0074                     _pidMaxOutput 016D                    _tempCalc$1016 0062  
                    __pdataBANK1 00CA                      __pdataBANK2 0169                      __pdataBANK3 01D2  
                ??_PID_Calculate 007A       __end_of_PWM7_LoadDutyValue 15E6                  LCD_Write_Char@a 0074  
                LCD_Write_Char@y 0073                         ?_ADCRead 0070     PWM7_LoadDutyValue@dutyCycle7 0070  
                   _pidMinOutput 00C3                         ?_LCD_Cmd 0070                __size_of___awtoft 0020  
              __size_of___ftpack 0064                      __pbssBIGRAM 2378                         LCD_Cmd@a 0073  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00E0  
                  __pcstackBANK2 0120         __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074  
            __size_of_readAnalog 013C              __size_of_menuChoice 023E           _PIN_MANAGER_Initialize 16D8  
                       ?___aldiv 0070                __size_of_tempCalc 011D                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
            main@lastTemperature 0157                         ?_readKey 0070                        _eval_poly 08A5  
                      _lastError 00BD                        _menuDelay 00BF                   __size_of_frexp 003B  
                       _T2CLKCON 0290                  ___aldiv@divisor 0070                  ___aldiv@counter 0020  
                       _LCD_Init 0A71                   ___wmul@product 0074                         _LCD_Port 15FC  
                      clear_ram0 1573                         _PIE0bits 0716                         _PIR4bits 0710  
               __size_of_ADCRead 000E                       _ADCON0bits 0093                ___wmul@multiplier 0070  
                     ?_eval_poly 004D                 __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 1648  
              ??_TMR2_Initialize 0070                  readAnalog@value 007B                        frexp@eptr 0073  
                   ??_readAnalog 0028                     ??_menuChoice 002E          ??_OSCILLATOR_Initialize 0070  
                 LCD_Write_Int@i 002C                   LCD_Write_Int@j 002A                 __size_of___aldiv 0082  
               __size_of___awdiv 0051                 __size_of___ftadd 00F6                 __size_of___awmod 0045  
               __size_of___ftdiv 00A9                 __size_of___ftmul 00B4                 __size_of___ftsub 001E  
               __size_of___fttol 0086                         ___awtoft 1666                         ___ftpack 0905  
       __size_of_ADCC_Initialize 001A                         _channels 00CA                 __size_of_readKey 0013  
              PID_Calculate@temp 0078                         __ptext10 0DCE                         __ptext11 0AF8  
                       __ptext20 0D05                         __ptext12 0905                         __ptext21 080F  
                       __ptext13 0EC4                         __ptext30 1557                         __ptext22 0854  
                       __ptext14 0969                         __ptext31 1686                         __ptext23 177F  
                       __ptext15 0801                         __ptext32 16AC                         __ptext24 17BE  
                       __ptext16 02AA                         __ptext33 15BC                         __ptext25 158B  
                       __ptext17 15A9                         __ptext34 15FC                         __ptext26 1568  
                       __ptext18 15D0                         __ptext35 1614                         __ptext27 16D8  
                       __ptext19 162E                         __ptext36 013C                         __ptext28 155F  
                       __ptext37 0004                         __ptext29 0A71               __end_of_readAnalog 1000  
        __size_of_LCD_Set_Cursor 003F                        tempCalc@R 005F         __size_of_InitCustomChars 0026  
             __end_of_menuChoice 04E8              LCD_Write_Int@F13694 00A8                         _pidCount 00C1  
                  __size_of_main 02C3             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 001F  
                       _setpoint 0169                      _lowRangeSet 00D6      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1000                      ??_eval_poly 007E                      _sampleIndex 00C5  
             _PWM7_LoadDutyValue 15D0               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
            ?_PWM7_LoadDutyValue 0070                main@outputSamples 0120                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C             main@pidPeriodCounter 0159  
             LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0079            __end_of_PID_Calculate 02AA  
           ??_PWM7_LoadDutyValue 0072                     ___aldiv@sign 0021                      _D_PrevError 00B1  
         __size_of_LCD_Write_Int 00C9                  main@outputIndex 0167   __end_of_PIN_MANAGER_Initialize 1709  
              ??_ADCC_Initialize 0070                  main@outputTotal 015D                ??_InitCustomChars 0075  
