

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat May 12 16:54:00 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x620,48
    58                           	dabs	1,0x5A0,80
    59                           	dabs	1,0x550,32
    60                           	dabs	1,0x2350,0,_samples
    61                           	dabs	1,0x7E,2
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  001C                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  0110                     	;# 
   117  0110                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011C                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011E                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  018E                     	;# 
   156  018F                     	;# 
   157  0190                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0196                     	;# 
   161  0197                     	;# 
   162  0198                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019C                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  020F                     	;# 
   171  020F                     	;# 
   172  0210                     	;# 
   173  0210                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0213                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  0218                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021C                     	;# 
   192  021D                     	;# 
   193  021D                     	;# 
   194  021E                     	;# 
   195  021F                     	;# 
   196  028C                     	;# 
   197  028C                     	;# 
   198  028D                     	;# 
   199  028D                     	;# 
   200  028E                     	;# 
   201  028F                     	;# 
   202  0290                     	;# 
   203  0290                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0292                     	;# 
   207  0293                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0295                     	;# 
   211  0296                     	;# 
   212  0296                     	;# 
   213  0297                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029B                     	;# 
   220  029C                     	;# 
   221  029C                     	;# 
   222  029D                     	;# 
   223  030C                     	;# 
   224  030C                     	;# 
   225  030D                     	;# 
   226  030E                     	;# 
   227  030F                     	;# 
   228  0310                     	;# 
   229  0310                     	;# 
   230  0311                     	;# 
   231  0312                     	;# 
   232  0313                     	;# 
   233  0314                     	;# 
   234  0314                     	;# 
   235  0315                     	;# 
   236  0316                     	;# 
   237  0317                     	;# 
   238  0318                     	;# 
   239  0318                     	;# 
   240  0319                     	;# 
   241  031A                     	;# 
   242  031B                     	;# 
   243  031C                     	;# 
   244  031C                     	;# 
   245  031D                     	;# 
   246  031E                     	;# 
   247  031F                     	;# 
   248  038C                     	;# 
   249  038D                     	;# 
   250  038E                     	;# 
   251  0390                     	;# 
   252  0391                     	;# 
   253  0392                     	;# 
   254  040C                     	;# 
   255  040D                     	;# 
   256  040E                     	;# 
   257  040F                     	;# 
   258  0410                     	;# 
   259  0411                     	;# 
   260  0416                     	;# 
   261  0416                     	;# 
   262  0417                     	;# 
   263  0418                     	;# 
   264  0418                     	;# 
   265  0419                     	;# 
   266  041A                     	;# 
   267  041A                     	;# 
   268  041B                     	;# 
   269  041C                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  041F                     	;# 
   274  048C                     	;# 
   275  048C                     	;# 
   276  048D                     	;# 
   277  048E                     	;# 
   278  048F                     	;# 
   279  048F                     	;# 
   280  0490                     	;# 
   281  0491                     	;# 
   282  0492                     	;# 
   283  0492                     	;# 
   284  0493                     	;# 
   285  0494                     	;# 
   286  0495                     	;# 
   287  0495                     	;# 
   288  0496                     	;# 
   289  0497                     	;# 
   290  0498                     	;# 
   291  0499                     	;# 
   292  049A                     	;# 
   293  049B                     	;# 
   294  049C                     	;# 
   295  049D                     	;# 
   296  050C                     	;# 
   297  050C                     	;# 
   298  050D                     	;# 
   299  050E                     	;# 
   300  050F                     	;# 
   301  050F                     	;# 
   302  0510                     	;# 
   303  0511                     	;# 
   304  0512                     	;# 
   305  0512                     	;# 
   306  0513                     	;# 
   307  0514                     	;# 
   308  0515                     	;# 
   309  0515                     	;# 
   310  0516                     	;# 
   311  0517                     	;# 
   312  0518                     	;# 
   313  0519                     	;# 
   314  051A                     	;# 
   315  051B                     	;# 
   316  051C                     	;# 
   317  051D                     	;# 
   318  058C                     	;# 
   319  058C                     	;# 
   320  058D                     	;# 
   321  058E                     	;# 
   322  058F                     	;# 
   323  058F                     	;# 
   324  0590                     	;# 
   325  0591                     	;# 
   326  0592                     	;# 
   327  0593                     	;# 
   328  060C                     	;# 
   329  060D                     	;# 
   330  060E                     	;# 
   331  060F                     	;# 
   332  0610                     	;# 
   333  0611                     	;# 
   334  0612                     	;# 
   335  0613                     	;# 
   336  0614                     	;# 
   337  0616                     	;# 
   338  0617                     	;# 
   339  0618                     	;# 
   340  0619                     	;# 
   341  061A                     	;# 
   342  061B                     	;# 
   343  061C                     	;# 
   344  061D                     	;# 
   345  061E                     	;# 
   346  068C                     	;# 
   347  068D                     	;# 
   348  068E                     	;# 
   349  068F                     	;# 
   350  0690                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  070C                     	;# 
   356  070D                     	;# 
   357  070E                     	;# 
   358  070F                     	;# 
   359  0710                     	;# 
   360  0711                     	;# 
   361  0712                     	;# 
   362  0713                     	;# 
   363  0714                     	;# 
   364  0716                     	;# 
   365  0717                     	;# 
   366  0718                     	;# 
   367  0719                     	;# 
   368  071A                     	;# 
   369  071B                     	;# 
   370  071C                     	;# 
   371  071D                     	;# 
   372  071E                     	;# 
   373  0796                     	;# 
   374  0797                     	;# 
   375  0798                     	;# 
   376  0799                     	;# 
   377  079A                     	;# 
   378  079B                     	;# 
   379  080C                     	;# 
   380  080D                     	;# 
   381  080E                     	;# 
   382  080F                     	;# 
   383  0810                     	;# 
   384  0811                     	;# 
   385  0812                     	;# 
   386  0813                     	;# 
   387  0814                     	;# 
   388  081A                     	;# 
   389  081B                     	;# 
   390  081C                     	;# 
   391  081D                     	;# 
   392  081E                     	;# 
   393  081F                     	;# 
   394  088C                     	;# 
   395  088D                     	;# 
   396  088E                     	;# 
   397  088F                     	;# 
   398  0890                     	;# 
   399  0891                     	;# 
   400  0892                     	;# 
   401  0893                     	;# 
   402  0895                     	;# 
   403  0896                     	;# 
   404  0897                     	;# 
   405  0898                     	;# 
   406  0899                     	;# 
   407  089A                     	;# 
   408  089B                     	;# 
   409  090C                     	;# 
   410  090E                     	;# 
   411  090F                     	;# 
   412  091F                     	;# 
   413  091F                     	;# 
   414  098F                     	;# 
   415  098F                     	;# 
   416  0990                     	;# 
   417  0991                     	;# 
   418  0992                     	;# 
   419  0993                     	;# 
   420  0994                     	;# 
   421  0995                     	;# 
   422  0996                     	;# 
   423  0997                     	;# 
   424  0E0F                     	;# 
   425  0E10                     	;# 
   426  0E11                     	;# 
   427  0E12                     	;# 
   428  0E13                     	;# 
   429  0E14                     	;# 
   430  0E15                     	;# 
   431  0E16                     	;# 
   432  0E17                     	;# 
   433  0E18                     	;# 
   434  0E19                     	;# 
   435  0E1A                     	;# 
   436  0E1B                     	;# 
   437  0E1C                     	;# 
   438  0E1D                     	;# 
   439  0E1E                     	;# 
   440  0E1F                     	;# 
   441  0E20                     	;# 
   442  0E21                     	;# 
   443  0E22                     	;# 
   444  0E23                     	;# 
   445  0E24                     	;# 
   446  0E25                     	;# 
   447  0E26                     	;# 
   448  0E27                     	;# 
   449  0E28                     	;# 
   450  0E29                     	;# 
   451  0E2A                     	;# 
   452  0E2B                     	;# 
   453  0E2C                     	;# 
   454  0E2D                     	;# 
   455  0E2E                     	;# 
   456  0E2F                     	;# 
   457  0E30                     	;# 
   458  0E31                     	;# 
   459  0E32                     	;# 
   460  0E33                     	;# 
   461  0E34                     	;# 
   462  0E35                     	;# 
   463  0E36                     	;# 
   464  0E37                     	;# 
   465  0E8F                     	;# 
   466  0E90                     	;# 
   467  0E91                     	;# 
   468  0E92                     	;# 
   469  0E93                     	;# 
   470  0E94                     	;# 
   471  0E95                     	;# 
   472  0E96                     	;# 
   473  0E97                     	;# 
   474  0E9C                     	;# 
   475  0E9D                     	;# 
   476  0E9E                     	;# 
   477  0EA1                     	;# 
   478  0EA2                     	;# 
   479  0EA3                     	;# 
   480  0EA4                     	;# 
   481  0EA5                     	;# 
   482  0EA9                     	;# 
   483  0EAA                     	;# 
   484  0EAB                     	;# 
   485  0EAC                     	;# 
   486  0EB1                     	;# 
   487  0EB2                     	;# 
   488  0EB3                     	;# 
   489  0EB8                     	;# 
   490  0EB9                     	;# 
   491  0EBA                     	;# 
   492  0EBB                     	;# 
   493  0EBC                     	;# 
   494  0EBD                     	;# 
   495  0EBE                     	;# 
   496  0EC3                     	;# 
   497  0EC5                     	;# 
   498  0EC6                     	;# 
   499  0EC7                     	;# 
   500  0EC8                     	;# 
   501  0EC9                     	;# 
   502  0ECA                     	;# 
   503  0ECB                     	;# 
   504  0ECC                     	;# 
   505  0F10                     	;# 
   506  0F11                     	;# 
   507  0F12                     	;# 
   508  0F13                     	;# 
   509  0F14                     	;# 
   510  0F15                     	;# 
   511  0F16                     	;# 
   512  0F17                     	;# 
   513  0F18                     	;# 
   514  0F19                     	;# 
   515  0F1A                     	;# 
   516  0F1B                     	;# 
   517  0F1C                     	;# 
   518  0F1D                     	;# 
   519  0F1E                     	;# 
   520  0F1F                     	;# 
   521  0F20                     	;# 
   522  0F21                     	;# 
   523  0F22                     	;# 
   524  0F23                     	;# 
   525  0F24                     	;# 
   526  0F25                     	;# 
   527  0F26                     	;# 
   528  0F27                     	;# 
   529  0F38                     	;# 
   530  0F39                     	;# 
   531  0F3A                     	;# 
   532  0F3B                     	;# 
   533  0F3C                     	;# 
   534  0F3D                     	;# 
   535  0F3E                     	;# 
   536  0F3F                     	;# 
   537  0F40                     	;# 
   538  0F41                     	;# 
   539  0F43                     	;# 
   540  0F44                     	;# 
   541  0F45                     	;# 
   542  0F46                     	;# 
   543  0F47                     	;# 
   544  0F48                     	;# 
   545  0F49                     	;# 
   546  0F4A                     	;# 
   547  0F4B                     	;# 
   548  0F4C                     	;# 
   549  0F4E                     	;# 
   550  0F4F                     	;# 
   551  0F50                     	;# 
   552  0F51                     	;# 
   553  0F52                     	;# 
   554  0F53                     	;# 
   555  0F54                     	;# 
   556  0F55                     	;# 
   557  0F56                     	;# 
   558  0F57                     	;# 
   559  0F65                     	;# 
   560  0F68                     	;# 
   561  0F69                     	;# 
   562  0F6A                     	;# 
   563  0F6B                     	;# 
   564  0FE4                     	;# 
   565  0FE5                     	;# 
   566  0FE6                     	;# 
   567  0FE7                     	;# 
   568  0FE8                     	;# 
   569  0FE9                     	;# 
   570  0FEA                     	;# 
   571  0FEB                     	;# 
   572  0FED                     	;# 
   573  0FEE                     	;# 
   574  0FEF                     	;# 
   575  0000                     	;# 
   576  0001                     	;# 
   577  0002                     	;# 
   578  0003                     	;# 
   579  0004                     	;# 
   580  0005                     	;# 
   581  0006                     	;# 
   582  0007                     	;# 
   583  0008                     	;# 
   584  0009                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  000D                     	;# 
   589  000E                     	;# 
   590  0010                     	;# 
   591  0011                     	;# 
   592  0012                     	;# 
   593  0013                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  001C                     	;# 
   598  001C                     	;# 
   599  001D                     	;# 
   600  001D                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  008C                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  008E                     	;# 
   608  008F                     	;# 
   609  0090                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0093                     	;# 
   613  0094                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0097                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009A                     	;# 
   620  009B                     	;# 
   621  009C                     	;# 
   622  009D                     	;# 
   623  009E                     	;# 
   624  010C                     	;# 
   625  010D                     	;# 
   626  010E                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  0110                     	;# 
   630  0110                     	;# 
   631  0111                     	;# 
   632  0112                     	;# 
   633  0112                     	;# 
   634  0113                     	;# 
   635  0114                     	;# 
   636  0114                     	;# 
   637  0115                     	;# 
   638  0116                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0119                     	;# 
   642  0119                     	;# 
   643  0119                     	;# 
   644  011A                     	;# 
   645  011A                     	;# 
   646  011A                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011C                     	;# 
   653  011C                     	;# 
   654  011C                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011E                     	;# 
   659  011E                     	;# 
   660  011E                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  018C                     	;# 
   667  018D                     	;# 
   668  018E                     	;# 
   669  018F                     	;# 
   670  0190                     	;# 
   671  0191                     	;# 
   672  0192                     	;# 
   673  0196                     	;# 
   674  0197                     	;# 
   675  0198                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019B                     	;# 
   679  019C                     	;# 
   680  020C                     	;# 
   681  020D                     	;# 
   682  020E                     	;# 
   683  020F                     	;# 
   684  020F                     	;# 
   685  0210                     	;# 
   686  0210                     	;# 
   687  0211                     	;# 
   688  0211                     	;# 
   689  0212                     	;# 
   690  0213                     	;# 
   691  0214                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0216                     	;# 
   695  0216                     	;# 
   696  0217                     	;# 
   697  0217                     	;# 
   698  0218                     	;# 
   699  0219                     	;# 
   700  021A                     	;# 
   701  021B                     	;# 
   702  021B                     	;# 
   703  021C                     	;# 
   704  021C                     	;# 
   705  021D                     	;# 
   706  021D                     	;# 
   707  021E                     	;# 
   708  021F                     	;# 
   709  028C                     	;# 
   710  028C                     	;# 
   711  028D                     	;# 
   712  028D                     	;# 
   713  028E                     	;# 
   714  028F                     	;# 
   715  0290                     	;# 
   716  0290                     	;# 
   717  0291                     	;# 
   718  0292                     	;# 
   719  0292                     	;# 
   720  0293                     	;# 
   721  0293                     	;# 
   722  0294                     	;# 
   723  0295                     	;# 
   724  0296                     	;# 
   725  0296                     	;# 
   726  0297                     	;# 
   727  0298                     	;# 
   728  0298                     	;# 
   729  0299                     	;# 
   730  0299                     	;# 
   731  029A                     	;# 
   732  029B                     	;# 
   733  029C                     	;# 
   734  029C                     	;# 
   735  029D                     	;# 
   736  030C                     	;# 
   737  030C                     	;# 
   738  030D                     	;# 
   739  030E                     	;# 
   740  030F                     	;# 
   741  0310                     	;# 
   742  0310                     	;# 
   743  0311                     	;# 
   744  0312                     	;# 
   745  0313                     	;# 
   746  0314                     	;# 
   747  0314                     	;# 
   748  0315                     	;# 
   749  0316                     	;# 
   750  0317                     	;# 
   751  0318                     	;# 
   752  0318                     	;# 
   753  0319                     	;# 
   754  031A                     	;# 
   755  031B                     	;# 
   756  031C                     	;# 
   757  031C                     	;# 
   758  031D                     	;# 
   759  031E                     	;# 
   760  031F                     	;# 
   761  038C                     	;# 
   762  038D                     	;# 
   763  038E                     	;# 
   764  0390                     	;# 
   765  0391                     	;# 
   766  0392                     	;# 
   767  040C                     	;# 
   768  040D                     	;# 
   769  040E                     	;# 
   770  040F                     	;# 
   771  0410                     	;# 
   772  0411                     	;# 
   773  0416                     	;# 
   774  0416                     	;# 
   775  0417                     	;# 
   776  0418                     	;# 
   777  0418                     	;# 
   778  0419                     	;# 
   779  041A                     	;# 
   780  041A                     	;# 
   781  041B                     	;# 
   782  041C                     	;# 
   783  041C                     	;# 
   784  041D                     	;# 
   785  041E                     	;# 
   786  041F                     	;# 
   787  048C                     	;# 
   788  048C                     	;# 
   789  048D                     	;# 
   790  048E                     	;# 
   791  048F                     	;# 
   792  048F                     	;# 
   793  0490                     	;# 
   794  0491                     	;# 
   795  0492                     	;# 
   796  0492                     	;# 
   797  0493                     	;# 
   798  0494                     	;# 
   799  0495                     	;# 
   800  0495                     	;# 
   801  0496                     	;# 
   802  0497                     	;# 
   803  0498                     	;# 
   804  0499                     	;# 
   805  049A                     	;# 
   806  049B                     	;# 
   807  049C                     	;# 
   808  049D                     	;# 
   809  050C                     	;# 
   810  050C                     	;# 
   811  050D                     	;# 
   812  050E                     	;# 
   813  050F                     	;# 
   814  050F                     	;# 
   815  0510                     	;# 
   816  0511                     	;# 
   817  0512                     	;# 
   818  0512                     	;# 
   819  0513                     	;# 
   820  0514                     	;# 
   821  0515                     	;# 
   822  0515                     	;# 
   823  0516                     	;# 
   824  0517                     	;# 
   825  0518                     	;# 
   826  0519                     	;# 
   827  051A                     	;# 
   828  051B                     	;# 
   829  051C                     	;# 
   830  051D                     	;# 
   831  058C                     	;# 
   832  058C                     	;# 
   833  058D                     	;# 
   834  058E                     	;# 
   835  058F                     	;# 
   836  058F                     	;# 
   837  0590                     	;# 
   838  0591                     	;# 
   839  0592                     	;# 
   840  0593                     	;# 
   841  060C                     	;# 
   842  060D                     	;# 
   843  060E                     	;# 
   844  060F                     	;# 
   845  0610                     	;# 
   846  0611                     	;# 
   847  0612                     	;# 
   848  0613                     	;# 
   849  0614                     	;# 
   850  0616                     	;# 
   851  0617                     	;# 
   852  0618                     	;# 
   853  0619                     	;# 
   854  061A                     	;# 
   855  061B                     	;# 
   856  061C                     	;# 
   857  061D                     	;# 
   858  061E                     	;# 
   859  068C                     	;# 
   860  068D                     	;# 
   861  068E                     	;# 
   862  068F                     	;# 
   863  0690                     	;# 
   864  0691                     	;# 
   865  0692                     	;# 
   866  0693                     	;# 
   867  0694                     	;# 
   868  070C                     	;# 
   869  070D                     	;# 
   870  070E                     	;# 
   871  070F                     	;# 
   872  0710                     	;# 
   873  0711                     	;# 
   874  0712                     	;# 
   875  0713                     	;# 
   876  0714                     	;# 
   877  0716                     	;# 
   878  0717                     	;# 
   879  0718                     	;# 
   880  0719                     	;# 
   881  071A                     	;# 
   882  071B                     	;# 
   883  071C                     	;# 
   884  071D                     	;# 
   885  071E                     	;# 
   886  0796                     	;# 
   887  0797                     	;# 
   888  0798                     	;# 
   889  0799                     	;# 
   890  079A                     	;# 
   891  079B                     	;# 
   892  080C                     	;# 
   893  080D                     	;# 
   894  080E                     	;# 
   895  080F                     	;# 
   896  0810                     	;# 
   897  0811                     	;# 
   898  0812                     	;# 
   899  0813                     	;# 
   900  0814                     	;# 
   901  081A                     	;# 
   902  081B                     	;# 
   903  081C                     	;# 
   904  081D                     	;# 
   905  081E                     	;# 
   906  081F                     	;# 
   907  088C                     	;# 
   908  088D                     	;# 
   909  088E                     	;# 
   910  088F                     	;# 
   911  0890                     	;# 
   912  0891                     	;# 
   913  0892                     	;# 
   914  0893                     	;# 
   915  0895                     	;# 
   916  0896                     	;# 
   917  0897                     	;# 
   918  0898                     	;# 
   919  0899                     	;# 
   920  089A                     	;# 
   921  089B                     	;# 
   922  090C                     	;# 
   923  090E                     	;# 
   924  090F                     	;# 
   925  091F                     	;# 
   926  091F                     	;# 
   927  098F                     	;# 
   928  098F                     	;# 
   929  0990                     	;# 
   930  0991                     	;# 
   931  0992                     	;# 
   932  0993                     	;# 
   933  0994                     	;# 
   934  0995                     	;# 
   935  0996                     	;# 
   936  0997                     	;# 
   937  0E0F                     	;# 
   938  0E10                     	;# 
   939  0E11                     	;# 
   940  0E12                     	;# 
   941  0E13                     	;# 
   942  0E14                     	;# 
   943  0E15                     	;# 
   944  0E16                     	;# 
   945  0E17                     	;# 
   946  0E18                     	;# 
   947  0E19                     	;# 
   948  0E1A                     	;# 
   949  0E1B                     	;# 
   950  0E1C                     	;# 
   951  0E1D                     	;# 
   952  0E1E                     	;# 
   953  0E1F                     	;# 
   954  0E20                     	;# 
   955  0E21                     	;# 
   956  0E22                     	;# 
   957  0E23                     	;# 
   958  0E24                     	;# 
   959  0E25                     	;# 
   960  0E26                     	;# 
   961  0E27                     	;# 
   962  0E28                     	;# 
   963  0E29                     	;# 
   964  0E2A                     	;# 
   965  0E2B                     	;# 
   966  0E2C                     	;# 
   967  0E2D                     	;# 
   968  0E2E                     	;# 
   969  0E2F                     	;# 
   970  0E30                     	;# 
   971  0E31                     	;# 
   972  0E32                     	;# 
   973  0E33                     	;# 
   974  0E34                     	;# 
   975  0E35                     	;# 
   976  0E36                     	;# 
   977  0E37                     	;# 
   978  0E8F                     	;# 
   979  0E90                     	;# 
   980  0E91                     	;# 
   981  0E92                     	;# 
   982  0E93                     	;# 
   983  0E94                     	;# 
   984  0E95                     	;# 
   985  0E96                     	;# 
   986  0E97                     	;# 
   987  0E9C                     	;# 
   988  0E9D                     	;# 
   989  0E9E                     	;# 
   990  0EA1                     	;# 
   991  0EA2                     	;# 
   992  0EA3                     	;# 
   993  0EA4                     	;# 
   994  0EA5                     	;# 
   995  0EA9                     	;# 
   996  0EAA                     	;# 
   997  0EAB                     	;# 
   998  0EAC                     	;# 
   999  0EB1                     	;# 
  1000  0EB2                     	;# 
  1001  0EB3                     	;# 
  1002  0EB8                     	;# 
  1003  0EB9                     	;# 
  1004  0EBA                     	;# 
  1005  0EBB                     	;# 
  1006  0EBC                     	;# 
  1007  0EBD                     	;# 
  1008  0EBE                     	;# 
  1009  0EC3                     	;# 
  1010  0EC5                     	;# 
  1011  0EC6                     	;# 
  1012  0EC7                     	;# 
  1013  0EC8                     	;# 
  1014  0EC9                     	;# 
  1015  0ECA                     	;# 
  1016  0ECB                     	;# 
  1017  0ECC                     	;# 
  1018  0F10                     	;# 
  1019  0F11                     	;# 
  1020  0F12                     	;# 
  1021  0F13                     	;# 
  1022  0F14                     	;# 
  1023  0F15                     	;# 
  1024  0F16                     	;# 
  1025  0F17                     	;# 
  1026  0F18                     	;# 
  1027  0F19                     	;# 
  1028  0F1A                     	;# 
  1029  0F1B                     	;# 
  1030  0F1C                     	;# 
  1031  0F1D                     	;# 
  1032  0F1E                     	;# 
  1033  0F1F                     	;# 
  1034  0F20                     	;# 
  1035  0F21                     	;# 
  1036  0F22                     	;# 
  1037  0F23                     	;# 
  1038  0F24                     	;# 
  1039  0F25                     	;# 
  1040  0F26                     	;# 
  1041  0F27                     	;# 
  1042  0F38                     	;# 
  1043  0F39                     	;# 
  1044  0F3A                     	;# 
  1045  0F3B                     	;# 
  1046  0F3C                     	;# 
  1047  0F3D                     	;# 
  1048  0F3E                     	;# 
  1049  0F3F                     	;# 
  1050  0F40                     	;# 
  1051  0F41                     	;# 
  1052  0F43                     	;# 
  1053  0F44                     	;# 
  1054  0F45                     	;# 
  1055  0F46                     	;# 
  1056  0F47                     	;# 
  1057  0F48                     	;# 
  1058  0F49                     	;# 
  1059  0F4A                     	;# 
  1060  0F4B                     	;# 
  1061  0F4C                     	;# 
  1062  0F4E                     	;# 
  1063  0F4F                     	;# 
  1064  0F50                     	;# 
  1065  0F51                     	;# 
  1066  0F52                     	;# 
  1067  0F53                     	;# 
  1068  0F54                     	;# 
  1069  0F55                     	;# 
  1070  0F56                     	;# 
  1071  0F57                     	;# 
  1072  0F65                     	;# 
  1073  0F68                     	;# 
  1074  0F69                     	;# 
  1075  0F6A                     	;# 
  1076  0F6B                     	;# 
  1077  0FE4                     	;# 
  1078  0FE5                     	;# 
  1079  0FE6                     	;# 
  1080  0FE7                     	;# 
  1081  0FE8                     	;# 
  1082  0FE9                     	;# 
  1083  0FEA                     	;# 
  1084  0FEB                     	;# 
  1085  0FED                     	;# 
  1086  0FEE                     	;# 
  1087  0FEF                     	;# 
  1088  0000                     	;# 
  1089  0001                     	;# 
  1090  0002                     	;# 
  1091  0003                     	;# 
  1092  0004                     	;# 
  1093  0005                     	;# 
  1094  0006                     	;# 
  1095  0007                     	;# 
  1096  0008                     	;# 
  1097  0009                     	;# 
  1098  000A                     	;# 
  1099  000B                     	;# 
  1100  000C                     	;# 
  1101  000D                     	;# 
  1102  000E                     	;# 
  1103  0010                     	;# 
  1104  0011                     	;# 
  1105  0012                     	;# 
  1106  0013                     	;# 
  1107  0016                     	;# 
  1108  0017                     	;# 
  1109  0018                     	;# 
  1110  001C                     	;# 
  1111  001C                     	;# 
  1112  001D                     	;# 
  1113  001D                     	;# 
  1114  001E                     	;# 
  1115  001F                     	;# 
  1116  008C                     	;# 
  1117  008C                     	;# 
  1118  008D                     	;# 
  1119  008E                     	;# 
  1120  008E                     	;# 
  1121  008F                     	;# 
  1122  0090                     	;# 
  1123  0090                     	;# 
  1124  0091                     	;# 
  1125  0093                     	;# 
  1126  0094                     	;# 
  1127  0095                     	;# 
  1128  0096                     	;# 
  1129  0097                     	;# 
  1130  0098                     	;# 
  1131  0099                     	;# 
  1132  009A                     	;# 
  1133  009B                     	;# 
  1134  009C                     	;# 
  1135  009D                     	;# 
  1136  009E                     	;# 
  1137  010C                     	;# 
  1138  010D                     	;# 
  1139  010E                     	;# 
  1140  010E                     	;# 
  1141  010F                     	;# 
  1142  0110                     	;# 
  1143  0110                     	;# 
  1144  0111                     	;# 
  1145  0112                     	;# 
  1146  0112                     	;# 
  1147  0113                     	;# 
  1148  0114                     	;# 
  1149  0114                     	;# 
  1150  0115                     	;# 
  1151  0116                     	;# 
  1152  0116                     	;# 
  1153  0117                     	;# 
  1154  0119                     	;# 
  1155  0119                     	;# 
  1156  0119                     	;# 
  1157  011A                     	;# 
  1158  011A                     	;# 
  1159  011A                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011C                     	;# 
  1166  011C                     	;# 
  1167  011C                     	;# 
  1168  011D                     	;# 
  1169  011D                     	;# 
  1170  011D                     	;# 
  1171  011E                     	;# 
  1172  011E                     	;# 
  1173  011E                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  018C                     	;# 
  1180  018D                     	;# 
  1181  018E                     	;# 
  1182  018F                     	;# 
  1183  0190                     	;# 
  1184  0191                     	;# 
  1185  0192                     	;# 
  1186  0196                     	;# 
  1187  0197                     	;# 
  1188  0198                     	;# 
  1189  0199                     	;# 
  1190  019A                     	;# 
  1191  019B                     	;# 
  1192  019C                     	;# 
  1193  020C                     	;# 
  1194  020D                     	;# 
  1195  020E                     	;# 
  1196  020F                     	;# 
  1197  020F                     	;# 
  1198  0210                     	;# 
  1199  0210                     	;# 
  1200  0211                     	;# 
  1201  0211                     	;# 
  1202  0212                     	;# 
  1203  0213                     	;# 
  1204  0214                     	;# 
  1205  0215                     	;# 
  1206  0215                     	;# 
  1207  0216                     	;# 
  1208  0216                     	;# 
  1209  0217                     	;# 
  1210  0217                     	;# 
  1211  0218                     	;# 
  1212  0219                     	;# 
  1213  021A                     	;# 
  1214  021B                     	;# 
  1215  021B                     	;# 
  1216  021C                     	;# 
  1217  021C                     	;# 
  1218  021D                     	;# 
  1219  021D                     	;# 
  1220  021E                     	;# 
  1221  021F                     	;# 
  1222  028C                     	;# 
  1223  028C                     	;# 
  1224  028D                     	;# 
  1225  028D                     	;# 
  1226  028E                     	;# 
  1227  028F                     	;# 
  1228  0290                     	;# 
  1229  0290                     	;# 
  1230  0291                     	;# 
  1231  0292                     	;# 
  1232  0292                     	;# 
  1233  0293                     	;# 
  1234  0293                     	;# 
  1235  0294                     	;# 
  1236  0295                     	;# 
  1237  0296                     	;# 
  1238  0296                     	;# 
  1239  0297                     	;# 
  1240  0298                     	;# 
  1241  0298                     	;# 
  1242  0299                     	;# 
  1243  0299                     	;# 
  1244  029A                     	;# 
  1245  029B                     	;# 
  1246  029C                     	;# 
  1247  029C                     	;# 
  1248  029D                     	;# 
  1249  030C                     	;# 
  1250  030C                     	;# 
  1251  030D                     	;# 
  1252  030E                     	;# 
  1253  030F                     	;# 
  1254  0310                     	;# 
  1255  0310                     	;# 
  1256  0311                     	;# 
  1257  0312                     	;# 
  1258  0313                     	;# 
  1259  0314                     	;# 
  1260  0314                     	;# 
  1261  0315                     	;# 
  1262  0316                     	;# 
  1263  0317                     	;# 
  1264  0318                     	;# 
  1265  0318                     	;# 
  1266  0319                     	;# 
  1267  031A                     	;# 
  1268  031B                     	;# 
  1269  031C                     	;# 
  1270  031C                     	;# 
  1271  031D                     	;# 
  1272  031E                     	;# 
  1273  031F                     	;# 
  1274  038C                     	;# 
  1275  038D                     	;# 
  1276  038E                     	;# 
  1277  0390                     	;# 
  1278  0391                     	;# 
  1279  0392                     	;# 
  1280  040C                     	;# 
  1281  040D                     	;# 
  1282  040E                     	;# 
  1283  040F                     	;# 
  1284  0410                     	;# 
  1285  0411                     	;# 
  1286  0416                     	;# 
  1287  0416                     	;# 
  1288  0417                     	;# 
  1289  0418                     	;# 
  1290  0418                     	;# 
  1291  0419                     	;# 
  1292  041A                     	;# 
  1293  041A                     	;# 
  1294  041B                     	;# 
  1295  041C                     	;# 
  1296  041C                     	;# 
  1297  041D                     	;# 
  1298  041E                     	;# 
  1299  041F                     	;# 
  1300  048C                     	;# 
  1301  048C                     	;# 
  1302  048D                     	;# 
  1303  048E                     	;# 
  1304  048F                     	;# 
  1305  048F                     	;# 
  1306  0490                     	;# 
  1307  0491                     	;# 
  1308  0492                     	;# 
  1309  0492                     	;# 
  1310  0493                     	;# 
  1311  0494                     	;# 
  1312  0495                     	;# 
  1313  0495                     	;# 
  1314  0496                     	;# 
  1315  0497                     	;# 
  1316  0498                     	;# 
  1317  0499                     	;# 
  1318  049A                     	;# 
  1319  049B                     	;# 
  1320  049C                     	;# 
  1321  049D                     	;# 
  1322  050C                     	;# 
  1323  050C                     	;# 
  1324  050D                     	;# 
  1325  050E                     	;# 
  1326  050F                     	;# 
  1327  050F                     	;# 
  1328  0510                     	;# 
  1329  0511                     	;# 
  1330  0512                     	;# 
  1331  0512                     	;# 
  1332  0513                     	;# 
  1333  0514                     	;# 
  1334  0515                     	;# 
  1335  0515                     	;# 
  1336  0516                     	;# 
  1337  0517                     	;# 
  1338  0518                     	;# 
  1339  0519                     	;# 
  1340  051A                     	;# 
  1341  051B                     	;# 
  1342  051C                     	;# 
  1343  051D                     	;# 
  1344  058C                     	;# 
  1345  058C                     	;# 
  1346  058D                     	;# 
  1347  058E                     	;# 
  1348  058F                     	;# 
  1349  058F                     	;# 
  1350  0590                     	;# 
  1351  0591                     	;# 
  1352  0592                     	;# 
  1353  0593                     	;# 
  1354  060C                     	;# 
  1355  060D                     	;# 
  1356  060E                     	;# 
  1357  060F                     	;# 
  1358  0610                     	;# 
  1359  0611                     	;# 
  1360  0612                     	;# 
  1361  0613                     	;# 
  1362  0614                     	;# 
  1363  0616                     	;# 
  1364  0617                     	;# 
  1365  0618                     	;# 
  1366  0619                     	;# 
  1367  061A                     	;# 
  1368  061B                     	;# 
  1369  061C                     	;# 
  1370  061D                     	;# 
  1371  061E                     	;# 
  1372  068C                     	;# 
  1373  068D                     	;# 
  1374  068E                     	;# 
  1375  068F                     	;# 
  1376  0690                     	;# 
  1377  0691                     	;# 
  1378  0692                     	;# 
  1379  0693                     	;# 
  1380  0694                     	;# 
  1381  070C                     	;# 
  1382  070D                     	;# 
  1383  070E                     	;# 
  1384  070F                     	;# 
  1385  0710                     	;# 
  1386  0711                     	;# 
  1387  0712                     	;# 
  1388  0713                     	;# 
  1389  0714                     	;# 
  1390  0716                     	;# 
  1391  0717                     	;# 
  1392  0718                     	;# 
  1393  0719                     	;# 
  1394  071A                     	;# 
  1395  071B                     	;# 
  1396  071C                     	;# 
  1397  071D                     	;# 
  1398  071E                     	;# 
  1399  0796                     	;# 
  1400  0797                     	;# 
  1401  0798                     	;# 
  1402  0799                     	;# 
  1403  079A                     	;# 
  1404  079B                     	;# 
  1405  080C                     	;# 
  1406  080D                     	;# 
  1407  080E                     	;# 
  1408  080F                     	;# 
  1409  0810                     	;# 
  1410  0811                     	;# 
  1411  0812                     	;# 
  1412  0813                     	;# 
  1413  0814                     	;# 
  1414  081A                     	;# 
  1415  081B                     	;# 
  1416  081C                     	;# 
  1417  081D                     	;# 
  1418  081E                     	;# 
  1419  081F                     	;# 
  1420  088C                     	;# 
  1421  088D                     	;# 
  1422  088E                     	;# 
  1423  088F                     	;# 
  1424  0890                     	;# 
  1425  0891                     	;# 
  1426  0892                     	;# 
  1427  0893                     	;# 
  1428  0895                     	;# 
  1429  0896                     	;# 
  1430  0897                     	;# 
  1431  0898                     	;# 
  1432  0899                     	;# 
  1433  089A                     	;# 
  1434  089B                     	;# 
  1435  090C                     	;# 
  1436  090E                     	;# 
  1437  090F                     	;# 
  1438  091F                     	;# 
  1439  091F                     	;# 
  1440  098F                     	;# 
  1441  098F                     	;# 
  1442  0990                     	;# 
  1443  0991                     	;# 
  1444  0992                     	;# 
  1445  0993                     	;# 
  1446  0994                     	;# 
  1447  0995                     	;# 
  1448  0996                     	;# 
  1449  0997                     	;# 
  1450  0E0F                     	;# 
  1451  0E10                     	;# 
  1452  0E11                     	;# 
  1453  0E12                     	;# 
  1454  0E13                     	;# 
  1455  0E14                     	;# 
  1456  0E15                     	;# 
  1457  0E16                     	;# 
  1458  0E17                     	;# 
  1459  0E18                     	;# 
  1460  0E19                     	;# 
  1461  0E1A                     	;# 
  1462  0E1B                     	;# 
  1463  0E1C                     	;# 
  1464  0E1D                     	;# 
  1465  0E1E                     	;# 
  1466  0E1F                     	;# 
  1467  0E20                     	;# 
  1468  0E21                     	;# 
  1469  0E22                     	;# 
  1470  0E23                     	;# 
  1471  0E24                     	;# 
  1472  0E25                     	;# 
  1473  0E26                     	;# 
  1474  0E27                     	;# 
  1475  0E28                     	;# 
  1476  0E29                     	;# 
  1477  0E2A                     	;# 
  1478  0E2B                     	;# 
  1479  0E2C                     	;# 
  1480  0E2D                     	;# 
  1481  0E2E                     	;# 
  1482  0E2F                     	;# 
  1483  0E30                     	;# 
  1484  0E31                     	;# 
  1485  0E32                     	;# 
  1486  0E33                     	;# 
  1487  0E34                     	;# 
  1488  0E35                     	;# 
  1489  0E36                     	;# 
  1490  0E37                     	;# 
  1491  0E8F                     	;# 
  1492  0E90                     	;# 
  1493  0E91                     	;# 
  1494  0E92                     	;# 
  1495  0E93                     	;# 
  1496  0E94                     	;# 
  1497  0E95                     	;# 
  1498  0E96                     	;# 
  1499  0E97                     	;# 
  1500  0E9C                     	;# 
  1501  0E9D                     	;# 
  1502  0E9E                     	;# 
  1503  0EA1                     	;# 
  1504  0EA2                     	;# 
  1505  0EA3                     	;# 
  1506  0EA4                     	;# 
  1507  0EA5                     	;# 
  1508  0EA9                     	;# 
  1509  0EAA                     	;# 
  1510  0EAB                     	;# 
  1511  0EAC                     	;# 
  1512  0EB1                     	;# 
  1513  0EB2                     	;# 
  1514  0EB3                     	;# 
  1515  0EB8                     	;# 
  1516  0EB9                     	;# 
  1517  0EBA                     	;# 
  1518  0EBB                     	;# 
  1519  0EBC                     	;# 
  1520  0EBD                     	;# 
  1521  0EBE                     	;# 
  1522  0EC3                     	;# 
  1523  0EC5                     	;# 
  1524  0EC6                     	;# 
  1525  0EC7                     	;# 
  1526  0EC8                     	;# 
  1527  0EC9                     	;# 
  1528  0ECA                     	;# 
  1529  0ECB                     	;# 
  1530  0ECC                     	;# 
  1531  0F10                     	;# 
  1532  0F11                     	;# 
  1533  0F12                     	;# 
  1534  0F13                     	;# 
  1535  0F14                     	;# 
  1536  0F15                     	;# 
  1537  0F16                     	;# 
  1538  0F17                     	;# 
  1539  0F18                     	;# 
  1540  0F19                     	;# 
  1541  0F1A                     	;# 
  1542  0F1B                     	;# 
  1543  0F1C                     	;# 
  1544  0F1D                     	;# 
  1545  0F1E                     	;# 
  1546  0F1F                     	;# 
  1547  0F20                     	;# 
  1548  0F21                     	;# 
  1549  0F22                     	;# 
  1550  0F23                     	;# 
  1551  0F24                     	;# 
  1552  0F25                     	;# 
  1553  0F26                     	;# 
  1554  0F27                     	;# 
  1555  0F38                     	;# 
  1556  0F39                     	;# 
  1557  0F3A                     	;# 
  1558  0F3B                     	;# 
  1559  0F3C                     	;# 
  1560  0F3D                     	;# 
  1561  0F3E                     	;# 
  1562  0F3F                     	;# 
  1563  0F40                     	;# 
  1564  0F41                     	;# 
  1565  0F43                     	;# 
  1566  0F44                     	;# 
  1567  0F45                     	;# 
  1568  0F46                     	;# 
  1569  0F47                     	;# 
  1570  0F48                     	;# 
  1571  0F49                     	;# 
  1572  0F4A                     	;# 
  1573  0F4B                     	;# 
  1574  0F4C                     	;# 
  1575  0F4E                     	;# 
  1576  0F4F                     	;# 
  1577  0F50                     	;# 
  1578  0F51                     	;# 
  1579  0F52                     	;# 
  1580  0F53                     	;# 
  1581  0F54                     	;# 
  1582  0F55                     	;# 
  1583  0F56                     	;# 
  1584  0F57                     	;# 
  1585  0F65                     	;# 
  1586  0F68                     	;# 
  1587  0F69                     	;# 
  1588  0F6A                     	;# 
  1589  0F6B                     	;# 
  1590  0FE4                     	;# 
  1591  0FE5                     	;# 
  1592  0FE6                     	;# 
  1593  0FE7                     	;# 
  1594  0FE8                     	;# 
  1595  0FE9                     	;# 
  1596  0FEA                     	;# 
  1597  0FEB                     	;# 
  1598  0FED                     	;# 
  1599  0FEE                     	;# 
  1600  0FEF                     	;# 
  1601  0000                     	;# 
  1602  0001                     	;# 
  1603  0002                     	;# 
  1604  0003                     	;# 
  1605  0004                     	;# 
  1606  0005                     	;# 
  1607  0006                     	;# 
  1608  0007                     	;# 
  1609  0008                     	;# 
  1610  0009                     	;# 
  1611  000A                     	;# 
  1612  000B                     	;# 
  1613  000C                     	;# 
  1614  000D                     	;# 
  1615  000E                     	;# 
  1616  0010                     	;# 
  1617  0011                     	;# 
  1618  0012                     	;# 
  1619  0013                     	;# 
  1620  0016                     	;# 
  1621  0017                     	;# 
  1622  0018                     	;# 
  1623  001C                     	;# 
  1624  001C                     	;# 
  1625  001D                     	;# 
  1626  001D                     	;# 
  1627  001E                     	;# 
  1628  001F                     	;# 
  1629  008C                     	;# 
  1630  008C                     	;# 
  1631  008D                     	;# 
  1632  008E                     	;# 
  1633  008E                     	;# 
  1634  008F                     	;# 
  1635  0090                     	;# 
  1636  0090                     	;# 
  1637  0091                     	;# 
  1638  0093                     	;# 
  1639  0094                     	;# 
  1640  0095                     	;# 
  1641  0096                     	;# 
  1642  0097                     	;# 
  1643  0098                     	;# 
  1644  0099                     	;# 
  1645  009A                     	;# 
  1646  009B                     	;# 
  1647  009C                     	;# 
  1648  009D                     	;# 
  1649  009E                     	;# 
  1650  010C                     	;# 
  1651  010D                     	;# 
  1652  010E                     	;# 
  1653  010E                     	;# 
  1654  010F                     	;# 
  1655  0110                     	;# 
  1656  0110                     	;# 
  1657  0111                     	;# 
  1658  0112                     	;# 
  1659  0112                     	;# 
  1660  0113                     	;# 
  1661  0114                     	;# 
  1662  0114                     	;# 
  1663  0115                     	;# 
  1664  0116                     	;# 
  1665  0116                     	;# 
  1666  0117                     	;# 
  1667  0119                     	;# 
  1668  0119                     	;# 
  1669  0119                     	;# 
  1670  011A                     	;# 
  1671  011A                     	;# 
  1672  011A                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011C                     	;# 
  1679  011C                     	;# 
  1680  011C                     	;# 
  1681  011D                     	;# 
  1682  011D                     	;# 
  1683  011D                     	;# 
  1684  011E                     	;# 
  1685  011E                     	;# 
  1686  011E                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  018C                     	;# 
  1693  018D                     	;# 
  1694  018E                     	;# 
  1695  018F                     	;# 
  1696  0190                     	;# 
  1697  0191                     	;# 
  1698  0192                     	;# 
  1699  0196                     	;# 
  1700  0197                     	;# 
  1701  0198                     	;# 
  1702  0199                     	;# 
  1703  019A                     	;# 
  1704  019B                     	;# 
  1705  019C                     	;# 
  1706  020C                     	;# 
  1707  020D                     	;# 
  1708  020E                     	;# 
  1709  020F                     	;# 
  1710  020F                     	;# 
  1711  0210                     	;# 
  1712  0210                     	;# 
  1713  0211                     	;# 
  1714  0211                     	;# 
  1715  0212                     	;# 
  1716  0213                     	;# 
  1717  0214                     	;# 
  1718  0215                     	;# 
  1719  0215                     	;# 
  1720  0216                     	;# 
  1721  0216                     	;# 
  1722  0217                     	;# 
  1723  0217                     	;# 
  1724  0218                     	;# 
  1725  0219                     	;# 
  1726  021A                     	;# 
  1727  021B                     	;# 
  1728  021B                     	;# 
  1729  021C                     	;# 
  1730  021C                     	;# 
  1731  021D                     	;# 
  1732  021D                     	;# 
  1733  021E                     	;# 
  1734  021F                     	;# 
  1735  028C                     	;# 
  1736  028C                     	;# 
  1737  028D                     	;# 
  1738  028D                     	;# 
  1739  028E                     	;# 
  1740  028F                     	;# 
  1741  0290                     	;# 
  1742  0290                     	;# 
  1743  0291                     	;# 
  1744  0292                     	;# 
  1745  0292                     	;# 
  1746  0293                     	;# 
  1747  0293                     	;# 
  1748  0294                     	;# 
  1749  0295                     	;# 
  1750  0296                     	;# 
  1751  0296                     	;# 
  1752  0297                     	;# 
  1753  0298                     	;# 
  1754  0298                     	;# 
  1755  0299                     	;# 
  1756  0299                     	;# 
  1757  029A                     	;# 
  1758  029B                     	;# 
  1759  029C                     	;# 
  1760  029C                     	;# 
  1761  029D                     	;# 
  1762  030C                     	;# 
  1763  030C                     	;# 
  1764  030D                     	;# 
  1765  030E                     	;# 
  1766  030F                     	;# 
  1767  0310                     	;# 
  1768  0310                     	;# 
  1769  0311                     	;# 
  1770  0312                     	;# 
  1771  0313                     	;# 
  1772  0314                     	;# 
  1773  0314                     	;# 
  1774  0315                     	;# 
  1775  0316                     	;# 
  1776  0317                     	;# 
  1777  0318                     	;# 
  1778  0318                     	;# 
  1779  0319                     	;# 
  1780  031A                     	;# 
  1781  031B                     	;# 
  1782  031C                     	;# 
  1783  031C                     	;# 
  1784  031D                     	;# 
  1785  031E                     	;# 
  1786  031F                     	;# 
  1787  038C                     	;# 
  1788  038D                     	;# 
  1789  038E                     	;# 
  1790  0390                     	;# 
  1791  0391                     	;# 
  1792  0392                     	;# 
  1793  040C                     	;# 
  1794  040D                     	;# 
  1795  040E                     	;# 
  1796  040F                     	;# 
  1797  0410                     	;# 
  1798  0411                     	;# 
  1799  0416                     	;# 
  1800  0416                     	;# 
  1801  0417                     	;# 
  1802  0418                     	;# 
  1803  0418                     	;# 
  1804  0419                     	;# 
  1805  041A                     	;# 
  1806  041A                     	;# 
  1807  041B                     	;# 
  1808  041C                     	;# 
  1809  041C                     	;# 
  1810  041D                     	;# 
  1811  041E                     	;# 
  1812  041F                     	;# 
  1813  048C                     	;# 
  1814  048C                     	;# 
  1815  048D                     	;# 
  1816  048E                     	;# 
  1817  048F                     	;# 
  1818  048F                     	;# 
  1819  0490                     	;# 
  1820  0491                     	;# 
  1821  0492                     	;# 
  1822  0492                     	;# 
  1823  0493                     	;# 
  1824  0494                     	;# 
  1825  0495                     	;# 
  1826  0495                     	;# 
  1827  0496                     	;# 
  1828  0497                     	;# 
  1829  0498                     	;# 
  1830  0499                     	;# 
  1831  049A                     	;# 
  1832  049B                     	;# 
  1833  049C                     	;# 
  1834  049D                     	;# 
  1835  050C                     	;# 
  1836  050C                     	;# 
  1837  050D                     	;# 
  1838  050E                     	;# 
  1839  050F                     	;# 
  1840  050F                     	;# 
  1841  0510                     	;# 
  1842  0511                     	;# 
  1843  0512                     	;# 
  1844  0512                     	;# 
  1845  0513                     	;# 
  1846  0514                     	;# 
  1847  0515                     	;# 
  1848  0515                     	;# 
  1849  0516                     	;# 
  1850  0517                     	;# 
  1851  0518                     	;# 
  1852  0519                     	;# 
  1853  051A                     	;# 
  1854  051B                     	;# 
  1855  051C                     	;# 
  1856  051D                     	;# 
  1857  058C                     	;# 
  1858  058C                     	;# 
  1859  058D                     	;# 
  1860  058E                     	;# 
  1861  058F                     	;# 
  1862  058F                     	;# 
  1863  0590                     	;# 
  1864  0591                     	;# 
  1865  0592                     	;# 
  1866  0593                     	;# 
  1867  060C                     	;# 
  1868  060D                     	;# 
  1869  060E                     	;# 
  1870  060F                     	;# 
  1871  0610                     	;# 
  1872  0611                     	;# 
  1873  0612                     	;# 
  1874  0613                     	;# 
  1875  0614                     	;# 
  1876  0616                     	;# 
  1877  0617                     	;# 
  1878  0618                     	;# 
  1879  0619                     	;# 
  1880  061A                     	;# 
  1881  061B                     	;# 
  1882  061C                     	;# 
  1883  061D                     	;# 
  1884  061E                     	;# 
  1885  068C                     	;# 
  1886  068D                     	;# 
  1887  068E                     	;# 
  1888  068F                     	;# 
  1889  0690                     	;# 
  1890  0691                     	;# 
  1891  0692                     	;# 
  1892  0693                     	;# 
  1893  0694                     	;# 
  1894  070C                     	;# 
  1895  070D                     	;# 
  1896  070E                     	;# 
  1897  070F                     	;# 
  1898  0710                     	;# 
  1899  0711                     	;# 
  1900  0712                     	;# 
  1901  0713                     	;# 
  1902  0714                     	;# 
  1903  0716                     	;# 
  1904  0717                     	;# 
  1905  0718                     	;# 
  1906  0719                     	;# 
  1907  071A                     	;# 
  1908  071B                     	;# 
  1909  071C                     	;# 
  1910  071D                     	;# 
  1911  071E                     	;# 
  1912  0796                     	;# 
  1913  0797                     	;# 
  1914  0798                     	;# 
  1915  0799                     	;# 
  1916  079A                     	;# 
  1917  079B                     	;# 
  1918  080C                     	;# 
  1919  080D                     	;# 
  1920  080E                     	;# 
  1921  080F                     	;# 
  1922  0810                     	;# 
  1923  0811                     	;# 
  1924  0812                     	;# 
  1925  0813                     	;# 
  1926  0814                     	;# 
  1927  081A                     	;# 
  1928  081B                     	;# 
  1929  081C                     	;# 
  1930  081D                     	;# 
  1931  081E                     	;# 
  1932  081F                     	;# 
  1933  088C                     	;# 
  1934  088D                     	;# 
  1935  088E                     	;# 
  1936  088F                     	;# 
  1937  0890                     	;# 
  1938  0891                     	;# 
  1939  0892                     	;# 
  1940  0893                     	;# 
  1941  0895                     	;# 
  1942  0896                     	;# 
  1943  0897                     	;# 
  1944  0898                     	;# 
  1945  0899                     	;# 
  1946  089A                     	;# 
  1947  089B                     	;# 
  1948  090C                     	;# 
  1949  090E                     	;# 
  1950  090F                     	;# 
  1951  091F                     	;# 
  1952  091F                     	;# 
  1953  098F                     	;# 
  1954  098F                     	;# 
  1955  0990                     	;# 
  1956  0991                     	;# 
  1957  0992                     	;# 
  1958  0993                     	;# 
  1959  0994                     	;# 
  1960  0995                     	;# 
  1961  0996                     	;# 
  1962  0997                     	;# 
  1963  0E0F                     	;# 
  1964  0E10                     	;# 
  1965  0E11                     	;# 
  1966  0E12                     	;# 
  1967  0E13                     	;# 
  1968  0E14                     	;# 
  1969  0E15                     	;# 
  1970  0E16                     	;# 
  1971  0E17                     	;# 
  1972  0E18                     	;# 
  1973  0E19                     	;# 
  1974  0E1A                     	;# 
  1975  0E1B                     	;# 
  1976  0E1C                     	;# 
  1977  0E1D                     	;# 
  1978  0E1E                     	;# 
  1979  0E1F                     	;# 
  1980  0E20                     	;# 
  1981  0E21                     	;# 
  1982  0E22                     	;# 
  1983  0E23                     	;# 
  1984  0E24                     	;# 
  1985  0E25                     	;# 
  1986  0E26                     	;# 
  1987  0E27                     	;# 
  1988  0E28                     	;# 
  1989  0E29                     	;# 
  1990  0E2A                     	;# 
  1991  0E2B                     	;# 
  1992  0E2C                     	;# 
  1993  0E2D                     	;# 
  1994  0E2E                     	;# 
  1995  0E2F                     	;# 
  1996  0E30                     	;# 
  1997  0E31                     	;# 
  1998  0E32                     	;# 
  1999  0E33                     	;# 
  2000  0E34                     	;# 
  2001  0E35                     	;# 
  2002  0E36                     	;# 
  2003  0E37                     	;# 
  2004  0E8F                     	;# 
  2005  0E90                     	;# 
  2006  0E91                     	;# 
  2007  0E92                     	;# 
  2008  0E93                     	;# 
  2009  0E94                     	;# 
  2010  0E95                     	;# 
  2011  0E96                     	;# 
  2012  0E97                     	;# 
  2013  0E9C                     	;# 
  2014  0E9D                     	;# 
  2015  0E9E                     	;# 
  2016  0EA1                     	;# 
  2017  0EA2                     	;# 
  2018  0EA3                     	;# 
  2019  0EA4                     	;# 
  2020  0EA5                     	;# 
  2021  0EA9                     	;# 
  2022  0EAA                     	;# 
  2023  0EAB                     	;# 
  2024  0EAC                     	;# 
  2025  0EB1                     	;# 
  2026  0EB2                     	;# 
  2027  0EB3                     	;# 
  2028  0EB8                     	;# 
  2029  0EB9                     	;# 
  2030  0EBA                     	;# 
  2031  0EBB                     	;# 
  2032  0EBC                     	;# 
  2033  0EBD                     	;# 
  2034  0EBE                     	;# 
  2035  0EC3                     	;# 
  2036  0EC5                     	;# 
  2037  0EC6                     	;# 
  2038  0EC7                     	;# 
  2039  0EC8                     	;# 
  2040  0EC9                     	;# 
  2041  0ECA                     	;# 
  2042  0ECB                     	;# 
  2043  0ECC                     	;# 
  2044  0F10                     	;# 
  2045  0F11                     	;# 
  2046  0F12                     	;# 
  2047  0F13                     	;# 
  2048  0F14                     	;# 
  2049  0F15                     	;# 
  2050  0F16                     	;# 
  2051  0F17                     	;# 
  2052  0F18                     	;# 
  2053  0F19                     	;# 
  2054  0F1A                     	;# 
  2055  0F1B                     	;# 
  2056  0F1C                     	;# 
  2057  0F1D                     	;# 
  2058  0F1E                     	;# 
  2059  0F1F                     	;# 
  2060  0F20                     	;# 
  2061  0F21                     	;# 
  2062  0F22                     	;# 
  2063  0F23                     	;# 
  2064  0F24                     	;# 
  2065  0F25                     	;# 
  2066  0F26                     	;# 
  2067  0F27                     	;# 
  2068  0F38                     	;# 
  2069  0F39                     	;# 
  2070  0F3A                     	;# 
  2071  0F3B                     	;# 
  2072  0F3C                     	;# 
  2073  0F3D                     	;# 
  2074  0F3E                     	;# 
  2075  0F3F                     	;# 
  2076  0F40                     	;# 
  2077  0F41                     	;# 
  2078  0F43                     	;# 
  2079  0F44                     	;# 
  2080  0F45                     	;# 
  2081  0F46                     	;# 
  2082  0F47                     	;# 
  2083  0F48                     	;# 
  2084  0F49                     	;# 
  2085  0F4A                     	;# 
  2086  0F4B                     	;# 
  2087  0F4C                     	;# 
  2088  0F4E                     	;# 
  2089  0F4F                     	;# 
  2090  0F50                     	;# 
  2091  0F51                     	;# 
  2092  0F52                     	;# 
  2093  0F53                     	;# 
  2094  0F54                     	;# 
  2095  0F55                     	;# 
  2096  0F56                     	;# 
  2097  0F57                     	;# 
  2098  0F65                     	;# 
  2099  0F68                     	;# 
  2100  0F69                     	;# 
  2101  0F6A                     	;# 
  2102  0F6B                     	;# 
  2103  0FE4                     	;# 
  2104  0FE5                     	;# 
  2105  0FE6                     	;# 
  2106  0FE7                     	;# 
  2107  0FE8                     	;# 
  2108  0FE9                     	;# 
  2109  0FEA                     	;# 
  2110  0FEB                     	;# 
  2111  0FED                     	;# 
  2112  0FEE                     	;# 
  2113  0FEF                     	;# 
  2114  0000                     	;# 
  2115  0001                     	;# 
  2116  0002                     	;# 
  2117  0003                     	;# 
  2118  0004                     	;# 
  2119  0005                     	;# 
  2120  0006                     	;# 
  2121  0007                     	;# 
  2122  0008                     	;# 
  2123  0009                     	;# 
  2124  000A                     	;# 
  2125  000B                     	;# 
  2126  000C                     	;# 
  2127  000D                     	;# 
  2128  000E                     	;# 
  2129  0010                     	;# 
  2130  0011                     	;# 
  2131  0012                     	;# 
  2132  0013                     	;# 
  2133  0016                     	;# 
  2134  0017                     	;# 
  2135  0018                     	;# 
  2136  001C                     	;# 
  2137  001C                     	;# 
  2138  001D                     	;# 
  2139  001D                     	;# 
  2140  001E                     	;# 
  2141  001F                     	;# 
  2142  008C                     	;# 
  2143  008C                     	;# 
  2144  008D                     	;# 
  2145  008E                     	;# 
  2146  008E                     	;# 
  2147  008F                     	;# 
  2148  0090                     	;# 
  2149  0090                     	;# 
  2150  0091                     	;# 
  2151  0093                     	;# 
  2152  0094                     	;# 
  2153  0095                     	;# 
  2154  0096                     	;# 
  2155  0097                     	;# 
  2156  0098                     	;# 
  2157  0099                     	;# 
  2158  009A                     	;# 
  2159  009B                     	;# 
  2160  009C                     	;# 
  2161  009D                     	;# 
  2162  009E                     	;# 
  2163  010C                     	;# 
  2164  010D                     	;# 
  2165  010E                     	;# 
  2166  010E                     	;# 
  2167  010F                     	;# 
  2168  0110                     	;# 
  2169  0110                     	;# 
  2170  0111                     	;# 
  2171  0112                     	;# 
  2172  0112                     	;# 
  2173  0113                     	;# 
  2174  0114                     	;# 
  2175  0114                     	;# 
  2176  0115                     	;# 
  2177  0116                     	;# 
  2178  0116                     	;# 
  2179  0117                     	;# 
  2180  0119                     	;# 
  2181  0119                     	;# 
  2182  0119                     	;# 
  2183  011A                     	;# 
  2184  011A                     	;# 
  2185  011A                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011C                     	;# 
  2192  011C                     	;# 
  2193  011C                     	;# 
  2194  011D                     	;# 
  2195  011D                     	;# 
  2196  011D                     	;# 
  2197  011E                     	;# 
  2198  011E                     	;# 
  2199  011E                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  018C                     	;# 
  2206  018D                     	;# 
  2207  018E                     	;# 
  2208  018F                     	;# 
  2209  0190                     	;# 
  2210  0191                     	;# 
  2211  0192                     	;# 
  2212  0196                     	;# 
  2213  0197                     	;# 
  2214  0198                     	;# 
  2215  0199                     	;# 
  2216  019A                     	;# 
  2217  019B                     	;# 
  2218  019C                     	;# 
  2219  020C                     	;# 
  2220  020D                     	;# 
  2221  020E                     	;# 
  2222  020F                     	;# 
  2223  020F                     	;# 
  2224  0210                     	;# 
  2225  0210                     	;# 
  2226  0211                     	;# 
  2227  0211                     	;# 
  2228  0212                     	;# 
  2229  0213                     	;# 
  2230  0214                     	;# 
  2231  0215                     	;# 
  2232  0215                     	;# 
  2233  0216                     	;# 
  2234  0216                     	;# 
  2235  0217                     	;# 
  2236  0217                     	;# 
  2237  0218                     	;# 
  2238  0219                     	;# 
  2239  021A                     	;# 
  2240  021B                     	;# 
  2241  021B                     	;# 
  2242  021C                     	;# 
  2243  021C                     	;# 
  2244  021D                     	;# 
  2245  021D                     	;# 
  2246  021E                     	;# 
  2247  021F                     	;# 
  2248  028C                     	;# 
  2249  028C                     	;# 
  2250  028D                     	;# 
  2251  028D                     	;# 
  2252  028E                     	;# 
  2253  028F                     	;# 
  2254  0290                     	;# 
  2255  0290                     	;# 
  2256  0291                     	;# 
  2257  0292                     	;# 
  2258  0292                     	;# 
  2259  0293                     	;# 
  2260  0293                     	;# 
  2261  0294                     	;# 
  2262  0295                     	;# 
  2263  0296                     	;# 
  2264  0296                     	;# 
  2265  0297                     	;# 
  2266  0298                     	;# 
  2267  0298                     	;# 
  2268  0299                     	;# 
  2269  0299                     	;# 
  2270  029A                     	;# 
  2271  029B                     	;# 
  2272  029C                     	;# 
  2273  029C                     	;# 
  2274  029D                     	;# 
  2275  030C                     	;# 
  2276  030C                     	;# 
  2277  030D                     	;# 
  2278  030E                     	;# 
  2279  030F                     	;# 
  2280  0310                     	;# 
  2281  0310                     	;# 
  2282  0311                     	;# 
  2283  0312                     	;# 
  2284  0313                     	;# 
  2285  0314                     	;# 
  2286  0314                     	;# 
  2287  0315                     	;# 
  2288  0316                     	;# 
  2289  0317                     	;# 
  2290  0318                     	;# 
  2291  0318                     	;# 
  2292  0319                     	;# 
  2293  031A                     	;# 
  2294  031B                     	;# 
  2295  031C                     	;# 
  2296  031C                     	;# 
  2297  031D                     	;# 
  2298  031E                     	;# 
  2299  031F                     	;# 
  2300  038C                     	;# 
  2301  038D                     	;# 
  2302  038E                     	;# 
  2303  0390                     	;# 
  2304  0391                     	;# 
  2305  0392                     	;# 
  2306  040C                     	;# 
  2307  040D                     	;# 
  2308  040E                     	;# 
  2309  040F                     	;# 
  2310  0410                     	;# 
  2311  0411                     	;# 
  2312  0416                     	;# 
  2313  0416                     	;# 
  2314  0417                     	;# 
  2315  0418                     	;# 
  2316  0418                     	;# 
  2317  0419                     	;# 
  2318  041A                     	;# 
  2319  041A                     	;# 
  2320  041B                     	;# 
  2321  041C                     	;# 
  2322  041C                     	;# 
  2323  041D                     	;# 
  2324  041E                     	;# 
  2325  041F                     	;# 
  2326  048C                     	;# 
  2327  048C                     	;# 
  2328  048D                     	;# 
  2329  048E                     	;# 
  2330  048F                     	;# 
  2331  048F                     	;# 
  2332  0490                     	;# 
  2333  0491                     	;# 
  2334  0492                     	;# 
  2335  0492                     	;# 
  2336  0493                     	;# 
  2337  0494                     	;# 
  2338  0495                     	;# 
  2339  0495                     	;# 
  2340  0496                     	;# 
  2341  0497                     	;# 
  2342  0498                     	;# 
  2343  0499                     	;# 
  2344  049A                     	;# 
  2345  049B                     	;# 
  2346  049C                     	;# 
  2347  049D                     	;# 
  2348  050C                     	;# 
  2349  050C                     	;# 
  2350  050D                     	;# 
  2351  050E                     	;# 
  2352  050F                     	;# 
  2353  050F                     	;# 
  2354  0510                     	;# 
  2355  0511                     	;# 
  2356  0512                     	;# 
  2357  0512                     	;# 
  2358  0513                     	;# 
  2359  0514                     	;# 
  2360  0515                     	;# 
  2361  0515                     	;# 
  2362  0516                     	;# 
  2363  0517                     	;# 
  2364  0518                     	;# 
  2365  0519                     	;# 
  2366  051A                     	;# 
  2367  051B                     	;# 
  2368  051C                     	;# 
  2369  051D                     	;# 
  2370  058C                     	;# 
  2371  058C                     	;# 
  2372  058D                     	;# 
  2373  058E                     	;# 
  2374  058F                     	;# 
  2375  058F                     	;# 
  2376  0590                     	;# 
  2377  0591                     	;# 
  2378  0592                     	;# 
  2379  0593                     	;# 
  2380  060C                     	;# 
  2381  060D                     	;# 
  2382  060E                     	;# 
  2383  060F                     	;# 
  2384  0610                     	;# 
  2385  0611                     	;# 
  2386  0612                     	;# 
  2387  0613                     	;# 
  2388  0614                     	;# 
  2389  0616                     	;# 
  2390  0617                     	;# 
  2391  0618                     	;# 
  2392  0619                     	;# 
  2393  061A                     	;# 
  2394  061B                     	;# 
  2395  061C                     	;# 
  2396  061D                     	;# 
  2397  061E                     	;# 
  2398  068C                     	;# 
  2399  068D                     	;# 
  2400  068E                     	;# 
  2401  068F                     	;# 
  2402  0690                     	;# 
  2403  0691                     	;# 
  2404  0692                     	;# 
  2405  0693                     	;# 
  2406  0694                     	;# 
  2407  070C                     	;# 
  2408  070D                     	;# 
  2409  070E                     	;# 
  2410  070F                     	;# 
  2411  0710                     	;# 
  2412  0711                     	;# 
  2413  0712                     	;# 
  2414  0713                     	;# 
  2415  0714                     	;# 
  2416  0716                     	;# 
  2417  0717                     	;# 
  2418  0718                     	;# 
  2419  0719                     	;# 
  2420  071A                     	;# 
  2421  071B                     	;# 
  2422  071C                     	;# 
  2423  071D                     	;# 
  2424  071E                     	;# 
  2425  0796                     	;# 
  2426  0797                     	;# 
  2427  0798                     	;# 
  2428  0799                     	;# 
  2429  079A                     	;# 
  2430  079B                     	;# 
  2431  080C                     	;# 
  2432  080D                     	;# 
  2433  080E                     	;# 
  2434  080F                     	;# 
  2435  0810                     	;# 
  2436  0811                     	;# 
  2437  0812                     	;# 
  2438  0813                     	;# 
  2439  0814                     	;# 
  2440  081A                     	;# 
  2441  081B                     	;# 
  2442  081C                     	;# 
  2443  081D                     	;# 
  2444  081E                     	;# 
  2445  081F                     	;# 
  2446  088C                     	;# 
  2447  088D                     	;# 
  2448  088E                     	;# 
  2449  088F                     	;# 
  2450  0890                     	;# 
  2451  0891                     	;# 
  2452  0892                     	;# 
  2453  0893                     	;# 
  2454  0895                     	;# 
  2455  0896                     	;# 
  2456  0897                     	;# 
  2457  0898                     	;# 
  2458  0899                     	;# 
  2459  089A                     	;# 
  2460  089B                     	;# 
  2461  090C                     	;# 
  2462  090E                     	;# 
  2463  090F                     	;# 
  2464  091F                     	;# 
  2465  091F                     	;# 
  2466  098F                     	;# 
  2467  098F                     	;# 
  2468  0990                     	;# 
  2469  0991                     	;# 
  2470  0992                     	;# 
  2471  0993                     	;# 
  2472  0994                     	;# 
  2473  0995                     	;# 
  2474  0996                     	;# 
  2475  0997                     	;# 
  2476  0E0F                     	;# 
  2477  0E10                     	;# 
  2478  0E11                     	;# 
  2479  0E12                     	;# 
  2480  0E13                     	;# 
  2481  0E14                     	;# 
  2482  0E15                     	;# 
  2483  0E16                     	;# 
  2484  0E17                     	;# 
  2485  0E18                     	;# 
  2486  0E19                     	;# 
  2487  0E1A                     	;# 
  2488  0E1B                     	;# 
  2489  0E1C                     	;# 
  2490  0E1D                     	;# 
  2491  0E1E                     	;# 
  2492  0E1F                     	;# 
  2493  0E20                     	;# 
  2494  0E21                     	;# 
  2495  0E22                     	;# 
  2496  0E23                     	;# 
  2497  0E24                     	;# 
  2498  0E25                     	;# 
  2499  0E26                     	;# 
  2500  0E27                     	;# 
  2501  0E28                     	;# 
  2502  0E29                     	;# 
  2503  0E2A                     	;# 
  2504  0E2B                     	;# 
  2505  0E2C                     	;# 
  2506  0E2D                     	;# 
  2507  0E2E                     	;# 
  2508  0E2F                     	;# 
  2509  0E30                     	;# 
  2510  0E31                     	;# 
  2511  0E32                     	;# 
  2512  0E33                     	;# 
  2513  0E34                     	;# 
  2514  0E35                     	;# 
  2515  0E36                     	;# 
  2516  0E37                     	;# 
  2517  0E8F                     	;# 
  2518  0E90                     	;# 
  2519  0E91                     	;# 
  2520  0E92                     	;# 
  2521  0E93                     	;# 
  2522  0E94                     	;# 
  2523  0E95                     	;# 
  2524  0E96                     	;# 
  2525  0E97                     	;# 
  2526  0E9C                     	;# 
  2527  0E9D                     	;# 
  2528  0E9E                     	;# 
  2529  0EA1                     	;# 
  2530  0EA2                     	;# 
  2531  0EA3                     	;# 
  2532  0EA4                     	;# 
  2533  0EA5                     	;# 
  2534  0EA9                     	;# 
  2535  0EAA                     	;# 
  2536  0EAB                     	;# 
  2537  0EAC                     	;# 
  2538  0EB1                     	;# 
  2539  0EB2                     	;# 
  2540  0EB3                     	;# 
  2541  0EB8                     	;# 
  2542  0EB9                     	;# 
  2543  0EBA                     	;# 
  2544  0EBB                     	;# 
  2545  0EBC                     	;# 
  2546  0EBD                     	;# 
  2547  0EBE                     	;# 
  2548  0EC3                     	;# 
  2549  0EC5                     	;# 
  2550  0EC6                     	;# 
  2551  0EC7                     	;# 
  2552  0EC8                     	;# 
  2553  0EC9                     	;# 
  2554  0ECA                     	;# 
  2555  0ECB                     	;# 
  2556  0ECC                     	;# 
  2557  0F10                     	;# 
  2558  0F11                     	;# 
  2559  0F12                     	;# 
  2560  0F13                     	;# 
  2561  0F14                     	;# 
  2562  0F15                     	;# 
  2563  0F16                     	;# 
  2564  0F17                     	;# 
  2565  0F18                     	;# 
  2566  0F19                     	;# 
  2567  0F1A                     	;# 
  2568  0F1B                     	;# 
  2569  0F1C                     	;# 
  2570  0F1D                     	;# 
  2571  0F1E                     	;# 
  2572  0F1F                     	;# 
  2573  0F20                     	;# 
  2574  0F21                     	;# 
  2575  0F22                     	;# 
  2576  0F23                     	;# 
  2577  0F24                     	;# 
  2578  0F25                     	;# 
  2579  0F26                     	;# 
  2580  0F27                     	;# 
  2581  0F38                     	;# 
  2582  0F39                     	;# 
  2583  0F3A                     	;# 
  2584  0F3B                     	;# 
  2585  0F3C                     	;# 
  2586  0F3D                     	;# 
  2587  0F3E                     	;# 
  2588  0F3F                     	;# 
  2589  0F40                     	;# 
  2590  0F41                     	;# 
  2591  0F43                     	;# 
  2592  0F44                     	;# 
  2593  0F45                     	;# 
  2594  0F46                     	;# 
  2595  0F47                     	;# 
  2596  0F48                     	;# 
  2597  0F49                     	;# 
  2598  0F4A                     	;# 
  2599  0F4B                     	;# 
  2600  0F4C                     	;# 
  2601  0F4E                     	;# 
  2602  0F4F                     	;# 
  2603  0F50                     	;# 
  2604  0F51                     	;# 
  2605  0F52                     	;# 
  2606  0F53                     	;# 
  2607  0F54                     	;# 
  2608  0F55                     	;# 
  2609  0F56                     	;# 
  2610  0F57                     	;# 
  2611  0F65                     	;# 
  2612  0F68                     	;# 
  2613  0F69                     	;# 
  2614  0F6A                     	;# 
  2615  0F6B                     	;# 
  2616  0FE4                     	;# 
  2617  0FE5                     	;# 
  2618  0FE6                     	;# 
  2619  0FE7                     	;# 
  2620  0FE8                     	;# 
  2621  0FE9                     	;# 
  2622  0FEA                     	;# 
  2623  0FEB                     	;# 
  2624  0FED                     	;# 
  2625  0FEE                     	;# 
  2626  0FEF                     	;# 
  2627  0000                     	;# 
  2628  0001                     	;# 
  2629  0002                     	;# 
  2630  0003                     	;# 
  2631  0004                     	;# 
  2632  0005                     	;# 
  2633  0006                     	;# 
  2634  0007                     	;# 
  2635  0008                     	;# 
  2636  0009                     	;# 
  2637  000A                     	;# 
  2638  000B                     	;# 
  2639  000C                     	;# 
  2640  000D                     	;# 
  2641  000E                     	;# 
  2642  0010                     	;# 
  2643  0011                     	;# 
  2644  0012                     	;# 
  2645  0013                     	;# 
  2646  0016                     	;# 
  2647  0017                     	;# 
  2648  0018                     	;# 
  2649  001C                     	;# 
  2650  001C                     	;# 
  2651  001D                     	;# 
  2652  001D                     	;# 
  2653  001E                     	;# 
  2654  001F                     	;# 
  2655  008C                     	;# 
  2656  008C                     	;# 
  2657  008D                     	;# 
  2658  008E                     	;# 
  2659  008E                     	;# 
  2660  008F                     	;# 
  2661  0090                     	;# 
  2662  0090                     	;# 
  2663  0091                     	;# 
  2664  0093                     	;# 
  2665  0094                     	;# 
  2666  0095                     	;# 
  2667  0096                     	;# 
  2668  0097                     	;# 
  2669  0098                     	;# 
  2670  0099                     	;# 
  2671  009A                     	;# 
  2672  009B                     	;# 
  2673  009C                     	;# 
  2674  009D                     	;# 
  2675  009E                     	;# 
  2676  010C                     	;# 
  2677  010D                     	;# 
  2678  010E                     	;# 
  2679  010E                     	;# 
  2680  010F                     	;# 
  2681  0110                     	;# 
  2682  0110                     	;# 
  2683  0111                     	;# 
  2684  0112                     	;# 
  2685  0112                     	;# 
  2686  0113                     	;# 
  2687  0114                     	;# 
  2688  0114                     	;# 
  2689  0115                     	;# 
  2690  0116                     	;# 
  2691  0116                     	;# 
  2692  0117                     	;# 
  2693  0119                     	;# 
  2694  0119                     	;# 
  2695  0119                     	;# 
  2696  011A                     	;# 
  2697  011A                     	;# 
  2698  011A                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011C                     	;# 
  2705  011C                     	;# 
  2706  011C                     	;# 
  2707  011D                     	;# 
  2708  011D                     	;# 
  2709  011D                     	;# 
  2710  011E                     	;# 
  2711  011E                     	;# 
  2712  011E                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  018C                     	;# 
  2719  018D                     	;# 
  2720  018E                     	;# 
  2721  018F                     	;# 
  2722  0190                     	;# 
  2723  0191                     	;# 
  2724  0192                     	;# 
  2725  0196                     	;# 
  2726  0197                     	;# 
  2727  0198                     	;# 
  2728  0199                     	;# 
  2729  019A                     	;# 
  2730  019B                     	;# 
  2731  019C                     	;# 
  2732  020C                     	;# 
  2733  020D                     	;# 
  2734  020E                     	;# 
  2735  020F                     	;# 
  2736  020F                     	;# 
  2737  0210                     	;# 
  2738  0210                     	;# 
  2739  0211                     	;# 
  2740  0211                     	;# 
  2741  0212                     	;# 
  2742  0213                     	;# 
  2743  0214                     	;# 
  2744  0215                     	;# 
  2745  0215                     	;# 
  2746  0216                     	;# 
  2747  0216                     	;# 
  2748  0217                     	;# 
  2749  0217                     	;# 
  2750  0218                     	;# 
  2751  0219                     	;# 
  2752  021A                     	;# 
  2753  021B                     	;# 
  2754  021B                     	;# 
  2755  021C                     	;# 
  2756  021C                     	;# 
  2757  021D                     	;# 
  2758  021D                     	;# 
  2759  021E                     	;# 
  2760  021F                     	;# 
  2761  028C                     	;# 
  2762  028C                     	;# 
  2763  028D                     	;# 
  2764  028D                     	;# 
  2765  028E                     	;# 
  2766  028F                     	;# 
  2767  0290                     	;# 
  2768  0290                     	;# 
  2769  0291                     	;# 
  2770  0292                     	;# 
  2771  0292                     	;# 
  2772  0293                     	;# 
  2773  0293                     	;# 
  2774  0294                     	;# 
  2775  0295                     	;# 
  2776  0296                     	;# 
  2777  0296                     	;# 
  2778  0297                     	;# 
  2779  0298                     	;# 
  2780  0298                     	;# 
  2781  0299                     	;# 
  2782  0299                     	;# 
  2783  029A                     	;# 
  2784  029B                     	;# 
  2785  029C                     	;# 
  2786  029C                     	;# 
  2787  029D                     	;# 
  2788  030C                     	;# 
  2789  030C                     	;# 
  2790  030D                     	;# 
  2791  030E                     	;# 
  2792  030F                     	;# 
  2793  0310                     	;# 
  2794  0310                     	;# 
  2795  0311                     	;# 
  2796  0312                     	;# 
  2797  0313                     	;# 
  2798  0314                     	;# 
  2799  0314                     	;# 
  2800  0315                     	;# 
  2801  0316                     	;# 
  2802  0317                     	;# 
  2803  0318                     	;# 
  2804  0318                     	;# 
  2805  0319                     	;# 
  2806  031A                     	;# 
  2807  031B                     	;# 
  2808  031C                     	;# 
  2809  031C                     	;# 
  2810  031D                     	;# 
  2811  031E                     	;# 
  2812  031F                     	;# 
  2813  038C                     	;# 
  2814  038D                     	;# 
  2815  038E                     	;# 
  2816  0390                     	;# 
  2817  0391                     	;# 
  2818  0392                     	;# 
  2819  040C                     	;# 
  2820  040D                     	;# 
  2821  040E                     	;# 
  2822  040F                     	;# 
  2823  0410                     	;# 
  2824  0411                     	;# 
  2825  0416                     	;# 
  2826  0416                     	;# 
  2827  0417                     	;# 
  2828  0418                     	;# 
  2829  0418                     	;# 
  2830  0419                     	;# 
  2831  041A                     	;# 
  2832  041A                     	;# 
  2833  041B                     	;# 
  2834  041C                     	;# 
  2835  041C                     	;# 
  2836  041D                     	;# 
  2837  041E                     	;# 
  2838  041F                     	;# 
  2839  048C                     	;# 
  2840  048C                     	;# 
  2841  048D                     	;# 
  2842  048E                     	;# 
  2843  048F                     	;# 
  2844  048F                     	;# 
  2845  0490                     	;# 
  2846  0491                     	;# 
  2847  0492                     	;# 
  2848  0492                     	;# 
  2849  0493                     	;# 
  2850  0494                     	;# 
  2851  0495                     	;# 
  2852  0495                     	;# 
  2853  0496                     	;# 
  2854  0497                     	;# 
  2855  0498                     	;# 
  2856  0499                     	;# 
  2857  049A                     	;# 
  2858  049B                     	;# 
  2859  049C                     	;# 
  2860  049D                     	;# 
  2861  050C                     	;# 
  2862  050C                     	;# 
  2863  050D                     	;# 
  2864  050E                     	;# 
  2865  050F                     	;# 
  2866  050F                     	;# 
  2867  0510                     	;# 
  2868  0511                     	;# 
  2869  0512                     	;# 
  2870  0512                     	;# 
  2871  0513                     	;# 
  2872  0514                     	;# 
  2873  0515                     	;# 
  2874  0515                     	;# 
  2875  0516                     	;# 
  2876  0517                     	;# 
  2877  0518                     	;# 
  2878  0519                     	;# 
  2879  051A                     	;# 
  2880  051B                     	;# 
  2881  051C                     	;# 
  2882  051D                     	;# 
  2883  058C                     	;# 
  2884  058C                     	;# 
  2885  058D                     	;# 
  2886  058E                     	;# 
  2887  058F                     	;# 
  2888  058F                     	;# 
  2889  0590                     	;# 
  2890  0591                     	;# 
  2891  0592                     	;# 
  2892  0593                     	;# 
  2893  060C                     	;# 
  2894  060D                     	;# 
  2895  060E                     	;# 
  2896  060F                     	;# 
  2897  0610                     	;# 
  2898  0611                     	;# 
  2899  0612                     	;# 
  2900  0613                     	;# 
  2901  0614                     	;# 
  2902  0616                     	;# 
  2903  0617                     	;# 
  2904  0618                     	;# 
  2905  0619                     	;# 
  2906  061A                     	;# 
  2907  061B                     	;# 
  2908  061C                     	;# 
  2909  061D                     	;# 
  2910  061E                     	;# 
  2911  068C                     	;# 
  2912  068D                     	;# 
  2913  068E                     	;# 
  2914  068F                     	;# 
  2915  0690                     	;# 
  2916  0691                     	;# 
  2917  0692                     	;# 
  2918  0693                     	;# 
  2919  0694                     	;# 
  2920  070C                     	;# 
  2921  070D                     	;# 
  2922  070E                     	;# 
  2923  070F                     	;# 
  2924  0710                     	;# 
  2925  0711                     	;# 
  2926  0712                     	;# 
  2927  0713                     	;# 
  2928  0714                     	;# 
  2929  0716                     	;# 
  2930  0717                     	;# 
  2931  0718                     	;# 
  2932  0719                     	;# 
  2933  071A                     	;# 
  2934  071B                     	;# 
  2935  071C                     	;# 
  2936  071D                     	;# 
  2937  071E                     	;# 
  2938  0796                     	;# 
  2939  0797                     	;# 
  2940  0798                     	;# 
  2941  0799                     	;# 
  2942  079A                     	;# 
  2943  079B                     	;# 
  2944  080C                     	;# 
  2945  080D                     	;# 
  2946  080E                     	;# 
  2947  080F                     	;# 
  2948  0810                     	;# 
  2949  0811                     	;# 
  2950  0812                     	;# 
  2951  0813                     	;# 
  2952  0814                     	;# 
  2953  081A                     	;# 
  2954  081B                     	;# 
  2955  081C                     	;# 
  2956  081D                     	;# 
  2957  081E                     	;# 
  2958  081F                     	;# 
  2959  088C                     	;# 
  2960  088D                     	;# 
  2961  088E                     	;# 
  2962  088F                     	;# 
  2963  0890                     	;# 
  2964  0891                     	;# 
  2965  0892                     	;# 
  2966  0893                     	;# 
  2967  0895                     	;# 
  2968  0896                     	;# 
  2969  0897                     	;# 
  2970  0898                     	;# 
  2971  0899                     	;# 
  2972  089A                     	;# 
  2973  089B                     	;# 
  2974  090C                     	;# 
  2975  090E                     	;# 
  2976  090F                     	;# 
  2977  091F                     	;# 
  2978  091F                     	;# 
  2979  098F                     	;# 
  2980  098F                     	;# 
  2981  0990                     	;# 
  2982  0991                     	;# 
  2983  0992                     	;# 
  2984  0993                     	;# 
  2985  0994                     	;# 
  2986  0995                     	;# 
  2987  0996                     	;# 
  2988  0997                     	;# 
  2989  0E0F                     	;# 
  2990  0E10                     	;# 
  2991  0E11                     	;# 
  2992  0E12                     	;# 
  2993  0E13                     	;# 
  2994  0E14                     	;# 
  2995  0E15                     	;# 
  2996  0E16                     	;# 
  2997  0E17                     	;# 
  2998  0E18                     	;# 
  2999  0E19                     	;# 
  3000  0E1A                     	;# 
  3001  0E1B                     	;# 
  3002  0E1C                     	;# 
  3003  0E1D                     	;# 
  3004  0E1E                     	;# 
  3005  0E1F                     	;# 
  3006  0E20                     	;# 
  3007  0E21                     	;# 
  3008  0E22                     	;# 
  3009  0E23                     	;# 
  3010  0E24                     	;# 
  3011  0E25                     	;# 
  3012  0E26                     	;# 
  3013  0E27                     	;# 
  3014  0E28                     	;# 
  3015  0E29                     	;# 
  3016  0E2A                     	;# 
  3017  0E2B                     	;# 
  3018  0E2C                     	;# 
  3019  0E2D                     	;# 
  3020  0E2E                     	;# 
  3021  0E2F                     	;# 
  3022  0E30                     	;# 
  3023  0E31                     	;# 
  3024  0E32                     	;# 
  3025  0E33                     	;# 
  3026  0E34                     	;# 
  3027  0E35                     	;# 
  3028  0E36                     	;# 
  3029  0E37                     	;# 
  3030  0E8F                     	;# 
  3031  0E90                     	;# 
  3032  0E91                     	;# 
  3033  0E92                     	;# 
  3034  0E93                     	;# 
  3035  0E94                     	;# 
  3036  0E95                     	;# 
  3037  0E96                     	;# 
  3038  0E97                     	;# 
  3039  0E9C                     	;# 
  3040  0E9D                     	;# 
  3041  0E9E                     	;# 
  3042  0EA1                     	;# 
  3043  0EA2                     	;# 
  3044  0EA3                     	;# 
  3045  0EA4                     	;# 
  3046  0EA5                     	;# 
  3047  0EA9                     	;# 
  3048  0EAA                     	;# 
  3049  0EAB                     	;# 
  3050  0EAC                     	;# 
  3051  0EB1                     	;# 
  3052  0EB2                     	;# 
  3053  0EB3                     	;# 
  3054  0EB8                     	;# 
  3055  0EB9                     	;# 
  3056  0EBA                     	;# 
  3057  0EBB                     	;# 
  3058  0EBC                     	;# 
  3059  0EBD                     	;# 
  3060  0EBE                     	;# 
  3061  0EC3                     	;# 
  3062  0EC5                     	;# 
  3063  0EC6                     	;# 
  3064  0EC7                     	;# 
  3065  0EC8                     	;# 
  3066  0EC9                     	;# 
  3067  0ECA                     	;# 
  3068  0ECB                     	;# 
  3069  0ECC                     	;# 
  3070  0F10                     	;# 
  3071  0F11                     	;# 
  3072  0F12                     	;# 
  3073  0F13                     	;# 
  3074  0F14                     	;# 
  3075  0F15                     	;# 
  3076  0F16                     	;# 
  3077  0F17                     	;# 
  3078  0F18                     	;# 
  3079  0F19                     	;# 
  3080  0F1A                     	;# 
  3081  0F1B                     	;# 
  3082  0F1C                     	;# 
  3083  0F1D                     	;# 
  3084  0F1E                     	;# 
  3085  0F1F                     	;# 
  3086  0F20                     	;# 
  3087  0F21                     	;# 
  3088  0F22                     	;# 
  3089  0F23                     	;# 
  3090  0F24                     	;# 
  3091  0F25                     	;# 
  3092  0F26                     	;# 
  3093  0F27                     	;# 
  3094  0F38                     	;# 
  3095  0F39                     	;# 
  3096  0F3A                     	;# 
  3097  0F3B                     	;# 
  3098  0F3C                     	;# 
  3099  0F3D                     	;# 
  3100  0F3E                     	;# 
  3101  0F3F                     	;# 
  3102  0F40                     	;# 
  3103  0F41                     	;# 
  3104  0F43                     	;# 
  3105  0F44                     	;# 
  3106  0F45                     	;# 
  3107  0F46                     	;# 
  3108  0F47                     	;# 
  3109  0F48                     	;# 
  3110  0F49                     	;# 
  3111  0F4A                     	;# 
  3112  0F4B                     	;# 
  3113  0F4C                     	;# 
  3114  0F4E                     	;# 
  3115  0F4F                     	;# 
  3116  0F50                     	;# 
  3117  0F51                     	;# 
  3118  0F52                     	;# 
  3119  0F53                     	;# 
  3120  0F54                     	;# 
  3121  0F55                     	;# 
  3122  0F56                     	;# 
  3123  0F57                     	;# 
  3124  0F65                     	;# 
  3125  0F68                     	;# 
  3126  0F69                     	;# 
  3127  0F6A                     	;# 
  3128  0F6B                     	;# 
  3129  0FE4                     	;# 
  3130  0FE5                     	;# 
  3131  0FE6                     	;# 
  3132  0FE7                     	;# 
  3133  0FE8                     	;# 
  3134  0FE9                     	;# 
  3135  0FEA                     	;# 
  3136  0FEB                     	;# 
  3137  0FED                     	;# 
  3138  0FEE                     	;# 
  3139  0FEF                     	;# 
  3140  0000                     	;# 
  3141  0001                     	;# 
  3142  0002                     	;# 
  3143  0003                     	;# 
  3144  0004                     	;# 
  3145  0005                     	;# 
  3146  0006                     	;# 
  3147  0007                     	;# 
  3148  0008                     	;# 
  3149  0009                     	;# 
  3150  000A                     	;# 
  3151  000B                     	;# 
  3152  000C                     	;# 
  3153  000D                     	;# 
  3154  000E                     	;# 
  3155  0010                     	;# 
  3156  0011                     	;# 
  3157  0012                     	;# 
  3158  0013                     	;# 
  3159  0016                     	;# 
  3160  0017                     	;# 
  3161  0018                     	;# 
  3162  001C                     	;# 
  3163  001C                     	;# 
  3164  001D                     	;# 
  3165  001D                     	;# 
  3166  001E                     	;# 
  3167  001F                     	;# 
  3168  008C                     	;# 
  3169  008C                     	;# 
  3170  008D                     	;# 
  3171  008E                     	;# 
  3172  008E                     	;# 
  3173  008F                     	;# 
  3174  0090                     	;# 
  3175  0090                     	;# 
  3176  0091                     	;# 
  3177  0093                     	;# 
  3178  0094                     	;# 
  3179  0095                     	;# 
  3180  0096                     	;# 
  3181  0097                     	;# 
  3182  0098                     	;# 
  3183  0099                     	;# 
  3184  009A                     	;# 
  3185  009B                     	;# 
  3186  009C                     	;# 
  3187  009D                     	;# 
  3188  009E                     	;# 
  3189  010C                     	;# 
  3190  010D                     	;# 
  3191  010E                     	;# 
  3192  010E                     	;# 
  3193  010F                     	;# 
  3194  0110                     	;# 
  3195  0110                     	;# 
  3196  0111                     	;# 
  3197  0112                     	;# 
  3198  0112                     	;# 
  3199  0113                     	;# 
  3200  0114                     	;# 
  3201  0114                     	;# 
  3202  0115                     	;# 
  3203  0116                     	;# 
  3204  0116                     	;# 
  3205  0117                     	;# 
  3206  0119                     	;# 
  3207  0119                     	;# 
  3208  0119                     	;# 
  3209  011A                     	;# 
  3210  011A                     	;# 
  3211  011A                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011C                     	;# 
  3218  011C                     	;# 
  3219  011C                     	;# 
  3220  011D                     	;# 
  3221  011D                     	;# 
  3222  011D                     	;# 
  3223  011E                     	;# 
  3224  011E                     	;# 
  3225  011E                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  018C                     	;# 
  3232  018D                     	;# 
  3233  018E                     	;# 
  3234  018F                     	;# 
  3235  0190                     	;# 
  3236  0191                     	;# 
  3237  0192                     	;# 
  3238  0196                     	;# 
  3239  0197                     	;# 
  3240  0198                     	;# 
  3241  0199                     	;# 
  3242  019A                     	;# 
  3243  019B                     	;# 
  3244  019C                     	;# 
  3245  020C                     	;# 
  3246  020D                     	;# 
  3247  020E                     	;# 
  3248  020F                     	;# 
  3249  020F                     	;# 
  3250  0210                     	;# 
  3251  0210                     	;# 
  3252  0211                     	;# 
  3253  0211                     	;# 
  3254  0212                     	;# 
  3255  0213                     	;# 
  3256  0214                     	;# 
  3257  0215                     	;# 
  3258  0215                     	;# 
  3259  0216                     	;# 
  3260  0216                     	;# 
  3261  0217                     	;# 
  3262  0217                     	;# 
  3263  0218                     	;# 
  3264  0219                     	;# 
  3265  021A                     	;# 
  3266  021B                     	;# 
  3267  021B                     	;# 
  3268  021C                     	;# 
  3269  021C                     	;# 
  3270  021D                     	;# 
  3271  021D                     	;# 
  3272  021E                     	;# 
  3273  021F                     	;# 
  3274  028C                     	;# 
  3275  028C                     	;# 
  3276  028D                     	;# 
  3277  028D                     	;# 
  3278  028E                     	;# 
  3279  028F                     	;# 
  3280  0290                     	;# 
  3281  0290                     	;# 
  3282  0291                     	;# 
  3283  0292                     	;# 
  3284  0292                     	;# 
  3285  0293                     	;# 
  3286  0293                     	;# 
  3287  0294                     	;# 
  3288  0295                     	;# 
  3289  0296                     	;# 
  3290  0296                     	;# 
  3291  0297                     	;# 
  3292  0298                     	;# 
  3293  0298                     	;# 
  3294  0299                     	;# 
  3295  0299                     	;# 
  3296  029A                     	;# 
  3297  029B                     	;# 
  3298  029C                     	;# 
  3299  029C                     	;# 
  3300  029D                     	;# 
  3301  030C                     	;# 
  3302  030C                     	;# 
  3303  030D                     	;# 
  3304  030E                     	;# 
  3305  030F                     	;# 
  3306  0310                     	;# 
  3307  0310                     	;# 
  3308  0311                     	;# 
  3309  0312                     	;# 
  3310  0313                     	;# 
  3311  0314                     	;# 
  3312  0314                     	;# 
  3313  0315                     	;# 
  3314  0316                     	;# 
  3315  0317                     	;# 
  3316  0318                     	;# 
  3317  0318                     	;# 
  3318  0319                     	;# 
  3319  031A                     	;# 
  3320  031B                     	;# 
  3321  031C                     	;# 
  3322  031C                     	;# 
  3323  031D                     	;# 
  3324  031E                     	;# 
  3325  031F                     	;# 
  3326  038C                     	;# 
  3327  038D                     	;# 
  3328  038E                     	;# 
  3329  0390                     	;# 
  3330  0391                     	;# 
  3331  0392                     	;# 
  3332  040C                     	;# 
  3333  040D                     	;# 
  3334  040E                     	;# 
  3335  040F                     	;# 
  3336  0410                     	;# 
  3337  0411                     	;# 
  3338  0416                     	;# 
  3339  0416                     	;# 
  3340  0417                     	;# 
  3341  0418                     	;# 
  3342  0418                     	;# 
  3343  0419                     	;# 
  3344  041A                     	;# 
  3345  041A                     	;# 
  3346  041B                     	;# 
  3347  041C                     	;# 
  3348  041C                     	;# 
  3349  041D                     	;# 
  3350  041E                     	;# 
  3351  041F                     	;# 
  3352  048C                     	;# 
  3353  048C                     	;# 
  3354  048D                     	;# 
  3355  048E                     	;# 
  3356  048F                     	;# 
  3357  048F                     	;# 
  3358  0490                     	;# 
  3359  0491                     	;# 
  3360  0492                     	;# 
  3361  0492                     	;# 
  3362  0493                     	;# 
  3363  0494                     	;# 
  3364  0495                     	;# 
  3365  0495                     	;# 
  3366  0496                     	;# 
  3367  0497                     	;# 
  3368  0498                     	;# 
  3369  0499                     	;# 
  3370  049A                     	;# 
  3371  049B                     	;# 
  3372  049C                     	;# 
  3373  049D                     	;# 
  3374  050C                     	;# 
  3375  050C                     	;# 
  3376  050D                     	;# 
  3377  050E                     	;# 
  3378  050F                     	;# 
  3379  050F                     	;# 
  3380  0510                     	;# 
  3381  0511                     	;# 
  3382  0512                     	;# 
  3383  0512                     	;# 
  3384  0513                     	;# 
  3385  0514                     	;# 
  3386  0515                     	;# 
  3387  0515                     	;# 
  3388  0516                     	;# 
  3389  0517                     	;# 
  3390  0518                     	;# 
  3391  0519                     	;# 
  3392  051A                     	;# 
  3393  051B                     	;# 
  3394  051C                     	;# 
  3395  051D                     	;# 
  3396  058C                     	;# 
  3397  058C                     	;# 
  3398  058D                     	;# 
  3399  058E                     	;# 
  3400  058F                     	;# 
  3401  058F                     	;# 
  3402  0590                     	;# 
  3403  0591                     	;# 
  3404  0592                     	;# 
  3405  0593                     	;# 
  3406  060C                     	;# 
  3407  060D                     	;# 
  3408  060E                     	;# 
  3409  060F                     	;# 
  3410  0610                     	;# 
  3411  0611                     	;# 
  3412  0612                     	;# 
  3413  0613                     	;# 
  3414  0614                     	;# 
  3415  0616                     	;# 
  3416  0617                     	;# 
  3417  0618                     	;# 
  3418  0619                     	;# 
  3419  061A                     	;# 
  3420  061B                     	;# 
  3421  061C                     	;# 
  3422  061D                     	;# 
  3423  061E                     	;# 
  3424  068C                     	;# 
  3425  068D                     	;# 
  3426  068E                     	;# 
  3427  068F                     	;# 
  3428  0690                     	;# 
  3429  0691                     	;# 
  3430  0692                     	;# 
  3431  0693                     	;# 
  3432  0694                     	;# 
  3433  070C                     	;# 
  3434  070D                     	;# 
  3435  070E                     	;# 
  3436  070F                     	;# 
  3437  0710                     	;# 
  3438  0711                     	;# 
  3439  0712                     	;# 
  3440  0713                     	;# 
  3441  0714                     	;# 
  3442  0716                     	;# 
  3443  0717                     	;# 
  3444  0718                     	;# 
  3445  0719                     	;# 
  3446  071A                     	;# 
  3447  071B                     	;# 
  3448  071C                     	;# 
  3449  071D                     	;# 
  3450  071E                     	;# 
  3451  0796                     	;# 
  3452  0797                     	;# 
  3453  0798                     	;# 
  3454  0799                     	;# 
  3455  079A                     	;# 
  3456  079B                     	;# 
  3457  080C                     	;# 
  3458  080D                     	;# 
  3459  080E                     	;# 
  3460  080F                     	;# 
  3461  0810                     	;# 
  3462  0811                     	;# 
  3463  0812                     	;# 
  3464  0813                     	;# 
  3465  0814                     	;# 
  3466  081A                     	;# 
  3467  081B                     	;# 
  3468  081C                     	;# 
  3469  081D                     	;# 
  3470  081E                     	;# 
  3471  081F                     	;# 
  3472  088C                     	;# 
  3473  088D                     	;# 
  3474  088E                     	;# 
  3475  088F                     	;# 
  3476  0890                     	;# 
  3477  0891                     	;# 
  3478  0892                     	;# 
  3479  0893                     	;# 
  3480  0895                     	;# 
  3481  0896                     	;# 
  3482  0897                     	;# 
  3483  0898                     	;# 
  3484  0899                     	;# 
  3485  089A                     	;# 
  3486  089B                     	;# 
  3487  090C                     	;# 
  3488  090E                     	;# 
  3489  090F                     	;# 
  3490  091F                     	;# 
  3491  091F                     	;# 
  3492  098F                     	;# 
  3493  098F                     	;# 
  3494  0990                     	;# 
  3495  0991                     	;# 
  3496  0992                     	;# 
  3497  0993                     	;# 
  3498  0994                     	;# 
  3499  0995                     	;# 
  3500  0996                     	;# 
  3501  0997                     	;# 
  3502  0E0F                     	;# 
  3503  0E10                     	;# 
  3504  0E11                     	;# 
  3505  0E12                     	;# 
  3506  0E13                     	;# 
  3507  0E14                     	;# 
  3508  0E15                     	;# 
  3509  0E16                     	;# 
  3510  0E17                     	;# 
  3511  0E18                     	;# 
  3512  0E19                     	;# 
  3513  0E1A                     	;# 
  3514  0E1B                     	;# 
  3515  0E1C                     	;# 
  3516  0E1D                     	;# 
  3517  0E1E                     	;# 
  3518  0E1F                     	;# 
  3519  0E20                     	;# 
  3520  0E21                     	;# 
  3521  0E22                     	;# 
  3522  0E23                     	;# 
  3523  0E24                     	;# 
  3524  0E25                     	;# 
  3525  0E26                     	;# 
  3526  0E27                     	;# 
  3527  0E28                     	;# 
  3528  0E29                     	;# 
  3529  0E2A                     	;# 
  3530  0E2B                     	;# 
  3531  0E2C                     	;# 
  3532  0E2D                     	;# 
  3533  0E2E                     	;# 
  3534  0E2F                     	;# 
  3535  0E30                     	;# 
  3536  0E31                     	;# 
  3537  0E32                     	;# 
  3538  0E33                     	;# 
  3539  0E34                     	;# 
  3540  0E35                     	;# 
  3541  0E36                     	;# 
  3542  0E37                     	;# 
  3543  0E8F                     	;# 
  3544  0E90                     	;# 
  3545  0E91                     	;# 
  3546  0E92                     	;# 
  3547  0E93                     	;# 
  3548  0E94                     	;# 
  3549  0E95                     	;# 
  3550  0E96                     	;# 
  3551  0E97                     	;# 
  3552  0E9C                     	;# 
  3553  0E9D                     	;# 
  3554  0E9E                     	;# 
  3555  0EA1                     	;# 
  3556  0EA2                     	;# 
  3557  0EA3                     	;# 
  3558  0EA4                     	;# 
  3559  0EA5                     	;# 
  3560  0EA9                     	;# 
  3561  0EAA                     	;# 
  3562  0EAB                     	;# 
  3563  0EAC                     	;# 
  3564  0EB1                     	;# 
  3565  0EB2                     	;# 
  3566  0EB3                     	;# 
  3567  0EB8                     	;# 
  3568  0EB9                     	;# 
  3569  0EBA                     	;# 
  3570  0EBB                     	;# 
  3571  0EBC                     	;# 
  3572  0EBD                     	;# 
  3573  0EBE                     	;# 
  3574  0EC3                     	;# 
  3575  0EC5                     	;# 
  3576  0EC6                     	;# 
  3577  0EC7                     	;# 
  3578  0EC8                     	;# 
  3579  0EC9                     	;# 
  3580  0ECA                     	;# 
  3581  0ECB                     	;# 
  3582  0ECC                     	;# 
  3583  0F10                     	;# 
  3584  0F11                     	;# 
  3585  0F12                     	;# 
  3586  0F13                     	;# 
  3587  0F14                     	;# 
  3588  0F15                     	;# 
  3589  0F16                     	;# 
  3590  0F17                     	;# 
  3591  0F18                     	;# 
  3592  0F19                     	;# 
  3593  0F1A                     	;# 
  3594  0F1B                     	;# 
  3595  0F1C                     	;# 
  3596  0F1D                     	;# 
  3597  0F1E                     	;# 
  3598  0F1F                     	;# 
  3599  0F20                     	;# 
  3600  0F21                     	;# 
  3601  0F22                     	;# 
  3602  0F23                     	;# 
  3603  0F24                     	;# 
  3604  0F25                     	;# 
  3605  0F26                     	;# 
  3606  0F27                     	;# 
  3607  0F38                     	;# 
  3608  0F39                     	;# 
  3609  0F3A                     	;# 
  3610  0F3B                     	;# 
  3611  0F3C                     	;# 
  3612  0F3D                     	;# 
  3613  0F3E                     	;# 
  3614  0F3F                     	;# 
  3615  0F40                     	;# 
  3616  0F41                     	;# 
  3617  0F43                     	;# 
  3618  0F44                     	;# 
  3619  0F45                     	;# 
  3620  0F46                     	;# 
  3621  0F47                     	;# 
  3622  0F48                     	;# 
  3623  0F49                     	;# 
  3624  0F4A                     	;# 
  3625  0F4B                     	;# 
  3626  0F4C                     	;# 
  3627  0F4E                     	;# 
  3628  0F4F                     	;# 
  3629  0F50                     	;# 
  3630  0F51                     	;# 
  3631  0F52                     	;# 
  3632  0F53                     	;# 
  3633  0F54                     	;# 
  3634  0F55                     	;# 
  3635  0F56                     	;# 
  3636  0F57                     	;# 
  3637  0F65                     	;# 
  3638  0F68                     	;# 
  3639  0F69                     	;# 
  3640  0F6A                     	;# 
  3641  0F6B                     	;# 
  3642  0FE4                     	;# 
  3643  0FE5                     	;# 
  3644  0FE6                     	;# 
  3645  0FE7                     	;# 
  3646  0FE8                     	;# 
  3647  0FE9                     	;# 
  3648  0FEA                     	;# 
  3649  0FEB                     	;# 
  3650  0FED                     	;# 
  3651  0FEE                     	;# 
  3652  0FEF                     	;# 
  3653  0000                     	;# 
  3654  0001                     	;# 
  3655  0002                     	;# 
  3656  0003                     	;# 
  3657  0004                     	;# 
  3658  0005                     	;# 
  3659  0006                     	;# 
  3660  0007                     	;# 
  3661  0008                     	;# 
  3662  0009                     	;# 
  3663  000A                     	;# 
  3664  000B                     	;# 
  3665  000C                     	;# 
  3666  000D                     	;# 
  3667  000E                     	;# 
  3668  0010                     	;# 
  3669  0011                     	;# 
  3670  0012                     	;# 
  3671  0013                     	;# 
  3672  0016                     	;# 
  3673  0017                     	;# 
  3674  0018                     	;# 
  3675  001C                     	;# 
  3676  001C                     	;# 
  3677  001D                     	;# 
  3678  001D                     	;# 
  3679  001E                     	;# 
  3680  001F                     	;# 
  3681  008C                     	;# 
  3682  008C                     	;# 
  3683  008D                     	;# 
  3684  008E                     	;# 
  3685  008E                     	;# 
  3686  008F                     	;# 
  3687  0090                     	;# 
  3688  0090                     	;# 
  3689  0091                     	;# 
  3690  0093                     	;# 
  3691  0094                     	;# 
  3692  0095                     	;# 
  3693  0096                     	;# 
  3694  0097                     	;# 
  3695  0098                     	;# 
  3696  0099                     	;# 
  3697  009A                     	;# 
  3698  009B                     	;# 
  3699  009C                     	;# 
  3700  009D                     	;# 
  3701  009E                     	;# 
  3702  010C                     	;# 
  3703  010D                     	;# 
  3704  010E                     	;# 
  3705  010E                     	;# 
  3706  010F                     	;# 
  3707  0110                     	;# 
  3708  0110                     	;# 
  3709  0111                     	;# 
  3710  0112                     	;# 
  3711  0112                     	;# 
  3712  0113                     	;# 
  3713  0114                     	;# 
  3714  0114                     	;# 
  3715  0115                     	;# 
  3716  0116                     	;# 
  3717  0116                     	;# 
  3718  0117                     	;# 
  3719  0119                     	;# 
  3720  0119                     	;# 
  3721  0119                     	;# 
  3722  011A                     	;# 
  3723  011A                     	;# 
  3724  011A                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011C                     	;# 
  3731  011C                     	;# 
  3732  011C                     	;# 
  3733  011D                     	;# 
  3734  011D                     	;# 
  3735  011D                     	;# 
  3736  011E                     	;# 
  3737  011E                     	;# 
  3738  011E                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  018C                     	;# 
  3745  018D                     	;# 
  3746  018E                     	;# 
  3747  018F                     	;# 
  3748  0190                     	;# 
  3749  0191                     	;# 
  3750  0192                     	;# 
  3751  0196                     	;# 
  3752  0197                     	;# 
  3753  0198                     	;# 
  3754  0199                     	;# 
  3755  019A                     	;# 
  3756  019B                     	;# 
  3757  019C                     	;# 
  3758  020C                     	;# 
  3759  020D                     	;# 
  3760  020E                     	;# 
  3761  020F                     	;# 
  3762  020F                     	;# 
  3763  0210                     	;# 
  3764  0210                     	;# 
  3765  0211                     	;# 
  3766  0211                     	;# 
  3767  0212                     	;# 
  3768  0213                     	;# 
  3769  0214                     	;# 
  3770  0215                     	;# 
  3771  0215                     	;# 
  3772  0216                     	;# 
  3773  0216                     	;# 
  3774  0217                     	;# 
  3775  0217                     	;# 
  3776  0218                     	;# 
  3777  0219                     	;# 
  3778  021A                     	;# 
  3779  021B                     	;# 
  3780  021B                     	;# 
  3781  021C                     	;# 
  3782  021C                     	;# 
  3783  021D                     	;# 
  3784  021D                     	;# 
  3785  021E                     	;# 
  3786  021F                     	;# 
  3787  028C                     	;# 
  3788  028C                     	;# 
  3789  028D                     	;# 
  3790  028D                     	;# 
  3791  028E                     	;# 
  3792  028F                     	;# 
  3793  0290                     	;# 
  3794  0290                     	;# 
  3795  0291                     	;# 
  3796  0292                     	;# 
  3797  0292                     	;# 
  3798  0293                     	;# 
  3799  0293                     	;# 
  3800  0294                     	;# 
  3801  0295                     	;# 
  3802  0296                     	;# 
  3803  0296                     	;# 
  3804  0297                     	;# 
  3805  0298                     	;# 
  3806  0298                     	;# 
  3807  0299                     	;# 
  3808  0299                     	;# 
  3809  029A                     	;# 
  3810  029B                     	;# 
  3811  029C                     	;# 
  3812  029C                     	;# 
  3813  029D                     	;# 
  3814  030C                     	;# 
  3815  030C                     	;# 
  3816  030D                     	;# 
  3817  030E                     	;# 
  3818  030F                     	;# 
  3819  0310                     	;# 
  3820  0310                     	;# 
  3821  0311                     	;# 
  3822  0312                     	;# 
  3823  0313                     	;# 
  3824  0314                     	;# 
  3825  0314                     	;# 
  3826  0315                     	;# 
  3827  0316                     	;# 
  3828  0317                     	;# 
  3829  0318                     	;# 
  3830  0318                     	;# 
  3831  0319                     	;# 
  3832  031A                     	;# 
  3833  031B                     	;# 
  3834  031C                     	;# 
  3835  031C                     	;# 
  3836  031D                     	;# 
  3837  031E                     	;# 
  3838  031F                     	;# 
  3839  038C                     	;# 
  3840  038D                     	;# 
  3841  038E                     	;# 
  3842  0390                     	;# 
  3843  0391                     	;# 
  3844  0392                     	;# 
  3845  040C                     	;# 
  3846  040D                     	;# 
  3847  040E                     	;# 
  3848  040F                     	;# 
  3849  0410                     	;# 
  3850  0411                     	;# 
  3851  0416                     	;# 
  3852  0416                     	;# 
  3853  0417                     	;# 
  3854  0418                     	;# 
  3855  0418                     	;# 
  3856  0419                     	;# 
  3857  041A                     	;# 
  3858  041A                     	;# 
  3859  041B                     	;# 
  3860  041C                     	;# 
  3861  041C                     	;# 
  3862  041D                     	;# 
  3863  041E                     	;# 
  3864  041F                     	;# 
  3865  048C                     	;# 
  3866  048C                     	;# 
  3867  048D                     	;# 
  3868  048E                     	;# 
  3869  048F                     	;# 
  3870  048F                     	;# 
  3871  0490                     	;# 
  3872  0491                     	;# 
  3873  0492                     	;# 
  3874  0492                     	;# 
  3875  0493                     	;# 
  3876  0494                     	;# 
  3877  0495                     	;# 
  3878  0495                     	;# 
  3879  0496                     	;# 
  3880  0497                     	;# 
  3881  0498                     	;# 
  3882  0499                     	;# 
  3883  049A                     	;# 
  3884  049B                     	;# 
  3885  049C                     	;# 
  3886  049D                     	;# 
  3887  050C                     	;# 
  3888  050C                     	;# 
  3889  050D                     	;# 
  3890  050E                     	;# 
  3891  050F                     	;# 
  3892  050F                     	;# 
  3893  0510                     	;# 
  3894  0511                     	;# 
  3895  0512                     	;# 
  3896  0512                     	;# 
  3897  0513                     	;# 
  3898  0514                     	;# 
  3899  0515                     	;# 
  3900  0515                     	;# 
  3901  0516                     	;# 
  3902  0517                     	;# 
  3903  0518                     	;# 
  3904  0519                     	;# 
  3905  051A                     	;# 
  3906  051B                     	;# 
  3907  051C                     	;# 
  3908  051D                     	;# 
  3909  058C                     	;# 
  3910  058C                     	;# 
  3911  058D                     	;# 
  3912  058E                     	;# 
  3913  058F                     	;# 
  3914  058F                     	;# 
  3915  0590                     	;# 
  3916  0591                     	;# 
  3917  0592                     	;# 
  3918  0593                     	;# 
  3919  060C                     	;# 
  3920  060D                     	;# 
  3921  060E                     	;# 
  3922  060F                     	;# 
  3923  0610                     	;# 
  3924  0611                     	;# 
  3925  0612                     	;# 
  3926  0613                     	;# 
  3927  0614                     	;# 
  3928  0616                     	;# 
  3929  0617                     	;# 
  3930  0618                     	;# 
  3931  0619                     	;# 
  3932  061A                     	;# 
  3933  061B                     	;# 
  3934  061C                     	;# 
  3935  061D                     	;# 
  3936  061E                     	;# 
  3937  068C                     	;# 
  3938  068D                     	;# 
  3939  068E                     	;# 
  3940  068F                     	;# 
  3941  0690                     	;# 
  3942  0691                     	;# 
  3943  0692                     	;# 
  3944  0693                     	;# 
  3945  0694                     	;# 
  3946  070C                     	;# 
  3947  070D                     	;# 
  3948  070E                     	;# 
  3949  070F                     	;# 
  3950  0710                     	;# 
  3951  0711                     	;# 
  3952  0712                     	;# 
  3953  0713                     	;# 
  3954  0714                     	;# 
  3955  0716                     	;# 
  3956  0717                     	;# 
  3957  0718                     	;# 
  3958  0719                     	;# 
  3959  071A                     	;# 
  3960  071B                     	;# 
  3961  071C                     	;# 
  3962  071D                     	;# 
  3963  071E                     	;# 
  3964  0796                     	;# 
  3965  0797                     	;# 
  3966  0798                     	;# 
  3967  0799                     	;# 
  3968  079A                     	;# 
  3969  079B                     	;# 
  3970  080C                     	;# 
  3971  080D                     	;# 
  3972  080E                     	;# 
  3973  080F                     	;# 
  3974  0810                     	;# 
  3975  0811                     	;# 
  3976  0812                     	;# 
  3977  0813                     	;# 
  3978  0814                     	;# 
  3979  081A                     	;# 
  3980  081B                     	;# 
  3981  081C                     	;# 
  3982  081D                     	;# 
  3983  081E                     	;# 
  3984  081F                     	;# 
  3985  088C                     	;# 
  3986  088D                     	;# 
  3987  088E                     	;# 
  3988  088F                     	;# 
  3989  0890                     	;# 
  3990  0891                     	;# 
  3991  0892                     	;# 
  3992  0893                     	;# 
  3993  0895                     	;# 
  3994  0896                     	;# 
  3995  0897                     	;# 
  3996  0898                     	;# 
  3997  0899                     	;# 
  3998  089A                     	;# 
  3999  089B                     	;# 
  4000  090C                     	;# 
  4001  090E                     	;# 
  4002  090F                     	;# 
  4003  091F                     	;# 
  4004  091F                     	;# 
  4005  098F                     	;# 
  4006  098F                     	;# 
  4007  0990                     	;# 
  4008  0991                     	;# 
  4009  0992                     	;# 
  4010  0993                     	;# 
  4011  0994                     	;# 
  4012  0995                     	;# 
  4013  0996                     	;# 
  4014  0997                     	;# 
  4015  0E0F                     	;# 
  4016  0E10                     	;# 
  4017  0E11                     	;# 
  4018  0E12                     	;# 
  4019  0E13                     	;# 
  4020  0E14                     	;# 
  4021  0E15                     	;# 
  4022  0E16                     	;# 
  4023  0E17                     	;# 
  4024  0E18                     	;# 
  4025  0E19                     	;# 
  4026  0E1A                     	;# 
  4027  0E1B                     	;# 
  4028  0E1C                     	;# 
  4029  0E1D                     	;# 
  4030  0E1E                     	;# 
  4031  0E1F                     	;# 
  4032  0E20                     	;# 
  4033  0E21                     	;# 
  4034  0E22                     	;# 
  4035  0E23                     	;# 
  4036  0E24                     	;# 
  4037  0E25                     	;# 
  4038  0E26                     	;# 
  4039  0E27                     	;# 
  4040  0E28                     	;# 
  4041  0E29                     	;# 
  4042  0E2A                     	;# 
  4043  0E2B                     	;# 
  4044  0E2C                     	;# 
  4045  0E2D                     	;# 
  4046  0E2E                     	;# 
  4047  0E2F                     	;# 
  4048  0E30                     	;# 
  4049  0E31                     	;# 
  4050  0E32                     	;# 
  4051  0E33                     	;# 
  4052  0E34                     	;# 
  4053  0E35                     	;# 
  4054  0E36                     	;# 
  4055  0E37                     	;# 
  4056  0E8F                     	;# 
  4057  0E90                     	;# 
  4058  0E91                     	;# 
  4059  0E92                     	;# 
  4060  0E93                     	;# 
  4061  0E94                     	;# 
  4062  0E95                     	;# 
  4063  0E96                     	;# 
  4064  0E97                     	;# 
  4065  0E9C                     	;# 
  4066  0E9D                     	;# 
  4067  0E9E                     	;# 
  4068  0EA1                     	;# 
  4069  0EA2                     	;# 
  4070  0EA3                     	;# 
  4071  0EA4                     	;# 
  4072  0EA5                     	;# 
  4073  0EA9                     	;# 
  4074  0EAA                     	;# 
  4075  0EAB                     	;# 
  4076  0EAC                     	;# 
  4077  0EB1                     	;# 
  4078  0EB2                     	;# 
  4079  0EB3                     	;# 
  4080  0EB8                     	;# 
  4081  0EB9                     	;# 
  4082  0EBA                     	;# 
  4083  0EBB                     	;# 
  4084  0EBC                     	;# 
  4085  0EBD                     	;# 
  4086  0EBE                     	;# 
  4087  0EC3                     	;# 
  4088  0EC5                     	;# 
  4089  0EC6                     	;# 
  4090  0EC7                     	;# 
  4091  0EC8                     	;# 
  4092  0EC9                     	;# 
  4093  0ECA                     	;# 
  4094  0ECB                     	;# 
  4095  0ECC                     	;# 
  4096  0F10                     	;# 
  4097  0F11                     	;# 
  4098  0F12                     	;# 
  4099  0F13                     	;# 
  4100  0F14                     	;# 
  4101  0F15                     	;# 
  4102  0F16                     	;# 
  4103  0F17                     	;# 
  4104  0F18                     	;# 
  4105  0F19                     	;# 
  4106  0F1A                     	;# 
  4107  0F1B                     	;# 
  4108  0F1C                     	;# 
  4109  0F1D                     	;# 
  4110  0F1E                     	;# 
  4111  0F1F                     	;# 
  4112  0F20                     	;# 
  4113  0F21                     	;# 
  4114  0F22                     	;# 
  4115  0F23                     	;# 
  4116  0F24                     	;# 
  4117  0F25                     	;# 
  4118  0F26                     	;# 
  4119  0F27                     	;# 
  4120  0F38                     	;# 
  4121  0F39                     	;# 
  4122  0F3A                     	;# 
  4123  0F3B                     	;# 
  4124  0F3C                     	;# 
  4125  0F3D                     	;# 
  4126  0F3E                     	;# 
  4127  0F3F                     	;# 
  4128  0F40                     	;# 
  4129  0F41                     	;# 
  4130  0F43                     	;# 
  4131  0F44                     	;# 
  4132  0F45                     	;# 
  4133  0F46                     	;# 
  4134  0F47                     	;# 
  4135  0F48                     	;# 
  4136  0F49                     	;# 
  4137  0F4A                     	;# 
  4138  0F4B                     	;# 
  4139  0F4C                     	;# 
  4140  0F4E                     	;# 
  4141  0F4F                     	;# 
  4142  0F50                     	;# 
  4143  0F51                     	;# 
  4144  0F52                     	;# 
  4145  0F53                     	;# 
  4146  0F54                     	;# 
  4147  0F55                     	;# 
  4148  0F56                     	;# 
  4149  0F57                     	;# 
  4150  0F65                     	;# 
  4151  0F68                     	;# 
  4152  0F69                     	;# 
  4153  0F6A                     	;# 
  4154  0F6B                     	;# 
  4155  0FE4                     	;# 
  4156  0FE5                     	;# 
  4157  0FE6                     	;# 
  4158  0FE7                     	;# 
  4159  0FE8                     	;# 
  4160  0FE9                     	;# 
  4161  0FEA                     	;# 
  4162  0FEB                     	;# 
  4163  0FED                     	;# 
  4164  0FEE                     	;# 
  4165  0FEF                     	;# 
  4166  0000                     	;# 
  4167  0001                     	;# 
  4168  0002                     	;# 
  4169  0003                     	;# 
  4170  0004                     	;# 
  4171  0005                     	;# 
  4172  0006                     	;# 
  4173  0007                     	;# 
  4174  0008                     	;# 
  4175  0009                     	;# 
  4176  000A                     	;# 
  4177  000B                     	;# 
  4178  000C                     	;# 
  4179  000D                     	;# 
  4180  000E                     	;# 
  4181  0010                     	;# 
  4182  0011                     	;# 
  4183  0012                     	;# 
  4184  0013                     	;# 
  4185  0016                     	;# 
  4186  0017                     	;# 
  4187  0018                     	;# 
  4188  001C                     	;# 
  4189  001C                     	;# 
  4190  001D                     	;# 
  4191  001D                     	;# 
  4192  001E                     	;# 
  4193  001F                     	;# 
  4194  008C                     	;# 
  4195  008C                     	;# 
  4196  008D                     	;# 
  4197  008E                     	;# 
  4198  008E                     	;# 
  4199  008F                     	;# 
  4200  0090                     	;# 
  4201  0090                     	;# 
  4202  0091                     	;# 
  4203  0093                     	;# 
  4204  0094                     	;# 
  4205  0095                     	;# 
  4206  0096                     	;# 
  4207  0097                     	;# 
  4208  0098                     	;# 
  4209  0099                     	;# 
  4210  009A                     	;# 
  4211  009B                     	;# 
  4212  009C                     	;# 
  4213  009D                     	;# 
  4214  009E                     	;# 
  4215  010C                     	;# 
  4216  010D                     	;# 
  4217  010E                     	;# 
  4218  010E                     	;# 
  4219  010F                     	;# 
  4220  0110                     	;# 
  4221  0110                     	;# 
  4222  0111                     	;# 
  4223  0112                     	;# 
  4224  0112                     	;# 
  4225  0113                     	;# 
  4226  0114                     	;# 
  4227  0114                     	;# 
  4228  0115                     	;# 
  4229  0116                     	;# 
  4230  0116                     	;# 
  4231  0117                     	;# 
  4232  0119                     	;# 
  4233  0119                     	;# 
  4234  0119                     	;# 
  4235  011A                     	;# 
  4236  011A                     	;# 
  4237  011A                     	;# 
  4238  011B                     	;# 
  4239  011B                     	;# 
  4240  011B                     	;# 
  4241  011B                     	;# 
  4242  011B                     	;# 
  4243  011C                     	;# 
  4244  011C                     	;# 
  4245  011C                     	;# 
  4246  011D                     	;# 
  4247  011D                     	;# 
  4248  011D                     	;# 
  4249  011E                     	;# 
  4250  011E                     	;# 
  4251  011E                     	;# 
  4252  011F                     	;# 
  4253  011F                     	;# 
  4254  011F                     	;# 
  4255  011F                     	;# 
  4256  011F                     	;# 
  4257  018C                     	;# 
  4258  018D                     	;# 
  4259  018E                     	;# 
  4260  018F                     	;# 
  4261  0190                     	;# 
  4262  0191                     	;# 
  4263  0192                     	;# 
  4264  0196                     	;# 
  4265  0197                     	;# 
  4266  0198                     	;# 
  4267  0199                     	;# 
  4268  019A                     	;# 
  4269  019B                     	;# 
  4270  019C                     	;# 
  4271  020C                     	;# 
  4272  020D                     	;# 
  4273  020E                     	;# 
  4274  020F                     	;# 
  4275  020F                     	;# 
  4276  0210                     	;# 
  4277  0210                     	;# 
  4278  0211                     	;# 
  4279  0211                     	;# 
  4280  0212                     	;# 
  4281  0213                     	;# 
  4282  0214                     	;# 
  4283  0215                     	;# 
  4284  0215                     	;# 
  4285  0216                     	;# 
  4286  0216                     	;# 
  4287  0217                     	;# 
  4288  0217                     	;# 
  4289  0218                     	;# 
  4290  0219                     	;# 
  4291  021A                     	;# 
  4292  021B                     	;# 
  4293  021B                     	;# 
  4294  021C                     	;# 
  4295  021C                     	;# 
  4296  021D                     	;# 
  4297  021D                     	;# 
  4298  021E                     	;# 
  4299  021F                     	;# 
  4300  028C                     	;# 
  4301  028C                     	;# 
  4302  028D                     	;# 
  4303  028D                     	;# 
  4304  028E                     	;# 
  4305  028F                     	;# 
  4306  0290                     	;# 
  4307  0290                     	;# 
  4308  0291                     	;# 
  4309  0292                     	;# 
  4310  0292                     	;# 
  4311  0293                     	;# 
  4312  0293                     	;# 
  4313  0294                     	;# 
  4314  0295                     	;# 
  4315  0296                     	;# 
  4316  0296                     	;# 
  4317  0297                     	;# 
  4318  0298                     	;# 
  4319  0298                     	;# 
  4320  0299                     	;# 
  4321  0299                     	;# 
  4322  029A                     	;# 
  4323  029B                     	;# 
  4324  029C                     	;# 
  4325  029C                     	;# 
  4326  029D                     	;# 
  4327  030C                     	;# 
  4328  030C                     	;# 
  4329  030D                     	;# 
  4330  030E                     	;# 
  4331  030F                     	;# 
  4332  0310                     	;# 
  4333  0310                     	;# 
  4334  0311                     	;# 
  4335  0312                     	;# 
  4336  0313                     	;# 
  4337  0314                     	;# 
  4338  0314                     	;# 
  4339  0315                     	;# 
  4340  0316                     	;# 
  4341  0317                     	;# 
  4342  0318                     	;# 
  4343  0318                     	;# 
  4344  0319                     	;# 
  4345  031A                     	;# 
  4346  031B                     	;# 
  4347  031C                     	;# 
  4348  031C                     	;# 
  4349  031D                     	;# 
  4350  031E                     	;# 
  4351  031F                     	;# 
  4352  038C                     	;# 
  4353  038D                     	;# 
  4354  038E                     	;# 
  4355  0390                     	;# 
  4356  0391                     	;# 
  4357  0392                     	;# 
  4358  040C                     	;# 
  4359  040D                     	;# 
  4360  040E                     	;# 
  4361  040F                     	;# 
  4362  0410                     	;# 
  4363  0411                     	;# 
  4364  0416                     	;# 
  4365  0416                     	;# 
  4366  0417                     	;# 
  4367  0418                     	;# 
  4368  0418                     	;# 
  4369  0419                     	;# 
  4370  041A                     	;# 
  4371  041A                     	;# 
  4372  041B                     	;# 
  4373  041C                     	;# 
  4374  041C                     	;# 
  4375  041D                     	;# 
  4376  041E                     	;# 
  4377  041F                     	;# 
  4378  048C                     	;# 
  4379  048C                     	;# 
  4380  048D                     	;# 
  4381  048E                     	;# 
  4382  048F                     	;# 
  4383  048F                     	;# 
  4384  0490                     	;# 
  4385  0491                     	;# 
  4386  0492                     	;# 
  4387  0492                     	;# 
  4388  0493                     	;# 
  4389  0494                     	;# 
  4390  0495                     	;# 
  4391  0495                     	;# 
  4392  0496                     	;# 
  4393  0497                     	;# 
  4394  0498                     	;# 
  4395  0499                     	;# 
  4396  049A                     	;# 
  4397  049B                     	;# 
  4398  049C                     	;# 
  4399  049D                     	;# 
  4400  050C                     	;# 
  4401  050C                     	;# 
  4402  050D                     	;# 
  4403  050E                     	;# 
  4404  050F                     	;# 
  4405  050F                     	;# 
  4406  0510                     	;# 
  4407  0511                     	;# 
  4408  0512                     	;# 
  4409  0512                     	;# 
  4410  0513                     	;# 
  4411  0514                     	;# 
  4412  0515                     	;# 
  4413  0515                     	;# 
  4414  0516                     	;# 
  4415  0517                     	;# 
  4416  0518                     	;# 
  4417  0519                     	;# 
  4418  051A                     	;# 
  4419  051B                     	;# 
  4420  051C                     	;# 
  4421  051D                     	;# 
  4422  058C                     	;# 
  4423  058C                     	;# 
  4424  058D                     	;# 
  4425  058E                     	;# 
  4426  058F                     	;# 
  4427  058F                     	;# 
  4428  0590                     	;# 
  4429  0591                     	;# 
  4430  0592                     	;# 
  4431  0593                     	;# 
  4432  060C                     	;# 
  4433  060D                     	;# 
  4434  060E                     	;# 
  4435  060F                     	;# 
  4436  0610                     	;# 
  4437  0611                     	;# 
  4438  0612                     	;# 
  4439  0613                     	;# 
  4440  0614                     	;# 
  4441  0616                     	;# 
  4442  0617                     	;# 
  4443  0618                     	;# 
  4444  0619                     	;# 
  4445  061A                     	;# 
  4446  061B                     	;# 
  4447  061C                     	;# 
  4448  061D                     	;# 
  4449  061E                     	;# 
  4450  068C                     	;# 
  4451  068D                     	;# 
  4452  068E                     	;# 
  4453  068F                     	;# 
  4454  0690                     	;# 
  4455  0691                     	;# 
  4456  0692                     	;# 
  4457  0693                     	;# 
  4458  0694                     	;# 
  4459  070C                     	;# 
  4460  070D                     	;# 
  4461  070E                     	;# 
  4462  070F                     	;# 
  4463  0710                     	;# 
  4464  0711                     	;# 
  4465  0712                     	;# 
  4466  0713                     	;# 
  4467  0714                     	;# 
  4468  0716                     	;# 
  4469  0717                     	;# 
  4470  0718                     	;# 
  4471  0719                     	;# 
  4472  071A                     	;# 
  4473  071B                     	;# 
  4474  071C                     	;# 
  4475  071D                     	;# 
  4476  071E                     	;# 
  4477  0796                     	;# 
  4478  0797                     	;# 
  4479  0798                     	;# 
  4480  0799                     	;# 
  4481  079A                     	;# 
  4482  079B                     	;# 
  4483  080C                     	;# 
  4484  080D                     	;# 
  4485  080E                     	;# 
  4486  080F                     	;# 
  4487  0810                     	;# 
  4488  0811                     	;# 
  4489  0812                     	;# 
  4490  0813                     	;# 
  4491  0814                     	;# 
  4492  081A                     	;# 
  4493  081B                     	;# 
  4494  081C                     	;# 
  4495  081D                     	;# 
  4496  081E                     	;# 
  4497  081F                     	;# 
  4498  088C                     	;# 
  4499  088D                     	;# 
  4500  088E                     	;# 
  4501  088F                     	;# 
  4502  0890                     	;# 
  4503  0891                     	;# 
  4504  0892                     	;# 
  4505  0893                     	;# 
  4506  0895                     	;# 
  4507  0896                     	;# 
  4508  0897                     	;# 
  4509  0898                     	;# 
  4510  0899                     	;# 
  4511  089A                     	;# 
  4512  089B                     	;# 
  4513  090C                     	;# 
  4514  090E                     	;# 
  4515  090F                     	;# 
  4516  091F                     	;# 
  4517  091F                     	;# 
  4518  098F                     	;# 
  4519  098F                     	;# 
  4520  0990                     	;# 
  4521  0991                     	;# 
  4522  0992                     	;# 
  4523  0993                     	;# 
  4524  0994                     	;# 
  4525  0995                     	;# 
  4526  0996                     	;# 
  4527  0997                     	;# 
  4528  0E0F                     	;# 
  4529  0E10                     	;# 
  4530  0E11                     	;# 
  4531  0E12                     	;# 
  4532  0E13                     	;# 
  4533  0E14                     	;# 
  4534  0E15                     	;# 
  4535  0E16                     	;# 
  4536  0E17                     	;# 
  4537  0E18                     	;# 
  4538  0E19                     	;# 
  4539  0E1A                     	;# 
  4540  0E1B                     	;# 
  4541  0E1C                     	;# 
  4542  0E1D                     	;# 
  4543  0E1E                     	;# 
  4544  0E1F                     	;# 
  4545  0E20                     	;# 
  4546  0E21                     	;# 
  4547  0E22                     	;# 
  4548  0E23                     	;# 
  4549  0E24                     	;# 
  4550  0E25                     	;# 
  4551  0E26                     	;# 
  4552  0E27                     	;# 
  4553  0E28                     	;# 
  4554  0E29                     	;# 
  4555  0E2A                     	;# 
  4556  0E2B                     	;# 
  4557  0E2C                     	;# 
  4558  0E2D                     	;# 
  4559  0E2E                     	;# 
  4560  0E2F                     	;# 
  4561  0E30                     	;# 
  4562  0E31                     	;# 
  4563  0E32                     	;# 
  4564  0E33                     	;# 
  4565  0E34                     	;# 
  4566  0E35                     	;# 
  4567  0E36                     	;# 
  4568  0E37                     	;# 
  4569  0E8F                     	;# 
  4570  0E90                     	;# 
  4571  0E91                     	;# 
  4572  0E92                     	;# 
  4573  0E93                     	;# 
  4574  0E94                     	;# 
  4575  0E95                     	;# 
  4576  0E96                     	;# 
  4577  0E97                     	;# 
  4578  0E9C                     	;# 
  4579  0E9D                     	;# 
  4580  0E9E                     	;# 
  4581  0EA1                     	;# 
  4582  0EA2                     	;# 
  4583  0EA3                     	;# 
  4584  0EA4                     	;# 
  4585  0EA5                     	;# 
  4586  0EA9                     	;# 
  4587  0EAA                     	;# 
  4588  0EAB                     	;# 
  4589  0EAC                     	;# 
  4590  0EB1                     	;# 
  4591  0EB2                     	;# 
  4592  0EB3                     	;# 
  4593  0EB8                     	;# 
  4594  0EB9                     	;# 
  4595  0EBA                     	;# 
  4596  0EBB                     	;# 
  4597  0EBC                     	;# 
  4598  0EBD                     	;# 
  4599  0EBE                     	;# 
  4600  0EC3                     	;# 
  4601  0EC5                     	;# 
  4602  0EC6                     	;# 
  4603  0EC7                     	;# 
  4604  0EC8                     	;# 
  4605  0EC9                     	;# 
  4606  0ECA                     	;# 
  4607  0ECB                     	;# 
  4608  0ECC                     	;# 
  4609  0F10                     	;# 
  4610  0F11                     	;# 
  4611  0F12                     	;# 
  4612  0F13                     	;# 
  4613  0F14                     	;# 
  4614  0F15                     	;# 
  4615  0F16                     	;# 
  4616  0F17                     	;# 
  4617  0F18                     	;# 
  4618  0F19                     	;# 
  4619  0F1A                     	;# 
  4620  0F1B                     	;# 
  4621  0F1C                     	;# 
  4622  0F1D                     	;# 
  4623  0F1E                     	;# 
  4624  0F1F                     	;# 
  4625  0F20                     	;# 
  4626  0F21                     	;# 
  4627  0F22                     	;# 
  4628  0F23                     	;# 
  4629  0F24                     	;# 
  4630  0F25                     	;# 
  4631  0F26                     	;# 
  4632  0F27                     	;# 
  4633  0F38                     	;# 
  4634  0F39                     	;# 
  4635  0F3A                     	;# 
  4636  0F3B                     	;# 
  4637  0F3C                     	;# 
  4638  0F3D                     	;# 
  4639  0F3E                     	;# 
  4640  0F3F                     	;# 
  4641  0F40                     	;# 
  4642  0F41                     	;# 
  4643  0F43                     	;# 
  4644  0F44                     	;# 
  4645  0F45                     	;# 
  4646  0F46                     	;# 
  4647  0F47                     	;# 
  4648  0F48                     	;# 
  4649  0F49                     	;# 
  4650  0F4A                     	;# 
  4651  0F4B                     	;# 
  4652  0F4C                     	;# 
  4653  0F4E                     	;# 
  4654  0F4F                     	;# 
  4655  0F50                     	;# 
  4656  0F51                     	;# 
  4657  0F52                     	;# 
  4658  0F53                     	;# 
  4659  0F54                     	;# 
  4660  0F55                     	;# 
  4661  0F56                     	;# 
  4662  0F57                     	;# 
  4663  0F65                     	;# 
  4664  0F68                     	;# 
  4665  0F69                     	;# 
  4666  0F6A                     	;# 
  4667  0F6B                     	;# 
  4668  0FE4                     	;# 
  4669  0FE5                     	;# 
  4670  0FE6                     	;# 
  4671  0FE7                     	;# 
  4672  0FE8                     	;# 
  4673  0FE9                     	;# 
  4674  0FEA                     	;# 
  4675  0FEB                     	;# 
  4676  0FED                     	;# 
  4677  0FEE                     	;# 
  4678  0FEF                     	;# 
  4679  0000                     	;# 
  4680  0001                     	;# 
  4681  0002                     	;# 
  4682  0003                     	;# 
  4683  0004                     	;# 
  4684  0005                     	;# 
  4685  0006                     	;# 
  4686  0007                     	;# 
  4687  0008                     	;# 
  4688  0009                     	;# 
  4689  000A                     	;# 
  4690  000B                     	;# 
  4691  000C                     	;# 
  4692  000D                     	;# 
  4693  000E                     	;# 
  4694  0010                     	;# 
  4695  0011                     	;# 
  4696  0012                     	;# 
  4697  0013                     	;# 
  4698  0016                     	;# 
  4699  0017                     	;# 
  4700  0018                     	;# 
  4701  001C                     	;# 
  4702  001C                     	;# 
  4703  001D                     	;# 
  4704  001D                     	;# 
  4705  001E                     	;# 
  4706  001F                     	;# 
  4707  008C                     	;# 
  4708  008C                     	;# 
  4709  008D                     	;# 
  4710  008E                     	;# 
  4711  008E                     	;# 
  4712  008F                     	;# 
  4713  0090                     	;# 
  4714  0090                     	;# 
  4715  0091                     	;# 
  4716  0093                     	;# 
  4717  0094                     	;# 
  4718  0095                     	;# 
  4719  0096                     	;# 
  4720  0097                     	;# 
  4721  0098                     	;# 
  4722  0099                     	;# 
  4723  009A                     	;# 
  4724  009B                     	;# 
  4725  009C                     	;# 
  4726  009D                     	;# 
  4727  009E                     	;# 
  4728  010C                     	;# 
  4729  010D                     	;# 
  4730  010E                     	;# 
  4731  010E                     	;# 
  4732  010F                     	;# 
  4733  0110                     	;# 
  4734  0110                     	;# 
  4735  0111                     	;# 
  4736  0112                     	;# 
  4737  0112                     	;# 
  4738  0113                     	;# 
  4739  0114                     	;# 
  4740  0114                     	;# 
  4741  0115                     	;# 
  4742  0116                     	;# 
  4743  0116                     	;# 
  4744  0117                     	;# 
  4745  0119                     	;# 
  4746  0119                     	;# 
  4747  0119                     	;# 
  4748  011A                     	;# 
  4749  011A                     	;# 
  4750  011A                     	;# 
  4751  011B                     	;# 
  4752  011B                     	;# 
  4753  011B                     	;# 
  4754  011B                     	;# 
  4755  011B                     	;# 
  4756  011C                     	;# 
  4757  011C                     	;# 
  4758  011C                     	;# 
  4759  011D                     	;# 
  4760  011D                     	;# 
  4761  011D                     	;# 
  4762  011E                     	;# 
  4763  011E                     	;# 
  4764  011E                     	;# 
  4765  011F                     	;# 
  4766  011F                     	;# 
  4767  011F                     	;# 
  4768  011F                     	;# 
  4769  011F                     	;# 
  4770  018C                     	;# 
  4771  018D                     	;# 
  4772  018E                     	;# 
  4773  018F                     	;# 
  4774  0190                     	;# 
  4775  0191                     	;# 
  4776  0192                     	;# 
  4777  0196                     	;# 
  4778  0197                     	;# 
  4779  0198                     	;# 
  4780  0199                     	;# 
  4781  019A                     	;# 
  4782  019B                     	;# 
  4783  019C                     	;# 
  4784  020C                     	;# 
  4785  020D                     	;# 
  4786  020E                     	;# 
  4787  020F                     	;# 
  4788  020F                     	;# 
  4789  0210                     	;# 
  4790  0210                     	;# 
  4791  0211                     	;# 
  4792  0211                     	;# 
  4793  0212                     	;# 
  4794  0213                     	;# 
  4795  0214                     	;# 
  4796  0215                     	;# 
  4797  0215                     	;# 
  4798  0216                     	;# 
  4799  0216                     	;# 
  4800  0217                     	;# 
  4801  0217                     	;# 
  4802  0218                     	;# 
  4803  0219                     	;# 
  4804  021A                     	;# 
  4805  021B                     	;# 
  4806  021B                     	;# 
  4807  021C                     	;# 
  4808  021C                     	;# 
  4809  021D                     	;# 
  4810  021D                     	;# 
  4811  021E                     	;# 
  4812  021F                     	;# 
  4813  028C                     	;# 
  4814  028C                     	;# 
  4815  028D                     	;# 
  4816  028D                     	;# 
  4817  028E                     	;# 
  4818  028F                     	;# 
  4819  0290                     	;# 
  4820  0290                     	;# 
  4821  0291                     	;# 
  4822  0292                     	;# 
  4823  0292                     	;# 
  4824  0293                     	;# 
  4825  0293                     	;# 
  4826  0294                     	;# 
  4827  0295                     	;# 
  4828  0296                     	;# 
  4829  0296                     	;# 
  4830  0297                     	;# 
  4831  0298                     	;# 
  4832  0298                     	;# 
  4833  0299                     	;# 
  4834  0299                     	;# 
  4835  029A                     	;# 
  4836  029B                     	;# 
  4837  029C                     	;# 
  4838  029C                     	;# 
  4839  029D                     	;# 
  4840  030C                     	;# 
  4841  030C                     	;# 
  4842  030D                     	;# 
  4843  030E                     	;# 
  4844  030F                     	;# 
  4845  0310                     	;# 
  4846  0310                     	;# 
  4847  0311                     	;# 
  4848  0312                     	;# 
  4849  0313                     	;# 
  4850  0314                     	;# 
  4851  0314                     	;# 
  4852  0315                     	;# 
  4853  0316                     	;# 
  4854  0317                     	;# 
  4855  0318                     	;# 
  4856  0318                     	;# 
  4857  0319                     	;# 
  4858  031A                     	;# 
  4859  031B                     	;# 
  4860  031C                     	;# 
  4861  031C                     	;# 
  4862  031D                     	;# 
  4863  031E                     	;# 
  4864  031F                     	;# 
  4865  038C                     	;# 
  4866  038D                     	;# 
  4867  038E                     	;# 
  4868  0390                     	;# 
  4869  0391                     	;# 
  4870  0392                     	;# 
  4871  040C                     	;# 
  4872  040D                     	;# 
  4873  040E                     	;# 
  4874  040F                     	;# 
  4875  0410                     	;# 
  4876  0411                     	;# 
  4877  0416                     	;# 
  4878  0416                     	;# 
  4879  0417                     	;# 
  4880  0418                     	;# 
  4881  0418                     	;# 
  4882  0419                     	;# 
  4883  041A                     	;# 
  4884  041A                     	;# 
  4885  041B                     	;# 
  4886  041C                     	;# 
  4887  041C                     	;# 
  4888  041D                     	;# 
  4889  041E                     	;# 
  4890  041F                     	;# 
  4891  048C                     	;# 
  4892  048C                     	;# 
  4893  048D                     	;# 
  4894  048E                     	;# 
  4895  048F                     	;# 
  4896  048F                     	;# 
  4897  0490                     	;# 
  4898  0491                     	;# 
  4899  0492                     	;# 
  4900  0492                     	;# 
  4901  0493                     	;# 
  4902  0494                     	;# 
  4903  0495                     	;# 
  4904  0495                     	;# 
  4905  0496                     	;# 
  4906  0497                     	;# 
  4907  0498                     	;# 
  4908  0499                     	;# 
  4909  049A                     	;# 
  4910  049B                     	;# 
  4911  049C                     	;# 
  4912  049D                     	;# 
  4913  050C                     	;# 
  4914  050C                     	;# 
  4915  050D                     	;# 
  4916  050E                     	;# 
  4917  050F                     	;# 
  4918  050F                     	;# 
  4919  0510                     	;# 
  4920  0511                     	;# 
  4921  0512                     	;# 
  4922  0512                     	;# 
  4923  0513                     	;# 
  4924  0514                     	;# 
  4925  0515                     	;# 
  4926  0515                     	;# 
  4927  0516                     	;# 
  4928  0517                     	;# 
  4929  0518                     	;# 
  4930  0519                     	;# 
  4931  051A                     	;# 
  4932  051B                     	;# 
  4933  051C                     	;# 
  4934  051D                     	;# 
  4935  058C                     	;# 
  4936  058C                     	;# 
  4937  058D                     	;# 
  4938  058E                     	;# 
  4939  058F                     	;# 
  4940  058F                     	;# 
  4941  0590                     	;# 
  4942  0591                     	;# 
  4943  0592                     	;# 
  4944  0593                     	;# 
  4945  060C                     	;# 
  4946  060D                     	;# 
  4947  060E                     	;# 
  4948  060F                     	;# 
  4949  0610                     	;# 
  4950  0611                     	;# 
  4951  0612                     	;# 
  4952  0613                     	;# 
  4953  0614                     	;# 
  4954  0616                     	;# 
  4955  0617                     	;# 
  4956  0618                     	;# 
  4957  0619                     	;# 
  4958  061A                     	;# 
  4959  061B                     	;# 
  4960  061C                     	;# 
  4961  061D                     	;# 
  4962  061E                     	;# 
  4963  068C                     	;# 
  4964  068D                     	;# 
  4965  068E                     	;# 
  4966  068F                     	;# 
  4967  0690                     	;# 
  4968  0691                     	;# 
  4969  0692                     	;# 
  4970  0693                     	;# 
  4971  0694                     	;# 
  4972  070C                     	;# 
  4973  070D                     	;# 
  4974  070E                     	;# 
  4975  070F                     	;# 
  4976  0710                     	;# 
  4977  0711                     	;# 
  4978  0712                     	;# 
  4979  0713                     	;# 
  4980  0714                     	;# 
  4981  0716                     	;# 
  4982  0717                     	;# 
  4983  0718                     	;# 
  4984  0719                     	;# 
  4985  071A                     	;# 
  4986  071B                     	;# 
  4987  071C                     	;# 
  4988  071D                     	;# 
  4989  071E                     	;# 
  4990  0796                     	;# 
  4991  0797                     	;# 
  4992  0798                     	;# 
  4993  0799                     	;# 
  4994  079A                     	;# 
  4995  079B                     	;# 
  4996  080C                     	;# 
  4997  080D                     	;# 
  4998  080E                     	;# 
  4999  080F                     	;# 
  5000  0810                     	;# 
  5001  0811                     	;# 
  5002  0812                     	;# 
  5003  0813                     	;# 
  5004  0814                     	;# 
  5005  081A                     	;# 
  5006  081B                     	;# 
  5007  081C                     	;# 
  5008  081D                     	;# 
  5009  081E                     	;# 
  5010  081F                     	;# 
  5011  088C                     	;# 
  5012  088D                     	;# 
  5013  088E                     	;# 
  5014  088F                     	;# 
  5015  0890                     	;# 
  5016  0891                     	;# 
  5017  0892                     	;# 
  5018  0893                     	;# 
  5019  0895                     	;# 
  5020  0896                     	;# 
  5021  0897                     	;# 
  5022  0898                     	;# 
  5023  0899                     	;# 
  5024  089A                     	;# 
  5025  089B                     	;# 
  5026  090C                     	;# 
  5027  090E                     	;# 
  5028  090F                     	;# 
  5029  091F                     	;# 
  5030  091F                     	;# 
  5031  098F                     	;# 
  5032  098F                     	;# 
  5033  0990                     	;# 
  5034  0991                     	;# 
  5035  0992                     	;# 
  5036  0993                     	;# 
  5037  0994                     	;# 
  5038  0995                     	;# 
  5039  0996                     	;# 
  5040  0997                     	;# 
  5041  0E0F                     	;# 
  5042  0E10                     	;# 
  5043  0E11                     	;# 
  5044  0E12                     	;# 
  5045  0E13                     	;# 
  5046  0E14                     	;# 
  5047  0E15                     	;# 
  5048  0E16                     	;# 
  5049  0E17                     	;# 
  5050  0E18                     	;# 
  5051  0E19                     	;# 
  5052  0E1A                     	;# 
  5053  0E1B                     	;# 
  5054  0E1C                     	;# 
  5055  0E1D                     	;# 
  5056  0E1E                     	;# 
  5057  0E1F                     	;# 
  5058  0E20                     	;# 
  5059  0E21                     	;# 
  5060  0E22                     	;# 
  5061  0E23                     	;# 
  5062  0E24                     	;# 
  5063  0E25                     	;# 
  5064  0E26                     	;# 
  5065  0E27                     	;# 
  5066  0E28                     	;# 
  5067  0E29                     	;# 
  5068  0E2A                     	;# 
  5069  0E2B                     	;# 
  5070  0E2C                     	;# 
  5071  0E2D                     	;# 
  5072  0E2E                     	;# 
  5073  0E2F                     	;# 
  5074  0E30                     	;# 
  5075  0E31                     	;# 
  5076  0E32                     	;# 
  5077  0E33                     	;# 
  5078  0E34                     	;# 
  5079  0E35                     	;# 
  5080  0E36                     	;# 
  5081  0E37                     	;# 
  5082  0E8F                     	;# 
  5083  0E90                     	;# 
  5084  0E91                     	;# 
  5085  0E92                     	;# 
  5086  0E93                     	;# 
  5087  0E94                     	;# 
  5088  0E95                     	;# 
  5089  0E96                     	;# 
  5090  0E97                     	;# 
  5091  0E9C                     	;# 
  5092  0E9D                     	;# 
  5093  0E9E                     	;# 
  5094  0EA1                     	;# 
  5095  0EA2                     	;# 
  5096  0EA3                     	;# 
  5097  0EA4                     	;# 
  5098  0EA5                     	;# 
  5099  0EA9                     	;# 
  5100  0EAA                     	;# 
  5101  0EAB                     	;# 
  5102  0EAC                     	;# 
  5103  0EB1                     	;# 
  5104  0EB2                     	;# 
  5105  0EB3                     	;# 
  5106  0EB8                     	;# 
  5107  0EB9                     	;# 
  5108  0EBA                     	;# 
  5109  0EBB                     	;# 
  5110  0EBC                     	;# 
  5111  0EBD                     	;# 
  5112  0EBE                     	;# 
  5113  0EC3                     	;# 
  5114  0EC5                     	;# 
  5115  0EC6                     	;# 
  5116  0EC7                     	;# 
  5117  0EC8                     	;# 
  5118  0EC9                     	;# 
  5119  0ECA                     	;# 
  5120  0ECB                     	;# 
  5121  0ECC                     	;# 
  5122  0F10                     	;# 
  5123  0F11                     	;# 
  5124  0F12                     	;# 
  5125  0F13                     	;# 
  5126  0F14                     	;# 
  5127  0F15                     	;# 
  5128  0F16                     	;# 
  5129  0F17                     	;# 
  5130  0F18                     	;# 
  5131  0F19                     	;# 
  5132  0F1A                     	;# 
  5133  0F1B                     	;# 
  5134  0F1C                     	;# 
  5135  0F1D                     	;# 
  5136  0F1E                     	;# 
  5137  0F1F                     	;# 
  5138  0F20                     	;# 
  5139  0F21                     	;# 
  5140  0F22                     	;# 
  5141  0F23                     	;# 
  5142  0F24                     	;# 
  5143  0F25                     	;# 
  5144  0F26                     	;# 
  5145  0F27                     	;# 
  5146  0F38                     	;# 
  5147  0F39                     	;# 
  5148  0F3A                     	;# 
  5149  0F3B                     	;# 
  5150  0F3C                     	;# 
  5151  0F3D                     	;# 
  5152  0F3E                     	;# 
  5153  0F3F                     	;# 
  5154  0F40                     	;# 
  5155  0F41                     	;# 
  5156  0F43                     	;# 
  5157  0F44                     	;# 
  5158  0F45                     	;# 
  5159  0F46                     	;# 
  5160  0F47                     	;# 
  5161  0F48                     	;# 
  5162  0F49                     	;# 
  5163  0F4A                     	;# 
  5164  0F4B                     	;# 
  5165  0F4C                     	;# 
  5166  0F4E                     	;# 
  5167  0F4F                     	;# 
  5168  0F50                     	;# 
  5169  0F51                     	;# 
  5170  0F52                     	;# 
  5171  0F53                     	;# 
  5172  0F54                     	;# 
  5173  0F55                     	;# 
  5174  0F56                     	;# 
  5175  0F57                     	;# 
  5176  0F65                     	;# 
  5177  0F68                     	;# 
  5178  0F69                     	;# 
  5179  0F6A                     	;# 
  5180  0F6B                     	;# 
  5181  0FE4                     	;# 
  5182  0FE5                     	;# 
  5183  0FE6                     	;# 
  5184  0FE7                     	;# 
  5185  0FE8                     	;# 
  5186  0FE9                     	;# 
  5187  0FEA                     	;# 
  5188  0FEB                     	;# 
  5189  0FED                     	;# 
  5190  0FEE                     	;# 
  5191  0FEF                     	;_samples
  5192                           
  5193                           	psect	idataBANK1
  5194  1681                     __pidataBANK1:	
  5195                           
  5196                           ;initializer for _lowRangeSet
  5197  1681  34EE               	retlw	238
  5198  1682  3402               	retlw	2
  5199  1683  3400               	retlw	0
  5200  1684  3400               	retlw	0
  5201                           
  5202                           ;initializer for _setpoint
  5203  1685  34CA               	retlw	202
  5204  1686  3408               	retlw	8
  5205  1687  340B               	retlw	11
  5206  1688  3402               	retlw	2
  5207                           
  5208                           ;initializer for _Kd
  5209  1689  3401               	retlw	1
  5210  168A  3400               	retlw	0
  5211                           
  5212                           ;initializer for _Ki
  5213  168B  3401               	retlw	1
  5214  168C  3400               	retlw	0
  5215                           
  5216                           ;initializer for _Kp
  5217  168D  3404               	retlw	4
  5218  168E  3400               	retlw	0
  5219                           
  5220                           ;initializer for _pidMaxOutput
  5221  168F  34FF               	retlw	255
  5222  1690  3407               	retlw	7
  5223                           
  5224                           ;initializer for _loop
  5225  1691  3440               	retlw	64
  5226                           
  5227                           	psect	idataBANK3
  5228  1723                     __pidataBANK3:	
  5229                           
  5230                           ;initializer for ___cgram
  5231  1723  340C               	retlw	12
  5232  1724  3412               	retlw	18
  5233  1725  3412               	retlw	18
  5234  1726  340C               	retlw	12
  5235  1727  3400               	retlw	0
  5236  1728  3400               	retlw	0
  5237  1729  3400               	retlw	0
  5238  172A  3400               	retlw	0
  5239  172B  3408               	retlw	8
  5240  172C  3404               	retlw	4
  5241  172D  3402               	retlw	2
  5242  172E  341F               	retlw	31
  5243  172F  3402               	retlw	2
  5244  1730  3404               	retlw	4
  5245  1731  3408               	retlw	8
  5246  1732  3400               	retlw	0
  5247                           
  5248                           ;initializer for _channels
  5249  1733  3401               	retlw	1
  5250  1734  3400               	retlw	0
  5251  1735  3403               	retlw	3
  5252  1736  3400               	retlw	0
  5253                           
  5254                           ;initializer for _desc
  5255  1737  3470               	retlw	low (STR_1| (0+32768))
  5256  1738  3490               	retlw	high (STR_1| (0+32768))
  5257  1739  347B               	retlw	low (STR_2| (0+32768))
  5258  173A  3490               	retlw	high (STR_2| (0+32768))
  5259                           
  5260                           ;initializer for _highRangeSet
  5261  173B  34BE               	retlw	190
  5262  173C  340A               	retlw	10
  5263  173D  34FF               	retlw	255
  5264  173E  3403               	retlw	3
  5265                           
  5266                           	psect	stringtext
  5267  1000                     __pstringtext:	
  5268  1000                     log@coeff:	
  5269  1000  3400               	retlw	0
  5270  1001  3400               	retlw	0
  5271  1002  3400               	retlw	0
  5272  1003  3400               	retlw	0
  5273  1004  3480               	retlw	128
  5274  1005  343F               	retlw	63
  5275  1006  34F0               	retlw	240
  5276  1007  34FF               	retlw	255
  5277  1008  34BE               	retlw	190
  5278  1009  34E2               	retlw	226
  5279  100A  34A9               	retlw	169
  5280  100B  343E               	retlw	62
  5281  100C  3483               	retlw	131
  5282  100D  3476               	retlw	118
  5283  100E  34BE               	retlw	190
  5284  100F  34AE               	retlw	174
  5285  1010  342B               	retlw	43
  5286  1011  343E               	retlw	62
  5287  1012  343C               	retlw	60
  5288  1013  34C3               	retlw	195
  5289  1014  34BD               	retlw	189
  5290  1015  34D2               	retlw	210
  5291  1016  3413               	retlw	19
  5292  1017  343D               	retlw	61
  5293  1018  3478               	retlw	120
  5294  1019  34D3               	retlw	211
  5295  101A  34BB               	retlw	187
  5296  101B                     __end_oflog@coeff:	
  5297  0016                     _LATA	set	22
  5298  0017                     _LATB	set	23
  5299  0018                     _LATC	set	24
  5300  0011                     _TRISA	set	17
  5301  0012                     _TRISB	set	18
  5302  0013                     _TRISC	set	19
  5303  005F                     _GIE	set	95
  5304  00C2                     _LATC2	set	194
  5305  0060                     _RA0	set	96
  5306  0062                     _RA2	set	98
  5307  0066                     _RA6	set	102
  5308  0067                     _RA7	set	103
  5309  0068                     _RB0	set	104
  5310  0069                     _RB1	set	105
  5311  006A                     _RB2	set	106
  5312  0070                     _RC0	set	112
  5313  0071                     _RC1	set	113
  5314  009D                     _ADACQ	set	157
  5315  0099                     _ADACT	set	153
  5316  009B                     _ADCAP	set	155
  5317  0098                     _ADCLK	set	152
  5318  0093                     _ADCON0	set	147
  5319  0093                     _ADCON0bits	set	147
  5320  0094                     _ADCON1	set	148
  5321  0095                     _ADCON2	set	149
  5322  0096                     _ADCON3	set	150
  5323  009E                     _ADPCH	set	158
  5324  009C                     _ADPRE	set	156
  5325  009A                     _ADREF	set	154
  5326  008D                     _ADRESH	set	141
  5327  008C                     _ADRESL	set	140
  5328  0097                     _ADSTAT	set	151
  5329  010F                     _ADLTHH	set	271
  5330  010E                     _ADLTHL	set	270
  5331  010D                     _ADRPT	set	269
  5332  0113                     _ADSTPTH	set	275
  5333  0112                     _ADSTPTL	set	274
  5334  0111                     _ADUTHH	set	273
  5335  0110                     _ADUTHL	set	272
  5336  021F                     _CCPTMRS1bits	set	543
  5337  0290                     _T2CLKCON	set	656
  5338  028E                     _T2CON	set	654
  5339  028E                     _T2CONbits	set	654
  5340  028F                     _T2HLT	set	655
  5341  028D                     _T2PR	set	653
  5342  0291                     _T2RST	set	657
  5343  028C                     _T2TMR	set	652
  5344  0392                     _PWM7CON	set	914
  5345  0391                     _PWM7DCH	set	913
  5346  0390                     _PWM7DCL	set	912
  5347  0716                     _PIE0bits	set	1814
  5348  0710                     _PIR4bits	set	1808
  5349  088D                     _OSCCON1	set	2189
  5350  088F                     _OSCCON3	set	2191
  5351  0891                     _OSCEN	set	2193
  5352  0893                     _OSCFRQ	set	2195
  5353  0892                     _OSCTUNE	set	2194
  5354  090C                     _FVRCON	set	2316
  5355  0E8F                     _PPSLOCK	set	3727
  5356  0E8F                     _PPSLOCKbits	set	3727
  5357  0F38                     _ANSELA	set	3896
  5358  0F43                     _ANSELB	set	3907
  5359  0F4E                     _ANSELC	set	3918
  5360  0F23                     _RC3PPS	set	3875
  5361  0F39                     _WPUA	set	3897
  5362  0F44                     _WPUB	set	3908
  5363  0F4F                     _WPUC	set	3919
  5364  0F65                     _WPUE	set	3941
  5365  101B                     STR_8:	
  5366  101B  3441               	retlw	65	;'A'
  5367  101C  346C               	retlw	108	;'l'
  5368  101D  3474               	retlw	116	;'t'
  5369  101E  3465               	retlw	101	;'e'
  5370  101F  3472               	retlw	114	;'r'
  5371  1020  3420               	retlw	32	;' '
  5372  1021  3477               	retlw	119	;'w'
  5373  1022  3469               	retlw	105	;'i'
  5374  1023  3474               	retlw	116	;'t'
  5375  1024  3468               	retlw	104	;'h'
  5376  1025  3420               	retlw	32	;' '
  5377  1026  3455               	retlw	85	;'U'
  5378  1027  3470               	retlw	112	;'p'
  5379  1028  342F               	retlw	47	;'/'
  5380  1029  3444               	retlw	68	;'D'
  5381  102A  346E               	retlw	110	;'n'
  5382  102B  3400               	retlw	0
  5383  102C                     STR_9:	
  5384  102C  3445               	retlw	69	;'E'
  5385  102D  346E               	retlw	110	;'n'
  5386  102E  3474               	retlw	116	;'t'
  5387  102F  3465               	retlw	101	;'e'
  5388  1030  3472               	retlw	114	;'r'
  5389  1031  3420               	retlw	32	;' '
  5390  1032  344B               	retlw	75	;'K'
  5391  1033  3465               	retlw	101	;'e'
  5392  1034  3479               	retlw	121	;'y'
  5393  1035  3420               	retlw	32	;' '
  5394  1036  3474               	retlw	116	;'t'
  5395  1037  346F               	retlw	111	;'o'
  5396  1038  3420               	retlw	32	;' '
  5397  1039  3453               	retlw	83	;'S'
  5398  103A  3465               	retlw	101	;'e'
  5399  103B  3474               	retlw	116	;'t'
  5400  103C  3400               	retlw	0
  5401  103D                     STR_5:	
  5402  103D  3420               	retlw	32	;' '
  5403  103E  3420               	retlw	32	;' '
  5404  103F  3420               	retlw	32	;' '
  5405  1040  3447               	retlw	71	;'G'
  5406  1041  346F               	retlw	111	;'o'
  5407  1042  346F               	retlw	111	;'o'
  5408  1043  3464               	retlw	100	;'d'
  5409  1044  342D               	retlw	45	;'-'
  5410  1045  3442               	retlw	66	;'B'
  5411  1046  3479               	retlw	121	;'y'
  5412  1047  3465               	retlw	101	;'e'
  5413  1048  3421               	retlw	33	;'!'
  5414  1049  3421               	retlw	33	;'!'
  5415  104A  3420               	retlw	32	;' '
  5416  104B  3420               	retlw	32	;' '
  5417  104C  3420               	retlw	32	;' '
  5418  104D  3400               	retlw	0
  5419  104E                     STR_4:	
  5420  104E  3445               	retlw	69	;'E'
  5421  104F  346E               	retlw	110	;'n'
  5422  1050  3474               	retlw	116	;'t'
  5423  1051  3465               	retlw	101	;'e'
  5424  1052  3472               	retlw	114	;'r'
  5425  1053  3420               	retlw	32	;' '
  5426  1054  3474               	retlw	116	;'t'
  5427  1055  346F               	retlw	111	;'o'
  5428  1056  3420               	retlw	32	;' '
  5429  1057  3453               	retlw	83	;'S'
  5430  1058  3465               	retlw	101	;'e'
  5431  1059  346C               	retlw	108	;'l'
  5432  105A  3465               	retlw	101	;'e'
  5433  105B  3463               	retlw	99	;'c'
  5434  105C  3474               	retlw	116	;'t'
  5435  105D  3420               	retlw	32	;' '
  5436  105E  3400               	retlw	0
  5437  105F                     STR_3:	
  5438  105F  3455               	retlw	85	;'U'
  5439  1060  3470               	retlw	112	;'p'
  5440  1061  342F               	retlw	47	;'/'
  5441  1062  3444               	retlw	68	;'D'
  5442  1063  346F               	retlw	111	;'o'
  5443  1064  3477               	retlw	119	;'w'
  5444  1065  346E               	retlw	110	;'n'
  5445  1066  3420               	retlw	32	;' '
  5446  1067  3474               	retlw	116	;'t'
  5447  1068  346F               	retlw	111	;'o'
  5448  1069  3420               	retlw	32	;' '
  5449  106A  3441               	retlw	65	;'A'
  5450  106B  346C               	retlw	108	;'l'
  5451  106C  3474               	retlw	116	;'t'
  5452  106D  3465               	retlw	101	;'e'
  5453  106E  3472               	retlw	114	;'r'
  5454  106F  3400               	retlw	0
  5455  1070                     STR_1:	
  5456  1070  3420               	retlw	32	;' '
  5457  1071  3450               	retlw	80	;'P'
  5458  1072  3469               	retlw	105	;'i'
  5459  1073  3474               	retlw	116	;'t'
  5460  1074  3420               	retlw	32	;' '
  5461  1075  3454               	retlw	84	;'T'
  5462  1076  3465               	retlw	101	;'e'
  5463  1077  346D               	retlw	109	;'m'
  5464  1078  3470               	retlw	112	;'p'
  5465  1079  343A               	retlw	58	;':'
  5466  107A  3400               	retlw	0
  5467  107B                     STR_2:	
  5468  107B  3442               	retlw	66	;'B'
  5469  107C  3461               	retlw	97	;'a'
  5470  107D  3463               	retlw	99	;'c'
  5471  107E  346B               	retlw	107	;'k'
  5472  107F  344C               	retlw	76	;'L'
  5473  1080  3469               	retlw	105	;'i'
  5474  1081  3467               	retlw	103	;'g'
  5475  1082  3468               	retlw	104	;'h'
  5476  1083  3474               	retlw	116	;'t'
  5477  1084  343A               	retlw	58	;':'
  5478  1085  3400               	retlw	0
  5479  1086                     STR_7:	
  5480  1086  344F               	retlw	79	;'O'
  5481  1087  3475               	retlw	117	;'u'
  5482  1088  3474               	retlw	116	;'t'
  5483  1089  3470               	retlw	112	;'p'
  5484  108A  3475               	retlw	117	;'u'
  5485  108B  3474               	retlw	116	;'t'
  5486  108C  343A               	retlw	58	;':'
  5487  108D  3400               	retlw	0
  5488  108E                     STR_6:	
  5489  108E  3450               	retlw	80	;'P'
  5490  108F  3469               	retlw	105	;'i'
  5491  1090  3474               	retlw	116	;'t'
  5492  1091  343A               	retlw	58	;':'
  5493  1092  3400               	retlw	0
  5494                           
  5495                           ; #config settings
  5496  0000                     
  5497                           	psect	cinit
  5498  07B7                     start_initialization:	
  5499  07B7                     __initialization:		;BIGRAM
  5500                           
  5501                           ; Initialize objects allocated to BANK1
  5502  07B7  3081               	movlw	low __pidataBANK1
  5503  07B8  0084               	movwf	4
  5504  07B9  3096               	movlw	(high __pidataBANK1)| (0+128)
  5505  07BA  0085               	movwf	5
  5506  07BB  30DE               	movlw	low __pdataBANK1
  5507  07BC  0086               	movwf	6
  5508  07BD  3000               	movlw	high __pdataBANK1
  5509  07BE  0087               	movwf	7
  5510  07BF  3000               	movlw	0
  5511  07C0  00FF               	movwf	btemp+1
  5512  07C1  3011               	movlw	17
  5513  07C2  3196  2659  3187   	fcall	init_ram
  5514                           
  5515                           ; Initialize objects allocated to BANK3
  5516  07C5  3023               	movlw	low __pidataBANK3
  5517  07C6  0084               	movwf	4
  5518  07C7  3097               	movlw	(high __pidataBANK3)| (0+128)
  5519  07C8  0085               	movwf	5
  5520  07C9  30A0               	movlw	low __pdataBANK3
  5521  07CA  0086               	movwf	6
  5522  07CB  3001               	movlw	high __pdataBANK3
  5523  07CC  0087               	movwf	7
  5524  07CD  3000               	movlw	0
  5525  07CE  00FF               	movwf	btemp+1
  5526  07CF  301C               	movlw	28
  5527  07D0  3196  2659  3187   	fcall	init_ram
  5528                           
  5529                           ; Clear objects allocated to BIGRAM
  5530  07D3  3050               	movlw	low (0+9040)
  5531  07D4  0084               	movwf	4
  5532  07D5  3023               	movlw	high (0+9040)
  5533  07D6  0085               	movwf	5
  5534  07D7  30A0               	movlw	160
  5535  07D8  00FE               	movwf	btemp
  5536  07D9  3000               	movlw	0
  5537  07DA  00FF               	movwf	btemp+1
  5538  07DB  3196  264D  3187   	fcall	clear_ram0
  5539                           
  5540                           ; Clear objects allocated to BANK1
  5541  07DE  30A0               	movlw	low __pbssBANK1
  5542  07DF  0084               	movwf	4
  5543  07E0  3000               	movlw	high __pbssBANK1
  5544  07E1  0085               	movwf	5
  5545  07E2  3025               	movlw	37
  5546  07E3  00FE               	movwf	btemp
  5547  07E4  3000               	movlw	0
  5548  07E5  00FF               	movwf	btemp+1
  5549  07E6  3196  264D  3187   	fcall	clear_ram0
  5550                           
  5551                           ; Clear objects allocated to BANK3
  5552  07E9  0023               	movlb	3	; select bank3
  5553  07EA  01BC               	clrf	__pbssBANK3& (0+127)
  5554  07EB  01BD               	clrf	(__pbssBANK3+1)& (0+127)
  5555  07EC  01BE               	clrf	(__pbssBANK3+2)& (0+127)
  5556  07ED  01BF               	clrf	(__pbssBANK3+3)& (0+127)
  5557  07EE  01C0               	clrf	(__pbssBANK3+4)& (0+127)
  5558  07EF  01C1               	clrf	(__pbssBANK3+5)& (0+127)
  5559  07F0  01C2               	clrf	(__pbssBANK3+6)& (0+127)
  5560  07F1  01C3               	clrf	(__pbssBANK3+7)& (0+127)
  5561  07F2  01C4               	clrf	(__pbssBANK3+8)& (0+127)
  5562                           
  5563                           ; Clear objects allocated to BANK4
  5564  07F3  3020               	movlw	low __pbssBANK4
  5565  07F4  0084               	movwf	4
  5566  07F5  3002               	movlw	high __pbssBANK4
  5567  07F6  0085               	movwf	5
  5568  07F7  3050               	movlw	80
  5569  07F8  00FE               	movwf	btemp
  5570  07F9  3000               	movlw	0
  5571  07FA  00FF               	movwf	btemp+1
  5572  07FB  3196  264D         	fcall	clear_ram0
  5573  07FD                     end_of_initialization:	
  5574                           ;End of C runtime variable initialization code
  5575                           
  5576  07FD                     __end_of__initialization:	
  5577  07FD  0020               	movlb	0
  5578  07FE  3185  2D3A         	ljmp	_main	;jump to C main() function
  5579                           
  5580                           	psect	bssBANK1
  5581  00A0                     __pbssBANK1:	
  5582  00A0                     _totals:	
  5583  00A0                     	ds	8
  5584  00A8                     _D_PrevError:	
  5585  00A8                     	ds	2
  5586  00AA                     _Result:	
  5587  00AA                     	ds	2
  5588  00AC                     _derivativeValue:	
  5589  00AC                     	ds	2
  5590  00AE                     _errno:	
  5591  00AE                     	ds	2
  5592  00B0                     _error:	
  5593  00B0                     	ds	2
  5594  00B2                     _errorValue:	
  5595  00B2                     	ds	2
  5596  00B4                     _lastError:	
  5597  00B4                     	ds	2
  5598  00B6                     _menuDelay:	
  5599  00B6                     	ds	2
  5600  00B8                     _pidIntegrated:	
  5601  00B8                     	ds	2
  5602  00BA                     _pidMinOutput:	
  5603  00BA                     	ds	2
  5604  00BC                     _sampleIndex:	
  5605  00BC                     	ds	2
  5606  00BE                     _timer:	
  5607  00BE                     	ds	2
  5608  00C0                     _choice:	
  5609  00C0                     	ds	1
  5610  00C1                     _delayCount:	
  5611  00C1                     	ds	1
  5612  00C2                     _key:	
  5613  00C2                     	ds	1
  5614  00C3                     _testKey:	
  5615  00C3                     	ds	1
  5616  00C4                     _timer2:	
  5617  00C4                     	ds	1
  5618                           
  5619                           	psect	dataBANK1
  5620  00DE                     __pdataBANK1:	
  5621  00DE                     _lowRangeSet:	
  5622  00DE                     	ds	4
  5623  00E2                     _setpoint:	
  5624  00E2                     	ds	4
  5625  00E6                     _Kd:	
  5626  00E6                     	ds	2
  5627  00E8                     _Ki:	
  5628  00E8                     	ds	2
  5629  00EA                     _Kp:	
  5630  00EA                     	ds	2
  5631  00EC                     _pidMaxOutput:	
  5632  00EC                     	ds	2
  5633  00EE                     _loop:	
  5634  00EE                     	ds	1
  5635                           
  5636                           	psect	bssBANK3
  5637  01BC                     __pbssBANK3:	
  5638  01BC                     LCD_Write_Int@F13694:	
  5639  01BC                     	ds	5
  5640  01C1                     main@F13664:	
  5641  01C1                     	ds	4
  5642                           
  5643                           	psect	dataBANK3
  5644  01A0                     __pdataBANK3:	
  5645  01A0                     ___cgram:	
  5646  01A0                     	ds	16
  5647  01B0                     _channels:	
  5648  01B0                     	ds	4
  5649  01B4                     _desc:	
  5650  01B4                     	ds	4
  5651  01B8                     _highRangeSet:	
  5652  01B8                     	ds	4
  5653                           
  5654                           	psect	bssBANK4
  5655  0220                     __pbssBANK4:	
  5656  0220                     main@F13670:	
  5657  0220                     	ds	80
  5658                           
  5659                           	psect	inittext
  5660  1659                     init_ram:	
  5661  1659  00FE               	movwf	126
  5662  165A                     initloop:	
  5663  165A  0012               	moviw fsr0++
  5664  165B  001E               	movwi fsr1++
  5665  165C  3001               	movlw	1
  5666  165D  02FE               	subwf	126,f
  5667  165E  3000               	movlw	0
  5668  165F  3BFF               	subwfb	127,f
  5669  1660  087F               	movf	127,w
  5670  1661  047E               	iorwf	126,w
  5671  1662  1903               	btfsc	3,2
  5672  1663  3400               	retlw	0
  5673  1664  2E5A               	goto	initloop
  5674                           
  5675                           	psect	clrtext
  5676  164D                     clear_ram0:	
  5677                           ;	Called with FSR0 containing the base address, and
  5678                           ;	btemp/btemp+1 has the size to clear
  5679                           
  5680  164D  0064               	clrwdt	;clear the watchdog before getting into this loop
  5681  164E                     clrloop0:	
  5682  164E  0180               	clrf	0	;clear RAM location pointed to by FSR
  5683  164F  3101               	addfsr 0,1
  5684  1650  3001               	movlw	1
  5685  1651  02FE               	subwf	126,f
  5686  1652  3000               	movlw	0
  5687  1653  3BFF               	subwfb	127,f
  5688  1654  087F               	movf	127,w
  5689  1655  047E               	iorwf	126,w
  5690  1656  1903               	btfsc	3,2
  5691  1657  3400               	retlw	0	;all done for this memory range, return
  5692  1658  2E4E               	goto	clrloop0	;have we reached the end yet?
  5693                           
  5694                           	psect	cstackBANK2
  5695  0120                     __pcstackBANK2:	
  5696  0120                     main@outputSamples:	
  5697                           
  5698                           ; 80 bytes @ 0x0
  5699  0120                     	ds	80
  5700                           
  5701                           	psect	cstackBANK1
  5702  00C5                     __pcstackBANK1:	
  5703  00C5                     ??_main:	
  5704                           
  5705                           ; 1 bytes @ 0x0
  5706  00C5                     	ds	10
  5707  00CF                     main@pidPeriodCounter:	
  5708                           
  5709                           ; 2 bytes @ 0xA
  5710  00CF                     	ds	2
  5711  00D1                     main@currentTemperature:	
  5712                           
  5713                           ; 2 bytes @ 0xC
  5714  00D1                     	ds	2
  5715  00D3                     main@outputTotal:	
  5716                           
  5717                           ; 4 bytes @ 0xE
  5718  00D3                     	ds	4
  5719  00D7                     main@dutyCycle6:	
  5720                           
  5721                           ; 2 bytes @ 0x12
  5722  00D7                     	ds	2
  5723  00D9                     main@analogs:	
  5724                           
  5725                           ; 4 bytes @ 0x14
  5726  00D9                     	ds	4
  5727  00DD                     main@j:	
  5728                           
  5729                           ; 1 bytes @ 0x18
  5730  00DD                     	ds	1
  5731                           
  5732                           	psect	cstackCOMMON
  5733  0070                     __pcstackCOMMON:	
  5734  0070                     ?___ftge:	
  5735  0070                     ?_LCD_Cmd:	
  5736                           ; 1 bit 
  5737                           
  5738  0070                     ?_LCD_Write_Char:	
  5739                           ; 1 bytes @ 0x0
  5740                           
  5741  0070                     ?_OSCILLATOR_Initialize:	
  5742                           ; 1 bytes @ 0x0
  5743                           
  5744  0070                     ??_OSCILLATOR_Initialize:	
  5745                           ; 1 bytes @ 0x0
  5746                           
  5747  0070                     ?_TMR2_Initialize:	
  5748                           ; 1 bytes @ 0x0
  5749                           
  5750  0070                     ??_TMR2_Initialize:	
  5751                           ; 1 bytes @ 0x0
  5752                           
  5753  0070                     ?_ADCC_Initialize:	
  5754                           ; 1 bytes @ 0x0
  5755                           
  5756  0070                     ??_ADCC_Initialize:	
  5757                           ; 1 bytes @ 0x0
  5758                           
  5759  0070                     ?_InitCustomChars:	
  5760                           ; 1 bytes @ 0x0
  5761                           
  5762  0070                     ?_LCD_Port:	
  5763                           ; 1 bytes @ 0x0
  5764                           
  5765  0070                     ??_LCD_Port:	
  5766                           ; 1 bytes @ 0x0
  5767                           
  5768  0070                     ?_LCD_Clear:	
  5769                           ; 1 bytes @ 0x0
  5770                           
  5771  0070                     ?_LCD_Init:	
  5772                           ; 1 bytes @ 0x0
  5773                           
  5774  0070                     ?_PIN_MANAGER_Initialize:	
  5775                           ; 1 bytes @ 0x0
  5776                           
  5777  0070                     ??_PIN_MANAGER_Initialize:	
  5778                           ; 1 bytes @ 0x0
  5779                           
  5780  0070                     ?_PWM_Initialize:	
  5781                           ; 1 bytes @ 0x0
  5782                           
  5783  0070                     ??_PWM_Initialize:	
  5784                           ; 1 bytes @ 0x0
  5785                           
  5786  0070                     ?_PWM7_LoadDutyValue:	
  5787                           ; 1 bytes @ 0x0
  5788                           
  5789  0070                     ?_SYSTEM_Initialize:	
  5790                           ; 1 bytes @ 0x0
  5791                           
  5792  0070                     ?_readKey:	
  5793                           ; 1 bytes @ 0x0
  5794                           
  5795  0070                     ??_readKey:	
  5796                           ; 1 bytes @ 0x0
  5797                           
  5798  0070                     ?_menuChoice:	
  5799                           ; 1 bytes @ 0x0
  5800                           
  5801  0070                     ?_main:	
  5802                           ; 1 bytes @ 0x0
  5803                           
  5804  0070                     ?_ADCRead:	
  5805                           ; 1 bytes @ 0x0
  5806                           
  5807  0070                     ?___wmul:	
  5808                           ; 2 bytes @ 0x0
  5809                           
  5810  0070                     ?___awdiv:	
  5811                           ; 2 bytes @ 0x0
  5812                           
  5813  0070                     ?___awmod:	
  5814                           ; 2 bytes @ 0x0
  5815                           
  5816  0070                     ?___ftpack:	
  5817                           ; 2 bytes @ 0x0
  5818                           
  5819  0070                     ?_frexp:	
  5820                           ; 3 bytes @ 0x0
  5821                           
  5822  0070                     ?___aldiv:	
  5823                           ; 3 bytes @ 0x0
  5824                           
  5825  0070                     ?___fttol:	
  5826                           ; 4 bytes @ 0x0
  5827                           
  5828  0070                     LCD_Port@a:	
  5829                           ; 4 bytes @ 0x0
  5830                           
  5831  0070                     PIN_MANAGER_Initialize@state:	
  5832                           ; 1 bytes @ 0x0
  5833                           
  5834  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5835                           ; 1 bytes @ 0x0
  5836                           
  5837  0070                     ___wmul@multiplier:	
  5838                           ; 2 bytes @ 0x0
  5839                           
  5840  0070                     ___awdiv@divisor:	
  5841                           ; 2 bytes @ 0x0
  5842                           
  5843  0070                     ___awmod@divisor:	
  5844                           ; 2 bytes @ 0x0
  5845                           
  5846  0070                     ___ftpack@arg:	
  5847                           ; 2 bytes @ 0x0
  5848                           
  5849  0070                     ___ftge@ff1:	
  5850                           ; 3 bytes @ 0x0
  5851                           
  5852  0070                     ___fttol@f1:	
  5853                           ; 3 bytes @ 0x0
  5854                           
  5855  0070                     frexp@value:	
  5856                           ; 3 bytes @ 0x0
  5857                           
  5858  0070                     ___aldiv@divisor:	
  5859                           ; 3 bytes @ 0x0
  5860                           
  5861                           
  5862                           ; 4 bytes @ 0x0
  5863  0070                     	ds	1
  5864  0071                     ??_LCD_Cmd:	
  5865  0071                     ??_LCD_Write_Char:	
  5866                           ; 1 bytes @ 0x1
  5867                           
  5868                           
  5869                           ; 1 bytes @ 0x1
  5870  0071                     	ds	1
  5871  0072                     ??_PWM7_LoadDutyValue:	
  5872  0072                     LCD_Write_Char@temp:	
  5873                           ; 1 bytes @ 0x2
  5874                           
  5875  0072                     ___wmul@multiplicand:	
  5876                           ; 1 bytes @ 0x2
  5877                           
  5878  0072                     ___awdiv@dividend:	
  5879                           ; 2 bytes @ 0x2
  5880                           
  5881  0072                     ___awmod@dividend:	
  5882                           ; 2 bytes @ 0x2
  5883                           
  5884                           
  5885                           ; 2 bytes @ 0x2
  5886  0072                     	ds	1
  5887  0073                     ??_ADCRead:	
  5888  0073                     ADCRead@channel:	
  5889                           ; 1 bytes @ 0x3
  5890                           
  5891  0073                     LCD_Cmd@a:	
  5892                           ; 1 bytes @ 0x3
  5893                           
  5894  0073                     LCD_Write_Char@y:	
  5895                           ; 1 bytes @ 0x3
  5896                           
  5897  0073                     ___ftpack@exp:	
  5898                           ; 1 bytes @ 0x3
  5899                           
  5900  0073                     frexp@eptr:	
  5901                           ; 1 bytes @ 0x3
  5902                           
  5903  0073                     ___ftge@ff2:	
  5904                           ; 1 bytes @ 0x3
  5905                           
  5906                           
  5907                           ; 3 bytes @ 0x3
  5908  0073                     	ds	1
  5909  0074                     ??_frexp:	
  5910  0074                     ??_LCD_Clear:	
  5911                           ; 1 bytes @ 0x4
  5912                           
  5913  0074                     ?_LCD_Set_Cursor:	
  5914                           ; 1 bytes @ 0x4
  5915                           
  5916  0074                     ??_LCD_Init:	
  5917                           ; 1 bytes @ 0x4
  5918                           
  5919  0074                     ??___wmul:	
  5920                           ; 1 bytes @ 0x4
  5921                           
  5922  0074                     ??___awdiv:	
  5923                           ; 1 bytes @ 0x4
  5924                           
  5925  0074                     ??___awmod:	
  5926                           ; 1 bytes @ 0x4
  5927                           
  5928  0074                     ??___fttol:	
  5929                           ; 1 bytes @ 0x4
  5930                           
  5931  0074                     LCD_Set_Cursor@y:	
  5932                           ; 1 bytes @ 0x4
  5933                           
  5934  0074                     LCD_Write_Char@a:	
  5935                           ; 1 bytes @ 0x4
  5936                           
  5937  0074                     ___ftpack@sign:	
  5938                           ; 1 bytes @ 0x4
  5939                           
  5940  0074                     ___wmul@product:	
  5941                           ; 1 bytes @ 0x4
  5942                           
  5943  0074                     ___aldiv@dividend:	
  5944                           ; 2 bytes @ 0x4
  5945                           
  5946                           
  5947                           ; 4 bytes @ 0x4
  5948  0074                     	ds	1
  5949  0075                     ??___ftpack:	
  5950  0075                     ??_InitCustomChars:	
  5951                           ; 1 bytes @ 0x5
  5952                           
  5953  0075                     ??_LCD_Set_Cursor:	
  5954                           ; 1 bytes @ 0x5
  5955                           
  5956  0075                     ?_LCD_Write_String:	
  5957                           ; 1 bytes @ 0x5
  5958                           
  5959  0075                     ___awdiv@counter:	
  5960                           ; 1 bytes @ 0x5
  5961                           
  5962  0075                     ___awmod@counter:	
  5963                           ; 1 bytes @ 0x5
  5964                           
  5965  0075                     LCD_Write_String@a:	
  5966                           ; 1 bytes @ 0x5
  5967                           
  5968                           
  5969                           ; 2 bytes @ 0x5
  5970  0075                     	ds	1
  5971  0076                     ??___ftge:	
  5972  0076                     ?_PID_Calculate:	
  5973                           ; 1 bytes @ 0x6
  5974                           
  5975  0076                     InitCustomChars@i:	
  5976                           ; 2 bytes @ 0x6
  5977                           
  5978  0076                     ___awdiv@sign:	
  5979                           ; 1 bytes @ 0x6
  5980                           
  5981  0076                     ___awmod@sign:	
  5982                           ; 1 bytes @ 0x6
  5983                           
  5984  0076                     PID_Calculate@setpoint:	
  5985                           ; 1 bytes @ 0x6
  5986                           
  5987                           
  5988                           ; 2 bytes @ 0x6
  5989  0076                     	ds	1
  5990  0077                     ??_LCD_Write_String:	
  5991  0077                     LCD_Set_Cursor@x:	
  5992                           ; 1 bytes @ 0x7
  5993                           
  5994  0077                     LCD_Init@style:	
  5995                           ; 1 bytes @ 0x7
  5996                           
  5997  0077                     ___awdiv@quotient:	
  5998                           ; 1 bytes @ 0x7
  5999                           
  6000                           
  6001                           ; 2 bytes @ 0x7
  6002  0077                     	ds	1
  6003  0078                     ??_SYSTEM_Initialize:	
  6004  0078                     ??___aldiv:	
  6005                           ; 1 bytes @ 0x8
  6006                           
  6007  0078                     ?___awtoft:	
  6008                           ; 1 bytes @ 0x8
  6009                           
  6010  0078                     LCD_Set_Cursor@z:	
  6011                           ; 3 bytes @ 0x8
  6012                           
  6013  0078                     ___fttol@sign1:	
  6014                           ; 1 bytes @ 0x8
  6015                           
  6016  0078                     LCD_Write_String@i:	
  6017                           ; 1 bytes @ 0x8
  6018                           
  6019  0078                     PID_Calculate@temp:	
  6020                           ; 2 bytes @ 0x8
  6021                           
  6022  0078                     ___awtoft@c:	
  6023                           ; 2 bytes @ 0x8
  6024                           
  6025                           
  6026                           ; 2 bytes @ 0x8
  6027  0078                     	ds	1
  6028  0079                     ?_LCD_Write_Int:	
  6029  0079                     LCD_Set_Cursor@w:	
  6030                           ; 1 bytes @ 0x9
  6031                           
  6032  0079                     readAnalog@analog_channel:	
  6033                           ; 1 bytes @ 0x9
  6034                           
  6035  0079                     LCD_Write_Int@value:	
  6036                           ; 2 bytes @ 0x9
  6037                           
  6038  0079                     ___fttol@lval:	
  6039                           ; 2 bytes @ 0x9
  6040                           
  6041                           
  6042                           ; 4 bytes @ 0x9
  6043  0079                     	ds	1
  6044  007A                     ??_PID_Calculate:	
  6045  007A                     LCD_Set_Cursor@temp:	
  6046                           ; 1 bytes @ 0xA
  6047                           
  6048                           
  6049                           ; 1 bytes @ 0xA
  6050  007A                     	ds	1
  6051  007B                     ??___awtoft:	
  6052  007B                     LCD_Write_Int@fieldLength:	
  6053                           ; 1 bytes @ 0xB
  6054                           
  6055  007B                     readAnalog@value:	
  6056                           ; 1 bytes @ 0xB
  6057                           
  6058                           
  6059                           ; 2 bytes @ 0xB
  6060  007B                     	ds	1
  6061  007C                     LCD_Write_Int@numPlaces:	
  6062                           
  6063                           ; 1 bytes @ 0xC
  6064  007C                     	ds	1
  6065  007D                     LCD_Write_Int@sign:	
  6066  007D                     ___awtoft@sign:	
  6067                           ; 1 bytes @ 0xD
  6068                           
  6069  007D                     ___fttol@exp1:	
  6070                           ; 1 bytes @ 0xD
  6071                           
  6072                           
  6073                           ; 1 bytes @ 0xD
  6074  007D                     	ds	1
  6075  007E                     ??_eval_poly:	
  6076  007E                     ??_tempCalc:	
  6077                           ; 1 bytes @ 0xE
  6078                           
  6079  007E                     ??___ftsub:	
  6080                           ; 1 bytes @ 0xE
  6081                           
  6082                           
  6083                           	psect	cstackBANK0
  6084  0020                     __pcstackBANK0:	
  6085                           ; 1 bytes @ 0xE
  6086                           
  6087  0020                     ??_LCD_Write_Int:	
  6088  0020                     ?___ftmul:	
  6089                           ; 1 bytes @ 0x0
  6090                           
  6091  0020                     ___aldiv@counter:	
  6092                           ; 3 bytes @ 0x0
  6093                           
  6094  0020                     ___ftmul@f1:	
  6095                           ; 1 bytes @ 0x0
  6096                           
  6097                           
  6098                           ; 3 bytes @ 0x0
  6099  0020                     	ds	1
  6100  0021                     ___aldiv@sign:	
  6101                           
  6102                           ; 1 bytes @ 0x1
  6103  0021                     	ds	1
  6104  0022                     ___aldiv@quotient:	
  6105                           
  6106                           ; 4 bytes @ 0x2
  6107  0022                     	ds	1
  6108  0023                     ___ftmul@f2:	
  6109                           
  6110                           ; 3 bytes @ 0x3
  6111  0023                     	ds	2
  6112  0025                     LCD_Write_Int@str:	
  6113                           
  6114                           ; 5 bytes @ 0x5
  6115  0025                     	ds	1
  6116  0026                     ??___ftmul:	
  6117  0026                     ?_readAnalog:	
  6118                           ; 1 bytes @ 0x6
  6119                           
  6120  0026                     readAnalog@channel:	
  6121                           ; 2 bytes @ 0x6
  6122                           
  6123                           
  6124                           ; 2 bytes @ 0x6
  6125  0026                     	ds	2
  6126  0028                     ??_readAnalog:	
  6127                           
  6128                           ; 1 bytes @ 0x8
  6129  0028                     	ds	2
  6130  002A                     ___ftmul@exp:	
  6131  002A                     LCD_Write_Int@j:	
  6132                           ; 1 bytes @ 0xA
  6133                           
  6134                           
  6135                           ; 2 bytes @ 0xA
  6136  002A                     	ds	1
  6137  002B                     ___ftmul@f3_as_product:	
  6138                           
  6139                           ; 3 bytes @ 0xB
  6140  002B                     	ds	1
  6141  002C                     LCD_Write_Int@i:	
  6142                           
  6143                           ; 2 bytes @ 0xC
  6144  002C                     	ds	2
  6145  002E                     ??_menuChoice:	
  6146  002E                     ___ftmul@cntr:	
  6147                           ; 1 bytes @ 0xE
  6148                           
  6149                           
  6150                           ; 1 bytes @ 0xE
  6151  002E                     	ds	1
  6152  002F                     ___ftmul@sign:	
  6153                           
  6154                           ; 1 bytes @ 0xF
  6155  002F                     	ds	1
  6156  0030                     ?___ftdiv:	
  6157  0030                     ___ftdiv@f2:	
  6158                           ; 3 bytes @ 0x10
  6159                           
  6160                           
  6161                           ; 3 bytes @ 0x10
  6162  0030                     	ds	3
  6163  0033                     ___ftdiv@f1:	
  6164                           
  6165                           ; 3 bytes @ 0x13
  6166  0033                     	ds	3
  6167  0036                     ??___ftdiv:	
  6168                           
  6169                           ; 1 bytes @ 0x16
  6170  0036                     	ds	4
  6171  003A                     ___ftdiv@cntr:	
  6172                           
  6173                           ; 1 bytes @ 0x1A
  6174  003A                     	ds	1
  6175  003B                     ___ftdiv@f3:	
  6176                           
  6177                           ; 3 bytes @ 0x1B
  6178  003B                     	ds	3
  6179  003E                     ___ftdiv@exp:	
  6180                           
  6181                           ; 1 bytes @ 0x1E
  6182  003E                     	ds	1
  6183  003F                     ___ftdiv@sign:	
  6184                           
  6185                           ; 1 bytes @ 0x1F
  6186  003F                     	ds	1
  6187  0040                     ?___ftadd:	
  6188  0040                     ___ftadd@f1:	
  6189                           ; 3 bytes @ 0x20
  6190                           
  6191                           
  6192                           ; 3 bytes @ 0x20
  6193  0040                     	ds	3
  6194  0043                     ___ftadd@f2:	
  6195                           
  6196                           ; 3 bytes @ 0x23
  6197  0043                     	ds	3
  6198  0046                     ??___ftadd:	
  6199                           
  6200                           ; 1 bytes @ 0x26
  6201  0046                     	ds	4
  6202  004A                     ___ftadd@sign:	
  6203                           
  6204                           ; 1 bytes @ 0x2A
  6205  004A                     	ds	1
  6206  004B                     ___ftadd@exp2:	
  6207                           
  6208                           ; 1 bytes @ 0x2B
  6209  004B                     	ds	1
  6210  004C                     ___ftadd@exp1:	
  6211                           
  6212                           ; 1 bytes @ 0x2C
  6213  004C                     	ds	1
  6214  004D                     ?_eval_poly:	
  6215  004D                     ?___ftsub:	
  6216                           ; 3 bytes @ 0x2D
  6217                           
  6218  004D                     ___ftsub@f2:	
  6219                           ; 3 bytes @ 0x2D
  6220                           
  6221  004D                     eval_poly@x:	
  6222                           ; 3 bytes @ 0x2D
  6223                           
  6224                           
  6225                           ; 3 bytes @ 0x2D
  6226  004D                     	ds	3
  6227  0050                     eval_poly@d:	
  6228  0050                     ___ftsub@f1:	
  6229                           ; 2 bytes @ 0x30
  6230                           
  6231                           
  6232                           ; 3 bytes @ 0x30
  6233  0050                     	ds	2
  6234  0052                     eval_poly@n:	
  6235                           
  6236                           ; 2 bytes @ 0x32
  6237  0052                     	ds	2
  6238  0054                     eval_poly@res:	
  6239                           
  6240                           ; 3 bytes @ 0x34
  6241  0054                     	ds	3
  6242  0057                     ?_log:	
  6243  0057                     log@x:	
  6244                           ; 3 bytes @ 0x37
  6245                           
  6246                           
  6247                           ; 3 bytes @ 0x37
  6248  0057                     	ds	3
  6249  005A                     ??_log:	
  6250                           
  6251                           ; 1 bytes @ 0x3A
  6252  005A                     	ds	1
  6253  005B                     log@exponent:	
  6254                           
  6255                           ; 2 bytes @ 0x3B
  6256  005B                     	ds	2
  6257  005D                     ?_tempCalc:	
  6258  005D                     tempCalc@analogValue:	
  6259                           ; 2 bytes @ 0x3D
  6260                           
  6261                           
  6262                           ; 2 bytes @ 0x3D
  6263  005D                     	ds	2
  6264  005F                     tempCalc@R:	
  6265                           
  6266                           ; 3 bytes @ 0x3F
  6267  005F                     	ds	3
  6268  0062                     _tempCalc$1011:	
  6269                           
  6270                           ; 3 bytes @ 0x42
  6271  0062                     	ds	3
  6272  0065                     tempCalc@steinhart:	
  6273                           
  6274                           ; 3 bytes @ 0x45
  6275  0065                     	ds	3
  6276  0068                     main@x:	
  6277                           
  6278                           ; 1 bytes @ 0x48
  6279  0068                     	ds	1
  6280  0069                     main@output:	
  6281                           
  6282                           ; 2 bytes @ 0x49
  6283  0069                     	ds	2
  6284  006B                     main@holdOutput:	
  6285                           
  6286                           ; 1 bytes @ 0x4B
  6287  006B                     	ds	1
  6288  006C                     main@lidOpenCount:	
  6289                           
  6290                           ; 1 bytes @ 0x4C
  6291  006C                     	ds	1
  6292  006D                     main@lastTemperature:	
  6293                           
  6294                           ; 2 bytes @ 0x4D
  6295  006D                     	ds	2
  6296  006F                     main@outputIndex:	
  6297                           
  6298                           ; 1 bytes @ 0x4F
  6299  006F                     	ds	1
  6300                           
  6301                           	psect	maintext
  6302  053A                     __pmaintext:	
  6303 ;;
  6304 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6305 ;;
  6306 ;; *************** function _main *****************
  6307 ;; Defined at:
  6308 ;;		line 29 in file "main.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;		None
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;  outputSample   80    0[BANK2 ] int [40]
  6313 ;;  analogs         4   20[BANK1 ] unsigned int [2]
  6314 ;;  outputTotal     4   14[BANK1 ] long 
  6315 ;;  dutyCycle6      2   18[BANK1 ] unsigned int 
  6316 ;;  currentTempe    2   12[BANK1 ] int 
  6317 ;;  pidPeriodCou    2   10[BANK1 ] int 
  6318 ;;  lastTemperat    2   77[BANK0 ] int 
  6319 ;;  output          2   73[BANK0 ] int 
  6320 ;;  j               1   24[BANK1 ] unsigned char 
  6321 ;;  outputIndex     1   79[BANK0 ] unsigned char 
  6322 ;;  lidOpenCount    1   76[BANK0 ] unsigned char 
  6323 ;;  holdOutput      1   75[BANK0 ] unsigned char 
  6324 ;;  x               1   72[BANK0 ] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      void 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : B1F/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;      Locals:         0       8      15      80       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;      Totals:         0       8      25      80       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;Total ram usage:      113 bytes
  6339 ;; Hardware stack levels required when called:    5
  6340 ;; This function calls:
  6341 ;;		_LCD_Clear
  6342 ;;		_LCD_Set_Cursor
  6343 ;;		_LCD_Write_Char
  6344 ;;		_LCD_Write_Int
  6345 ;;		_LCD_Write_String
  6346 ;;		_PID_Calculate
  6347 ;;		_PWM7_LoadDutyValue
  6348 ;;		_SYSTEM_Initialize
  6349 ;;		___aldiv
  6350 ;;		_menuChoice
  6351 ;;		_readAnalog
  6352 ;;		_tempCalc
  6353 ;; This function is called by:
  6354 ;;		Startup code after reset
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           
  6359                           ;psect for function _main
  6360  053A                     _main:	
  6361                           
  6362                           ;main.c: 31: SYSTEM_Initialize();
  6363                           
  6364                           ;incstack = 0
  6365                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6366  053A  3188  20BF  3185   	fcall	_SYSTEM_Initialize
  6367                           
  6368                           ;main.c: 33: uint16_t analogs[2] = {0};
  6369  053D  0023               	movlb	3	; select bank3
  6370  053E  0844               	movf	(main@F13664+3)^(0+384),w
  6371  053F  0021               	movlb	1	; select bank1
  6372  0540  00DC               	movwf	(main@analogs+3)^(0+128)
  6373  0541  0023               	movlb	3	; select bank3
  6374  0542  0843               	movf	(main@F13664+2)^(0+384),w
  6375  0543  0021               	movlb	1	; select bank1
  6376  0544  00DB               	movwf	(main@analogs+2)^(0+128)
  6377  0545  0023               	movlb	3	; select bank3
  6378  0546  0842               	movf	(main@F13664+1)^(0+384),w
  6379  0547  0021               	movlb	1	; select bank1
  6380  0548  00DA               	movwf	(main@analogs+1)^(0+128)
  6381  0549  0023               	movlb	3	; select bank3
  6382  054A  0841               	movf	main@F13664^(0+384),w
  6383  054B  0021               	movlb	1	; select bank1
  6384  054C  00D9               	movwf	main@analogs^(0+128)
  6385                           
  6386                           ;main.c: 35: extern int16_t setpoint[2];
  6387                           ;main.c: 43: int output = 0;
  6388  054D  0020               	movlb	0	; select bank0
  6389  054E  01E9               	clrf	main@output
  6390  054F  01EA               	clrf	main@output+1
  6391                           
  6392                           ;main.c: 45: int32_t outputTotal = 0;
  6393  0550  3000               	movlw	0
  6394  0551  0021               	movlb	1	; select bank1
  6395  0552  00D6               	movwf	(main@outputTotal+3)^(0+128)
  6396  0553  3000               	movlw	0
  6397  0554  00D5               	movwf	(main@outputTotal+2)^(0+128)
  6398  0555  3000               	movlw	0
  6399  0556  00D4               	movwf	(main@outputTotal+1)^(0+128)
  6400  0557  3000               	movlw	0
  6401  0558  00D3               	movwf	main@outputTotal^(0+128)
  6402                           
  6403                           ;main.c: 47: char outputIndex = 0;
  6404  0559  0020               	movlb	0	; select bank0
  6405  055A  01EF               	clrf	main@outputIndex
  6406                           
  6407                           ;main.c: 49: int16_t outputSamples[40]= {0};
  6408  055B  3020               	movlw	low main@F13670
  6409  055C  0086               	movwf	6
  6410  055D  3002               	movlw	high main@F13670
  6411  055E  0087               	movwf	7
  6412  055F  3020               	movlw	low main@outputSamples
  6413  0560  0084               	movwf	4
  6414  0561  3001               	movlw	high main@outputSamples
  6415  0562  0085               	movwf	5
  6416  0563  3050               	movlw	80
  6417  0564  0021               	movlb	1	; select bank1
  6418  0565  00C5               	movwf	??_main^(0+128)
  6419  0566                     u3520:	
  6420  0566  0016               	moviw fsr1++
  6421  0567  001A               	movwi fsr0++
  6422  0568  0BC5               	decfsz	??_main^(0+128),f
  6423  0569  2D66               	goto	u3520
  6424                           
  6425                           ;main.c: 51: char holdOutput = 0;
  6426  056A  0020               	movlb	0	; select bank0
  6427  056B  01EB               	clrf	main@holdOutput
  6428                           
  6429                           ;main.c: 53: int currentTemperature = 750;
  6430  056C  30EE               	movlw	238
  6431  056D  0021               	movlb	1	; select bank1
  6432  056E  00D1               	movwf	main@currentTemperature^(0+128)
  6433  056F  3002               	movlw	2
  6434  0570  00D2               	movwf	(main@currentTemperature^(0+128)+1)
  6435                           
  6436                           ;main.c: 55: int lastTemperature = 750;
  6437  0571  30EE               	movlw	238
  6438  0572  0020               	movlb	0	; select bank0
  6439  0573  00ED               	movwf	main@lastTemperature
  6440  0574  3002               	movlw	2
  6441  0575  00EE               	movwf	main@lastTemperature+1
  6442                           
  6443                           ;main.c: 57: char lidOpenCount = 0;
  6444  0576  01EC               	clrf	main@lidOpenCount
  6445                           
  6446                           ;main.c: 61: char j = 0;
  6447  0577  0021               	movlb	1	; select bank1
  6448  0578  01DD               	clrf	main@j^(0+128)
  6449                           
  6450                           ;main.c: 63: char x = 0;
  6451  0579  0020               	movlb	0	; select bank0
  6452  057A  01E8               	clrf	main@x
  6453                           
  6454                           ;main.c: 65: int pidPeriodCounter = 0;
  6455  057B  0021               	movlb	1	; select bank1
  6456  057C  01CF               	clrf	main@pidPeriodCounter^(0+128)
  6457  057D  01D0               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6458                           
  6459                           ;main.c: 67: extern int pidMaxOutput;
  6460                           ;main.c: 69: extern unsigned char loop;
  6461                           ;main.c: 84: uint16_t dutyCycle6 = 0;
  6462  057E  01D7               	clrf	main@dutyCycle6^(0+128)
  6463  057F  01D8               	clrf	(main@dutyCycle6+1)^(0+128)
  6464                           
  6465                           ;main.c: 90: PWM7_LoadDutyValue(setpoint[1]);
  6466  0580  0865               	movf	((_setpoint+1)^(0+128)+2),w
  6467  0581  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6468  0582  0864               	movf	(_setpoint^(0+128)+2),w
  6469  0583  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6470  0584  3196  26A6  3185   	fcall	_PWM7_LoadDutyValue
  6471                           
  6472                           ;main.c: 92: _delay((unsigned long)((300)*(32000000/4000.0)));
  6473  0587  300D               	movlw	13
  6474  0588  0021               	movlb	1	; select bank1
  6475  0589  00C7               	movwf	(??_main^(0+128)+2)
  6476  058A  302D               	movlw	45
  6477  058B  00C6               	movwf	(??_main^(0+128)+1)
  6478  058C  30E2               	movlw	226
  6479  058D  00C5               	movwf	??_main^(0+128)
  6480  058E                     u3657:	
  6481  058E  0BC5               	decfsz	??_main^(0+128),f
  6482  058F  2D8E               	goto	u3657
  6483  0590  0BC6               	decfsz	(??_main^(0+128)+1),f
  6484  0591  2D8E               	goto	u3657
  6485  0592  0BC7               	decfsz	(??_main^(0+128)+2),f
  6486  0593  2D8E               	goto	u3657
  6487  0594  3200               	nop2
  6488                           
  6489                           ;main.c: 94: LCD_Clear();
  6490  0595  3196  263A  3185   	fcall	_LCD_Clear
  6491  0598                     l3108:	
  6492                           ;main.c: 96: while (1)
  6493                           
  6494                           
  6495                           ;main.c: 97: {
  6496                           ;main.c: 98: if(loop>253)
  6497  0598  30FE               	movlw	254
  6498  0599  0021               	movlb	1	; select bank1
  6499  059A  026E               	subwf	_loop^(0+128),w
  6500  059B  1C03               	skipc
  6501  059C  2F05               	goto	l3176
  6502                           
  6503                           ;main.c: 99: {
  6504                           ;main.c: 100: PWM7_LoadDutyValue(setpoint[1]);
  6505  059D  0865               	movf	((_setpoint+1)^(0+128)+2),w
  6506  059E  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6507  059F  0864               	movf	(_setpoint^(0+128)+2),w
  6508  05A0  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6509  05A1  3196  26A6  3185   	fcall	_PWM7_LoadDutyValue
  6510                           
  6511                           ;main.c: 102: { LCD_Set_Cursor(0,0); LCD_Write_String("Pit:");};
  6512  05A4  01F4               	clrf	LCD_Set_Cursor@y
  6513  05A5  3000               	movlw	0
  6514  05A6  3188  2080  3185   	fcall	_LCD_Set_Cursor
  6515  05A9  308E               	movlw	low (STR_6| (0+32768))
  6516  05AA  00F5               	movwf	LCD_Write_String@a
  6517  05AB  3090               	movlw	high (STR_6| (0+32768))
  6518  05AC  00F6               	movwf	LCD_Write_String@a+1
  6519  05AD  3196  26EE  3185   	fcall	_LCD_Write_String
  6520                           
  6521                           ;main.c: 103: { LCD_Set_Cursor(5,0); LCD_Write_Int(analogs[1],-1, 1, 0);};
  6522  05B0  01F4               	clrf	LCD_Set_Cursor@y
  6523  05B1  3005               	movlw	5
  6524  05B2  3188  2080  3185   	fcall	_LCD_Set_Cursor
  6525  05B5  0021               	movlb	1	; select bank1
  6526  05B6  085C               	movf	((main@analogs+1)^(0+128)+2),w
  6527  05B7  00FA               	movwf	LCD_Write_Int@value+1
  6528  05B8  085B               	movf	(main@analogs^(0+128)+2),w
  6529  05B9  00F9               	movwf	LCD_Write_Int@value
  6530  05BA  01FB               	clrf	LCD_Write_Int@fieldLength
  6531  05BB  03FB               	decf	LCD_Write_Int@fieldLength,f
  6532  05BC  01FC               	clrf	LCD_Write_Int@numPlaces
  6533  05BD  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6534  05BE  01FD               	clrf	LCD_Write_Int@sign
  6535  05BF  318D  2570  3185   	fcall	_LCD_Write_Int
  6536                           
  6537                           ;main.c: 104: LCD_Write_Char(0);
  6538  05C2  3000               	movlw	0
  6539  05C3  3197  27A3  3185   	fcall	_LCD_Write_Char
  6540                           
  6541                           ;main.c: 105: LCD_Write_Char(70);
  6542  05C6  3046               	movlw	70
  6543  05C7  3197  27A3  3185   	fcall	_LCD_Write_Char
  6544                           
  6545                           ;main.c: 106: LCD_Write_Char(' ');
  6546  05CA  3020               	movlw	32
  6547  05CB  3197  27A3  3185   	fcall	_LCD_Write_Char
  6548                           
  6549                           ;main.c: 107: LCD_Write_Char(' ');
  6550  05CE  3020               	movlw	32
  6551  05CF  3197  27A3  3185   	fcall	_LCD_Write_Char
  6552                           
  6553                           ;main.c: 109: { LCD_Set_Cursor(0,1); LCD_Write_String("Output:");};
  6554  05D2  01F4               	clrf	LCD_Set_Cursor@y
  6555  05D3  0AF4               	incf	LCD_Set_Cursor@y,f
  6556  05D4  3000               	movlw	0
  6557  05D5  3188  2080  3185   	fcall	_LCD_Set_Cursor
  6558  05D8  3086               	movlw	low (STR_7| (0+32768))
  6559  05D9  00F5               	movwf	LCD_Write_String@a
  6560  05DA  3090               	movlw	high (STR_7| (0+32768))
  6561  05DB  00F6               	movwf	LCD_Write_String@a+1
  6562  05DC  3196  26EE  3185   	fcall	_LCD_Write_String
  6563                           
  6564                           ;main.c: 110: LCD_Write_Char(' ');
  6565  05DF  3020               	movlw	32
  6566  05E0  3197  27A3  3185   	fcall	_LCD_Write_Char
  6567                           
  6568                           ;main.c: 111: LCD_Write_Int(dutyCycle6,5,0,0);
  6569  05E3  0021               	movlb	1	; select bank1
  6570  05E4  0858               	movf	(main@dutyCycle6+1)^(0+128),w
  6571  05E5  00FA               	movwf	LCD_Write_Int@value+1
  6572  05E6  0857               	movf	main@dutyCycle6^(0+128),w
  6573  05E7  00F9               	movwf	LCD_Write_Int@value
  6574  05E8  3005               	movlw	5
  6575  05E9  00C5               	movwf	??_main^(0+128)
  6576  05EA  0845               	movf	??_main^(0+128),w
  6577  05EB  00FB               	movwf	LCD_Write_Int@fieldLength
  6578  05EC  01FC               	clrf	LCD_Write_Int@numPlaces
  6579  05ED  01FD               	clrf	LCD_Write_Int@sign
  6580  05EE  318D  2570  3185   	fcall	_LCD_Write_Int
  6581                           
  6582                           ;main.c: 116: if(holdOutput==0)
  6583  05F1  0020               	movlb	0	; select bank0
  6584  05F2  086B               	movf	main@holdOutput,w
  6585  05F3  1D03               	btfss	3,2
  6586  05F4  2E98               	goto	l3150
  6587                           
  6588                           ;main.c: 117: {
  6589                           ;main.c: 118: output = PID_Calculate(setpoint[0],analogs[1]);
  6590  05F5  0021               	movlb	1	; select bank1
  6591  05F6  0863               	movf	(_setpoint+1)^(0+128),w
  6592  05F7  00F7               	movwf	PID_Calculate@setpoint+1
  6593  05F8  0862               	movf	_setpoint^(0+128),w
  6594  05F9  00F6               	movwf	PID_Calculate@setpoint
  6595  05FA  085C               	movf	((main@analogs+1)^(0+128)+2),w
  6596  05FB  00F9               	movwf	PID_Calculate@temp+1
  6597  05FC  085B               	movf	(main@analogs^(0+128)+2),w
  6598  05FD  00F8               	movwf	PID_Calculate@temp
  6599  05FE  318E  2639  3185   	fcall	_PID_Calculate
  6600  0601  0877               	movf	?_PID_Calculate+1,w
  6601  0602  0020               	movlb	0	; select bank0
  6602  0603  00EA               	movwf	main@output+1
  6603  0604  0876               	movf	?_PID_Calculate,w
  6604  0605  00E9               	movwf	main@output
  6605                           
  6606                           ;main.c: 119: outputTotal = outputTotal - outputSamples[outputIndex];
  6607  0606  0021               	movlb	1	; select bank1
  6608  0607  0853               	movf	main@outputTotal^(0+128),w
  6609  0608  00C5               	movwf	??_main^(0+128)
  6610  0609  0854               	movf	(main@outputTotal+1)^(0+128),w
  6611  060A  00C6               	movwf	(??_main^(0+128)+1)
  6612  060B  0855               	movf	(main@outputTotal+2)^(0+128),w
  6613  060C  00C7               	movwf	(??_main^(0+128)+2)
  6614  060D  0856               	movf	(main@outputTotal+3)^(0+128),w
  6615  060E  00C8               	movwf	(??_main^(0+128)+3)
  6616  060F  0020               	movlb	0	; select bank0
  6617  0610  356F               	lslf	main@outputIndex,w
  6618  0611  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6619  0612  0086               	movwf	6
  6620  0613  3001               	movlw	1	; select bank2/3
  6621  0614  0087               	movwf	7
  6622  0615  3F40               	moviw [0]fsr1
  6623  0616  0021               	movlb	1	; select bank1
  6624  0617  00C9               	movwf	(??_main+4)^(0+128)
  6625  0618  3F41               	moviw [1]fsr1
  6626  0619  00CA               	movwf	((??_main+4)^(0+128)+1)
  6627  061A  0849               	movf	(??_main+4)^(0+128),w
  6628  061B  00CB               	movwf	(??_main+6)^(0+128)
  6629  061C  084A               	movf	(??_main+5)^(0+128),w
  6630  061D  00CC               	movwf	((??_main+6)^(0+128)+1)
  6631  061E  3000               	movlw	0
  6632  061F  1BCC               	btfsc	((??_main+6)^(0+128)+1),7
  6633  0620  30FF               	movlw	255
  6634  0621  00CD               	movwf	((??_main+6)^(0+128)+2)
  6635  0622  00CE               	movwf	((??_main+6)^(0+128)+3)
  6636  0623  09CB               	comf	(??_main+6)^(0+128),f
  6637  0624  09CC               	comf	((??_main+6)^(0+128)+1),f
  6638  0625  09CD               	comf	((??_main+6)^(0+128)+2),f
  6639  0626  09CE               	comf	((??_main+6)^(0+128)+3),f
  6640  0627  0ACB               	incf	(??_main+6)^(0+128),f
  6641  0628  1903               	skipnz
  6642  0629  0ACC               	incf	((??_main+6)^(0+128)+1),f
  6643  062A  1903               	skipnz
  6644  062B  0ACD               	incf	((??_main+6)^(0+128)+2),f
  6645  062C  1903               	skipnz
  6646  062D  0ACE               	incf	((??_main+6)^(0+128)+3),f
  6647  062E  084B               	movf	(??_main+6)^(0+128),w
  6648  062F  07C5               	addwf	??_main^(0+128),f
  6649  0630  084C               	movf	(??_main+7)^(0+128),w
  6650  0631  3DC6               	addwfc	(??_main^(0+128)+1),f
  6651  0632  084D               	movf	(??_main+8)^(0+128),w
  6652  0633  3DC7               	addwfc	(??_main^(0+128)+2),f
  6653  0634  084E               	movf	(??_main+9)^(0+128),w
  6654  0635  3DC8               	addwfc	(??_main^(0+128)+3),f
  6655  0636  0848               	movf	(??_main+3)^(0+128),w
  6656  0637  00D6               	movwf	(main@outputTotal+3)^(0+128)
  6657  0638  0847               	movf	(??_main+2)^(0+128),w
  6658  0639  00D5               	movwf	(main@outputTotal+2)^(0+128)
  6659  063A  0846               	movf	(??_main+1)^(0+128),w
  6660  063B  00D4               	movwf	(main@outputTotal+1)^(0+128)
  6661  063C  0845               	movf	??_main^(0+128),w
  6662  063D  00D3               	movwf	main@outputTotal^(0+128)
  6663                           
  6664                           ;main.c: 120: outputSamples[outputIndex] = output;
  6665  063E  0020               	movlb	0	; select bank0
  6666  063F  356F               	lslf	main@outputIndex,w
  6667  0640  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6668  0641  0086               	movwf	6
  6669  0642  3001               	movlw	1	; select bank2/3
  6670  0643  0087               	movwf	7
  6671  0644  0869               	movf	main@output,w
  6672  0645  3FC0               	movwi [0]fsr1
  6673  0646  086A               	movf	main@output+1,w
  6674  0647  3FC1               	movwi [1]fsr1
  6675                           
  6676                           ;main.c: 121: outputTotal = outputTotal + outputSamples[outputIndex];
  6677  0648  0021               	movlb	1	; select bank1
  6678  0649  0853               	movf	main@outputTotal^(0+128),w
  6679  064A  00C5               	movwf	??_main^(0+128)
  6680  064B  0854               	movf	(main@outputTotal+1)^(0+128),w
  6681  064C  00C6               	movwf	(??_main^(0+128)+1)
  6682  064D  0855               	movf	(main@outputTotal+2)^(0+128),w
  6683  064E  00C7               	movwf	(??_main^(0+128)+2)
  6684  064F  0856               	movf	(main@outputTotal+3)^(0+128),w
  6685  0650  00C8               	movwf	(??_main^(0+128)+3)
  6686  0651  0020               	movlb	0	; select bank0
  6687  0652  356F               	lslf	main@outputIndex,w
  6688  0653  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6689  0654  0086               	movwf	6
  6690  0655  3001               	movlw	1	; select bank2/3
  6691  0656  0087               	movwf	7
  6692  0657  3F40               	moviw [0]fsr1
  6693  0658  0021               	movlb	1	; select bank1
  6694  0659  00C9               	movwf	(??_main+4)^(0+128)
  6695  065A  3F41               	moviw [1]fsr1
  6696  065B  00CA               	movwf	((??_main+4)^(0+128)+1)
  6697  065C  0849               	movf	(??_main+4)^(0+128),w
  6698  065D  00CB               	movwf	(??_main+6)^(0+128)
  6699  065E  084A               	movf	(??_main+5)^(0+128),w
  6700  065F  00CC               	movwf	((??_main+6)^(0+128)+1)
  6701  0660  3000               	movlw	0
  6702  0661  1BCC               	btfsc	((??_main+6)^(0+128)+1),7
  6703  0662  30FF               	movlw	255
  6704  0663  00CD               	movwf	((??_main+6)^(0+128)+2)
  6705  0664  00CE               	movwf	((??_main+6)^(0+128)+3)
  6706  0665  084B               	movf	(??_main+6)^(0+128),w
  6707  0666  07C5               	addwf	??_main^(0+128),f
  6708  0667  084C               	movf	(??_main+7)^(0+128),w
  6709  0668  3DC6               	addwfc	(??_main^(0+128)+1),f
  6710  0669  084D               	movf	(??_main+8)^(0+128),w
  6711  066A  3DC7               	addwfc	(??_main^(0+128)+2),f
  6712  066B  084E               	movf	(??_main+9)^(0+128),w
  6713  066C  3DC8               	addwfc	(??_main^(0+128)+3),f
  6714  066D  0848               	movf	(??_main+3)^(0+128),w
  6715  066E  00D6               	movwf	(main@outputTotal+3)^(0+128)
  6716  066F  0847               	movf	(??_main+2)^(0+128),w
  6717  0670  00D5               	movwf	(main@outputTotal+2)^(0+128)
  6718  0671  0846               	movf	(??_main+1)^(0+128),w
  6719  0672  00D4               	movwf	(main@outputTotal+1)^(0+128)
  6720  0673  0845               	movf	??_main^(0+128),w
  6721  0674  00D3               	movwf	main@outputTotal^(0+128)
  6722                           
  6723                           ;main.c: 122: dutyCycle6 = outputTotal/40;
  6724  0675  3000               	movlw	0
  6725  0676  00F3               	movwf	___aldiv@divisor+3
  6726  0677  3000               	movlw	0
  6727  0678  00F2               	movwf	___aldiv@divisor+2
  6728  0679  3000               	movlw	0
  6729  067A  00F1               	movwf	___aldiv@divisor+1
  6730  067B  3028               	movlw	40
  6731  067C  00F0               	movwf	___aldiv@divisor
  6732  067D  0856               	movf	(main@outputTotal+3)^(0+128),w
  6733  067E  00F7               	movwf	___aldiv@dividend+3
  6734  067F  0855               	movf	(main@outputTotal+2)^(0+128),w
  6735  0680  00F6               	movwf	___aldiv@dividend+2
  6736  0681  0854               	movf	(main@outputTotal+1)^(0+128),w
  6737  0682  00F5               	movwf	___aldiv@dividend+1
  6738  0683  0853               	movf	main@outputTotal^(0+128),w
  6739  0684  00F4               	movwf	___aldiv@dividend
  6740  0685  318A  225B  3185   	fcall	___aldiv
  6741  0688  0871               	movf	?___aldiv+1,w
  6742  0689  0021               	movlb	1	; select bank1
  6743  068A  00D8               	movwf	(main@dutyCycle6+1)^(0+128)
  6744  068B  0870               	movf	?___aldiv,w
  6745  068C  00D7               	movwf	main@dutyCycle6^(0+128)
  6746                           
  6747                           ;main.c: 124: outputIndex+=1;
  6748  068D  3001               	movlw	1
  6749  068E  00C5               	movwf	??_main^(0+128)
  6750  068F  0845               	movf	??_main^(0+128),w
  6751  0690  0020               	movlb	0	; select bank0
  6752  0691  07EF               	addwf	main@outputIndex,f
  6753                           
  6754                           ;main.c: 125: if(outputIndex >= 40)outputIndex = 0;
  6755  0692  3028               	movlw	40
  6756  0693  026F               	subwf	main@outputIndex,w
  6757  0694  1C03               	skipc
  6758  0695  2E9E               	goto	l3154
  6759  0696  01EF               	clrf	main@outputIndex
  6760                           
  6761                           ;main.c: 126: }
  6762  0697  2E9E               	goto	l3154
  6763  0698                     l3150:	
  6764                           
  6765                           ;main.c: 127: else
  6766                           ;main.c: 128: {
  6767                           ;main.c: 129: dutyCycle6=0;
  6768  0698  0021               	movlb	1	; select bank1
  6769  0699  01D7               	clrf	main@dutyCycle6^(0+128)
  6770  069A  01D8               	clrf	(main@dutyCycle6+1)^(0+128)
  6771                           
  6772                           ;main.c: 130: holdOutput-=1;
  6773  069B  3001               	movlw	1
  6774  069C  0020               	movlb	0	; select bank0
  6775  069D  02EB               	subwf	main@holdOutput,f
  6776  069E                     l3154:	
  6777                           
  6778                           ;main.c: 131: }
  6779                           ;main.c: 133: currentTemperature=analogs[1];
  6780  069E  0021               	movlb	1	; select bank1
  6781  069F  085C               	movf	((main@analogs+1)^(0+128)+2),w
  6782  06A0  00D2               	movwf	(main@currentTemperature+1)^(0+128)
  6783  06A1  085B               	movf	(main@analogs^(0+128)+2),w
  6784  06A2  00D1               	movwf	main@currentTemperature^(0+128)
  6785                           
  6786                           ;main.c: 135: if(lidOpenCount<10)
  6787  06A3  300A               	movlw	10
  6788  06A4  0020               	movlb	0	; select bank0
  6789  06A5  026C               	subwf	main@lidOpenCount,w
  6790  06A6  1803               	skipnc
  6791  06A7  2EAF               	goto	l3160
  6792                           
  6793                           ;main.c: 136: {
  6794                           ;main.c: 137: lidOpenCount+=1;
  6795  06A8  3001               	movlw	1
  6796  06A9  0021               	movlb	1	; select bank1
  6797  06AA  00C5               	movwf	??_main^(0+128)
  6798  06AB  0845               	movf	??_main^(0+128),w
  6799  06AC  0020               	movlb	0	; select bank0
  6800  06AD  07EC               	addwf	main@lidOpenCount,f
  6801                           
  6802                           ;main.c: 138: }
  6803  06AE  2EB8               	goto	l3164
  6804  06AF                     l3160:	
  6805                           
  6806                           ;main.c: 139: else
  6807                           ;main.c: 140: {
  6808                           ;main.c: 141: lastTemperature=currentTemperature;
  6809  06AF  0021               	movlb	1	; select bank1
  6810  06B0  0852               	movf	(main@currentTemperature+1)^(0+128),w
  6811  06B1  0020               	movlb	0	; select bank0
  6812  06B2  00EE               	movwf	main@lastTemperature+1
  6813  06B3  0021               	movlb	1	; select bank1
  6814  06B4  0851               	movf	main@currentTemperature^(0+128),w
  6815  06B5  0020               	movlb	0	; select bank0
  6816  06B6  00ED               	movwf	main@lastTemperature
  6817                           
  6818                           ;main.c: 142: lidOpenCount=0;
  6819  06B7  01EC               	clrf	main@lidOpenCount
  6820  06B8                     l3164:	
  6821                           
  6822                           ;main.c: 143: }
  6823                           ;main.c: 145: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6824  06B8  0021               	movlb	1	; select bank1
  6825  06B9  0951               	comf	main@currentTemperature^(0+128),w
  6826  06BA  00C5               	movwf	??_main^(0+128)
  6827  06BB  0952               	comf	(main@currentTemperature+1)^(0+128),w
  6828  06BC  00C6               	movwf	(??_main^(0+128)+1)
  6829  06BD  0AC5               	incf	??_main^(0+128),f
  6830  06BE  1903               	skipnz
  6831  06BF  0AC6               	incf	(??_main^(0+128)+1),f
  6832  06C0  0020               	movlb	0	; select bank0
  6833  06C1  086D               	movf	main@lastTemperature,w
  6834  06C2  0021               	movlb	1	; select bank1
  6835  06C3  0745               	addwf	??_main^(0+128),w
  6836  06C4  00C7               	movwf	(??_main+2)^(0+128)
  6837  06C5  0020               	movlb	0	; select bank0
  6838  06C6  086E               	movf	main@lastTemperature+1,w
  6839  06C7  0021               	movlb	1	; select bank1
  6840  06C8  3D46               	addwfc	(??_main+1)^(0+128),w
  6841  06C9  00C8               	movwf	(??_main+3)^(0+128)
  6842  06CA  0848               	movf	(??_main+3)^(0+128),w
  6843  06CB  3A80               	xorlw	128
  6844  06CC  00C9               	movwf	(??_main+4)^(0+128)
  6845  06CD  3080               	movlw	128
  6846  06CE  0249               	subwf	(??_main+4)^(0+128),w
  6847  06CF  1D03               	skipz
  6848  06D0  2ED3               	goto	u3575
  6849  06D1  3065               	movlw	101
  6850  06D2  0247               	subwf	(??_main+2)^(0+128),w
  6851  06D3                     u3575:	
  6852  06D3  1803               	skipnc
  6853  06D4  2EF2               	goto	l3168
  6854  06D5  0021               	movlb	1	; select bank1
  6855  06D6  0951               	comf	main@currentTemperature^(0+128),w
  6856  06D7  00C5               	movwf	??_main^(0+128)
  6857  06D8  0952               	comf	(main@currentTemperature+1)^(0+128),w
  6858  06D9  00C6               	movwf	(??_main^(0+128)+1)
  6859  06DA  0AC5               	incf	??_main^(0+128),f
  6860  06DB  1903               	skipnz
  6861  06DC  0AC6               	incf	(??_main^(0+128)+1),f
  6862  06DD  0020               	movlb	0	; select bank0
  6863  06DE  086D               	movf	main@lastTemperature,w
  6864  06DF  0021               	movlb	1	; select bank1
  6865  06E0  0745               	addwf	??_main^(0+128),w
  6866  06E1  00C7               	movwf	(??_main+2)^(0+128)
  6867  06E2  0020               	movlb	0	; select bank0
  6868  06E3  086E               	movf	main@lastTemperature+1,w
  6869  06E4  0021               	movlb	1	; select bank1
  6870  06E5  3D46               	addwfc	(??_main+1)^(0+128),w
  6871  06E6  00C8               	movwf	(??_main+3)^(0+128)
  6872  06E7  0848               	movf	(??_main+3)^(0+128),w
  6873  06E8  3A80               	xorlw	128
  6874  06E9  00C9               	movwf	(??_main+4)^(0+128)
  6875  06EA  307F               	movlw	127
  6876  06EB  0249               	subwf	(??_main+4)^(0+128),w
  6877  06EC  1D03               	skipz
  6878  06ED  2EF0               	goto	u3585
  6879  06EE  309C               	movlw	156
  6880  06EF  0247               	subwf	(??_main+2)^(0+128),w
  6881  06F0                     u3585:	
  6882  06F0  1803               	skipnc
  6883  06F1  2EFA               	goto	l3172
  6884  06F2                     l3168:	
  6885                           
  6886                           ;main.c: 146: {
  6887                           ;main.c: 147: dutyCycle6=0;
  6888  06F2  0021               	movlb	1	; select bank1
  6889  06F3  01D7               	clrf	main@dutyCycle6^(0+128)
  6890  06F4  01D8               	clrf	(main@dutyCycle6+1)^(0+128)
  6891                           
  6892                           ;main.c: 148: holdOutput=60;
  6893  06F5  303C               	movlw	60
  6894  06F6  00C5               	movwf	??_main^(0+128)
  6895  06F7  0845               	movf	??_main^(0+128),w
  6896  06F8  0020               	movlb	0	; select bank0
  6897  06F9  00EB               	movwf	main@holdOutput
  6898  06FA                     l3172:	
  6899                           
  6900                           ;main.c: 149: }
  6901                           ;main.c: 151: if(dutyCycle6<50)dutyCycle6=0;
  6902  06FA  3000               	movlw	0
  6903  06FB  0021               	movlb	1	; select bank1
  6904  06FC  0258               	subwf	(main@dutyCycle6+1)^(0+128),w
  6905  06FD  3032               	movlw	50
  6906  06FE  1903               	skipnz
  6907  06FF  0257               	subwf	main@dutyCycle6^(0+128),w
  6908  0700  1803               	skipnc
  6909  0701  2F04               	goto	l427
  6910  0702  01D7               	clrf	main@dutyCycle6^(0+128)
  6911  0703  01D8               	clrf	(main@dutyCycle6+1)^(0+128)
  6912  0704                     l427:	
  6913                           
  6914                           ;main.c: 153: loop=0;
  6915  0704  01EE               	clrf	_loop^(0+128)
  6916  0705                     l3176:	
  6917                           
  6918                           ;main.c: 154: }
  6919                           ;main.c: 156: pidPeriodCounter+=1;
  6920  0705  3001               	movlw	1
  6921  0706  07CF               	addwf	main@pidPeriodCounter^(0+128),f
  6922  0707  3000               	movlw	0
  6923  0708  3DD0               	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  6924                           
  6925                           ;main.c: 158: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  6926  0709  086D               	movf	(_pidMaxOutput+1)^(0+128),w
  6927  070A  3A80               	xorlw	128
  6928  070B  00C5               	movwf	??_main^(0+128)
  6929  070C  0850               	movf	(main@pidPeriodCounter+1)^(0+128),w
  6930  070D  3A80               	xorlw	128
  6931  070E  0245               	subwf	??_main^(0+128),w
  6932  070F  1D03               	skipz
  6933  0710  2F13               	goto	u3605
  6934  0711  084F               	movf	main@pidPeriodCounter^(0+128),w
  6935  0712  026C               	subwf	_pidMaxOutput^(0+128),w
  6936  0713                     u3605:	
  6937  0713  1803               	skipnc
  6938  0714  2F18               	goto	l3182
  6939  0715  0021               	movlb	1	; select bank1
  6940  0716  01CF               	clrf	main@pidPeriodCounter^(0+128)
  6941  0717  01D0               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6942  0718                     l3182:	
  6943                           
  6944                           ;main.c: 160: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  6945  0718  0021               	movlb	1	; select bank1
  6946  0719  0858               	movf	(main@dutyCycle6+1)^(0+128),w
  6947  071A  0250               	subwf	(main@pidPeriodCounter+1)^(0+128),w
  6948  071B  1D03               	skipz
  6949  071C  2F1F               	goto	u3615
  6950  071D  0857               	movf	main@dutyCycle6^(0+128),w
  6951  071E  024F               	subwf	main@pidPeriodCounter^(0+128),w
  6952  071F                     u3615:	
  6953  071F  1803               	skipnc
  6954  0720  2F24               	goto	l429
  6955  0721  0020               	movlb	0	; select bank0
  6956  0722  1518               	bsf	24,2	;volatile
  6957  0723  2F26               	goto	l3186
  6958  0724                     l429:	
  6959                           
  6960                           ;main.c: 161: else LATC2=0;
  6961  0724  0020               	movlb	0	; select bank0
  6962  0725  1118               	bcf	24,2	;volatile
  6963  0726                     l3186:	
  6964                           
  6965                           ;main.c: 163: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  6966  0726  0021               	movlb	1	; select bank1
  6967  0727  01DD               	clrf	main@j^(0+128)
  6968  0728  3002               	movlw	2
  6969  0729  025D               	subwf	main@j^(0+128),w
  6970  072A  1803               	btfsc	3,0
  6971  072B  2F4C               	goto	l3198
  6972  072C                     l3192:	
  6973  072C  085D               	movf	main@j^(0+128),w
  6974  072D  00C5               	movwf	??_main^(0+128)
  6975  072E  01C6               	clrf	(??_main^(0+128)+1)
  6976  072F  0845               	movf	??_main^(0+128),w
  6977  0730  0020               	movlb	0	; select bank0
  6978  0731  00A6               	movwf	readAnalog@channel
  6979  0732  0021               	movlb	1	; select bank1
  6980  0733  0846               	movf	(??_main+1)^(0+128),w
  6981  0734  0020               	movlb	0	; select bank0
  6982  0735  00A7               	movwf	readAnalog@channel+1
  6983  0736  3181  21BF  3185   	fcall	_readAnalog
  6984  0739  0021               	movlb	1	; select bank1
  6985  073A  355D               	lslf	main@j^(0+128),w
  6986  073B  3ED9               	addlw	(low (main@analogs| 0))& (0+255)
  6987  073C  0086               	movwf	6
  6988  073D  0187               	clrf	7
  6989  073E  0020               	movlb	0	; select bank0
  6990  073F  0826               	movf	?_readAnalog,w
  6991  0740  3FC0               	movwi [0]fsr1
  6992  0741  0827               	movf	?_readAnalog+1,w
  6993  0742  3FC1               	movwi [1]fsr1
  6994  0743  3001               	movlw	1
  6995  0744  0021               	movlb	1	; select bank1
  6996  0745  00C5               	movwf	??_main^(0+128)
  6997  0746  0845               	movf	??_main^(0+128),w
  6998  0747  07DD               	addwf	main@j^(0+128),f
  6999  0748  3002               	movlw	2
  7000  0749  025D               	subwf	main@j^(0+128),w
  7001  074A  1C03               	skipc
  7002  074B  2F2C               	goto	l3192
  7003  074C                     l3198:	
  7004                           
  7005                           ;main.c: 165: analogs[0]=tempCalc(analogs[0]);
  7006  074C  085A               	movf	(main@analogs+1)^(0+128),w
  7007  074D  0020               	movlb	0	; select bank0
  7008  074E  00DE               	movwf	tempCalc@analogValue+1
  7009  074F  0021               	movlb	1	; select bank1
  7010  0750  0859               	movf	main@analogs^(0+128),w
  7011  0751  0020               	movlb	0	; select bank0
  7012  0752  00DD               	movwf	tempCalc@analogValue
  7013  0753  3180  20A2  3185   	fcall	_tempCalc
  7014  0756  0020               	movlb	0	; select bank0
  7015  0757  085E               	movf	?_tempCalc+1,w
  7016  0758  0021               	movlb	1	; select bank1
  7017  0759  00DA               	movwf	(main@analogs+1)^(0+128)
  7018  075A  0020               	movlb	0	; select bank0
  7019  075B  085D               	movf	?_tempCalc,w
  7020  075C  0021               	movlb	1	; select bank1
  7021  075D  00D9               	movwf	main@analogs^(0+128)
  7022                           
  7023                           ;main.c: 167: analogs[1]=tempCalc(analogs[1]);
  7024  075E  085C               	movf	((main@analogs+1)^(0+128)+2),w
  7025  075F  0020               	movlb	0	; select bank0
  7026  0760  00DE               	movwf	tempCalc@analogValue+1
  7027  0761  0021               	movlb	1	; select bank1
  7028  0762  085B               	movf	(main@analogs^(0+128)+2),w
  7029  0763  0020               	movlb	0	; select bank0
  7030  0764  00DD               	movwf	tempCalc@analogValue
  7031  0765  3180  20A2  3185   	fcall	_tempCalc
  7032  0768  0020               	movlb	0	; select bank0
  7033  0769  085E               	movf	?_tempCalc+1,w
  7034  076A  0021               	movlb	1	; select bank1
  7035  076B  00DC               	movwf	((main@analogs+1)^(0+128)+2)
  7036  076C  0020               	movlb	0	; select bank0
  7037  076D  085D               	movf	?_tempCalc,w
  7038  076E  0021               	movlb	1	; select bank1
  7039  076F  00DB               	movwf	(main@analogs^(0+128)+2)
  7040                           
  7041                           ;main.c: 170: if(RB2==1)
  7042  0770  0020               	movlb	0	; select bank0
  7043  0771  1D0D               	btfss	13,2	;volatile
  7044  0772  2FB1               	goto	l3216
  7045                           
  7046                           ;main.c: 171: {
  7047                           ;main.c: 172: LCD_Clear();
  7048  0773  3196  263A  3185   	fcall	_LCD_Clear
  7049                           
  7050                           ;main.c: 173: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7051  0776  01F4               	clrf	LCD_Set_Cursor@y
  7052  0777  3000               	movlw	0
  7053  0778  3188  2080  3185   	fcall	_LCD_Set_Cursor
  7054  077B  301B               	movlw	low (STR_8| (0+32768))
  7055  077C  00F5               	movwf	LCD_Write_String@a
  7056  077D  3090               	movlw	high (STR_8| (0+32768))
  7057  077E  00F6               	movwf	LCD_Write_String@a+1
  7058  077F  3196  26EE  3185   	fcall	_LCD_Write_String
  7059                           
  7060                           ;main.c: 174: { LCD_Set_Cursor(0,1); LCD_Write_String("Enter Key to Set");};
  7061  0782  01F4               	clrf	LCD_Set_Cursor@y
  7062  0783  0AF4               	incf	LCD_Set_Cursor@y,f
  7063  0784  3000               	movlw	0
  7064  0785  3188  2080  3185   	fcall	_LCD_Set_Cursor
  7065  0788  302C               	movlw	low (STR_9| (0+32768))
  7066  0789  00F5               	movwf	LCD_Write_String@a
  7067  078A  3090               	movlw	high (STR_9| (0+32768))
  7068  078B  00F6               	movwf	LCD_Write_String@a+1
  7069  078C  3196  26EE  3185   	fcall	_LCD_Write_String
  7070                           
  7071                           ;main.c: 175: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7072  078F  303D               	movlw	61
  7073  0790  0021               	movlb	1	; select bank1
  7074  0791  00C7               	movwf	(??_main^(0+128)+2)
  7075  0792  30E1               	movlw	225
  7076  0793  00C6               	movwf	(??_main^(0+128)+1)
  7077  0794  307A               	movlw	122
  7078  0795  00C5               	movwf	??_main^(0+128)
  7079  0796                     u3667:	
  7080  0796  0BC5               	decfsz	??_main^(0+128),f
  7081  0797  2F96               	goto	u3667
  7082  0798  0BC6               	decfsz	(??_main^(0+128)+1),f
  7083  0799  2F96               	goto	u3667
  7084  079A  0BC7               	decfsz	(??_main^(0+128)+2),f
  7085  079B  2F96               	goto	u3667
  7086  079C  3200               	nop2
  7087                           
  7088                           ;main.c: 176: LCD_Clear();
  7089  079D  3196  263A  3185   	fcall	_LCD_Clear
  7090                           
  7091                           ;main.c: 177: menuChoice();
  7092  07A0  3182  22FC  3185   	fcall	_menuChoice
  7093                           
  7094                           ;main.c: 178: _delay((unsigned long)((500)*(32000000/4000.0)));
  7095  07A3  3015               	movlw	21
  7096  07A4  0021               	movlb	1	; select bank1
  7097  07A5  00C7               	movwf	(??_main^(0+128)+2)
  7098  07A6  304B               	movlw	75
  7099  07A7  00C6               	movwf	(??_main^(0+128)+1)
  7100  07A8  30D1               	movlw	209
  7101  07A9  00C5               	movwf	??_main^(0+128)
  7102  07AA                     u3677:	
  7103  07AA  0BC5               	decfsz	??_main^(0+128),f
  7104  07AB  2FAA               	goto	u3677
  7105  07AC  0BC6               	decfsz	(??_main^(0+128)+1),f
  7106  07AD  2FAA               	goto	u3677
  7107  07AE  0BC7               	decfsz	(??_main^(0+128)+2),f
  7108  07AF  2FAA               	goto	u3677
  7109  07B0  0000               	nop
  7110  07B1                     l3216:	
  7111                           
  7112                           ;main.c: 179: }
  7113                           ;main.c: 415: loop+=1;
  7114  07B1  3001               	movlw	1
  7115  07B2  0021               	movlb	1	; select bank1
  7116  07B3  00C5               	movwf	??_main^(0+128)
  7117  07B4  0845               	movf	??_main^(0+128),w
  7118  07B5  07EE               	addwf	_loop^(0+128),f
  7119  07B6  2D98               	goto	l3108
  7120  07B7                     __end_of_main:	
  7121                           
  7122                           	psect	text1
  7123  00A2                     __ptext1:	
  7124 ;; *************** function _tempCalc *****************
  7125 ;; Defined at:
  7126 ;;		line 4 in file "tempCalc.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  analogValue     2   61[BANK0 ] int 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;  steinhart       3   69[BANK0 ] float 
  7131 ;;  R               3   63[BANK0 ] float 
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  2   61[BANK0 ] int 
  7134 ;; Registers used:
  7135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7142 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7144 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7145 ;;Total ram usage:       11 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    4
  7148 ;; This function calls:
  7149 ;;		___awtoft
  7150 ;;		___ftadd
  7151 ;;		___ftdiv
  7152 ;;		___ftmul
  7153 ;;		___ftsub
  7154 ;;		___fttol
  7155 ;;		_log
  7156 ;; This function is called by:
  7157 ;;		_main
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           
  7162                           ;psect for function _tempCalc
  7163  00A2                     _tempCalc:	
  7164                           
  7165                           ;tempCalc.c: 6: float R, steinhart;
  7166                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7167                           
  7168                           ;incstack = 0
  7169                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7170  00A2  3000               	movlw	0
  7171  00A3  0020               	movlb	0	; select bank0
  7172  00A4  00C0               	movwf	___ftadd@f1
  7173  00A5  3080               	movlw	128
  7174  00A6  00C1               	movwf	___ftadd@f1+1
  7175  00A7  30BF               	movlw	191
  7176  00A8  00C2               	movwf	___ftadd@f1+2
  7177  00A9  085E               	movf	tempCalc@analogValue+1,w
  7178  00AA  00F9               	movwf	___awtoft@c+1
  7179  00AB  085D               	movf	tempCalc@analogValue,w
  7180  00AC  00F8               	movwf	___awtoft@c
  7181  00AD  3197  275D  3180   	fcall	___awtoft
  7182  00B0  0878               	movf	?___awtoft,w
  7183  00B1  0020               	movlb	0	; select bank0
  7184  00B2  00B0               	movwf	___ftdiv@f2
  7185  00B3  0879               	movf	?___awtoft+1,w
  7186  00B4  00B1               	movwf	___ftdiv@f2+1
  7187  00B5  087A               	movf	?___awtoft+2,w
  7188  00B6  00B2               	movwf	___ftdiv@f2+2
  7189  00B7  30C0               	movlw	192
  7190  00B8  00B3               	movwf	___ftdiv@f1
  7191  00B9  307F               	movlw	127
  7192  00BA  00B4               	movwf	___ftdiv@f1+1
  7193  00BB  3044               	movlw	68
  7194  00BC  00B5               	movwf	___ftdiv@f1+2
  7195  00BD  318B  2363  3180   	fcall	___ftdiv
  7196  00C0  0020               	movlb	0	; select bank0
  7197  00C1  0830               	movf	?___ftdiv,w
  7198  00C2  00C3               	movwf	___ftadd@f2
  7199  00C3  0831               	movf	?___ftdiv+1,w
  7200  00C4  00C4               	movwf	___ftadd@f2+1
  7201  00C5  0832               	movf	?___ftdiv+2,w
  7202  00C6  00C5               	movwf	___ftadd@f2+2
  7203  00C7  318F  270A  3180   	fcall	___ftadd
  7204  00CA  0020               	movlb	0	; select bank0
  7205  00CB  0840               	movf	?___ftadd,w
  7206  00CC  00E2               	movwf	_tempCalc$1011
  7207  00CD  0841               	movf	?___ftadd+1,w
  7208  00CE  00E3               	movwf	_tempCalc$1011+1
  7209  00CF  0842               	movf	?___ftadd+2,w
  7210  00D0  00E4               	movwf	_tempCalc$1011+2
  7211                           
  7212                           ;tempCalc.c: 6: float R, steinhart;
  7213                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7214  00D1  0862               	movf	_tempCalc$1011,w
  7215  00D2  00B0               	movwf	___ftdiv@f2
  7216  00D3  0863               	movf	_tempCalc$1011+1,w
  7217  00D4  00B1               	movwf	___ftdiv@f2+1
  7218  00D5  0864               	movf	_tempCalc$1011+2,w
  7219  00D6  00B2               	movwf	___ftdiv@f2+2
  7220  00D7  3088               	movlw	136
  7221  00D8  00B3               	movwf	___ftdiv@f1
  7222  00D9  301A               	movlw	26
  7223  00DA  00B4               	movwf	___ftdiv@f1+1
  7224  00DB  3046               	movlw	70
  7225  00DC  00B5               	movwf	___ftdiv@f1+2
  7226  00DD  318B  2363  3180   	fcall	___ftdiv
  7227  00E0  0020               	movlb	0	; select bank0
  7228  00E1  0830               	movf	?___ftdiv,w
  7229  00E2  00DF               	movwf	tempCalc@R
  7230  00E3  0831               	movf	?___ftdiv+1,w
  7231  00E4  00E0               	movwf	tempCalc@R+1
  7232  00E5  0832               	movf	?___ftdiv+2,w
  7233  00E6  00E1               	movwf	tempCalc@R+2
  7234                           
  7235                           ;tempCalc.c: 10: steinhart = R /9990;
  7236  00E7  3018               	movlw	24
  7237  00E8  00B0               	movwf	___ftdiv@f2
  7238  00E9  301C               	movlw	28
  7239  00EA  00B1               	movwf	___ftdiv@f2+1
  7240  00EB  3046               	movlw	70
  7241  00EC  00B2               	movwf	___ftdiv@f2+2
  7242  00ED  085F               	movf	tempCalc@R,w
  7243  00EE  00B3               	movwf	___ftdiv@f1
  7244  00EF  0860               	movf	tempCalc@R+1,w
  7245  00F0  00B4               	movwf	___ftdiv@f1+1
  7246  00F1  0861               	movf	tempCalc@R+2,w
  7247  00F2  00B5               	movwf	___ftdiv@f1+2
  7248  00F3  318B  2363  3180   	fcall	___ftdiv
  7249  00F6  0020               	movlb	0	; select bank0
  7250  00F7  0830               	movf	?___ftdiv,w
  7251  00F8  00E5               	movwf	tempCalc@steinhart
  7252  00F9  0831               	movf	?___ftdiv+1,w
  7253  00FA  00E6               	movwf	tempCalc@steinhart+1
  7254  00FB  0832               	movf	?___ftdiv+2,w
  7255  00FC  00E7               	movwf	tempCalc@steinhart+2
  7256                           
  7257                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7258  00FD  0865               	movf	tempCalc@steinhart,w
  7259  00FE  00D7               	movwf	log@x
  7260  00FF  0866               	movf	tempCalc@steinhart+1,w
  7261  0100  00D8               	movwf	log@x+1
  7262  0101  0867               	movf	tempCalc@steinhart+2,w
  7263  0102  00D9               	movwf	log@x+2
  7264  0103  318C  240C  3180   	fcall	_log
  7265  0106  0020               	movlb	0	; select bank0
  7266  0107  0857               	movf	?_log,w
  7267  0108  00E5               	movwf	tempCalc@steinhart
  7268  0109  0858               	movf	?_log+1,w
  7269  010A  00E6               	movwf	tempCalc@steinhart+1
  7270  010B  0859               	movf	?_log+2,w
  7271  010C  00E7               	movwf	tempCalc@steinhart+2
  7272                           
  7273                           ;tempCalc.c: 12: steinhart /= 4030;
  7274  010D  30E0               	movlw	224
  7275  010E  00B0               	movwf	___ftdiv@f2
  7276  010F  307B               	movlw	123
  7277  0110  00B1               	movwf	___ftdiv@f2+1
  7278  0111  3045               	movlw	69
  7279  0112  00B2               	movwf	___ftdiv@f2+2
  7280  0113  0865               	movf	tempCalc@steinhart,w
  7281  0114  00B3               	movwf	___ftdiv@f1
  7282  0115  0866               	movf	tempCalc@steinhart+1,w
  7283  0116  00B4               	movwf	___ftdiv@f1+1
  7284  0117  0867               	movf	tempCalc@steinhart+2,w
  7285  0118  00B5               	movwf	___ftdiv@f1+2
  7286  0119  318B  2363  3180   	fcall	___ftdiv
  7287  011C  0020               	movlb	0	; select bank0
  7288  011D  0830               	movf	?___ftdiv,w
  7289  011E  00E5               	movwf	tempCalc@steinhart
  7290  011F  0831               	movf	?___ftdiv+1,w
  7291  0120  00E6               	movwf	tempCalc@steinhart+1
  7292  0121  0832               	movf	?___ftdiv+2,w
  7293  0122  00E7               	movwf	tempCalc@steinhart+2
  7294                           
  7295                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  7296  0123  30CF               	movlw	207
  7297  0124  00C0               	movwf	___ftadd@f1
  7298  0125  305B               	movlw	91
  7299  0126  00C1               	movwf	___ftadd@f1+1
  7300  0127  303B               	movlw	59
  7301  0128  00C2               	movwf	___ftadd@f1+2
  7302  0129  0865               	movf	tempCalc@steinhart,w
  7303  012A  00C3               	movwf	___ftadd@f2
  7304  012B  0866               	movf	tempCalc@steinhart+1,w
  7305  012C  00C4               	movwf	___ftadd@f2+1
  7306  012D  0867               	movf	tempCalc@steinhart+2,w
  7307  012E  00C5               	movwf	___ftadd@f2+2
  7308  012F  318F  270A  3180   	fcall	___ftadd
  7309  0132  0020               	movlb	0	; select bank0
  7310  0133  0840               	movf	?___ftadd,w
  7311  0134  00E5               	movwf	tempCalc@steinhart
  7312  0135  0841               	movf	?___ftadd+1,w
  7313  0136  00E6               	movwf	tempCalc@steinhart+1
  7314  0137  0842               	movf	?___ftadd+2,w
  7315  0138  00E7               	movwf	tempCalc@steinhart+2
  7316                           
  7317                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  7318  0139  0865               	movf	tempCalc@steinhart,w
  7319  013A  00B0               	movwf	___ftdiv@f2
  7320  013B  0866               	movf	tempCalc@steinhart+1,w
  7321  013C  00B1               	movwf	___ftdiv@f2+1
  7322  013D  0867               	movf	tempCalc@steinhart+2,w
  7323  013E  00B2               	movwf	___ftdiv@f2+2
  7324  013F  3000               	movlw	0
  7325  0140  00B3               	movwf	___ftdiv@f1
  7326  0141  3080               	movlw	128
  7327  0142  00B4               	movwf	___ftdiv@f1+1
  7328  0143  303F               	movlw	63
  7329  0144  00B5               	movwf	___ftdiv@f1+2
  7330  0145  318B  2363  3180   	fcall	___ftdiv
  7331  0148  0020               	movlb	0	; select bank0
  7332  0149  0830               	movf	?___ftdiv,w
  7333  014A  00E5               	movwf	tempCalc@steinhart
  7334  014B  0831               	movf	?___ftdiv+1,w
  7335  014C  00E6               	movwf	tempCalc@steinhart+1
  7336  014D  0832               	movf	?___ftdiv+2,w
  7337  014E  00E7               	movwf	tempCalc@steinhart+2
  7338                           
  7339                           ;tempCalc.c: 17: steinhart -= 273.15;
  7340  014F  3093               	movlw	147
  7341  0150  00CD               	movwf	___ftsub@f2
  7342  0151  3088               	movlw	136
  7343  0152  00CE               	movwf	___ftsub@f2+1
  7344  0153  3043               	movlw	67
  7345  0154  00CF               	movwf	___ftsub@f2+2
  7346  0155  0865               	movf	tempCalc@steinhart,w
  7347  0156  00D0               	movwf	___ftsub@f1
  7348  0157  0866               	movf	tempCalc@steinhart+1,w
  7349  0158  00D1               	movwf	___ftsub@f1+1
  7350  0159  0867               	movf	tempCalc@steinhart+2,w
  7351  015A  00D2               	movwf	___ftsub@f1+2
  7352  015B  3197  273F  3180   	fcall	___ftsub
  7353  015E  0020               	movlb	0	; select bank0
  7354  015F  084D               	movf	?___ftsub,w
  7355  0160  00E5               	movwf	tempCalc@steinhart
  7356  0161  084E               	movf	?___ftsub+1,w
  7357  0162  00E6               	movwf	tempCalc@steinhart+1
  7358  0163  084F               	movf	?___ftsub+2,w
  7359  0164  00E7               	movwf	tempCalc@steinhart+2
  7360                           
  7361                           ;tempCalc.c: 19: steinhart*=10;
  7362  0165  3000               	movlw	0
  7363  0166  00A0               	movwf	___ftmul@f1
  7364  0167  3020               	movlw	32
  7365  0168  00A1               	movwf	___ftmul@f1+1
  7366  0169  3041               	movlw	65
  7367  016A  00A2               	movwf	___ftmul@f1+2
  7368  016B  0865               	movf	tempCalc@steinhart,w
  7369  016C  00A3               	movwf	___ftmul@f2
  7370  016D  0866               	movf	tempCalc@steinhart+1,w
  7371  016E  00A4               	movwf	___ftmul@f2+1
  7372  016F  0867               	movf	tempCalc@steinhart+2,w
  7373  0170  00A5               	movwf	___ftmul@f2+2
  7374  0171  318C  24BC  3180   	fcall	___ftmul
  7375  0174  0020               	movlb	0	; select bank0
  7376  0175  0820               	movf	?___ftmul,w
  7377  0176  00E5               	movwf	tempCalc@steinhart
  7378  0177  0821               	movf	?___ftmul+1,w
  7379  0178  00E6               	movwf	tempCalc@steinhart+1
  7380  0179  0822               	movf	?___ftmul+2,w
  7381  017A  00E7               	movwf	tempCalc@steinhart+2
  7382                           
  7383                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  7384  017B  3000               	movlw	0
  7385  017C  00C0               	movwf	___ftadd@f1
  7386  017D  30A0               	movlw	160
  7387  017E  00C1               	movwf	___ftadd@f1+1
  7388  017F  3043               	movlw	67
  7389  0180  00C2               	movwf	___ftadd@f1+2
  7390  0181  3000               	movlw	0
  7391  0182  00B0               	movwf	___ftdiv@f2
  7392  0183  30A0               	movlw	160
  7393  0184  00B1               	movwf	___ftdiv@f2+1
  7394  0185  3040               	movlw	64
  7395  0186  00B2               	movwf	___ftdiv@f2+2
  7396  0187  3000               	movlw	0
  7397  0188  00A0               	movwf	___ftmul@f1
  7398  0189  3010               	movlw	16
  7399  018A  00A1               	movwf	___ftmul@f1+1
  7400  018B  3041               	movlw	65
  7401  018C  00A2               	movwf	___ftmul@f1+2
  7402  018D  0865               	movf	tempCalc@steinhart,w
  7403  018E  00A3               	movwf	___ftmul@f2
  7404  018F  0866               	movf	tempCalc@steinhart+1,w
  7405  0190  00A4               	movwf	___ftmul@f2+1
  7406  0191  0867               	movf	tempCalc@steinhart+2,w
  7407  0192  00A5               	movwf	___ftmul@f2+2
  7408  0193  318C  24BC  3180   	fcall	___ftmul
  7409  0196  0020               	movlb	0	; select bank0
  7410  0197  0820               	movf	?___ftmul,w
  7411  0198  00B3               	movwf	___ftdiv@f1
  7412  0199  0821               	movf	?___ftmul+1,w
  7413  019A  00B4               	movwf	___ftdiv@f1+1
  7414  019B  0822               	movf	?___ftmul+2,w
  7415  019C  00B5               	movwf	___ftdiv@f1+2
  7416  019D  318B  2363  3180   	fcall	___ftdiv
  7417  01A0  0020               	movlb	0	; select bank0
  7418  01A1  0830               	movf	?___ftdiv,w
  7419  01A2  00C3               	movwf	___ftadd@f2
  7420  01A3  0831               	movf	?___ftdiv+1,w
  7421  01A4  00C4               	movwf	___ftadd@f2+1
  7422  01A5  0832               	movf	?___ftdiv+2,w
  7423  01A6  00C5               	movwf	___ftadd@f2+2
  7424  01A7  318F  270A  3180   	fcall	___ftadd
  7425  01AA  0020               	movlb	0	; select bank0
  7426  01AB  0840               	movf	?___ftadd,w
  7427  01AC  00E5               	movwf	tempCalc@steinhart
  7428  01AD  0841               	movf	?___ftadd+1,w
  7429  01AE  00E6               	movwf	tempCalc@steinhart+1
  7430  01AF  0842               	movf	?___ftadd+2,w
  7431  01B0  00E7               	movwf	tempCalc@steinhart+2
  7432                           
  7433                           ;tempCalc.c: 23: return (int)steinhart;
  7434  01B1  0865               	movf	tempCalc@steinhart,w
  7435  01B2  00F0               	movwf	___fttol@f1
  7436  01B3  0866               	movf	tempCalc@steinhart+1,w
  7437  01B4  00F1               	movwf	___fttol@f1+1
  7438  01B5  0867               	movf	tempCalc@steinhart+2,w
  7439  01B6  00F2               	movwf	___fttol@f1+2
  7440  01B7  318A  22DD         	fcall	___fttol
  7441  01B9  0871               	movf	?___fttol+1,w
  7442  01BA  0020               	movlb	0	; select bank0
  7443  01BB  00DE               	movwf	?_tempCalc+1
  7444  01BC  0870               	movf	?___fttol,w
  7445  01BD  00DD               	movwf	?_tempCalc
  7446  01BE  0008               	return
  7447  01BF                     __end_of_tempCalc:	
  7448                           
  7449                           	psect	text2
  7450  0C0C                     __ptext2:	
  7451 ;; *************** function _log *****************
  7452 ;; Defined at:
  7453 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  x               3   55[BANK0 ] int 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  exponent        2   59[BANK0 ] int 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  3   55[BANK0 ] int 
  7460 ;; Registers used:
  7461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7467 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7468 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;Total ram usage:        6 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    3
  7474 ;; This function calls:
  7475 ;;		___awtoft
  7476 ;;		___ftadd
  7477 ;;		___ftge
  7478 ;;		___ftmul
  7479 ;;		_eval_poly
  7480 ;;		_frexp
  7481 ;; This function is called by:
  7482 ;;		_tempCalc
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           
  7487                           ;psect for function _log
  7488  0C0C                     _log:	
  7489                           
  7490                           ;incstack = 0
  7491                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7492  0C0C  0020               	movlb	0	; select bank0
  7493  0C0D  0857               	movf	log@x,w
  7494  0C0E  00F0               	movwf	___ftge@ff1
  7495  0C0F  0858               	movf	log@x+1,w
  7496  0C10  00F1               	movwf	___ftge@ff1+1
  7497  0C11  0859               	movf	log@x+2,w
  7498  0C12  00F2               	movwf	___ftge@ff1+2
  7499  0C13  3000               	movlw	0
  7500  0C14  00F3               	movwf	___ftge@ff2
  7501  0C15  3000               	movlw	0
  7502  0C16  00F4               	movwf	___ftge@ff2+1
  7503  0C17  3000               	movlw	0
  7504  0C18  00F5               	movwf	___ftge@ff2+2
  7505  0C19  3188  200A  318C   	fcall	___ftge
  7506  0C1C  1803               	btfsc	3,0
  7507  0C1D  2C2B               	goto	l2672
  7508  0C1E  3021               	movlw	33
  7509  0C1F  0021               	movlb	1	; select bank1
  7510  0C20  00AE               	movwf	_errno^(0+128)
  7511  0C21  3000               	movlw	0
  7512  0C22  00AF               	movwf	(_errno^(0+128)+1)
  7513  0C23  3000               	movlw	0
  7514  0C24  0020               	movlb	0	; select bank0
  7515  0C25  00D7               	movwf	?_log
  7516  0C26  3000               	movlw	0
  7517  0C27  00D8               	movwf	?_log+1
  7518  0C28  3000               	movlw	0
  7519  0C29  00D9               	movwf	?_log+2
  7520  0C2A  0008               	return
  7521  0C2B                     l2672:	
  7522  0C2B  0020               	movlb	0	; select bank0
  7523  0C2C  0859               	movf	log@x+2,w
  7524  0C2D  0458               	iorwf	log@x+1,w
  7525  0C2E  0457               	iorwf	log@x,w
  7526  0C2F  1D03               	skipz
  7527  0C30  2C3E               	goto	l2678
  7528  0C31  3022               	movlw	34
  7529  0C32  0021               	movlb	1	; select bank1
  7530  0C33  00AE               	movwf	_errno^(0+128)
  7531  0C34  3000               	movlw	0
  7532  0C35  00AF               	movwf	(_errno^(0+128)+1)
  7533  0C36  3000               	movlw	0
  7534  0C37  0020               	movlb	0	; select bank0
  7535  0C38  00D7               	movwf	?_log
  7536  0C39  3000               	movlw	0
  7537  0C3A  00D8               	movwf	?_log+1
  7538  0C3B  3000               	movlw	0
  7539  0C3C  00D9               	movwf	?_log+2
  7540  0C3D  0008               	return
  7541  0C3E                     l2678:	
  7542  0C3E  3000               	movlw	0
  7543  0C3F  00C0               	movwf	___ftadd@f1
  7544  0C40  3080               	movlw	128
  7545  0C41  00C1               	movwf	___ftadd@f1+1
  7546  0C42  30BF               	movlw	191
  7547  0C43  00C2               	movwf	___ftadd@f1+2
  7548  0C44  3000               	movlw	0
  7549  0C45  00A0               	movwf	___ftmul@f1
  7550  0C46  3000               	movlw	0
  7551  0C47  00A1               	movwf	___ftmul@f1+1
  7552  0C48  3040               	movlw	64
  7553  0C49  00A2               	movwf	___ftmul@f1+2
  7554  0C4A  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7555  0C4B  00DA               	movwf	??_log
  7556  0C4C  085A               	movf	??_log,w
  7557  0C4D  00F3               	movwf	frexp@eptr
  7558  0C4E  0857               	movf	log@x,w
  7559  0C4F  00F0               	movwf	frexp@value
  7560  0C50  0858               	movf	log@x+1,w
  7561  0C51  00F1               	movwf	frexp@value+1
  7562  0C52  0859               	movf	log@x+2,w
  7563  0C53  00F2               	movwf	frexp@value+2
  7564  0C54  3188  2045  318C   	fcall	_frexp
  7565  0C57  0870               	movf	?_frexp,w
  7566  0C58  0020               	movlb	0	; select bank0
  7567  0C59  00A3               	movwf	___ftmul@f2
  7568  0C5A  0871               	movf	?_frexp+1,w
  7569  0C5B  00A4               	movwf	___ftmul@f2+1
  7570  0C5C  0872               	movf	?_frexp+2,w
  7571  0C5D  00A5               	movwf	___ftmul@f2+2
  7572  0C5E  318C  24BC  318C   	fcall	___ftmul
  7573  0C61  0020               	movlb	0	; select bank0
  7574  0C62  0820               	movf	?___ftmul,w
  7575  0C63  00C3               	movwf	___ftadd@f2
  7576  0C64  0821               	movf	?___ftmul+1,w
  7577  0C65  00C4               	movwf	___ftadd@f2+1
  7578  0C66  0822               	movf	?___ftmul+2,w
  7579  0C67  00C5               	movwf	___ftadd@f2+2
  7580  0C68  318F  270A  318C   	fcall	___ftadd
  7581  0C6B  0020               	movlb	0	; select bank0
  7582  0C6C  0840               	movf	?___ftadd,w
  7583  0C6D  00D7               	movwf	log@x
  7584  0C6E  0841               	movf	?___ftadd+1,w
  7585  0C6F  00D8               	movwf	log@x+1
  7586  0C70  0842               	movf	?___ftadd+2,w
  7587  0C71  00D9               	movwf	log@x+2
  7588  0C72  30FF               	movlw	255
  7589  0C73  07DB               	addwf	log@exponent,f
  7590  0C74  30FF               	movlw	255
  7591  0C75  3DDC               	addwfc	log@exponent+1,f
  7592  0C76  0857               	movf	log@x,w
  7593  0C77  00CD               	movwf	eval_poly@x
  7594  0C78  0858               	movf	log@x+1,w
  7595  0C79  00CE               	movwf	eval_poly@x+1
  7596  0C7A  0859               	movf	log@x+2,w
  7597  0C7B  00CF               	movwf	eval_poly@x+2
  7598  0C7C  3000               	movlw	low (log@coeff| (0+32768))
  7599  0C7D  00D0               	movwf	eval_poly@d
  7600  0C7E  3090               	movlw	high (log@coeff| (0+32768))
  7601  0C7F  00D1               	movwf	eval_poly@d+1
  7602  0C80  3008               	movlw	8
  7603  0C81  00D2               	movwf	eval_poly@n
  7604  0C82  3000               	movlw	0
  7605  0C83  00D3               	movwf	eval_poly@n+1
  7606  0C84  3189  2197  318C   	fcall	_eval_poly
  7607  0C87  0020               	movlb	0	; select bank0
  7608  0C88  084D               	movf	?_eval_poly,w
  7609  0C89  00D7               	movwf	log@x
  7610  0C8A  084E               	movf	?_eval_poly+1,w
  7611  0C8B  00D8               	movwf	log@x+1
  7612  0C8C  084F               	movf	?_eval_poly+2,w
  7613  0C8D  00D9               	movwf	log@x+2
  7614  0C8E  0857               	movf	log@x,w
  7615  0C8F  00C0               	movwf	___ftadd@f1
  7616  0C90  0858               	movf	log@x+1,w
  7617  0C91  00C1               	movwf	___ftadd@f1+1
  7618  0C92  0859               	movf	log@x+2,w
  7619  0C93  00C2               	movwf	___ftadd@f1+2
  7620  0C94  3072               	movlw	114
  7621  0C95  00A0               	movwf	___ftmul@f1
  7622  0C96  3031               	movlw	49
  7623  0C97  00A1               	movwf	___ftmul@f1+1
  7624  0C98  303F               	movlw	63
  7625  0C99  00A2               	movwf	___ftmul@f1+2
  7626  0C9A  085C               	movf	log@exponent+1,w
  7627  0C9B  00F9               	movwf	___awtoft@c+1
  7628  0C9C  085B               	movf	log@exponent,w
  7629  0C9D  00F8               	movwf	___awtoft@c
  7630  0C9E  3197  275D  318C   	fcall	___awtoft
  7631  0CA1  0878               	movf	?___awtoft,w
  7632  0CA2  0020               	movlb	0	; select bank0
  7633  0CA3  00A3               	movwf	___ftmul@f2
  7634  0CA4  0879               	movf	?___awtoft+1,w
  7635  0CA5  00A4               	movwf	___ftmul@f2+1
  7636  0CA6  087A               	movf	?___awtoft+2,w
  7637  0CA7  00A5               	movwf	___ftmul@f2+2
  7638  0CA8  318C  24BC  318C   	fcall	___ftmul
  7639  0CAB  0020               	movlb	0	; select bank0
  7640  0CAC  0820               	movf	?___ftmul,w
  7641  0CAD  00C3               	movwf	___ftadd@f2
  7642  0CAE  0821               	movf	?___ftmul+1,w
  7643  0CAF  00C4               	movwf	___ftadd@f2+1
  7644  0CB0  0822               	movf	?___ftmul+2,w
  7645  0CB1  00C5               	movwf	___ftadd@f2+2
  7646  0CB2  318F  270A         	fcall	___ftadd
  7647  0CB4  0020               	movlb	0	; select bank0
  7648  0CB5  0840               	movf	?___ftadd,w
  7649  0CB6  00D7               	movwf	?_log
  7650  0CB7  0841               	movf	?___ftadd+1,w
  7651  0CB8  00D8               	movwf	?_log+1
  7652  0CB9  0842               	movf	?___ftadd+2,w
  7653  0CBA  00D9               	movwf	?_log+2
  7654  0CBB  0008               	return
  7655  0CBC                     __end_of_log:	
  7656                           
  7657                           	psect	text3
  7658  0845                     __ptext3:	
  7659 ;; *************** function _frexp *****************
  7660 ;; Defined at:
  7661 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  value           3    0[COMMON] int 
  7664 ;;  eptr            1    3[COMMON] PTR int 
  7665 ;;		 -> log@exponent(2), 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  3    0[COMMON] PTR int 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;Total ram usage:        6 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_log
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           
  7691                           ;psect for function _frexp
  7692  0845                     _frexp:	
  7693                           
  7694                           ;incstack = 0
  7695                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7696  0845  0872               	movf	frexp@value+2,w
  7697  0846  0471               	iorwf	frexp@value+1,w
  7698  0847  0470               	iorwf	frexp@value,w
  7699  0848  1D03               	skipz
  7700  0849  2857               	goto	l2422
  7701  084A  0873               	movf	frexp@eptr,w
  7702  084B  0086               	movwf	6
  7703  084C  0187               	clrf	7
  7704  084D  3000               	movlw	0
  7705  084E  3FC0               	movwi [0]fsr1
  7706  084F  3FC1               	movwi [1]fsr1
  7707  0850  3000               	movlw	0
  7708  0851  00F0               	movwf	?_frexp
  7709  0852  3000               	movlw	0
  7710  0853  00F1               	movwf	?_frexp+1
  7711  0854  3000               	movlw	0
  7712  0855  00F2               	movwf	?_frexp+2
  7713  0856  0008               	return
  7714  0857                     l2422:	
  7715  0857  0872               	movf	frexp@value+2,w
  7716  0858  397F               	andlw	127
  7717  0859  00F4               	movwf	??_frexp
  7718  085A  01F5               	clrf	??_frexp+1
  7719  085B  35F4               	lslf	??_frexp,f
  7720  085C  0DF5               	rlf	??_frexp+1,f
  7721  085D  0873               	movf	frexp@eptr,w
  7722  085E  0086               	movwf	6
  7723  085F  0187               	clrf	7
  7724  0860  0874               	movf	??_frexp,w
  7725  0861  3FC0               	movwi [0]fsr1
  7726  0862  0875               	movf	??_frexp+1,w
  7727  0863  3FC1               	movwi [1]fsr1
  7728  0864  0D71               	rlf	frexp@value+1,w
  7729  0865  0D71               	rlf	frexp@value+1,w
  7730  0866  3901               	andlw	1
  7731  0867  00F4               	movwf	??_frexp
  7732  0868  01F5               	clrf	??_frexp+1
  7733  0869  0873               	movf	frexp@eptr,w
  7734  086A  0086               	movwf	6
  7735  086B  0187               	clrf	7
  7736  086C  0874               	movf	??_frexp,w
  7737  086D  0481               	iorwf	1,f
  7738  086E  3141               	addfsr 1,1
  7739  086F  0875               	movf	??_frexp+1,w
  7740  0870  0481               	iorwf	1,f
  7741  0871  0873               	movf	frexp@eptr,w
  7742  0872  0086               	movwf	6
  7743  0873  0187               	clrf	7
  7744  0874  3082               	movlw	130
  7745  0875  0781               	addwf	1,f
  7746  0876  3141               	addfsr 1,1
  7747  0877  30FF               	movlw	255
  7748  0878  3D81               	addwfc	1,f
  7749  0879  317F               	addfsr 1,-1
  7750  087A  0872               	movf	frexp@value+2,w
  7751  087B  3980               	andlw	-128
  7752  087C  383F               	iorlw	63
  7753  087D  00F2               	movwf	frexp@value+2
  7754  087E  13F1               	bcf	frexp@value+1,7
  7755  087F  0008               	return
  7756  0880                     __end_of_frexp:	
  7757                           
  7758                           	psect	text4
  7759  0997                     __ptext4:	
  7760 ;; *************** function _eval_poly *****************
  7761 ;; Defined at:
  7762 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  x               3   45[BANK0 ] PTR int 
  7765 ;;  d               2   48[BANK0 ] PTR const 
  7766 ;;		 -> log@coeff(27), 
  7767 ;;  n               2   50[BANK0 ] int 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;  res             3   52[BANK0 ] int 
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  3   45[BANK0 ] int 
  7772 ;; Registers used:
  7773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7779 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;Total ram usage:       10 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    2
  7786 ;; This function calls:
  7787 ;;		___ftadd
  7788 ;;		___ftmul
  7789 ;;		___wmul
  7790 ;; This function is called by:
  7791 ;;		_log
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           
  7796                           ;psect for function _eval_poly
  7797  0997                     _eval_poly:	
  7798                           
  7799                           ;incstack = 0
  7800                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7801  0997  0020               	movlb	0	; select bank0
  7802  0998  0853               	movf	eval_poly@n+1,w
  7803  0999  00F1               	movwf	___wmul@multiplier+1
  7804  099A  0852               	movf	eval_poly@n,w
  7805  099B  00F0               	movwf	___wmul@multiplier
  7806  099C  3003               	movlw	3
  7807  099D  00F2               	movwf	___wmul@multiplicand
  7808  099E  3000               	movlw	0
  7809  099F  00F3               	movwf	___wmul@multiplicand+1
  7810  09A0  3197  2708  3189   	fcall	___wmul
  7811  09A3  0020               	movlb	0	; select bank0
  7812  09A4  0850               	movf	eval_poly@d,w
  7813  09A5  0770               	addwf	?___wmul,w
  7814  09A6  0084               	movwf	4
  7815  09A7  0851               	movf	eval_poly@d+1,w
  7816  09A8  3D71               	addwfc	?___wmul+1,w
  7817  09A9  0085               	movwf	5
  7818  09AA  3F00               	moviw [0]fsr0
  7819  09AB  00D4               	movwf	eval_poly@res
  7820  09AC  3F01               	moviw [1]fsr0
  7821  09AD  00D5               	movwf	eval_poly@res+1
  7822  09AE  3F02               	moviw [2]fsr0
  7823  09AF                     L1:	
  7824  09AF  00D6               	movwf	eval_poly@res+2
  7825  09B0  0852               	movf	eval_poly@n,w
  7826  09B1  0453               	iorwf	eval_poly@n+1,w
  7827  09B2  1903               	btfsc	3,2
  7828  09B3  29F0               	goto	l2440
  7829  09B4  30FF               	movlw	255
  7830  09B5  07D2               	addwf	eval_poly@n,f
  7831  09B6  30FF               	movlw	255
  7832  09B7  3DD3               	addwfc	eval_poly@n+1,f
  7833  09B8  0853               	movf	eval_poly@n+1,w
  7834  09B9  00F1               	movwf	___wmul@multiplier+1
  7835  09BA  0852               	movf	eval_poly@n,w
  7836  09BB  00F0               	movwf	___wmul@multiplier
  7837  09BC  3003               	movlw	3
  7838  09BD  00F2               	movwf	___wmul@multiplicand
  7839  09BE  3000               	movlw	0
  7840  09BF  00F3               	movwf	___wmul@multiplicand+1
  7841  09C0  3197  2708  3189   	fcall	___wmul
  7842  09C3  0020               	movlb	0	; select bank0
  7843  09C4  0850               	movf	eval_poly@d,w
  7844  09C5  0770               	addwf	?___wmul,w
  7845  09C6  0084               	movwf	4
  7846  09C7  0851               	movf	eval_poly@d+1,w
  7847  09C8  3D71               	addwfc	?___wmul+1,w
  7848  09C9  0085               	movwf	5
  7849  09CA  3F00               	moviw [0]fsr0
  7850  09CB  00C0               	movwf	___ftadd@f1
  7851  09CC  3F01               	moviw [1]fsr0
  7852  09CD  00C1               	movwf	___ftadd@f1+1
  7853  09CE  3F02               	moviw [2]fsr0
  7854  09CF  00C2               	movwf	___ftadd@f1+2
  7855  09D0  0854               	movf	eval_poly@res,w
  7856  09D1  00A0               	movwf	___ftmul@f1
  7857  09D2  0855               	movf	eval_poly@res+1,w
  7858  09D3  00A1               	movwf	___ftmul@f1+1
  7859  09D4  0856               	movf	eval_poly@res+2,w
  7860  09D5  00A2               	movwf	___ftmul@f1+2
  7861  09D6  084D               	movf	eval_poly@x,w
  7862  09D7  00A3               	movwf	___ftmul@f2
  7863  09D8  084E               	movf	eval_poly@x+1,w
  7864  09D9  00A4               	movwf	___ftmul@f2+1
  7865  09DA  084F               	movf	eval_poly@x+2,w
  7866  09DB  00A5               	movwf	___ftmul@f2+2
  7867  09DC  318C  24BC  3189   	fcall	___ftmul
  7868  09DF  0020               	movlb	0	; select bank0
  7869  09E0  0820               	movf	?___ftmul,w
  7870  09E1  00C3               	movwf	___ftadd@f2
  7871  09E2  0821               	movf	?___ftmul+1,w
  7872  09E3  00C4               	movwf	___ftadd@f2+1
  7873  09E4  0822               	movf	?___ftmul+2,w
  7874  09E5  00C5               	movwf	___ftadd@f2+2
  7875  09E6  318F  270A  3189   	fcall	___ftadd
  7876  09E9  0020               	movlb	0	; select bank0
  7877  09EA  0840               	movf	?___ftadd,w
  7878  09EB  00D4               	movwf	eval_poly@res
  7879  09EC  0841               	movf	?___ftadd+1,w
  7880  09ED  00D5               	movwf	eval_poly@res+1
  7881  09EE  0842               	movf	?___ftadd+2,w
  7882  09EF  29AF               	goto	L1
  7883  09F0                     l2440:	
  7884  09F0  0854               	movf	eval_poly@res,w
  7885  09F1  00CD               	movwf	?_eval_poly
  7886  09F2  0855               	movf	eval_poly@res+1,w
  7887  09F3  00CE               	movwf	?_eval_poly+1
  7888  09F4  0856               	movf	eval_poly@res+2,w
  7889  09F5  00CF               	movwf	?_eval_poly+2
  7890  09F6  0008               	return
  7891  09F7                     __end_of_eval_poly:	
  7892                           
  7893                           	psect	text5
  7894  0CBC                     __ptext5:	
  7895 ;; *************** function ___ftmul *****************
  7896 ;; Defined at:
  7897 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  f1              3    0[BANK0 ] float 
  7900 ;;  f2              3    3[BANK0 ] float 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7903 ;;  sign            1   15[BANK0 ] unsigned char 
  7904 ;;  cntr            1   14[BANK0 ] unsigned char 
  7905 ;;  exp             1   10[BANK0 ] unsigned char 
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  3    0[BANK0 ] float 
  7908 ;; Registers used:
  7909 ;;		wreg, status,2, status,0, pclath, cstack
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7915 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7916 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7917 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7918 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;Total ram usage:       16 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:    1
  7922 ;; This function calls:
  7923 ;;		___ftpack
  7924 ;; This function is called by:
  7925 ;;		_tempCalc
  7926 ;;		_log
  7927 ;;		_eval_poly
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           
  7932                           ;psect for function ___ftmul
  7933  0CBC                     ___ftmul:	
  7934                           
  7935                           ;incstack = 0
  7936                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7937  0CBC  0020               	movlb	0	; select bank0
  7938  0CBD  0820               	movf	___ftmul@f1,w
  7939  0CBE  00A6               	movwf	??___ftmul
  7940  0CBF  0821               	movf	___ftmul@f1+1,w
  7941  0CC0  00A7               	movwf	??___ftmul+1
  7942  0CC1  0822               	movf	___ftmul@f1+2,w
  7943  0CC2  00A8               	movwf	??___ftmul+2
  7944  0CC3  1003               	clrc
  7945  0CC4  0D27               	rlf	??___ftmul+1,w
  7946  0CC5  0D28               	rlf	??___ftmul+2,w
  7947  0CC6  00A9               	movwf	??___ftmul+3
  7948  0CC7  0829               	movf	??___ftmul+3,w
  7949  0CC8  00AA               	movwf	___ftmul@exp
  7950  0CC9  082A               	movf	___ftmul@exp,w
  7951  0CCA  1D03               	btfss	3,2
  7952  0CCB  2CD3               	goto	l2226
  7953  0CCC  3000               	movlw	0
  7954  0CCD  00A0               	movwf	?___ftmul
  7955  0CCE  3000               	movlw	0
  7956  0CCF  00A1               	movwf	?___ftmul+1
  7957  0CD0  3000               	movlw	0
  7958  0CD1  00A2               	movwf	?___ftmul+2
  7959  0CD2  0008               	return
  7960  0CD3                     l2226:	
  7961  0CD3  0823               	movf	___ftmul@f2,w
  7962  0CD4  00A6               	movwf	??___ftmul
  7963  0CD5  0824               	movf	___ftmul@f2+1,w
  7964  0CD6  00A7               	movwf	??___ftmul+1
  7965  0CD7  0825               	movf	___ftmul@f2+2,w
  7966  0CD8  00A8               	movwf	??___ftmul+2
  7967  0CD9  1003               	clrc
  7968  0CDA  0D27               	rlf	??___ftmul+1,w
  7969  0CDB  0D28               	rlf	??___ftmul+2,w
  7970  0CDC  00A9               	movwf	??___ftmul+3
  7971  0CDD  0829               	movf	??___ftmul+3,w
  7972  0CDE  00AF               	movwf	___ftmul@sign
  7973  0CDF  082F               	movf	___ftmul@sign,w
  7974  0CE0  1D03               	btfss	3,2
  7975  0CE1  2CE9               	goto	l2232
  7976  0CE2  3000               	movlw	0
  7977  0CE3  00A0               	movwf	?___ftmul
  7978  0CE4  3000               	movlw	0
  7979  0CE5  00A1               	movwf	?___ftmul+1
  7980  0CE6  3000               	movlw	0
  7981  0CE7  00A2               	movwf	?___ftmul+2
  7982  0CE8  0008               	return
  7983  0CE9                     l2232:	
  7984  0CE9  082F               	movf	___ftmul@sign,w
  7985  0CEA  3E7B               	addlw	123
  7986  0CEB  00A6               	movwf	??___ftmul
  7987  0CEC  0826               	movf	??___ftmul,w
  7988  0CED  07AA               	addwf	___ftmul@exp,f
  7989  0CEE  0820               	movf	___ftmul@f1,w
  7990  0CEF  00A6               	movwf	??___ftmul
  7991  0CF0  0821               	movf	___ftmul@f1+1,w
  7992  0CF1  00A7               	movwf	??___ftmul+1
  7993  0CF2  0822               	movf	___ftmul@f1+2,w
  7994  0CF3  00A8               	movwf	??___ftmul+2
  7995  0CF4  3010               	movlw	16
  7996  0CF5                     u2285:	
  7997  0CF5  36A8               	lsrf	??___ftmul+2,f
  7998  0CF6  0CA7               	rrf	??___ftmul+1,f
  7999  0CF7  0CA6               	rrf	??___ftmul,f
  8000  0CF8  0B89               	decfsz	9,f
  8001  0CF9  2CF5               	goto	u2285
  8002  0CFA  0826               	movf	??___ftmul,w
  8003  0CFB  00A9               	movwf	??___ftmul+3
  8004  0CFC  0829               	movf	??___ftmul+3,w
  8005  0CFD  00AF               	movwf	___ftmul@sign
  8006  0CFE  0823               	movf	___ftmul@f2,w
  8007  0CFF  00A6               	movwf	??___ftmul
  8008  0D00  0824               	movf	___ftmul@f2+1,w
  8009  0D01  00A7               	movwf	??___ftmul+1
  8010  0D02  0825               	movf	___ftmul@f2+2,w
  8011  0D03  00A8               	movwf	??___ftmul+2
  8012  0D04  3010               	movlw	16
  8013  0D05                     u2295:	
  8014  0D05  36A8               	lsrf	??___ftmul+2,f
  8015  0D06  0CA7               	rrf	??___ftmul+1,f
  8016  0D07  0CA6               	rrf	??___ftmul,f
  8017  0D08  0B89               	decfsz	9,f
  8018  0D09  2D05               	goto	u2295
  8019  0D0A  0826               	movf	??___ftmul,w
  8020  0D0B  00A9               	movwf	??___ftmul+3
  8021  0D0C  0829               	movf	??___ftmul+3,w
  8022  0D0D  06AF               	xorwf	___ftmul@sign,f
  8023  0D0E  3080               	movlw	128
  8024  0D0F  00A6               	movwf	??___ftmul
  8025  0D10  0826               	movf	??___ftmul,w
  8026  0D11  05AF               	andwf	___ftmul@sign,f
  8027  0D12  17A1               	bsf	___ftmul@f1+1,7
  8028  0D13  17A4               	bsf	___ftmul@f2+1,7
  8029  0D14  30FF               	movlw	255
  8030  0D15  05A3               	andwf	___ftmul@f2,f
  8031  0D16  30FF               	movlw	255
  8032  0D17  05A4               	andwf	___ftmul@f2+1,f
  8033  0D18  3000               	movlw	0
  8034  0D19  05A5               	andwf	___ftmul@f2+2,f
  8035  0D1A  3000               	movlw	0
  8036  0D1B  00AB               	movwf	___ftmul@f3_as_product
  8037  0D1C  3000               	movlw	0
  8038  0D1D  00AC               	movwf	___ftmul@f3_as_product+1
  8039  0D1E  3000               	movlw	0
  8040  0D1F  00AD               	movwf	___ftmul@f3_as_product+2
  8041  0D20  3007               	movlw	7
  8042  0D21  00A6               	movwf	??___ftmul
  8043  0D22  0826               	movf	??___ftmul,w
  8044  0D23  00AE               	movwf	___ftmul@cntr
  8045  0D24                     l2244:	
  8046  0D24  1C20               	btfss	___ftmul@f1,0
  8047  0D25  2D2C               	goto	l2248
  8048  0D26  0823               	movf	___ftmul@f2,w
  8049  0D27  07AB               	addwf	___ftmul@f3_as_product,f
  8050  0D28  0824               	movf	___ftmul@f2+1,w
  8051  0D29  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8052  0D2A  0825               	movf	___ftmul@f2+2,w
  8053  0D2B  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8054  0D2C                     l2248:	
  8055  0D2C  3001               	movlw	1
  8056  0D2D                     u2315:	
  8057  0D2D  36A2               	lsrf	___ftmul@f1+2,f
  8058  0D2E  0CA1               	rrf	___ftmul@f1+1,f
  8059  0D2F  0CA0               	rrf	___ftmul@f1,f
  8060  0D30  0B89               	decfsz	9,f
  8061  0D31  2D2D               	goto	u2315
  8062  0D32  3001               	movlw	1
  8063  0D33                     u2325:	
  8064  0D33  35A3               	lslf	___ftmul@f2,f
  8065  0D34  0DA4               	rlf	___ftmul@f2+1,f
  8066  0D35  0DA5               	rlf	___ftmul@f2+2,f
  8067  0D36  0B89               	decfsz	9,f
  8068  0D37  2D33               	goto	u2325
  8069  0D38  3001               	movlw	1
  8070  0D39  02AE               	subwf	___ftmul@cntr,f
  8071  0D3A  1D03               	btfss	3,2
  8072  0D3B  2D24               	goto	l2244
  8073  0D3C  3009               	movlw	9
  8074  0D3D  00A6               	movwf	??___ftmul
  8075  0D3E  0826               	movf	??___ftmul,w
  8076  0D3F  00AE               	movwf	___ftmul@cntr
  8077  0D40                     l2256:	
  8078  0D40  1C20               	btfss	___ftmul@f1,0
  8079  0D41  2D48               	goto	l2260
  8080  0D42  0823               	movf	___ftmul@f2,w
  8081  0D43  07AB               	addwf	___ftmul@f3_as_product,f
  8082  0D44  0824               	movf	___ftmul@f2+1,w
  8083  0D45  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8084  0D46  0825               	movf	___ftmul@f2+2,w
  8085  0D47  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8086  0D48                     l2260:	
  8087  0D48  3001               	movlw	1
  8088  0D49                     u2355:	
  8089  0D49  36A2               	lsrf	___ftmul@f1+2,f
  8090  0D4A  0CA1               	rrf	___ftmul@f1+1,f
  8091  0D4B  0CA0               	rrf	___ftmul@f1,f
  8092  0D4C  0B89               	decfsz	9,f
  8093  0D4D  2D49               	goto	u2355
  8094  0D4E  3001               	movlw	1
  8095  0D4F                     u2365:	
  8096  0D4F  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8097  0D50  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8098  0D51  0CAB               	rrf	___ftmul@f3_as_product,f
  8099  0D52  0B89               	decfsz	9,f
  8100  0D53  2D4F               	goto	u2365
  8101  0D54  3001               	movlw	1
  8102  0D55  02AE               	subwf	___ftmul@cntr,f
  8103  0D56  1D03               	btfss	3,2
  8104  0D57  2D40               	goto	l2256
  8105  0D58  082B               	movf	___ftmul@f3_as_product,w
  8106  0D59  00F0               	movwf	___ftpack@arg
  8107  0D5A  082C               	movf	___ftmul@f3_as_product+1,w
  8108  0D5B  00F1               	movwf	___ftpack@arg+1
  8109  0D5C  082D               	movf	___ftmul@f3_as_product+2,w
  8110  0D5D  00F2               	movwf	___ftpack@arg+2
  8111  0D5E  082A               	movf	___ftmul@exp,w
  8112  0D5F  00A6               	movwf	??___ftmul
  8113  0D60  0826               	movf	??___ftmul,w
  8114  0D61  00F3               	movwf	___ftpack@exp
  8115  0D62  082F               	movf	___ftmul@sign,w
  8116  0D63  00A7               	movwf	??___ftmul+1
  8117  0D64  0827               	movf	??___ftmul+1,w
  8118  0D65  00F4               	movwf	___ftpack@sign
  8119  0D66  3189  21F7         	fcall	___ftpack
  8120  0D68  0870               	movf	?___ftpack,w
  8121  0D69  0020               	movlb	0	; select bank0
  8122  0D6A  00A0               	movwf	?___ftmul
  8123  0D6B  0871               	movf	?___ftpack+1,w
  8124  0D6C  00A1               	movwf	?___ftmul+1
  8125  0D6D  0872               	movf	?___ftpack+2,w
  8126  0D6E  00A2               	movwf	?___ftmul+2
  8127  0D6F  0008               	return
  8128  0D70                     __end_of___ftmul:	
  8129                           
  8130                           	psect	text6
  8131  080A                     __ptext6:	
  8132 ;; *************** function ___ftge *****************
  8133 ;; Defined at:
  8134 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  ff1             3    0[COMMON] float 
  8137 ;;  ff2             3    3[COMMON] float 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;		None               void
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8149 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;Total ram usage:        9 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; This function calls:
  8156 ;;		Nothing
  8157 ;; This function is called by:
  8158 ;;		_log
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           
  8163                           ;psect for function ___ftge
  8164  080A                     ___ftge:	
  8165                           
  8166                           ;incstack = 0
  8167                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8168  080A  1FF2               	btfss	___ftge@ff1+2,7
  8169  080B  2820               	goto	l2398
  8170  080C  0970               	comf	___ftge@ff1,w
  8171  080D  00F6               	movwf	??___ftge
  8172  080E  0971               	comf	___ftge@ff1+1,w
  8173  080F  00F7               	movwf	??___ftge+1
  8174  0810  0972               	comf	___ftge@ff1+2,w
  8175  0811  00F8               	movwf	??___ftge+2
  8176  0812  0AF6               	incf	??___ftge,f
  8177  0813  1903               	skipnz
  8178  0814  0AF7               	incf	??___ftge+1,f
  8179  0815  1903               	skipnz
  8180  0816  0AF8               	incf	??___ftge+2,f
  8181  0817  3000               	movlw	0
  8182  0818  0776               	addwf	??___ftge,w
  8183  0819  00F0               	movwf	___ftge@ff1
  8184  081A  3000               	movlw	0
  8185  081B  3D77               	addwfc	??___ftge+1,w
  8186  081C  00F1               	movwf	___ftge@ff1+1
  8187  081D  3080               	movlw	128
  8188  081E  3D78               	addwfc	??___ftge+2,w
  8189  081F  00F2               	movwf	___ftge@ff1+2
  8190  0820                     l2398:	
  8191  0820  1FF5               	btfss	___ftge@ff2+2,7
  8192  0821  2836               	goto	l2402
  8193  0822  0973               	comf	___ftge@ff2,w
  8194  0823  00F6               	movwf	??___ftge
  8195  0824  0974               	comf	___ftge@ff2+1,w
  8196  0825  00F7               	movwf	??___ftge+1
  8197  0826  0975               	comf	___ftge@ff2+2,w
  8198  0827  00F8               	movwf	??___ftge+2
  8199  0828  0AF6               	incf	??___ftge,f
  8200  0829  1903               	skipnz
  8201  082A  0AF7               	incf	??___ftge+1,f
  8202  082B  1903               	skipnz
  8203  082C  0AF8               	incf	??___ftge+2,f
  8204  082D  3000               	movlw	0
  8205  082E  0776               	addwf	??___ftge,w
  8206  082F  00F3               	movwf	___ftge@ff2
  8207  0830  3000               	movlw	0
  8208  0831  3D77               	addwfc	??___ftge+1,w
  8209  0832  00F4               	movwf	___ftge@ff2+1
  8210  0833  3080               	movlw	128
  8211  0834  3D78               	addwfc	??___ftge+2,w
  8212  0835  00F5               	movwf	___ftge@ff2+2
  8213  0836                     l2402:	
  8214  0836  3080               	movlw	128
  8215  0837  06F2               	xorwf	___ftge@ff1+2,f
  8216  0838  3080               	movlw	128
  8217  0839  06F5               	xorwf	___ftge@ff2+2,f
  8218  083A  0875               	movf	___ftge@ff2+2,w
  8219  083B  0272               	subwf	___ftge@ff1+2,w
  8220  083C  1D03               	skipz
  8221  083D  0008               	return
  8222  083E  0874               	movf	___ftge@ff2+1,w
  8223  083F  0271               	subwf	___ftge@ff1+1,w
  8224  0840  1D03               	skipz
  8225  0841  0008               	return
  8226  0842  0873               	movf	___ftge@ff2,w
  8227  0843  0270               	subwf	___ftge@ff1,w
  8228  0844  0008               	return
  8229  0845                     __end_of___ftge:	
  8230                           
  8231                           	psect	text7
  8232  175D                     __ptext7:	
  8233 ;; *************** function ___awtoft *****************
  8234 ;; Defined at:
  8235 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  c               2    8[COMMON] int 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;  sign            1   13[COMMON] unsigned char 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  3    8[COMMON] float 
  8242 ;; Registers used:
  8243 ;;		wreg, status,2, status,0, pclath, cstack
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8249 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;Total ram usage:        6 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; Hardware stack levels required when called:    1
  8256 ;; This function calls:
  8257 ;;		___ftpack
  8258 ;; This function is called by:
  8259 ;;		_tempCalc
  8260 ;;		_log
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           
  8265                           ;psect for function ___awtoft
  8266  175D                     ___awtoft:	
  8267                           
  8268                           ;incstack = 0
  8269                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8270  175D  01FD               	clrf	___awtoft@sign
  8271  175E  1FF9               	btfss	___awtoft@c+1,7
  8272  175F  2F67               	goto	l2390
  8273  1760  09F8               	comf	___awtoft@c,f
  8274  1761  09F9               	comf	___awtoft@c+1,f
  8275  1762  0AF8               	incf	___awtoft@c,f
  8276  1763  1903               	skipnz
  8277  1764  0AF9               	incf	___awtoft@c+1,f
  8278  1765  01FD               	clrf	___awtoft@sign
  8279  1766  0AFD               	incf	___awtoft@sign,f
  8280  1767                     l2390:	
  8281  1767  0878               	movf	___awtoft@c,w
  8282  1768  00F0               	movwf	___ftpack@arg
  8283  1769  0879               	movf	___awtoft@c+1,w
  8284  176A  00F1               	movwf	___ftpack@arg+1
  8285  176B  01F2               	clrf	___ftpack@arg+2
  8286  176C  308E               	movlw	142
  8287  176D  00FB               	movwf	??___awtoft
  8288  176E  087B               	movf	??___awtoft,w
  8289  176F  00F3               	movwf	___ftpack@exp
  8290  1770  087D               	movf	___awtoft@sign,w
  8291  1771  00FC               	movwf	??___awtoft+1
  8292  1772  087C               	movf	??___awtoft+1,w
  8293  1773  00F4               	movwf	___ftpack@sign
  8294  1774  3189  21F7         	fcall	___ftpack
  8295  1776  0870               	movf	?___ftpack,w
  8296  1777  00F8               	movwf	?___awtoft
  8297  1778  0871               	movf	?___ftpack+1,w
  8298  1779  00F9               	movwf	?___awtoft+1
  8299  177A  0872               	movf	?___ftpack+2,w
  8300  177B  00FA               	movwf	?___awtoft+2
  8301  177C  0008               	return
  8302  177D                     __end_of___awtoft:	
  8303                           
  8304                           	psect	text8
  8305  0ADD                     __ptext8:	
  8306 ;; *************** function ___fttol *****************
  8307 ;; Defined at:
  8308 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  f1              3    0[COMMON] float 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  lval            4    9[COMMON] unsigned long 
  8313 ;;  exp1            1   13[COMMON] unsigned char 
  8314 ;;  sign1           1    8[COMMON] unsigned char 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  4    0[COMMON] long 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2, status,0
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;Total ram usage:       14 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; This function calls:
  8331 ;;		Nothing
  8332 ;; This function is called by:
  8333 ;;		_tempCalc
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           
  8338                           ;psect for function ___fttol
  8339  0ADD                     ___fttol:	
  8340                           
  8341                           ;incstack = 0
  8342                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8343  0ADD  0870               	movf	___fttol@f1,w
  8344  0ADE  00F4               	movwf	??___fttol
  8345  0ADF  0871               	movf	___fttol@f1+1,w
  8346  0AE0  00F5               	movwf	??___fttol+1
  8347  0AE1  0872               	movf	___fttol@f1+2,w
  8348  0AE2  00F6               	movwf	??___fttol+2
  8349  0AE3  1003               	clrc
  8350  0AE4  0D75               	rlf	??___fttol+1,w
  8351  0AE5  0D76               	rlf	??___fttol+2,w
  8352  0AE6  00F7               	movwf	??___fttol+3
  8353  0AE7  0877               	movf	??___fttol+3,w
  8354  0AE8  00FD               	movwf	___fttol@exp1
  8355  0AE9  087D               	movf	___fttol@exp1,w
  8356  0AEA  1D03               	btfss	3,2
  8357  0AEB  2AF5               	goto	l2800
  8358  0AEC  3000               	movlw	0
  8359  0AED  00F3               	movwf	?___fttol+3
  8360  0AEE  3000               	movlw	0
  8361  0AEF  00F2               	movwf	?___fttol+2
  8362  0AF0  3000               	movlw	0
  8363  0AF1  00F1               	movwf	?___fttol+1
  8364  0AF2  3000               	movlw	0
  8365  0AF3  00F0               	movwf	?___fttol
  8366  0AF4  0008               	return
  8367  0AF5                     l2800:	
  8368  0AF5  0870               	movf	___fttol@f1,w
  8369  0AF6  00F4               	movwf	??___fttol
  8370  0AF7  0871               	movf	___fttol@f1+1,w
  8371  0AF8  00F5               	movwf	??___fttol+1
  8372  0AF9  0872               	movf	___fttol@f1+2,w
  8373  0AFA  00F6               	movwf	??___fttol+2
  8374  0AFB  3017               	movlw	23
  8375  0AFC                     u3105:	
  8376  0AFC  36F6               	lsrf	??___fttol+2,f
  8377  0AFD  0CF5               	rrf	??___fttol+1,f
  8378  0AFE  0CF4               	rrf	??___fttol,f
  8379  0AFF  0B89               	decfsz	9,f
  8380  0B00  2AFC               	goto	u3105
  8381  0B01  0874               	movf	??___fttol,w
  8382  0B02  00F7               	movwf	??___fttol+3
  8383  0B03  0877               	movf	??___fttol+3,w
  8384  0B04  00F8               	movwf	___fttol@sign1
  8385  0B05  17F1               	bsf	___fttol@f1+1,7
  8386  0B06  30FF               	movlw	255
  8387  0B07  05F0               	andwf	___fttol@f1,f
  8388  0B08  30FF               	movlw	255
  8389  0B09  05F1               	andwf	___fttol@f1+1,f
  8390  0B0A  3000               	movlw	0
  8391  0B0B  05F2               	andwf	___fttol@f1+2,f
  8392  0B0C  0870               	movf	___fttol@f1,w
  8393  0B0D  00F9               	movwf	___fttol@lval
  8394  0B0E  0871               	movf	___fttol@f1+1,w
  8395  0B0F  00FA               	movwf	___fttol@lval+1
  8396  0B10  0872               	movf	___fttol@f1+2,w
  8397  0B11  00FB               	movwf	___fttol@lval+2
  8398  0B12  01FC               	clrf	___fttol@lval+3
  8399  0B13  308E               	movlw	142
  8400  0B14  02FD               	subwf	___fttol@exp1,f
  8401  0B15  1FFD               	btfss	___fttol@exp1,7
  8402  0B16  2B33               	goto	l2820
  8403  0B17  087D               	movf	___fttol@exp1,w
  8404  0B18  3A80               	xorlw	128
  8405  0B19  3E8F               	addlw	143
  8406  0B1A  1803               	skipnc
  8407  0B1B  2B25               	goto	l2818
  8408  0B1C  3000               	movlw	0
  8409  0B1D  00F3               	movwf	?___fttol+3
  8410  0B1E  3000               	movlw	0
  8411  0B1F  00F2               	movwf	?___fttol+2
  8412  0B20  3000               	movlw	0
  8413  0B21  00F1               	movwf	?___fttol+1
  8414  0B22  3000               	movlw	0
  8415  0B23  00F0               	movwf	?___fttol
  8416  0B24  0008               	return
  8417  0B25                     l2818:	
  8418  0B25  3001               	movlw	1
  8419  0B26                     u3135:	
  8420  0B26  36FC               	lsrf	___fttol@lval+3,f
  8421  0B27  0CFB               	rrf	___fttol@lval+2,f
  8422  0B28  0CFA               	rrf	___fttol@lval+1,f
  8423  0B29  0CF9               	rrf	___fttol@lval,f
  8424  0B2A  0B89               	decfsz	9,f
  8425  0B2B  2B26               	goto	u3135
  8426  0B2C  3001               	movlw	1
  8427  0B2D  00F4               	movwf	??___fttol
  8428  0B2E  0874               	movf	??___fttol,w
  8429  0B2F  07FD               	addwf	___fttol@exp1,f
  8430  0B30  1903               	btfsc	3,2
  8431  0B31  2B4C               	goto	l2828
  8432  0B32  2B25               	goto	l2818
  8433  0B33                     l2820:	
  8434  0B33  3018               	movlw	24
  8435  0B34  027D               	subwf	___fttol@exp1,w
  8436  0B35  1C03               	skipc
  8437  0B36  2B49               	goto	l770
  8438  0B37  3000               	movlw	0
  8439  0B38  00F3               	movwf	?___fttol+3
  8440  0B39  3000               	movlw	0
  8441  0B3A  00F2               	movwf	?___fttol+2
  8442  0B3B  3000               	movlw	0
  8443  0B3C  00F1               	movwf	?___fttol+1
  8444  0B3D  3000               	movlw	0
  8445  0B3E  00F0               	movwf	?___fttol
  8446  0B3F  0008               	return
  8447  0B40                     l2826:	
  8448  0B40  3001               	movlw	1
  8449  0B41                     u3165:	
  8450  0B41  35F9               	lslf	___fttol@lval,f
  8451  0B42  0DFA               	rlf	___fttol@lval+1,f
  8452  0B43  0DFB               	rlf	___fttol@lval+2,f
  8453  0B44  0DFC               	rlf	___fttol@lval+3,f
  8454  0B45  0B89               	decfsz	9,f
  8455  0B46  2B41               	goto	u3165
  8456  0B47  3001               	movlw	1
  8457  0B48  02FD               	subwf	___fttol@exp1,f
  8458  0B49                     l770:	
  8459  0B49  087D               	movf	___fttol@exp1,w
  8460  0B4A  1D03               	btfss	3,2
  8461  0B4B  2B40               	goto	l2826
  8462  0B4C                     l2828:	
  8463  0B4C  0878               	movf	___fttol@sign1,w
  8464  0B4D  1903               	btfsc	3,2
  8465  0B4E  2B5A               	goto	l2832
  8466  0B4F  09F9               	comf	___fttol@lval,f
  8467  0B50  09FA               	comf	___fttol@lval+1,f
  8468  0B51  09FB               	comf	___fttol@lval+2,f
  8469  0B52  09FC               	comf	___fttol@lval+3,f
  8470  0B53  0AF9               	incf	___fttol@lval,f
  8471  0B54  1903               	skipnz
  8472  0B55  0AFA               	incf	___fttol@lval+1,f
  8473  0B56  1903               	skipnz
  8474  0B57  0AFB               	incf	___fttol@lval+2,f
  8475  0B58  1903               	skipnz
  8476  0B59  0AFC               	incf	___fttol@lval+3,f
  8477  0B5A                     l2832:	
  8478  0B5A  087C               	movf	___fttol@lval+3,w
  8479  0B5B  00F3               	movwf	?___fttol+3
  8480  0B5C  087B               	movf	___fttol@lval+2,w
  8481  0B5D  00F2               	movwf	?___fttol+2
  8482  0B5E  087A               	movf	___fttol@lval+1,w
  8483  0B5F  00F1               	movwf	?___fttol+1
  8484  0B60  0879               	movf	___fttol@lval,w
  8485  0B61  00F0               	movwf	?___fttol
  8486  0B62  0008               	return
  8487  0B63                     __end_of___fttol:	
  8488                           
  8489                           	psect	text9
  8490  173F                     __ptext9:	
  8491 ;; *************** function ___ftsub *****************
  8492 ;; Defined at:
  8493 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;  f2              3   45[BANK0 ] float 
  8496 ;;  f1              3   48[BANK0 ] float 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  3   45[BANK0 ] float 
  8501 ;; Registers used:
  8502 ;;		wreg, status,2, status,0, pclath, cstack
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8508 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;Total ram usage:        6 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:    2
  8515 ;; This function calls:
  8516 ;;		___ftadd
  8517 ;; This function is called by:
  8518 ;;		_tempCalc
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           
  8523                           ;psect for function ___ftsub
  8524  173F                     ___ftsub:	
  8525                           
  8526                           ;incstack = 0
  8527                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8528  173F  0020               	movlb	0	; select bank0
  8529  1740  084F               	movf	___ftsub@f2+2,w
  8530  1741  044E               	iorwf	___ftsub@f2+1,w
  8531  1742  044D               	iorwf	___ftsub@f2,w
  8532  1743  1903               	skipnz
  8533  1744  2F47               	goto	l2790
  8534  1745  3080               	movlw	128
  8535  1746  06CF               	xorwf	___ftsub@f2+2,f
  8536  1747                     l2790:	
  8537  1747  0850               	movf	___ftsub@f1,w
  8538  1748  00C0               	movwf	___ftadd@f1
  8539  1749  0851               	movf	___ftsub@f1+1,w
  8540  174A  00C1               	movwf	___ftadd@f1+1
  8541  174B  0852               	movf	___ftsub@f1+2,w
  8542  174C  00C2               	movwf	___ftadd@f1+2
  8543  174D  084D               	movf	___ftsub@f2,w
  8544  174E  00C3               	movwf	___ftadd@f2
  8545  174F  084E               	movf	___ftsub@f2+1,w
  8546  1750  00C4               	movwf	___ftadd@f2+1
  8547  1751  084F               	movf	___ftsub@f2+2,w
  8548  1752  00C5               	movwf	___ftadd@f2+2
  8549  1753  318F  270A         	fcall	___ftadd
  8550  1755  0020               	movlb	0	; select bank0
  8551  1756  0840               	movf	?___ftadd,w
  8552  1757  00CD               	movwf	?___ftsub
  8553  1758  0841               	movf	?___ftadd+1,w
  8554  1759  00CE               	movwf	?___ftsub+1
  8555  175A  0842               	movf	?___ftadd+2,w
  8556  175B  00CF               	movwf	?___ftsub+2
  8557  175C  0008               	return
  8558  175D                     __end_of___ftsub:	
  8559                           
  8560                           	psect	text10
  8561  0F0A                     __ptext10:	
  8562 ;; *************** function ___ftadd *****************
  8563 ;; Defined at:
  8564 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  f1              3   32[BANK0 ] float 
  8567 ;;  f2              3   35[BANK0 ] float 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;  exp1            1   44[BANK0 ] unsigned char 
  8570 ;;  exp2            1   43[BANK0 ] unsigned char 
  8571 ;;  sign            1   42[BANK0 ] unsigned char 
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  3   32[BANK0 ] float 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0, pclath, cstack
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8581 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8583 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8584 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8585 ;;Total ram usage:       13 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:    1
  8588 ;; This function calls:
  8589 ;;		___ftpack
  8590 ;; This function is called by:
  8591 ;;		_tempCalc
  8592 ;;		___ftsub
  8593 ;;		_log
  8594 ;;		_eval_poly
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           
  8599                           ;psect for function ___ftadd
  8600  0F0A                     ___ftadd:	
  8601                           
  8602                           ;incstack = 0
  8603                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8604  0F0A  0020               	movlb	0	; select bank0
  8605  0F0B  0840               	movf	___ftadd@f1,w
  8606  0F0C  00C6               	movwf	??___ftadd
  8607  0F0D  0841               	movf	___ftadd@f1+1,w
  8608  0F0E  00C7               	movwf	??___ftadd+1
  8609  0F0F  0842               	movf	___ftadd@f1+2,w
  8610  0F10  00C8               	movwf	??___ftadd+2
  8611  0F11  1003               	clrc
  8612  0F12  0D47               	rlf	??___ftadd+1,w
  8613  0F13  0D48               	rlf	??___ftadd+2,w
  8614  0F14  00C9               	movwf	??___ftadd+3
  8615  0F15  0849               	movf	??___ftadd+3,w
  8616  0F16  00CC               	movwf	___ftadd@exp1
  8617  0F17  0843               	movf	___ftadd@f2,w
  8618  0F18  00C6               	movwf	??___ftadd
  8619  0F19  0844               	movf	___ftadd@f2+1,w
  8620  0F1A  00C7               	movwf	??___ftadd+1
  8621  0F1B  0845               	movf	___ftadd@f2+2,w
  8622  0F1C  00C8               	movwf	??___ftadd+2
  8623  0F1D  1003               	clrc
  8624  0F1E  0D47               	rlf	??___ftadd+1,w
  8625  0F1F  0D48               	rlf	??___ftadd+2,w
  8626  0F20  00C9               	movwf	??___ftadd+3
  8627  0F21  0849               	movf	??___ftadd+3,w
  8628  0F22  00CB               	movwf	___ftadd@exp2
  8629  0F23  084C               	movf	___ftadd@exp1,w
  8630  0F24  1903               	btfsc	3,2
  8631  0F25  2F32               	goto	l2156
  8632  0F26  084B               	movf	___ftadd@exp2,w
  8633  0F27  024C               	subwf	___ftadd@exp1,w
  8634  0F28  1803               	skipnc
  8635  0F29  2F39               	goto	l2160
  8636  0F2A  034C               	decf	___ftadd@exp1,w
  8637  0F2B  3AFF               	xorlw	255
  8638  0F2C  074B               	addwf	___ftadd@exp2,w
  8639  0F2D  00C6               	movwf	??___ftadd
  8640  0F2E  3019               	movlw	25
  8641  0F2F  0246               	subwf	??___ftadd,w
  8642  0F30  1C03               	skipc
  8643  0F31  2F39               	goto	l2160
  8644  0F32                     l2156:	
  8645  0F32  0843               	movf	___ftadd@f2,w
  8646  0F33  00C0               	movwf	?___ftadd
  8647  0F34  0844               	movf	___ftadd@f2+1,w
  8648  0F35  00C1               	movwf	?___ftadd+1
  8649  0F36  0845               	movf	___ftadd@f2+2,w
  8650  0F37  00C2               	movwf	?___ftadd+2
  8651  0F38  0008               	return
  8652  0F39                     l2160:	
  8653  0F39  084B               	movf	___ftadd@exp2,w
  8654  0F3A  1903               	btfsc	3,2
  8655  0F3B  0008               	return
  8656  0F3C  084C               	movf	___ftadd@exp1,w
  8657  0F3D  024B               	subwf	___ftadd@exp2,w
  8658  0F3E  1803               	skipnc
  8659  0F3F  2F48               	goto	l2166
  8660  0F40  034B               	decf	___ftadd@exp2,w
  8661  0F41  3AFF               	xorlw	255
  8662  0F42  074C               	addwf	___ftadd@exp1,w
  8663  0F43  00C6               	movwf	??___ftadd
  8664  0F44  3019               	movlw	25
  8665  0F45  0246               	subwf	??___ftadd,w
  8666  0F46  1803               	btfsc	3,0
  8667  0F47  0008               	return
  8668  0F48                     l2166:	
  8669  0F48  3006               	movlw	6
  8670  0F49  00C6               	movwf	??___ftadd
  8671  0F4A  0846               	movf	??___ftadd,w
  8672  0F4B  00CA               	movwf	___ftadd@sign
  8673  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  8674  0F4D  17CA               	bsf	___ftadd@sign,7
  8675  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  8676  0F4F  174A               	bsf	___ftadd@sign,6
  8677  0F50  17C1               	bsf	___ftadd@f1+1,7
  8678  0F51  30FF               	movlw	255
  8679  0F52  05C0               	andwf	___ftadd@f1,f
  8680  0F53  30FF               	movlw	255
  8681  0F54  05C1               	andwf	___ftadd@f1+1,f
  8682  0F55  3000               	movlw	0
  8683  0F56  05C2               	andwf	___ftadd@f1+2,f
  8684  0F57  17C4               	bsf	___ftadd@f2+1,7
  8685  0F58  30FF               	movlw	255
  8686  0F59  05C3               	andwf	___ftadd@f2,f
  8687  0F5A  30FF               	movlw	255
  8688  0F5B  05C4               	andwf	___ftadd@f2+1,f
  8689  0F5C  3000               	movlw	0
  8690  0F5D  05C5               	andwf	___ftadd@f2+2,f
  8691  0F5E  084B               	movf	___ftadd@exp2,w
  8692  0F5F  024C               	subwf	___ftadd@exp1,w
  8693  0F60  1803               	skipnc
  8694  0F61  2F84               	goto	l2188
  8695  0F62                     l2178:	
  8696  0F62  3001               	movlw	1
  8697  0F63                     u2125:	
  8698  0F63  35C3               	lslf	___ftadd@f2,f
  8699  0F64  0DC4               	rlf	___ftadd@f2+1,f
  8700  0F65  0DC5               	rlf	___ftadd@f2+2,f
  8701  0F66  0B89               	decfsz	9,f
  8702  0F67  2F63               	goto	u2125
  8703  0F68  3001               	movlw	1
  8704  0F69  02CB               	subwf	___ftadd@exp2,f
  8705  0F6A  084B               	movf	___ftadd@exp2,w
  8706  0F6B  064C               	xorwf	___ftadd@exp1,w
  8707  0F6C  1903               	skipnz
  8708  0F6D  2F7F               	goto	l2186
  8709  0F6E  3001               	movlw	1
  8710  0F6F  02CA               	subwf	___ftadd@sign,f
  8711  0F70  084A               	movf	___ftadd@sign,w
  8712  0F71  3907               	andlw	7
  8713  0F72  1903               	btfsc	3,2
  8714  0F73  2F7F               	goto	l2186
  8715  0F74  2F62               	goto	l2178
  8716  0F75                     l2184:	
  8717  0F75  3001               	movlw	1
  8718  0F76                     u2155:	
  8719  0F76  36C2               	lsrf	___ftadd@f1+2,f
  8720  0F77  0CC1               	rrf	___ftadd@f1+1,f
  8721  0F78  0CC0               	rrf	___ftadd@f1,f
  8722  0F79  0B89               	decfsz	9,f
  8723  0F7A  2F76               	goto	u2155
  8724  0F7B  3001               	movlw	1
  8725  0F7C  00C6               	movwf	??___ftadd
  8726  0F7D  0846               	movf	??___ftadd,w
  8727  0F7E  07CC               	addwf	___ftadd@exp1,f
  8728  0F7F                     l2186:	
  8729  0F7F  084C               	movf	___ftadd@exp1,w
  8730  0F80  064B               	xorwf	___ftadd@exp2,w
  8731  0F81  1903               	btfsc	3,2
  8732  0F82  2FA9               	goto	l710
  8733  0F83  2F75               	goto	l2184
  8734  0F84                     l2188:	
  8735  0F84  084C               	movf	___ftadd@exp1,w
  8736  0F85  024B               	subwf	___ftadd@exp2,w
  8737  0F86  1803               	skipnc
  8738  0F87  2FA9               	goto	l710
  8739  0F88                     l2190:	
  8740  0F88  3001               	movlw	1
  8741  0F89                     u2185:	
  8742  0F89  35C0               	lslf	___ftadd@f1,f
  8743  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  8744  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  8745  0F8C  0B89               	decfsz	9,f
  8746  0F8D  2F89               	goto	u2185
  8747  0F8E  3001               	movlw	1
  8748  0F8F  02CC               	subwf	___ftadd@exp1,f
  8749  0F90  084B               	movf	___ftadd@exp2,w
  8750  0F91  064C               	xorwf	___ftadd@exp1,w
  8751  0F92  1903               	skipnz
  8752  0F93  2FA5               	goto	l2198
  8753  0F94  3001               	movlw	1
  8754  0F95  02CA               	subwf	___ftadd@sign,f
  8755  0F96  084A               	movf	___ftadd@sign,w
  8756  0F97  3907               	andlw	7
  8757  0F98  1903               	btfsc	3,2
  8758  0F99  2FA5               	goto	l2198
  8759  0F9A  2F88               	goto	l2190
  8760  0F9B                     l2196:	
  8761  0F9B  3001               	movlw	1
  8762  0F9C                     u2215:	
  8763  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  8764  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  8765  0F9E  0CC3               	rrf	___ftadd@f2,f
  8766  0F9F  0B89               	decfsz	9,f
  8767  0FA0  2F9C               	goto	u2215
  8768  0FA1  3001               	movlw	1
  8769  0FA2  00C6               	movwf	??___ftadd
  8770  0FA3  0846               	movf	??___ftadd,w
  8771  0FA4  07CB               	addwf	___ftadd@exp2,f
  8772  0FA5                     l2198:	
  8773  0FA5  084C               	movf	___ftadd@exp1,w
  8774  0FA6  064B               	xorwf	___ftadd@exp2,w
  8775  0FA7  1D03               	skipz
  8776  0FA8  2F9B               	goto	l2196
  8777  0FA9                     l710:	
  8778  0FA9  1FCA               	btfss	___ftadd@sign,7
  8779  0FAA  2FBB               	goto	l2202
  8780  0FAB  30FF               	movlw	255
  8781  0FAC  06C0               	xorwf	___ftadd@f1,f
  8782  0FAD  30FF               	movlw	255
  8783  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  8784  0FAF  30FF               	movlw	255
  8785  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  8786  0FB1  3001               	movlw	1
  8787  0FB2  07C0               	addwf	___ftadd@f1,f
  8788  0FB3  3000               	movlw	0
  8789  0FB4  1803               	skipnc
  8790  0FB5  3001               	movlw	1
  8791  0FB6  07C1               	addwf	___ftadd@f1+1,f
  8792  0FB7  3000               	movlw	0
  8793  0FB8  1803               	skipnc
  8794  0FB9  3001               	movlw	1
  8795  0FBA  07C2               	addwf	___ftadd@f1+2,f
  8796  0FBB                     l2202:	
  8797  0FBB  1F4A               	btfss	___ftadd@sign,6
  8798  0FBC  2FCD               	goto	l2206
  8799  0FBD  30FF               	movlw	255
  8800  0FBE  06C3               	xorwf	___ftadd@f2,f
  8801  0FBF  30FF               	movlw	255
  8802  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  8803  0FC1  30FF               	movlw	255
  8804  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  8805  0FC3  3001               	movlw	1
  8806  0FC4  07C3               	addwf	___ftadd@f2,f
  8807  0FC5  3000               	movlw	0
  8808  0FC6  1803               	skipnc
  8809  0FC7  3001               	movlw	1
  8810  0FC8  07C4               	addwf	___ftadd@f2+1,f
  8811  0FC9  3000               	movlw	0
  8812  0FCA  1803               	skipnc
  8813  0FCB  3001               	movlw	1
  8814  0FCC  07C5               	addwf	___ftadd@f2+2,f
  8815  0FCD                     l2206:	
  8816  0FCD  01CA               	clrf	___ftadd@sign
  8817  0FCE  0840               	movf	___ftadd@f1,w
  8818  0FCF  07C3               	addwf	___ftadd@f2,f
  8819  0FD0  0841               	movf	___ftadd@f1+1,w
  8820  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  8821  0FD2  0842               	movf	___ftadd@f1+2,w
  8822  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  8823  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  8824  0FD5  2FE8               	goto	l2216
  8825  0FD6  30FF               	movlw	255
  8826  0FD7  06C3               	xorwf	___ftadd@f2,f
  8827  0FD8  30FF               	movlw	255
  8828  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  8829  0FDA  30FF               	movlw	255
  8830  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  8831  0FDC  3001               	movlw	1
  8832  0FDD  07C3               	addwf	___ftadd@f2,f
  8833  0FDE  3000               	movlw	0
  8834  0FDF  1803               	skipnc
  8835  0FE0  3001               	movlw	1
  8836  0FE1  07C4               	addwf	___ftadd@f2+1,f
  8837  0FE2  3000               	movlw	0
  8838  0FE3  1803               	skipnc
  8839  0FE4  3001               	movlw	1
  8840  0FE5  07C5               	addwf	___ftadd@f2+2,f
  8841  0FE6  01CA               	clrf	___ftadd@sign
  8842  0FE7  0ACA               	incf	___ftadd@sign,f
  8843  0FE8                     l2216:	
  8844  0FE8  0843               	movf	___ftadd@f2,w
  8845  0FE9  00F0               	movwf	___ftpack@arg
  8846  0FEA  0844               	movf	___ftadd@f2+1,w
  8847  0FEB  00F1               	movwf	___ftpack@arg+1
  8848  0FEC  0845               	movf	___ftadd@f2+2,w
  8849  0FED  00F2               	movwf	___ftpack@arg+2
  8850  0FEE  084C               	movf	___ftadd@exp1,w
  8851  0FEF  00C6               	movwf	??___ftadd
  8852  0FF0  0846               	movf	??___ftadd,w
  8853  0FF1  00F3               	movwf	___ftpack@exp
  8854  0FF2  084A               	movf	___ftadd@sign,w
  8855  0FF3  00C7               	movwf	??___ftadd+1
  8856  0FF4  0847               	movf	??___ftadd+1,w
  8857  0FF5  00F4               	movwf	___ftpack@sign
  8858  0FF6  3189  21F7         	fcall	___ftpack
  8859  0FF8  0870               	movf	?___ftpack,w
  8860  0FF9  0020               	movlb	0	; select bank0
  8861  0FFA  00C0               	movwf	?___ftadd
  8862  0FFB  0871               	movf	?___ftpack+1,w
  8863  0FFC  00C1               	movwf	?___ftadd+1
  8864  0FFD  0872               	movf	?___ftpack+2,w
  8865  0FFE  00C2               	movwf	?___ftadd+2
  8866  0FFF  0008               	return
  8867  1000                     __end_of___ftadd:	
  8868                           
  8869                           	psect	text11
  8870  0B63                     __ptext11:	
  8871 ;; *************** function ___ftdiv *****************
  8872 ;; Defined at:
  8873 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;  f2              3   16[BANK0 ] float 
  8876 ;;  f1              3   19[BANK0 ] float 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;  f3              3   27[BANK0 ] float 
  8879 ;;  sign            1   31[BANK0 ] unsigned char 
  8880 ;;  exp             1   30[BANK0 ] unsigned char 
  8881 ;;  cntr            1   26[BANK0 ] unsigned char 
  8882 ;; Return value:  Size  Location     Type
  8883 ;;                  3   16[BANK0 ] float 
  8884 ;; Registers used:
  8885 ;;		wreg, status,2, status,0, pclath, cstack
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8891 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8895 ;;Total ram usage:       16 bytes
  8896 ;; Hardware stack levels used:    1
  8897 ;; Hardware stack levels required when called:    1
  8898 ;; This function calls:
  8899 ;;		___ftpack
  8900 ;; This function is called by:
  8901 ;;		_tempCalc
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           
  8906                           ;psect for function ___ftdiv
  8907  0B63                     ___ftdiv:	
  8908                           
  8909                           ;incstack = 0
  8910                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8911  0B63  0020               	movlb	0	; select bank0
  8912  0B64  0833               	movf	___ftdiv@f1,w
  8913  0B65  00B6               	movwf	??___ftdiv
  8914  0B66  0834               	movf	___ftdiv@f1+1,w
  8915  0B67  00B7               	movwf	??___ftdiv+1
  8916  0B68  0835               	movf	___ftdiv@f1+2,w
  8917  0B69  00B8               	movwf	??___ftdiv+2
  8918  0B6A  1003               	clrc
  8919  0B6B  0D37               	rlf	??___ftdiv+1,w
  8920  0B6C  0D38               	rlf	??___ftdiv+2,w
  8921  0B6D  00B9               	movwf	??___ftdiv+3
  8922  0B6E  0839               	movf	??___ftdiv+3,w
  8923  0B6F  00BE               	movwf	___ftdiv@exp
  8924  0B70  083E               	movf	___ftdiv@exp,w
  8925  0B71  1D03               	btfss	3,2
  8926  0B72  2B7A               	goto	l2750
  8927  0B73  3000               	movlw	0
  8928  0B74  00B0               	movwf	?___ftdiv
  8929  0B75  3000               	movlw	0
  8930  0B76  00B1               	movwf	?___ftdiv+1
  8931  0B77  3000               	movlw	0
  8932  0B78  00B2               	movwf	?___ftdiv+2
  8933  0B79  0008               	return
  8934  0B7A                     l2750:	
  8935  0B7A  0830               	movf	___ftdiv@f2,w
  8936  0B7B  00B6               	movwf	??___ftdiv
  8937  0B7C  0831               	movf	___ftdiv@f2+1,w
  8938  0B7D  00B7               	movwf	??___ftdiv+1
  8939  0B7E  0832               	movf	___ftdiv@f2+2,w
  8940  0B7F  00B8               	movwf	??___ftdiv+2
  8941  0B80  1003               	clrc
  8942  0B81  0D37               	rlf	??___ftdiv+1,w
  8943  0B82  0D38               	rlf	??___ftdiv+2,w
  8944  0B83  00B9               	movwf	??___ftdiv+3
  8945  0B84  0839               	movf	??___ftdiv+3,w
  8946  0B85  00BF               	movwf	___ftdiv@sign
  8947  0B86  083F               	movf	___ftdiv@sign,w
  8948  0B87  1D03               	btfss	3,2
  8949  0B88  2B90               	goto	l2756
  8950  0B89  3000               	movlw	0
  8951  0B8A  00B0               	movwf	?___ftdiv
  8952  0B8B  3000               	movlw	0
  8953  0B8C  00B1               	movwf	?___ftdiv+1
  8954  0B8D  3000               	movlw	0
  8955  0B8E  00B2               	movwf	?___ftdiv+2
  8956  0B8F  0008               	return
  8957  0B90                     l2756:	
  8958  0B90  3000               	movlw	0
  8959  0B91  00BB               	movwf	___ftdiv@f3
  8960  0B92  3000               	movlw	0
  8961  0B93  00BC               	movwf	___ftdiv@f3+1
  8962  0B94  3000               	movlw	0
  8963  0B95  00BD               	movwf	___ftdiv@f3+2
  8964  0B96  3089               	movlw	137
  8965  0B97  073F               	addwf	___ftdiv@sign,w
  8966  0B98  00B6               	movwf	??___ftdiv
  8967  0B99  0836               	movf	??___ftdiv,w
  8968  0B9A  02BE               	subwf	___ftdiv@exp,f
  8969  0B9B  0833               	movf	___ftdiv@f1,w
  8970  0B9C  00B6               	movwf	??___ftdiv
  8971  0B9D  0834               	movf	___ftdiv@f1+1,w
  8972  0B9E  00B7               	movwf	??___ftdiv+1
  8973  0B9F  0835               	movf	___ftdiv@f1+2,w
  8974  0BA0  00B8               	movwf	??___ftdiv+2
  8975  0BA1  3010               	movlw	16
  8976  0BA2                     u3025:	
  8977  0BA2  36B8               	lsrf	??___ftdiv+2,f
  8978  0BA3  0CB7               	rrf	??___ftdiv+1,f
  8979  0BA4  0CB6               	rrf	??___ftdiv,f
  8980  0BA5  0B89               	decfsz	9,f
  8981  0BA6  2BA2               	goto	u3025
  8982  0BA7  0836               	movf	??___ftdiv,w
  8983  0BA8  00B9               	movwf	??___ftdiv+3
  8984  0BA9  0839               	movf	??___ftdiv+3,w
  8985  0BAA  00BF               	movwf	___ftdiv@sign
  8986  0BAB  0830               	movf	___ftdiv@f2,w
  8987  0BAC  00B6               	movwf	??___ftdiv
  8988  0BAD  0831               	movf	___ftdiv@f2+1,w
  8989  0BAE  00B7               	movwf	??___ftdiv+1
  8990  0BAF  0832               	movf	___ftdiv@f2+2,w
  8991  0BB0  00B8               	movwf	??___ftdiv+2
  8992  0BB1  3010               	movlw	16
  8993  0BB2                     u3035:	
  8994  0BB2  36B8               	lsrf	??___ftdiv+2,f
  8995  0BB3  0CB7               	rrf	??___ftdiv+1,f
  8996  0BB4  0CB6               	rrf	??___ftdiv,f
  8997  0BB5  0B89               	decfsz	9,f
  8998  0BB6  2BB2               	goto	u3035
  8999  0BB7  0836               	movf	??___ftdiv,w
  9000  0BB8  00B9               	movwf	??___ftdiv+3
  9001  0BB9  0839               	movf	??___ftdiv+3,w
  9002  0BBA  06BF               	xorwf	___ftdiv@sign,f
  9003  0BBB  3080               	movlw	128
  9004  0BBC  00B6               	movwf	??___ftdiv
  9005  0BBD  0836               	movf	??___ftdiv,w
  9006  0BBE  05BF               	andwf	___ftdiv@sign,f
  9007  0BBF  17B4               	bsf	___ftdiv@f1+1,7
  9008  0BC0  30FF               	movlw	255
  9009  0BC1  05B3               	andwf	___ftdiv@f1,f
  9010  0BC2  30FF               	movlw	255
  9011  0BC3  05B4               	andwf	___ftdiv@f1+1,f
  9012  0BC4  3000               	movlw	0
  9013  0BC5  05B5               	andwf	___ftdiv@f1+2,f
  9014  0BC6  17B1               	bsf	___ftdiv@f2+1,7
  9015  0BC7  30FF               	movlw	255
  9016  0BC8  05B0               	andwf	___ftdiv@f2,f
  9017  0BC9  30FF               	movlw	255
  9018  0BCA  05B1               	andwf	___ftdiv@f2+1,f
  9019  0BCB  3000               	movlw	0
  9020  0BCC  05B2               	andwf	___ftdiv@f2+2,f
  9021  0BCD  3018               	movlw	24
  9022  0BCE  00B6               	movwf	??___ftdiv
  9023  0BCF  0836               	movf	??___ftdiv,w
  9024  0BD0  00BA               	movwf	___ftdiv@cntr
  9025  0BD1                     l2770:	
  9026  0BD1  3001               	movlw	1
  9027  0BD2                     u3045:	
  9028  0BD2  35BB               	lslf	___ftdiv@f3,f
  9029  0BD3  0DBC               	rlf	___ftdiv@f3+1,f
  9030  0BD4  0DBD               	rlf	___ftdiv@f3+2,f
  9031  0BD5  0B89               	decfsz	9,f
  9032  0BD6  2BD2               	goto	u3045
  9033  0BD7  0832               	movf	___ftdiv@f2+2,w
  9034  0BD8  0235               	subwf	___ftdiv@f1+2,w
  9035  0BD9  1D03               	skipz
  9036  0BDA  2BE1               	goto	u3055
  9037  0BDB  0831               	movf	___ftdiv@f2+1,w
  9038  0BDC  0234               	subwf	___ftdiv@f1+1,w
  9039  0BDD  1D03               	skipz
  9040  0BDE  2BE1               	goto	u3055
  9041  0BDF  0830               	movf	___ftdiv@f2,w
  9042  0BE0  0233               	subwf	___ftdiv@f1,w
  9043  0BE1                     u3055:	
  9044  0BE1  1C03               	skipc
  9045  0BE2  2BEA               	goto	l2778
  9046  0BE3  0830               	movf	___ftdiv@f2,w
  9047  0BE4  02B3               	subwf	___ftdiv@f1,f
  9048  0BE5  0831               	movf	___ftdiv@f2+1,w
  9049  0BE6  3BB4               	subwfb	___ftdiv@f1+1,f
  9050  0BE7  0832               	movf	___ftdiv@f2+2,w
  9051  0BE8  3BB5               	subwfb	___ftdiv@f1+2,f
  9052  0BE9  143B               	bsf	___ftdiv@f3,0
  9053  0BEA                     l2778:	
  9054  0BEA  3001               	movlw	1
  9055  0BEB                     u3065:	
  9056  0BEB  35B3               	lslf	___ftdiv@f1,f
  9057  0BEC  0DB4               	rlf	___ftdiv@f1+1,f
  9058  0BED  0DB5               	rlf	___ftdiv@f1+2,f
  9059  0BEE  0B89               	decfsz	9,f
  9060  0BEF  2BEB               	goto	u3065
  9061  0BF0  3001               	movlw	1
  9062  0BF1  02BA               	subwf	___ftdiv@cntr,f
  9063  0BF2  1D03               	btfss	3,2
  9064  0BF3  2BD1               	goto	l2770
  9065  0BF4  083B               	movf	___ftdiv@f3,w
  9066  0BF5  00F0               	movwf	___ftpack@arg
  9067  0BF6  083C               	movf	___ftdiv@f3+1,w
  9068  0BF7  00F1               	movwf	___ftpack@arg+1
  9069  0BF8  083D               	movf	___ftdiv@f3+2,w
  9070  0BF9  00F2               	movwf	___ftpack@arg+2
  9071  0BFA  083E               	movf	___ftdiv@exp,w
  9072  0BFB  00B6               	movwf	??___ftdiv
  9073  0BFC  0836               	movf	??___ftdiv,w
  9074  0BFD  00F3               	movwf	___ftpack@exp
  9075  0BFE  083F               	movf	___ftdiv@sign,w
  9076  0BFF  00B7               	movwf	??___ftdiv+1
  9077  0C00  0837               	movf	??___ftdiv+1,w
  9078  0C01  00F4               	movwf	___ftpack@sign
  9079  0C02  3189  21F7         	fcall	___ftpack
  9080  0C04  0870               	movf	?___ftpack,w
  9081  0C05  0020               	movlb	0	; select bank0
  9082  0C06  00B0               	movwf	?___ftdiv
  9083  0C07  0871               	movf	?___ftpack+1,w
  9084  0C08  00B1               	movwf	?___ftdiv+1
  9085  0C09  0872               	movf	?___ftpack+2,w
  9086  0C0A  00B2               	movwf	?___ftdiv+2
  9087  0C0B  0008               	return
  9088  0C0C                     __end_of___ftdiv:	
  9089                           
  9090                           	psect	text12
  9091  09F7                     __ptext12:	
  9092 ;; *************** function ___ftpack *****************
  9093 ;; Defined at:
  9094 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  arg             3    0[COMMON] unsigned um
  9097 ;;  exp             1    3[COMMON] unsigned char 
  9098 ;;  sign            1    4[COMMON] unsigned char 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  3    0[COMMON] float 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9110 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9113 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;Total ram usage:        8 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; This function calls:
  9117 ;;		Nothing
  9118 ;; This function is called by:
  9119 ;;		___awtoft
  9120 ;;		___ftadd
  9121 ;;		___ftdiv
  9122 ;;		___ftmul
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           
  9127                           ;psect for function ___ftpack
  9128  09F7                     ___ftpack:	
  9129                           
  9130                           ;incstack = 0
  9131                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9132  09F7  0873               	movf	___ftpack@exp,w
  9133  09F8  1903               	btfsc	3,2
  9134  09F9  29FF               	goto	l2092
  9135  09FA  0872               	movf	___ftpack@arg+2,w
  9136  09FB  0471               	iorwf	___ftpack@arg+1,w
  9137  09FC  0470               	iorwf	___ftpack@arg,w
  9138  09FD  1D03               	skipz
  9139  09FE  2A10               	goto	l2098
  9140  09FF                     l2092:	
  9141  09FF  3000               	movlw	0
  9142  0A00  00F0               	movwf	?___ftpack
  9143  0A01  3000               	movlw	0
  9144  0A02  00F1               	movwf	?___ftpack+1
  9145  0A03  3000               	movlw	0
  9146  0A04  00F2               	movwf	?___ftpack+2
  9147  0A05  0008               	return
  9148  0A06                     l2096:	
  9149  0A06  3001               	movlw	1
  9150  0A07  00F5               	movwf	??___ftpack
  9151  0A08  0875               	movf	??___ftpack,w
  9152  0A09  07F3               	addwf	___ftpack@exp,f
  9153  0A0A  3001               	movlw	1
  9154  0A0B                     u1855:	
  9155  0A0B  36F2               	lsrf	___ftpack@arg+2,f
  9156  0A0C  0CF1               	rrf	___ftpack@arg+1,f
  9157  0A0D  0CF0               	rrf	___ftpack@arg,f
  9158  0A0E  0B89               	decfsz	9,f
  9159  0A0F  2A0B               	goto	u1855
  9160  0A10                     l2098:	
  9161  0A10  30FE               	movlw	254
  9162  0A11  0572               	andwf	___ftpack@arg+2,w
  9163  0A12  1903               	btfsc	3,2
  9164  0A13  2A29               	goto	l679
  9165  0A14  2A06               	goto	l2096
  9166  0A15                     l2100:	
  9167  0A15  3001               	movlw	1
  9168  0A16  00F5               	movwf	??___ftpack
  9169  0A17  0875               	movf	??___ftpack,w
  9170  0A18  07F3               	addwf	___ftpack@exp,f
  9171  0A19  3001               	movlw	1
  9172  0A1A  07F0               	addwf	___ftpack@arg,f
  9173  0A1B  3000               	movlw	0
  9174  0A1C  1803               	skipnc
  9175  0A1D  3001               	movlw	1
  9176  0A1E  07F1               	addwf	___ftpack@arg+1,f
  9177  0A1F  3000               	movlw	0
  9178  0A20  1803               	skipnc
  9179  0A21  3001               	movlw	1
  9180  0A22  07F2               	addwf	___ftpack@arg+2,f
  9181  0A23  3001               	movlw	1
  9182  0A24                     u1875:	
  9183  0A24  36F2               	lsrf	___ftpack@arg+2,f
  9184  0A25  0CF1               	rrf	___ftpack@arg+1,f
  9185  0A26  0CF0               	rrf	___ftpack@arg,f
  9186  0A27  0B89               	decfsz	9,f
  9187  0A28  2A24               	goto	u1875
  9188  0A29                     l679:	
  9189  0A29  30FF               	movlw	255
  9190  0A2A  0572               	andwf	___ftpack@arg+2,w
  9191  0A2B  1903               	btfsc	3,2
  9192  0A2C  2A36               	goto	l2108
  9193  0A2D  2A15               	goto	l2100
  9194  0A2E                     l2106:	
  9195  0A2E  3001               	movlw	1
  9196  0A2F  02F3               	subwf	___ftpack@exp,f
  9197  0A30  3001               	movlw	1
  9198  0A31                     u1895:	
  9199  0A31  35F0               	lslf	___ftpack@arg,f
  9200  0A32  0DF1               	rlf	___ftpack@arg+1,f
  9201  0A33  0DF2               	rlf	___ftpack@arg+2,f
  9202  0A34  0B89               	decfsz	9,f
  9203  0A35  2A31               	goto	u1895
  9204  0A36                     l2108:	
  9205  0A36  1BF1               	btfsc	___ftpack@arg+1,7
  9206  0A37  2A3C               	goto	l686
  9207  0A38  3002               	movlw	2
  9208  0A39  0273               	subwf	___ftpack@exp,w
  9209  0A3A  1803               	skipnc
  9210  0A3B  2A2E               	goto	l2106
  9211  0A3C                     l686:	
  9212  0A3C  1873               	btfsc	___ftpack@exp,0
  9213  0A3D  2A44               	goto	l687
  9214  0A3E  30FF               	movlw	255
  9215  0A3F  05F0               	andwf	___ftpack@arg,f
  9216  0A40  307F               	movlw	127
  9217  0A41  05F1               	andwf	___ftpack@arg+1,f
  9218  0A42  30FF               	movlw	255
  9219  0A43  05F2               	andwf	___ftpack@arg+2,f
  9220  0A44                     l687:	
  9221  0A44  1003               	clrc
  9222  0A45  0CF3               	rrf	___ftpack@exp,f
  9223  0A46  0873               	movf	___ftpack@exp,w
  9224  0A47  00F5               	movwf	??___ftpack
  9225  0A48  01F6               	clrf	??___ftpack+1
  9226  0A49  01F7               	clrf	??___ftpack+2
  9227  0A4A  3010               	movlw	16
  9228  0A4B                     u1935:	
  9229  0A4B  35F5               	lslf	??___ftpack,f
  9230  0A4C  0DF6               	rlf	??___ftpack+1,f
  9231  0A4D  0DF7               	rlf	??___ftpack+2,f
  9232  0A4E  0B89               	decfsz	9,f
  9233  0A4F  2A4B               	goto	u1935
  9234  0A50  0875               	movf	??___ftpack,w
  9235  0A51  04F0               	iorwf	___ftpack@arg,f
  9236  0A52  0876               	movf	??___ftpack+1,w
  9237  0A53  04F1               	iorwf	___ftpack@arg+1,f
  9238  0A54  0877               	movf	??___ftpack+2,w
  9239  0A55  04F2               	iorwf	___ftpack@arg+2,f
  9240  0A56  0874               	movf	___ftpack@sign,w
  9241  0A57  1903               	btfsc	3,2
  9242  0A58  0008               	return
  9243  0A59  17F2               	bsf	___ftpack@arg+2,7
  9244  0A5A  0008               	return
  9245  0A5B                     __end_of___ftpack:	
  9246                           
  9247                           	psect	text13
  9248  01BF                     __ptext13:	
  9249 ;; *************** function _readAnalog *****************
  9250 ;; Defined at:
  9251 ;;		line 34 in file "adc.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  channel         2    6[BANK0 ] int 
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;  value           2   11[COMMON] int 
  9256 ;;  analog_chann    2    9[COMMON] int 
  9257 ;; Return value:  Size  Location     Type
  9258 ;;                  2    6[BANK0 ] int 
  9259 ;; Registers used:
  9260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9266 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9267 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9268 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9269 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9270 ;;Total ram usage:       22 bytes
  9271 ;; Hardware stack levels used:    1
  9272 ;; Hardware stack levels required when called:    1
  9273 ;; This function calls:
  9274 ;;		_ADCRead
  9275 ;;		___aldiv
  9276 ;;		___wmul
  9277 ;; This function is called by:
  9278 ;;		_main
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           
  9283                           ;psect for function _readAnalog
  9284  01BF                     _readAnalog:	
  9285                           
  9286                           ;adc.c: 36: int value;
  9287                           ;adc.c: 38: int analog_channel = channels[channel];
  9288                           
  9289                           ;incstack = 0
  9290                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9291  01BF  0020               	movlb	0	; select bank0
  9292  01C0  3526               	lslf	readAnalog@channel,w
  9293  01C1  3EB0               	addlw	(low (_channels| (0+256)))& (0+255)
  9294  01C2  0086               	movwf	6
  9295  01C3  3001               	movlw	1	; select bank3/4
  9296  01C4  0087               	movwf	7
  9297  01C5  3F40               	moviw [0]fsr1
  9298  01C6  00F9               	movwf	readAnalog@analog_channel
  9299  01C7  3F41               	moviw [1]fsr1
  9300  01C8  00FA               	movwf	readAnalog@analog_channel+1
  9301                           
  9302                           ;adc.c: 40: value = ADCRead(analog_channel);
  9303  01C9  0879               	movf	readAnalog@analog_channel,w
  9304  01CA  3196  2673  3181   	fcall	_ADCRead
  9305  01CD  0871               	movf	?_ADCRead+1,w
  9306  01CE  00FC               	movwf	readAnalog@value+1
  9307  01CF  0870               	movf	?_ADCRead,w
  9308  01D0  00FB               	movwf	readAnalog@value
  9309                           
  9310                           ;adc.c: 42: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9311  01D1  0020               	movlb	0	; select bank0
  9312  01D2  0826               	movf	readAnalog@channel,w
  9313  01D3  00A8               	movwf	??_readAnalog
  9314  01D4  3001               	movlw	1
  9315  01D5                     u3195:	
  9316  01D5  35A8               	lslf	??_readAnalog,f
  9317  01D6  3EFF               	addlw	-1
  9318  01D7  1D03               	skipz
  9319  01D8  29D5               	goto	u3195
  9320  01D9  3528               	lslf	??_readAnalog,w
  9321  01DA  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9322  01DB  0086               	movwf	6
  9323  01DC  0187               	clrf	7
  9324  01DD  3F40               	moviw [0]fsr1
  9325  01DE  00A9               	movwf	??_readAnalog+1
  9326  01DF  3F41               	moviw [1]fsr1
  9327  01E0  00AA               	movwf	??_readAnalog+2
  9328  01E1  3F42               	moviw [2]fsr1
  9329  01E2  00AB               	movwf	??_readAnalog+3
  9330  01E3  3F43               	moviw [3]fsr1
  9331  01E4  00AC               	movwf	??_readAnalog+4
  9332  01E5  0021               	movlb	1	; select bank1
  9333  01E6  083D               	movf	(_sampleIndex+1)^(0+128),w
  9334  01E7  0020               	movlb	0	; select bank0
  9335  01E8  00AE               	movwf	??_readAnalog+6
  9336  01E9  0021               	movlb	1	; select bank1
  9337  01EA  083C               	movf	_sampleIndex^(0+128),w
  9338  01EB  0020               	movlb	0	; select bank0
  9339  01EC  00AD               	movwf	??_readAnalog+5
  9340  01ED  35AD               	lslf	??_readAnalog+5,f
  9341  01EE  0DAE               	rlf	??_readAnalog+6,f
  9342  01EF  0827               	movf	readAnalog@channel+1,w
  9343  01F0  00F1               	movwf	___wmul@multiplier+1
  9344  01F1  0826               	movf	readAnalog@channel,w
  9345  01F2  00F0               	movwf	___wmul@multiplier
  9346  01F3  3050               	movlw	80
  9347  01F4  00F2               	movwf	___wmul@multiplicand
  9348  01F5  3000               	movlw	0
  9349  01F6  00F3               	movwf	___wmul@multiplicand+1
  9350  01F7  3197  2708  3181   	fcall	___wmul
  9351  01FA  3050               	movlw	80
  9352  01FB  0020               	movlb	0	; select bank0
  9353  01FC  00AF               	movwf	??_readAnalog+7
  9354  01FD  3023               	movlw	35
  9355  01FE  00B0               	movwf	??_readAnalog+8
  9356  01FF  0870               	movf	?___wmul,w
  9357  0200  072F               	addwf	??_readAnalog+7,w
  9358  0201  00B1               	movwf	??_readAnalog+9
  9359  0202  0871               	movf	?___wmul+1,w
  9360  0203  3D30               	addwfc	??_readAnalog+8,w
  9361  0204  00B2               	movwf	??_readAnalog+10
  9362  0205  0831               	movf	??_readAnalog+9,w
  9363  0206  072D               	addwf	??_readAnalog+5,w
  9364  0207  0084               	movwf	4
  9365  0208  0832               	movf	??_readAnalog+10,w
  9366  0209  3D2E               	addwfc	??_readAnalog+6,w
  9367  020A  0085               	movwf	5
  9368  020B  3F00               	moviw [0]fsr0
  9369  020C  00B3               	movwf	??_readAnalog+11
  9370  020D  3F01               	moviw [1]fsr0
  9371  020E  00B4               	movwf	??_readAnalog+12
  9372  020F  01B5               	clrf	??_readAnalog+13
  9373  0210  01B6               	clrf	??_readAnalog+14
  9374  0211  09B3               	comf	??_readAnalog+11,f
  9375  0212  09B4               	comf	??_readAnalog+12,f
  9376  0213  09B5               	comf	??_readAnalog+13,f
  9377  0214  09B6               	comf	??_readAnalog+14,f
  9378  0215  0AB3               	incf	??_readAnalog+11,f
  9379  0216  1903               	skipnz
  9380  0217  0AB4               	incf	??_readAnalog+12,f
  9381  0218  1903               	skipnz
  9382  0219  0AB5               	incf	??_readAnalog+13,f
  9383  021A  1903               	skipnz
  9384  021B  0AB6               	incf	??_readAnalog+14,f
  9385  021C  0833               	movf	??_readAnalog+11,w
  9386  021D  07A9               	addwf	??_readAnalog+1,f
  9387  021E  0834               	movf	??_readAnalog+12,w
  9388  021F  3DAA               	addwfc	??_readAnalog+2,f
  9389  0220  0835               	movf	??_readAnalog+13,w
  9390  0221  3DAB               	addwfc	??_readAnalog+3,f
  9391  0222  0836               	movf	??_readAnalog+14,w
  9392  0223  3DAC               	addwfc	??_readAnalog+4,f
  9393  0224  0826               	movf	readAnalog@channel,w
  9394  0225  00B7               	movwf	??_readAnalog+15
  9395  0226  3001               	movlw	1
  9396  0227                     u3205:	
  9397  0227  35B7               	lslf	??_readAnalog+15,f
  9398  0228  3EFF               	addlw	-1
  9399  0229  1D03               	skipz
  9400  022A  2A27               	goto	u3205
  9401  022B  3537               	lslf	??_readAnalog+15,w
  9402  022C  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9403  022D  0086               	movwf	6
  9404  022E  0187               	clrf	7
  9405  022F  0829               	movf	??_readAnalog+1,w
  9406  0230  3FC0               	movwi [0]fsr1
  9407  0231  082A               	movf	??_readAnalog+2,w
  9408  0232  3FC1               	movwi [1]fsr1
  9409  0233  082B               	movf	??_readAnalog+3,w
  9410  0234  3FC2               	movwi [2]fsr1
  9411  0235  082C               	movf	??_readAnalog+4,w
  9412  0236  3FC3               	movwi [3]fsr1
  9413                           
  9414                           ;adc.c: 44: samples[channel][sampleIndex] = value;
  9415  0237  0021               	movlb	1	; select bank1
  9416  0238  083D               	movf	(_sampleIndex+1)^(0+128),w
  9417  0239  0020               	movlb	0	; select bank0
  9418  023A  00A9               	movwf	??_readAnalog+1
  9419  023B  0021               	movlb	1	; select bank1
  9420  023C  083C               	movf	_sampleIndex^(0+128),w
  9421  023D  0020               	movlb	0	; select bank0
  9422  023E  00A8               	movwf	??_readAnalog
  9423  023F  35A8               	lslf	??_readAnalog,f
  9424  0240  0DA9               	rlf	??_readAnalog+1,f
  9425  0241  0827               	movf	readAnalog@channel+1,w
  9426  0242  00F1               	movwf	___wmul@multiplier+1
  9427  0243  0826               	movf	readAnalog@channel,w
  9428  0244  00F0               	movwf	___wmul@multiplier
  9429  0245  3050               	movlw	80
  9430  0246  00F2               	movwf	___wmul@multiplicand
  9431  0247  3000               	movlw	0
  9432  0248  00F3               	movwf	___wmul@multiplicand+1
  9433  0249  3197  2708  3181   	fcall	___wmul
  9434  024C  3050               	movlw	80
  9435  024D  0020               	movlb	0	; select bank0
  9436  024E  00AA               	movwf	??_readAnalog+2
  9437  024F  3023               	movlw	35
  9438  0250  00AB               	movwf	??_readAnalog+3
  9439  0251  0870               	movf	?___wmul,w
  9440  0252  072A               	addwf	??_readAnalog+2,w
  9441  0253  00AC               	movwf	??_readAnalog+4
  9442  0254  0871               	movf	?___wmul+1,w
  9443  0255  3D2B               	addwfc	??_readAnalog+3,w
  9444  0256  00AD               	movwf	??_readAnalog+5
  9445  0257  0828               	movf	??_readAnalog,w
  9446  0258  072C               	addwf	??_readAnalog+4,w
  9447  0259  0086               	movwf	6
  9448  025A  0829               	movf	??_readAnalog+1,w
  9449  025B  3D2D               	addwfc	??_readAnalog+5,w
  9450  025C  0087               	movwf	7
  9451  025D  087B               	movf	readAnalog@value,w
  9452  025E  3FC0               	movwi [0]fsr1
  9453  025F  087C               	movf	readAnalog@value+1,w
  9454  0260  3FC1               	movwi [1]fsr1
  9455                           
  9456                           ;adc.c: 46: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9457  0261  0826               	movf	readAnalog@channel,w
  9458  0262  00A8               	movwf	??_readAnalog
  9459  0263  3001               	movlw	1
  9460  0264                     u3215:	
  9461  0264  35A8               	lslf	??_readAnalog,f
  9462  0265  3EFF               	addlw	-1
  9463  0266  1D03               	skipz
  9464  0267  2A64               	goto	u3215
  9465  0268  3528               	lslf	??_readAnalog,w
  9466  0269  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9467  026A  0086               	movwf	6
  9468  026B  0187               	clrf	7
  9469  026C  3F40               	moviw [0]fsr1
  9470  026D  00A9               	movwf	??_readAnalog+1
  9471  026E  3F41               	moviw [1]fsr1
  9472  026F  00AA               	movwf	??_readAnalog+2
  9473  0270  3F42               	moviw [2]fsr1
  9474  0271  00AB               	movwf	??_readAnalog+3
  9475  0272  3F43               	moviw [3]fsr1
  9476  0273  00AC               	movwf	??_readAnalog+4
  9477  0274  0021               	movlb	1	; select bank1
  9478  0275  083D               	movf	(_sampleIndex+1)^(0+128),w
  9479  0276  0020               	movlb	0	; select bank0
  9480  0277  00AE               	movwf	??_readAnalog+6
  9481  0278  0021               	movlb	1	; select bank1
  9482  0279  083C               	movf	_sampleIndex^(0+128),w
  9483  027A  0020               	movlb	0	; select bank0
  9484  027B  00AD               	movwf	??_readAnalog+5
  9485  027C  35AD               	lslf	??_readAnalog+5,f
  9486  027D  0DAE               	rlf	??_readAnalog+6,f
  9487  027E  0827               	movf	readAnalog@channel+1,w
  9488  027F  00F1               	movwf	___wmul@multiplier+1
  9489  0280  0826               	movf	readAnalog@channel,w
  9490  0281  00F0               	movwf	___wmul@multiplier
  9491  0282  3050               	movlw	80
  9492  0283  00F2               	movwf	___wmul@multiplicand
  9493  0284  3000               	movlw	0
  9494  0285  00F3               	movwf	___wmul@multiplicand+1
  9495  0286  3197  2708  3181   	fcall	___wmul
  9496  0289  3050               	movlw	80
  9497  028A  0020               	movlb	0	; select bank0
  9498  028B  00AF               	movwf	??_readAnalog+7
  9499  028C  3023               	movlw	35
  9500  028D  00B0               	movwf	??_readAnalog+8
  9501  028E  0870               	movf	?___wmul,w
  9502  028F  072F               	addwf	??_readAnalog+7,w
  9503  0290  00B1               	movwf	??_readAnalog+9
  9504  0291  0871               	movf	?___wmul+1,w
  9505  0292  3D30               	addwfc	??_readAnalog+8,w
  9506  0293  00B2               	movwf	??_readAnalog+10
  9507  0294  0831               	movf	??_readAnalog+9,w
  9508  0295  072D               	addwf	??_readAnalog+5,w
  9509  0296  0084               	movwf	4
  9510  0297  0832               	movf	??_readAnalog+10,w
  9511  0298  3D2E               	addwfc	??_readAnalog+6,w
  9512  0299  0085               	movwf	5
  9513  029A  3F00               	moviw [0]fsr0
  9514  029B  00B3               	movwf	??_readAnalog+11
  9515  029C  3F01               	moviw [1]fsr0
  9516  029D  00B4               	movwf	??_readAnalog+12
  9517  029E  01B5               	clrf	??_readAnalog+13
  9518  029F  01B6               	clrf	??_readAnalog+14
  9519  02A0  0833               	movf	??_readAnalog+11,w
  9520  02A1  07A9               	addwf	??_readAnalog+1,f
  9521  02A2  0834               	movf	??_readAnalog+12,w
  9522  02A3  3DAA               	addwfc	??_readAnalog+2,f
  9523  02A4  0835               	movf	??_readAnalog+13,w
  9524  02A5  3DAB               	addwfc	??_readAnalog+3,f
  9525  02A6  0836               	movf	??_readAnalog+14,w
  9526  02A7  3DAC               	addwfc	??_readAnalog+4,f
  9527  02A8  0826               	movf	readAnalog@channel,w
  9528  02A9  00B7               	movwf	??_readAnalog+15
  9529  02AA  3001               	movlw	1
  9530  02AB                     u3225:	
  9531  02AB  35B7               	lslf	??_readAnalog+15,f
  9532  02AC  3EFF               	addlw	-1
  9533  02AD  1D03               	skipz
  9534  02AE  2AAB               	goto	u3225
  9535  02AF  3537               	lslf	??_readAnalog+15,w
  9536  02B0  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9537  02B1  0086               	movwf	6
  9538  02B2  0187               	clrf	7
  9539  02B3  0829               	movf	??_readAnalog+1,w
  9540  02B4  3FC0               	movwi [0]fsr1
  9541  02B5  082A               	movf	??_readAnalog+2,w
  9542  02B6  3FC1               	movwi [1]fsr1
  9543  02B7  082B               	movf	??_readAnalog+3,w
  9544  02B8  3FC2               	movwi [2]fsr1
  9545  02B9  082C               	movf	??_readAnalog+4,w
  9546  02BA  3FC3               	movwi [3]fsr1
  9547                           
  9548                           ;adc.c: 48: if(channel>=(2-1))
  9549  02BB  0827               	movf	readAnalog@channel+1,w
  9550  02BC  3A80               	xorlw	128
  9551  02BD  00A8               	movwf	??_readAnalog
  9552  02BE  3080               	movlw	128
  9553  02BF  0228               	subwf	??_readAnalog,w
  9554  02C0  1D03               	skipz
  9555  02C1  2AC4               	goto	u3235
  9556  02C2  3001               	movlw	1
  9557  02C3  0226               	subwf	readAnalog@channel,w
  9558  02C4                     u3235:	
  9559  02C4  1C03               	skipc
  9560  02C5  2AD4               	goto	l2850
  9561                           
  9562                           ;adc.c: 49: {
  9563                           ;adc.c: 50: sampleIndex+=1;
  9564  02C6  3001               	movlw	1
  9565  02C7  0021               	movlb	1	; select bank1
  9566  02C8  07BC               	addwf	_sampleIndex^(0+128),f
  9567  02C9  3000               	movlw	0
  9568  02CA  3DBD               	addwfc	(_sampleIndex+1)^(0+128),f
  9569                           
  9570                           ;adc.c: 51: if(sampleIndex >= 40)sampleIndex = 0;
  9571  02CB  3000               	movlw	0
  9572  02CC  023D               	subwf	(_sampleIndex+1)^(0+128),w
  9573  02CD  3028               	movlw	40
  9574  02CE  1903               	skipnz
  9575  02CF  023C               	subwf	_sampleIndex^(0+128),w
  9576  02D0  1C03               	skipc
  9577  02D1  2AD4               	goto	l2850
  9578  02D2  01BC               	clrf	_sampleIndex^(0+128)
  9579  02D3  01BD               	clrf	(_sampleIndex+1)^(0+128)
  9580  02D4                     l2850:	
  9581                           
  9582                           ;adc.c: 52: }
  9583                           ;adc.c: 54: value = totals[channel]/40;
  9584  02D4  3000               	movlw	0
  9585  02D5  00F3               	movwf	___aldiv@divisor+3
  9586  02D6  3000               	movlw	0
  9587  02D7  00F2               	movwf	___aldiv@divisor+2
  9588  02D8  3000               	movlw	0
  9589  02D9  00F1               	movwf	___aldiv@divisor+1
  9590  02DA  3028               	movlw	40
  9591  02DB  00F0               	movwf	___aldiv@divisor
  9592  02DC  0020               	movlb	0	; select bank0
  9593  02DD  0826               	movf	readAnalog@channel,w
  9594  02DE  00A8               	movwf	??_readAnalog
  9595  02DF  3001               	movlw	1
  9596  02E0                     u3255:	
  9597  02E0  35A8               	lslf	??_readAnalog,f
  9598  02E1  3EFF               	addlw	-1
  9599  02E2  1D03               	skipz
  9600  02E3  2AE0               	goto	u3255
  9601  02E4  3528               	lslf	??_readAnalog,w
  9602  02E5  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9603  02E6  0086               	movwf	6
  9604  02E7  0187               	clrf	7
  9605  02E8  3F40               	moviw [0]fsr1
  9606  02E9  00F4               	movwf	___aldiv@dividend
  9607  02EA  3F41               	moviw [1]fsr1
  9608  02EB  00F5               	movwf	___aldiv@dividend+1
  9609  02EC  3F42               	moviw [2]fsr1
  9610  02ED  00F6               	movwf	___aldiv@dividend+2
  9611  02EE  3F43               	moviw [3]fsr1
  9612  02EF  00F7               	movwf	___aldiv@dividend+3
  9613  02F0  318A  225B         	fcall	___aldiv
  9614  02F2  0871               	movf	?___aldiv+1,w
  9615  02F3  00FC               	movwf	readAnalog@value+1
  9616  02F4  0870               	movf	?___aldiv,w
  9617  02F5  00FB               	movwf	readAnalog@value
  9618                           
  9619                           ;adc.c: 56: return value;
  9620  02F6  087C               	movf	readAnalog@value+1,w
  9621  02F7  0020               	movlb	0	; select bank0
  9622  02F8  00A7               	movwf	?_readAnalog+1
  9623  02F9  087B               	movf	readAnalog@value,w
  9624  02FA  00A6               	movwf	?_readAnalog
  9625  02FB  0008               	return
  9626  02FC                     __end_of_readAnalog:	
  9627                           
  9628                           	psect	text14
  9629  0A5B                     __ptext14:	
  9630 ;; *************** function ___aldiv *****************
  9631 ;; Defined at:
  9632 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;  divisor         4    0[COMMON] long 
  9635 ;;  dividend        4    4[COMMON] long 
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;  quotient        4    2[BANK0 ] long 
  9638 ;;  sign            1    1[BANK0 ] unsigned char 
  9639 ;;  counter         1    0[BANK0 ] unsigned char 
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  4    0[COMMON] long 
  9642 ;; Registers used:
  9643 ;;		wreg, status,2, status,0
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9649 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9650 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9652 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9653 ;;Total ram usage:       15 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; This function calls:
  9656 ;;		Nothing
  9657 ;; This function is called by:
  9658 ;;		_readAnalog
  9659 ;;		_main
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           
  9664                           ;psect for function ___aldiv
  9665  0A5B                     ___aldiv:	
  9666                           
  9667                           ;incstack = 0
  9668                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9669  0A5B  0020               	movlb	0	; select bank0
  9670  0A5C  01A1               	clrf	___aldiv@sign
  9671  0A5D  1FF3               	btfss	___aldiv@divisor+3,7
  9672  0A5E  2A6C               	goto	l573
  9673  0A5F  09F0               	comf	___aldiv@divisor,f
  9674  0A60  09F1               	comf	___aldiv@divisor+1,f
  9675  0A61  09F2               	comf	___aldiv@divisor+2,f
  9676  0A62  09F3               	comf	___aldiv@divisor+3,f
  9677  0A63  0AF0               	incf	___aldiv@divisor,f
  9678  0A64  1903               	skipnz
  9679  0A65  0AF1               	incf	___aldiv@divisor+1,f
  9680  0A66  1903               	skipnz
  9681  0A67  0AF2               	incf	___aldiv@divisor+2,f
  9682  0A68  1903               	skipnz
  9683  0A69  0AF3               	incf	___aldiv@divisor+3,f
  9684  0A6A  01A1               	clrf	___aldiv@sign
  9685  0A6B  0AA1               	incf	___aldiv@sign,f
  9686  0A6C                     l573:	
  9687  0A6C  1FF7               	btfss	___aldiv@dividend+3,7
  9688  0A6D  2A7D               	goto	l2714
  9689  0A6E  09F4               	comf	___aldiv@dividend,f
  9690  0A6F  09F5               	comf	___aldiv@dividend+1,f
  9691  0A70  09F6               	comf	___aldiv@dividend+2,f
  9692  0A71  09F7               	comf	___aldiv@dividend+3,f
  9693  0A72  0AF4               	incf	___aldiv@dividend,f
  9694  0A73  1903               	skipnz
  9695  0A74  0AF5               	incf	___aldiv@dividend+1,f
  9696  0A75  1903               	skipnz
  9697  0A76  0AF6               	incf	___aldiv@dividend+2,f
  9698  0A77  1903               	skipnz
  9699  0A78  0AF7               	incf	___aldiv@dividend+3,f
  9700  0A79  3001               	movlw	1
  9701  0A7A  00F8               	movwf	??___aldiv
  9702  0A7B  0878               	movf	??___aldiv,w
  9703  0A7C  06A1               	xorwf	___aldiv@sign,f
  9704  0A7D                     l2714:	
  9705  0A7D  3000               	movlw	0
  9706  0A7E  00A5               	movwf	___aldiv@quotient+3
  9707  0A7F  3000               	movlw	0
  9708  0A80  00A4               	movwf	___aldiv@quotient+2
  9709  0A81  3000               	movlw	0
  9710  0A82  00A3               	movwf	___aldiv@quotient+1
  9711  0A83  3000               	movlw	0
  9712  0A84  00A2               	movwf	___aldiv@quotient
  9713  0A85  0873               	movf	___aldiv@divisor+3,w
  9714  0A86  0472               	iorwf	___aldiv@divisor+2,w
  9715  0A87  0471               	iorwf	___aldiv@divisor+1,w
  9716  0A88  0470               	iorwf	___aldiv@divisor,w
  9717  0A89  1903               	skipnz
  9718  0A8A  2AC6               	goto	l2736
  9719  0A8B  01A0               	clrf	___aldiv@counter
  9720  0A8C  0AA0               	incf	___aldiv@counter,f
  9721  0A8D                     l2722:	
  9722  0A8D  1BF3               	btfsc	___aldiv@divisor+3,7
  9723  0A8E  2A9B               	goto	l2724
  9724  0A8F  3001               	movlw	1
  9725  0A90                     u2935:	
  9726  0A90  35F0               	lslf	___aldiv@divisor,f
  9727  0A91  0DF1               	rlf	___aldiv@divisor+1,f
  9728  0A92  0DF2               	rlf	___aldiv@divisor+2,f
  9729  0A93  0DF3               	rlf	___aldiv@divisor+3,f
  9730  0A94  0B89               	decfsz	9,f
  9731  0A95  2A90               	goto	u2935
  9732  0A96  3001               	movlw	1
  9733  0A97  00F8               	movwf	??___aldiv
  9734  0A98  0878               	movf	??___aldiv,w
  9735  0A99  07A0               	addwf	___aldiv@counter,f
  9736  0A9A  2A8D               	goto	l2722
  9737  0A9B                     l2724:	
  9738  0A9B  3001               	movlw	1
  9739  0A9C                     u2955:	
  9740  0A9C  35A2               	lslf	___aldiv@quotient,f
  9741  0A9D  0DA3               	rlf	___aldiv@quotient+1,f
  9742  0A9E  0DA4               	rlf	___aldiv@quotient+2,f
  9743  0A9F  0DA5               	rlf	___aldiv@quotient+3,f
  9744  0AA0  0B89               	decfsz	9,f
  9745  0AA1  2A9C               	goto	u2955
  9746  0AA2  0873               	movf	___aldiv@divisor+3,w
  9747  0AA3  0277               	subwf	___aldiv@dividend+3,w
  9748  0AA4  1D03               	skipz
  9749  0AA5  2AB0               	goto	u2965
  9750  0AA6  0872               	movf	___aldiv@divisor+2,w
  9751  0AA7  0276               	subwf	___aldiv@dividend+2,w
  9752  0AA8  1D03               	skipz
  9753  0AA9  2AB0               	goto	u2965
  9754  0AAA  0871               	movf	___aldiv@divisor+1,w
  9755  0AAB  0275               	subwf	___aldiv@dividend+1,w
  9756  0AAC  1D03               	skipz
  9757  0AAD  2AB0               	goto	u2965
  9758  0AAE  0870               	movf	___aldiv@divisor,w
  9759  0AAF  0274               	subwf	___aldiv@dividend,w
  9760  0AB0                     u2965:	
  9761  0AB0  1C03               	skipc
  9762  0AB1  2ABB               	goto	l2732
  9763  0AB2  0870               	movf	___aldiv@divisor,w
  9764  0AB3  02F4               	subwf	___aldiv@dividend,f
  9765  0AB4  0871               	movf	___aldiv@divisor+1,w
  9766  0AB5  3BF5               	subwfb	___aldiv@dividend+1,f
  9767  0AB6  0872               	movf	___aldiv@divisor+2,w
  9768  0AB7  3BF6               	subwfb	___aldiv@dividend+2,f
  9769  0AB8  0873               	movf	___aldiv@divisor+3,w
  9770  0AB9  3BF7               	subwfb	___aldiv@dividend+3,f
  9771  0ABA  1422               	bsf	___aldiv@quotient,0
  9772  0ABB                     l2732:	
  9773  0ABB  3001               	movlw	1
  9774  0ABC                     u2975:	
  9775  0ABC  36F3               	lsrf	___aldiv@divisor+3,f
  9776  0ABD  0CF2               	rrf	___aldiv@divisor+2,f
  9777  0ABE  0CF1               	rrf	___aldiv@divisor+1,f
  9778  0ABF  0CF0               	rrf	___aldiv@divisor,f
  9779  0AC0  0B89               	decfsz	9,f
  9780  0AC1  2ABC               	goto	u2975
  9781  0AC2  3001               	movlw	1
  9782  0AC3  02A0               	subwf	___aldiv@counter,f
  9783  0AC4  1D03               	btfss	3,2
  9784  0AC5  2A9B               	goto	l2724
  9785  0AC6                     l2736:	
  9786  0AC6  0821               	movf	___aldiv@sign,w
  9787  0AC7  1903               	btfsc	3,2
  9788  0AC8  2AD4               	goto	l2740
  9789  0AC9  09A2               	comf	___aldiv@quotient,f
  9790  0ACA  09A3               	comf	___aldiv@quotient+1,f
  9791  0ACB  09A4               	comf	___aldiv@quotient+2,f
  9792  0ACC  09A5               	comf	___aldiv@quotient+3,f
  9793  0ACD  0AA2               	incf	___aldiv@quotient,f
  9794  0ACE  1903               	skipnz
  9795  0ACF  0AA3               	incf	___aldiv@quotient+1,f
  9796  0AD0  1903               	skipnz
  9797  0AD1  0AA4               	incf	___aldiv@quotient+2,f
  9798  0AD2  1903               	skipnz
  9799  0AD3  0AA5               	incf	___aldiv@quotient+3,f
  9800  0AD4                     l2740:	
  9801  0AD4  0825               	movf	___aldiv@quotient+3,w
  9802  0AD5  00F3               	movwf	?___aldiv+3
  9803  0AD6  0824               	movf	___aldiv@quotient+2,w
  9804  0AD7  00F2               	movwf	?___aldiv+2
  9805  0AD8  0823               	movf	___aldiv@quotient+1,w
  9806  0AD9  00F1               	movwf	?___aldiv+1
  9807  0ADA  0822               	movf	___aldiv@quotient,w
  9808  0ADB  00F0               	movwf	?___aldiv
  9809  0ADC  0008               	return
  9810  0ADD                     __end_of___aldiv:	
  9811                           
  9812                           	psect	text15
  9813  1673                     __ptext15:	
  9814 ;; *************** function _ADCRead *****************
  9815 ;; Defined at:
  9816 ;;		line 16 in file "adc.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;  channel         1    wreg     enum E13559
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  channel         1    3[COMMON] enum E13559
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  2    0[COMMON] unsigned int 
  9823 ;; Registers used:
  9824 ;;		wreg
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9830 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;Total ram usage:        4 bytes
  9835 ;; Hardware stack levels used:    1
  9836 ;; This function calls:
  9837 ;;		Nothing
  9838 ;; This function is called by:
  9839 ;;		_readAnalog
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843                           
  9844                           ;psect for function _ADCRead
  9845  1673                     _ADCRead:	
  9846                           
  9847                           ;incstack = 0
  9848                           ; Regs used in _ADCRead: [wreg]
  9849                           ;ADCRead@channel stored from wreg
  9850  1673  00F3               	movwf	ADCRead@channel
  9851                           
  9852                           ;adc.c: 18: ADPCH = channel;
  9853  1674  0873               	movf	ADCRead@channel,w
  9854  1675  0021               	movlb	1	; select bank1
  9855  1676  009E               	movwf	30	;volatile
  9856                           
  9857                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9858  1677  1793               	bsf	19,7	;volatile
  9859                           
  9860                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9861  1678  1313               	bcf	19,6	;volatile
  9862                           
  9863                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9864  1679  1413               	bsf	19,0	;volatile
  9865  167A                     l55:	
  9866                           ;adc.c: 27: {
  9867                           
  9868                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9869                           
  9870  167A  1813               	btfsc	19,0	;volatile
  9871  167B  2E7A               	goto	l55
  9872                           
  9873                           ;adc.c: 28: }
  9874                           ;adc.c: 30: return ((ADRESH<<8)+ADRESL);
  9875  167C  080D               	movf	13,w	;volatile
  9876  167D  00F1               	movwf	?_ADCRead+1
  9877  167E  080C               	movf	12,w	;volatile
  9878  167F  00F0               	movwf	?_ADCRead
  9879  1680  0008               	return
  9880  1681                     __end_of_ADCRead:	
  9881                           
  9882                           	psect	text16
  9883  02FC                     __ptext16:	
  9884 ;; *************** function _menuChoice *****************
  9885 ;; Defined at:
  9886 ;;		line 52 in file "menu.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;		None
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;		None
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1    wreg      void 
  9893 ;; Registers used:
  9894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9902 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9903 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9904 ;;Total ram usage:        5 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:    3
  9907 ;; This function calls:
  9908 ;;		_LCD_Clear
  9909 ;;		_LCD_Set_Cursor
  9910 ;;		_LCD_Write_Char
  9911 ;;		_LCD_Write_Int
  9912 ;;		_LCD_Write_String
  9913 ;;		_PWM7_LoadDutyValue
  9914 ;;		_readKey
  9915 ;; This function is called by:
  9916 ;;		_main
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           
  9921                           ;psect for function _menuChoice
  9922  02FC                     _menuChoice:	
  9923  02FC                     l2958:	
  9924                           ;menu.c: 54: while(RB2 != 1)
  9925                           
  9926                           ;incstack = 0
  9927                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9928                           
  9929  02FC  0020               	movlb	0	; select bank0
  9930  02FD  190D               	btfsc	13,2	;volatile
  9931  02FE  2B55               	goto	l2960
  9932                           
  9933                           ;menu.c: 55: {
  9934                           ;menu.c: 56: choice = readKey();
  9935  02FF  3180  2004  3182   	fcall	_readKey
  9936  0302  0020               	movlb	0	; select bank0
  9937  0303  00AE               	movwf	??_menuChoice
  9938  0304  082E               	movf	??_menuChoice,w
  9939  0305  0021               	movlb	1	; select bank1
  9940  0306  00C0               	movwf	_choice^(0+128)
  9941                           
  9942                           ;menu.c: 58: if(timer > 4000)
  9943  0307  083F               	movf	(_timer+1)^(0+128),w
  9944  0308  3A80               	xorlw	128
  9945  0309  0020               	movlb	0	; select bank0
  9946  030A  00AE               	movwf	??_menuChoice
  9947  030B  308F               	movlw	143
  9948  030C  022E               	subwf	??_menuChoice,w
  9949  030D  1D03               	skipz
  9950  030E  2B12               	goto	u3315
  9951  030F  30A1               	movlw	161
  9952  0310  0021               	movlb	1	; select bank1
  9953  0311  023E               	subwf	_timer^(0+128),w
  9954  0312                     u3315:	
  9955  0312  1C03               	skipc
  9956  0313  2B18               	goto	l2936
  9957                           
  9958                           ;menu.c: 59: {
  9959                           ;menu.c: 60: timer = 0;
  9960  0314  0021               	movlb	1	; select bank1
  9961  0315  01BE               	clrf	_timer^(0+128)
  9962  0316  01BF               	clrf	(_timer+1)^(0+128)
  9963                           
  9964                           ;menu.c: 61: goto Exit;
  9965  0317  2D2E               	goto	l3068
  9966  0318                     l2936:	
  9967                           
  9968                           ;menu.c: 62: }
  9969                           ;menu.c: 64: if(timer2>125){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}
      +                          else { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
  9970  0318  307E               	movlw	126
  9971  0319  0021               	movlb	1	; select bank1
  9972  031A  0244               	subwf	_timer2^(0+128),w
  9973  031B  1C03               	skipc
  9974  031C  2B26               	goto	l2942
  9975  031D  01F4               	clrf	LCD_Set_Cursor@y
  9976  031E  3000               	movlw	0
  9977  031F  3188  2080  3182   	fcall	_LCD_Set_Cursor
  9978  0322  305F               	movlw	low (STR_3| (0+32768))
  9979  0323  00F5               	movwf	LCD_Write_String@a
  9980  0324  3090               	movlw	high (STR_3| (0+32768))
  9981  0325  2B2E               	goto	L3
  9982  0326                     l2942:	
  9983  0326  01F4               	clrf	LCD_Set_Cursor@y
  9984  0327  3000               	movlw	0
  9985  0328  3188  2080  3182   	fcall	_LCD_Set_Cursor
  9986  032B  304E               	movlw	low (STR_4| (0+32768))
  9987  032C  00F5               	movwf	LCD_Write_String@a
  9988  032D  3090               	movlw	high (STR_4| (0+32768))
  9989  032E                     L3:	
  9990  032E  00F6               	movwf	LCD_Write_String@a+1
  9991  032F  3196  26EE  3182   	fcall	_LCD_Write_String
  9992                           
  9993                           ;menu.c: 66: { LCD_Set_Cursor(0,1); LCD_Write_String(desc[choice]);};
  9994  0332  01F4               	clrf	LCD_Set_Cursor@y
  9995  0333  0AF4               	incf	LCD_Set_Cursor@y,f
  9996  0334  3000               	movlw	0
  9997  0335  3188  2080  3182   	fcall	_LCD_Set_Cursor
  9998  0338  0021               	movlb	1	; select bank1
  9999  0339  3540               	lslf	_choice^(0+128),w
 10000  033A  3EB4               	addlw	(low (_desc| (0+256)))& (0+255)
 10001  033B  0086               	movwf	6
 10002  033C  3001               	movlw	1	; select bank3/4
 10003  033D  0087               	movwf	7
 10004  033E  3F40               	moviw [0]fsr1
 10005  033F  00F5               	movwf	LCD_Write_String@a
 10006  0340  3F41               	moviw [1]fsr1
 10007  0341  00F6               	movwf	LCD_Write_String@a+1
 10008  0342  3196  26EE  3182   	fcall	_LCD_Write_String
 10009                           
 10010                           ;menu.c: 68: if(timer2>249)timer2=0;
 10011  0345  30FA               	movlw	250
 10012  0346  0021               	movlb	1	; select bank1
 10013  0347  0244               	subwf	_timer2^(0+128),w
 10014  0348  1803               	btfsc	3,0
 10015  0349  01C4               	clrf	_timer2^(0+128)
 10016                           
 10017                           ;menu.c: 70: timer+=1;
 10018  034A  3001               	movlw	1
 10019  034B  07BE               	addwf	_timer^(0+128),f
 10020  034C  3000               	movlw	0
 10021  034D  3DBF               	addwfc	(_timer+1)^(0+128),f
 10022                           
 10023                           ;menu.c: 71: timer2+=1;
 10024  034E  3001               	movlw	1
 10025  034F  0020               	movlb	0	; select bank0
 10026  0350  00AE               	movwf	??_menuChoice
 10027  0351  082E               	movf	??_menuChoice,w
 10028  0352  0021               	movlb	1	; select bank1
 10029  0353  07C4               	addwf	_timer2^(0+128),f
 10030  0354  2AFC               	goto	l2958
 10031  0355                     l2960:	
 10032                           
 10033                           ;menu.c: 72: }
 10034                           ;menu.c: 73: timer=0;
 10035  0355  0021               	movlb	1	; select bank1
 10036  0356  01BE               	clrf	_timer^(0+128)
 10037  0357  01BF               	clrf	(_timer+1)^(0+128)
 10038                           
 10039                           ;menu.c: 74: timer2=0;
 10040  0358  01C4               	clrf	_timer2^(0+128)
 10041                           
 10042                           ;menu.c: 76: _delay((unsigned long)((1000)*(32000000/4000.0)));
 10043  0359  3029               	movlw	41
 10044  035A  0020               	movlb	0	; select bank0
 10045  035B  00B0               	movwf	??_menuChoice+2
 10046  035C  3096               	movlw	150
 10047  035D  00AF               	movwf	??_menuChoice+1
 10048  035E  30A6               	movlw	166
 10049  035F  00AE               	movwf	??_menuChoice
 10050  0360                     u3687:	
 10051  0360  0BAE               	decfsz	??_menuChoice,f
 10052  0361  2B60               	goto	u3687
 10053  0362  0BAF               	decfsz	??_menuChoice+1,f
 10054  0363  2B60               	goto	u3687
 10055  0364  0BB0               	decfsz	??_menuChoice+2,f
 10056  0365  2B60               	goto	u3687
 10057                           
 10058                           ;menu.c: 78: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1, 
      +                          0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10059  0366  0021               	movlb	1	; select bank1
 10060  0367  0840               	movf	_choice^(0+128),w
 10061  0368  1D03               	btfss	3,2
 10062  0369  2B7E               	goto	l2970
 10063  036A  01F4               	clrf	LCD_Set_Cursor@y
 10064  036B  0AF4               	incf	LCD_Set_Cursor@y,f
 10065  036C  300A               	movlw	10
 10066  036D  3188  2080  3182   	fcall	_LCD_Set_Cursor
 10067  0370  0021               	movlb	1	; select bank1
 10068  0371  3540               	lslf	_choice^(0+128),w
 10069  0372  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10070  0373  0086               	movwf	6
 10071  0374  0187               	clrf	7
 10072  0375  3F40               	moviw [0]fsr1
 10073  0376  00F9               	movwf	LCD_Write_Int@value
 10074  0377  3F41               	moviw [1]fsr1
 10075  0378  00FA               	movwf	LCD_Write_Int@value+1
 10076  0379  01FB               	clrf	LCD_Write_Int@fieldLength
 10077  037A  03FB               	decf	LCD_Write_Int@fieldLength,f
 10078  037B  01FC               	clrf	LCD_Write_Int@numPlaces
 10079  037C  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10080  037D  2B90               	goto	L4
 10081  037E                     l2970:	
 10082  037E  01F4               	clrf	LCD_Set_Cursor@y
 10083  037F  0AF4               	incf	LCD_Set_Cursor@y,f
 10084  0380  300A               	movlw	10
 10085  0381  3188  2080  3182   	fcall	_LCD_Set_Cursor
 10086  0384  0021               	movlb	1	; select bank1
 10087  0385  3540               	lslf	_choice^(0+128),w
 10088  0386  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10089  0387  0086               	movwf	6
 10090  0388  0187               	clrf	7
 10091  0389  3F40               	moviw [0]fsr1
 10092  038A  00F9               	movwf	LCD_Write_Int@value
 10093  038B  3F41               	moviw [1]fsr1
 10094  038C  00FA               	movwf	LCD_Write_Int@value+1
 10095  038D  01FB               	clrf	LCD_Write_Int@fieldLength
 10096  038E  03FB               	decf	LCD_Write_Int@fieldLength,f
 10097  038F  01FC               	clrf	LCD_Write_Int@numPlaces
 10098  0390                     L4:	
 10099  0390  01FD               	clrf	LCD_Write_Int@sign
 10100  0391  318D  2570  3182   	fcall	_LCD_Write_Int
 10101                           
 10102                           ;menu.c: 80: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10103  0394  3052               	movlw	82
 10104  0395  0020               	movlb	0	; select bank0
 10105  0396  00B0               	movwf	??_menuChoice+2
 10106  0397  302C               	movlw	44
 10107  0398  00AF               	movwf	??_menuChoice+1
 10108  0399  304F               	movlw	79
 10109  039A  00AE               	movwf	??_menuChoice
 10110  039B                     u3697:	
 10111  039B  0BAE               	decfsz	??_menuChoice,f
 10112  039C  2B9B               	goto	u3697
 10113  039D  0BAF               	decfsz	??_menuChoice+1,f
 10114  039E  2B9B               	goto	u3697
 10115  039F  0BB0               	decfsz	??_menuChoice+2,f
 10116  03A0  2B9B               	goto	u3697
 10117  03A1  3200               	nop2
 10118                           
 10119                           ;menu.c: 82: while(RB2 != 1)
 10120  03A2  2D00               	goto	l3066
 10121  03A3                     l2986:	
 10122                           ;menu.c: 89: goto Exit;
 10123                           
 10124                           
 10125                           ;menu.c: 90: }
 10126                           ;menu.c: 91: _delay((unsigned long)((2)*(32000000/4000.0)));
 10127  03A3  3015               	movlw	21
 10128  03A4  0020               	movlb	0	; select bank0
 10129  03A5  00AF               	movwf	??_menuChoice+1
 10130  03A6  30C6               	movlw	198
 10131  03A7  00AE               	movwf	??_menuChoice
 10132  03A8                     u3717:	
 10133  03A8  0BAE               	decfsz	??_menuChoice,f
 10134  03A9  2BA8               	goto	u3717
 10135  03AA  0BAF               	decfsz	??_menuChoice+1,f
 10136  03AB  2BA8               	goto	u3717
 10137  03AC  0000               	nop
 10138                           
 10139                           ;menu.c: 92: timer+=1;
 10140  03AD  3001               	movlw	1
 10141  03AE  0021               	movlb	1	; select bank1
 10142  03AF  07BE               	addwf	_timer^(0+128),f
 10143  03B0  3000               	movlw	0
 10144  03B1  3DBF               	addwfc	(_timer+1)^(0+128),f
 10145                           
 10146                           ;menu.c: 94: if(RB0==1)
 10147  03B2  0020               	movlb	0	; select bank0
 10148  03B3  1C0D               	btfss	13,0	;volatile
 10149  03B4  2C47               	goto	l3020
 10150                           
 10151                           ;menu.c: 95: {
 10152                           ;menu.c: 96: delayCount+=2;
 10153  03B5  3002               	movlw	2
 10154  03B6  00AE               	movwf	??_menuChoice
 10155  03B7  082E               	movf	??_menuChoice,w
 10156  03B8  0021               	movlb	1	; select bank1
 10157  03B9  07C1               	addwf	_delayCount^(0+128),f
 10158                           
 10159                           ;menu.c: 98: setpoint[choice]+=1;
 10160  03BA  3540               	lslf	_choice^(0+128),w
 10161  03BB  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10162  03BC  0086               	movwf	6
 10163  03BD  0187               	clrf	7
 10164  03BE  3001               	movlw	1
 10165  03BF  0781               	addwf	1,f
 10166  03C0  3141               	addfsr 1,1
 10167  03C1  1803               	skipnc
 10168  03C2  0A81               	incf	1,f
 10169                           
 10170                           ;menu.c: 99: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[choi
      +                          ce];
 10171  03C3  3540               	lslf	_choice^(0+128),w
 10172  03C4  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10173  03C5  0086               	movwf	6
 10174  03C6  0187               	clrf	7
 10175  03C7  3F40               	moviw [0]fsr1
 10176  03C8  0020               	movlb	0	; select bank0
 10177  03C9  00AE               	movwf	??_menuChoice
 10178  03CA  3F41               	moviw [1]fsr1
 10179  03CB  00AF               	movwf	??_menuChoice+1
 10180  03CC  0021               	movlb	1	; select bank1
 10181  03CD  3540               	lslf	_choice^(0+128),w
 10182  03CE  3EB8               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10183  03CF  0086               	movwf	6
 10184  03D0  3001               	movlw	1	; select bank3/4
 10185  03D1  0087               	movwf	7
 10186  03D2  3F40               	moviw [0]fsr1
 10187  03D3  0020               	movlb	0	; select bank0
 10188  03D4  00B0               	movwf	??_menuChoice+2
 10189  03D5  3F41               	moviw [1]fsr1
 10190  03D6  00B1               	movwf	??_menuChoice+3
 10191  03D7  0831               	movf	??_menuChoice+3,w
 10192  03D8  3A80               	xorlw	128
 10193  03D9  00B2               	movwf	??_menuChoice+4
 10194  03DA  082F               	movf	??_menuChoice+1,w
 10195  03DB  3A80               	xorlw	128
 10196  03DC  0232               	subwf	??_menuChoice+4,w
 10197  03DD  1D03               	skipz
 10198  03DE  2BE1               	goto	u3385
 10199  03DF  082E               	movf	??_menuChoice,w
 10200  03E0  0230               	subwf	??_menuChoice+2,w
 10201  03E1                     u3385:	
 10202  03E1  1803               	skipnc
 10203  03E2  2BF1               	goto	l2998
 10204  03E3  0021               	movlb	1	; select bank1
 10205  03E4  3540               	lslf	_choice^(0+128),w
 10206  03E5  3EB8               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10207  03E6  0086               	movwf	6
 10208  03E7  3001               	movlw	1	; select bank3/4
 10209  03E8  0087               	movwf	7
 10210  03E9  3540               	lslf	_choice^(0+128),w
 10211  03EA  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10212  03EB  0084               	movwf	4
 10213  03EC  0185               	clrf	5
 10214  03ED  3F40               	moviw [0]fsr1
 10215  03EE  3F80               	movwi [0]fsr0
 10216  03EF  3F41               	moviw [1]fsr1
 10217  03F0  3F81               	movwi [1]fsr0
 10218  03F1                     l2998:	
 10219                           
 10220                           ;menu.c: 100: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10221  03F1  0021               	movlb	1	; select bank1
 10222  03F2  0840               	movf	_choice^(0+128),w
 10223  03F3  1D03               	btfss	3,2
 10224  03F4  2C09               	goto	l3004
 10225  03F5  01F4               	clrf	LCD_Set_Cursor@y
 10226  03F6  0AF4               	incf	LCD_Set_Cursor@y,f
 10227  03F7  300A               	movlw	10
 10228  03F8  3188  2080  3182   	fcall	_LCD_Set_Cursor
 10229  03FB  0021               	movlb	1	; select bank1
 10230  03FC  3540               	lslf	_choice^(0+128),w
 10231  03FD  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10232  03FE  0086               	movwf	6
 10233  03FF  0187               	clrf	7
 10234  0400  3F40               	moviw [0]fsr1
 10235  0401  00F9               	movwf	LCD_Write_Int@value
 10236  0402  3F41               	moviw [1]fsr1
 10237  0403  00FA               	movwf	LCD_Write_Int@value+1
 10238  0404  01FB               	clrf	LCD_Write_Int@fieldLength
 10239  0405  03FB               	decf	LCD_Write_Int@fieldLength,f
 10240  0406  01FC               	clrf	LCD_Write_Int@numPlaces
 10241  0407  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10242  0408  2C1B               	goto	L5
 10243  0409                     l3004:	
 10244  0409  01F4               	clrf	LCD_Set_Cursor@y
 10245  040A  0AF4               	incf	LCD_Set_Cursor@y,f
 10246  040B  300A               	movlw	10
 10247  040C  3188  2080  3182   	fcall	_LCD_Set_Cursor
 10248  040F  0021               	movlb	1	; select bank1
 10249  0410  3540               	lslf	_choice^(0+128),w
 10250  0411  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10251  0412  0086               	movwf	6
 10252  0413  0187               	clrf	7
 10253  0414  3F40               	moviw [0]fsr1
 10254  0415  00F9               	movwf	LCD_Write_Int@value
 10255  0416  3F41               	moviw [1]fsr1
 10256  0417  00FA               	movwf	LCD_Write_Int@value+1
 10257  0418  01FB               	clrf	LCD_Write_Int@fieldLength
 10258  0419  03FB               	decf	LCD_Write_Int@fieldLength,f
 10259  041A  01FC               	clrf	LCD_Write_Int@numPlaces
 10260  041B                     L5:	
 10261  041B  01FD               	clrf	LCD_Write_Int@sign
 10262  041C  318D  2570  3182   	fcall	_LCD_Write_Int
 10263                           
 10264                           ;menu.c: 101: LCD_Write_Char(' ');
 10265  041F  3020               	movlw	32
 10266  0420  3197  27A3  3182   	fcall	_LCD_Write_Char
 10267                           
 10268                           ;menu.c: 102: menuDelay=1255;
 10269  0423  30E7               	movlw	231
 10270  0424  0021               	movlb	1	; select bank1
 10271  0425  00B6               	movwf	_menuDelay^(0+128)
 10272  0426  3004               	movlw	4
 10273  0427  00B7               	movwf	(_menuDelay^(0+128)+1)
 10274                           
 10275                           ;menu.c: 103: if(delayCount<30)
 10276  0428  301E               	movlw	30
 10277  0429  0241               	subwf	_delayCount^(0+128),w
 10278  042A  1803               	skipnc
 10279  042B  2C3A               	goto	l364
 10280                           
 10281                           ;menu.c: 104: {
 10282                           ;menu.c: 105: _delay((unsigned long)((150)*(32000000/4000.0)));
 10283  042C  3007               	movlw	7
 10284  042D  0020               	movlb	0	; select bank0
 10285  042E  00B0               	movwf	??_menuChoice+2
 10286  042F  3017               	movlw	23
 10287  0430  00AF               	movwf	??_menuChoice+1
 10288  0431  306F               	movlw	111
 10289  0432  00AE               	movwf	??_menuChoice
 10290  0433                     u3727:	
 10291  0433  0BAE               	decfsz	??_menuChoice,f
 10292  0434  2C33               	goto	u3727
 10293  0435  0BAF               	decfsz	??_menuChoice+1,f
 10294  0436  2C33               	goto	u3727
 10295  0437  0BB0               	decfsz	??_menuChoice+2,f
 10296  0438  2C33               	goto	u3727
 10297  0439  0000               	nop
 10298  043A                     l364:	
 10299                           
 10300                           ;menu.c: 106: }
 10301                           ;menu.c: 107: if(delayCount>(30+10))delayCount=(30+10);
 10302  043A  3029               	movlw	41
 10303  043B  0021               	movlb	1	; select bank1
 10304  043C  0241               	subwf	_delayCount^(0+128),w
 10305  043D  1C03               	skipc
 10306  043E  2C45               	goto	l3018
 10307  043F  3028               	movlw	40
 10308  0440  0020               	movlb	0	; select bank0
 10309  0441  00AE               	movwf	??_menuChoice
 10310  0442  082E               	movf	??_menuChoice,w
 10311  0443  0021               	movlb	1	; select bank1
 10312  0444  00C1               	movwf	_delayCount^(0+128)
 10313  0445                     l3018:	
 10314                           
 10315                           ;menu.c: 109: timer=0;
 10316  0445  01BE               	clrf	_timer^(0+128)
 10317  0446  01BF               	clrf	(_timer+1)^(0+128)
 10318  0447                     l3020:	
 10319                           
 10320                           ;menu.c: 110: }
 10321                           ;menu.c: 113: if(RB1==1)
 10322  0447  0020               	movlb	0	; select bank0
 10323  0448  1C8D               	btfss	13,1	;volatile
 10324  0449  2CDB               	goto	l3052
 10325                           
 10326                           ;menu.c: 114: {
 10327                           ;menu.c: 115: delayCount+=2;
 10328  044A  3002               	movlw	2
 10329  044B  00AE               	movwf	??_menuChoice
 10330  044C  082E               	movf	??_menuChoice,w
 10331  044D  0021               	movlb	1	; select bank1
 10332  044E  07C1               	addwf	_delayCount^(0+128),f
 10333                           
 10334                           ;menu.c: 116: setpoint[choice]-=1;
 10335  044F  3540               	lslf	_choice^(0+128),w
 10336  0450  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10337  0451  0086               	movwf	6
 10338  0452  0187               	clrf	7
 10339  0453  30FF               	movlw	255
 10340  0454  0781               	addwf	1,f
 10341  0455  3141               	addfsr 1,1
 10342  0456  30FF               	movlw	255
 10343  0457  3D81               	addwfc	1,f
 10344  0458  317F               	addfsr 1,-1
 10345                           
 10346                           ;menu.c: 117: if(setpoint[choice]<lowRangeSet[choice])setpoint[choice]=lowRangeSet[choic
      +                          e];
 10347  0459  3540               	lslf	_choice^(0+128),w
 10348  045A  3EDE               	addlw	(low (_lowRangeSet| 0))& (0+255)
 10349  045B  0086               	movwf	6
 10350  045C  0187               	clrf	7
 10351  045D  3F40               	moviw [0]fsr1
 10352  045E  0020               	movlb	0	; select bank0
 10353  045F  00AE               	movwf	??_menuChoice
 10354  0460  3F41               	moviw [1]fsr1
 10355  0461  00AF               	movwf	??_menuChoice+1
 10356  0462  0021               	movlb	1	; select bank1
 10357  0463  3540               	lslf	_choice^(0+128),w
 10358  0464  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10359  0465  0086               	movwf	6
 10360  0466  0187               	clrf	7
 10361  0467  3F40               	moviw [0]fsr1
 10362  0468  0020               	movlb	0	; select bank0
 10363  0469  00B0               	movwf	??_menuChoice+2
 10364  046A  3F41               	moviw [1]fsr1
 10365  046B  00B1               	movwf	??_menuChoice+3
 10366  046C  0831               	movf	??_menuChoice+3,w
 10367  046D  3A80               	xorlw	128
 10368  046E  00B2               	movwf	??_menuChoice+4
 10369  046F  082F               	movf	??_menuChoice+1,w
 10370  0470  3A80               	xorlw	128
 10371  0471  0232               	subwf	??_menuChoice+4,w
 10372  0472  1D03               	skipz
 10373  0473  2C76               	goto	u3435
 10374  0474  082E               	movf	??_menuChoice,w
 10375  0475  0230               	subwf	??_menuChoice+2,w
 10376  0476                     u3435:	
 10377  0476  1803               	skipnc
 10378  0477  2C85               	goto	l3030
 10379  0478  0021               	movlb	1	; select bank1
 10380  0479  3540               	lslf	_choice^(0+128),w
 10381  047A  3EDE               	addlw	(low (_lowRangeSet| 0))& (0+255)
 10382  047B  0086               	movwf	6
 10383  047C  0187               	clrf	7
 10384  047D  3540               	lslf	_choice^(0+128),w
 10385  047E  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10386  047F  0084               	movwf	4
 10387  0480  0185               	clrf	5
 10388  0481  3F40               	moviw [0]fsr1
 10389  0482  3F80               	movwi [0]fsr0
 10390  0483  3F41               	moviw [1]fsr1
 10391  0484  3F81               	movwi [1]fsr0
 10392  0485                     l3030:	
 10393                           
 10394                           ;menu.c: 118: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10395  0485  0021               	movlb	1	; select bank1
 10396  0486  0840               	movf	_choice^(0+128),w
 10397  0487  1D03               	btfss	3,2
 10398  0488  2C9D               	goto	l3036
 10399  0489  01F4               	clrf	LCD_Set_Cursor@y
 10400  048A  0AF4               	incf	LCD_Set_Cursor@y,f
 10401  048B  300A               	movlw	10
 10402  048C  3188  2080  3182   	fcall	_LCD_Set_Cursor
 10403  048F  0021               	movlb	1	; select bank1
 10404  0490  3540               	lslf	_choice^(0+128),w
 10405  0491  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10406  0492  0086               	movwf	6
 10407  0493  0187               	clrf	7
 10408  0494  3F40               	moviw [0]fsr1
 10409  0495  00F9               	movwf	LCD_Write_Int@value
 10410  0496  3F41               	moviw [1]fsr1
 10411  0497  00FA               	movwf	LCD_Write_Int@value+1
 10412  0498  01FB               	clrf	LCD_Write_Int@fieldLength
 10413  0499  03FB               	decf	LCD_Write_Int@fieldLength,f
 10414  049A  01FC               	clrf	LCD_Write_Int@numPlaces
 10415  049B  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10416  049C  2CAF               	goto	L6
 10417  049D                     l3036:	
 10418  049D  01F4               	clrf	LCD_Set_Cursor@y
 10419  049E  0AF4               	incf	LCD_Set_Cursor@y,f
 10420  049F  300A               	movlw	10
 10421  04A0  3188  2080  3182   	fcall	_LCD_Set_Cursor
 10422  04A3  0021               	movlb	1	; select bank1
 10423  04A4  3540               	lslf	_choice^(0+128),w
 10424  04A5  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10425  04A6  0086               	movwf	6
 10426  04A7  0187               	clrf	7
 10427  04A8  3F40               	moviw [0]fsr1
 10428  04A9  00F9               	movwf	LCD_Write_Int@value
 10429  04AA  3F41               	moviw [1]fsr1
 10430  04AB  00FA               	movwf	LCD_Write_Int@value+1
 10431  04AC  01FB               	clrf	LCD_Write_Int@fieldLength
 10432  04AD  03FB               	decf	LCD_Write_Int@fieldLength,f
 10433  04AE  01FC               	clrf	LCD_Write_Int@numPlaces
 10434  04AF                     L6:	
 10435  04AF  01FD               	clrf	LCD_Write_Int@sign
 10436  04B0  318D  2570  3182   	fcall	_LCD_Write_Int
 10437                           
 10438                           ;menu.c: 119: LCD_Write_Char(' ');
 10439  04B3  3020               	movlw	32
 10440  04B4  3197  27A3  3182   	fcall	_LCD_Write_Char
 10441                           
 10442                           ;menu.c: 120: menuDelay=1255;
 10443  04B7  30E7               	movlw	231
 10444  04B8  0021               	movlb	1	; select bank1
 10445  04B9  00B6               	movwf	_menuDelay^(0+128)
 10446  04BA  3004               	movlw	4
 10447  04BB  00B7               	movwf	(_menuDelay^(0+128)+1)
 10448                           
 10449                           ;menu.c: 122: if(delayCount<30)
 10450  04BC  301E               	movlw	30
 10451  04BD  0241               	subwf	_delayCount^(0+128),w
 10452  04BE  1803               	skipnc
 10453  04BF  2CCE               	goto	l370
 10454                           
 10455                           ;menu.c: 123: {
 10456                           ;menu.c: 124: _delay((unsigned long)((150)*(32000000/4000.0)));
 10457  04C0  3007               	movlw	7
 10458  04C1  0020               	movlb	0	; select bank0
 10459  04C2  00B0               	movwf	??_menuChoice+2
 10460  04C3  3017               	movlw	23
 10461  04C4  00AF               	movwf	??_menuChoice+1
 10462  04C5  306F               	movlw	111
 10463  04C6  00AE               	movwf	??_menuChoice
 10464  04C7                     u3737:	
 10465  04C7  0BAE               	decfsz	??_menuChoice,f
 10466  04C8  2CC7               	goto	u3737
 10467  04C9  0BAF               	decfsz	??_menuChoice+1,f
 10468  04CA  2CC7               	goto	u3737
 10469  04CB  0BB0               	decfsz	??_menuChoice+2,f
 10470  04CC  2CC7               	goto	u3737
 10471  04CD  0000               	nop
 10472  04CE                     l370:	
 10473                           
 10474                           ;menu.c: 125: }
 10475                           ;menu.c: 127: if(delayCount>(30+10))delayCount=(30+10);
 10476  04CE  3029               	movlw	41
 10477  04CF  0021               	movlb	1	; select bank1
 10478  04D0  0241               	subwf	_delayCount^(0+128),w
 10479  04D1  1C03               	skipc
 10480  04D2  2CD9               	goto	l3050
 10481  04D3  3028               	movlw	40
 10482  04D4  0020               	movlb	0	; select bank0
 10483  04D5  00AE               	movwf	??_menuChoice
 10484  04D6  082E               	movf	??_menuChoice,w
 10485  04D7  0021               	movlb	1	; select bank1
 10486  04D8  00C1               	movwf	_delayCount^(0+128)
 10487  04D9                     l3050:	
 10488                           
 10489                           ;menu.c: 129: timer=0;
 10490  04D9  01BE               	clrf	_timer^(0+128)
 10491  04DA  01BF               	clrf	(_timer+1)^(0+128)
 10492  04DB                     l3052:	
 10493                           
 10494                           ;menu.c: 130: }
 10495                           ;menu.c: 132: PWM7_LoadDutyValue(setpoint[1]);
 10496  04DB  0021               	movlb	1	; select bank1
 10497  04DC  0865               	movf	((_setpoint+1)^(0+128)+2),w
 10498  04DD  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
 10499  04DE  0864               	movf	(_setpoint^(0+128)+2),w
 10500  04DF  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
 10501  04E0  3196  26A6  3182   	fcall	_PWM7_LoadDutyValue
 10502                           
 10503                           ;menu.c: 135: if(delayCount>0)delayCount-=1;
 10504  04E3  0021               	movlb	1	; select bank1
 10505  04E4  0841               	movf	_delayCount^(0+128),w
 10506  04E5  1903               	btfsc	3,2
 10507  04E6  2CE9               	goto	l3058
 10508  04E7  3001               	movlw	1
 10509  04E8  02C1               	subwf	_delayCount^(0+128),f
 10510  04E9                     l3058:	
 10511                           
 10512                           ;menu.c: 137: if(!(RB1 || RB0))
 10513  04E9  0020               	movlb	0	; select bank0
 10514  04EA  1C8D               	btfss	13,1	;volatile
 10515  04EB  180D               	btfsc	13,0	;volatile
 10516  04EC  2D00               	goto	l3066
 10517                           
 10518                           ;menu.c: 138: {
 10519                           ;menu.c: 139: if(menuDelay>0)
 10520  04ED  0021               	movlb	1	; select bank1
 10521  04EE  0837               	movf	(_menuDelay+1)^(0+128),w
 10522  04EF  3A80               	xorlw	128
 10523  04F0  0020               	movlb	0	; select bank0
 10524  04F1  00AE               	movwf	??_menuChoice
 10525  04F2  3080               	movlw	128
 10526  04F3  022E               	subwf	??_menuChoice,w
 10527  04F4  1D03               	skipz
 10528  04F5  2CF9               	goto	u3505
 10529  04F6  3001               	movlw	1
 10530  04F7  0021               	movlb	1	; select bank1
 10531  04F8  0236               	subwf	_menuDelay^(0+128),w
 10532  04F9                     u3505:	
 10533  04F9  1C03               	skipc
 10534  04FA  2D00               	goto	l3066
 10535                           
 10536                           ;menu.c: 140: {
 10537                           ;menu.c: 141: menuDelay-=1;
 10538  04FB  30FF               	movlw	255
 10539  04FC  0021               	movlb	1	; select bank1
 10540  04FD  07B6               	addwf	_menuDelay^(0+128),f
 10541  04FE  30FF               	movlw	255
 10542  04FF  3DB7               	addwfc	(_menuDelay+1)^(0+128),f
 10543  0500                     l3066:	
 10544  0500  0020               	movlb	0	; select bank0
 10545  0501  190D               	btfsc	13,2	;volatile
 10546  0502  2D2E               	goto	l3068
 10547                           
 10548                           ;menu.c: 83: {
 10549                           ;menu.c: 84: if(timer > 4000)
 10550  0503  0021               	movlb	1	; select bank1
 10551  0504  083F               	movf	(_timer+1)^(0+128),w
 10552  0505  3A80               	xorlw	128
 10553  0506  0020               	movlb	0	; select bank0
 10554  0507  00AE               	movwf	??_menuChoice
 10555  0508  308F               	movlw	143
 10556  0509  022E               	subwf	??_menuChoice,w
 10557  050A  1D03               	skipz
 10558  050B  2D0F               	goto	u3365
 10559  050C  30A1               	movlw	161
 10560  050D  0021               	movlb	1	; select bank1
 10561  050E  023E               	subwf	_timer^(0+128),w
 10562  050F                     u3365:	
 10563  050F  1C03               	skipc
 10564  0510  2BA3               	goto	l2986
 10565                           
 10566                           ;menu.c: 85: {
 10567                           ;menu.c: 86: timer = 0;
 10568  0511  0021               	movlb	1	; select bank1
 10569  0512  01BE               	clrf	_timer^(0+128)
 10570  0513  01BF               	clrf	(_timer+1)^(0+128)
 10571                           
 10572                           ;menu.c: 87: { LCD_Set_Cursor(0,0); LCD_Write_String("   Good-Bye!!   ");};
 10573  0514  01F4               	clrf	LCD_Set_Cursor@y
 10574  0515  3000               	movlw	0
 10575  0516  3188  2080  3182   	fcall	_LCD_Set_Cursor
 10576  0519  303D               	movlw	low (STR_5| (0+32768))
 10577  051A  00F5               	movwf	LCD_Write_String@a
 10578  051B  3090               	movlw	high (STR_5| (0+32768))
 10579  051C  00F6               	movwf	LCD_Write_String@a+1
 10580  051D  3196  26EE  3182   	fcall	_LCD_Write_String
 10581                           
 10582                           ;menu.c: 88: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10583  0520  3052               	movlw	82
 10584  0521  0020               	movlb	0	; select bank0
 10585  0522  00B0               	movwf	??_menuChoice+2
 10586  0523  302C               	movlw	44
 10587  0524  00AF               	movwf	??_menuChoice+1
 10588  0525  304F               	movlw	79
 10589  0526  00AE               	movwf	??_menuChoice
 10590  0527                     u3707:	
 10591  0527  0BAE               	decfsz	??_menuChoice,f
 10592  0528  2D27               	goto	u3707
 10593  0529  0BAF               	decfsz	??_menuChoice+1,f
 10594  052A  2D27               	goto	u3707
 10595  052B  0BB0               	decfsz	??_menuChoice+2,f
 10596  052C  2D27               	goto	u3707
 10597  052D  3200               	nop2
 10598  052E                     l3068:	
 10599                           ;menu.c: 142: }
 10600                           ;menu.c: 143: }
 10601                           ;menu.c: 144: }
 10602                           ;menu.c: 145: Exit:
 10603                           
 10604                           
 10605                           ;menu.c: 146: timer=0;
 10606  052E  0021               	movlb	1	; select bank1
 10607  052F  01BE               	clrf	_timer^(0+128)
 10608  0530  01BF               	clrf	(_timer+1)^(0+128)
 10609                           
 10610                           ;menu.c: 147: loop=254;
 10611  0531  30FE               	movlw	254
 10612  0532  0020               	movlb	0	; select bank0
 10613  0533  00AE               	movwf	??_menuChoice
 10614  0534  082E               	movf	??_menuChoice,w
 10615  0535  0021               	movlb	1	; select bank1
 10616  0536  00EE               	movwf	_loop^(0+128)
 10617                           
 10618                           ;menu.c: 148: LCD_Clear();
 10619  0537  3196  263A         	fcall	_LCD_Clear
 10620  0539  0008               	return
 10621  053A                     __end_of_menuChoice:	
 10622                           
 10623                           	psect	text17
 10624  0004                     __ptext17:	
 10625 ;; *************** function _readKey *****************
 10626 ;; Defined at:
 10627 ;;		line 37 in file "menu.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;		None
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;		None
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  1    wreg      unsigned char 
 10634 ;; Registers used:
 10635 ;;		wreg, status,2, status,0
 10636 ;; Tracked objects:
 10637 ;;		On entry : 0/0
 10638 ;;		On exit  : 0/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;Total ram usage:        1 bytes
 10646 ;; Hardware stack levels used:    1
 10647 ;; This function calls:
 10648 ;;		Nothing
 10649 ;; This function is called by:
 10650 ;;		_menuChoice
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           
 10655                           ;psect for function _readKey
 10656  0004                     _readKey:	
 10657                           
 10658                           ;menu.c: 39: if(RB1==1)
 10659                           
 10660                           ;incstack = 0
 10661                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10662  0004  0020               	movlb	0	; select bank0
 10663  0005  1C8D               	btfss	13,1	;volatile
 10664  0006  280D               	goto	l2694
 10665                           
 10666                           ;menu.c: 40: {
 10667                           ;menu.c: 41: if(key>0)key-=1;
 10668  0007  0021               	movlb	1	; select bank1
 10669  0008  0842               	movf	_key^(0+128),w
 10670  0009  1903               	btfsc	3,2
 10671  000A  280D               	goto	l2694
 10672  000B  3001               	movlw	1
 10673  000C  02C2               	subwf	_key^(0+128),f
 10674  000D                     l2694:	
 10675                           
 10676                           ;menu.c: 42: }
 10677                           ;menu.c: 44: if(RB0==1)
 10678  000D  0020               	movlb	0	; select bank0
 10679  000E  1C0D               	btfss	13,0	;volatile
 10680  000F  2818               	goto	l2700
 10681                           
 10682                           ;menu.c: 45: {
 10683                           ;menu.c: 46: if(key<1)key+=1;
 10684  0010  0021               	movlb	1	; select bank1
 10685  0011  0842               	movf	_key^(0+128),w
 10686  0012  1D03               	btfss	3,2
 10687  0013  2818               	goto	l2700
 10688  0014  3001               	movlw	1
 10689  0015  00F0               	movwf	??_readKey
 10690  0016  0870               	movf	??_readKey,w
 10691  0017  07C2               	addwf	_key^(0+128),f
 10692  0018                     l2700:	
 10693                           
 10694                           ;menu.c: 47: }
 10695                           ;menu.c: 49: return key;
 10696  0018  0021               	movlb	1	; select bank1
 10697  0019  0842               	movf	_key^(0+128),w
 10698  001A  0008               	return
 10699  001B                     __end_of_readKey:	
 10700                           
 10701                           	psect	text18
 10702  16A6                     __ptext18:	
 10703 ;; *************** function _PWM7_LoadDutyValue *****************
 10704 ;; Defined at:
 10705 ;;		line 32 in file "pwm.c"
 10706 ;; Parameters:    Size  Location     Type
 10707 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;		None
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  1    wreg      void 
 10712 ;; Registers used:
 10713 ;;		wreg, status,2, status,0
 10714 ;; Tracked objects:
 10715 ;;		On entry : 0/0
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;Total ram usage:        4 bytes
 10724 ;; Hardware stack levels used:    1
 10725 ;; This function calls:
 10726 ;;		Nothing
 10727 ;; This function is called by:
 10728 ;;		_menuChoice
 10729 ;;		_main
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           
 10734                           ;psect for function _PWM7_LoadDutyValue
 10735  16A6                     _PWM7_LoadDutyValue:	
 10736                           
 10737                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10738                           
 10739                           ;incstack = 0
 10740                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10741  16A6  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10742  16A7  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10743  16A8  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10744  16A9  00F2               	movwf	??_PWM7_LoadDutyValue
 10745  16AA  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10746  16AB  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10747  16AC  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10748  16AD  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10749  16AE  0872               	movf	??_PWM7_LoadDutyValue,w
 10750  16AF  0027               	movlb	7	; select bank7
 10751  16B0  0091               	movwf	17	;volatile
 10752                           
 10753                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10754  16B1  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10755  16B2  3903               	andlw	3
 10756  16B3  00F2               	movwf	??_PWM7_LoadDutyValue
 10757  16B4  3005               	movlw	5
 10758  16B5                     u2835:	
 10759  16B5  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10760  16B6  3EFF               	addlw	-1
 10761  16B7  1D03               	skipz
 10762  16B8  2EB5               	goto	u2835
 10763  16B9  3572               	lslf	??_PWM7_LoadDutyValue,w
 10764  16BA  0090               	movwf	16	;volatile
 10765  16BB  0008               	return
 10766  16BC                     __end_of_PWM7_LoadDutyValue:	
 10767                           
 10768                           	psect	text19
 10769  16EE                     __ptext19:	
 10770 ;; *************** function _LCD_Write_String *****************
 10771 ;; Defined at:
 10772 ;;		line 239 in file "lcd.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;  a               2    5[COMMON] PTR const unsigned char 
 10775 ;;		 -> STR_9(17), STR_8(17), STR_7(8), STR_6(5), 
 10776 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(11), 
 10777 ;;		 -> STR_1(11), 
 10778 ;; Auto vars:     Size  Location     Type
 10779 ;;  i               2    8[COMMON] int 
 10780 ;; Return value:  Size  Location     Type
 10781 ;;                  1    wreg      void 
 10782 ;; Registers used:
 10783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10784 ;; Tracked objects:
 10785 ;;		On entry : 0/0
 10786 ;;		On exit  : 0/0
 10787 ;;		Unchanged: 0/0
 10788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10790 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10792 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;Total ram usage:        5 bytes
 10794 ;; Hardware stack levels used:    1
 10795 ;; Hardware stack levels required when called:    2
 10796 ;; This function calls:
 10797 ;;		_LCD_Write_Char
 10798 ;; This function is called by:
 10799 ;;		_menuChoice
 10800 ;;		_main
 10801 ;; This function uses a non-reentrant model
 10802 ;;
 10803                           
 10804                           
 10805                           ;psect for function _LCD_Write_String
 10806  16EE                     _LCD_Write_String:	
 10807                           
 10808                           ;lcd.c: 241: int i;
 10809                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10810                           
 10811                           ;incstack = 0
 10812                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10813  16EE  01F8               	clrf	LCD_Write_String@i
 10814  16EF  01F9               	clrf	LCD_Write_String@i+1
 10815  16F0                     l2546:	
 10816  16F0  0875               	movf	LCD_Write_String@a,w
 10817  16F1  0778               	addwf	LCD_Write_String@i,w
 10818  16F2  0084               	movwf	4
 10819  16F3  0876               	movf	LCD_Write_String@a+1,w
 10820  16F4  3D79               	addwfc	LCD_Write_String@i+1,w
 10821  16F5  0085               	movwf	5
 10822  16F6  0012               	moviw fsr0++
 10823  16F7  1903               	btfsc	3,2
 10824  16F8  0008               	return
 10825                           
 10826                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10827  16F9  0875               	movf	LCD_Write_String@a,w
 10828  16FA  0778               	addwf	LCD_Write_String@i,w
 10829  16FB  0084               	movwf	4
 10830  16FC  0876               	movf	LCD_Write_String@a+1,w
 10831  16FD  3D79               	addwfc	LCD_Write_String@i+1,w
 10832  16FE  0085               	movwf	5
 10833  16FF  0800               	movf	0,w	;code access
 10834  1700  3197  27A3  3196   	fcall	_LCD_Write_Char
 10835  1703  3001               	movlw	1
 10836  1704  07F8               	addwf	LCD_Write_String@i,f
 10837  1705  3000               	movlw	0
 10838  1706  3DF9               	addwfc	LCD_Write_String@i+1,f
 10839  1707  2EF0               	goto	l2546
 10840  1708                     __end_of_LCD_Write_String:	
 10841                           
 10842                           	psect	text20
 10843  0D70                     __ptext20:	
 10844 ;; *************** function _LCD_Write_Int *****************
 10845 ;; Defined at:
 10846 ;;		line 246 in file "lcd.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  value           2    9[COMMON] int 
 10849 ;;  fieldLength     1   11[COMMON] char 
 10850 ;;  numPlaces       1   12[COMMON] char 
 10851 ;;  sign            1   13[COMMON] char 
 10852 ;; Auto vars:     Size  Location     Type
 10853 ;;  str             5    5[BANK0 ] unsigned char [5]
 10854 ;;  i               2   12[BANK0 ] int 
 10855 ;;  j               2   10[BANK0 ] int 
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      void 
 10858 ;; Registers used:
 10859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10865 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;Total ram usage:       19 bytes
 10870 ;; Hardware stack levels used:    1
 10871 ;; Hardware stack levels required when called:    2
 10872 ;; This function calls:
 10873 ;;		_LCD_Write_Char
 10874 ;;		___awdiv
 10875 ;;		___awmod
 10876 ;; This function is called by:
 10877 ;;		_menuChoice
 10878 ;;		_main
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           
 10883                           ;psect for function _LCD_Write_Int
 10884  0D70                     _LCD_Write_Int:	
 10885                           
 10886                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10887                           
 10888                           ;incstack = 0
 10889                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10890  0D70  30BC               	movlw	low LCD_Write_Int@F13694
 10891  0D71  0086               	movwf	6
 10892  0D72  3001               	movlw	high LCD_Write_Int@F13694
 10893  0D73  0087               	movwf	7
 10894  0D74  3025               	movlw	low LCD_Write_Int@str
 10895  0D75  0084               	movwf	4
 10896  0D76  3000               	movlw	high LCD_Write_Int@str
 10897  0D77  0085               	movwf	5
 10898  0D78  3005               	movlw	5
 10899  0D79  0020               	movlb	0	; select bank0
 10900  0D7A  00A0               	movwf	??_LCD_Write_Int
 10901  0D7B                     u2720:	
 10902  0D7B  0016               	moviw fsr1++
 10903  0D7C  001A               	movwi fsr0++
 10904  0D7D  0BA0               	decfsz	??_LCD_Write_Int,f
 10905  0D7E  2D7B               	goto	u2720
 10906                           
 10907                           ;lcd.c: 249: int i=4,j=0;
 10908  0D7F  3004               	movlw	4
 10909  0D80  00AC               	movwf	LCD_Write_Int@i
 10910  0D81  3000               	movlw	0
 10911  0D82  00AD               	movwf	LCD_Write_Int@i+1
 10912  0D83  01AA               	clrf	LCD_Write_Int@j
 10913  0D84  01AB               	clrf	LCD_Write_Int@j+1
 10914                           
 10915                           ;lcd.c: 251: if(value<0)
 10916  0D85  1FFA               	btfss	LCD_Write_Int@value+1,7
 10917  0D86  2D91               	goto	l2560
 10918                           
 10919                           ;lcd.c: 252: {
 10920                           ;lcd.c: 253: LCD_Write_Char('-');
 10921  0D87  302D               	movlw	45
 10922  0D88  3197  27A3  318D   	fcall	_LCD_Write_Char
 10923                           
 10924                           ;lcd.c: 254: value=value*-1;
 10925  0D8B  09F9               	comf	LCD_Write_Int@value,f
 10926  0D8C  09FA               	comf	LCD_Write_Int@value+1,f
 10927  0D8D  0AF9               	incf	LCD_Write_Int@value,f
 10928  0D8E  1903               	skipnz
 10929  0D8F  0AFA               	incf	LCD_Write_Int@value+1,f
 10930                           
 10931                           ;lcd.c: 255: }
 10932  0D90  2D98               	goto	l2570
 10933  0D91                     l2560:	
 10934                           
 10935                           ;lcd.c: 257: else
 10936                           ;lcd.c: 258: {
 10937                           ;lcd.c: 259: if(sign == 1)
 10938  0D91  037D               	decf	LCD_Write_Int@sign,w
 10939  0D92  1D03               	btfss	3,2
 10940  0D93  2D98               	goto	l2570
 10941                           
 10942                           ;lcd.c: 260: {
 10943                           ;lcd.c: 261: LCD_Write_Char('+');
 10944  0D94  302B               	movlw	43
 10945  0D95  3197  27A3  318D   	fcall	_LCD_Write_Char
 10946  0D98                     l2570:	
 10947                           ;lcd.c: 262: }
 10948                           ;lcd.c: 263: }
 10949                           ;lcd.c: 265: while(value)
 10950                           
 10951  0D98  0879               	movf	LCD_Write_Int@value,w
 10952  0D99  047A               	iorwf	LCD_Write_Int@value+1,w
 10953  0D9A  1903               	btfsc	3,2
 10954  0D9B  2DC5               	goto	l2572
 10955                           
 10956                           ;lcd.c: 266: {
 10957                           ;lcd.c: 267: str[i]=value%10;
 10958  0D9C  300A               	movlw	10
 10959  0D9D  00F0               	movwf	___awmod@divisor
 10960  0D9E  3000               	movlw	0
 10961  0D9F  00F1               	movwf	___awmod@divisor+1
 10962  0DA0  087A               	movf	LCD_Write_Int@value+1,w
 10963  0DA1  00F3               	movwf	___awmod@dividend+1
 10964  0DA2  0879               	movf	LCD_Write_Int@value,w
 10965  0DA3  00F2               	movwf	___awmod@dividend
 10966  0DA4  3189  2101  318D   	fcall	___awmod
 10967  0DA7  0870               	movf	?___awmod,w
 10968  0DA8  0020               	movlb	0	; select bank0
 10969  0DA9  00A0               	movwf	??_LCD_Write_Int
 10970  0DAA  082C               	movf	LCD_Write_Int@i,w
 10971  0DAB  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10972  0DAC  0086               	movwf	6
 10973  0DAD  0187               	clrf	7
 10974  0DAE  0820               	movf	??_LCD_Write_Int,w
 10975  0DAF  0081               	movwf	1
 10976                           
 10977                           ;lcd.c: 268: value=value/10;
 10978  0DB0  300A               	movlw	10
 10979  0DB1  00F0               	movwf	___awdiv@divisor
 10980  0DB2  3000               	movlw	0
 10981  0DB3  00F1               	movwf	___awdiv@divisor+1
 10982  0DB4  087A               	movf	LCD_Write_Int@value+1,w
 10983  0DB5  00F3               	movwf	___awdiv@dividend+1
 10984  0DB6  0879               	movf	LCD_Write_Int@value,w
 10985  0DB7  00F2               	movwf	___awdiv@dividend
 10986  0DB8  3189  2146  318D   	fcall	___awdiv
 10987  0DBB  0871               	movf	?___awdiv+1,w
 10988  0DBC  00FA               	movwf	LCD_Write_Int@value+1
 10989  0DBD  0870               	movf	?___awdiv,w
 10990  0DBE  00F9               	movwf	LCD_Write_Int@value
 10991                           
 10992                           ;lcd.c: 269: i--;
 10993  0DBF  30FF               	movlw	255
 10994  0DC0  0020               	movlb	0	; select bank0
 10995  0DC1  07AC               	addwf	LCD_Write_Int@i,f
 10996  0DC2  30FF               	movlw	255
 10997  0DC3  3DAD               	addwfc	LCD_Write_Int@i+1,f
 10998  0DC4  2D98               	goto	l2570
 10999  0DC5                     l2572:	
 11000                           
 11001                           ;lcd.c: 270: }
 11002                           ;lcd.c: 271: if(fieldLength==-1)
 11003  0DC5  0A7B               	incf	LCD_Write_Int@fieldLength,w
 11004  0DC6  1903               	btfsc	3,2
 11005  0DC7  2DCE               	goto	l2578
 11006  0DC8  2DD7               	goto	l2580
 11007  0DC9                     l2576:	
 11008                           ;lcd.c: 272: {
 11009                           ;lcd.c: 273: while(str[j]==0)
 11010                           
 11011                           
 11012                           ;lcd.c: 274: {
 11013                           ;lcd.c: 275: j++;
 11014  0DC9  3001               	movlw	1
 11015  0DCA  0020               	movlb	0	; select bank0
 11016  0DCB  07AA               	addwf	LCD_Write_Int@j,f
 11017  0DCC  3000               	movlw	0
 11018  0DCD  3DAB               	addwfc	LCD_Write_Int@j+1,f
 11019  0DCE                     l2578:	
 11020  0DCE  0020               	movlb	0	; select bank0
 11021  0DCF  082A               	movf	LCD_Write_Int@j,w
 11022  0DD0  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11023  0DD1  0086               	movwf	6
 11024  0DD2  0187               	clrf	7
 11025  0DD3  0801               	movf	1,w
 11026  0DD4  1D03               	btfss	3,2
 11027  0DD5  2DE8               	goto	l2582
 11028  0DD6  2DC9               	goto	l2576
 11029  0DD7                     l2580:	
 11030                           ;lcd.c: 276: }
 11031                           ;lcd.c: 277: }
 11032                           
 11033                           
 11034                           ;lcd.c: 278: else
 11035                           ;lcd.c: 279: {
 11036                           ;lcd.c: 280: j=5-fieldLength;
 11037  0DD7  087B               	movf	LCD_Write_Int@fieldLength,w
 11038  0DD8  0020               	movlb	0	; select bank0
 11039  0DD9  00A0               	movwf	??_LCD_Write_Int
 11040  0DDA  01A1               	clrf	??_LCD_Write_Int+1
 11041  0DDB  1BA0               	btfsc	??_LCD_Write_Int,7
 11042  0DDC  03A1               	decf	??_LCD_Write_Int+1,f
 11043  0DDD  09A0               	comf	??_LCD_Write_Int,f
 11044  0DDE  09A1               	comf	??_LCD_Write_Int+1,f
 11045  0DDF  0AA0               	incf	??_LCD_Write_Int,f
 11046  0DE0  1903               	skipnz
 11047  0DE1  0AA1               	incf	??_LCD_Write_Int+1,f
 11048  0DE2  0820               	movf	??_LCD_Write_Int,w
 11049  0DE3  3E05               	addlw	5
 11050  0DE4  00AA               	movwf	LCD_Write_Int@j
 11051  0DE5  3000               	movlw	0
 11052  0DE6  3D21               	addwfc	??_LCD_Write_Int+1,w
 11053  0DE7  00AB               	movwf	LCD_Write_Int@j+1
 11054  0DE8                     l2582:	
 11055                           
 11056                           ;lcd.c: 281: }
 11057                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11058  0DE8  082B               	movf	LCD_Write_Int@j+1,w
 11059  0DE9  00AD               	movwf	LCD_Write_Int@i+1
 11060  0DEA  082A               	movf	LCD_Write_Int@j,w
 11061  0DEB  00AC               	movwf	LCD_Write_Int@i
 11062  0DEC                     l2588:	
 11063  0DEC  087C               	movf	LCD_Write_Int@numPlaces,w
 11064  0DED  00A0               	movwf	??_LCD_Write_Int
 11065  0DEE  01A1               	clrf	??_LCD_Write_Int+1
 11066  0DEF  1BA0               	btfsc	??_LCD_Write_Int,7
 11067  0DF0  03A1               	decf	??_LCD_Write_Int+1,f
 11068  0DF1  09A0               	comf	??_LCD_Write_Int,f
 11069  0DF2  09A1               	comf	??_LCD_Write_Int+1,f
 11070  0DF3  0AA0               	incf	??_LCD_Write_Int,f
 11071  0DF4  1903               	skipnz
 11072  0DF5  0AA1               	incf	??_LCD_Write_Int+1,f
 11073  0DF6  0820               	movf	??_LCD_Write_Int,w
 11074  0DF7  3E05               	addlw	5
 11075  0DF8  00A2               	movwf	??_LCD_Write_Int+2
 11076  0DF9  3000               	movlw	0
 11077  0DFA  3D21               	addwfc	??_LCD_Write_Int+1,w
 11078  0DFB  00A3               	movwf	??_LCD_Write_Int+3
 11079  0DFC  082D               	movf	LCD_Write_Int@i+1,w
 11080  0DFD  3A80               	xorlw	128
 11081  0DFE  00A4               	movwf	??_LCD_Write_Int+4
 11082  0DFF  0823               	movf	??_LCD_Write_Int+3,w
 11083  0E00  3A80               	xorlw	128
 11084  0E01  0224               	subwf	??_LCD_Write_Int+4,w
 11085  0E02  1D03               	skipz
 11086  0E03  2E06               	goto	u2785
 11087  0E04  0822               	movf	??_LCD_Write_Int+2,w
 11088  0E05  022C               	subwf	LCD_Write_Int@i,w
 11089  0E06                     u2785:	
 11090  0E06  1803               	btfsc	3,0
 11091  0E07  2E18               	goto	l2590
 11092                           
 11093                           ;lcd.c: 284: {
 11094                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11095  0E08  0020               	movlb	0	; select bank0
 11096  0E09  082C               	movf	LCD_Write_Int@i,w
 11097  0E0A  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11098  0E0B  0086               	movwf	6
 11099  0E0C  0187               	clrf	7
 11100  0E0D  0801               	movf	1,w
 11101  0E0E  3E30               	addlw	48
 11102  0E0F  3197  27A3  318D   	fcall	_LCD_Write_Char
 11103  0E12  3001               	movlw	1
 11104  0E13  0020               	movlb	0	; select bank0
 11105  0E14  07AC               	addwf	LCD_Write_Int@i,f
 11106  0E15  3000               	movlw	0
 11107  0E16  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11108  0E17  2DEC               	goto	l2588
 11109  0E18                     l2590:	
 11110                           
 11111                           ;lcd.c: 286: }
 11112                           ;lcd.c: 288: if(numPlaces == 1)
 11113  0E18  037C               	decf	LCD_Write_Int@numPlaces,w
 11114  0E19  1D03               	btfss	3,2
 11115  0E1A  2E25               	goto	l2594
 11116                           
 11117                           ;lcd.c: 289: {
 11118                           ;lcd.c: 290: LCD_Write_Char(46);
 11119  0E1B  302E               	movlw	46
 11120  0E1C  3197  27A3  318D   	fcall	_LCD_Write_Char
 11121                           
 11122                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11123  0E1F  0020               	movlb	0	; select bank0
 11124  0E20  0829               	movf	LCD_Write_Int@str+4,w
 11125  0E21  3E30               	addlw	48
 11126  0E22  3197  27A3  318D   	fcall	_LCD_Write_Char
 11127  0E25                     l2594:	
 11128                           
 11129                           ;lcd.c: 292: }
 11130                           ;lcd.c: 294: if(numPlaces == 2)
 11131  0E25  3002               	movlw	2
 11132  0E26  067C               	xorwf	LCD_Write_Int@numPlaces,w
 11133  0E27  1D03               	btfss	3,2
 11134  0E28  0008               	return
 11135                           
 11136                           ;lcd.c: 295: {
 11137                           ;lcd.c: 296: LCD_Write_Char(46);
 11138  0E29  302E               	movlw	46
 11139  0E2A  3197  27A3  318D   	fcall	_LCD_Write_Char
 11140                           
 11141                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11142  0E2D  0020               	movlb	0	; select bank0
 11143  0E2E  0828               	movf	LCD_Write_Int@str+3,w
 11144  0E2F  3E30               	addlw	48
 11145  0E30  3197  27A3  318D   	fcall	_LCD_Write_Char
 11146                           
 11147                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11148  0E33  0020               	movlb	0	; select bank0
 11149  0E34  0829               	movf	LCD_Write_Int@str+4,w
 11150  0E35  3E30               	addlw	48
 11151  0E36  3197  27A3         	fcall	_LCD_Write_Char
 11152  0E38  0008               	return
 11153  0E39                     __end_of_LCD_Write_Int:	
 11154                           
 11155                           	psect	text21
 11156  0901                     __ptext21:	
 11157 ;; *************** function ___awmod *****************
 11158 ;; Defined at:
 11159 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;  divisor         2    0[COMMON] int 
 11162 ;;  dividend        2    2[COMMON] int 
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;  sign            1    6[COMMON] unsigned char 
 11165 ;;  counter         1    5[COMMON] unsigned char 
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  2    0[COMMON] int 
 11168 ;; Registers used:
 11169 ;;		wreg, status,2, status,0
 11170 ;; Tracked objects:
 11171 ;;		On entry : 0/0
 11172 ;;		On exit  : 0/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11178 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11179 ;;Total ram usage:        7 bytes
 11180 ;; Hardware stack levels used:    1
 11181 ;; This function calls:
 11182 ;;		Nothing
 11183 ;; This function is called by:
 11184 ;;		_LCD_Write_Int
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           
 11189                           ;psect for function ___awmod
 11190  0901                     ___awmod:	
 11191                           
 11192                           ;incstack = 0
 11193                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11194  0901  01F6               	clrf	___awmod@sign
 11195  0902  1FF3               	btfss	___awmod@dividend+1,7
 11196  0903  290B               	goto	l2352
 11197  0904  09F2               	comf	___awmod@dividend,f
 11198  0905  09F3               	comf	___awmod@dividend+1,f
 11199  0906  0AF2               	incf	___awmod@dividend,f
 11200  0907  1903               	skipnz
 11201  0908  0AF3               	incf	___awmod@dividend+1,f
 11202  0909  01F6               	clrf	___awmod@sign
 11203  090A  0AF6               	incf	___awmod@sign,f
 11204  090B                     l2352:	
 11205  090B  1FF1               	btfss	___awmod@divisor+1,7
 11206  090C  2912               	goto	l2356
 11207  090D  09F0               	comf	___awmod@divisor,f
 11208  090E  09F1               	comf	___awmod@divisor+1,f
 11209  090F  0AF0               	incf	___awmod@divisor,f
 11210  0910  1903               	skipnz
 11211  0911  0AF1               	incf	___awmod@divisor+1,f
 11212  0912                     l2356:	
 11213  0912  0870               	movf	___awmod@divisor,w
 11214  0913  0471               	iorwf	___awmod@divisor+1,w
 11215  0914  1903               	btfsc	3,2
 11216  0915  2939               	goto	l2374
 11217  0916  01F5               	clrf	___awmod@counter
 11218  0917  0AF5               	incf	___awmod@counter,f
 11219  0918                     l2364:	
 11220  0918  1BF1               	btfsc	___awmod@divisor+1,7
 11221  0919  2924               	goto	l2366
 11222  091A  3001               	movlw	1
 11223  091B                     u2525:	
 11224  091B  35F0               	lslf	___awmod@divisor,f
 11225  091C  0DF1               	rlf	___awmod@divisor+1,f
 11226  091D  0B89               	decfsz	9,f
 11227  091E  291B               	goto	u2525
 11228  091F  3001               	movlw	1
 11229  0920  00F4               	movwf	??___awmod
 11230  0921  0874               	movf	??___awmod,w
 11231  0922  07F5               	addwf	___awmod@counter,f
 11232  0923  2918               	goto	l2364
 11233  0924                     l2366:	
 11234  0924  0871               	movf	___awmod@divisor+1,w
 11235  0925  0273               	subwf	___awmod@dividend+1,w
 11236  0926  1D03               	skipz
 11237  0927  292A               	goto	u2545
 11238  0928  0870               	movf	___awmod@divisor,w
 11239  0929  0272               	subwf	___awmod@dividend,w
 11240  092A                     u2545:	
 11241  092A  1C03               	skipc
 11242  092B  2930               	goto	l2370
 11243  092C  0870               	movf	___awmod@divisor,w
 11244  092D  02F2               	subwf	___awmod@dividend,f
 11245  092E  0871               	movf	___awmod@divisor+1,w
 11246  092F  3BF3               	subwfb	___awmod@dividend+1,f
 11247  0930                     l2370:	
 11248  0930  3001               	movlw	1
 11249  0931                     u2555:	
 11250  0931  36F1               	lsrf	___awmod@divisor+1,f
 11251  0932  0CF0               	rrf	___awmod@divisor,f
 11252  0933  0B89               	decfsz	9,f
 11253  0934  2931               	goto	u2555
 11254  0935  3001               	movlw	1
 11255  0936  02F5               	subwf	___awmod@counter,f
 11256  0937  1D03               	btfss	3,2
 11257  0938  2924               	goto	l2366
 11258  0939                     l2374:	
 11259  0939  0876               	movf	___awmod@sign,w
 11260  093A  1903               	btfsc	3,2
 11261  093B  2941               	goto	l2378
 11262  093C  09F2               	comf	___awmod@dividend,f
 11263  093D  09F3               	comf	___awmod@dividend+1,f
 11264  093E  0AF2               	incf	___awmod@dividend,f
 11265  093F  1903               	skipnz
 11266  0940  0AF3               	incf	___awmod@dividend+1,f
 11267  0941                     l2378:	
 11268  0941  0873               	movf	___awmod@dividend+1,w
 11269  0942  00F1               	movwf	?___awmod+1
 11270  0943  0872               	movf	___awmod@dividend,w
 11271  0944  00F0               	movwf	?___awmod
 11272  0945  0008               	return
 11273  0946                     __end_of___awmod:	
 11274                           
 11275                           	psect	text22
 11276  0946                     __ptext22:	
 11277 ;; *************** function ___awdiv *****************
 11278 ;; Defined at:
 11279 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11280 ;; Parameters:    Size  Location     Type
 11281 ;;  divisor         2    0[COMMON] int 
 11282 ;;  dividend        2    2[COMMON] int 
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;  quotient        2    7[COMMON] int 
 11285 ;;  sign            1    6[COMMON] unsigned char 
 11286 ;;  counter         1    5[COMMON] unsigned char 
 11287 ;; Return value:  Size  Location     Type
 11288 ;;                  2    0[COMMON] int 
 11289 ;; Registers used:
 11290 ;;		wreg, status,2, status,0
 11291 ;; Tracked objects:
 11292 ;;		On entry : 0/0
 11293 ;;		On exit  : 0/0
 11294 ;;		Unchanged: 0/0
 11295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11299 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11300 ;;Total ram usage:        9 bytes
 11301 ;; Hardware stack levels used:    1
 11302 ;; This function calls:
 11303 ;;		Nothing
 11304 ;; This function is called by:
 11305 ;;		_LCD_Write_Int
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309                           
 11310                           ;psect for function ___awdiv
 11311  0946                     ___awdiv:	
 11312                           
 11313                           ;incstack = 0
 11314                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11315  0946  01F6               	clrf	___awdiv@sign
 11316  0947  1FF1               	btfss	___awdiv@divisor+1,7
 11317  0948  2950               	goto	l2308
 11318  0949  09F0               	comf	___awdiv@divisor,f
 11319  094A  09F1               	comf	___awdiv@divisor+1,f
 11320  094B  0AF0               	incf	___awdiv@divisor,f
 11321  094C  1903               	skipnz
 11322  094D  0AF1               	incf	___awdiv@divisor+1,f
 11323  094E  01F6               	clrf	___awdiv@sign
 11324  094F  0AF6               	incf	___awdiv@sign,f
 11325  0950                     l2308:	
 11326  0950  1FF3               	btfss	___awdiv@dividend+1,7
 11327  0951  295B               	goto	l2314
 11328  0952  09F2               	comf	___awdiv@dividend,f
 11329  0953  09F3               	comf	___awdiv@dividend+1,f
 11330  0954  0AF2               	incf	___awdiv@dividend,f
 11331  0955  1903               	skipnz
 11332  0956  0AF3               	incf	___awdiv@dividend+1,f
 11333  0957  3001               	movlw	1
 11334  0958  00F4               	movwf	??___awdiv
 11335  0959  0874               	movf	??___awdiv,w
 11336  095A  06F6               	xorwf	___awdiv@sign,f
 11337  095B                     l2314:	
 11338  095B  01F7               	clrf	___awdiv@quotient
 11339  095C  01F8               	clrf	___awdiv@quotient+1
 11340  095D  0870               	movf	___awdiv@divisor,w
 11341  095E  0471               	iorwf	___awdiv@divisor+1,w
 11342  095F  1903               	btfsc	3,2
 11343  0960  298A               	goto	l2336
 11344  0961  01F5               	clrf	___awdiv@counter
 11345  0962  0AF5               	incf	___awdiv@counter,f
 11346  0963                     l2324:	
 11347  0963  1BF1               	btfsc	___awdiv@divisor+1,7
 11348  0964  296F               	goto	l2326
 11349  0965  3001               	movlw	1
 11350  0966                     u2425:	
 11351  0966  35F0               	lslf	___awdiv@divisor,f
 11352  0967  0DF1               	rlf	___awdiv@divisor+1,f
 11353  0968  0B89               	decfsz	9,f
 11354  0969  2966               	goto	u2425
 11355  096A  3001               	movlw	1
 11356  096B  00F4               	movwf	??___awdiv
 11357  096C  0874               	movf	??___awdiv,w
 11358  096D  07F5               	addwf	___awdiv@counter,f
 11359  096E  2963               	goto	l2324
 11360  096F                     l2326:	
 11361  096F  3001               	movlw	1
 11362  0970                     u2445:	
 11363  0970  35F7               	lslf	___awdiv@quotient,f
 11364  0971  0DF8               	rlf	___awdiv@quotient+1,f
 11365  0972  0B89               	decfsz	9,f
 11366  0973  2970               	goto	u2445
 11367  0974  0871               	movf	___awdiv@divisor+1,w
 11368  0975  0273               	subwf	___awdiv@dividend+1,w
 11369  0976  1D03               	skipz
 11370  0977  297A               	goto	u2455
 11371  0978  0870               	movf	___awdiv@divisor,w
 11372  0979  0272               	subwf	___awdiv@dividend,w
 11373  097A                     u2455:	
 11374  097A  1C03               	skipc
 11375  097B  2981               	goto	l2332
 11376  097C  0870               	movf	___awdiv@divisor,w
 11377  097D  02F2               	subwf	___awdiv@dividend,f
 11378  097E  0871               	movf	___awdiv@divisor+1,w
 11379  097F  3BF3               	subwfb	___awdiv@dividend+1,f
 11380  0980  1477               	bsf	___awdiv@quotient,0
 11381  0981                     l2332:	
 11382  0981  3001               	movlw	1
 11383  0982                     u2465:	
 11384  0982  36F1               	lsrf	___awdiv@divisor+1,f
 11385  0983  0CF0               	rrf	___awdiv@divisor,f
 11386  0984  0B89               	decfsz	9,f
 11387  0985  2982               	goto	u2465
 11388  0986  3001               	movlw	1
 11389  0987  02F5               	subwf	___awdiv@counter,f
 11390  0988  1D03               	btfss	3,2
 11391  0989  296F               	goto	l2326
 11392  098A                     l2336:	
 11393  098A  0876               	movf	___awdiv@sign,w
 11394  098B  1903               	btfsc	3,2
 11395  098C  2992               	goto	l2340
 11396  098D  09F7               	comf	___awdiv@quotient,f
 11397  098E  09F8               	comf	___awdiv@quotient+1,f
 11398  098F  0AF7               	incf	___awdiv@quotient,f
 11399  0990  1903               	skipnz
 11400  0991  0AF8               	incf	___awdiv@quotient+1,f
 11401  0992                     l2340:	
 11402  0992  0878               	movf	___awdiv@quotient+1,w
 11403  0993  00F1               	movwf	?___awdiv+1
 11404  0994  0877               	movf	___awdiv@quotient,w
 11405  0995  00F0               	movwf	?___awdiv
 11406  0996  0008               	return
 11407  0997                     __end_of___awdiv:	
 11408                           
 11409                           	psect	text23
 11410  0880                     __ptext23:	
 11411 ;; *************** function _LCD_Set_Cursor *****************
 11412 ;; Defined at:
 11413 ;;		line 82 in file "lcd.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;  x               1    wreg     unsigned char 
 11416 ;;  y               1    4[COMMON] unsigned char 
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;  x               1    7[COMMON] unsigned char 
 11419 ;;  temp            1   10[COMMON] unsigned char 
 11420 ;;  w               1    9[COMMON] unsigned char 
 11421 ;;  z               1    8[COMMON] unsigned char 
 11422 ;; Return value:  Size  Location     Type
 11423 ;;                  1    wreg      void 
 11424 ;; Registers used:
 11425 ;;		wreg, status,2, status,0, pclath, cstack
 11426 ;; Tracked objects:
 11427 ;;		On entry : 0/0
 11428 ;;		On exit  : 0/0
 11429 ;;		Unchanged: 0/0
 11430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11431 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11432 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11434 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11435 ;;Total ram usage:        7 bytes
 11436 ;; Hardware stack levels used:    1
 11437 ;; Hardware stack levels required when called:    2
 11438 ;; This function calls:
 11439 ;;		_LCD_Cmd
 11440 ;; This function is called by:
 11441 ;;		_menuChoice
 11442 ;;		_main
 11443 ;; This function uses a non-reentrant model
 11444 ;;
 11445                           
 11446                           
 11447                           ;psect for function _LCD_Set_Cursor
 11448  0880                     _LCD_Set_Cursor:	
 11449                           
 11450                           ;incstack = 0
 11451                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11452                           ;LCD_Set_Cursor@x stored from wreg
 11453  0880  00F7               	movwf	LCD_Set_Cursor@x
 11454                           
 11455                           ;lcd.c: 86: char temp,z,w;
 11456                           ;lcd.c: 88: if(y == 0)
 11457  0881  0874               	movf	LCD_Set_Cursor@y,w
 11458  0882  1D03               	btfss	3,2
 11459  0883  28A0               	goto	l2496
 11460                           
 11461                           ;lcd.c: 89: {
 11462                           ;lcd.c: 90: temp = 0x80 + x;
 11463  0884  0877               	movf	LCD_Set_Cursor@x,w
 11464  0885  3E80               	addlw	128
 11465  0886  00F5               	movwf	??_LCD_Set_Cursor
 11466  0887  0875               	movf	??_LCD_Set_Cursor,w
 11467  0888  00FA               	movwf	LCD_Set_Cursor@temp
 11468                           
 11469                           ;lcd.c: 91: z = temp>>4;
 11470  0889  087A               	movf	LCD_Set_Cursor@temp,w
 11471  088A  00F5               	movwf	??_LCD_Set_Cursor
 11472  088B  3004               	movlw	4
 11473  088C                     u2685:	
 11474  088C  36F5               	lsrf	??_LCD_Set_Cursor,f
 11475  088D  0B89               	decfsz	9,f
 11476  088E  288C               	goto	u2685
 11477  088F  0875               	movf	??_LCD_Set_Cursor,w
 11478  0890  00F6               	movwf	??_LCD_Set_Cursor+1
 11479  0891  0876               	movf	??_LCD_Set_Cursor+1,w
 11480  0892  00F8               	movwf	LCD_Set_Cursor@z
 11481                           
 11482                           ;lcd.c: 92: w = temp & 0x0F;
 11483  0893  087A               	movf	LCD_Set_Cursor@temp,w
 11484  0894  390F               	andlw	15
 11485  0895  00F5               	movwf	??_LCD_Set_Cursor
 11486  0896  0875               	movf	??_LCD_Set_Cursor,w
 11487  0897  00F9               	movwf	LCD_Set_Cursor@w
 11488                           
 11489                           ;lcd.c: 93: LCD_Cmd(z);
 11490  0898  0878               	movf	LCD_Set_Cursor@z,w
 11491  0899  3196  2692  3188   	fcall	_LCD_Cmd
 11492                           
 11493                           ;lcd.c: 94: LCD_Cmd(w);
 11494  089C  0879               	movf	LCD_Set_Cursor@w,w
 11495  089D  3196  2692         	fcall	_LCD_Cmd
 11496                           
 11497                           ;lcd.c: 95: }
 11498  089F  0008               	return
 11499  08A0                     l2496:	
 11500                           
 11501                           ;lcd.c: 97: else if(y == 1)
 11502  08A0  0374               	decf	LCD_Set_Cursor@y,w
 11503  08A1  1D03               	btfss	3,2
 11504  08A2  0008               	return
 11505                           
 11506                           ;lcd.c: 98: {
 11507                           ;lcd.c: 99: temp = 0xC0 + x;
 11508  08A3  0877               	movf	LCD_Set_Cursor@x,w
 11509  08A4  3EC0               	addlw	192
 11510  08A5  00F5               	movwf	??_LCD_Set_Cursor
 11511  08A6  0875               	movf	??_LCD_Set_Cursor,w
 11512  08A7  00FA               	movwf	LCD_Set_Cursor@temp
 11513                           
 11514                           ;lcd.c: 100: z = temp>>4;
 11515  08A8  087A               	movf	LCD_Set_Cursor@temp,w
 11516  08A9  00F5               	movwf	??_LCD_Set_Cursor
 11517  08AA  3004               	movlw	4
 11518  08AB                     u2705:	
 11519  08AB  36F5               	lsrf	??_LCD_Set_Cursor,f
 11520  08AC  0B89               	decfsz	9,f
 11521  08AD  28AB               	goto	u2705
 11522  08AE  0875               	movf	??_LCD_Set_Cursor,w
 11523  08AF  00F6               	movwf	??_LCD_Set_Cursor+1
 11524  08B0  0876               	movf	??_LCD_Set_Cursor+1,w
 11525  08B1  00F8               	movwf	LCD_Set_Cursor@z
 11526                           
 11527                           ;lcd.c: 101: w = temp & 0x0F;
 11528  08B2  087A               	movf	LCD_Set_Cursor@temp,w
 11529  08B3  390F               	andlw	15
 11530  08B4  00F5               	movwf	??_LCD_Set_Cursor
 11531  08B5  0875               	movf	??_LCD_Set_Cursor,w
 11532  08B6  00F9               	movwf	LCD_Set_Cursor@w
 11533                           
 11534                           ;lcd.c: 102: LCD_Cmd(z);
 11535  08B7  0878               	movf	LCD_Set_Cursor@z,w
 11536  08B8  3196  2692  3188   	fcall	_LCD_Cmd
 11537                           
 11538                           ;lcd.c: 103: LCD_Cmd(w);
 11539  08BB  0879               	movf	LCD_Set_Cursor@w,w
 11540  08BC  3196  2692         	fcall	_LCD_Cmd
 11541  08BE  0008               	return
 11542  08BF                     __end_of_LCD_Set_Cursor:	
 11543                           
 11544                           	psect	text24
 11545  08BF                     __ptext24:	
 11546 ;; *************** function _SYSTEM_Initialize *****************
 11547 ;; Defined at:
 11548 ;;		line 71 in file "system.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;		None
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;		None
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  1    wreg      void 
 11555 ;; Registers used:
 11556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11565 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;Total ram usage:        3 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:    3
 11569 ;; This function calls:
 11570 ;;		_ADCC_Initialize
 11571 ;;		_InitCustomChars
 11572 ;;		_LCD_Clear
 11573 ;;		_LCD_Init
 11574 ;;		_OSCILLATOR_Initialize
 11575 ;;		_PIN_MANAGER_Initialize
 11576 ;;		_PWM_Initialize
 11577 ;;		_TMR2_Initialize
 11578 ;; This function is called by:
 11579 ;;		_main
 11580 ;; This function uses a non-reentrant model
 11581 ;;
 11582                           
 11583                           
 11584                           ;psect for function _SYSTEM_Initialize
 11585  08BF                     _SYSTEM_Initialize:	
 11586                           
 11587                           ;system.c: 73: PIN_MANAGER_Initialize();
 11588                           
 11589                           ;incstack = 0
 11590                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11591  08BF  3197  27CF  3188   	fcall	_PIN_MANAGER_Initialize
 11592                           
 11593                           ;system.c: 74: OSCILLATOR_Initialize();
 11594  08C2  3188  2001  3188   	fcall	_OSCILLATOR_Initialize
 11595                           
 11596                           ;system.c: 75: FVRCON = 0x00;
 11597  08C5  0032               	movlb	18	; select bank18
 11598  08C6  018C               	clrf	12	;volatile
 11599                           
 11600                           ;system.c: 76: ADCC_Initialize();
 11601  08C7  3196  26D4  3188   	fcall	_ADCC_Initialize
 11602                           
 11603                           ;system.c: 77: PWM_Initialize();
 11604  08CA  3196  2642  3188   	fcall	_PWM_Initialize
 11605                           
 11606                           ;system.c: 79: TMR2_Initialize();
 11607  08CD  3196  2665  3188   	fcall	_TMR2_Initialize
 11608                           
 11609                           ;system.c: 80: LCD_Init(0X00);
 11610  08D0  3000               	movlw	0
 11611  08D1  3180  201B  3188   	fcall	_LCD_Init
 11612                           
 11613                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 11614  08D4  3009               	movlw	9
 11615  08D5  00FA               	movwf	??_SYSTEM_Initialize+2
 11616  08D6  301E               	movlw	30
 11617  08D7  00F9               	movwf	??_SYSTEM_Initialize+1
 11618  08D8  30EB               	movlw	235
 11619  08D9  00F8               	movwf	??_SYSTEM_Initialize
 11620  08DA                     u3747:	
 11621  08DA  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11622  08DB  28DA               	goto	u3747
 11623  08DC  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11624  08DD  28DA               	goto	u3747
 11625  08DE  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11626  08DF  28DA               	goto	u3747
 11627  08E0  0000               	nop
 11628                           
 11629                           ;system.c: 82: LCD_Clear();
 11630  08E1  3196  263A  3188   	fcall	_LCD_Clear
 11631                           
 11632                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 11633  08E4  3005               	movlw	5
 11634  08E5  00FA               	movwf	??_SYSTEM_Initialize+2
 11635  08E6  300F               	movlw	15
 11636  08E7  00F9               	movwf	??_SYSTEM_Initialize+1
 11637  08E8  30F4               	movlw	244
 11638  08E9  00F8               	movwf	??_SYSTEM_Initialize
 11639  08EA                     u3757:	
 11640  08EA  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11641  08EB  28EA               	goto	u3757
 11642  08EC  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11643  08ED  28EA               	goto	u3757
 11644  08EE  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11645  08EF  28EA               	goto	u3757
 11646                           
 11647                           ;system.c: 84: InitCustomChars();
 11648  08F0  3197  277D  3188   	fcall	_InitCustomChars
 11649                           
 11650                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11651  08F3  3009               	movlw	9
 11652  08F4  00FA               	movwf	??_SYSTEM_Initialize+2
 11653  08F5  301E               	movlw	30
 11654  08F6  00F9               	movwf	??_SYSTEM_Initialize+1
 11655  08F7  30EB               	movlw	235
 11656  08F8  00F8               	movwf	??_SYSTEM_Initialize
 11657  08F9                     u3767:	
 11658  08F9  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11659  08FA  28F9               	goto	u3767
 11660  08FB  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11661  08FC  28F9               	goto	u3767
 11662  08FD  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11663  08FE  28F9               	goto	u3767
 11664  08FF  0000               	nop
 11665  0900  0008               	return
 11666  0901                     __end_of_SYSTEM_Initialize:	
 11667                           
 11668                           	psect	text25
 11669  1665                     __ptext25:	
 11670 ;; *************** function _TMR2_Initialize *****************
 11671 ;; Defined at:
 11672 ;;		line 3 in file "tmr2.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;		None
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;		None
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  1    wreg      void 
 11679 ;; Registers used:
 11680 ;;		wreg, status,2
 11681 ;; Tracked objects:
 11682 ;;		On entry : 0/0
 11683 ;;		On exit  : 0/0
 11684 ;;		Unchanged: 0/0
 11685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;Total ram usage:        0 bytes
 11691 ;; Hardware stack levels used:    1
 11692 ;; This function calls:
 11693 ;;		Nothing
 11694 ;; This function is called by:
 11695 ;;		_SYSTEM_Initialize
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           
 11700                           ;psect for function _TMR2_Initialize
 11701  1665                     _TMR2_Initialize:	
 11702                           
 11703                           ;tmr2.c: 5: T2CON = 0x00;
 11704                           
 11705                           ;incstack = 0
 11706                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11707  1665  0025               	movlb	5	; select bank5
 11708  1666  018E               	clrf	14	;volatile
 11709                           
 11710                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11711  1667  3001               	movlw	1
 11712  1668  0090               	movwf	16	;volatile
 11713                           
 11714                           ;tmr2.c: 9: T2HLT = 0x00;
 11715  1669  018F               	clrf	15	;volatile
 11716                           
 11717                           ;tmr2.c: 11: T2RST = 0x00;
 11718  166A  0191               	clrf	17	;volatile
 11719                           
 11720                           ;tmr2.c: 13: T2PR = 0xFF;
 11721  166B  30FF               	movlw	255
 11722  166C  008D               	movwf	13	;volatile
 11723                           
 11724                           ;tmr2.c: 15: T2TMR = 0x00;
 11725  166D  018C               	clrf	12	;volatile
 11726                           
 11727                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11728  166E  002E               	movlb	14	; select bank14
 11729  166F  1090               	bcf	16,1	;volatile
 11730                           
 11731                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11732  1670  0025               	movlb	5	; select bank5
 11733  1671  178E               	bsf	14,7	;volatile
 11734  1672  0008               	return
 11735  1673                     __end_of_TMR2_Initialize:	
 11736                           
 11737                           	psect	text26
 11738  1642                     __ptext26:	
 11739 ;; *************** function _PWM_Initialize *****************
 11740 ;; Defined at:
 11741 ;;		line 3 in file "pwm.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;		None
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;		None
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  1    wreg      void 
 11748 ;; Registers used:
 11749 ;;		wreg, status,2, status,0
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;Total ram usage:        0 bytes
 11760 ;; Hardware stack levels used:    1
 11761 ;; This function calls:
 11762 ;;		Nothing
 11763 ;; This function is called by:
 11764 ;;		_SYSTEM_Initialize
 11765 ;; This function uses a non-reentrant model
 11766 ;;
 11767                           
 11768                           
 11769                           ;psect for function _PWM_Initialize
 11770  1642                     _PWM_Initialize:	
 11771                           
 11772                           ;pwm.c: 14: PWM7CON = 0x80;
 11773                           
 11774                           ;incstack = 0
 11775                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11776  1642  3080               	movlw	128
 11777  1643  0027               	movlb	7	; select bank7
 11778  1644  0092               	movwf	18	;volatile
 11779                           
 11780                           ;pwm.c: 16: PWM7DCH = 0x00;
 11781  1645  0191               	clrf	17	;volatile
 11782                           
 11783                           ;pwm.c: 18: PWM7DCL = 0x00;
 11784  1646  0190               	clrf	16	;volatile
 11785                           
 11786                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
 11787  1647  0024               	movlb	4	; select bank4
 11788  1648  081F               	movf	31,w	;volatile
 11789  1649  39F3               	andlw	-13
 11790  164A  3804               	iorlw	4
 11791  164B  009F               	movwf	31	;volatile
 11792  164C  0008               	return
 11793  164D                     __end_of_PWM_Initialize:	
 11794                           
 11795                           	psect	text27
 11796  17CF                     __ptext27:	
 11797 ;; *************** function _PIN_MANAGER_Initialize *****************
 11798 ;; Defined at:
 11799 ;;		line 5 in file "pin_manager.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;		None
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;  state           1    0[COMMON] unsigned char 
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1    wreg      void 
 11806 ;; Registers used:
 11807 ;;		wreg, status,2
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/0
 11810 ;;		On exit  : 0/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11817 ;;Total ram usage:        1 bytes
 11818 ;; Hardware stack levels used:    1
 11819 ;; This function calls:
 11820 ;;		Nothing
 11821 ;; This function is called by:
 11822 ;;		_SYSTEM_Initialize
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           
 11827                           ;psect for function _PIN_MANAGER_Initialize
 11828  17CF                     _PIN_MANAGER_Initialize:	
 11829                           
 11830                           ;pin_manager.c: 7: LATA = 0x00;
 11831                           
 11832                           ;incstack = 0
 11833                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11834  17CF  0020               	movlb	0	; select bank0
 11835  17D0  0196               	clrf	22	;volatile
 11836                           
 11837                           ;pin_manager.c: 8: LATB = 0x00;
 11838  17D1  0197               	clrf	23	;volatile
 11839                           
 11840                           ;pin_manager.c: 9: LATC = 0x00;
 11841  17D2  0198               	clrf	24	;volatile
 11842                           
 11843                           ;pin_manager.c: 11: WPUA = 0x00;
 11844  17D3  003E               	movlb	30	; select bank30
 11845  17D4  01B9               	clrf	57	;volatile
 11846                           
 11847                           ;pin_manager.c: 12: WPUB = 0x00;
 11848  17D5  01C4               	clrf	68	;volatile
 11849                           
 11850                           ;pin_manager.c: 13: WPUC = 0x00;
 11851  17D6  01CF               	clrf	79	;volatile
 11852                           
 11853                           ;pin_manager.c: 14: WPUE = 0x8;
 11854  17D7  3008               	movlw	8
 11855  17D8  00E5               	movwf	101	;volatile
 11856                           
 11857                           ;pin_manager.c: 16: TRISA = 0x0A;
 11858  17D9  300A               	movlw	10
 11859  17DA  0020               	movlb	0	; select bank0
 11860  17DB  0091               	movwf	17	;volatile
 11861                           
 11862                           ;pin_manager.c: 17: TRISB = 0x07;
 11863  17DC  3007               	movlw	7
 11864  17DD  0092               	movwf	18	;volatile
 11865                           
 11866                           ;pin_manager.c: 18: TRISC = 0x00;
 11867  17DE  0193               	clrf	19	;volatile
 11868                           
 11869                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11870  17DF  300A               	movlw	10
 11871  17E0  003E               	movlb	30	; select bank30
 11872  17E1  00B8               	movwf	56	;volatile
 11873                           
 11874                           ;pin_manager.c: 21: ANSELB = 0x00;
 11875  17E2  01C3               	clrf	67	;volatile
 11876                           
 11877                           ;pin_manager.c: 22: ANSELC = 0x00;
 11878  17E3  01CE               	clrf	78	;volatile
 11879                           
 11880                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11881  17E4  002E               	movlb	14	; select bank14
 11882  17E5  1216               	bcf	22,4	;volatile
 11883                           
 11884                           ;pin_manager.c: 25: bool state = GIE;
 11885  17E6  3000               	movlw	0
 11886  17E7  1B8B               	btfsc	11,7	;volatile
 11887  17E8  3001               	movlw	1
 11888  17E9  00F0               	movwf	PIN_MANAGER_Initialize@state
 11889                           
 11890                           ;pin_manager.c: 26: GIE = 0;
 11891  17EA  138B               	bcf	11,7	;volatile
 11892                           
 11893                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11894  17EB  3055               	movlw	85
 11895  17EC  003D               	movlb	29	; select bank29
 11896  17ED  008F               	movwf	15	;volatile
 11897                           
 11898                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11899  17EE  30AA               	movlw	170
 11900  17EF  008F               	movwf	15	;volatile
 11901                           
 11902                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11903  17F0  100F               	bcf	15,0	;volatile
 11904                           
 11905                           ;pin_manager.c: 33: RC3PPS = 0X0F;
 11906  17F1  300F               	movlw	15
 11907  17F2  003E               	movlb	30	; select bank30
 11908  17F3  00A3               	movwf	35	;volatile
 11909                           
 11910                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 11911  17F4  3055               	movlw	85
 11912  17F5  003D               	movlb	29	; select bank29
 11913  17F6  008F               	movwf	15	;volatile
 11914                           
 11915                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 11916  17F7  30AA               	movlw	170
 11917  17F8  008F               	movwf	15	;volatile
 11918                           
 11919                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 11920  17F9  140F               	bsf	15,0	;volatile
 11921                           
 11922                           ;pin_manager.c: 40: GIE = state;
 11923  17FA  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11924  17FB  2FFE               	goto	u2810
 11925  17FC  178B               	bsf	11,7	;volatile
 11926  17FD  0008               	return
 11927  17FE                     u2810:	
 11928  17FE  138B               	bcf	11,7	;volatile
 11929  17FF  0008               	return
 11930  1800                     __end_of_PIN_MANAGER_Initialize:	
 11931                           
 11932                           	psect	text28
 11933  0801                     __ptext28:	
 11934 ;; *************** function _OSCILLATOR_Initialize *****************
 11935 ;; Defined at:
 11936 ;;		line 89 in file "system.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;		None
 11939 ;; Auto vars:     Size  Location     Type
 11940 ;;		None
 11941 ;; Return value:  Size  Location     Type
 11942 ;;                  1    wreg      void 
 11943 ;; Registers used:
 11944 ;;		wreg, status,2
 11945 ;; Tracked objects:
 11946 ;;		On entry : 0/0
 11947 ;;		On exit  : 0/0
 11948 ;;		Unchanged: 0/0
 11949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;Total ram usage:        0 bytes
 11955 ;; Hardware stack levels used:    1
 11956 ;; This function calls:
 11957 ;;		Nothing
 11958 ;; This function is called by:
 11959 ;;		_SYSTEM_Initialize
 11960 ;; This function uses a non-reentrant model
 11961 ;;
 11962                           
 11963                           
 11964                           ;psect for function _OSCILLATOR_Initialize
 11965  0801                     _OSCILLATOR_Initialize:	
 11966                           
 11967                           ;system.c: 91: OSCCON1 = 0x60;
 11968                           
 11969                           ;incstack = 0
 11970                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11971  0801  3060               	movlw	96
 11972  0802  0031               	movlb	17	; select bank17
 11973  0803  008D               	movwf	13	;volatile
 11974                           
 11975                           ;system.c: 92: OSCCON3 = 0x00;
 11976  0804  018F               	clrf	15	;volatile
 11977                           
 11978                           ;system.c: 93: OSCEN = 0x00;
 11979  0805  0191               	clrf	17	;volatile
 11980                           
 11981                           ;system.c: 94: OSCFRQ = 0x06;
 11982  0806  3006               	movlw	6
 11983  0807  0093               	movwf	19	;volatile
 11984                           
 11985                           ;system.c: 95: OSCTUNE = 0x00;
 11986  0808  0192               	clrf	18	;volatile
 11987  0809  0008               	return
 11988  080A                     __end_of_OSCILLATOR_Initialize:	
 11989                           
 11990                           	psect	text29
 11991  001B                     __ptext29:	
 11992 ;; *************** function _LCD_Init *****************
 11993 ;; Defined at:
 11994 ;;		line 154 in file "lcd.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;  style           1    wreg     unsigned char 
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;  style           1    7[COMMON] unsigned char 
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      void 
 12001 ;; Registers used:
 12002 ;;		wreg, status,2, status,0, pclath, cstack
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;Total ram usage:        4 bytes
 12013 ;; Hardware stack levels used:    1
 12014 ;; Hardware stack levels required when called:    2
 12015 ;; This function calls:
 12016 ;;		_LCD_Cmd
 12017 ;;		_LCD_Port
 12018 ;; This function is called by:
 12019 ;;		_SYSTEM_Initialize
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           
 12024                           ;psect for function _LCD_Init
 12025  001B                     _LCD_Init:	
 12026                           
 12027                           ;incstack = 0
 12028                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 12029                           ;LCD_Init@style stored from wreg
 12030  001B  00F7               	movwf	LCD_Init@style
 12031                           
 12032                           ;lcd.c: 156: LCD_Port(0x00);
 12033  001C  3000               	movlw	0
 12034  001D  3196  26BC  3180   	fcall	_LCD_Port
 12035                           
 12036                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 12037  0020  3005               	movlw	5
 12038  0021  00F6               	movwf	??_LCD_Init+2
 12039  0022  300F               	movlw	15
 12040  0023  00F5               	movwf	??_LCD_Init+1
 12041  0024  30F4               	movlw	244
 12042  0025  00F4               	movwf	??_LCD_Init
 12043  0026                     u3777:	
 12044  0026  0BF4               	decfsz	??_LCD_Init,f
 12045  0027  2826               	goto	u3777
 12046  0028  0BF5               	decfsz	??_LCD_Init+1,f
 12047  0029  2826               	goto	u3777
 12048  002A  0BF6               	decfsz	??_LCD_Init+2,f
 12049  002B  2826               	goto	u3777
 12050                           
 12051                           ;lcd.c: 160: LCD_Cmd(0x03);
 12052  002C  3003               	movlw	3
 12053  002D  3196  2692  3180   	fcall	_LCD_Cmd
 12054                           
 12055                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 12056  0030  3068               	movlw	104
 12057  0031  00F5               	movwf	??_LCD_Init+1
 12058  0032  30E4               	movlw	228
 12059  0033  00F4               	movwf	??_LCD_Init
 12060  0034                     u3787:	
 12061  0034  0BF4               	decfsz	??_LCD_Init,f
 12062  0035  2834               	goto	u3787
 12063  0036  0BF5               	decfsz	??_LCD_Init+1,f
 12064  0037  2834               	goto	u3787
 12065  0038  0000               	nop
 12066                           
 12067                           ;lcd.c: 164: LCD_Cmd(0x03);
 12068  0039  3003               	movlw	3
 12069  003A  3196  2692  3180   	fcall	_LCD_Cmd
 12070                           
 12071                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12072  003D  3089               	movlw	137
 12073  003E  00F4               	movwf	??_LCD_Init
 12074  003F                     u3797:	
 12075  003F  3200               	nop2
 12076  0040  3200               	nop2
 12077  0041  0BF4               	decfsz	??_LCD_Init,f
 12078  0042  283F               	goto	u3797
 12079                           
 12080                           ;lcd.c: 168: LCD_Cmd(0x03);
 12081  0043  3003               	movlw	3
 12082  0044  3196  2692  3180   	fcall	_LCD_Cmd
 12083                           
 12084                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12085  0047  3089               	movlw	137
 12086  0048  00F4               	movwf	??_LCD_Init
 12087  0049                     u3807:	
 12088  0049  3200               	nop2
 12089  004A  3200               	nop2
 12090  004B  0BF4               	decfsz	??_LCD_Init,f
 12091  004C  2849               	goto	u3807
 12092                           
 12093                           ;lcd.c: 172: LCD_Cmd(0x02);
 12094  004D  3002               	movlw	2
 12095  004E  3196  2692  3180   	fcall	_LCD_Cmd
 12096                           
 12097                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12098  0051  3089               	movlw	137
 12099  0052  00F4               	movwf	??_LCD_Init
 12100  0053                     u3817:	
 12101  0053  3200               	nop2
 12102  0054  3200               	nop2
 12103  0055  0BF4               	decfsz	??_LCD_Init,f
 12104  0056  2853               	goto	u3817
 12105                           
 12106                           ;lcd.c: 176: LCD_Cmd(0x2);
 12107  0057  3002               	movlw	2
 12108  0058  3196  2692  3180   	fcall	_LCD_Cmd
 12109                           
 12110                           ;lcd.c: 178: LCD_Cmd(0x8);
 12111  005B  3008               	movlw	8
 12112  005C  3196  2692  3180   	fcall	_LCD_Cmd
 12113                           
 12114                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12115  005F  3089               	movlw	137
 12116  0060  00F4               	movwf	??_LCD_Init
 12117  0061                     u3827:	
 12118  0061  3200               	nop2
 12119  0062  3200               	nop2
 12120  0063  0BF4               	decfsz	??_LCD_Init,f
 12121  0064  2861               	goto	u3827
 12122                           
 12123                           ;lcd.c: 182: LCD_Cmd(0x0);
 12124  0065  3000               	movlw	0
 12125  0066  3196  2692  3180   	fcall	_LCD_Cmd
 12126                           
 12127                           ;lcd.c: 184: LCD_Cmd(0x8);
 12128  0069  3008               	movlw	8
 12129  006A  3196  2692  3180   	fcall	_LCD_Cmd
 12130                           
 12131                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12132  006D  3089               	movlw	137
 12133  006E  00F4               	movwf	??_LCD_Init
 12134  006F                     u3837:	
 12135  006F  3200               	nop2
 12136  0070  3200               	nop2
 12137  0071  0BF4               	decfsz	??_LCD_Init,f
 12138  0072  286F               	goto	u3837
 12139                           
 12140                           ;lcd.c: 188: LCD_Cmd(0x0);
 12141  0073  3000               	movlw	0
 12142  0074  3196  2692  3180   	fcall	_LCD_Cmd
 12143                           
 12144                           ;lcd.c: 190: LCD_Cmd(0x1);
 12145  0077  3001               	movlw	1
 12146  0078  3196  2692  3180   	fcall	_LCD_Cmd
 12147                           
 12148                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 12149  007B  3034               	movlw	52
 12150  007C  00F5               	movwf	??_LCD_Init+1
 12151  007D  30F1               	movlw	241
 12152  007E  00F4               	movwf	??_LCD_Init
 12153  007F                     u3847:	
 12154  007F  0BF4               	decfsz	??_LCD_Init,f
 12155  0080  287F               	goto	u3847
 12156  0081  0BF5               	decfsz	??_LCD_Init+1,f
 12157  0082  287F               	goto	u3847
 12158  0083  3200               	nop2
 12159                           
 12160                           ;lcd.c: 194: LCD_Cmd(0x0);
 12161  0084  3000               	movlw	0
 12162  0085  3196  2692  3180   	fcall	_LCD_Cmd
 12163                           
 12164                           ;lcd.c: 196: LCD_Cmd(0x6);
 12165  0088  3006               	movlw	6
 12166  0089  3196  2692  3180   	fcall	_LCD_Cmd
 12167                           
 12168                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12169  008C  3089               	movlw	137
 12170  008D  00F4               	movwf	??_LCD_Init
 12171  008E                     u3857:	
 12172  008E  3200               	nop2
 12173  008F  3200               	nop2
 12174  0090  0BF4               	decfsz	??_LCD_Init,f
 12175  0091  288E               	goto	u3857
 12176                           
 12177                           ;lcd.c: 200: LCD_Cmd(0x0);
 12178  0092  3000               	movlw	0
 12179  0093  3196  2692  3180   	fcall	_LCD_Cmd
 12180                           
 12181                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 12182  0096  0877               	movf	LCD_Init@style,w
 12183  0097  380C               	iorlw	12
 12184  0098  3196  2692  3180   	fcall	_LCD_Cmd
 12185                           
 12186                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12187  009B  3089               	movlw	137
 12188  009C  00F4               	movwf	??_LCD_Init
 12189  009D                     u3867:	
 12190  009D  3200               	nop2
 12191  009E  3200               	nop2
 12192  009F  0BF4               	decfsz	??_LCD_Init,f
 12193  00A0  289D               	goto	u3867
 12194  00A1  0008               	return
 12195  00A2                     __end_of_LCD_Init:	
 12196                           
 12197                           	psect	text30
 12198  163A                     __ptext30:	
 12199 ;; *************** function _LCD_Clear *****************
 12200 ;; Defined at:
 12201 ;;		line 75 in file "lcd.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;		None
 12204 ;; Auto vars:     Size  Location     Type
 12205 ;;		None
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  1    wreg      void 
 12208 ;; Registers used:
 12209 ;;		wreg, status,2, status,0, pclath, cstack
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;Total ram usage:        0 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; Hardware stack levels required when called:    2
 12222 ;; This function calls:
 12223 ;;		_LCD_Cmd
 12224 ;; This function is called by:
 12225 ;;		_SYSTEM_Initialize
 12226 ;;		_menuChoice
 12227 ;;		_main
 12228 ;; This function uses a non-reentrant model
 12229 ;;
 12230                           
 12231                           
 12232                           ;psect for function _LCD_Clear
 12233  163A                     _LCD_Clear:	
 12234                           
 12235                           ;lcd.c: 77: LCD_Cmd(0);
 12236                           
 12237                           ;incstack = 0
 12238                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 12239  163A  3000               	movlw	0
 12240  163B  3196  2692  3196   	fcall	_LCD_Cmd
 12241                           
 12242                           ;lcd.c: 78: LCD_Cmd(1);
 12243  163E  3001               	movlw	1
 12244  163F  3196  2692         	fcall	_LCD_Cmd
 12245  1641  0008               	return
 12246  1642                     __end_of_LCD_Clear:	
 12247                           
 12248                           	psect	text31
 12249  177D                     __ptext31:	
 12250 ;; *************** function _InitCustomChars *****************
 12251 ;; Defined at:
 12252 ;;		line 29 in file "lcd.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;		None
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;  i               1    6[COMMON] unsigned char 
 12257 ;; Return value:  Size  Location     Type
 12258 ;;                  1    wreg      void 
 12259 ;; Registers used:
 12260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12261 ;; Tracked objects:
 12262 ;;		On entry : 0/0
 12263 ;;		On exit  : 0/0
 12264 ;;		Unchanged: 0/0
 12265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12270 ;;Total ram usage:        2 bytes
 12271 ;; Hardware stack levels used:    1
 12272 ;; Hardware stack levels required when called:    2
 12273 ;; This function calls:
 12274 ;;		_LCD_Cmd
 12275 ;;		_LCD_Write_Char
 12276 ;; This function is called by:
 12277 ;;		_SYSTEM_Initialize
 12278 ;; This function uses a non-reentrant model
 12279 ;;
 12280                           
 12281                           
 12282                           ;psect for function _InitCustomChars
 12283  177D                     _InitCustomChars:	
 12284                           
 12285                           ;lcd.c: 31: uint8_t i;
 12286                           ;lcd.c: 32: LCD_Cmd(0x04);
 12287                           
 12288                           ;incstack = 0
 12289                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12290  177D  3004               	movlw	4
 12291  177E  3196  2692  3197   	fcall	_LCD_Cmd
 12292                           
 12293                           ;lcd.c: 33: LCD_Cmd(0x00);
 12294  1781  3000               	movlw	0
 12295  1782  3196  2692  3197   	fcall	_LCD_Cmd
 12296                           
 12297                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 12298  1785  01F6               	clrf	InitCustomChars@i
 12299  1786  3010               	movlw	16
 12300  1787  0276               	subwf	InitCustomChars@i,w
 12301  1788  1803               	btfsc	3,0
 12302  1789  2F9B               	goto	l2482
 12303  178A                     l2476:	
 12304                           
 12305                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 12306  178A  0876               	movf	InitCustomChars@i,w
 12307  178B  3EA0               	addlw	(low (___cgram| (0+256)))& (0+255)
 12308  178C  0086               	movwf	6
 12309  178D  3001               	movlw	1	; select bank3/4
 12310  178E  0087               	movwf	7
 12311  178F  0801               	movf	1,w
 12312  1790  3197  27A3  3197   	fcall	_LCD_Write_Char
 12313  1793  3001               	movlw	1
 12314  1794  00F5               	movwf	??_InitCustomChars
 12315  1795  0875               	movf	??_InitCustomChars,w
 12316  1796  07F6               	addwf	InitCustomChars@i,f
 12317  1797  3010               	movlw	16
 12318  1798  0276               	subwf	InitCustomChars@i,w
 12319  1799  1C03               	skipc
 12320  179A  2F8A               	goto	l2476
 12321  179B                     l2482:	
 12322                           
 12323                           ;lcd.c: 36: LCD_Cmd(0);
 12324  179B  3000               	movlw	0
 12325  179C  3196  2692  3197   	fcall	_LCD_Cmd
 12326                           
 12327                           ;lcd.c: 37: LCD_Cmd(2);
 12328  179F  3002               	movlw	2
 12329  17A0  3196  2692         	fcall	_LCD_Cmd
 12330  17A2  0008               	return
 12331  17A3                     __end_of_InitCustomChars:	
 12332                           
 12333                           	psect	text32
 12334  17A3                     __ptext32:	
 12335 ;; *************** function _LCD_Write_Char *****************
 12336 ;; Defined at:
 12337 ;;		line 223 in file "lcd.c"
 12338 ;; Parameters:    Size  Location     Type
 12339 ;;  a               1    wreg     const unsigned char 
 12340 ;; Auto vars:     Size  Location     Type
 12341 ;;  a               1    4[COMMON] const unsigned char 
 12342 ;;  y               1    3[COMMON] unsigned char 
 12343 ;;  temp            1    2[COMMON] unsigned char 
 12344 ;; Return value:  Size  Location     Type
 12345 ;;                  1    wreg      void 
 12346 ;; Registers used:
 12347 ;;		wreg, status,2, status,0, pclath, cstack
 12348 ;; Tracked objects:
 12349 ;;		On entry : 0/0
 12350 ;;		On exit  : 0/0
 12351 ;;		Unchanged: 0/0
 12352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12354 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12356 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12357 ;;Total ram usage:        4 bytes
 12358 ;; Hardware stack levels used:    1
 12359 ;; Hardware stack levels required when called:    1
 12360 ;; This function calls:
 12361 ;;		_LCD_Port
 12362 ;; This function is called by:
 12363 ;;		_InitCustomChars
 12364 ;;		_LCD_Write_String
 12365 ;;		_LCD_Write_Int
 12366 ;;		_menuChoice
 12367 ;;		_main
 12368 ;; This function uses a non-reentrant model
 12369 ;;
 12370                           
 12371                           
 12372                           ;psect for function _LCD_Write_Char
 12373  17A3                     _LCD_Write_Char:	
 12374                           
 12375                           ;incstack = 0
 12376                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12377                           ;LCD_Write_Char@a stored from wreg
 12378  17A3  00F4               	movwf	LCD_Write_Char@a
 12379                           
 12380                           ;lcd.c: 225: char temp,y;
 12381                           ;lcd.c: 226: temp = a&0x0F;
 12382  17A4  0874               	movf	LCD_Write_Char@a,w
 12383  17A5  390F               	andlw	15
 12384  17A6  00F1               	movwf	??_LCD_Write_Char
 12385  17A7  0871               	movf	??_LCD_Write_Char,w
 12386  17A8  00F2               	movwf	LCD_Write_Char@temp
 12387                           
 12388                           ;lcd.c: 227: y = a&0xF0;
 12389  17A9  0874               	movf	LCD_Write_Char@a,w
 12390  17AA  39F0               	andlw	240
 12391  17AB  00F1               	movwf	??_LCD_Write_Char
 12392  17AC  0871               	movf	??_LCD_Write_Char,w
 12393  17AD  00F3               	movwf	LCD_Write_Char@y
 12394                           
 12395                           ;lcd.c: 228: RA0 = 1;
 12396  17AE  0020               	movlb	0	; select bank0
 12397  17AF  140C               	bsf	12,0	;volatile
 12398                           
 12399                           ;lcd.c: 229: LCD_Port(y>>4);
 12400  17B0  0873               	movf	LCD_Write_Char@y,w
 12401  17B1  00F1               	movwf	??_LCD_Write_Char
 12402  17B2  3004               	movlw	4
 12403  17B3                     u2385:	
 12404  17B3  36F1               	lsrf	??_LCD_Write_Char,f
 12405  17B4  0B89               	decfsz	9,f
 12406  17B5  2FB3               	goto	u2385
 12407  17B6  0871               	movf	??_LCD_Write_Char,w
 12408  17B7  3196  26BC  3197   	fcall	_LCD_Port
 12409                           
 12410                           ;lcd.c: 230: RA2 = 1;
 12411  17BA  0020               	movlb	0	; select bank0
 12412  17BB  150C               	bsf	12,2	;volatile
 12413                           
 12414                           ;lcd.c: 231: RA2 = 0;
 12415  17BC  110C               	bcf	12,2	;volatile
 12416                           
 12417                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12418  17BD  306A               	movlw	106
 12419  17BE  00F1               	movwf	??_LCD_Write_Char
 12420  17BF                     u3877:	
 12421  17BF  0BF1               	decfsz	??_LCD_Write_Char,f
 12422  17C0  2FBF               	goto	u3877
 12423  17C1  0000               	nop
 12424                           
 12425                           ;lcd.c: 233: LCD_Port(temp);
 12426  17C2  0872               	movf	LCD_Write_Char@temp,w
 12427  17C3  3196  26BC  3197   	fcall	_LCD_Port
 12428                           
 12429                           ;lcd.c: 234: RA2 = 1;
 12430  17C6  0020               	movlb	0	; select bank0
 12431  17C7  150C               	bsf	12,2	;volatile
 12432                           
 12433                           ;lcd.c: 235: RA2 = 0;
 12434  17C8  110C               	bcf	12,2	;volatile
 12435                           
 12436                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12437  17C9  306A               	movlw	106
 12438  17CA  00F1               	movwf	??_LCD_Write_Char
 12439  17CB                     u3887:	
 12440  17CB  0BF1               	decfsz	??_LCD_Write_Char,f
 12441  17CC  2FCB               	goto	u3887
 12442  17CD  0000               	nop
 12443  17CE  0008               	return
 12444  17CF                     __end_of_LCD_Write_Char:	
 12445                           
 12446                           	psect	text33
 12447  1692                     __ptext33:	
 12448 ;; *************** function _LCD_Cmd *****************
 12449 ;; Defined at:
 12450 ;;		line 65 in file "lcd.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;  a               1    wreg     unsigned char 
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;  a               1    3[COMMON] unsigned char 
 12455 ;; Return value:  Size  Location     Type
 12456 ;;                  1    wreg      void 
 12457 ;; Registers used:
 12458 ;;		wreg, status,2, status,0, pclath, cstack
 12459 ;; Tracked objects:
 12460 ;;		On entry : 0/0
 12461 ;;		On exit  : 0/0
 12462 ;;		Unchanged: 0/0
 12463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;Total ram usage:        3 bytes
 12469 ;; Hardware stack levels used:    1
 12470 ;; Hardware stack levels required when called:    1
 12471 ;; This function calls:
 12472 ;;		_LCD_Port
 12473 ;; This function is called by:
 12474 ;;		_InitCustomChars
 12475 ;;		_LCD_Clear
 12476 ;;		_LCD_Set_Cursor
 12477 ;;		_LCD_Init
 12478 ;; This function uses a non-reentrant model
 12479 ;;
 12480                           
 12481                           
 12482                           ;psect for function _LCD_Cmd
 12483  1692                     _LCD_Cmd:	
 12484                           
 12485                           ;incstack = 0
 12486                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12487                           ;LCD_Cmd@a stored from wreg
 12488  1692  00F3               	movwf	LCD_Cmd@a
 12489                           
 12490                           ;lcd.c: 67: RA0 = 0;
 12491  1693  0020               	movlb	0	; select bank0
 12492  1694  100C               	bcf	12,0	;volatile
 12493                           
 12494                           ;lcd.c: 68: LCD_Port(a);
 12495  1695  0873               	movf	LCD_Cmd@a,w
 12496  1696  3196  26BC  3196   	fcall	_LCD_Port
 12497                           
 12498                           ;lcd.c: 69: RA2 = 1;
 12499  1699  0020               	movlb	0	; select bank0
 12500  169A  150C               	bsf	12,2	;volatile
 12501                           
 12502                           ;lcd.c: 70: RA2 = 0;
 12503  169B  110C               	bcf	12,2	;volatile
 12504                           
 12505                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12506  169C  302A               	movlw	42
 12507  169D  00F2               	movwf	??_LCD_Cmd+1
 12508  169E  308D               	movlw	141
 12509  169F  00F1               	movwf	??_LCD_Cmd
 12510  16A0                     u3897:	
 12511  16A0  0BF1               	decfsz	??_LCD_Cmd,f
 12512  16A1  2EA0               	goto	u3897
 12513  16A2  0BF2               	decfsz	??_LCD_Cmd+1,f
 12514  16A3  2EA0               	goto	u3897
 12515  16A4  3200               	nop2
 12516  16A5  0008               	return
 12517  16A6                     __end_of_LCD_Cmd:	
 12518                           
 12519                           	psect	text34
 12520  16BC                     __ptext34:	
 12521 ;; *************** function _LCD_Port *****************
 12522 ;; Defined at:
 12523 ;;		line 41 in file "lcd.c"
 12524 ;; Parameters:    Size  Location     Type
 12525 ;;  a               1    wreg     unsigned char 
 12526 ;; Auto vars:     Size  Location     Type
 12527 ;;  a               1    0[COMMON] unsigned char 
 12528 ;; Return value:  Size  Location     Type
 12529 ;;                  1    wreg      void 
 12530 ;; Registers used:
 12531 ;;		wreg
 12532 ;; Tracked objects:
 12533 ;;		On entry : 0/0
 12534 ;;		On exit  : 0/0
 12535 ;;		Unchanged: 0/0
 12536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;Total ram usage:        1 bytes
 12542 ;; Hardware stack levels used:    1
 12543 ;; This function calls:
 12544 ;;		Nothing
 12545 ;; This function is called by:
 12546 ;;		_LCD_Cmd
 12547 ;;		_LCD_Init
 12548 ;;		_LCD_Write_Char
 12549 ;; This function uses a non-reentrant model
 12550 ;;
 12551                           
 12552                           
 12553                           ;psect for function _LCD_Port
 12554  16BC                     _LCD_Port:	
 12555                           
 12556                           ;incstack = 0
 12557                           ; Regs used in _LCD_Port: [wreg]
 12558                           ;LCD_Port@a stored from wreg
 12559  16BC  00F0               	movwf	LCD_Port@a
 12560                           
 12561                           ;lcd.c: 43: if(a & 1)
 12562  16BD  1C70               	btfss	LCD_Port@a,0
 12563  16BE  2EC2               	goto	l94
 12564                           
 12565                           ;lcd.c: 44: RA7 = 1;
 12566  16BF  0020               	movlb	0	; select bank0
 12567  16C0  178C               	bsf	12,7	;volatile
 12568  16C1  2EC4               	goto	l2124
 12569  16C2                     l94:	
 12570                           
 12571                           ;lcd.c: 45: else
 12572                           ;lcd.c: 46: RA7 = 0;
 12573  16C2  0020               	movlb	0	; select bank0
 12574  16C3  138C               	bcf	12,7	;volatile
 12575  16C4                     l2124:	
 12576                           
 12577                           ;lcd.c: 48: if(a & 2)
 12578  16C4  1CF0               	btfss	LCD_Port@a,1
 12579  16C5  2EC8               	goto	l96
 12580                           
 12581                           ;lcd.c: 49: RA6 = 1;
 12582  16C6  170C               	bsf	12,6	;volatile
 12583  16C7  2EC9               	goto	l2128
 12584  16C8                     l96:	
 12585                           
 12586                           ;lcd.c: 50: else
 12587                           ;lcd.c: 51: RA6 = 0;
 12588  16C8  130C               	bcf	12,6	;volatile
 12589  16C9                     l2128:	
 12590                           
 12591                           ;lcd.c: 53: if(a & 4)
 12592  16C9  1D70               	btfss	LCD_Port@a,2
 12593  16CA  2ECD               	goto	l98
 12594                           
 12595                           ;lcd.c: 54: RC0 = 1;
 12596  16CB  140E               	bsf	14,0	;volatile
 12597  16CC  2ECE               	goto	l2132
 12598  16CD                     l98:	
 12599                           
 12600                           ;lcd.c: 55: else
 12601                           ;lcd.c: 56: RC0 = 0;
 12602  16CD  100E               	bcf	14,0	;volatile
 12603  16CE                     l2132:	
 12604                           
 12605                           ;lcd.c: 58: if(a & 8)
 12606  16CE  1DF0               	btfss	LCD_Port@a,3
 12607  16CF  2ED2               	goto	l100
 12608                           
 12609                           ;lcd.c: 59: RC1 = 1;
 12610  16D0  148E               	bsf	14,1	;volatile
 12611  16D1  0008               	return
 12612  16D2                     l100:	
 12613                           
 12614                           ;lcd.c: 60: else
 12615                           ;lcd.c: 61: RC1 = 0;
 12616  16D2  108E               	bcf	14,1	;volatile
 12617  16D3  0008               	return
 12618  16D4                     __end_of_LCD_Port:	
 12619                           
 12620                           	psect	text35
 12621  16D4                     __ptext35:	
 12622 ;; *************** function _ADCC_Initialize *****************
 12623 ;; Defined at:
 12624 ;;		line 60 in file "adc.c"
 12625 ;; Parameters:    Size  Location     Type
 12626 ;;		None
 12627 ;; Auto vars:     Size  Location     Type
 12628 ;;		None
 12629 ;; Return value:  Size  Location     Type
 12630 ;;                  1    wreg      void 
 12631 ;; Registers used:
 12632 ;;		wreg, status,2
 12633 ;; Tracked objects:
 12634 ;;		On entry : 0/0
 12635 ;;		On exit  : 0/0
 12636 ;;		Unchanged: 0/0
 12637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12642 ;;Total ram usage:        0 bytes
 12643 ;; Hardware stack levels used:    1
 12644 ;; This function calls:
 12645 ;;		Nothing
 12646 ;; This function is called by:
 12647 ;;		_SYSTEM_Initialize
 12648 ;; This function uses a non-reentrant model
 12649 ;;
 12650                           
 12651                           
 12652                           ;psect for function _ADCC_Initialize
 12653  16D4                     _ADCC_Initialize:	
 12654                           
 12655                           ;adc.c: 62: ADCON1 = 0x00;
 12656                           
 12657                           ;incstack = 0
 12658                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12659  16D4  0021               	movlb	1	; select bank1
 12660  16D5  0194               	clrf	20	;volatile
 12661                           
 12662                           ;adc.c: 64: ADCON2 = 0x00;
 12663  16D6  0195               	clrf	21	;volatile
 12664                           
 12665                           ;adc.c: 66: ADCON3 = 0x00;
 12666  16D7  0196               	clrf	22	;volatile
 12667                           
 12668                           ;adc.c: 68: ADACT = 0x00;
 12669  16D8  0199               	clrf	25	;volatile
 12670                           
 12671                           ;adc.c: 70: ADSTAT = 0x00;
 12672  16D9  0197               	clrf	23	;volatile
 12673                           
 12674                           ;adc.c: 73: ADCLK = 0x3F;
 12675  16DA  303F               	movlw	63
 12676  16DB  0098               	movwf	24	;volatile
 12677                           
 12678                           ;adc.c: 81: ADREF = 0x00;
 12679  16DC  019A               	clrf	26	;volatile
 12680                           
 12681                           ;adc.c: 83: ADCAP = 0x00;
 12682  16DD  019B               	clrf	27	;volatile
 12683                           
 12684                           ;adc.c: 86: ADPRE = 0x07;
 12685  16DE  3007               	movlw	7
 12686  16DF  009C               	movwf	28	;volatile
 12687                           
 12688                           ;adc.c: 88: ADACQ = 0x00;
 12689  16E0  019D               	clrf	29	;volatile
 12690                           
 12691                           ;adc.c: 90: ADPCH = 0x00;
 12692  16E1  019E               	clrf	30	;volatile
 12693                           
 12694                           ;adc.c: 92: ADRPT = 0x00;
 12695  16E2  0022               	movlb	2	; select bank2
 12696  16E3  018D               	clrf	13	;volatile
 12697                           
 12698                           ;adc.c: 94: ADLTHL = 0x00;
 12699  16E4  018E               	clrf	14	;volatile
 12700                           
 12701                           ;adc.c: 96: ADLTHH = 0x00;
 12702  16E5  018F               	clrf	15	;volatile
 12703                           
 12704                           ;adc.c: 98: ADUTHL = 0x00;
 12705  16E6  0190               	clrf	16	;volatile
 12706                           
 12707                           ;adc.c: 100: ADUTHH = 0x00;
 12708  16E7  0191               	clrf	17	;volatile
 12709                           
 12710                           ;adc.c: 102: ADSTPTL = 0x00;
 12711  16E8  0192               	clrf	18	;volatile
 12712                           
 12713                           ;adc.c: 104: ADSTPTH = 0x00;
 12714  16E9  0193               	clrf	19	;volatile
 12715                           
 12716                           ;adc.c: 106: ADCON0 = 0x84;
 12717  16EA  3084               	movlw	132
 12718  16EB  0021               	movlb	1	; select bank1
 12719  16EC  0093               	movwf	19	;volatile
 12720  16ED  0008               	return
 12721  16EE                     __end_of_ADCC_Initialize:	
 12722                           
 12723                           	psect	text36
 12724  0E39                     __ptext36:	
 12725 ;; *************** function _PID_Calculate *****************
 12726 ;; Defined at:
 12727 ;;		line 22 in file "pid.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;  setpoint        2    6[COMMON] int 
 12730 ;;  temp            2    8[COMMON] int 
 12731 ;; Auto vars:     Size  Location     Type
 12732 ;;		None
 12733 ;; Return value:  Size  Location     Type
 12734 ;;                  2    6[COMMON] int 
 12735 ;; Registers used:
 12736 ;;		wreg, status,2, status,0, pclath, cstack
 12737 ;; Tracked objects:
 12738 ;;		On entry : 0/0
 12739 ;;		On exit  : 0/0
 12740 ;;		Unchanged: 0/0
 12741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;Total ram usage:        6 bytes
 12747 ;; Hardware stack levels used:    1
 12748 ;; Hardware stack levels required when called:    1
 12749 ;; This function calls:
 12750 ;;		___wmul
 12751 ;; This function is called by:
 12752 ;;		_main
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           
 12757                           ;psect for function _PID_Calculate
 12758  0E39                     _PID_Calculate:	
 12759                           
 12760                           ;pid.c: 27: error = setpoint - temp;
 12761                           
 12762                           ;incstack = 0
 12763                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12764  0E39  0978               	comf	PID_Calculate@temp,w
 12765  0E3A  00FA               	movwf	??_PID_Calculate
 12766  0E3B  0979               	comf	PID_Calculate@temp+1,w
 12767  0E3C  00FB               	movwf	??_PID_Calculate+1
 12768  0E3D  0AFA               	incf	??_PID_Calculate,f
 12769  0E3E  1903               	skipnz
 12770  0E3F  0AFB               	incf	??_PID_Calculate+1,f
 12771  0E40  0876               	movf	PID_Calculate@setpoint,w
 12772  0E41  077A               	addwf	??_PID_Calculate,w
 12773  0E42  0021               	movlb	1	; select bank1
 12774  0E43  00B0               	movwf	_error^(0+128)
 12775  0E44  0877               	movf	PID_Calculate@setpoint+1,w
 12776  0E45  3D7B               	addwfc	??_PID_Calculate+1,w
 12777  0E46  00B1               	movwf	(_error+1)^(0+128)
 12778                           
 12779                           ;pid.c: 29: errorValue = error * Kp;
 12780  0E47  0831               	movf	(_error+1)^(0+128),w
 12781  0E48  00F1               	movwf	___wmul@multiplier+1
 12782  0E49  0830               	movf	_error^(0+128),w
 12783  0E4A  00F0               	movwf	___wmul@multiplier
 12784  0E4B  086B               	movf	(_Kp+1)^(0+128),w
 12785  0E4C  00F3               	movwf	___wmul@multiplicand+1
 12786  0E4D  086A               	movf	_Kp^(0+128),w
 12787  0E4E  00F2               	movwf	___wmul@multiplicand
 12788  0E4F  3197  2708  318E   	fcall	___wmul
 12789  0E52  0871               	movf	?___wmul+1,w
 12790  0E53  0021               	movlb	1	; select bank1
 12791  0E54  00B3               	movwf	(_errorValue+1)^(0+128)
 12792  0E55  0870               	movf	?___wmul,w
 12793  0E56  00B2               	movwf	_errorValue^(0+128)
 12794                           
 12795                           ;pid.c: 32: if(error>lastError)
 12796  0E57  0835               	movf	(_lastError+1)^(0+128),w
 12797  0E58  3A80               	xorlw	128
 12798  0E59  00FA               	movwf	??_PID_Calculate
 12799  0E5A  0831               	movf	(_error+1)^(0+128),w
 12800  0E5B  3A80               	xorlw	128
 12801  0E5C  027A               	subwf	??_PID_Calculate,w
 12802  0E5D  1D03               	skipz
 12803  0E5E  2E61               	goto	u3265
 12804  0E5F  0830               	movf	_error^(0+128),w
 12805  0E60  0234               	subwf	_lastError^(0+128),w
 12806  0E61                     u3265:	
 12807  0E61  1803               	skipnc
 12808  0E62  2E76               	goto	l2864
 12809                           
 12810                           ;pid.c: 33: {
 12811                           ;pid.c: 34: pidIntegrated = pidIntegrated + (error * Ki);
 12812  0E63  0021               	movlb	1	; select bank1
 12813  0E64  0831               	movf	(_error+1)^(0+128),w
 12814  0E65  00F1               	movwf	___wmul@multiplier+1
 12815  0E66  0830               	movf	_error^(0+128),w
 12816  0E67  00F0               	movwf	___wmul@multiplier
 12817  0E68  0869               	movf	(_Ki+1)^(0+128),w
 12818  0E69  00F3               	movwf	___wmul@multiplicand+1
 12819  0E6A  0868               	movf	_Ki^(0+128),w
 12820  0E6B  00F2               	movwf	___wmul@multiplicand
 12821  0E6C  3197  2708  318E   	fcall	___wmul
 12822  0E6F  0021               	movlb	1	; select bank1
 12823  0E70  0838               	movf	_pidIntegrated^(0+128),w
 12824  0E71  0770               	addwf	?___wmul,w
 12825  0E72  00B8               	movwf	_pidIntegrated^(0+128)
 12826  0E73  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12827  0E74  3D71               	addwfc	?___wmul+1,w
 12828  0E75  2E8F               	goto	L7
 12829  0E76                     l2864:	
 12830                           ;pid.c: 35: }
 12831                           
 12832                           
 12833                           ;pid.c: 36: else
 12834                           ;pid.c: 37: {
 12835                           ;pid.c: 38: pidIntegrated = pidIntegrated - (error * Ki);
 12836  0E76  0021               	movlb	1	; select bank1
 12837  0E77  0831               	movf	(_error+1)^(0+128),w
 12838  0E78  00F1               	movwf	___wmul@multiplier+1
 12839  0E79  0830               	movf	_error^(0+128),w
 12840  0E7A  00F0               	movwf	___wmul@multiplier
 12841  0E7B  0869               	movf	(_Ki+1)^(0+128),w
 12842  0E7C  00F3               	movwf	___wmul@multiplicand+1
 12843  0E7D  0868               	movf	_Ki^(0+128),w
 12844  0E7E  00F2               	movwf	___wmul@multiplicand
 12845  0E7F  3197  2708  318E   	fcall	___wmul
 12846  0E82  0970               	comf	?___wmul,w
 12847  0E83  00FA               	movwf	??_PID_Calculate
 12848  0E84  0971               	comf	?___wmul+1,w
 12849  0E85  00FB               	movwf	??_PID_Calculate+1
 12850  0E86  0AFA               	incf	??_PID_Calculate,f
 12851  0E87  1903               	skipnz
 12852  0E88  0AFB               	incf	??_PID_Calculate+1,f
 12853  0E89  0021               	movlb	1	; select bank1
 12854  0E8A  0838               	movf	_pidIntegrated^(0+128),w
 12855  0E8B  077A               	addwf	??_PID_Calculate,w
 12856  0E8C  00B8               	movwf	_pidIntegrated^(0+128)
 12857  0E8D  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12858  0E8E  3D7B               	addwfc	??_PID_Calculate+1,w
 12859  0E8F                     L7:	
 12860  0E8F  00B9               	movwf	(_pidIntegrated+1)^(0+128)
 12861                           
 12862                           ;pid.c: 39: }
 12863                           ;pid.c: 41: if (pidIntegrated< pidMinOutput)
 12864  0E90  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12865  0E91  3A80               	xorlw	128
 12866  0E92  00FA               	movwf	??_PID_Calculate
 12867  0E93  083B               	movf	(_pidMinOutput+1)^(0+128),w
 12868  0E94  3A80               	xorlw	128
 12869  0E95  027A               	subwf	??_PID_Calculate,w
 12870  0E96  1D03               	skipz
 12871  0E97  2E9A               	goto	u3275
 12872  0E98  083A               	movf	_pidMinOutput^(0+128),w
 12873  0E99  0238               	subwf	_pidIntegrated^(0+128),w
 12874  0E9A                     u3275:	
 12875  0E9A  1803               	skipnc
 12876  0E9B  2EA1               	goto	l176
 12877                           
 12878                           ;pid.c: 42: {
 12879                           ;pid.c: 43: pidIntegrated= pidMinOutput;
 12880  0E9C  0021               	movlb	1	; select bank1
 12881  0E9D  083B               	movf	(_pidMinOutput+1)^(0+128),w
 12882  0E9E  00B9               	movwf	(_pidIntegrated+1)^(0+128)
 12883  0E9F  083A               	movf	_pidMinOutput^(0+128),w
 12884  0EA0  00B8               	movwf	_pidIntegrated^(0+128)
 12885  0EA1                     l176:	
 12886                           
 12887                           ;pid.c: 44: }
 12888                           ;pid.c: 46: if (pidIntegrated> pidMaxOutput)
 12889  0EA1  0021               	movlb	1	; select bank1
 12890  0EA2  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 12891  0EA3  3A80               	xorlw	128
 12892  0EA4  00FA               	movwf	??_PID_Calculate
 12893  0EA5  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12894  0EA6  3A80               	xorlw	128
 12895  0EA7  027A               	subwf	??_PID_Calculate,w
 12896  0EA8  1D03               	skipz
 12897  0EA9  2EAC               	goto	u3285
 12898  0EAA  0838               	movf	_pidIntegrated^(0+128),w
 12899  0EAB  026C               	subwf	_pidMaxOutput^(0+128),w
 12900  0EAC                     u3285:	
 12901  0EAC  1803               	skipnc
 12902  0EAD  2EB3               	goto	l177
 12903                           
 12904                           ;pid.c: 47: {
 12905                           ;pid.c: 48: pidIntegrated= pidMaxOutput;
 12906  0EAE  0021               	movlb	1	; select bank1
 12907  0EAF  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 12908  0EB0  00B9               	movwf	(_pidIntegrated+1)^(0+128)
 12909  0EB1  086C               	movf	_pidMaxOutput^(0+128),w
 12910  0EB2  00B8               	movwf	_pidIntegrated^(0+128)
 12911  0EB3                     l177:	
 12912                           
 12913                           ;pid.c: 49: }
 12914                           ;pid.c: 51: lastError=error;
 12915  0EB3  0021               	movlb	1	; select bank1
 12916  0EB4  0831               	movf	(_error+1)^(0+128),w
 12917  0EB5  00B5               	movwf	(_lastError+1)^(0+128)
 12918  0EB6  0830               	movf	_error^(0+128),w
 12919  0EB7  00B4               	movwf	_lastError^(0+128)
 12920                           
 12921                           ;pid.c: 54: derivativeValue=(error-D_PrevError)*Kd;
 12922  0EB8  0928               	comf	_D_PrevError^(0+128),w
 12923  0EB9  00FA               	movwf	??_PID_Calculate
 12924  0EBA  0929               	comf	(_D_PrevError+1)^(0+128),w
 12925  0EBB  00FB               	movwf	??_PID_Calculate+1
 12926  0EBC  0AFA               	incf	??_PID_Calculate,f
 12927  0EBD  1903               	skipnz
 12928  0EBE  0AFB               	incf	??_PID_Calculate+1,f
 12929  0EBF  0830               	movf	_error^(0+128),w
 12930  0EC0  077A               	addwf	??_PID_Calculate,w
 12931  0EC1  00F0               	movwf	___wmul@multiplier
 12932  0EC2  0831               	movf	(_error+1)^(0+128),w
 12933  0EC3  3D7B               	addwfc	??_PID_Calculate+1,w
 12934  0EC4  00F1               	movwf	___wmul@multiplier+1
 12935  0EC5  0867               	movf	(_Kd+1)^(0+128),w
 12936  0EC6  00F3               	movwf	___wmul@multiplicand+1
 12937  0EC7  0866               	movf	_Kd^(0+128),w
 12938  0EC8  00F2               	movwf	___wmul@multiplicand
 12939  0EC9  3197  2708  318E   	fcall	___wmul
 12940  0ECC  0871               	movf	?___wmul+1,w
 12941  0ECD  0021               	movlb	1	; select bank1
 12942  0ECE  00AD               	movwf	(_derivativeValue+1)^(0+128)
 12943  0ECF  0870               	movf	?___wmul,w
 12944  0ED0  00AC               	movwf	_derivativeValue^(0+128)
 12945                           
 12946                           ;pid.c: 55: D_PrevError = error;
 12947  0ED1  0831               	movf	(_error+1)^(0+128),w
 12948  0ED2  00A9               	movwf	(_D_PrevError+1)^(0+128)
 12949  0ED3  0830               	movf	_error^(0+128),w
 12950  0ED4  00A8               	movwf	_D_PrevError^(0+128)
 12951                           
 12952                           ;pid.c: 88: Result = errorValue+pidIntegrated+derivativeValue;
 12953  0ED5  0838               	movf	_pidIntegrated^(0+128),w
 12954  0ED6  0732               	addwf	_errorValue^(0+128),w
 12955  0ED7  00FA               	movwf	??_PID_Calculate
 12956  0ED8  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12957  0ED9  3D33               	addwfc	(_errorValue+1)^(0+128),w
 12958  0EDA  00FB               	movwf	??_PID_Calculate+1
 12959  0EDB  082C               	movf	_derivativeValue^(0+128),w
 12960  0EDC  077A               	addwf	??_PID_Calculate,w
 12961  0EDD  00AA               	movwf	_Result^(0+128)
 12962  0EDE  082D               	movf	(_derivativeValue+1)^(0+128),w
 12963  0EDF  3D7B               	addwfc	??_PID_Calculate+1,w
 12964  0EE0  00AB               	movwf	(_Result+1)^(0+128)
 12965                           
 12966                           ;pid.c: 90: if (Result < pidMinOutput)
 12967  0EE1  082B               	movf	(_Result+1)^(0+128),w
 12968  0EE2  3A80               	xorlw	128
 12969  0EE3  00FA               	movwf	??_PID_Calculate
 12970  0EE4  083B               	movf	(_pidMinOutput+1)^(0+128),w
 12971  0EE5  3A80               	xorlw	128
 12972  0EE6  027A               	subwf	??_PID_Calculate,w
 12973  0EE7  1D03               	skipz
 12974  0EE8  2EEB               	goto	u3295
 12975  0EE9  083A               	movf	_pidMinOutput^(0+128),w
 12976  0EEA  022A               	subwf	_Result^(0+128),w
 12977  0EEB                     u3295:	
 12978  0EEB  1803               	skipnc
 12979  0EEC  2EF2               	goto	l178
 12980                           
 12981                           ;pid.c: 91: {
 12982                           ;pid.c: 92: Result = pidMinOutput;
 12983  0EED  0021               	movlb	1	; select bank1
 12984  0EEE  083B               	movf	(_pidMinOutput+1)^(0+128),w
 12985  0EEF  00AB               	movwf	(_Result+1)^(0+128)
 12986  0EF0  083A               	movf	_pidMinOutput^(0+128),w
 12987  0EF1  00AA               	movwf	_Result^(0+128)
 12988  0EF2                     l178:	
 12989                           
 12990                           ;pid.c: 93: }
 12991                           ;pid.c: 95: if (Result > pidMaxOutput)
 12992  0EF2  0021               	movlb	1	; select bank1
 12993  0EF3  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 12994  0EF4  3A80               	xorlw	128
 12995  0EF5  00FA               	movwf	??_PID_Calculate
 12996  0EF6  082B               	movf	(_Result+1)^(0+128),w
 12997  0EF7  3A80               	xorlw	128
 12998  0EF8  027A               	subwf	??_PID_Calculate,w
 12999  0EF9  1D03               	skipz
 13000  0EFA  2EFD               	goto	u3305
 13001  0EFB  082A               	movf	_Result^(0+128),w
 13002  0EFC  026C               	subwf	_pidMaxOutput^(0+128),w
 13003  0EFD                     u3305:	
 13004  0EFD  1803               	skipnc
 13005  0EFE  2F04               	goto	l179
 13006                           
 13007                           ;pid.c: 96: {
 13008                           ;pid.c: 97: Result = pidMaxOutput;
 13009  0EFF  0021               	movlb	1	; select bank1
 13010  0F00  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 13011  0F01  00AB               	movwf	(_Result+1)^(0+128)
 13012  0F02  086C               	movf	_pidMaxOutput^(0+128),w
 13013  0F03  00AA               	movwf	_Result^(0+128)
 13014  0F04                     l179:	
 13015                           
 13016                           ;pid.c: 98: }
 13017                           ;pid.c: 100: return (Result);
 13018  0F04  0021               	movlb	1	; select bank1
 13019  0F05  082B               	movf	(_Result+1)^(0+128),w
 13020  0F06  00F7               	movwf	?_PID_Calculate+1
 13021  0F07  082A               	movf	_Result^(0+128),w
 13022  0F08  00F6               	movwf	?_PID_Calculate
 13023  0F09  0008               	return
 13024  0F0A                     __end_of_PID_Calculate:	
 13025                           
 13026                           	psect	text37
 13027  1708                     __ptext37:	
 13028 ;; *************** function ___wmul *****************
 13029 ;; Defined at:
 13030 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 13031 ;; Parameters:    Size  Location     Type
 13032 ;;  multiplier      2    0[COMMON] unsigned int 
 13033 ;;  multiplicand    2    2[COMMON] unsigned int 
 13034 ;; Auto vars:     Size  Location     Type
 13035 ;;  product         2    4[COMMON] unsigned int 
 13036 ;; Return value:  Size  Location     Type
 13037 ;;                  2    0[COMMON] unsigned int 
 13038 ;; Registers used:
 13039 ;;		wreg, status,2, status,0
 13040 ;; Tracked objects:
 13041 ;;		On entry : 0/0
 13042 ;;		On exit  : 0/0
 13043 ;;		Unchanged: 0/0
 13044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13048 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13049 ;;Total ram usage:        6 bytes
 13050 ;; Hardware stack levels used:    1
 13051 ;; This function calls:
 13052 ;;		Nothing
 13053 ;; This function is called by:
 13054 ;;		_readAnalog
 13055 ;;		_PID_Calculate
 13056 ;;		_eval_poly
 13057 ;; This function uses a non-reentrant model
 13058 ;;
 13059                           
 13060                           
 13061                           ;psect for function ___wmul
 13062  1708                     ___wmul:	
 13063                           
 13064                           ;incstack = 0
 13065                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13066  1708  01F4               	clrf	___wmul@product
 13067  1709  01F5               	clrf	___wmul@product+1
 13068  170A                     l2138:	
 13069  170A  1C70               	btfss	___wmul@multiplier,0
 13070  170B  2F10               	goto	l518
 13071  170C  0872               	movf	___wmul@multiplicand,w
 13072  170D  07F4               	addwf	___wmul@product,f
 13073  170E  0873               	movf	___wmul@multiplicand+1,w
 13074  170F  3DF5               	addwfc	___wmul@product+1,f
 13075  1710                     l518:	
 13076  1710  3001               	movlw	1
 13077  1711                     u2005:	
 13078  1711  35F2               	lslf	___wmul@multiplicand,f
 13079  1712  0DF3               	rlf	___wmul@multiplicand+1,f
 13080  1713  0B89               	decfsz	9,f
 13081  1714  2F11               	goto	u2005
 13082  1715  3001               	movlw	1
 13083  1716                     u2015:	
 13084  1716  36F1               	lsrf	___wmul@multiplier+1,f
 13085  1717  0CF0               	rrf	___wmul@multiplier,f
 13086  1718  0B89               	decfsz	9,f
 13087  1719  2F16               	goto	u2015
 13088  171A  0870               	movf	___wmul@multiplier,w
 13089  171B  0471               	iorwf	___wmul@multiplier+1,w
 13090  171C  1D03               	btfss	3,2
 13091  171D  2F0A               	goto	l2138
 13092  171E  0875               	movf	___wmul@product+1,w
 13093  171F  00F1               	movwf	?___wmul+1
 13094  1720  0874               	movf	___wmul@product,w
 13095  1721  00F0               	movwf	?___wmul
 13096  1722  0008               	return
 13097  1723                     __end_of___wmul:	
 13098  007E                     btemp	set	126	;btemp
 13099  007E                     wtemp	set	126
 13100  007E                     wtemp0	set	126
 13101  0080                     wtemp1	set	128
 13102  0082                     wtemp2	set	130
 13103  0084                     wtemp3	set	132
 13104  0086                     wtemp4	set	134
 13105  0088                     wtemp5	set	136
 13106  007F                     wtemp6	set	127
 13107  007E                     ttemp	set	126
 13108  007E                     ttemp0	set	126
 13109  0081                     ttemp1	set	129
 13110  0084                     ttemp2	set	132
 13111  0087                     ttemp3	set	135
 13112  007F                     ttemp4	set	127
 13113  007E                     ltemp	set	126
 13114  007E                     ltemp0	set	126
 13115  0082                     ltemp1	set	130
 13116  0086                     ltemp2	set	134
 13117  0080                     ltemp3	set	128


Data Sizes:
    Strings     120
    Constant    27
    Data        45
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     25      79
    BANK2            80     80      80
    BANK3            80      0      37
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           48      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[8]), STR_6(CODE[5]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[11]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               113   113      0   47021
                                             72 BANK0      8     8      0
                                              0 BANK1     25    25      0
                                              0 BANK2     80    80      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30699
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16115
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7369
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1976
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           5     5      0    5541
                                             14 BANK0      5     5      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM7_LoadDutyValue
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM7_LoadDutyValue                                   4     2      2     203
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     692
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       19    14      5    3183
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1175
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1250
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1100
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Char
       _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _PWM7_LoadDutyValue
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     19      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      25      11       46.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     172      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              30      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     172      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat May 12 16:54:00 2018

        __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000                               l55 167A  
                             l94 16C2                               l96 16C8                               l98 16CD  
                             _Kd 00E6                               _Ki 00E8                               _Kp 00EA  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 16D2                              l176 0EA1                              l177 0EB3  
                            l178 0EF2                              l370 04CE                              l179 0F04  
                            l427 0704                              l364 043A                              l429 0724  
                            l518 1710                              l710 0FA9                              l573 0A6C  
                            l770 0B49                              l686 0A3C                              l687 0A44  
                            l679 0A29                              _GIE 005F                              _RA0 0060  
                            _RB0 0068                              _RA2 0062                              _RB1 0069  
                            _RC0 0070                              _RB2 006A                              _RC1 0071  
                            _RA6 0066                              _RA7 0067                     __CFG_CPD$OFF 0000  
                            _key 00C2                              _log 0C0C                  __end_of_ADCRead 1681  
                   ___awmod@sign 0076                  _TMR2_Initialize 1665                     __CFG_BORV$LO 0000  
                            wreg 0009                      main@analogs 00D9                  __end_of_LCD_Cmd 16A6  
                   __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A                   _LCD_Set_Cursor 0880  
                   ___ftdiv@sign 003F                             l2100 0A15                             l2106 0A2E  
                           l2202 0FBB                             l2132 16CE                             l2124 16C4  
                           l3004 0409                             l3020 0447                             l2108 0A36  
                           l3030 0485                             l2206 0FCD                             l2128 16C9  
                           l2216 0FE8                             l2160 0F39                             l2232 0CE9  
                           l2138 170A                             l2314 095B                             l3050 04D9  
                           l3018 0445                             l2402 0836                             l2226 0CD3  
                           l2340 0992                             l2332 0981                             l2324 0963  
                           l2308 0950                             l3036 049D                             l3052 04DB  
                           l2092 09FF                             l2156 0F32                             l2260 0D48  
                           l2244 0D24                             l3108 0598                             l2326 096F  
                           l2190 0F88                             l2166 0F48                             l2422 0857  
                           l3150 0698                             l2336 098A                             l2352 090B  
                           l2096 0A06                             l2184 0F75                             l2256 0D40  
                           l2248 0D2C                             l2440 09F0                             l3216 07B1  
                           l3160 06AF                             l2370 0930                             l3058 04E9  
                           l3066 0500                             l2098 0A10                             l2186 0F7F  
                           l2178 0F62                             l3154 069E                             l2364 0918  
                           l2356 0912                             l2700 0018                             l3068 052E  
                           l2196 0F9B                             l2188 0F84                             l3172 06FA  
                           l3164 06B8                             l2366 0924                             l2374 0939  
                           l2198 0FA5                             l2390 1767                             l3182 0718  
                           l2560 0D91                             l2800 0AF5                             l3192 072C  
                           l3168 06F2                             l3176 0705                             l2482 179B  
                           l2378 0941                             l2570 0D98                             l2546 16F0  
                           l2722 0A8D                             l2714 0A7D                             l3186 0726  
                           l2476 178A                             l2580 0DD7                             l2572 0DC5  
                           l2740 0AD4                             l2732 0ABB                             l2724 0A9B  
                           l2820 0B33                             l2590 0E18                             l2582 0DE8  
                           l2750 0B7A                             l2398 0820                             l3198 074C  
                           l2496 08A0                             l2576 0DC9                             l2736 0AC6  
                           l2832 0B5A                             l2672 0C2B                             l2594 0E25  
                           l2578 0DCE                             l2850 02D4                             l2770 0BD1  
                           l2826 0B40                             l2818 0B25                             l2588 0DEC  
                           l2756 0B90                             l2828 0B4C                             l2694 000D  
                           l2942 0326                             l2790 1747                             l2678 0C3E  
                           l2864 0E76                             l2960 0355                             l2936 0318  
                           l2970 037E                             l2778 0BEA                             l2958 02FC  
                           l2986 03A3                             ?_log 0057                             l2998 03F1  
                           STR_1 1070                             STR_2 107B                             STR_3 105F  
                           STR_4 104E                             STR_5 103D                             STR_6 108E  
                           STR_7 1086                             STR_8 101B                             STR_9 102C  
                           u2005 1711                             u2015 1716                             u2125 0F63  
                           _LATA 0016                             _LATB 0017                             u2215 0F9C  
                           _LATC 0018                             u3025 0BA2                             u3105 0AFC  
                           u3035 0BB2                             u2155 0F76                             u2315 0D2D  
                           u3205 0227                             u3045 0BD2                             u2325 0D33  
                           u3215 0264                             u3055 0BE1                             u3135 0B26  
                           u3305 0EFD                             u2425 0966                             u3225 02AB  
                           u3065 0BEB                             u2185 0F89                             _T2PR 028D  
                           u3315 0312                             u3235 02C4                             u2355 0D49  
                           u2445 0970                             u2525 091B                             u3165 0B41  
                           u2365 0D4F                             u2285 0CF5                             u2455 097A  
                           u3255 02E0                             u2295 0D05                             u2720 0D7B  
                           u3520 0566                             u3265 0E61                             u2385 17B3  
                           u2705 08AB                             u2465 0982                             u2545 092A  
                           u3505 04F9                             u2810 17FE                             u3275 0E9A  
                           u2555 0931                             u3435 0476                             u3195 01D5  
                           u3285 0EAC                             u3365 050F                             u3605 0713  
                           u3295 0EEB                             u1935 0A4B                             u1855 0A0B  
                           u3615 071F                             u3385 03E1                             u2835 16B5  
                           u3707 0527                             u1875 0A24                             u2685 088C  
                           u3717 03A8                             u3807 0049                             u3727 0433  
                           u2935 0A90                             u1895 0A31                             u3575 06D3  
                           u3817 0053                             u2785 0E06                             u3737 04C7  
                           u3585 06F0                             u3657 058E                             u3827 0061  
                           u3747 08DA                             u2955 0A9C                             u3667 0796  
                           u3837 006F                             u3757 08EA                             u2965 0AB0  
                           u3677 07AA                             u3847 007F                             u3767 08F9  
                           u3687 0360                             u2975 0ABC                             u3857 008E  
                           u3777 0026                             u3697 039B                             u3867 009D  
                           u3787 0034                             u3877 17BF                             u3797 003F  
                           u3887 17CB                             u3897 16A0              tempCalc@analogValue 005D  
                           _WPUA 0F39                             _WPUB 0F44                             _WPUC 0F4F  
                           _WPUE 0F65                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
              ?_LCD_Write_String 0075                             _desc 01B4                             _main 053A  
                   ___ftpack@arg 0070               __size_of_LCD_Clear 0008                             _loop 00EE  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0002  
             ??_LCD_Write_String 0077                             ttemp 007E                             wtemp 007E  
                  __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 0D70                     ___ftmul@sign 002F                     ___fttol@exp1 007D  
                          ??_log 005A                     ___fttol@lval 0079                 __end_of_LCD_Init 00A2  
               __end_of_LCD_Port 16D4   __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 080A  
                __end_of___aldiv 0ADD                            _ADACQ 009D                            _ADCAP 009B  
                          _ADACT 0099                            ?_main 0070                            _ADCLK 0098  
                          _ADPCH 009E                            _ADREF 009A                  __end_of___awdiv 0997  
                          _ADPRE 009C                  __end_of___ftadd 1000                    __CFG_WDTE$OFF 0000  
                __end_of___awmod 0946                            _ADRPT 010D                  __end_of___ftdiv 0C0C  
                __end_of___ftmul 0D70                  ___awdiv@divisor 0070                  __end_of___ftsub 175D  
                __end_of___fttol 0B63                            _T2CON 028E                            _LATC2 00C2  
                          _T2HLT 028F                            _T2TMR 028C                            _T2RST 0291  
                ___awdiv@counter 0075                            _OSCEN 0891                            _TRISA 0011  
                          _TRISB 0012                            _TRISC 0013           __end_of_LCD_Set_Cursor 08BF  
                  ___awtoft@sign 007D                  __end_of_readKey 001B                            _frexp 0845  
                          _errno 00AE                            _error 00B0                    ___ftpack@sign 0074  
                          _timer 00BE                            main@j 00DD                            main@x 0068  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F                 InitCustomChars@i 0076  
                 ?_LCD_Write_Int 0079                   _LCD_Write_Char 17A3                  __initialization 07B7  
                    log@exponent 005B                     __end_of_main 07B7                readAnalog@channel 0026  
        __end_of_TMR2_Initialize 1673                        ??_ADCRead 0073                           ??_main 00C5  
                  ___fttol@sign1 0078                __end_of_LCD_Clear 1642                        ??_LCD_Cmd 0071  
                ?_LCD_Set_Cursor 0074                           _ADCON0 0093                           _ADCON1 0094  
                         _ADCON2 0095                           _ADCON3 0096                           ?_frexp 0070  
                         _ADLTHH 010F                           _ADLTHL 010E                           _ADRESH 008D  
                         _ADRESL 008C                           _ADSTAT 0097                           _ADUTHH 0111  
               ___awdiv@dividend 0072                           _ADUTHL 0110                 __end_of___awtoft 177D  
                         _ANSELA 0F38                           _ANSELB 0F43                           _ANSELC 0F4E  
               __end_of___ftpack 0A5B                           _RC3PPS 0F23                   __CFG_WDTCCS$SC 0000  
                         _FVRCON 090C                           _OSCFRQ 0893           __end_of_LCD_Write_Char 17CF  
                 __CFG_PWRTE$OFF 0000                           _Result 00AA                     _CCPTMRS1bits 021F  
                         ___ftge 080A           LCD_Write_Int@numPlaces 007C                        ??___aldiv 0078  
                         ___wmul 1708                        ??___awdiv 0074                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                   _PWM_Initialize 1642  
                      ??___ftdiv 0036                        ??___ftmul 0026                           _choice 00C0  
                      ??___ftsub 007E                        ??___fttol 0074           main@currentTemperature 00D1  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                           _timer2 00C4  
                ___awmod@counter 0075                           _totals 00A0            ___ftmul@f3_as_product 002B  
               __end_of_tempCalc 01BF                  _ADCC_Initialize 16D4                        ??_readKey 0070  
               LCD_Write_Int@str 0025                  _InitCustomChars 177D                  LCD_Set_Cursor@w 0079  
                LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078  
                  _pidIntegrated 00B8         readAnalog@analog_channel 0079                _SYSTEM_Initialize 08BF  
               __end_oflog@coeff 101B          __end_of__initialization 07FD                        ?_LCD_Init 0070  
                      ?_LCD_Port 0070                       ___ftadd@f1 0040                       ___ftadd@f2 0043  
                _derivativeValue 00AC                       ___ftge@ff1 0070                       ___ftge@ff2 0073  
                ??_LCD_Write_Int 0020               ?_SYSTEM_Initialize 0070                     eval_poly@res 0054  
                     ___ftdiv@f1 0033                       ___ftdiv@f2 0030                       ___ftdiv@f3 003B  
                ?_LCD_Write_Char 0070                    LCD_Init@style 0077                       ___awtoft@c 0078  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023           __end_of_PWM_Initialize 164D  
                     ___ftsub@f1 0050                       ___ftsub@f2 004D                       ___fttol@f1 0070  
                 __pcstackCOMMON 0070                        LCD_Port@a 0070                     __pidataBANK1 1681  
                   __pidataBANK3 1723              ??_SYSTEM_Initialize 0078                    __end_of_frexp 0880  
               ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016                          ??_frexp 0074  
      __end_of_SYSTEM_Initialize 0901                       __pbssBANK1 00A0                       __pbssBANK3 01BC  
                     __pbssBANK4 0220               __size_of_eval_poly 0060                       ??_LCD_Init 0074  
                     ??_LCD_Port 0070           __size_of_PID_Calculate 00D1                       _delayCount 00C1  
                ?_PWM_Initialize 0070                       __pmaintext 053A                          ?___ftge 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 16EE  
                        _ADCRead 1673        __size_of_LCD_Write_String 001A                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
       __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000          __end_of_InitCustomChars 17A3  
                        _LCD_Cmd 1692                   main@holdOutput 006B                 main@lidOpenCount 006C  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM7DCH 0391                          _PWM7DCL 0390                          _PWM7CON 0392  
                        _PPSLOCK 0E8F                   main@dutyCycle6 00D7            PID_Calculate@setpoint 0076  
                      ?_tempCalc 005D                       _readAnalog 01BF                          ___aldiv 0A5B  
                        ___cgram 01A0                       _menuChoice 02FC                  __size_of___ftge 003B  
                        ___awdiv 0946                          ___ftadd 0F0A                          ___awmod 0901  
                        ___ftdiv 0B63                  __size_of___wmul 001B                          ___ftmul 0CBC  
                        ___ftsub 173F                          ___fttol 0ADD                       _errorValue 00B2  
                     ??___awtoft 007B                       ??___ftpack 0075                __end_of_eval_poly 09F7  
               ??_LCD_Set_Cursor 0075                          __ptext1 00A2                          __ptext2 0C0C  
                        __ptext3 0845                          __ptext4 0997                          __ptext5 0CBC  
                        __ptext6 080A                          __ptext7 175D                          __ptext8 0ADD  
                        __ptext9 173F                    _PID_Calculate 0E39            _OSCILLATOR_Initialize 0801  
                        _readKey 0004                        _T2CONbits 028E                     __size_of_log 00B0  
               ___awmod@dividend 0072                   ADCRead@channel 0073                     _highRangeSet 01B8  
               ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070                          _samples 2350  
                        _testKey 00C3                        _LCD_Clear 163A       __size_of_SYSTEM_Initialize 0042  
                        clrloop0 164E             end_of_initialization 07FD                          init_ram 1659  
                        initloop 165A                       ??_tempCalc 007E                 ___aldiv@quotient 0022  
              LCD_Write_Int@sign 007D                       main@F13670 0220                       main@F13664 01C1  
                   __pstringtext 1000                 ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_PID_Calculate 0076                 ?_InitCustomChars 0070                       ?_LCD_Clear 0070  
               __CFG_FEXTOSC$OFF 0000                LCD_Write_String@a 0075                LCD_Write_String@i 0078  
               ??_LCD_Write_Char 0071                      ___ftdiv@exp 003E                __size_of_LCD_Init 0087  
              __size_of_LCD_Port 0018                       main@output 0069                      ___ftmul@exp 002A  
                    ?_readAnalog 0026                      ?_menuChoice 0070                   __end_of___ftge 0845  
                 __end_of___wmul 1723                 _LCD_Write_String 16EE           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07B7                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0031                      __end_of_log 0CBC  
                     frexp@value 0070                 ??_PWM_Initialize 0070         LCD_Write_Int@fieldLength 007B  
          __end_of_LCD_Write_Int 0E39                 __CFG_LPBOREN$OFF 0000                         ??___ftge 0076  
              tempCalc@steinhart 0065                         ??___wmul 0074                     _pidMaxOutput 00EC  
                  _tempCalc$1011 0062                      __pdataBANK1 00DE                      __pdataBANK3 01A0  
                ??_PID_Calculate 007A       __end_of_PWM7_LoadDutyValue 16BC                  LCD_Write_Char@a 0074  
                LCD_Write_Char@y 0073                         ?_ADCRead 0070     PWM7_LoadDutyValue@dutyCycle7 0070  
                   _pidMinOutput 00BA                         ?_LCD_Cmd 0070                __size_of___awtoft 0020  
              __size_of___ftpack 0064                      __pbssBIGRAM 2350                         LCD_Cmd@a 0073  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00C5  
                  __pcstackBANK2 0120         __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074  
            __size_of_readAnalog 013D              __size_of_menuChoice 023E           _PIN_MANAGER_Initialize 17CF  
                       ?___aldiv 0070                __size_of_tempCalc 011D                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
            main@lastTemperature 006D                         ?_readKey 0070                        _eval_poly 0997  
                      _lastError 00B4                        _menuDelay 00B6                   __size_of_frexp 003B  
                       _T2CLKCON 0290                  ___aldiv@divisor 0070                  ___aldiv@counter 0020  
                       _LCD_Init 001B                   ___wmul@product 0074                         _LCD_Port 16BC  
                      clear_ram0 164D                         _PIE0bits 0716                         _PIR4bits 0710  
               __size_of_ADCRead 000E                       _ADCON0bits 0093                ___wmul@multiplier 0070  
                     ?_eval_poly 004D                 __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 1708  
              ??_TMR2_Initialize 0070                  readAnalog@value 007B                        frexp@eptr 0073  
                   ??_readAnalog 0028                     ??_menuChoice 002E          ??_OSCILLATOR_Initialize 0070  
                 LCD_Write_Int@i 002C                   LCD_Write_Int@j 002A                 __size_of___aldiv 0082  
               __size_of___awdiv 0051                 __size_of___ftadd 00F6                 __size_of___awmod 0045  
               __size_of___ftdiv 00A9                 __size_of___ftmul 00B4                 __size_of___ftsub 001E  
               __size_of___fttol 0086                         ___awtoft 175D                         ___ftpack 09F7  
       __size_of_ADCC_Initialize 001A                         _channels 01B0                 __size_of_readKey 0017  
              PID_Calculate@temp 0078                         __ptext10 0F0A                         __ptext11 0B63  
                       __ptext20 0D70                         __ptext12 09F7                         __ptext21 0901  
                       __ptext13 01BF                         __ptext30 163A                         __ptext22 0946  
                       __ptext14 0A5B                         __ptext31 177D                         __ptext23 0880  
                       __ptext15 1673                         __ptext32 17A3                         __ptext24 08BF  
                       __ptext16 02FC                         __ptext33 1692                         __ptext25 1665  
                       __ptext17 0004                         __ptext34 16BC                         __ptext26 1642  
                       __ptext18 16A6                         __ptext35 16D4                         __ptext27 17CF  
                       __ptext19 16EE                         __ptext36 0E39                         __ptext28 0801  
                       __ptext37 1708                         __ptext29 001B               __end_of_readAnalog 02FC  
        __size_of_LCD_Set_Cursor 003F                        tempCalc@R 005F         __size_of_InitCustomChars 0026  
             __end_of_menuChoice 053A              LCD_Write_Int@F13694 01BC                    __size_of_main 027D  
           __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 00A2                         _setpoint 00E2  
                    _lowRangeSet 00DE      PIN_MANAGER_Initialize@state 0070                         log@coeff 1000  
                    ??_eval_poly 007E                      _sampleIndex 00BC               _PWM7_LoadDutyValue 16A6  
             LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070              ?_PWM7_LoadDutyValue 0070  
              main@outputSamples 0120                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002C             main@pidPeriodCounter 00CF               LCD_Set_Cursor@temp 007A  
             LCD_Write_Int@value 0079            __end_of_PID_Calculate 0F0A             ??_PWM7_LoadDutyValue 0072  
                   ___aldiv@sign 0021                      _D_PrevError 00A8           __size_of_LCD_Write_Int 00C9  
                main@outputIndex 006F   __end_of_PIN_MANAGER_Initialize 1800                ??_ADCC_Initialize 0070  
                main@outputTotal 00D3                ??_InitCustomChars 0075  
