

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Apr 05 16:19:18 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x620,48
    58                           	dabs	1,0x5A0,80
    59                           	dabs	1,0x550,32
    60                           	dabs	1,0x2350,0,_samples
    61                           	dabs	1,0x7E,2
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  001C                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  0110                     	;# 
   117  0110                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011C                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011E                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  018E                     	;# 
   156  018F                     	;# 
   157  0190                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0196                     	;# 
   161  0197                     	;# 
   162  0198                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019C                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  020F                     	;# 
   171  020F                     	;# 
   172  0210                     	;# 
   173  0210                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0213                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  0218                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021C                     	;# 
   192  021D                     	;# 
   193  021D                     	;# 
   194  021E                     	;# 
   195  021F                     	;# 
   196  028C                     	;# 
   197  028C                     	;# 
   198  028D                     	;# 
   199  028D                     	;# 
   200  028E                     	;# 
   201  028F                     	;# 
   202  0290                     	;# 
   203  0290                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0292                     	;# 
   207  0293                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0295                     	;# 
   211  0296                     	;# 
   212  0296                     	;# 
   213  0297                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029B                     	;# 
   220  029C                     	;# 
   221  029C                     	;# 
   222  029D                     	;# 
   223  030C                     	;# 
   224  030C                     	;# 
   225  030D                     	;# 
   226  030E                     	;# 
   227  030F                     	;# 
   228  0310                     	;# 
   229  0310                     	;# 
   230  0311                     	;# 
   231  0312                     	;# 
   232  0313                     	;# 
   233  0314                     	;# 
   234  0314                     	;# 
   235  0315                     	;# 
   236  0316                     	;# 
   237  0317                     	;# 
   238  0318                     	;# 
   239  0318                     	;# 
   240  0319                     	;# 
   241  031A                     	;# 
   242  031B                     	;# 
   243  031C                     	;# 
   244  031C                     	;# 
   245  031D                     	;# 
   246  031E                     	;# 
   247  031F                     	;# 
   248  038C                     	;# 
   249  038D                     	;# 
   250  038E                     	;# 
   251  0390                     	;# 
   252  0391                     	;# 
   253  0392                     	;# 
   254  040C                     	;# 
   255  040D                     	;# 
   256  040E                     	;# 
   257  040F                     	;# 
   258  0410                     	;# 
   259  0411                     	;# 
   260  0416                     	;# 
   261  0416                     	;# 
   262  0417                     	;# 
   263  0418                     	;# 
   264  0418                     	;# 
   265  0419                     	;# 
   266  041A                     	;# 
   267  041A                     	;# 
   268  041B                     	;# 
   269  041C                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  041F                     	;# 
   274  048C                     	;# 
   275  048C                     	;# 
   276  048D                     	;# 
   277  048E                     	;# 
   278  048F                     	;# 
   279  048F                     	;# 
   280  0490                     	;# 
   281  0491                     	;# 
   282  0492                     	;# 
   283  0492                     	;# 
   284  0493                     	;# 
   285  0494                     	;# 
   286  0495                     	;# 
   287  0495                     	;# 
   288  0496                     	;# 
   289  0497                     	;# 
   290  0498                     	;# 
   291  0499                     	;# 
   292  049A                     	;# 
   293  049B                     	;# 
   294  049C                     	;# 
   295  049D                     	;# 
   296  050C                     	;# 
   297  050C                     	;# 
   298  050D                     	;# 
   299  050E                     	;# 
   300  050F                     	;# 
   301  050F                     	;# 
   302  0510                     	;# 
   303  0511                     	;# 
   304  0512                     	;# 
   305  0512                     	;# 
   306  0513                     	;# 
   307  0514                     	;# 
   308  0515                     	;# 
   309  0515                     	;# 
   310  0516                     	;# 
   311  0517                     	;# 
   312  0518                     	;# 
   313  0519                     	;# 
   314  051A                     	;# 
   315  051B                     	;# 
   316  051C                     	;# 
   317  051D                     	;# 
   318  058C                     	;# 
   319  058C                     	;# 
   320  058D                     	;# 
   321  058E                     	;# 
   322  058F                     	;# 
   323  058F                     	;# 
   324  0590                     	;# 
   325  0591                     	;# 
   326  0592                     	;# 
   327  0593                     	;# 
   328  060C                     	;# 
   329  060D                     	;# 
   330  060E                     	;# 
   331  060F                     	;# 
   332  0610                     	;# 
   333  0611                     	;# 
   334  0612                     	;# 
   335  0613                     	;# 
   336  0614                     	;# 
   337  0616                     	;# 
   338  0617                     	;# 
   339  0618                     	;# 
   340  0619                     	;# 
   341  061A                     	;# 
   342  061B                     	;# 
   343  061C                     	;# 
   344  061D                     	;# 
   345  061E                     	;# 
   346  068C                     	;# 
   347  068D                     	;# 
   348  068E                     	;# 
   349  068F                     	;# 
   350  0690                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  070C                     	;# 
   356  070D                     	;# 
   357  070E                     	;# 
   358  070F                     	;# 
   359  0710                     	;# 
   360  0711                     	;# 
   361  0712                     	;# 
   362  0713                     	;# 
   363  0714                     	;# 
   364  0716                     	;# 
   365  0717                     	;# 
   366  0718                     	;# 
   367  0719                     	;# 
   368  071A                     	;# 
   369  071B                     	;# 
   370  071C                     	;# 
   371  071D                     	;# 
   372  071E                     	;# 
   373  0796                     	;# 
   374  0797                     	;# 
   375  0798                     	;# 
   376  0799                     	;# 
   377  079A                     	;# 
   378  079B                     	;# 
   379  080C                     	;# 
   380  080D                     	;# 
   381  080E                     	;# 
   382  080F                     	;# 
   383  0810                     	;# 
   384  0811                     	;# 
   385  0812                     	;# 
   386  0813                     	;# 
   387  0814                     	;# 
   388  081A                     	;# 
   389  081B                     	;# 
   390  081C                     	;# 
   391  081D                     	;# 
   392  081E                     	;# 
   393  081F                     	;# 
   394  088C                     	;# 
   395  088D                     	;# 
   396  088E                     	;# 
   397  088F                     	;# 
   398  0890                     	;# 
   399  0891                     	;# 
   400  0892                     	;# 
   401  0893                     	;# 
   402  0895                     	;# 
   403  0896                     	;# 
   404  0897                     	;# 
   405  0898                     	;# 
   406  0899                     	;# 
   407  089A                     	;# 
   408  089B                     	;# 
   409  090C                     	;# 
   410  090E                     	;# 
   411  090F                     	;# 
   412  091F                     	;# 
   413  091F                     	;# 
   414  098F                     	;# 
   415  098F                     	;# 
   416  0990                     	;# 
   417  0991                     	;# 
   418  0992                     	;# 
   419  0993                     	;# 
   420  0994                     	;# 
   421  0995                     	;# 
   422  0996                     	;# 
   423  0997                     	;# 
   424  0E0F                     	;# 
   425  0E10                     	;# 
   426  0E11                     	;# 
   427  0E12                     	;# 
   428  0E13                     	;# 
   429  0E14                     	;# 
   430  0E15                     	;# 
   431  0E16                     	;# 
   432  0E17                     	;# 
   433  0E18                     	;# 
   434  0E19                     	;# 
   435  0E1A                     	;# 
   436  0E1B                     	;# 
   437  0E1C                     	;# 
   438  0E1D                     	;# 
   439  0E1E                     	;# 
   440  0E1F                     	;# 
   441  0E20                     	;# 
   442  0E21                     	;# 
   443  0E22                     	;# 
   444  0E23                     	;# 
   445  0E24                     	;# 
   446  0E25                     	;# 
   447  0E26                     	;# 
   448  0E27                     	;# 
   449  0E28                     	;# 
   450  0E29                     	;# 
   451  0E2A                     	;# 
   452  0E2B                     	;# 
   453  0E2C                     	;# 
   454  0E2D                     	;# 
   455  0E2E                     	;# 
   456  0E2F                     	;# 
   457  0E30                     	;# 
   458  0E31                     	;# 
   459  0E32                     	;# 
   460  0E33                     	;# 
   461  0E34                     	;# 
   462  0E35                     	;# 
   463  0E36                     	;# 
   464  0E37                     	;# 
   465  0E8F                     	;# 
   466  0E90                     	;# 
   467  0E91                     	;# 
   468  0E92                     	;# 
   469  0E93                     	;# 
   470  0E94                     	;# 
   471  0E95                     	;# 
   472  0E96                     	;# 
   473  0E97                     	;# 
   474  0E9C                     	;# 
   475  0E9D                     	;# 
   476  0E9E                     	;# 
   477  0EA1                     	;# 
   478  0EA2                     	;# 
   479  0EA3                     	;# 
   480  0EA4                     	;# 
   481  0EA5                     	;# 
   482  0EA9                     	;# 
   483  0EAA                     	;# 
   484  0EAB                     	;# 
   485  0EAC                     	;# 
   486  0EB1                     	;# 
   487  0EB2                     	;# 
   488  0EB3                     	;# 
   489  0EB8                     	;# 
   490  0EB9                     	;# 
   491  0EBA                     	;# 
   492  0EBB                     	;# 
   493  0EBC                     	;# 
   494  0EBD                     	;# 
   495  0EBE                     	;# 
   496  0EC3                     	;# 
   497  0EC5                     	;# 
   498  0EC6                     	;# 
   499  0EC7                     	;# 
   500  0EC8                     	;# 
   501  0EC9                     	;# 
   502  0ECA                     	;# 
   503  0ECB                     	;# 
   504  0ECC                     	;# 
   505  0F10                     	;# 
   506  0F11                     	;# 
   507  0F12                     	;# 
   508  0F13                     	;# 
   509  0F14                     	;# 
   510  0F15                     	;# 
   511  0F16                     	;# 
   512  0F17                     	;# 
   513  0F18                     	;# 
   514  0F19                     	;# 
   515  0F1A                     	;# 
   516  0F1B                     	;# 
   517  0F1C                     	;# 
   518  0F1D                     	;# 
   519  0F1E                     	;# 
   520  0F1F                     	;# 
   521  0F20                     	;# 
   522  0F21                     	;# 
   523  0F22                     	;# 
   524  0F23                     	;# 
   525  0F24                     	;# 
   526  0F25                     	;# 
   527  0F26                     	;# 
   528  0F27                     	;# 
   529  0F38                     	;# 
   530  0F39                     	;# 
   531  0F3A                     	;# 
   532  0F3B                     	;# 
   533  0F3C                     	;# 
   534  0F3D                     	;# 
   535  0F3E                     	;# 
   536  0F3F                     	;# 
   537  0F40                     	;# 
   538  0F41                     	;# 
   539  0F43                     	;# 
   540  0F44                     	;# 
   541  0F45                     	;# 
   542  0F46                     	;# 
   543  0F47                     	;# 
   544  0F48                     	;# 
   545  0F49                     	;# 
   546  0F4A                     	;# 
   547  0F4B                     	;# 
   548  0F4C                     	;# 
   549  0F4E                     	;# 
   550  0F4F                     	;# 
   551  0F50                     	;# 
   552  0F51                     	;# 
   553  0F52                     	;# 
   554  0F53                     	;# 
   555  0F54                     	;# 
   556  0F55                     	;# 
   557  0F56                     	;# 
   558  0F57                     	;# 
   559  0F65                     	;# 
   560  0F68                     	;# 
   561  0F69                     	;# 
   562  0F6A                     	;# 
   563  0F6B                     	;# 
   564  0FE4                     	;# 
   565  0FE5                     	;# 
   566  0FE6                     	;# 
   567  0FE7                     	;# 
   568  0FE8                     	;# 
   569  0FE9                     	;# 
   570  0FEA                     	;# 
   571  0FEB                     	;# 
   572  0FED                     	;# 
   573  0FEE                     	;# 
   574  0FEF                     	;# 
   575  0000                     	;# 
   576  0001                     	;# 
   577  0002                     	;# 
   578  0003                     	;# 
   579  0004                     	;# 
   580  0005                     	;# 
   581  0006                     	;# 
   582  0007                     	;# 
   583  0008                     	;# 
   584  0009                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  000D                     	;# 
   589  000E                     	;# 
   590  0010                     	;# 
   591  0011                     	;# 
   592  0012                     	;# 
   593  0013                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  001C                     	;# 
   598  001C                     	;# 
   599  001D                     	;# 
   600  001D                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  008C                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  008E                     	;# 
   608  008F                     	;# 
   609  0090                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0093                     	;# 
   613  0094                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0097                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009A                     	;# 
   620  009B                     	;# 
   621  009C                     	;# 
   622  009D                     	;# 
   623  009E                     	;# 
   624  010C                     	;# 
   625  010D                     	;# 
   626  010E                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  0110                     	;# 
   630  0110                     	;# 
   631  0111                     	;# 
   632  0112                     	;# 
   633  0112                     	;# 
   634  0113                     	;# 
   635  0114                     	;# 
   636  0114                     	;# 
   637  0115                     	;# 
   638  0116                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0119                     	;# 
   642  0119                     	;# 
   643  0119                     	;# 
   644  011A                     	;# 
   645  011A                     	;# 
   646  011A                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011C                     	;# 
   653  011C                     	;# 
   654  011C                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011E                     	;# 
   659  011E                     	;# 
   660  011E                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  018C                     	;# 
   667  018D                     	;# 
   668  018E                     	;# 
   669  018F                     	;# 
   670  0190                     	;# 
   671  0191                     	;# 
   672  0192                     	;# 
   673  0196                     	;# 
   674  0197                     	;# 
   675  0198                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019B                     	;# 
   679  019C                     	;# 
   680  020C                     	;# 
   681  020D                     	;# 
   682  020E                     	;# 
   683  020F                     	;# 
   684  020F                     	;# 
   685  0210                     	;# 
   686  0210                     	;# 
   687  0211                     	;# 
   688  0211                     	;# 
   689  0212                     	;# 
   690  0213                     	;# 
   691  0214                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0216                     	;# 
   695  0216                     	;# 
   696  0217                     	;# 
   697  0217                     	;# 
   698  0218                     	;# 
   699  0219                     	;# 
   700  021A                     	;# 
   701  021B                     	;# 
   702  021B                     	;# 
   703  021C                     	;# 
   704  021C                     	;# 
   705  021D                     	;# 
   706  021D                     	;# 
   707  021E                     	;# 
   708  021F                     	;# 
   709  028C                     	;# 
   710  028C                     	;# 
   711  028D                     	;# 
   712  028D                     	;# 
   713  028E                     	;# 
   714  028F                     	;# 
   715  0290                     	;# 
   716  0290                     	;# 
   717  0291                     	;# 
   718  0292                     	;# 
   719  0292                     	;# 
   720  0293                     	;# 
   721  0293                     	;# 
   722  0294                     	;# 
   723  0295                     	;# 
   724  0296                     	;# 
   725  0296                     	;# 
   726  0297                     	;# 
   727  0298                     	;# 
   728  0298                     	;# 
   729  0299                     	;# 
   730  0299                     	;# 
   731  029A                     	;# 
   732  029B                     	;# 
   733  029C                     	;# 
   734  029C                     	;# 
   735  029D                     	;# 
   736  030C                     	;# 
   737  030C                     	;# 
   738  030D                     	;# 
   739  030E                     	;# 
   740  030F                     	;# 
   741  0310                     	;# 
   742  0310                     	;# 
   743  0311                     	;# 
   744  0312                     	;# 
   745  0313                     	;# 
   746  0314                     	;# 
   747  0314                     	;# 
   748  0315                     	;# 
   749  0316                     	;# 
   750  0317                     	;# 
   751  0318                     	;# 
   752  0318                     	;# 
   753  0319                     	;# 
   754  031A                     	;# 
   755  031B                     	;# 
   756  031C                     	;# 
   757  031C                     	;# 
   758  031D                     	;# 
   759  031E                     	;# 
   760  031F                     	;# 
   761  038C                     	;# 
   762  038D                     	;# 
   763  038E                     	;# 
   764  0390                     	;# 
   765  0391                     	;# 
   766  0392                     	;# 
   767  040C                     	;# 
   768  040D                     	;# 
   769  040E                     	;# 
   770  040F                     	;# 
   771  0410                     	;# 
   772  0411                     	;# 
   773  0416                     	;# 
   774  0416                     	;# 
   775  0417                     	;# 
   776  0418                     	;# 
   777  0418                     	;# 
   778  0419                     	;# 
   779  041A                     	;# 
   780  041A                     	;# 
   781  041B                     	;# 
   782  041C                     	;# 
   783  041C                     	;# 
   784  041D                     	;# 
   785  041E                     	;# 
   786  041F                     	;# 
   787  048C                     	;# 
   788  048C                     	;# 
   789  048D                     	;# 
   790  048E                     	;# 
   791  048F                     	;# 
   792  048F                     	;# 
   793  0490                     	;# 
   794  0491                     	;# 
   795  0492                     	;# 
   796  0492                     	;# 
   797  0493                     	;# 
   798  0494                     	;# 
   799  0495                     	;# 
   800  0495                     	;# 
   801  0496                     	;# 
   802  0497                     	;# 
   803  0498                     	;# 
   804  0499                     	;# 
   805  049A                     	;# 
   806  049B                     	;# 
   807  049C                     	;# 
   808  049D                     	;# 
   809  050C                     	;# 
   810  050C                     	;# 
   811  050D                     	;# 
   812  050E                     	;# 
   813  050F                     	;# 
   814  050F                     	;# 
   815  0510                     	;# 
   816  0511                     	;# 
   817  0512                     	;# 
   818  0512                     	;# 
   819  0513                     	;# 
   820  0514                     	;# 
   821  0515                     	;# 
   822  0515                     	;# 
   823  0516                     	;# 
   824  0517                     	;# 
   825  0518                     	;# 
   826  0519                     	;# 
   827  051A                     	;# 
   828  051B                     	;# 
   829  051C                     	;# 
   830  051D                     	;# 
   831  058C                     	;# 
   832  058C                     	;# 
   833  058D                     	;# 
   834  058E                     	;# 
   835  058F                     	;# 
   836  058F                     	;# 
   837  0590                     	;# 
   838  0591                     	;# 
   839  0592                     	;# 
   840  0593                     	;# 
   841  060C                     	;# 
   842  060D                     	;# 
   843  060E                     	;# 
   844  060F                     	;# 
   845  0610                     	;# 
   846  0611                     	;# 
   847  0612                     	;# 
   848  0613                     	;# 
   849  0614                     	;# 
   850  0616                     	;# 
   851  0617                     	;# 
   852  0618                     	;# 
   853  0619                     	;# 
   854  061A                     	;# 
   855  061B                     	;# 
   856  061C                     	;# 
   857  061D                     	;# 
   858  061E                     	;# 
   859  068C                     	;# 
   860  068D                     	;# 
   861  068E                     	;# 
   862  068F                     	;# 
   863  0690                     	;# 
   864  0691                     	;# 
   865  0692                     	;# 
   866  0693                     	;# 
   867  0694                     	;# 
   868  070C                     	;# 
   869  070D                     	;# 
   870  070E                     	;# 
   871  070F                     	;# 
   872  0710                     	;# 
   873  0711                     	;# 
   874  0712                     	;# 
   875  0713                     	;# 
   876  0714                     	;# 
   877  0716                     	;# 
   878  0717                     	;# 
   879  0718                     	;# 
   880  0719                     	;# 
   881  071A                     	;# 
   882  071B                     	;# 
   883  071C                     	;# 
   884  071D                     	;# 
   885  071E                     	;# 
   886  0796                     	;# 
   887  0797                     	;# 
   888  0798                     	;# 
   889  0799                     	;# 
   890  079A                     	;# 
   891  079B                     	;# 
   892  080C                     	;# 
   893  080D                     	;# 
   894  080E                     	;# 
   895  080F                     	;# 
   896  0810                     	;# 
   897  0811                     	;# 
   898  0812                     	;# 
   899  0813                     	;# 
   900  0814                     	;# 
   901  081A                     	;# 
   902  081B                     	;# 
   903  081C                     	;# 
   904  081D                     	;# 
   905  081E                     	;# 
   906  081F                     	;# 
   907  088C                     	;# 
   908  088D                     	;# 
   909  088E                     	;# 
   910  088F                     	;# 
   911  0890                     	;# 
   912  0891                     	;# 
   913  0892                     	;# 
   914  0893                     	;# 
   915  0895                     	;# 
   916  0896                     	;# 
   917  0897                     	;# 
   918  0898                     	;# 
   919  0899                     	;# 
   920  089A                     	;# 
   921  089B                     	;# 
   922  090C                     	;# 
   923  090E                     	;# 
   924  090F                     	;# 
   925  091F                     	;# 
   926  091F                     	;# 
   927  098F                     	;# 
   928  098F                     	;# 
   929  0990                     	;# 
   930  0991                     	;# 
   931  0992                     	;# 
   932  0993                     	;# 
   933  0994                     	;# 
   934  0995                     	;# 
   935  0996                     	;# 
   936  0997                     	;# 
   937  0E0F                     	;# 
   938  0E10                     	;# 
   939  0E11                     	;# 
   940  0E12                     	;# 
   941  0E13                     	;# 
   942  0E14                     	;# 
   943  0E15                     	;# 
   944  0E16                     	;# 
   945  0E17                     	;# 
   946  0E18                     	;# 
   947  0E19                     	;# 
   948  0E1A                     	;# 
   949  0E1B                     	;# 
   950  0E1C                     	;# 
   951  0E1D                     	;# 
   952  0E1E                     	;# 
   953  0E1F                     	;# 
   954  0E20                     	;# 
   955  0E21                     	;# 
   956  0E22                     	;# 
   957  0E23                     	;# 
   958  0E24                     	;# 
   959  0E25                     	;# 
   960  0E26                     	;# 
   961  0E27                     	;# 
   962  0E28                     	;# 
   963  0E29                     	;# 
   964  0E2A                     	;# 
   965  0E2B                     	;# 
   966  0E2C                     	;# 
   967  0E2D                     	;# 
   968  0E2E                     	;# 
   969  0E2F                     	;# 
   970  0E30                     	;# 
   971  0E31                     	;# 
   972  0E32                     	;# 
   973  0E33                     	;# 
   974  0E34                     	;# 
   975  0E35                     	;# 
   976  0E36                     	;# 
   977  0E37                     	;# 
   978  0E8F                     	;# 
   979  0E90                     	;# 
   980  0E91                     	;# 
   981  0E92                     	;# 
   982  0E93                     	;# 
   983  0E94                     	;# 
   984  0E95                     	;# 
   985  0E96                     	;# 
   986  0E97                     	;# 
   987  0E9C                     	;# 
   988  0E9D                     	;# 
   989  0E9E                     	;# 
   990  0EA1                     	;# 
   991  0EA2                     	;# 
   992  0EA3                     	;# 
   993  0EA4                     	;# 
   994  0EA5                     	;# 
   995  0EA9                     	;# 
   996  0EAA                     	;# 
   997  0EAB                     	;# 
   998  0EAC                     	;# 
   999  0EB1                     	;# 
  1000  0EB2                     	;# 
  1001  0EB3                     	;# 
  1002  0EB8                     	;# 
  1003  0EB9                     	;# 
  1004  0EBA                     	;# 
  1005  0EBB                     	;# 
  1006  0EBC                     	;# 
  1007  0EBD                     	;# 
  1008  0EBE                     	;# 
  1009  0EC3                     	;# 
  1010  0EC5                     	;# 
  1011  0EC6                     	;# 
  1012  0EC7                     	;# 
  1013  0EC8                     	;# 
  1014  0EC9                     	;# 
  1015  0ECA                     	;# 
  1016  0ECB                     	;# 
  1017  0ECC                     	;# 
  1018  0F10                     	;# 
  1019  0F11                     	;# 
  1020  0F12                     	;# 
  1021  0F13                     	;# 
  1022  0F14                     	;# 
  1023  0F15                     	;# 
  1024  0F16                     	;# 
  1025  0F17                     	;# 
  1026  0F18                     	;# 
  1027  0F19                     	;# 
  1028  0F1A                     	;# 
  1029  0F1B                     	;# 
  1030  0F1C                     	;# 
  1031  0F1D                     	;# 
  1032  0F1E                     	;# 
  1033  0F1F                     	;# 
  1034  0F20                     	;# 
  1035  0F21                     	;# 
  1036  0F22                     	;# 
  1037  0F23                     	;# 
  1038  0F24                     	;# 
  1039  0F25                     	;# 
  1040  0F26                     	;# 
  1041  0F27                     	;# 
  1042  0F38                     	;# 
  1043  0F39                     	;# 
  1044  0F3A                     	;# 
  1045  0F3B                     	;# 
  1046  0F3C                     	;# 
  1047  0F3D                     	;# 
  1048  0F3E                     	;# 
  1049  0F3F                     	;# 
  1050  0F40                     	;# 
  1051  0F41                     	;# 
  1052  0F43                     	;# 
  1053  0F44                     	;# 
  1054  0F45                     	;# 
  1055  0F46                     	;# 
  1056  0F47                     	;# 
  1057  0F48                     	;# 
  1058  0F49                     	;# 
  1059  0F4A                     	;# 
  1060  0F4B                     	;# 
  1061  0F4C                     	;# 
  1062  0F4E                     	;# 
  1063  0F4F                     	;# 
  1064  0F50                     	;# 
  1065  0F51                     	;# 
  1066  0F52                     	;# 
  1067  0F53                     	;# 
  1068  0F54                     	;# 
  1069  0F55                     	;# 
  1070  0F56                     	;# 
  1071  0F57                     	;# 
  1072  0F65                     	;# 
  1073  0F68                     	;# 
  1074  0F69                     	;# 
  1075  0F6A                     	;# 
  1076  0F6B                     	;# 
  1077  0FE4                     	;# 
  1078  0FE5                     	;# 
  1079  0FE6                     	;# 
  1080  0FE7                     	;# 
  1081  0FE8                     	;# 
  1082  0FE9                     	;# 
  1083  0FEA                     	;# 
  1084  0FEB                     	;# 
  1085  0FED                     	;# 
  1086  0FEE                     	;# 
  1087  0FEF                     	;# 
  1088  0000                     	;# 
  1089  0001                     	;# 
  1090  0002                     	;# 
  1091  0003                     	;# 
  1092  0004                     	;# 
  1093  0005                     	;# 
  1094  0006                     	;# 
  1095  0007                     	;# 
  1096  0008                     	;# 
  1097  0009                     	;# 
  1098  000A                     	;# 
  1099  000B                     	;# 
  1100  000C                     	;# 
  1101  000D                     	;# 
  1102  000E                     	;# 
  1103  0010                     	;# 
  1104  0011                     	;# 
  1105  0012                     	;# 
  1106  0013                     	;# 
  1107  0016                     	;# 
  1108  0017                     	;# 
  1109  0018                     	;# 
  1110  001C                     	;# 
  1111  001C                     	;# 
  1112  001D                     	;# 
  1113  001D                     	;# 
  1114  001E                     	;# 
  1115  001F                     	;# 
  1116  008C                     	;# 
  1117  008C                     	;# 
  1118  008D                     	;# 
  1119  008E                     	;# 
  1120  008E                     	;# 
  1121  008F                     	;# 
  1122  0090                     	;# 
  1123  0090                     	;# 
  1124  0091                     	;# 
  1125  0093                     	;# 
  1126  0094                     	;# 
  1127  0095                     	;# 
  1128  0096                     	;# 
  1129  0097                     	;# 
  1130  0098                     	;# 
  1131  0099                     	;# 
  1132  009A                     	;# 
  1133  009B                     	;# 
  1134  009C                     	;# 
  1135  009D                     	;# 
  1136  009E                     	;# 
  1137  010C                     	;# 
  1138  010D                     	;# 
  1139  010E                     	;# 
  1140  010E                     	;# 
  1141  010F                     	;# 
  1142  0110                     	;# 
  1143  0110                     	;# 
  1144  0111                     	;# 
  1145  0112                     	;# 
  1146  0112                     	;# 
  1147  0113                     	;# 
  1148  0114                     	;# 
  1149  0114                     	;# 
  1150  0115                     	;# 
  1151  0116                     	;# 
  1152  0116                     	;# 
  1153  0117                     	;# 
  1154  0119                     	;# 
  1155  0119                     	;# 
  1156  0119                     	;# 
  1157  011A                     	;# 
  1158  011A                     	;# 
  1159  011A                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011C                     	;# 
  1166  011C                     	;# 
  1167  011C                     	;# 
  1168  011D                     	;# 
  1169  011D                     	;# 
  1170  011D                     	;# 
  1171  011E                     	;# 
  1172  011E                     	;# 
  1173  011E                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  018C                     	;# 
  1180  018D                     	;# 
  1181  018E                     	;# 
  1182  018F                     	;# 
  1183  0190                     	;# 
  1184  0191                     	;# 
  1185  0192                     	;# 
  1186  0196                     	;# 
  1187  0197                     	;# 
  1188  0198                     	;# 
  1189  0199                     	;# 
  1190  019A                     	;# 
  1191  019B                     	;# 
  1192  019C                     	;# 
  1193  020C                     	;# 
  1194  020D                     	;# 
  1195  020E                     	;# 
  1196  020F                     	;# 
  1197  020F                     	;# 
  1198  0210                     	;# 
  1199  0210                     	;# 
  1200  0211                     	;# 
  1201  0211                     	;# 
  1202  0212                     	;# 
  1203  0213                     	;# 
  1204  0214                     	;# 
  1205  0215                     	;# 
  1206  0215                     	;# 
  1207  0216                     	;# 
  1208  0216                     	;# 
  1209  0217                     	;# 
  1210  0217                     	;# 
  1211  0218                     	;# 
  1212  0219                     	;# 
  1213  021A                     	;# 
  1214  021B                     	;# 
  1215  021B                     	;# 
  1216  021C                     	;# 
  1217  021C                     	;# 
  1218  021D                     	;# 
  1219  021D                     	;# 
  1220  021E                     	;# 
  1221  021F                     	;# 
  1222  028C                     	;# 
  1223  028C                     	;# 
  1224  028D                     	;# 
  1225  028D                     	;# 
  1226  028E                     	;# 
  1227  028F                     	;# 
  1228  0290                     	;# 
  1229  0290                     	;# 
  1230  0291                     	;# 
  1231  0292                     	;# 
  1232  0292                     	;# 
  1233  0293                     	;# 
  1234  0293                     	;# 
  1235  0294                     	;# 
  1236  0295                     	;# 
  1237  0296                     	;# 
  1238  0296                     	;# 
  1239  0297                     	;# 
  1240  0298                     	;# 
  1241  0298                     	;# 
  1242  0299                     	;# 
  1243  0299                     	;# 
  1244  029A                     	;# 
  1245  029B                     	;# 
  1246  029C                     	;# 
  1247  029C                     	;# 
  1248  029D                     	;# 
  1249  030C                     	;# 
  1250  030C                     	;# 
  1251  030D                     	;# 
  1252  030E                     	;# 
  1253  030F                     	;# 
  1254  0310                     	;# 
  1255  0310                     	;# 
  1256  0311                     	;# 
  1257  0312                     	;# 
  1258  0313                     	;# 
  1259  0314                     	;# 
  1260  0314                     	;# 
  1261  0315                     	;# 
  1262  0316                     	;# 
  1263  0317                     	;# 
  1264  0318                     	;# 
  1265  0318                     	;# 
  1266  0319                     	;# 
  1267  031A                     	;# 
  1268  031B                     	;# 
  1269  031C                     	;# 
  1270  031C                     	;# 
  1271  031D                     	;# 
  1272  031E                     	;# 
  1273  031F                     	;# 
  1274  038C                     	;# 
  1275  038D                     	;# 
  1276  038E                     	;# 
  1277  0390                     	;# 
  1278  0391                     	;# 
  1279  0392                     	;# 
  1280  040C                     	;# 
  1281  040D                     	;# 
  1282  040E                     	;# 
  1283  040F                     	;# 
  1284  0410                     	;# 
  1285  0411                     	;# 
  1286  0416                     	;# 
  1287  0416                     	;# 
  1288  0417                     	;# 
  1289  0418                     	;# 
  1290  0418                     	;# 
  1291  0419                     	;# 
  1292  041A                     	;# 
  1293  041A                     	;# 
  1294  041B                     	;# 
  1295  041C                     	;# 
  1296  041C                     	;# 
  1297  041D                     	;# 
  1298  041E                     	;# 
  1299  041F                     	;# 
  1300  048C                     	;# 
  1301  048C                     	;# 
  1302  048D                     	;# 
  1303  048E                     	;# 
  1304  048F                     	;# 
  1305  048F                     	;# 
  1306  0490                     	;# 
  1307  0491                     	;# 
  1308  0492                     	;# 
  1309  0492                     	;# 
  1310  0493                     	;# 
  1311  0494                     	;# 
  1312  0495                     	;# 
  1313  0495                     	;# 
  1314  0496                     	;# 
  1315  0497                     	;# 
  1316  0498                     	;# 
  1317  0499                     	;# 
  1318  049A                     	;# 
  1319  049B                     	;# 
  1320  049C                     	;# 
  1321  049D                     	;# 
  1322  050C                     	;# 
  1323  050C                     	;# 
  1324  050D                     	;# 
  1325  050E                     	;# 
  1326  050F                     	;# 
  1327  050F                     	;# 
  1328  0510                     	;# 
  1329  0511                     	;# 
  1330  0512                     	;# 
  1331  0512                     	;# 
  1332  0513                     	;# 
  1333  0514                     	;# 
  1334  0515                     	;# 
  1335  0515                     	;# 
  1336  0516                     	;# 
  1337  0517                     	;# 
  1338  0518                     	;# 
  1339  0519                     	;# 
  1340  051A                     	;# 
  1341  051B                     	;# 
  1342  051C                     	;# 
  1343  051D                     	;# 
  1344  058C                     	;# 
  1345  058C                     	;# 
  1346  058D                     	;# 
  1347  058E                     	;# 
  1348  058F                     	;# 
  1349  058F                     	;# 
  1350  0590                     	;# 
  1351  0591                     	;# 
  1352  0592                     	;# 
  1353  0593                     	;# 
  1354  060C                     	;# 
  1355  060D                     	;# 
  1356  060E                     	;# 
  1357  060F                     	;# 
  1358  0610                     	;# 
  1359  0611                     	;# 
  1360  0612                     	;# 
  1361  0613                     	;# 
  1362  0614                     	;# 
  1363  0616                     	;# 
  1364  0617                     	;# 
  1365  0618                     	;# 
  1366  0619                     	;# 
  1367  061A                     	;# 
  1368  061B                     	;# 
  1369  061C                     	;# 
  1370  061D                     	;# 
  1371  061E                     	;# 
  1372  068C                     	;# 
  1373  068D                     	;# 
  1374  068E                     	;# 
  1375  068F                     	;# 
  1376  0690                     	;# 
  1377  0691                     	;# 
  1378  0692                     	;# 
  1379  0693                     	;# 
  1380  0694                     	;# 
  1381  070C                     	;# 
  1382  070D                     	;# 
  1383  070E                     	;# 
  1384  070F                     	;# 
  1385  0710                     	;# 
  1386  0711                     	;# 
  1387  0712                     	;# 
  1388  0713                     	;# 
  1389  0714                     	;# 
  1390  0716                     	;# 
  1391  0717                     	;# 
  1392  0718                     	;# 
  1393  0719                     	;# 
  1394  071A                     	;# 
  1395  071B                     	;# 
  1396  071C                     	;# 
  1397  071D                     	;# 
  1398  071E                     	;# 
  1399  0796                     	;# 
  1400  0797                     	;# 
  1401  0798                     	;# 
  1402  0799                     	;# 
  1403  079A                     	;# 
  1404  079B                     	;# 
  1405  080C                     	;# 
  1406  080D                     	;# 
  1407  080E                     	;# 
  1408  080F                     	;# 
  1409  0810                     	;# 
  1410  0811                     	;# 
  1411  0812                     	;# 
  1412  0813                     	;# 
  1413  0814                     	;# 
  1414  081A                     	;# 
  1415  081B                     	;# 
  1416  081C                     	;# 
  1417  081D                     	;# 
  1418  081E                     	;# 
  1419  081F                     	;# 
  1420  088C                     	;# 
  1421  088D                     	;# 
  1422  088E                     	;# 
  1423  088F                     	;# 
  1424  0890                     	;# 
  1425  0891                     	;# 
  1426  0892                     	;# 
  1427  0893                     	;# 
  1428  0895                     	;# 
  1429  0896                     	;# 
  1430  0897                     	;# 
  1431  0898                     	;# 
  1432  0899                     	;# 
  1433  089A                     	;# 
  1434  089B                     	;# 
  1435  090C                     	;# 
  1436  090E                     	;# 
  1437  090F                     	;# 
  1438  091F                     	;# 
  1439  091F                     	;# 
  1440  098F                     	;# 
  1441  098F                     	;# 
  1442  0990                     	;# 
  1443  0991                     	;# 
  1444  0992                     	;# 
  1445  0993                     	;# 
  1446  0994                     	;# 
  1447  0995                     	;# 
  1448  0996                     	;# 
  1449  0997                     	;# 
  1450  0E0F                     	;# 
  1451  0E10                     	;# 
  1452  0E11                     	;# 
  1453  0E12                     	;# 
  1454  0E13                     	;# 
  1455  0E14                     	;# 
  1456  0E15                     	;# 
  1457  0E16                     	;# 
  1458  0E17                     	;# 
  1459  0E18                     	;# 
  1460  0E19                     	;# 
  1461  0E1A                     	;# 
  1462  0E1B                     	;# 
  1463  0E1C                     	;# 
  1464  0E1D                     	;# 
  1465  0E1E                     	;# 
  1466  0E1F                     	;# 
  1467  0E20                     	;# 
  1468  0E21                     	;# 
  1469  0E22                     	;# 
  1470  0E23                     	;# 
  1471  0E24                     	;# 
  1472  0E25                     	;# 
  1473  0E26                     	;# 
  1474  0E27                     	;# 
  1475  0E28                     	;# 
  1476  0E29                     	;# 
  1477  0E2A                     	;# 
  1478  0E2B                     	;# 
  1479  0E2C                     	;# 
  1480  0E2D                     	;# 
  1481  0E2E                     	;# 
  1482  0E2F                     	;# 
  1483  0E30                     	;# 
  1484  0E31                     	;# 
  1485  0E32                     	;# 
  1486  0E33                     	;# 
  1487  0E34                     	;# 
  1488  0E35                     	;# 
  1489  0E36                     	;# 
  1490  0E37                     	;# 
  1491  0E8F                     	;# 
  1492  0E90                     	;# 
  1493  0E91                     	;# 
  1494  0E92                     	;# 
  1495  0E93                     	;# 
  1496  0E94                     	;# 
  1497  0E95                     	;# 
  1498  0E96                     	;# 
  1499  0E97                     	;# 
  1500  0E9C                     	;# 
  1501  0E9D                     	;# 
  1502  0E9E                     	;# 
  1503  0EA1                     	;# 
  1504  0EA2                     	;# 
  1505  0EA3                     	;# 
  1506  0EA4                     	;# 
  1507  0EA5                     	;# 
  1508  0EA9                     	;# 
  1509  0EAA                     	;# 
  1510  0EAB                     	;# 
  1511  0EAC                     	;# 
  1512  0EB1                     	;# 
  1513  0EB2                     	;# 
  1514  0EB3                     	;# 
  1515  0EB8                     	;# 
  1516  0EB9                     	;# 
  1517  0EBA                     	;# 
  1518  0EBB                     	;# 
  1519  0EBC                     	;# 
  1520  0EBD                     	;# 
  1521  0EBE                     	;# 
  1522  0EC3                     	;# 
  1523  0EC5                     	;# 
  1524  0EC6                     	;# 
  1525  0EC7                     	;# 
  1526  0EC8                     	;# 
  1527  0EC9                     	;# 
  1528  0ECA                     	;# 
  1529  0ECB                     	;# 
  1530  0ECC                     	;# 
  1531  0F10                     	;# 
  1532  0F11                     	;# 
  1533  0F12                     	;# 
  1534  0F13                     	;# 
  1535  0F14                     	;# 
  1536  0F15                     	;# 
  1537  0F16                     	;# 
  1538  0F17                     	;# 
  1539  0F18                     	;# 
  1540  0F19                     	;# 
  1541  0F1A                     	;# 
  1542  0F1B                     	;# 
  1543  0F1C                     	;# 
  1544  0F1D                     	;# 
  1545  0F1E                     	;# 
  1546  0F1F                     	;# 
  1547  0F20                     	;# 
  1548  0F21                     	;# 
  1549  0F22                     	;# 
  1550  0F23                     	;# 
  1551  0F24                     	;# 
  1552  0F25                     	;# 
  1553  0F26                     	;# 
  1554  0F27                     	;# 
  1555  0F38                     	;# 
  1556  0F39                     	;# 
  1557  0F3A                     	;# 
  1558  0F3B                     	;# 
  1559  0F3C                     	;# 
  1560  0F3D                     	;# 
  1561  0F3E                     	;# 
  1562  0F3F                     	;# 
  1563  0F40                     	;# 
  1564  0F41                     	;# 
  1565  0F43                     	;# 
  1566  0F44                     	;# 
  1567  0F45                     	;# 
  1568  0F46                     	;# 
  1569  0F47                     	;# 
  1570  0F48                     	;# 
  1571  0F49                     	;# 
  1572  0F4A                     	;# 
  1573  0F4B                     	;# 
  1574  0F4C                     	;# 
  1575  0F4E                     	;# 
  1576  0F4F                     	;# 
  1577  0F50                     	;# 
  1578  0F51                     	;# 
  1579  0F52                     	;# 
  1580  0F53                     	;# 
  1581  0F54                     	;# 
  1582  0F55                     	;# 
  1583  0F56                     	;# 
  1584  0F57                     	;# 
  1585  0F65                     	;# 
  1586  0F68                     	;# 
  1587  0F69                     	;# 
  1588  0F6A                     	;# 
  1589  0F6B                     	;# 
  1590  0FE4                     	;# 
  1591  0FE5                     	;# 
  1592  0FE6                     	;# 
  1593  0FE7                     	;# 
  1594  0FE8                     	;# 
  1595  0FE9                     	;# 
  1596  0FEA                     	;# 
  1597  0FEB                     	;# 
  1598  0FED                     	;# 
  1599  0FEE                     	;# 
  1600  0FEF                     	;# 
  1601  0000                     	;# 
  1602  0001                     	;# 
  1603  0002                     	;# 
  1604  0003                     	;# 
  1605  0004                     	;# 
  1606  0005                     	;# 
  1607  0006                     	;# 
  1608  0007                     	;# 
  1609  0008                     	;# 
  1610  0009                     	;# 
  1611  000A                     	;# 
  1612  000B                     	;# 
  1613  000C                     	;# 
  1614  000D                     	;# 
  1615  000E                     	;# 
  1616  0010                     	;# 
  1617  0011                     	;# 
  1618  0012                     	;# 
  1619  0013                     	;# 
  1620  0016                     	;# 
  1621  0017                     	;# 
  1622  0018                     	;# 
  1623  001C                     	;# 
  1624  001C                     	;# 
  1625  001D                     	;# 
  1626  001D                     	;# 
  1627  001E                     	;# 
  1628  001F                     	;# 
  1629  008C                     	;# 
  1630  008C                     	;# 
  1631  008D                     	;# 
  1632  008E                     	;# 
  1633  008E                     	;# 
  1634  008F                     	;# 
  1635  0090                     	;# 
  1636  0090                     	;# 
  1637  0091                     	;# 
  1638  0093                     	;# 
  1639  0094                     	;# 
  1640  0095                     	;# 
  1641  0096                     	;# 
  1642  0097                     	;# 
  1643  0098                     	;# 
  1644  0099                     	;# 
  1645  009A                     	;# 
  1646  009B                     	;# 
  1647  009C                     	;# 
  1648  009D                     	;# 
  1649  009E                     	;# 
  1650  010C                     	;# 
  1651  010D                     	;# 
  1652  010E                     	;# 
  1653  010E                     	;# 
  1654  010F                     	;# 
  1655  0110                     	;# 
  1656  0110                     	;# 
  1657  0111                     	;# 
  1658  0112                     	;# 
  1659  0112                     	;# 
  1660  0113                     	;# 
  1661  0114                     	;# 
  1662  0114                     	;# 
  1663  0115                     	;# 
  1664  0116                     	;# 
  1665  0116                     	;# 
  1666  0117                     	;# 
  1667  0119                     	;# 
  1668  0119                     	;# 
  1669  0119                     	;# 
  1670  011A                     	;# 
  1671  011A                     	;# 
  1672  011A                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011B                     	;# 
  1677  011B                     	;# 
  1678  011C                     	;# 
  1679  011C                     	;# 
  1680  011C                     	;# 
  1681  011D                     	;# 
  1682  011D                     	;# 
  1683  011D                     	;# 
  1684  011E                     	;# 
  1685  011E                     	;# 
  1686  011E                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  011F                     	;# 
  1691  011F                     	;# 
  1692  018C                     	;# 
  1693  018D                     	;# 
  1694  018E                     	;# 
  1695  018F                     	;# 
  1696  0190                     	;# 
  1697  0191                     	;# 
  1698  0192                     	;# 
  1699  0196                     	;# 
  1700  0197                     	;# 
  1701  0198                     	;# 
  1702  0199                     	;# 
  1703  019A                     	;# 
  1704  019B                     	;# 
  1705  019C                     	;# 
  1706  020C                     	;# 
  1707  020D                     	;# 
  1708  020E                     	;# 
  1709  020F                     	;# 
  1710  020F                     	;# 
  1711  0210                     	;# 
  1712  0210                     	;# 
  1713  0211                     	;# 
  1714  0211                     	;# 
  1715  0212                     	;# 
  1716  0213                     	;# 
  1717  0214                     	;# 
  1718  0215                     	;# 
  1719  0215                     	;# 
  1720  0216                     	;# 
  1721  0216                     	;# 
  1722  0217                     	;# 
  1723  0217                     	;# 
  1724  0218                     	;# 
  1725  0219                     	;# 
  1726  021A                     	;# 
  1727  021B                     	;# 
  1728  021B                     	;# 
  1729  021C                     	;# 
  1730  021C                     	;# 
  1731  021D                     	;# 
  1732  021D                     	;# 
  1733  021E                     	;# 
  1734  021F                     	;# 
  1735  028C                     	;# 
  1736  028C                     	;# 
  1737  028D                     	;# 
  1738  028D                     	;# 
  1739  028E                     	;# 
  1740  028F                     	;# 
  1741  0290                     	;# 
  1742  0290                     	;# 
  1743  0291                     	;# 
  1744  0292                     	;# 
  1745  0292                     	;# 
  1746  0293                     	;# 
  1747  0293                     	;# 
  1748  0294                     	;# 
  1749  0295                     	;# 
  1750  0296                     	;# 
  1751  0296                     	;# 
  1752  0297                     	;# 
  1753  0298                     	;# 
  1754  0298                     	;# 
  1755  0299                     	;# 
  1756  0299                     	;# 
  1757  029A                     	;# 
  1758  029B                     	;# 
  1759  029C                     	;# 
  1760  029C                     	;# 
  1761  029D                     	;# 
  1762  030C                     	;# 
  1763  030C                     	;# 
  1764  030D                     	;# 
  1765  030E                     	;# 
  1766  030F                     	;# 
  1767  0310                     	;# 
  1768  0310                     	;# 
  1769  0311                     	;# 
  1770  0312                     	;# 
  1771  0313                     	;# 
  1772  0314                     	;# 
  1773  0314                     	;# 
  1774  0315                     	;# 
  1775  0316                     	;# 
  1776  0317                     	;# 
  1777  0318                     	;# 
  1778  0318                     	;# 
  1779  0319                     	;# 
  1780  031A                     	;# 
  1781  031B                     	;# 
  1782  031C                     	;# 
  1783  031C                     	;# 
  1784  031D                     	;# 
  1785  031E                     	;# 
  1786  031F                     	;# 
  1787  038C                     	;# 
  1788  038D                     	;# 
  1789  038E                     	;# 
  1790  0390                     	;# 
  1791  0391                     	;# 
  1792  0392                     	;# 
  1793  040C                     	;# 
  1794  040D                     	;# 
  1795  040E                     	;# 
  1796  040F                     	;# 
  1797  0410                     	;# 
  1798  0411                     	;# 
  1799  0416                     	;# 
  1800  0416                     	;# 
  1801  0417                     	;# 
  1802  0418                     	;# 
  1803  0418                     	;# 
  1804  0419                     	;# 
  1805  041A                     	;# 
  1806  041A                     	;# 
  1807  041B                     	;# 
  1808  041C                     	;# 
  1809  041C                     	;# 
  1810  041D                     	;# 
  1811  041E                     	;# 
  1812  041F                     	;# 
  1813  048C                     	;# 
  1814  048C                     	;# 
  1815  048D                     	;# 
  1816  048E                     	;# 
  1817  048F                     	;# 
  1818  048F                     	;# 
  1819  0490                     	;# 
  1820  0491                     	;# 
  1821  0492                     	;# 
  1822  0492                     	;# 
  1823  0493                     	;# 
  1824  0494                     	;# 
  1825  0495                     	;# 
  1826  0495                     	;# 
  1827  0496                     	;# 
  1828  0497                     	;# 
  1829  0498                     	;# 
  1830  0499                     	;# 
  1831  049A                     	;# 
  1832  049B                     	;# 
  1833  049C                     	;# 
  1834  049D                     	;# 
  1835  050C                     	;# 
  1836  050C                     	;# 
  1837  050D                     	;# 
  1838  050E                     	;# 
  1839  050F                     	;# 
  1840  050F                     	;# 
  1841  0510                     	;# 
  1842  0511                     	;# 
  1843  0512                     	;# 
  1844  0512                     	;# 
  1845  0513                     	;# 
  1846  0514                     	;# 
  1847  0515                     	;# 
  1848  0515                     	;# 
  1849  0516                     	;# 
  1850  0517                     	;# 
  1851  0518                     	;# 
  1852  0519                     	;# 
  1853  051A                     	;# 
  1854  051B                     	;# 
  1855  051C                     	;# 
  1856  051D                     	;# 
  1857  058C                     	;# 
  1858  058C                     	;# 
  1859  058D                     	;# 
  1860  058E                     	;# 
  1861  058F                     	;# 
  1862  058F                     	;# 
  1863  0590                     	;# 
  1864  0591                     	;# 
  1865  0592                     	;# 
  1866  0593                     	;# 
  1867  060C                     	;# 
  1868  060D                     	;# 
  1869  060E                     	;# 
  1870  060F                     	;# 
  1871  0610                     	;# 
  1872  0611                     	;# 
  1873  0612                     	;# 
  1874  0613                     	;# 
  1875  0614                     	;# 
  1876  0616                     	;# 
  1877  0617                     	;# 
  1878  0618                     	;# 
  1879  0619                     	;# 
  1880  061A                     	;# 
  1881  061B                     	;# 
  1882  061C                     	;# 
  1883  061D                     	;# 
  1884  061E                     	;# 
  1885  068C                     	;# 
  1886  068D                     	;# 
  1887  068E                     	;# 
  1888  068F                     	;# 
  1889  0690                     	;# 
  1890  0691                     	;# 
  1891  0692                     	;# 
  1892  0693                     	;# 
  1893  0694                     	;# 
  1894  070C                     	;# 
  1895  070D                     	;# 
  1896  070E                     	;# 
  1897  070F                     	;# 
  1898  0710                     	;# 
  1899  0711                     	;# 
  1900  0712                     	;# 
  1901  0713                     	;# 
  1902  0714                     	;# 
  1903  0716                     	;# 
  1904  0717                     	;# 
  1905  0718                     	;# 
  1906  0719                     	;# 
  1907  071A                     	;# 
  1908  071B                     	;# 
  1909  071C                     	;# 
  1910  071D                     	;# 
  1911  071E                     	;# 
  1912  0796                     	;# 
  1913  0797                     	;# 
  1914  0798                     	;# 
  1915  0799                     	;# 
  1916  079A                     	;# 
  1917  079B                     	;# 
  1918  080C                     	;# 
  1919  080D                     	;# 
  1920  080E                     	;# 
  1921  080F                     	;# 
  1922  0810                     	;# 
  1923  0811                     	;# 
  1924  0812                     	;# 
  1925  0813                     	;# 
  1926  0814                     	;# 
  1927  081A                     	;# 
  1928  081B                     	;# 
  1929  081C                     	;# 
  1930  081D                     	;# 
  1931  081E                     	;# 
  1932  081F                     	;# 
  1933  088C                     	;# 
  1934  088D                     	;# 
  1935  088E                     	;# 
  1936  088F                     	;# 
  1937  0890                     	;# 
  1938  0891                     	;# 
  1939  0892                     	;# 
  1940  0893                     	;# 
  1941  0895                     	;# 
  1942  0896                     	;# 
  1943  0897                     	;# 
  1944  0898                     	;# 
  1945  0899                     	;# 
  1946  089A                     	;# 
  1947  089B                     	;# 
  1948  090C                     	;# 
  1949  090E                     	;# 
  1950  090F                     	;# 
  1951  091F                     	;# 
  1952  091F                     	;# 
  1953  098F                     	;# 
  1954  098F                     	;# 
  1955  0990                     	;# 
  1956  0991                     	;# 
  1957  0992                     	;# 
  1958  0993                     	;# 
  1959  0994                     	;# 
  1960  0995                     	;# 
  1961  0996                     	;# 
  1962  0997                     	;# 
  1963  0E0F                     	;# 
  1964  0E10                     	;# 
  1965  0E11                     	;# 
  1966  0E12                     	;# 
  1967  0E13                     	;# 
  1968  0E14                     	;# 
  1969  0E15                     	;# 
  1970  0E16                     	;# 
  1971  0E17                     	;# 
  1972  0E18                     	;# 
  1973  0E19                     	;# 
  1974  0E1A                     	;# 
  1975  0E1B                     	;# 
  1976  0E1C                     	;# 
  1977  0E1D                     	;# 
  1978  0E1E                     	;# 
  1979  0E1F                     	;# 
  1980  0E20                     	;# 
  1981  0E21                     	;# 
  1982  0E22                     	;# 
  1983  0E23                     	;# 
  1984  0E24                     	;# 
  1985  0E25                     	;# 
  1986  0E26                     	;# 
  1987  0E27                     	;# 
  1988  0E28                     	;# 
  1989  0E29                     	;# 
  1990  0E2A                     	;# 
  1991  0E2B                     	;# 
  1992  0E2C                     	;# 
  1993  0E2D                     	;# 
  1994  0E2E                     	;# 
  1995  0E2F                     	;# 
  1996  0E30                     	;# 
  1997  0E31                     	;# 
  1998  0E32                     	;# 
  1999  0E33                     	;# 
  2000  0E34                     	;# 
  2001  0E35                     	;# 
  2002  0E36                     	;# 
  2003  0E37                     	;# 
  2004  0E8F                     	;# 
  2005  0E90                     	;# 
  2006  0E91                     	;# 
  2007  0E92                     	;# 
  2008  0E93                     	;# 
  2009  0E94                     	;# 
  2010  0E95                     	;# 
  2011  0E96                     	;# 
  2012  0E97                     	;# 
  2013  0E9C                     	;# 
  2014  0E9D                     	;# 
  2015  0E9E                     	;# 
  2016  0EA1                     	;# 
  2017  0EA2                     	;# 
  2018  0EA3                     	;# 
  2019  0EA4                     	;# 
  2020  0EA5                     	;# 
  2021  0EA9                     	;# 
  2022  0EAA                     	;# 
  2023  0EAB                     	;# 
  2024  0EAC                     	;# 
  2025  0EB1                     	;# 
  2026  0EB2                     	;# 
  2027  0EB3                     	;# 
  2028  0EB8                     	;# 
  2029  0EB9                     	;# 
  2030  0EBA                     	;# 
  2031  0EBB                     	;# 
  2032  0EBC                     	;# 
  2033  0EBD                     	;# 
  2034  0EBE                     	;# 
  2035  0EC3                     	;# 
  2036  0EC5                     	;# 
  2037  0EC6                     	;# 
  2038  0EC7                     	;# 
  2039  0EC8                     	;# 
  2040  0EC9                     	;# 
  2041  0ECA                     	;# 
  2042  0ECB                     	;# 
  2043  0ECC                     	;# 
  2044  0F10                     	;# 
  2045  0F11                     	;# 
  2046  0F12                     	;# 
  2047  0F13                     	;# 
  2048  0F14                     	;# 
  2049  0F15                     	;# 
  2050  0F16                     	;# 
  2051  0F17                     	;# 
  2052  0F18                     	;# 
  2053  0F19                     	;# 
  2054  0F1A                     	;# 
  2055  0F1B                     	;# 
  2056  0F1C                     	;# 
  2057  0F1D                     	;# 
  2058  0F1E                     	;# 
  2059  0F1F                     	;# 
  2060  0F20                     	;# 
  2061  0F21                     	;# 
  2062  0F22                     	;# 
  2063  0F23                     	;# 
  2064  0F24                     	;# 
  2065  0F25                     	;# 
  2066  0F26                     	;# 
  2067  0F27                     	;# 
  2068  0F38                     	;# 
  2069  0F39                     	;# 
  2070  0F3A                     	;# 
  2071  0F3B                     	;# 
  2072  0F3C                     	;# 
  2073  0F3D                     	;# 
  2074  0F3E                     	;# 
  2075  0F3F                     	;# 
  2076  0F40                     	;# 
  2077  0F41                     	;# 
  2078  0F43                     	;# 
  2079  0F44                     	;# 
  2080  0F45                     	;# 
  2081  0F46                     	;# 
  2082  0F47                     	;# 
  2083  0F48                     	;# 
  2084  0F49                     	;# 
  2085  0F4A                     	;# 
  2086  0F4B                     	;# 
  2087  0F4C                     	;# 
  2088  0F4E                     	;# 
  2089  0F4F                     	;# 
  2090  0F50                     	;# 
  2091  0F51                     	;# 
  2092  0F52                     	;# 
  2093  0F53                     	;# 
  2094  0F54                     	;# 
  2095  0F55                     	;# 
  2096  0F56                     	;# 
  2097  0F57                     	;# 
  2098  0F65                     	;# 
  2099  0F68                     	;# 
  2100  0F69                     	;# 
  2101  0F6A                     	;# 
  2102  0F6B                     	;# 
  2103  0FE4                     	;# 
  2104  0FE5                     	;# 
  2105  0FE6                     	;# 
  2106  0FE7                     	;# 
  2107  0FE8                     	;# 
  2108  0FE9                     	;# 
  2109  0FEA                     	;# 
  2110  0FEB                     	;# 
  2111  0FED                     	;# 
  2112  0FEE                     	;# 
  2113  0FEF                     	;# 
  2114  0000                     	;# 
  2115  0001                     	;# 
  2116  0002                     	;# 
  2117  0003                     	;# 
  2118  0004                     	;# 
  2119  0005                     	;# 
  2120  0006                     	;# 
  2121  0007                     	;# 
  2122  0008                     	;# 
  2123  0009                     	;# 
  2124  000A                     	;# 
  2125  000B                     	;# 
  2126  000C                     	;# 
  2127  000D                     	;# 
  2128  000E                     	;# 
  2129  0010                     	;# 
  2130  0011                     	;# 
  2131  0012                     	;# 
  2132  0013                     	;# 
  2133  0016                     	;# 
  2134  0017                     	;# 
  2135  0018                     	;# 
  2136  001C                     	;# 
  2137  001C                     	;# 
  2138  001D                     	;# 
  2139  001D                     	;# 
  2140  001E                     	;# 
  2141  001F                     	;# 
  2142  008C                     	;# 
  2143  008C                     	;# 
  2144  008D                     	;# 
  2145  008E                     	;# 
  2146  008E                     	;# 
  2147  008F                     	;# 
  2148  0090                     	;# 
  2149  0090                     	;# 
  2150  0091                     	;# 
  2151  0093                     	;# 
  2152  0094                     	;# 
  2153  0095                     	;# 
  2154  0096                     	;# 
  2155  0097                     	;# 
  2156  0098                     	;# 
  2157  0099                     	;# 
  2158  009A                     	;# 
  2159  009B                     	;# 
  2160  009C                     	;# 
  2161  009D                     	;# 
  2162  009E                     	;# 
  2163  010C                     	;# 
  2164  010D                     	;# 
  2165  010E                     	;# 
  2166  010E                     	;# 
  2167  010F                     	;# 
  2168  0110                     	;# 
  2169  0110                     	;# 
  2170  0111                     	;# 
  2171  0112                     	;# 
  2172  0112                     	;# 
  2173  0113                     	;# 
  2174  0114                     	;# 
  2175  0114                     	;# 
  2176  0115                     	;# 
  2177  0116                     	;# 
  2178  0116                     	;# 
  2179  0117                     	;# 
  2180  0119                     	;# 
  2181  0119                     	;# 
  2182  0119                     	;# 
  2183  011A                     	;# 
  2184  011A                     	;# 
  2185  011A                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011B                     	;# 
  2190  011B                     	;# 
  2191  011C                     	;# 
  2192  011C                     	;# 
  2193  011C                     	;# 
  2194  011D                     	;# 
  2195  011D                     	;# 
  2196  011D                     	;# 
  2197  011E                     	;# 
  2198  011E                     	;# 
  2199  011E                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  011F                     	;# 
  2204  011F                     	;# 
  2205  018C                     	;# 
  2206  018D                     	;# 
  2207  018E                     	;# 
  2208  018F                     	;# 
  2209  0190                     	;# 
  2210  0191                     	;# 
  2211  0192                     	;# 
  2212  0196                     	;# 
  2213  0197                     	;# 
  2214  0198                     	;# 
  2215  0199                     	;# 
  2216  019A                     	;# 
  2217  019B                     	;# 
  2218  019C                     	;# 
  2219  020C                     	;# 
  2220  020D                     	;# 
  2221  020E                     	;# 
  2222  020F                     	;# 
  2223  020F                     	;# 
  2224  0210                     	;# 
  2225  0210                     	;# 
  2226  0211                     	;# 
  2227  0211                     	;# 
  2228  0212                     	;# 
  2229  0213                     	;# 
  2230  0214                     	;# 
  2231  0215                     	;# 
  2232  0215                     	;# 
  2233  0216                     	;# 
  2234  0216                     	;# 
  2235  0217                     	;# 
  2236  0217                     	;# 
  2237  0218                     	;# 
  2238  0219                     	;# 
  2239  021A                     	;# 
  2240  021B                     	;# 
  2241  021B                     	;# 
  2242  021C                     	;# 
  2243  021C                     	;# 
  2244  021D                     	;# 
  2245  021D                     	;# 
  2246  021E                     	;# 
  2247  021F                     	;# 
  2248  028C                     	;# 
  2249  028C                     	;# 
  2250  028D                     	;# 
  2251  028D                     	;# 
  2252  028E                     	;# 
  2253  028F                     	;# 
  2254  0290                     	;# 
  2255  0290                     	;# 
  2256  0291                     	;# 
  2257  0292                     	;# 
  2258  0292                     	;# 
  2259  0293                     	;# 
  2260  0293                     	;# 
  2261  0294                     	;# 
  2262  0295                     	;# 
  2263  0296                     	;# 
  2264  0296                     	;# 
  2265  0297                     	;# 
  2266  0298                     	;# 
  2267  0298                     	;# 
  2268  0299                     	;# 
  2269  0299                     	;# 
  2270  029A                     	;# 
  2271  029B                     	;# 
  2272  029C                     	;# 
  2273  029C                     	;# 
  2274  029D                     	;# 
  2275  030C                     	;# 
  2276  030C                     	;# 
  2277  030D                     	;# 
  2278  030E                     	;# 
  2279  030F                     	;# 
  2280  0310                     	;# 
  2281  0310                     	;# 
  2282  0311                     	;# 
  2283  0312                     	;# 
  2284  0313                     	;# 
  2285  0314                     	;# 
  2286  0314                     	;# 
  2287  0315                     	;# 
  2288  0316                     	;# 
  2289  0317                     	;# 
  2290  0318                     	;# 
  2291  0318                     	;# 
  2292  0319                     	;# 
  2293  031A                     	;# 
  2294  031B                     	;# 
  2295  031C                     	;# 
  2296  031C                     	;# 
  2297  031D                     	;# 
  2298  031E                     	;# 
  2299  031F                     	;# 
  2300  038C                     	;# 
  2301  038D                     	;# 
  2302  038E                     	;# 
  2303  0390                     	;# 
  2304  0391                     	;# 
  2305  0392                     	;# 
  2306  040C                     	;# 
  2307  040D                     	;# 
  2308  040E                     	;# 
  2309  040F                     	;# 
  2310  0410                     	;# 
  2311  0411                     	;# 
  2312  0416                     	;# 
  2313  0416                     	;# 
  2314  0417                     	;# 
  2315  0418                     	;# 
  2316  0418                     	;# 
  2317  0419                     	;# 
  2318  041A                     	;# 
  2319  041A                     	;# 
  2320  041B                     	;# 
  2321  041C                     	;# 
  2322  041C                     	;# 
  2323  041D                     	;# 
  2324  041E                     	;# 
  2325  041F                     	;# 
  2326  048C                     	;# 
  2327  048C                     	;# 
  2328  048D                     	;# 
  2329  048E                     	;# 
  2330  048F                     	;# 
  2331  048F                     	;# 
  2332  0490                     	;# 
  2333  0491                     	;# 
  2334  0492                     	;# 
  2335  0492                     	;# 
  2336  0493                     	;# 
  2337  0494                     	;# 
  2338  0495                     	;# 
  2339  0495                     	;# 
  2340  0496                     	;# 
  2341  0497                     	;# 
  2342  0498                     	;# 
  2343  0499                     	;# 
  2344  049A                     	;# 
  2345  049B                     	;# 
  2346  049C                     	;# 
  2347  049D                     	;# 
  2348  050C                     	;# 
  2349  050C                     	;# 
  2350  050D                     	;# 
  2351  050E                     	;# 
  2352  050F                     	;# 
  2353  050F                     	;# 
  2354  0510                     	;# 
  2355  0511                     	;# 
  2356  0512                     	;# 
  2357  0512                     	;# 
  2358  0513                     	;# 
  2359  0514                     	;# 
  2360  0515                     	;# 
  2361  0515                     	;# 
  2362  0516                     	;# 
  2363  0517                     	;# 
  2364  0518                     	;# 
  2365  0519                     	;# 
  2366  051A                     	;# 
  2367  051B                     	;# 
  2368  051C                     	;# 
  2369  051D                     	;# 
  2370  058C                     	;# 
  2371  058C                     	;# 
  2372  058D                     	;# 
  2373  058E                     	;# 
  2374  058F                     	;# 
  2375  058F                     	;# 
  2376  0590                     	;# 
  2377  0591                     	;# 
  2378  0592                     	;# 
  2379  0593                     	;# 
  2380  060C                     	;# 
  2381  060D                     	;# 
  2382  060E                     	;# 
  2383  060F                     	;# 
  2384  0610                     	;# 
  2385  0611                     	;# 
  2386  0612                     	;# 
  2387  0613                     	;# 
  2388  0614                     	;# 
  2389  0616                     	;# 
  2390  0617                     	;# 
  2391  0618                     	;# 
  2392  0619                     	;# 
  2393  061A                     	;# 
  2394  061B                     	;# 
  2395  061C                     	;# 
  2396  061D                     	;# 
  2397  061E                     	;# 
  2398  068C                     	;# 
  2399  068D                     	;# 
  2400  068E                     	;# 
  2401  068F                     	;# 
  2402  0690                     	;# 
  2403  0691                     	;# 
  2404  0692                     	;# 
  2405  0693                     	;# 
  2406  0694                     	;# 
  2407  070C                     	;# 
  2408  070D                     	;# 
  2409  070E                     	;# 
  2410  070F                     	;# 
  2411  0710                     	;# 
  2412  0711                     	;# 
  2413  0712                     	;# 
  2414  0713                     	;# 
  2415  0714                     	;# 
  2416  0716                     	;# 
  2417  0717                     	;# 
  2418  0718                     	;# 
  2419  0719                     	;# 
  2420  071A                     	;# 
  2421  071B                     	;# 
  2422  071C                     	;# 
  2423  071D                     	;# 
  2424  071E                     	;# 
  2425  0796                     	;# 
  2426  0797                     	;# 
  2427  0798                     	;# 
  2428  0799                     	;# 
  2429  079A                     	;# 
  2430  079B                     	;# 
  2431  080C                     	;# 
  2432  080D                     	;# 
  2433  080E                     	;# 
  2434  080F                     	;# 
  2435  0810                     	;# 
  2436  0811                     	;# 
  2437  0812                     	;# 
  2438  0813                     	;# 
  2439  0814                     	;# 
  2440  081A                     	;# 
  2441  081B                     	;# 
  2442  081C                     	;# 
  2443  081D                     	;# 
  2444  081E                     	;# 
  2445  081F                     	;# 
  2446  088C                     	;# 
  2447  088D                     	;# 
  2448  088E                     	;# 
  2449  088F                     	;# 
  2450  0890                     	;# 
  2451  0891                     	;# 
  2452  0892                     	;# 
  2453  0893                     	;# 
  2454  0895                     	;# 
  2455  0896                     	;# 
  2456  0897                     	;# 
  2457  0898                     	;# 
  2458  0899                     	;# 
  2459  089A                     	;# 
  2460  089B                     	;# 
  2461  090C                     	;# 
  2462  090E                     	;# 
  2463  090F                     	;# 
  2464  091F                     	;# 
  2465  091F                     	;# 
  2466  098F                     	;# 
  2467  098F                     	;# 
  2468  0990                     	;# 
  2469  0991                     	;# 
  2470  0992                     	;# 
  2471  0993                     	;# 
  2472  0994                     	;# 
  2473  0995                     	;# 
  2474  0996                     	;# 
  2475  0997                     	;# 
  2476  0E0F                     	;# 
  2477  0E10                     	;# 
  2478  0E11                     	;# 
  2479  0E12                     	;# 
  2480  0E13                     	;# 
  2481  0E14                     	;# 
  2482  0E15                     	;# 
  2483  0E16                     	;# 
  2484  0E17                     	;# 
  2485  0E18                     	;# 
  2486  0E19                     	;# 
  2487  0E1A                     	;# 
  2488  0E1B                     	;# 
  2489  0E1C                     	;# 
  2490  0E1D                     	;# 
  2491  0E1E                     	;# 
  2492  0E1F                     	;# 
  2493  0E20                     	;# 
  2494  0E21                     	;# 
  2495  0E22                     	;# 
  2496  0E23                     	;# 
  2497  0E24                     	;# 
  2498  0E25                     	;# 
  2499  0E26                     	;# 
  2500  0E27                     	;# 
  2501  0E28                     	;# 
  2502  0E29                     	;# 
  2503  0E2A                     	;# 
  2504  0E2B                     	;# 
  2505  0E2C                     	;# 
  2506  0E2D                     	;# 
  2507  0E2E                     	;# 
  2508  0E2F                     	;# 
  2509  0E30                     	;# 
  2510  0E31                     	;# 
  2511  0E32                     	;# 
  2512  0E33                     	;# 
  2513  0E34                     	;# 
  2514  0E35                     	;# 
  2515  0E36                     	;# 
  2516  0E37                     	;# 
  2517  0E8F                     	;# 
  2518  0E90                     	;# 
  2519  0E91                     	;# 
  2520  0E92                     	;# 
  2521  0E93                     	;# 
  2522  0E94                     	;# 
  2523  0E95                     	;# 
  2524  0E96                     	;# 
  2525  0E97                     	;# 
  2526  0E9C                     	;# 
  2527  0E9D                     	;# 
  2528  0E9E                     	;# 
  2529  0EA1                     	;# 
  2530  0EA2                     	;# 
  2531  0EA3                     	;# 
  2532  0EA4                     	;# 
  2533  0EA5                     	;# 
  2534  0EA9                     	;# 
  2535  0EAA                     	;# 
  2536  0EAB                     	;# 
  2537  0EAC                     	;# 
  2538  0EB1                     	;# 
  2539  0EB2                     	;# 
  2540  0EB3                     	;# 
  2541  0EB8                     	;# 
  2542  0EB9                     	;# 
  2543  0EBA                     	;# 
  2544  0EBB                     	;# 
  2545  0EBC                     	;# 
  2546  0EBD                     	;# 
  2547  0EBE                     	;# 
  2548  0EC3                     	;# 
  2549  0EC5                     	;# 
  2550  0EC6                     	;# 
  2551  0EC7                     	;# 
  2552  0EC8                     	;# 
  2553  0EC9                     	;# 
  2554  0ECA                     	;# 
  2555  0ECB                     	;# 
  2556  0ECC                     	;# 
  2557  0F10                     	;# 
  2558  0F11                     	;# 
  2559  0F12                     	;# 
  2560  0F13                     	;# 
  2561  0F14                     	;# 
  2562  0F15                     	;# 
  2563  0F16                     	;# 
  2564  0F17                     	;# 
  2565  0F18                     	;# 
  2566  0F19                     	;# 
  2567  0F1A                     	;# 
  2568  0F1B                     	;# 
  2569  0F1C                     	;# 
  2570  0F1D                     	;# 
  2571  0F1E                     	;# 
  2572  0F1F                     	;# 
  2573  0F20                     	;# 
  2574  0F21                     	;# 
  2575  0F22                     	;# 
  2576  0F23                     	;# 
  2577  0F24                     	;# 
  2578  0F25                     	;# 
  2579  0F26                     	;# 
  2580  0F27                     	;# 
  2581  0F38                     	;# 
  2582  0F39                     	;# 
  2583  0F3A                     	;# 
  2584  0F3B                     	;# 
  2585  0F3C                     	;# 
  2586  0F3D                     	;# 
  2587  0F3E                     	;# 
  2588  0F3F                     	;# 
  2589  0F40                     	;# 
  2590  0F41                     	;# 
  2591  0F43                     	;# 
  2592  0F44                     	;# 
  2593  0F45                     	;# 
  2594  0F46                     	;# 
  2595  0F47                     	;# 
  2596  0F48                     	;# 
  2597  0F49                     	;# 
  2598  0F4A                     	;# 
  2599  0F4B                     	;# 
  2600  0F4C                     	;# 
  2601  0F4E                     	;# 
  2602  0F4F                     	;# 
  2603  0F50                     	;# 
  2604  0F51                     	;# 
  2605  0F52                     	;# 
  2606  0F53                     	;# 
  2607  0F54                     	;# 
  2608  0F55                     	;# 
  2609  0F56                     	;# 
  2610  0F57                     	;# 
  2611  0F65                     	;# 
  2612  0F68                     	;# 
  2613  0F69                     	;# 
  2614  0F6A                     	;# 
  2615  0F6B                     	;# 
  2616  0FE4                     	;# 
  2617  0FE5                     	;# 
  2618  0FE6                     	;# 
  2619  0FE7                     	;# 
  2620  0FE8                     	;# 
  2621  0FE9                     	;# 
  2622  0FEA                     	;# 
  2623  0FEB                     	;# 
  2624  0FED                     	;# 
  2625  0FEE                     	;# 
  2626  0FEF                     	;# 
  2627  0000                     	;# 
  2628  0001                     	;# 
  2629  0002                     	;# 
  2630  0003                     	;# 
  2631  0004                     	;# 
  2632  0005                     	;# 
  2633  0006                     	;# 
  2634  0007                     	;# 
  2635  0008                     	;# 
  2636  0009                     	;# 
  2637  000A                     	;# 
  2638  000B                     	;# 
  2639  000C                     	;# 
  2640  000D                     	;# 
  2641  000E                     	;# 
  2642  0010                     	;# 
  2643  0011                     	;# 
  2644  0012                     	;# 
  2645  0013                     	;# 
  2646  0016                     	;# 
  2647  0017                     	;# 
  2648  0018                     	;# 
  2649  001C                     	;# 
  2650  001C                     	;# 
  2651  001D                     	;# 
  2652  001D                     	;# 
  2653  001E                     	;# 
  2654  001F                     	;# 
  2655  008C                     	;# 
  2656  008C                     	;# 
  2657  008D                     	;# 
  2658  008E                     	;# 
  2659  008E                     	;# 
  2660  008F                     	;# 
  2661  0090                     	;# 
  2662  0090                     	;# 
  2663  0091                     	;# 
  2664  0093                     	;# 
  2665  0094                     	;# 
  2666  0095                     	;# 
  2667  0096                     	;# 
  2668  0097                     	;# 
  2669  0098                     	;# 
  2670  0099                     	;# 
  2671  009A                     	;# 
  2672  009B                     	;# 
  2673  009C                     	;# 
  2674  009D                     	;# 
  2675  009E                     	;# 
  2676  010C                     	;# 
  2677  010D                     	;# 
  2678  010E                     	;# 
  2679  010E                     	;# 
  2680  010F                     	;# 
  2681  0110                     	;# 
  2682  0110                     	;# 
  2683  0111                     	;# 
  2684  0112                     	;# 
  2685  0112                     	;# 
  2686  0113                     	;# 
  2687  0114                     	;# 
  2688  0114                     	;# 
  2689  0115                     	;# 
  2690  0116                     	;# 
  2691  0116                     	;# 
  2692  0117                     	;# 
  2693  0119                     	;# 
  2694  0119                     	;# 
  2695  0119                     	;# 
  2696  011A                     	;# 
  2697  011A                     	;# 
  2698  011A                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011B                     	;# 
  2703  011B                     	;# 
  2704  011C                     	;# 
  2705  011C                     	;# 
  2706  011C                     	;# 
  2707  011D                     	;# 
  2708  011D                     	;# 
  2709  011D                     	;# 
  2710  011E                     	;# 
  2711  011E                     	;# 
  2712  011E                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  011F                     	;# 
  2717  011F                     	;# 
  2718  018C                     	;# 
  2719  018D                     	;# 
  2720  018E                     	;# 
  2721  018F                     	;# 
  2722  0190                     	;# 
  2723  0191                     	;# 
  2724  0192                     	;# 
  2725  0196                     	;# 
  2726  0197                     	;# 
  2727  0198                     	;# 
  2728  0199                     	;# 
  2729  019A                     	;# 
  2730  019B                     	;# 
  2731  019C                     	;# 
  2732  020C                     	;# 
  2733  020D                     	;# 
  2734  020E                     	;# 
  2735  020F                     	;# 
  2736  020F                     	;# 
  2737  0210                     	;# 
  2738  0210                     	;# 
  2739  0211                     	;# 
  2740  0211                     	;# 
  2741  0212                     	;# 
  2742  0213                     	;# 
  2743  0214                     	;# 
  2744  0215                     	;# 
  2745  0215                     	;# 
  2746  0216                     	;# 
  2747  0216                     	;# 
  2748  0217                     	;# 
  2749  0217                     	;# 
  2750  0218                     	;# 
  2751  0219                     	;# 
  2752  021A                     	;# 
  2753  021B                     	;# 
  2754  021B                     	;# 
  2755  021C                     	;# 
  2756  021C                     	;# 
  2757  021D                     	;# 
  2758  021D                     	;# 
  2759  021E                     	;# 
  2760  021F                     	;# 
  2761  028C                     	;# 
  2762  028C                     	;# 
  2763  028D                     	;# 
  2764  028D                     	;# 
  2765  028E                     	;# 
  2766  028F                     	;# 
  2767  0290                     	;# 
  2768  0290                     	;# 
  2769  0291                     	;# 
  2770  0292                     	;# 
  2771  0292                     	;# 
  2772  0293                     	;# 
  2773  0293                     	;# 
  2774  0294                     	;# 
  2775  0295                     	;# 
  2776  0296                     	;# 
  2777  0296                     	;# 
  2778  0297                     	;# 
  2779  0298                     	;# 
  2780  0298                     	;# 
  2781  0299                     	;# 
  2782  0299                     	;# 
  2783  029A                     	;# 
  2784  029B                     	;# 
  2785  029C                     	;# 
  2786  029C                     	;# 
  2787  029D                     	;# 
  2788  030C                     	;# 
  2789  030C                     	;# 
  2790  030D                     	;# 
  2791  030E                     	;# 
  2792  030F                     	;# 
  2793  0310                     	;# 
  2794  0310                     	;# 
  2795  0311                     	;# 
  2796  0312                     	;# 
  2797  0313                     	;# 
  2798  0314                     	;# 
  2799  0314                     	;# 
  2800  0315                     	;# 
  2801  0316                     	;# 
  2802  0317                     	;# 
  2803  0318                     	;# 
  2804  0318                     	;# 
  2805  0319                     	;# 
  2806  031A                     	;# 
  2807  031B                     	;# 
  2808  031C                     	;# 
  2809  031C                     	;# 
  2810  031D                     	;# 
  2811  031E                     	;# 
  2812  031F                     	;# 
  2813  038C                     	;# 
  2814  038D                     	;# 
  2815  038E                     	;# 
  2816  0390                     	;# 
  2817  0391                     	;# 
  2818  0392                     	;# 
  2819  040C                     	;# 
  2820  040D                     	;# 
  2821  040E                     	;# 
  2822  040F                     	;# 
  2823  0410                     	;# 
  2824  0411                     	;# 
  2825  0416                     	;# 
  2826  0416                     	;# 
  2827  0417                     	;# 
  2828  0418                     	;# 
  2829  0418                     	;# 
  2830  0419                     	;# 
  2831  041A                     	;# 
  2832  041A                     	;# 
  2833  041B                     	;# 
  2834  041C                     	;# 
  2835  041C                     	;# 
  2836  041D                     	;# 
  2837  041E                     	;# 
  2838  041F                     	;# 
  2839  048C                     	;# 
  2840  048C                     	;# 
  2841  048D                     	;# 
  2842  048E                     	;# 
  2843  048F                     	;# 
  2844  048F                     	;# 
  2845  0490                     	;# 
  2846  0491                     	;# 
  2847  0492                     	;# 
  2848  0492                     	;# 
  2849  0493                     	;# 
  2850  0494                     	;# 
  2851  0495                     	;# 
  2852  0495                     	;# 
  2853  0496                     	;# 
  2854  0497                     	;# 
  2855  0498                     	;# 
  2856  0499                     	;# 
  2857  049A                     	;# 
  2858  049B                     	;# 
  2859  049C                     	;# 
  2860  049D                     	;# 
  2861  050C                     	;# 
  2862  050C                     	;# 
  2863  050D                     	;# 
  2864  050E                     	;# 
  2865  050F                     	;# 
  2866  050F                     	;# 
  2867  0510                     	;# 
  2868  0511                     	;# 
  2869  0512                     	;# 
  2870  0512                     	;# 
  2871  0513                     	;# 
  2872  0514                     	;# 
  2873  0515                     	;# 
  2874  0515                     	;# 
  2875  0516                     	;# 
  2876  0517                     	;# 
  2877  0518                     	;# 
  2878  0519                     	;# 
  2879  051A                     	;# 
  2880  051B                     	;# 
  2881  051C                     	;# 
  2882  051D                     	;# 
  2883  058C                     	;# 
  2884  058C                     	;# 
  2885  058D                     	;# 
  2886  058E                     	;# 
  2887  058F                     	;# 
  2888  058F                     	;# 
  2889  0590                     	;# 
  2890  0591                     	;# 
  2891  0592                     	;# 
  2892  0593                     	;# 
  2893  060C                     	;# 
  2894  060D                     	;# 
  2895  060E                     	;# 
  2896  060F                     	;# 
  2897  0610                     	;# 
  2898  0611                     	;# 
  2899  0612                     	;# 
  2900  0613                     	;# 
  2901  0614                     	;# 
  2902  0616                     	;# 
  2903  0617                     	;# 
  2904  0618                     	;# 
  2905  0619                     	;# 
  2906  061A                     	;# 
  2907  061B                     	;# 
  2908  061C                     	;# 
  2909  061D                     	;# 
  2910  061E                     	;# 
  2911  068C                     	;# 
  2912  068D                     	;# 
  2913  068E                     	;# 
  2914  068F                     	;# 
  2915  0690                     	;# 
  2916  0691                     	;# 
  2917  0692                     	;# 
  2918  0693                     	;# 
  2919  0694                     	;# 
  2920  070C                     	;# 
  2921  070D                     	;# 
  2922  070E                     	;# 
  2923  070F                     	;# 
  2924  0710                     	;# 
  2925  0711                     	;# 
  2926  0712                     	;# 
  2927  0713                     	;# 
  2928  0714                     	;# 
  2929  0716                     	;# 
  2930  0717                     	;# 
  2931  0718                     	;# 
  2932  0719                     	;# 
  2933  071A                     	;# 
  2934  071B                     	;# 
  2935  071C                     	;# 
  2936  071D                     	;# 
  2937  071E                     	;# 
  2938  0796                     	;# 
  2939  0797                     	;# 
  2940  0798                     	;# 
  2941  0799                     	;# 
  2942  079A                     	;# 
  2943  079B                     	;# 
  2944  080C                     	;# 
  2945  080D                     	;# 
  2946  080E                     	;# 
  2947  080F                     	;# 
  2948  0810                     	;# 
  2949  0811                     	;# 
  2950  0812                     	;# 
  2951  0813                     	;# 
  2952  0814                     	;# 
  2953  081A                     	;# 
  2954  081B                     	;# 
  2955  081C                     	;# 
  2956  081D                     	;# 
  2957  081E                     	;# 
  2958  081F                     	;# 
  2959  088C                     	;# 
  2960  088D                     	;# 
  2961  088E                     	;# 
  2962  088F                     	;# 
  2963  0890                     	;# 
  2964  0891                     	;# 
  2965  0892                     	;# 
  2966  0893                     	;# 
  2967  0895                     	;# 
  2968  0896                     	;# 
  2969  0897                     	;# 
  2970  0898                     	;# 
  2971  0899                     	;# 
  2972  089A                     	;# 
  2973  089B                     	;# 
  2974  090C                     	;# 
  2975  090E                     	;# 
  2976  090F                     	;# 
  2977  091F                     	;# 
  2978  091F                     	;# 
  2979  098F                     	;# 
  2980  098F                     	;# 
  2981  0990                     	;# 
  2982  0991                     	;# 
  2983  0992                     	;# 
  2984  0993                     	;# 
  2985  0994                     	;# 
  2986  0995                     	;# 
  2987  0996                     	;# 
  2988  0997                     	;# 
  2989  0E0F                     	;# 
  2990  0E10                     	;# 
  2991  0E11                     	;# 
  2992  0E12                     	;# 
  2993  0E13                     	;# 
  2994  0E14                     	;# 
  2995  0E15                     	;# 
  2996  0E16                     	;# 
  2997  0E17                     	;# 
  2998  0E18                     	;# 
  2999  0E19                     	;# 
  3000  0E1A                     	;# 
  3001  0E1B                     	;# 
  3002  0E1C                     	;# 
  3003  0E1D                     	;# 
  3004  0E1E                     	;# 
  3005  0E1F                     	;# 
  3006  0E20                     	;# 
  3007  0E21                     	;# 
  3008  0E22                     	;# 
  3009  0E23                     	;# 
  3010  0E24                     	;# 
  3011  0E25                     	;# 
  3012  0E26                     	;# 
  3013  0E27                     	;# 
  3014  0E28                     	;# 
  3015  0E29                     	;# 
  3016  0E2A                     	;# 
  3017  0E2B                     	;# 
  3018  0E2C                     	;# 
  3019  0E2D                     	;# 
  3020  0E2E                     	;# 
  3021  0E2F                     	;# 
  3022  0E30                     	;# 
  3023  0E31                     	;# 
  3024  0E32                     	;# 
  3025  0E33                     	;# 
  3026  0E34                     	;# 
  3027  0E35                     	;# 
  3028  0E36                     	;# 
  3029  0E37                     	;# 
  3030  0E8F                     	;# 
  3031  0E90                     	;# 
  3032  0E91                     	;# 
  3033  0E92                     	;# 
  3034  0E93                     	;# 
  3035  0E94                     	;# 
  3036  0E95                     	;# 
  3037  0E96                     	;# 
  3038  0E97                     	;# 
  3039  0E9C                     	;# 
  3040  0E9D                     	;# 
  3041  0E9E                     	;# 
  3042  0EA1                     	;# 
  3043  0EA2                     	;# 
  3044  0EA3                     	;# 
  3045  0EA4                     	;# 
  3046  0EA5                     	;# 
  3047  0EA9                     	;# 
  3048  0EAA                     	;# 
  3049  0EAB                     	;# 
  3050  0EAC                     	;# 
  3051  0EB1                     	;# 
  3052  0EB2                     	;# 
  3053  0EB3                     	;# 
  3054  0EB8                     	;# 
  3055  0EB9                     	;# 
  3056  0EBA                     	;# 
  3057  0EBB                     	;# 
  3058  0EBC                     	;# 
  3059  0EBD                     	;# 
  3060  0EBE                     	;# 
  3061  0EC3                     	;# 
  3062  0EC5                     	;# 
  3063  0EC6                     	;# 
  3064  0EC7                     	;# 
  3065  0EC8                     	;# 
  3066  0EC9                     	;# 
  3067  0ECA                     	;# 
  3068  0ECB                     	;# 
  3069  0ECC                     	;# 
  3070  0F10                     	;# 
  3071  0F11                     	;# 
  3072  0F12                     	;# 
  3073  0F13                     	;# 
  3074  0F14                     	;# 
  3075  0F15                     	;# 
  3076  0F16                     	;# 
  3077  0F17                     	;# 
  3078  0F18                     	;# 
  3079  0F19                     	;# 
  3080  0F1A                     	;# 
  3081  0F1B                     	;# 
  3082  0F1C                     	;# 
  3083  0F1D                     	;# 
  3084  0F1E                     	;# 
  3085  0F1F                     	;# 
  3086  0F20                     	;# 
  3087  0F21                     	;# 
  3088  0F22                     	;# 
  3089  0F23                     	;# 
  3090  0F24                     	;# 
  3091  0F25                     	;# 
  3092  0F26                     	;# 
  3093  0F27                     	;# 
  3094  0F38                     	;# 
  3095  0F39                     	;# 
  3096  0F3A                     	;# 
  3097  0F3B                     	;# 
  3098  0F3C                     	;# 
  3099  0F3D                     	;# 
  3100  0F3E                     	;# 
  3101  0F3F                     	;# 
  3102  0F40                     	;# 
  3103  0F41                     	;# 
  3104  0F43                     	;# 
  3105  0F44                     	;# 
  3106  0F45                     	;# 
  3107  0F46                     	;# 
  3108  0F47                     	;# 
  3109  0F48                     	;# 
  3110  0F49                     	;# 
  3111  0F4A                     	;# 
  3112  0F4B                     	;# 
  3113  0F4C                     	;# 
  3114  0F4E                     	;# 
  3115  0F4F                     	;# 
  3116  0F50                     	;# 
  3117  0F51                     	;# 
  3118  0F52                     	;# 
  3119  0F53                     	;# 
  3120  0F54                     	;# 
  3121  0F55                     	;# 
  3122  0F56                     	;# 
  3123  0F57                     	;# 
  3124  0F65                     	;# 
  3125  0F68                     	;# 
  3126  0F69                     	;# 
  3127  0F6A                     	;# 
  3128  0F6B                     	;# 
  3129  0FE4                     	;# 
  3130  0FE5                     	;# 
  3131  0FE6                     	;# 
  3132  0FE7                     	;# 
  3133  0FE8                     	;# 
  3134  0FE9                     	;# 
  3135  0FEA                     	;# 
  3136  0FEB                     	;# 
  3137  0FED                     	;# 
  3138  0FEE                     	;# 
  3139  0FEF                     	;# 
  3140  0000                     	;# 
  3141  0001                     	;# 
  3142  0002                     	;# 
  3143  0003                     	;# 
  3144  0004                     	;# 
  3145  0005                     	;# 
  3146  0006                     	;# 
  3147  0007                     	;# 
  3148  0008                     	;# 
  3149  0009                     	;# 
  3150  000A                     	;# 
  3151  000B                     	;# 
  3152  000C                     	;# 
  3153  000D                     	;# 
  3154  000E                     	;# 
  3155  0010                     	;# 
  3156  0011                     	;# 
  3157  0012                     	;# 
  3158  0013                     	;# 
  3159  0016                     	;# 
  3160  0017                     	;# 
  3161  0018                     	;# 
  3162  001C                     	;# 
  3163  001C                     	;# 
  3164  001D                     	;# 
  3165  001D                     	;# 
  3166  001E                     	;# 
  3167  001F                     	;# 
  3168  008C                     	;# 
  3169  008C                     	;# 
  3170  008D                     	;# 
  3171  008E                     	;# 
  3172  008E                     	;# 
  3173  008F                     	;# 
  3174  0090                     	;# 
  3175  0090                     	;# 
  3176  0091                     	;# 
  3177  0093                     	;# 
  3178  0094                     	;# 
  3179  0095                     	;# 
  3180  0096                     	;# 
  3181  0097                     	;# 
  3182  0098                     	;# 
  3183  0099                     	;# 
  3184  009A                     	;# 
  3185  009B                     	;# 
  3186  009C                     	;# 
  3187  009D                     	;# 
  3188  009E                     	;# 
  3189  010C                     	;# 
  3190  010D                     	;# 
  3191  010E                     	;# 
  3192  010E                     	;# 
  3193  010F                     	;# 
  3194  0110                     	;# 
  3195  0110                     	;# 
  3196  0111                     	;# 
  3197  0112                     	;# 
  3198  0112                     	;# 
  3199  0113                     	;# 
  3200  0114                     	;# 
  3201  0114                     	;# 
  3202  0115                     	;# 
  3203  0116                     	;# 
  3204  0116                     	;# 
  3205  0117                     	;# 
  3206  0119                     	;# 
  3207  0119                     	;# 
  3208  0119                     	;# 
  3209  011A                     	;# 
  3210  011A                     	;# 
  3211  011A                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011C                     	;# 
  3218  011C                     	;# 
  3219  011C                     	;# 
  3220  011D                     	;# 
  3221  011D                     	;# 
  3222  011D                     	;# 
  3223  011E                     	;# 
  3224  011E                     	;# 
  3225  011E                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  018C                     	;# 
  3232  018D                     	;# 
  3233  018E                     	;# 
  3234  018F                     	;# 
  3235  0190                     	;# 
  3236  0191                     	;# 
  3237  0192                     	;# 
  3238  0196                     	;# 
  3239  0197                     	;# 
  3240  0198                     	;# 
  3241  0199                     	;# 
  3242  019A                     	;# 
  3243  019B                     	;# 
  3244  019C                     	;# 
  3245  020C                     	;# 
  3246  020D                     	;# 
  3247  020E                     	;# 
  3248  020F                     	;# 
  3249  020F                     	;# 
  3250  0210                     	;# 
  3251  0210                     	;# 
  3252  0211                     	;# 
  3253  0211                     	;# 
  3254  0212                     	;# 
  3255  0213                     	;# 
  3256  0214                     	;# 
  3257  0215                     	;# 
  3258  0215                     	;# 
  3259  0216                     	;# 
  3260  0216                     	;# 
  3261  0217                     	;# 
  3262  0217                     	;# 
  3263  0218                     	;# 
  3264  0219                     	;# 
  3265  021A                     	;# 
  3266  021B                     	;# 
  3267  021B                     	;# 
  3268  021C                     	;# 
  3269  021C                     	;# 
  3270  021D                     	;# 
  3271  021D                     	;# 
  3272  021E                     	;# 
  3273  021F                     	;# 
  3274  028C                     	;# 
  3275  028C                     	;# 
  3276  028D                     	;# 
  3277  028D                     	;# 
  3278  028E                     	;# 
  3279  028F                     	;# 
  3280  0290                     	;# 
  3281  0290                     	;# 
  3282  0291                     	;# 
  3283  0292                     	;# 
  3284  0292                     	;# 
  3285  0293                     	;# 
  3286  0293                     	;# 
  3287  0294                     	;# 
  3288  0295                     	;# 
  3289  0296                     	;# 
  3290  0296                     	;# 
  3291  0297                     	;# 
  3292  0298                     	;# 
  3293  0298                     	;# 
  3294  0299                     	;# 
  3295  0299                     	;# 
  3296  029A                     	;# 
  3297  029B                     	;# 
  3298  029C                     	;# 
  3299  029C                     	;# 
  3300  029D                     	;# 
  3301  030C                     	;# 
  3302  030C                     	;# 
  3303  030D                     	;# 
  3304  030E                     	;# 
  3305  030F                     	;# 
  3306  0310                     	;# 
  3307  0310                     	;# 
  3308  0311                     	;# 
  3309  0312                     	;# 
  3310  0313                     	;# 
  3311  0314                     	;# 
  3312  0314                     	;# 
  3313  0315                     	;# 
  3314  0316                     	;# 
  3315  0317                     	;# 
  3316  0318                     	;# 
  3317  0318                     	;# 
  3318  0319                     	;# 
  3319  031A                     	;# 
  3320  031B                     	;# 
  3321  031C                     	;# 
  3322  031C                     	;# 
  3323  031D                     	;# 
  3324  031E                     	;# 
  3325  031F                     	;# 
  3326  038C                     	;# 
  3327  038D                     	;# 
  3328  038E                     	;# 
  3329  0390                     	;# 
  3330  0391                     	;# 
  3331  0392                     	;# 
  3332  040C                     	;# 
  3333  040D                     	;# 
  3334  040E                     	;# 
  3335  040F                     	;# 
  3336  0410                     	;# 
  3337  0411                     	;# 
  3338  0416                     	;# 
  3339  0416                     	;# 
  3340  0417                     	;# 
  3341  0418                     	;# 
  3342  0418                     	;# 
  3343  0419                     	;# 
  3344  041A                     	;# 
  3345  041A                     	;# 
  3346  041B                     	;# 
  3347  041C                     	;# 
  3348  041C                     	;# 
  3349  041D                     	;# 
  3350  041E                     	;# 
  3351  041F                     	;# 
  3352  048C                     	;# 
  3353  048C                     	;# 
  3354  048D                     	;# 
  3355  048E                     	;# 
  3356  048F                     	;# 
  3357  048F                     	;# 
  3358  0490                     	;# 
  3359  0491                     	;# 
  3360  0492                     	;# 
  3361  0492                     	;# 
  3362  0493                     	;# 
  3363  0494                     	;# 
  3364  0495                     	;# 
  3365  0495                     	;# 
  3366  0496                     	;# 
  3367  0497                     	;# 
  3368  0498                     	;# 
  3369  0499                     	;# 
  3370  049A                     	;# 
  3371  049B                     	;# 
  3372  049C                     	;# 
  3373  049D                     	;# 
  3374  050C                     	;# 
  3375  050C                     	;# 
  3376  050D                     	;# 
  3377  050E                     	;# 
  3378  050F                     	;# 
  3379  050F                     	;# 
  3380  0510                     	;# 
  3381  0511                     	;# 
  3382  0512                     	;# 
  3383  0512                     	;# 
  3384  0513                     	;# 
  3385  0514                     	;# 
  3386  0515                     	;# 
  3387  0515                     	;# 
  3388  0516                     	;# 
  3389  0517                     	;# 
  3390  0518                     	;# 
  3391  0519                     	;# 
  3392  051A                     	;# 
  3393  051B                     	;# 
  3394  051C                     	;# 
  3395  051D                     	;# 
  3396  058C                     	;# 
  3397  058C                     	;# 
  3398  058D                     	;# 
  3399  058E                     	;# 
  3400  058F                     	;# 
  3401  058F                     	;# 
  3402  0590                     	;# 
  3403  0591                     	;# 
  3404  0592                     	;# 
  3405  0593                     	;# 
  3406  060C                     	;# 
  3407  060D                     	;# 
  3408  060E                     	;# 
  3409  060F                     	;# 
  3410  0610                     	;# 
  3411  0611                     	;# 
  3412  0612                     	;# 
  3413  0613                     	;# 
  3414  0614                     	;# 
  3415  0616                     	;# 
  3416  0617                     	;# 
  3417  0618                     	;# 
  3418  0619                     	;# 
  3419  061A                     	;# 
  3420  061B                     	;# 
  3421  061C                     	;# 
  3422  061D                     	;# 
  3423  061E                     	;# 
  3424  068C                     	;# 
  3425  068D                     	;# 
  3426  068E                     	;# 
  3427  068F                     	;# 
  3428  0690                     	;# 
  3429  0691                     	;# 
  3430  0692                     	;# 
  3431  0693                     	;# 
  3432  0694                     	;# 
  3433  070C                     	;# 
  3434  070D                     	;# 
  3435  070E                     	;# 
  3436  070F                     	;# 
  3437  0710                     	;# 
  3438  0711                     	;# 
  3439  0712                     	;# 
  3440  0713                     	;# 
  3441  0714                     	;# 
  3442  0716                     	;# 
  3443  0717                     	;# 
  3444  0718                     	;# 
  3445  0719                     	;# 
  3446  071A                     	;# 
  3447  071B                     	;# 
  3448  071C                     	;# 
  3449  071D                     	;# 
  3450  071E                     	;# 
  3451  0796                     	;# 
  3452  0797                     	;# 
  3453  0798                     	;# 
  3454  0799                     	;# 
  3455  079A                     	;# 
  3456  079B                     	;# 
  3457  080C                     	;# 
  3458  080D                     	;# 
  3459  080E                     	;# 
  3460  080F                     	;# 
  3461  0810                     	;# 
  3462  0811                     	;# 
  3463  0812                     	;# 
  3464  0813                     	;# 
  3465  0814                     	;# 
  3466  081A                     	;# 
  3467  081B                     	;# 
  3468  081C                     	;# 
  3469  081D                     	;# 
  3470  081E                     	;# 
  3471  081F                     	;# 
  3472  088C                     	;# 
  3473  088D                     	;# 
  3474  088E                     	;# 
  3475  088F                     	;# 
  3476  0890                     	;# 
  3477  0891                     	;# 
  3478  0892                     	;# 
  3479  0893                     	;# 
  3480  0895                     	;# 
  3481  0896                     	;# 
  3482  0897                     	;# 
  3483  0898                     	;# 
  3484  0899                     	;# 
  3485  089A                     	;# 
  3486  089B                     	;# 
  3487  090C                     	;# 
  3488  090E                     	;# 
  3489  090F                     	;# 
  3490  091F                     	;# 
  3491  091F                     	;# 
  3492  098F                     	;# 
  3493  098F                     	;# 
  3494  0990                     	;# 
  3495  0991                     	;# 
  3496  0992                     	;# 
  3497  0993                     	;# 
  3498  0994                     	;# 
  3499  0995                     	;# 
  3500  0996                     	;# 
  3501  0997                     	;# 
  3502  0E0F                     	;# 
  3503  0E10                     	;# 
  3504  0E11                     	;# 
  3505  0E12                     	;# 
  3506  0E13                     	;# 
  3507  0E14                     	;# 
  3508  0E15                     	;# 
  3509  0E16                     	;# 
  3510  0E17                     	;# 
  3511  0E18                     	;# 
  3512  0E19                     	;# 
  3513  0E1A                     	;# 
  3514  0E1B                     	;# 
  3515  0E1C                     	;# 
  3516  0E1D                     	;# 
  3517  0E1E                     	;# 
  3518  0E1F                     	;# 
  3519  0E20                     	;# 
  3520  0E21                     	;# 
  3521  0E22                     	;# 
  3522  0E23                     	;# 
  3523  0E24                     	;# 
  3524  0E25                     	;# 
  3525  0E26                     	;# 
  3526  0E27                     	;# 
  3527  0E28                     	;# 
  3528  0E29                     	;# 
  3529  0E2A                     	;# 
  3530  0E2B                     	;# 
  3531  0E2C                     	;# 
  3532  0E2D                     	;# 
  3533  0E2E                     	;# 
  3534  0E2F                     	;# 
  3535  0E30                     	;# 
  3536  0E31                     	;# 
  3537  0E32                     	;# 
  3538  0E33                     	;# 
  3539  0E34                     	;# 
  3540  0E35                     	;# 
  3541  0E36                     	;# 
  3542  0E37                     	;# 
  3543  0E8F                     	;# 
  3544  0E90                     	;# 
  3545  0E91                     	;# 
  3546  0E92                     	;# 
  3547  0E93                     	;# 
  3548  0E94                     	;# 
  3549  0E95                     	;# 
  3550  0E96                     	;# 
  3551  0E97                     	;# 
  3552  0E9C                     	;# 
  3553  0E9D                     	;# 
  3554  0E9E                     	;# 
  3555  0EA1                     	;# 
  3556  0EA2                     	;# 
  3557  0EA3                     	;# 
  3558  0EA4                     	;# 
  3559  0EA5                     	;# 
  3560  0EA9                     	;# 
  3561  0EAA                     	;# 
  3562  0EAB                     	;# 
  3563  0EAC                     	;# 
  3564  0EB1                     	;# 
  3565  0EB2                     	;# 
  3566  0EB3                     	;# 
  3567  0EB8                     	;# 
  3568  0EB9                     	;# 
  3569  0EBA                     	;# 
  3570  0EBB                     	;# 
  3571  0EBC                     	;# 
  3572  0EBD                     	;# 
  3573  0EBE                     	;# 
  3574  0EC3                     	;# 
  3575  0EC5                     	;# 
  3576  0EC6                     	;# 
  3577  0EC7                     	;# 
  3578  0EC8                     	;# 
  3579  0EC9                     	;# 
  3580  0ECA                     	;# 
  3581  0ECB                     	;# 
  3582  0ECC                     	;# 
  3583  0F10                     	;# 
  3584  0F11                     	;# 
  3585  0F12                     	;# 
  3586  0F13                     	;# 
  3587  0F14                     	;# 
  3588  0F15                     	;# 
  3589  0F16                     	;# 
  3590  0F17                     	;# 
  3591  0F18                     	;# 
  3592  0F19                     	;# 
  3593  0F1A                     	;# 
  3594  0F1B                     	;# 
  3595  0F1C                     	;# 
  3596  0F1D                     	;# 
  3597  0F1E                     	;# 
  3598  0F1F                     	;# 
  3599  0F20                     	;# 
  3600  0F21                     	;# 
  3601  0F22                     	;# 
  3602  0F23                     	;# 
  3603  0F24                     	;# 
  3604  0F25                     	;# 
  3605  0F26                     	;# 
  3606  0F27                     	;# 
  3607  0F38                     	;# 
  3608  0F39                     	;# 
  3609  0F3A                     	;# 
  3610  0F3B                     	;# 
  3611  0F3C                     	;# 
  3612  0F3D                     	;# 
  3613  0F3E                     	;# 
  3614  0F3F                     	;# 
  3615  0F40                     	;# 
  3616  0F41                     	;# 
  3617  0F43                     	;# 
  3618  0F44                     	;# 
  3619  0F45                     	;# 
  3620  0F46                     	;# 
  3621  0F47                     	;# 
  3622  0F48                     	;# 
  3623  0F49                     	;# 
  3624  0F4A                     	;# 
  3625  0F4B                     	;# 
  3626  0F4C                     	;# 
  3627  0F4E                     	;# 
  3628  0F4F                     	;# 
  3629  0F50                     	;# 
  3630  0F51                     	;# 
  3631  0F52                     	;# 
  3632  0F53                     	;# 
  3633  0F54                     	;# 
  3634  0F55                     	;# 
  3635  0F56                     	;# 
  3636  0F57                     	;# 
  3637  0F65                     	;# 
  3638  0F68                     	;# 
  3639  0F69                     	;# 
  3640  0F6A                     	;# 
  3641  0F6B                     	;# 
  3642  0FE4                     	;# 
  3643  0FE5                     	;# 
  3644  0FE6                     	;# 
  3645  0FE7                     	;# 
  3646  0FE8                     	;# 
  3647  0FE9                     	;# 
  3648  0FEA                     	;# 
  3649  0FEB                     	;# 
  3650  0FED                     	;# 
  3651  0FEE                     	;# 
  3652  0FEF                     	;# 
  3653  0000                     	;# 
  3654  0001                     	;# 
  3655  0002                     	;# 
  3656  0003                     	;# 
  3657  0004                     	;# 
  3658  0005                     	;# 
  3659  0006                     	;# 
  3660  0007                     	;# 
  3661  0008                     	;# 
  3662  0009                     	;# 
  3663  000A                     	;# 
  3664  000B                     	;# 
  3665  000C                     	;# 
  3666  000D                     	;# 
  3667  000E                     	;# 
  3668  0010                     	;# 
  3669  0011                     	;# 
  3670  0012                     	;# 
  3671  0013                     	;# 
  3672  0016                     	;# 
  3673  0017                     	;# 
  3674  0018                     	;# 
  3675  001C                     	;# 
  3676  001C                     	;# 
  3677  001D                     	;# 
  3678  001D                     	;# 
  3679  001E                     	;# 
  3680  001F                     	;# 
  3681  008C                     	;# 
  3682  008C                     	;# 
  3683  008D                     	;# 
  3684  008E                     	;# 
  3685  008E                     	;# 
  3686  008F                     	;# 
  3687  0090                     	;# 
  3688  0090                     	;# 
  3689  0091                     	;# 
  3690  0093                     	;# 
  3691  0094                     	;# 
  3692  0095                     	;# 
  3693  0096                     	;# 
  3694  0097                     	;# 
  3695  0098                     	;# 
  3696  0099                     	;# 
  3697  009A                     	;# 
  3698  009B                     	;# 
  3699  009C                     	;# 
  3700  009D                     	;# 
  3701  009E                     	;# 
  3702  010C                     	;# 
  3703  010D                     	;# 
  3704  010E                     	;# 
  3705  010E                     	;# 
  3706  010F                     	;# 
  3707  0110                     	;# 
  3708  0110                     	;# 
  3709  0111                     	;# 
  3710  0112                     	;# 
  3711  0112                     	;# 
  3712  0113                     	;# 
  3713  0114                     	;# 
  3714  0114                     	;# 
  3715  0115                     	;# 
  3716  0116                     	;# 
  3717  0116                     	;# 
  3718  0117                     	;# 
  3719  0119                     	;# 
  3720  0119                     	;# 
  3721  0119                     	;# 
  3722  011A                     	;# 
  3723  011A                     	;# 
  3724  011A                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011B                     	;# 
  3729  011B                     	;# 
  3730  011C                     	;# 
  3731  011C                     	;# 
  3732  011C                     	;# 
  3733  011D                     	;# 
  3734  011D                     	;# 
  3735  011D                     	;# 
  3736  011E                     	;# 
  3737  011E                     	;# 
  3738  011E                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  011F                     	;# 
  3743  011F                     	;# 
  3744  018C                     	;# 
  3745  018D                     	;# 
  3746  018E                     	;# 
  3747  018F                     	;# 
  3748  0190                     	;# 
  3749  0191                     	;# 
  3750  0192                     	;# 
  3751  0196                     	;# 
  3752  0197                     	;# 
  3753  0198                     	;# 
  3754  0199                     	;# 
  3755  019A                     	;# 
  3756  019B                     	;# 
  3757  019C                     	;# 
  3758  020C                     	;# 
  3759  020D                     	;# 
  3760  020E                     	;# 
  3761  020F                     	;# 
  3762  020F                     	;# 
  3763  0210                     	;# 
  3764  0210                     	;# 
  3765  0211                     	;# 
  3766  0211                     	;# 
  3767  0212                     	;# 
  3768  0213                     	;# 
  3769  0214                     	;# 
  3770  0215                     	;# 
  3771  0215                     	;# 
  3772  0216                     	;# 
  3773  0216                     	;# 
  3774  0217                     	;# 
  3775  0217                     	;# 
  3776  0218                     	;# 
  3777  0219                     	;# 
  3778  021A                     	;# 
  3779  021B                     	;# 
  3780  021B                     	;# 
  3781  021C                     	;# 
  3782  021C                     	;# 
  3783  021D                     	;# 
  3784  021D                     	;# 
  3785  021E                     	;# 
  3786  021F                     	;# 
  3787  028C                     	;# 
  3788  028C                     	;# 
  3789  028D                     	;# 
  3790  028D                     	;# 
  3791  028E                     	;# 
  3792  028F                     	;# 
  3793  0290                     	;# 
  3794  0290                     	;# 
  3795  0291                     	;# 
  3796  0292                     	;# 
  3797  0292                     	;# 
  3798  0293                     	;# 
  3799  0293                     	;# 
  3800  0294                     	;# 
  3801  0295                     	;# 
  3802  0296                     	;# 
  3803  0296                     	;# 
  3804  0297                     	;# 
  3805  0298                     	;# 
  3806  0298                     	;# 
  3807  0299                     	;# 
  3808  0299                     	;# 
  3809  029A                     	;# 
  3810  029B                     	;# 
  3811  029C                     	;# 
  3812  029C                     	;# 
  3813  029D                     	;# 
  3814  030C                     	;# 
  3815  030C                     	;# 
  3816  030D                     	;# 
  3817  030E                     	;# 
  3818  030F                     	;# 
  3819  0310                     	;# 
  3820  0310                     	;# 
  3821  0311                     	;# 
  3822  0312                     	;# 
  3823  0313                     	;# 
  3824  0314                     	;# 
  3825  0314                     	;# 
  3826  0315                     	;# 
  3827  0316                     	;# 
  3828  0317                     	;# 
  3829  0318                     	;# 
  3830  0318                     	;# 
  3831  0319                     	;# 
  3832  031A                     	;# 
  3833  031B                     	;# 
  3834  031C                     	;# 
  3835  031C                     	;# 
  3836  031D                     	;# 
  3837  031E                     	;# 
  3838  031F                     	;# 
  3839  038C                     	;# 
  3840  038D                     	;# 
  3841  038E                     	;# 
  3842  0390                     	;# 
  3843  0391                     	;# 
  3844  0392                     	;# 
  3845  040C                     	;# 
  3846  040D                     	;# 
  3847  040E                     	;# 
  3848  040F                     	;# 
  3849  0410                     	;# 
  3850  0411                     	;# 
  3851  0416                     	;# 
  3852  0416                     	;# 
  3853  0417                     	;# 
  3854  0418                     	;# 
  3855  0418                     	;# 
  3856  0419                     	;# 
  3857  041A                     	;# 
  3858  041A                     	;# 
  3859  041B                     	;# 
  3860  041C                     	;# 
  3861  041C                     	;# 
  3862  041D                     	;# 
  3863  041E                     	;# 
  3864  041F                     	;# 
  3865  048C                     	;# 
  3866  048C                     	;# 
  3867  048D                     	;# 
  3868  048E                     	;# 
  3869  048F                     	;# 
  3870  048F                     	;# 
  3871  0490                     	;# 
  3872  0491                     	;# 
  3873  0492                     	;# 
  3874  0492                     	;# 
  3875  0493                     	;# 
  3876  0494                     	;# 
  3877  0495                     	;# 
  3878  0495                     	;# 
  3879  0496                     	;# 
  3880  0497                     	;# 
  3881  0498                     	;# 
  3882  0499                     	;# 
  3883  049A                     	;# 
  3884  049B                     	;# 
  3885  049C                     	;# 
  3886  049D                     	;# 
  3887  050C                     	;# 
  3888  050C                     	;# 
  3889  050D                     	;# 
  3890  050E                     	;# 
  3891  050F                     	;# 
  3892  050F                     	;# 
  3893  0510                     	;# 
  3894  0511                     	;# 
  3895  0512                     	;# 
  3896  0512                     	;# 
  3897  0513                     	;# 
  3898  0514                     	;# 
  3899  0515                     	;# 
  3900  0515                     	;# 
  3901  0516                     	;# 
  3902  0517                     	;# 
  3903  0518                     	;# 
  3904  0519                     	;# 
  3905  051A                     	;# 
  3906  051B                     	;# 
  3907  051C                     	;# 
  3908  051D                     	;# 
  3909  058C                     	;# 
  3910  058C                     	;# 
  3911  058D                     	;# 
  3912  058E                     	;# 
  3913  058F                     	;# 
  3914  058F                     	;# 
  3915  0590                     	;# 
  3916  0591                     	;# 
  3917  0592                     	;# 
  3918  0593                     	;# 
  3919  060C                     	;# 
  3920  060D                     	;# 
  3921  060E                     	;# 
  3922  060F                     	;# 
  3923  0610                     	;# 
  3924  0611                     	;# 
  3925  0612                     	;# 
  3926  0613                     	;# 
  3927  0614                     	;# 
  3928  0616                     	;# 
  3929  0617                     	;# 
  3930  0618                     	;# 
  3931  0619                     	;# 
  3932  061A                     	;# 
  3933  061B                     	;# 
  3934  061C                     	;# 
  3935  061D                     	;# 
  3936  061E                     	;# 
  3937  068C                     	;# 
  3938  068D                     	;# 
  3939  068E                     	;# 
  3940  068F                     	;# 
  3941  0690                     	;# 
  3942  0691                     	;# 
  3943  0692                     	;# 
  3944  0693                     	;# 
  3945  0694                     	;# 
  3946  070C                     	;# 
  3947  070D                     	;# 
  3948  070E                     	;# 
  3949  070F                     	;# 
  3950  0710                     	;# 
  3951  0711                     	;# 
  3952  0712                     	;# 
  3953  0713                     	;# 
  3954  0714                     	;# 
  3955  0716                     	;# 
  3956  0717                     	;# 
  3957  0718                     	;# 
  3958  0719                     	;# 
  3959  071A                     	;# 
  3960  071B                     	;# 
  3961  071C                     	;# 
  3962  071D                     	;# 
  3963  071E                     	;# 
  3964  0796                     	;# 
  3965  0797                     	;# 
  3966  0798                     	;# 
  3967  0799                     	;# 
  3968  079A                     	;# 
  3969  079B                     	;# 
  3970  080C                     	;# 
  3971  080D                     	;# 
  3972  080E                     	;# 
  3973  080F                     	;# 
  3974  0810                     	;# 
  3975  0811                     	;# 
  3976  0812                     	;# 
  3977  0813                     	;# 
  3978  0814                     	;# 
  3979  081A                     	;# 
  3980  081B                     	;# 
  3981  081C                     	;# 
  3982  081D                     	;# 
  3983  081E                     	;# 
  3984  081F                     	;# 
  3985  088C                     	;# 
  3986  088D                     	;# 
  3987  088E                     	;# 
  3988  088F                     	;# 
  3989  0890                     	;# 
  3990  0891                     	;# 
  3991  0892                     	;# 
  3992  0893                     	;# 
  3993  0895                     	;# 
  3994  0896                     	;# 
  3995  0897                     	;# 
  3996  0898                     	;# 
  3997  0899                     	;# 
  3998  089A                     	;# 
  3999  089B                     	;# 
  4000  090C                     	;# 
  4001  090E                     	;# 
  4002  090F                     	;# 
  4003  091F                     	;# 
  4004  091F                     	;# 
  4005  098F                     	;# 
  4006  098F                     	;# 
  4007  0990                     	;# 
  4008  0991                     	;# 
  4009  0992                     	;# 
  4010  0993                     	;# 
  4011  0994                     	;# 
  4012  0995                     	;# 
  4013  0996                     	;# 
  4014  0997                     	;# 
  4015  0E0F                     	;# 
  4016  0E10                     	;# 
  4017  0E11                     	;# 
  4018  0E12                     	;# 
  4019  0E13                     	;# 
  4020  0E14                     	;# 
  4021  0E15                     	;# 
  4022  0E16                     	;# 
  4023  0E17                     	;# 
  4024  0E18                     	;# 
  4025  0E19                     	;# 
  4026  0E1A                     	;# 
  4027  0E1B                     	;# 
  4028  0E1C                     	;# 
  4029  0E1D                     	;# 
  4030  0E1E                     	;# 
  4031  0E1F                     	;# 
  4032  0E20                     	;# 
  4033  0E21                     	;# 
  4034  0E22                     	;# 
  4035  0E23                     	;# 
  4036  0E24                     	;# 
  4037  0E25                     	;# 
  4038  0E26                     	;# 
  4039  0E27                     	;# 
  4040  0E28                     	;# 
  4041  0E29                     	;# 
  4042  0E2A                     	;# 
  4043  0E2B                     	;# 
  4044  0E2C                     	;# 
  4045  0E2D                     	;# 
  4046  0E2E                     	;# 
  4047  0E2F                     	;# 
  4048  0E30                     	;# 
  4049  0E31                     	;# 
  4050  0E32                     	;# 
  4051  0E33                     	;# 
  4052  0E34                     	;# 
  4053  0E35                     	;# 
  4054  0E36                     	;# 
  4055  0E37                     	;# 
  4056  0E8F                     	;# 
  4057  0E90                     	;# 
  4058  0E91                     	;# 
  4059  0E92                     	;# 
  4060  0E93                     	;# 
  4061  0E94                     	;# 
  4062  0E95                     	;# 
  4063  0E96                     	;# 
  4064  0E97                     	;# 
  4065  0E9C                     	;# 
  4066  0E9D                     	;# 
  4067  0E9E                     	;# 
  4068  0EA1                     	;# 
  4069  0EA2                     	;# 
  4070  0EA3                     	;# 
  4071  0EA4                     	;# 
  4072  0EA5                     	;# 
  4073  0EA9                     	;# 
  4074  0EAA                     	;# 
  4075  0EAB                     	;# 
  4076  0EAC                     	;# 
  4077  0EB1                     	;# 
  4078  0EB2                     	;# 
  4079  0EB3                     	;# 
  4080  0EB8                     	;# 
  4081  0EB9                     	;# 
  4082  0EBA                     	;# 
  4083  0EBB                     	;# 
  4084  0EBC                     	;# 
  4085  0EBD                     	;# 
  4086  0EBE                     	;# 
  4087  0EC3                     	;# 
  4088  0EC5                     	;# 
  4089  0EC6                     	;# 
  4090  0EC7                     	;# 
  4091  0EC8                     	;# 
  4092  0EC9                     	;# 
  4093  0ECA                     	;# 
  4094  0ECB                     	;# 
  4095  0ECC                     	;# 
  4096  0F10                     	;# 
  4097  0F11                     	;# 
  4098  0F12                     	;# 
  4099  0F13                     	;# 
  4100  0F14                     	;# 
  4101  0F15                     	;# 
  4102  0F16                     	;# 
  4103  0F17                     	;# 
  4104  0F18                     	;# 
  4105  0F19                     	;# 
  4106  0F1A                     	;# 
  4107  0F1B                     	;# 
  4108  0F1C                     	;# 
  4109  0F1D                     	;# 
  4110  0F1E                     	;# 
  4111  0F1F                     	;# 
  4112  0F20                     	;# 
  4113  0F21                     	;# 
  4114  0F22                     	;# 
  4115  0F23                     	;# 
  4116  0F24                     	;# 
  4117  0F25                     	;# 
  4118  0F26                     	;# 
  4119  0F27                     	;# 
  4120  0F38                     	;# 
  4121  0F39                     	;# 
  4122  0F3A                     	;# 
  4123  0F3B                     	;# 
  4124  0F3C                     	;# 
  4125  0F3D                     	;# 
  4126  0F3E                     	;# 
  4127  0F3F                     	;# 
  4128  0F40                     	;# 
  4129  0F41                     	;# 
  4130  0F43                     	;# 
  4131  0F44                     	;# 
  4132  0F45                     	;# 
  4133  0F46                     	;# 
  4134  0F47                     	;# 
  4135  0F48                     	;# 
  4136  0F49                     	;# 
  4137  0F4A                     	;# 
  4138  0F4B                     	;# 
  4139  0F4C                     	;# 
  4140  0F4E                     	;# 
  4141  0F4F                     	;# 
  4142  0F50                     	;# 
  4143  0F51                     	;# 
  4144  0F52                     	;# 
  4145  0F53                     	;# 
  4146  0F54                     	;# 
  4147  0F55                     	;# 
  4148  0F56                     	;# 
  4149  0F57                     	;# 
  4150  0F65                     	;# 
  4151  0F68                     	;# 
  4152  0F69                     	;# 
  4153  0F6A                     	;# 
  4154  0F6B                     	;# 
  4155  0FE4                     	;# 
  4156  0FE5                     	;# 
  4157  0FE6                     	;# 
  4158  0FE7                     	;# 
  4159  0FE8                     	;# 
  4160  0FE9                     	;# 
  4161  0FEA                     	;# 
  4162  0FEB                     	;# 
  4163  0FED                     	;# 
  4164  0FEE                     	;# 
  4165  0FEF                     	;# 
  4166  0000                     	;# 
  4167  0001                     	;# 
  4168  0002                     	;# 
  4169  0003                     	;# 
  4170  0004                     	;# 
  4171  0005                     	;# 
  4172  0006                     	;# 
  4173  0007                     	;# 
  4174  0008                     	;# 
  4175  0009                     	;# 
  4176  000A                     	;# 
  4177  000B                     	;# 
  4178  000C                     	;# 
  4179  000D                     	;# 
  4180  000E                     	;# 
  4181  0010                     	;# 
  4182  0011                     	;# 
  4183  0012                     	;# 
  4184  0013                     	;# 
  4185  0016                     	;# 
  4186  0017                     	;# 
  4187  0018                     	;# 
  4188  001C                     	;# 
  4189  001C                     	;# 
  4190  001D                     	;# 
  4191  001D                     	;# 
  4192  001E                     	;# 
  4193  001F                     	;# 
  4194  008C                     	;# 
  4195  008C                     	;# 
  4196  008D                     	;# 
  4197  008E                     	;# 
  4198  008E                     	;# 
  4199  008F                     	;# 
  4200  0090                     	;# 
  4201  0090                     	;# 
  4202  0091                     	;# 
  4203  0093                     	;# 
  4204  0094                     	;# 
  4205  0095                     	;# 
  4206  0096                     	;# 
  4207  0097                     	;# 
  4208  0098                     	;# 
  4209  0099                     	;# 
  4210  009A                     	;# 
  4211  009B                     	;# 
  4212  009C                     	;# 
  4213  009D                     	;# 
  4214  009E                     	;# 
  4215  010C                     	;# 
  4216  010D                     	;# 
  4217  010E                     	;# 
  4218  010E                     	;# 
  4219  010F                     	;# 
  4220  0110                     	;# 
  4221  0110                     	;# 
  4222  0111                     	;# 
  4223  0112                     	;# 
  4224  0112                     	;# 
  4225  0113                     	;# 
  4226  0114                     	;# 
  4227  0114                     	;# 
  4228  0115                     	;# 
  4229  0116                     	;# 
  4230  0116                     	;# 
  4231  0117                     	;# 
  4232  0119                     	;# 
  4233  0119                     	;# 
  4234  0119                     	;# 
  4235  011A                     	;# 
  4236  011A                     	;# 
  4237  011A                     	;# 
  4238  011B                     	;# 
  4239  011B                     	;# 
  4240  011B                     	;# 
  4241  011B                     	;# 
  4242  011B                     	;# 
  4243  011C                     	;# 
  4244  011C                     	;# 
  4245  011C                     	;# 
  4246  011D                     	;# 
  4247  011D                     	;# 
  4248  011D                     	;# 
  4249  011E                     	;# 
  4250  011E                     	;# 
  4251  011E                     	;# 
  4252  011F                     	;# 
  4253  011F                     	;# 
  4254  011F                     	;# 
  4255  011F                     	;# 
  4256  011F                     	;# 
  4257  018C                     	;# 
  4258  018D                     	;# 
  4259  018E                     	;# 
  4260  018F                     	;# 
  4261  0190                     	;# 
  4262  0191                     	;# 
  4263  0192                     	;# 
  4264  0196                     	;# 
  4265  0197                     	;# 
  4266  0198                     	;# 
  4267  0199                     	;# 
  4268  019A                     	;# 
  4269  019B                     	;# 
  4270  019C                     	;# 
  4271  020C                     	;# 
  4272  020D                     	;# 
  4273  020E                     	;# 
  4274  020F                     	;# 
  4275  020F                     	;# 
  4276  0210                     	;# 
  4277  0210                     	;# 
  4278  0211                     	;# 
  4279  0211                     	;# 
  4280  0212                     	;# 
  4281  0213                     	;# 
  4282  0214                     	;# 
  4283  0215                     	;# 
  4284  0215                     	;# 
  4285  0216                     	;# 
  4286  0216                     	;# 
  4287  0217                     	;# 
  4288  0217                     	;# 
  4289  0218                     	;# 
  4290  0219                     	;# 
  4291  021A                     	;# 
  4292  021B                     	;# 
  4293  021B                     	;# 
  4294  021C                     	;# 
  4295  021C                     	;# 
  4296  021D                     	;# 
  4297  021D                     	;# 
  4298  021E                     	;# 
  4299  021F                     	;# 
  4300  028C                     	;# 
  4301  028C                     	;# 
  4302  028D                     	;# 
  4303  028D                     	;# 
  4304  028E                     	;# 
  4305  028F                     	;# 
  4306  0290                     	;# 
  4307  0290                     	;# 
  4308  0291                     	;# 
  4309  0292                     	;# 
  4310  0292                     	;# 
  4311  0293                     	;# 
  4312  0293                     	;# 
  4313  0294                     	;# 
  4314  0295                     	;# 
  4315  0296                     	;# 
  4316  0296                     	;# 
  4317  0297                     	;# 
  4318  0298                     	;# 
  4319  0298                     	;# 
  4320  0299                     	;# 
  4321  0299                     	;# 
  4322  029A                     	;# 
  4323  029B                     	;# 
  4324  029C                     	;# 
  4325  029C                     	;# 
  4326  029D                     	;# 
  4327  030C                     	;# 
  4328  030C                     	;# 
  4329  030D                     	;# 
  4330  030E                     	;# 
  4331  030F                     	;# 
  4332  0310                     	;# 
  4333  0310                     	;# 
  4334  0311                     	;# 
  4335  0312                     	;# 
  4336  0313                     	;# 
  4337  0314                     	;# 
  4338  0314                     	;# 
  4339  0315                     	;# 
  4340  0316                     	;# 
  4341  0317                     	;# 
  4342  0318                     	;# 
  4343  0318                     	;# 
  4344  0319                     	;# 
  4345  031A                     	;# 
  4346  031B                     	;# 
  4347  031C                     	;# 
  4348  031C                     	;# 
  4349  031D                     	;# 
  4350  031E                     	;# 
  4351  031F                     	;# 
  4352  038C                     	;# 
  4353  038D                     	;# 
  4354  038E                     	;# 
  4355  0390                     	;# 
  4356  0391                     	;# 
  4357  0392                     	;# 
  4358  040C                     	;# 
  4359  040D                     	;# 
  4360  040E                     	;# 
  4361  040F                     	;# 
  4362  0410                     	;# 
  4363  0411                     	;# 
  4364  0416                     	;# 
  4365  0416                     	;# 
  4366  0417                     	;# 
  4367  0418                     	;# 
  4368  0418                     	;# 
  4369  0419                     	;# 
  4370  041A                     	;# 
  4371  041A                     	;# 
  4372  041B                     	;# 
  4373  041C                     	;# 
  4374  041C                     	;# 
  4375  041D                     	;# 
  4376  041E                     	;# 
  4377  041F                     	;# 
  4378  048C                     	;# 
  4379  048C                     	;# 
  4380  048D                     	;# 
  4381  048E                     	;# 
  4382  048F                     	;# 
  4383  048F                     	;# 
  4384  0490                     	;# 
  4385  0491                     	;# 
  4386  0492                     	;# 
  4387  0492                     	;# 
  4388  0493                     	;# 
  4389  0494                     	;# 
  4390  0495                     	;# 
  4391  0495                     	;# 
  4392  0496                     	;# 
  4393  0497                     	;# 
  4394  0498                     	;# 
  4395  0499                     	;# 
  4396  049A                     	;# 
  4397  049B                     	;# 
  4398  049C                     	;# 
  4399  049D                     	;# 
  4400  050C                     	;# 
  4401  050C                     	;# 
  4402  050D                     	;# 
  4403  050E                     	;# 
  4404  050F                     	;# 
  4405  050F                     	;# 
  4406  0510                     	;# 
  4407  0511                     	;# 
  4408  0512                     	;# 
  4409  0512                     	;# 
  4410  0513                     	;# 
  4411  0514                     	;# 
  4412  0515                     	;# 
  4413  0515                     	;# 
  4414  0516                     	;# 
  4415  0517                     	;# 
  4416  0518                     	;# 
  4417  0519                     	;# 
  4418  051A                     	;# 
  4419  051B                     	;# 
  4420  051C                     	;# 
  4421  051D                     	;# 
  4422  058C                     	;# 
  4423  058C                     	;# 
  4424  058D                     	;# 
  4425  058E                     	;# 
  4426  058F                     	;# 
  4427  058F                     	;# 
  4428  0590                     	;# 
  4429  0591                     	;# 
  4430  0592                     	;# 
  4431  0593                     	;# 
  4432  060C                     	;# 
  4433  060D                     	;# 
  4434  060E                     	;# 
  4435  060F                     	;# 
  4436  0610                     	;# 
  4437  0611                     	;# 
  4438  0612                     	;# 
  4439  0613                     	;# 
  4440  0614                     	;# 
  4441  0616                     	;# 
  4442  0617                     	;# 
  4443  0618                     	;# 
  4444  0619                     	;# 
  4445  061A                     	;# 
  4446  061B                     	;# 
  4447  061C                     	;# 
  4448  061D                     	;# 
  4449  061E                     	;# 
  4450  068C                     	;# 
  4451  068D                     	;# 
  4452  068E                     	;# 
  4453  068F                     	;# 
  4454  0690                     	;# 
  4455  0691                     	;# 
  4456  0692                     	;# 
  4457  0693                     	;# 
  4458  0694                     	;# 
  4459  070C                     	;# 
  4460  070D                     	;# 
  4461  070E                     	;# 
  4462  070F                     	;# 
  4463  0710                     	;# 
  4464  0711                     	;# 
  4465  0712                     	;# 
  4466  0713                     	;# 
  4467  0714                     	;# 
  4468  0716                     	;# 
  4469  0717                     	;# 
  4470  0718                     	;# 
  4471  0719                     	;# 
  4472  071A                     	;# 
  4473  071B                     	;# 
  4474  071C                     	;# 
  4475  071D                     	;# 
  4476  071E                     	;# 
  4477  0796                     	;# 
  4478  0797                     	;# 
  4479  0798                     	;# 
  4480  0799                     	;# 
  4481  079A                     	;# 
  4482  079B                     	;# 
  4483  080C                     	;# 
  4484  080D                     	;# 
  4485  080E                     	;# 
  4486  080F                     	;# 
  4487  0810                     	;# 
  4488  0811                     	;# 
  4489  0812                     	;# 
  4490  0813                     	;# 
  4491  0814                     	;# 
  4492  081A                     	;# 
  4493  081B                     	;# 
  4494  081C                     	;# 
  4495  081D                     	;# 
  4496  081E                     	;# 
  4497  081F                     	;# 
  4498  088C                     	;# 
  4499  088D                     	;# 
  4500  088E                     	;# 
  4501  088F                     	;# 
  4502  0890                     	;# 
  4503  0891                     	;# 
  4504  0892                     	;# 
  4505  0893                     	;# 
  4506  0895                     	;# 
  4507  0896                     	;# 
  4508  0897                     	;# 
  4509  0898                     	;# 
  4510  0899                     	;# 
  4511  089A                     	;# 
  4512  089B                     	;# 
  4513  090C                     	;# 
  4514  090E                     	;# 
  4515  090F                     	;# 
  4516  091F                     	;# 
  4517  091F                     	;# 
  4518  098F                     	;# 
  4519  098F                     	;# 
  4520  0990                     	;# 
  4521  0991                     	;# 
  4522  0992                     	;# 
  4523  0993                     	;# 
  4524  0994                     	;# 
  4525  0995                     	;# 
  4526  0996                     	;# 
  4527  0997                     	;# 
  4528  0E0F                     	;# 
  4529  0E10                     	;# 
  4530  0E11                     	;# 
  4531  0E12                     	;# 
  4532  0E13                     	;# 
  4533  0E14                     	;# 
  4534  0E15                     	;# 
  4535  0E16                     	;# 
  4536  0E17                     	;# 
  4537  0E18                     	;# 
  4538  0E19                     	;# 
  4539  0E1A                     	;# 
  4540  0E1B                     	;# 
  4541  0E1C                     	;# 
  4542  0E1D                     	;# 
  4543  0E1E                     	;# 
  4544  0E1F                     	;# 
  4545  0E20                     	;# 
  4546  0E21                     	;# 
  4547  0E22                     	;# 
  4548  0E23                     	;# 
  4549  0E24                     	;# 
  4550  0E25                     	;# 
  4551  0E26                     	;# 
  4552  0E27                     	;# 
  4553  0E28                     	;# 
  4554  0E29                     	;# 
  4555  0E2A                     	;# 
  4556  0E2B                     	;# 
  4557  0E2C                     	;# 
  4558  0E2D                     	;# 
  4559  0E2E                     	;# 
  4560  0E2F                     	;# 
  4561  0E30                     	;# 
  4562  0E31                     	;# 
  4563  0E32                     	;# 
  4564  0E33                     	;# 
  4565  0E34                     	;# 
  4566  0E35                     	;# 
  4567  0E36                     	;# 
  4568  0E37                     	;# 
  4569  0E8F                     	;# 
  4570  0E90                     	;# 
  4571  0E91                     	;# 
  4572  0E92                     	;# 
  4573  0E93                     	;# 
  4574  0E94                     	;# 
  4575  0E95                     	;# 
  4576  0E96                     	;# 
  4577  0E97                     	;# 
  4578  0E9C                     	;# 
  4579  0E9D                     	;# 
  4580  0E9E                     	;# 
  4581  0EA1                     	;# 
  4582  0EA2                     	;# 
  4583  0EA3                     	;# 
  4584  0EA4                     	;# 
  4585  0EA5                     	;# 
  4586  0EA9                     	;# 
  4587  0EAA                     	;# 
  4588  0EAB                     	;# 
  4589  0EAC                     	;# 
  4590  0EB1                     	;# 
  4591  0EB2                     	;# 
  4592  0EB3                     	;# 
  4593  0EB8                     	;# 
  4594  0EB9                     	;# 
  4595  0EBA                     	;# 
  4596  0EBB                     	;# 
  4597  0EBC                     	;# 
  4598  0EBD                     	;# 
  4599  0EBE                     	;# 
  4600  0EC3                     	;# 
  4601  0EC5                     	;# 
  4602  0EC6                     	;# 
  4603  0EC7                     	;# 
  4604  0EC8                     	;# 
  4605  0EC9                     	;# 
  4606  0ECA                     	;# 
  4607  0ECB                     	;# 
  4608  0ECC                     	;# 
  4609  0F10                     	;# 
  4610  0F11                     	;# 
  4611  0F12                     	;# 
  4612  0F13                     	;# 
  4613  0F14                     	;# 
  4614  0F15                     	;# 
  4615  0F16                     	;# 
  4616  0F17                     	;# 
  4617  0F18                     	;# 
  4618  0F19                     	;# 
  4619  0F1A                     	;# 
  4620  0F1B                     	;# 
  4621  0F1C                     	;# 
  4622  0F1D                     	;# 
  4623  0F1E                     	;# 
  4624  0F1F                     	;# 
  4625  0F20                     	;# 
  4626  0F21                     	;# 
  4627  0F22                     	;# 
  4628  0F23                     	;# 
  4629  0F24                     	;# 
  4630  0F25                     	;# 
  4631  0F26                     	;# 
  4632  0F27                     	;# 
  4633  0F38                     	;# 
  4634  0F39                     	;# 
  4635  0F3A                     	;# 
  4636  0F3B                     	;# 
  4637  0F3C                     	;# 
  4638  0F3D                     	;# 
  4639  0F3E                     	;# 
  4640  0F3F                     	;# 
  4641  0F40                     	;# 
  4642  0F41                     	;# 
  4643  0F43                     	;# 
  4644  0F44                     	;# 
  4645  0F45                     	;# 
  4646  0F46                     	;# 
  4647  0F47                     	;# 
  4648  0F48                     	;# 
  4649  0F49                     	;# 
  4650  0F4A                     	;# 
  4651  0F4B                     	;# 
  4652  0F4C                     	;# 
  4653  0F4E                     	;# 
  4654  0F4F                     	;# 
  4655  0F50                     	;# 
  4656  0F51                     	;# 
  4657  0F52                     	;# 
  4658  0F53                     	;# 
  4659  0F54                     	;# 
  4660  0F55                     	;# 
  4661  0F56                     	;# 
  4662  0F57                     	;# 
  4663  0F65                     	;# 
  4664  0F68                     	;# 
  4665  0F69                     	;# 
  4666  0F6A                     	;# 
  4667  0F6B                     	;# 
  4668  0FE4                     	;# 
  4669  0FE5                     	;# 
  4670  0FE6                     	;# 
  4671  0FE7                     	;# 
  4672  0FE8                     	;# 
  4673  0FE9                     	;# 
  4674  0FEA                     	;# 
  4675  0FEB                     	;# 
  4676  0FED                     	;# 
  4677  0FEE                     	;# 
  4678  0FEF                     	;# 
  4679  0000                     	;# 
  4680  0001                     	;# 
  4681  0002                     	;# 
  4682  0003                     	;# 
  4683  0004                     	;# 
  4684  0005                     	;# 
  4685  0006                     	;# 
  4686  0007                     	;# 
  4687  0008                     	;# 
  4688  0009                     	;# 
  4689  000A                     	;# 
  4690  000B                     	;# 
  4691  000C                     	;# 
  4692  000D                     	;# 
  4693  000E                     	;# 
  4694  0010                     	;# 
  4695  0011                     	;# 
  4696  0012                     	;# 
  4697  0013                     	;# 
  4698  0016                     	;# 
  4699  0017                     	;# 
  4700  0018                     	;# 
  4701  001C                     	;# 
  4702  001C                     	;# 
  4703  001D                     	;# 
  4704  001D                     	;# 
  4705  001E                     	;# 
  4706  001F                     	;# 
  4707  008C                     	;# 
  4708  008C                     	;# 
  4709  008D                     	;# 
  4710  008E                     	;# 
  4711  008E                     	;# 
  4712  008F                     	;# 
  4713  0090                     	;# 
  4714  0090                     	;# 
  4715  0091                     	;# 
  4716  0093                     	;# 
  4717  0094                     	;# 
  4718  0095                     	;# 
  4719  0096                     	;# 
  4720  0097                     	;# 
  4721  0098                     	;# 
  4722  0099                     	;# 
  4723  009A                     	;# 
  4724  009B                     	;# 
  4725  009C                     	;# 
  4726  009D                     	;# 
  4727  009E                     	;# 
  4728  010C                     	;# 
  4729  010D                     	;# 
  4730  010E                     	;# 
  4731  010E                     	;# 
  4732  010F                     	;# 
  4733  0110                     	;# 
  4734  0110                     	;# 
  4735  0111                     	;# 
  4736  0112                     	;# 
  4737  0112                     	;# 
  4738  0113                     	;# 
  4739  0114                     	;# 
  4740  0114                     	;# 
  4741  0115                     	;# 
  4742  0116                     	;# 
  4743  0116                     	;# 
  4744  0117                     	;# 
  4745  0119                     	;# 
  4746  0119                     	;# 
  4747  0119                     	;# 
  4748  011A                     	;# 
  4749  011A                     	;# 
  4750  011A                     	;# 
  4751  011B                     	;# 
  4752  011B                     	;# 
  4753  011B                     	;# 
  4754  011B                     	;# 
  4755  011B                     	;# 
  4756  011C                     	;# 
  4757  011C                     	;# 
  4758  011C                     	;# 
  4759  011D                     	;# 
  4760  011D                     	;# 
  4761  011D                     	;# 
  4762  011E                     	;# 
  4763  011E                     	;# 
  4764  011E                     	;# 
  4765  011F                     	;# 
  4766  011F                     	;# 
  4767  011F                     	;# 
  4768  011F                     	;# 
  4769  011F                     	;# 
  4770  018C                     	;# 
  4771  018D                     	;# 
  4772  018E                     	;# 
  4773  018F                     	;# 
  4774  0190                     	;# 
  4775  0191                     	;# 
  4776  0192                     	;# 
  4777  0196                     	;# 
  4778  0197                     	;# 
  4779  0198                     	;# 
  4780  0199                     	;# 
  4781  019A                     	;# 
  4782  019B                     	;# 
  4783  019C                     	;# 
  4784  020C                     	;# 
  4785  020D                     	;# 
  4786  020E                     	;# 
  4787  020F                     	;# 
  4788  020F                     	;# 
  4789  0210                     	;# 
  4790  0210                     	;# 
  4791  0211                     	;# 
  4792  0211                     	;# 
  4793  0212                     	;# 
  4794  0213                     	;# 
  4795  0214                     	;# 
  4796  0215                     	;# 
  4797  0215                     	;# 
  4798  0216                     	;# 
  4799  0216                     	;# 
  4800  0217                     	;# 
  4801  0217                     	;# 
  4802  0218                     	;# 
  4803  0219                     	;# 
  4804  021A                     	;# 
  4805  021B                     	;# 
  4806  021B                     	;# 
  4807  021C                     	;# 
  4808  021C                     	;# 
  4809  021D                     	;# 
  4810  021D                     	;# 
  4811  021E                     	;# 
  4812  021F                     	;# 
  4813  028C                     	;# 
  4814  028C                     	;# 
  4815  028D                     	;# 
  4816  028D                     	;# 
  4817  028E                     	;# 
  4818  028F                     	;# 
  4819  0290                     	;# 
  4820  0290                     	;# 
  4821  0291                     	;# 
  4822  0292                     	;# 
  4823  0292                     	;# 
  4824  0293                     	;# 
  4825  0293                     	;# 
  4826  0294                     	;# 
  4827  0295                     	;# 
  4828  0296                     	;# 
  4829  0296                     	;# 
  4830  0297                     	;# 
  4831  0298                     	;# 
  4832  0298                     	;# 
  4833  0299                     	;# 
  4834  0299                     	;# 
  4835  029A                     	;# 
  4836  029B                     	;# 
  4837  029C                     	;# 
  4838  029C                     	;# 
  4839  029D                     	;# 
  4840  030C                     	;# 
  4841  030C                     	;# 
  4842  030D                     	;# 
  4843  030E                     	;# 
  4844  030F                     	;# 
  4845  0310                     	;# 
  4846  0310                     	;# 
  4847  0311                     	;# 
  4848  0312                     	;# 
  4849  0313                     	;# 
  4850  0314                     	;# 
  4851  0314                     	;# 
  4852  0315                     	;# 
  4853  0316                     	;# 
  4854  0317                     	;# 
  4855  0318                     	;# 
  4856  0318                     	;# 
  4857  0319                     	;# 
  4858  031A                     	;# 
  4859  031B                     	;# 
  4860  031C                     	;# 
  4861  031C                     	;# 
  4862  031D                     	;# 
  4863  031E                     	;# 
  4864  031F                     	;# 
  4865  038C                     	;# 
  4866  038D                     	;# 
  4867  038E                     	;# 
  4868  0390                     	;# 
  4869  0391                     	;# 
  4870  0392                     	;# 
  4871  040C                     	;# 
  4872  040D                     	;# 
  4873  040E                     	;# 
  4874  040F                     	;# 
  4875  0410                     	;# 
  4876  0411                     	;# 
  4877  0416                     	;# 
  4878  0416                     	;# 
  4879  0417                     	;# 
  4880  0418                     	;# 
  4881  0418                     	;# 
  4882  0419                     	;# 
  4883  041A                     	;# 
  4884  041A                     	;# 
  4885  041B                     	;# 
  4886  041C                     	;# 
  4887  041C                     	;# 
  4888  041D                     	;# 
  4889  041E                     	;# 
  4890  041F                     	;# 
  4891  048C                     	;# 
  4892  048C                     	;# 
  4893  048D                     	;# 
  4894  048E                     	;# 
  4895  048F                     	;# 
  4896  048F                     	;# 
  4897  0490                     	;# 
  4898  0491                     	;# 
  4899  0492                     	;# 
  4900  0492                     	;# 
  4901  0493                     	;# 
  4902  0494                     	;# 
  4903  0495                     	;# 
  4904  0495                     	;# 
  4905  0496                     	;# 
  4906  0497                     	;# 
  4907  0498                     	;# 
  4908  0499                     	;# 
  4909  049A                     	;# 
  4910  049B                     	;# 
  4911  049C                     	;# 
  4912  049D                     	;# 
  4913  050C                     	;# 
  4914  050C                     	;# 
  4915  050D                     	;# 
  4916  050E                     	;# 
  4917  050F                     	;# 
  4918  050F                     	;# 
  4919  0510                     	;# 
  4920  0511                     	;# 
  4921  0512                     	;# 
  4922  0512                     	;# 
  4923  0513                     	;# 
  4924  0514                     	;# 
  4925  0515                     	;# 
  4926  0515                     	;# 
  4927  0516                     	;# 
  4928  0517                     	;# 
  4929  0518                     	;# 
  4930  0519                     	;# 
  4931  051A                     	;# 
  4932  051B                     	;# 
  4933  051C                     	;# 
  4934  051D                     	;# 
  4935  058C                     	;# 
  4936  058C                     	;# 
  4937  058D                     	;# 
  4938  058E                     	;# 
  4939  058F                     	;# 
  4940  058F                     	;# 
  4941  0590                     	;# 
  4942  0591                     	;# 
  4943  0592                     	;# 
  4944  0593                     	;# 
  4945  060C                     	;# 
  4946  060D                     	;# 
  4947  060E                     	;# 
  4948  060F                     	;# 
  4949  0610                     	;# 
  4950  0611                     	;# 
  4951  0612                     	;# 
  4952  0613                     	;# 
  4953  0614                     	;# 
  4954  0616                     	;# 
  4955  0617                     	;# 
  4956  0618                     	;# 
  4957  0619                     	;# 
  4958  061A                     	;# 
  4959  061B                     	;# 
  4960  061C                     	;# 
  4961  061D                     	;# 
  4962  061E                     	;# 
  4963  068C                     	;# 
  4964  068D                     	;# 
  4965  068E                     	;# 
  4966  068F                     	;# 
  4967  0690                     	;# 
  4968  0691                     	;# 
  4969  0692                     	;# 
  4970  0693                     	;# 
  4971  0694                     	;# 
  4972  070C                     	;# 
  4973  070D                     	;# 
  4974  070E                     	;# 
  4975  070F                     	;# 
  4976  0710                     	;# 
  4977  0711                     	;# 
  4978  0712                     	;# 
  4979  0713                     	;# 
  4980  0714                     	;# 
  4981  0716                     	;# 
  4982  0717                     	;# 
  4983  0718                     	;# 
  4984  0719                     	;# 
  4985  071A                     	;# 
  4986  071B                     	;# 
  4987  071C                     	;# 
  4988  071D                     	;# 
  4989  071E                     	;# 
  4990  0796                     	;# 
  4991  0797                     	;# 
  4992  0798                     	;# 
  4993  0799                     	;# 
  4994  079A                     	;# 
  4995  079B                     	;# 
  4996  080C                     	;# 
  4997  080D                     	;# 
  4998  080E                     	;# 
  4999  080F                     	;# 
  5000  0810                     	;# 
  5001  0811                     	;# 
  5002  0812                     	;# 
  5003  0813                     	;# 
  5004  0814                     	;# 
  5005  081A                     	;# 
  5006  081B                     	;# 
  5007  081C                     	;# 
  5008  081D                     	;# 
  5009  081E                     	;# 
  5010  081F                     	;# 
  5011  088C                     	;# 
  5012  088D                     	;# 
  5013  088E                     	;# 
  5014  088F                     	;# 
  5015  0890                     	;# 
  5016  0891                     	;# 
  5017  0892                     	;# 
  5018  0893                     	;# 
  5019  0895                     	;# 
  5020  0896                     	;# 
  5021  0897                     	;# 
  5022  0898                     	;# 
  5023  0899                     	;# 
  5024  089A                     	;# 
  5025  089B                     	;# 
  5026  090C                     	;# 
  5027  090E                     	;# 
  5028  090F                     	;# 
  5029  091F                     	;# 
  5030  091F                     	;# 
  5031  098F                     	;# 
  5032  098F                     	;# 
  5033  0990                     	;# 
  5034  0991                     	;# 
  5035  0992                     	;# 
  5036  0993                     	;# 
  5037  0994                     	;# 
  5038  0995                     	;# 
  5039  0996                     	;# 
  5040  0997                     	;# 
  5041  0E0F                     	;# 
  5042  0E10                     	;# 
  5043  0E11                     	;# 
  5044  0E12                     	;# 
  5045  0E13                     	;# 
  5046  0E14                     	;# 
  5047  0E15                     	;# 
  5048  0E16                     	;# 
  5049  0E17                     	;# 
  5050  0E18                     	;# 
  5051  0E19                     	;# 
  5052  0E1A                     	;# 
  5053  0E1B                     	;# 
  5054  0E1C                     	;# 
  5055  0E1D                     	;# 
  5056  0E1E                     	;# 
  5057  0E1F                     	;# 
  5058  0E20                     	;# 
  5059  0E21                     	;# 
  5060  0E22                     	;# 
  5061  0E23                     	;# 
  5062  0E24                     	;# 
  5063  0E25                     	;# 
  5064  0E26                     	;# 
  5065  0E27                     	;# 
  5066  0E28                     	;# 
  5067  0E29                     	;# 
  5068  0E2A                     	;# 
  5069  0E2B                     	;# 
  5070  0E2C                     	;# 
  5071  0E2D                     	;# 
  5072  0E2E                     	;# 
  5073  0E2F                     	;# 
  5074  0E30                     	;# 
  5075  0E31                     	;# 
  5076  0E32                     	;# 
  5077  0E33                     	;# 
  5078  0E34                     	;# 
  5079  0E35                     	;# 
  5080  0E36                     	;# 
  5081  0E37                     	;# 
  5082  0E8F                     	;# 
  5083  0E90                     	;# 
  5084  0E91                     	;# 
  5085  0E92                     	;# 
  5086  0E93                     	;# 
  5087  0E94                     	;# 
  5088  0E95                     	;# 
  5089  0E96                     	;# 
  5090  0E97                     	;# 
  5091  0E9C                     	;# 
  5092  0E9D                     	;# 
  5093  0E9E                     	;# 
  5094  0EA1                     	;# 
  5095  0EA2                     	;# 
  5096  0EA3                     	;# 
  5097  0EA4                     	;# 
  5098  0EA5                     	;# 
  5099  0EA9                     	;# 
  5100  0EAA                     	;# 
  5101  0EAB                     	;# 
  5102  0EAC                     	;# 
  5103  0EB1                     	;# 
  5104  0EB2                     	;# 
  5105  0EB3                     	;# 
  5106  0EB8                     	;# 
  5107  0EB9                     	;# 
  5108  0EBA                     	;# 
  5109  0EBB                     	;# 
  5110  0EBC                     	;# 
  5111  0EBD                     	;# 
  5112  0EBE                     	;# 
  5113  0EC3                     	;# 
  5114  0EC5                     	;# 
  5115  0EC6                     	;# 
  5116  0EC7                     	;# 
  5117  0EC8                     	;# 
  5118  0EC9                     	;# 
  5119  0ECA                     	;# 
  5120  0ECB                     	;# 
  5121  0ECC                     	;# 
  5122  0F10                     	;# 
  5123  0F11                     	;# 
  5124  0F12                     	;# 
  5125  0F13                     	;# 
  5126  0F14                     	;# 
  5127  0F15                     	;# 
  5128  0F16                     	;# 
  5129  0F17                     	;# 
  5130  0F18                     	;# 
  5131  0F19                     	;# 
  5132  0F1A                     	;# 
  5133  0F1B                     	;# 
  5134  0F1C                     	;# 
  5135  0F1D                     	;# 
  5136  0F1E                     	;# 
  5137  0F1F                     	;# 
  5138  0F20                     	;# 
  5139  0F21                     	;# 
  5140  0F22                     	;# 
  5141  0F23                     	;# 
  5142  0F24                     	;# 
  5143  0F25                     	;# 
  5144  0F26                     	;# 
  5145  0F27                     	;# 
  5146  0F38                     	;# 
  5147  0F39                     	;# 
  5148  0F3A                     	;# 
  5149  0F3B                     	;# 
  5150  0F3C                     	;# 
  5151  0F3D                     	;# 
  5152  0F3E                     	;# 
  5153  0F3F                     	;# 
  5154  0F40                     	;# 
  5155  0F41                     	;# 
  5156  0F43                     	;# 
  5157  0F44                     	;# 
  5158  0F45                     	;# 
  5159  0F46                     	;# 
  5160  0F47                     	;# 
  5161  0F48                     	;# 
  5162  0F49                     	;# 
  5163  0F4A                     	;# 
  5164  0F4B                     	;# 
  5165  0F4C                     	;# 
  5166  0F4E                     	;# 
  5167  0F4F                     	;# 
  5168  0F50                     	;# 
  5169  0F51                     	;# 
  5170  0F52                     	;# 
  5171  0F53                     	;# 
  5172  0F54                     	;# 
  5173  0F55                     	;# 
  5174  0F56                     	;# 
  5175  0F57                     	;# 
  5176  0F65                     	;# 
  5177  0F68                     	;# 
  5178  0F69                     	;# 
  5179  0F6A                     	;# 
  5180  0F6B                     	;# 
  5181  0FE4                     	;# 
  5182  0FE5                     	;# 
  5183  0FE6                     	;# 
  5184  0FE7                     	;# 
  5185  0FE8                     	;# 
  5186  0FE9                     	;# 
  5187  0FEA                     	;# 
  5188  0FEB                     	;# 
  5189  0FED                     	;# 
  5190  0FEE                     	;# 
  5191  0FEF                     	;_samples
  5192                           
  5193                           	psect	idataBANK1
  5194  167A                     __pidataBANK1:	
  5195                           
  5196                           ;initializer for _setpoint
  5197  167A  34CA               	retlw	202
  5198  167B  3408               	retlw	8
  5199  167C  340B               	retlw	11
  5200  167D  3402               	retlw	2
  5201                           
  5202                           ;initializer for _Kd
  5203  167E  3401               	retlw	1
  5204  167F  3400               	retlw	0
  5205                           
  5206                           ;initializer for _Ki
  5207  1680  3401               	retlw	1
  5208  1681  3400               	retlw	0
  5209                           
  5210                           ;initializer for _Kp
  5211  1682  3404               	retlw	4
  5212  1683  3400               	retlw	0
  5213                           
  5214                           ;initializer for _pidMaxOutput
  5215  1684  34FF               	retlw	255
  5216  1685  3407               	retlw	7
  5217                           
  5218                           ;initializer for _loop
  5219  1686  3440               	retlw	64
  5220                           
  5221                           	psect	idataBANK3
  5222  1789                     __pidataBANK3:	
  5223                           
  5224                           ;initializer for ___cgram
  5225  1789  340C               	retlw	12
  5226  178A  3412               	retlw	18
  5227  178B  3412               	retlw	18
  5228  178C  340C               	retlw	12
  5229  178D  3400               	retlw	0
  5230  178E  3400               	retlw	0
  5231  178F  3400               	retlw	0
  5232  1790  3400               	retlw	0
  5233  1791  3408               	retlw	8
  5234  1792  3404               	retlw	4
  5235  1793  3402               	retlw	2
  5236  1794  341F               	retlw	31
  5237  1795  3402               	retlw	2
  5238  1796  3404               	retlw	4
  5239  1797  3408               	retlw	8
  5240  1798  3400               	retlw	0
  5241                           
  5242                           ;initializer for _channels
  5243  1799  3401               	retlw	1
  5244  179A  3400               	retlw	0
  5245  179B  3403               	retlw	3
  5246  179C  3400               	retlw	0
  5247                           
  5248                           ;initializer for _desc
  5249  179D  3470               	retlw	low (STR_1| (0+32768))
  5250  179E  3490               	retlw	high (STR_1| (0+32768))
  5251  179F  347B               	retlw	low (STR_2| (0+32768))
  5252  17A0  3490               	retlw	high (STR_2| (0+32768))
  5253                           
  5254                           ;initializer for _highRangeSet
  5255  17A1  34BE               	retlw	190
  5256  17A2  340A               	retlw	10
  5257  17A3  34FF               	retlw	255
  5258  17A4  3403               	retlw	3
  5259                           
  5260                           ;initializer for _lowRangeSet
  5261  17A5  34EE               	retlw	238
  5262  17A6  3402               	retlw	2
  5263  17A7  3400               	retlw	0
  5264  17A8  3400               	retlw	0
  5265                           
  5266                           	psect	stringtext
  5267  1000                     __pstringtext:	
  5268  1000                     log@coeff:	
  5269  1000  3400               	retlw	0
  5270  1001  3400               	retlw	0
  5271  1002  3400               	retlw	0
  5272  1003  3400               	retlw	0
  5273  1004  3480               	retlw	128
  5274  1005  343F               	retlw	63
  5275  1006  34F0               	retlw	240
  5276  1007  34FF               	retlw	255
  5277  1008  34BE               	retlw	190
  5278  1009  34E2               	retlw	226
  5279  100A  34A9               	retlw	169
  5280  100B  343E               	retlw	62
  5281  100C  3483               	retlw	131
  5282  100D  3476               	retlw	118
  5283  100E  34BE               	retlw	190
  5284  100F  34AE               	retlw	174
  5285  1010  342B               	retlw	43
  5286  1011  343E               	retlw	62
  5287  1012  343C               	retlw	60
  5288  1013  34C3               	retlw	195
  5289  1014  34BD               	retlw	189
  5290  1015  34D2               	retlw	210
  5291  1016  3413               	retlw	19
  5292  1017  343D               	retlw	61
  5293  1018  3478               	retlw	120
  5294  1019  34D3               	retlw	211
  5295  101A  34BB               	retlw	187
  5296  101B                     __end_oflog@coeff:	
  5297  0016                     _LATA	set	22
  5298  0017                     _LATB	set	23
  5299  0018                     _LATC	set	24
  5300  0011                     _TRISA	set	17
  5301  0012                     _TRISB	set	18
  5302  0013                     _TRISC	set	19
  5303  005F                     _GIE	set	95
  5304  00C2                     _LATC2	set	194
  5305  0060                     _RA0	set	96
  5306  0062                     _RA2	set	98
  5307  0066                     _RA6	set	102
  5308  0067                     _RA7	set	103
  5309  0068                     _RB0	set	104
  5310  0069                     _RB1	set	105
  5311  006A                     _RB2	set	106
  5312  0070                     _RC0	set	112
  5313  0071                     _RC1	set	113
  5314  009D                     _ADACQ	set	157
  5315  0099                     _ADACT	set	153
  5316  009B                     _ADCAP	set	155
  5317  0098                     _ADCLK	set	152
  5318  0093                     _ADCON0	set	147
  5319  0093                     _ADCON0bits	set	147
  5320  0094                     _ADCON1	set	148
  5321  0095                     _ADCON2	set	149
  5322  0096                     _ADCON3	set	150
  5323  009E                     _ADPCH	set	158
  5324  009C                     _ADPRE	set	156
  5325  009A                     _ADREF	set	154
  5326  008D                     _ADRESH	set	141
  5327  008C                     _ADRESL	set	140
  5328  0097                     _ADSTAT	set	151
  5329  010F                     _ADLTHH	set	271
  5330  010E                     _ADLTHL	set	270
  5331  010D                     _ADRPT	set	269
  5332  0113                     _ADSTPTH	set	275
  5333  0112                     _ADSTPTL	set	274
  5334  0111                     _ADUTHH	set	273
  5335  0110                     _ADUTHL	set	272
  5336  021F                     _CCPTMRS1bits	set	543
  5337  0290                     _T2CLKCON	set	656
  5338  028E                     _T2CON	set	654
  5339  028E                     _T2CONbits	set	654
  5340  028F                     _T2HLT	set	655
  5341  028D                     _T2PR	set	653
  5342  0291                     _T2RST	set	657
  5343  028C                     _T2TMR	set	652
  5344  0392                     _PWM7CON	set	914
  5345  0391                     _PWM7DCH	set	913
  5346  0390                     _PWM7DCL	set	912
  5347  0716                     _PIE0bits	set	1814
  5348  0710                     _PIR4bits	set	1808
  5349  088D                     _OSCCON1	set	2189
  5350  088F                     _OSCCON3	set	2191
  5351  0891                     _OSCEN	set	2193
  5352  0893                     _OSCFRQ	set	2195
  5353  0892                     _OSCTUNE	set	2194
  5354  090C                     _FVRCON	set	2316
  5355  0E8F                     _PPSLOCK	set	3727
  5356  0E8F                     _PPSLOCKbits	set	3727
  5357  0F38                     _ANSELA	set	3896
  5358  0F43                     _ANSELB	set	3907
  5359  0F4E                     _ANSELC	set	3918
  5360  0F23                     _RC3PPS	set	3875
  5361  0F39                     _WPUA	set	3897
  5362  0F44                     _WPUB	set	3908
  5363  0F4F                     _WPUC	set	3919
  5364  0F65                     _WPUE	set	3941
  5365  101B                     STR_8:	
  5366  101B  3441               	retlw	65	;'A'
  5367  101C  346C               	retlw	108	;'l'
  5368  101D  3474               	retlw	116	;'t'
  5369  101E  3465               	retlw	101	;'e'
  5370  101F  3472               	retlw	114	;'r'
  5371  1020  3420               	retlw	32	;' '
  5372  1021  3477               	retlw	119	;'w'
  5373  1022  3469               	retlw	105	;'i'
  5374  1023  3474               	retlw	116	;'t'
  5375  1024  3468               	retlw	104	;'h'
  5376  1025  3420               	retlw	32	;' '
  5377  1026  3455               	retlw	85	;'U'
  5378  1027  3470               	retlw	112	;'p'
  5379  1028  342F               	retlw	47	;'/'
  5380  1029  3444               	retlw	68	;'D'
  5381  102A  346E               	retlw	110	;'n'
  5382  102B  3400               	retlw	0
  5383  102C                     STR_9:	
  5384  102C  3445               	retlw	69	;'E'
  5385  102D  346E               	retlw	110	;'n'
  5386  102E  3474               	retlw	116	;'t'
  5387  102F  3465               	retlw	101	;'e'
  5388  1030  3472               	retlw	114	;'r'
  5389  1031  3420               	retlw	32	;' '
  5390  1032  344B               	retlw	75	;'K'
  5391  1033  3465               	retlw	101	;'e'
  5392  1034  3479               	retlw	121	;'y'
  5393  1035  3420               	retlw	32	;' '
  5394  1036  3474               	retlw	116	;'t'
  5395  1037  346F               	retlw	111	;'o'
  5396  1038  3420               	retlw	32	;' '
  5397  1039  3453               	retlw	83	;'S'
  5398  103A  3465               	retlw	101	;'e'
  5399  103B  3474               	retlw	116	;'t'
  5400  103C  3400               	retlw	0
  5401  103D                     STR_5:	
  5402  103D  3420               	retlw	32	;' '
  5403  103E  3420               	retlw	32	;' '
  5404  103F  3420               	retlw	32	;' '
  5405  1040  3447               	retlw	71	;'G'
  5406  1041  346F               	retlw	111	;'o'
  5407  1042  346F               	retlw	111	;'o'
  5408  1043  3464               	retlw	100	;'d'
  5409  1044  342D               	retlw	45	;'-'
  5410  1045  3442               	retlw	66	;'B'
  5411  1046  3479               	retlw	121	;'y'
  5412  1047  3465               	retlw	101	;'e'
  5413  1048  3421               	retlw	33	;'!'
  5414  1049  3421               	retlw	33	;'!'
  5415  104A  3420               	retlw	32	;' '
  5416  104B  3420               	retlw	32	;' '
  5417  104C  3420               	retlw	32	;' '
  5418  104D  3400               	retlw	0
  5419  104E                     STR_4:	
  5420  104E  3445               	retlw	69	;'E'
  5421  104F  346E               	retlw	110	;'n'
  5422  1050  3474               	retlw	116	;'t'
  5423  1051  3465               	retlw	101	;'e'
  5424  1052  3472               	retlw	114	;'r'
  5425  1053  3420               	retlw	32	;' '
  5426  1054  3474               	retlw	116	;'t'
  5427  1055  346F               	retlw	111	;'o'
  5428  1056  3420               	retlw	32	;' '
  5429  1057  3453               	retlw	83	;'S'
  5430  1058  3465               	retlw	101	;'e'
  5431  1059  346C               	retlw	108	;'l'
  5432  105A  3465               	retlw	101	;'e'
  5433  105B  3463               	retlw	99	;'c'
  5434  105C  3474               	retlw	116	;'t'
  5435  105D  3420               	retlw	32	;' '
  5436  105E  3400               	retlw	0
  5437  105F                     STR_3:	
  5438  105F  3455               	retlw	85	;'U'
  5439  1060  3470               	retlw	112	;'p'
  5440  1061  342F               	retlw	47	;'/'
  5441  1062  3444               	retlw	68	;'D'
  5442  1063  346F               	retlw	111	;'o'
  5443  1064  3477               	retlw	119	;'w'
  5444  1065  346E               	retlw	110	;'n'
  5445  1066  3420               	retlw	32	;' '
  5446  1067  3474               	retlw	116	;'t'
  5447  1068  346F               	retlw	111	;'o'
  5448  1069  3420               	retlw	32	;' '
  5449  106A  3441               	retlw	65	;'A'
  5450  106B  346C               	retlw	108	;'l'
  5451  106C  3474               	retlw	116	;'t'
  5452  106D  3465               	retlw	101	;'e'
  5453  106E  3472               	retlw	114	;'r'
  5454  106F  3400               	retlw	0
  5455  1070                     STR_1:	
  5456  1070  3420               	retlw	32	;' '
  5457  1071  3450               	retlw	80	;'P'
  5458  1072  3469               	retlw	105	;'i'
  5459  1073  3474               	retlw	116	;'t'
  5460  1074  3420               	retlw	32	;' '
  5461  1075  3454               	retlw	84	;'T'
  5462  1076  3465               	retlw	101	;'e'
  5463  1077  346D               	retlw	109	;'m'
  5464  1078  3470               	retlw	112	;'p'
  5465  1079  343A               	retlw	58	;':'
  5466  107A  3400               	retlw	0
  5467  107B                     STR_2:	
  5468  107B  3442               	retlw	66	;'B'
  5469  107C  3461               	retlw	97	;'a'
  5470  107D  3463               	retlw	99	;'c'
  5471  107E  346B               	retlw	107	;'k'
  5472  107F  344C               	retlw	76	;'L'
  5473  1080  3469               	retlw	105	;'i'
  5474  1081  3467               	retlw	103	;'g'
  5475  1082  3468               	retlw	104	;'h'
  5476  1083  3474               	retlw	116	;'t'
  5477  1084  343A               	retlw	58	;':'
  5478  1085  3400               	retlw	0
  5479  1086                     STR_7:	
  5480  1086  344F               	retlw	79	;'O'
  5481  1087  3475               	retlw	117	;'u'
  5482  1088  3474               	retlw	116	;'t'
  5483  1089  3470               	retlw	112	;'p'
  5484  108A  3475               	retlw	117	;'u'
  5485  108B  3474               	retlw	116	;'t'
  5486  108C  343A               	retlw	58	;':'
  5487  108D  3400               	retlw	0
  5488  108E                     STR_6:	
  5489  108E  3450               	retlw	80	;'P'
  5490  108F  3469               	retlw	105	;'i'
  5491  1090  3474               	retlw	116	;'t'
  5492  1091  343A               	retlw	58	;':'
  5493  1092  3400               	retlw	0
  5494                           
  5495                           ; #config settings
  5496  0000                     
  5497                           	psect	cinit
  5498  07B7                     start_initialization:	
  5499  07B7                     __initialization:		;BIGRAM
  5500                           
  5501                           ; Initialize objects allocated to BANK1
  5502  07B7  307A               	movlw	low __pidataBANK1
  5503  07B8  0084               	movwf	4
  5504  07B9  3096               	movlw	(high __pidataBANK1)| (0+128)
  5505  07BA  0085               	movwf	5
  5506  07BB  30E2               	movlw	low __pdataBANK1
  5507  07BC  0086               	movwf	6
  5508  07BD  3000               	movlw	high __pdataBANK1
  5509  07BE  0087               	movwf	7
  5510  07BF  3000               	movlw	0
  5511  07C0  00FF               	movwf	btemp+1
  5512  07C1  300D               	movlw	13
  5513  07C2  3196  266E  3187   	fcall	init_ram
  5514                           
  5515                           ; Initialize objects allocated to BANK3
  5516  07C5  3089               	movlw	low __pidataBANK3
  5517  07C6  0084               	movwf	4
  5518  07C7  3097               	movlw	(high __pidataBANK3)| (0+128)
  5519  07C8  0085               	movwf	5
  5520  07C9  30A0               	movlw	low __pdataBANK3
  5521  07CA  0086               	movwf	6
  5522  07CB  3001               	movlw	high __pdataBANK3
  5523  07CC  0087               	movwf	7
  5524  07CD  3000               	movlw	0
  5525  07CE  00FF               	movwf	btemp+1
  5526  07CF  3020               	movlw	32
  5527  07D0  3196  266E  3187   	fcall	init_ram
  5528                           
  5529                           ; Clear objects allocated to BIGRAM
  5530  07D3  3050               	movlw	low (0+9040)
  5531  07D4  0084               	movwf	4
  5532  07D5  3023               	movlw	high (0+9040)
  5533  07D6  0085               	movwf	5
  5534  07D7  30A0               	movlw	160
  5535  07D8  00FE               	movwf	btemp
  5536  07D9  3000               	movlw	0
  5537  07DA  00FF               	movwf	btemp+1
  5538  07DB  3196  2662  3187   	fcall	clear_ram0
  5539                           
  5540                           ; Clear objects allocated to BANK1
  5541  07DE  30A0               	movlw	low __pbssBANK1
  5542  07DF  0084               	movwf	4
  5543  07E0  3000               	movlw	high __pbssBANK1
  5544  07E1  0085               	movwf	5
  5545  07E2  3029               	movlw	41
  5546  07E3  00FE               	movwf	btemp
  5547  07E4  3000               	movlw	0
  5548  07E5  00FF               	movwf	btemp+1
  5549  07E6  3196  2662  3187   	fcall	clear_ram0
  5550                           
  5551                           ; Clear objects allocated to BANK3
  5552  07E9  0023               	movlb	3	; select bank3
  5553  07EA  01C0               	clrf	__pbssBANK3& (0+127)
  5554  07EB  01C1               	clrf	(__pbssBANK3+1)& (0+127)
  5555  07EC  01C2               	clrf	(__pbssBANK3+2)& (0+127)
  5556  07ED  01C3               	clrf	(__pbssBANK3+3)& (0+127)
  5557  07EE  01C4               	clrf	(__pbssBANK3+4)& (0+127)
  5558  07EF  01C5               	clrf	(__pbssBANK3+5)& (0+127)
  5559  07F0  01C6               	clrf	(__pbssBANK3+6)& (0+127)
  5560  07F1  01C7               	clrf	(__pbssBANK3+7)& (0+127)
  5561  07F2  01C8               	clrf	(__pbssBANK3+8)& (0+127)
  5562                           
  5563                           ; Clear objects allocated to BANK4
  5564  07F3  3020               	movlw	low __pbssBANK4
  5565  07F4  0084               	movwf	4
  5566  07F5  3002               	movlw	high __pbssBANK4
  5567  07F6  0085               	movwf	5
  5568  07F7  3050               	movlw	80
  5569  07F8  00FE               	movwf	btemp
  5570  07F9  3000               	movlw	0
  5571  07FA  00FF               	movwf	btemp+1
  5572  07FB  3196  2662         	fcall	clear_ram0
  5573  07FD                     end_of_initialization:	
  5574                           ;End of C runtime variable initialization code
  5575                           
  5576  07FD                     __end_of__initialization:	
  5577  07FD  0020               	movlb	0
  5578  07FE  3185  2D3A         	ljmp	_main	;jump to C main() function
  5579                           
  5580                           	psect	bssBANK1
  5581  00A0                     __pbssBANK1:	
  5582  00A0                     _totals:	
  5583  00A0                     	ds	8
  5584  00A8                     _Result:	
  5585  00A8                     	ds	2
  5586  00AA                     _derivativeValue:	
  5587  00AA                     	ds	2
  5588  00AC                     _errno:	
  5589  00AC                     	ds	2
  5590  00AE                     _error:	
  5591  00AE                     	ds	2
  5592  00B0                     _errorValue:	
  5593  00B0                     	ds	2
  5594  00B2                     _lastSign:	
  5595  00B2                     	ds	2
  5596  00B4                     _menuDelay:	
  5597  00B4                     	ds	2
  5598  00B6                     _pidCount:	
  5599  00B6                     	ds	2
  5600  00B8                     _pidIntegrated:	
  5601  00B8                     	ds	2
  5602  00BA                     _pidMinOutput:	
  5603  00BA                     	ds	2
  5604  00BC                     _pidPrevError:	
  5605  00BC                     	ds	2
  5606  00BE                     _sampleIndex:	
  5607  00BE                     	ds	2
  5608  00C0                     _signPositive:	
  5609  00C0                     	ds	2
  5610  00C2                     _timer:	
  5611  00C2                     	ds	2
  5612  00C4                     _choice:	
  5613  00C4                     	ds	1
  5614  00C5                     _delayCount:	
  5615  00C5                     	ds	1
  5616  00C6                     _key:	
  5617  00C6                     	ds	1
  5618  00C7                     _testKey:	
  5619  00C7                     	ds	1
  5620  00C8                     _timer2:	
  5621  00C8                     	ds	1
  5622                           
  5623                           	psect	dataBANK1
  5624  00E2                     __pdataBANK1:	
  5625  00E2                     _setpoint:	
  5626  00E2                     	ds	4
  5627  00E6                     _Kd:	
  5628  00E6                     	ds	2
  5629  00E8                     _Ki:	
  5630  00E8                     	ds	2
  5631  00EA                     _Kp:	
  5632  00EA                     	ds	2
  5633  00EC                     _pidMaxOutput:	
  5634  00EC                     	ds	2
  5635  00EE                     _loop:	
  5636  00EE                     	ds	1
  5637                           
  5638                           	psect	bssBANK3
  5639  01C0                     __pbssBANK3:	
  5640  01C0                     LCD_Write_Int@F13694:	
  5641  01C0                     	ds	5
  5642  01C5                     main@F13664:	
  5643  01C5                     	ds	4
  5644                           
  5645                           	psect	dataBANK3
  5646  01A0                     __pdataBANK3:	
  5647  01A0                     ___cgram:	
  5648  01A0                     	ds	16
  5649  01B0                     _channels:	
  5650  01B0                     	ds	4
  5651  01B4                     _desc:	
  5652  01B4                     	ds	4
  5653  01B8                     _highRangeSet:	
  5654  01B8                     	ds	4
  5655  01BC                     _lowRangeSet:	
  5656  01BC                     	ds	4
  5657                           
  5658                           	psect	bssBANK4
  5659  0220                     __pbssBANK4:	
  5660  0220                     main@F13670:	
  5661  0220                     	ds	80
  5662                           
  5663                           	psect	inittext
  5664  166E                     init_ram:	
  5665  166E  00FE               	movwf	126
  5666  166F                     initloop:	
  5667  166F  0012               	moviw fsr0++
  5668  1670  001E               	movwi fsr1++
  5669  1671  3001               	movlw	1
  5670  1672  02FE               	subwf	126,f
  5671  1673  3000               	movlw	0
  5672  1674  3BFF               	subwfb	127,f
  5673  1675  087F               	movf	127,w
  5674  1676  047E               	iorwf	126,w
  5675  1677  1903               	btfsc	3,2
  5676  1678  3400               	retlw	0
  5677  1679  2E6F               	goto	initloop
  5678                           
  5679                           	psect	clrtext
  5680  1662                     clear_ram0:	
  5681                           ;	Called with FSR0 containing the base address, and
  5682                           ;	btemp/btemp+1 has the size to clear
  5683                           
  5684  1662  0064               	clrwdt	;clear the watchdog before getting into this loop
  5685  1663                     clrloop0:	
  5686  1663  0180               	clrf	0	;clear RAM location pointed to by FSR
  5687  1664  3101               	addfsr 0,1
  5688  1665  3001               	movlw	1
  5689  1666  02FE               	subwf	126,f
  5690  1667  3000               	movlw	0
  5691  1668  3BFF               	subwfb	127,f
  5692  1669  087F               	movf	127,w
  5693  166A  047E               	iorwf	126,w
  5694  166B  1903               	btfsc	3,2
  5695  166C  3400               	retlw	0	;all done for this memory range, return
  5696  166D  2E63               	goto	clrloop0	;have we reached the end yet?
  5697                           
  5698                           	psect	cstackBANK2
  5699  0120                     __pcstackBANK2:	
  5700  0120                     main@outputSamples:	
  5701                           
  5702                           ; 80 bytes @ 0x0
  5703  0120                     	ds	80
  5704                           
  5705                           	psect	cstackBANK1
  5706  00C9                     __pcstackBANK1:	
  5707  00C9                     ??_main:	
  5708                           
  5709                           ; 1 bytes @ 0x0
  5710  00C9                     	ds	10
  5711  00D3                     main@pidPeriodCounter:	
  5712                           
  5713                           ; 2 bytes @ 0xA
  5714  00D3                     	ds	2
  5715  00D5                     main@currentTemperature:	
  5716                           
  5717                           ; 2 bytes @ 0xC
  5718  00D5                     	ds	2
  5719  00D7                     main@outputTotal:	
  5720                           
  5721                           ; 4 bytes @ 0xE
  5722  00D7                     	ds	4
  5723  00DB                     main@dutyCycle6:	
  5724                           
  5725                           ; 2 bytes @ 0x12
  5726  00DB                     	ds	2
  5727  00DD                     main@analogs:	
  5728                           
  5729                           ; 4 bytes @ 0x14
  5730  00DD                     	ds	4
  5731  00E1                     main@j:	
  5732                           
  5733                           ; 1 bytes @ 0x18
  5734  00E1                     	ds	1
  5735                           
  5736                           	psect	cstackCOMMON
  5737  0070                     __pcstackCOMMON:	
  5738  0070                     ?___ftge:	
  5739  0070                     ?_LCD_Cmd:	
  5740                           ; 1 bit 
  5741                           
  5742  0070                     ?_LCD_Write_Char:	
  5743                           ; 1 bytes @ 0x0
  5744                           
  5745  0070                     ?_OSCILLATOR_Initialize:	
  5746                           ; 1 bytes @ 0x0
  5747                           
  5748  0070                     ??_OSCILLATOR_Initialize:	
  5749                           ; 1 bytes @ 0x0
  5750                           
  5751  0070                     ?_ADCC_Initialize:	
  5752                           ; 1 bytes @ 0x0
  5753                           
  5754  0070                     ??_ADCC_Initialize:	
  5755                           ; 1 bytes @ 0x0
  5756                           
  5757  0070                     ?_PWM_Initialize:	
  5758                           ; 1 bytes @ 0x0
  5759                           
  5760  0070                     ??_PWM_Initialize:	
  5761                           ; 1 bytes @ 0x0
  5762                           
  5763  0070                     ?_TMR2_Initialize:	
  5764                           ; 1 bytes @ 0x0
  5765                           
  5766  0070                     ??_TMR2_Initialize:	
  5767                           ; 1 bytes @ 0x0
  5768                           
  5769  0070                     ?_InitCustomChars:	
  5770                           ; 1 bytes @ 0x0
  5771                           
  5772  0070                     ?_LCD_Port:	
  5773                           ; 1 bytes @ 0x0
  5774                           
  5775  0070                     ??_LCD_Port:	
  5776                           ; 1 bytes @ 0x0
  5777                           
  5778  0070                     ?_LCD_Clear:	
  5779                           ; 1 bytes @ 0x0
  5780                           
  5781  0070                     ?_LCD_Init:	
  5782                           ; 1 bytes @ 0x0
  5783                           
  5784  0070                     ?_PIN_MANAGER_Initialize:	
  5785                           ; 1 bytes @ 0x0
  5786                           
  5787  0070                     ??_PIN_MANAGER_Initialize:	
  5788                           ; 1 bytes @ 0x0
  5789                           
  5790  0070                     ?_SYSTEM_Initialize:	
  5791                           ; 1 bytes @ 0x0
  5792                           
  5793  0070                     ?_PWM7_LoadDutyValue:	
  5794                           ; 1 bytes @ 0x0
  5795                           
  5796  0070                     ?_readKey:	
  5797                           ; 1 bytes @ 0x0
  5798                           
  5799  0070                     ??_readKey:	
  5800                           ; 1 bytes @ 0x0
  5801                           
  5802  0070                     ?_menuChoice:	
  5803                           ; 1 bytes @ 0x0
  5804                           
  5805  0070                     ?_main:	
  5806                           ; 1 bytes @ 0x0
  5807                           
  5808  0070                     ?_ADCRead:	
  5809                           ; 1 bytes @ 0x0
  5810                           
  5811  0070                     ?___wmul:	
  5812                           ; 2 bytes @ 0x0
  5813                           
  5814  0070                     ?___awdiv:	
  5815                           ; 2 bytes @ 0x0
  5816                           
  5817  0070                     ?___awmod:	
  5818                           ; 2 bytes @ 0x0
  5819                           
  5820  0070                     ?___ftpack:	
  5821                           ; 2 bytes @ 0x0
  5822                           
  5823  0070                     ?_frexp:	
  5824                           ; 3 bytes @ 0x0
  5825                           
  5826  0070                     ?___aldiv:	
  5827                           ; 3 bytes @ 0x0
  5828                           
  5829  0070                     ?___fttol:	
  5830                           ; 4 bytes @ 0x0
  5831                           
  5832  0070                     LCD_Port@a:	
  5833                           ; 4 bytes @ 0x0
  5834                           
  5835  0070                     PIN_MANAGER_Initialize@state:	
  5836                           ; 1 bytes @ 0x0
  5837                           
  5838  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5839                           ; 1 bytes @ 0x0
  5840                           
  5841  0070                     ___wmul@multiplier:	
  5842                           ; 2 bytes @ 0x0
  5843                           
  5844  0070                     ___awdiv@divisor:	
  5845                           ; 2 bytes @ 0x0
  5846                           
  5847  0070                     ___awmod@divisor:	
  5848                           ; 2 bytes @ 0x0
  5849                           
  5850  0070                     ___ftpack@arg:	
  5851                           ; 2 bytes @ 0x0
  5852                           
  5853  0070                     ___ftge@ff1:	
  5854                           ; 3 bytes @ 0x0
  5855                           
  5856  0070                     ___fttol@f1:	
  5857                           ; 3 bytes @ 0x0
  5858                           
  5859  0070                     frexp@value:	
  5860                           ; 3 bytes @ 0x0
  5861                           
  5862  0070                     ___aldiv@divisor:	
  5863                           ; 3 bytes @ 0x0
  5864                           
  5865                           
  5866                           ; 4 bytes @ 0x0
  5867  0070                     	ds	1
  5868  0071                     ??_LCD_Cmd:	
  5869  0071                     ??_LCD_Write_Char:	
  5870                           ; 1 bytes @ 0x1
  5871                           
  5872                           
  5873                           ; 1 bytes @ 0x1
  5874  0071                     	ds	1
  5875  0072                     ??_PWM7_LoadDutyValue:	
  5876  0072                     LCD_Write_Char@temp:	
  5877                           ; 1 bytes @ 0x2
  5878                           
  5879  0072                     ___wmul@multiplicand:	
  5880                           ; 1 bytes @ 0x2
  5881                           
  5882  0072                     ___awdiv@dividend:	
  5883                           ; 2 bytes @ 0x2
  5884                           
  5885  0072                     ___awmod@dividend:	
  5886                           ; 2 bytes @ 0x2
  5887                           
  5888                           
  5889                           ; 2 bytes @ 0x2
  5890  0072                     	ds	1
  5891  0073                     ??_ADCRead:	
  5892  0073                     LCD_Cmd@a:	
  5893                           ; 1 bytes @ 0x3
  5894                           
  5895  0073                     LCD_Write_Char@y:	
  5896                           ; 1 bytes @ 0x3
  5897                           
  5898  0073                     ADCRead@channel:	
  5899                           ; 1 bytes @ 0x3
  5900                           
  5901  0073                     ___ftpack@exp:	
  5902                           ; 1 bytes @ 0x3
  5903                           
  5904  0073                     frexp@eptr:	
  5905                           ; 1 bytes @ 0x3
  5906                           
  5907  0073                     ___ftge@ff2:	
  5908                           ; 1 bytes @ 0x3
  5909                           
  5910                           
  5911                           ; 3 bytes @ 0x3
  5912  0073                     	ds	1
  5913  0074                     ??_frexp:	
  5914  0074                     ??_LCD_Clear:	
  5915                           ; 1 bytes @ 0x4
  5916                           
  5917  0074                     ?_LCD_Set_Cursor:	
  5918                           ; 1 bytes @ 0x4
  5919                           
  5920  0074                     ??_LCD_Init:	
  5921                           ; 1 bytes @ 0x4
  5922                           
  5923  0074                     ??___wmul:	
  5924                           ; 1 bytes @ 0x4
  5925                           
  5926  0074                     ??___awdiv:	
  5927                           ; 1 bytes @ 0x4
  5928                           
  5929  0074                     ??___awmod:	
  5930                           ; 1 bytes @ 0x4
  5931                           
  5932  0074                     ??___fttol:	
  5933                           ; 1 bytes @ 0x4
  5934                           
  5935  0074                     LCD_Set_Cursor@y:	
  5936                           ; 1 bytes @ 0x4
  5937                           
  5938  0074                     LCD_Write_Char@a:	
  5939                           ; 1 bytes @ 0x4
  5940                           
  5941  0074                     ___ftpack@sign:	
  5942                           ; 1 bytes @ 0x4
  5943                           
  5944  0074                     ___wmul@product:	
  5945                           ; 1 bytes @ 0x4
  5946                           
  5947  0074                     ___aldiv@dividend:	
  5948                           ; 2 bytes @ 0x4
  5949                           
  5950                           
  5951                           ; 4 bytes @ 0x4
  5952  0074                     	ds	1
  5953  0075                     ??___ftpack:	
  5954  0075                     ??_InitCustomChars:	
  5955                           ; 1 bytes @ 0x5
  5956                           
  5957  0075                     ??_LCD_Set_Cursor:	
  5958                           ; 1 bytes @ 0x5
  5959                           
  5960  0075                     ?_LCD_Write_String:	
  5961                           ; 1 bytes @ 0x5
  5962                           
  5963  0075                     ___awdiv@counter:	
  5964                           ; 1 bytes @ 0x5
  5965                           
  5966  0075                     ___awmod@counter:	
  5967                           ; 1 bytes @ 0x5
  5968                           
  5969  0075                     LCD_Write_String@a:	
  5970                           ; 1 bytes @ 0x5
  5971                           
  5972                           
  5973                           ; 2 bytes @ 0x5
  5974  0075                     	ds	1
  5975  0076                     ??___ftge:	
  5976  0076                     ?_PID_Calculate:	
  5977                           ; 1 bytes @ 0x6
  5978                           
  5979  0076                     InitCustomChars@i:	
  5980                           ; 2 bytes @ 0x6
  5981                           
  5982  0076                     ___awdiv@sign:	
  5983                           ; 1 bytes @ 0x6
  5984                           
  5985  0076                     ___awmod@sign:	
  5986                           ; 1 bytes @ 0x6
  5987                           
  5988  0076                     PID_Calculate@setpoint:	
  5989                           ; 1 bytes @ 0x6
  5990                           
  5991                           
  5992                           ; 2 bytes @ 0x6
  5993  0076                     	ds	1
  5994  0077                     ??_LCD_Write_String:	
  5995  0077                     LCD_Set_Cursor@x:	
  5996                           ; 1 bytes @ 0x7
  5997                           
  5998  0077                     LCD_Init@style:	
  5999                           ; 1 bytes @ 0x7
  6000                           
  6001  0077                     ___awdiv@quotient:	
  6002                           ; 1 bytes @ 0x7
  6003                           
  6004                           
  6005                           ; 2 bytes @ 0x7
  6006  0077                     	ds	1
  6007  0078                     ??_SYSTEM_Initialize:	
  6008  0078                     ??___aldiv:	
  6009                           ; 1 bytes @ 0x8
  6010                           
  6011  0078                     ?___awtoft:	
  6012                           ; 1 bytes @ 0x8
  6013                           
  6014  0078                     LCD_Set_Cursor@z:	
  6015                           ; 3 bytes @ 0x8
  6016                           
  6017  0078                     ___fttol@sign1:	
  6018                           ; 1 bytes @ 0x8
  6019                           
  6020  0078                     LCD_Write_String@i:	
  6021                           ; 1 bytes @ 0x8
  6022                           
  6023  0078                     PID_Calculate@temp:	
  6024                           ; 2 bytes @ 0x8
  6025                           
  6026  0078                     ___awtoft@c:	
  6027                           ; 2 bytes @ 0x8
  6028                           
  6029                           
  6030                           ; 2 bytes @ 0x8
  6031  0078                     	ds	1
  6032  0079                     ?_LCD_Write_Int:	
  6033  0079                     LCD_Set_Cursor@w:	
  6034                           ; 1 bytes @ 0x9
  6035                           
  6036  0079                     LCD_Write_Int@value:	
  6037                           ; 1 bytes @ 0x9
  6038                           
  6039  0079                     readAnalog@analog_channel:	
  6040                           ; 2 bytes @ 0x9
  6041                           
  6042  0079                     ___fttol@lval:	
  6043                           ; 2 bytes @ 0x9
  6044                           
  6045                           
  6046                           ; 4 bytes @ 0x9
  6047  0079                     	ds	1
  6048  007A                     ??_PID_Calculate:	
  6049  007A                     LCD_Set_Cursor@temp:	
  6050                           ; 1 bytes @ 0xA
  6051                           
  6052                           
  6053                           ; 1 bytes @ 0xA
  6054  007A                     	ds	1
  6055  007B                     ??___awtoft:	
  6056  007B                     LCD_Write_Int@fieldLength:	
  6057                           ; 1 bytes @ 0xB
  6058                           
  6059  007B                     readAnalog@value:	
  6060                           ; 1 bytes @ 0xB
  6061                           
  6062                           
  6063                           ; 2 bytes @ 0xB
  6064  007B                     	ds	1
  6065  007C                     LCD_Write_Int@numPlaces:	
  6066                           
  6067                           ; 1 bytes @ 0xC
  6068  007C                     	ds	1
  6069  007D                     LCD_Write_Int@sign:	
  6070  007D                     ___awtoft@sign:	
  6071                           ; 1 bytes @ 0xD
  6072                           
  6073  007D                     ___fttol@exp1:	
  6074                           ; 1 bytes @ 0xD
  6075                           
  6076                           
  6077                           ; 1 bytes @ 0xD
  6078  007D                     	ds	1
  6079  007E                     ??_eval_poly:	
  6080  007E                     ??_tempCalc:	
  6081                           ; 1 bytes @ 0xE
  6082                           
  6083  007E                     ??___ftsub:	
  6084                           ; 1 bytes @ 0xE
  6085                           
  6086                           
  6087                           	psect	cstackBANK0
  6088  0020                     __pcstackBANK0:	
  6089                           ; 1 bytes @ 0xE
  6090                           
  6091  0020                     ??_LCD_Write_Int:	
  6092  0020                     ?___ftmul:	
  6093                           ; 1 bytes @ 0x0
  6094                           
  6095  0020                     ___aldiv@counter:	
  6096                           ; 3 bytes @ 0x0
  6097                           
  6098  0020                     ___ftmul@f1:	
  6099                           ; 1 bytes @ 0x0
  6100                           
  6101                           
  6102                           ; 3 bytes @ 0x0
  6103  0020                     	ds	1
  6104  0021                     ___aldiv@sign:	
  6105                           
  6106                           ; 1 bytes @ 0x1
  6107  0021                     	ds	1
  6108  0022                     ___aldiv@quotient:	
  6109                           
  6110                           ; 4 bytes @ 0x2
  6111  0022                     	ds	1
  6112  0023                     ___ftmul@f2:	
  6113                           
  6114                           ; 3 bytes @ 0x3
  6115  0023                     	ds	2
  6116  0025                     LCD_Write_Int@str:	
  6117                           
  6118                           ; 5 bytes @ 0x5
  6119  0025                     	ds	1
  6120  0026                     ??___ftmul:	
  6121  0026                     ?_readAnalog:	
  6122                           ; 1 bytes @ 0x6
  6123                           
  6124  0026                     readAnalog@channel:	
  6125                           ; 2 bytes @ 0x6
  6126                           
  6127                           
  6128                           ; 2 bytes @ 0x6
  6129  0026                     	ds	2
  6130  0028                     ??_readAnalog:	
  6131                           
  6132                           ; 1 bytes @ 0x8
  6133  0028                     	ds	2
  6134  002A                     ___ftmul@exp:	
  6135  002A                     LCD_Write_Int@j:	
  6136                           ; 1 bytes @ 0xA
  6137                           
  6138                           
  6139                           ; 2 bytes @ 0xA
  6140  002A                     	ds	1
  6141  002B                     ___ftmul@f3_as_product:	
  6142                           
  6143                           ; 3 bytes @ 0xB
  6144  002B                     	ds	1
  6145  002C                     LCD_Write_Int@i:	
  6146                           
  6147                           ; 2 bytes @ 0xC
  6148  002C                     	ds	2
  6149  002E                     ??_menuChoice:	
  6150  002E                     ___ftmul@cntr:	
  6151                           ; 1 bytes @ 0xE
  6152                           
  6153                           
  6154                           ; 1 bytes @ 0xE
  6155  002E                     	ds	1
  6156  002F                     ___ftmul@sign:	
  6157                           
  6158                           ; 1 bytes @ 0xF
  6159  002F                     	ds	1
  6160  0030                     ?___ftdiv:	
  6161  0030                     ___ftdiv@f2:	
  6162                           ; 3 bytes @ 0x10
  6163                           
  6164                           
  6165                           ; 3 bytes @ 0x10
  6166  0030                     	ds	3
  6167  0033                     ___ftdiv@f1:	
  6168                           
  6169                           ; 3 bytes @ 0x13
  6170  0033                     	ds	3
  6171  0036                     ??___ftdiv:	
  6172                           
  6173                           ; 1 bytes @ 0x16
  6174  0036                     	ds	4
  6175  003A                     ___ftdiv@cntr:	
  6176                           
  6177                           ; 1 bytes @ 0x1A
  6178  003A                     	ds	1
  6179  003B                     ___ftdiv@f3:	
  6180                           
  6181                           ; 3 bytes @ 0x1B
  6182  003B                     	ds	3
  6183  003E                     ___ftdiv@exp:	
  6184                           
  6185                           ; 1 bytes @ 0x1E
  6186  003E                     	ds	1
  6187  003F                     ___ftdiv@sign:	
  6188                           
  6189                           ; 1 bytes @ 0x1F
  6190  003F                     	ds	1
  6191  0040                     ?___ftadd:	
  6192  0040                     ___ftadd@f1:	
  6193                           ; 3 bytes @ 0x20
  6194                           
  6195                           
  6196                           ; 3 bytes @ 0x20
  6197  0040                     	ds	3
  6198  0043                     ___ftadd@f2:	
  6199                           
  6200                           ; 3 bytes @ 0x23
  6201  0043                     	ds	3
  6202  0046                     ??___ftadd:	
  6203                           
  6204                           ; 1 bytes @ 0x26
  6205  0046                     	ds	4
  6206  004A                     ___ftadd@sign:	
  6207                           
  6208                           ; 1 bytes @ 0x2A
  6209  004A                     	ds	1
  6210  004B                     ___ftadd@exp2:	
  6211                           
  6212                           ; 1 bytes @ 0x2B
  6213  004B                     	ds	1
  6214  004C                     ___ftadd@exp1:	
  6215                           
  6216                           ; 1 bytes @ 0x2C
  6217  004C                     	ds	1
  6218  004D                     ?_eval_poly:	
  6219  004D                     ?___ftsub:	
  6220                           ; 3 bytes @ 0x2D
  6221                           
  6222  004D                     ___ftsub@f2:	
  6223                           ; 3 bytes @ 0x2D
  6224                           
  6225  004D                     eval_poly@x:	
  6226                           ; 3 bytes @ 0x2D
  6227                           
  6228                           
  6229                           ; 3 bytes @ 0x2D
  6230  004D                     	ds	3
  6231  0050                     eval_poly@d:	
  6232  0050                     ___ftsub@f1:	
  6233                           ; 2 bytes @ 0x30
  6234                           
  6235                           
  6236                           ; 3 bytes @ 0x30
  6237  0050                     	ds	2
  6238  0052                     eval_poly@n:	
  6239                           
  6240                           ; 2 bytes @ 0x32
  6241  0052                     	ds	2
  6242  0054                     eval_poly@res:	
  6243                           
  6244                           ; 3 bytes @ 0x34
  6245  0054                     	ds	3
  6246  0057                     ?_log:	
  6247  0057                     log@x:	
  6248                           ; 3 bytes @ 0x37
  6249                           
  6250                           
  6251                           ; 3 bytes @ 0x37
  6252  0057                     	ds	3
  6253  005A                     ??_log:	
  6254                           
  6255                           ; 1 bytes @ 0x3A
  6256  005A                     	ds	1
  6257  005B                     log@exponent:	
  6258                           
  6259                           ; 2 bytes @ 0x3B
  6260  005B                     	ds	2
  6261  005D                     ?_tempCalc:	
  6262  005D                     tempCalc@analogValue:	
  6263                           ; 2 bytes @ 0x3D
  6264                           
  6265                           
  6266                           ; 2 bytes @ 0x3D
  6267  005D                     	ds	2
  6268  005F                     tempCalc@R:	
  6269                           
  6270                           ; 3 bytes @ 0x3F
  6271  005F                     	ds	3
  6272  0062                     _tempCalc$1012:	
  6273                           
  6274                           ; 3 bytes @ 0x42
  6275  0062                     	ds	3
  6276  0065                     tempCalc@steinhart:	
  6277                           
  6278                           ; 3 bytes @ 0x45
  6279  0065                     	ds	3
  6280  0068                     main@x:	
  6281                           
  6282                           ; 1 bytes @ 0x48
  6283  0068                     	ds	1
  6284  0069                     main@output:	
  6285                           
  6286                           ; 2 bytes @ 0x49
  6287  0069                     	ds	2
  6288  006B                     main@holdOutput:	
  6289                           
  6290                           ; 1 bytes @ 0x4B
  6291  006B                     	ds	1
  6292  006C                     main@lidOpenCount:	
  6293                           
  6294                           ; 1 bytes @ 0x4C
  6295  006C                     	ds	1
  6296  006D                     main@lastTemperature:	
  6297                           
  6298                           ; 2 bytes @ 0x4D
  6299  006D                     	ds	2
  6300  006F                     main@outputIndex:	
  6301                           
  6302                           ; 1 bytes @ 0x4F
  6303  006F                     	ds	1
  6304                           
  6305                           	psect	maintext
  6306  053A                     __pmaintext:	
  6307 ;;
  6308 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  6309 ;;
  6310 ;; *************** function _main *****************
  6311 ;; Defined at:
  6312 ;;		line 29 in file "main.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;		None
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  outputSample   80    0[BANK2 ] int [40]
  6317 ;;  analogs         4   20[BANK1 ] unsigned int [2]
  6318 ;;  outputTotal     4   14[BANK1 ] long 
  6319 ;;  dutyCycle6      2   18[BANK1 ] unsigned int 
  6320 ;;  currentTempe    2   12[BANK1 ] int 
  6321 ;;  pidPeriodCou    2   10[BANK1 ] int 
  6322 ;;  lastTemperat    2   77[BANK0 ] int 
  6323 ;;  output          2   73[BANK0 ] int 
  6324 ;;  j               1   24[BANK1 ] unsigned char 
  6325 ;;  outputIndex     1   79[BANK0 ] unsigned char 
  6326 ;;  lidOpenCount    1   76[BANK0 ] unsigned char 
  6327 ;;  holdOutput      1   75[BANK0 ] unsigned char 
  6328 ;;  x               1   72[BANK0 ] unsigned char 
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      void 
  6331 ;; Registers used:
  6332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6333 ;; Tracked objects:
  6334 ;;		On entry : B1F/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;      Locals:         0       8      15      80       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Totals:         0       8      25      80       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;Total ram usage:      113 bytes
  6343 ;; Hardware stack levels required when called:    5
  6344 ;; This function calls:
  6345 ;;		_LCD_Clear
  6346 ;;		_LCD_Set_Cursor
  6347 ;;		_LCD_Write_Char
  6348 ;;		_LCD_Write_Int
  6349 ;;		_LCD_Write_String
  6350 ;;		_PID_Calculate
  6351 ;;		_PWM7_LoadDutyValue
  6352 ;;		_SYSTEM_Initialize
  6353 ;;		___aldiv
  6354 ;;		_menuChoice
  6355 ;;		_readAnalog
  6356 ;;		_tempCalc
  6357 ;; This function is called by:
  6358 ;;		Startup code after reset
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           
  6363                           ;psect for function _main
  6364  053A                     _main:	
  6365                           
  6366                           ;main.c: 31: SYSTEM_Initialize();
  6367                           
  6368                           ;incstack = 0
  6369                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6370  053A  3188  20E2  3185   	fcall	_SYSTEM_Initialize
  6371                           
  6372                           ;main.c: 33: uint16_t analogs[2] = {0};
  6373  053D  0023               	movlb	3	; select bank3
  6374  053E  0848               	movf	(main@F13664+3)^(0+384),w
  6375  053F  0021               	movlb	1	; select bank1
  6376  0540  00E0               	movwf	(main@analogs+3)^(0+128)
  6377  0541  0023               	movlb	3	; select bank3
  6378  0542  0847               	movf	(main@F13664+2)^(0+384),w
  6379  0543  0021               	movlb	1	; select bank1
  6380  0544  00DF               	movwf	(main@analogs+2)^(0+128)
  6381  0545  0023               	movlb	3	; select bank3
  6382  0546  0846               	movf	(main@F13664+1)^(0+384),w
  6383  0547  0021               	movlb	1	; select bank1
  6384  0548  00DE               	movwf	(main@analogs+1)^(0+128)
  6385  0549  0023               	movlb	3	; select bank3
  6386  054A  0845               	movf	main@F13664^(0+384),w
  6387  054B  0021               	movlb	1	; select bank1
  6388  054C  00DD               	movwf	main@analogs^(0+128)
  6389                           
  6390                           ;main.c: 35: extern int16_t setpoint[2];
  6391                           ;main.c: 43: int output = 0;
  6392  054D  0020               	movlb	0	; select bank0
  6393  054E  01E9               	clrf	main@output
  6394  054F  01EA               	clrf	main@output+1
  6395                           
  6396                           ;main.c: 45: int32_t outputTotal = 0;
  6397  0550  3000               	movlw	0
  6398  0551  0021               	movlb	1	; select bank1
  6399  0552  00DA               	movwf	(main@outputTotal+3)^(0+128)
  6400  0553  3000               	movlw	0
  6401  0554  00D9               	movwf	(main@outputTotal+2)^(0+128)
  6402  0555  3000               	movlw	0
  6403  0556  00D8               	movwf	(main@outputTotal+1)^(0+128)
  6404  0557  3000               	movlw	0
  6405  0558  00D7               	movwf	main@outputTotal^(0+128)
  6406                           
  6407                           ;main.c: 47: char outputIndex = 0;
  6408  0559  0020               	movlb	0	; select bank0
  6409  055A  01EF               	clrf	main@outputIndex
  6410                           
  6411                           ;main.c: 49: int16_t outputSamples[40]= {0};
  6412  055B  3020               	movlw	low main@F13670
  6413  055C  0086               	movwf	6
  6414  055D  3002               	movlw	high main@F13670
  6415  055E  0087               	movwf	7
  6416  055F  3020               	movlw	low main@outputSamples
  6417  0560  0084               	movwf	4
  6418  0561  3001               	movlw	high main@outputSamples
  6419  0562  0085               	movwf	5
  6420  0563  3050               	movlw	80
  6421  0564  0021               	movlb	1	; select bank1
  6422  0565  00C9               	movwf	??_main^(0+128)
  6423  0566                     u3540:	
  6424  0566  0016               	moviw fsr1++
  6425  0567  001A               	movwi fsr0++
  6426  0568  0BC9               	decfsz	??_main^(0+128),f
  6427  0569  2D66               	goto	u3540
  6428                           
  6429                           ;main.c: 51: char holdOutput = 0;
  6430  056A  0020               	movlb	0	; select bank0
  6431  056B  01EB               	clrf	main@holdOutput
  6432                           
  6433                           ;main.c: 53: int currentTemperature = 750;
  6434  056C  30EE               	movlw	238
  6435  056D  0021               	movlb	1	; select bank1
  6436  056E  00D5               	movwf	main@currentTemperature^(0+128)
  6437  056F  3002               	movlw	2
  6438  0570  00D6               	movwf	(main@currentTemperature^(0+128)+1)
  6439                           
  6440                           ;main.c: 55: int lastTemperature = 750;
  6441  0571  30EE               	movlw	238
  6442  0572  0020               	movlb	0	; select bank0
  6443  0573  00ED               	movwf	main@lastTemperature
  6444  0574  3002               	movlw	2
  6445  0575  00EE               	movwf	main@lastTemperature+1
  6446                           
  6447                           ;main.c: 57: char lidOpenCount = 0;
  6448  0576  01EC               	clrf	main@lidOpenCount
  6449                           
  6450                           ;main.c: 61: char j = 0;
  6451  0577  0021               	movlb	1	; select bank1
  6452  0578  01E1               	clrf	main@j^(0+128)
  6453                           
  6454                           ;main.c: 63: char x = 0;
  6455  0579  0020               	movlb	0	; select bank0
  6456  057A  01E8               	clrf	main@x
  6457                           
  6458                           ;main.c: 65: int pidPeriodCounter = 0;
  6459  057B  0021               	movlb	1	; select bank1
  6460  057C  01D3               	clrf	main@pidPeriodCounter^(0+128)
  6461  057D  01D4               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6462                           
  6463                           ;main.c: 67: extern int pidMaxOutput;
  6464                           ;main.c: 69: extern unsigned char loop;
  6465                           ;main.c: 84: uint16_t dutyCycle6 = 0;
  6466  057E  01DB               	clrf	main@dutyCycle6^(0+128)
  6467  057F  01DC               	clrf	(main@dutyCycle6+1)^(0+128)
  6468                           
  6469                           ;main.c: 90: PWM7_LoadDutyValue(setpoint[1]);
  6470  0580  0865               	movf	((_setpoint+1)^(0+128)+2),w
  6471  0581  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6472  0582  0864               	movf	(_setpoint^(0+128)+2),w
  6473  0583  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6474  0584  3196  26B7  3185   	fcall	_PWM7_LoadDutyValue
  6475                           
  6476                           ;main.c: 92: _delay((unsigned long)((300)*(32000000/4000.0)));
  6477  0587  300D               	movlw	13
  6478  0588  0021               	movlb	1	; select bank1
  6479  0589  00CB               	movwf	(??_main^(0+128)+2)
  6480  058A  302D               	movlw	45
  6481  058B  00CA               	movwf	(??_main^(0+128)+1)
  6482  058C  30E2               	movlw	226
  6483  058D  00C9               	movwf	??_main^(0+128)
  6484  058E                     u3677:	
  6485  058E  0BC9               	decfsz	??_main^(0+128),f
  6486  058F  2D8E               	goto	u3677
  6487  0590  0BCA               	decfsz	(??_main^(0+128)+1),f
  6488  0591  2D8E               	goto	u3677
  6489  0592  0BCB               	decfsz	(??_main^(0+128)+2),f
  6490  0593  2D8E               	goto	u3677
  6491  0594  3200               	nop2
  6492                           
  6493                           ;main.c: 94: LCD_Clear();
  6494  0595  3196  2646  3185   	fcall	_LCD_Clear
  6495  0598                     l3118:	
  6496                           ;main.c: 96: while (1)
  6497                           
  6498                           
  6499                           ;main.c: 97: {
  6500                           ;main.c: 98: if(loop>253)
  6501  0598  30FE               	movlw	254
  6502  0599  0021               	movlb	1	; select bank1
  6503  059A  026E               	subwf	_loop^(0+128),w
  6504  059B  1C03               	skipc
  6505  059C  2F05               	goto	l3186
  6506                           
  6507                           ;main.c: 99: {
  6508                           ;main.c: 100: PWM7_LoadDutyValue(setpoint[1]);
  6509  059D  0865               	movf	((_setpoint+1)^(0+128)+2),w
  6510  059E  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6511  059F  0864               	movf	(_setpoint^(0+128)+2),w
  6512  05A0  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6513  05A1  3196  26B7  3185   	fcall	_PWM7_LoadDutyValue
  6514                           
  6515                           ;main.c: 102: { LCD_Set_Cursor(0,0); LCD_Write_String("Pit:");};
  6516  05A4  01F4               	clrf	LCD_Set_Cursor@y
  6517  05A5  3000               	movlw	0
  6518  05A6  3188  20A3  3185   	fcall	_LCD_Set_Cursor
  6519  05A9  308E               	movlw	low (STR_6| (0+32768))
  6520  05AA  00F5               	movwf	LCD_Write_String@a
  6521  05AB  3090               	movlw	high (STR_6| (0+32768))
  6522  05AC  00F6               	movwf	LCD_Write_String@a+1
  6523  05AD  3197  2716  3185   	fcall	_LCD_Write_String
  6524                           
  6525                           ;main.c: 103: { LCD_Set_Cursor(5,0); LCD_Write_Int(analogs[1],-1, 1, 0);};
  6526  05B0  01F4               	clrf	LCD_Set_Cursor@y
  6527  05B1  3005               	movlw	5
  6528  05B2  3188  20A3  3185   	fcall	_LCD_Set_Cursor
  6529  05B5  0021               	movlb	1	; select bank1
  6530  05B6  0860               	movf	((main@analogs+1)^(0+128)+2),w
  6531  05B7  00FA               	movwf	LCD_Write_Int@value+1
  6532  05B8  085F               	movf	(main@analogs^(0+128)+2),w
  6533  05B9  00F9               	movwf	LCD_Write_Int@value
  6534  05BA  01FB               	clrf	LCD_Write_Int@fieldLength
  6535  05BB  03FB               	decf	LCD_Write_Int@fieldLength,f
  6536  05BC  01FC               	clrf	LCD_Write_Int@numPlaces
  6537  05BD  0AFC               	incf	LCD_Write_Int@numPlaces,f
  6538  05BE  01FD               	clrf	LCD_Write_Int@sign
  6539  05BF  318D  2566  3185   	fcall	_LCD_Write_Int
  6540                           
  6541                           ;main.c: 104: LCD_Write_Char(0);
  6542  05C2  3000               	movlw	0
  6543  05C3  3188  2001  3185   	fcall	_LCD_Write_Char
  6544                           
  6545                           ;main.c: 105: LCD_Write_Char(70);
  6546  05C6  3046               	movlw	70
  6547  05C7  3188  2001  3185   	fcall	_LCD_Write_Char
  6548                           
  6549                           ;main.c: 106: LCD_Write_Char(' ');
  6550  05CA  3020               	movlw	32
  6551  05CB  3188  2001  3185   	fcall	_LCD_Write_Char
  6552                           
  6553                           ;main.c: 107: LCD_Write_Char(' ');
  6554  05CE  3020               	movlw	32
  6555  05CF  3188  2001  3185   	fcall	_LCD_Write_Char
  6556                           
  6557                           ;main.c: 109: { LCD_Set_Cursor(0,1); LCD_Write_String("Output:");};
  6558  05D2  01F4               	clrf	LCD_Set_Cursor@y
  6559  05D3  0AF4               	incf	LCD_Set_Cursor@y,f
  6560  05D4  3000               	movlw	0
  6561  05D5  3188  20A3  3185   	fcall	_LCD_Set_Cursor
  6562  05D8  3086               	movlw	low (STR_7| (0+32768))
  6563  05D9  00F5               	movwf	LCD_Write_String@a
  6564  05DA  3090               	movlw	high (STR_7| (0+32768))
  6565  05DB  00F6               	movwf	LCD_Write_String@a+1
  6566  05DC  3197  2716  3185   	fcall	_LCD_Write_String
  6567                           
  6568                           ;main.c: 110: LCD_Write_Char(' ');
  6569  05DF  3020               	movlw	32
  6570  05E0  3188  2001  3185   	fcall	_LCD_Write_Char
  6571                           
  6572                           ;main.c: 111: LCD_Write_Int(dutyCycle6,5,0,0);
  6573  05E3  0021               	movlb	1	; select bank1
  6574  05E4  085C               	movf	(main@dutyCycle6+1)^(0+128),w
  6575  05E5  00FA               	movwf	LCD_Write_Int@value+1
  6576  05E6  085B               	movf	main@dutyCycle6^(0+128),w
  6577  05E7  00F9               	movwf	LCD_Write_Int@value
  6578  05E8  3005               	movlw	5
  6579  05E9  00C9               	movwf	??_main^(0+128)
  6580  05EA  0849               	movf	??_main^(0+128),w
  6581  05EB  00FB               	movwf	LCD_Write_Int@fieldLength
  6582  05EC  01FC               	clrf	LCD_Write_Int@numPlaces
  6583  05ED  01FD               	clrf	LCD_Write_Int@sign
  6584  05EE  318D  2566  3185   	fcall	_LCD_Write_Int
  6585                           
  6586                           ;main.c: 116: if(holdOutput==0)
  6587  05F1  0020               	movlb	0	; select bank0
  6588  05F2  086B               	movf	main@holdOutput,w
  6589  05F3  1D03               	btfss	3,2
  6590  05F4  2E98               	goto	l3160
  6591                           
  6592                           ;main.c: 117: {
  6593                           ;main.c: 118: output = PID_Calculate(setpoint[0],analogs[1]);
  6594  05F5  0021               	movlb	1	; select bank1
  6595  05F6  0863               	movf	(_setpoint+1)^(0+128),w
  6596  05F7  00F7               	movwf	PID_Calculate@setpoint+1
  6597  05F8  0862               	movf	_setpoint^(0+128),w
  6598  05F9  00F6               	movwf	PID_Calculate@setpoint
  6599  05FA  0860               	movf	((main@analogs+1)^(0+128)+2),w
  6600  05FB  00F9               	movwf	PID_Calculate@temp+1
  6601  05FC  085F               	movf	(main@analogs^(0+128)+2),w
  6602  05FD  00F8               	movwf	PID_Calculate@temp
  6603  05FE  318E  262F  3185   	fcall	_PID_Calculate
  6604  0601  0877               	movf	?_PID_Calculate+1,w
  6605  0602  0020               	movlb	0	; select bank0
  6606  0603  00EA               	movwf	main@output+1
  6607  0604  0876               	movf	?_PID_Calculate,w
  6608  0605  00E9               	movwf	main@output
  6609                           
  6610                           ;main.c: 119: outputTotal = outputTotal - outputSamples[outputIndex];
  6611  0606  0021               	movlb	1	; select bank1
  6612  0607  0857               	movf	main@outputTotal^(0+128),w
  6613  0608  00C9               	movwf	??_main^(0+128)
  6614  0609  0858               	movf	(main@outputTotal+1)^(0+128),w
  6615  060A  00CA               	movwf	(??_main^(0+128)+1)
  6616  060B  0859               	movf	(main@outputTotal+2)^(0+128),w
  6617  060C  00CB               	movwf	(??_main^(0+128)+2)
  6618  060D  085A               	movf	(main@outputTotal+3)^(0+128),w
  6619  060E  00CC               	movwf	(??_main^(0+128)+3)
  6620  060F  0020               	movlb	0	; select bank0
  6621  0610  356F               	lslf	main@outputIndex,w
  6622  0611  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6623  0612  0086               	movwf	6
  6624  0613  3001               	movlw	1	; select bank2/3
  6625  0614  0087               	movwf	7
  6626  0615  3F40               	moviw [0]fsr1
  6627  0616  0021               	movlb	1	; select bank1
  6628  0617  00CD               	movwf	(??_main+4)^(0+128)
  6629  0618  3F41               	moviw [1]fsr1
  6630  0619  00CE               	movwf	((??_main+4)^(0+128)+1)
  6631  061A  084D               	movf	(??_main+4)^(0+128),w
  6632  061B  00CF               	movwf	(??_main+6)^(0+128)
  6633  061C  084E               	movf	(??_main+5)^(0+128),w
  6634  061D  00D0               	movwf	((??_main+6)^(0+128)+1)
  6635  061E  3000               	movlw	0
  6636  061F  1BD0               	btfsc	((??_main+6)^(0+128)+1),7
  6637  0620  30FF               	movlw	255
  6638  0621  00D1               	movwf	((??_main+6)^(0+128)+2)
  6639  0622  00D2               	movwf	((??_main+6)^(0+128)+3)
  6640  0623  09CF               	comf	(??_main+6)^(0+128),f
  6641  0624  09D0               	comf	((??_main+6)^(0+128)+1),f
  6642  0625  09D1               	comf	((??_main+6)^(0+128)+2),f
  6643  0626  09D2               	comf	((??_main+6)^(0+128)+3),f
  6644  0627  0ACF               	incf	(??_main+6)^(0+128),f
  6645  0628  1903               	skipnz
  6646  0629  0AD0               	incf	((??_main+6)^(0+128)+1),f
  6647  062A  1903               	skipnz
  6648  062B  0AD1               	incf	((??_main+6)^(0+128)+2),f
  6649  062C  1903               	skipnz
  6650  062D  0AD2               	incf	((??_main+6)^(0+128)+3),f
  6651  062E  084F               	movf	(??_main+6)^(0+128),w
  6652  062F  07C9               	addwf	??_main^(0+128),f
  6653  0630  0850               	movf	(??_main+7)^(0+128),w
  6654  0631  3DCA               	addwfc	(??_main^(0+128)+1),f
  6655  0632  0851               	movf	(??_main+8)^(0+128),w
  6656  0633  3DCB               	addwfc	(??_main^(0+128)+2),f
  6657  0634  0852               	movf	(??_main+9)^(0+128),w
  6658  0635  3DCC               	addwfc	(??_main^(0+128)+3),f
  6659  0636  084C               	movf	(??_main+3)^(0+128),w
  6660  0637  00DA               	movwf	(main@outputTotal+3)^(0+128)
  6661  0638  084B               	movf	(??_main+2)^(0+128),w
  6662  0639  00D9               	movwf	(main@outputTotal+2)^(0+128)
  6663  063A  084A               	movf	(??_main+1)^(0+128),w
  6664  063B  00D8               	movwf	(main@outputTotal+1)^(0+128)
  6665  063C  0849               	movf	??_main^(0+128),w
  6666  063D  00D7               	movwf	main@outputTotal^(0+128)
  6667                           
  6668                           ;main.c: 120: outputSamples[outputIndex] = output;
  6669  063E  0020               	movlb	0	; select bank0
  6670  063F  356F               	lslf	main@outputIndex,w
  6671  0640  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6672  0641  0086               	movwf	6
  6673  0642  3001               	movlw	1	; select bank2/3
  6674  0643  0087               	movwf	7
  6675  0644  0869               	movf	main@output,w
  6676  0645  3FC0               	movwi [0]fsr1
  6677  0646  086A               	movf	main@output+1,w
  6678  0647  3FC1               	movwi [1]fsr1
  6679                           
  6680                           ;main.c: 121: outputTotal = outputTotal + outputSamples[outputIndex];
  6681  0648  0021               	movlb	1	; select bank1
  6682  0649  0857               	movf	main@outputTotal^(0+128),w
  6683  064A  00C9               	movwf	??_main^(0+128)
  6684  064B  0858               	movf	(main@outputTotal+1)^(0+128),w
  6685  064C  00CA               	movwf	(??_main^(0+128)+1)
  6686  064D  0859               	movf	(main@outputTotal+2)^(0+128),w
  6687  064E  00CB               	movwf	(??_main^(0+128)+2)
  6688  064F  085A               	movf	(main@outputTotal+3)^(0+128),w
  6689  0650  00CC               	movwf	(??_main^(0+128)+3)
  6690  0651  0020               	movlb	0	; select bank0
  6691  0652  356F               	lslf	main@outputIndex,w
  6692  0653  3E20               	addlw	(low (main@outputSamples| (0+256)))& (0+255)
  6693  0654  0086               	movwf	6
  6694  0655  3001               	movlw	1	; select bank2/3
  6695  0656  0087               	movwf	7
  6696  0657  3F40               	moviw [0]fsr1
  6697  0658  0021               	movlb	1	; select bank1
  6698  0659  00CD               	movwf	(??_main+4)^(0+128)
  6699  065A  3F41               	moviw [1]fsr1
  6700  065B  00CE               	movwf	((??_main+4)^(0+128)+1)
  6701  065C  084D               	movf	(??_main+4)^(0+128),w
  6702  065D  00CF               	movwf	(??_main+6)^(0+128)
  6703  065E  084E               	movf	(??_main+5)^(0+128),w
  6704  065F  00D0               	movwf	((??_main+6)^(0+128)+1)
  6705  0660  3000               	movlw	0
  6706  0661  1BD0               	btfsc	((??_main+6)^(0+128)+1),7
  6707  0662  30FF               	movlw	255
  6708  0663  00D1               	movwf	((??_main+6)^(0+128)+2)
  6709  0664  00D2               	movwf	((??_main+6)^(0+128)+3)
  6710  0665  084F               	movf	(??_main+6)^(0+128),w
  6711  0666  07C9               	addwf	??_main^(0+128),f
  6712  0667  0850               	movf	(??_main+7)^(0+128),w
  6713  0668  3DCA               	addwfc	(??_main^(0+128)+1),f
  6714  0669  0851               	movf	(??_main+8)^(0+128),w
  6715  066A  3DCB               	addwfc	(??_main^(0+128)+2),f
  6716  066B  0852               	movf	(??_main+9)^(0+128),w
  6717  066C  3DCC               	addwfc	(??_main^(0+128)+3),f
  6718  066D  084C               	movf	(??_main+3)^(0+128),w
  6719  066E  00DA               	movwf	(main@outputTotal+3)^(0+128)
  6720  066F  084B               	movf	(??_main+2)^(0+128),w
  6721  0670  00D9               	movwf	(main@outputTotal+2)^(0+128)
  6722  0671  084A               	movf	(??_main+1)^(0+128),w
  6723  0672  00D8               	movwf	(main@outputTotal+1)^(0+128)
  6724  0673  0849               	movf	??_main^(0+128),w
  6725  0674  00D7               	movwf	main@outputTotal^(0+128)
  6726                           
  6727                           ;main.c: 122: dutyCycle6 = outputTotal/40;
  6728  0675  3000               	movlw	0
  6729  0676  00F3               	movwf	___aldiv@divisor+3
  6730  0677  3000               	movlw	0
  6731  0678  00F2               	movwf	___aldiv@divisor+2
  6732  0679  3000               	movlw	0
  6733  067A  00F1               	movwf	___aldiv@divisor+1
  6734  067B  3028               	movlw	40
  6735  067C  00F0               	movwf	___aldiv@divisor
  6736  067D  085A               	movf	(main@outputTotal+3)^(0+128),w
  6737  067E  00F7               	movwf	___aldiv@dividend+3
  6738  067F  0859               	movf	(main@outputTotal+2)^(0+128),w
  6739  0680  00F6               	movwf	___aldiv@dividend+2
  6740  0681  0858               	movf	(main@outputTotal+1)^(0+128),w
  6741  0682  00F5               	movwf	___aldiv@dividend+1
  6742  0683  0857               	movf	main@outputTotal^(0+128),w
  6743  0684  00F4               	movwf	___aldiv@dividend
  6744  0685  318A  227E  3185   	fcall	___aldiv
  6745  0688  0871               	movf	?___aldiv+1,w
  6746  0689  0021               	movlb	1	; select bank1
  6747  068A  00DC               	movwf	(main@dutyCycle6+1)^(0+128)
  6748  068B  0870               	movf	?___aldiv,w
  6749  068C  00DB               	movwf	main@dutyCycle6^(0+128)
  6750                           
  6751                           ;main.c: 124: outputIndex+=1;
  6752  068D  3001               	movlw	1
  6753  068E  00C9               	movwf	??_main^(0+128)
  6754  068F  0849               	movf	??_main^(0+128),w
  6755  0690  0020               	movlb	0	; select bank0
  6756  0691  07EF               	addwf	main@outputIndex,f
  6757                           
  6758                           ;main.c: 125: if(outputIndex >= 40)outputIndex = 0;
  6759  0692  3028               	movlw	40
  6760  0693  026F               	subwf	main@outputIndex,w
  6761  0694  1C03               	skipc
  6762  0695  2E9E               	goto	l3164
  6763  0696  01EF               	clrf	main@outputIndex
  6764                           
  6765                           ;main.c: 126: }
  6766  0697  2E9E               	goto	l3164
  6767  0698                     l3160:	
  6768                           
  6769                           ;main.c: 127: else
  6770                           ;main.c: 128: {
  6771                           ;main.c: 129: dutyCycle6=0;
  6772  0698  0021               	movlb	1	; select bank1
  6773  0699  01DB               	clrf	main@dutyCycle6^(0+128)
  6774  069A  01DC               	clrf	(main@dutyCycle6+1)^(0+128)
  6775                           
  6776                           ;main.c: 130: holdOutput-=1;
  6777  069B  3001               	movlw	1
  6778  069C  0020               	movlb	0	; select bank0
  6779  069D  02EB               	subwf	main@holdOutput,f
  6780  069E                     l3164:	
  6781                           
  6782                           ;main.c: 131: }
  6783                           ;main.c: 133: currentTemperature=analogs[1];
  6784  069E  0021               	movlb	1	; select bank1
  6785  069F  0860               	movf	((main@analogs+1)^(0+128)+2),w
  6786  06A0  00D6               	movwf	(main@currentTemperature+1)^(0+128)
  6787  06A1  085F               	movf	(main@analogs^(0+128)+2),w
  6788  06A2  00D5               	movwf	main@currentTemperature^(0+128)
  6789                           
  6790                           ;main.c: 135: if(lidOpenCount<10)
  6791  06A3  300A               	movlw	10
  6792  06A4  0020               	movlb	0	; select bank0
  6793  06A5  026C               	subwf	main@lidOpenCount,w
  6794  06A6  1803               	skipnc
  6795  06A7  2EAF               	goto	l3170
  6796                           
  6797                           ;main.c: 136: {
  6798                           ;main.c: 137: lidOpenCount+=1;
  6799  06A8  3001               	movlw	1
  6800  06A9  0021               	movlb	1	; select bank1
  6801  06AA  00C9               	movwf	??_main^(0+128)
  6802  06AB  0849               	movf	??_main^(0+128),w
  6803  06AC  0020               	movlb	0	; select bank0
  6804  06AD  07EC               	addwf	main@lidOpenCount,f
  6805                           
  6806                           ;main.c: 138: }
  6807  06AE  2EB8               	goto	l3174
  6808  06AF                     l3170:	
  6809                           
  6810                           ;main.c: 139: else
  6811                           ;main.c: 140: {
  6812                           ;main.c: 141: lastTemperature=currentTemperature;
  6813  06AF  0021               	movlb	1	; select bank1
  6814  06B0  0856               	movf	(main@currentTemperature+1)^(0+128),w
  6815  06B1  0020               	movlb	0	; select bank0
  6816  06B2  00EE               	movwf	main@lastTemperature+1
  6817  06B3  0021               	movlb	1	; select bank1
  6818  06B4  0855               	movf	main@currentTemperature^(0+128),w
  6819  06B5  0020               	movlb	0	; select bank0
  6820  06B6  00ED               	movwf	main@lastTemperature
  6821                           
  6822                           ;main.c: 142: lidOpenCount=0;
  6823  06B7  01EC               	clrf	main@lidOpenCount
  6824  06B8                     l3174:	
  6825                           
  6826                           ;main.c: 143: }
  6827                           ;main.c: 145: if(lastTemperature-currentTemperature>100 || lastTemperature-currentTemper
      +                          ature<-100)
  6828  06B8  0021               	movlb	1	; select bank1
  6829  06B9  0955               	comf	main@currentTemperature^(0+128),w
  6830  06BA  00C9               	movwf	??_main^(0+128)
  6831  06BB  0956               	comf	(main@currentTemperature+1)^(0+128),w
  6832  06BC  00CA               	movwf	(??_main^(0+128)+1)
  6833  06BD  0AC9               	incf	??_main^(0+128),f
  6834  06BE  1903               	skipnz
  6835  06BF  0ACA               	incf	(??_main^(0+128)+1),f
  6836  06C0  0020               	movlb	0	; select bank0
  6837  06C1  086D               	movf	main@lastTemperature,w
  6838  06C2  0021               	movlb	1	; select bank1
  6839  06C3  0749               	addwf	??_main^(0+128),w
  6840  06C4  00CB               	movwf	(??_main+2)^(0+128)
  6841  06C5  0020               	movlb	0	; select bank0
  6842  06C6  086E               	movf	main@lastTemperature+1,w
  6843  06C7  0021               	movlb	1	; select bank1
  6844  06C8  3D4A               	addwfc	(??_main+1)^(0+128),w
  6845  06C9  00CC               	movwf	(??_main+3)^(0+128)
  6846  06CA  084C               	movf	(??_main+3)^(0+128),w
  6847  06CB  3A80               	xorlw	128
  6848  06CC  00CD               	movwf	(??_main+4)^(0+128)
  6849  06CD  3080               	movlw	128
  6850  06CE  024D               	subwf	(??_main+4)^(0+128),w
  6851  06CF  1D03               	skipz
  6852  06D0  2ED3               	goto	u3595
  6853  06D1  3065               	movlw	101
  6854  06D2  024B               	subwf	(??_main+2)^(0+128),w
  6855  06D3                     u3595:	
  6856  06D3  1803               	skipnc
  6857  06D4  2EF2               	goto	l3178
  6858  06D5  0021               	movlb	1	; select bank1
  6859  06D6  0955               	comf	main@currentTemperature^(0+128),w
  6860  06D7  00C9               	movwf	??_main^(0+128)
  6861  06D8  0956               	comf	(main@currentTemperature+1)^(0+128),w
  6862  06D9  00CA               	movwf	(??_main^(0+128)+1)
  6863  06DA  0AC9               	incf	??_main^(0+128),f
  6864  06DB  1903               	skipnz
  6865  06DC  0ACA               	incf	(??_main^(0+128)+1),f
  6866  06DD  0020               	movlb	0	; select bank0
  6867  06DE  086D               	movf	main@lastTemperature,w
  6868  06DF  0021               	movlb	1	; select bank1
  6869  06E0  0749               	addwf	??_main^(0+128),w
  6870  06E1  00CB               	movwf	(??_main+2)^(0+128)
  6871  06E2  0020               	movlb	0	; select bank0
  6872  06E3  086E               	movf	main@lastTemperature+1,w
  6873  06E4  0021               	movlb	1	; select bank1
  6874  06E5  3D4A               	addwfc	(??_main+1)^(0+128),w
  6875  06E6  00CC               	movwf	(??_main+3)^(0+128)
  6876  06E7  084C               	movf	(??_main+3)^(0+128),w
  6877  06E8  3A80               	xorlw	128
  6878  06E9  00CD               	movwf	(??_main+4)^(0+128)
  6879  06EA  307F               	movlw	127
  6880  06EB  024D               	subwf	(??_main+4)^(0+128),w
  6881  06EC  1D03               	skipz
  6882  06ED  2EF0               	goto	u3605
  6883  06EE  309C               	movlw	156
  6884  06EF  024B               	subwf	(??_main+2)^(0+128),w
  6885  06F0                     u3605:	
  6886  06F0  1803               	skipnc
  6887  06F1  2EFA               	goto	l3182
  6888  06F2                     l3178:	
  6889                           
  6890                           ;main.c: 146: {
  6891                           ;main.c: 147: dutyCycle6=0;
  6892  06F2  0021               	movlb	1	; select bank1
  6893  06F3  01DB               	clrf	main@dutyCycle6^(0+128)
  6894  06F4  01DC               	clrf	(main@dutyCycle6+1)^(0+128)
  6895                           
  6896                           ;main.c: 148: holdOutput=60;
  6897  06F5  303C               	movlw	60
  6898  06F6  00C9               	movwf	??_main^(0+128)
  6899  06F7  0849               	movf	??_main^(0+128),w
  6900  06F8  0020               	movlb	0	; select bank0
  6901  06F9  00EB               	movwf	main@holdOutput
  6902  06FA                     l3182:	
  6903                           
  6904                           ;main.c: 149: }
  6905                           ;main.c: 151: if(dutyCycle6<50)dutyCycle6=0;
  6906  06FA  3000               	movlw	0
  6907  06FB  0021               	movlb	1	; select bank1
  6908  06FC  025C               	subwf	(main@dutyCycle6+1)^(0+128),w
  6909  06FD  3032               	movlw	50
  6910  06FE  1903               	skipnz
  6911  06FF  025B               	subwf	main@dutyCycle6^(0+128),w
  6912  0700  1803               	skipnc
  6913  0701  2F04               	goto	l429
  6914  0702  01DB               	clrf	main@dutyCycle6^(0+128)
  6915  0703  01DC               	clrf	(main@dutyCycle6+1)^(0+128)
  6916  0704                     l429:	
  6917                           
  6918                           ;main.c: 153: loop=0;
  6919  0704  01EE               	clrf	_loop^(0+128)
  6920  0705                     l3186:	
  6921                           
  6922                           ;main.c: 154: }
  6923                           ;main.c: 156: pidPeriodCounter+=1;
  6924  0705  3001               	movlw	1
  6925  0706  07D3               	addwf	main@pidPeriodCounter^(0+128),f
  6926  0707  3000               	movlw	0
  6927  0708  3DD4               	addwfc	(main@pidPeriodCounter+1)^(0+128),f
  6928                           
  6929                           ;main.c: 158: if(pidPeriodCounter>pidMaxOutput)pidPeriodCounter=0;
  6930  0709  086D               	movf	(_pidMaxOutput+1)^(0+128),w
  6931  070A  3A80               	xorlw	128
  6932  070B  00C9               	movwf	??_main^(0+128)
  6933  070C  0854               	movf	(main@pidPeriodCounter+1)^(0+128),w
  6934  070D  3A80               	xorlw	128
  6935  070E  0249               	subwf	??_main^(0+128),w
  6936  070F  1D03               	skipz
  6937  0710  2F13               	goto	u3625
  6938  0711  0853               	movf	main@pidPeriodCounter^(0+128),w
  6939  0712  026C               	subwf	_pidMaxOutput^(0+128),w
  6940  0713                     u3625:	
  6941  0713  1803               	skipnc
  6942  0714  2F18               	goto	l3192
  6943  0715  0021               	movlb	1	; select bank1
  6944  0716  01D3               	clrf	main@pidPeriodCounter^(0+128)
  6945  0717  01D4               	clrf	(main@pidPeriodCounter+1)^(0+128)
  6946  0718                     l3192:	
  6947                           
  6948                           ;main.c: 160: if(dutyCycle6>pidPeriodCounter)LATC2=1;
  6949  0718  0021               	movlb	1	; select bank1
  6950  0719  085C               	movf	(main@dutyCycle6+1)^(0+128),w
  6951  071A  0254               	subwf	(main@pidPeriodCounter+1)^(0+128),w
  6952  071B  1D03               	skipz
  6953  071C  2F1F               	goto	u3635
  6954  071D  085B               	movf	main@dutyCycle6^(0+128),w
  6955  071E  0253               	subwf	main@pidPeriodCounter^(0+128),w
  6956  071F                     u3635:	
  6957  071F  1803               	skipnc
  6958  0720  2F24               	goto	l431
  6959  0721  0020               	movlb	0	; select bank0
  6960  0722  1518               	bsf	24,2	;volatile
  6961  0723  2F26               	goto	l3196
  6962  0724                     l431:	
  6963                           
  6964                           ;main.c: 161: else LATC2=0;
  6965  0724  0020               	movlb	0	; select bank0
  6966  0725  1118               	bcf	24,2	;volatile
  6967  0726                     l3196:	
  6968                           
  6969                           ;main.c: 163: for(j=0;j<2;j++) analogs[j]=readAnalog(j);
  6970  0726  0021               	movlb	1	; select bank1
  6971  0727  01E1               	clrf	main@j^(0+128)
  6972  0728  3002               	movlw	2
  6973  0729  0261               	subwf	main@j^(0+128),w
  6974  072A  1803               	btfsc	3,0
  6975  072B  2F4C               	goto	l3208
  6976  072C                     l3202:	
  6977  072C  0861               	movf	main@j^(0+128),w
  6978  072D  00C9               	movwf	??_main^(0+128)
  6979  072E  01CA               	clrf	(??_main^(0+128)+1)
  6980  072F  0849               	movf	??_main^(0+128),w
  6981  0730  0020               	movlb	0	; select bank0
  6982  0731  00A6               	movwf	readAnalog@channel
  6983  0732  0021               	movlb	1	; select bank1
  6984  0733  084A               	movf	(??_main+1)^(0+128),w
  6985  0734  0020               	movlb	0	; select bank0
  6986  0735  00A7               	movwf	readAnalog@channel+1
  6987  0736  3181  21DC  3185   	fcall	_readAnalog
  6988  0739  0021               	movlb	1	; select bank1
  6989  073A  3561               	lslf	main@j^(0+128),w
  6990  073B  3EDD               	addlw	(low (main@analogs| 0))& (0+255)
  6991  073C  0086               	movwf	6
  6992  073D  0187               	clrf	7
  6993  073E  0020               	movlb	0	; select bank0
  6994  073F  0826               	movf	?_readAnalog,w
  6995  0740  3FC0               	movwi [0]fsr1
  6996  0741  0827               	movf	?_readAnalog+1,w
  6997  0742  3FC1               	movwi [1]fsr1
  6998  0743  3001               	movlw	1
  6999  0744  0021               	movlb	1	; select bank1
  7000  0745  00C9               	movwf	??_main^(0+128)
  7001  0746  0849               	movf	??_main^(0+128),w
  7002  0747  07E1               	addwf	main@j^(0+128),f
  7003  0748  3002               	movlw	2
  7004  0749  0261               	subwf	main@j^(0+128),w
  7005  074A  1C03               	skipc
  7006  074B  2F2C               	goto	l3202
  7007  074C                     l3208:	
  7008                           
  7009                           ;main.c: 165: analogs[0]=tempCalc(analogs[0]);
  7010  074C  085E               	movf	(main@analogs+1)^(0+128),w
  7011  074D  0020               	movlb	0	; select bank0
  7012  074E  00DE               	movwf	tempCalc@analogValue+1
  7013  074F  0021               	movlb	1	; select bank1
  7014  0750  085D               	movf	main@analogs^(0+128),w
  7015  0751  0020               	movlb	0	; select bank0
  7016  0752  00DD               	movwf	tempCalc@analogValue
  7017  0753  3180  20BF  3185   	fcall	_tempCalc
  7018  0756  0020               	movlb	0	; select bank0
  7019  0757  085E               	movf	?_tempCalc+1,w
  7020  0758  0021               	movlb	1	; select bank1
  7021  0759  00DE               	movwf	(main@analogs+1)^(0+128)
  7022  075A  0020               	movlb	0	; select bank0
  7023  075B  085D               	movf	?_tempCalc,w
  7024  075C  0021               	movlb	1	; select bank1
  7025  075D  00DD               	movwf	main@analogs^(0+128)
  7026                           
  7027                           ;main.c: 167: analogs[1]=tempCalc(analogs[1]);
  7028  075E  0860               	movf	((main@analogs+1)^(0+128)+2),w
  7029  075F  0020               	movlb	0	; select bank0
  7030  0760  00DE               	movwf	tempCalc@analogValue+1
  7031  0761  0021               	movlb	1	; select bank1
  7032  0762  085F               	movf	(main@analogs^(0+128)+2),w
  7033  0763  0020               	movlb	0	; select bank0
  7034  0764  00DD               	movwf	tempCalc@analogValue
  7035  0765  3180  20BF  3185   	fcall	_tempCalc
  7036  0768  0020               	movlb	0	; select bank0
  7037  0769  085E               	movf	?_tempCalc+1,w
  7038  076A  0021               	movlb	1	; select bank1
  7039  076B  00E0               	movwf	((main@analogs+1)^(0+128)+2)
  7040  076C  0020               	movlb	0	; select bank0
  7041  076D  085D               	movf	?_tempCalc,w
  7042  076E  0021               	movlb	1	; select bank1
  7043  076F  00DF               	movwf	(main@analogs^(0+128)+2)
  7044                           
  7045                           ;main.c: 170: if(RB2==1)
  7046  0770  0020               	movlb	0	; select bank0
  7047  0771  1D0D               	btfss	13,2	;volatile
  7048  0772  2FB1               	goto	l3226
  7049                           
  7050                           ;main.c: 171: {
  7051                           ;main.c: 172: LCD_Clear();
  7052  0773  3196  2646  3185   	fcall	_LCD_Clear
  7053                           
  7054                           ;main.c: 173: { LCD_Set_Cursor(0,0); LCD_Write_String("Alter with Up/Dn");};
  7055  0776  01F4               	clrf	LCD_Set_Cursor@y
  7056  0777  3000               	movlw	0
  7057  0778  3188  20A3  3185   	fcall	_LCD_Set_Cursor
  7058  077B  301B               	movlw	low (STR_8| (0+32768))
  7059  077C  00F5               	movwf	LCD_Write_String@a
  7060  077D  3090               	movlw	high (STR_8| (0+32768))
  7061  077E  00F6               	movwf	LCD_Write_String@a+1
  7062  077F  3197  2716  3185   	fcall	_LCD_Write_String
  7063                           
  7064                           ;main.c: 174: { LCD_Set_Cursor(0,1); LCD_Write_String("Enter Key to Set");};
  7065  0782  01F4               	clrf	LCD_Set_Cursor@y
  7066  0783  0AF4               	incf	LCD_Set_Cursor@y,f
  7067  0784  3000               	movlw	0
  7068  0785  3188  20A3  3185   	fcall	_LCD_Set_Cursor
  7069  0788  302C               	movlw	low (STR_9| (0+32768))
  7070  0789  00F5               	movwf	LCD_Write_String@a
  7071  078A  3090               	movlw	high (STR_9| (0+32768))
  7072  078B  00F6               	movwf	LCD_Write_String@a+1
  7073  078C  3197  2716  3185   	fcall	_LCD_Write_String
  7074                           
  7075                           ;main.c: 175: _delay((unsigned long)((1500)*(32000000/4000.0)));
  7076  078F  303D               	movlw	61
  7077  0790  0021               	movlb	1	; select bank1
  7078  0791  00CB               	movwf	(??_main^(0+128)+2)
  7079  0792  30E1               	movlw	225
  7080  0793  00CA               	movwf	(??_main^(0+128)+1)
  7081  0794  307A               	movlw	122
  7082  0795  00C9               	movwf	??_main^(0+128)
  7083  0796                     u3687:	
  7084  0796  0BC9               	decfsz	??_main^(0+128),f
  7085  0797  2F96               	goto	u3687
  7086  0798  0BCA               	decfsz	(??_main^(0+128)+1),f
  7087  0799  2F96               	goto	u3687
  7088  079A  0BCB               	decfsz	(??_main^(0+128)+2),f
  7089  079B  2F96               	goto	u3687
  7090  079C  3200               	nop2
  7091                           
  7092                           ;main.c: 176: LCD_Clear();
  7093  079D  3196  2646  3185   	fcall	_LCD_Clear
  7094                           
  7095                           ;main.c: 177: menuChoice();
  7096  07A0  3183  2319  3185   	fcall	_menuChoice
  7097                           
  7098                           ;main.c: 178: _delay((unsigned long)((500)*(32000000/4000.0)));
  7099  07A3  3015               	movlw	21
  7100  07A4  0021               	movlb	1	; select bank1
  7101  07A5  00CB               	movwf	(??_main^(0+128)+2)
  7102  07A6  304B               	movlw	75
  7103  07A7  00CA               	movwf	(??_main^(0+128)+1)
  7104  07A8  30D1               	movlw	209
  7105  07A9  00C9               	movwf	??_main^(0+128)
  7106  07AA                     u3697:	
  7107  07AA  0BC9               	decfsz	??_main^(0+128),f
  7108  07AB  2FAA               	goto	u3697
  7109  07AC  0BCA               	decfsz	(??_main^(0+128)+1),f
  7110  07AD  2FAA               	goto	u3697
  7111  07AE  0BCB               	decfsz	(??_main^(0+128)+2),f
  7112  07AF  2FAA               	goto	u3697
  7113  07B0  0000               	nop
  7114  07B1                     l3226:	
  7115                           
  7116                           ;main.c: 179: }
  7117                           ;main.c: 415: loop+=1;
  7118  07B1  3001               	movlw	1
  7119  07B2  0021               	movlb	1	; select bank1
  7120  07B3  00C9               	movwf	??_main^(0+128)
  7121  07B4  0849               	movf	??_main^(0+128),w
  7122  07B5  07EE               	addwf	_loop^(0+128),f
  7123  07B6  2D98               	goto	l3118
  7124  07B7                     __end_of_main:	
  7125                           
  7126                           	psect	text1
  7127  00BF                     __ptext1:	
  7128 ;; *************** function _tempCalc *****************
  7129 ;; Defined at:
  7130 ;;		line 4 in file "tempCalc.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  analogValue     2   61[BANK0 ] int 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  steinhart       3   69[BANK0 ] float 
  7135 ;;  R               3   63[BANK0 ] float 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  2   61[BANK0 ] int 
  7138 ;; Registers used:
  7139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;Total ram usage:       11 bytes
  7150 ;; Hardware stack levels used:    1
  7151 ;; Hardware stack levels required when called:    4
  7152 ;; This function calls:
  7153 ;;		___awtoft
  7154 ;;		___ftadd
  7155 ;;		___ftdiv
  7156 ;;		___ftmul
  7157 ;;		___ftsub
  7158 ;;		___fttol
  7159 ;;		_log
  7160 ;; This function is called by:
  7161 ;;		_main
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           
  7166                           ;psect for function _tempCalc
  7167  00BF                     _tempCalc:	
  7168                           
  7169                           ;tempCalc.c: 6: float R, steinhart;
  7170                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7171                           
  7172                           ;incstack = 0
  7173                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7174  00BF  3000               	movlw	0
  7175  00C0  0020               	movlb	0	; select bank0
  7176  00C1  00C0               	movwf	___ftadd@f1
  7177  00C2  3080               	movlw	128
  7178  00C3  00C1               	movwf	___ftadd@f1+1
  7179  00C4  30BF               	movlw	191
  7180  00C5  00C2               	movwf	___ftadd@f1+2
  7181  00C6  085E               	movf	tempCalc@analogValue+1,w
  7182  00C7  00F9               	movwf	___awtoft@c+1
  7183  00C8  085D               	movf	tempCalc@analogValue,w
  7184  00C9  00F8               	movwf	___awtoft@c
  7185  00CA  3197  2769  3180   	fcall	___awtoft
  7186  00CD  0878               	movf	?___awtoft,w
  7187  00CE  0020               	movlb	0	; select bank0
  7188  00CF  00B0               	movwf	___ftdiv@f2
  7189  00D0  0879               	movf	?___awtoft+1,w
  7190  00D1  00B1               	movwf	___ftdiv@f2+1
  7191  00D2  087A               	movf	?___awtoft+2,w
  7192  00D3  00B2               	movwf	___ftdiv@f2+2
  7193  00D4  30C0               	movlw	192
  7194  00D5  00B3               	movwf	___ftdiv@f1
  7195  00D6  307F               	movlw	127
  7196  00D7  00B4               	movwf	___ftdiv@f1+1
  7197  00D8  3044               	movlw	68
  7198  00D9  00B5               	movwf	___ftdiv@f1+2
  7199  00DA  318C  240D  3180   	fcall	___ftdiv
  7200  00DD  0020               	movlb	0	; select bank0
  7201  00DE  0830               	movf	?___ftdiv,w
  7202  00DF  00C3               	movwf	___ftadd@f2
  7203  00E0  0831               	movf	?___ftdiv+1,w
  7204  00E1  00C4               	movwf	___ftadd@f2+1
  7205  00E2  0832               	movf	?___ftdiv+2,w
  7206  00E3  00C5               	movwf	___ftadd@f2+2
  7207  00E4  318F  270A  3180   	fcall	___ftadd
  7208  00E7  0020               	movlb	0	; select bank0
  7209  00E8  0840               	movf	?___ftadd,w
  7210  00E9  00E2               	movwf	_tempCalc$1012
  7211  00EA  0841               	movf	?___ftadd+1,w
  7212  00EB  00E3               	movwf	_tempCalc$1012+1
  7213  00EC  0842               	movf	?___ftadd+2,w
  7214  00ED  00E4               	movwf	_tempCalc$1012+2
  7215                           
  7216                           ;tempCalc.c: 6: float R, steinhart;
  7217                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  7218  00EE  0862               	movf	_tempCalc$1012,w
  7219  00EF  00B0               	movwf	___ftdiv@f2
  7220  00F0  0863               	movf	_tempCalc$1012+1,w
  7221  00F1  00B1               	movwf	___ftdiv@f2+1
  7222  00F2  0864               	movf	_tempCalc$1012+2,w
  7223  00F3  00B2               	movwf	___ftdiv@f2+2
  7224  00F4  3088               	movlw	136
  7225  00F5  00B3               	movwf	___ftdiv@f1
  7226  00F6  301A               	movlw	26
  7227  00F7  00B4               	movwf	___ftdiv@f1+1
  7228  00F8  3046               	movlw	70
  7229  00F9  00B5               	movwf	___ftdiv@f1+2
  7230  00FA  318C  240D  3180   	fcall	___ftdiv
  7231  00FD  0020               	movlb	0	; select bank0
  7232  00FE  0830               	movf	?___ftdiv,w
  7233  00FF  00DF               	movwf	tempCalc@R
  7234  0100  0831               	movf	?___ftdiv+1,w
  7235  0101  00E0               	movwf	tempCalc@R+1
  7236  0102  0832               	movf	?___ftdiv+2,w
  7237  0103  00E1               	movwf	tempCalc@R+2
  7238                           
  7239                           ;tempCalc.c: 10: steinhart = R /9990;
  7240  0104  3018               	movlw	24
  7241  0105  00B0               	movwf	___ftdiv@f2
  7242  0106  301C               	movlw	28
  7243  0107  00B1               	movwf	___ftdiv@f2+1
  7244  0108  3046               	movlw	70
  7245  0109  00B2               	movwf	___ftdiv@f2+2
  7246  010A  085F               	movf	tempCalc@R,w
  7247  010B  00B3               	movwf	___ftdiv@f1
  7248  010C  0860               	movf	tempCalc@R+1,w
  7249  010D  00B4               	movwf	___ftdiv@f1+1
  7250  010E  0861               	movf	tempCalc@R+2,w
  7251  010F  00B5               	movwf	___ftdiv@f1+2
  7252  0110  318C  240D  3180   	fcall	___ftdiv
  7253  0113  0020               	movlb	0	; select bank0
  7254  0114  0830               	movf	?___ftdiv,w
  7255  0115  00E5               	movwf	tempCalc@steinhart
  7256  0116  0831               	movf	?___ftdiv+1,w
  7257  0117  00E6               	movwf	tempCalc@steinhart+1
  7258  0118  0832               	movf	?___ftdiv+2,w
  7259  0119  00E7               	movwf	tempCalc@steinhart+2
  7260                           
  7261                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7262  011A  0865               	movf	tempCalc@steinhart,w
  7263  011B  00D7               	movwf	log@x
  7264  011C  0866               	movf	tempCalc@steinhart+1,w
  7265  011D  00D8               	movwf	log@x+1
  7266  011E  0867               	movf	tempCalc@steinhart+2,w
  7267  011F  00D9               	movwf	log@x+2
  7268  0120  318C  24B6  3180   	fcall	_log
  7269  0123  0020               	movlb	0	; select bank0
  7270  0124  0857               	movf	?_log,w
  7271  0125  00E5               	movwf	tempCalc@steinhart
  7272  0126  0858               	movf	?_log+1,w
  7273  0127  00E6               	movwf	tempCalc@steinhart+1
  7274  0128  0859               	movf	?_log+2,w
  7275  0129  00E7               	movwf	tempCalc@steinhart+2
  7276                           
  7277                           ;tempCalc.c: 12: steinhart /= 4030;
  7278  012A  30E0               	movlw	224
  7279  012B  00B0               	movwf	___ftdiv@f2
  7280  012C  307B               	movlw	123
  7281  012D  00B1               	movwf	___ftdiv@f2+1
  7282  012E  3045               	movlw	69
  7283  012F  00B2               	movwf	___ftdiv@f2+2
  7284  0130  0865               	movf	tempCalc@steinhart,w
  7285  0131  00B3               	movwf	___ftdiv@f1
  7286  0132  0866               	movf	tempCalc@steinhart+1,w
  7287  0133  00B4               	movwf	___ftdiv@f1+1
  7288  0134  0867               	movf	tempCalc@steinhart+2,w
  7289  0135  00B5               	movwf	___ftdiv@f1+2
  7290  0136  318C  240D  3180   	fcall	___ftdiv
  7291  0139  0020               	movlb	0	; select bank0
  7292  013A  0830               	movf	?___ftdiv,w
  7293  013B  00E5               	movwf	tempCalc@steinhart
  7294  013C  0831               	movf	?___ftdiv+1,w
  7295  013D  00E6               	movwf	tempCalc@steinhart+1
  7296  013E  0832               	movf	?___ftdiv+2,w
  7297  013F  00E7               	movwf	tempCalc@steinhart+2
  7298                           
  7299                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  7300  0140  30CF               	movlw	207
  7301  0141  00C0               	movwf	___ftadd@f1
  7302  0142  305B               	movlw	91
  7303  0143  00C1               	movwf	___ftadd@f1+1
  7304  0144  303B               	movlw	59
  7305  0145  00C2               	movwf	___ftadd@f1+2
  7306  0146  0865               	movf	tempCalc@steinhart,w
  7307  0147  00C3               	movwf	___ftadd@f2
  7308  0148  0866               	movf	tempCalc@steinhart+1,w
  7309  0149  00C4               	movwf	___ftadd@f2+1
  7310  014A  0867               	movf	tempCalc@steinhart+2,w
  7311  014B  00C5               	movwf	___ftadd@f2+2
  7312  014C  318F  270A  3180   	fcall	___ftadd
  7313  014F  0020               	movlb	0	; select bank0
  7314  0150  0840               	movf	?___ftadd,w
  7315  0151  00E5               	movwf	tempCalc@steinhart
  7316  0152  0841               	movf	?___ftadd+1,w
  7317  0153  00E6               	movwf	tempCalc@steinhart+1
  7318  0154  0842               	movf	?___ftadd+2,w
  7319  0155  00E7               	movwf	tempCalc@steinhart+2
  7320                           
  7321                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  7322  0156  0865               	movf	tempCalc@steinhart,w
  7323  0157  00B0               	movwf	___ftdiv@f2
  7324  0158  0866               	movf	tempCalc@steinhart+1,w
  7325  0159  00B1               	movwf	___ftdiv@f2+1
  7326  015A  0867               	movf	tempCalc@steinhart+2,w
  7327  015B  00B2               	movwf	___ftdiv@f2+2
  7328  015C  3000               	movlw	0
  7329  015D  00B3               	movwf	___ftdiv@f1
  7330  015E  3080               	movlw	128
  7331  015F  00B4               	movwf	___ftdiv@f1+1
  7332  0160  303F               	movlw	63
  7333  0161  00B5               	movwf	___ftdiv@f1+2
  7334  0162  318C  240D  3180   	fcall	___ftdiv
  7335  0165  0020               	movlb	0	; select bank0
  7336  0166  0830               	movf	?___ftdiv,w
  7337  0167  00E5               	movwf	tempCalc@steinhart
  7338  0168  0831               	movf	?___ftdiv+1,w
  7339  0169  00E6               	movwf	tempCalc@steinhart+1
  7340  016A  0832               	movf	?___ftdiv+2,w
  7341  016B  00E7               	movwf	tempCalc@steinhart+2
  7342                           
  7343                           ;tempCalc.c: 17: steinhart -= 273.15;
  7344  016C  3093               	movlw	147
  7345  016D  00CD               	movwf	___ftsub@f2
  7346  016E  3088               	movlw	136
  7347  016F  00CE               	movwf	___ftsub@f2+1
  7348  0170  3043               	movlw	67
  7349  0171  00CF               	movwf	___ftsub@f2+2
  7350  0172  0865               	movf	tempCalc@steinhart,w
  7351  0173  00D0               	movwf	___ftsub@f1
  7352  0174  0866               	movf	tempCalc@steinhart+1,w
  7353  0175  00D1               	movwf	___ftsub@f1+1
  7354  0176  0867               	movf	tempCalc@steinhart+2,w
  7355  0177  00D2               	movwf	___ftsub@f1+2
  7356  0178  3197  274B  3180   	fcall	___ftsub
  7357  017B  0020               	movlb	0	; select bank0
  7358  017C  084D               	movf	?___ftsub,w
  7359  017D  00E5               	movwf	tempCalc@steinhart
  7360  017E  084E               	movf	?___ftsub+1,w
  7361  017F  00E6               	movwf	tempCalc@steinhart+1
  7362  0180  084F               	movf	?___ftsub+2,w
  7363  0181  00E7               	movwf	tempCalc@steinhart+2
  7364                           
  7365                           ;tempCalc.c: 19: steinhart*=10;
  7366  0182  3000               	movlw	0
  7367  0183  00A0               	movwf	___ftmul@f1
  7368  0184  3020               	movlw	32
  7369  0185  00A1               	movwf	___ftmul@f1+1
  7370  0186  3041               	movlw	65
  7371  0187  00A2               	movwf	___ftmul@f1+2
  7372  0188  0865               	movf	tempCalc@steinhart,w
  7373  0189  00A3               	movwf	___ftmul@f2
  7374  018A  0866               	movf	tempCalc@steinhart+1,w
  7375  018B  00A4               	movwf	___ftmul@f2+1
  7376  018C  0867               	movf	tempCalc@steinhart+2,w
  7377  018D  00A5               	movwf	___ftmul@f2+2
  7378  018E  3180  200B  3180   	fcall	___ftmul
  7379  0191  0020               	movlb	0	; select bank0
  7380  0192  0820               	movf	?___ftmul,w
  7381  0193  00E5               	movwf	tempCalc@steinhart
  7382  0194  0821               	movf	?___ftmul+1,w
  7383  0195  00E6               	movwf	tempCalc@steinhart+1
  7384  0196  0822               	movf	?___ftmul+2,w
  7385  0197  00E7               	movwf	tempCalc@steinhart+2
  7386                           
  7387                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  7388  0198  3000               	movlw	0
  7389  0199  00C0               	movwf	___ftadd@f1
  7390  019A  30A0               	movlw	160
  7391  019B  00C1               	movwf	___ftadd@f1+1
  7392  019C  3043               	movlw	67
  7393  019D  00C2               	movwf	___ftadd@f1+2
  7394  019E  3000               	movlw	0
  7395  019F  00B0               	movwf	___ftdiv@f2
  7396  01A0  30A0               	movlw	160
  7397  01A1  00B1               	movwf	___ftdiv@f2+1
  7398  01A2  3040               	movlw	64
  7399  01A3  00B2               	movwf	___ftdiv@f2+2
  7400  01A4  3000               	movlw	0
  7401  01A5  00A0               	movwf	___ftmul@f1
  7402  01A6  3010               	movlw	16
  7403  01A7  00A1               	movwf	___ftmul@f1+1
  7404  01A8  3041               	movlw	65
  7405  01A9  00A2               	movwf	___ftmul@f1+2
  7406  01AA  0865               	movf	tempCalc@steinhart,w
  7407  01AB  00A3               	movwf	___ftmul@f2
  7408  01AC  0866               	movf	tempCalc@steinhart+1,w
  7409  01AD  00A4               	movwf	___ftmul@f2+1
  7410  01AE  0867               	movf	tempCalc@steinhart+2,w
  7411  01AF  00A5               	movwf	___ftmul@f2+2
  7412  01B0  3180  200B  3180   	fcall	___ftmul
  7413  01B3  0020               	movlb	0	; select bank0
  7414  01B4  0820               	movf	?___ftmul,w
  7415  01B5  00B3               	movwf	___ftdiv@f1
  7416  01B6  0821               	movf	?___ftmul+1,w
  7417  01B7  00B4               	movwf	___ftdiv@f1+1
  7418  01B8  0822               	movf	?___ftmul+2,w
  7419  01B9  00B5               	movwf	___ftdiv@f1+2
  7420  01BA  318C  240D  3180   	fcall	___ftdiv
  7421  01BD  0020               	movlb	0	; select bank0
  7422  01BE  0830               	movf	?___ftdiv,w
  7423  01BF  00C3               	movwf	___ftadd@f2
  7424  01C0  0831               	movf	?___ftdiv+1,w
  7425  01C1  00C4               	movwf	___ftadd@f2+1
  7426  01C2  0832               	movf	?___ftdiv+2,w
  7427  01C3  00C5               	movwf	___ftadd@f2+2
  7428  01C4  318F  270A  3180   	fcall	___ftadd
  7429  01C7  0020               	movlb	0	; select bank0
  7430  01C8  0840               	movf	?___ftadd,w
  7431  01C9  00E5               	movwf	tempCalc@steinhart
  7432  01CA  0841               	movf	?___ftadd+1,w
  7433  01CB  00E6               	movwf	tempCalc@steinhart+1
  7434  01CC  0842               	movf	?___ftadd+2,w
  7435  01CD  00E7               	movwf	tempCalc@steinhart+2
  7436                           
  7437                           ;tempCalc.c: 23: return (int)steinhart;
  7438  01CE  0865               	movf	tempCalc@steinhart,w
  7439  01CF  00F0               	movwf	___fttol@f1
  7440  01D0  0866               	movf	tempCalc@steinhart+1,w
  7441  01D1  00F1               	movwf	___fttol@f1+1
  7442  01D2  0867               	movf	tempCalc@steinhart+2,w
  7443  01D3  00F2               	movwf	___fttol@f1+2
  7444  01D4  318B  2300         	fcall	___fttol
  7445  01D6  0871               	movf	?___fttol+1,w
  7446  01D7  0020               	movlb	0	; select bank0
  7447  01D8  00DE               	movwf	?_tempCalc+1
  7448  01D9  0870               	movf	?___fttol,w
  7449  01DA  00DD               	movwf	?_tempCalc
  7450  01DB  0008               	return
  7451  01DC                     __end_of_tempCalc:	
  7452                           
  7453                           	psect	text2
  7454  0CB6                     __ptext2:	
  7455 ;; *************** function _log *****************
  7456 ;; Defined at:
  7457 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  x               3   55[BANK0 ] int 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;  exponent        2   59[BANK0 ] int 
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  3   55[BANK0 ] int 
  7464 ;; Registers used:
  7465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7471 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;Total ram usage:        6 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    3
  7478 ;; This function calls:
  7479 ;;		___awtoft
  7480 ;;		___ftadd
  7481 ;;		___ftge
  7482 ;;		___ftmul
  7483 ;;		_eval_poly
  7484 ;;		_frexp
  7485 ;; This function is called by:
  7486 ;;		_tempCalc
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           
  7491                           ;psect for function _log
  7492  0CB6                     _log:	
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7496  0CB6  0020               	movlb	0	; select bank0
  7497  0CB7  0857               	movf	log@x,w
  7498  0CB8  00F0               	movwf	___ftge@ff1
  7499  0CB9  0858               	movf	log@x+1,w
  7500  0CBA  00F1               	movwf	___ftge@ff1+1
  7501  0CBB  0859               	movf	log@x+2,w
  7502  0CBC  00F2               	movwf	___ftge@ff1+2
  7503  0CBD  3000               	movlw	0
  7504  0CBE  00F3               	movwf	___ftge@ff2
  7505  0CBF  3000               	movlw	0
  7506  0CC0  00F4               	movwf	___ftge@ff2+1
  7507  0CC1  3000               	movlw	0
  7508  0CC2  00F5               	movwf	___ftge@ff2+2
  7509  0CC3  3188  202D  318C   	fcall	___ftge
  7510  0CC6  1803               	btfsc	3,0
  7511  0CC7  2CD5               	goto	l2664
  7512  0CC8  3021               	movlw	33
  7513  0CC9  0021               	movlb	1	; select bank1
  7514  0CCA  00AC               	movwf	_errno^(0+128)
  7515  0CCB  3000               	movlw	0
  7516  0CCC  00AD               	movwf	(_errno^(0+128)+1)
  7517  0CCD  3000               	movlw	0
  7518  0CCE  0020               	movlb	0	; select bank0
  7519  0CCF  00D7               	movwf	?_log
  7520  0CD0  3000               	movlw	0
  7521  0CD1  00D8               	movwf	?_log+1
  7522  0CD2  3000               	movlw	0
  7523  0CD3  00D9               	movwf	?_log+2
  7524  0CD4  0008               	return
  7525  0CD5                     l2664:	
  7526  0CD5  0020               	movlb	0	; select bank0
  7527  0CD6  0859               	movf	log@x+2,w
  7528  0CD7  0458               	iorwf	log@x+1,w
  7529  0CD8  0457               	iorwf	log@x,w
  7530  0CD9  1D03               	skipz
  7531  0CDA  2CE8               	goto	l2670
  7532  0CDB  3022               	movlw	34
  7533  0CDC  0021               	movlb	1	; select bank1
  7534  0CDD  00AC               	movwf	_errno^(0+128)
  7535  0CDE  3000               	movlw	0
  7536  0CDF  00AD               	movwf	(_errno^(0+128)+1)
  7537  0CE0  3000               	movlw	0
  7538  0CE1  0020               	movlb	0	; select bank0
  7539  0CE2  00D7               	movwf	?_log
  7540  0CE3  3000               	movlw	0
  7541  0CE4  00D8               	movwf	?_log+1
  7542  0CE5  3000               	movlw	0
  7543  0CE6  00D9               	movwf	?_log+2
  7544  0CE7  0008               	return
  7545  0CE8                     l2670:	
  7546  0CE8  3000               	movlw	0
  7547  0CE9  00C0               	movwf	___ftadd@f1
  7548  0CEA  3080               	movlw	128
  7549  0CEB  00C1               	movwf	___ftadd@f1+1
  7550  0CEC  30BF               	movlw	191
  7551  0CED  00C2               	movwf	___ftadd@f1+2
  7552  0CEE  3000               	movlw	0
  7553  0CEF  00A0               	movwf	___ftmul@f1
  7554  0CF0  3000               	movlw	0
  7555  0CF1  00A1               	movwf	___ftmul@f1+1
  7556  0CF2  3040               	movlw	64
  7557  0CF3  00A2               	movwf	___ftmul@f1+2
  7558  0CF4  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7559  0CF5  00DA               	movwf	??_log
  7560  0CF6  085A               	movf	??_log,w
  7561  0CF7  00F3               	movwf	frexp@eptr
  7562  0CF8  0857               	movf	log@x,w
  7563  0CF9  00F0               	movwf	frexp@value
  7564  0CFA  0858               	movf	log@x+1,w
  7565  0CFB  00F1               	movwf	frexp@value+1
  7566  0CFC  0859               	movf	log@x+2,w
  7567  0CFD  00F2               	movwf	frexp@value+2
  7568  0CFE  3188  2068  318C   	fcall	_frexp
  7569  0D01  0870               	movf	?_frexp,w
  7570  0D02  0020               	movlb	0	; select bank0
  7571  0D03  00A3               	movwf	___ftmul@f2
  7572  0D04  0871               	movf	?_frexp+1,w
  7573  0D05  00A4               	movwf	___ftmul@f2+1
  7574  0D06  0872               	movf	?_frexp+2,w
  7575  0D07  00A5               	movwf	___ftmul@f2+2
  7576  0D08  3180  200B  318C   	fcall	___ftmul
  7577  0D0B  0020               	movlb	0	; select bank0
  7578  0D0C  0820               	movf	?___ftmul,w
  7579  0D0D  00C3               	movwf	___ftadd@f2
  7580  0D0E  0821               	movf	?___ftmul+1,w
  7581  0D0F  00C4               	movwf	___ftadd@f2+1
  7582  0D10  0822               	movf	?___ftmul+2,w
  7583  0D11  00C5               	movwf	___ftadd@f2+2
  7584  0D12  318F  270A  318C   	fcall	___ftadd
  7585  0D15  0020               	movlb	0	; select bank0
  7586  0D16  0840               	movf	?___ftadd,w
  7587  0D17  00D7               	movwf	log@x
  7588  0D18  0841               	movf	?___ftadd+1,w
  7589  0D19  00D8               	movwf	log@x+1
  7590  0D1A  0842               	movf	?___ftadd+2,w
  7591  0D1B  00D9               	movwf	log@x+2
  7592  0D1C  30FF               	movlw	255
  7593  0D1D  07DB               	addwf	log@exponent,f
  7594  0D1E  30FF               	movlw	255
  7595  0D1F  3DDC               	addwfc	log@exponent+1,f
  7596  0D20  0857               	movf	log@x,w
  7597  0D21  00CD               	movwf	eval_poly@x
  7598  0D22  0858               	movf	log@x+1,w
  7599  0D23  00CE               	movwf	eval_poly@x+1
  7600  0D24  0859               	movf	log@x+2,w
  7601  0D25  00CF               	movwf	eval_poly@x+2
  7602  0D26  3000               	movlw	low (log@coeff| (0+32768))
  7603  0D27  00D0               	movwf	eval_poly@d
  7604  0D28  3090               	movlw	high (log@coeff| (0+32768))
  7605  0D29  00D1               	movwf	eval_poly@d+1
  7606  0D2A  3008               	movlw	8
  7607  0D2B  00D2               	movwf	eval_poly@n
  7608  0D2C  3000               	movlw	0
  7609  0D2D  00D3               	movwf	eval_poly@n+1
  7610  0D2E  3189  21BA  318C   	fcall	_eval_poly
  7611  0D31  0020               	movlb	0	; select bank0
  7612  0D32  084D               	movf	?_eval_poly,w
  7613  0D33  00D7               	movwf	log@x
  7614  0D34  084E               	movf	?_eval_poly+1,w
  7615  0D35  00D8               	movwf	log@x+1
  7616  0D36  084F               	movf	?_eval_poly+2,w
  7617  0D37  00D9               	movwf	log@x+2
  7618  0D38  0857               	movf	log@x,w
  7619  0D39  00C0               	movwf	___ftadd@f1
  7620  0D3A  0858               	movf	log@x+1,w
  7621  0D3B  00C1               	movwf	___ftadd@f1+1
  7622  0D3C  0859               	movf	log@x+2,w
  7623  0D3D  00C2               	movwf	___ftadd@f1+2
  7624  0D3E  3072               	movlw	114
  7625  0D3F  00A0               	movwf	___ftmul@f1
  7626  0D40  3031               	movlw	49
  7627  0D41  00A1               	movwf	___ftmul@f1+1
  7628  0D42  303F               	movlw	63
  7629  0D43  00A2               	movwf	___ftmul@f1+2
  7630  0D44  085C               	movf	log@exponent+1,w
  7631  0D45  00F9               	movwf	___awtoft@c+1
  7632  0D46  085B               	movf	log@exponent,w
  7633  0D47  00F8               	movwf	___awtoft@c
  7634  0D48  3197  2769  318C   	fcall	___awtoft
  7635  0D4B  0878               	movf	?___awtoft,w
  7636  0D4C  0020               	movlb	0	; select bank0
  7637  0D4D  00A3               	movwf	___ftmul@f2
  7638  0D4E  0879               	movf	?___awtoft+1,w
  7639  0D4F  00A4               	movwf	___ftmul@f2+1
  7640  0D50  087A               	movf	?___awtoft+2,w
  7641  0D51  00A5               	movwf	___ftmul@f2+2
  7642  0D52  3180  200B  318C   	fcall	___ftmul
  7643  0D55  0020               	movlb	0	; select bank0
  7644  0D56  0820               	movf	?___ftmul,w
  7645  0D57  00C3               	movwf	___ftadd@f2
  7646  0D58  0821               	movf	?___ftmul+1,w
  7647  0D59  00C4               	movwf	___ftadd@f2+1
  7648  0D5A  0822               	movf	?___ftmul+2,w
  7649  0D5B  00C5               	movwf	___ftadd@f2+2
  7650  0D5C  318F  270A         	fcall	___ftadd
  7651  0D5E  0020               	movlb	0	; select bank0
  7652  0D5F  0840               	movf	?___ftadd,w
  7653  0D60  00D7               	movwf	?_log
  7654  0D61  0841               	movf	?___ftadd+1,w
  7655  0D62  00D8               	movwf	?_log+1
  7656  0D63  0842               	movf	?___ftadd+2,w
  7657  0D64  00D9               	movwf	?_log+2
  7658  0D65  0008               	return
  7659  0D66                     __end_of_log:	
  7660                           
  7661                           	psect	text3
  7662  0868                     __ptext3:	
  7663 ;; *************** function _frexp *****************
  7664 ;; Defined at:
  7665 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  value           3    0[COMMON] int 
  7668 ;;  eptr            1    3[COMMON] PTR int 
  7669 ;;		 -> log@exponent(2), 
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;		None
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  3    0[COMMON] PTR int 
  7674 ;; Registers used:
  7675 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7676 ;; Tracked objects:
  7677 ;;		On entry : 0/0
  7678 ;;		On exit  : 0/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;Total ram usage:        6 bytes
  7686 ;; Hardware stack levels used:    1
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_log
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           
  7695                           ;psect for function _frexp
  7696  0868                     _frexp:	
  7697                           
  7698                           ;incstack = 0
  7699                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7700  0868  0872               	movf	frexp@value+2,w
  7701  0869  0471               	iorwf	frexp@value+1,w
  7702  086A  0470               	iorwf	frexp@value,w
  7703  086B  1D03               	skipz
  7704  086C  287A               	goto	l2428
  7705  086D  0873               	movf	frexp@eptr,w
  7706  086E  0086               	movwf	6
  7707  086F  0187               	clrf	7
  7708  0870  3000               	movlw	0
  7709  0871  3FC0               	movwi [0]fsr1
  7710  0872  3FC1               	movwi [1]fsr1
  7711  0873  3000               	movlw	0
  7712  0874  00F0               	movwf	?_frexp
  7713  0875  3000               	movlw	0
  7714  0876  00F1               	movwf	?_frexp+1
  7715  0877  3000               	movlw	0
  7716  0878  00F2               	movwf	?_frexp+2
  7717  0879  0008               	return
  7718  087A                     l2428:	
  7719  087A  0872               	movf	frexp@value+2,w
  7720  087B  397F               	andlw	127
  7721  087C  00F4               	movwf	??_frexp
  7722  087D  01F5               	clrf	??_frexp+1
  7723  087E  35F4               	lslf	??_frexp,f
  7724  087F  0DF5               	rlf	??_frexp+1,f
  7725  0880  0873               	movf	frexp@eptr,w
  7726  0881  0086               	movwf	6
  7727  0882  0187               	clrf	7
  7728  0883  0874               	movf	??_frexp,w
  7729  0884  3FC0               	movwi [0]fsr1
  7730  0885  0875               	movf	??_frexp+1,w
  7731  0886  3FC1               	movwi [1]fsr1
  7732  0887  0D71               	rlf	frexp@value+1,w
  7733  0888  0D71               	rlf	frexp@value+1,w
  7734  0889  3901               	andlw	1
  7735  088A  00F4               	movwf	??_frexp
  7736  088B  01F5               	clrf	??_frexp+1
  7737  088C  0873               	movf	frexp@eptr,w
  7738  088D  0086               	movwf	6
  7739  088E  0187               	clrf	7
  7740  088F  0874               	movf	??_frexp,w
  7741  0890  0481               	iorwf	1,f
  7742  0891  3141               	addfsr 1,1
  7743  0892  0875               	movf	??_frexp+1,w
  7744  0893  0481               	iorwf	1,f
  7745  0894  0873               	movf	frexp@eptr,w
  7746  0895  0086               	movwf	6
  7747  0896  0187               	clrf	7
  7748  0897  3082               	movlw	130
  7749  0898  0781               	addwf	1,f
  7750  0899  3141               	addfsr 1,1
  7751  089A  30FF               	movlw	255
  7752  089B  3D81               	addwfc	1,f
  7753  089C  317F               	addfsr 1,-1
  7754  089D  0872               	movf	frexp@value+2,w
  7755  089E  3980               	andlw	-128
  7756  089F  383F               	iorlw	63
  7757  08A0  00F2               	movwf	frexp@value+2
  7758  08A1  13F1               	bcf	frexp@value+1,7
  7759  08A2  0008               	return
  7760  08A3                     __end_of_frexp:	
  7761                           
  7762                           	psect	text4
  7763  09BA                     __ptext4:	
  7764 ;; *************** function _eval_poly *****************
  7765 ;; Defined at:
  7766 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;  x               3   45[BANK0 ] PTR int 
  7769 ;;  d               2   48[BANK0 ] PTR const 
  7770 ;;		 -> log@coeff(27), 
  7771 ;;  n               2   50[BANK0 ] int 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  res             3   52[BANK0 ] int 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  3   45[BANK0 ] int 
  7776 ;; Registers used:
  7777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7783 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;Total ram usage:       10 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    2
  7790 ;; This function calls:
  7791 ;;		___ftadd
  7792 ;;		___ftmul
  7793 ;;		___wmul
  7794 ;; This function is called by:
  7795 ;;		_log
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           
  7800                           ;psect for function _eval_poly
  7801  09BA                     _eval_poly:	
  7802                           
  7803                           ;incstack = 0
  7804                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7805  09BA  0020               	movlb	0	; select bank0
  7806  09BB  0853               	movf	eval_poly@n+1,w
  7807  09BC  00F1               	movwf	___wmul@multiplier+1
  7808  09BD  0852               	movf	eval_poly@n,w
  7809  09BE  00F0               	movwf	___wmul@multiplier
  7810  09BF  3003               	movlw	3
  7811  09C0  00F2               	movwf	___wmul@multiplicand
  7812  09C1  3000               	movlw	0
  7813  09C2  00F3               	movwf	___wmul@multiplicand+1
  7814  09C3  3197  2730  3189   	fcall	___wmul
  7815  09C6  0020               	movlb	0	; select bank0
  7816  09C7  0850               	movf	eval_poly@d,w
  7817  09C8  0770               	addwf	?___wmul,w
  7818  09C9  0084               	movwf	4
  7819  09CA  0851               	movf	eval_poly@d+1,w
  7820  09CB  3D71               	addwfc	?___wmul+1,w
  7821  09CC  0085               	movwf	5
  7822  09CD  3F00               	moviw [0]fsr0
  7823  09CE  00D4               	movwf	eval_poly@res
  7824  09CF  3F01               	moviw [1]fsr0
  7825  09D0  00D5               	movwf	eval_poly@res+1
  7826  09D1  3F02               	moviw [2]fsr0
  7827  09D2                     L1:	
  7828  09D2  00D6               	movwf	eval_poly@res+2
  7829  09D3  0852               	movf	eval_poly@n,w
  7830  09D4  0453               	iorwf	eval_poly@n+1,w
  7831  09D5  1903               	btfsc	3,2
  7832  09D6  2A13               	goto	l2446
  7833  09D7  30FF               	movlw	255
  7834  09D8  07D2               	addwf	eval_poly@n,f
  7835  09D9  30FF               	movlw	255
  7836  09DA  3DD3               	addwfc	eval_poly@n+1,f
  7837  09DB  0853               	movf	eval_poly@n+1,w
  7838  09DC  00F1               	movwf	___wmul@multiplier+1
  7839  09DD  0852               	movf	eval_poly@n,w
  7840  09DE  00F0               	movwf	___wmul@multiplier
  7841  09DF  3003               	movlw	3
  7842  09E0  00F2               	movwf	___wmul@multiplicand
  7843  09E1  3000               	movlw	0
  7844  09E2  00F3               	movwf	___wmul@multiplicand+1
  7845  09E3  3197  2730  3189   	fcall	___wmul
  7846  09E6  0020               	movlb	0	; select bank0
  7847  09E7  0850               	movf	eval_poly@d,w
  7848  09E8  0770               	addwf	?___wmul,w
  7849  09E9  0084               	movwf	4
  7850  09EA  0851               	movf	eval_poly@d+1,w
  7851  09EB  3D71               	addwfc	?___wmul+1,w
  7852  09EC  0085               	movwf	5
  7853  09ED  3F00               	moviw [0]fsr0
  7854  09EE  00C0               	movwf	___ftadd@f1
  7855  09EF  3F01               	moviw [1]fsr0
  7856  09F0  00C1               	movwf	___ftadd@f1+1
  7857  09F1  3F02               	moviw [2]fsr0
  7858  09F2  00C2               	movwf	___ftadd@f1+2
  7859  09F3  0854               	movf	eval_poly@res,w
  7860  09F4  00A0               	movwf	___ftmul@f1
  7861  09F5  0855               	movf	eval_poly@res+1,w
  7862  09F6  00A1               	movwf	___ftmul@f1+1
  7863  09F7  0856               	movf	eval_poly@res+2,w
  7864  09F8  00A2               	movwf	___ftmul@f1+2
  7865  09F9  084D               	movf	eval_poly@x,w
  7866  09FA  00A3               	movwf	___ftmul@f2
  7867  09FB  084E               	movf	eval_poly@x+1,w
  7868  09FC  00A4               	movwf	___ftmul@f2+1
  7869  09FD  084F               	movf	eval_poly@x+2,w
  7870  09FE  00A5               	movwf	___ftmul@f2+2
  7871  09FF  3180  200B  3189   	fcall	___ftmul
  7872  0A02  0020               	movlb	0	; select bank0
  7873  0A03  0820               	movf	?___ftmul,w
  7874  0A04  00C3               	movwf	___ftadd@f2
  7875  0A05  0821               	movf	?___ftmul+1,w
  7876  0A06  00C4               	movwf	___ftadd@f2+1
  7877  0A07  0822               	movf	?___ftmul+2,w
  7878  0A08  00C5               	movwf	___ftadd@f2+2
  7879  0A09  318F  270A  3189   	fcall	___ftadd
  7880  0A0C  0020               	movlb	0	; select bank0
  7881  0A0D  0840               	movf	?___ftadd,w
  7882  0A0E  00D4               	movwf	eval_poly@res
  7883  0A0F  0841               	movf	?___ftadd+1,w
  7884  0A10  00D5               	movwf	eval_poly@res+1
  7885  0A11  0842               	movf	?___ftadd+2,w
  7886  0A12  29D2               	goto	L1
  7887  0A13                     l2446:	
  7888  0A13  0854               	movf	eval_poly@res,w
  7889  0A14  00CD               	movwf	?_eval_poly
  7890  0A15  0855               	movf	eval_poly@res+1,w
  7891  0A16  00CE               	movwf	?_eval_poly+1
  7892  0A17  0856               	movf	eval_poly@res+2,w
  7893  0A18  00CF               	movwf	?_eval_poly+2
  7894  0A19  0008               	return
  7895  0A1A                     __end_of_eval_poly:	
  7896                           
  7897                           	psect	text5
  7898  000B                     __ptext5:	
  7899 ;; *************** function ___ftmul *****************
  7900 ;; Defined at:
  7901 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  f1              3    0[BANK0 ] float 
  7904 ;;  f2              3    3[BANK0 ] float 
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7907 ;;  sign            1   15[BANK0 ] unsigned char 
  7908 ;;  cntr            1   14[BANK0 ] unsigned char 
  7909 ;;  exp             1   10[BANK0 ] unsigned char 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  3    0[BANK0 ] float 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0, pclath, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7919 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;Total ram usage:       16 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    1
  7926 ;; This function calls:
  7927 ;;		___ftpack
  7928 ;; This function is called by:
  7929 ;;		_tempCalc
  7930 ;;		_log
  7931 ;;		_eval_poly
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           
  7936                           ;psect for function ___ftmul
  7937  000B                     ___ftmul:	
  7938                           
  7939                           ;incstack = 0
  7940                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7941  000B  0020               	movlb	0	; select bank0
  7942  000C  0820               	movf	___ftmul@f1,w
  7943  000D  00A6               	movwf	??___ftmul
  7944  000E  0821               	movf	___ftmul@f1+1,w
  7945  000F  00A7               	movwf	??___ftmul+1
  7946  0010  0822               	movf	___ftmul@f1+2,w
  7947  0011  00A8               	movwf	??___ftmul+2
  7948  0012  1003               	clrc
  7949  0013  0D27               	rlf	??___ftmul+1,w
  7950  0014  0D28               	rlf	??___ftmul+2,w
  7951  0015  00A9               	movwf	??___ftmul+3
  7952  0016  0829               	movf	??___ftmul+3,w
  7953  0017  00AA               	movwf	___ftmul@exp
  7954  0018  082A               	movf	___ftmul@exp,w
  7955  0019  1D03               	btfss	3,2
  7956  001A  2822               	goto	l2232
  7957  001B  3000               	movlw	0
  7958  001C  00A0               	movwf	?___ftmul
  7959  001D  3000               	movlw	0
  7960  001E  00A1               	movwf	?___ftmul+1
  7961  001F  3000               	movlw	0
  7962  0020  00A2               	movwf	?___ftmul+2
  7963  0021  0008               	return
  7964  0022                     l2232:	
  7965  0022  0823               	movf	___ftmul@f2,w
  7966  0023  00A6               	movwf	??___ftmul
  7967  0024  0824               	movf	___ftmul@f2+1,w
  7968  0025  00A7               	movwf	??___ftmul+1
  7969  0026  0825               	movf	___ftmul@f2+2,w
  7970  0027  00A8               	movwf	??___ftmul+2
  7971  0028  1003               	clrc
  7972  0029  0D27               	rlf	??___ftmul+1,w
  7973  002A  0D28               	rlf	??___ftmul+2,w
  7974  002B  00A9               	movwf	??___ftmul+3
  7975  002C  0829               	movf	??___ftmul+3,w
  7976  002D  00AF               	movwf	___ftmul@sign
  7977  002E  082F               	movf	___ftmul@sign,w
  7978  002F  1D03               	btfss	3,2
  7979  0030  2838               	goto	l2238
  7980  0031  3000               	movlw	0
  7981  0032  00A0               	movwf	?___ftmul
  7982  0033  3000               	movlw	0
  7983  0034  00A1               	movwf	?___ftmul+1
  7984  0035  3000               	movlw	0
  7985  0036  00A2               	movwf	?___ftmul+2
  7986  0037  0008               	return
  7987  0038                     l2238:	
  7988  0038  082F               	movf	___ftmul@sign,w
  7989  0039  3E7B               	addlw	123
  7990  003A  00A6               	movwf	??___ftmul
  7991  003B  0826               	movf	??___ftmul,w
  7992  003C  07AA               	addwf	___ftmul@exp,f
  7993  003D  0820               	movf	___ftmul@f1,w
  7994  003E  00A6               	movwf	??___ftmul
  7995  003F  0821               	movf	___ftmul@f1+1,w
  7996  0040  00A7               	movwf	??___ftmul+1
  7997  0041  0822               	movf	___ftmul@f1+2,w
  7998  0042  00A8               	movwf	??___ftmul+2
  7999  0043  3010               	movlw	16
  8000  0044                     u2295:	
  8001  0044  36A8               	lsrf	??___ftmul+2,f
  8002  0045  0CA7               	rrf	??___ftmul+1,f
  8003  0046  0CA6               	rrf	??___ftmul,f
  8004  0047  0B89               	decfsz	9,f
  8005  0048  2844               	goto	u2295
  8006  0049  0826               	movf	??___ftmul,w
  8007  004A  00A9               	movwf	??___ftmul+3
  8008  004B  0829               	movf	??___ftmul+3,w
  8009  004C  00AF               	movwf	___ftmul@sign
  8010  004D  0823               	movf	___ftmul@f2,w
  8011  004E  00A6               	movwf	??___ftmul
  8012  004F  0824               	movf	___ftmul@f2+1,w
  8013  0050  00A7               	movwf	??___ftmul+1
  8014  0051  0825               	movf	___ftmul@f2+2,w
  8015  0052  00A8               	movwf	??___ftmul+2
  8016  0053  3010               	movlw	16
  8017  0054                     u2305:	
  8018  0054  36A8               	lsrf	??___ftmul+2,f
  8019  0055  0CA7               	rrf	??___ftmul+1,f
  8020  0056  0CA6               	rrf	??___ftmul,f
  8021  0057  0B89               	decfsz	9,f
  8022  0058  2854               	goto	u2305
  8023  0059  0826               	movf	??___ftmul,w
  8024  005A  00A9               	movwf	??___ftmul+3
  8025  005B  0829               	movf	??___ftmul+3,w
  8026  005C  06AF               	xorwf	___ftmul@sign,f
  8027  005D  3080               	movlw	128
  8028  005E  00A6               	movwf	??___ftmul
  8029  005F  0826               	movf	??___ftmul,w
  8030  0060  05AF               	andwf	___ftmul@sign,f
  8031  0061  17A1               	bsf	___ftmul@f1+1,7
  8032  0062  17A4               	bsf	___ftmul@f2+1,7
  8033  0063  30FF               	movlw	255
  8034  0064  05A3               	andwf	___ftmul@f2,f
  8035  0065  30FF               	movlw	255
  8036  0066  05A4               	andwf	___ftmul@f2+1,f
  8037  0067  3000               	movlw	0
  8038  0068  05A5               	andwf	___ftmul@f2+2,f
  8039  0069  3000               	movlw	0
  8040  006A  00AB               	movwf	___ftmul@f3_as_product
  8041  006B  3000               	movlw	0
  8042  006C  00AC               	movwf	___ftmul@f3_as_product+1
  8043  006D  3000               	movlw	0
  8044  006E  00AD               	movwf	___ftmul@f3_as_product+2
  8045  006F  3007               	movlw	7
  8046  0070  00A6               	movwf	??___ftmul
  8047  0071  0826               	movf	??___ftmul,w
  8048  0072  00AE               	movwf	___ftmul@cntr
  8049  0073                     l2250:	
  8050  0073  1C20               	btfss	___ftmul@f1,0
  8051  0074  287B               	goto	l2254
  8052  0075  0823               	movf	___ftmul@f2,w
  8053  0076  07AB               	addwf	___ftmul@f3_as_product,f
  8054  0077  0824               	movf	___ftmul@f2+1,w
  8055  0078  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8056  0079  0825               	movf	___ftmul@f2+2,w
  8057  007A  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8058  007B                     l2254:	
  8059  007B  3001               	movlw	1
  8060  007C                     u2325:	
  8061  007C  36A2               	lsrf	___ftmul@f1+2,f
  8062  007D  0CA1               	rrf	___ftmul@f1+1,f
  8063  007E  0CA0               	rrf	___ftmul@f1,f
  8064  007F  0B89               	decfsz	9,f
  8065  0080  287C               	goto	u2325
  8066  0081  3001               	movlw	1
  8067  0082                     u2335:	
  8068  0082  35A3               	lslf	___ftmul@f2,f
  8069  0083  0DA4               	rlf	___ftmul@f2+1,f
  8070  0084  0DA5               	rlf	___ftmul@f2+2,f
  8071  0085  0B89               	decfsz	9,f
  8072  0086  2882               	goto	u2335
  8073  0087  3001               	movlw	1
  8074  0088  02AE               	subwf	___ftmul@cntr,f
  8075  0089  1D03               	btfss	3,2
  8076  008A  2873               	goto	l2250
  8077  008B  3009               	movlw	9
  8078  008C  00A6               	movwf	??___ftmul
  8079  008D  0826               	movf	??___ftmul,w
  8080  008E  00AE               	movwf	___ftmul@cntr
  8081  008F                     l2262:	
  8082  008F  1C20               	btfss	___ftmul@f1,0
  8083  0090  2897               	goto	l2266
  8084  0091  0823               	movf	___ftmul@f2,w
  8085  0092  07AB               	addwf	___ftmul@f3_as_product,f
  8086  0093  0824               	movf	___ftmul@f2+1,w
  8087  0094  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8088  0095  0825               	movf	___ftmul@f2+2,w
  8089  0096  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8090  0097                     l2266:	
  8091  0097  3001               	movlw	1
  8092  0098                     u2365:	
  8093  0098  36A2               	lsrf	___ftmul@f1+2,f
  8094  0099  0CA1               	rrf	___ftmul@f1+1,f
  8095  009A  0CA0               	rrf	___ftmul@f1,f
  8096  009B  0B89               	decfsz	9,f
  8097  009C  2898               	goto	u2365
  8098  009D  3001               	movlw	1
  8099  009E                     u2375:	
  8100  009E  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8101  009F  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8102  00A0  0CAB               	rrf	___ftmul@f3_as_product,f
  8103  00A1  0B89               	decfsz	9,f
  8104  00A2  289E               	goto	u2375
  8105  00A3  3001               	movlw	1
  8106  00A4  02AE               	subwf	___ftmul@cntr,f
  8107  00A5  1D03               	btfss	3,2
  8108  00A6  288F               	goto	l2262
  8109  00A7  082B               	movf	___ftmul@f3_as_product,w
  8110  00A8  00F0               	movwf	___ftpack@arg
  8111  00A9  082C               	movf	___ftmul@f3_as_product+1,w
  8112  00AA  00F1               	movwf	___ftpack@arg+1
  8113  00AB  082D               	movf	___ftmul@f3_as_product+2,w
  8114  00AC  00F2               	movwf	___ftpack@arg+2
  8115  00AD  082A               	movf	___ftmul@exp,w
  8116  00AE  00A6               	movwf	??___ftmul
  8117  00AF  0826               	movf	??___ftmul,w
  8118  00B0  00F3               	movwf	___ftpack@exp
  8119  00B1  082F               	movf	___ftmul@sign,w
  8120  00B2  00A7               	movwf	??___ftmul+1
  8121  00B3  0827               	movf	??___ftmul+1,w
  8122  00B4  00F4               	movwf	___ftpack@sign
  8123  00B5  318A  221A         	fcall	___ftpack
  8124  00B7  0870               	movf	?___ftpack,w
  8125  00B8  0020               	movlb	0	; select bank0
  8126  00B9  00A0               	movwf	?___ftmul
  8127  00BA  0871               	movf	?___ftpack+1,w
  8128  00BB  00A1               	movwf	?___ftmul+1
  8129  00BC  0872               	movf	?___ftpack+2,w
  8130  00BD  00A2               	movwf	?___ftmul+2
  8131  00BE  0008               	return
  8132  00BF                     __end_of___ftmul:	
  8133                           
  8134                           	psect	text6
  8135  082D                     __ptext6:	
  8136 ;; *************** function ___ftge *****************
  8137 ;; Defined at:
  8138 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  ff1             3    0[COMMON] float 
  8141 ;;  ff2             3    3[COMMON] float 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;		None               void
  8146 ;; Registers used:
  8147 ;;		wreg, status,2, status,0
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8153 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8156 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8157 ;;Total ram usage:        9 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; This function calls:
  8160 ;;		Nothing
  8161 ;; This function is called by:
  8162 ;;		_log
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           
  8167                           ;psect for function ___ftge
  8168  082D                     ___ftge:	
  8169                           
  8170                           ;incstack = 0
  8171                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8172  082D  1FF2               	btfss	___ftge@ff1+2,7
  8173  082E  2843               	goto	l2404
  8174  082F  0970               	comf	___ftge@ff1,w
  8175  0830  00F6               	movwf	??___ftge
  8176  0831  0971               	comf	___ftge@ff1+1,w
  8177  0832  00F7               	movwf	??___ftge+1
  8178  0833  0972               	comf	___ftge@ff1+2,w
  8179  0834  00F8               	movwf	??___ftge+2
  8180  0835  0AF6               	incf	??___ftge,f
  8181  0836  1903               	skipnz
  8182  0837  0AF7               	incf	??___ftge+1,f
  8183  0838  1903               	skipnz
  8184  0839  0AF8               	incf	??___ftge+2,f
  8185  083A  3000               	movlw	0
  8186  083B  0776               	addwf	??___ftge,w
  8187  083C  00F0               	movwf	___ftge@ff1
  8188  083D  3000               	movlw	0
  8189  083E  3D77               	addwfc	??___ftge+1,w
  8190  083F  00F1               	movwf	___ftge@ff1+1
  8191  0840  3080               	movlw	128
  8192  0841  3D78               	addwfc	??___ftge+2,w
  8193  0842  00F2               	movwf	___ftge@ff1+2
  8194  0843                     l2404:	
  8195  0843  1FF5               	btfss	___ftge@ff2+2,7
  8196  0844  2859               	goto	l2408
  8197  0845  0973               	comf	___ftge@ff2,w
  8198  0846  00F6               	movwf	??___ftge
  8199  0847  0974               	comf	___ftge@ff2+1,w
  8200  0848  00F7               	movwf	??___ftge+1
  8201  0849  0975               	comf	___ftge@ff2+2,w
  8202  084A  00F8               	movwf	??___ftge+2
  8203  084B  0AF6               	incf	??___ftge,f
  8204  084C  1903               	skipnz
  8205  084D  0AF7               	incf	??___ftge+1,f
  8206  084E  1903               	skipnz
  8207  084F  0AF8               	incf	??___ftge+2,f
  8208  0850  3000               	movlw	0
  8209  0851  0776               	addwf	??___ftge,w
  8210  0852  00F3               	movwf	___ftge@ff2
  8211  0853  3000               	movlw	0
  8212  0854  3D77               	addwfc	??___ftge+1,w
  8213  0855  00F4               	movwf	___ftge@ff2+1
  8214  0856  3080               	movlw	128
  8215  0857  3D78               	addwfc	??___ftge+2,w
  8216  0858  00F5               	movwf	___ftge@ff2+2
  8217  0859                     l2408:	
  8218  0859  3080               	movlw	128
  8219  085A  06F2               	xorwf	___ftge@ff1+2,f
  8220  085B  3080               	movlw	128
  8221  085C  06F5               	xorwf	___ftge@ff2+2,f
  8222  085D  0875               	movf	___ftge@ff2+2,w
  8223  085E  0272               	subwf	___ftge@ff1+2,w
  8224  085F  1D03               	skipz
  8225  0860  0008               	return
  8226  0861  0874               	movf	___ftge@ff2+1,w
  8227  0862  0271               	subwf	___ftge@ff1+1,w
  8228  0863  1D03               	skipz
  8229  0864  0008               	return
  8230  0865  0873               	movf	___ftge@ff2,w
  8231  0866  0270               	subwf	___ftge@ff1,w
  8232  0867  0008               	return
  8233  0868                     __end_of___ftge:	
  8234                           
  8235                           	psect	text7
  8236  1769                     __ptext7:	
  8237 ;; *************** function ___awtoft *****************
  8238 ;; Defined at:
  8239 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;  c               2    8[COMMON] int 
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;  sign            1   13[COMMON] unsigned char 
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  3    8[COMMON] float 
  8246 ;; Registers used:
  8247 ;;		wreg, status,2, status,0, pclath, cstack
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8253 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8256 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8257 ;;Total ram usage:        6 bytes
  8258 ;; Hardware stack levels used:    1
  8259 ;; Hardware stack levels required when called:    1
  8260 ;; This function calls:
  8261 ;;		___ftpack
  8262 ;; This function is called by:
  8263 ;;		_tempCalc
  8264 ;;		_log
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           
  8269                           ;psect for function ___awtoft
  8270  1769                     ___awtoft:	
  8271                           
  8272                           ;incstack = 0
  8273                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8274  1769  01FD               	clrf	___awtoft@sign
  8275  176A  1FF9               	btfss	___awtoft@c+1,7
  8276  176B  2F73               	goto	l2396
  8277  176C  09F8               	comf	___awtoft@c,f
  8278  176D  09F9               	comf	___awtoft@c+1,f
  8279  176E  0AF8               	incf	___awtoft@c,f
  8280  176F  1903               	skipnz
  8281  1770  0AF9               	incf	___awtoft@c+1,f
  8282  1771  01FD               	clrf	___awtoft@sign
  8283  1772  0AFD               	incf	___awtoft@sign,f
  8284  1773                     l2396:	
  8285  1773  0878               	movf	___awtoft@c,w
  8286  1774  00F0               	movwf	___ftpack@arg
  8287  1775  0879               	movf	___awtoft@c+1,w
  8288  1776  00F1               	movwf	___ftpack@arg+1
  8289  1777  01F2               	clrf	___ftpack@arg+2
  8290  1778  308E               	movlw	142
  8291  1779  00FB               	movwf	??___awtoft
  8292  177A  087B               	movf	??___awtoft,w
  8293  177B  00F3               	movwf	___ftpack@exp
  8294  177C  087D               	movf	___awtoft@sign,w
  8295  177D  00FC               	movwf	??___awtoft+1
  8296  177E  087C               	movf	??___awtoft+1,w
  8297  177F  00F4               	movwf	___ftpack@sign
  8298  1780  318A  221A         	fcall	___ftpack
  8299  1782  0870               	movf	?___ftpack,w
  8300  1783  00F8               	movwf	?___awtoft
  8301  1784  0871               	movf	?___ftpack+1,w
  8302  1785  00F9               	movwf	?___awtoft+1
  8303  1786  0872               	movf	?___ftpack+2,w
  8304  1787  00FA               	movwf	?___awtoft+2
  8305  1788  0008               	return
  8306  1789                     __end_of___awtoft:	
  8307                           
  8308                           	psect	text8
  8309  0B00                     __ptext8:	
  8310 ;; *************** function ___fttol *****************
  8311 ;; Defined at:
  8312 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;  f1              3    0[COMMON] float 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  lval            4    9[COMMON] unsigned long 
  8317 ;;  exp1            1   13[COMMON] unsigned char 
  8318 ;;  sign1           1    8[COMMON] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  4    0[COMMON] long 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2, status,0
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;Total ram usage:       14 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		_tempCalc
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           
  8342                           ;psect for function ___fttol
  8343  0B00                     ___fttol:	
  8344                           
  8345                           ;incstack = 0
  8346                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8347  0B00  0870               	movf	___fttol@f1,w
  8348  0B01  00F4               	movwf	??___fttol
  8349  0B02  0871               	movf	___fttol@f1+1,w
  8350  0B03  00F5               	movwf	??___fttol+1
  8351  0B04  0872               	movf	___fttol@f1+2,w
  8352  0B05  00F6               	movwf	??___fttol+2
  8353  0B06  1003               	clrc
  8354  0B07  0D75               	rlf	??___fttol+1,w
  8355  0B08  0D76               	rlf	??___fttol+2,w
  8356  0B09  00F7               	movwf	??___fttol+3
  8357  0B0A  0877               	movf	??___fttol+3,w
  8358  0B0B  00FD               	movwf	___fttol@exp1
  8359  0B0C  087D               	movf	___fttol@exp1,w
  8360  0B0D  1D03               	btfss	3,2
  8361  0B0E  2B18               	goto	l2806
  8362  0B0F  3000               	movlw	0
  8363  0B10  00F3               	movwf	?___fttol+3
  8364  0B11  3000               	movlw	0
  8365  0B12  00F2               	movwf	?___fttol+2
  8366  0B13  3000               	movlw	0
  8367  0B14  00F1               	movwf	?___fttol+1
  8368  0B15  3000               	movlw	0
  8369  0B16  00F0               	movwf	?___fttol
  8370  0B17  0008               	return
  8371  0B18                     l2806:	
  8372  0B18  0870               	movf	___fttol@f1,w
  8373  0B19  00F4               	movwf	??___fttol
  8374  0B1A  0871               	movf	___fttol@f1+1,w
  8375  0B1B  00F5               	movwf	??___fttol+1
  8376  0B1C  0872               	movf	___fttol@f1+2,w
  8377  0B1D  00F6               	movwf	??___fttol+2
  8378  0B1E  3017               	movlw	23
  8379  0B1F                     u3115:	
  8380  0B1F  36F6               	lsrf	??___fttol+2,f
  8381  0B20  0CF5               	rrf	??___fttol+1,f
  8382  0B21  0CF4               	rrf	??___fttol,f
  8383  0B22  0B89               	decfsz	9,f
  8384  0B23  2B1F               	goto	u3115
  8385  0B24  0874               	movf	??___fttol,w
  8386  0B25  00F7               	movwf	??___fttol+3
  8387  0B26  0877               	movf	??___fttol+3,w
  8388  0B27  00F8               	movwf	___fttol@sign1
  8389  0B28  17F1               	bsf	___fttol@f1+1,7
  8390  0B29  30FF               	movlw	255
  8391  0B2A  05F0               	andwf	___fttol@f1,f
  8392  0B2B  30FF               	movlw	255
  8393  0B2C  05F1               	andwf	___fttol@f1+1,f
  8394  0B2D  3000               	movlw	0
  8395  0B2E  05F2               	andwf	___fttol@f1+2,f
  8396  0B2F  0870               	movf	___fttol@f1,w
  8397  0B30  00F9               	movwf	___fttol@lval
  8398  0B31  0871               	movf	___fttol@f1+1,w
  8399  0B32  00FA               	movwf	___fttol@lval+1
  8400  0B33  0872               	movf	___fttol@f1+2,w
  8401  0B34  00FB               	movwf	___fttol@lval+2
  8402  0B35  01FC               	clrf	___fttol@lval+3
  8403  0B36  308E               	movlw	142
  8404  0B37  02FD               	subwf	___fttol@exp1,f
  8405  0B38  1FFD               	btfss	___fttol@exp1,7
  8406  0B39  2B56               	goto	l2826
  8407  0B3A  087D               	movf	___fttol@exp1,w
  8408  0B3B  3A80               	xorlw	128
  8409  0B3C  3E8F               	addlw	143
  8410  0B3D  1803               	skipnc
  8411  0B3E  2B48               	goto	l2824
  8412  0B3F  3000               	movlw	0
  8413  0B40  00F3               	movwf	?___fttol+3
  8414  0B41  3000               	movlw	0
  8415  0B42  00F2               	movwf	?___fttol+2
  8416  0B43  3000               	movlw	0
  8417  0B44  00F1               	movwf	?___fttol+1
  8418  0B45  3000               	movlw	0
  8419  0B46  00F0               	movwf	?___fttol
  8420  0B47  0008               	return
  8421  0B48                     l2824:	
  8422  0B48  3001               	movlw	1
  8423  0B49                     u3145:	
  8424  0B49  36FC               	lsrf	___fttol@lval+3,f
  8425  0B4A  0CFB               	rrf	___fttol@lval+2,f
  8426  0B4B  0CFA               	rrf	___fttol@lval+1,f
  8427  0B4C  0CF9               	rrf	___fttol@lval,f
  8428  0B4D  0B89               	decfsz	9,f
  8429  0B4E  2B49               	goto	u3145
  8430  0B4F  3001               	movlw	1
  8431  0B50  00F4               	movwf	??___fttol
  8432  0B51  0874               	movf	??___fttol,w
  8433  0B52  07FD               	addwf	___fttol@exp1,f
  8434  0B53  1903               	btfsc	3,2
  8435  0B54  2B6F               	goto	l2834
  8436  0B55  2B48               	goto	l2824
  8437  0B56                     l2826:	
  8438  0B56  3018               	movlw	24
  8439  0B57  027D               	subwf	___fttol@exp1,w
  8440  0B58  1C03               	skipc
  8441  0B59  2B6C               	goto	l772
  8442  0B5A  3000               	movlw	0
  8443  0B5B  00F3               	movwf	?___fttol+3
  8444  0B5C  3000               	movlw	0
  8445  0B5D  00F2               	movwf	?___fttol+2
  8446  0B5E  3000               	movlw	0
  8447  0B5F  00F1               	movwf	?___fttol+1
  8448  0B60  3000               	movlw	0
  8449  0B61  00F0               	movwf	?___fttol
  8450  0B62  0008               	return
  8451  0B63                     l2832:	
  8452  0B63  3001               	movlw	1
  8453  0B64                     u3175:	
  8454  0B64  35F9               	lslf	___fttol@lval,f
  8455  0B65  0DFA               	rlf	___fttol@lval+1,f
  8456  0B66  0DFB               	rlf	___fttol@lval+2,f
  8457  0B67  0DFC               	rlf	___fttol@lval+3,f
  8458  0B68  0B89               	decfsz	9,f
  8459  0B69  2B64               	goto	u3175
  8460  0B6A  3001               	movlw	1
  8461  0B6B  02FD               	subwf	___fttol@exp1,f
  8462  0B6C                     l772:	
  8463  0B6C  087D               	movf	___fttol@exp1,w
  8464  0B6D  1D03               	btfss	3,2
  8465  0B6E  2B63               	goto	l2832
  8466  0B6F                     l2834:	
  8467  0B6F  0878               	movf	___fttol@sign1,w
  8468  0B70  1903               	btfsc	3,2
  8469  0B71  2B7D               	goto	l2838
  8470  0B72  09F9               	comf	___fttol@lval,f
  8471  0B73  09FA               	comf	___fttol@lval+1,f
  8472  0B74  09FB               	comf	___fttol@lval+2,f
  8473  0B75  09FC               	comf	___fttol@lval+3,f
  8474  0B76  0AF9               	incf	___fttol@lval,f
  8475  0B77  1903               	skipnz
  8476  0B78  0AFA               	incf	___fttol@lval+1,f
  8477  0B79  1903               	skipnz
  8478  0B7A  0AFB               	incf	___fttol@lval+2,f
  8479  0B7B  1903               	skipnz
  8480  0B7C  0AFC               	incf	___fttol@lval+3,f
  8481  0B7D                     l2838:	
  8482  0B7D  087C               	movf	___fttol@lval+3,w
  8483  0B7E  00F3               	movwf	?___fttol+3
  8484  0B7F  087B               	movf	___fttol@lval+2,w
  8485  0B80  00F2               	movwf	?___fttol+2
  8486  0B81  087A               	movf	___fttol@lval+1,w
  8487  0B82  00F1               	movwf	?___fttol+1
  8488  0B83  0879               	movf	___fttol@lval,w
  8489  0B84  00F0               	movwf	?___fttol
  8490  0B85  0008               	return
  8491  0B86                     __end_of___fttol:	
  8492                           
  8493                           	psect	text9
  8494  174B                     __ptext9:	
  8495 ;; *************** function ___ftsub *****************
  8496 ;; Defined at:
  8497 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8498 ;; Parameters:    Size  Location     Type
  8499 ;;  f2              3   45[BANK0 ] float 
  8500 ;;  f1              3   48[BANK0 ] float 
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;		None
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  3   45[BANK0 ] float 
  8505 ;; Registers used:
  8506 ;;		wreg, status,2, status,0, pclath, cstack
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8512 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8515 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8516 ;;Total ram usage:        6 bytes
  8517 ;; Hardware stack levels used:    1
  8518 ;; Hardware stack levels required when called:    2
  8519 ;; This function calls:
  8520 ;;		___ftadd
  8521 ;; This function is called by:
  8522 ;;		_tempCalc
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           
  8527                           ;psect for function ___ftsub
  8528  174B                     ___ftsub:	
  8529                           
  8530                           ;incstack = 0
  8531                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8532  174B  0020               	movlb	0	; select bank0
  8533  174C  084F               	movf	___ftsub@f2+2,w
  8534  174D  044E               	iorwf	___ftsub@f2+1,w
  8535  174E  044D               	iorwf	___ftsub@f2,w
  8536  174F  1903               	skipnz
  8537  1750  2F53               	goto	l2796
  8538  1751  3080               	movlw	128
  8539  1752  06CF               	xorwf	___ftsub@f2+2,f
  8540  1753                     l2796:	
  8541  1753  0850               	movf	___ftsub@f1,w
  8542  1754  00C0               	movwf	___ftadd@f1
  8543  1755  0851               	movf	___ftsub@f1+1,w
  8544  1756  00C1               	movwf	___ftadd@f1+1
  8545  1757  0852               	movf	___ftsub@f1+2,w
  8546  1758  00C2               	movwf	___ftadd@f1+2
  8547  1759  084D               	movf	___ftsub@f2,w
  8548  175A  00C3               	movwf	___ftadd@f2
  8549  175B  084E               	movf	___ftsub@f2+1,w
  8550  175C  00C4               	movwf	___ftadd@f2+1
  8551  175D  084F               	movf	___ftsub@f2+2,w
  8552  175E  00C5               	movwf	___ftadd@f2+2
  8553  175F  318F  270A         	fcall	___ftadd
  8554  1761  0020               	movlb	0	; select bank0
  8555  1762  0840               	movf	?___ftadd,w
  8556  1763  00CD               	movwf	?___ftsub
  8557  1764  0841               	movf	?___ftadd+1,w
  8558  1765  00CE               	movwf	?___ftsub+1
  8559  1766  0842               	movf	?___ftadd+2,w
  8560  1767  00CF               	movwf	?___ftsub+2
  8561  1768  0008               	return
  8562  1769                     __end_of___ftsub:	
  8563                           
  8564                           	psect	text10
  8565  0F0A                     __ptext10:	
  8566 ;; *************** function ___ftadd *****************
  8567 ;; Defined at:
  8568 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  f1              3   32[BANK0 ] float 
  8571 ;;  f2              3   35[BANK0 ] float 
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;  exp1            1   44[BANK0 ] unsigned char 
  8574 ;;  exp2            1   43[BANK0 ] unsigned char 
  8575 ;;  sign            1   42[BANK0 ] unsigned char 
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  3   32[BANK0 ] float 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2, status,0, pclath, cstack
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8585 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8586 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8587 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;Total ram usage:       13 bytes
  8590 ;; Hardware stack levels used:    1
  8591 ;; Hardware stack levels required when called:    1
  8592 ;; This function calls:
  8593 ;;		___ftpack
  8594 ;; This function is called by:
  8595 ;;		_tempCalc
  8596 ;;		___ftsub
  8597 ;;		_log
  8598 ;;		_eval_poly
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           
  8603                           ;psect for function ___ftadd
  8604  0F0A                     ___ftadd:	
  8605                           
  8606                           ;incstack = 0
  8607                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8608  0F0A  0020               	movlb	0	; select bank0
  8609  0F0B  0840               	movf	___ftadd@f1,w
  8610  0F0C  00C6               	movwf	??___ftadd
  8611  0F0D  0841               	movf	___ftadd@f1+1,w
  8612  0F0E  00C7               	movwf	??___ftadd+1
  8613  0F0F  0842               	movf	___ftadd@f1+2,w
  8614  0F10  00C8               	movwf	??___ftadd+2
  8615  0F11  1003               	clrc
  8616  0F12  0D47               	rlf	??___ftadd+1,w
  8617  0F13  0D48               	rlf	??___ftadd+2,w
  8618  0F14  00C9               	movwf	??___ftadd+3
  8619  0F15  0849               	movf	??___ftadd+3,w
  8620  0F16  00CC               	movwf	___ftadd@exp1
  8621  0F17  0843               	movf	___ftadd@f2,w
  8622  0F18  00C6               	movwf	??___ftadd
  8623  0F19  0844               	movf	___ftadd@f2+1,w
  8624  0F1A  00C7               	movwf	??___ftadd+1
  8625  0F1B  0845               	movf	___ftadd@f2+2,w
  8626  0F1C  00C8               	movwf	??___ftadd+2
  8627  0F1D  1003               	clrc
  8628  0F1E  0D47               	rlf	??___ftadd+1,w
  8629  0F1F  0D48               	rlf	??___ftadd+2,w
  8630  0F20  00C9               	movwf	??___ftadd+3
  8631  0F21  0849               	movf	??___ftadd+3,w
  8632  0F22  00CB               	movwf	___ftadd@exp2
  8633  0F23  084C               	movf	___ftadd@exp1,w
  8634  0F24  1903               	btfsc	3,2
  8635  0F25  2F32               	goto	l2162
  8636  0F26  084B               	movf	___ftadd@exp2,w
  8637  0F27  024C               	subwf	___ftadd@exp1,w
  8638  0F28  1803               	skipnc
  8639  0F29  2F39               	goto	l2166
  8640  0F2A  034C               	decf	___ftadd@exp1,w
  8641  0F2B  3AFF               	xorlw	255
  8642  0F2C  074B               	addwf	___ftadd@exp2,w
  8643  0F2D  00C6               	movwf	??___ftadd
  8644  0F2E  3019               	movlw	25
  8645  0F2F  0246               	subwf	??___ftadd,w
  8646  0F30  1C03               	skipc
  8647  0F31  2F39               	goto	l2166
  8648  0F32                     l2162:	
  8649  0F32  0843               	movf	___ftadd@f2,w
  8650  0F33  00C0               	movwf	?___ftadd
  8651  0F34  0844               	movf	___ftadd@f2+1,w
  8652  0F35  00C1               	movwf	?___ftadd+1
  8653  0F36  0845               	movf	___ftadd@f2+2,w
  8654  0F37  00C2               	movwf	?___ftadd+2
  8655  0F38  0008               	return
  8656  0F39                     l2166:	
  8657  0F39  084B               	movf	___ftadd@exp2,w
  8658  0F3A  1903               	btfsc	3,2
  8659  0F3B  0008               	return
  8660  0F3C  084C               	movf	___ftadd@exp1,w
  8661  0F3D  024B               	subwf	___ftadd@exp2,w
  8662  0F3E  1803               	skipnc
  8663  0F3F  2F48               	goto	l2172
  8664  0F40  034B               	decf	___ftadd@exp2,w
  8665  0F41  3AFF               	xorlw	255
  8666  0F42  074C               	addwf	___ftadd@exp1,w
  8667  0F43  00C6               	movwf	??___ftadd
  8668  0F44  3019               	movlw	25
  8669  0F45  0246               	subwf	??___ftadd,w
  8670  0F46  1803               	btfsc	3,0
  8671  0F47  0008               	return
  8672  0F48                     l2172:	
  8673  0F48  3006               	movlw	6
  8674  0F49  00C6               	movwf	??___ftadd
  8675  0F4A  0846               	movf	??___ftadd,w
  8676  0F4B  00CA               	movwf	___ftadd@sign
  8677  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  8678  0F4D  17CA               	bsf	___ftadd@sign,7
  8679  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  8680  0F4F  174A               	bsf	___ftadd@sign,6
  8681  0F50  17C1               	bsf	___ftadd@f1+1,7
  8682  0F51  30FF               	movlw	255
  8683  0F52  05C0               	andwf	___ftadd@f1,f
  8684  0F53  30FF               	movlw	255
  8685  0F54  05C1               	andwf	___ftadd@f1+1,f
  8686  0F55  3000               	movlw	0
  8687  0F56  05C2               	andwf	___ftadd@f1+2,f
  8688  0F57  17C4               	bsf	___ftadd@f2+1,7
  8689  0F58  30FF               	movlw	255
  8690  0F59  05C3               	andwf	___ftadd@f2,f
  8691  0F5A  30FF               	movlw	255
  8692  0F5B  05C4               	andwf	___ftadd@f2+1,f
  8693  0F5C  3000               	movlw	0
  8694  0F5D  05C5               	andwf	___ftadd@f2+2,f
  8695  0F5E  084B               	movf	___ftadd@exp2,w
  8696  0F5F  024C               	subwf	___ftadd@exp1,w
  8697  0F60  1803               	skipnc
  8698  0F61  2F84               	goto	l2194
  8699  0F62                     l2184:	
  8700  0F62  3001               	movlw	1
  8701  0F63                     u2135:	
  8702  0F63  35C3               	lslf	___ftadd@f2,f
  8703  0F64  0DC4               	rlf	___ftadd@f2+1,f
  8704  0F65  0DC5               	rlf	___ftadd@f2+2,f
  8705  0F66  0B89               	decfsz	9,f
  8706  0F67  2F63               	goto	u2135
  8707  0F68  3001               	movlw	1
  8708  0F69  02CB               	subwf	___ftadd@exp2,f
  8709  0F6A  084B               	movf	___ftadd@exp2,w
  8710  0F6B  064C               	xorwf	___ftadd@exp1,w
  8711  0F6C  1903               	skipnz
  8712  0F6D  2F7F               	goto	l2192
  8713  0F6E  3001               	movlw	1
  8714  0F6F  02CA               	subwf	___ftadd@sign,f
  8715  0F70  084A               	movf	___ftadd@sign,w
  8716  0F71  3907               	andlw	7
  8717  0F72  1903               	btfsc	3,2
  8718  0F73  2F7F               	goto	l2192
  8719  0F74  2F62               	goto	l2184
  8720  0F75                     l2190:	
  8721  0F75  3001               	movlw	1
  8722  0F76                     u2165:	
  8723  0F76  36C2               	lsrf	___ftadd@f1+2,f
  8724  0F77  0CC1               	rrf	___ftadd@f1+1,f
  8725  0F78  0CC0               	rrf	___ftadd@f1,f
  8726  0F79  0B89               	decfsz	9,f
  8727  0F7A  2F76               	goto	u2165
  8728  0F7B  3001               	movlw	1
  8729  0F7C  00C6               	movwf	??___ftadd
  8730  0F7D  0846               	movf	??___ftadd,w
  8731  0F7E  07CC               	addwf	___ftadd@exp1,f
  8732  0F7F                     l2192:	
  8733  0F7F  084C               	movf	___ftadd@exp1,w
  8734  0F80  064B               	xorwf	___ftadd@exp2,w
  8735  0F81  1903               	btfsc	3,2
  8736  0F82  2FA9               	goto	l712
  8737  0F83  2F75               	goto	l2190
  8738  0F84                     l2194:	
  8739  0F84  084C               	movf	___ftadd@exp1,w
  8740  0F85  024B               	subwf	___ftadd@exp2,w
  8741  0F86  1803               	skipnc
  8742  0F87  2FA9               	goto	l712
  8743  0F88                     l2196:	
  8744  0F88  3001               	movlw	1
  8745  0F89                     u2195:	
  8746  0F89  35C0               	lslf	___ftadd@f1,f
  8747  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  8748  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  8749  0F8C  0B89               	decfsz	9,f
  8750  0F8D  2F89               	goto	u2195
  8751  0F8E  3001               	movlw	1
  8752  0F8F  02CC               	subwf	___ftadd@exp1,f
  8753  0F90  084B               	movf	___ftadd@exp2,w
  8754  0F91  064C               	xorwf	___ftadd@exp1,w
  8755  0F92  1903               	skipnz
  8756  0F93  2FA5               	goto	l2204
  8757  0F94  3001               	movlw	1
  8758  0F95  02CA               	subwf	___ftadd@sign,f
  8759  0F96  084A               	movf	___ftadd@sign,w
  8760  0F97  3907               	andlw	7
  8761  0F98  1903               	btfsc	3,2
  8762  0F99  2FA5               	goto	l2204
  8763  0F9A  2F88               	goto	l2196
  8764  0F9B                     l2202:	
  8765  0F9B  3001               	movlw	1
  8766  0F9C                     u2225:	
  8767  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  8768  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  8769  0F9E  0CC3               	rrf	___ftadd@f2,f
  8770  0F9F  0B89               	decfsz	9,f
  8771  0FA0  2F9C               	goto	u2225
  8772  0FA1  3001               	movlw	1
  8773  0FA2  00C6               	movwf	??___ftadd
  8774  0FA3  0846               	movf	??___ftadd,w
  8775  0FA4  07CB               	addwf	___ftadd@exp2,f
  8776  0FA5                     l2204:	
  8777  0FA5  084C               	movf	___ftadd@exp1,w
  8778  0FA6  064B               	xorwf	___ftadd@exp2,w
  8779  0FA7  1D03               	skipz
  8780  0FA8  2F9B               	goto	l2202
  8781  0FA9                     l712:	
  8782  0FA9  1FCA               	btfss	___ftadd@sign,7
  8783  0FAA  2FBB               	goto	l2208
  8784  0FAB  30FF               	movlw	255
  8785  0FAC  06C0               	xorwf	___ftadd@f1,f
  8786  0FAD  30FF               	movlw	255
  8787  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  8788  0FAF  30FF               	movlw	255
  8789  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  8790  0FB1  3001               	movlw	1
  8791  0FB2  07C0               	addwf	___ftadd@f1,f
  8792  0FB3  3000               	movlw	0
  8793  0FB4  1803               	skipnc
  8794  0FB5  3001               	movlw	1
  8795  0FB6  07C1               	addwf	___ftadd@f1+1,f
  8796  0FB7  3000               	movlw	0
  8797  0FB8  1803               	skipnc
  8798  0FB9  3001               	movlw	1
  8799  0FBA  07C2               	addwf	___ftadd@f1+2,f
  8800  0FBB                     l2208:	
  8801  0FBB  1F4A               	btfss	___ftadd@sign,6
  8802  0FBC  2FCD               	goto	l2212
  8803  0FBD  30FF               	movlw	255
  8804  0FBE  06C3               	xorwf	___ftadd@f2,f
  8805  0FBF  30FF               	movlw	255
  8806  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  8807  0FC1  30FF               	movlw	255
  8808  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  8809  0FC3  3001               	movlw	1
  8810  0FC4  07C3               	addwf	___ftadd@f2,f
  8811  0FC5  3000               	movlw	0
  8812  0FC6  1803               	skipnc
  8813  0FC7  3001               	movlw	1
  8814  0FC8  07C4               	addwf	___ftadd@f2+1,f
  8815  0FC9  3000               	movlw	0
  8816  0FCA  1803               	skipnc
  8817  0FCB  3001               	movlw	1
  8818  0FCC  07C5               	addwf	___ftadd@f2+2,f
  8819  0FCD                     l2212:	
  8820  0FCD  01CA               	clrf	___ftadd@sign
  8821  0FCE  0840               	movf	___ftadd@f1,w
  8822  0FCF  07C3               	addwf	___ftadd@f2,f
  8823  0FD0  0841               	movf	___ftadd@f1+1,w
  8824  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  8825  0FD2  0842               	movf	___ftadd@f1+2,w
  8826  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  8827  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  8828  0FD5  2FE8               	goto	l2222
  8829  0FD6  30FF               	movlw	255
  8830  0FD7  06C3               	xorwf	___ftadd@f2,f
  8831  0FD8  30FF               	movlw	255
  8832  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  8833  0FDA  30FF               	movlw	255
  8834  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  8835  0FDC  3001               	movlw	1
  8836  0FDD  07C3               	addwf	___ftadd@f2,f
  8837  0FDE  3000               	movlw	0
  8838  0FDF  1803               	skipnc
  8839  0FE0  3001               	movlw	1
  8840  0FE1  07C4               	addwf	___ftadd@f2+1,f
  8841  0FE2  3000               	movlw	0
  8842  0FE3  1803               	skipnc
  8843  0FE4  3001               	movlw	1
  8844  0FE5  07C5               	addwf	___ftadd@f2+2,f
  8845  0FE6  01CA               	clrf	___ftadd@sign
  8846  0FE7  0ACA               	incf	___ftadd@sign,f
  8847  0FE8                     l2222:	
  8848  0FE8  0843               	movf	___ftadd@f2,w
  8849  0FE9  00F0               	movwf	___ftpack@arg
  8850  0FEA  0844               	movf	___ftadd@f2+1,w
  8851  0FEB  00F1               	movwf	___ftpack@arg+1
  8852  0FEC  0845               	movf	___ftadd@f2+2,w
  8853  0FED  00F2               	movwf	___ftpack@arg+2
  8854  0FEE  084C               	movf	___ftadd@exp1,w
  8855  0FEF  00C6               	movwf	??___ftadd
  8856  0FF0  0846               	movf	??___ftadd,w
  8857  0FF1  00F3               	movwf	___ftpack@exp
  8858  0FF2  084A               	movf	___ftadd@sign,w
  8859  0FF3  00C7               	movwf	??___ftadd+1
  8860  0FF4  0847               	movf	??___ftadd+1,w
  8861  0FF5  00F4               	movwf	___ftpack@sign
  8862  0FF6  318A  221A         	fcall	___ftpack
  8863  0FF8  0870               	movf	?___ftpack,w
  8864  0FF9  0020               	movlb	0	; select bank0
  8865  0FFA  00C0               	movwf	?___ftadd
  8866  0FFB  0871               	movf	?___ftpack+1,w
  8867  0FFC  00C1               	movwf	?___ftadd+1
  8868  0FFD  0872               	movf	?___ftpack+2,w
  8869  0FFE  00C2               	movwf	?___ftadd+2
  8870  0FFF  0008               	return
  8871  1000                     __end_of___ftadd:	
  8872                           
  8873                           	psect	text11
  8874  0C0D                     __ptext11:	
  8875 ;; *************** function ___ftdiv *****************
  8876 ;; Defined at:
  8877 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;  f2              3   16[BANK0 ] float 
  8880 ;;  f1              3   19[BANK0 ] float 
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;  f3              3   27[BANK0 ] float 
  8883 ;;  sign            1   31[BANK0 ] unsigned char 
  8884 ;;  exp             1   30[BANK0 ] unsigned char 
  8885 ;;  cntr            1   26[BANK0 ] unsigned char 
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  3   16[BANK0 ] float 
  8888 ;; Registers used:
  8889 ;;		wreg, status,2, status,0, pclath, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8895 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8896 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;Total ram usage:       16 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    1
  8902 ;; This function calls:
  8903 ;;		___ftpack
  8904 ;; This function is called by:
  8905 ;;		_tempCalc
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           
  8910                           ;psect for function ___ftdiv
  8911  0C0D                     ___ftdiv:	
  8912                           
  8913                           ;incstack = 0
  8914                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8915  0C0D  0020               	movlb	0	; select bank0
  8916  0C0E  0833               	movf	___ftdiv@f1,w
  8917  0C0F  00B6               	movwf	??___ftdiv
  8918  0C10  0834               	movf	___ftdiv@f1+1,w
  8919  0C11  00B7               	movwf	??___ftdiv+1
  8920  0C12  0835               	movf	___ftdiv@f1+2,w
  8921  0C13  00B8               	movwf	??___ftdiv+2
  8922  0C14  1003               	clrc
  8923  0C15  0D37               	rlf	??___ftdiv+1,w
  8924  0C16  0D38               	rlf	??___ftdiv+2,w
  8925  0C17  00B9               	movwf	??___ftdiv+3
  8926  0C18  0839               	movf	??___ftdiv+3,w
  8927  0C19  00BE               	movwf	___ftdiv@exp
  8928  0C1A  083E               	movf	___ftdiv@exp,w
  8929  0C1B  1D03               	btfss	3,2
  8930  0C1C  2C24               	goto	l2756
  8931  0C1D  3000               	movlw	0
  8932  0C1E  00B0               	movwf	?___ftdiv
  8933  0C1F  3000               	movlw	0
  8934  0C20  00B1               	movwf	?___ftdiv+1
  8935  0C21  3000               	movlw	0
  8936  0C22  00B2               	movwf	?___ftdiv+2
  8937  0C23  0008               	return
  8938  0C24                     l2756:	
  8939  0C24  0830               	movf	___ftdiv@f2,w
  8940  0C25  00B6               	movwf	??___ftdiv
  8941  0C26  0831               	movf	___ftdiv@f2+1,w
  8942  0C27  00B7               	movwf	??___ftdiv+1
  8943  0C28  0832               	movf	___ftdiv@f2+2,w
  8944  0C29  00B8               	movwf	??___ftdiv+2
  8945  0C2A  1003               	clrc
  8946  0C2B  0D37               	rlf	??___ftdiv+1,w
  8947  0C2C  0D38               	rlf	??___ftdiv+2,w
  8948  0C2D  00B9               	movwf	??___ftdiv+3
  8949  0C2E  0839               	movf	??___ftdiv+3,w
  8950  0C2F  00BF               	movwf	___ftdiv@sign
  8951  0C30  083F               	movf	___ftdiv@sign,w
  8952  0C31  1D03               	btfss	3,2
  8953  0C32  2C3A               	goto	l2762
  8954  0C33  3000               	movlw	0
  8955  0C34  00B0               	movwf	?___ftdiv
  8956  0C35  3000               	movlw	0
  8957  0C36  00B1               	movwf	?___ftdiv+1
  8958  0C37  3000               	movlw	0
  8959  0C38  00B2               	movwf	?___ftdiv+2
  8960  0C39  0008               	return
  8961  0C3A                     l2762:	
  8962  0C3A  3000               	movlw	0
  8963  0C3B  00BB               	movwf	___ftdiv@f3
  8964  0C3C  3000               	movlw	0
  8965  0C3D  00BC               	movwf	___ftdiv@f3+1
  8966  0C3E  3000               	movlw	0
  8967  0C3F  00BD               	movwf	___ftdiv@f3+2
  8968  0C40  3089               	movlw	137
  8969  0C41  073F               	addwf	___ftdiv@sign,w
  8970  0C42  00B6               	movwf	??___ftdiv
  8971  0C43  0836               	movf	??___ftdiv,w
  8972  0C44  02BE               	subwf	___ftdiv@exp,f
  8973  0C45  0833               	movf	___ftdiv@f1,w
  8974  0C46  00B6               	movwf	??___ftdiv
  8975  0C47  0834               	movf	___ftdiv@f1+1,w
  8976  0C48  00B7               	movwf	??___ftdiv+1
  8977  0C49  0835               	movf	___ftdiv@f1+2,w
  8978  0C4A  00B8               	movwf	??___ftdiv+2
  8979  0C4B  3010               	movlw	16
  8980  0C4C                     u3035:	
  8981  0C4C  36B8               	lsrf	??___ftdiv+2,f
  8982  0C4D  0CB7               	rrf	??___ftdiv+1,f
  8983  0C4E  0CB6               	rrf	??___ftdiv,f
  8984  0C4F  0B89               	decfsz	9,f
  8985  0C50  2C4C               	goto	u3035
  8986  0C51  0836               	movf	??___ftdiv,w
  8987  0C52  00B9               	movwf	??___ftdiv+3
  8988  0C53  0839               	movf	??___ftdiv+3,w
  8989  0C54  00BF               	movwf	___ftdiv@sign
  8990  0C55  0830               	movf	___ftdiv@f2,w
  8991  0C56  00B6               	movwf	??___ftdiv
  8992  0C57  0831               	movf	___ftdiv@f2+1,w
  8993  0C58  00B7               	movwf	??___ftdiv+1
  8994  0C59  0832               	movf	___ftdiv@f2+2,w
  8995  0C5A  00B8               	movwf	??___ftdiv+2
  8996  0C5B  3010               	movlw	16
  8997  0C5C                     u3045:	
  8998  0C5C  36B8               	lsrf	??___ftdiv+2,f
  8999  0C5D  0CB7               	rrf	??___ftdiv+1,f
  9000  0C5E  0CB6               	rrf	??___ftdiv,f
  9001  0C5F  0B89               	decfsz	9,f
  9002  0C60  2C5C               	goto	u3045
  9003  0C61  0836               	movf	??___ftdiv,w
  9004  0C62  00B9               	movwf	??___ftdiv+3
  9005  0C63  0839               	movf	??___ftdiv+3,w
  9006  0C64  06BF               	xorwf	___ftdiv@sign,f
  9007  0C65  3080               	movlw	128
  9008  0C66  00B6               	movwf	??___ftdiv
  9009  0C67  0836               	movf	??___ftdiv,w
  9010  0C68  05BF               	andwf	___ftdiv@sign,f
  9011  0C69  17B4               	bsf	___ftdiv@f1+1,7
  9012  0C6A  30FF               	movlw	255
  9013  0C6B  05B3               	andwf	___ftdiv@f1,f
  9014  0C6C  30FF               	movlw	255
  9015  0C6D  05B4               	andwf	___ftdiv@f1+1,f
  9016  0C6E  3000               	movlw	0
  9017  0C6F  05B5               	andwf	___ftdiv@f1+2,f
  9018  0C70  17B1               	bsf	___ftdiv@f2+1,7
  9019  0C71  30FF               	movlw	255
  9020  0C72  05B0               	andwf	___ftdiv@f2,f
  9021  0C73  30FF               	movlw	255
  9022  0C74  05B1               	andwf	___ftdiv@f2+1,f
  9023  0C75  3000               	movlw	0
  9024  0C76  05B2               	andwf	___ftdiv@f2+2,f
  9025  0C77  3018               	movlw	24
  9026  0C78  00B6               	movwf	??___ftdiv
  9027  0C79  0836               	movf	??___ftdiv,w
  9028  0C7A  00BA               	movwf	___ftdiv@cntr
  9029  0C7B                     l2776:	
  9030  0C7B  3001               	movlw	1
  9031  0C7C                     u3055:	
  9032  0C7C  35BB               	lslf	___ftdiv@f3,f
  9033  0C7D  0DBC               	rlf	___ftdiv@f3+1,f
  9034  0C7E  0DBD               	rlf	___ftdiv@f3+2,f
  9035  0C7F  0B89               	decfsz	9,f
  9036  0C80  2C7C               	goto	u3055
  9037  0C81  0832               	movf	___ftdiv@f2+2,w
  9038  0C82  0235               	subwf	___ftdiv@f1+2,w
  9039  0C83  1D03               	skipz
  9040  0C84  2C8B               	goto	u3065
  9041  0C85  0831               	movf	___ftdiv@f2+1,w
  9042  0C86  0234               	subwf	___ftdiv@f1+1,w
  9043  0C87  1D03               	skipz
  9044  0C88  2C8B               	goto	u3065
  9045  0C89  0830               	movf	___ftdiv@f2,w
  9046  0C8A  0233               	subwf	___ftdiv@f1,w
  9047  0C8B                     u3065:	
  9048  0C8B  1C03               	skipc
  9049  0C8C  2C94               	goto	l2784
  9050  0C8D  0830               	movf	___ftdiv@f2,w
  9051  0C8E  02B3               	subwf	___ftdiv@f1,f
  9052  0C8F  0831               	movf	___ftdiv@f2+1,w
  9053  0C90  3BB4               	subwfb	___ftdiv@f1+1,f
  9054  0C91  0832               	movf	___ftdiv@f2+2,w
  9055  0C92  3BB5               	subwfb	___ftdiv@f1+2,f
  9056  0C93  143B               	bsf	___ftdiv@f3,0
  9057  0C94                     l2784:	
  9058  0C94  3001               	movlw	1
  9059  0C95                     u3075:	
  9060  0C95  35B3               	lslf	___ftdiv@f1,f
  9061  0C96  0DB4               	rlf	___ftdiv@f1+1,f
  9062  0C97  0DB5               	rlf	___ftdiv@f1+2,f
  9063  0C98  0B89               	decfsz	9,f
  9064  0C99  2C95               	goto	u3075
  9065  0C9A  3001               	movlw	1
  9066  0C9B  02BA               	subwf	___ftdiv@cntr,f
  9067  0C9C  1D03               	btfss	3,2
  9068  0C9D  2C7B               	goto	l2776
  9069  0C9E  083B               	movf	___ftdiv@f3,w
  9070  0C9F  00F0               	movwf	___ftpack@arg
  9071  0CA0  083C               	movf	___ftdiv@f3+1,w
  9072  0CA1  00F1               	movwf	___ftpack@arg+1
  9073  0CA2  083D               	movf	___ftdiv@f3+2,w
  9074  0CA3  00F2               	movwf	___ftpack@arg+2
  9075  0CA4  083E               	movf	___ftdiv@exp,w
  9076  0CA5  00B6               	movwf	??___ftdiv
  9077  0CA6  0836               	movf	??___ftdiv,w
  9078  0CA7  00F3               	movwf	___ftpack@exp
  9079  0CA8  083F               	movf	___ftdiv@sign,w
  9080  0CA9  00B7               	movwf	??___ftdiv+1
  9081  0CAA  0837               	movf	??___ftdiv+1,w
  9082  0CAB  00F4               	movwf	___ftpack@sign
  9083  0CAC  318A  221A         	fcall	___ftpack
  9084  0CAE  0870               	movf	?___ftpack,w
  9085  0CAF  0020               	movlb	0	; select bank0
  9086  0CB0  00B0               	movwf	?___ftdiv
  9087  0CB1  0871               	movf	?___ftpack+1,w
  9088  0CB2  00B1               	movwf	?___ftdiv+1
  9089  0CB3  0872               	movf	?___ftpack+2,w
  9090  0CB4  00B2               	movwf	?___ftdiv+2
  9091  0CB5  0008               	return
  9092  0CB6                     __end_of___ftdiv:	
  9093                           
  9094                           	psect	text12
  9095  0A1A                     __ptext12:	
  9096 ;; *************** function ___ftpack *****************
  9097 ;; Defined at:
  9098 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9099 ;; Parameters:    Size  Location     Type
  9100 ;;  arg             3    0[COMMON] unsigned um
  9101 ;;  exp             1    3[COMMON] unsigned char 
  9102 ;;  sign            1    4[COMMON] unsigned char 
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;		None
  9105 ;; Return value:  Size  Location     Type
  9106 ;;                  3    0[COMMON] float 
  9107 ;; Registers used:
  9108 ;;		wreg, status,2, status,0
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9114 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9118 ;;Total ram usage:        8 bytes
  9119 ;; Hardware stack levels used:    1
  9120 ;; This function calls:
  9121 ;;		Nothing
  9122 ;; This function is called by:
  9123 ;;		___awtoft
  9124 ;;		___ftadd
  9125 ;;		___ftdiv
  9126 ;;		___ftmul
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           
  9131                           ;psect for function ___ftpack
  9132  0A1A                     ___ftpack:	
  9133                           
  9134                           ;incstack = 0
  9135                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9136  0A1A  0873               	movf	___ftpack@exp,w
  9137  0A1B  1903               	btfsc	3,2
  9138  0A1C  2A22               	goto	l2098
  9139  0A1D  0872               	movf	___ftpack@arg+2,w
  9140  0A1E  0471               	iorwf	___ftpack@arg+1,w
  9141  0A1F  0470               	iorwf	___ftpack@arg,w
  9142  0A20  1D03               	skipz
  9143  0A21  2A33               	goto	l2104
  9144  0A22                     l2098:	
  9145  0A22  3000               	movlw	0
  9146  0A23  00F0               	movwf	?___ftpack
  9147  0A24  3000               	movlw	0
  9148  0A25  00F1               	movwf	?___ftpack+1
  9149  0A26  3000               	movlw	0
  9150  0A27  00F2               	movwf	?___ftpack+2
  9151  0A28  0008               	return
  9152  0A29                     l2102:	
  9153  0A29  3001               	movlw	1
  9154  0A2A  00F5               	movwf	??___ftpack
  9155  0A2B  0875               	movf	??___ftpack,w
  9156  0A2C  07F3               	addwf	___ftpack@exp,f
  9157  0A2D  3001               	movlw	1
  9158  0A2E                     u1865:	
  9159  0A2E  36F2               	lsrf	___ftpack@arg+2,f
  9160  0A2F  0CF1               	rrf	___ftpack@arg+1,f
  9161  0A30  0CF0               	rrf	___ftpack@arg,f
  9162  0A31  0B89               	decfsz	9,f
  9163  0A32  2A2E               	goto	u1865
  9164  0A33                     l2104:	
  9165  0A33  30FE               	movlw	254
  9166  0A34  0572               	andwf	___ftpack@arg+2,w
  9167  0A35  1903               	btfsc	3,2
  9168  0A36  2A4C               	goto	l681
  9169  0A37  2A29               	goto	l2102
  9170  0A38                     l2106:	
  9171  0A38  3001               	movlw	1
  9172  0A39  00F5               	movwf	??___ftpack
  9173  0A3A  0875               	movf	??___ftpack,w
  9174  0A3B  07F3               	addwf	___ftpack@exp,f
  9175  0A3C  3001               	movlw	1
  9176  0A3D  07F0               	addwf	___ftpack@arg,f
  9177  0A3E  3000               	movlw	0
  9178  0A3F  1803               	skipnc
  9179  0A40  3001               	movlw	1
  9180  0A41  07F1               	addwf	___ftpack@arg+1,f
  9181  0A42  3000               	movlw	0
  9182  0A43  1803               	skipnc
  9183  0A44  3001               	movlw	1
  9184  0A45  07F2               	addwf	___ftpack@arg+2,f
  9185  0A46  3001               	movlw	1
  9186  0A47                     u1885:	
  9187  0A47  36F2               	lsrf	___ftpack@arg+2,f
  9188  0A48  0CF1               	rrf	___ftpack@arg+1,f
  9189  0A49  0CF0               	rrf	___ftpack@arg,f
  9190  0A4A  0B89               	decfsz	9,f
  9191  0A4B  2A47               	goto	u1885
  9192  0A4C                     l681:	
  9193  0A4C  30FF               	movlw	255
  9194  0A4D  0572               	andwf	___ftpack@arg+2,w
  9195  0A4E  1903               	btfsc	3,2
  9196  0A4F  2A59               	goto	l2114
  9197  0A50  2A38               	goto	l2106
  9198  0A51                     l2112:	
  9199  0A51  3001               	movlw	1
  9200  0A52  02F3               	subwf	___ftpack@exp,f
  9201  0A53  3001               	movlw	1
  9202  0A54                     u1905:	
  9203  0A54  35F0               	lslf	___ftpack@arg,f
  9204  0A55  0DF1               	rlf	___ftpack@arg+1,f
  9205  0A56  0DF2               	rlf	___ftpack@arg+2,f
  9206  0A57  0B89               	decfsz	9,f
  9207  0A58  2A54               	goto	u1905
  9208  0A59                     l2114:	
  9209  0A59  1BF1               	btfsc	___ftpack@arg+1,7
  9210  0A5A  2A5F               	goto	l688
  9211  0A5B  3002               	movlw	2
  9212  0A5C  0273               	subwf	___ftpack@exp,w
  9213  0A5D  1803               	skipnc
  9214  0A5E  2A51               	goto	l2112
  9215  0A5F                     l688:	
  9216  0A5F  1873               	btfsc	___ftpack@exp,0
  9217  0A60  2A67               	goto	l689
  9218  0A61  30FF               	movlw	255
  9219  0A62  05F0               	andwf	___ftpack@arg,f
  9220  0A63  307F               	movlw	127
  9221  0A64  05F1               	andwf	___ftpack@arg+1,f
  9222  0A65  30FF               	movlw	255
  9223  0A66  05F2               	andwf	___ftpack@arg+2,f
  9224  0A67                     l689:	
  9225  0A67  1003               	clrc
  9226  0A68  0CF3               	rrf	___ftpack@exp,f
  9227  0A69  0873               	movf	___ftpack@exp,w
  9228  0A6A  00F5               	movwf	??___ftpack
  9229  0A6B  01F6               	clrf	??___ftpack+1
  9230  0A6C  01F7               	clrf	??___ftpack+2
  9231  0A6D  3010               	movlw	16
  9232  0A6E                     u1945:	
  9233  0A6E  35F5               	lslf	??___ftpack,f
  9234  0A6F  0DF6               	rlf	??___ftpack+1,f
  9235  0A70  0DF7               	rlf	??___ftpack+2,f
  9236  0A71  0B89               	decfsz	9,f
  9237  0A72  2A6E               	goto	u1945
  9238  0A73  0875               	movf	??___ftpack,w
  9239  0A74  04F0               	iorwf	___ftpack@arg,f
  9240  0A75  0876               	movf	??___ftpack+1,w
  9241  0A76  04F1               	iorwf	___ftpack@arg+1,f
  9242  0A77  0877               	movf	??___ftpack+2,w
  9243  0A78  04F2               	iorwf	___ftpack@arg+2,f
  9244  0A79  0874               	movf	___ftpack@sign,w
  9245  0A7A  1903               	btfsc	3,2
  9246  0A7B  0008               	return
  9247  0A7C  17F2               	bsf	___ftpack@arg+2,7
  9248  0A7D  0008               	return
  9249  0A7E                     __end_of___ftpack:	
  9250                           
  9251                           	psect	text13
  9252  01DC                     __ptext13:	
  9253 ;; *************** function _readAnalog *****************
  9254 ;; Defined at:
  9255 ;;		line 34 in file "adc.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;  channel         2    6[BANK0 ] int 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  value           2   11[COMMON] int 
  9260 ;;  analog_chann    2    9[COMMON] int 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  2    6[BANK0 ] int 
  9263 ;; Registers used:
  9264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9270 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9272 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9273 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9274 ;;Total ram usage:       22 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    1
  9277 ;; This function calls:
  9278 ;;		_ADCRead
  9279 ;;		___aldiv
  9280 ;;		___wmul
  9281 ;; This function is called by:
  9282 ;;		_main
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           
  9287                           ;psect for function _readAnalog
  9288  01DC                     _readAnalog:	
  9289                           
  9290                           ;adc.c: 36: int value;
  9291                           ;adc.c: 38: int analog_channel = channels[channel];
  9292                           
  9293                           ;incstack = 0
  9294                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9295  01DC  0020               	movlb	0	; select bank0
  9296  01DD  3526               	lslf	readAnalog@channel,w
  9297  01DE  3EB0               	addlw	(low (_channels| (0+256)))& (0+255)
  9298  01DF  0086               	movwf	6
  9299  01E0  3001               	movlw	1	; select bank3/4
  9300  01E1  0087               	movwf	7
  9301  01E2  3F40               	moviw [0]fsr1
  9302  01E3  00F9               	movwf	readAnalog@analog_channel
  9303  01E4  3F41               	moviw [1]fsr1
  9304  01E5  00FA               	movwf	readAnalog@analog_channel+1
  9305                           
  9306                           ;adc.c: 40: value = ADCRead(analog_channel);
  9307  01E6  0879               	movf	readAnalog@analog_channel,w
  9308  01E7  3196  2695  3181   	fcall	_ADCRead
  9309  01EA  0871               	movf	?_ADCRead+1,w
  9310  01EB  00FC               	movwf	readAnalog@value+1
  9311  01EC  0870               	movf	?_ADCRead,w
  9312  01ED  00FB               	movwf	readAnalog@value
  9313                           
  9314                           ;adc.c: 42: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9315  01EE  0020               	movlb	0	; select bank0
  9316  01EF  0826               	movf	readAnalog@channel,w
  9317  01F0  00A8               	movwf	??_readAnalog
  9318  01F1  3001               	movlw	1
  9319  01F2                     u3275:	
  9320  01F2  35A8               	lslf	??_readAnalog,f
  9321  01F3  3EFF               	addlw	-1
  9322  01F4  1D03               	skipz
  9323  01F5  29F2               	goto	u3275
  9324  01F6  3528               	lslf	??_readAnalog,w
  9325  01F7  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9326  01F8  0086               	movwf	6
  9327  01F9  0187               	clrf	7
  9328  01FA  3F40               	moviw [0]fsr1
  9329  01FB  00A9               	movwf	??_readAnalog+1
  9330  01FC  3F41               	moviw [1]fsr1
  9331  01FD  00AA               	movwf	??_readAnalog+2
  9332  01FE  3F42               	moviw [2]fsr1
  9333  01FF  00AB               	movwf	??_readAnalog+3
  9334  0200  3F43               	moviw [3]fsr1
  9335  0201  00AC               	movwf	??_readAnalog+4
  9336  0202  0021               	movlb	1	; select bank1
  9337  0203  083F               	movf	(_sampleIndex+1)^(0+128),w
  9338  0204  0020               	movlb	0	; select bank0
  9339  0205  00AE               	movwf	??_readAnalog+6
  9340  0206  0021               	movlb	1	; select bank1
  9341  0207  083E               	movf	_sampleIndex^(0+128),w
  9342  0208  0020               	movlb	0	; select bank0
  9343  0209  00AD               	movwf	??_readAnalog+5
  9344  020A  35AD               	lslf	??_readAnalog+5,f
  9345  020B  0DAE               	rlf	??_readAnalog+6,f
  9346  020C  0827               	movf	readAnalog@channel+1,w
  9347  020D  00F1               	movwf	___wmul@multiplier+1
  9348  020E  0826               	movf	readAnalog@channel,w
  9349  020F  00F0               	movwf	___wmul@multiplier
  9350  0210  3050               	movlw	80
  9351  0211  00F2               	movwf	___wmul@multiplicand
  9352  0212  3000               	movlw	0
  9353  0213  00F3               	movwf	___wmul@multiplicand+1
  9354  0214  3197  2730  3181   	fcall	___wmul
  9355  0217  3050               	movlw	80
  9356  0218  0020               	movlb	0	; select bank0
  9357  0219  00AF               	movwf	??_readAnalog+7
  9358  021A  3023               	movlw	35
  9359  021B  00B0               	movwf	??_readAnalog+8
  9360  021C  0870               	movf	?___wmul,w
  9361  021D  072F               	addwf	??_readAnalog+7,w
  9362  021E  00B1               	movwf	??_readAnalog+9
  9363  021F  0871               	movf	?___wmul+1,w
  9364  0220  3D30               	addwfc	??_readAnalog+8,w
  9365  0221  00B2               	movwf	??_readAnalog+10
  9366  0222  0831               	movf	??_readAnalog+9,w
  9367  0223  072D               	addwf	??_readAnalog+5,w
  9368  0224  0084               	movwf	4
  9369  0225  0832               	movf	??_readAnalog+10,w
  9370  0226  3D2E               	addwfc	??_readAnalog+6,w
  9371  0227  0085               	movwf	5
  9372  0228  3F00               	moviw [0]fsr0
  9373  0229  00B3               	movwf	??_readAnalog+11
  9374  022A  3F01               	moviw [1]fsr0
  9375  022B  00B4               	movwf	??_readAnalog+12
  9376  022C  01B5               	clrf	??_readAnalog+13
  9377  022D  01B6               	clrf	??_readAnalog+14
  9378  022E  09B3               	comf	??_readAnalog+11,f
  9379  022F  09B4               	comf	??_readAnalog+12,f
  9380  0230  09B5               	comf	??_readAnalog+13,f
  9381  0231  09B6               	comf	??_readAnalog+14,f
  9382  0232  0AB3               	incf	??_readAnalog+11,f
  9383  0233  1903               	skipnz
  9384  0234  0AB4               	incf	??_readAnalog+12,f
  9385  0235  1903               	skipnz
  9386  0236  0AB5               	incf	??_readAnalog+13,f
  9387  0237  1903               	skipnz
  9388  0238  0AB6               	incf	??_readAnalog+14,f
  9389  0239  0833               	movf	??_readAnalog+11,w
  9390  023A  07A9               	addwf	??_readAnalog+1,f
  9391  023B  0834               	movf	??_readAnalog+12,w
  9392  023C  3DAA               	addwfc	??_readAnalog+2,f
  9393  023D  0835               	movf	??_readAnalog+13,w
  9394  023E  3DAB               	addwfc	??_readAnalog+3,f
  9395  023F  0836               	movf	??_readAnalog+14,w
  9396  0240  3DAC               	addwfc	??_readAnalog+4,f
  9397  0241  0826               	movf	readAnalog@channel,w
  9398  0242  00B7               	movwf	??_readAnalog+15
  9399  0243  3001               	movlw	1
  9400  0244                     u3285:	
  9401  0244  35B7               	lslf	??_readAnalog+15,f
  9402  0245  3EFF               	addlw	-1
  9403  0246  1D03               	skipz
  9404  0247  2A44               	goto	u3285
  9405  0248  3537               	lslf	??_readAnalog+15,w
  9406  0249  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9407  024A  0086               	movwf	6
  9408  024B  0187               	clrf	7
  9409  024C  0829               	movf	??_readAnalog+1,w
  9410  024D  3FC0               	movwi [0]fsr1
  9411  024E  082A               	movf	??_readAnalog+2,w
  9412  024F  3FC1               	movwi [1]fsr1
  9413  0250  082B               	movf	??_readAnalog+3,w
  9414  0251  3FC2               	movwi [2]fsr1
  9415  0252  082C               	movf	??_readAnalog+4,w
  9416  0253  3FC3               	movwi [3]fsr1
  9417                           
  9418                           ;adc.c: 44: samples[channel][sampleIndex] = value;
  9419  0254  0021               	movlb	1	; select bank1
  9420  0255  083F               	movf	(_sampleIndex+1)^(0+128),w
  9421  0256  0020               	movlb	0	; select bank0
  9422  0257  00A9               	movwf	??_readAnalog+1
  9423  0258  0021               	movlb	1	; select bank1
  9424  0259  083E               	movf	_sampleIndex^(0+128),w
  9425  025A  0020               	movlb	0	; select bank0
  9426  025B  00A8               	movwf	??_readAnalog
  9427  025C  35A8               	lslf	??_readAnalog,f
  9428  025D  0DA9               	rlf	??_readAnalog+1,f
  9429  025E  0827               	movf	readAnalog@channel+1,w
  9430  025F  00F1               	movwf	___wmul@multiplier+1
  9431  0260  0826               	movf	readAnalog@channel,w
  9432  0261  00F0               	movwf	___wmul@multiplier
  9433  0262  3050               	movlw	80
  9434  0263  00F2               	movwf	___wmul@multiplicand
  9435  0264  3000               	movlw	0
  9436  0265  00F3               	movwf	___wmul@multiplicand+1
  9437  0266  3197  2730  3181   	fcall	___wmul
  9438  0269  3050               	movlw	80
  9439  026A  0020               	movlb	0	; select bank0
  9440  026B  00AA               	movwf	??_readAnalog+2
  9441  026C  3023               	movlw	35
  9442  026D  00AB               	movwf	??_readAnalog+3
  9443  026E  0870               	movf	?___wmul,w
  9444  026F  072A               	addwf	??_readAnalog+2,w
  9445  0270  00AC               	movwf	??_readAnalog+4
  9446  0271  0871               	movf	?___wmul+1,w
  9447  0272  3D2B               	addwfc	??_readAnalog+3,w
  9448  0273  00AD               	movwf	??_readAnalog+5
  9449  0274  0828               	movf	??_readAnalog,w
  9450  0275  072C               	addwf	??_readAnalog+4,w
  9451  0276  0086               	movwf	6
  9452  0277  0829               	movf	??_readAnalog+1,w
  9453  0278  3D2D               	addwfc	??_readAnalog+5,w
  9454  0279  0087               	movwf	7
  9455  027A  087B               	movf	readAnalog@value,w
  9456  027B  3FC0               	movwi [0]fsr1
  9457  027C  087C               	movf	readAnalog@value+1,w
  9458  027D  3FC1               	movwi [1]fsr1
  9459                           
  9460                           ;adc.c: 46: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9461  027E  0826               	movf	readAnalog@channel,w
  9462  027F  00A8               	movwf	??_readAnalog
  9463  0280  3001               	movlw	1
  9464  0281                     u3295:	
  9465  0281  35A8               	lslf	??_readAnalog,f
  9466  0282  3EFF               	addlw	-1
  9467  0283  1D03               	skipz
  9468  0284  2A81               	goto	u3295
  9469  0285  3528               	lslf	??_readAnalog,w
  9470  0286  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9471  0287  0086               	movwf	6
  9472  0288  0187               	clrf	7
  9473  0289  3F40               	moviw [0]fsr1
  9474  028A  00A9               	movwf	??_readAnalog+1
  9475  028B  3F41               	moviw [1]fsr1
  9476  028C  00AA               	movwf	??_readAnalog+2
  9477  028D  3F42               	moviw [2]fsr1
  9478  028E  00AB               	movwf	??_readAnalog+3
  9479  028F  3F43               	moviw [3]fsr1
  9480  0290  00AC               	movwf	??_readAnalog+4
  9481  0291  0021               	movlb	1	; select bank1
  9482  0292  083F               	movf	(_sampleIndex+1)^(0+128),w
  9483  0293  0020               	movlb	0	; select bank0
  9484  0294  00AE               	movwf	??_readAnalog+6
  9485  0295  0021               	movlb	1	; select bank1
  9486  0296  083E               	movf	_sampleIndex^(0+128),w
  9487  0297  0020               	movlb	0	; select bank0
  9488  0298  00AD               	movwf	??_readAnalog+5
  9489  0299  35AD               	lslf	??_readAnalog+5,f
  9490  029A  0DAE               	rlf	??_readAnalog+6,f
  9491  029B  0827               	movf	readAnalog@channel+1,w
  9492  029C  00F1               	movwf	___wmul@multiplier+1
  9493  029D  0826               	movf	readAnalog@channel,w
  9494  029E  00F0               	movwf	___wmul@multiplier
  9495  029F  3050               	movlw	80
  9496  02A0  00F2               	movwf	___wmul@multiplicand
  9497  02A1  3000               	movlw	0
  9498  02A2  00F3               	movwf	___wmul@multiplicand+1
  9499  02A3  3197  2730  3181   	fcall	___wmul
  9500  02A6  3050               	movlw	80
  9501  02A7  0020               	movlb	0	; select bank0
  9502  02A8  00AF               	movwf	??_readAnalog+7
  9503  02A9  3023               	movlw	35
  9504  02AA  00B0               	movwf	??_readAnalog+8
  9505  02AB  0870               	movf	?___wmul,w
  9506  02AC  072F               	addwf	??_readAnalog+7,w
  9507  02AD  00B1               	movwf	??_readAnalog+9
  9508  02AE  0871               	movf	?___wmul+1,w
  9509  02AF  3D30               	addwfc	??_readAnalog+8,w
  9510  02B0  00B2               	movwf	??_readAnalog+10
  9511  02B1  0831               	movf	??_readAnalog+9,w
  9512  02B2  072D               	addwf	??_readAnalog+5,w
  9513  02B3  0084               	movwf	4
  9514  02B4  0832               	movf	??_readAnalog+10,w
  9515  02B5  3D2E               	addwfc	??_readAnalog+6,w
  9516  02B6  0085               	movwf	5
  9517  02B7  3F00               	moviw [0]fsr0
  9518  02B8  00B3               	movwf	??_readAnalog+11
  9519  02B9  3F01               	moviw [1]fsr0
  9520  02BA  00B4               	movwf	??_readAnalog+12
  9521  02BB  01B5               	clrf	??_readAnalog+13
  9522  02BC  01B6               	clrf	??_readAnalog+14
  9523  02BD  0833               	movf	??_readAnalog+11,w
  9524  02BE  07A9               	addwf	??_readAnalog+1,f
  9525  02BF  0834               	movf	??_readAnalog+12,w
  9526  02C0  3DAA               	addwfc	??_readAnalog+2,f
  9527  02C1  0835               	movf	??_readAnalog+13,w
  9528  02C2  3DAB               	addwfc	??_readAnalog+3,f
  9529  02C3  0836               	movf	??_readAnalog+14,w
  9530  02C4  3DAC               	addwfc	??_readAnalog+4,f
  9531  02C5  0826               	movf	readAnalog@channel,w
  9532  02C6  00B7               	movwf	??_readAnalog+15
  9533  02C7  3001               	movlw	1
  9534  02C8                     u3305:	
  9535  02C8  35B7               	lslf	??_readAnalog+15,f
  9536  02C9  3EFF               	addlw	-1
  9537  02CA  1D03               	skipz
  9538  02CB  2AC8               	goto	u3305
  9539  02CC  3537               	lslf	??_readAnalog+15,w
  9540  02CD  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9541  02CE  0086               	movwf	6
  9542  02CF  0187               	clrf	7
  9543  02D0  0829               	movf	??_readAnalog+1,w
  9544  02D1  3FC0               	movwi [0]fsr1
  9545  02D2  082A               	movf	??_readAnalog+2,w
  9546  02D3  3FC1               	movwi [1]fsr1
  9547  02D4  082B               	movf	??_readAnalog+3,w
  9548  02D5  3FC2               	movwi [2]fsr1
  9549  02D6  082C               	movf	??_readAnalog+4,w
  9550  02D7  3FC3               	movwi [3]fsr1
  9551                           
  9552                           ;adc.c: 48: if(channel>=(2-1))
  9553  02D8  0827               	movf	readAnalog@channel+1,w
  9554  02D9  3A80               	xorlw	128
  9555  02DA  00A8               	movwf	??_readAnalog
  9556  02DB  3080               	movlw	128
  9557  02DC  0228               	subwf	??_readAnalog,w
  9558  02DD  1D03               	skipz
  9559  02DE  2AE1               	goto	u3315
  9560  02DF  3001               	movlw	1
  9561  02E0  0226               	subwf	readAnalog@channel,w
  9562  02E1                     u3315:	
  9563  02E1  1C03               	skipc
  9564  02E2  2AF1               	goto	l2942
  9565                           
  9566                           ;adc.c: 49: {
  9567                           ;adc.c: 50: sampleIndex+=1;
  9568  02E3  3001               	movlw	1
  9569  02E4  0021               	movlb	1	; select bank1
  9570  02E5  07BE               	addwf	_sampleIndex^(0+128),f
  9571  02E6  3000               	movlw	0
  9572  02E7  3DBF               	addwfc	(_sampleIndex+1)^(0+128),f
  9573                           
  9574                           ;adc.c: 51: if(sampleIndex >= 40)sampleIndex = 0;
  9575  02E8  3000               	movlw	0
  9576  02E9  023F               	subwf	(_sampleIndex+1)^(0+128),w
  9577  02EA  3028               	movlw	40
  9578  02EB  1903               	skipnz
  9579  02EC  023E               	subwf	_sampleIndex^(0+128),w
  9580  02ED  1C03               	skipc
  9581  02EE  2AF1               	goto	l2942
  9582  02EF  01BE               	clrf	_sampleIndex^(0+128)
  9583  02F0  01BF               	clrf	(_sampleIndex+1)^(0+128)
  9584  02F1                     l2942:	
  9585                           
  9586                           ;adc.c: 52: }
  9587                           ;adc.c: 54: value = totals[channel]/40;
  9588  02F1  3000               	movlw	0
  9589  02F2  00F3               	movwf	___aldiv@divisor+3
  9590  02F3  3000               	movlw	0
  9591  02F4  00F2               	movwf	___aldiv@divisor+2
  9592  02F5  3000               	movlw	0
  9593  02F6  00F1               	movwf	___aldiv@divisor+1
  9594  02F7  3028               	movlw	40
  9595  02F8  00F0               	movwf	___aldiv@divisor
  9596  02F9  0020               	movlb	0	; select bank0
  9597  02FA  0826               	movf	readAnalog@channel,w
  9598  02FB  00A8               	movwf	??_readAnalog
  9599  02FC  3001               	movlw	1
  9600  02FD                     u3335:	
  9601  02FD  35A8               	lslf	??_readAnalog,f
  9602  02FE  3EFF               	addlw	-1
  9603  02FF  1D03               	skipz
  9604  0300  2AFD               	goto	u3335
  9605  0301  3528               	lslf	??_readAnalog,w
  9606  0302  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9607  0303  0086               	movwf	6
  9608  0304  0187               	clrf	7
  9609  0305  3F40               	moviw [0]fsr1
  9610  0306  00F4               	movwf	___aldiv@dividend
  9611  0307  3F41               	moviw [1]fsr1
  9612  0308  00F5               	movwf	___aldiv@dividend+1
  9613  0309  3F42               	moviw [2]fsr1
  9614  030A  00F6               	movwf	___aldiv@dividend+2
  9615  030B  3F43               	moviw [3]fsr1
  9616  030C  00F7               	movwf	___aldiv@dividend+3
  9617  030D  318A  227E         	fcall	___aldiv
  9618  030F  0871               	movf	?___aldiv+1,w
  9619  0310  00FC               	movwf	readAnalog@value+1
  9620  0311  0870               	movf	?___aldiv,w
  9621  0312  00FB               	movwf	readAnalog@value
  9622                           
  9623                           ;adc.c: 56: return value;
  9624  0313  087C               	movf	readAnalog@value+1,w
  9625  0314  0020               	movlb	0	; select bank0
  9626  0315  00A7               	movwf	?_readAnalog+1
  9627  0316  087B               	movf	readAnalog@value,w
  9628  0317  00A6               	movwf	?_readAnalog
  9629  0318  0008               	return
  9630  0319                     __end_of_readAnalog:	
  9631                           
  9632                           	psect	text14
  9633  0A7E                     __ptext14:	
  9634 ;; *************** function ___aldiv *****************
  9635 ;; Defined at:
  9636 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;  divisor         4    0[COMMON] long 
  9639 ;;  dividend        4    4[COMMON] long 
  9640 ;; Auto vars:     Size  Location     Type
  9641 ;;  quotient        4    2[BANK0 ] long 
  9642 ;;  sign            1    1[BANK0 ] unsigned char 
  9643 ;;  counter         1    0[BANK0 ] unsigned char 
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  4    0[COMMON] long 
  9646 ;; Registers used:
  9647 ;;		wreg, status,2, status,0
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9653 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;Total ram usage:       15 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; This function calls:
  9660 ;;		Nothing
  9661 ;; This function is called by:
  9662 ;;		_readAnalog
  9663 ;;		_main
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           
  9668                           ;psect for function ___aldiv
  9669  0A7E                     ___aldiv:	
  9670                           
  9671                           ;incstack = 0
  9672                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9673  0A7E  0020               	movlb	0	; select bank0
  9674  0A7F  01A1               	clrf	___aldiv@sign
  9675  0A80  1FF3               	btfss	___aldiv@divisor+3,7
  9676  0A81  2A8F               	goto	l575
  9677  0A82  09F0               	comf	___aldiv@divisor,f
  9678  0A83  09F1               	comf	___aldiv@divisor+1,f
  9679  0A84  09F2               	comf	___aldiv@divisor+2,f
  9680  0A85  09F3               	comf	___aldiv@divisor+3,f
  9681  0A86  0AF0               	incf	___aldiv@divisor,f
  9682  0A87  1903               	skipnz
  9683  0A88  0AF1               	incf	___aldiv@divisor+1,f
  9684  0A89  1903               	skipnz
  9685  0A8A  0AF2               	incf	___aldiv@divisor+2,f
  9686  0A8B  1903               	skipnz
  9687  0A8C  0AF3               	incf	___aldiv@divisor+3,f
  9688  0A8D  01A1               	clrf	___aldiv@sign
  9689  0A8E  0AA1               	incf	___aldiv@sign,f
  9690  0A8F                     l575:	
  9691  0A8F  1FF7               	btfss	___aldiv@dividend+3,7
  9692  0A90  2AA0               	goto	l2720
  9693  0A91  09F4               	comf	___aldiv@dividend,f
  9694  0A92  09F5               	comf	___aldiv@dividend+1,f
  9695  0A93  09F6               	comf	___aldiv@dividend+2,f
  9696  0A94  09F7               	comf	___aldiv@dividend+3,f
  9697  0A95  0AF4               	incf	___aldiv@dividend,f
  9698  0A96  1903               	skipnz
  9699  0A97  0AF5               	incf	___aldiv@dividend+1,f
  9700  0A98  1903               	skipnz
  9701  0A99  0AF6               	incf	___aldiv@dividend+2,f
  9702  0A9A  1903               	skipnz
  9703  0A9B  0AF7               	incf	___aldiv@dividend+3,f
  9704  0A9C  3001               	movlw	1
  9705  0A9D  00F8               	movwf	??___aldiv
  9706  0A9E  0878               	movf	??___aldiv,w
  9707  0A9F  06A1               	xorwf	___aldiv@sign,f
  9708  0AA0                     l2720:	
  9709  0AA0  3000               	movlw	0
  9710  0AA1  00A5               	movwf	___aldiv@quotient+3
  9711  0AA2  3000               	movlw	0
  9712  0AA3  00A4               	movwf	___aldiv@quotient+2
  9713  0AA4  3000               	movlw	0
  9714  0AA5  00A3               	movwf	___aldiv@quotient+1
  9715  0AA6  3000               	movlw	0
  9716  0AA7  00A2               	movwf	___aldiv@quotient
  9717  0AA8  0873               	movf	___aldiv@divisor+3,w
  9718  0AA9  0472               	iorwf	___aldiv@divisor+2,w
  9719  0AAA  0471               	iorwf	___aldiv@divisor+1,w
  9720  0AAB  0470               	iorwf	___aldiv@divisor,w
  9721  0AAC  1903               	skipnz
  9722  0AAD  2AE9               	goto	l2742
  9723  0AAE  01A0               	clrf	___aldiv@counter
  9724  0AAF  0AA0               	incf	___aldiv@counter,f
  9725  0AB0                     l2728:	
  9726  0AB0  1BF3               	btfsc	___aldiv@divisor+3,7
  9727  0AB1  2ABE               	goto	l2730
  9728  0AB2  3001               	movlw	1
  9729  0AB3                     u2945:	
  9730  0AB3  35F0               	lslf	___aldiv@divisor,f
  9731  0AB4  0DF1               	rlf	___aldiv@divisor+1,f
  9732  0AB5  0DF2               	rlf	___aldiv@divisor+2,f
  9733  0AB6  0DF3               	rlf	___aldiv@divisor+3,f
  9734  0AB7  0B89               	decfsz	9,f
  9735  0AB8  2AB3               	goto	u2945
  9736  0AB9  3001               	movlw	1
  9737  0ABA  00F8               	movwf	??___aldiv
  9738  0ABB  0878               	movf	??___aldiv,w
  9739  0ABC  07A0               	addwf	___aldiv@counter,f
  9740  0ABD  2AB0               	goto	l2728
  9741  0ABE                     l2730:	
  9742  0ABE  3001               	movlw	1
  9743  0ABF                     u2965:	
  9744  0ABF  35A2               	lslf	___aldiv@quotient,f
  9745  0AC0  0DA3               	rlf	___aldiv@quotient+1,f
  9746  0AC1  0DA4               	rlf	___aldiv@quotient+2,f
  9747  0AC2  0DA5               	rlf	___aldiv@quotient+3,f
  9748  0AC3  0B89               	decfsz	9,f
  9749  0AC4  2ABF               	goto	u2965
  9750  0AC5  0873               	movf	___aldiv@divisor+3,w
  9751  0AC6  0277               	subwf	___aldiv@dividend+3,w
  9752  0AC7  1D03               	skipz
  9753  0AC8  2AD3               	goto	u2975
  9754  0AC9  0872               	movf	___aldiv@divisor+2,w
  9755  0ACA  0276               	subwf	___aldiv@dividend+2,w
  9756  0ACB  1D03               	skipz
  9757  0ACC  2AD3               	goto	u2975
  9758  0ACD  0871               	movf	___aldiv@divisor+1,w
  9759  0ACE  0275               	subwf	___aldiv@dividend+1,w
  9760  0ACF  1D03               	skipz
  9761  0AD0  2AD3               	goto	u2975
  9762  0AD1  0870               	movf	___aldiv@divisor,w
  9763  0AD2  0274               	subwf	___aldiv@dividend,w
  9764  0AD3                     u2975:	
  9765  0AD3  1C03               	skipc
  9766  0AD4  2ADE               	goto	l2738
  9767  0AD5  0870               	movf	___aldiv@divisor,w
  9768  0AD6  02F4               	subwf	___aldiv@dividend,f
  9769  0AD7  0871               	movf	___aldiv@divisor+1,w
  9770  0AD8  3BF5               	subwfb	___aldiv@dividend+1,f
  9771  0AD9  0872               	movf	___aldiv@divisor+2,w
  9772  0ADA  3BF6               	subwfb	___aldiv@dividend+2,f
  9773  0ADB  0873               	movf	___aldiv@divisor+3,w
  9774  0ADC  3BF7               	subwfb	___aldiv@dividend+3,f
  9775  0ADD  1422               	bsf	___aldiv@quotient,0
  9776  0ADE                     l2738:	
  9777  0ADE  3001               	movlw	1
  9778  0ADF                     u2985:	
  9779  0ADF  36F3               	lsrf	___aldiv@divisor+3,f
  9780  0AE0  0CF2               	rrf	___aldiv@divisor+2,f
  9781  0AE1  0CF1               	rrf	___aldiv@divisor+1,f
  9782  0AE2  0CF0               	rrf	___aldiv@divisor,f
  9783  0AE3  0B89               	decfsz	9,f
  9784  0AE4  2ADF               	goto	u2985
  9785  0AE5  3001               	movlw	1
  9786  0AE6  02A0               	subwf	___aldiv@counter,f
  9787  0AE7  1D03               	btfss	3,2
  9788  0AE8  2ABE               	goto	l2730
  9789  0AE9                     l2742:	
  9790  0AE9  0821               	movf	___aldiv@sign,w
  9791  0AEA  1903               	btfsc	3,2
  9792  0AEB  2AF7               	goto	l2746
  9793  0AEC  09A2               	comf	___aldiv@quotient,f
  9794  0AED  09A3               	comf	___aldiv@quotient+1,f
  9795  0AEE  09A4               	comf	___aldiv@quotient+2,f
  9796  0AEF  09A5               	comf	___aldiv@quotient+3,f
  9797  0AF0  0AA2               	incf	___aldiv@quotient,f
  9798  0AF1  1903               	skipnz
  9799  0AF2  0AA3               	incf	___aldiv@quotient+1,f
  9800  0AF3  1903               	skipnz
  9801  0AF4  0AA4               	incf	___aldiv@quotient+2,f
  9802  0AF5  1903               	skipnz
  9803  0AF6  0AA5               	incf	___aldiv@quotient+3,f
  9804  0AF7                     l2746:	
  9805  0AF7  0825               	movf	___aldiv@quotient+3,w
  9806  0AF8  00F3               	movwf	?___aldiv+3
  9807  0AF9  0824               	movf	___aldiv@quotient+2,w
  9808  0AFA  00F2               	movwf	?___aldiv+2
  9809  0AFB  0823               	movf	___aldiv@quotient+1,w
  9810  0AFC  00F1               	movwf	?___aldiv+1
  9811  0AFD  0822               	movf	___aldiv@quotient,w
  9812  0AFE  00F0               	movwf	?___aldiv
  9813  0AFF  0008               	return
  9814  0B00                     __end_of___aldiv:	
  9815                           
  9816                           	psect	text15
  9817  1695                     __ptext15:	
  9818 ;; *************** function _ADCRead *****************
  9819 ;; Defined at:
  9820 ;;		line 16 in file "adc.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  channel         1    wreg     enum E13559
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  channel         1    3[COMMON] enum E13559
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  2    0[COMMON] unsigned int 
  9827 ;; Registers used:
  9828 ;;		wreg
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9834 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9838 ;;Total ram usage:        4 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; This function calls:
  9841 ;;		Nothing
  9842 ;; This function is called by:
  9843 ;;		_readAnalog
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           
  9848                           ;psect for function _ADCRead
  9849  1695                     _ADCRead:	
  9850                           
  9851                           ;incstack = 0
  9852                           ; Regs used in _ADCRead: [wreg]
  9853                           ;ADCRead@channel stored from wreg
  9854  1695  00F3               	movwf	ADCRead@channel
  9855                           
  9856                           ;adc.c: 18: ADPCH = channel;
  9857  1696  0873               	movf	ADCRead@channel,w
  9858  1697  0021               	movlb	1	; select bank1
  9859  1698  009E               	movwf	30	;volatile
  9860                           
  9861                           ;adc.c: 20: ADCON0bits.ADON = 1;
  9862  1699  1793               	bsf	19,7	;volatile
  9863                           
  9864                           ;adc.c: 22: ADCON0bits.ADCONT = 0;
  9865  169A  1313               	bcf	19,6	;volatile
  9866                           
  9867                           ;adc.c: 24: ADCON0bits.ADGO = 1;
  9868  169B  1413               	bsf	19,0	;volatile
  9869  169C                     l288:	
  9870                           ;adc.c: 27: {
  9871                           
  9872                           ;adc.c: 26: while(ADCON0bits.ADGO)
  9873                           
  9874  169C  1813               	btfsc	19,0	;volatile
  9875  169D  2E9C               	goto	l288
  9876                           
  9877                           ;adc.c: 28: }
  9878                           ;adc.c: 30: return ((ADRESH<<8)+ADRESL);
  9879  169E  080D               	movf	13,w	;volatile
  9880  169F  00F1               	movwf	?_ADCRead+1
  9881  16A0  080C               	movf	12,w	;volatile
  9882  16A1  00F0               	movwf	?_ADCRead
  9883  16A2  0008               	return
  9884  16A3                     __end_of_ADCRead:	
  9885                           
  9886                           	psect	text16
  9887  0319                     __ptext16:	
  9888 ;; *************** function _menuChoice *****************
  9889 ;; Defined at:
  9890 ;;		line 52 in file "menu.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;		None
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;		None
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;Total ram usage:        5 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:    3
  9911 ;; This function calls:
  9912 ;;		_LCD_Clear
  9913 ;;		_LCD_Set_Cursor
  9914 ;;		_LCD_Write_Int
  9915 ;;		_LCD_Write_String
  9916 ;;		_PWM7_LoadDutyValue
  9917 ;;		_readKey
  9918 ;; This function is called by:
  9919 ;;		_main
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           
  9923                           
  9924                           ;psect for function _menuChoice
  9925  0319                     _menuChoice:	
  9926  0319                     l2978:	
  9927                           ;menu.c: 54: while(RB2 != 1)
  9928                           
  9929                           ;incstack = 0
  9930                           ; Regs used in _menuChoice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9931                           
  9932  0319  0020               	movlb	0	; select bank0
  9933  031A  190D               	btfsc	13,2	;volatile
  9934  031B  2B72               	goto	l2980
  9935                           
  9936                           ;menu.c: 55: {
  9937                           ;menu.c: 56: choice = readKey();
  9938  031C  3196  26CD  3183   	fcall	_readKey
  9939  031F  0020               	movlb	0	; select bank0
  9940  0320  00AE               	movwf	??_menuChoice
  9941  0321  082E               	movf	??_menuChoice,w
  9942  0322  0021               	movlb	1	; select bank1
  9943  0323  00C4               	movwf	_choice^(0+128)
  9944                           
  9945                           ;menu.c: 58: if(timer > 4000)
  9946  0324  0843               	movf	(_timer+1)^(0+128),w
  9947  0325  3A80               	xorlw	128
  9948  0326  0020               	movlb	0	; select bank0
  9949  0327  00AE               	movwf	??_menuChoice
  9950  0328  308F               	movlw	143
  9951  0329  022E               	subwf	??_menuChoice,w
  9952  032A  1D03               	skipz
  9953  032B  2B2F               	goto	u3345
  9954  032C  30A1               	movlw	161
  9955  032D  0021               	movlb	1	; select bank1
  9956  032E  0242               	subwf	_timer^(0+128),w
  9957  032F                     u3345:	
  9958  032F  1C03               	skipc
  9959  0330  2B35               	goto	l2956
  9960                           
  9961                           ;menu.c: 59: {
  9962                           ;menu.c: 60: timer = 0;
  9963  0331  0021               	movlb	1	; select bank1
  9964  0332  01C2               	clrf	_timer^(0+128)
  9965  0333  01C3               	clrf	(_timer+1)^(0+128)
  9966                           
  9967                           ;menu.c: 61: goto Exit;
  9968  0334  2D2E               	goto	l3078
  9969  0335                     l2956:	
  9970                           
  9971                           ;menu.c: 62: }
  9972                           ;menu.c: 64: if(timer2>125){ LCD_Set_Cursor(0,0); LCD_Write_String("Up/Down to Alter");}
      +                          else { LCD_Set_Cursor(0,0); LCD_Write_String("Enter to Select ");};
  9973  0335  307E               	movlw	126
  9974  0336  0021               	movlb	1	; select bank1
  9975  0337  0248               	subwf	_timer2^(0+128),w
  9976  0338  1C03               	skipc
  9977  0339  2B43               	goto	l2962
  9978  033A  01F4               	clrf	LCD_Set_Cursor@y
  9979  033B  3000               	movlw	0
  9980  033C  3188  20A3  3183   	fcall	_LCD_Set_Cursor
  9981  033F  305F               	movlw	low (STR_3| (0+32768))
  9982  0340  00F5               	movwf	LCD_Write_String@a
  9983  0341  3090               	movlw	high (STR_3| (0+32768))
  9984  0342  2B4B               	goto	L3
  9985  0343                     l2962:	
  9986  0343  01F4               	clrf	LCD_Set_Cursor@y
  9987  0344  3000               	movlw	0
  9988  0345  3188  20A3  3183   	fcall	_LCD_Set_Cursor
  9989  0348  304E               	movlw	low (STR_4| (0+32768))
  9990  0349  00F5               	movwf	LCD_Write_String@a
  9991  034A  3090               	movlw	high (STR_4| (0+32768))
  9992  034B                     L3:	
  9993  034B  00F6               	movwf	LCD_Write_String@a+1
  9994  034C  3197  2716  3183   	fcall	_LCD_Write_String
  9995                           
  9996                           ;menu.c: 66: { LCD_Set_Cursor(0,1); LCD_Write_String(desc[choice]);};
  9997  034F  01F4               	clrf	LCD_Set_Cursor@y
  9998  0350  0AF4               	incf	LCD_Set_Cursor@y,f
  9999  0351  3000               	movlw	0
 10000  0352  3188  20A3  3183   	fcall	_LCD_Set_Cursor
 10001  0355  0021               	movlb	1	; select bank1
 10002  0356  3544               	lslf	_choice^(0+128),w
 10003  0357  3EB4               	addlw	(low (_desc| (0+256)))& (0+255)
 10004  0358  0086               	movwf	6
 10005  0359  3001               	movlw	1	; select bank3/4
 10006  035A  0087               	movwf	7
 10007  035B  3F40               	moviw [0]fsr1
 10008  035C  00F5               	movwf	LCD_Write_String@a
 10009  035D  3F41               	moviw [1]fsr1
 10010  035E  00F6               	movwf	LCD_Write_String@a+1
 10011  035F  3197  2716  3183   	fcall	_LCD_Write_String
 10012                           
 10013                           ;menu.c: 68: if(timer2>249)timer2=0;
 10014  0362  30FA               	movlw	250
 10015  0363  0021               	movlb	1	; select bank1
 10016  0364  0248               	subwf	_timer2^(0+128),w
 10017  0365  1803               	btfsc	3,0
 10018  0366  01C8               	clrf	_timer2^(0+128)
 10019                           
 10020                           ;menu.c: 70: timer+=1;
 10021  0367  3001               	movlw	1
 10022  0368  07C2               	addwf	_timer^(0+128),f
 10023  0369  3000               	movlw	0
 10024  036A  3DC3               	addwfc	(_timer+1)^(0+128),f
 10025                           
 10026                           ;menu.c: 71: timer2+=1;
 10027  036B  3001               	movlw	1
 10028  036C  0020               	movlb	0	; select bank0
 10029  036D  00AE               	movwf	??_menuChoice
 10030  036E  082E               	movf	??_menuChoice,w
 10031  036F  0021               	movlb	1	; select bank1
 10032  0370  07C8               	addwf	_timer2^(0+128),f
 10033  0371  2B19               	goto	l2978
 10034  0372                     l2980:	
 10035                           
 10036                           ;menu.c: 72: }
 10037                           ;menu.c: 73: timer=0;
 10038  0372  0021               	movlb	1	; select bank1
 10039  0373  01C2               	clrf	_timer^(0+128)
 10040  0374  01C3               	clrf	(_timer+1)^(0+128)
 10041                           
 10042                           ;menu.c: 74: timer2=0;
 10043  0375  01C8               	clrf	_timer2^(0+128)
 10044                           
 10045                           ;menu.c: 76: _delay((unsigned long)((1000)*(32000000/4000.0)));
 10046  0376  3029               	movlw	41
 10047  0377  0020               	movlb	0	; select bank0
 10048  0378  00B0               	movwf	??_menuChoice+2
 10049  0379  3096               	movlw	150
 10050  037A  00AF               	movwf	??_menuChoice+1
 10051  037B  30A6               	movlw	166
 10052  037C  00AE               	movwf	??_menuChoice
 10053  037D                     u3707:	
 10054  037D  0BAE               	decfsz	??_menuChoice,f
 10055  037E  2B7D               	goto	u3707
 10056  037F  0BAF               	decfsz	??_menuChoice+1,f
 10057  0380  2B7D               	goto	u3707
 10058  0381  0BB0               	decfsz	??_menuChoice+2,f
 10059  0382  2B7D               	goto	u3707
 10060                           
 10061                           ;menu.c: 78: { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1, 0);};
 10062  0383  01F4               	clrf	LCD_Set_Cursor@y
 10063  0384  0AF4               	incf	LCD_Set_Cursor@y,f
 10064  0385  300A               	movlw	10
 10065  0386  3188  20A3  3183   	fcall	_LCD_Set_Cursor
 10066  0389  0021               	movlb	1	; select bank1
 10067  038A  3544               	lslf	_choice^(0+128),w
 10068  038B  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10069  038C  0086               	movwf	6
 10070  038D  0187               	clrf	7
 10071  038E  3F40               	moviw [0]fsr1
 10072  038F  00F9               	movwf	LCD_Write_Int@value
 10073  0390  3F41               	moviw [1]fsr1
 10074  0391  00FA               	movwf	LCD_Write_Int@value+1
 10075  0392  01FB               	clrf	LCD_Write_Int@fieldLength
 10076  0393  03FB               	decf	LCD_Write_Int@fieldLength,f
 10077  0394  01FC               	clrf	LCD_Write_Int@numPlaces
 10078  0395  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10079  0396  01FD               	clrf	LCD_Write_Int@sign
 10080  0397  318D  2566  3183   	fcall	_LCD_Write_Int
 10081                           
 10082                           ;menu.c: 80: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10083  039A  3052               	movlw	82
 10084  039B  0020               	movlb	0	; select bank0
 10085  039C  00B0               	movwf	??_menuChoice+2
 10086  039D  302C               	movlw	44
 10087  039E  00AF               	movwf	??_menuChoice+1
 10088  039F  304F               	movlw	79
 10089  03A0  00AE               	movwf	??_menuChoice
 10090  03A1                     u3717:	
 10091  03A1  0BAE               	decfsz	??_menuChoice,f
 10092  03A2  2BA1               	goto	u3717
 10093  03A3  0BAF               	decfsz	??_menuChoice+1,f
 10094  03A4  2BA1               	goto	u3717
 10095  03A5  0BB0               	decfsz	??_menuChoice+2,f
 10096  03A6  2BA1               	goto	u3717
 10097  03A7  3200               	nop2
 10098                           
 10099                           ;menu.c: 82: while(RB2 != 1)
 10100  03A8  2D00               	goto	l3076
 10101  03A9                     l3000:	
 10102                           ;menu.c: 89: goto Exit;
 10103                           
 10104                           
 10105                           ;menu.c: 90: }
 10106                           ;menu.c: 91: _delay((unsigned long)((2)*(32000000/4000.0)));
 10107  03A9  3015               	movlw	21
 10108  03AA  0020               	movlb	0	; select bank0
 10109  03AB  00AF               	movwf	??_menuChoice+1
 10110  03AC  30C6               	movlw	198
 10111  03AD  00AE               	movwf	??_menuChoice
 10112  03AE                     u3737:	
 10113  03AE  0BAE               	decfsz	??_menuChoice,f
 10114  03AF  2BAE               	goto	u3737
 10115  03B0  0BAF               	decfsz	??_menuChoice+1,f
 10116  03B1  2BAE               	goto	u3737
 10117  03B2  0000               	nop
 10118                           
 10119                           ;menu.c: 92: timer+=1;
 10120  03B3  3001               	movlw	1
 10121  03B4  0021               	movlb	1	; select bank1
 10122  03B5  07C2               	addwf	_timer^(0+128),f
 10123  03B6  3000               	movlw	0
 10124  03B7  3DC3               	addwfc	(_timer+1)^(0+128),f
 10125                           
 10126                           ;menu.c: 94: if(RB0==1)
 10127  03B8  0020               	movlb	0	; select bank0
 10128  03B9  1C0D               	btfss	13,0	;volatile
 10129  03BA  2C49               	goto	l3032
 10130                           
 10131                           ;menu.c: 95: {
 10132                           ;menu.c: 96: delayCount+=2;
 10133  03BB  3002               	movlw	2
 10134  03BC  00AE               	movwf	??_menuChoice
 10135  03BD  082E               	movf	??_menuChoice,w
 10136  03BE  0021               	movlb	1	; select bank1
 10137  03BF  07C5               	addwf	_delayCount^(0+128),f
 10138                           
 10139                           ;menu.c: 98: setpoint[choice]+=1;
 10140  03C0  3544               	lslf	_choice^(0+128),w
 10141  03C1  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10142  03C2  0086               	movwf	6
 10143  03C3  0187               	clrf	7
 10144  03C4  3001               	movlw	1
 10145  03C5  0781               	addwf	1,f
 10146  03C6  3141               	addfsr 1,1
 10147  03C7  1803               	skipnc
 10148  03C8  0A81               	incf	1,f
 10149                           
 10150                           ;menu.c: 99: if(setpoint[choice]>highRangeSet[choice])setpoint[choice]=highRangeSet[choi
      +                          ce];
 10151  03C9  3544               	lslf	_choice^(0+128),w
 10152  03CA  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10153  03CB  0086               	movwf	6
 10154  03CC  0187               	clrf	7
 10155  03CD  3F40               	moviw [0]fsr1
 10156  03CE  0020               	movlb	0	; select bank0
 10157  03CF  00AE               	movwf	??_menuChoice
 10158  03D0  3F41               	moviw [1]fsr1
 10159  03D1  00AF               	movwf	??_menuChoice+1
 10160  03D2  0021               	movlb	1	; select bank1
 10161  03D3  3544               	lslf	_choice^(0+128),w
 10162  03D4  3EB8               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10163  03D5  0086               	movwf	6
 10164  03D6  3001               	movlw	1	; select bank3/4
 10165  03D7  0087               	movwf	7
 10166  03D8  3F40               	moviw [0]fsr1
 10167  03D9  0020               	movlb	0	; select bank0
 10168  03DA  00B0               	movwf	??_menuChoice+2
 10169  03DB  3F41               	moviw [1]fsr1
 10170  03DC  00B1               	movwf	??_menuChoice+3
 10171  03DD  0831               	movf	??_menuChoice+3,w
 10172  03DE  3A80               	xorlw	128
 10173  03DF  00B2               	movwf	??_menuChoice+4
 10174  03E0  082F               	movf	??_menuChoice+1,w
 10175  03E1  3A80               	xorlw	128
 10176  03E2  0232               	subwf	??_menuChoice+4,w
 10177  03E3  1D03               	skipz
 10178  03E4  2BE7               	goto	u3405
 10179  03E5  082E               	movf	??_menuChoice,w
 10180  03E6  0230               	subwf	??_menuChoice+2,w
 10181  03E7                     u3405:	
 10182  03E7  1803               	skipnc
 10183  03E8  2BF7               	goto	l3012
 10184  03E9  0021               	movlb	1	; select bank1
 10185  03EA  3544               	lslf	_choice^(0+128),w
 10186  03EB  3EB8               	addlw	(low (_highRangeSet| (0+256)))& (0+255)
 10187  03EC  0086               	movwf	6
 10188  03ED  3001               	movlw	1	; select bank3/4
 10189  03EE  0087               	movwf	7
 10190  03EF  3544               	lslf	_choice^(0+128),w
 10191  03F0  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10192  03F1  0084               	movwf	4
 10193  03F2  0185               	clrf	5
 10194  03F3  3F40               	moviw [0]fsr1
 10195  03F4  3F80               	movwi [0]fsr0
 10196  03F5  3F41               	moviw [1]fsr1
 10197  03F6  3F81               	movwi [1]fsr0
 10198  03F7                     l3012:	
 10199                           
 10200                           ;menu.c: 100: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10201  03F7  0021               	movlb	1	; select bank1
 10202  03F8  0844               	movf	_choice^(0+128),w
 10203  03F9  1D03               	btfss	3,2
 10204  03FA  2C0F               	goto	l3018
 10205  03FB  01F4               	clrf	LCD_Set_Cursor@y
 10206  03FC  0AF4               	incf	LCD_Set_Cursor@y,f
 10207  03FD  300A               	movlw	10
 10208  03FE  3188  20A3  3183   	fcall	_LCD_Set_Cursor
 10209  0401  0021               	movlb	1	; select bank1
 10210  0402  3544               	lslf	_choice^(0+128),w
 10211  0403  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10212  0404  0086               	movwf	6
 10213  0405  0187               	clrf	7
 10214  0406  3F40               	moviw [0]fsr1
 10215  0407  00F9               	movwf	LCD_Write_Int@value
 10216  0408  3F41               	moviw [1]fsr1
 10217  0409  00FA               	movwf	LCD_Write_Int@value+1
 10218  040A  01FB               	clrf	LCD_Write_Int@fieldLength
 10219  040B  03FB               	decf	LCD_Write_Int@fieldLength,f
 10220  040C  01FC               	clrf	LCD_Write_Int@numPlaces
 10221  040D  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10222  040E  2C21               	goto	L4
 10223  040F                     l3018:	
 10224  040F  01F4               	clrf	LCD_Set_Cursor@y
 10225  0410  0AF4               	incf	LCD_Set_Cursor@y,f
 10226  0411  300A               	movlw	10
 10227  0412  3188  20A3  3183   	fcall	_LCD_Set_Cursor
 10228  0415  0021               	movlb	1	; select bank1
 10229  0416  3544               	lslf	_choice^(0+128),w
 10230  0417  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10231  0418  0086               	movwf	6
 10232  0419  0187               	clrf	7
 10233  041A  3F40               	moviw [0]fsr1
 10234  041B  00F9               	movwf	LCD_Write_Int@value
 10235  041C  3F41               	moviw [1]fsr1
 10236  041D  00FA               	movwf	LCD_Write_Int@value+1
 10237  041E  01FB               	clrf	LCD_Write_Int@fieldLength
 10238  041F  03FB               	decf	LCD_Write_Int@fieldLength,f
 10239  0420  01FC               	clrf	LCD_Write_Int@numPlaces
 10240  0421                     L4:	
 10241  0421  01FD               	clrf	LCD_Write_Int@sign
 10242  0422  318D  2566  3183   	fcall	_LCD_Write_Int
 10243                           
 10244                           ;menu.c: 101: menuDelay=1255;
 10245  0425  30E7               	movlw	231
 10246  0426  0021               	movlb	1	; select bank1
 10247  0427  00B4               	movwf	_menuDelay^(0+128)
 10248  0428  3004               	movlw	4
 10249  0429  00B5               	movwf	(_menuDelay^(0+128)+1)
 10250                           
 10251                           ;menu.c: 102: if(delayCount<30)
 10252  042A  301E               	movlw	30
 10253  042B  0245               	subwf	_delayCount^(0+128),w
 10254  042C  1803               	skipnc
 10255  042D  2C3C               	goto	l366
 10256                           
 10257                           ;menu.c: 103: {
 10258                           ;menu.c: 104: _delay((unsigned long)((150)*(32000000/4000.0)));
 10259  042E  3007               	movlw	7
 10260  042F  0020               	movlb	0	; select bank0
 10261  0430  00B0               	movwf	??_menuChoice+2
 10262  0431  3017               	movlw	23
 10263  0432  00AF               	movwf	??_menuChoice+1
 10264  0433  306F               	movlw	111
 10265  0434  00AE               	movwf	??_menuChoice
 10266  0435                     u3747:	
 10267  0435  0BAE               	decfsz	??_menuChoice,f
 10268  0436  2C35               	goto	u3747
 10269  0437  0BAF               	decfsz	??_menuChoice+1,f
 10270  0438  2C35               	goto	u3747
 10271  0439  0BB0               	decfsz	??_menuChoice+2,f
 10272  043A  2C35               	goto	u3747
 10273  043B  0000               	nop
 10274  043C                     l366:	
 10275                           
 10276                           ;menu.c: 105: }
 10277                           ;menu.c: 106: if(delayCount>(30+10))delayCount=(30+10);
 10278  043C  3029               	movlw	41
 10279  043D  0021               	movlb	1	; select bank1
 10280  043E  0245               	subwf	_delayCount^(0+128),w
 10281  043F  1C03               	skipc
 10282  0440  2C47               	goto	l3030
 10283  0441  3028               	movlw	40
 10284  0442  0020               	movlb	0	; select bank0
 10285  0443  00AE               	movwf	??_menuChoice
 10286  0444  082E               	movf	??_menuChoice,w
 10287  0445  0021               	movlb	1	; select bank1
 10288  0446  00C5               	movwf	_delayCount^(0+128)
 10289  0447                     l3030:	
 10290                           
 10291                           ;menu.c: 108: timer=0;
 10292  0447  01C2               	clrf	_timer^(0+128)
 10293  0448  01C3               	clrf	(_timer+1)^(0+128)
 10294  0449                     l3032:	
 10295                           
 10296                           ;menu.c: 109: }
 10297                           ;menu.c: 112: if(RB1==1)
 10298  0449  0020               	movlb	0	; select bank0
 10299  044A  1C8D               	btfss	13,1	;volatile
 10300  044B  2CDB               	goto	l3062
 10301                           
 10302                           ;menu.c: 113: {
 10303                           ;menu.c: 114: delayCount+=2;
 10304  044C  3002               	movlw	2
 10305  044D  00AE               	movwf	??_menuChoice
 10306  044E  082E               	movf	??_menuChoice,w
 10307  044F  0021               	movlb	1	; select bank1
 10308  0450  07C5               	addwf	_delayCount^(0+128),f
 10309                           
 10310                           ;menu.c: 115: setpoint[choice]-=1;
 10311  0451  3544               	lslf	_choice^(0+128),w
 10312  0452  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10313  0453  0086               	movwf	6
 10314  0454  0187               	clrf	7
 10315  0455  30FF               	movlw	255
 10316  0456  0781               	addwf	1,f
 10317  0457  3141               	addfsr 1,1
 10318  0458  30FF               	movlw	255
 10319  0459  3D81               	addwfc	1,f
 10320  045A  317F               	addfsr 1,-1
 10321                           
 10322                           ;menu.c: 116: if(setpoint[choice]<lowRangeSet[choice])setpoint[choice]=lowRangeSet[choic
      +                          e];
 10323  045B  3544               	lslf	_choice^(0+128),w
 10324  045C  3EBC               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10325  045D  0086               	movwf	6
 10326  045E  3001               	movlw	1	; select bank3/4
 10327  045F  0087               	movwf	7
 10328  0460  3F40               	moviw [0]fsr1
 10329  0461  0020               	movlb	0	; select bank0
 10330  0462  00AE               	movwf	??_menuChoice
 10331  0463  3F41               	moviw [1]fsr1
 10332  0464  00AF               	movwf	??_menuChoice+1
 10333  0465  0021               	movlb	1	; select bank1
 10334  0466  3544               	lslf	_choice^(0+128),w
 10335  0467  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10336  0468  0086               	movwf	6
 10337  0469  0187               	clrf	7
 10338  046A  3F40               	moviw [0]fsr1
 10339  046B  0020               	movlb	0	; select bank0
 10340  046C  00B0               	movwf	??_menuChoice+2
 10341  046D  3F41               	moviw [1]fsr1
 10342  046E  00B1               	movwf	??_menuChoice+3
 10343  046F  0831               	movf	??_menuChoice+3,w
 10344  0470  3A80               	xorlw	128
 10345  0471  00B2               	movwf	??_menuChoice+4
 10346  0472  082F               	movf	??_menuChoice+1,w
 10347  0473  3A80               	xorlw	128
 10348  0474  0232               	subwf	??_menuChoice+4,w
 10349  0475  1D03               	skipz
 10350  0476  2C79               	goto	u3455
 10351  0477  082E               	movf	??_menuChoice,w
 10352  0478  0230               	subwf	??_menuChoice+2,w
 10353  0479                     u3455:	
 10354  0479  1803               	skipnc
 10355  047A  2C89               	goto	l3042
 10356  047B  0021               	movlb	1	; select bank1
 10357  047C  3544               	lslf	_choice^(0+128),w
 10358  047D  3EBC               	addlw	(low (_lowRangeSet| (0+256)))& (0+255)
 10359  047E  0086               	movwf	6
 10360  047F  3001               	movlw	1	; select bank3/4
 10361  0480  0087               	movwf	7
 10362  0481  3544               	lslf	_choice^(0+128),w
 10363  0482  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10364  0483  0084               	movwf	4
 10365  0484  0185               	clrf	5
 10366  0485  3F40               	moviw [0]fsr1
 10367  0486  3F80               	movwi [0]fsr0
 10368  0487  3F41               	moviw [1]fsr1
 10369  0488  3F81               	movwi [1]fsr0
 10370  0489                     l3042:	
 10371                           
 10372                           ;menu.c: 117: if(choice==0){ LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 1,
      +                           0);}else { LCD_Set_Cursor(10,1); LCD_Write_Int(setpoint[choice],-1, 0, 0);};
 10373  0489  0021               	movlb	1	; select bank1
 10374  048A  0844               	movf	_choice^(0+128),w
 10375  048B  1D03               	btfss	3,2
 10376  048C  2CA1               	goto	l3048
 10377  048D  01F4               	clrf	LCD_Set_Cursor@y
 10378  048E  0AF4               	incf	LCD_Set_Cursor@y,f
 10379  048F  300A               	movlw	10
 10380  0490  3188  20A3  3183   	fcall	_LCD_Set_Cursor
 10381  0493  0021               	movlb	1	; select bank1
 10382  0494  3544               	lslf	_choice^(0+128),w
 10383  0495  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10384  0496  0086               	movwf	6
 10385  0497  0187               	clrf	7
 10386  0498  3F40               	moviw [0]fsr1
 10387  0499  00F9               	movwf	LCD_Write_Int@value
 10388  049A  3F41               	moviw [1]fsr1
 10389  049B  00FA               	movwf	LCD_Write_Int@value+1
 10390  049C  01FB               	clrf	LCD_Write_Int@fieldLength
 10391  049D  03FB               	decf	LCD_Write_Int@fieldLength,f
 10392  049E  01FC               	clrf	LCD_Write_Int@numPlaces
 10393  049F  0AFC               	incf	LCD_Write_Int@numPlaces,f
 10394  04A0  2CB3               	goto	L5
 10395  04A1                     l3048:	
 10396  04A1  01F4               	clrf	LCD_Set_Cursor@y
 10397  04A2  0AF4               	incf	LCD_Set_Cursor@y,f
 10398  04A3  300A               	movlw	10
 10399  04A4  3188  20A3  3183   	fcall	_LCD_Set_Cursor
 10400  04A7  0021               	movlb	1	; select bank1
 10401  04A8  3544               	lslf	_choice^(0+128),w
 10402  04A9  3EE2               	addlw	(low (_setpoint| 0))& (0+255)
 10403  04AA  0086               	movwf	6
 10404  04AB  0187               	clrf	7
 10405  04AC  3F40               	moviw [0]fsr1
 10406  04AD  00F9               	movwf	LCD_Write_Int@value
 10407  04AE  3F41               	moviw [1]fsr1
 10408  04AF  00FA               	movwf	LCD_Write_Int@value+1
 10409  04B0  01FB               	clrf	LCD_Write_Int@fieldLength
 10410  04B1  03FB               	decf	LCD_Write_Int@fieldLength,f
 10411  04B2  01FC               	clrf	LCD_Write_Int@numPlaces
 10412  04B3                     L5:	
 10413  04B3  01FD               	clrf	LCD_Write_Int@sign
 10414  04B4  318D  2566  3183   	fcall	_LCD_Write_Int
 10415                           
 10416                           ;menu.c: 118: menuDelay=1255;
 10417  04B7  30E7               	movlw	231
 10418  04B8  0021               	movlb	1	; select bank1
 10419  04B9  00B4               	movwf	_menuDelay^(0+128)
 10420  04BA  3004               	movlw	4
 10421  04BB  00B5               	movwf	(_menuDelay^(0+128)+1)
 10422                           
 10423                           ;menu.c: 120: if(delayCount<30)
 10424  04BC  301E               	movlw	30
 10425  04BD  0245               	subwf	_delayCount^(0+128),w
 10426  04BE  1803               	skipnc
 10427  04BF  2CCE               	goto	l372
 10428                           
 10429                           ;menu.c: 121: {
 10430                           ;menu.c: 122: _delay((unsigned long)((150)*(32000000/4000.0)));
 10431  04C0  3007               	movlw	7
 10432  04C1  0020               	movlb	0	; select bank0
 10433  04C2  00B0               	movwf	??_menuChoice+2
 10434  04C3  3017               	movlw	23
 10435  04C4  00AF               	movwf	??_menuChoice+1
 10436  04C5  306F               	movlw	111
 10437  04C6  00AE               	movwf	??_menuChoice
 10438  04C7                     u3757:	
 10439  04C7  0BAE               	decfsz	??_menuChoice,f
 10440  04C8  2CC7               	goto	u3757
 10441  04C9  0BAF               	decfsz	??_menuChoice+1,f
 10442  04CA  2CC7               	goto	u3757
 10443  04CB  0BB0               	decfsz	??_menuChoice+2,f
 10444  04CC  2CC7               	goto	u3757
 10445  04CD  0000               	nop
 10446  04CE                     l372:	
 10447                           
 10448                           ;menu.c: 123: }
 10449                           ;menu.c: 125: if(delayCount>(30+10))delayCount=(30+10);
 10450  04CE  3029               	movlw	41
 10451  04CF  0021               	movlb	1	; select bank1
 10452  04D0  0245               	subwf	_delayCount^(0+128),w
 10453  04D1  1C03               	skipc
 10454  04D2  2CD9               	goto	l3060
 10455  04D3  3028               	movlw	40
 10456  04D4  0020               	movlb	0	; select bank0
 10457  04D5  00AE               	movwf	??_menuChoice
 10458  04D6  082E               	movf	??_menuChoice,w
 10459  04D7  0021               	movlb	1	; select bank1
 10460  04D8  00C5               	movwf	_delayCount^(0+128)
 10461  04D9                     l3060:	
 10462                           
 10463                           ;menu.c: 127: timer=0;
 10464  04D9  01C2               	clrf	_timer^(0+128)
 10465  04DA  01C3               	clrf	(_timer+1)^(0+128)
 10466  04DB                     l3062:	
 10467                           
 10468                           ;menu.c: 128: }
 10469                           ;menu.c: 130: PWM7_LoadDutyValue(setpoint[1]);
 10470  04DB  0021               	movlb	1	; select bank1
 10471  04DC  0865               	movf	((_setpoint+1)^(0+128)+2),w
 10472  04DD  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
 10473  04DE  0864               	movf	(_setpoint^(0+128)+2),w
 10474  04DF  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
 10475  04E0  3196  26B7  3183   	fcall	_PWM7_LoadDutyValue
 10476                           
 10477                           ;menu.c: 133: if(delayCount>0)delayCount-=1;
 10478  04E3  0021               	movlb	1	; select bank1
 10479  04E4  0845               	movf	_delayCount^(0+128),w
 10480  04E5  1903               	btfsc	3,2
 10481  04E6  2CE9               	goto	l3068
 10482  04E7  3001               	movlw	1
 10483  04E8  02C5               	subwf	_delayCount^(0+128),f
 10484  04E9                     l3068:	
 10485                           
 10486                           ;menu.c: 135: if(!(RB1 || RB0))
 10487  04E9  0020               	movlb	0	; select bank0
 10488  04EA  1C8D               	btfss	13,1	;volatile
 10489  04EB  180D               	btfsc	13,0	;volatile
 10490  04EC  2D00               	goto	l3076
 10491                           
 10492                           ;menu.c: 136: {
 10493                           ;menu.c: 137: if(menuDelay>0)
 10494  04ED  0021               	movlb	1	; select bank1
 10495  04EE  0835               	movf	(_menuDelay+1)^(0+128),w
 10496  04EF  3A80               	xorlw	128
 10497  04F0  0020               	movlb	0	; select bank0
 10498  04F1  00AE               	movwf	??_menuChoice
 10499  04F2  3080               	movlw	128
 10500  04F3  022E               	subwf	??_menuChoice,w
 10501  04F4  1D03               	skipz
 10502  04F5  2CF9               	goto	u3525
 10503  04F6  3001               	movlw	1
 10504  04F7  0021               	movlb	1	; select bank1
 10505  04F8  0234               	subwf	_menuDelay^(0+128),w
 10506  04F9                     u3525:	
 10507  04F9  1C03               	skipc
 10508  04FA  2D00               	goto	l3076
 10509                           
 10510                           ;menu.c: 138: {
 10511                           ;menu.c: 139: menuDelay-=1;
 10512  04FB  30FF               	movlw	255
 10513  04FC  0021               	movlb	1	; select bank1
 10514  04FD  07B4               	addwf	_menuDelay^(0+128),f
 10515  04FE  30FF               	movlw	255
 10516  04FF  3DB5               	addwfc	(_menuDelay+1)^(0+128),f
 10517  0500                     l3076:	
 10518  0500  0020               	movlb	0	; select bank0
 10519  0501  190D               	btfsc	13,2	;volatile
 10520  0502  2D2E               	goto	l3078
 10521                           
 10522                           ;menu.c: 83: {
 10523                           ;menu.c: 84: if(timer > 4000)
 10524  0503  0021               	movlb	1	; select bank1
 10525  0504  0843               	movf	(_timer+1)^(0+128),w
 10526  0505  3A80               	xorlw	128
 10527  0506  0020               	movlb	0	; select bank0
 10528  0507  00AE               	movwf	??_menuChoice
 10529  0508  308F               	movlw	143
 10530  0509  022E               	subwf	??_menuChoice,w
 10531  050A  1D03               	skipz
 10532  050B  2D0F               	goto	u3385
 10533  050C  30A1               	movlw	161
 10534  050D  0021               	movlb	1	; select bank1
 10535  050E  0242               	subwf	_timer^(0+128),w
 10536  050F                     u3385:	
 10537  050F  1C03               	skipc
 10538  0510  2BA9               	goto	l3000
 10539                           
 10540                           ;menu.c: 85: {
 10541                           ;menu.c: 86: timer = 0;
 10542  0511  0021               	movlb	1	; select bank1
 10543  0512  01C2               	clrf	_timer^(0+128)
 10544  0513  01C3               	clrf	(_timer+1)^(0+128)
 10545                           
 10546                           ;menu.c: 87: { LCD_Set_Cursor(0,0); LCD_Write_String("   Good-Bye!!   ");};
 10547  0514  01F4               	clrf	LCD_Set_Cursor@y
 10548  0515  3000               	movlw	0
 10549  0516  3188  20A3  3183   	fcall	_LCD_Set_Cursor
 10550  0519  303D               	movlw	low (STR_5| (0+32768))
 10551  051A  00F5               	movwf	LCD_Write_String@a
 10552  051B  3090               	movlw	high (STR_5| (0+32768))
 10553  051C  00F6               	movwf	LCD_Write_String@a+1
 10554  051D  3197  2716  3183   	fcall	_LCD_Write_String
 10555                           
 10556                           ;menu.c: 88: _delay((unsigned long)((2000)*(32000000/4000.0)));
 10557  0520  3052               	movlw	82
 10558  0521  0020               	movlb	0	; select bank0
 10559  0522  00B0               	movwf	??_menuChoice+2
 10560  0523  302C               	movlw	44
 10561  0524  00AF               	movwf	??_menuChoice+1
 10562  0525  304F               	movlw	79
 10563  0526  00AE               	movwf	??_menuChoice
 10564  0527                     u3727:	
 10565  0527  0BAE               	decfsz	??_menuChoice,f
 10566  0528  2D27               	goto	u3727
 10567  0529  0BAF               	decfsz	??_menuChoice+1,f
 10568  052A  2D27               	goto	u3727
 10569  052B  0BB0               	decfsz	??_menuChoice+2,f
 10570  052C  2D27               	goto	u3727
 10571  052D  3200               	nop2
 10572  052E                     l3078:	
 10573                           ;menu.c: 140: }
 10574                           ;menu.c: 141: }
 10575                           ;menu.c: 142: }
 10576                           ;menu.c: 143: Exit:
 10577                           
 10578                           
 10579                           ;menu.c: 144: timer=0;
 10580  052E  0021               	movlb	1	; select bank1
 10581  052F  01C2               	clrf	_timer^(0+128)
 10582  0530  01C3               	clrf	(_timer+1)^(0+128)
 10583                           
 10584                           ;menu.c: 145: loop=254;
 10585  0531  30FE               	movlw	254
 10586  0532  0020               	movlb	0	; select bank0
 10587  0533  00AE               	movwf	??_menuChoice
 10588  0534  082E               	movf	??_menuChoice,w
 10589  0535  0021               	movlb	1	; select bank1
 10590  0536  00EE               	movwf	_loop^(0+128)
 10591                           
 10592                           ;menu.c: 146: LCD_Clear();
 10593  0537  3196  2646         	fcall	_LCD_Clear
 10594  0539  0008               	return
 10595  053A                     __end_of_menuChoice:	
 10596                           
 10597                           	psect	text17
 10598  16CD                     __ptext17:	
 10599 ;; *************** function _readKey *****************
 10600 ;; Defined at:
 10601 ;;		line 37 in file "menu.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;		None
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;		None
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  1    wreg      unsigned char 
 10608 ;; Registers used:
 10609 ;;		wreg, status,2, status,0
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;Total ram usage:        1 bytes
 10620 ;; Hardware stack levels used:    1
 10621 ;; This function calls:
 10622 ;;		Nothing
 10623 ;; This function is called by:
 10624 ;;		_menuChoice
 10625 ;; This function uses a non-reentrant model
 10626 ;;
 10627                           
 10628                           
 10629                           ;psect for function _readKey
 10630  16CD                     _readKey:	
 10631                           
 10632                           ;menu.c: 39: if(RB1==1)
 10633                           
 10634                           ;incstack = 0
 10635                           ; Regs used in _readKey: [wreg+status,2+status,0]
 10636  16CD  0020               	movlb	0	; select bank0
 10637  16CE  1C8D               	btfss	13,1	;volatile
 10638  16CF  2ED6               	goto	l2700
 10639                           
 10640                           ;menu.c: 40: {
 10641                           ;menu.c: 41: if(key>0)key-=1;
 10642  16D0  0021               	movlb	1	; select bank1
 10643  16D1  0846               	movf	_key^(0+128),w
 10644  16D2  1903               	btfsc	3,2
 10645  16D3  2ED6               	goto	l2700
 10646  16D4  3001               	movlw	1
 10647  16D5  02C6               	subwf	_key^(0+128),f
 10648  16D6                     l2700:	
 10649                           
 10650                           ;menu.c: 42: }
 10651                           ;menu.c: 44: if(RB0==1)
 10652  16D6  0020               	movlb	0	; select bank0
 10653  16D7  1C0D               	btfss	13,0	;volatile
 10654  16D8  2EE1               	goto	l2706
 10655                           
 10656                           ;menu.c: 45: {
 10657                           ;menu.c: 46: if(key<1)key+=1;
 10658  16D9  0021               	movlb	1	; select bank1
 10659  16DA  0846               	movf	_key^(0+128),w
 10660  16DB  1D03               	btfss	3,2
 10661  16DC  2EE1               	goto	l2706
 10662  16DD  3001               	movlw	1
 10663  16DE  00F0               	movwf	??_readKey
 10664  16DF  0870               	movf	??_readKey,w
 10665  16E0  07C6               	addwf	_key^(0+128),f
 10666  16E1                     l2706:	
 10667                           
 10668                           ;menu.c: 47: }
 10669                           ;menu.c: 49: return key;
 10670  16E1  0021               	movlb	1	; select bank1
 10671  16E2  0846               	movf	_key^(0+128),w
 10672  16E3  0008               	return
 10673  16E4                     __end_of_readKey:	
 10674                           
 10675                           	psect	text18
 10676  16B7                     __ptext18:	
 10677 ;; *************** function _PWM7_LoadDutyValue *****************
 10678 ;; Defined at:
 10679 ;;		line 32 in file "pwm.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 10682 ;; Auto vars:     Size  Location     Type
 10683 ;;		None
 10684 ;; Return value:  Size  Location     Type
 10685 ;;                  1    wreg      void 
 10686 ;; Registers used:
 10687 ;;		wreg, status,2, status,0
 10688 ;; Tracked objects:
 10689 ;;		On entry : 0/0
 10690 ;;		On exit  : 0/0
 10691 ;;		Unchanged: 0/0
 10692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;Total ram usage:        4 bytes
 10698 ;; Hardware stack levels used:    1
 10699 ;; This function calls:
 10700 ;;		Nothing
 10701 ;; This function is called by:
 10702 ;;		_menuChoice
 10703 ;;		_main
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           
 10708                           ;psect for function _PWM7_LoadDutyValue
 10709  16B7                     _PWM7_LoadDutyValue:	
 10710                           
 10711                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 10712                           
 10713                           ;incstack = 0
 10714                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 10715  16B7  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 10716  16B8  00F3               	movwf	??_PWM7_LoadDutyValue+1
 10717  16B9  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10718  16BA  00F2               	movwf	??_PWM7_LoadDutyValue
 10719  16BB  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10720  16BC  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10721  16BD  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 10722  16BE  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 10723  16BF  0872               	movf	??_PWM7_LoadDutyValue,w
 10724  16C0  0027               	movlb	7	; select bank7
 10725  16C1  0091               	movwf	17	;volatile
 10726                           
 10727                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 10728  16C2  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 10729  16C3  3903               	andlw	3
 10730  16C4  00F2               	movwf	??_PWM7_LoadDutyValue
 10731  16C5  3005               	movlw	5
 10732  16C6                     u2855:	
 10733  16C6  35F2               	lslf	??_PWM7_LoadDutyValue,f
 10734  16C7  3EFF               	addlw	-1
 10735  16C8  1D03               	skipz
 10736  16C9  2EC6               	goto	u2855
 10737  16CA  3572               	lslf	??_PWM7_LoadDutyValue,w
 10738  16CB  0090               	movwf	16	;volatile
 10739  16CC  0008               	return
 10740  16CD                     __end_of_PWM7_LoadDutyValue:	
 10741                           
 10742                           	psect	text19
 10743  1716                     __ptext19:	
 10744 ;; *************** function _LCD_Write_String *****************
 10745 ;; Defined at:
 10746 ;;		line 239 in file "lcd.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  a               2    5[COMMON] PTR const unsigned char 
 10749 ;;		 -> STR_9(17), STR_8(17), STR_7(8), STR_6(5), 
 10750 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(11), 
 10751 ;;		 -> STR_1(11), 
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;  i               2    8[COMMON] int 
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  1    wreg      void 
 10756 ;; Registers used:
 10757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10767 ;;Total ram usage:        5 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    2
 10770 ;; This function calls:
 10771 ;;		_LCD_Write_Char
 10772 ;; This function is called by:
 10773 ;;		_menuChoice
 10774 ;;		_main
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           
 10779                           ;psect for function _LCD_Write_String
 10780  1716                     _LCD_Write_String:	
 10781                           
 10782                           ;lcd.c: 241: int i;
 10783                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10784                           
 10785                           ;incstack = 0
 10786                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10787  1716  01F8               	clrf	LCD_Write_String@i
 10788  1717  01F9               	clrf	LCD_Write_String@i+1
 10789  1718                     l2528:	
 10790  1718  0875               	movf	LCD_Write_String@a,w
 10791  1719  0778               	addwf	LCD_Write_String@i,w
 10792  171A  0084               	movwf	4
 10793  171B  0876               	movf	LCD_Write_String@a+1,w
 10794  171C  3D79               	addwfc	LCD_Write_String@i+1,w
 10795  171D  0085               	movwf	5
 10796  171E  0012               	moviw fsr0++
 10797  171F  1903               	btfsc	3,2
 10798  1720  0008               	return
 10799                           
 10800                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10801  1721  0875               	movf	LCD_Write_String@a,w
 10802  1722  0778               	addwf	LCD_Write_String@i,w
 10803  1723  0084               	movwf	4
 10804  1724  0876               	movf	LCD_Write_String@a+1,w
 10805  1725  3D79               	addwfc	LCD_Write_String@i+1,w
 10806  1726  0085               	movwf	5
 10807  1727  0800               	movf	0,w	;code access
 10808  1728  3188  2001  3197   	fcall	_LCD_Write_Char
 10809  172B  3001               	movlw	1
 10810  172C  07F8               	addwf	LCD_Write_String@i,f
 10811  172D  3000               	movlw	0
 10812  172E  3DF9               	addwfc	LCD_Write_String@i+1,f
 10813  172F  2F18               	goto	l2528
 10814  1730                     __end_of_LCD_Write_String:	
 10815                           
 10816                           	psect	text20
 10817  0D66                     __ptext20:	
 10818 ;; *************** function _LCD_Write_Int *****************
 10819 ;; Defined at:
 10820 ;;		line 246 in file "lcd.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  value           2    9[COMMON] int 
 10823 ;;  fieldLength     1   11[COMMON] char 
 10824 ;;  numPlaces       1   12[COMMON] char 
 10825 ;;  sign            1   13[COMMON] char 
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;  str             5    5[BANK0 ] unsigned char [5]
 10828 ;;  i               2   12[BANK0 ] int 
 10829 ;;  j               2   10[BANK0 ] int 
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      void 
 10832 ;; Registers used:
 10833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10839 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10843 ;;Total ram usage:       19 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:    2
 10846 ;; This function calls:
 10847 ;;		_LCD_Write_Char
 10848 ;;		___awdiv
 10849 ;;		___awmod
 10850 ;; This function is called by:
 10851 ;;		_menuChoice
 10852 ;;		_main
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856                           
 10857                           ;psect for function _LCD_Write_Int
 10858  0D66                     _LCD_Write_Int:	
 10859                           
 10860                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10861                           
 10862                           ;incstack = 0
 10863                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10864  0D66  30C0               	movlw	low LCD_Write_Int@F13694
 10865  0D67  0086               	movwf	6
 10866  0D68  3001               	movlw	high LCD_Write_Int@F13694
 10867  0D69  0087               	movwf	7
 10868  0D6A  3025               	movlw	low LCD_Write_Int@str
 10869  0D6B  0084               	movwf	4
 10870  0D6C  3000               	movlw	high LCD_Write_Int@str
 10871  0D6D  0085               	movwf	5
 10872  0D6E  3005               	movlw	5
 10873  0D6F  0020               	movlb	0	; select bank0
 10874  0D70  00A0               	movwf	??_LCD_Write_Int
 10875  0D71                     u2720:	
 10876  0D71  0016               	moviw fsr1++
 10877  0D72  001A               	movwi fsr0++
 10878  0D73  0BA0               	decfsz	??_LCD_Write_Int,f
 10879  0D74  2D71               	goto	u2720
 10880                           
 10881                           ;lcd.c: 249: int i=4,j=0;
 10882  0D75  3004               	movlw	4
 10883  0D76  00AC               	movwf	LCD_Write_Int@i
 10884  0D77  3000               	movlw	0
 10885  0D78  00AD               	movwf	LCD_Write_Int@i+1
 10886  0D79  01AA               	clrf	LCD_Write_Int@j
 10887  0D7A  01AB               	clrf	LCD_Write_Int@j+1
 10888                           
 10889                           ;lcd.c: 251: if(value<0)
 10890  0D7B  1FFA               	btfss	LCD_Write_Int@value+1,7
 10891  0D7C  2D87               	goto	l2542
 10892                           
 10893                           ;lcd.c: 252: {
 10894                           ;lcd.c: 253: LCD_Write_Char('-');
 10895  0D7D  302D               	movlw	45
 10896  0D7E  3188  2001  318D   	fcall	_LCD_Write_Char
 10897                           
 10898                           ;lcd.c: 254: value=value*-1;
 10899  0D81  09F9               	comf	LCD_Write_Int@value,f
 10900  0D82  09FA               	comf	LCD_Write_Int@value+1,f
 10901  0D83  0AF9               	incf	LCD_Write_Int@value,f
 10902  0D84  1903               	skipnz
 10903  0D85  0AFA               	incf	LCD_Write_Int@value+1,f
 10904                           
 10905                           ;lcd.c: 255: }
 10906  0D86  2D8E               	goto	l2552
 10907  0D87                     l2542:	
 10908                           
 10909                           ;lcd.c: 257: else
 10910                           ;lcd.c: 258: {
 10911                           ;lcd.c: 259: if(sign == 1)
 10912  0D87  037D               	decf	LCD_Write_Int@sign,w
 10913  0D88  1D03               	btfss	3,2
 10914  0D89  2D8E               	goto	l2552
 10915                           
 10916                           ;lcd.c: 260: {
 10917                           ;lcd.c: 261: LCD_Write_Char('+');
 10918  0D8A  302B               	movlw	43
 10919  0D8B  3188  2001  318D   	fcall	_LCD_Write_Char
 10920  0D8E                     l2552:	
 10921                           ;lcd.c: 262: }
 10922                           ;lcd.c: 263: }
 10923                           ;lcd.c: 265: while(value)
 10924                           
 10925  0D8E  0879               	movf	LCD_Write_Int@value,w
 10926  0D8F  047A               	iorwf	LCD_Write_Int@value+1,w
 10927  0D90  1903               	btfsc	3,2
 10928  0D91  2DBB               	goto	l2554
 10929                           
 10930                           ;lcd.c: 266: {
 10931                           ;lcd.c: 267: str[i]=value%10;
 10932  0D92  300A               	movlw	10
 10933  0D93  00F0               	movwf	___awmod@divisor
 10934  0D94  3000               	movlw	0
 10935  0D95  00F1               	movwf	___awmod@divisor+1
 10936  0D96  087A               	movf	LCD_Write_Int@value+1,w
 10937  0D97  00F3               	movwf	___awmod@dividend+1
 10938  0D98  0879               	movf	LCD_Write_Int@value,w
 10939  0D99  00F2               	movwf	___awmod@dividend
 10940  0D9A  3189  2124  318D   	fcall	___awmod
 10941  0D9D  0870               	movf	?___awmod,w
 10942  0D9E  0020               	movlb	0	; select bank0
 10943  0D9F  00A0               	movwf	??_LCD_Write_Int
 10944  0DA0  082C               	movf	LCD_Write_Int@i,w
 10945  0DA1  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10946  0DA2  0086               	movwf	6
 10947  0DA3  0187               	clrf	7
 10948  0DA4  0820               	movf	??_LCD_Write_Int,w
 10949  0DA5  0081               	movwf	1
 10950                           
 10951                           ;lcd.c: 268: value=value/10;
 10952  0DA6  300A               	movlw	10
 10953  0DA7  00F0               	movwf	___awdiv@divisor
 10954  0DA8  3000               	movlw	0
 10955  0DA9  00F1               	movwf	___awdiv@divisor+1
 10956  0DAA  087A               	movf	LCD_Write_Int@value+1,w
 10957  0DAB  00F3               	movwf	___awdiv@dividend+1
 10958  0DAC  0879               	movf	LCD_Write_Int@value,w
 10959  0DAD  00F2               	movwf	___awdiv@dividend
 10960  0DAE  3189  2169  318D   	fcall	___awdiv
 10961  0DB1  0871               	movf	?___awdiv+1,w
 10962  0DB2  00FA               	movwf	LCD_Write_Int@value+1
 10963  0DB3  0870               	movf	?___awdiv,w
 10964  0DB4  00F9               	movwf	LCD_Write_Int@value
 10965                           
 10966                           ;lcd.c: 269: i--;
 10967  0DB5  30FF               	movlw	255
 10968  0DB6  0020               	movlb	0	; select bank0
 10969  0DB7  07AC               	addwf	LCD_Write_Int@i,f
 10970  0DB8  30FF               	movlw	255
 10971  0DB9  3DAD               	addwfc	LCD_Write_Int@i+1,f
 10972  0DBA  2D8E               	goto	l2552
 10973  0DBB                     l2554:	
 10974                           
 10975                           ;lcd.c: 270: }
 10976                           ;lcd.c: 271: if(fieldLength==-1)
 10977  0DBB  0A7B               	incf	LCD_Write_Int@fieldLength,w
 10978  0DBC  1903               	btfsc	3,2
 10979  0DBD  2DC4               	goto	l2560
 10980  0DBE  2DCD               	goto	l2562
 10981  0DBF                     l2558:	
 10982                           ;lcd.c: 272: {
 10983                           ;lcd.c: 273: while(str[j]==0)
 10984                           
 10985                           
 10986                           ;lcd.c: 274: {
 10987                           ;lcd.c: 275: j++;
 10988  0DBF  3001               	movlw	1
 10989  0DC0  0020               	movlb	0	; select bank0
 10990  0DC1  07AA               	addwf	LCD_Write_Int@j,f
 10991  0DC2  3000               	movlw	0
 10992  0DC3  3DAB               	addwfc	LCD_Write_Int@j+1,f
 10993  0DC4                     l2560:	
 10994  0DC4  0020               	movlb	0	; select bank0
 10995  0DC5  082A               	movf	LCD_Write_Int@j,w
 10996  0DC6  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10997  0DC7  0086               	movwf	6
 10998  0DC8  0187               	clrf	7
 10999  0DC9  0801               	movf	1,w
 11000  0DCA  1D03               	btfss	3,2
 11001  0DCB  2DDE               	goto	l2564
 11002  0DCC  2DBF               	goto	l2558
 11003  0DCD                     l2562:	
 11004                           ;lcd.c: 276: }
 11005                           ;lcd.c: 277: }
 11006                           
 11007                           
 11008                           ;lcd.c: 278: else
 11009                           ;lcd.c: 279: {
 11010                           ;lcd.c: 280: j=5-fieldLength;
 11011  0DCD  087B               	movf	LCD_Write_Int@fieldLength,w
 11012  0DCE  0020               	movlb	0	; select bank0
 11013  0DCF  00A0               	movwf	??_LCD_Write_Int
 11014  0DD0  01A1               	clrf	??_LCD_Write_Int+1
 11015  0DD1  1BA0               	btfsc	??_LCD_Write_Int,7
 11016  0DD2  03A1               	decf	??_LCD_Write_Int+1,f
 11017  0DD3  09A0               	comf	??_LCD_Write_Int,f
 11018  0DD4  09A1               	comf	??_LCD_Write_Int+1,f
 11019  0DD5  0AA0               	incf	??_LCD_Write_Int,f
 11020  0DD6  1903               	skipnz
 11021  0DD7  0AA1               	incf	??_LCD_Write_Int+1,f
 11022  0DD8  0820               	movf	??_LCD_Write_Int,w
 11023  0DD9  3E05               	addlw	5
 11024  0DDA  00AA               	movwf	LCD_Write_Int@j
 11025  0DDB  3000               	movlw	0
 11026  0DDC  3D21               	addwfc	??_LCD_Write_Int+1,w
 11027  0DDD  00AB               	movwf	LCD_Write_Int@j+1
 11028  0DDE                     l2564:	
 11029                           
 11030                           ;lcd.c: 281: }
 11031                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11032  0DDE  082B               	movf	LCD_Write_Int@j+1,w
 11033  0DDF  00AD               	movwf	LCD_Write_Int@i+1
 11034  0DE0  082A               	movf	LCD_Write_Int@j,w
 11035  0DE1  00AC               	movwf	LCD_Write_Int@i
 11036  0DE2                     l2570:	
 11037  0DE2  087C               	movf	LCD_Write_Int@numPlaces,w
 11038  0DE3  00A0               	movwf	??_LCD_Write_Int
 11039  0DE4  01A1               	clrf	??_LCD_Write_Int+1
 11040  0DE5  1BA0               	btfsc	??_LCD_Write_Int,7
 11041  0DE6  03A1               	decf	??_LCD_Write_Int+1,f
 11042  0DE7  09A0               	comf	??_LCD_Write_Int,f
 11043  0DE8  09A1               	comf	??_LCD_Write_Int+1,f
 11044  0DE9  0AA0               	incf	??_LCD_Write_Int,f
 11045  0DEA  1903               	skipnz
 11046  0DEB  0AA1               	incf	??_LCD_Write_Int+1,f
 11047  0DEC  0820               	movf	??_LCD_Write_Int,w
 11048  0DED  3E05               	addlw	5
 11049  0DEE  00A2               	movwf	??_LCD_Write_Int+2
 11050  0DEF  3000               	movlw	0
 11051  0DF0  3D21               	addwfc	??_LCD_Write_Int+1,w
 11052  0DF1  00A3               	movwf	??_LCD_Write_Int+3
 11053  0DF2  082D               	movf	LCD_Write_Int@i+1,w
 11054  0DF3  3A80               	xorlw	128
 11055  0DF4  00A4               	movwf	??_LCD_Write_Int+4
 11056  0DF5  0823               	movf	??_LCD_Write_Int+3,w
 11057  0DF6  3A80               	xorlw	128
 11058  0DF7  0224               	subwf	??_LCD_Write_Int+4,w
 11059  0DF8  1D03               	skipz
 11060  0DF9  2DFC               	goto	u2785
 11061  0DFA  0822               	movf	??_LCD_Write_Int+2,w
 11062  0DFB  022C               	subwf	LCD_Write_Int@i,w
 11063  0DFC                     u2785:	
 11064  0DFC  1803               	btfsc	3,0
 11065  0DFD  2E0E               	goto	l2572
 11066                           
 11067                           ;lcd.c: 284: {
 11068                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11069  0DFE  0020               	movlb	0	; select bank0
 11070  0DFF  082C               	movf	LCD_Write_Int@i,w
 11071  0E00  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11072  0E01  0086               	movwf	6
 11073  0E02  0187               	clrf	7
 11074  0E03  0801               	movf	1,w
 11075  0E04  3E30               	addlw	48
 11076  0E05  3188  2001  318D   	fcall	_LCD_Write_Char
 11077  0E08  3001               	movlw	1
 11078  0E09  0020               	movlb	0	; select bank0
 11079  0E0A  07AC               	addwf	LCD_Write_Int@i,f
 11080  0E0B  3000               	movlw	0
 11081  0E0C  3DAD               	addwfc	LCD_Write_Int@i+1,f
 11082  0E0D  2DE2               	goto	l2570
 11083  0E0E                     l2572:	
 11084                           
 11085                           ;lcd.c: 286: }
 11086                           ;lcd.c: 288: if(numPlaces == 1)
 11087  0E0E  037C               	decf	LCD_Write_Int@numPlaces,w
 11088  0E0F  1D03               	btfss	3,2
 11089  0E10  2E1B               	goto	l2576
 11090                           
 11091                           ;lcd.c: 289: {
 11092                           ;lcd.c: 290: LCD_Write_Char(46);
 11093  0E11  302E               	movlw	46
 11094  0E12  3188  2001  318D   	fcall	_LCD_Write_Char
 11095                           
 11096                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11097  0E15  0020               	movlb	0	; select bank0
 11098  0E16  0829               	movf	LCD_Write_Int@str+4,w
 11099  0E17  3E30               	addlw	48
 11100  0E18  3188  2001  318D   	fcall	_LCD_Write_Char
 11101  0E1B                     l2576:	
 11102                           
 11103                           ;lcd.c: 292: }
 11104                           ;lcd.c: 294: if(numPlaces == 2)
 11105  0E1B  3002               	movlw	2
 11106  0E1C  067C               	xorwf	LCD_Write_Int@numPlaces,w
 11107  0E1D  1D03               	btfss	3,2
 11108  0E1E  0008               	return
 11109                           
 11110                           ;lcd.c: 295: {
 11111                           ;lcd.c: 296: LCD_Write_Char(46);
 11112  0E1F  302E               	movlw	46
 11113  0E20  3188  2001  318D   	fcall	_LCD_Write_Char
 11114                           
 11115                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11116  0E23  0020               	movlb	0	; select bank0
 11117  0E24  0828               	movf	LCD_Write_Int@str+3,w
 11118  0E25  3E30               	addlw	48
 11119  0E26  3188  2001  318D   	fcall	_LCD_Write_Char
 11120                           
 11121                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11122  0E29  0020               	movlb	0	; select bank0
 11123  0E2A  0829               	movf	LCD_Write_Int@str+4,w
 11124  0E2B  3E30               	addlw	48
 11125  0E2C  3188  2001         	fcall	_LCD_Write_Char
 11126  0E2E  0008               	return
 11127  0E2F                     __end_of_LCD_Write_Int:	
 11128                           
 11129                           	psect	text21
 11130  0924                     __ptext21:	
 11131 ;; *************** function ___awmod *****************
 11132 ;; Defined at:
 11133 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;  divisor         2    0[COMMON] int 
 11136 ;;  dividend        2    2[COMMON] int 
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;  sign            1    6[COMMON] unsigned char 
 11139 ;;  counter         1    5[COMMON] unsigned char 
 11140 ;; Return value:  Size  Location     Type
 11141 ;;                  2    0[COMMON] int 
 11142 ;; Registers used:
 11143 ;;		wreg, status,2, status,0
 11144 ;; Tracked objects:
 11145 ;;		On entry : 0/0
 11146 ;;		On exit  : 0/0
 11147 ;;		Unchanged: 0/0
 11148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11152 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11153 ;;Total ram usage:        7 bytes
 11154 ;; Hardware stack levels used:    1
 11155 ;; This function calls:
 11156 ;;		Nothing
 11157 ;; This function is called by:
 11158 ;;		_LCD_Write_Int
 11159 ;; This function uses a non-reentrant model
 11160 ;;
 11161                           
 11162                           
 11163                           ;psect for function ___awmod
 11164  0924                     ___awmod:	
 11165                           
 11166                           ;incstack = 0
 11167                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11168  0924  01F6               	clrf	___awmod@sign
 11169  0925  1FF3               	btfss	___awmod@dividend+1,7
 11170  0926  292E               	goto	l2358
 11171  0927  09F2               	comf	___awmod@dividend,f
 11172  0928  09F3               	comf	___awmod@dividend+1,f
 11173  0929  0AF2               	incf	___awmod@dividend,f
 11174  092A  1903               	skipnz
 11175  092B  0AF3               	incf	___awmod@dividend+1,f
 11176  092C  01F6               	clrf	___awmod@sign
 11177  092D  0AF6               	incf	___awmod@sign,f
 11178  092E                     l2358:	
 11179  092E  1FF1               	btfss	___awmod@divisor+1,7
 11180  092F  2935               	goto	l2362
 11181  0930  09F0               	comf	___awmod@divisor,f
 11182  0931  09F1               	comf	___awmod@divisor+1,f
 11183  0932  0AF0               	incf	___awmod@divisor,f
 11184  0933  1903               	skipnz
 11185  0934  0AF1               	incf	___awmod@divisor+1,f
 11186  0935                     l2362:	
 11187  0935  0870               	movf	___awmod@divisor,w
 11188  0936  0471               	iorwf	___awmod@divisor+1,w
 11189  0937  1903               	btfsc	3,2
 11190  0938  295C               	goto	l2380
 11191  0939  01F5               	clrf	___awmod@counter
 11192  093A  0AF5               	incf	___awmod@counter,f
 11193  093B                     l2370:	
 11194  093B  1BF1               	btfsc	___awmod@divisor+1,7
 11195  093C  2947               	goto	l2372
 11196  093D  3001               	movlw	1
 11197  093E                     u2535:	
 11198  093E  35F0               	lslf	___awmod@divisor,f
 11199  093F  0DF1               	rlf	___awmod@divisor+1,f
 11200  0940  0B89               	decfsz	9,f
 11201  0941  293E               	goto	u2535
 11202  0942  3001               	movlw	1
 11203  0943  00F4               	movwf	??___awmod
 11204  0944  0874               	movf	??___awmod,w
 11205  0945  07F5               	addwf	___awmod@counter,f
 11206  0946  293B               	goto	l2370
 11207  0947                     l2372:	
 11208  0947  0871               	movf	___awmod@divisor+1,w
 11209  0948  0273               	subwf	___awmod@dividend+1,w
 11210  0949  1D03               	skipz
 11211  094A  294D               	goto	u2555
 11212  094B  0870               	movf	___awmod@divisor,w
 11213  094C  0272               	subwf	___awmod@dividend,w
 11214  094D                     u2555:	
 11215  094D  1C03               	skipc
 11216  094E  2953               	goto	l2376
 11217  094F  0870               	movf	___awmod@divisor,w
 11218  0950  02F2               	subwf	___awmod@dividend,f
 11219  0951  0871               	movf	___awmod@divisor+1,w
 11220  0952  3BF3               	subwfb	___awmod@dividend+1,f
 11221  0953                     l2376:	
 11222  0953  3001               	movlw	1
 11223  0954                     u2565:	
 11224  0954  36F1               	lsrf	___awmod@divisor+1,f
 11225  0955  0CF0               	rrf	___awmod@divisor,f
 11226  0956  0B89               	decfsz	9,f
 11227  0957  2954               	goto	u2565
 11228  0958  3001               	movlw	1
 11229  0959  02F5               	subwf	___awmod@counter,f
 11230  095A  1D03               	btfss	3,2
 11231  095B  2947               	goto	l2372
 11232  095C                     l2380:	
 11233  095C  0876               	movf	___awmod@sign,w
 11234  095D  1903               	btfsc	3,2
 11235  095E  2964               	goto	l2384
 11236  095F  09F2               	comf	___awmod@dividend,f
 11237  0960  09F3               	comf	___awmod@dividend+1,f
 11238  0961  0AF2               	incf	___awmod@dividend,f
 11239  0962  1903               	skipnz
 11240  0963  0AF3               	incf	___awmod@dividend+1,f
 11241  0964                     l2384:	
 11242  0964  0873               	movf	___awmod@dividend+1,w
 11243  0965  00F1               	movwf	?___awmod+1
 11244  0966  0872               	movf	___awmod@dividend,w
 11245  0967  00F0               	movwf	?___awmod
 11246  0968  0008               	return
 11247  0969                     __end_of___awmod:	
 11248                           
 11249                           	psect	text22
 11250  0969                     __ptext22:	
 11251 ;; *************** function ___awdiv *****************
 11252 ;; Defined at:
 11253 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11254 ;; Parameters:    Size  Location     Type
 11255 ;;  divisor         2    0[COMMON] int 
 11256 ;;  dividend        2    2[COMMON] int 
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;  quotient        2    7[COMMON] int 
 11259 ;;  sign            1    6[COMMON] unsigned char 
 11260 ;;  counter         1    5[COMMON] unsigned char 
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  2    0[COMMON] int 
 11263 ;; Registers used:
 11264 ;;		wreg, status,2, status,0
 11265 ;; Tracked objects:
 11266 ;;		On entry : 0/0
 11267 ;;		On exit  : 0/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11271 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11272 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11273 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11274 ;;Total ram usage:        9 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; This function calls:
 11277 ;;		Nothing
 11278 ;; This function is called by:
 11279 ;;		_LCD_Write_Int
 11280 ;; This function uses a non-reentrant model
 11281 ;;
 11282                           
 11283                           
 11284                           ;psect for function ___awdiv
 11285  0969                     ___awdiv:	
 11286                           
 11287                           ;incstack = 0
 11288                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11289  0969  01F6               	clrf	___awdiv@sign
 11290  096A  1FF1               	btfss	___awdiv@divisor+1,7
 11291  096B  2973               	goto	l2314
 11292  096C  09F0               	comf	___awdiv@divisor,f
 11293  096D  09F1               	comf	___awdiv@divisor+1,f
 11294  096E  0AF0               	incf	___awdiv@divisor,f
 11295  096F  1903               	skipnz
 11296  0970  0AF1               	incf	___awdiv@divisor+1,f
 11297  0971  01F6               	clrf	___awdiv@sign
 11298  0972  0AF6               	incf	___awdiv@sign,f
 11299  0973                     l2314:	
 11300  0973  1FF3               	btfss	___awdiv@dividend+1,7
 11301  0974  297E               	goto	l2320
 11302  0975  09F2               	comf	___awdiv@dividend,f
 11303  0976  09F3               	comf	___awdiv@dividend+1,f
 11304  0977  0AF2               	incf	___awdiv@dividend,f
 11305  0978  1903               	skipnz
 11306  0979  0AF3               	incf	___awdiv@dividend+1,f
 11307  097A  3001               	movlw	1
 11308  097B  00F4               	movwf	??___awdiv
 11309  097C  0874               	movf	??___awdiv,w
 11310  097D  06F6               	xorwf	___awdiv@sign,f
 11311  097E                     l2320:	
 11312  097E  01F7               	clrf	___awdiv@quotient
 11313  097F  01F8               	clrf	___awdiv@quotient+1
 11314  0980  0870               	movf	___awdiv@divisor,w
 11315  0981  0471               	iorwf	___awdiv@divisor+1,w
 11316  0982  1903               	btfsc	3,2
 11317  0983  29AD               	goto	l2342
 11318  0984  01F5               	clrf	___awdiv@counter
 11319  0985  0AF5               	incf	___awdiv@counter,f
 11320  0986                     l2330:	
 11321  0986  1BF1               	btfsc	___awdiv@divisor+1,7
 11322  0987  2992               	goto	l2332
 11323  0988  3001               	movlw	1
 11324  0989                     u2435:	
 11325  0989  35F0               	lslf	___awdiv@divisor,f
 11326  098A  0DF1               	rlf	___awdiv@divisor+1,f
 11327  098B  0B89               	decfsz	9,f
 11328  098C  2989               	goto	u2435
 11329  098D  3001               	movlw	1
 11330  098E  00F4               	movwf	??___awdiv
 11331  098F  0874               	movf	??___awdiv,w
 11332  0990  07F5               	addwf	___awdiv@counter,f
 11333  0991  2986               	goto	l2330
 11334  0992                     l2332:	
 11335  0992  3001               	movlw	1
 11336  0993                     u2455:	
 11337  0993  35F7               	lslf	___awdiv@quotient,f
 11338  0994  0DF8               	rlf	___awdiv@quotient+1,f
 11339  0995  0B89               	decfsz	9,f
 11340  0996  2993               	goto	u2455
 11341  0997  0871               	movf	___awdiv@divisor+1,w
 11342  0998  0273               	subwf	___awdiv@dividend+1,w
 11343  0999  1D03               	skipz
 11344  099A  299D               	goto	u2465
 11345  099B  0870               	movf	___awdiv@divisor,w
 11346  099C  0272               	subwf	___awdiv@dividend,w
 11347  099D                     u2465:	
 11348  099D  1C03               	skipc
 11349  099E  29A4               	goto	l2338
 11350  099F  0870               	movf	___awdiv@divisor,w
 11351  09A0  02F2               	subwf	___awdiv@dividend,f
 11352  09A1  0871               	movf	___awdiv@divisor+1,w
 11353  09A2  3BF3               	subwfb	___awdiv@dividend+1,f
 11354  09A3  1477               	bsf	___awdiv@quotient,0
 11355  09A4                     l2338:	
 11356  09A4  3001               	movlw	1
 11357  09A5                     u2475:	
 11358  09A5  36F1               	lsrf	___awdiv@divisor+1,f
 11359  09A6  0CF0               	rrf	___awdiv@divisor,f
 11360  09A7  0B89               	decfsz	9,f
 11361  09A8  29A5               	goto	u2475
 11362  09A9  3001               	movlw	1
 11363  09AA  02F5               	subwf	___awdiv@counter,f
 11364  09AB  1D03               	btfss	3,2
 11365  09AC  2992               	goto	l2332
 11366  09AD                     l2342:	
 11367  09AD  0876               	movf	___awdiv@sign,w
 11368  09AE  1903               	btfsc	3,2
 11369  09AF  29B5               	goto	l2346
 11370  09B0  09F7               	comf	___awdiv@quotient,f
 11371  09B1  09F8               	comf	___awdiv@quotient+1,f
 11372  09B2  0AF7               	incf	___awdiv@quotient,f
 11373  09B3  1903               	skipnz
 11374  09B4  0AF8               	incf	___awdiv@quotient+1,f
 11375  09B5                     l2346:	
 11376  09B5  0878               	movf	___awdiv@quotient+1,w
 11377  09B6  00F1               	movwf	?___awdiv+1
 11378  09B7  0877               	movf	___awdiv@quotient,w
 11379  09B8  00F0               	movwf	?___awdiv
 11380  09B9  0008               	return
 11381  09BA                     __end_of___awdiv:	
 11382                           
 11383                           	psect	text23
 11384  08A3                     __ptext23:	
 11385 ;; *************** function _LCD_Set_Cursor *****************
 11386 ;; Defined at:
 11387 ;;		line 82 in file "lcd.c"
 11388 ;; Parameters:    Size  Location     Type
 11389 ;;  x               1    wreg     unsigned char 
 11390 ;;  y               1    4[COMMON] unsigned char 
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;  x               1    7[COMMON] unsigned char 
 11393 ;;  temp            1   10[COMMON] unsigned char 
 11394 ;;  w               1    9[COMMON] unsigned char 
 11395 ;;  z               1    8[COMMON] unsigned char 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      void 
 11398 ;; Registers used:
 11399 ;;		wreg, status,2, status,0, pclath, cstack
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11405 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11406 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;Total ram usage:        7 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:    2
 11412 ;; This function calls:
 11413 ;;		_LCD_Cmd
 11414 ;; This function is called by:
 11415 ;;		_menuChoice
 11416 ;;		_main
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           
 11421                           ;psect for function _LCD_Set_Cursor
 11422  08A3                     _LCD_Set_Cursor:	
 11423                           
 11424                           ;incstack = 0
 11425                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11426                           ;LCD_Set_Cursor@x stored from wreg
 11427  08A3  00F7               	movwf	LCD_Set_Cursor@x
 11428                           
 11429                           ;lcd.c: 86: char temp,z,w;
 11430                           ;lcd.c: 88: if(y == 0)
 11431  08A4  0874               	movf	LCD_Set_Cursor@y,w
 11432  08A5  1D03               	btfss	3,2
 11433  08A6  28C3               	goto	l2478
 11434                           
 11435                           ;lcd.c: 89: {
 11436                           ;lcd.c: 90: temp = 0x80 + x;
 11437  08A7  0877               	movf	LCD_Set_Cursor@x,w
 11438  08A8  3E80               	addlw	128
 11439  08A9  00F5               	movwf	??_LCD_Set_Cursor
 11440  08AA  0875               	movf	??_LCD_Set_Cursor,w
 11441  08AB  00FA               	movwf	LCD_Set_Cursor@temp
 11442                           
 11443                           ;lcd.c: 91: z = temp>>4;
 11444  08AC  087A               	movf	LCD_Set_Cursor@temp,w
 11445  08AD  00F5               	movwf	??_LCD_Set_Cursor
 11446  08AE  3004               	movlw	4
 11447  08AF                     u2685:	
 11448  08AF  36F5               	lsrf	??_LCD_Set_Cursor,f
 11449  08B0  0B89               	decfsz	9,f
 11450  08B1  28AF               	goto	u2685
 11451  08B2  0875               	movf	??_LCD_Set_Cursor,w
 11452  08B3  00F6               	movwf	??_LCD_Set_Cursor+1
 11453  08B4  0876               	movf	??_LCD_Set_Cursor+1,w
 11454  08B5  00F8               	movwf	LCD_Set_Cursor@z
 11455                           
 11456                           ;lcd.c: 92: w = temp & 0x0F;
 11457  08B6  087A               	movf	LCD_Set_Cursor@temp,w
 11458  08B7  390F               	andlw	15
 11459  08B8  00F5               	movwf	??_LCD_Set_Cursor
 11460  08B9  0875               	movf	??_LCD_Set_Cursor,w
 11461  08BA  00F9               	movwf	LCD_Set_Cursor@w
 11462                           
 11463                           ;lcd.c: 93: LCD_Cmd(z);
 11464  08BB  0878               	movf	LCD_Set_Cursor@z,w
 11465  08BC  3196  26A3  3188   	fcall	_LCD_Cmd
 11466                           
 11467                           ;lcd.c: 94: LCD_Cmd(w);
 11468  08BF  0879               	movf	LCD_Set_Cursor@w,w
 11469  08C0  3196  26A3         	fcall	_LCD_Cmd
 11470                           
 11471                           ;lcd.c: 95: }
 11472  08C2  0008               	return
 11473  08C3                     l2478:	
 11474                           
 11475                           ;lcd.c: 97: else if(y == 1)
 11476  08C3  0374               	decf	LCD_Set_Cursor@y,w
 11477  08C4  1D03               	btfss	3,2
 11478  08C5  0008               	return
 11479                           
 11480                           ;lcd.c: 98: {
 11481                           ;lcd.c: 99: temp = 0xC0 + x;
 11482  08C6  0877               	movf	LCD_Set_Cursor@x,w
 11483  08C7  3EC0               	addlw	192
 11484  08C8  00F5               	movwf	??_LCD_Set_Cursor
 11485  08C9  0875               	movf	??_LCD_Set_Cursor,w
 11486  08CA  00FA               	movwf	LCD_Set_Cursor@temp
 11487                           
 11488                           ;lcd.c: 100: z = temp>>4;
 11489  08CB  087A               	movf	LCD_Set_Cursor@temp,w
 11490  08CC  00F5               	movwf	??_LCD_Set_Cursor
 11491  08CD  3004               	movlw	4
 11492  08CE                     u2705:	
 11493  08CE  36F5               	lsrf	??_LCD_Set_Cursor,f
 11494  08CF  0B89               	decfsz	9,f
 11495  08D0  28CE               	goto	u2705
 11496  08D1  0875               	movf	??_LCD_Set_Cursor,w
 11497  08D2  00F6               	movwf	??_LCD_Set_Cursor+1
 11498  08D3  0876               	movf	??_LCD_Set_Cursor+1,w
 11499  08D4  00F8               	movwf	LCD_Set_Cursor@z
 11500                           
 11501                           ;lcd.c: 101: w = temp & 0x0F;
 11502  08D5  087A               	movf	LCD_Set_Cursor@temp,w
 11503  08D6  390F               	andlw	15
 11504  08D7  00F5               	movwf	??_LCD_Set_Cursor
 11505  08D8  0875               	movf	??_LCD_Set_Cursor,w
 11506  08D9  00F9               	movwf	LCD_Set_Cursor@w
 11507                           
 11508                           ;lcd.c: 102: LCD_Cmd(z);
 11509  08DA  0878               	movf	LCD_Set_Cursor@z,w
 11510  08DB  3196  26A3  3188   	fcall	_LCD_Cmd
 11511                           
 11512                           ;lcd.c: 103: LCD_Cmd(w);
 11513  08DE  0879               	movf	LCD_Set_Cursor@w,w
 11514  08DF  3196  26A3         	fcall	_LCD_Cmd
 11515  08E1  0008               	return
 11516  08E2                     __end_of_LCD_Set_Cursor:	
 11517                           
 11518                           	psect	text24
 11519  08E2                     __ptext24:	
 11520 ;; *************** function _SYSTEM_Initialize *****************
 11521 ;; Defined at:
 11522 ;;		line 71 in file "system.c"
 11523 ;; Parameters:    Size  Location     Type
 11524 ;;		None
 11525 ;; Auto vars:     Size  Location     Type
 11526 ;;		None
 11527 ;; Return value:  Size  Location     Type
 11528 ;;                  1    wreg      void 
 11529 ;; Registers used:
 11530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11531 ;; Tracked objects:
 11532 ;;		On entry : 0/0
 11533 ;;		On exit  : 0/0
 11534 ;;		Unchanged: 0/0
 11535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11538 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11539 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11540 ;;Total ram usage:        3 bytes
 11541 ;; Hardware stack levels used:    1
 11542 ;; Hardware stack levels required when called:    3
 11543 ;; This function calls:
 11544 ;;		_ADCC_Initialize
 11545 ;;		_InitCustomChars
 11546 ;;		_LCD_Clear
 11547 ;;		_LCD_Init
 11548 ;;		_OSCILLATOR_Initialize
 11549 ;;		_PIN_MANAGER_Initialize
 11550 ;;		_PWM_Initialize
 11551 ;;		_TMR2_Initialize
 11552 ;; This function is called by:
 11553 ;;		_main
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           
 11557                           
 11558                           ;psect for function _SYSTEM_Initialize
 11559  08E2                     _SYSTEM_Initialize:	
 11560                           
 11561                           ;system.c: 73: PIN_MANAGER_Initialize();
 11562                           
 11563                           ;incstack = 0
 11564                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11565  08E2  3197  27CF  3188   	fcall	_PIN_MANAGER_Initialize
 11566                           
 11567                           ;system.c: 74: OSCILLATOR_Initialize();
 11568  08E5  3196  264E  3188   	fcall	_OSCILLATOR_Initialize
 11569                           
 11570                           ;system.c: 75: FVRCON = 0x00;
 11571  08E8  0032               	movlb	18	; select bank18
 11572  08E9  018C               	clrf	12	;volatile
 11573                           
 11574                           ;system.c: 76: ADCC_Initialize();
 11575  08EA  3196  26FC  3188   	fcall	_ADCC_Initialize
 11576                           
 11577                           ;system.c: 77: PWM_Initialize();
 11578  08ED  3196  2657  3188   	fcall	_PWM_Initialize
 11579                           
 11580                           ;system.c: 79: TMR2_Initialize();
 11581  08F0  3196  2687  3188   	fcall	_TMR2_Initialize
 11582                           
 11583                           ;system.c: 80: LCD_Init(0X00);
 11584  08F3  3000               	movlw	0
 11585  08F4  318B  2386  3188   	fcall	_LCD_Init
 11586                           
 11587                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 11588  08F7  3009               	movlw	9
 11589  08F8  00FA               	movwf	??_SYSTEM_Initialize+2
 11590  08F9  301E               	movlw	30
 11591  08FA  00F9               	movwf	??_SYSTEM_Initialize+1
 11592  08FB  30EB               	movlw	235
 11593  08FC  00F8               	movwf	??_SYSTEM_Initialize
 11594  08FD                     u3767:	
 11595  08FD  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11596  08FE  28FD               	goto	u3767
 11597  08FF  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11598  0900  28FD               	goto	u3767
 11599  0901  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11600  0902  28FD               	goto	u3767
 11601  0903  0000               	nop
 11602                           
 11603                           ;system.c: 82: LCD_Clear();
 11604  0904  3196  2646  3188   	fcall	_LCD_Clear
 11605                           
 11606                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 11607  0907  3005               	movlw	5
 11608  0908  00FA               	movwf	??_SYSTEM_Initialize+2
 11609  0909  300F               	movlw	15
 11610  090A  00F9               	movwf	??_SYSTEM_Initialize+1
 11611  090B  30F4               	movlw	244
 11612  090C  00F8               	movwf	??_SYSTEM_Initialize
 11613  090D                     u3777:	
 11614  090D  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11615  090E  290D               	goto	u3777
 11616  090F  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11617  0910  290D               	goto	u3777
 11618  0911  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11619  0912  290D               	goto	u3777
 11620                           
 11621                           ;system.c: 84: InitCustomChars();
 11622  0913  3197  27A9  3188   	fcall	_InitCustomChars
 11623                           
 11624                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11625  0916  3009               	movlw	9
 11626  0917  00FA               	movwf	??_SYSTEM_Initialize+2
 11627  0918  301E               	movlw	30
 11628  0919  00F9               	movwf	??_SYSTEM_Initialize+1
 11629  091A  30EB               	movlw	235
 11630  091B  00F8               	movwf	??_SYSTEM_Initialize
 11631  091C                     u3787:	
 11632  091C  0BF8               	decfsz	??_SYSTEM_Initialize,f
 11633  091D  291C               	goto	u3787
 11634  091E  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 11635  091F  291C               	goto	u3787
 11636  0920  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 11637  0921  291C               	goto	u3787
 11638  0922  0000               	nop
 11639  0923  0008               	return
 11640  0924                     __end_of_SYSTEM_Initialize:	
 11641                           
 11642                           	psect	text25
 11643  1687                     __ptext25:	
 11644 ;; *************** function _TMR2_Initialize *****************
 11645 ;; Defined at:
 11646 ;;		line 3 in file "tmr2.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;		None
 11649 ;; Auto vars:     Size  Location     Type
 11650 ;;		None
 11651 ;; Return value:  Size  Location     Type
 11652 ;;                  1    wreg      void 
 11653 ;; Registers used:
 11654 ;;		wreg, status,2
 11655 ;; Tracked objects:
 11656 ;;		On entry : 0/0
 11657 ;;		On exit  : 0/0
 11658 ;;		Unchanged: 0/0
 11659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;Total ram usage:        0 bytes
 11665 ;; Hardware stack levels used:    1
 11666 ;; This function calls:
 11667 ;;		Nothing
 11668 ;; This function is called by:
 11669 ;;		_SYSTEM_Initialize
 11670 ;; This function uses a non-reentrant model
 11671 ;;
 11672                           
 11673                           
 11674                           ;psect for function _TMR2_Initialize
 11675  1687                     _TMR2_Initialize:	
 11676                           
 11677                           ;tmr2.c: 5: T2CON = 0x00;
 11678                           
 11679                           ;incstack = 0
 11680                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11681  1687  0025               	movlb	5	; select bank5
 11682  1688  018E               	clrf	14	;volatile
 11683                           
 11684                           ;tmr2.c: 7: T2CLKCON = 0x01;
 11685  1689  3001               	movlw	1
 11686  168A  0090               	movwf	16	;volatile
 11687                           
 11688                           ;tmr2.c: 9: T2HLT = 0x00;
 11689  168B  018F               	clrf	15	;volatile
 11690                           
 11691                           ;tmr2.c: 11: T2RST = 0x00;
 11692  168C  0191               	clrf	17	;volatile
 11693                           
 11694                           ;tmr2.c: 13: T2PR = 0xFF;
 11695  168D  30FF               	movlw	255
 11696  168E  008D               	movwf	13	;volatile
 11697                           
 11698                           ;tmr2.c: 15: T2TMR = 0x00;
 11699  168F  018C               	clrf	12	;volatile
 11700                           
 11701                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 11702  1690  002E               	movlb	14	; select bank14
 11703  1691  1090               	bcf	16,1	;volatile
 11704                           
 11705                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 11706  1692  0025               	movlb	5	; select bank5
 11707  1693  178E               	bsf	14,7	;volatile
 11708  1694  0008               	return
 11709  1695                     __end_of_TMR2_Initialize:	
 11710                           
 11711                           	psect	text26
 11712  1657                     __ptext26:	
 11713 ;; *************** function _PWM_Initialize *****************
 11714 ;; Defined at:
 11715 ;;		line 3 in file "pwm.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;		None
 11718 ;; Auto vars:     Size  Location     Type
 11719 ;;		None
 11720 ;; Return value:  Size  Location     Type
 11721 ;;                  1    wreg      void 
 11722 ;; Registers used:
 11723 ;;		wreg, status,2, status,0
 11724 ;; Tracked objects:
 11725 ;;		On entry : 0/0
 11726 ;;		On exit  : 0/0
 11727 ;;		Unchanged: 0/0
 11728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11733 ;;Total ram usage:        0 bytes
 11734 ;; Hardware stack levels used:    1
 11735 ;; This function calls:
 11736 ;;		Nothing
 11737 ;; This function is called by:
 11738 ;;		_SYSTEM_Initialize
 11739 ;; This function uses a non-reentrant model
 11740 ;;
 11741                           
 11742                           
 11743                           ;psect for function _PWM_Initialize
 11744  1657                     _PWM_Initialize:	
 11745                           
 11746                           ;pwm.c: 14: PWM7CON = 0x80;
 11747                           
 11748                           ;incstack = 0
 11749                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11750  1657  3080               	movlw	128
 11751  1658  0027               	movlb	7	; select bank7
 11752  1659  0092               	movwf	18	;volatile
 11753                           
 11754                           ;pwm.c: 16: PWM7DCH = 0x00;
 11755  165A  0191               	clrf	17	;volatile
 11756                           
 11757                           ;pwm.c: 18: PWM7DCL = 0x00;
 11758  165B  0190               	clrf	16	;volatile
 11759                           
 11760                           ;pwm.c: 20: CCPTMRS1bits.P6TSEL = 0x1;
 11761  165C  0024               	movlb	4	; select bank4
 11762  165D  081F               	movf	31,w	;volatile
 11763  165E  39F3               	andlw	-13
 11764  165F  3804               	iorlw	4
 11765  1660  009F               	movwf	31	;volatile
 11766  1661  0008               	return
 11767  1662                     __end_of_PWM_Initialize:	
 11768                           
 11769                           	psect	text27
 11770  17CF                     __ptext27:	
 11771 ;; *************** function _PIN_MANAGER_Initialize *****************
 11772 ;; Defined at:
 11773 ;;		line 5 in file "pin_manager.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;		None
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;  state           1    0[COMMON] unsigned char 
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  1    wreg      void 
 11780 ;; Registers used:
 11781 ;;		wreg, status,2
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11791 ;;Total ram usage:        1 bytes
 11792 ;; Hardware stack levels used:    1
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_SYSTEM_Initialize
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800                           
 11801                           ;psect for function _PIN_MANAGER_Initialize
 11802  17CF                     _PIN_MANAGER_Initialize:	
 11803                           
 11804                           ;pin_manager.c: 7: LATA = 0x00;
 11805                           
 11806                           ;incstack = 0
 11807                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11808  17CF  0020               	movlb	0	; select bank0
 11809  17D0  0196               	clrf	22	;volatile
 11810                           
 11811                           ;pin_manager.c: 8: LATB = 0x00;
 11812  17D1  0197               	clrf	23	;volatile
 11813                           
 11814                           ;pin_manager.c: 9: LATC = 0x00;
 11815  17D2  0198               	clrf	24	;volatile
 11816                           
 11817                           ;pin_manager.c: 11: WPUA = 0x00;
 11818  17D3  003E               	movlb	30	; select bank30
 11819  17D4  01B9               	clrf	57	;volatile
 11820                           
 11821                           ;pin_manager.c: 12: WPUB = 0x00;
 11822  17D5  01C4               	clrf	68	;volatile
 11823                           
 11824                           ;pin_manager.c: 13: WPUC = 0x00;
 11825  17D6  01CF               	clrf	79	;volatile
 11826                           
 11827                           ;pin_manager.c: 14: WPUE = 0x8;
 11828  17D7  3008               	movlw	8
 11829  17D8  00E5               	movwf	101	;volatile
 11830                           
 11831                           ;pin_manager.c: 16: TRISA = 0x0A;
 11832  17D9  300A               	movlw	10
 11833  17DA  0020               	movlb	0	; select bank0
 11834  17DB  0091               	movwf	17	;volatile
 11835                           
 11836                           ;pin_manager.c: 17: TRISB = 0x07;
 11837  17DC  3007               	movlw	7
 11838  17DD  0092               	movwf	18	;volatile
 11839                           
 11840                           ;pin_manager.c: 18: TRISC = 0x00;
 11841  17DE  0193               	clrf	19	;volatile
 11842                           
 11843                           ;pin_manager.c: 20: ANSELA = 0x0A;
 11844  17DF  300A               	movlw	10
 11845  17E0  003E               	movlb	30	; select bank30
 11846  17E1  00B8               	movwf	56	;volatile
 11847                           
 11848                           ;pin_manager.c: 21: ANSELB = 0x00;
 11849  17E2  01C3               	clrf	67	;volatile
 11850                           
 11851                           ;pin_manager.c: 22: ANSELC = 0x00;
 11852  17E3  01CE               	clrf	78	;volatile
 11853                           
 11854                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
 11855  17E4  002E               	movlb	14	; select bank14
 11856  17E5  1216               	bcf	22,4	;volatile
 11857                           
 11858                           ;pin_manager.c: 25: bool state = GIE;
 11859  17E6  3000               	movlw	0
 11860  17E7  1B8B               	btfsc	11,7	;volatile
 11861  17E8  3001               	movlw	1
 11862  17E9  00F0               	movwf	PIN_MANAGER_Initialize@state
 11863                           
 11864                           ;pin_manager.c: 26: GIE = 0;
 11865  17EA  138B               	bcf	11,7	;volatile
 11866                           
 11867                           ;pin_manager.c: 27: PPSLOCK = 0x55;
 11868  17EB  3055               	movlw	85
 11869  17EC  003D               	movlb	29	; select bank29
 11870  17ED  008F               	movwf	15	;volatile
 11871                           
 11872                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
 11873  17EE  30AA               	movlw	170
 11874  17EF  008F               	movwf	15	;volatile
 11875                           
 11876                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
 11877  17F0  100F               	bcf	15,0	;volatile
 11878                           
 11879                           ;pin_manager.c: 33: RC3PPS = 0X0F;
 11880  17F1  300F               	movlw	15
 11881  17F2  003E               	movlb	30	; select bank30
 11882  17F3  00A3               	movwf	35	;volatile
 11883                           
 11884                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 11885  17F4  3055               	movlw	85
 11886  17F5  003D               	movlb	29	; select bank29
 11887  17F6  008F               	movwf	15	;volatile
 11888                           
 11889                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 11890  17F7  30AA               	movlw	170
 11891  17F8  008F               	movwf	15	;volatile
 11892                           
 11893                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 11894  17F9  140F               	bsf	15,0	;volatile
 11895                           
 11896                           ;pin_manager.c: 40: GIE = state;
 11897  17FA  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11898  17FB  2FFE               	goto	u2810
 11899  17FC  178B               	bsf	11,7	;volatile
 11900  17FD  0008               	return
 11901  17FE                     u2810:	
 11902  17FE  138B               	bcf	11,7	;volatile
 11903  17FF  0008               	return
 11904  1800                     __end_of_PIN_MANAGER_Initialize:	
 11905                           
 11906                           	psect	text28
 11907  164E                     __ptext28:	
 11908 ;; *************** function _OSCILLATOR_Initialize *****************
 11909 ;; Defined at:
 11910 ;;		line 89 in file "system.c"
 11911 ;; Parameters:    Size  Location     Type
 11912 ;;		None
 11913 ;; Auto vars:     Size  Location     Type
 11914 ;;		None
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  1    wreg      void 
 11917 ;; Registers used:
 11918 ;;		wreg, status,2
 11919 ;; Tracked objects:
 11920 ;;		On entry : 0/0
 11921 ;;		On exit  : 0/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11928 ;;Total ram usage:        0 bytes
 11929 ;; Hardware stack levels used:    1
 11930 ;; This function calls:
 11931 ;;		Nothing
 11932 ;; This function is called by:
 11933 ;;		_SYSTEM_Initialize
 11934 ;; This function uses a non-reentrant model
 11935 ;;
 11936                           
 11937                           
 11938                           ;psect for function _OSCILLATOR_Initialize
 11939  164E                     _OSCILLATOR_Initialize:	
 11940                           
 11941                           ;system.c: 91: OSCCON1 = 0x60;
 11942                           
 11943                           ;incstack = 0
 11944                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11945  164E  3060               	movlw	96
 11946  164F  0031               	movlb	17	; select bank17
 11947  1650  008D               	movwf	13	;volatile
 11948                           
 11949                           ;system.c: 92: OSCCON3 = 0x00;
 11950  1651  018F               	clrf	15	;volatile
 11951                           
 11952                           ;system.c: 93: OSCEN = 0x00;
 11953  1652  0191               	clrf	17	;volatile
 11954                           
 11955                           ;system.c: 94: OSCFRQ = 0x06;
 11956  1653  3006               	movlw	6
 11957  1654  0093               	movwf	19	;volatile
 11958                           
 11959                           ;system.c: 95: OSCTUNE = 0x00;
 11960  1655  0192               	clrf	18	;volatile
 11961  1656  0008               	return
 11962  1657                     __end_of_OSCILLATOR_Initialize:	
 11963                           
 11964                           	psect	text29
 11965  0B86                     __ptext29:	
 11966 ;; *************** function _LCD_Init *****************
 11967 ;; Defined at:
 11968 ;;		line 154 in file "lcd.c"
 11969 ;; Parameters:    Size  Location     Type
 11970 ;;  style           1    wreg     unsigned char 
 11971 ;; Auto vars:     Size  Location     Type
 11972 ;;  style           1    7[COMMON] unsigned char 
 11973 ;; Return value:  Size  Location     Type
 11974 ;;                  1    wreg      void 
 11975 ;; Registers used:
 11976 ;;		wreg, status,2, status,0, pclath, cstack
 11977 ;; Tracked objects:
 11978 ;;		On entry : 0/0
 11979 ;;		On exit  : 0/0
 11980 ;;		Unchanged: 0/0
 11981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;Total ram usage:        4 bytes
 11987 ;; Hardware stack levels used:    1
 11988 ;; Hardware stack levels required when called:    2
 11989 ;; This function calls:
 11990 ;;		_LCD_Cmd
 11991 ;;		_LCD_Port
 11992 ;; This function is called by:
 11993 ;;		_SYSTEM_Initialize
 11994 ;; This function uses a non-reentrant model
 11995 ;;
 11996                           
 11997                           
 11998                           ;psect for function _LCD_Init
 11999  0B86                     _LCD_Init:	
 12000                           
 12001                           ;incstack = 0
 12002                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 12003                           ;LCD_Init@style stored from wreg
 12004  0B86  00F7               	movwf	LCD_Init@style
 12005                           
 12006                           ;lcd.c: 156: LCD_Port(0x00);
 12007  0B87  3000               	movlw	0
 12008  0B88  3196  26E4  318B   	fcall	_LCD_Port
 12009                           
 12010                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 12011  0B8B  3005               	movlw	5
 12012  0B8C  00F6               	movwf	??_LCD_Init+2
 12013  0B8D  300F               	movlw	15
 12014  0B8E  00F5               	movwf	??_LCD_Init+1
 12015  0B8F  30F4               	movlw	244
 12016  0B90  00F4               	movwf	??_LCD_Init
 12017  0B91                     u3797:	
 12018  0B91  0BF4               	decfsz	??_LCD_Init,f
 12019  0B92  2B91               	goto	u3797
 12020  0B93  0BF5               	decfsz	??_LCD_Init+1,f
 12021  0B94  2B91               	goto	u3797
 12022  0B95  0BF6               	decfsz	??_LCD_Init+2,f
 12023  0B96  2B91               	goto	u3797
 12024                           
 12025                           ;lcd.c: 160: LCD_Cmd(0x03);
 12026  0B97  3003               	movlw	3
 12027  0B98  3196  26A3  318B   	fcall	_LCD_Cmd
 12028                           
 12029                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 12030  0B9B  3068               	movlw	104
 12031  0B9C  00F5               	movwf	??_LCD_Init+1
 12032  0B9D  30E4               	movlw	228
 12033  0B9E  00F4               	movwf	??_LCD_Init
 12034  0B9F                     u3807:	
 12035  0B9F  0BF4               	decfsz	??_LCD_Init,f
 12036  0BA0  2B9F               	goto	u3807
 12037  0BA1  0BF5               	decfsz	??_LCD_Init+1,f
 12038  0BA2  2B9F               	goto	u3807
 12039  0BA3  0000               	nop
 12040                           
 12041                           ;lcd.c: 164: LCD_Cmd(0x03);
 12042  0BA4  3003               	movlw	3
 12043  0BA5  3196  26A3  318B   	fcall	_LCD_Cmd
 12044                           
 12045                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12046  0BA8  3089               	movlw	137
 12047  0BA9  00F4               	movwf	??_LCD_Init
 12048  0BAA                     u3817:	
 12049  0BAA  3200               	nop2
 12050  0BAB  3200               	nop2
 12051  0BAC  0BF4               	decfsz	??_LCD_Init,f
 12052  0BAD  2BAA               	goto	u3817
 12053                           
 12054                           ;lcd.c: 168: LCD_Cmd(0x03);
 12055  0BAE  3003               	movlw	3
 12056  0BAF  3196  26A3  318B   	fcall	_LCD_Cmd
 12057                           
 12058                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12059  0BB2  3089               	movlw	137
 12060  0BB3  00F4               	movwf	??_LCD_Init
 12061  0BB4                     u3827:	
 12062  0BB4  3200               	nop2
 12063  0BB5  3200               	nop2
 12064  0BB6  0BF4               	decfsz	??_LCD_Init,f
 12065  0BB7  2BB4               	goto	u3827
 12066                           
 12067                           ;lcd.c: 172: LCD_Cmd(0x02);
 12068  0BB8  3002               	movlw	2
 12069  0BB9  3196  26A3  318B   	fcall	_LCD_Cmd
 12070                           
 12071                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12072  0BBC  3089               	movlw	137
 12073  0BBD  00F4               	movwf	??_LCD_Init
 12074  0BBE                     u3837:	
 12075  0BBE  3200               	nop2
 12076  0BBF  3200               	nop2
 12077  0BC0  0BF4               	decfsz	??_LCD_Init,f
 12078  0BC1  2BBE               	goto	u3837
 12079                           
 12080                           ;lcd.c: 176: LCD_Cmd(0x2);
 12081  0BC2  3002               	movlw	2
 12082  0BC3  3196  26A3  318B   	fcall	_LCD_Cmd
 12083                           
 12084                           ;lcd.c: 178: LCD_Cmd(0x8);
 12085  0BC6  3008               	movlw	8
 12086  0BC7  3196  26A3  318B   	fcall	_LCD_Cmd
 12087                           
 12088                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12089  0BCA  3089               	movlw	137
 12090  0BCB  00F4               	movwf	??_LCD_Init
 12091  0BCC                     u3847:	
 12092  0BCC  3200               	nop2
 12093  0BCD  3200               	nop2
 12094  0BCE  0BF4               	decfsz	??_LCD_Init,f
 12095  0BCF  2BCC               	goto	u3847
 12096                           
 12097                           ;lcd.c: 182: LCD_Cmd(0x0);
 12098  0BD0  3000               	movlw	0
 12099  0BD1  3196  26A3  318B   	fcall	_LCD_Cmd
 12100                           
 12101                           ;lcd.c: 184: LCD_Cmd(0x8);
 12102  0BD4  3008               	movlw	8
 12103  0BD5  3196  26A3  318B   	fcall	_LCD_Cmd
 12104                           
 12105                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12106  0BD8  3089               	movlw	137
 12107  0BD9  00F4               	movwf	??_LCD_Init
 12108  0BDA                     u3857:	
 12109  0BDA  3200               	nop2
 12110  0BDB  3200               	nop2
 12111  0BDC  0BF4               	decfsz	??_LCD_Init,f
 12112  0BDD  2BDA               	goto	u3857
 12113                           
 12114                           ;lcd.c: 188: LCD_Cmd(0x0);
 12115  0BDE  3000               	movlw	0
 12116  0BDF  3196  26A3  318B   	fcall	_LCD_Cmd
 12117                           
 12118                           ;lcd.c: 190: LCD_Cmd(0x1);
 12119  0BE2  3001               	movlw	1
 12120  0BE3  3196  26A3  318B   	fcall	_LCD_Cmd
 12121                           
 12122                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 12123  0BE6  3034               	movlw	52
 12124  0BE7  00F5               	movwf	??_LCD_Init+1
 12125  0BE8  30F1               	movlw	241
 12126  0BE9  00F4               	movwf	??_LCD_Init
 12127  0BEA                     u3867:	
 12128  0BEA  0BF4               	decfsz	??_LCD_Init,f
 12129  0BEB  2BEA               	goto	u3867
 12130  0BEC  0BF5               	decfsz	??_LCD_Init+1,f
 12131  0BED  2BEA               	goto	u3867
 12132  0BEE  3200               	nop2
 12133                           
 12134                           ;lcd.c: 194: LCD_Cmd(0x0);
 12135  0BEF  3000               	movlw	0
 12136  0BF0  3196  26A3  318B   	fcall	_LCD_Cmd
 12137                           
 12138                           ;lcd.c: 196: LCD_Cmd(0x6);
 12139  0BF3  3006               	movlw	6
 12140  0BF4  3196  26A3  318B   	fcall	_LCD_Cmd
 12141                           
 12142                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12143  0BF7  3089               	movlw	137
 12144  0BF8  00F4               	movwf	??_LCD_Init
 12145  0BF9                     u3877:	
 12146  0BF9  3200               	nop2
 12147  0BFA  3200               	nop2
 12148  0BFB  0BF4               	decfsz	??_LCD_Init,f
 12149  0BFC  2BF9               	goto	u3877
 12150                           
 12151                           ;lcd.c: 200: LCD_Cmd(0x0);
 12152  0BFD  3000               	movlw	0
 12153  0BFE  3196  26A3  318B   	fcall	_LCD_Cmd
 12154                           
 12155                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 12156  0C01  0877               	movf	LCD_Init@style,w
 12157  0C02  380C               	iorlw	12
 12158  0C03  3196  26A3  318B   	fcall	_LCD_Cmd
 12159                           
 12160                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 12161  0C06  3089               	movlw	137
 12162  0C07  00F4               	movwf	??_LCD_Init
 12163  0C08                     u3887:	
 12164  0C08  3200               	nop2
 12165  0C09  3200               	nop2
 12166  0C0A  0BF4               	decfsz	??_LCD_Init,f
 12167  0C0B  2C08               	goto	u3887
 12168  0C0C  0008               	return
 12169  0C0D                     __end_of_LCD_Init:	
 12170                           
 12171                           	psect	text30
 12172  1646                     __ptext30:	
 12173 ;; *************** function _LCD_Clear *****************
 12174 ;; Defined at:
 12175 ;;		line 75 in file "lcd.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;		None
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;		None
 12180 ;; Return value:  Size  Location     Type
 12181 ;;                  1    wreg      void 
 12182 ;; Registers used:
 12183 ;;		wreg, status,2, status,0, pclath, cstack
 12184 ;; Tracked objects:
 12185 ;;		On entry : 0/0
 12186 ;;		On exit  : 0/0
 12187 ;;		Unchanged: 0/0
 12188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12193 ;;Total ram usage:        0 bytes
 12194 ;; Hardware stack levels used:    1
 12195 ;; Hardware stack levels required when called:    2
 12196 ;; This function calls:
 12197 ;;		_LCD_Cmd
 12198 ;; This function is called by:
 12199 ;;		_SYSTEM_Initialize
 12200 ;;		_menuChoice
 12201 ;;		_main
 12202 ;; This function uses a non-reentrant model
 12203 ;;
 12204                           
 12205                           
 12206                           ;psect for function _LCD_Clear
 12207  1646                     _LCD_Clear:	
 12208                           
 12209                           ;lcd.c: 77: LCD_Cmd(0);
 12210                           
 12211                           ;incstack = 0
 12212                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 12213  1646  3000               	movlw	0
 12214  1647  3196  26A3  3196   	fcall	_LCD_Cmd
 12215                           
 12216                           ;lcd.c: 78: LCD_Cmd(1);
 12217  164A  3001               	movlw	1
 12218  164B  3196  26A3         	fcall	_LCD_Cmd
 12219  164D  0008               	return
 12220  164E                     __end_of_LCD_Clear:	
 12221                           
 12222                           	psect	text31
 12223  17A9                     __ptext31:	
 12224 ;; *************** function _InitCustomChars *****************
 12225 ;; Defined at:
 12226 ;;		line 29 in file "lcd.c"
 12227 ;; Parameters:    Size  Location     Type
 12228 ;;		None
 12229 ;; Auto vars:     Size  Location     Type
 12230 ;;  i               1    6[COMMON] unsigned char 
 12231 ;; Return value:  Size  Location     Type
 12232 ;;                  1    wreg      void 
 12233 ;; Registers used:
 12234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12235 ;; Tracked objects:
 12236 ;;		On entry : 0/0
 12237 ;;		On exit  : 0/0
 12238 ;;		Unchanged: 0/0
 12239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12244 ;;Total ram usage:        2 bytes
 12245 ;; Hardware stack levels used:    1
 12246 ;; Hardware stack levels required when called:    2
 12247 ;; This function calls:
 12248 ;;		_LCD_Cmd
 12249 ;;		_LCD_Write_Char
 12250 ;; This function is called by:
 12251 ;;		_SYSTEM_Initialize
 12252 ;; This function uses a non-reentrant model
 12253 ;;
 12254                           
 12255                           
 12256                           ;psect for function _InitCustomChars
 12257  17A9                     _InitCustomChars:	
 12258                           
 12259                           ;lcd.c: 31: uint8_t i;
 12260                           ;lcd.c: 32: LCD_Cmd(0x04);
 12261                           
 12262                           ;incstack = 0
 12263                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12264  17A9  3004               	movlw	4
 12265  17AA  3196  26A3  3197   	fcall	_LCD_Cmd
 12266                           
 12267                           ;lcd.c: 33: LCD_Cmd(0x00);
 12268  17AD  3000               	movlw	0
 12269  17AE  3196  26A3  3197   	fcall	_LCD_Cmd
 12270                           
 12271                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 12272  17B1  01F6               	clrf	InitCustomChars@i
 12273  17B2  3010               	movlw	16
 12274  17B3  0276               	subwf	InitCustomChars@i,w
 12275  17B4  1803               	btfsc	3,0
 12276  17B5  2FC7               	goto	l2464
 12277  17B6                     l2458:	
 12278                           
 12279                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 12280  17B6  0876               	movf	InitCustomChars@i,w
 12281  17B7  3EA0               	addlw	(low (___cgram| (0+256)))& (0+255)
 12282  17B8  0086               	movwf	6
 12283  17B9  3001               	movlw	1	; select bank3/4
 12284  17BA  0087               	movwf	7
 12285  17BB  0801               	movf	1,w
 12286  17BC  3188  2001  3197   	fcall	_LCD_Write_Char
 12287  17BF  3001               	movlw	1
 12288  17C0  00F5               	movwf	??_InitCustomChars
 12289  17C1  0875               	movf	??_InitCustomChars,w
 12290  17C2  07F6               	addwf	InitCustomChars@i,f
 12291  17C3  3010               	movlw	16
 12292  17C4  0276               	subwf	InitCustomChars@i,w
 12293  17C5  1C03               	skipc
 12294  17C6  2FB6               	goto	l2458
 12295  17C7                     l2464:	
 12296                           
 12297                           ;lcd.c: 36: LCD_Cmd(0);
 12298  17C7  3000               	movlw	0
 12299  17C8  3196  26A3  3197   	fcall	_LCD_Cmd
 12300                           
 12301                           ;lcd.c: 37: LCD_Cmd(2);
 12302  17CB  3002               	movlw	2
 12303  17CC  3196  26A3         	fcall	_LCD_Cmd
 12304  17CE  0008               	return
 12305  17CF                     __end_of_InitCustomChars:	
 12306                           
 12307                           	psect	text32
 12308  0801                     __ptext32:	
 12309 ;; *************** function _LCD_Write_Char *****************
 12310 ;; Defined at:
 12311 ;;		line 223 in file "lcd.c"
 12312 ;; Parameters:    Size  Location     Type
 12313 ;;  a               1    wreg     const unsigned char 
 12314 ;; Auto vars:     Size  Location     Type
 12315 ;;  a               1    4[COMMON] const unsigned char 
 12316 ;;  y               1    3[COMMON] unsigned char 
 12317 ;;  temp            1    2[COMMON] unsigned char 
 12318 ;; Return value:  Size  Location     Type
 12319 ;;                  1    wreg      void 
 12320 ;; Registers used:
 12321 ;;		wreg, status,2, status,0, pclath, cstack
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12328 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12330 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12331 ;;Total ram usage:        4 bytes
 12332 ;; Hardware stack levels used:    1
 12333 ;; Hardware stack levels required when called:    1
 12334 ;; This function calls:
 12335 ;;		_LCD_Port
 12336 ;; This function is called by:
 12337 ;;		_InitCustomChars
 12338 ;;		_LCD_Write_String
 12339 ;;		_LCD_Write_Int
 12340 ;;		_main
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344                           
 12345                           ;psect for function _LCD_Write_Char
 12346  0801                     _LCD_Write_Char:	
 12347                           
 12348                           ;incstack = 0
 12349                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12350                           ;LCD_Write_Char@a stored from wreg
 12351  0801  00F4               	movwf	LCD_Write_Char@a
 12352                           
 12353                           ;lcd.c: 225: char temp,y;
 12354                           ;lcd.c: 226: temp = a&0x0F;
 12355  0802  0874               	movf	LCD_Write_Char@a,w
 12356  0803  390F               	andlw	15
 12357  0804  00F1               	movwf	??_LCD_Write_Char
 12358  0805  0871               	movf	??_LCD_Write_Char,w
 12359  0806  00F2               	movwf	LCD_Write_Char@temp
 12360                           
 12361                           ;lcd.c: 227: y = a&0xF0;
 12362  0807  0874               	movf	LCD_Write_Char@a,w
 12363  0808  39F0               	andlw	240
 12364  0809  00F1               	movwf	??_LCD_Write_Char
 12365  080A  0871               	movf	??_LCD_Write_Char,w
 12366  080B  00F3               	movwf	LCD_Write_Char@y
 12367                           
 12368                           ;lcd.c: 228: RA0 = 1;
 12369  080C  0020               	movlb	0	; select bank0
 12370  080D  140C               	bsf	12,0	;volatile
 12371                           
 12372                           ;lcd.c: 229: LCD_Port(y>>4);
 12373  080E  0873               	movf	LCD_Write_Char@y,w
 12374  080F  00F1               	movwf	??_LCD_Write_Char
 12375  0810  3004               	movlw	4
 12376  0811                     u2395:	
 12377  0811  36F1               	lsrf	??_LCD_Write_Char,f
 12378  0812  0B89               	decfsz	9,f
 12379  0813  2811               	goto	u2395
 12380  0814  0871               	movf	??_LCD_Write_Char,w
 12381  0815  3196  26E4  3188   	fcall	_LCD_Port
 12382                           
 12383                           ;lcd.c: 230: RA2 = 1;
 12384  0818  0020               	movlb	0	; select bank0
 12385  0819  150C               	bsf	12,2	;volatile
 12386                           
 12387                           ;lcd.c: 231: RA2 = 0;
 12388  081A  110C               	bcf	12,2	;volatile
 12389                           
 12390                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12391  081B  306A               	movlw	106
 12392  081C  00F1               	movwf	??_LCD_Write_Char
 12393  081D                     u3897:	
 12394  081D  0BF1               	decfsz	??_LCD_Write_Char,f
 12395  081E  281D               	goto	u3897
 12396  081F  0000               	nop
 12397                           
 12398                           ;lcd.c: 233: LCD_Port(temp);
 12399  0820  0872               	movf	LCD_Write_Char@temp,w
 12400  0821  3196  26E4  3188   	fcall	_LCD_Port
 12401                           
 12402                           ;lcd.c: 234: RA2 = 1;
 12403  0824  0020               	movlb	0	; select bank0
 12404  0825  150C               	bsf	12,2	;volatile
 12405                           
 12406                           ;lcd.c: 235: RA2 = 0;
 12407  0826  110C               	bcf	12,2	;volatile
 12408                           
 12409                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 12410  0827  306A               	movlw	106
 12411  0828  00F1               	movwf	??_LCD_Write_Char
 12412  0829                     u3907:	
 12413  0829  0BF1               	decfsz	??_LCD_Write_Char,f
 12414  082A  2829               	goto	u3907
 12415  082B  0000               	nop
 12416  082C  0008               	return
 12417  082D                     __end_of_LCD_Write_Char:	
 12418                           
 12419                           	psect	text33
 12420  16A3                     __ptext33:	
 12421 ;; *************** function _LCD_Cmd *****************
 12422 ;; Defined at:
 12423 ;;		line 65 in file "lcd.c"
 12424 ;; Parameters:    Size  Location     Type
 12425 ;;  a               1    wreg     unsigned char 
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  a               1    3[COMMON] unsigned char 
 12428 ;; Return value:  Size  Location     Type
 12429 ;;                  1    wreg      void 
 12430 ;; Registers used:
 12431 ;;		wreg, status,2, status,0, pclath, cstack
 12432 ;; Tracked objects:
 12433 ;;		On entry : 0/0
 12434 ;;		On exit  : 0/0
 12435 ;;		Unchanged: 0/0
 12436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;Total ram usage:        3 bytes
 12442 ;; Hardware stack levels used:    1
 12443 ;; Hardware stack levels required when called:    1
 12444 ;; This function calls:
 12445 ;;		_LCD_Port
 12446 ;; This function is called by:
 12447 ;;		_InitCustomChars
 12448 ;;		_LCD_Clear
 12449 ;;		_LCD_Set_Cursor
 12450 ;;		_LCD_Init
 12451 ;; This function uses a non-reentrant model
 12452 ;;
 12453                           
 12454                           
 12455                           ;psect for function _LCD_Cmd
 12456  16A3                     _LCD_Cmd:	
 12457                           
 12458                           ;incstack = 0
 12459                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12460                           ;LCD_Cmd@a stored from wreg
 12461  16A3  00F3               	movwf	LCD_Cmd@a
 12462                           
 12463                           ;lcd.c: 67: RA0 = 0;
 12464  16A4  0020               	movlb	0	; select bank0
 12465  16A5  100C               	bcf	12,0	;volatile
 12466                           
 12467                           ;lcd.c: 68: LCD_Port(a);
 12468  16A6  0873               	movf	LCD_Cmd@a,w
 12469  16A7  3196  26E4  3196   	fcall	_LCD_Port
 12470                           
 12471                           ;lcd.c: 69: RA2 = 1;
 12472  16AA  0020               	movlb	0	; select bank0
 12473  16AB  150C               	bsf	12,2	;volatile
 12474                           
 12475                           ;lcd.c: 70: RA2 = 0;
 12476  16AC  110C               	bcf	12,2	;volatile
 12477                           
 12478                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 12479  16AD  302A               	movlw	42
 12480  16AE  00F2               	movwf	??_LCD_Cmd+1
 12481  16AF  308D               	movlw	141
 12482  16B0  00F1               	movwf	??_LCD_Cmd
 12483  16B1                     u3917:	
 12484  16B1  0BF1               	decfsz	??_LCD_Cmd,f
 12485  16B2  2EB1               	goto	u3917
 12486  16B3  0BF2               	decfsz	??_LCD_Cmd+1,f
 12487  16B4  2EB1               	goto	u3917
 12488  16B5  3200               	nop2
 12489  16B6  0008               	return
 12490  16B7                     __end_of_LCD_Cmd:	
 12491                           
 12492                           	psect	text34
 12493  16E4                     __ptext34:	
 12494 ;; *************** function _LCD_Port *****************
 12495 ;; Defined at:
 12496 ;;		line 41 in file "lcd.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  a               1    wreg     unsigned char 
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;  a               1    0[COMMON] unsigned char 
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  1    wreg      void 
 12503 ;; Registers used:
 12504 ;;		wreg
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12514 ;;Total ram usage:        1 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_LCD_Cmd
 12520 ;;		_LCD_Init
 12521 ;;		_LCD_Write_Char
 12522 ;; This function uses a non-reentrant model
 12523 ;;
 12524                           
 12525                           
 12526                           ;psect for function _LCD_Port
 12527  16E4                     _LCD_Port:	
 12528                           
 12529                           ;incstack = 0
 12530                           ; Regs used in _LCD_Port: [wreg]
 12531                           ;LCD_Port@a stored from wreg
 12532  16E4  00F0               	movwf	LCD_Port@a
 12533                           
 12534                           ;lcd.c: 43: if(a & 1)
 12535  16E5  1C70               	btfss	LCD_Port@a,0
 12536  16E6  2EEA               	goto	l28
 12537                           
 12538                           ;lcd.c: 44: RA7 = 1;
 12539  16E7  0020               	movlb	0	; select bank0
 12540  16E8  178C               	bsf	12,7	;volatile
 12541  16E9  2EEC               	goto	l2130
 12542  16EA                     l28:	
 12543                           
 12544                           ;lcd.c: 45: else
 12545                           ;lcd.c: 46: RA7 = 0;
 12546  16EA  0020               	movlb	0	; select bank0
 12547  16EB  138C               	bcf	12,7	;volatile
 12548  16EC                     l2130:	
 12549                           
 12550                           ;lcd.c: 48: if(a & 2)
 12551  16EC  1CF0               	btfss	LCD_Port@a,1
 12552  16ED  2EF0               	goto	l30
 12553                           
 12554                           ;lcd.c: 49: RA6 = 1;
 12555  16EE  170C               	bsf	12,6	;volatile
 12556  16EF  2EF1               	goto	l2134
 12557  16F0                     l30:	
 12558                           
 12559                           ;lcd.c: 50: else
 12560                           ;lcd.c: 51: RA6 = 0;
 12561  16F0  130C               	bcf	12,6	;volatile
 12562  16F1                     l2134:	
 12563                           
 12564                           ;lcd.c: 53: if(a & 4)
 12565  16F1  1D70               	btfss	LCD_Port@a,2
 12566  16F2  2EF5               	goto	l32
 12567                           
 12568                           ;lcd.c: 54: RC0 = 1;
 12569  16F3  140E               	bsf	14,0	;volatile
 12570  16F4  2EF6               	goto	l2138
 12571  16F5                     l32:	
 12572                           
 12573                           ;lcd.c: 55: else
 12574                           ;lcd.c: 56: RC0 = 0;
 12575  16F5  100E               	bcf	14,0	;volatile
 12576  16F6                     l2138:	
 12577                           
 12578                           ;lcd.c: 58: if(a & 8)
 12579  16F6  1DF0               	btfss	LCD_Port@a,3
 12580  16F7  2EFA               	goto	l34
 12581                           
 12582                           ;lcd.c: 59: RC1 = 1;
 12583  16F8  148E               	bsf	14,1	;volatile
 12584  16F9  0008               	return
 12585  16FA                     l34:	
 12586                           
 12587                           ;lcd.c: 60: else
 12588                           ;lcd.c: 61: RC1 = 0;
 12589  16FA  108E               	bcf	14,1	;volatile
 12590  16FB  0008               	return
 12591  16FC                     __end_of_LCD_Port:	
 12592                           
 12593                           	psect	text35
 12594  16FC                     __ptext35:	
 12595 ;; *************** function _ADCC_Initialize *****************
 12596 ;; Defined at:
 12597 ;;		line 60 in file "adc.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;		None
 12600 ;; Auto vars:     Size  Location     Type
 12601 ;;		None
 12602 ;; Return value:  Size  Location     Type
 12603 ;;                  1    wreg      void 
 12604 ;; Registers used:
 12605 ;;		wreg, status,2
 12606 ;; Tracked objects:
 12607 ;;		On entry : 0/0
 12608 ;;		On exit  : 0/0
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;Total ram usage:        0 bytes
 12616 ;; Hardware stack levels used:    1
 12617 ;; This function calls:
 12618 ;;		Nothing
 12619 ;; This function is called by:
 12620 ;;		_SYSTEM_Initialize
 12621 ;; This function uses a non-reentrant model
 12622 ;;
 12623                           
 12624                           
 12625                           ;psect for function _ADCC_Initialize
 12626  16FC                     _ADCC_Initialize:	
 12627                           
 12628                           ;adc.c: 62: ADCON1 = 0x00;
 12629                           
 12630                           ;incstack = 0
 12631                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12632  16FC  0021               	movlb	1	; select bank1
 12633  16FD  0194               	clrf	20	;volatile
 12634                           
 12635                           ;adc.c: 64: ADCON2 = 0x00;
 12636  16FE  0195               	clrf	21	;volatile
 12637                           
 12638                           ;adc.c: 66: ADCON3 = 0x00;
 12639  16FF  0196               	clrf	22	;volatile
 12640                           
 12641                           ;adc.c: 68: ADACT = 0x00;
 12642  1700  0199               	clrf	25	;volatile
 12643                           
 12644                           ;adc.c: 70: ADSTAT = 0x00;
 12645  1701  0197               	clrf	23	;volatile
 12646                           
 12647                           ;adc.c: 73: ADCLK = 0x3F;
 12648  1702  303F               	movlw	63
 12649  1703  0098               	movwf	24	;volatile
 12650                           
 12651                           ;adc.c: 81: ADREF = 0x00;
 12652  1704  019A               	clrf	26	;volatile
 12653                           
 12654                           ;adc.c: 83: ADCAP = 0x00;
 12655  1705  019B               	clrf	27	;volatile
 12656                           
 12657                           ;adc.c: 86: ADPRE = 0x07;
 12658  1706  3007               	movlw	7
 12659  1707  009C               	movwf	28	;volatile
 12660                           
 12661                           ;adc.c: 88: ADACQ = 0x00;
 12662  1708  019D               	clrf	29	;volatile
 12663                           
 12664                           ;adc.c: 90: ADPCH = 0x00;
 12665  1709  019E               	clrf	30	;volatile
 12666                           
 12667                           ;adc.c: 92: ADRPT = 0x00;
 12668  170A  0022               	movlb	2	; select bank2
 12669  170B  018D               	clrf	13	;volatile
 12670                           
 12671                           ;adc.c: 94: ADLTHL = 0x00;
 12672  170C  018E               	clrf	14	;volatile
 12673                           
 12674                           ;adc.c: 96: ADLTHH = 0x00;
 12675  170D  018F               	clrf	15	;volatile
 12676                           
 12677                           ;adc.c: 98: ADUTHL = 0x00;
 12678  170E  0190               	clrf	16	;volatile
 12679                           
 12680                           ;adc.c: 100: ADUTHH = 0x00;
 12681  170F  0191               	clrf	17	;volatile
 12682                           
 12683                           ;adc.c: 102: ADSTPTL = 0x00;
 12684  1710  0192               	clrf	18	;volatile
 12685                           
 12686                           ;adc.c: 104: ADSTPTH = 0x00;
 12687  1711  0193               	clrf	19	;volatile
 12688                           
 12689                           ;adc.c: 106: ADCON0 = 0x84;
 12690  1712  3084               	movlw	132
 12691  1713  0021               	movlb	1	; select bank1
 12692  1714  0093               	movwf	19	;volatile
 12693  1715  0008               	return
 12694  1716                     __end_of_ADCC_Initialize:	
 12695                           
 12696                           	psect	text36
 12697  0E2F                     __ptext36:	
 12698 ;; *************** function _PID_Calculate *****************
 12699 ;; Defined at:
 12700 ;;		line 21 in file "pid.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;  setpoint        2    6[COMMON] int 
 12703 ;;  temp            2    8[COMMON] int 
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;		None
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  2    6[COMMON] int 
 12708 ;; Registers used:
 12709 ;;		wreg, status,2, status,0, pclath, cstack
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 0/0
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12719 ;;Total ram usage:        6 bytes
 12720 ;; Hardware stack levels used:    1
 12721 ;; Hardware stack levels required when called:    1
 12722 ;; This function calls:
 12723 ;;		___wmul
 12724 ;; This function is called by:
 12725 ;;		_main
 12726 ;; This function uses a non-reentrant model
 12727 ;;
 12728                           
 12729                           
 12730                           ;psect for function _PID_Calculate
 12731  0E2F                     _PID_Calculate:	
 12732                           
 12733                           ;pid.c: 23: pidCount+=1;
 12734                           
 12735                           ;incstack = 0
 12736                           ; Regs used in _PID_Calculate: [wreg+status,2+status,0+pclath+cstack]
 12737  0E2F  3001               	movlw	1
 12738  0E30  0021               	movlb	1	; select bank1
 12739  0E31  07B6               	addwf	_pidCount^(0+128),f
 12740  0E32  3000               	movlw	0
 12741  0E33  3DB7               	addwfc	(_pidCount+1)^(0+128),f
 12742                           
 12743                           ;pid.c: 26: error = setpoint - temp;
 12744  0E34  0978               	comf	PID_Calculate@temp,w
 12745  0E35  00FA               	movwf	??_PID_Calculate
 12746  0E36  0979               	comf	PID_Calculate@temp+1,w
 12747  0E37  00FB               	movwf	??_PID_Calculate+1
 12748  0E38  0AFA               	incf	??_PID_Calculate,f
 12749  0E39  1903               	skipnz
 12750  0E3A  0AFB               	incf	??_PID_Calculate+1,f
 12751  0E3B  0876               	movf	PID_Calculate@setpoint,w
 12752  0E3C  077A               	addwf	??_PID_Calculate,w
 12753  0E3D  00AE               	movwf	_error^(0+128)
 12754  0E3E  0877               	movf	PID_Calculate@setpoint+1,w
 12755  0E3F  3D7B               	addwfc	??_PID_Calculate+1,w
 12756  0E40  00AF               	movwf	(_error+1)^(0+128)
 12757                           
 12758                           ;pid.c: 28: errorValue = error * Kp;
 12759  0E41  082F               	movf	(_error+1)^(0+128),w
 12760  0E42  00F1               	movwf	___wmul@multiplier+1
 12761  0E43  082E               	movf	_error^(0+128),w
 12762  0E44  00F0               	movwf	___wmul@multiplier
 12763  0E45  086B               	movf	(_Kp+1)^(0+128),w
 12764  0E46  00F3               	movwf	___wmul@multiplicand+1
 12765  0E47  086A               	movf	_Kp^(0+128),w
 12766  0E48  00F2               	movwf	___wmul@multiplicand
 12767  0E49  3197  2730  318E   	fcall	___wmul
 12768  0E4C  0871               	movf	?___wmul+1,w
 12769  0E4D  0021               	movlb	1	; select bank1
 12770  0E4E  00B1               	movwf	(_errorValue+1)^(0+128)
 12771  0E4F  0870               	movf	?___wmul,w
 12772  0E50  00B0               	movwf	_errorValue^(0+128)
 12773                           
 12774                           ;pid.c: 31: if(error>0)signPositive=1;
 12775  0E51  082F               	movf	(_error+1)^(0+128),w
 12776  0E52  3A80               	xorlw	128
 12777  0E53  00FA               	movwf	??_PID_Calculate
 12778  0E54  3080               	movlw	128
 12779  0E55  027A               	subwf	??_PID_Calculate,w
 12780  0E56  1D03               	skipz
 12781  0E57  2E5A               	goto	u3205
 12782  0E58  3001               	movlw	1
 12783  0E59  022E               	subwf	_error^(0+128),w
 12784  0E5A                     u3205:	
 12785  0E5A  1C03               	skipc
 12786  0E5B  2E62               	goto	l2894
 12787  0E5C  3001               	movlw	1
 12788  0E5D  0021               	movlb	1	; select bank1
 12789  0E5E  00C0               	movwf	_signPositive^(0+128)
 12790  0E5F  3000               	movlw	0
 12791  0E60  00C1               	movwf	(_signPositive^(0+128)+1)
 12792  0E61  2E65               	goto	l2896
 12793  0E62                     l2894:	
 12794                           
 12795                           ;pid.c: 33: else signPositive=0;
 12796  0E62  0021               	movlb	1	; select bank1
 12797  0E63  01C0               	clrf	_signPositive^(0+128)
 12798  0E64  01C1               	clrf	(_signPositive+1)^(0+128)
 12799  0E65                     l2896:	
 12800                           
 12801                           ;pid.c: 35: if(signPositive!=lastSign)pidIntegrated=0;
 12802  0E65  0833               	movf	(_lastSign+1)^(0+128),w
 12803  0E66  0641               	xorwf	(_signPositive+1)^(0+128),w
 12804  0E67  1D03               	skipz
 12805  0E68  2E6B               	goto	u3215
 12806  0E69  0832               	movf	_lastSign^(0+128),w
 12807  0E6A  0640               	xorwf	_signPositive^(0+128),w
 12808  0E6B                     u3215:	
 12809  0E6B  1903               	skipnz
 12810  0E6C  2E6F               	goto	l2900
 12811  0E6D  01B8               	clrf	_pidIntegrated^(0+128)
 12812  0E6E  01B9               	clrf	(_pidIntegrated+1)^(0+128)
 12813  0E6F                     l2900:	
 12814                           
 12815                           ;pid.c: 37: lastSign=signPositive;
 12816  0E6F  0841               	movf	(_signPositive+1)^(0+128),w
 12817  0E70  00B3               	movwf	(_lastSign+1)^(0+128)
 12818  0E71  0840               	movf	_signPositive^(0+128),w
 12819  0E72  00B2               	movwf	_lastSign^(0+128)
 12820                           
 12821                           ;pid.c: 41: derivativeValue=(error-pidPrevError)*Kd;
 12822  0E73  093C               	comf	_pidPrevError^(0+128),w
 12823  0E74  00FA               	movwf	??_PID_Calculate
 12824  0E75  093D               	comf	(_pidPrevError+1)^(0+128),w
 12825  0E76  00FB               	movwf	??_PID_Calculate+1
 12826  0E77  0AFA               	incf	??_PID_Calculate,f
 12827  0E78  1903               	skipnz
 12828  0E79  0AFB               	incf	??_PID_Calculate+1,f
 12829  0E7A  082E               	movf	_error^(0+128),w
 12830  0E7B  077A               	addwf	??_PID_Calculate,w
 12831  0E7C  00F0               	movwf	___wmul@multiplier
 12832  0E7D  082F               	movf	(_error+1)^(0+128),w
 12833  0E7E  3D7B               	addwfc	??_PID_Calculate+1,w
 12834  0E7F  00F1               	movwf	___wmul@multiplier+1
 12835  0E80  0867               	movf	(_Kd+1)^(0+128),w
 12836  0E81  00F3               	movwf	___wmul@multiplicand+1
 12837  0E82  0866               	movf	_Kd^(0+128),w
 12838  0E83  00F2               	movwf	___wmul@multiplicand
 12839  0E84  3197  2730  318E   	fcall	___wmul
 12840  0E87  0871               	movf	?___wmul+1,w
 12841  0E88  0021               	movlb	1	; select bank1
 12842  0E89  00AB               	movwf	(_derivativeValue+1)^(0+128)
 12843  0E8A  0870               	movf	?___wmul,w
 12844  0E8B  00AA               	movwf	_derivativeValue^(0+128)
 12845                           
 12846                           ;pid.c: 42: pidPrevError = error;
 12847  0E8C  082F               	movf	(_error+1)^(0+128),w
 12848  0E8D  00BD               	movwf	(_pidPrevError+1)^(0+128)
 12849  0E8E  082E               	movf	_error^(0+128),w
 12850  0E8F  00BC               	movwf	_pidPrevError^(0+128)
 12851                           
 12852                           ;pid.c: 45: if(pidCount>20)
 12853  0E90  0837               	movf	(_pidCount+1)^(0+128),w
 12854  0E91  3A80               	xorlw	128
 12855  0E92  00FA               	movwf	??_PID_Calculate
 12856  0E93  3080               	movlw	128
 12857  0E94  027A               	subwf	??_PID_Calculate,w
 12858  0E95  1D03               	skipz
 12859  0E96  2E99               	goto	u3225
 12860  0E97  3015               	movlw	21
 12861  0E98  0236               	subwf	_pidCount^(0+128),w
 12862  0E99                     u3225:	
 12863  0E99  1C03               	skipc
 12864  0E9A  2ED4               	goto	l2918
 12865                           
 12866                           ;pid.c: 46: {
 12867                           ;pid.c: 47: pidIntegrated = pidIntegrated + (error * Ki);
 12868  0E9B  0021               	movlb	1	; select bank1
 12869  0E9C  082F               	movf	(_error+1)^(0+128),w
 12870  0E9D  00F1               	movwf	___wmul@multiplier+1
 12871  0E9E  082E               	movf	_error^(0+128),w
 12872  0E9F  00F0               	movwf	___wmul@multiplier
 12873  0EA0  0869               	movf	(_Ki+1)^(0+128),w
 12874  0EA1  00F3               	movwf	___wmul@multiplicand+1
 12875  0EA2  0868               	movf	_Ki^(0+128),w
 12876  0EA3  00F2               	movwf	___wmul@multiplicand
 12877  0EA4  3197  2730  318E   	fcall	___wmul
 12878  0EA7  0021               	movlb	1	; select bank1
 12879  0EA8  0838               	movf	_pidIntegrated^(0+128),w
 12880  0EA9  0770               	addwf	?___wmul,w
 12881  0EAA  00B8               	movwf	_pidIntegrated^(0+128)
 12882  0EAB  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12883  0EAC  3D71               	addwfc	?___wmul+1,w
 12884  0EAD  00B9               	movwf	(_pidIntegrated+1)^(0+128)
 12885                           
 12886                           ;pid.c: 49: if (pidIntegrated< pidMinOutput)
 12887  0EAE  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12888  0EAF  3A80               	xorlw	128
 12889  0EB0  00FA               	movwf	??_PID_Calculate
 12890  0EB1  083B               	movf	(_pidMinOutput+1)^(0+128),w
 12891  0EB2  3A80               	xorlw	128
 12892  0EB3  027A               	subwf	??_PID_Calculate,w
 12893  0EB4  1D03               	skipz
 12894  0EB5  2EB8               	goto	u3235
 12895  0EB6  083A               	movf	_pidMinOutput^(0+128),w
 12896  0EB7  0238               	subwf	_pidIntegrated^(0+128),w
 12897  0EB8                     u3235:	
 12898  0EB8  1803               	skipnc
 12899  0EB9  2EBF               	goto	l229
 12900                           
 12901                           ;pid.c: 50: {
 12902                           ;pid.c: 51: pidIntegrated= pidMinOutput;
 12903  0EBA  0021               	movlb	1	; select bank1
 12904  0EBB  083B               	movf	(_pidMinOutput+1)^(0+128),w
 12905  0EBC  00B9               	movwf	(_pidIntegrated+1)^(0+128)
 12906  0EBD  083A               	movf	_pidMinOutput^(0+128),w
 12907  0EBE  00B8               	movwf	_pidIntegrated^(0+128)
 12908  0EBF                     l229:	
 12909                           
 12910                           ;pid.c: 52: }
 12911                           ;pid.c: 54: if (pidIntegrated> pidMaxOutput)
 12912  0EBF  0021               	movlb	1	; select bank1
 12913  0EC0  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 12914  0EC1  3A80               	xorlw	128
 12915  0EC2  00FA               	movwf	??_PID_Calculate
 12916  0EC3  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12917  0EC4  3A80               	xorlw	128
 12918  0EC5  027A               	subwf	??_PID_Calculate,w
 12919  0EC6  1D03               	skipz
 12920  0EC7  2ECA               	goto	u3245
 12921  0EC8  0838               	movf	_pidIntegrated^(0+128),w
 12922  0EC9  026C               	subwf	_pidMaxOutput^(0+128),w
 12923  0ECA                     u3245:	
 12924  0ECA  1803               	skipnc
 12925  0ECB  2ED1               	goto	l2916
 12926                           
 12927                           ;pid.c: 55: {
 12928                           ;pid.c: 56: pidIntegrated= pidMaxOutput;
 12929  0ECC  0021               	movlb	1	; select bank1
 12930  0ECD  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 12931  0ECE  00B9               	movwf	(_pidIntegrated+1)^(0+128)
 12932  0ECF  086C               	movf	_pidMaxOutput^(0+128),w
 12933  0ED0  00B8               	movwf	_pidIntegrated^(0+128)
 12934  0ED1                     l2916:	
 12935                           
 12936                           ;pid.c: 57: }
 12937                           ;pid.c: 58: pidCount=0;
 12938  0ED1  0021               	movlb	1	; select bank1
 12939  0ED2  01B6               	clrf	_pidCount^(0+128)
 12940  0ED3  01B7               	clrf	(_pidCount+1)^(0+128)
 12941  0ED4                     l2918:	
 12942                           
 12943                           ;pid.c: 59: }
 12944                           ;pid.c: 62: Result = errorValue+pidIntegrated+derivativeValue;
 12945  0ED4  0021               	movlb	1	; select bank1
 12946  0ED5  0838               	movf	_pidIntegrated^(0+128),w
 12947  0ED6  0730               	addwf	_errorValue^(0+128),w
 12948  0ED7  00FA               	movwf	??_PID_Calculate
 12949  0ED8  0839               	movf	(_pidIntegrated+1)^(0+128),w
 12950  0ED9  3D31               	addwfc	(_errorValue+1)^(0+128),w
 12951  0EDA  00FB               	movwf	??_PID_Calculate+1
 12952  0EDB  082A               	movf	_derivativeValue^(0+128),w
 12953  0EDC  077A               	addwf	??_PID_Calculate,w
 12954  0EDD  00A8               	movwf	_Result^(0+128)
 12955  0EDE  082B               	movf	(_derivativeValue+1)^(0+128),w
 12956  0EDF  3D7B               	addwfc	??_PID_Calculate+1,w
 12957  0EE0  00A9               	movwf	(_Result+1)^(0+128)
 12958                           
 12959                           ;pid.c: 64: if (Result < pidMinOutput)
 12960  0EE1  0829               	movf	(_Result+1)^(0+128),w
 12961  0EE2  3A80               	xorlw	128
 12962  0EE3  00FA               	movwf	??_PID_Calculate
 12963  0EE4  083B               	movf	(_pidMinOutput+1)^(0+128),w
 12964  0EE5  3A80               	xorlw	128
 12965  0EE6  027A               	subwf	??_PID_Calculate,w
 12966  0EE7  1D03               	skipz
 12967  0EE8  2EEB               	goto	u3255
 12968  0EE9  083A               	movf	_pidMinOutput^(0+128),w
 12969  0EEA  0228               	subwf	_Result^(0+128),w
 12970  0EEB                     u3255:	
 12971  0EEB  1803               	skipnc
 12972  0EEC  2EF2               	goto	l231
 12973                           
 12974                           ;pid.c: 65: {
 12975                           ;pid.c: 66: Result = pidMinOutput;
 12976  0EED  0021               	movlb	1	; select bank1
 12977  0EEE  083B               	movf	(_pidMinOutput+1)^(0+128),w
 12978  0EEF  00A9               	movwf	(_Result+1)^(0+128)
 12979  0EF0  083A               	movf	_pidMinOutput^(0+128),w
 12980  0EF1  00A8               	movwf	_Result^(0+128)
 12981  0EF2                     l231:	
 12982                           
 12983                           ;pid.c: 67: }
 12984                           ;pid.c: 69: if (Result > pidMaxOutput)
 12985  0EF2  0021               	movlb	1	; select bank1
 12986  0EF3  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 12987  0EF4  3A80               	xorlw	128
 12988  0EF5  00FA               	movwf	??_PID_Calculate
 12989  0EF6  0829               	movf	(_Result+1)^(0+128),w
 12990  0EF7  3A80               	xorlw	128
 12991  0EF8  027A               	subwf	??_PID_Calculate,w
 12992  0EF9  1D03               	skipz
 12993  0EFA  2EFD               	goto	u3265
 12994  0EFB  0828               	movf	_Result^(0+128),w
 12995  0EFC  026C               	subwf	_pidMaxOutput^(0+128),w
 12996  0EFD                     u3265:	
 12997  0EFD  1803               	skipnc
 12998  0EFE  2F04               	goto	l232
 12999                           
 13000                           ;pid.c: 70: {
 13001                           ;pid.c: 71: Result = pidMaxOutput;
 13002  0EFF  0021               	movlb	1	; select bank1
 13003  0F00  086D               	movf	(_pidMaxOutput+1)^(0+128),w
 13004  0F01  00A9               	movwf	(_Result+1)^(0+128)
 13005  0F02  086C               	movf	_pidMaxOutput^(0+128),w
 13006  0F03  00A8               	movwf	_Result^(0+128)
 13007  0F04                     l232:	
 13008                           
 13009                           ;pid.c: 72: }
 13010                           ;pid.c: 74: return (Result);
 13011  0F04  0021               	movlb	1	; select bank1
 13012  0F05  0829               	movf	(_Result+1)^(0+128),w
 13013  0F06  00F7               	movwf	?_PID_Calculate+1
 13014  0F07  0828               	movf	_Result^(0+128),w
 13015  0F08  00F6               	movwf	?_PID_Calculate
 13016  0F09  0008               	return
 13017  0F0A                     __end_of_PID_Calculate:	
 13018                           
 13019                           	psect	text37
 13020  1730                     __ptext37:	
 13021 ;; *************** function ___wmul *****************
 13022 ;; Defined at:
 13023 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 13024 ;; Parameters:    Size  Location     Type
 13025 ;;  multiplier      2    0[COMMON] unsigned int 
 13026 ;;  multiplicand    2    2[COMMON] unsigned int 
 13027 ;; Auto vars:     Size  Location     Type
 13028 ;;  product         2    4[COMMON] unsigned int 
 13029 ;; Return value:  Size  Location     Type
 13030 ;;                  2    0[COMMON] unsigned int 
 13031 ;; Registers used:
 13032 ;;		wreg, status,2, status,0
 13033 ;; Tracked objects:
 13034 ;;		On entry : 0/0
 13035 ;;		On exit  : 0/0
 13036 ;;		Unchanged: 0/0
 13037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13041 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13042 ;;Total ram usage:        6 bytes
 13043 ;; Hardware stack levels used:    1
 13044 ;; This function calls:
 13045 ;;		Nothing
 13046 ;; This function is called by:
 13047 ;;		_PID_Calculate
 13048 ;;		_readAnalog
 13049 ;;		_eval_poly
 13050 ;; This function uses a non-reentrant model
 13051 ;;
 13052                           
 13053                           
 13054                           ;psect for function ___wmul
 13055  1730                     ___wmul:	
 13056                           
 13057                           ;incstack = 0
 13058                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13059  1730  01F4               	clrf	___wmul@product
 13060  1731  01F5               	clrf	___wmul@product+1
 13061  1732                     l2144:	
 13062  1732  1C70               	btfss	___wmul@multiplier,0
 13063  1733  2F38               	goto	l520
 13064  1734  0872               	movf	___wmul@multiplicand,w
 13065  1735  07F4               	addwf	___wmul@product,f
 13066  1736  0873               	movf	___wmul@multiplicand+1,w
 13067  1737  3DF5               	addwfc	___wmul@product+1,f
 13068  1738                     l520:	
 13069  1738  3001               	movlw	1
 13070  1739                     u2015:	
 13071  1739  35F2               	lslf	___wmul@multiplicand,f
 13072  173A  0DF3               	rlf	___wmul@multiplicand+1,f
 13073  173B  0B89               	decfsz	9,f
 13074  173C  2F39               	goto	u2015
 13075  173D  3001               	movlw	1
 13076  173E                     u2025:	
 13077  173E  36F1               	lsrf	___wmul@multiplier+1,f
 13078  173F  0CF0               	rrf	___wmul@multiplier,f
 13079  1740  0B89               	decfsz	9,f
 13080  1741  2F3E               	goto	u2025
 13081  1742  0870               	movf	___wmul@multiplier,w
 13082  1743  0471               	iorwf	___wmul@multiplier+1,w
 13083  1744  1D03               	btfss	3,2
 13084  1745  2F32               	goto	l2144
 13085  1746  0875               	movf	___wmul@product+1,w
 13086  1747  00F1               	movwf	?___wmul+1
 13087  1748  0874               	movf	___wmul@product,w
 13088  1749  00F0               	movwf	?___wmul
 13089  174A  0008               	return
 13090  174B                     __end_of___wmul:	
 13091  007E                     btemp	set	126	;btemp
 13092  007E                     wtemp	set	126
 13093  007E                     wtemp0	set	126
 13094  0080                     wtemp1	set	128
 13095  0082                     wtemp2	set	130
 13096  0084                     wtemp3	set	132
 13097  0086                     wtemp4	set	134
 13098  0088                     wtemp5	set	136
 13099  007F                     wtemp6	set	127
 13100  007E                     ttemp	set	126
 13101  007E                     ttemp0	set	126
 13102  0081                     ttemp1	set	129
 13103  0084                     ttemp2	set	132
 13104  0087                     ttemp3	set	135
 13105  007F                     ttemp4	set	127
 13106  007E                     ltemp	set	126
 13107  007E                     ltemp0	set	126
 13108  0082                     ltemp1	set	130
 13109  0086                     ltemp2	set	134
 13110  0080                     ltemp3	set	128


Data Sizes:
    Strings     120
    Constant    27
    Data        45
    BSS         130
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     25      79
    BANK2            80     80      80
    BANK3            80      0      41
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           48      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    desc	PTR const unsigned char [2] size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[8]), STR_6(CODE[5]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[11]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _tempCalc->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port
    _PID_Calculate->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv
    _menuChoice->_LCD_Write_Int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               113   113      0   45995
                                             72 BANK0      8     8      0
                                              0 BANK1     25    25      0
                                              0 BANK2     80    80      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                      _PID_Calculate
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                         _menuChoice
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   30593
                                             61 BANK0     11     9      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16009
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7263
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1870
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _menuChoice                                           5     5      0    5098
                                             14 BANK0      5     5      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM7_LoadDutyValue
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _readKey                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM7_LoadDutyValue                                   4     2      2     203
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2     692
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Int                                       19    14      5    2971
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1122
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (4) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID_Calculate                                        6     2      4    1144
                                              6 COMMON     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     994
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PID_Calculate
     ___wmul
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___aldiv
   _menuChoice
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Set_Cursor
       _LCD_Cmd
         _LCD_Port
     _LCD_Write_Int
       _LCD_Write_Char
         _LCD_Port
       ___awdiv
       ___awmod
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Port
     _PWM7_LoadDutyValue
     _readKey
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     19      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      29      11       51.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     176      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              30      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     176      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Apr 05 16:19:18 2018

        __size_of_PWM_Initialize 000B                      __CFG_CP$OFF 0000                               l30 16F0  
                             l32 16F5                               l34 16FA                               l28 16EA  
                             _Kd 00E6                               _Ki 00E8                               _Kp 00EA  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l231 0EF2                              l232 0F04                              l229 0EBF  
                            l431 0724                              l520 1738                              l372 04CE  
                            l429 0704                              l366 043C                              l288 169C  
                            l712 0FA9                              l575 0A8F                              l681 0A4C  
                            l772 0B6C                              l688 0A5F                              l689 0A67  
                            _GIE 005F                              _RA0 0060                              _RB0 0068  
                            _RA2 0062                              _RB1 0069                              _RC0 0070  
                            _RB2 006A                              _RC1 0071                              _RA6 0066  
                            _RA7 0067                     __CFG_CPD$OFF 0000                              _key 00C6  
                            _log 0CB6                  __end_of_ADCRead 16A3                     ___awmod@sign 0076  
                _TMR2_Initialize 1687                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00DD                  __end_of_LCD_Cmd 16B7                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 08A3                     ___ftdiv@sign 003F  
                           l2102 0A29                             l3000 03A9                             l2112 0A51  
                           l2104 0A33                             l2130 16EC                             l2114 0A59  
                           l2106 0A38                             l2202 0F9B                             l3012 03F7  
                           l2212 0FCD                             l2204 0FA5                             l2134 16F1  
                           l3030 0447                             l2222 0FE8                             l2144 1732  
                           l2320 097E                             l3032 0449                             l2208 0FBB  
                           l2232 0022                             l2138 16F6                             l2330 0986  
                           l2314 0973                             l3042 0489                             l3018 040F  
                           l2162 0F32                             l2250 0073                             l3202 072C  
                           l2332 0992                             l3060 04D9                             l2172 0F48  
                           l2404 0843                             l2342 09AD                             l3062 04DB  
                           l2190 0F75                             l2166 0F39                             l2262 008F  
                           l2254 007B                             l2238 0038                             l3118 0598  
                           l3048 04A1                             l2192 0F7F                             l2184 0F62  
                           l2408 0859                             l3208 074C                             l3160 0698  
                           l2346 09B5                             l2338 09A4                             l2370 093B  
                           l2362 0935                             l2098 0A22                             l2194 0F84  
                           l2266 0097                             l3226 07B1                             l3170 06AF  
                           l2372 0947                             l2380 095C                             l2700 16D6  
                           l3068 04E9                             l3076 0500                             l2196 0F88  
                           l2428 087A                             l3164 069E                             l2358 092E  
                           l2542 0D87                             l3078 052E                             l2446 0A13  
                           l3182 06FA                             l3174 06B8                             l2464 17C7  
                           l2384 0964                             l2376 0953                             l2560 0DC4  
                           l2552 0D8E                             l2528 1718                             l2720 0AA0  
                           l3192 0718                             l2458 17B6                             l2570 0DE2  
                           l2562 0DCD                             l2554 0DBB                             l2706 16E1  
                           l2730 0ABE                             l3178 06F2                             l3186 0705  
                           l2900 0E6F                             l2572 0E0E                             l2564 0DDE  
                           l2396 1773                             l3196 0726                             l2478 08C3  
                           l2558 0DBF                             l2742 0AE9                             l2806 0B18  
                           l2670 0CE8                             l2576 0E1B                             l2728 0AB0  
                           l2832 0B63                             l2824 0B48                             l2664 0CD5  
                           l2746 0AF7                             l2738 0ADE                             l2762 0C3A  
                           l2834 0B6F                             l2826 0B56                             l2916 0ED1  
                           l2756 0C24                             l2918 0ED4                             l2942 02F1  
                           l2838 0B7D                             l2784 0C94                             l2776 0C7B  
                           l2962 0343                             l2980 0372                             l2956 0335  
                           l2796 1753                             l2894 0E62                             l2896 0E65  
                           l2978 0319                             ?_log 0057                             STR_1 1070  
                           STR_2 107B                             STR_3 105F                             STR_4 104E  
                           STR_5 103D                             STR_6 108E                             STR_7 1086  
                           STR_8 101B                             STR_9 102C                             u2015 1739  
                           u2025 173E                             _LATA 0016                             _LATB 0017  
                           u2135 0F63                             _LATC 0018                             u2225 0F9C  
                           u2305 0054                             u3035 0C4C                             u3115 0B1F  
                           u3205 0E5A                             u3045 0C5C                             u2165 0F76  
                           u2325 007C                             u3215 0E6B                             u3055 0C7C  
                           u2335 0082                             u3225 0E99                             u3305 02C8  
                           u3065 0C8B                             u3145 0B49                             _T2PR 028D  
                           u3235 0EB8                             u2435 0989                             u3315 02E1  
                           u3075 0C95                             u2195 0F89                             u3245 0ECA  
                           u3405 03E7                             u2365 0098                             u3255 0EEB  
                           u2455 0993                             u2535 093E                             u3335 02FD  
                           u3175 0B64                             u2375 009E                             u2295 0044  
                           u2720 0D71                             u3265 0EFD                             u2705 08CE  
                           u2465 099D                             u3345 032F                             u1905 0A54  
                           u2810 17FE                             u2395 0811                             u2475 09A5  
                           u2555 094D                             u3275 01F2                             u3540 0566  
                           u2565 0954                             u3525 04F9                             u3285 0244  
                           u3605 06F0                             u3455 0479                             u3295 0281  
                           u3385 050F                             u1945 0A6E                             u1865 0A2E  
                           u3625 0713                             u3707 037D                             u3635 071F  
                           u2685 08AF                             u3717 03A1                             u1885 0A47  
                           u3807 0B9F                             u2855 16C6                             u3727 0527  
                           u3817 0BAA                             u2785 0DFC                             u3737 03AE  
                           u2945 0AB3                             u3907 0829                             u3827 0BB4  
                           u3747 0435                             u3595 06D3                             u3917 16B1  
                           u3837 0BBE                             u3757 04C7                             u2965 0ABF  
                           u3677 058E                             u3847 0BCC                             u3767 08FD  
                           u2975 0AD3                             u3687 0796                             u3857 0BDA  
                           u3777 090D                             u2985 0ADF                             u3697 07AA  
                           u3867 0BEA                             u3787 091C                             u3877 0BF9  
                           u3797 0B91                             u3887 0C08                             u3897 081D  
            tempCalc@analogValue 005D                             _WPUA 0F39                             _WPUB 0F44  
                           _WPUC 0F4F                             _WPUE 0F65                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075                             _desc 01B4  
                           _main 053A                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                           _loop 00EE                     ___ftpack@exp 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           log@x 0057                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 0002               ??_LCD_Write_String 0077                             ttemp 007E  
                           wtemp 007E                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 002E                    _LCD_Write_Int 0D66                     ___ftmul@sign 002F  
                   ___fttol@exp1 007D                            ??_log 005A                     ___fttol@lval 0079  
               __end_of_LCD_Init 0C0D                 __end_of_LCD_Port 16FC   __size_of_OSCILLATOR_Initialize 0009  
  __end_of_OSCILLATOR_Initialize 1657                  __end_of___aldiv 0B00                            _ADACQ 009D  
                          _ADCAP 009B                            _ADACT 0099                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 09BA                            _ADPRE 009C                  __end_of___ftadd 1000  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0969                            _ADRPT 010D  
                __end_of___ftdiv 0CB6                  __end_of___ftmul 00BF                  ___awdiv@divisor 0070  
                __end_of___ftsub 1769                  __end_of___fttol 0B86                            _T2CON 028E  
                          _LATC2 00C2                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0075                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
         __end_of_LCD_Set_Cursor 08E2                    ___awtoft@sign 007D                  __end_of_readKey 16E4  
                          _frexp 0868                            _errno 00AC                            _error 00AE  
                  ___ftpack@sign 0074                            _timer 00C2                            main@j 00E1  
                          main@x 0068                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0079                   _LCD_Write_Char 0801  
                __initialization 07B7                      log@exponent 005B                     __end_of_main 07B7  
              readAnalog@channel 0026          __end_of_TMR2_Initialize 1695                        ??_ADCRead 0073  
                         ??_main 00C9                    ___fttol@sign1 0078                __end_of_LCD_Clear 164E  
                      ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                         ?_frexp 0070                           _ADLTHH 010F                           _ADLTHL 010E  
                         _ADRESH 008D                           _ADRESL 008C                           _ADSTAT 0097  
                         _ADUTHH 0111                 ___awdiv@dividend 0072                           _ADUTHL 0110  
               __end_of___awtoft 1789                           _ANSELA 0F38                           _ANSELB 0F43  
                         _ANSELC 0F4E                 __end_of___ftpack 0A7E                           _RC3PPS 0F23  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                           _OSCFRQ 0893  
         __end_of_LCD_Write_Char 082D                   __CFG_PWRTE$OFF 0000                           _Result 00A8  
                   _CCPTMRS1bits 021F                           ___ftge 082D           LCD_Write_Int@numPlaces 007C  
                      ??___aldiv 0078                           ___wmul 1730                        ??___awdiv 0074  
                      ??___ftadd 0046                   __CFG_STVREN$ON 0000                        ??___awmod 0074  
                 _PWM_Initialize 1657                        ??___ftdiv 0036                        ??___ftmul 0026  
                         _choice 00C4                        ??___ftsub 007E                        ??___fttol 0074  
         main@currentTemperature 00D5                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                         _timer2 00C8                  ___awmod@counter 0075                           _totals 00A0  
          ___ftmul@f3_as_product 002B                 __end_of_tempCalc 01DC                  _ADCC_Initialize 16FC  
                      ??_readKey 0070                 LCD_Write_Int@str 0025                  _InitCustomChars 17A9  
                LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074  
                LCD_Set_Cursor@z 0078                    _pidIntegrated 00B8         readAnalog@analog_channel 0079  
              _SYSTEM_Initialize 08E2                 __end_oflog@coeff 101B          __end_of__initialization 07FD  
                      ?_LCD_Init 0070                        ?_LCD_Port 0070                       ___ftadd@f1 0040  
                     ___ftadd@f2 0043                  _derivativeValue 00AA                       ___ftge@ff1 0070  
                     ___ftge@ff2 0073                  ??_LCD_Write_Int 0020               ?_SYSTEM_Initialize 0070  
                   eval_poly@res 0054                       ___ftdiv@f1 0033                       ___ftdiv@f2 0030  
                     ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070                    LCD_Init@style 0077  
                     ___awtoft@c 0078                       ___ftmul@f1 0020                       ___ftmul@f2 0023  
         __end_of_PWM_Initialize 1662                       ___ftsub@f1 0050                       ___ftsub@f2 004D  
                     ___fttol@f1 0070                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 167A                     __pidataBANK3 1789              ??_SYSTEM_Initialize 0078  
                  __end_of_frexp 08A3                 ?_TMR2_Initialize 0070      __size_of_PWM7_LoadDutyValue 0016  
                        ??_frexp 0074        __end_of_SYSTEM_Initialize 0924                       __pbssBANK1 00A0  
                     __pbssBANK3 01C0                       __pbssBANK4 0220               __size_of_eval_poly 0060  
                     ??_LCD_Init 0074                       ??_LCD_Port 0070           __size_of_PID_Calculate 00DB  
                     _delayCount 00C5                  ?_PWM_Initialize 0070                       __pmaintext 053A  
                        ?___ftge 0070                          ?___wmul 0070                  __CFG_PPS1WAY$ON 0000  
        __end_of_ADCC_Initialize 1716                          _ADCRead 1695        __size_of_LCD_Write_String 001A  
                      ?___awtoft 0078                        ?___ftpack 0070                          _ADSTPTH 0113  
                        _ADSTPTL 0112         __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000  
        __end_of_InitCustomChars 17CF                          _LCD_Cmd 16A3                   main@holdOutput 006B  
               main@lidOpenCount 006C                          _OSCCON1 088D                          _OSCCON3 088F  
                        _OSCTUNE 0892                          _PWM7DCH 0391                          _PWM7DCL 0390  
                        _PWM7CON 0392                          _PPSLOCK 0E8F                   main@dutyCycle6 00DB  
          PID_Calculate@setpoint 0076                        ?_tempCalc 005D                       _readAnalog 01DC  
                        ___aldiv 0A7E                          ___cgram 01A0                       _menuChoice 0319  
                __size_of___ftge 003B                          ___awdiv 0969                          ___ftadd 0F0A  
                        ___awmod 0924                          ___ftdiv 0C0D                  __size_of___wmul 001B  
                        ___ftmul 000B                          ___ftsub 174B                          ___fttol 0B00  
                     _errorValue 00B0                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0A1A                 ??_LCD_Set_Cursor 0075                          __ptext1 00BF  
                        __ptext2 0CB6                          __ptext3 0868                          __ptext4 09BA  
                        __ptext5 000B                          __ptext6 082D                          __ptext7 1769  
                        __ptext8 0B00                          __ptext9 174B                    _PID_Calculate 0E2F  
          _OSCILLATOR_Initialize 164E                          _readKey 16CD                        _T2CONbits 028E  
                   __size_of_log 00B0                 ___awmod@dividend 0072                   ADCRead@channel 0073  
                   _highRangeSet 01B8                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 2350                          _testKey 00C7                        _LCD_Clear 1646  
     __size_of_SYSTEM_Initialize 0042                          clrloop0 1663             end_of_initialization 07FD  
                        init_ram 166E                          initloop 166F                       ??_tempCalc 007E  
               ___aldiv@quotient 0022                LCD_Write_Int@sign 007D                       main@F13670 0220  
                     main@F13664 01C5                     __pstringtext 1000                 ?_ADCC_Initialize 0070  
          __CFG_WDTCPS$WDTCPS_31 0000                   ?_PID_Calculate 0076                 ?_InitCustomChars 0070  
                     ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 0087                __size_of_LCD_Port 0018                       main@output 0069  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                      ?_menuChoice 0070  
                 __end_of___ftge 0868                   __end_of___wmul 174B                 _LCD_Write_String 1716  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07B7                       eval_poly@d 0050  
                     eval_poly@n 0052                       eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0031  
                    __end_of_log 0D66                       frexp@value 0070                 ??_PWM_Initialize 0070  
       LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 0E2F                 __CFG_LPBOREN$OFF 0000  
                       ??___ftge 0076                tempCalc@steinhart 0065                         ??___wmul 0074  
                   _pidMaxOutput 00EC                    _tempCalc$1012 0062                      __pdataBANK1 00E2  
                    __pdataBANK3 01A0                  ??_PID_Calculate 007A       __end_of_PWM7_LoadDutyValue 16CD  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
   PWM7_LoadDutyValue@dutyCycle7 0070                     _pidMinOutput 00BA                         ?_LCD_Cmd 0070  
              __size_of___awtoft 0020                __size_of___ftpack 0064                      __pbssBIGRAM 2350  
                       LCD_Cmd@a 0073                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00C9                    __pcstackBANK2 0120         __size_of_TMR2_Initialize 000E  
                    ??_LCD_Clear 0074              __size_of_readAnalog 013D              __size_of_menuChoice 0221  
                   _pidPrevError 00BC           _PIN_MANAGER_Initialize 17CF                         ?___aldiv 0070  
              __size_of_tempCalc 011D                         ?___awdiv 0070                         ?___ftadd 0040  
                       ?___awmod 0070                         ?___ftdiv 0030                         ?___ftmul 0020  
                       ?___ftsub 004D                         ?___fttol 0070              main@lastTemperature 006D  
                       ?_readKey 0070                        _eval_poly 09BA                        _menuDelay 00B4  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0B86                   ___wmul@product 0074  
                       _LCD_Port 16E4                        clear_ram0 1662                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 000E                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0014  
       __end_of_LCD_Write_String 1730                ??_TMR2_Initialize 0070                  readAnalog@value 007B  
                      frexp@eptr 0073                     ??_readAnalog 0028                     ??_menuChoice 002E  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002C                   LCD_Write_Int@j 002A  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                         ___awtoft 1769  
                       ___ftpack 0A1A         __size_of_ADCC_Initialize 001A                         _channels 01B0  
               __size_of_readKey 0017                PID_Calculate@temp 0078                         __ptext10 0F0A  
                       __ptext11 0C0D                         __ptext20 0D66                         __ptext12 0A1A  
                       __ptext21 0924                         __ptext13 01DC                         __ptext30 1646  
                       __ptext22 0969                         __ptext14 0A7E                         __ptext31 17A9  
                       __ptext23 08A3                         __ptext15 1695                         __ptext32 0801  
                       __ptext24 08E2                         __ptext16 0319                         __ptext33 16A3  
                       __ptext25 1687                         __ptext17 16CD                         __ptext34 16E4  
                       __ptext26 1657                         __ptext18 16B7                         __ptext35 16FC  
                       __ptext27 17CF                         __ptext19 1716                         __ptext36 0E2F  
                       __ptext28 164E                         __ptext37 1730                         __ptext29 0B86  
             __end_of_readAnalog 0319          __size_of_LCD_Set_Cursor 003F                     _signPositive 00C0  
                      tempCalc@R 005F         __size_of_InitCustomChars 0026               __end_of_menuChoice 053A  
                       _lastSign 00B2              LCD_Write_Int@F13694 01C0                         _pidCount 00B6  
                  __size_of_main 027D             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 00BF  
                       _setpoint 00E2                      _lowRangeSet 01BC      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1000                      ??_eval_poly 007E                      _sampleIndex 00BE  
             _PWM7_LoadDutyValue 16B7               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
            ?_PWM7_LoadDutyValue 0070                main@outputSamples 0120                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C             main@pidPeriodCounter 00D3  
             LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0079            __end_of_PID_Calculate 0F0A  
           ??_PWM7_LoadDutyValue 0072                     ___aldiv@sign 0021           __size_of_LCD_Write_Int 00C9  
                main@outputIndex 006F   __end_of_PIN_MANAGER_Initialize 1800                ??_ADCC_Initialize 0070  
                main@outputTotal 00D7                ??_InitCustomChars 0075  
