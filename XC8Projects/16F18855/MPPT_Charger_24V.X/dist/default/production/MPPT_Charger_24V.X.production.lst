

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jul 20 12:40:15 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	dabs	1,0x620,48
    66                           	dabs	1,0x5A0,80
    67                           	dabs	1,0x520,80
    68                           	dabs	1,0x4A0,80
    69                           	dabs	1,0x420,80
    70                           	dabs	1,0x3D0,32
    71                           	dabs	1,0x2260,0,_samples
    72                           	dabs	1,0x7E,2
    73  0000                     
    74                           ; Version 1.45
    75                           ; Generated 16/11/2017 GMT
    76                           ; 
    77                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F18855 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  001C                     	;# 
   131  001C                     	;# 
   132  001D                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  008C                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0110                     	;# 
   163  0110                     	;# 
   164  0111                     	;# 
   165  0112                     	;# 
   166  0112                     	;# 
   167  0113                     	;# 
   168  0114                     	;# 
   169  0114                     	;# 
   170  0115                     	;# 
   171  0116                     	;# 
   172  0116                     	;# 
   173  0117                     	;# 
   174  0119                     	;# 
   175  0119                     	;# 
   176  0119                     	;# 
   177  011A                     	;# 
   178  011A                     	;# 
   179  011A                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011B                     	;# 
   185  011C                     	;# 
   186  011C                     	;# 
   187  011C                     	;# 
   188  011D                     	;# 
   189  011D                     	;# 
   190  011D                     	;# 
   191  011E                     	;# 
   192  011E                     	;# 
   193  011E                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  011F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  018E                     	;# 
   202  018F                     	;# 
   203  0190                     	;# 
   204  0191                     	;# 
   205  0192                     	;# 
   206  0196                     	;# 
   207  0197                     	;# 
   208  0198                     	;# 
   209  0199                     	;# 
   210  019A                     	;# 
   211  019B                     	;# 
   212  019C                     	;# 
   213  020C                     	;# 
   214  020C                     	;# 
   215  020D                     	;# 
   216  020E                     	;# 
   217  020F                     	;# 
   218  020F                     	;# 
   219  0210                     	;# 
   220  0210                     	;# 
   221  0211                     	;# 
   222  0211                     	;# 
   223  0212                     	;# 
   224  0212                     	;# 
   225  0213                     	;# 
   226  0214                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0216                     	;# 
   230  0216                     	;# 
   231  0217                     	;# 
   232  0217                     	;# 
   233  0218                     	;# 
   234  0218                     	;# 
   235  0219                     	;# 
   236  021A                     	;# 
   237  021B                     	;# 
   238  021B                     	;# 
   239  021C                     	;# 
   240  021C                     	;# 
   241  021D                     	;# 
   242  021D                     	;# 
   243  021E                     	;# 
   244  021F                     	;# 
   245  028C                     	;# 
   246  028C                     	;# 
   247  028D                     	;# 
   248  028D                     	;# 
   249  028E                     	;# 
   250  028F                     	;# 
   251  0290                     	;# 
   252  0290                     	;# 
   253  0291                     	;# 
   254  0292                     	;# 
   255  0292                     	;# 
   256  0293                     	;# 
   257  0293                     	;# 
   258  0294                     	;# 
   259  0295                     	;# 
   260  0296                     	;# 
   261  0296                     	;# 
   262  0297                     	;# 
   263  0298                     	;# 
   264  0298                     	;# 
   265  0299                     	;# 
   266  0299                     	;# 
   267  029A                     	;# 
   268  029B                     	;# 
   269  029C                     	;# 
   270  029C                     	;# 
   271  029D                     	;# 
   272  030C                     	;# 
   273  030C                     	;# 
   274  030D                     	;# 
   275  030E                     	;# 
   276  030F                     	;# 
   277  0310                     	;# 
   278  0310                     	;# 
   279  0311                     	;# 
   280  0312                     	;# 
   281  0313                     	;# 
   282  0314                     	;# 
   283  0314                     	;# 
   284  0315                     	;# 
   285  0316                     	;# 
   286  0317                     	;# 
   287  0318                     	;# 
   288  0318                     	;# 
   289  0319                     	;# 
   290  031A                     	;# 
   291  031B                     	;# 
   292  031C                     	;# 
   293  031C                     	;# 
   294  031D                     	;# 
   295  031E                     	;# 
   296  031F                     	;# 
   297  038C                     	;# 
   298  038D                     	;# 
   299  038E                     	;# 
   300  0390                     	;# 
   301  0391                     	;# 
   302  0392                     	;# 
   303  040C                     	;# 
   304  040D                     	;# 
   305  040E                     	;# 
   306  040F                     	;# 
   307  0410                     	;# 
   308  0411                     	;# 
   309  0416                     	;# 
   310  0416                     	;# 
   311  0417                     	;# 
   312  0418                     	;# 
   313  0418                     	;# 
   314  0419                     	;# 
   315  041A                     	;# 
   316  041A                     	;# 
   317  041B                     	;# 
   318  041C                     	;# 
   319  041C                     	;# 
   320  041D                     	;# 
   321  041E                     	;# 
   322  041F                     	;# 
   323  048C                     	;# 
   324  048C                     	;# 
   325  048D                     	;# 
   326  048E                     	;# 
   327  048F                     	;# 
   328  048F                     	;# 
   329  0490                     	;# 
   330  0491                     	;# 
   331  0492                     	;# 
   332  0492                     	;# 
   333  0493                     	;# 
   334  0494                     	;# 
   335  0495                     	;# 
   336  0495                     	;# 
   337  0496                     	;# 
   338  0497                     	;# 
   339  0498                     	;# 
   340  0499                     	;# 
   341  049A                     	;# 
   342  049B                     	;# 
   343  049C                     	;# 
   344  049D                     	;# 
   345  050C                     	;# 
   346  050C                     	;# 
   347  050D                     	;# 
   348  050E                     	;# 
   349  050F                     	;# 
   350  050F                     	;# 
   351  0510                     	;# 
   352  0511                     	;# 
   353  0512                     	;# 
   354  0512                     	;# 
   355  0513                     	;# 
   356  0514                     	;# 
   357  0515                     	;# 
   358  0515                     	;# 
   359  0516                     	;# 
   360  0517                     	;# 
   361  0518                     	;# 
   362  0519                     	;# 
   363  051A                     	;# 
   364  051B                     	;# 
   365  051C                     	;# 
   366  051D                     	;# 
   367  058C                     	;# 
   368  058C                     	;# 
   369  058D                     	;# 
   370  058E                     	;# 
   371  058F                     	;# 
   372  058F                     	;# 
   373  0590                     	;# 
   374  0591                     	;# 
   375  0592                     	;# 
   376  0593                     	;# 
   377  060C                     	;# 
   378  060D                     	;# 
   379  060E                     	;# 
   380  060F                     	;# 
   381  0610                     	;# 
   382  0611                     	;# 
   383  0612                     	;# 
   384  0613                     	;# 
   385  0614                     	;# 
   386  0616                     	;# 
   387  0617                     	;# 
   388  0618                     	;# 
   389  0619                     	;# 
   390  061A                     	;# 
   391  061B                     	;# 
   392  061C                     	;# 
   393  061D                     	;# 
   394  061E                     	;# 
   395  068C                     	;# 
   396  068D                     	;# 
   397  068E                     	;# 
   398  068F                     	;# 
   399  0690                     	;# 
   400  0691                     	;# 
   401  0692                     	;# 
   402  0693                     	;# 
   403  0694                     	;# 
   404  070C                     	;# 
   405  070D                     	;# 
   406  070E                     	;# 
   407  070F                     	;# 
   408  0710                     	;# 
   409  0711                     	;# 
   410  0712                     	;# 
   411  0713                     	;# 
   412  0714                     	;# 
   413  0716                     	;# 
   414  0717                     	;# 
   415  0718                     	;# 
   416  0719                     	;# 
   417  071A                     	;# 
   418  071B                     	;# 
   419  071C                     	;# 
   420  071D                     	;# 
   421  071E                     	;# 
   422  0796                     	;# 
   423  0797                     	;# 
   424  0798                     	;# 
   425  0799                     	;# 
   426  079A                     	;# 
   427  079B                     	;# 
   428  080C                     	;# 
   429  080D                     	;# 
   430  080E                     	;# 
   431  080F                     	;# 
   432  0810                     	;# 
   433  0811                     	;# 
   434  0812                     	;# 
   435  0813                     	;# 
   436  0814                     	;# 
   437  081A                     	;# 
   438  081B                     	;# 
   439  081C                     	;# 
   440  081D                     	;# 
   441  081E                     	;# 
   442  081F                     	;# 
   443  088C                     	;# 
   444  088D                     	;# 
   445  088E                     	;# 
   446  088F                     	;# 
   447  0890                     	;# 
   448  0891                     	;# 
   449  0892                     	;# 
   450  0893                     	;# 
   451  0895                     	;# 
   452  0896                     	;# 
   453  0897                     	;# 
   454  0898                     	;# 
   455  0899                     	;# 
   456  089A                     	;# 
   457  089B                     	;# 
   458  090C                     	;# 
   459  090E                     	;# 
   460  090F                     	;# 
   461  091F                     	;# 
   462  091F                     	;# 
   463  098F                     	;# 
   464  098F                     	;# 
   465  0990                     	;# 
   466  0991                     	;# 
   467  0992                     	;# 
   468  0993                     	;# 
   469  0994                     	;# 
   470  0995                     	;# 
   471  0996                     	;# 
   472  0997                     	;# 
   473  0E0F                     	;# 
   474  0E10                     	;# 
   475  0E11                     	;# 
   476  0E12                     	;# 
   477  0E13                     	;# 
   478  0E14                     	;# 
   479  0E15                     	;# 
   480  0E16                     	;# 
   481  0E17                     	;# 
   482  0E18                     	;# 
   483  0E19                     	;# 
   484  0E1A                     	;# 
   485  0E1B                     	;# 
   486  0E1C                     	;# 
   487  0E1D                     	;# 
   488  0E1E                     	;# 
   489  0E1F                     	;# 
   490  0E20                     	;# 
   491  0E21                     	;# 
   492  0E22                     	;# 
   493  0E23                     	;# 
   494  0E24                     	;# 
   495  0E25                     	;# 
   496  0E26                     	;# 
   497  0E27                     	;# 
   498  0E28                     	;# 
   499  0E29                     	;# 
   500  0E2A                     	;# 
   501  0E2B                     	;# 
   502  0E2C                     	;# 
   503  0E2D                     	;# 
   504  0E2E                     	;# 
   505  0E2F                     	;# 
   506  0E30                     	;# 
   507  0E31                     	;# 
   508  0E32                     	;# 
   509  0E33                     	;# 
   510  0E34                     	;# 
   511  0E35                     	;# 
   512  0E36                     	;# 
   513  0E37                     	;# 
   514  0E8F                     	;# 
   515  0E90                     	;# 
   516  0E91                     	;# 
   517  0E92                     	;# 
   518  0E93                     	;# 
   519  0E94                     	;# 
   520  0E95                     	;# 
   521  0E96                     	;# 
   522  0E97                     	;# 
   523  0E9C                     	;# 
   524  0E9D                     	;# 
   525  0E9E                     	;# 
   526  0EA1                     	;# 
   527  0EA2                     	;# 
   528  0EA3                     	;# 
   529  0EA4                     	;# 
   530  0EA5                     	;# 
   531  0EA9                     	;# 
   532  0EAA                     	;# 
   533  0EAB                     	;# 
   534  0EAC                     	;# 
   535  0EB1                     	;# 
   536  0EB2                     	;# 
   537  0EB3                     	;# 
   538  0EB8                     	;# 
   539  0EB9                     	;# 
   540  0EBA                     	;# 
   541  0EBB                     	;# 
   542  0EBC                     	;# 
   543  0EBD                     	;# 
   544  0EBE                     	;# 
   545  0EC3                     	;# 
   546  0EC5                     	;# 
   547  0EC6                     	;# 
   548  0EC7                     	;# 
   549  0EC8                     	;# 
   550  0EC9                     	;# 
   551  0ECA                     	;# 
   552  0ECB                     	;# 
   553  0ECC                     	;# 
   554  0F10                     	;# 
   555  0F11                     	;# 
   556  0F12                     	;# 
   557  0F13                     	;# 
   558  0F14                     	;# 
   559  0F15                     	;# 
   560  0F16                     	;# 
   561  0F17                     	;# 
   562  0F18                     	;# 
   563  0F19                     	;# 
   564  0F1A                     	;# 
   565  0F1B                     	;# 
   566  0F1C                     	;# 
   567  0F1D                     	;# 
   568  0F1E                     	;# 
   569  0F1F                     	;# 
   570  0F20                     	;# 
   571  0F21                     	;# 
   572  0F22                     	;# 
   573  0F23                     	;# 
   574  0F24                     	;# 
   575  0F25                     	;# 
   576  0F26                     	;# 
   577  0F27                     	;# 
   578  0F38                     	;# 
   579  0F39                     	;# 
   580  0F3A                     	;# 
   581  0F3B                     	;# 
   582  0F3C                     	;# 
   583  0F3D                     	;# 
   584  0F3E                     	;# 
   585  0F3F                     	;# 
   586  0F40                     	;# 
   587  0F41                     	;# 
   588  0F43                     	;# 
   589  0F44                     	;# 
   590  0F45                     	;# 
   591  0F46                     	;# 
   592  0F47                     	;# 
   593  0F48                     	;# 
   594  0F49                     	;# 
   595  0F4A                     	;# 
   596  0F4B                     	;# 
   597  0F4C                     	;# 
   598  0F4E                     	;# 
   599  0F4F                     	;# 
   600  0F50                     	;# 
   601  0F51                     	;# 
   602  0F52                     	;# 
   603  0F53                     	;# 
   604  0F54                     	;# 
   605  0F55                     	;# 
   606  0F56                     	;# 
   607  0F57                     	;# 
   608  0F65                     	;# 
   609  0F68                     	;# 
   610  0F69                     	;# 
   611  0F6A                     	;# 
   612  0F6B                     	;# 
   613  0FE4                     	;# 
   614  0FE5                     	;# 
   615  0FE6                     	;# 
   616  0FE7                     	;# 
   617  0FE8                     	;# 
   618  0FE9                     	;# 
   619  0FEA                     	;# 
   620  0FEB                     	;# 
   621  0FED                     	;# 
   622  0FEE                     	;# 
   623  0FEF                     	;# 
   624  0000                     	;# 
   625  0001                     	;# 
   626  0002                     	;# 
   627  0003                     	;# 
   628  0004                     	;# 
   629  0005                     	;# 
   630  0006                     	;# 
   631  0007                     	;# 
   632  0008                     	;# 
   633  0009                     	;# 
   634  000A                     	;# 
   635  000B                     	;# 
   636  000C                     	;# 
   637  000D                     	;# 
   638  000E                     	;# 
   639  0010                     	;# 
   640  0011                     	;# 
   641  0012                     	;# 
   642  0013                     	;# 
   643  0016                     	;# 
   644  0017                     	;# 
   645  0018                     	;# 
   646  001C                     	;# 
   647  001C                     	;# 
   648  001D                     	;# 
   649  001D                     	;# 
   650  001E                     	;# 
   651  001F                     	;# 
   652  008C                     	;# 
   653  008C                     	;# 
   654  008D                     	;# 
   655  008E                     	;# 
   656  008E                     	;# 
   657  008F                     	;# 
   658  0090                     	;# 
   659  0090                     	;# 
   660  0091                     	;# 
   661  0093                     	;# 
   662  0094                     	;# 
   663  0095                     	;# 
   664  0096                     	;# 
   665  0097                     	;# 
   666  0098                     	;# 
   667  0099                     	;# 
   668  009A                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  010C                     	;# 
   674  010D                     	;# 
   675  010E                     	;# 
   676  010E                     	;# 
   677  010F                     	;# 
   678  0110                     	;# 
   679  0110                     	;# 
   680  0111                     	;# 
   681  0112                     	;# 
   682  0112                     	;# 
   683  0113                     	;# 
   684  0114                     	;# 
   685  0114                     	;# 
   686  0115                     	;# 
   687  0116                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0119                     	;# 
   691  0119                     	;# 
   692  0119                     	;# 
   693  011A                     	;# 
   694  011A                     	;# 
   695  011A                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011C                     	;# 
   702  011C                     	;# 
   703  011C                     	;# 
   704  011D                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  011E                     	;# 
   708  011E                     	;# 
   709  011E                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  018C                     	;# 
   716  018D                     	;# 
   717  018E                     	;# 
   718  018F                     	;# 
   719  0190                     	;# 
   720  0191                     	;# 
   721  0192                     	;# 
   722  0196                     	;# 
   723  0197                     	;# 
   724  0198                     	;# 
   725  0199                     	;# 
   726  019A                     	;# 
   727  019B                     	;# 
   728  019C                     	;# 
   729  020C                     	;# 
   730  020C                     	;# 
   731  020D                     	;# 
   732  020E                     	;# 
   733  020F                     	;# 
   734  020F                     	;# 
   735  0210                     	;# 
   736  0210                     	;# 
   737  0211                     	;# 
   738  0211                     	;# 
   739  0212                     	;# 
   740  0212                     	;# 
   741  0213                     	;# 
   742  0214                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  0218                     	;# 
   750  0218                     	;# 
   751  0219                     	;# 
   752  021A                     	;# 
   753  021B                     	;# 
   754  021B                     	;# 
   755  021C                     	;# 
   756  021C                     	;# 
   757  021D                     	;# 
   758  021D                     	;# 
   759  021E                     	;# 
   760  021F                     	;# 
   761  028C                     	;# 
   762  028C                     	;# 
   763  028D                     	;# 
   764  028D                     	;# 
   765  028E                     	;# 
   766  028F                     	;# 
   767  0290                     	;# 
   768  0290                     	;# 
   769  0291                     	;# 
   770  0292                     	;# 
   771  0292                     	;# 
   772  0293                     	;# 
   773  0293                     	;# 
   774  0294                     	;# 
   775  0295                     	;# 
   776  0296                     	;# 
   777  0296                     	;# 
   778  0297                     	;# 
   779  0298                     	;# 
   780  0298                     	;# 
   781  0299                     	;# 
   782  0299                     	;# 
   783  029A                     	;# 
   784  029B                     	;# 
   785  029C                     	;# 
   786  029C                     	;# 
   787  029D                     	;# 
   788  030C                     	;# 
   789  030C                     	;# 
   790  030D                     	;# 
   791  030E                     	;# 
   792  030F                     	;# 
   793  0310                     	;# 
   794  0310                     	;# 
   795  0311                     	;# 
   796  0312                     	;# 
   797  0313                     	;# 
   798  0314                     	;# 
   799  0314                     	;# 
   800  0315                     	;# 
   801  0316                     	;# 
   802  0317                     	;# 
   803  0318                     	;# 
   804  0318                     	;# 
   805  0319                     	;# 
   806  031A                     	;# 
   807  031B                     	;# 
   808  031C                     	;# 
   809  031C                     	;# 
   810  031D                     	;# 
   811  031E                     	;# 
   812  031F                     	;# 
   813  038C                     	;# 
   814  038D                     	;# 
   815  038E                     	;# 
   816  0390                     	;# 
   817  0391                     	;# 
   818  0392                     	;# 
   819  040C                     	;# 
   820  040D                     	;# 
   821  040E                     	;# 
   822  040F                     	;# 
   823  0410                     	;# 
   824  0411                     	;# 
   825  0416                     	;# 
   826  0416                     	;# 
   827  0417                     	;# 
   828  0418                     	;# 
   829  0418                     	;# 
   830  0419                     	;# 
   831  041A                     	;# 
   832  041A                     	;# 
   833  041B                     	;# 
   834  041C                     	;# 
   835  041C                     	;# 
   836  041D                     	;# 
   837  041E                     	;# 
   838  041F                     	;# 
   839  048C                     	;# 
   840  048C                     	;# 
   841  048D                     	;# 
   842  048E                     	;# 
   843  048F                     	;# 
   844  048F                     	;# 
   845  0490                     	;# 
   846  0491                     	;# 
   847  0492                     	;# 
   848  0492                     	;# 
   849  0493                     	;# 
   850  0494                     	;# 
   851  0495                     	;# 
   852  0495                     	;# 
   853  0496                     	;# 
   854  0497                     	;# 
   855  0498                     	;# 
   856  0499                     	;# 
   857  049A                     	;# 
   858  049B                     	;# 
   859  049C                     	;# 
   860  049D                     	;# 
   861  050C                     	;# 
   862  050C                     	;# 
   863  050D                     	;# 
   864  050E                     	;# 
   865  050F                     	;# 
   866  050F                     	;# 
   867  0510                     	;# 
   868  0511                     	;# 
   869  0512                     	;# 
   870  0512                     	;# 
   871  0513                     	;# 
   872  0514                     	;# 
   873  0515                     	;# 
   874  0515                     	;# 
   875  0516                     	;# 
   876  0517                     	;# 
   877  0518                     	;# 
   878  0519                     	;# 
   879  051A                     	;# 
   880  051B                     	;# 
   881  051C                     	;# 
   882  051D                     	;# 
   883  058C                     	;# 
   884  058C                     	;# 
   885  058D                     	;# 
   886  058E                     	;# 
   887  058F                     	;# 
   888  058F                     	;# 
   889  0590                     	;# 
   890  0591                     	;# 
   891  0592                     	;# 
   892  0593                     	;# 
   893  060C                     	;# 
   894  060D                     	;# 
   895  060E                     	;# 
   896  060F                     	;# 
   897  0610                     	;# 
   898  0611                     	;# 
   899  0612                     	;# 
   900  0613                     	;# 
   901  0614                     	;# 
   902  0616                     	;# 
   903  0617                     	;# 
   904  0618                     	;# 
   905  0619                     	;# 
   906  061A                     	;# 
   907  061B                     	;# 
   908  061C                     	;# 
   909  061D                     	;# 
   910  061E                     	;# 
   911  068C                     	;# 
   912  068D                     	;# 
   913  068E                     	;# 
   914  068F                     	;# 
   915  0690                     	;# 
   916  0691                     	;# 
   917  0692                     	;# 
   918  0693                     	;# 
   919  0694                     	;# 
   920  070C                     	;# 
   921  070D                     	;# 
   922  070E                     	;# 
   923  070F                     	;# 
   924  0710                     	;# 
   925  0711                     	;# 
   926  0712                     	;# 
   927  0713                     	;# 
   928  0714                     	;# 
   929  0716                     	;# 
   930  0717                     	;# 
   931  0718                     	;# 
   932  0719                     	;# 
   933  071A                     	;# 
   934  071B                     	;# 
   935  071C                     	;# 
   936  071D                     	;# 
   937  071E                     	;# 
   938  0796                     	;# 
   939  0797                     	;# 
   940  0798                     	;# 
   941  0799                     	;# 
   942  079A                     	;# 
   943  079B                     	;# 
   944  080C                     	;# 
   945  080D                     	;# 
   946  080E                     	;# 
   947  080F                     	;# 
   948  0810                     	;# 
   949  0811                     	;# 
   950  0812                     	;# 
   951  0813                     	;# 
   952  0814                     	;# 
   953  081A                     	;# 
   954  081B                     	;# 
   955  081C                     	;# 
   956  081D                     	;# 
   957  081E                     	;# 
   958  081F                     	;# 
   959  088C                     	;# 
   960  088D                     	;# 
   961  088E                     	;# 
   962  088F                     	;# 
   963  0890                     	;# 
   964  0891                     	;# 
   965  0892                     	;# 
   966  0893                     	;# 
   967  0895                     	;# 
   968  0896                     	;# 
   969  0897                     	;# 
   970  0898                     	;# 
   971  0899                     	;# 
   972  089A                     	;# 
   973  089B                     	;# 
   974  090C                     	;# 
   975  090E                     	;# 
   976  090F                     	;# 
   977  091F                     	;# 
   978  091F                     	;# 
   979  098F                     	;# 
   980  098F                     	;# 
   981  0990                     	;# 
   982  0991                     	;# 
   983  0992                     	;# 
   984  0993                     	;# 
   985  0994                     	;# 
   986  0995                     	;# 
   987  0996                     	;# 
   988  0997                     	;# 
   989  0E0F                     	;# 
   990  0E10                     	;# 
   991  0E11                     	;# 
   992  0E12                     	;# 
   993  0E13                     	;# 
   994  0E14                     	;# 
   995  0E15                     	;# 
   996  0E16                     	;# 
   997  0E17                     	;# 
   998  0E18                     	;# 
   999  0E19                     	;# 
  1000  0E1A                     	;# 
  1001  0E1B                     	;# 
  1002  0E1C                     	;# 
  1003  0E1D                     	;# 
  1004  0E1E                     	;# 
  1005  0E1F                     	;# 
  1006  0E20                     	;# 
  1007  0E21                     	;# 
  1008  0E22                     	;# 
  1009  0E23                     	;# 
  1010  0E24                     	;# 
  1011  0E25                     	;# 
  1012  0E26                     	;# 
  1013  0E27                     	;# 
  1014  0E28                     	;# 
  1015  0E29                     	;# 
  1016  0E2A                     	;# 
  1017  0E2B                     	;# 
  1018  0E2C                     	;# 
  1019  0E2D                     	;# 
  1020  0E2E                     	;# 
  1021  0E2F                     	;# 
  1022  0E30                     	;# 
  1023  0E31                     	;# 
  1024  0E32                     	;# 
  1025  0E33                     	;# 
  1026  0E34                     	;# 
  1027  0E35                     	;# 
  1028  0E36                     	;# 
  1029  0E37                     	;# 
  1030  0E8F                     	;# 
  1031  0E90                     	;# 
  1032  0E91                     	;# 
  1033  0E92                     	;# 
  1034  0E93                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0E96                     	;# 
  1038  0E97                     	;# 
  1039  0E9C                     	;# 
  1040  0E9D                     	;# 
  1041  0E9E                     	;# 
  1042  0EA1                     	;# 
  1043  0EA2                     	;# 
  1044  0EA3                     	;# 
  1045  0EA4                     	;# 
  1046  0EA5                     	;# 
  1047  0EA9                     	;# 
  1048  0EAA                     	;# 
  1049  0EAB                     	;# 
  1050  0EAC                     	;# 
  1051  0EB1                     	;# 
  1052  0EB2                     	;# 
  1053  0EB3                     	;# 
  1054  0EB8                     	;# 
  1055  0EB9                     	;# 
  1056  0EBA                     	;# 
  1057  0EBB                     	;# 
  1058  0EBC                     	;# 
  1059  0EBD                     	;# 
  1060  0EBE                     	;# 
  1061  0EC3                     	;# 
  1062  0EC5                     	;# 
  1063  0EC6                     	;# 
  1064  0EC7                     	;# 
  1065  0EC8                     	;# 
  1066  0EC9                     	;# 
  1067  0ECA                     	;# 
  1068  0ECB                     	;# 
  1069  0ECC                     	;# 
  1070  0F10                     	;# 
  1071  0F11                     	;# 
  1072  0F12                     	;# 
  1073  0F13                     	;# 
  1074  0F14                     	;# 
  1075  0F15                     	;# 
  1076  0F16                     	;# 
  1077  0F17                     	;# 
  1078  0F18                     	;# 
  1079  0F19                     	;# 
  1080  0F1A                     	;# 
  1081  0F1B                     	;# 
  1082  0F1C                     	;# 
  1083  0F1D                     	;# 
  1084  0F1E                     	;# 
  1085  0F1F                     	;# 
  1086  0F20                     	;# 
  1087  0F21                     	;# 
  1088  0F22                     	;# 
  1089  0F23                     	;# 
  1090  0F24                     	;# 
  1091  0F25                     	;# 
  1092  0F26                     	;# 
  1093  0F27                     	;# 
  1094  0F38                     	;# 
  1095  0F39                     	;# 
  1096  0F3A                     	;# 
  1097  0F3B                     	;# 
  1098  0F3C                     	;# 
  1099  0F3D                     	;# 
  1100  0F3E                     	;# 
  1101  0F3F                     	;# 
  1102  0F40                     	;# 
  1103  0F41                     	;# 
  1104  0F43                     	;# 
  1105  0F44                     	;# 
  1106  0F45                     	;# 
  1107  0F46                     	;# 
  1108  0F47                     	;# 
  1109  0F48                     	;# 
  1110  0F49                     	;# 
  1111  0F4A                     	;# 
  1112  0F4B                     	;# 
  1113  0F4C                     	;# 
  1114  0F4E                     	;# 
  1115  0F4F                     	;# 
  1116  0F50                     	;# 
  1117  0F51                     	;# 
  1118  0F52                     	;# 
  1119  0F53                     	;# 
  1120  0F54                     	;# 
  1121  0F55                     	;# 
  1122  0F56                     	;# 
  1123  0F57                     	;# 
  1124  0F65                     	;# 
  1125  0F68                     	;# 
  1126  0F69                     	;# 
  1127  0F6A                     	;# 
  1128  0F6B                     	;# 
  1129  0FE4                     	;# 
  1130  0FE5                     	;# 
  1131  0FE6                     	;# 
  1132  0FE7                     	;# 
  1133  0FE8                     	;# 
  1134  0FE9                     	;# 
  1135  0FEA                     	;# 
  1136  0FEB                     	;# 
  1137  0FED                     	;# 
  1138  0FEE                     	;# 
  1139  0FEF                     	;# 
  1140  0000                     	;# 
  1141  0001                     	;# 
  1142  0002                     	;# 
  1143  0003                     	;# 
  1144  0004                     	;# 
  1145  0005                     	;# 
  1146  0006                     	;# 
  1147  0007                     	;# 
  1148  0008                     	;# 
  1149  0009                     	;# 
  1150  000A                     	;# 
  1151  000B                     	;# 
  1152  000C                     	;# 
  1153  000D                     	;# 
  1154  000E                     	;# 
  1155  0010                     	;# 
  1156  0011                     	;# 
  1157  0012                     	;# 
  1158  0013                     	;# 
  1159  0016                     	;# 
  1160  0017                     	;# 
  1161  0018                     	;# 
  1162  001C                     	;# 
  1163  001C                     	;# 
  1164  001D                     	;# 
  1165  001D                     	;# 
  1166  001E                     	;# 
  1167  001F                     	;# 
  1168  008C                     	;# 
  1169  008C                     	;# 
  1170  008D                     	;# 
  1171  008E                     	;# 
  1172  008E                     	;# 
  1173  008F                     	;# 
  1174  0090                     	;# 
  1175  0090                     	;# 
  1176  0091                     	;# 
  1177  0093                     	;# 
  1178  0094                     	;# 
  1179  0095                     	;# 
  1180  0096                     	;# 
  1181  0097                     	;# 
  1182  0098                     	;# 
  1183  0099                     	;# 
  1184  009A                     	;# 
  1185  009B                     	;# 
  1186  009C                     	;# 
  1187  009D                     	;# 
  1188  009E                     	;# 
  1189  010C                     	;# 
  1190  010D                     	;# 
  1191  010E                     	;# 
  1192  010E                     	;# 
  1193  010F                     	;# 
  1194  0110                     	;# 
  1195  0110                     	;# 
  1196  0111                     	;# 
  1197  0112                     	;# 
  1198  0112                     	;# 
  1199  0113                     	;# 
  1200  0114                     	;# 
  1201  0114                     	;# 
  1202  0115                     	;# 
  1203  0116                     	;# 
  1204  0116                     	;# 
  1205  0117                     	;# 
  1206  0119                     	;# 
  1207  0119                     	;# 
  1208  0119                     	;# 
  1209  011A                     	;# 
  1210  011A                     	;# 
  1211  011A                     	;# 
  1212  011B                     	;# 
  1213  011B                     	;# 
  1214  011B                     	;# 
  1215  011B                     	;# 
  1216  011B                     	;# 
  1217  011C                     	;# 
  1218  011C                     	;# 
  1219  011C                     	;# 
  1220  011D                     	;# 
  1221  011D                     	;# 
  1222  011D                     	;# 
  1223  011E                     	;# 
  1224  011E                     	;# 
  1225  011E                     	;# 
  1226  011F                     	;# 
  1227  011F                     	;# 
  1228  011F                     	;# 
  1229  011F                     	;# 
  1230  011F                     	;# 
  1231  018C                     	;# 
  1232  018D                     	;# 
  1233  018E                     	;# 
  1234  018F                     	;# 
  1235  0190                     	;# 
  1236  0191                     	;# 
  1237  0192                     	;# 
  1238  0196                     	;# 
  1239  0197                     	;# 
  1240  0198                     	;# 
  1241  0199                     	;# 
  1242  019A                     	;# 
  1243  019B                     	;# 
  1244  019C                     	;# 
  1245  020C                     	;# 
  1246  020C                     	;# 
  1247  020D                     	;# 
  1248  020E                     	;# 
  1249  020F                     	;# 
  1250  020F                     	;# 
  1251  0210                     	;# 
  1252  0210                     	;# 
  1253  0211                     	;# 
  1254  0211                     	;# 
  1255  0212                     	;# 
  1256  0212                     	;# 
  1257  0213                     	;# 
  1258  0214                     	;# 
  1259  0215                     	;# 
  1260  0215                     	;# 
  1261  0216                     	;# 
  1262  0216                     	;# 
  1263  0217                     	;# 
  1264  0217                     	;# 
  1265  0218                     	;# 
  1266  0218                     	;# 
  1267  0219                     	;# 
  1268  021A                     	;# 
  1269  021B                     	;# 
  1270  021B                     	;# 
  1271  021C                     	;# 
  1272  021C                     	;# 
  1273  021D                     	;# 
  1274  021D                     	;# 
  1275  021E                     	;# 
  1276  021F                     	;# 
  1277  028C                     	;# 
  1278  028C                     	;# 
  1279  028D                     	;# 
  1280  028D                     	;# 
  1281  028E                     	;# 
  1282  028F                     	;# 
  1283  0290                     	;# 
  1284  0290                     	;# 
  1285  0291                     	;# 
  1286  0292                     	;# 
  1287  0292                     	;# 
  1288  0293                     	;# 
  1289  0293                     	;# 
  1290  0294                     	;# 
  1291  0295                     	;# 
  1292  0296                     	;# 
  1293  0296                     	;# 
  1294  0297                     	;# 
  1295  0298                     	;# 
  1296  0298                     	;# 
  1297  0299                     	;# 
  1298  0299                     	;# 
  1299  029A                     	;# 
  1300  029B                     	;# 
  1301  029C                     	;# 
  1302  029C                     	;# 
  1303  029D                     	;# 
  1304  030C                     	;# 
  1305  030C                     	;# 
  1306  030D                     	;# 
  1307  030E                     	;# 
  1308  030F                     	;# 
  1309  0310                     	;# 
  1310  0310                     	;# 
  1311  0311                     	;# 
  1312  0312                     	;# 
  1313  0313                     	;# 
  1314  0314                     	;# 
  1315  0314                     	;# 
  1316  0315                     	;# 
  1317  0316                     	;# 
  1318  0317                     	;# 
  1319  0318                     	;# 
  1320  0318                     	;# 
  1321  0319                     	;# 
  1322  031A                     	;# 
  1323  031B                     	;# 
  1324  031C                     	;# 
  1325  031C                     	;# 
  1326  031D                     	;# 
  1327  031E                     	;# 
  1328  031F                     	;# 
  1329  038C                     	;# 
  1330  038D                     	;# 
  1331  038E                     	;# 
  1332  0390                     	;# 
  1333  0391                     	;# 
  1334  0392                     	;# 
  1335  040C                     	;# 
  1336  040D                     	;# 
  1337  040E                     	;# 
  1338  040F                     	;# 
  1339  0410                     	;# 
  1340  0411                     	;# 
  1341  0416                     	;# 
  1342  0416                     	;# 
  1343  0417                     	;# 
  1344  0418                     	;# 
  1345  0418                     	;# 
  1346  0419                     	;# 
  1347  041A                     	;# 
  1348  041A                     	;# 
  1349  041B                     	;# 
  1350  041C                     	;# 
  1351  041C                     	;# 
  1352  041D                     	;# 
  1353  041E                     	;# 
  1354  041F                     	;# 
  1355  048C                     	;# 
  1356  048C                     	;# 
  1357  048D                     	;# 
  1358  048E                     	;# 
  1359  048F                     	;# 
  1360  048F                     	;# 
  1361  0490                     	;# 
  1362  0491                     	;# 
  1363  0492                     	;# 
  1364  0492                     	;# 
  1365  0493                     	;# 
  1366  0494                     	;# 
  1367  0495                     	;# 
  1368  0495                     	;# 
  1369  0496                     	;# 
  1370  0497                     	;# 
  1371  0498                     	;# 
  1372  0499                     	;# 
  1373  049A                     	;# 
  1374  049B                     	;# 
  1375  049C                     	;# 
  1376  049D                     	;# 
  1377  050C                     	;# 
  1378  050C                     	;# 
  1379  050D                     	;# 
  1380  050E                     	;# 
  1381  050F                     	;# 
  1382  050F                     	;# 
  1383  0510                     	;# 
  1384  0511                     	;# 
  1385  0512                     	;# 
  1386  0512                     	;# 
  1387  0513                     	;# 
  1388  0514                     	;# 
  1389  0515                     	;# 
  1390  0515                     	;# 
  1391  0516                     	;# 
  1392  0517                     	;# 
  1393  0518                     	;# 
  1394  0519                     	;# 
  1395  051A                     	;# 
  1396  051B                     	;# 
  1397  051C                     	;# 
  1398  051D                     	;# 
  1399  058C                     	;# 
  1400  058C                     	;# 
  1401  058D                     	;# 
  1402  058E                     	;# 
  1403  058F                     	;# 
  1404  058F                     	;# 
  1405  0590                     	;# 
  1406  0591                     	;# 
  1407  0592                     	;# 
  1408  0593                     	;# 
  1409  060C                     	;# 
  1410  060D                     	;# 
  1411  060E                     	;# 
  1412  060F                     	;# 
  1413  0610                     	;# 
  1414  0611                     	;# 
  1415  0612                     	;# 
  1416  0613                     	;# 
  1417  0614                     	;# 
  1418  0616                     	;# 
  1419  0617                     	;# 
  1420  0618                     	;# 
  1421  0619                     	;# 
  1422  061A                     	;# 
  1423  061B                     	;# 
  1424  061C                     	;# 
  1425  061D                     	;# 
  1426  061E                     	;# 
  1427  068C                     	;# 
  1428  068D                     	;# 
  1429  068E                     	;# 
  1430  068F                     	;# 
  1431  0690                     	;# 
  1432  0691                     	;# 
  1433  0692                     	;# 
  1434  0693                     	;# 
  1435  0694                     	;# 
  1436  070C                     	;# 
  1437  070D                     	;# 
  1438  070E                     	;# 
  1439  070F                     	;# 
  1440  0710                     	;# 
  1441  0711                     	;# 
  1442  0712                     	;# 
  1443  0713                     	;# 
  1444  0714                     	;# 
  1445  0716                     	;# 
  1446  0717                     	;# 
  1447  0718                     	;# 
  1448  0719                     	;# 
  1449  071A                     	;# 
  1450  071B                     	;# 
  1451  071C                     	;# 
  1452  071D                     	;# 
  1453  071E                     	;# 
  1454  0796                     	;# 
  1455  0797                     	;# 
  1456  0798                     	;# 
  1457  0799                     	;# 
  1458  079A                     	;# 
  1459  079B                     	;# 
  1460  080C                     	;# 
  1461  080D                     	;# 
  1462  080E                     	;# 
  1463  080F                     	;# 
  1464  0810                     	;# 
  1465  0811                     	;# 
  1466  0812                     	;# 
  1467  0813                     	;# 
  1468  0814                     	;# 
  1469  081A                     	;# 
  1470  081B                     	;# 
  1471  081C                     	;# 
  1472  081D                     	;# 
  1473  081E                     	;# 
  1474  081F                     	;# 
  1475  088C                     	;# 
  1476  088D                     	;# 
  1477  088E                     	;# 
  1478  088F                     	;# 
  1479  0890                     	;# 
  1480  0891                     	;# 
  1481  0892                     	;# 
  1482  0893                     	;# 
  1483  0895                     	;# 
  1484  0896                     	;# 
  1485  0897                     	;# 
  1486  0898                     	;# 
  1487  0899                     	;# 
  1488  089A                     	;# 
  1489  089B                     	;# 
  1490  090C                     	;# 
  1491  090E                     	;# 
  1492  090F                     	;# 
  1493  091F                     	;# 
  1494  091F                     	;# 
  1495  098F                     	;# 
  1496  098F                     	;# 
  1497  0990                     	;# 
  1498  0991                     	;# 
  1499  0992                     	;# 
  1500  0993                     	;# 
  1501  0994                     	;# 
  1502  0995                     	;# 
  1503  0996                     	;# 
  1504  0997                     	;# 
  1505  0E0F                     	;# 
  1506  0E10                     	;# 
  1507  0E11                     	;# 
  1508  0E12                     	;# 
  1509  0E13                     	;# 
  1510  0E14                     	;# 
  1511  0E15                     	;# 
  1512  0E16                     	;# 
  1513  0E17                     	;# 
  1514  0E18                     	;# 
  1515  0E19                     	;# 
  1516  0E1A                     	;# 
  1517  0E1B                     	;# 
  1518  0E1C                     	;# 
  1519  0E1D                     	;# 
  1520  0E1E                     	;# 
  1521  0E1F                     	;# 
  1522  0E20                     	;# 
  1523  0E21                     	;# 
  1524  0E22                     	;# 
  1525  0E23                     	;# 
  1526  0E24                     	;# 
  1527  0E25                     	;# 
  1528  0E26                     	;# 
  1529  0E27                     	;# 
  1530  0E28                     	;# 
  1531  0E29                     	;# 
  1532  0E2A                     	;# 
  1533  0E2B                     	;# 
  1534  0E2C                     	;# 
  1535  0E2D                     	;# 
  1536  0E2E                     	;# 
  1537  0E2F                     	;# 
  1538  0E30                     	;# 
  1539  0E31                     	;# 
  1540  0E32                     	;# 
  1541  0E33                     	;# 
  1542  0E34                     	;# 
  1543  0E35                     	;# 
  1544  0E36                     	;# 
  1545  0E37                     	;# 
  1546  0E8F                     	;# 
  1547  0E90                     	;# 
  1548  0E91                     	;# 
  1549  0E92                     	;# 
  1550  0E93                     	;# 
  1551  0E94                     	;# 
  1552  0E95                     	;# 
  1553  0E96                     	;# 
  1554  0E97                     	;# 
  1555  0E9C                     	;# 
  1556  0E9D                     	;# 
  1557  0E9E                     	;# 
  1558  0EA1                     	;# 
  1559  0EA2                     	;# 
  1560  0EA3                     	;# 
  1561  0EA4                     	;# 
  1562  0EA5                     	;# 
  1563  0EA9                     	;# 
  1564  0EAA                     	;# 
  1565  0EAB                     	;# 
  1566  0EAC                     	;# 
  1567  0EB1                     	;# 
  1568  0EB2                     	;# 
  1569  0EB3                     	;# 
  1570  0EB8                     	;# 
  1571  0EB9                     	;# 
  1572  0EBA                     	;# 
  1573  0EBB                     	;# 
  1574  0EBC                     	;# 
  1575  0EBD                     	;# 
  1576  0EBE                     	;# 
  1577  0EC3                     	;# 
  1578  0EC5                     	;# 
  1579  0EC6                     	;# 
  1580  0EC7                     	;# 
  1581  0EC8                     	;# 
  1582  0EC9                     	;# 
  1583  0ECA                     	;# 
  1584  0ECB                     	;# 
  1585  0ECC                     	;# 
  1586  0F10                     	;# 
  1587  0F11                     	;# 
  1588  0F12                     	;# 
  1589  0F13                     	;# 
  1590  0F14                     	;# 
  1591  0F15                     	;# 
  1592  0F16                     	;# 
  1593  0F17                     	;# 
  1594  0F18                     	;# 
  1595  0F19                     	;# 
  1596  0F1A                     	;# 
  1597  0F1B                     	;# 
  1598  0F1C                     	;# 
  1599  0F1D                     	;# 
  1600  0F1E                     	;# 
  1601  0F1F                     	;# 
  1602  0F20                     	;# 
  1603  0F21                     	;# 
  1604  0F22                     	;# 
  1605  0F23                     	;# 
  1606  0F24                     	;# 
  1607  0F25                     	;# 
  1608  0F26                     	;# 
  1609  0F27                     	;# 
  1610  0F38                     	;# 
  1611  0F39                     	;# 
  1612  0F3A                     	;# 
  1613  0F3B                     	;# 
  1614  0F3C                     	;# 
  1615  0F3D                     	;# 
  1616  0F3E                     	;# 
  1617  0F3F                     	;# 
  1618  0F40                     	;# 
  1619  0F41                     	;# 
  1620  0F43                     	;# 
  1621  0F44                     	;# 
  1622  0F45                     	;# 
  1623  0F46                     	;# 
  1624  0F47                     	;# 
  1625  0F48                     	;# 
  1626  0F49                     	;# 
  1627  0F4A                     	;# 
  1628  0F4B                     	;# 
  1629  0F4C                     	;# 
  1630  0F4E                     	;# 
  1631  0F4F                     	;# 
  1632  0F50                     	;# 
  1633  0F51                     	;# 
  1634  0F52                     	;# 
  1635  0F53                     	;# 
  1636  0F54                     	;# 
  1637  0F55                     	;# 
  1638  0F56                     	;# 
  1639  0F57                     	;# 
  1640  0F65                     	;# 
  1641  0F68                     	;# 
  1642  0F69                     	;# 
  1643  0F6A                     	;# 
  1644  0F6B                     	;# 
  1645  0FE4                     	;# 
  1646  0FE5                     	;# 
  1647  0FE6                     	;# 
  1648  0FE7                     	;# 
  1649  0FE8                     	;# 
  1650  0FE9                     	;# 
  1651  0FEA                     	;# 
  1652  0FEB                     	;# 
  1653  0FED                     	;# 
  1654  0FEE                     	;# 
  1655  0FEF                     	;# 
  1656  0000                     	;# 
  1657  0001                     	;# 
  1658  0002                     	;# 
  1659  0003                     	;# 
  1660  0004                     	;# 
  1661  0005                     	;# 
  1662  0006                     	;# 
  1663  0007                     	;# 
  1664  0008                     	;# 
  1665  0009                     	;# 
  1666  000A                     	;# 
  1667  000B                     	;# 
  1668  000C                     	;# 
  1669  000D                     	;# 
  1670  000E                     	;# 
  1671  0010                     	;# 
  1672  0011                     	;# 
  1673  0012                     	;# 
  1674  0013                     	;# 
  1675  0016                     	;# 
  1676  0017                     	;# 
  1677  0018                     	;# 
  1678  001C                     	;# 
  1679  001C                     	;# 
  1680  001D                     	;# 
  1681  001D                     	;# 
  1682  001E                     	;# 
  1683  001F                     	;# 
  1684  008C                     	;# 
  1685  008C                     	;# 
  1686  008D                     	;# 
  1687  008E                     	;# 
  1688  008E                     	;# 
  1689  008F                     	;# 
  1690  0090                     	;# 
  1691  0090                     	;# 
  1692  0091                     	;# 
  1693  0093                     	;# 
  1694  0094                     	;# 
  1695  0095                     	;# 
  1696  0096                     	;# 
  1697  0097                     	;# 
  1698  0098                     	;# 
  1699  0099                     	;# 
  1700  009A                     	;# 
  1701  009B                     	;# 
  1702  009C                     	;# 
  1703  009D                     	;# 
  1704  009E                     	;# 
  1705  010C                     	;# 
  1706  010D                     	;# 
  1707  010E                     	;# 
  1708  010E                     	;# 
  1709  010F                     	;# 
  1710  0110                     	;# 
  1711  0110                     	;# 
  1712  0111                     	;# 
  1713  0112                     	;# 
  1714  0112                     	;# 
  1715  0113                     	;# 
  1716  0114                     	;# 
  1717  0114                     	;# 
  1718  0115                     	;# 
  1719  0116                     	;# 
  1720  0116                     	;# 
  1721  0117                     	;# 
  1722  0119                     	;# 
  1723  0119                     	;# 
  1724  0119                     	;# 
  1725  011A                     	;# 
  1726  011A                     	;# 
  1727  011A                     	;# 
  1728  011B                     	;# 
  1729  011B                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011C                     	;# 
  1734  011C                     	;# 
  1735  011C                     	;# 
  1736  011D                     	;# 
  1737  011D                     	;# 
  1738  011D                     	;# 
  1739  011E                     	;# 
  1740  011E                     	;# 
  1741  011E                     	;# 
  1742  011F                     	;# 
  1743  011F                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  018C                     	;# 
  1748  018D                     	;# 
  1749  018E                     	;# 
  1750  018F                     	;# 
  1751  0190                     	;# 
  1752  0191                     	;# 
  1753  0192                     	;# 
  1754  0196                     	;# 
  1755  0197                     	;# 
  1756  0198                     	;# 
  1757  0199                     	;# 
  1758  019A                     	;# 
  1759  019B                     	;# 
  1760  019C                     	;# 
  1761  020C                     	;# 
  1762  020C                     	;# 
  1763  020D                     	;# 
  1764  020E                     	;# 
  1765  020F                     	;# 
  1766  020F                     	;# 
  1767  0210                     	;# 
  1768  0210                     	;# 
  1769  0211                     	;# 
  1770  0211                     	;# 
  1771  0212                     	;# 
  1772  0212                     	;# 
  1773  0213                     	;# 
  1774  0214                     	;# 
  1775  0215                     	;# 
  1776  0215                     	;# 
  1777  0216                     	;# 
  1778  0216                     	;# 
  1779  0217                     	;# 
  1780  0217                     	;# 
  1781  0218                     	;# 
  1782  0218                     	;# 
  1783  0219                     	;# 
  1784  021A                     	;# 
  1785  021B                     	;# 
  1786  021B                     	;# 
  1787  021C                     	;# 
  1788  021C                     	;# 
  1789  021D                     	;# 
  1790  021D                     	;# 
  1791  021E                     	;# 
  1792  021F                     	;# 
  1793  028C                     	;# 
  1794  028C                     	;# 
  1795  028D                     	;# 
  1796  028D                     	;# 
  1797  028E                     	;# 
  1798  028F                     	;# 
  1799  0290                     	;# 
  1800  0290                     	;# 
  1801  0291                     	;# 
  1802  0292                     	;# 
  1803  0292                     	;# 
  1804  0293                     	;# 
  1805  0293                     	;# 
  1806  0294                     	;# 
  1807  0295                     	;# 
  1808  0296                     	;# 
  1809  0296                     	;# 
  1810  0297                     	;# 
  1811  0298                     	;# 
  1812  0298                     	;# 
  1813  0299                     	;# 
  1814  0299                     	;# 
  1815  029A                     	;# 
  1816  029B                     	;# 
  1817  029C                     	;# 
  1818  029C                     	;# 
  1819  029D                     	;# 
  1820  030C                     	;# 
  1821  030C                     	;# 
  1822  030D                     	;# 
  1823  030E                     	;# 
  1824  030F                     	;# 
  1825  0310                     	;# 
  1826  0310                     	;# 
  1827  0311                     	;# 
  1828  0312                     	;# 
  1829  0313                     	;# 
  1830  0314                     	;# 
  1831  0314                     	;# 
  1832  0315                     	;# 
  1833  0316                     	;# 
  1834  0317                     	;# 
  1835  0318                     	;# 
  1836  0318                     	;# 
  1837  0319                     	;# 
  1838  031A                     	;# 
  1839  031B                     	;# 
  1840  031C                     	;# 
  1841  031C                     	;# 
  1842  031D                     	;# 
  1843  031E                     	;# 
  1844  031F                     	;# 
  1845  038C                     	;# 
  1846  038D                     	;# 
  1847  038E                     	;# 
  1848  0390                     	;# 
  1849  0391                     	;# 
  1850  0392                     	;# 
  1851  040C                     	;# 
  1852  040D                     	;# 
  1853  040E                     	;# 
  1854  040F                     	;# 
  1855  0410                     	;# 
  1856  0411                     	;# 
  1857  0416                     	;# 
  1858  0416                     	;# 
  1859  0417                     	;# 
  1860  0418                     	;# 
  1861  0418                     	;# 
  1862  0419                     	;# 
  1863  041A                     	;# 
  1864  041A                     	;# 
  1865  041B                     	;# 
  1866  041C                     	;# 
  1867  041C                     	;# 
  1868  041D                     	;# 
  1869  041E                     	;# 
  1870  041F                     	;# 
  1871  048C                     	;# 
  1872  048C                     	;# 
  1873  048D                     	;# 
  1874  048E                     	;# 
  1875  048F                     	;# 
  1876  048F                     	;# 
  1877  0490                     	;# 
  1878  0491                     	;# 
  1879  0492                     	;# 
  1880  0492                     	;# 
  1881  0493                     	;# 
  1882  0494                     	;# 
  1883  0495                     	;# 
  1884  0495                     	;# 
  1885  0496                     	;# 
  1886  0497                     	;# 
  1887  0498                     	;# 
  1888  0499                     	;# 
  1889  049A                     	;# 
  1890  049B                     	;# 
  1891  049C                     	;# 
  1892  049D                     	;# 
  1893  050C                     	;# 
  1894  050C                     	;# 
  1895  050D                     	;# 
  1896  050E                     	;# 
  1897  050F                     	;# 
  1898  050F                     	;# 
  1899  0510                     	;# 
  1900  0511                     	;# 
  1901  0512                     	;# 
  1902  0512                     	;# 
  1903  0513                     	;# 
  1904  0514                     	;# 
  1905  0515                     	;# 
  1906  0515                     	;# 
  1907  0516                     	;# 
  1908  0517                     	;# 
  1909  0518                     	;# 
  1910  0519                     	;# 
  1911  051A                     	;# 
  1912  051B                     	;# 
  1913  051C                     	;# 
  1914  051D                     	;# 
  1915  058C                     	;# 
  1916  058C                     	;# 
  1917  058D                     	;# 
  1918  058E                     	;# 
  1919  058F                     	;# 
  1920  058F                     	;# 
  1921  0590                     	;# 
  1922  0591                     	;# 
  1923  0592                     	;# 
  1924  0593                     	;# 
  1925  060C                     	;# 
  1926  060D                     	;# 
  1927  060E                     	;# 
  1928  060F                     	;# 
  1929  0610                     	;# 
  1930  0611                     	;# 
  1931  0612                     	;# 
  1932  0613                     	;# 
  1933  0614                     	;# 
  1934  0616                     	;# 
  1935  0617                     	;# 
  1936  0618                     	;# 
  1937  0619                     	;# 
  1938  061A                     	;# 
  1939  061B                     	;# 
  1940  061C                     	;# 
  1941  061D                     	;# 
  1942  061E                     	;# 
  1943  068C                     	;# 
  1944  068D                     	;# 
  1945  068E                     	;# 
  1946  068F                     	;# 
  1947  0690                     	;# 
  1948  0691                     	;# 
  1949  0692                     	;# 
  1950  0693                     	;# 
  1951  0694                     	;# 
  1952  070C                     	;# 
  1953  070D                     	;# 
  1954  070E                     	;# 
  1955  070F                     	;# 
  1956  0710                     	;# 
  1957  0711                     	;# 
  1958  0712                     	;# 
  1959  0713                     	;# 
  1960  0714                     	;# 
  1961  0716                     	;# 
  1962  0717                     	;# 
  1963  0718                     	;# 
  1964  0719                     	;# 
  1965  071A                     	;# 
  1966  071B                     	;# 
  1967  071C                     	;# 
  1968  071D                     	;# 
  1969  071E                     	;# 
  1970  0796                     	;# 
  1971  0797                     	;# 
  1972  0798                     	;# 
  1973  0799                     	;# 
  1974  079A                     	;# 
  1975  079B                     	;# 
  1976  080C                     	;# 
  1977  080D                     	;# 
  1978  080E                     	;# 
  1979  080F                     	;# 
  1980  0810                     	;# 
  1981  0811                     	;# 
  1982  0812                     	;# 
  1983  0813                     	;# 
  1984  0814                     	;# 
  1985  081A                     	;# 
  1986  081B                     	;# 
  1987  081C                     	;# 
  1988  081D                     	;# 
  1989  081E                     	;# 
  1990  081F                     	;# 
  1991  088C                     	;# 
  1992  088D                     	;# 
  1993  088E                     	;# 
  1994  088F                     	;# 
  1995  0890                     	;# 
  1996  0891                     	;# 
  1997  0892                     	;# 
  1998  0893                     	;# 
  1999  0895                     	;# 
  2000  0896                     	;# 
  2001  0897                     	;# 
  2002  0898                     	;# 
  2003  0899                     	;# 
  2004  089A                     	;# 
  2005  089B                     	;# 
  2006  090C                     	;# 
  2007  090E                     	;# 
  2008  090F                     	;# 
  2009  091F                     	;# 
  2010  091F                     	;# 
  2011  098F                     	;# 
  2012  098F                     	;# 
  2013  0990                     	;# 
  2014  0991                     	;# 
  2015  0992                     	;# 
  2016  0993                     	;# 
  2017  0994                     	;# 
  2018  0995                     	;# 
  2019  0996                     	;# 
  2020  0997                     	;# 
  2021  0E0F                     	;# 
  2022  0E10                     	;# 
  2023  0E11                     	;# 
  2024  0E12                     	;# 
  2025  0E13                     	;# 
  2026  0E14                     	;# 
  2027  0E15                     	;# 
  2028  0E16                     	;# 
  2029  0E17                     	;# 
  2030  0E18                     	;# 
  2031  0E19                     	;# 
  2032  0E1A                     	;# 
  2033  0E1B                     	;# 
  2034  0E1C                     	;# 
  2035  0E1D                     	;# 
  2036  0E1E                     	;# 
  2037  0E1F                     	;# 
  2038  0E20                     	;# 
  2039  0E21                     	;# 
  2040  0E22                     	;# 
  2041  0E23                     	;# 
  2042  0E24                     	;# 
  2043  0E25                     	;# 
  2044  0E26                     	;# 
  2045  0E27                     	;# 
  2046  0E28                     	;# 
  2047  0E29                     	;# 
  2048  0E2A                     	;# 
  2049  0E2B                     	;# 
  2050  0E2C                     	;# 
  2051  0E2D                     	;# 
  2052  0E2E                     	;# 
  2053  0E2F                     	;# 
  2054  0E30                     	;# 
  2055  0E31                     	;# 
  2056  0E32                     	;# 
  2057  0E33                     	;# 
  2058  0E34                     	;# 
  2059  0E35                     	;# 
  2060  0E36                     	;# 
  2061  0E37                     	;# 
  2062  0E8F                     	;# 
  2063  0E90                     	;# 
  2064  0E91                     	;# 
  2065  0E92                     	;# 
  2066  0E93                     	;# 
  2067  0E94                     	;# 
  2068  0E95                     	;# 
  2069  0E96                     	;# 
  2070  0E97                     	;# 
  2071  0E9C                     	;# 
  2072  0E9D                     	;# 
  2073  0E9E                     	;# 
  2074  0EA1                     	;# 
  2075  0EA2                     	;# 
  2076  0EA3                     	;# 
  2077  0EA4                     	;# 
  2078  0EA5                     	;# 
  2079  0EA9                     	;# 
  2080  0EAA                     	;# 
  2081  0EAB                     	;# 
  2082  0EAC                     	;# 
  2083  0EB1                     	;# 
  2084  0EB2                     	;# 
  2085  0EB3                     	;# 
  2086  0EB8                     	;# 
  2087  0EB9                     	;# 
  2088  0EBA                     	;# 
  2089  0EBB                     	;# 
  2090  0EBC                     	;# 
  2091  0EBD                     	;# 
  2092  0EBE                     	;# 
  2093  0EC3                     	;# 
  2094  0EC5                     	;# 
  2095  0EC6                     	;# 
  2096  0EC7                     	;# 
  2097  0EC8                     	;# 
  2098  0EC9                     	;# 
  2099  0ECA                     	;# 
  2100  0ECB                     	;# 
  2101  0ECC                     	;# 
  2102  0F10                     	;# 
  2103  0F11                     	;# 
  2104  0F12                     	;# 
  2105  0F13                     	;# 
  2106  0F14                     	;# 
  2107  0F15                     	;# 
  2108  0F16                     	;# 
  2109  0F17                     	;# 
  2110  0F18                     	;# 
  2111  0F19                     	;# 
  2112  0F1A                     	;# 
  2113  0F1B                     	;# 
  2114  0F1C                     	;# 
  2115  0F1D                     	;# 
  2116  0F1E                     	;# 
  2117  0F1F                     	;# 
  2118  0F20                     	;# 
  2119  0F21                     	;# 
  2120  0F22                     	;# 
  2121  0F23                     	;# 
  2122  0F24                     	;# 
  2123  0F25                     	;# 
  2124  0F26                     	;# 
  2125  0F27                     	;# 
  2126  0F38                     	;# 
  2127  0F39                     	;# 
  2128  0F3A                     	;# 
  2129  0F3B                     	;# 
  2130  0F3C                     	;# 
  2131  0F3D                     	;# 
  2132  0F3E                     	;# 
  2133  0F3F                     	;# 
  2134  0F40                     	;# 
  2135  0F41                     	;# 
  2136  0F43                     	;# 
  2137  0F44                     	;# 
  2138  0F45                     	;# 
  2139  0F46                     	;# 
  2140  0F47                     	;# 
  2141  0F48                     	;# 
  2142  0F49                     	;# 
  2143  0F4A                     	;# 
  2144  0F4B                     	;# 
  2145  0F4C                     	;# 
  2146  0F4E                     	;# 
  2147  0F4F                     	;# 
  2148  0F50                     	;# 
  2149  0F51                     	;# 
  2150  0F52                     	;# 
  2151  0F53                     	;# 
  2152  0F54                     	;# 
  2153  0F55                     	;# 
  2154  0F56                     	;# 
  2155  0F57                     	;# 
  2156  0F65                     	;# 
  2157  0F68                     	;# 
  2158  0F69                     	;# 
  2159  0F6A                     	;# 
  2160  0F6B                     	;# 
  2161  0FE4                     	;# 
  2162  0FE5                     	;# 
  2163  0FE6                     	;# 
  2164  0FE7                     	;# 
  2165  0FE8                     	;# 
  2166  0FE9                     	;# 
  2167  0FEA                     	;# 
  2168  0FEB                     	;# 
  2169  0FED                     	;# 
  2170  0FEE                     	;# 
  2171  0FEF                     	;# 
  2172  0000                     	;# 
  2173  0001                     	;# 
  2174  0002                     	;# 
  2175  0003                     	;# 
  2176  0004                     	;# 
  2177  0005                     	;# 
  2178  0006                     	;# 
  2179  0007                     	;# 
  2180  0008                     	;# 
  2181  0009                     	;# 
  2182  000A                     	;# 
  2183  000B                     	;# 
  2184  000C                     	;# 
  2185  000D                     	;# 
  2186  000E                     	;# 
  2187  0010                     	;# 
  2188  0011                     	;# 
  2189  0012                     	;# 
  2190  0013                     	;# 
  2191  0016                     	;# 
  2192  0017                     	;# 
  2193  0018                     	;# 
  2194  001C                     	;# 
  2195  001C                     	;# 
  2196  001D                     	;# 
  2197  001D                     	;# 
  2198  001E                     	;# 
  2199  001F                     	;# 
  2200  008C                     	;# 
  2201  008C                     	;# 
  2202  008D                     	;# 
  2203  008E                     	;# 
  2204  008E                     	;# 
  2205  008F                     	;# 
  2206  0090                     	;# 
  2207  0090                     	;# 
  2208  0091                     	;# 
  2209  0093                     	;# 
  2210  0094                     	;# 
  2211  0095                     	;# 
  2212  0096                     	;# 
  2213  0097                     	;# 
  2214  0098                     	;# 
  2215  0099                     	;# 
  2216  009A                     	;# 
  2217  009B                     	;# 
  2218  009C                     	;# 
  2219  009D                     	;# 
  2220  009E                     	;# 
  2221  010C                     	;# 
  2222  010D                     	;# 
  2223  010E                     	;# 
  2224  010E                     	;# 
  2225  010F                     	;# 
  2226  0110                     	;# 
  2227  0110                     	;# 
  2228  0111                     	;# 
  2229  0112                     	;# 
  2230  0112                     	;# 
  2231  0113                     	;# 
  2232  0114                     	;# 
  2233  0114                     	;# 
  2234  0115                     	;# 
  2235  0116                     	;# 
  2236  0116                     	;# 
  2237  0117                     	;# 
  2238  0119                     	;# 
  2239  0119                     	;# 
  2240  0119                     	;# 
  2241  011A                     	;# 
  2242  011A                     	;# 
  2243  011A                     	;# 
  2244  011B                     	;# 
  2245  011B                     	;# 
  2246  011B                     	;# 
  2247  011B                     	;# 
  2248  011B                     	;# 
  2249  011C                     	;# 
  2250  011C                     	;# 
  2251  011C                     	;# 
  2252  011D                     	;# 
  2253  011D                     	;# 
  2254  011D                     	;# 
  2255  011E                     	;# 
  2256  011E                     	;# 
  2257  011E                     	;# 
  2258  011F                     	;# 
  2259  011F                     	;# 
  2260  011F                     	;# 
  2261  011F                     	;# 
  2262  011F                     	;# 
  2263  018C                     	;# 
  2264  018D                     	;# 
  2265  018E                     	;# 
  2266  018F                     	;# 
  2267  0190                     	;# 
  2268  0191                     	;# 
  2269  0192                     	;# 
  2270  0196                     	;# 
  2271  0197                     	;# 
  2272  0198                     	;# 
  2273  0199                     	;# 
  2274  019A                     	;# 
  2275  019B                     	;# 
  2276  019C                     	;# 
  2277  020C                     	;# 
  2278  020C                     	;# 
  2279  020D                     	;# 
  2280  020E                     	;# 
  2281  020F                     	;# 
  2282  020F                     	;# 
  2283  0210                     	;# 
  2284  0210                     	;# 
  2285  0211                     	;# 
  2286  0211                     	;# 
  2287  0212                     	;# 
  2288  0212                     	;# 
  2289  0213                     	;# 
  2290  0214                     	;# 
  2291  0215                     	;# 
  2292  0215                     	;# 
  2293  0216                     	;# 
  2294  0216                     	;# 
  2295  0217                     	;# 
  2296  0217                     	;# 
  2297  0218                     	;# 
  2298  0218                     	;# 
  2299  0219                     	;# 
  2300  021A                     	;# 
  2301  021B                     	;# 
  2302  021B                     	;# 
  2303  021C                     	;# 
  2304  021C                     	;# 
  2305  021D                     	;# 
  2306  021D                     	;# 
  2307  021E                     	;# 
  2308  021F                     	;# 
  2309  028C                     	;# 
  2310  028C                     	;# 
  2311  028D                     	;# 
  2312  028D                     	;# 
  2313  028E                     	;# 
  2314  028F                     	;# 
  2315  0290                     	;# 
  2316  0290                     	;# 
  2317  0291                     	;# 
  2318  0292                     	;# 
  2319  0292                     	;# 
  2320  0293                     	;# 
  2321  0293                     	;# 
  2322  0294                     	;# 
  2323  0295                     	;# 
  2324  0296                     	;# 
  2325  0296                     	;# 
  2326  0297                     	;# 
  2327  0298                     	;# 
  2328  0298                     	;# 
  2329  0299                     	;# 
  2330  0299                     	;# 
  2331  029A                     	;# 
  2332  029B                     	;# 
  2333  029C                     	;# 
  2334  029C                     	;# 
  2335  029D                     	;# 
  2336  030C                     	;# 
  2337  030C                     	;# 
  2338  030D                     	;# 
  2339  030E                     	;# 
  2340  030F                     	;# 
  2341  0310                     	;# 
  2342  0310                     	;# 
  2343  0311                     	;# 
  2344  0312                     	;# 
  2345  0313                     	;# 
  2346  0314                     	;# 
  2347  0314                     	;# 
  2348  0315                     	;# 
  2349  0316                     	;# 
  2350  0317                     	;# 
  2351  0318                     	;# 
  2352  0318                     	;# 
  2353  0319                     	;# 
  2354  031A                     	;# 
  2355  031B                     	;# 
  2356  031C                     	;# 
  2357  031C                     	;# 
  2358  031D                     	;# 
  2359  031E                     	;# 
  2360  031F                     	;# 
  2361  038C                     	;# 
  2362  038D                     	;# 
  2363  038E                     	;# 
  2364  0390                     	;# 
  2365  0391                     	;# 
  2366  0392                     	;# 
  2367  040C                     	;# 
  2368  040D                     	;# 
  2369  040E                     	;# 
  2370  040F                     	;# 
  2371  0410                     	;# 
  2372  0411                     	;# 
  2373  0416                     	;# 
  2374  0416                     	;# 
  2375  0417                     	;# 
  2376  0418                     	;# 
  2377  0418                     	;# 
  2378  0419                     	;# 
  2379  041A                     	;# 
  2380  041A                     	;# 
  2381  041B                     	;# 
  2382  041C                     	;# 
  2383  041C                     	;# 
  2384  041D                     	;# 
  2385  041E                     	;# 
  2386  041F                     	;# 
  2387  048C                     	;# 
  2388  048C                     	;# 
  2389  048D                     	;# 
  2390  048E                     	;# 
  2391  048F                     	;# 
  2392  048F                     	;# 
  2393  0490                     	;# 
  2394  0491                     	;# 
  2395  0492                     	;# 
  2396  0492                     	;# 
  2397  0493                     	;# 
  2398  0494                     	;# 
  2399  0495                     	;# 
  2400  0495                     	;# 
  2401  0496                     	;# 
  2402  0497                     	;# 
  2403  0498                     	;# 
  2404  0499                     	;# 
  2405  049A                     	;# 
  2406  049B                     	;# 
  2407  049C                     	;# 
  2408  049D                     	;# 
  2409  050C                     	;# 
  2410  050C                     	;# 
  2411  050D                     	;# 
  2412  050E                     	;# 
  2413  050F                     	;# 
  2414  050F                     	;# 
  2415  0510                     	;# 
  2416  0511                     	;# 
  2417  0512                     	;# 
  2418  0512                     	;# 
  2419  0513                     	;# 
  2420  0514                     	;# 
  2421  0515                     	;# 
  2422  0515                     	;# 
  2423  0516                     	;# 
  2424  0517                     	;# 
  2425  0518                     	;# 
  2426  0519                     	;# 
  2427  051A                     	;# 
  2428  051B                     	;# 
  2429  051C                     	;# 
  2430  051D                     	;# 
  2431  058C                     	;# 
  2432  058C                     	;# 
  2433  058D                     	;# 
  2434  058E                     	;# 
  2435  058F                     	;# 
  2436  058F                     	;# 
  2437  0590                     	;# 
  2438  0591                     	;# 
  2439  0592                     	;# 
  2440  0593                     	;# 
  2441  060C                     	;# 
  2442  060D                     	;# 
  2443  060E                     	;# 
  2444  060F                     	;# 
  2445  0610                     	;# 
  2446  0611                     	;# 
  2447  0612                     	;# 
  2448  0613                     	;# 
  2449  0614                     	;# 
  2450  0616                     	;# 
  2451  0617                     	;# 
  2452  0618                     	;# 
  2453  0619                     	;# 
  2454  061A                     	;# 
  2455  061B                     	;# 
  2456  061C                     	;# 
  2457  061D                     	;# 
  2458  061E                     	;# 
  2459  068C                     	;# 
  2460  068D                     	;# 
  2461  068E                     	;# 
  2462  068F                     	;# 
  2463  0690                     	;# 
  2464  0691                     	;# 
  2465  0692                     	;# 
  2466  0693                     	;# 
  2467  0694                     	;# 
  2468  070C                     	;# 
  2469  070D                     	;# 
  2470  070E                     	;# 
  2471  070F                     	;# 
  2472  0710                     	;# 
  2473  0711                     	;# 
  2474  0712                     	;# 
  2475  0713                     	;# 
  2476  0714                     	;# 
  2477  0716                     	;# 
  2478  0717                     	;# 
  2479  0718                     	;# 
  2480  0719                     	;# 
  2481  071A                     	;# 
  2482  071B                     	;# 
  2483  071C                     	;# 
  2484  071D                     	;# 
  2485  071E                     	;# 
  2486  0796                     	;# 
  2487  0797                     	;# 
  2488  0798                     	;# 
  2489  0799                     	;# 
  2490  079A                     	;# 
  2491  079B                     	;# 
  2492  080C                     	;# 
  2493  080D                     	;# 
  2494  080E                     	;# 
  2495  080F                     	;# 
  2496  0810                     	;# 
  2497  0811                     	;# 
  2498  0812                     	;# 
  2499  0813                     	;# 
  2500  0814                     	;# 
  2501  081A                     	;# 
  2502  081B                     	;# 
  2503  081C                     	;# 
  2504  081D                     	;# 
  2505  081E                     	;# 
  2506  081F                     	;# 
  2507  088C                     	;# 
  2508  088D                     	;# 
  2509  088E                     	;# 
  2510  088F                     	;# 
  2511  0890                     	;# 
  2512  0891                     	;# 
  2513  0892                     	;# 
  2514  0893                     	;# 
  2515  0895                     	;# 
  2516  0896                     	;# 
  2517  0897                     	;# 
  2518  0898                     	;# 
  2519  0899                     	;# 
  2520  089A                     	;# 
  2521  089B                     	;# 
  2522  090C                     	;# 
  2523  090E                     	;# 
  2524  090F                     	;# 
  2525  091F                     	;# 
  2526  091F                     	;# 
  2527  098F                     	;# 
  2528  098F                     	;# 
  2529  0990                     	;# 
  2530  0991                     	;# 
  2531  0992                     	;# 
  2532  0993                     	;# 
  2533  0994                     	;# 
  2534  0995                     	;# 
  2535  0996                     	;# 
  2536  0997                     	;# 
  2537  0E0F                     	;# 
  2538  0E10                     	;# 
  2539  0E11                     	;# 
  2540  0E12                     	;# 
  2541  0E13                     	;# 
  2542  0E14                     	;# 
  2543  0E15                     	;# 
  2544  0E16                     	;# 
  2545  0E17                     	;# 
  2546  0E18                     	;# 
  2547  0E19                     	;# 
  2548  0E1A                     	;# 
  2549  0E1B                     	;# 
  2550  0E1C                     	;# 
  2551  0E1D                     	;# 
  2552  0E1E                     	;# 
  2553  0E1F                     	;# 
  2554  0E20                     	;# 
  2555  0E21                     	;# 
  2556  0E22                     	;# 
  2557  0E23                     	;# 
  2558  0E24                     	;# 
  2559  0E25                     	;# 
  2560  0E26                     	;# 
  2561  0E27                     	;# 
  2562  0E28                     	;# 
  2563  0E29                     	;# 
  2564  0E2A                     	;# 
  2565  0E2B                     	;# 
  2566  0E2C                     	;# 
  2567  0E2D                     	;# 
  2568  0E2E                     	;# 
  2569  0E2F                     	;# 
  2570  0E30                     	;# 
  2571  0E31                     	;# 
  2572  0E32                     	;# 
  2573  0E33                     	;# 
  2574  0E34                     	;# 
  2575  0E35                     	;# 
  2576  0E36                     	;# 
  2577  0E37                     	;# 
  2578  0E8F                     	;# 
  2579  0E90                     	;# 
  2580  0E91                     	;# 
  2581  0E92                     	;# 
  2582  0E93                     	;# 
  2583  0E94                     	;# 
  2584  0E95                     	;# 
  2585  0E96                     	;# 
  2586  0E97                     	;# 
  2587  0E9C                     	;# 
  2588  0E9D                     	;# 
  2589  0E9E                     	;# 
  2590  0EA1                     	;# 
  2591  0EA2                     	;# 
  2592  0EA3                     	;# 
  2593  0EA4                     	;# 
  2594  0EA5                     	;# 
  2595  0EA9                     	;# 
  2596  0EAA                     	;# 
  2597  0EAB                     	;# 
  2598  0EAC                     	;# 
  2599  0EB1                     	;# 
  2600  0EB2                     	;# 
  2601  0EB3                     	;# 
  2602  0EB8                     	;# 
  2603  0EB9                     	;# 
  2604  0EBA                     	;# 
  2605  0EBB                     	;# 
  2606  0EBC                     	;# 
  2607  0EBD                     	;# 
  2608  0EBE                     	;# 
  2609  0EC3                     	;# 
  2610  0EC5                     	;# 
  2611  0EC6                     	;# 
  2612  0EC7                     	;# 
  2613  0EC8                     	;# 
  2614  0EC9                     	;# 
  2615  0ECA                     	;# 
  2616  0ECB                     	;# 
  2617  0ECC                     	;# 
  2618  0F10                     	;# 
  2619  0F11                     	;# 
  2620  0F12                     	;# 
  2621  0F13                     	;# 
  2622  0F14                     	;# 
  2623  0F15                     	;# 
  2624  0F16                     	;# 
  2625  0F17                     	;# 
  2626  0F18                     	;# 
  2627  0F19                     	;# 
  2628  0F1A                     	;# 
  2629  0F1B                     	;# 
  2630  0F1C                     	;# 
  2631  0F1D                     	;# 
  2632  0F1E                     	;# 
  2633  0F1F                     	;# 
  2634  0F20                     	;# 
  2635  0F21                     	;# 
  2636  0F22                     	;# 
  2637  0F23                     	;# 
  2638  0F24                     	;# 
  2639  0F25                     	;# 
  2640  0F26                     	;# 
  2641  0F27                     	;# 
  2642  0F38                     	;# 
  2643  0F39                     	;# 
  2644  0F3A                     	;# 
  2645  0F3B                     	;# 
  2646  0F3C                     	;# 
  2647  0F3D                     	;# 
  2648  0F3E                     	;# 
  2649  0F3F                     	;# 
  2650  0F40                     	;# 
  2651  0F41                     	;# 
  2652  0F43                     	;# 
  2653  0F44                     	;# 
  2654  0F45                     	;# 
  2655  0F46                     	;# 
  2656  0F47                     	;# 
  2657  0F48                     	;# 
  2658  0F49                     	;# 
  2659  0F4A                     	;# 
  2660  0F4B                     	;# 
  2661  0F4C                     	;# 
  2662  0F4E                     	;# 
  2663  0F4F                     	;# 
  2664  0F50                     	;# 
  2665  0F51                     	;# 
  2666  0F52                     	;# 
  2667  0F53                     	;# 
  2668  0F54                     	;# 
  2669  0F55                     	;# 
  2670  0F56                     	;# 
  2671  0F57                     	;# 
  2672  0F65                     	;# 
  2673  0F68                     	;# 
  2674  0F69                     	;# 
  2675  0F6A                     	;# 
  2676  0F6B                     	;# 
  2677  0FE4                     	;# 
  2678  0FE5                     	;# 
  2679  0FE6                     	;# 
  2680  0FE7                     	;# 
  2681  0FE8                     	;# 
  2682  0FE9                     	;# 
  2683  0FEA                     	;# 
  2684  0FEB                     	;# 
  2685  0FED                     	;# 
  2686  0FEE                     	;# 
  2687  0FEF                     	;# 
  2688  0000                     	;# 
  2689  0001                     	;# 
  2690  0002                     	;# 
  2691  0003                     	;# 
  2692  0004                     	;# 
  2693  0005                     	;# 
  2694  0006                     	;# 
  2695  0007                     	;# 
  2696  0008                     	;# 
  2697  0009                     	;# 
  2698  000A                     	;# 
  2699  000B                     	;# 
  2700  000C                     	;# 
  2701  000D                     	;# 
  2702  000E                     	;# 
  2703  0010                     	;# 
  2704  0011                     	;# 
  2705  0012                     	;# 
  2706  0013                     	;# 
  2707  0016                     	;# 
  2708  0017                     	;# 
  2709  0018                     	;# 
  2710  001C                     	;# 
  2711  001C                     	;# 
  2712  001D                     	;# 
  2713  001D                     	;# 
  2714  001E                     	;# 
  2715  001F                     	;# 
  2716  008C                     	;# 
  2717  008C                     	;# 
  2718  008D                     	;# 
  2719  008E                     	;# 
  2720  008E                     	;# 
  2721  008F                     	;# 
  2722  0090                     	;# 
  2723  0090                     	;# 
  2724  0091                     	;# 
  2725  0093                     	;# 
  2726  0094                     	;# 
  2727  0095                     	;# 
  2728  0096                     	;# 
  2729  0097                     	;# 
  2730  0098                     	;# 
  2731  0099                     	;# 
  2732  009A                     	;# 
  2733  009B                     	;# 
  2734  009C                     	;# 
  2735  009D                     	;# 
  2736  009E                     	;# 
  2737  010C                     	;# 
  2738  010D                     	;# 
  2739  010E                     	;# 
  2740  010E                     	;# 
  2741  010F                     	;# 
  2742  0110                     	;# 
  2743  0110                     	;# 
  2744  0111                     	;# 
  2745  0112                     	;# 
  2746  0112                     	;# 
  2747  0113                     	;# 
  2748  0114                     	;# 
  2749  0114                     	;# 
  2750  0115                     	;# 
  2751  0116                     	;# 
  2752  0116                     	;# 
  2753  0117                     	;# 
  2754  0119                     	;# 
  2755  0119                     	;# 
  2756  0119                     	;# 
  2757  011A                     	;# 
  2758  011A                     	;# 
  2759  011A                     	;# 
  2760  011B                     	;# 
  2761  011B                     	;# 
  2762  011B                     	;# 
  2763  011B                     	;# 
  2764  011B                     	;# 
  2765  011C                     	;# 
  2766  011C                     	;# 
  2767  011C                     	;# 
  2768  011D                     	;# 
  2769  011D                     	;# 
  2770  011D                     	;# 
  2771  011E                     	;# 
  2772  011E                     	;# 
  2773  011E                     	;# 
  2774  011F                     	;# 
  2775  011F                     	;# 
  2776  011F                     	;# 
  2777  011F                     	;# 
  2778  011F                     	;# 
  2779  018C                     	;# 
  2780  018D                     	;# 
  2781  018E                     	;# 
  2782  018F                     	;# 
  2783  0190                     	;# 
  2784  0191                     	;# 
  2785  0192                     	;# 
  2786  0196                     	;# 
  2787  0197                     	;# 
  2788  0198                     	;# 
  2789  0199                     	;# 
  2790  019A                     	;# 
  2791  019B                     	;# 
  2792  019C                     	;# 
  2793  020C                     	;# 
  2794  020C                     	;# 
  2795  020D                     	;# 
  2796  020E                     	;# 
  2797  020F                     	;# 
  2798  020F                     	;# 
  2799  0210                     	;# 
  2800  0210                     	;# 
  2801  0211                     	;# 
  2802  0211                     	;# 
  2803  0212                     	;# 
  2804  0212                     	;# 
  2805  0213                     	;# 
  2806  0214                     	;# 
  2807  0215                     	;# 
  2808  0215                     	;# 
  2809  0216                     	;# 
  2810  0216                     	;# 
  2811  0217                     	;# 
  2812  0217                     	;# 
  2813  0218                     	;# 
  2814  0218                     	;# 
  2815  0219                     	;# 
  2816  021A                     	;# 
  2817  021B                     	;# 
  2818  021B                     	;# 
  2819  021C                     	;# 
  2820  021C                     	;# 
  2821  021D                     	;# 
  2822  021D                     	;# 
  2823  021E                     	;# 
  2824  021F                     	;# 
  2825  028C                     	;# 
  2826  028C                     	;# 
  2827  028D                     	;# 
  2828  028D                     	;# 
  2829  028E                     	;# 
  2830  028F                     	;# 
  2831  0290                     	;# 
  2832  0290                     	;# 
  2833  0291                     	;# 
  2834  0292                     	;# 
  2835  0292                     	;# 
  2836  0293                     	;# 
  2837  0293                     	;# 
  2838  0294                     	;# 
  2839  0295                     	;# 
  2840  0296                     	;# 
  2841  0296                     	;# 
  2842  0297                     	;# 
  2843  0298                     	;# 
  2844  0298                     	;# 
  2845  0299                     	;# 
  2846  0299                     	;# 
  2847  029A                     	;# 
  2848  029B                     	;# 
  2849  029C                     	;# 
  2850  029C                     	;# 
  2851  029D                     	;# 
  2852  030C                     	;# 
  2853  030C                     	;# 
  2854  030D                     	;# 
  2855  030E                     	;# 
  2856  030F                     	;# 
  2857  0310                     	;# 
  2858  0310                     	;# 
  2859  0311                     	;# 
  2860  0312                     	;# 
  2861  0313                     	;# 
  2862  0314                     	;# 
  2863  0314                     	;# 
  2864  0315                     	;# 
  2865  0316                     	;# 
  2866  0317                     	;# 
  2867  0318                     	;# 
  2868  0318                     	;# 
  2869  0319                     	;# 
  2870  031A                     	;# 
  2871  031B                     	;# 
  2872  031C                     	;# 
  2873  031C                     	;# 
  2874  031D                     	;# 
  2875  031E                     	;# 
  2876  031F                     	;# 
  2877  038C                     	;# 
  2878  038D                     	;# 
  2879  038E                     	;# 
  2880  0390                     	;# 
  2881  0391                     	;# 
  2882  0392                     	;# 
  2883  040C                     	;# 
  2884  040D                     	;# 
  2885  040E                     	;# 
  2886  040F                     	;# 
  2887  0410                     	;# 
  2888  0411                     	;# 
  2889  0416                     	;# 
  2890  0416                     	;# 
  2891  0417                     	;# 
  2892  0418                     	;# 
  2893  0418                     	;# 
  2894  0419                     	;# 
  2895  041A                     	;# 
  2896  041A                     	;# 
  2897  041B                     	;# 
  2898  041C                     	;# 
  2899  041C                     	;# 
  2900  041D                     	;# 
  2901  041E                     	;# 
  2902  041F                     	;# 
  2903  048C                     	;# 
  2904  048C                     	;# 
  2905  048D                     	;# 
  2906  048E                     	;# 
  2907  048F                     	;# 
  2908  048F                     	;# 
  2909  0490                     	;# 
  2910  0491                     	;# 
  2911  0492                     	;# 
  2912  0492                     	;# 
  2913  0493                     	;# 
  2914  0494                     	;# 
  2915  0495                     	;# 
  2916  0495                     	;# 
  2917  0496                     	;# 
  2918  0497                     	;# 
  2919  0498                     	;# 
  2920  0499                     	;# 
  2921  049A                     	;# 
  2922  049B                     	;# 
  2923  049C                     	;# 
  2924  049D                     	;# 
  2925  050C                     	;# 
  2926  050C                     	;# 
  2927  050D                     	;# 
  2928  050E                     	;# 
  2929  050F                     	;# 
  2930  050F                     	;# 
  2931  0510                     	;# 
  2932  0511                     	;# 
  2933  0512                     	;# 
  2934  0512                     	;# 
  2935  0513                     	;# 
  2936  0514                     	;# 
  2937  0515                     	;# 
  2938  0515                     	;# 
  2939  0516                     	;# 
  2940  0517                     	;# 
  2941  0518                     	;# 
  2942  0519                     	;# 
  2943  051A                     	;# 
  2944  051B                     	;# 
  2945  051C                     	;# 
  2946  051D                     	;# 
  2947  058C                     	;# 
  2948  058C                     	;# 
  2949  058D                     	;# 
  2950  058E                     	;# 
  2951  058F                     	;# 
  2952  058F                     	;# 
  2953  0590                     	;# 
  2954  0591                     	;# 
  2955  0592                     	;# 
  2956  0593                     	;# 
  2957  060C                     	;# 
  2958  060D                     	;# 
  2959  060E                     	;# 
  2960  060F                     	;# 
  2961  0610                     	;# 
  2962  0611                     	;# 
  2963  0612                     	;# 
  2964  0613                     	;# 
  2965  0614                     	;# 
  2966  0616                     	;# 
  2967  0617                     	;# 
  2968  0618                     	;# 
  2969  0619                     	;# 
  2970  061A                     	;# 
  2971  061B                     	;# 
  2972  061C                     	;# 
  2973  061D                     	;# 
  2974  061E                     	;# 
  2975  068C                     	;# 
  2976  068D                     	;# 
  2977  068E                     	;# 
  2978  068F                     	;# 
  2979  0690                     	;# 
  2980  0691                     	;# 
  2981  0692                     	;# 
  2982  0693                     	;# 
  2983  0694                     	;# 
  2984  070C                     	;# 
  2985  070D                     	;# 
  2986  070E                     	;# 
  2987  070F                     	;# 
  2988  0710                     	;# 
  2989  0711                     	;# 
  2990  0712                     	;# 
  2991  0713                     	;# 
  2992  0714                     	;# 
  2993  0716                     	;# 
  2994  0717                     	;# 
  2995  0718                     	;# 
  2996  0719                     	;# 
  2997  071A                     	;# 
  2998  071B                     	;# 
  2999  071C                     	;# 
  3000  071D                     	;# 
  3001  071E                     	;# 
  3002  0796                     	;# 
  3003  0797                     	;# 
  3004  0798                     	;# 
  3005  0799                     	;# 
  3006  079A                     	;# 
  3007  079B                     	;# 
  3008  080C                     	;# 
  3009  080D                     	;# 
  3010  080E                     	;# 
  3011  080F                     	;# 
  3012  0810                     	;# 
  3013  0811                     	;# 
  3014  0812                     	;# 
  3015  0813                     	;# 
  3016  0814                     	;# 
  3017  081A                     	;# 
  3018  081B                     	;# 
  3019  081C                     	;# 
  3020  081D                     	;# 
  3021  081E                     	;# 
  3022  081F                     	;# 
  3023  088C                     	;# 
  3024  088D                     	;# 
  3025  088E                     	;# 
  3026  088F                     	;# 
  3027  0890                     	;# 
  3028  0891                     	;# 
  3029  0892                     	;# 
  3030  0893                     	;# 
  3031  0895                     	;# 
  3032  0896                     	;# 
  3033  0897                     	;# 
  3034  0898                     	;# 
  3035  0899                     	;# 
  3036  089A                     	;# 
  3037  089B                     	;# 
  3038  090C                     	;# 
  3039  090E                     	;# 
  3040  090F                     	;# 
  3041  091F                     	;# 
  3042  091F                     	;# 
  3043  098F                     	;# 
  3044  098F                     	;# 
  3045  0990                     	;# 
  3046  0991                     	;# 
  3047  0992                     	;# 
  3048  0993                     	;# 
  3049  0994                     	;# 
  3050  0995                     	;# 
  3051  0996                     	;# 
  3052  0997                     	;# 
  3053  0E0F                     	;# 
  3054  0E10                     	;# 
  3055  0E11                     	;# 
  3056  0E12                     	;# 
  3057  0E13                     	;# 
  3058  0E14                     	;# 
  3059  0E15                     	;# 
  3060  0E16                     	;# 
  3061  0E17                     	;# 
  3062  0E18                     	;# 
  3063  0E19                     	;# 
  3064  0E1A                     	;# 
  3065  0E1B                     	;# 
  3066  0E1C                     	;# 
  3067  0E1D                     	;# 
  3068  0E1E                     	;# 
  3069  0E1F                     	;# 
  3070  0E20                     	;# 
  3071  0E21                     	;# 
  3072  0E22                     	;# 
  3073  0E23                     	;# 
  3074  0E24                     	;# 
  3075  0E25                     	;# 
  3076  0E26                     	;# 
  3077  0E27                     	;# 
  3078  0E28                     	;# 
  3079  0E29                     	;# 
  3080  0E2A                     	;# 
  3081  0E2B                     	;# 
  3082  0E2C                     	;# 
  3083  0E2D                     	;# 
  3084  0E2E                     	;# 
  3085  0E2F                     	;# 
  3086  0E30                     	;# 
  3087  0E31                     	;# 
  3088  0E32                     	;# 
  3089  0E33                     	;# 
  3090  0E34                     	;# 
  3091  0E35                     	;# 
  3092  0E36                     	;# 
  3093  0E37                     	;# 
  3094  0E8F                     	;# 
  3095  0E90                     	;# 
  3096  0E91                     	;# 
  3097  0E92                     	;# 
  3098  0E93                     	;# 
  3099  0E94                     	;# 
  3100  0E95                     	;# 
  3101  0E96                     	;# 
  3102  0E97                     	;# 
  3103  0E9C                     	;# 
  3104  0E9D                     	;# 
  3105  0E9E                     	;# 
  3106  0EA1                     	;# 
  3107  0EA2                     	;# 
  3108  0EA3                     	;# 
  3109  0EA4                     	;# 
  3110  0EA5                     	;# 
  3111  0EA9                     	;# 
  3112  0EAA                     	;# 
  3113  0EAB                     	;# 
  3114  0EAC                     	;# 
  3115  0EB1                     	;# 
  3116  0EB2                     	;# 
  3117  0EB3                     	;# 
  3118  0EB8                     	;# 
  3119  0EB9                     	;# 
  3120  0EBA                     	;# 
  3121  0EBB                     	;# 
  3122  0EBC                     	;# 
  3123  0EBD                     	;# 
  3124  0EBE                     	;# 
  3125  0EC3                     	;# 
  3126  0EC5                     	;# 
  3127  0EC6                     	;# 
  3128  0EC7                     	;# 
  3129  0EC8                     	;# 
  3130  0EC9                     	;# 
  3131  0ECA                     	;# 
  3132  0ECB                     	;# 
  3133  0ECC                     	;# 
  3134  0F10                     	;# 
  3135  0F11                     	;# 
  3136  0F12                     	;# 
  3137  0F13                     	;# 
  3138  0F14                     	;# 
  3139  0F15                     	;# 
  3140  0F16                     	;# 
  3141  0F17                     	;# 
  3142  0F18                     	;# 
  3143  0F19                     	;# 
  3144  0F1A                     	;# 
  3145  0F1B                     	;# 
  3146  0F1C                     	;# 
  3147  0F1D                     	;# 
  3148  0F1E                     	;# 
  3149  0F1F                     	;# 
  3150  0F20                     	;# 
  3151  0F21                     	;# 
  3152  0F22                     	;# 
  3153  0F23                     	;# 
  3154  0F24                     	;# 
  3155  0F25                     	;# 
  3156  0F26                     	;# 
  3157  0F27                     	;# 
  3158  0F38                     	;# 
  3159  0F39                     	;# 
  3160  0F3A                     	;# 
  3161  0F3B                     	;# 
  3162  0F3C                     	;# 
  3163  0F3D                     	;# 
  3164  0F3E                     	;# 
  3165  0F3F                     	;# 
  3166  0F40                     	;# 
  3167  0F41                     	;# 
  3168  0F43                     	;# 
  3169  0F44                     	;# 
  3170  0F45                     	;# 
  3171  0F46                     	;# 
  3172  0F47                     	;# 
  3173  0F48                     	;# 
  3174  0F49                     	;# 
  3175  0F4A                     	;# 
  3176  0F4B                     	;# 
  3177  0F4C                     	;# 
  3178  0F4E                     	;# 
  3179  0F4F                     	;# 
  3180  0F50                     	;# 
  3181  0F51                     	;# 
  3182  0F52                     	;# 
  3183  0F53                     	;# 
  3184  0F54                     	;# 
  3185  0F55                     	;# 
  3186  0F56                     	;# 
  3187  0F57                     	;# 
  3188  0F65                     	;# 
  3189  0F68                     	;# 
  3190  0F69                     	;# 
  3191  0F6A                     	;# 
  3192  0F6B                     	;# 
  3193  0FE4                     	;# 
  3194  0FE5                     	;# 
  3195  0FE6                     	;# 
  3196  0FE7                     	;# 
  3197  0FE8                     	;# 
  3198  0FE9                     	;# 
  3199  0FEA                     	;# 
  3200  0FEB                     	;# 
  3201  0FED                     	;# 
  3202  0FEE                     	;# 
  3203  0FEF                     	;# 
  3204  0000                     	;# 
  3205  0001                     	;# 
  3206  0002                     	;# 
  3207  0003                     	;# 
  3208  0004                     	;# 
  3209  0005                     	;# 
  3210  0006                     	;# 
  3211  0007                     	;# 
  3212  0008                     	;# 
  3213  0009                     	;# 
  3214  000A                     	;# 
  3215  000B                     	;# 
  3216  000C                     	;# 
  3217  000D                     	;# 
  3218  000E                     	;# 
  3219  0010                     	;# 
  3220  0011                     	;# 
  3221  0012                     	;# 
  3222  0013                     	;# 
  3223  0016                     	;# 
  3224  0017                     	;# 
  3225  0018                     	;# 
  3226  001C                     	;# 
  3227  001C                     	;# 
  3228  001D                     	;# 
  3229  001D                     	;# 
  3230  001E                     	;# 
  3231  001F                     	;# 
  3232  008C                     	;# 
  3233  008C                     	;# 
  3234  008D                     	;# 
  3235  008E                     	;# 
  3236  008E                     	;# 
  3237  008F                     	;# 
  3238  0090                     	;# 
  3239  0090                     	;# 
  3240  0091                     	;# 
  3241  0093                     	;# 
  3242  0094                     	;# 
  3243  0095                     	;# 
  3244  0096                     	;# 
  3245  0097                     	;# 
  3246  0098                     	;# 
  3247  0099                     	;# 
  3248  009A                     	;# 
  3249  009B                     	;# 
  3250  009C                     	;# 
  3251  009D                     	;# 
  3252  009E                     	;# 
  3253  010C                     	;# 
  3254  010D                     	;# 
  3255  010E                     	;# 
  3256  010E                     	;# 
  3257  010F                     	;# 
  3258  0110                     	;# 
  3259  0110                     	;# 
  3260  0111                     	;# 
  3261  0112                     	;# 
  3262  0112                     	;# 
  3263  0113                     	;# 
  3264  0114                     	;# 
  3265  0114                     	;# 
  3266  0115                     	;# 
  3267  0116                     	;# 
  3268  0116                     	;# 
  3269  0117                     	;# 
  3270  0119                     	;# 
  3271  0119                     	;# 
  3272  0119                     	;# 
  3273  011A                     	;# 
  3274  011A                     	;# 
  3275  011A                     	;# 
  3276  011B                     	;# 
  3277  011B                     	;# 
  3278  011B                     	;# 
  3279  011B                     	;# 
  3280  011B                     	;# 
  3281  011C                     	;# 
  3282  011C                     	;# 
  3283  011C                     	;# 
  3284  011D                     	;# 
  3285  011D                     	;# 
  3286  011D                     	;# 
  3287  011E                     	;# 
  3288  011E                     	;# 
  3289  011E                     	;# 
  3290  011F                     	;# 
  3291  011F                     	;# 
  3292  011F                     	;# 
  3293  011F                     	;# 
  3294  011F                     	;# 
  3295  018C                     	;# 
  3296  018D                     	;# 
  3297  018E                     	;# 
  3298  018F                     	;# 
  3299  0190                     	;# 
  3300  0191                     	;# 
  3301  0192                     	;# 
  3302  0196                     	;# 
  3303  0197                     	;# 
  3304  0198                     	;# 
  3305  0199                     	;# 
  3306  019A                     	;# 
  3307  019B                     	;# 
  3308  019C                     	;# 
  3309  020C                     	;# 
  3310  020C                     	;# 
  3311  020D                     	;# 
  3312  020E                     	;# 
  3313  020F                     	;# 
  3314  020F                     	;# 
  3315  0210                     	;# 
  3316  0210                     	;# 
  3317  0211                     	;# 
  3318  0211                     	;# 
  3319  0212                     	;# 
  3320  0212                     	;# 
  3321  0213                     	;# 
  3322  0214                     	;# 
  3323  0215                     	;# 
  3324  0215                     	;# 
  3325  0216                     	;# 
  3326  0216                     	;# 
  3327  0217                     	;# 
  3328  0217                     	;# 
  3329  0218                     	;# 
  3330  0218                     	;# 
  3331  0219                     	;# 
  3332  021A                     	;# 
  3333  021B                     	;# 
  3334  021B                     	;# 
  3335  021C                     	;# 
  3336  021C                     	;# 
  3337  021D                     	;# 
  3338  021D                     	;# 
  3339  021E                     	;# 
  3340  021F                     	;# 
  3341  028C                     	;# 
  3342  028C                     	;# 
  3343  028D                     	;# 
  3344  028D                     	;# 
  3345  028E                     	;# 
  3346  028F                     	;# 
  3347  0290                     	;# 
  3348  0290                     	;# 
  3349  0291                     	;# 
  3350  0292                     	;# 
  3351  0292                     	;# 
  3352  0293                     	;# 
  3353  0293                     	;# 
  3354  0294                     	;# 
  3355  0295                     	;# 
  3356  0296                     	;# 
  3357  0296                     	;# 
  3358  0297                     	;# 
  3359  0298                     	;# 
  3360  0298                     	;# 
  3361  0299                     	;# 
  3362  0299                     	;# 
  3363  029A                     	;# 
  3364  029B                     	;# 
  3365  029C                     	;# 
  3366  029C                     	;# 
  3367  029D                     	;# 
  3368  030C                     	;# 
  3369  030C                     	;# 
  3370  030D                     	;# 
  3371  030E                     	;# 
  3372  030F                     	;# 
  3373  0310                     	;# 
  3374  0310                     	;# 
  3375  0311                     	;# 
  3376  0312                     	;# 
  3377  0313                     	;# 
  3378  0314                     	;# 
  3379  0314                     	;# 
  3380  0315                     	;# 
  3381  0316                     	;# 
  3382  0317                     	;# 
  3383  0318                     	;# 
  3384  0318                     	;# 
  3385  0319                     	;# 
  3386  031A                     	;# 
  3387  031B                     	;# 
  3388  031C                     	;# 
  3389  031C                     	;# 
  3390  031D                     	;# 
  3391  031E                     	;# 
  3392  031F                     	;# 
  3393  038C                     	;# 
  3394  038D                     	;# 
  3395  038E                     	;# 
  3396  0390                     	;# 
  3397  0391                     	;# 
  3398  0392                     	;# 
  3399  040C                     	;# 
  3400  040D                     	;# 
  3401  040E                     	;# 
  3402  040F                     	;# 
  3403  0410                     	;# 
  3404  0411                     	;# 
  3405  0416                     	;# 
  3406  0416                     	;# 
  3407  0417                     	;# 
  3408  0418                     	;# 
  3409  0418                     	;# 
  3410  0419                     	;# 
  3411  041A                     	;# 
  3412  041A                     	;# 
  3413  041B                     	;# 
  3414  041C                     	;# 
  3415  041C                     	;# 
  3416  041D                     	;# 
  3417  041E                     	;# 
  3418  041F                     	;# 
  3419  048C                     	;# 
  3420  048C                     	;# 
  3421  048D                     	;# 
  3422  048E                     	;# 
  3423  048F                     	;# 
  3424  048F                     	;# 
  3425  0490                     	;# 
  3426  0491                     	;# 
  3427  0492                     	;# 
  3428  0492                     	;# 
  3429  0493                     	;# 
  3430  0494                     	;# 
  3431  0495                     	;# 
  3432  0495                     	;# 
  3433  0496                     	;# 
  3434  0497                     	;# 
  3435  0498                     	;# 
  3436  0499                     	;# 
  3437  049A                     	;# 
  3438  049B                     	;# 
  3439  049C                     	;# 
  3440  049D                     	;# 
  3441  050C                     	;# 
  3442  050C                     	;# 
  3443  050D                     	;# 
  3444  050E                     	;# 
  3445  050F                     	;# 
  3446  050F                     	;# 
  3447  0510                     	;# 
  3448  0511                     	;# 
  3449  0512                     	;# 
  3450  0512                     	;# 
  3451  0513                     	;# 
  3452  0514                     	;# 
  3453  0515                     	;# 
  3454  0515                     	;# 
  3455  0516                     	;# 
  3456  0517                     	;# 
  3457  0518                     	;# 
  3458  0519                     	;# 
  3459  051A                     	;# 
  3460  051B                     	;# 
  3461  051C                     	;# 
  3462  051D                     	;# 
  3463  058C                     	;# 
  3464  058C                     	;# 
  3465  058D                     	;# 
  3466  058E                     	;# 
  3467  058F                     	;# 
  3468  058F                     	;# 
  3469  0590                     	;# 
  3470  0591                     	;# 
  3471  0592                     	;# 
  3472  0593                     	;# 
  3473  060C                     	;# 
  3474  060D                     	;# 
  3475  060E                     	;# 
  3476  060F                     	;# 
  3477  0610                     	;# 
  3478  0611                     	;# 
  3479  0612                     	;# 
  3480  0613                     	;# 
  3481  0614                     	;# 
  3482  0616                     	;# 
  3483  0617                     	;# 
  3484  0618                     	;# 
  3485  0619                     	;# 
  3486  061A                     	;# 
  3487  061B                     	;# 
  3488  061C                     	;# 
  3489  061D                     	;# 
  3490  061E                     	;# 
  3491  068C                     	;# 
  3492  068D                     	;# 
  3493  068E                     	;# 
  3494  068F                     	;# 
  3495  0690                     	;# 
  3496  0691                     	;# 
  3497  0692                     	;# 
  3498  0693                     	;# 
  3499  0694                     	;# 
  3500  070C                     	;# 
  3501  070D                     	;# 
  3502  070E                     	;# 
  3503  070F                     	;# 
  3504  0710                     	;# 
  3505  0711                     	;# 
  3506  0712                     	;# 
  3507  0713                     	;# 
  3508  0714                     	;# 
  3509  0716                     	;# 
  3510  0717                     	;# 
  3511  0718                     	;# 
  3512  0719                     	;# 
  3513  071A                     	;# 
  3514  071B                     	;# 
  3515  071C                     	;# 
  3516  071D                     	;# 
  3517  071E                     	;# 
  3518  0796                     	;# 
  3519  0797                     	;# 
  3520  0798                     	;# 
  3521  0799                     	;# 
  3522  079A                     	;# 
  3523  079B                     	;# 
  3524  080C                     	;# 
  3525  080D                     	;# 
  3526  080E                     	;# 
  3527  080F                     	;# 
  3528  0810                     	;# 
  3529  0811                     	;# 
  3530  0812                     	;# 
  3531  0813                     	;# 
  3532  0814                     	;# 
  3533  081A                     	;# 
  3534  081B                     	;# 
  3535  081C                     	;# 
  3536  081D                     	;# 
  3537  081E                     	;# 
  3538  081F                     	;# 
  3539  088C                     	;# 
  3540  088D                     	;# 
  3541  088E                     	;# 
  3542  088F                     	;# 
  3543  0890                     	;# 
  3544  0891                     	;# 
  3545  0892                     	;# 
  3546  0893                     	;# 
  3547  0895                     	;# 
  3548  0896                     	;# 
  3549  0897                     	;# 
  3550  0898                     	;# 
  3551  0899                     	;# 
  3552  089A                     	;# 
  3553  089B                     	;# 
  3554  090C                     	;# 
  3555  090E                     	;# 
  3556  090F                     	;# 
  3557  091F                     	;# 
  3558  091F                     	;# 
  3559  098F                     	;# 
  3560  098F                     	;# 
  3561  0990                     	;# 
  3562  0991                     	;# 
  3563  0992                     	;# 
  3564  0993                     	;# 
  3565  0994                     	;# 
  3566  0995                     	;# 
  3567  0996                     	;# 
  3568  0997                     	;# 
  3569  0E0F                     	;# 
  3570  0E10                     	;# 
  3571  0E11                     	;# 
  3572  0E12                     	;# 
  3573  0E13                     	;# 
  3574  0E14                     	;# 
  3575  0E15                     	;# 
  3576  0E16                     	;# 
  3577  0E17                     	;# 
  3578  0E18                     	;# 
  3579  0E19                     	;# 
  3580  0E1A                     	;# 
  3581  0E1B                     	;# 
  3582  0E1C                     	;# 
  3583  0E1D                     	;# 
  3584  0E1E                     	;# 
  3585  0E1F                     	;# 
  3586  0E20                     	;# 
  3587  0E21                     	;# 
  3588  0E22                     	;# 
  3589  0E23                     	;# 
  3590  0E24                     	;# 
  3591  0E25                     	;# 
  3592  0E26                     	;# 
  3593  0E27                     	;# 
  3594  0E28                     	;# 
  3595  0E29                     	;# 
  3596  0E2A                     	;# 
  3597  0E2B                     	;# 
  3598  0E2C                     	;# 
  3599  0E2D                     	;# 
  3600  0E2E                     	;# 
  3601  0E2F                     	;# 
  3602  0E30                     	;# 
  3603  0E31                     	;# 
  3604  0E32                     	;# 
  3605  0E33                     	;# 
  3606  0E34                     	;# 
  3607  0E35                     	;# 
  3608  0E36                     	;# 
  3609  0E37                     	;# 
  3610  0E8F                     	;# 
  3611  0E90                     	;# 
  3612  0E91                     	;# 
  3613  0E92                     	;# 
  3614  0E93                     	;# 
  3615  0E94                     	;# 
  3616  0E95                     	;# 
  3617  0E96                     	;# 
  3618  0E97                     	;# 
  3619  0E9C                     	;# 
  3620  0E9D                     	;# 
  3621  0E9E                     	;# 
  3622  0EA1                     	;# 
  3623  0EA2                     	;# 
  3624  0EA3                     	;# 
  3625  0EA4                     	;# 
  3626  0EA5                     	;# 
  3627  0EA9                     	;# 
  3628  0EAA                     	;# 
  3629  0EAB                     	;# 
  3630  0EAC                     	;# 
  3631  0EB1                     	;# 
  3632  0EB2                     	;# 
  3633  0EB3                     	;# 
  3634  0EB8                     	;# 
  3635  0EB9                     	;# 
  3636  0EBA                     	;# 
  3637  0EBB                     	;# 
  3638  0EBC                     	;# 
  3639  0EBD                     	;# 
  3640  0EBE                     	;# 
  3641  0EC3                     	;# 
  3642  0EC5                     	;# 
  3643  0EC6                     	;# 
  3644  0EC7                     	;# 
  3645  0EC8                     	;# 
  3646  0EC9                     	;# 
  3647  0ECA                     	;# 
  3648  0ECB                     	;# 
  3649  0ECC                     	;# 
  3650  0F10                     	;# 
  3651  0F11                     	;# 
  3652  0F12                     	;# 
  3653  0F13                     	;# 
  3654  0F14                     	;# 
  3655  0F15                     	;# 
  3656  0F16                     	;# 
  3657  0F17                     	;# 
  3658  0F18                     	;# 
  3659  0F19                     	;# 
  3660  0F1A                     	;# 
  3661  0F1B                     	;# 
  3662  0F1C                     	;# 
  3663  0F1D                     	;# 
  3664  0F1E                     	;# 
  3665  0F1F                     	;# 
  3666  0F20                     	;# 
  3667  0F21                     	;# 
  3668  0F22                     	;# 
  3669  0F23                     	;# 
  3670  0F24                     	;# 
  3671  0F25                     	;# 
  3672  0F26                     	;# 
  3673  0F27                     	;# 
  3674  0F38                     	;# 
  3675  0F39                     	;# 
  3676  0F3A                     	;# 
  3677  0F3B                     	;# 
  3678  0F3C                     	;# 
  3679  0F3D                     	;# 
  3680  0F3E                     	;# 
  3681  0F3F                     	;# 
  3682  0F40                     	;# 
  3683  0F41                     	;# 
  3684  0F43                     	;# 
  3685  0F44                     	;# 
  3686  0F45                     	;# 
  3687  0F46                     	;# 
  3688  0F47                     	;# 
  3689  0F48                     	;# 
  3690  0F49                     	;# 
  3691  0F4A                     	;# 
  3692  0F4B                     	;# 
  3693  0F4C                     	;# 
  3694  0F4E                     	;# 
  3695  0F4F                     	;# 
  3696  0F50                     	;# 
  3697  0F51                     	;# 
  3698  0F52                     	;# 
  3699  0F53                     	;# 
  3700  0F54                     	;# 
  3701  0F55                     	;# 
  3702  0F56                     	;# 
  3703  0F57                     	;# 
  3704  0F65                     	;# 
  3705  0F68                     	;# 
  3706  0F69                     	;# 
  3707  0F6A                     	;# 
  3708  0F6B                     	;# 
  3709  0FE4                     	;# 
  3710  0FE5                     	;# 
  3711  0FE6                     	;# 
  3712  0FE7                     	;# 
  3713  0FE8                     	;# 
  3714  0FE9                     	;# 
  3715  0FEA                     	;# 
  3716  0FEB                     	;# 
  3717  0FED                     	;# 
  3718  0FEE                     	;# 
  3719  0FEF                     	;# 
  3720  0000                     	;# 
  3721  0001                     	;# 
  3722  0002                     	;# 
  3723  0003                     	;# 
  3724  0004                     	;# 
  3725  0005                     	;# 
  3726  0006                     	;# 
  3727  0007                     	;# 
  3728  0008                     	;# 
  3729  0009                     	;# 
  3730  000A                     	;# 
  3731  000B                     	;# 
  3732  000C                     	;# 
  3733  000D                     	;# 
  3734  000E                     	;# 
  3735  0010                     	;# 
  3736  0011                     	;# 
  3737  0012                     	;# 
  3738  0013                     	;# 
  3739  0016                     	;# 
  3740  0017                     	;# 
  3741  0018                     	;# 
  3742  001C                     	;# 
  3743  001C                     	;# 
  3744  001D                     	;# 
  3745  001D                     	;# 
  3746  001E                     	;# 
  3747  001F                     	;# 
  3748  008C                     	;# 
  3749  008C                     	;# 
  3750  008D                     	;# 
  3751  008E                     	;# 
  3752  008E                     	;# 
  3753  008F                     	;# 
  3754  0090                     	;# 
  3755  0090                     	;# 
  3756  0091                     	;# 
  3757  0093                     	;# 
  3758  0094                     	;# 
  3759  0095                     	;# 
  3760  0096                     	;# 
  3761  0097                     	;# 
  3762  0098                     	;# 
  3763  0099                     	;# 
  3764  009A                     	;# 
  3765  009B                     	;# 
  3766  009C                     	;# 
  3767  009D                     	;# 
  3768  009E                     	;# 
  3769  010C                     	;# 
  3770  010D                     	;# 
  3771  010E                     	;# 
  3772  010E                     	;# 
  3773  010F                     	;# 
  3774  0110                     	;# 
  3775  0110                     	;# 
  3776  0111                     	;# 
  3777  0112                     	;# 
  3778  0112                     	;# 
  3779  0113                     	;# 
  3780  0114                     	;# 
  3781  0114                     	;# 
  3782  0115                     	;# 
  3783  0116                     	;# 
  3784  0116                     	;# 
  3785  0117                     	;# 
  3786  0119                     	;# 
  3787  0119                     	;# 
  3788  0119                     	;# 
  3789  011A                     	;# 
  3790  011A                     	;# 
  3791  011A                     	;# 
  3792  011B                     	;# 
  3793  011B                     	;# 
  3794  011B                     	;# 
  3795  011B                     	;# 
  3796  011B                     	;# 
  3797  011C                     	;# 
  3798  011C                     	;# 
  3799  011C                     	;# 
  3800  011D                     	;# 
  3801  011D                     	;# 
  3802  011D                     	;# 
  3803  011E                     	;# 
  3804  011E                     	;# 
  3805  011E                     	;# 
  3806  011F                     	;# 
  3807  011F                     	;# 
  3808  011F                     	;# 
  3809  011F                     	;# 
  3810  011F                     	;# 
  3811  018C                     	;# 
  3812  018D                     	;# 
  3813  018E                     	;# 
  3814  018F                     	;# 
  3815  0190                     	;# 
  3816  0191                     	;# 
  3817  0192                     	;# 
  3818  0196                     	;# 
  3819  0197                     	;# 
  3820  0198                     	;# 
  3821  0199                     	;# 
  3822  019A                     	;# 
  3823  019B                     	;# 
  3824  019C                     	;# 
  3825  020C                     	;# 
  3826  020C                     	;# 
  3827  020D                     	;# 
  3828  020E                     	;# 
  3829  020F                     	;# 
  3830  020F                     	;# 
  3831  0210                     	;# 
  3832  0210                     	;# 
  3833  0211                     	;# 
  3834  0211                     	;# 
  3835  0212                     	;# 
  3836  0212                     	;# 
  3837  0213                     	;# 
  3838  0214                     	;# 
  3839  0215                     	;# 
  3840  0215                     	;# 
  3841  0216                     	;# 
  3842  0216                     	;# 
  3843  0217                     	;# 
  3844  0217                     	;# 
  3845  0218                     	;# 
  3846  0218                     	;# 
  3847  0219                     	;# 
  3848  021A                     	;# 
  3849  021B                     	;# 
  3850  021B                     	;# 
  3851  021C                     	;# 
  3852  021C                     	;# 
  3853  021D                     	;# 
  3854  021D                     	;# 
  3855  021E                     	;# 
  3856  021F                     	;# 
  3857  028C                     	;# 
  3858  028C                     	;# 
  3859  028D                     	;# 
  3860  028D                     	;# 
  3861  028E                     	;# 
  3862  028F                     	;# 
  3863  0290                     	;# 
  3864  0290                     	;# 
  3865  0291                     	;# 
  3866  0292                     	;# 
  3867  0292                     	;# 
  3868  0293                     	;# 
  3869  0293                     	;# 
  3870  0294                     	;# 
  3871  0295                     	;# 
  3872  0296                     	;# 
  3873  0296                     	;# 
  3874  0297                     	;# 
  3875  0298                     	;# 
  3876  0298                     	;# 
  3877  0299                     	;# 
  3878  0299                     	;# 
  3879  029A                     	;# 
  3880  029B                     	;# 
  3881  029C                     	;# 
  3882  029C                     	;# 
  3883  029D                     	;# 
  3884  030C                     	;# 
  3885  030C                     	;# 
  3886  030D                     	;# 
  3887  030E                     	;# 
  3888  030F                     	;# 
  3889  0310                     	;# 
  3890  0310                     	;# 
  3891  0311                     	;# 
  3892  0312                     	;# 
  3893  0313                     	;# 
  3894  0314                     	;# 
  3895  0314                     	;# 
  3896  0315                     	;# 
  3897  0316                     	;# 
  3898  0317                     	;# 
  3899  0318                     	;# 
  3900  0318                     	;# 
  3901  0319                     	;# 
  3902  031A                     	;# 
  3903  031B                     	;# 
  3904  031C                     	;# 
  3905  031C                     	;# 
  3906  031D                     	;# 
  3907  031E                     	;# 
  3908  031F                     	;# 
  3909  038C                     	;# 
  3910  038D                     	;# 
  3911  038E                     	;# 
  3912  0390                     	;# 
  3913  0391                     	;# 
  3914  0392                     	;# 
  3915  040C                     	;# 
  3916  040D                     	;# 
  3917  040E                     	;# 
  3918  040F                     	;# 
  3919  0410                     	;# 
  3920  0411                     	;# 
  3921  0416                     	;# 
  3922  0416                     	;# 
  3923  0417                     	;# 
  3924  0418                     	;# 
  3925  0418                     	;# 
  3926  0419                     	;# 
  3927  041A                     	;# 
  3928  041A                     	;# 
  3929  041B                     	;# 
  3930  041C                     	;# 
  3931  041C                     	;# 
  3932  041D                     	;# 
  3933  041E                     	;# 
  3934  041F                     	;# 
  3935  048C                     	;# 
  3936  048C                     	;# 
  3937  048D                     	;# 
  3938  048E                     	;# 
  3939  048F                     	;# 
  3940  048F                     	;# 
  3941  0490                     	;# 
  3942  0491                     	;# 
  3943  0492                     	;# 
  3944  0492                     	;# 
  3945  0493                     	;# 
  3946  0494                     	;# 
  3947  0495                     	;# 
  3948  0495                     	;# 
  3949  0496                     	;# 
  3950  0497                     	;# 
  3951  0498                     	;# 
  3952  0499                     	;# 
  3953  049A                     	;# 
  3954  049B                     	;# 
  3955  049C                     	;# 
  3956  049D                     	;# 
  3957  050C                     	;# 
  3958  050C                     	;# 
  3959  050D                     	;# 
  3960  050E                     	;# 
  3961  050F                     	;# 
  3962  050F                     	;# 
  3963  0510                     	;# 
  3964  0511                     	;# 
  3965  0512                     	;# 
  3966  0512                     	;# 
  3967  0513                     	;# 
  3968  0514                     	;# 
  3969  0515                     	;# 
  3970  0515                     	;# 
  3971  0516                     	;# 
  3972  0517                     	;# 
  3973  0518                     	;# 
  3974  0519                     	;# 
  3975  051A                     	;# 
  3976  051B                     	;# 
  3977  051C                     	;# 
  3978  051D                     	;# 
  3979  058C                     	;# 
  3980  058C                     	;# 
  3981  058D                     	;# 
  3982  058E                     	;# 
  3983  058F                     	;# 
  3984  058F                     	;# 
  3985  0590                     	;# 
  3986  0591                     	;# 
  3987  0592                     	;# 
  3988  0593                     	;# 
  3989  060C                     	;# 
  3990  060D                     	;# 
  3991  060E                     	;# 
  3992  060F                     	;# 
  3993  0610                     	;# 
  3994  0611                     	;# 
  3995  0612                     	;# 
  3996  0613                     	;# 
  3997  0614                     	;# 
  3998  0616                     	;# 
  3999  0617                     	;# 
  4000  0618                     	;# 
  4001  0619                     	;# 
  4002  061A                     	;# 
  4003  061B                     	;# 
  4004  061C                     	;# 
  4005  061D                     	;# 
  4006  061E                     	;# 
  4007  068C                     	;# 
  4008  068D                     	;# 
  4009  068E                     	;# 
  4010  068F                     	;# 
  4011  0690                     	;# 
  4012  0691                     	;# 
  4013  0692                     	;# 
  4014  0693                     	;# 
  4015  0694                     	;# 
  4016  070C                     	;# 
  4017  070D                     	;# 
  4018  070E                     	;# 
  4019  070F                     	;# 
  4020  0710                     	;# 
  4021  0711                     	;# 
  4022  0712                     	;# 
  4023  0713                     	;# 
  4024  0714                     	;# 
  4025  0716                     	;# 
  4026  0717                     	;# 
  4027  0718                     	;# 
  4028  0719                     	;# 
  4029  071A                     	;# 
  4030  071B                     	;# 
  4031  071C                     	;# 
  4032  071D                     	;# 
  4033  071E                     	;# 
  4034  0796                     	;# 
  4035  0797                     	;# 
  4036  0798                     	;# 
  4037  0799                     	;# 
  4038  079A                     	;# 
  4039  079B                     	;# 
  4040  080C                     	;# 
  4041  080D                     	;# 
  4042  080E                     	;# 
  4043  080F                     	;# 
  4044  0810                     	;# 
  4045  0811                     	;# 
  4046  0812                     	;# 
  4047  0813                     	;# 
  4048  0814                     	;# 
  4049  081A                     	;# 
  4050  081B                     	;# 
  4051  081C                     	;# 
  4052  081D                     	;# 
  4053  081E                     	;# 
  4054  081F                     	;# 
  4055  088C                     	;# 
  4056  088D                     	;# 
  4057  088E                     	;# 
  4058  088F                     	;# 
  4059  0890                     	;# 
  4060  0891                     	;# 
  4061  0892                     	;# 
  4062  0893                     	;# 
  4063  0895                     	;# 
  4064  0896                     	;# 
  4065  0897                     	;# 
  4066  0898                     	;# 
  4067  0899                     	;# 
  4068  089A                     	;# 
  4069  089B                     	;# 
  4070  090C                     	;# 
  4071  090E                     	;# 
  4072  090F                     	;# 
  4073  091F                     	;# 
  4074  091F                     	;# 
  4075  098F                     	;# 
  4076  098F                     	;# 
  4077  0990                     	;# 
  4078  0991                     	;# 
  4079  0992                     	;# 
  4080  0993                     	;# 
  4081  0994                     	;# 
  4082  0995                     	;# 
  4083  0996                     	;# 
  4084  0997                     	;# 
  4085  0E0F                     	;# 
  4086  0E10                     	;# 
  4087  0E11                     	;# 
  4088  0E12                     	;# 
  4089  0E13                     	;# 
  4090  0E14                     	;# 
  4091  0E15                     	;# 
  4092  0E16                     	;# 
  4093  0E17                     	;# 
  4094  0E18                     	;# 
  4095  0E19                     	;# 
  4096  0E1A                     	;# 
  4097  0E1B                     	;# 
  4098  0E1C                     	;# 
  4099  0E1D                     	;# 
  4100  0E1E                     	;# 
  4101  0E1F                     	;# 
  4102  0E20                     	;# 
  4103  0E21                     	;# 
  4104  0E22                     	;# 
  4105  0E23                     	;# 
  4106  0E24                     	;# 
  4107  0E25                     	;# 
  4108  0E26                     	;# 
  4109  0E27                     	;# 
  4110  0E28                     	;# 
  4111  0E29                     	;# 
  4112  0E2A                     	;# 
  4113  0E2B                     	;# 
  4114  0E2C                     	;# 
  4115  0E2D                     	;# 
  4116  0E2E                     	;# 
  4117  0E2F                     	;# 
  4118  0E30                     	;# 
  4119  0E31                     	;# 
  4120  0E32                     	;# 
  4121  0E33                     	;# 
  4122  0E34                     	;# 
  4123  0E35                     	;# 
  4124  0E36                     	;# 
  4125  0E37                     	;# 
  4126  0E8F                     	;# 
  4127  0E90                     	;# 
  4128  0E91                     	;# 
  4129  0E92                     	;# 
  4130  0E93                     	;# 
  4131  0E94                     	;# 
  4132  0E95                     	;# 
  4133  0E96                     	;# 
  4134  0E97                     	;# 
  4135  0E9C                     	;# 
  4136  0E9D                     	;# 
  4137  0E9E                     	;# 
  4138  0EA1                     	;# 
  4139  0EA2                     	;# 
  4140  0EA3                     	;# 
  4141  0EA4                     	;# 
  4142  0EA5                     	;# 
  4143  0EA9                     	;# 
  4144  0EAA                     	;# 
  4145  0EAB                     	;# 
  4146  0EAC                     	;# 
  4147  0EB1                     	;# 
  4148  0EB2                     	;# 
  4149  0EB3                     	;# 
  4150  0EB8                     	;# 
  4151  0EB9                     	;# 
  4152  0EBA                     	;# 
  4153  0EBB                     	;# 
  4154  0EBC                     	;# 
  4155  0EBD                     	;# 
  4156  0EBE                     	;# 
  4157  0EC3                     	;# 
  4158  0EC5                     	;# 
  4159  0EC6                     	;# 
  4160  0EC7                     	;# 
  4161  0EC8                     	;# 
  4162  0EC9                     	;# 
  4163  0ECA                     	;# 
  4164  0ECB                     	;# 
  4165  0ECC                     	;# 
  4166  0F10                     	;# 
  4167  0F11                     	;# 
  4168  0F12                     	;# 
  4169  0F13                     	;# 
  4170  0F14                     	;# 
  4171  0F15                     	;# 
  4172  0F16                     	;# 
  4173  0F17                     	;# 
  4174  0F18                     	;# 
  4175  0F19                     	;# 
  4176  0F1A                     	;# 
  4177  0F1B                     	;# 
  4178  0F1C                     	;# 
  4179  0F1D                     	;# 
  4180  0F1E                     	;# 
  4181  0F1F                     	;# 
  4182  0F20                     	;# 
  4183  0F21                     	;# 
  4184  0F22                     	;# 
  4185  0F23                     	;# 
  4186  0F24                     	;# 
  4187  0F25                     	;# 
  4188  0F26                     	;# 
  4189  0F27                     	;# 
  4190  0F38                     	;# 
  4191  0F39                     	;# 
  4192  0F3A                     	;# 
  4193  0F3B                     	;# 
  4194  0F3C                     	;# 
  4195  0F3D                     	;# 
  4196  0F3E                     	;# 
  4197  0F3F                     	;# 
  4198  0F40                     	;# 
  4199  0F41                     	;# 
  4200  0F43                     	;# 
  4201  0F44                     	;# 
  4202  0F45                     	;# 
  4203  0F46                     	;# 
  4204  0F47                     	;# 
  4205  0F48                     	;# 
  4206  0F49                     	;# 
  4207  0F4A                     	;# 
  4208  0F4B                     	;# 
  4209  0F4C                     	;# 
  4210  0F4E                     	;# 
  4211  0F4F                     	;# 
  4212  0F50                     	;# 
  4213  0F51                     	;# 
  4214  0F52                     	;# 
  4215  0F53                     	;# 
  4216  0F54                     	;# 
  4217  0F55                     	;# 
  4218  0F56                     	;# 
  4219  0F57                     	;# 
  4220  0F65                     	;# 
  4221  0F68                     	;# 
  4222  0F69                     	;# 
  4223  0F6A                     	;# 
  4224  0F6B                     	;# 
  4225  0FE4                     	;# 
  4226  0FE5                     	;# 
  4227  0FE6                     	;# 
  4228  0FE7                     	;# 
  4229  0FE8                     	;# 
  4230  0FE9                     	;# 
  4231  0FEA                     	;# 
  4232  0FEB                     	;# 
  4233  0FED                     	;# 
  4234  0FEE                     	;# 
  4235  0FEF                     	;# 
  4236  0000                     	;# 
  4237  0001                     	;# 
  4238  0002                     	;# 
  4239  0003                     	;# 
  4240  0004                     	;# 
  4241  0005                     	;# 
  4242  0006                     	;# 
  4243  0007                     	;# 
  4244  0008                     	;# 
  4245  0009                     	;# 
  4246  000A                     	;# 
  4247  000B                     	;# 
  4248  000C                     	;# 
  4249  000D                     	;# 
  4250  000E                     	;# 
  4251  0010                     	;# 
  4252  0011                     	;# 
  4253  0012                     	;# 
  4254  0013                     	;# 
  4255  0016                     	;# 
  4256  0017                     	;# 
  4257  0018                     	;# 
  4258  001C                     	;# 
  4259  001C                     	;# 
  4260  001D                     	;# 
  4261  001D                     	;# 
  4262  001E                     	;# 
  4263  001F                     	;# 
  4264  008C                     	;# 
  4265  008C                     	;# 
  4266  008D                     	;# 
  4267  008E                     	;# 
  4268  008E                     	;# 
  4269  008F                     	;# 
  4270  0090                     	;# 
  4271  0090                     	;# 
  4272  0091                     	;# 
  4273  0093                     	;# 
  4274  0094                     	;# 
  4275  0095                     	;# 
  4276  0096                     	;# 
  4277  0097                     	;# 
  4278  0098                     	;# 
  4279  0099                     	;# 
  4280  009A                     	;# 
  4281  009B                     	;# 
  4282  009C                     	;# 
  4283  009D                     	;# 
  4284  009E                     	;# 
  4285  010C                     	;# 
  4286  010D                     	;# 
  4287  010E                     	;# 
  4288  010E                     	;# 
  4289  010F                     	;# 
  4290  0110                     	;# 
  4291  0110                     	;# 
  4292  0111                     	;# 
  4293  0112                     	;# 
  4294  0112                     	;# 
  4295  0113                     	;# 
  4296  0114                     	;# 
  4297  0114                     	;# 
  4298  0115                     	;# 
  4299  0116                     	;# 
  4300  0116                     	;# 
  4301  0117                     	;# 
  4302  0119                     	;# 
  4303  0119                     	;# 
  4304  0119                     	;# 
  4305  011A                     	;# 
  4306  011A                     	;# 
  4307  011A                     	;# 
  4308  011B                     	;# 
  4309  011B                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011C                     	;# 
  4314  011C                     	;# 
  4315  011C                     	;# 
  4316  011D                     	;# 
  4317  011D                     	;# 
  4318  011D                     	;# 
  4319  011E                     	;# 
  4320  011E                     	;# 
  4321  011E                     	;# 
  4322  011F                     	;# 
  4323  011F                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  018C                     	;# 
  4328  018D                     	;# 
  4329  018E                     	;# 
  4330  018F                     	;# 
  4331  0190                     	;# 
  4332  0191                     	;# 
  4333  0192                     	;# 
  4334  0196                     	;# 
  4335  0197                     	;# 
  4336  0198                     	;# 
  4337  0199                     	;# 
  4338  019A                     	;# 
  4339  019B                     	;# 
  4340  019C                     	;# 
  4341  020C                     	;# 
  4342  020C                     	;# 
  4343  020D                     	;# 
  4344  020E                     	;# 
  4345  020F                     	;# 
  4346  020F                     	;# 
  4347  0210                     	;# 
  4348  0210                     	;# 
  4349  0211                     	;# 
  4350  0211                     	;# 
  4351  0212                     	;# 
  4352  0212                     	;# 
  4353  0213                     	;# 
  4354  0214                     	;# 
  4355  0215                     	;# 
  4356  0215                     	;# 
  4357  0216                     	;# 
  4358  0216                     	;# 
  4359  0217                     	;# 
  4360  0217                     	;# 
  4361  0218                     	;# 
  4362  0218                     	;# 
  4363  0219                     	;# 
  4364  021A                     	;# 
  4365  021B                     	;# 
  4366  021B                     	;# 
  4367  021C                     	;# 
  4368  021C                     	;# 
  4369  021D                     	;# 
  4370  021D                     	;# 
  4371  021E                     	;# 
  4372  021F                     	;# 
  4373  028C                     	;# 
  4374  028C                     	;# 
  4375  028D                     	;# 
  4376  028D                     	;# 
  4377  028E                     	;# 
  4378  028F                     	;# 
  4379  0290                     	;# 
  4380  0290                     	;# 
  4381  0291                     	;# 
  4382  0292                     	;# 
  4383  0292                     	;# 
  4384  0293                     	;# 
  4385  0293                     	;# 
  4386  0294                     	;# 
  4387  0295                     	;# 
  4388  0296                     	;# 
  4389  0296                     	;# 
  4390  0297                     	;# 
  4391  0298                     	;# 
  4392  0298                     	;# 
  4393  0299                     	;# 
  4394  0299                     	;# 
  4395  029A                     	;# 
  4396  029B                     	;# 
  4397  029C                     	;# 
  4398  029C                     	;# 
  4399  029D                     	;# 
  4400  030C                     	;# 
  4401  030C                     	;# 
  4402  030D                     	;# 
  4403  030E                     	;# 
  4404  030F                     	;# 
  4405  0310                     	;# 
  4406  0310                     	;# 
  4407  0311                     	;# 
  4408  0312                     	;# 
  4409  0313                     	;# 
  4410  0314                     	;# 
  4411  0314                     	;# 
  4412  0315                     	;# 
  4413  0316                     	;# 
  4414  0317                     	;# 
  4415  0318                     	;# 
  4416  0318                     	;# 
  4417  0319                     	;# 
  4418  031A                     	;# 
  4419  031B                     	;# 
  4420  031C                     	;# 
  4421  031C                     	;# 
  4422  031D                     	;# 
  4423  031E                     	;# 
  4424  031F                     	;# 
  4425  038C                     	;# 
  4426  038D                     	;# 
  4427  038E                     	;# 
  4428  0390                     	;# 
  4429  0391                     	;# 
  4430  0392                     	;# 
  4431  040C                     	;# 
  4432  040D                     	;# 
  4433  040E                     	;# 
  4434  040F                     	;# 
  4435  0410                     	;# 
  4436  0411                     	;# 
  4437  0416                     	;# 
  4438  0416                     	;# 
  4439  0417                     	;# 
  4440  0418                     	;# 
  4441  0418                     	;# 
  4442  0419                     	;# 
  4443  041A                     	;# 
  4444  041A                     	;# 
  4445  041B                     	;# 
  4446  041C                     	;# 
  4447  041C                     	;# 
  4448  041D                     	;# 
  4449  041E                     	;# 
  4450  041F                     	;# 
  4451  048C                     	;# 
  4452  048C                     	;# 
  4453  048D                     	;# 
  4454  048E                     	;# 
  4455  048F                     	;# 
  4456  048F                     	;# 
  4457  0490                     	;# 
  4458  0491                     	;# 
  4459  0492                     	;# 
  4460  0492                     	;# 
  4461  0493                     	;# 
  4462  0494                     	;# 
  4463  0495                     	;# 
  4464  0495                     	;# 
  4465  0496                     	;# 
  4466  0497                     	;# 
  4467  0498                     	;# 
  4468  0499                     	;# 
  4469  049A                     	;# 
  4470  049B                     	;# 
  4471  049C                     	;# 
  4472  049D                     	;# 
  4473  050C                     	;# 
  4474  050C                     	;# 
  4475  050D                     	;# 
  4476  050E                     	;# 
  4477  050F                     	;# 
  4478  050F                     	;# 
  4479  0510                     	;# 
  4480  0511                     	;# 
  4481  0512                     	;# 
  4482  0512                     	;# 
  4483  0513                     	;# 
  4484  0514                     	;# 
  4485  0515                     	;# 
  4486  0515                     	;# 
  4487  0516                     	;# 
  4488  0517                     	;# 
  4489  0518                     	;# 
  4490  0519                     	;# 
  4491  051A                     	;# 
  4492  051B                     	;# 
  4493  051C                     	;# 
  4494  051D                     	;# 
  4495  058C                     	;# 
  4496  058C                     	;# 
  4497  058D                     	;# 
  4498  058E                     	;# 
  4499  058F                     	;# 
  4500  058F                     	;# 
  4501  0590                     	;# 
  4502  0591                     	;# 
  4503  0592                     	;# 
  4504  0593                     	;# 
  4505  060C                     	;# 
  4506  060D                     	;# 
  4507  060E                     	;# 
  4508  060F                     	;# 
  4509  0610                     	;# 
  4510  0611                     	;# 
  4511  0612                     	;# 
  4512  0613                     	;# 
  4513  0614                     	;# 
  4514  0616                     	;# 
  4515  0617                     	;# 
  4516  0618                     	;# 
  4517  0619                     	;# 
  4518  061A                     	;# 
  4519  061B                     	;# 
  4520  061C                     	;# 
  4521  061D                     	;# 
  4522  061E                     	;# 
  4523  068C                     	;# 
  4524  068D                     	;# 
  4525  068E                     	;# 
  4526  068F                     	;# 
  4527  0690                     	;# 
  4528  0691                     	;# 
  4529  0692                     	;# 
  4530  0693                     	;# 
  4531  0694                     	;# 
  4532  070C                     	;# 
  4533  070D                     	;# 
  4534  070E                     	;# 
  4535  070F                     	;# 
  4536  0710                     	;# 
  4537  0711                     	;# 
  4538  0712                     	;# 
  4539  0713                     	;# 
  4540  0714                     	;# 
  4541  0716                     	;# 
  4542  0717                     	;# 
  4543  0718                     	;# 
  4544  0719                     	;# 
  4545  071A                     	;# 
  4546  071B                     	;# 
  4547  071C                     	;# 
  4548  071D                     	;# 
  4549  071E                     	;# 
  4550  0796                     	;# 
  4551  0797                     	;# 
  4552  0798                     	;# 
  4553  0799                     	;# 
  4554  079A                     	;# 
  4555  079B                     	;# 
  4556  080C                     	;# 
  4557  080D                     	;# 
  4558  080E                     	;# 
  4559  080F                     	;# 
  4560  0810                     	;# 
  4561  0811                     	;# 
  4562  0812                     	;# 
  4563  0813                     	;# 
  4564  0814                     	;# 
  4565  081A                     	;# 
  4566  081B                     	;# 
  4567  081C                     	;# 
  4568  081D                     	;# 
  4569  081E                     	;# 
  4570  081F                     	;# 
  4571  088C                     	;# 
  4572  088D                     	;# 
  4573  088E                     	;# 
  4574  088F                     	;# 
  4575  0890                     	;# 
  4576  0891                     	;# 
  4577  0892                     	;# 
  4578  0893                     	;# 
  4579  0895                     	;# 
  4580  0896                     	;# 
  4581  0897                     	;# 
  4582  0898                     	;# 
  4583  0899                     	;# 
  4584  089A                     	;# 
  4585  089B                     	;# 
  4586  090C                     	;# 
  4587  090E                     	;# 
  4588  090F                     	;# 
  4589  091F                     	;# 
  4590  091F                     	;# 
  4591  098F                     	;# 
  4592  098F                     	;# 
  4593  0990                     	;# 
  4594  0991                     	;# 
  4595  0992                     	;# 
  4596  0993                     	;# 
  4597  0994                     	;# 
  4598  0995                     	;# 
  4599  0996                     	;# 
  4600  0997                     	;# 
  4601  0E0F                     	;# 
  4602  0E10                     	;# 
  4603  0E11                     	;# 
  4604  0E12                     	;# 
  4605  0E13                     	;# 
  4606  0E14                     	;# 
  4607  0E15                     	;# 
  4608  0E16                     	;# 
  4609  0E17                     	;# 
  4610  0E18                     	;# 
  4611  0E19                     	;# 
  4612  0E1A                     	;# 
  4613  0E1B                     	;# 
  4614  0E1C                     	;# 
  4615  0E1D                     	;# 
  4616  0E1E                     	;# 
  4617  0E1F                     	;# 
  4618  0E20                     	;# 
  4619  0E21                     	;# 
  4620  0E22                     	;# 
  4621  0E23                     	;# 
  4622  0E24                     	;# 
  4623  0E25                     	;# 
  4624  0E26                     	;# 
  4625  0E27                     	;# 
  4626  0E28                     	;# 
  4627  0E29                     	;# 
  4628  0E2A                     	;# 
  4629  0E2B                     	;# 
  4630  0E2C                     	;# 
  4631  0E2D                     	;# 
  4632  0E2E                     	;# 
  4633  0E2F                     	;# 
  4634  0E30                     	;# 
  4635  0E31                     	;# 
  4636  0E32                     	;# 
  4637  0E33                     	;# 
  4638  0E34                     	;# 
  4639  0E35                     	;# 
  4640  0E36                     	;# 
  4641  0E37                     	;# 
  4642  0E8F                     	;# 
  4643  0E90                     	;# 
  4644  0E91                     	;# 
  4645  0E92                     	;# 
  4646  0E93                     	;# 
  4647  0E94                     	;# 
  4648  0E95                     	;# 
  4649  0E96                     	;# 
  4650  0E97                     	;# 
  4651  0E9C                     	;# 
  4652  0E9D                     	;# 
  4653  0E9E                     	;# 
  4654  0EA1                     	;# 
  4655  0EA2                     	;# 
  4656  0EA3                     	;# 
  4657  0EA4                     	;# 
  4658  0EA5                     	;# 
  4659  0EA9                     	;# 
  4660  0EAA                     	;# 
  4661  0EAB                     	;# 
  4662  0EAC                     	;# 
  4663  0EB1                     	;# 
  4664  0EB2                     	;# 
  4665  0EB3                     	;# 
  4666  0EB8                     	;# 
  4667  0EB9                     	;# 
  4668  0EBA                     	;# 
  4669  0EBB                     	;# 
  4670  0EBC                     	;# 
  4671  0EBD                     	;# 
  4672  0EBE                     	;# 
  4673  0EC3                     	;# 
  4674  0EC5                     	;# 
  4675  0EC6                     	;# 
  4676  0EC7                     	;# 
  4677  0EC8                     	;# 
  4678  0EC9                     	;# 
  4679  0ECA                     	;# 
  4680  0ECB                     	;# 
  4681  0ECC                     	;# 
  4682  0F10                     	;# 
  4683  0F11                     	;# 
  4684  0F12                     	;# 
  4685  0F13                     	;# 
  4686  0F14                     	;# 
  4687  0F15                     	;# 
  4688  0F16                     	;# 
  4689  0F17                     	;# 
  4690  0F18                     	;# 
  4691  0F19                     	;# 
  4692  0F1A                     	;# 
  4693  0F1B                     	;# 
  4694  0F1C                     	;# 
  4695  0F1D                     	;# 
  4696  0F1E                     	;# 
  4697  0F1F                     	;# 
  4698  0F20                     	;# 
  4699  0F21                     	;# 
  4700  0F22                     	;# 
  4701  0F23                     	;# 
  4702  0F24                     	;# 
  4703  0F25                     	;# 
  4704  0F26                     	;# 
  4705  0F27                     	;# 
  4706  0F38                     	;# 
  4707  0F39                     	;# 
  4708  0F3A                     	;# 
  4709  0F3B                     	;# 
  4710  0F3C                     	;# 
  4711  0F3D                     	;# 
  4712  0F3E                     	;# 
  4713  0F3F                     	;# 
  4714  0F40                     	;# 
  4715  0F41                     	;# 
  4716  0F43                     	;# 
  4717  0F44                     	;# 
  4718  0F45                     	;# 
  4719  0F46                     	;# 
  4720  0F47                     	;# 
  4721  0F48                     	;# 
  4722  0F49                     	;# 
  4723  0F4A                     	;# 
  4724  0F4B                     	;# 
  4725  0F4C                     	;# 
  4726  0F4E                     	;# 
  4727  0F4F                     	;# 
  4728  0F50                     	;# 
  4729  0F51                     	;# 
  4730  0F52                     	;# 
  4731  0F53                     	;# 
  4732  0F54                     	;# 
  4733  0F55                     	;# 
  4734  0F56                     	;# 
  4735  0F57                     	;# 
  4736  0F65                     	;# 
  4737  0F68                     	;# 
  4738  0F69                     	;# 
  4739  0F6A                     	;# 
  4740  0F6B                     	;# 
  4741  0FE4                     	;# 
  4742  0FE5                     	;# 
  4743  0FE6                     	;# 
  4744  0FE7                     	;# 
  4745  0FE8                     	;# 
  4746  0FE9                     	;# 
  4747  0FEA                     	;# 
  4748  0FEB                     	;# 
  4749  0FED                     	;# 
  4750  0FEE                     	;# 
  4751  0FEF                     	;# 
  4752  0000                     	;# 
  4753  0001                     	;# 
  4754  0002                     	;# 
  4755  0003                     	;# 
  4756  0004                     	;# 
  4757  0005                     	;# 
  4758  0006                     	;# 
  4759  0007                     	;# 
  4760  0008                     	;# 
  4761  0009                     	;# 
  4762  000A                     	;# 
  4763  000B                     	;# 
  4764  000C                     	;# 
  4765  000D                     	;# 
  4766  000E                     	;# 
  4767  0010                     	;# 
  4768  0011                     	;# 
  4769  0012                     	;# 
  4770  0013                     	;# 
  4771  0016                     	;# 
  4772  0017                     	;# 
  4773  0018                     	;# 
  4774  001C                     	;# 
  4775  001C                     	;# 
  4776  001D                     	;# 
  4777  001D                     	;# 
  4778  001E                     	;# 
  4779  001F                     	;# 
  4780  008C                     	;# 
  4781  008C                     	;# 
  4782  008D                     	;# 
  4783  008E                     	;# 
  4784  008E                     	;# 
  4785  008F                     	;# 
  4786  0090                     	;# 
  4787  0090                     	;# 
  4788  0091                     	;# 
  4789  0093                     	;# 
  4790  0094                     	;# 
  4791  0095                     	;# 
  4792  0096                     	;# 
  4793  0097                     	;# 
  4794  0098                     	;# 
  4795  0099                     	;# 
  4796  009A                     	;# 
  4797  009B                     	;# 
  4798  009C                     	;# 
  4799  009D                     	;# 
  4800  009E                     	;# 
  4801  010C                     	;# 
  4802  010D                     	;# 
  4803  010E                     	;# 
  4804  010E                     	;# 
  4805  010F                     	;# 
  4806  0110                     	;# 
  4807  0110                     	;# 
  4808  0111                     	;# 
  4809  0112                     	;# 
  4810  0112                     	;# 
  4811  0113                     	;# 
  4812  0114                     	;# 
  4813  0114                     	;# 
  4814  0115                     	;# 
  4815  0116                     	;# 
  4816  0116                     	;# 
  4817  0117                     	;# 
  4818  0119                     	;# 
  4819  0119                     	;# 
  4820  0119                     	;# 
  4821  011A                     	;# 
  4822  011A                     	;# 
  4823  011A                     	;# 
  4824  011B                     	;# 
  4825  011B                     	;# 
  4826  011B                     	;# 
  4827  011B                     	;# 
  4828  011B                     	;# 
  4829  011C                     	;# 
  4830  011C                     	;# 
  4831  011C                     	;# 
  4832  011D                     	;# 
  4833  011D                     	;# 
  4834  011D                     	;# 
  4835  011E                     	;# 
  4836  011E                     	;# 
  4837  011E                     	;# 
  4838  011F                     	;# 
  4839  011F                     	;# 
  4840  011F                     	;# 
  4841  011F                     	;# 
  4842  011F                     	;# 
  4843  018C                     	;# 
  4844  018D                     	;# 
  4845  018E                     	;# 
  4846  018F                     	;# 
  4847  0190                     	;# 
  4848  0191                     	;# 
  4849  0192                     	;# 
  4850  0196                     	;# 
  4851  0197                     	;# 
  4852  0198                     	;# 
  4853  0199                     	;# 
  4854  019A                     	;# 
  4855  019B                     	;# 
  4856  019C                     	;# 
  4857  020C                     	;# 
  4858  020C                     	;# 
  4859  020D                     	;# 
  4860  020E                     	;# 
  4861  020F                     	;# 
  4862  020F                     	;# 
  4863  0210                     	;# 
  4864  0210                     	;# 
  4865  0211                     	;# 
  4866  0211                     	;# 
  4867  0212                     	;# 
  4868  0212                     	;# 
  4869  0213                     	;# 
  4870  0214                     	;# 
  4871  0215                     	;# 
  4872  0215                     	;# 
  4873  0216                     	;# 
  4874  0216                     	;# 
  4875  0217                     	;# 
  4876  0217                     	;# 
  4877  0218                     	;# 
  4878  0218                     	;# 
  4879  0219                     	;# 
  4880  021A                     	;# 
  4881  021B                     	;# 
  4882  021B                     	;# 
  4883  021C                     	;# 
  4884  021C                     	;# 
  4885  021D                     	;# 
  4886  021D                     	;# 
  4887  021E                     	;# 
  4888  021F                     	;# 
  4889  028C                     	;# 
  4890  028C                     	;# 
  4891  028D                     	;# 
  4892  028D                     	;# 
  4893  028E                     	;# 
  4894  028F                     	;# 
  4895  0290                     	;# 
  4896  0290                     	;# 
  4897  0291                     	;# 
  4898  0292                     	;# 
  4899  0292                     	;# 
  4900  0293                     	;# 
  4901  0293                     	;# 
  4902  0294                     	;# 
  4903  0295                     	;# 
  4904  0296                     	;# 
  4905  0296                     	;# 
  4906  0297                     	;# 
  4907  0298                     	;# 
  4908  0298                     	;# 
  4909  0299                     	;# 
  4910  0299                     	;# 
  4911  029A                     	;# 
  4912  029B                     	;# 
  4913  029C                     	;# 
  4914  029C                     	;# 
  4915  029D                     	;# 
  4916  030C                     	;# 
  4917  030C                     	;# 
  4918  030D                     	;# 
  4919  030E                     	;# 
  4920  030F                     	;# 
  4921  0310                     	;# 
  4922  0310                     	;# 
  4923  0311                     	;# 
  4924  0312                     	;# 
  4925  0313                     	;# 
  4926  0314                     	;# 
  4927  0314                     	;# 
  4928  0315                     	;# 
  4929  0316                     	;# 
  4930  0317                     	;# 
  4931  0318                     	;# 
  4932  0318                     	;# 
  4933  0319                     	;# 
  4934  031A                     	;# 
  4935  031B                     	;# 
  4936  031C                     	;# 
  4937  031C                     	;# 
  4938  031D                     	;# 
  4939  031E                     	;# 
  4940  031F                     	;# 
  4941  038C                     	;# 
  4942  038D                     	;# 
  4943  038E                     	;# 
  4944  0390                     	;# 
  4945  0391                     	;# 
  4946  0392                     	;# 
  4947  040C                     	;# 
  4948  040D                     	;# 
  4949  040E                     	;# 
  4950  040F                     	;# 
  4951  0410                     	;# 
  4952  0411                     	;# 
  4953  0416                     	;# 
  4954  0416                     	;# 
  4955  0417                     	;# 
  4956  0418                     	;# 
  4957  0418                     	;# 
  4958  0419                     	;# 
  4959  041A                     	;# 
  4960  041A                     	;# 
  4961  041B                     	;# 
  4962  041C                     	;# 
  4963  041C                     	;# 
  4964  041D                     	;# 
  4965  041E                     	;# 
  4966  041F                     	;# 
  4967  048C                     	;# 
  4968  048C                     	;# 
  4969  048D                     	;# 
  4970  048E                     	;# 
  4971  048F                     	;# 
  4972  048F                     	;# 
  4973  0490                     	;# 
  4974  0491                     	;# 
  4975  0492                     	;# 
  4976  0492                     	;# 
  4977  0493                     	;# 
  4978  0494                     	;# 
  4979  0495                     	;# 
  4980  0495                     	;# 
  4981  0496                     	;# 
  4982  0497                     	;# 
  4983  0498                     	;# 
  4984  0499                     	;# 
  4985  049A                     	;# 
  4986  049B                     	;# 
  4987  049C                     	;# 
  4988  049D                     	;# 
  4989  050C                     	;# 
  4990  050C                     	;# 
  4991  050D                     	;# 
  4992  050E                     	;# 
  4993  050F                     	;# 
  4994  050F                     	;# 
  4995  0510                     	;# 
  4996  0511                     	;# 
  4997  0512                     	;# 
  4998  0512                     	;# 
  4999  0513                     	;# 
  5000  0514                     	;# 
  5001  0515                     	;# 
  5002  0515                     	;# 
  5003  0516                     	;# 
  5004  0517                     	;# 
  5005  0518                     	;# 
  5006  0519                     	;# 
  5007  051A                     	;# 
  5008  051B                     	;# 
  5009  051C                     	;# 
  5010  051D                     	;# 
  5011  058C                     	;# 
  5012  058C                     	;# 
  5013  058D                     	;# 
  5014  058E                     	;# 
  5015  058F                     	;# 
  5016  058F                     	;# 
  5017  0590                     	;# 
  5018  0591                     	;# 
  5019  0592                     	;# 
  5020  0593                     	;# 
  5021  060C                     	;# 
  5022  060D                     	;# 
  5023  060E                     	;# 
  5024  060F                     	;# 
  5025  0610                     	;# 
  5026  0611                     	;# 
  5027  0612                     	;# 
  5028  0613                     	;# 
  5029  0614                     	;# 
  5030  0616                     	;# 
  5031  0617                     	;# 
  5032  0618                     	;# 
  5033  0619                     	;# 
  5034  061A                     	;# 
  5035  061B                     	;# 
  5036  061C                     	;# 
  5037  061D                     	;# 
  5038  061E                     	;# 
  5039  068C                     	;# 
  5040  068D                     	;# 
  5041  068E                     	;# 
  5042  068F                     	;# 
  5043  0690                     	;# 
  5044  0691                     	;# 
  5045  0692                     	;# 
  5046  0693                     	;# 
  5047  0694                     	;# 
  5048  070C                     	;# 
  5049  070D                     	;# 
  5050  070E                     	;# 
  5051  070F                     	;# 
  5052  0710                     	;# 
  5053  0711                     	;# 
  5054  0712                     	;# 
  5055  0713                     	;# 
  5056  0714                     	;# 
  5057  0716                     	;# 
  5058  0717                     	;# 
  5059  0718                     	;# 
  5060  0719                     	;# 
  5061  071A                     	;# 
  5062  071B                     	;# 
  5063  071C                     	;# 
  5064  071D                     	;# 
  5065  071E                     	;# 
  5066  0796                     	;# 
  5067  0797                     	;# 
  5068  0798                     	;# 
  5069  0799                     	;# 
  5070  079A                     	;# 
  5071  079B                     	;# 
  5072  080C                     	;# 
  5073  080D                     	;# 
  5074  080E                     	;# 
  5075  080F                     	;# 
  5076  0810                     	;# 
  5077  0811                     	;# 
  5078  0812                     	;# 
  5079  0813                     	;# 
  5080  0814                     	;# 
  5081  081A                     	;# 
  5082  081B                     	;# 
  5083  081C                     	;# 
  5084  081D                     	;# 
  5085  081E                     	;# 
  5086  081F                     	;# 
  5087  088C                     	;# 
  5088  088D                     	;# 
  5089  088E                     	;# 
  5090  088F                     	;# 
  5091  0890                     	;# 
  5092  0891                     	;# 
  5093  0892                     	;# 
  5094  0893                     	;# 
  5095  0895                     	;# 
  5096  0896                     	;# 
  5097  0897                     	;# 
  5098  0898                     	;# 
  5099  0899                     	;# 
  5100  089A                     	;# 
  5101  089B                     	;# 
  5102  090C                     	;# 
  5103  090E                     	;# 
  5104  090F                     	;# 
  5105  091F                     	;# 
  5106  091F                     	;# 
  5107  098F                     	;# 
  5108  098F                     	;# 
  5109  0990                     	;# 
  5110  0991                     	;# 
  5111  0992                     	;# 
  5112  0993                     	;# 
  5113  0994                     	;# 
  5114  0995                     	;# 
  5115  0996                     	;# 
  5116  0997                     	;# 
  5117  0E0F                     	;# 
  5118  0E10                     	;# 
  5119  0E11                     	;# 
  5120  0E12                     	;# 
  5121  0E13                     	;# 
  5122  0E14                     	;# 
  5123  0E15                     	;# 
  5124  0E16                     	;# 
  5125  0E17                     	;# 
  5126  0E18                     	;# 
  5127  0E19                     	;# 
  5128  0E1A                     	;# 
  5129  0E1B                     	;# 
  5130  0E1C                     	;# 
  5131  0E1D                     	;# 
  5132  0E1E                     	;# 
  5133  0E1F                     	;# 
  5134  0E20                     	;# 
  5135  0E21                     	;# 
  5136  0E22                     	;# 
  5137  0E23                     	;# 
  5138  0E24                     	;# 
  5139  0E25                     	;# 
  5140  0E26                     	;# 
  5141  0E27                     	;# 
  5142  0E28                     	;# 
  5143  0E29                     	;# 
  5144  0E2A                     	;# 
  5145  0E2B                     	;# 
  5146  0E2C                     	;# 
  5147  0E2D                     	;# 
  5148  0E2E                     	;# 
  5149  0E2F                     	;# 
  5150  0E30                     	;# 
  5151  0E31                     	;# 
  5152  0E32                     	;# 
  5153  0E33                     	;# 
  5154  0E34                     	;# 
  5155  0E35                     	;# 
  5156  0E36                     	;# 
  5157  0E37                     	;# 
  5158  0E8F                     	;# 
  5159  0E90                     	;# 
  5160  0E91                     	;# 
  5161  0E92                     	;# 
  5162  0E93                     	;# 
  5163  0E94                     	;# 
  5164  0E95                     	;# 
  5165  0E96                     	;# 
  5166  0E97                     	;# 
  5167  0E9C                     	;# 
  5168  0E9D                     	;# 
  5169  0E9E                     	;# 
  5170  0EA1                     	;# 
  5171  0EA2                     	;# 
  5172  0EA3                     	;# 
  5173  0EA4                     	;# 
  5174  0EA5                     	;# 
  5175  0EA9                     	;# 
  5176  0EAA                     	;# 
  5177  0EAB                     	;# 
  5178  0EAC                     	;# 
  5179  0EB1                     	;# 
  5180  0EB2                     	;# 
  5181  0EB3                     	;# 
  5182  0EB8                     	;# 
  5183  0EB9                     	;# 
  5184  0EBA                     	;# 
  5185  0EBB                     	;# 
  5186  0EBC                     	;# 
  5187  0EBD                     	;# 
  5188  0EBE                     	;# 
  5189  0EC3                     	;# 
  5190  0EC5                     	;# 
  5191  0EC6                     	;# 
  5192  0EC7                     	;# 
  5193  0EC8                     	;# 
  5194  0EC9                     	;# 
  5195  0ECA                     	;# 
  5196  0ECB                     	;# 
  5197  0ECC                     	;# 
  5198  0F10                     	;# 
  5199  0F11                     	;# 
  5200  0F12                     	;# 
  5201  0F13                     	;# 
  5202  0F14                     	;# 
  5203  0F15                     	;# 
  5204  0F16                     	;# 
  5205  0F17                     	;# 
  5206  0F18                     	;# 
  5207  0F19                     	;# 
  5208  0F1A                     	;# 
  5209  0F1B                     	;# 
  5210  0F1C                     	;# 
  5211  0F1D                     	;# 
  5212  0F1E                     	;# 
  5213  0F1F                     	;# 
  5214  0F20                     	;# 
  5215  0F21                     	;# 
  5216  0F22                     	;# 
  5217  0F23                     	;# 
  5218  0F24                     	;# 
  5219  0F25                     	;# 
  5220  0F26                     	;# 
  5221  0F27                     	;# 
  5222  0F38                     	;# 
  5223  0F39                     	;# 
  5224  0F3A                     	;# 
  5225  0F3B                     	;# 
  5226  0F3C                     	;# 
  5227  0F3D                     	;# 
  5228  0F3E                     	;# 
  5229  0F3F                     	;# 
  5230  0F40                     	;# 
  5231  0F41                     	;# 
  5232  0F43                     	;# 
  5233  0F44                     	;# 
  5234  0F45                     	;# 
  5235  0F46                     	;# 
  5236  0F47                     	;# 
  5237  0F48                     	;# 
  5238  0F49                     	;# 
  5239  0F4A                     	;# 
  5240  0F4B                     	;# 
  5241  0F4C                     	;# 
  5242  0F4E                     	;# 
  5243  0F4F                     	;# 
  5244  0F50                     	;# 
  5245  0F51                     	;# 
  5246  0F52                     	;# 
  5247  0F53                     	;# 
  5248  0F54                     	;# 
  5249  0F55                     	;# 
  5250  0F56                     	;# 
  5251  0F57                     	;# 
  5252  0F65                     	;# 
  5253  0F68                     	;# 
  5254  0F69                     	;# 
  5255  0F6A                     	;# 
  5256  0F6B                     	;# 
  5257  0FE4                     	;# 
  5258  0FE5                     	;# 
  5259  0FE6                     	;# 
  5260  0FE7                     	;# 
  5261  0FE8                     	;# 
  5262  0FE9                     	;# 
  5263  0FEA                     	;# 
  5264  0FEB                     	;# 
  5265  0FED                     	;# 
  5266  0FEE                     	;# 
  5267  0FEF                     	;_samples
  5268                           
  5269                           	psect	idataBANK1
  5270  11FB                     __pidataBANK1:	
  5271                           
  5272                           ;initializer for _batteryTemp
  5273  11FB  34FA               	retlw	250
  5274  11FC  3400               	retlw	0
  5275                           
  5276                           	psect	idataBANK2
  5277  11FD                     __pidataBANK2:	
  5278                           
  5279                           ;initializer for _channels
  5280  11FD  3414               	retlw	20
  5281  11FE  3400               	retlw	0
  5282  11FF  3410               	retlw	16
  5283  1200  3400               	retlw	0
  5284  1201  3416               	retlw	22
  5285  1202  3400               	retlw	0
  5286  1203  3412               	retlw	18
  5287  1204  3400               	retlw	0
  5288                           
  5289                           	psect	stringtext1
  5290  0800                     __pstringtext1:	
  5291  0800                     _fonts:	
  5292  0800  3400               	retlw	0
  5293  0801  3400               	retlw	0
  5294  0802  3400               	retlw	0
  5295  0803  3400               	retlw	0
  5296  0804  344E               	retlw	78
  5297  0805  3400               	retlw	0
  5298  0806  3406               	retlw	6
  5299  0807  3400               	retlw	0
  5300  0808  3406               	retlw	6
  5301  0809  34FF               	retlw	255
  5302  080A  34FF               	retlw	255
  5303  080B  34FF               	retlw	255
  5304  080C  3448               	retlw	72
  5305  080D  34D6               	retlw	214
  5306  080E  3424               	retlw	36
  5307  080F  3412               	retlw	18
  5308  0810  3408               	retlw	8
  5309  0811  3424               	retlw	36
  5310  0812  34FF               	retlw	255
  5311  0813  34FF               	retlw	255
  5312  0814  34FF               	retlw	255
  5313  0815  3400               	retlw	0
  5314  0816  3406               	retlw	6
  5315  0817  3400               	retlw	0
  5316  0818  3438               	retlw	56
  5317  0819  3444               	retlw	68
  5318  081A  3482               	retlw	130
  5319  081B  3482               	retlw	130
  5320  081C  3444               	retlw	68
  5321  081D  3438               	retlw	56
  5322  081E  3414               	retlw	20
  5323  081F  3408               	retlw	8
  5324  0820  343E               	retlw	62
  5325  0821  3410               	retlw	16
  5326  0822  3438               	retlw	56
  5327  0823  3410               	retlw	16
  5328  0824  34A0               	retlw	160
  5329  0825  3460               	retlw	96
  5330  0826  3400               	retlw	0
  5331  0827  3410               	retlw	16
  5332  0828  3410               	retlw	16
  5333  0829  3410               	retlw	16
  5334  082A  3460               	retlw	96
  5335  082B  3460               	retlw	96
  5336  082C  3400               	retlw	0
  5337  082D  3460               	retlw	96
  5338  082E  3418               	retlw	24
  5339  082F  3406               	retlw	6
  5340  0830  347C               	retlw	124
  5341  0831  3442               	retlw	66
  5342  0832  347C               	retlw	124
  5343  0833  3444               	retlw	68
  5344  0834  347E               	retlw	126
  5345  0835  3440               	retlw	64
  5346  0836  3464               	retlw	100
  5347  0837  3452               	retlw	82
  5348  0838  344C               	retlw	76
  5349  0839  344A               	retlw	74
  5350  083A  344A               	retlw	74
  5351  083B  3434               	retlw	52
  5352  083C  3438               	retlw	56
  5353  083D  3424               	retlw	36
  5354  083E  347E               	retlw	126
  5355  083F  344E               	retlw	78
  5356  0840  344A               	retlw	74
  5357  0841  3432               	retlw	50
  5358  0842  343C               	retlw	60
  5359  0843  344A               	retlw	74
  5360  0844  3432               	retlw	50
  5361  0845  3462               	retlw	98
  5362  0846  341A               	retlw	26
  5363  0847  3406               	retlw	6
  5364  0848  3476               	retlw	118
  5365  0849  344A               	retlw	74
  5366  084A  3476               	retlw	118
  5367  084B  344C               	retlw	76
  5368  084C  3452               	retlw	82
  5369  084D  343C               	retlw	60
  5370  084E  346C               	retlw	108
  5371  084F  346C               	retlw	108
  5372  0850  3400               	retlw	0
  5373  0851  34AC               	retlw	172
  5374  0852  346C               	retlw	108
  5375  0853  3400               	retlw	0
  5376  0854  3410               	retlw	16
  5377  0855  3428               	retlw	40
  5378  0856  3444               	retlw	68
  5379  0857  3428               	retlw	40
  5380  0858  3428               	retlw	40
  5381  0859  3428               	retlw	40
  5382  085A  3444               	retlw	68
  5383  085B  3428               	retlw	40
  5384  085C  3410               	retlw	16
  5385  085D  3402               	retlw	2
  5386  085E  3459               	retlw	89
  5387  085F  3406               	retlw	6
  5388  0860  34FF               	retlw	255
  5389  0861  34FF               	retlw	255
  5390  0862  34FF               	retlw	255
  5391  0863  347C               	retlw	124
  5392  0864  3412               	retlw	18
  5393  0865  347C               	retlw	124
  5394  0866  347E               	retlw	126
  5395  0867  345A               	retlw	90
  5396  0868  3434               	retlw	52
  5397  0869  343C               	retlw	60
  5398  086A  3442               	retlw	66
  5399  086B  3442               	retlw	66
  5400  086C  347E               	retlw	126
  5401  086D  3442               	retlw	66
  5402  086E  343C               	retlw	60
  5403  086F  347E               	retlw	126
  5404  0870  344A               	retlw	74
  5405  0871  3442               	retlw	66
  5406  0872  347E               	retlw	126
  5407  0873  340A               	retlw	10
  5408  0874  340A               	retlw	10
  5409  0875  343C               	retlw	60
  5410  0876  3452               	retlw	82
  5411  0877  3434               	retlw	52
  5412  0878  347E               	retlw	126
  5413  0879  3408               	retlw	8
  5414  087A  347E               	retlw	126
  5415  087B  3442               	retlw	66
  5416  087C  347E               	retlw	126
  5417  087D  3442               	retlw	66
  5418  087E  3430               	retlw	48
  5419  087F  3440               	retlw	64
  5420  0880  343E               	retlw	62
  5421  0881  347E               	retlw	126
  5422  0882  3418               	retlw	24
  5423  0883  3466               	retlw	102
  5424  0884  347E               	retlw	126
  5425  0885  3440               	retlw	64
  5426  0886  3440               	retlw	64
  5427  0887  347E               	retlw	126
  5428  0888  341C               	retlw	28
  5429  0889  347E               	retlw	126
  5430  088A  347E               	retlw	126
  5431  088B  3402               	retlw	2
  5432  088C  347E               	retlw	126
  5433  088D  343C               	retlw	60
  5434  088E  3442               	retlw	66
  5435  088F  343C               	retlw	60
  5436  0890  347E               	retlw	126
  5437  0891  3412               	retlw	18
  5438  0892  340C               	retlw	12
  5439  0893  347E               	retlw	126
  5440  0894  3462               	retlw	98
  5441  0895  34FE               	retlw	254
  5442  0896  347E               	retlw	126
  5443  0897  3432               	retlw	50
  5444  0898  344E               	retlw	78
  5445  0899  3444               	retlw	68
  5446  089A  344A               	retlw	74
  5447  089B  3432               	retlw	50
  5448  089C  3402               	retlw	2
  5449  089D  347E               	retlw	126
  5450  089E  3402               	retlw	2
  5451  089F  347E               	retlw	126
  5452  08A0  3440               	retlw	64
  5453  08A1  347E               	retlw	126
  5454  08A2  343E               	retlw	62
  5455  08A3  3440               	retlw	64
  5456  08A4  343E               	retlw	62
  5457  08A5  347E               	retlw	126
  5458  08A6  3438               	retlw	56
  5459  08A7  347E               	retlw	126
  5460  08A8  3466               	retlw	102
  5461  08A9  3418               	retlw	24
  5462  08AA  3466               	retlw	102
  5463  08AB  340E               	retlw	14
  5464  08AC  3470               	retlw	112
  5465  08AD  340E               	retlw	14
  5466  08AE  3462               	retlw	98
  5467  08AF  345A               	retlw	90
  5468  08B0  3446               	retlw	70
  5469  08B1  3400               	retlw	0
  5470  08B2  347E               	retlw	126
  5471  08B3  3442               	retlw	66
  5472  08B4  3406               	retlw	6
  5473  08B5  3418               	retlw	24
  5474  08B6  3460               	retlw	96
  5475  08B7  3442               	retlw	66
  5476  08B8  347E               	retlw	126
  5477  08B9  3400               	retlw	0
  5478  08BA  3404               	retlw	4
  5479  08BB  3402               	retlw	2
  5480  08BC  3404               	retlw	4
  5481  08BD  3440               	retlw	64
  5482  08BE  3440               	retlw	64
  5483  08BF  3440               	retlw	64
  5484  08C0  3400               	retlw	0
  5485  08C1  3402               	retlw	2
  5486  08C2  3404               	retlw	4
  5487  08C3  3474               	retlw	116
  5488  08C4  3454               	retlw	84
  5489  08C5  3478               	retlw	120
  5490  08C6  347E               	retlw	126
  5491  08C7  3448               	retlw	72
  5492  08C8  3430               	retlw	48
  5493  08C9  3430               	retlw	48
  5494  08CA  3448               	retlw	72
  5495  08CB  3448               	retlw	72
  5496  08CC  3430               	retlw	48
  5497  08CD  3448               	retlw	72
  5498  08CE  347E               	retlw	126
  5499  08CF  3438               	retlw	56
  5500  08D0  3454               	retlw	84
  5501  08D1  3458               	retlw	88
  5502  08D2  347C               	retlw	124
  5503  08D3  340A               	retlw	10
  5504  08D4  3402               	retlw	2
  5505  08D5  3498               	retlw	152
  5506  08D6  34A4               	retlw	164
  5507  08D7  347C               	retlw	124
  5508  08D8  347E               	retlw	126
  5509  08D9  3408               	retlw	8
  5510  08DA  3470               	retlw	112
  5511  08DB  3448               	retlw	72
  5512  08DC  347A               	retlw	122
  5513  08DD  3440               	retlw	64
  5514  08DE  3488               	retlw	136
  5515  08DF  34FA               	retlw	250
  5516  08E0  3400               	retlw	0
  5517  08E1  347E               	retlw	126
  5518  08E2  3418               	retlw	24
  5519  08E3  3464               	retlw	100
  5520  08E4  3442               	retlw	66
  5521  08E5  347E               	retlw	126
  5522  08E6  3440               	retlw	64
  5523  08E7  347C               	retlw	124
  5524  08E8  3438               	retlw	56
  5525  08E9  347C               	retlw	124
  5526  08EA  347C               	retlw	124
  5527  08EB  3404               	retlw	4
  5528  08EC  3478               	retlw	120
  5529  08ED  3438               	retlw	56
  5530  08EE  3444               	retlw	68
  5531  08EF  3438               	retlw	56
  5532  08F0  34FC               	retlw	252
  5533  08F1  3424               	retlw	36
  5534  08F2  3418               	retlw	24
  5535  08F3  3418               	retlw	24
  5536  08F4  3424               	retlw	36
  5537  08F5  34FC               	retlw	252
  5538  08F6  3478               	retlw	120
  5539  08F7  3404               	retlw	4
  5540  08F8  3404               	retlw	4
  5541  08F9  3448               	retlw	72
  5542  08FA  3454               	retlw	84
  5543  08FB  3424               	retlw	36
  5544  08FC  3404               	retlw	4
  5545  08FD  343E               	retlw	62
  5546  08FE  3444               	retlw	68
  5547  08FF  347C               	retlw	124
  5548  0900  3440               	retlw	64
  5549  0901  347C               	retlw	124
  5550  0902  343C               	retlw	60
  5551  0903  3440               	retlw	64
  5552  0904  343C               	retlw	60
  5553  0905  347C               	retlw	124
  5554  0906  3430               	retlw	48
  5555  0907  347C               	retlw	124
  5556  0908  346C               	retlw	108
  5557  0909  3410               	retlw	16
  5558  090A  346C               	retlw	108
  5559  090B  349C               	retlw	156
  5560  090C  34A0               	retlw	160
  5561  090D  347C               	retlw	124
  5562  090E  3464               	retlw	100
  5563  090F  3454               	retlw	84
  5564  0910  344C               	retlw	76
  5565  0911  340C               	retlw	12
  5566  0912  3412               	retlw	18
  5567  0913  340C               	retlw	12
  5568  0914  34FF               	retlw	255
  5569  0915  34FF               	retlw	255
  5570  0916  34FF               	retlw	255
  5571  0917  34FF               	retlw	255
  5572  0918  34FF               	retlw	255
  5573  0919  34FF               	retlw	255
  5574  091A  34FF               	retlw	255
  5575  091B  34FF               	retlw	255
  5576  091C  34FF               	retlw	255
  5577  091D  34FF               	retlw	255
  5578  091E  34FF               	retlw	255
  5579  091F  34FF               	retlw	255
  5580  0920  34FF               	retlw	255
  5581  0921  34FF               	retlw	255
  5582  0922  34FF               	retlw	255
  5583  0923  34FF               	retlw	255
  5584  0924  34FF               	retlw	255
  5585  0925  34FF               	retlw	255
  5586  0926  34FC               	retlw	252
  5587  0927  3440               	retlw	64
  5588  0928  347C               	retlw	124
  5589  0929  34FF               	retlw	255
  5590  092A  34FF               	retlw	255
  5591  092B  34FF               	retlw	255
  5592  092C  34FF               	retlw	255
  5593  092D  34FF               	retlw	255
  5594  092E  34FF               	retlw	255
  5595  092F                     __end_of_fonts:	
  5596                           
  5597                           	psect	stringtext2
  5598  1800                     __pstringtext2:	
  5599  1800                     log@coeff:	
  5600  1800  3400               	retlw	0
  5601  1801  3400               	retlw	0
  5602  1802  3400               	retlw	0
  5603  1803  3400               	retlw	0
  5604  1804  3480               	retlw	128
  5605  1805  343F               	retlw	63
  5606  1806  34F0               	retlw	240
  5607  1807  34FF               	retlw	255
  5608  1808  34BE               	retlw	190
  5609  1809  34E2               	retlw	226
  5610  180A  34A9               	retlw	169
  5611  180B  343E               	retlw	62
  5612  180C  3483               	retlw	131
  5613  180D  3476               	retlw	118
  5614  180E  34BE               	retlw	190
  5615  180F  34AE               	retlw	174
  5616  1810  342B               	retlw	43
  5617  1811  343E               	retlw	62
  5618  1812  343C               	retlw	60
  5619  1813  34C3               	retlw	195
  5620  1814  34BD               	retlw	189
  5621  1815  34D2               	retlw	210
  5622  1816  3413               	retlw	19
  5623  1817  343D               	retlw	61
  5624  1818  3478               	retlw	120
  5625  1819  34D3               	retlw	211
  5626  181A  34BB               	retlw	187
  5627  181B                     __end_oflog@coeff:	
  5628  0013                     _TRISC	set	19
  5629  0012                     _TRISB	set	18
  5630  0011                     _TRISA	set	17
  5631  0018                     _LATC	set	24
  5632  0017                     _LATB	set	23
  5633  0016                     _LATA	set	22
  5634  0016                     _LATAbits	set	22
  5635  0011                     _TRISAbits	set	17
  5636  00B5                     _LATA5	set	181
  5637  006A                     _RB2	set	106
  5638  005F                     _GIE	set	95
  5639  0093                     _ADCON0	set	147
  5640  009D                     _ADACQ	set	157
  5641  009C                     _ADPRE	set	156
  5642  009B                     _ADCAP	set	155
  5643  009A                     _ADREF	set	154
  5644  0098                     _ADCLK	set	152
  5645  0097                     _ADSTAT	set	151
  5646  0099                     _ADACT	set	153
  5647  0096                     _ADCON3	set	150
  5648  0095                     _ADCON2	set	149
  5649  0094                     _ADCON1	set	148
  5650  008C                     _ADRESL	set	140
  5651  008D                     _ADRESH	set	141
  5652  0093                     _ADCON0bits	set	147
  5653  009E                     _ADPCH	set	158
  5654  0113                     _ADSTPTH	set	275
  5655  0112                     _ADSTPTL	set	274
  5656  0111                     _ADUTHH	set	273
  5657  0110                     _ADUTHL	set	272
  5658  010F                     _ADLTHH	set	271
  5659  010E                     _ADLTHL	set	270
  5660  010D                     _ADRPT	set	269
  5661  021E                     _CCPTMRS0bits	set	542
  5662  021F                     _CCPTMRS1bits	set	543
  5663  0294                     _T4CONbits	set	660
  5664  0292                     _T4TMR	set	658
  5665  0293                     _T4PR	set	659
  5666  0297                     _T4RST	set	663
  5667  0295                     _T4HLT	set	661
  5668  0296                     _T4CLKCON	set	662
  5669  0294                     _T4CON	set	660
  5670  028E                     _T2CONbits	set	654
  5671  028C                     _T2TMR	set	652
  5672  028D                     _T2PR	set	653
  5673  0291                     _T2RST	set	657
  5674  028F                     _T2HLT	set	655
  5675  0290                     _T2CLKCON	set	656
  5676  028E                     _T2CON	set	654
  5677  030C                     _CCPR1L	set	780
  5678  030D                     _CCPR1H	set	781
  5679  030E                     _CCP1CONbits	set	782
  5680  0390                     _PWM7DCL	set	912
  5681  0391                     _PWM7DCH	set	913
  5682  0392                     _PWM7CON	set	914
  5683  038C                     _PWM6DCL	set	908
  5684  038D                     _PWM6DCH	set	909
  5685  038E                     _PWM6CON	set	910
  5686  0710                     _PIR4bits	set	1808
  5687  0716                     _PIE0bits	set	1814
  5688  0892                     _OSCTUNE	set	2194
  5689  0893                     _OSCFRQ	set	2195
  5690  0891                     _OSCEN	set	2193
  5691  088F                     _OSCCON3	set	2191
  5692  088D                     _OSCCON1	set	2189
  5693  090C                     _FVRCON	set	2316
  5694  0E8F                     _PPSLOCKbits	set	3727
  5695  0E8F                     _PPSLOCK	set	3727
  5696  0F1D                     _RB5PPS	set	3869
  5697  0F17                     _RA7PPS	set	3863
  5698  0F16                     _RA6PPS	set	3862
  5699  0F4E                     _ANSELC	set	3918
  5700  0F43                     _ANSELB	set	3907
  5701  0F38                     _ANSELA	set	3896
  5702  0F65                     _WPUE	set	3941
  5703  0F4F                     _WPUC	set	3919
  5704  0F44                     _WPUB	set	3908
  5705  0F39                     _WPUA	set	3897
  5706  181B                     STR_3:	
  5707  181B  3452               	retlw	82	;'R'
  5708  181C  3465               	retlw	101	;'e'
  5709  181D  3466               	retlw	102	;'f'
  5710  181E  343A               	retlw	58	;':'
  5711  181F  3400               	retlw	0
  5712                           
  5713                           	psect	stringtext3
  5714  1820                     __pstringtext3:	
  5715  1820                     STR_2:	
  5716  1820  344F               	retlw	79	;'O'
  5717  1821  3475               	retlw	117	;'u'
  5718  1822  3474               	retlw	116	;'t'
  5719  1823  343A               	retlw	58	;':'
  5720  1824  3400               	retlw	0
  5721                           
  5722                           	psect	stringtext4
  5723  1825                     __pstringtext4:	
  5724  1825                     STR_1:	
  5725  1825  3449               	retlw	73	;'I'
  5726  1826  346E               	retlw	110	;'n'
  5727  1827  343A               	retlw	58	;':'
  5728  1828  3400               	retlw	0
  5729                           
  5730                           	psect	stringtext5
  5731  0000                     __pstringtext5:	
  5732                           
  5733                           ; #config settings
  5734  0000                     
  5735                           	psect	cinit
  5736  07B4                     start_initialization:	
  5737  07B4                     __initialization:		;BIGRAM
  5738                           
  5739                           ; Initialize objects allocated to BANK1
  5740  07B4  0021               	movlb	1	; select bank1
  5741  07B5  3191  21FB  3187   	fcall	__pidataBANK1	;fetch initializer
  5742  07B8  00EB               	movwf	__pdataBANK1& (0+127)
  5743  07B9  3191  21FC  3187   	fcall	__pidataBANK1+1	;fetch initializer
  5744  07BC  00EC               	movwf	(__pdataBANK1+1)& (0+127)
  5745                           
  5746                           ; Initialize objects allocated to BANK2
  5747  07BD  30FD               	movlw	low __pidataBANK2
  5748  07BE  0084               	movwf	4
  5749  07BF  3091               	movlw	(high __pidataBANK2)| (0+128)
  5750  07C0  0085               	movwf	5
  5751  07C1  0022               	movlb	2	; select bank2
  5752  07C2  0012               	moviw fsr0++
  5753  07C3  00B9               	movwf	__pdataBANK2& (0+127)
  5754  07C4  0012               	moviw fsr0++
  5755  07C5  00BA               	movwf	(__pdataBANK2+1)& (0+127)
  5756  07C6  0012               	moviw fsr0++
  5757  07C7  00BB               	movwf	(__pdataBANK2+2)& (0+127)
  5758  07C8  0012               	moviw fsr0++
  5759  07C9  00BC               	movwf	(__pdataBANK2+3)& (0+127)
  5760  07CA  0012               	moviw fsr0++
  5761  07CB  00BD               	movwf	(__pdataBANK2+4)& (0+127)
  5762  07CC  0012               	moviw fsr0++
  5763  07CD  00BE               	movwf	(__pdataBANK2+5)& (0+127)
  5764  07CE  0012               	moviw fsr0++
  5765  07CF  00BF               	movwf	(__pdataBANK2+6)& (0+127)
  5766  07D0  0012               	moviw fsr0++
  5767  07D1  00C0               	movwf	(__pdataBANK2+7)& (0+127)
  5768                           
  5769                           ; Clear objects allocated to BIGRAM
  5770  07D2  3060               	movlw	low (0+8800)
  5771  07D3  0084               	movwf	4
  5772  07D4  3022               	movlw	high (0+8800)
  5773  07D5  0085               	movwf	5
  5774  07D6  3090               	movlw	144
  5775  07D7  00FE               	movwf	btemp
  5776  07D8  3001               	movlw	1
  5777  07D9  00FF               	movwf	btemp+1
  5778  07DA  3192  220E  3187   	fcall	clear_ram0
  5779                           
  5780                           ; Clear objects allocated to BANK0
  5781  07DD  305C               	movlw	low __pbssBANK0
  5782  07DE  0084               	movwf	4
  5783  07DF  3000               	movlw	high __pbssBANK0
  5784  07E0  0085               	movwf	5
  5785  07E1  3012               	movlw	18
  5786  07E2  00FE               	movwf	btemp
  5787  07E3  3000               	movlw	0
  5788  07E4  00FF               	movwf	btemp+1
  5789  07E5  3192  220E  3187   	fcall	clear_ram0
  5790                           
  5791                           ; Clear objects allocated to BANK1
  5792  07E8  30A0               	movlw	low __pbssBANK1
  5793  07E9  0084               	movwf	4
  5794  07EA  3000               	movlw	high __pbssBANK1
  5795  07EB  0085               	movwf	5
  5796  07EC  3032               	movlw	50
  5797  07ED  00FE               	movwf	btemp
  5798  07EE  3000               	movlw	0
  5799  07EF  00FF               	movwf	btemp+1
  5800  07F0  3192  220E  3187   	fcall	clear_ram0
  5801                           
  5802                           ; Clear objects allocated to BANK2
  5803  07F3  3020               	movlw	low __pbssBANK2
  5804  07F4  0084               	movwf	4
  5805  07F5  3001               	movlw	high __pbssBANK2
  5806  07F6  0085               	movwf	5
  5807  07F7  3019               	movlw	25
  5808  07F8  00FE               	movwf	btemp
  5809  07F9  3000               	movlw	0
  5810  07FA  00FF               	movwf	btemp+1
  5811  07FB  3192  220E         	fcall	clear_ram0
  5812  07FD                     end_of_initialization:	
  5813                           ;End of C runtime variable initialization code
  5814                           
  5815  07FD                     __end_of__initialization:	
  5816  07FD  0020               	movlb	0
  5817  07FE  3182  2A1A         	ljmp	_main	;jump to C main() function
  5818                           
  5819                           	psect	bssBANK0
  5820  005C                     __pbssBANK0:	
  5821  005C                     _stateCounter:	
  5822  005C                     	ds	4
  5823  0060                     _IminCount:	
  5824  0060                     	ds	4
  5825  0064                     _readButtons:	
  5826  0064                     	ds	2
  5827  0066                     _cc_cv:	
  5828  0066                     	ds	2
  5829  0068                     _sampleIndex:	
  5830  0068                     	ds	2
  5831  006A                     _j:	
  5832  006A                     	ds	1
  5833  006B                     _lastButton:	
  5834  006B                     	ds	1
  5835  006C                     _button:	
  5836  006C                     	ds	1
  5837  006D                     _x:	
  5838  006D                     	ds	1
  5839                           
  5840                           	psect	bssBANK1
  5841  00A0                     __pbssBANK1:	
  5842  00A0                     _Ianalogs:	
  5843  00A0                     	ds	8
  5844  00A8                     _Vanalogs:	
  5845  00A8                     	ds	8
  5846  00B0                     _voltage:	
  5847  00B0                     	ds	8
  5848  00B8                     _current:	
  5849  00B8                     	ds	8
  5850  00C0                     _Vref:	
  5851  00C0                     	ds	4
  5852  00C4                     _Iref:	
  5853  00C4                     	ds	4
  5854  00C8                     _errno:	
  5855  00C8                     	ds	2
  5856  00CA                     _VHoldMode:	
  5857  00CA                     	ds	2
  5858  00CC                     _Iout:	
  5859  00CC                     	ds	2
  5860  00CE                     _Imode:	
  5861  00CE                     	ds	2
  5862  00D0                     _batteryState:	
  5863  00D0                     	ds	2
  5864                           
  5865                           	psect	dataBANK1
  5866  00EB                     __pdataBANK1:	
  5867  00EB                     _batteryTemp:	
  5868  00EB                     	ds	2
  5869                           
  5870                           	psect	bssBANK2
  5871  0120                     __pbssBANK2:	
  5872  0120                     _totals:	
  5873  0120                     	ds	16
  5874  0130                     LCDWriteInt@F14390:	
  5875  0130                     	ds	5
  5876  0135                     _Imin:	
  5877  0135                     	ds	4
  5878                           
  5879                           	psect	dataBANK2
  5880  0139                     __pdataBANK2:	
  5881  0139                     _channels:	
  5882  0139                     	ds	8
  5883                           
  5884                           	psect	clrtext
  5885  120E                     clear_ram0:	
  5886                           ;	Called with FSR0 containing the base address, and
  5887                           ;	btemp/btemp+1 has the size to clear
  5888                           
  5889  120E  0064               	clrwdt	;clear the watchdog before getting into this loop
  5890  120F                     clrloop0:	
  5891  120F  0180               	clrf	0	;clear RAM location pointed to by FSR
  5892  1210  3101               	addfsr 0,1
  5893  1211  3001               	movlw	1
  5894  1212  02FE               	subwf	126,f
  5895  1213  3000               	movlw	0
  5896  1214  3BFF               	subwfb	127,f
  5897  1215  087F               	movf	127,w
  5898  1216  047E               	iorwf	126,w
  5899  1217  1903               	btfsc	3,2
  5900  1218  3400               	retlw	0	;all done for this memory range, return
  5901  1219  2A0F               	goto	clrloop0	;have we reached the end yet?
  5902                           
  5903                           	psect	cstackBANK1
  5904  00D2                     __pcstackBANK1:	
  5905  00D2                     main@efficiency:	
  5906                           
  5907                           ; 3 bytes @ 0x0
  5908  00D2                     	ds	3
  5909  00D5                     main@faultCount:	
  5910                           
  5911                           ; 2 bytes @ 0x3
  5912  00D5                     	ds	2
  5913  00D7                     main@faultNotReset:	
  5914                           
  5915                           ; 2 bytes @ 0x5
  5916  00D7                     	ds	2
  5917  00D9                     main@displayRefresh:	
  5918                           
  5919                           ; 1 bytes @ 0x7
  5920  00D9                     	ds	1
  5921  00DA                     main@slowLoop:	
  5922                           
  5923                           ; 1 bytes @ 0x8
  5924  00DA                     	ds	1
  5925  00DB                     main@MPPT1:	
  5926                           
  5927                           ; 2 bytes @ 0x9
  5928  00DB                     	ds	2
  5929  00DD                     main@MPPT0:	
  5930                           
  5931                           ; 2 bytes @ 0xB
  5932  00DD                     	ds	2
  5933  00DF                     main@menuButton:	
  5934                           
  5935                           ; 1 bytes @ 0xD
  5936  00DF                     	ds	1
  5937  00E0                     main@j:	
  5938                           
  5939                           ; 1 bytes @ 0xE
  5940  00E0                     	ds	1
  5941  00E1                     main@IOutTotal:	
  5942                           
  5943                           ; 2 bytes @ 0xF
  5944  00E1                     	ds	2
  5945  00E3                     main@dutyCycle1:	
  5946                           
  5947                           ; 2 bytes @ 0x11
  5948  00E3                     	ds	2
  5949  00E5                     main@tempFanOutput:	
  5950                           
  5951                           ; 2 bytes @ 0x13
  5952  00E5                     	ds	2
  5953  00E7                     main@dutyCycle6:	
  5954                           
  5955                           ; 2 bytes @ 0x15
  5956  00E7                     	ds	2
  5957  00E9                     main@dutyCycle7:	
  5958                           
  5959                           ; 2 bytes @ 0x17
  5960  00E9                     	ds	2
  5961                           
  5962                           	psect	cstackCOMMON
  5963  0070                     __pcstackCOMMON:	
  5964  0070                     ?___ftge:	
  5965  0070                     ?_LCDWrite:	
  5966                           ; 1 bit 
  5967                           
  5968  0070                     ?_OSCILLATOR_Initialize:	
  5969                           ; 1 bytes @ 0x0
  5970                           
  5971  0070                     ??_OSCILLATOR_Initialize:	
  5972                           ; 1 bytes @ 0x0
  5973                           
  5974  0070                     ?_TMR2_Initialize:	
  5975                           ; 1 bytes @ 0x0
  5976                           
  5977  0070                     ??_TMR2_Initialize:	
  5978                           ; 1 bytes @ 0x0
  5979                           
  5980  0070                     ?_TMR4_Initialize:	
  5981                           ; 1 bytes @ 0x0
  5982                           
  5983  0070                     ??_TMR4_Initialize:	
  5984                           ; 1 bytes @ 0x0
  5985                           
  5986  0070                     ?_calculateCurrent0:	
  5987                           ; 1 bytes @ 0x0
  5988                           
  5989  0070                     ?_calculateCurrent1:	
  5990                           ; 1 bytes @ 0x0
  5991                           
  5992  0070                     ?_calculateCurrent2:	
  5993                           ; 1 bytes @ 0x0
  5994                           
  5995  0070                     ?_calculateCurrent3:	
  5996                           ; 1 bytes @ 0x0
  5997                           
  5998  0070                     ?_ADC_Initialize:	
  5999                           ; 1 bytes @ 0x0
  6000                           
  6001  0070                     ??_ADC_Initialize:	
  6002                           ; 1 bytes @ 0x0
  6003                           
  6004  0070                     ?_Init_Battery_State_Machine:	
  6005                           ; 1 bytes @ 0x0
  6006                           
  6007  0070                     ??_Init_Battery_State_Machine:	
  6008                           ; 1 bytes @ 0x0
  6009                           
  6010  0070                     ?_Battery_State_Machine:	
  6011                           ; 1 bytes @ 0x0
  6012                           
  6013  0070                     ??_Battery_State_Machine:	
  6014                           ; 1 bytes @ 0x0
  6015                           
  6016  0070                     ?_cc_cv_mode:	
  6017                           ; 1 bytes @ 0x0
  6018                           
  6019  0070                     ??_cc_cv_mode:	
  6020                           ; 1 bytes @ 0x0
  6021                           
  6022  0070                     ?_readButton:	
  6023                           ; 1 bytes @ 0x0
  6024                           
  6025  0070                     ?_LCDWriteCharacter:	
  6026                           ; 1 bytes @ 0x0
  6027                           
  6028  0070                     ?_LCDClear:	
  6029                           ; 1 bytes @ 0x0
  6030                           
  6031  0070                     ?_LCDInit:	
  6032                           ; 1 bytes @ 0x0
  6033                           
  6034  0070                     ?_PIN_MANAGER_Initialize:	
  6035                           ; 1 bytes @ 0x0
  6036                           
  6037  0070                     ??_PIN_MANAGER_Initialize:	
  6038                           ; 1 bytes @ 0x0
  6039                           
  6040  0070                     ?_PWM_Initialize:	
  6041                           ; 1 bytes @ 0x0
  6042                           
  6043  0070                     ??_PWM_Initialize:	
  6044                           ; 1 bytes @ 0x0
  6045                           
  6046  0070                     ?_PWM6_LoadDutyValue:	
  6047                           ; 1 bytes @ 0x0
  6048                           
  6049  0070                     ?_PWM7_LoadDutyValue:	
  6050                           ; 1 bytes @ 0x0
  6051                           
  6052  0070                     ?_PWM1_LoadDutyValue:	
  6053                           ; 1 bytes @ 0x0
  6054                           
  6055  0070                     ?_SYSTEM_Initialize:	
  6056                           ; 1 bytes @ 0x0
  6057                           
  6058  0070                     ?_main:	
  6059                           ; 1 bytes @ 0x0
  6060                           
  6061  0070                     ?_ADCRead:	
  6062                           ; 1 bytes @ 0x0
  6063                           
  6064  0070                     ?___wmul:	
  6065                           ; 2 bytes @ 0x0
  6066                           
  6067  0070                     ?___awdiv:	
  6068                           ; 2 bytes @ 0x0
  6069                           
  6070  0070                     ?___lwmod:	
  6071                           ; 2 bytes @ 0x0
  6072                           
  6073  0070                     ?___ftpack:	
  6074                           ; 2 bytes @ 0x0
  6075                           
  6076  0070                     ?_frexp:	
  6077                           ; 3 bytes @ 0x0
  6078                           
  6079  0070                     ?___aldiv:	
  6080                           ; 3 bytes @ 0x0
  6081                           
  6082  0070                     LCDWrite@data:	
  6083                           ; 4 bytes @ 0x0
  6084                           
  6085  0070                     PIN_MANAGER_Initialize@state:	
  6086                           ; 1 bytes @ 0x0
  6087                           
  6088  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6089                           ; 1 bytes @ 0x0
  6090                           
  6091  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6092                           ; 2 bytes @ 0x0
  6093                           
  6094  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6095                           ; 2 bytes @ 0x0
  6096                           
  6097  0070                     ___wmul@multiplier:	
  6098                           ; 2 bytes @ 0x0
  6099                           
  6100  0070                     ___awdiv@divisor:	
  6101                           ; 2 bytes @ 0x0
  6102                           
  6103  0070                     ___lwmod@divisor:	
  6104                           ; 2 bytes @ 0x0
  6105                           
  6106  0070                     ___ftpack@arg:	
  6107                           ; 2 bytes @ 0x0
  6108                           
  6109  0070                     ___ftge@ff1:	
  6110                           ; 3 bytes @ 0x0
  6111                           
  6112  0070                     frexp@value:	
  6113                           ; 3 bytes @ 0x0
  6114                           
  6115  0070                     ___aldiv@divisor:	
  6116                           ; 3 bytes @ 0x0
  6117                           
  6118                           
  6119                           ; 4 bytes @ 0x0
  6120  0070                     	ds	1
  6121  0071                     ??_LCDWrite:	
  6122  0071                     Init_Battery_State_Machine@z:	
  6123                           ; 1 bytes @ 0x1
  6124                           
  6125                           
  6126                           ; 1 bytes @ 0x1
  6127  0071                     	ds	1
  6128  0072                     ??_PWM6_LoadDutyValue:	
  6129  0072                     ??_PWM7_LoadDutyValue:	
  6130                           ; 1 bytes @ 0x2
  6131                           
  6132  0072                     ??_PWM1_LoadDutyValue:	
  6133                           ; 1 bytes @ 0x2
  6134                           
  6135  0072                     LCDWrite@data_or_command:	
  6136                           ; 1 bytes @ 0x2
  6137                           
  6138  0072                     ___wmul@multiplicand:	
  6139                           ; 1 bytes @ 0x2
  6140                           
  6141  0072                     ___awdiv@dividend:	
  6142                           ; 2 bytes @ 0x2
  6143                           
  6144  0072                     ___lwmod@dividend:	
  6145                           ; 2 bytes @ 0x2
  6146                           
  6147                           
  6148                           ; 2 bytes @ 0x2
  6149  0072                     	ds	1
  6150  0073                     ??_ADCRead:	
  6151  0073                     ADCRead@channel:	
  6152                           ; 1 bytes @ 0x3
  6153                           
  6154  0073                     LCDWrite@d:	
  6155                           ; 1 bytes @ 0x3
  6156                           
  6157  0073                     ___ftpack@exp:	
  6158                           ; 1 bytes @ 0x3
  6159                           
  6160  0073                     frexp@eptr:	
  6161                           ; 1 bytes @ 0x3
  6162                           
  6163  0073                     ___ftge@ff2:	
  6164                           ; 1 bytes @ 0x3
  6165                           
  6166                           
  6167                           ; 3 bytes @ 0x3
  6168  0073                     	ds	1
  6169  0074                     ??_frexp:	
  6170  0074                     ??_readButton:	
  6171                           ; 1 bytes @ 0x4
  6172                           
  6173  0074                     ??___wmul:	
  6174                           ; 1 bytes @ 0x4
  6175                           
  6176  0074                     ??___awdiv:	
  6177                           ; 1 bytes @ 0x4
  6178                           
  6179  0074                     ??___lwmod:	
  6180                           ; 1 bytes @ 0x4
  6181                           
  6182  0074                     LCDWrite@i:	
  6183                           ; 1 bytes @ 0x4
  6184                           
  6185  0074                     ___ftpack@sign:	
  6186                           ; 1 bytes @ 0x4
  6187                           
  6188  0074                     ___wmul@product:	
  6189                           ; 1 bytes @ 0x4
  6190                           
  6191  0074                     ___aldiv@dividend:	
  6192                           ; 2 bytes @ 0x4
  6193                           
  6194                           
  6195                           ; 4 bytes @ 0x4
  6196  0074                     	ds	1
  6197  0075                     ??___ftpack:	
  6198  0075                     ?_gotoXY:	
  6199                           ; 1 bytes @ 0x5
  6200                           
  6201  0075                     ??_LCDInit:	
  6202                           ; 1 bytes @ 0x5
  6203                           
  6204  0075                     Battery_State_Machine@z:	
  6205                           ; 1 bytes @ 0x5
  6206                           
  6207  0075                     cc_cv_mode@z:	
  6208                           ; 1 bytes @ 0x5
  6209                           
  6210  0075                     gotoXY@y:	
  6211                           ; 1 bytes @ 0x5
  6212                           
  6213  0075                     ___awdiv@counter:	
  6214                           ; 1 bytes @ 0x5
  6215                           
  6216  0075                     ___lwmod@counter:	
  6217                           ; 1 bytes @ 0x5
  6218                           
  6219                           
  6220                           ; 1 bytes @ 0x5
  6221  0075                     	ds	1
  6222  0076                     ??_gotoXY:	
  6223  0076                     ??_LCDWriteCharacter:	
  6224                           ; 1 bytes @ 0x6
  6225                           
  6226  0076                     ??___ftge:	
  6227                           ; 1 bytes @ 0x6
  6228                           
  6229  0076                     ___awdiv@sign:	
  6230                           ; 1 bytes @ 0x6
  6231                           
  6232                           
  6233                           ; 1 bytes @ 0x6
  6234  0076                     	ds	1
  6235  0077                     gotoXY@x:	
  6236  0077                     ___awdiv@quotient:	
  6237                           ; 1 bytes @ 0x7
  6238                           
  6239                           
  6240                           ; 2 bytes @ 0x7
  6241  0077                     	ds	1
  6242  0078                     ??_LCDClear:	
  6243  0078                     ??___aldiv:	
  6244                           ; 1 bytes @ 0x8
  6245                           
  6246  0078                     ?___awtoft:	
  6247                           ; 1 bytes @ 0x8
  6248                           
  6249  0078                     ___awtoft@c:	
  6250                           ; 3 bytes @ 0x8
  6251                           
  6252                           
  6253                           ; 2 bytes @ 0x8
  6254  0078                     	ds	1
  6255  0079                     LCDWriteCharacter@character:	
  6256  0079                     readIAnalog@analog_channel:	
  6257                           ; 1 bytes @ 0x9
  6258                           
  6259  0079                     LCDClear@index:	
  6260                           ; 2 bytes @ 0x9
  6261                           
  6262                           
  6263                           ; 2 bytes @ 0x9
  6264  0079                     	ds	1
  6265  007A                     LCDWriteCharacter@base:	
  6266                           
  6267                           ; 2 bytes @ 0xA
  6268  007A                     	ds	1
  6269  007B                     ??_SYSTEM_Initialize:	
  6270  007B                     ??___awtoft:	
  6271                           ; 1 bytes @ 0xB
  6272                           
  6273  007B                     readIAnalog@value:	
  6274                           ; 1 bytes @ 0xB
  6275                           
  6276                           
  6277                           ; 2 bytes @ 0xB
  6278  007B                     	ds	1
  6279  007C                     ?_LCDWriteString:	
  6280  007C                     LCDWriteString@characters:	
  6281                           ; 1 bytes @ 0xC
  6282                           
  6283                           
  6284                           ; 2 bytes @ 0xC
  6285  007C                     	ds	1
  6286  007D                     ___awtoft@sign:	
  6287                           
  6288                           ; 1 bytes @ 0xD
  6289  007D                     	ds	1
  6290  007E                     ??_eval_poly:	
  6291  007E                     ??_tempCalc:	
  6292                           ; 1 bytes @ 0xE
  6293                           
  6294  007E                     ??___ftsub:	
  6295                           ; 1 bytes @ 0xE
  6296                           
  6297                           
  6298                           	psect	cstackBANK0
  6299  0020                     __pcstackBANK0:	
  6300                           ; 1 bytes @ 0xE
  6301                           
  6302  0020                     ??_LCDWriteString:	
  6303  0020                     ?_LCDWriteInt:	
  6304                           ; 1 bytes @ 0x0
  6305                           
  6306  0020                     ?___ftdiv:	
  6307                           ; 1 bytes @ 0x0
  6308                           
  6309  0020                     ?___ftmul:	
  6310                           ; 3 bytes @ 0x0
  6311                           
  6312  0020                     ___aldiv@counter:	
  6313                           ; 3 bytes @ 0x0
  6314                           
  6315  0020                     LCDWriteInt@value:	
  6316                           ; 1 bytes @ 0x0
  6317                           
  6318  0020                     ___ftdiv@f2:	
  6319                           ; 2 bytes @ 0x0
  6320                           
  6321  0020                     ___ftmul@f1:	
  6322                           ; 3 bytes @ 0x0
  6323                           
  6324                           
  6325                           ; 3 bytes @ 0x0
  6326  0020                     	ds	1
  6327  0021                     ___aldiv@sign:	
  6328                           
  6329                           ; 1 bytes @ 0x1
  6330  0021                     	ds	1
  6331  0022                     LCDWriteInt@fieldLength:	
  6332  0022                     ___aldiv@quotient:	
  6333                           ; 1 bytes @ 0x2
  6334                           
  6335                           
  6336                           ; 4 bytes @ 0x2
  6337  0022                     	ds	1
  6338  0023                     LCDWriteInt@numPlaces:	
  6339  0023                     ___ftdiv@f1:	
  6340                           ; 1 bytes @ 0x3
  6341                           
  6342  0023                     ___ftmul@f2:	
  6343                           ; 3 bytes @ 0x3
  6344                           
  6345                           
  6346                           ; 3 bytes @ 0x3
  6347  0023                     	ds	1
  6348  0024                     LCDWriteInt@sign:	
  6349                           
  6350                           ; 1 bytes @ 0x4
  6351  0024                     	ds	1
  6352  0025                     ??_LCDWriteInt:	
  6353                           
  6354                           ; 1 bytes @ 0x5
  6355  0025                     	ds	1
  6356  0026                     ??___ftdiv:	
  6357  0026                     ??___ftmul:	
  6358                           ; 1 bytes @ 0x6
  6359                           
  6360  0026                     ?_readIAnalog:	
  6361                           ; 1 bytes @ 0x6
  6362                           
  6363  0026                     readIAnalog@channel:	
  6364                           ; 2 bytes @ 0x6
  6365                           
  6366                           
  6367                           ; 2 bytes @ 0x6
  6368  0026                     	ds	2
  6369  0028                     ??_readIAnalog:	
  6370                           
  6371                           ; 1 bytes @ 0x8
  6372  0028                     	ds	1
  6373  0029                     LCDWriteInt@str:	
  6374                           
  6375                           ; 5 bytes @ 0x9
  6376  0029                     	ds	1
  6377  002A                     ___ftdiv@cntr:	
  6378  002A                     ___ftmul@exp:	
  6379                           ; 1 bytes @ 0xA
  6380                           
  6381                           
  6382                           ; 1 bytes @ 0xA
  6383  002A                     	ds	1
  6384  002B                     ___ftdiv@f3:	
  6385  002B                     ___ftmul@f3_as_product:	
  6386                           ; 3 bytes @ 0xB
  6387                           
  6388                           
  6389                           ; 3 bytes @ 0xB
  6390  002B                     	ds	3
  6391  002E                     LCDWriteInt@j:	
  6392  002E                     ___ftdiv@exp:	
  6393                           ; 1 bytes @ 0xE
  6394                           
  6395  002E                     ___ftmul@cntr:	
  6396                           ; 1 bytes @ 0xE
  6397                           
  6398                           
  6399                           ; 1 bytes @ 0xE
  6400  002E                     	ds	1
  6401  002F                     LCDWriteInt@i:	
  6402  002F                     ___ftdiv@sign:	
  6403                           ; 1 bytes @ 0xF
  6404                           
  6405  002F                     ___ftmul@sign:	
  6406                           ; 1 bytes @ 0xF
  6407                           
  6408                           
  6409                           ; 1 bytes @ 0xF
  6410  002F                     	ds	1
  6411  0030                     ?___ftadd:	
  6412  0030                     ?___fttol:	
  6413                           ; 3 bytes @ 0x10
  6414                           
  6415  0030                     ___ftadd@f1:	
  6416                           ; 4 bytes @ 0x10
  6417                           
  6418  0030                     ___fttol@f1:	
  6419                           ; 3 bytes @ 0x10
  6420                           
  6421                           
  6422                           ; 3 bytes @ 0x10
  6423  0030                     	ds	3
  6424  0033                     ___ftadd@f2:	
  6425                           
  6426                           ; 3 bytes @ 0x13
  6427  0033                     	ds	1
  6428  0034                     ??___fttol:	
  6429                           
  6430                           ; 1 bytes @ 0x14
  6431  0034                     	ds	2
  6432  0036                     ??___ftadd:	
  6433                           
  6434                           ; 1 bytes @ 0x16
  6435  0036                     	ds	2
  6436  0038                     ___fttol@sign1:	
  6437                           
  6438                           ; 1 bytes @ 0x18
  6439  0038                     	ds	1
  6440  0039                     ___fttol@lval:	
  6441                           
  6442                           ; 4 bytes @ 0x19
  6443  0039                     	ds	1
  6444  003A                     ___ftadd@sign:	
  6445                           
  6446                           ; 1 bytes @ 0x1A
  6447  003A                     	ds	1
  6448  003B                     ___ftadd@exp2:	
  6449                           
  6450                           ; 1 bytes @ 0x1B
  6451  003B                     	ds	1
  6452  003C                     ___ftadd@exp1:	
  6453                           
  6454                           ; 1 bytes @ 0x1C
  6455  003C                     	ds	1
  6456  003D                     ?_eval_poly:	
  6457  003D                     ?___ftsub:	
  6458                           ; 3 bytes @ 0x1D
  6459                           
  6460  003D                     ___fttol@exp1:	
  6461                           ; 3 bytes @ 0x1D
  6462                           
  6463  003D                     ___ftsub@f2:	
  6464                           ; 1 bytes @ 0x1D
  6465                           
  6466  003D                     eval_poly@x:	
  6467                           ; 3 bytes @ 0x1D
  6468                           
  6469                           
  6470                           ; 3 bytes @ 0x1D
  6471  003D                     	ds	1
  6472  003E                     ??_calculateCurrent0:	
  6473  003E                     ??_calculateCurrent1:	
  6474                           ; 1 bytes @ 0x1E
  6475                           
  6476  003E                     ??_calculateCurrent2:	
  6477                           ; 1 bytes @ 0x1E
  6478                           
  6479  003E                     ??_calculateCurrent3:	
  6480                           ; 1 bytes @ 0x1E
  6481                           
  6482                           
  6483                           ; 1 bytes @ 0x1E
  6484  003E                     	ds	2
  6485  0040                     eval_poly@d:	
  6486  0040                     ___ftsub@f1:	
  6487                           ; 2 bytes @ 0x20
  6488                           
  6489                           
  6490                           ; 3 bytes @ 0x20
  6491  0040                     	ds	2
  6492  0042                     eval_poly@n:	
  6493                           
  6494                           ; 2 bytes @ 0x22
  6495  0042                     	ds	2
  6496  0044                     eval_poly@res:	
  6497                           
  6498                           ; 3 bytes @ 0x24
  6499  0044                     	ds	3
  6500  0047                     ?_log:	
  6501  0047                     log@x:	
  6502                           ; 3 bytes @ 0x27
  6503                           
  6504                           
  6505                           ; 3 bytes @ 0x27
  6506  0047                     	ds	3
  6507  004A                     ??_log:	
  6508                           
  6509                           ; 1 bytes @ 0x2A
  6510  004A                     	ds	1
  6511  004B                     log@exponent:	
  6512                           
  6513                           ; 2 bytes @ 0x2B
  6514  004B                     	ds	2
  6515  004D                     ?_tempCalc:	
  6516  004D                     tempCalc@analogValue:	
  6517                           ; 2 bytes @ 0x2D
  6518                           
  6519                           
  6520                           ; 2 bytes @ 0x2D
  6521  004D                     	ds	2
  6522  004F                     tempCalc@R:	
  6523                           
  6524                           ; 3 bytes @ 0x2F
  6525  004F                     	ds	3
  6526  0052                     _tempCalc$1296:	
  6527                           
  6528                           ; 3 bytes @ 0x32
  6529  0052                     	ds	3
  6530  0055                     tempCalc@steinhart:	
  6531                           
  6532                           ; 3 bytes @ 0x35
  6533  0055                     	ds	3
  6534  0058                     ??_main:	
  6535                           
  6536                           ; 1 bytes @ 0x38
  6537  0058                     	ds	4
  6538                           
  6539                           	psect	maintext
  6540  021A                     __pmaintext:	
  6541 ;;
  6542 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  6543 ;;
  6544 ;; *************** function _main *****************
  6545 ;; Defined at:
  6546 ;;		line 42 in file "main.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;		None
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;  efficiency      3    0[BANK1 ] float 
  6551 ;;  dutyCycle7      2   23[BANK1 ] unsigned int 
  6552 ;;  dutyCycle6      2   21[BANK1 ] unsigned int 
  6553 ;;  tempFanOutpu    2   19[BANK1 ] unsigned int 
  6554 ;;  dutyCycle1      2   17[BANK1 ] unsigned int 
  6555 ;;  IOutTotal       2   15[BANK1 ] int 
  6556 ;;  MPPT0           2   11[BANK1 ] int 
  6557 ;;  MPPT1           2    9[BANK1 ] int 
  6558 ;;  faultNotRese    2    5[BANK1 ] unsigned int 
  6559 ;;  faultCount      2    3[BANK1 ] unsigned int 
  6560 ;;  j               1   14[BANK1 ] unsigned char 
  6561 ;;  menuButton      1   13[BANK1 ] unsigned char 
  6562 ;;  slowLoop        1    8[BANK1 ] unsigned char 
  6563 ;;  displayRefre    1    7[BANK1 ] unsigned char 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      void 
  6566 ;; Registers used:
  6567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : B1F/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6575 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6576 ;;      Totals:         0       4      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6577 ;;Total ram usage:       29 bytes
  6578 ;; Hardware stack levels required when called:    5
  6579 ;; This function calls:
  6580 ;;		_ADCRead
  6581 ;;		_Battery_State_Machine
  6582 ;;		_LCDClear
  6583 ;;		_LCDInit
  6584 ;;		_LCDWriteCharacter
  6585 ;;		_LCDWriteInt
  6586 ;;		_LCDWriteString
  6587 ;;		_PWM1_LoadDutyValue
  6588 ;;		_PWM6_LoadDutyValue
  6589 ;;		_PWM7_LoadDutyValue
  6590 ;;		_SYSTEM_Initialize
  6591 ;;		___awtoft
  6592 ;;		___ftdiv
  6593 ;;		___fttol
  6594 ;;		_calculateCurrent0
  6595 ;;		_calculateCurrent1
  6596 ;;		_calculateCurrent2
  6597 ;;		_calculateCurrent3
  6598 ;;		_cc_cv_mode
  6599 ;;		_gotoXY
  6600 ;;		_readButton
  6601 ;;		_readIAnalog
  6602 ;;		_tempCalc
  6603 ;; This function is called by:
  6604 ;;		Startup code after reset
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           
  6608                           
  6609                           ;psect for function _main
  6610  021A                     _main:	
  6611                           
  6612                           ;main.c: 44: int16_t MPPT0 = 3144;
  6613                           
  6614                           ;incstack = 0
  6615                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6616  021A  3048               	movlw	72
  6617  021B  0021               	movlb	1	; select bank1
  6618  021C  00DD               	movwf	main@MPPT0^(0+128)
  6619  021D  300C               	movlw	12
  6620  021E  00DE               	movwf	(main@MPPT0^(0+128)+1)
  6621                           
  6622                           ;main.c: 45: int16_t MPPT1 = 3144;
  6623  021F  3048               	movlw	72
  6624  0220  00DB               	movwf	main@MPPT1^(0+128)
  6625  0221  300C               	movlw	12
  6626  0222  00DC               	movwf	(main@MPPT1^(0+128)+1)
  6627                           
  6628                           ;main.c: 47: extern uint8_t batteryState[2];
  6629                           ;main.c: 48: uint8_t displayRefresh = 0;
  6630  0223  01D9               	clrf	main@displayRefresh^(0+128)
  6631                           
  6632                           ;main.c: 49: uint16_t dutyCycle6 = 1023;
  6633  0224  30FF               	movlw	255
  6634  0225  00E7               	movwf	main@dutyCycle6^(0+128)
  6635  0226  3003               	movlw	3
  6636  0227  00E8               	movwf	(main@dutyCycle6^(0+128)+1)
  6637                           
  6638                           ;main.c: 50: uint16_t dutyCycle7 = 1023;
  6639  0228  30FF               	movlw	255
  6640  0229  00E9               	movwf	main@dutyCycle7^(0+128)
  6641  022A  3003               	movlw	3
  6642  022B  00EA               	movwf	(main@dutyCycle7^(0+128)+1)
  6643                           
  6644                           ;main.c: 51: uint16_t dutyCycle1 = 260;
  6645  022C  3004               	movlw	4
  6646  022D  00E3               	movwf	main@dutyCycle1^(0+128)
  6647  022E  3001               	movlw	1
  6648  022F  00E4               	movwf	(main@dutyCycle1^(0+128)+1)
  6649                           
  6650                           ;main.c: 52: float efficiency = 0;
  6651  0230  3000               	movlw	0
  6652  0231  00D2               	movwf	main@efficiency^(0+128)
  6653  0232  3000               	movlw	0
  6654  0233  00D3               	movwf	(main@efficiency+1)^(0+128)
  6655  0234  3000               	movlw	0
  6656  0235  00D4               	movwf	(main@efficiency+2)^(0+128)
  6657                           
  6658                           ;main.c: 53: uint16_t faultCount = 0;
  6659  0236  01D5               	clrf	main@faultCount^(0+128)
  6660  0237  01D6               	clrf	(main@faultCount+1)^(0+128)
  6661                           
  6662                           ;main.c: 54: uint16_t faultNotReset = 0;
  6663  0238  01D7               	clrf	main@faultNotReset^(0+128)
  6664  0239  01D8               	clrf	(main@faultNotReset+1)^(0+128)
  6665                           
  6666                           ;main.c: 55: extern uint16_t IminCount[2];
  6667                           ;main.c: 56: extern int8_t Imode[2];
  6668                           ;main.c: 57: int16_t IOutTotal = 0;
  6669  023A  01E1               	clrf	main@IOutTotal^(0+128)
  6670  023B  01E2               	clrf	(main@IOutTotal+1)^(0+128)
  6671                           
  6672                           ;main.c: 58: extern int16_t Iref[2];
  6673                           ;main.c: 59: uint8_t j = 0;
  6674  023C  01E0               	clrf	main@j^(0+128)
  6675                           
  6676                           ;main.c: 60: uint8_t menuButton = 0;
  6677  023D  01DF               	clrf	main@menuButton^(0+128)
  6678                           
  6679                           ;main.c: 61: uint8_t slowLoop = 200;
  6680  023E  30C8               	movlw	200
  6681  023F  0020               	movlb	0	; select bank0
  6682  0240  00D8               	movwf	??_main
  6683  0241  0858               	movf	??_main,w
  6684  0242  0021               	movlb	1	; select bank1
  6685  0243  00DA               	movwf	main@slowLoop^(0+128)
  6686                           
  6687                           ;main.c: 62: uint16_t tempFanOutput = 60;
  6688  0244  303C               	movlw	60
  6689  0245  00E5               	movwf	main@tempFanOutput^(0+128)
  6690  0246  3000               	movlw	0
  6691  0247  00E6               	movwf	(main@tempFanOutput^(0+128)+1)
  6692                           
  6693                           ;main.c: 63: extern int8_t VHoldMode[2];
  6694                           ;main.c: 64: extern int16_t Vref[2];
  6695                           ;main.c: 67: SYSTEM_Initialize();
  6696  0248  3194  2417  3182   	fcall	_SYSTEM_Initialize
  6697                           
  6698                           ;main.c: 69: LCDClear();
  6699  024B  3193  235B  3182   	fcall	_LCDClear
  6700  024E                     l3161:	
  6701                           ;main.c: 71: void calculateCurrent0(void);
  6702                           ;main.c: 72: void calculateCurrent1(void);
  6703                           ;main.c: 73: void calculateCurrent2(void);
  6704                           ;main.c: 74: void calculateCurrent3(void);
  6705                           ;main.c: 88: while (1)
  6706                           
  6707                           
  6708                           ;main.c: 89: {
  6709                           ;main.c: 90: if(!(RB2))
  6710  024E  0020               	movlb	0	; select bank0
  6711  024F  190D               	btfsc	13,2	;volatile
  6712  0250  2A62               	goto	l3169
  6713                           
  6714                           ;main.c: 91: {
  6715                           ;main.c: 92: LATA5=0;
  6716  0251  1296               	bcf	22,5	;volatile
  6717                           
  6718                           ;main.c: 93: _delay((unsigned long)((400)*(32000000/4000000.0)));
  6719  0252  3005               	movlw	5
  6720  0253  0020               	movlb	0	; select bank0
  6721  0254  00D8               	movwf	??_main
  6722  0255  3026               	movlw	38
  6723  0256                     u4117:	
  6724  0256  0B89               	decfsz	9,f
  6725  0257  2A56               	goto	u4117
  6726  0258  0BD8               	decfsz	??_main,f
  6727  0259  2A56               	goto	u4117
  6728  025A  0000               	nop
  6729                           
  6730                           ;main.c: 94: faultCount+=1;
  6731  025B  3001               	movlw	1
  6732  025C  0021               	movlb	1	; select bank1
  6733  025D  07D5               	addwf	main@faultCount^(0+128),f
  6734  025E  3000               	movlw	0
  6735  025F  3DD6               	addwfc	(main@faultCount+1)^(0+128),f
  6736                           
  6737                           ;main.c: 95: LATA5=1;
  6738  0260  0020               	movlb	0	; select bank0
  6739  0261  1696               	bsf	22,5	;volatile
  6740  0262                     l3169:	
  6741                           
  6742                           ;main.c: 96: }
  6743                           ;main.c: 97: for(j=0;j<4;j++) Ianalogs[j]=readIAnalog(j);
  6744  0262  0021               	movlb	1	; select bank1
  6745  0263  01E0               	clrf	main@j^(0+128)
  6746  0264  3004               	movlw	4
  6747  0265  0260               	subwf	main@j^(0+128),w
  6748  0266  1803               	btfsc	3,0
  6749  0267  2A86               	goto	l3181
  6750  0268                     l3175:	
  6751  0268  0860               	movf	main@j^(0+128),w
  6752  0269  0020               	movlb	0	; select bank0
  6753  026A  00D8               	movwf	??_main
  6754  026B  01D9               	clrf	??_main+1
  6755  026C  0858               	movf	??_main,w
  6756  026D  00A6               	movwf	readIAnalog@channel
  6757  026E  0859               	movf	??_main+1,w
  6758  026F  00A7               	movwf	readIAnalog@channel+1
  6759  0270  3180  20DC  3182   	fcall	_readIAnalog
  6760  0273  0021               	movlb	1	; select bank1
  6761  0274  3560               	lslf	main@j^(0+128),w
  6762  0275  3EA0               	addlw	(low (_Ianalogs| 0))& (0+255)
  6763  0276  0086               	movwf	6
  6764  0277  0187               	clrf	7
  6765  0278  0020               	movlb	0	; select bank0
  6766  0279  0826               	movf	?_readIAnalog,w
  6767  027A  3FC0               	movwi [0]fsr1
  6768  027B  0827               	movf	?_readIAnalog+1,w
  6769  027C  3FC1               	movwi [1]fsr1
  6770  027D  3001               	movlw	1
  6771  027E  00D8               	movwf	??_main
  6772  027F  0858               	movf	??_main,w
  6773  0280  0021               	movlb	1	; select bank1
  6774  0281  07E0               	addwf	main@j^(0+128),f
  6775  0282  3004               	movlw	4
  6776  0283  0260               	subwf	main@j^(0+128),w
  6777  0284  1C03               	skipc
  6778  0285  2A68               	goto	l3175
  6779  0286                     l3181:	
  6780                           
  6781                           ;main.c: 99: Vanalogs[0]=ADCRead(21);
  6782  0286  3015               	movlw	21
  6783  0287  3189  212F  3182   	fcall	_ADCRead
  6784  028A  0871               	movf	?_ADCRead+1,w
  6785  028B  0021               	movlb	1	; select bank1
  6786  028C  00A9               	movwf	(_Vanalogs+1)^(0+128)
  6787  028D  0870               	movf	?_ADCRead,w
  6788  028E  00A8               	movwf	_Vanalogs^(0+128)
  6789                           
  6790                           ;main.c: 101: Vanalogs[1]=ADCRead(17);
  6791  028F  3011               	movlw	17
  6792  0290  3189  212F  3182   	fcall	_ADCRead
  6793  0293  0871               	movf	?_ADCRead+1,w
  6794  0294  0021               	movlb	1	; select bank1
  6795  0295  00AB               	movwf	((_Vanalogs+1)^(0+128)+2)
  6796  0296  0870               	movf	?_ADCRead,w
  6797  0297  00AA               	movwf	(_Vanalogs^(0+128)+2)
  6798                           
  6799                           ;main.c: 103: Vanalogs[2]=ADCRead(23);
  6800  0298  3017               	movlw	23
  6801  0299  3189  212F  3182   	fcall	_ADCRead
  6802  029C  0871               	movf	?_ADCRead+1,w
  6803  029D  0021               	movlb	1	; select bank1
  6804  029E  00AD               	movwf	((_Vanalogs+1)^(0+128)+4)
  6805  029F  0870               	movf	?_ADCRead,w
  6806  02A0  00AC               	movwf	(_Vanalogs^(0+128)+4)
  6807                           
  6808                           ;main.c: 105: Vanalogs[3]=ADCRead(19);
  6809  02A1  3013               	movlw	19
  6810  02A2  3189  212F  3182   	fcall	_ADCRead
  6811  02A5  0871               	movf	?_ADCRead+1,w
  6812  02A6  0021               	movlb	1	; select bank1
  6813  02A7  00AF               	movwf	((_Vanalogs+1)^(0+128)+6)
  6814  02A8  0870               	movf	?_ADCRead,w
  6815  02A9  00AE               	movwf	(_Vanalogs^(0+128)+6)
  6816                           
  6817                           ;main.c: 107: if(!(RB2))faultNotReset+=1;
  6818  02AA  0020               	movlb	0	; select bank0
  6819  02AB  190D               	btfsc	13,2	;volatile
  6820  02AC  2AB2               	goto	l3187
  6821  02AD  3001               	movlw	1
  6822  02AE  0021               	movlb	1	; select bank1
  6823  02AF  07D7               	addwf	main@faultNotReset^(0+128),f
  6824  02B0  3000               	movlw	0
  6825  02B1  3DD8               	addwfc	(main@faultNotReset+1)^(0+128),f
  6826  02B2                     l3187:	
  6827                           
  6828                           ;main.c: 109: voltage[0]=(int16_t)(Vanalogs[0]/.54503);
  6829  02B2  0021               	movlb	1	; select bank1
  6830  02B3  0829               	movf	(_Vanalogs+1)^(0+128),w
  6831  02B4  00F9               	movwf	___awtoft@c+1
  6832  02B5  0828               	movf	_Vanalogs^(0+128),w
  6833  02B6  00F8               	movwf	___awtoft@c
  6834  02B7  3193  2316  3182   	fcall	___awtoft
  6835  02BA  0878               	movf	?___awtoft,w
  6836  02BB  0020               	movlb	0	; select bank0
  6837  02BC  00A3               	movwf	___ftdiv@f1
  6838  02BD  0879               	movf	?___awtoft+1,w
  6839  02BE  00A4               	movwf	___ftdiv@f1+1
  6840  02BF  087A               	movf	?___awtoft+2,w
  6841  02C0  00A5               	movwf	___ftdiv@f1+2
  6842  02C1  3087               	movlw	135
  6843  02C2  00A0               	movwf	___ftdiv@f2
  6844  02C3  300B               	movlw	11
  6845  02C4  00A1               	movwf	___ftdiv@f2+1
  6846  02C5  303F               	movlw	63
  6847  02C6  00A2               	movwf	___ftdiv@f2+2
  6848  02C7  318A  224D  3182   	fcall	___ftdiv
  6849  02CA  0020               	movlb	0	; select bank0
  6850  02CB  0820               	movf	?___ftdiv,w
  6851  02CC  00B0               	movwf	___fttol@f1
  6852  02CD  0821               	movf	?___ftdiv+1,w
  6853  02CE  00B1               	movwf	___fttol@f1+1
  6854  02CF  0822               	movf	?___ftdiv+2,w
  6855  02D0  00B2               	movwf	___fttol@f1+2
  6856  02D1  3189  21C6  3182   	fcall	___fttol
  6857  02D4  0020               	movlb	0	; select bank0
  6858  02D5  0831               	movf	?___fttol+1,w
  6859  02D6  0021               	movlb	1	; select bank1
  6860  02D7  00B1               	movwf	(_voltage+1)^(0+128)
  6861  02D8  0020               	movlb	0	; select bank0
  6862  02D9  0830               	movf	?___fttol,w
  6863  02DA  0021               	movlb	1	; select bank1
  6864  02DB  00B0               	movwf	_voltage^(0+128)
  6865                           
  6866                           ;main.c: 111: voltage[1]=(int16_t)(Vanalogs[1]/.54503);
  6867  02DC  082B               	movf	((_Vanalogs+1)^(0+128)+2),w
  6868  02DD  00F9               	movwf	___awtoft@c+1
  6869  02DE  082A               	movf	(_Vanalogs^(0+128)+2),w
  6870  02DF  00F8               	movwf	___awtoft@c
  6871  02E0  3193  2316  3182   	fcall	___awtoft
  6872  02E3  0878               	movf	?___awtoft,w
  6873  02E4  0020               	movlb	0	; select bank0
  6874  02E5  00A3               	movwf	___ftdiv@f1
  6875  02E6  0879               	movf	?___awtoft+1,w
  6876  02E7  00A4               	movwf	___ftdiv@f1+1
  6877  02E8  087A               	movf	?___awtoft+2,w
  6878  02E9  00A5               	movwf	___ftdiv@f1+2
  6879  02EA  3087               	movlw	135
  6880  02EB  00A0               	movwf	___ftdiv@f2
  6881  02EC  300B               	movlw	11
  6882  02ED  00A1               	movwf	___ftdiv@f2+1
  6883  02EE  303F               	movlw	63
  6884  02EF  00A2               	movwf	___ftdiv@f2+2
  6885  02F0  318A  224D  3182   	fcall	___ftdiv
  6886  02F3  0020               	movlb	0	; select bank0
  6887  02F4  0820               	movf	?___ftdiv,w
  6888  02F5  00B0               	movwf	___fttol@f1
  6889  02F6  0821               	movf	?___ftdiv+1,w
  6890  02F7  00B1               	movwf	___fttol@f1+1
  6891  02F8  0822               	movf	?___ftdiv+2,w
  6892  02F9  00B2               	movwf	___fttol@f1+2
  6893  02FA  3189  21C6  3182   	fcall	___fttol
  6894  02FD  0020               	movlb	0	; select bank0
  6895  02FE  0831               	movf	?___fttol+1,w
  6896  02FF  0021               	movlb	1	; select bank1
  6897  0300  00B3               	movwf	((_voltage+1)^(0+128)+2)
  6898  0301  0020               	movlb	0	; select bank0
  6899  0302  0830               	movf	?___fttol,w
  6900  0303  0021               	movlb	1	; select bank1
  6901  0304  00B2               	movwf	(_voltage^(0+128)+2)
  6902                           
  6903                           ;main.c: 113: voltage[2]=(int16_t)(Vanalogs[2]/.20885);
  6904  0305  082D               	movf	((_Vanalogs+1)^(0+128)+4),w
  6905  0306  00F9               	movwf	___awtoft@c+1
  6906  0307  082C               	movf	(_Vanalogs^(0+128)+4),w
  6907  0308  00F8               	movwf	___awtoft@c
  6908  0309  3193  2316  3182   	fcall	___awtoft
  6909  030C  0878               	movf	?___awtoft,w
  6910  030D  0020               	movlb	0	; select bank0
  6911  030E  00A3               	movwf	___ftdiv@f1
  6912  030F  0879               	movf	?___awtoft+1,w
  6913  0310  00A4               	movwf	___ftdiv@f1+1
  6914  0311  087A               	movf	?___awtoft+2,w
  6915  0312  00A5               	movwf	___ftdiv@f1+2
  6916  0313  30DD               	movlw	221
  6917  0314  00A0               	movwf	___ftdiv@f2
  6918  0315  3055               	movlw	85
  6919  0316  00A1               	movwf	___ftdiv@f2+1
  6920  0317  303E               	movlw	62
  6921  0318  00A2               	movwf	___ftdiv@f2+2
  6922  0319  318A  224D  3182   	fcall	___ftdiv
  6923  031C  0020               	movlb	0	; select bank0
  6924  031D  0820               	movf	?___ftdiv,w
  6925  031E  00B0               	movwf	___fttol@f1
  6926  031F  0821               	movf	?___ftdiv+1,w
  6927  0320  00B1               	movwf	___fttol@f1+1
  6928  0321  0822               	movf	?___ftdiv+2,w
  6929  0322  00B2               	movwf	___fttol@f1+2
  6930  0323  3189  21C6  3182   	fcall	___fttol
  6931  0326  0020               	movlb	0	; select bank0
  6932  0327  0831               	movf	?___fttol+1,w
  6933  0328  0021               	movlb	1	; select bank1
  6934  0329  00B5               	movwf	((_voltage+1)^(0+128)+4)
  6935  032A  0020               	movlb	0	; select bank0
  6936  032B  0830               	movf	?___fttol,w
  6937  032C  0021               	movlb	1	; select bank1
  6938  032D  00B4               	movwf	(_voltage^(0+128)+4)
  6939                           
  6940                           ;main.c: 115: voltage[3]=(int16_t)(Vanalogs[3]/.20885);
  6941  032E  082F               	movf	((_Vanalogs+1)^(0+128)+6),w
  6942  032F  00F9               	movwf	___awtoft@c+1
  6943  0330  082E               	movf	(_Vanalogs^(0+128)+6),w
  6944  0331  00F8               	movwf	___awtoft@c
  6945  0332  3193  2316  3182   	fcall	___awtoft
  6946  0335  0878               	movf	?___awtoft,w
  6947  0336  0020               	movlb	0	; select bank0
  6948  0337  00A3               	movwf	___ftdiv@f1
  6949  0338  0879               	movf	?___awtoft+1,w
  6950  0339  00A4               	movwf	___ftdiv@f1+1
  6951  033A  087A               	movf	?___awtoft+2,w
  6952  033B  00A5               	movwf	___ftdiv@f1+2
  6953  033C  30DD               	movlw	221
  6954  033D  00A0               	movwf	___ftdiv@f2
  6955  033E  3055               	movlw	85
  6956  033F  00A1               	movwf	___ftdiv@f2+1
  6957  0340  303E               	movlw	62
  6958  0341  00A2               	movwf	___ftdiv@f2+2
  6959  0342  318A  224D  3182   	fcall	___ftdiv
  6960  0345  0020               	movlb	0	; select bank0
  6961  0346  0820               	movf	?___ftdiv,w
  6962  0347  00B0               	movwf	___fttol@f1
  6963  0348  0821               	movf	?___ftdiv+1,w
  6964  0349  00B1               	movwf	___fttol@f1+1
  6965  034A  0822               	movf	?___ftdiv+2,w
  6966  034B  00B2               	movwf	___fttol@f1+2
  6967  034C  3189  21C6  3182   	fcall	___fttol
  6968  034F  0020               	movlb	0	; select bank0
  6969  0350  0831               	movf	?___fttol+1,w
  6970  0351  0021               	movlb	1	; select bank1
  6971  0352  00B7               	movwf	((_voltage+1)^(0+128)+6)
  6972  0353  0020               	movlb	0	; select bank0
  6973  0354  0830               	movf	?___fttol,w
  6974  0355  0021               	movlb	1	; select bank1
  6975  0356  00B6               	movwf	(_voltage^(0+128)+6)
  6976                           
  6977                           ;main.c: 117: calculateCurrent0();
  6978  0357  3195  2501  3182   	fcall	_calculateCurrent0
  6979                           
  6980                           ;main.c: 119: calculateCurrent1();
  6981  035A  3195  2546  3182   	fcall	_calculateCurrent1
  6982                           
  6983                           ;main.c: 121: calculateCurrent2();
  6984  035D  3195  258B  3182   	fcall	_calculateCurrent2
  6985                           
  6986                           ;main.c: 123: calculateCurrent3();
  6987  0360  3195  25D0  3182   	fcall	_calculateCurrent3
  6988                           
  6989                           ;main.c: 125: if(Imode[0])
  6990  0363  0021               	movlb	1	; select bank1
  6991  0364  084E               	movf	_Imode^(0+128),w
  6992  0365  1903               	btfsc	3,2
  6993  0366  2B87               	goto	l3217
  6994                           
  6995                           ;main.c: 126: {
  6996                           ;main.c: 127: if(voltage[2]<MPPT0)
  6997  0367  0835               	movf	((_voltage+1)^(0+128)+4),w
  6998  0368  3A80               	xorlw	128
  6999  0369  0020               	movlb	0	; select bank0
  7000  036A  00D8               	movwf	??_main
  7001  036B  0021               	movlb	1	; select bank1
  7002  036C  085E               	movf	(main@MPPT0+1)^(0+128),w
  7003  036D  3A80               	xorlw	128
  7004  036E  0020               	movlb	0	; select bank0
  7005  036F  0258               	subwf	??_main,w
  7006  0370  1D03               	skipz
  7007  0371  2B75               	goto	u3795
  7008  0372  0021               	movlb	1	; select bank1
  7009  0373  085D               	movf	main@MPPT0^(0+128),w
  7010  0374  0234               	subwf	(_voltage^(0+128)+4),w
  7011  0375                     u3795:	
  7012  0375  1C03               	btfss	3,0
  7013  0376  2B97               	goto	L2
  7014                           
  7015                           ;main.c: 134: else if(voltage[2]>MPPT0)
  7016                           
  7017                           ;main.c: 132: }
  7018                           ;main.c: 133: }
  7019                           
  7020                           ;main.c: 130: {
  7021                           ;main.c: 131: dutyCycle6+=1;
  7022                           
  7023                           ;main.c: 128: {
  7024                           ;main.c: 129: if(dutyCycle6<1023)
  7025  0377  0021               	movlb	1	; select bank1
  7026  0378  085E               	movf	(main@MPPT0+1)^(0+128),w
  7027  0379  3A80               	xorlw	128
  7028  037A  0020               	movlb	0	; select bank0
  7029  037B  00D8               	movwf	??_main
  7030  037C  0021               	movlb	1	; select bank1
  7031  037D  0835               	movf	((_voltage+1)^(0+128)+4),w
  7032  037E  3A80               	xorlw	128
  7033  037F  0020               	movlb	0	; select bank0
  7034  0380  0258               	subwf	??_main,w
  7035  0381  1D03               	skipz
  7036  0382  2BB3               	goto	u3855
  7037  0383  0021               	movlb	1	; select bank1
  7038  0384  0834               	movf	(_voltage^(0+128)+4),w
  7039  0385  025D               	subwf	main@MPPT0^(0+128),w
  7040  0386  2BB3               	goto	u3855
  7041  0387                     l3217:	
  7042                           ;main.c: 142: }
  7043                           
  7044                           ;main.c: 139: }
  7045                           ;main.c: 140: }
  7046                           
  7047                           ;main.c: 137: {
  7048                           ;main.c: 138: dutyCycle6-=1;
  7049                           
  7050                           ;main.c: 135: {
  7051                           ;main.c: 136: if(dutyCycle6>0)
  7052                           
  7053                           
  7054                           ;main.c: 143: else
  7055                           ;main.c: 144: {
  7056                           ;main.c: 145: if(voltage[0]>(int16_t)Vref[0])
  7057  0387  0841               	movf	(_Vref+1)^(0+128),w
  7058  0388  3A80               	xorlw	128
  7059  0389  0020               	movlb	0	; select bank0
  7060  038A  00D8               	movwf	??_main
  7061  038B  0021               	movlb	1	; select bank1
  7062  038C  0831               	movf	(_voltage+1)^(0+128),w
  7063  038D  3A80               	xorlw	128
  7064  038E  0020               	movlb	0	; select bank0
  7065  038F  0258               	subwf	??_main,w
  7066  0390  1D03               	skipz
  7067  0391  2B95               	goto	u3835
  7068  0392  0021               	movlb	1	; select bank1
  7069  0393  0830               	movf	_voltage^(0+128),w
  7070  0394  0240               	subwf	_Vref^(0+128),w
  7071  0395                     u3835:	
  7072  0395  1803               	skipnc
  7073  0396  2BA4               	goto	l3223
  7074  0397                     L2:	
  7075                           
  7076                           ;main.c: 146: {
  7077                           ;main.c: 147: if(dutyCycle6<1023) dutyCycle6+=1;
  7078  0397  3003               	movlw	3
  7079  0398  0021               	movlb	1	; select bank1
  7080  0399  0268               	subwf	(main@dutyCycle6+1)^(0+128),w
  7081  039A  30FF               	movlw	255
  7082  039B  1903               	skipnz
  7083  039C  0267               	subwf	main@dutyCycle6^(0+128),w
  7084  039D  1803               	skipnc
  7085  039E  2BBE               	goto	l3229
  7086  039F  3001               	movlw	1
  7087  03A0  07E7               	addwf	main@dutyCycle6^(0+128),f
  7088  03A1  3000               	movlw	0
  7089  03A2  3DE8               	addwfc	(main@dutyCycle6+1)^(0+128),f
  7090                           
  7091                           ;main.c: 148: }
  7092  03A3  2BBE               	goto	l3229
  7093  03A4                     l3223:	
  7094                           
  7095                           ;main.c: 149: else if(voltage[0]<(int16_t)Vref[0])
  7096  03A4  0021               	movlb	1	; select bank1
  7097  03A5  0831               	movf	(_voltage+1)^(0+128),w
  7098  03A6  3A80               	xorlw	128
  7099  03A7  0020               	movlb	0	; select bank0
  7100  03A8  00D8               	movwf	??_main
  7101  03A9  0021               	movlb	1	; select bank1
  7102  03AA  0841               	movf	(_Vref+1)^(0+128),w
  7103  03AB  3A80               	xorlw	128
  7104  03AC  0020               	movlb	0	; select bank0
  7105  03AD  0258               	subwf	??_main,w
  7106  03AE  1D03               	skipz
  7107  03AF  2BB3               	goto	u3855
  7108  03B0  0021               	movlb	1	; select bank1
  7109  03B1  0840               	movf	_Vref^(0+128),w
  7110  03B2  0230               	subwf	_voltage^(0+128),w
  7111  03B3                     u3855:	
  7112  03B3  1803               	skipnc
  7113  03B4  2BBE               	goto	l3229
  7114                           
  7115                           ;main.c: 150: {
  7116                           ;main.c: 151: if(dutyCycle6>0) dutyCycle6-=1;;
  7117  03B5  0021               	movlb	1	; select bank1
  7118  03B6  0867               	movf	main@dutyCycle6^(0+128),w
  7119  03B7  0468               	iorwf	(main@dutyCycle6+1)^(0+128),w
  7120  03B8  1903               	btfsc	3,2
  7121  03B9  2BBE               	goto	l3229
  7122  03BA  3001               	movlw	1
  7123  03BB  02E7               	subwf	main@dutyCycle6^(0+128),f
  7124  03BC  3000               	movlw	0
  7125  03BD  3BE8               	subwfb	(main@dutyCycle6+1)^(0+128),f
  7126  03BE                     l3229:	
  7127                           ;main.c: 152: }
  7128                           
  7129                           
  7130                           ;main.c: 154: }
  7131                           ;main.c: 156: if(Imode[1])
  7132  03BE  0021               	movlb	1	; select bank1
  7133  03BF  084F               	movf	(_Imode^(0+128)+1),w
  7134  03C0  1903               	btfsc	3,2
  7135  03C1  2BD3               	goto	l3241
  7136                           
  7137                           ;main.c: 157: {
  7138                           ;main.c: 158: if(voltage[3]<MPPT1)
  7139  03C2  0837               	movf	((_voltage+1)^(0+128)+6),w
  7140  03C3  3A80               	xorlw	128
  7141  03C4  0020               	movlb	0	; select bank0
  7142  03C5  00D8               	movwf	??_main
  7143  03C6  0021               	movlb	1	; select bank1
  7144  03C7  085C               	movf	(main@MPPT1+1)^(0+128),w
  7145  03C8  3A80               	xorlw	128
  7146  03C9  0020               	movlb	0	; select bank0
  7147  03CA  0258               	subwf	??_main,w
  7148  03CB  1D03               	skipz
  7149  03CC  2BD0               	goto	u3885
  7150  03CD  0021               	movlb	1	; select bank1
  7151  03CE  085B               	movf	main@MPPT1^(0+128),w
  7152  03CF  0236               	subwf	(_voltage^(0+128)+6),w
  7153  03D0                     u3885:	
  7154  03D0  1C03               	btfss	3,0
  7155  03D1  2BE3               	goto	L3
  7156                           
  7157                           ;main.c: 163: }
  7158                           ;main.c: 164: }
  7159                           
  7160                           ;main.c: 161: {
  7161                           ;main.c: 162: dutyCycle7+=1;
  7162                           
  7163                           ;main.c: 159: {
  7164                           ;main.c: 160: if(dutyCycle7<1023)
  7165  03D2  2C01               	goto	L4
  7166  03D3                     l3241:	
  7167                           ;main.c: 168: }
  7168                           ;main.c: 169: }
  7169                           
  7170                           ;main.c: 166: {
  7171                           ;main.c: 167: dutyCycle7-=1;
  7172                           
  7173                           ;main.c: 165: else if(dutyCycle7>0)
  7174                           
  7175                           
  7176                           ;main.c: 170: else
  7177                           ;main.c: 171: {
  7178                           ;main.c: 172: if(voltage[1]>(int16_t)Vref[1])
  7179  03D3  0843               	movf	((_Vref+1)^(0+128)+2),w
  7180  03D4  3A80               	xorlw	128
  7181  03D5  0020               	movlb	0	; select bank0
  7182  03D6  00D8               	movwf	??_main
  7183  03D7  0021               	movlb	1	; select bank1
  7184  03D8  0833               	movf	((_voltage+1)^(0+128)+2),w
  7185  03D9  3A80               	xorlw	128
  7186  03DA  0020               	movlb	0	; select bank0
  7187  03DB  0258               	subwf	??_main,w
  7188  03DC  1D03               	skipz
  7189  03DD  2BE1               	goto	u3915
  7190  03DE  0021               	movlb	1	; select bank1
  7191  03DF  0832               	movf	(_voltage^(0+128)+2),w
  7192  03E0  0242               	subwf	(_Vref^(0+128)+2),w
  7193  03E1                     u3915:	
  7194  03E1  1803               	skipnc
  7195  03E2  2BF0               	goto	l3247
  7196  03E3                     L3:	
  7197                           
  7198                           ;main.c: 173: {
  7199                           ;main.c: 174: if(dutyCycle7<1023) dutyCycle7+=1;
  7200  03E3  3003               	movlw	3
  7201  03E4  0021               	movlb	1	; select bank1
  7202  03E5  026A               	subwf	(main@dutyCycle7+1)^(0+128),w
  7203  03E6  30FF               	movlw	255
  7204  03E7  1903               	skipnz
  7205  03E8  0269               	subwf	main@dutyCycle7^(0+128),w
  7206  03E9  1803               	skipnc
  7207  03EA  2C0A               	goto	l3253
  7208  03EB  3001               	movlw	1
  7209  03EC  07E9               	addwf	main@dutyCycle7^(0+128),f
  7210  03ED  3000               	movlw	0
  7211  03EE  3DEA               	addwfc	(main@dutyCycle7+1)^(0+128),f
  7212                           
  7213                           ;main.c: 175: }
  7214  03EF  2C0A               	goto	l3253
  7215  03F0                     l3247:	
  7216                           
  7217                           ;main.c: 176: else if(voltage[1]<(int16_t)Vref[1])
  7218  03F0  0021               	movlb	1	; select bank1
  7219  03F1  0833               	movf	((_voltage+1)^(0+128)+2),w
  7220  03F2  3A80               	xorlw	128
  7221  03F3  0020               	movlb	0	; select bank0
  7222  03F4  00D8               	movwf	??_main
  7223  03F5  0021               	movlb	1	; select bank1
  7224  03F6  0843               	movf	((_Vref+1)^(0+128)+2),w
  7225  03F7  3A80               	xorlw	128
  7226  03F8  0020               	movlb	0	; select bank0
  7227  03F9  0258               	subwf	??_main,w
  7228  03FA  1D03               	skipz
  7229  03FB  2BFF               	goto	u3935
  7230  03FC  0021               	movlb	1	; select bank1
  7231  03FD  0842               	movf	(_Vref^(0+128)+2),w
  7232  03FE  0232               	subwf	(_voltage^(0+128)+2),w
  7233  03FF                     u3935:	
  7234  03FF  1803               	skipnc
  7235  0400  2C0A               	goto	l3253
  7236  0401                     L4:	
  7237                           
  7238                           ;main.c: 177: {
  7239                           ;main.c: 178: if(dutyCycle7>0) dutyCycle7-=1;;
  7240  0401  0021               	movlb	1	; select bank1
  7241  0402  0869               	movf	main@dutyCycle7^(0+128),w
  7242  0403  046A               	iorwf	(main@dutyCycle7+1)^(0+128),w
  7243  0404  1903               	btfsc	3,2
  7244  0405  2C0A               	goto	l3253
  7245  0406  3001               	movlw	1
  7246  0407  02E9               	subwf	main@dutyCycle7^(0+128),f
  7247  0408  3000               	movlw	0
  7248  0409  3BEA               	subwfb	(main@dutyCycle7+1)^(0+128),f
  7249  040A                     l3253:	
  7250                           ;main.c: 179: }
  7251                           
  7252                           
  7253                           ;main.c: 181: }
  7254                           ;main.c: 183: slowLoop+=1;
  7255  040A  3001               	movlw	1
  7256  040B  0020               	movlb	0	; select bank0
  7257  040C  00D8               	movwf	??_main
  7258  040D  0858               	movf	??_main,w
  7259  040E  0021               	movlb	1	; select bank1
  7260  040F  07DA               	addwf	main@slowLoop^(0+128),f
  7261                           
  7262                           ;main.c: 188: PWM1_LoadDutyValue(dutyCycle1);
  7263  0410  0864               	movf	(main@dutyCycle1+1)^(0+128),w
  7264  0411  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  7265  0412  0863               	movf	main@dutyCycle1^(0+128),w
  7266  0413  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  7267  0414  3192  225D  3182   	fcall	_PWM1_LoadDutyValue
  7268                           
  7269                           ;main.c: 189: PWM6_LoadDutyValue(dutyCycle6);
  7270  0417  0021               	movlb	1	; select bank1
  7271  0418  0868               	movf	(main@dutyCycle6+1)^(0+128),w
  7272  0419  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7273  041A  0867               	movf	main@dutyCycle6^(0+128),w
  7274  041B  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7275  041C  3192  2273  3182   	fcall	_PWM6_LoadDutyValue
  7276                           
  7277                           ;main.c: 190: PWM7_LoadDutyValue(dutyCycle7);
  7278  041F  0021               	movlb	1	; select bank1
  7279  0420  086A               	movf	(main@dutyCycle7+1)^(0+128),w
  7280  0421  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7281  0422  0869               	movf	main@dutyCycle7^(0+128),w
  7282  0423  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7283  0424  3192  2289  3182   	fcall	_PWM7_LoadDutyValue
  7284                           
  7285                           ;main.c: 192: menuButton = readButton();
  7286  0427  3197  277E  3182   	fcall	_readButton
  7287  042A  0020               	movlb	0	; select bank0
  7288  042B  00D8               	movwf	??_main
  7289  042C  0858               	movf	??_main,w
  7290  042D  0021               	movlb	1	; select bank1
  7291  042E  00DF               	movwf	main@menuButton^(0+128)
  7292                           
  7293                           ;main.c: 193: if(menuButton == 2) if(MPPT0>2700)MPPT1-=1;
  7294  042F  3002               	movlw	2
  7295  0430  065F               	xorwf	main@menuButton^(0+128),w
  7296  0431  1D03               	btfss	3,2
  7297  0432  2C45               	goto	l3267
  7298  0433  085E               	movf	(main@MPPT0+1)^(0+128),w
  7299  0434  3A80               	xorlw	128
  7300  0435  0020               	movlb	0	; select bank0
  7301  0436  00D8               	movwf	??_main
  7302  0437  308A               	movlw	138
  7303  0438  0258               	subwf	??_main,w
  7304  0439  1D03               	skipz
  7305  043A  2C3E               	goto	u3965
  7306  043B  308D               	movlw	141
  7307  043C  0021               	movlb	1	; select bank1
  7308  043D  025D               	subwf	main@MPPT0^(0+128),w
  7309  043E                     u3965:	
  7310  043E  1C03               	skipc
  7311  043F  2C45               	goto	l3267
  7312  0440  30FF               	movlw	255
  7313  0441  0021               	movlb	1	; select bank1
  7314  0442  07DB               	addwf	main@MPPT1^(0+128),f
  7315  0443  30FF               	movlw	255
  7316  0444  3DDC               	addwfc	(main@MPPT1+1)^(0+128),f
  7317  0445                     l3267:	
  7318                           
  7319                           ;main.c: 194: if(menuButton == 3)if(MPPT1<3200)MPPT1+=1;
  7320  0445  3003               	movlw	3
  7321  0446  0021               	movlb	1	; select bank1
  7322  0447  065F               	xorwf	main@menuButton^(0+128),w
  7323  0448  1D03               	btfss	3,2
  7324  0449  2C5C               	goto	l3273
  7325  044A  085C               	movf	(main@MPPT1+1)^(0+128),w
  7326  044B  3A80               	xorlw	128
  7327  044C  0020               	movlb	0	; select bank0
  7328  044D  00D8               	movwf	??_main
  7329  044E  308C               	movlw	140
  7330  044F  0258               	subwf	??_main,w
  7331  0450  1D03               	skipz
  7332  0451  2C55               	goto	u3985
  7333  0452  3080               	movlw	128
  7334  0453  0021               	movlb	1	; select bank1
  7335  0454  025B               	subwf	main@MPPT1^(0+128),w
  7336  0455                     u3985:	
  7337  0455  1803               	skipnc
  7338  0456  2C5C               	goto	l3273
  7339  0457  3001               	movlw	1
  7340  0458  0021               	movlb	1	; select bank1
  7341  0459  07DB               	addwf	main@MPPT1^(0+128),f
  7342  045A  3000               	movlw	0
  7343  045B  3DDC               	addwfc	(main@MPPT1+1)^(0+128),f
  7344  045C                     l3273:	
  7345                           
  7346                           ;main.c: 195: if(menuButton == 1)LCDInit();
  7347  045C  0021               	movlb	1	; select bank1
  7348  045D  035F               	decf	main@menuButton^(0+128),w
  7349  045E  1D03               	btfss	3,2
  7350  045F  2C63               	goto	l3277
  7351  0460  3194  2450  3182   	fcall	_LCDInit
  7352  0463                     l3277:	
  7353                           
  7354                           ;main.c: 199: if(slowLoop>250)
  7355  0463  30FB               	movlw	251
  7356  0464  0021               	movlb	1	; select bank1
  7357  0465  025A               	subwf	main@slowLoop^(0+128),w
  7358  0466  1C03               	skipc
  7359  0467  2A4E               	goto	l3161
  7360                           
  7361                           ;main.c: 200: {
  7362                           ;main.c: 201: IOutTotal=current[0];
  7363  0468  0839               	movf	(_current+1)^(0+128),w
  7364  0469  00E2               	movwf	(main@IOutTotal+1)^(0+128)
  7365  046A  0838               	movf	_current^(0+128),w
  7366  046B  00E1               	movwf	main@IOutTotal^(0+128)
  7367                           
  7368                           ;main.c: 204: if(IOutTotal>2)
  7369  046C  0862               	movf	(main@IOutTotal+1)^(0+128),w
  7370  046D  3A80               	xorlw	128
  7371  046E  0020               	movlb	0	; select bank0
  7372  046F  00D8               	movwf	??_main
  7373  0470  3080               	movlw	128
  7374  0471  0258               	subwf	??_main,w
  7375  0472  1D03               	skipz
  7376  0473  2C77               	goto	u4015
  7377  0474  3003               	movlw	3
  7378  0475  0021               	movlb	1	; select bank1
  7379  0476  0261               	subwf	main@IOutTotal^(0+128),w
  7380  0477                     u4015:	
  7381  0477  1C03               	skipc
  7382  0478  2CDB               	goto	l3299
  7383                           
  7384                           ;main.c: 205: {
  7385                           ;main.c: 206: if((uint16_t)IOutTotal*4+10>dutyCycle1)dutyCycle1+=1;else dutyCycle1-=1;
  7386  0479  0021               	movlb	1	; select bank1
  7387  047A  0862               	movf	(main@IOutTotal+1)^(0+128),w
  7388  047B  0020               	movlb	0	; select bank0
  7389  047C  00D9               	movwf	??_main+1
  7390  047D  0021               	movlb	1	; select bank1
  7391  047E  0861               	movf	main@IOutTotal^(0+128),w
  7392  047F  0020               	movlb	0	; select bank0
  7393  0480  00D8               	movwf	??_main
  7394  0481  35D8               	lslf	??_main,f
  7395  0482  0DD9               	rlf	??_main+1,f
  7396  0483  35D8               	lslf	??_main,f
  7397  0484  0DD9               	rlf	??_main+1,f
  7398  0485  0858               	movf	??_main,w
  7399  0486  3E0A               	addlw	10
  7400  0487  00DA               	movwf	??_main+2
  7401  0488  3000               	movlw	0
  7402  0489  3D59               	addwfc	??_main+1,w
  7403  048A  00DB               	movwf	??_main+3
  7404  048B  085B               	movf	??_main+3,w
  7405  048C  0021               	movlb	1	; select bank1
  7406  048D  0264               	subwf	(main@dutyCycle1+1)^(0+128),w
  7407  048E  1D03               	skipz
  7408  048F  2C94               	goto	u4025
  7409  0490  0020               	movlb	0	; select bank0
  7410  0491  085A               	movf	??_main+2,w
  7411  0492  0021               	movlb	1	; select bank1
  7412  0493  0263               	subwf	main@dutyCycle1^(0+128),w
  7413  0494                     u4025:	
  7414  0494  1803               	skipnc
  7415  0495  2C9B               	goto	l3285
  7416  0496  3001               	movlw	1
  7417  0497  07E3               	addwf	main@dutyCycle1^(0+128),f
  7418  0498  3000               	movlw	0
  7419  0499  3DE4               	addwfc	(main@dutyCycle1+1)^(0+128),f
  7420  049A  2C9F               	goto	l3287
  7421  049B                     l3285:	
  7422  049B  3001               	movlw	1
  7423  049C  02E3               	subwf	main@dutyCycle1^(0+128),f
  7424  049D  3000               	movlw	0
  7425  049E  3BE4               	subwfb	(main@dutyCycle1+1)^(0+128),f
  7426  049F                     l3287:	
  7427                           
  7428                           ;main.c: 207: if((uint16_t)IOutTotal*4+10>tempFanOutput)if(tempFanOutput<75)tempFanOutpu
      +                          t+=1;else if(tempFanOutput>0)tempFanOutput-=1;
  7429  049F  0862               	movf	(main@IOutTotal+1)^(0+128),w
  7430  04A0  0020               	movlb	0	; select bank0
  7431  04A1  00D9               	movwf	??_main+1
  7432  04A2  0021               	movlb	1	; select bank1
  7433  04A3  0861               	movf	main@IOutTotal^(0+128),w
  7434  04A4  0020               	movlb	0	; select bank0
  7435  04A5  00D8               	movwf	??_main
  7436  04A6  35D8               	lslf	??_main,f
  7437  04A7  0DD9               	rlf	??_main+1,f
  7438  04A8  35D8               	lslf	??_main,f
  7439  04A9  0DD9               	rlf	??_main+1,f
  7440  04AA  0858               	movf	??_main,w
  7441  04AB  3E0A               	addlw	10
  7442  04AC  00DA               	movwf	??_main+2
  7443  04AD  3000               	movlw	0
  7444  04AE  3D59               	addwfc	??_main+1,w
  7445  04AF  00DB               	movwf	??_main+3
  7446  04B0  085B               	movf	??_main+3,w
  7447  04B1  0021               	movlb	1	; select bank1
  7448  04B2  0266               	subwf	(main@tempFanOutput+1)^(0+128),w
  7449  04B3  1D03               	skipz
  7450  04B4  2CB9               	goto	u4035
  7451  04B5  0020               	movlb	0	; select bank0
  7452  04B6  085A               	movf	??_main+2,w
  7453  04B7  0021               	movlb	1	; select bank1
  7454  04B8  0265               	subwf	main@tempFanOutput^(0+128),w
  7455  04B9                     u4035:	
  7456  04B9  1803               	skipnc
  7457  04BA  2CCF               	goto	l489
  7458  04BB  3000               	movlw	0
  7459  04BC  0266               	subwf	(main@tempFanOutput+1)^(0+128),w
  7460  04BD  304B               	movlw	75
  7461  04BE  1903               	skipnz
  7462  04BF  0265               	subwf	main@tempFanOutput^(0+128),w
  7463  04C0  1803               	skipnc
  7464  04C1  2CC7               	goto	l3293
  7465  04C2  3001               	movlw	1
  7466  04C3  07E5               	addwf	main@tempFanOutput^(0+128),f
  7467  04C4  3000               	movlw	0
  7468  04C5  3DE6               	addwfc	(main@tempFanOutput+1)^(0+128),f
  7469  04C6  2CCF               	goto	l489
  7470  04C7                     l3293:	
  7471  04C7  0865               	movf	main@tempFanOutput^(0+128),w
  7472  04C8  0466               	iorwf	(main@tempFanOutput+1)^(0+128),w
  7473  04C9  1903               	btfsc	3,2
  7474  04CA  2CCF               	goto	l489
  7475  04CB  3001               	movlw	1
  7476  04CC  02E5               	subwf	main@tempFanOutput^(0+128),f
  7477  04CD  3000               	movlw	0
  7478  04CE  3BE6               	subwfb	(main@tempFanOutput+1)^(0+128),f
  7479  04CF                     l489:	
  7480                           
  7481                           ;main.c: 208: dutyCycle1=tempFanOutput;
  7482  04CF  0866               	movf	(main@tempFanOutput+1)^(0+128),w
  7483  04D0  00E4               	movwf	(main@dutyCycle1+1)^(0+128)
  7484  04D1  0865               	movf	main@tempFanOutput^(0+128),w
  7485  04D2  00E3               	movwf	main@dutyCycle1^(0+128)
  7486                           
  7487                           ;main.c: 209: if(dutyCycle1<19)dutyCycle1=0;
  7488  04D3  3000               	movlw	0
  7489  04D4  0264               	subwf	(main@dutyCycle1+1)^(0+128),w
  7490  04D5  3013               	movlw	19
  7491  04D6  1903               	skipnz
  7492  04D7  0263               	subwf	main@dutyCycle1^(0+128),w
  7493  04D8  1803               	skipnc
  7494  04D9  2CDE               	goto	l3301
  7495  04DA  2CDC               	goto	L1
  7496  04DB                     l3299:	
  7497                           ;main.c: 210: }
  7498                           
  7499                           
  7500                           ;main.c: 211: else
  7501                           ;main.c: 212: {
  7502                           ;main.c: 213: dutyCycle1=0;
  7503  04DB  0021               	movlb	1	; select bank1
  7504  04DC                     L1:	
  7505  04DC  01E3               	clrf	main@dutyCycle1^(0+128)
  7506  04DD  01E4               	clrf	(main@dutyCycle1+1)^(0+128)
  7507  04DE                     l3301:	
  7508                           
  7509                           ;main.c: 214: }
  7510                           ;main.c: 215: if(!(RB2))
  7511  04DE  0020               	movlb	0	; select bank0
  7512  04DF  190D               	btfsc	13,2	;volatile
  7513  04E0  2CF2               	goto	l3305
  7514                           
  7515                           ;main.c: 216: {
  7516                           ;main.c: 217: dutyCycle1=55;
  7517  04E1  3037               	movlw	55
  7518  04E2  0021               	movlb	1	; select bank1
  7519  04E3  00E3               	movwf	main@dutyCycle1^(0+128)
  7520  04E4  3000               	movlw	0
  7521  04E5  00E4               	movwf	(main@dutyCycle1^(0+128)+1)
  7522                           
  7523                           ;main.c: 218: batteryState[0]=CHARGE;
  7524  04E6  3004               	movlw	4
  7525  04E7  0020               	movlb	0	; select bank0
  7526  04E8  00D8               	movwf	??_main
  7527  04E9  0858               	movf	??_main,w
  7528  04EA  0021               	movlb	1	; select bank1
  7529  04EB  00D0               	movwf	_batteryState^(0+128)
  7530                           
  7531                           ;main.c: 219: batteryState[1]=CHARGE;
  7532  04EC  3004               	movlw	4
  7533  04ED  0020               	movlb	0	; select bank0
  7534  04EE  00D8               	movwf	??_main
  7535  04EF  0858               	movf	??_main,w
  7536  04F0  0021               	movlb	1	; select bank1
  7537  04F1  00D1               	movwf	(_batteryState^(0+128)+1)
  7538  04F2                     l3305:	
  7539                           
  7540                           ;main.c: 220: }
  7541                           ;main.c: 222: ADREF = 0x00;
  7542  04F2  0021               	movlb	1	; select bank1
  7543  04F3  019A               	clrf	26	;volatile
  7544                           
  7545                           ;main.c: 223: batteryTemp=tempCalc(ADCRead(8));
  7546  04F4  3008               	movlw	8
  7547  04F5  3189  212F  3182   	fcall	_ADCRead
  7548  04F8  0871               	movf	?_ADCRead+1,w
  7549  04F9  0020               	movlb	0	; select bank0
  7550  04FA  00CE               	movwf	tempCalc@analogValue+1
  7551  04FB  0870               	movf	?_ADCRead,w
  7552  04FC  00CD               	movwf	tempCalc@analogValue
  7553  04FD  318D  2513  3182   	fcall	_tempCalc
  7554  0500  0020               	movlb	0	; select bank0
  7555  0501  084E               	movf	?_tempCalc+1,w
  7556  0502  0021               	movlb	1	; select bank1
  7557  0503  00EC               	movwf	(_batteryTemp+1)^(0+128)
  7558  0504  0020               	movlb	0	; select bank0
  7559  0505  084D               	movf	?_tempCalc,w
  7560  0506  0021               	movlb	1	; select bank1
  7561  0507  00EB               	movwf	_batteryTemp^(0+128)
  7562                           
  7563                           ;main.c: 224: ADREF = 0x03;
  7564  0508  3003               	movlw	3
  7565  0509  009A               	movwf	26	;volatile
  7566                           
  7567                           ;main.c: 226: displayRefresh+=1;
  7568  050A  3001               	movlw	1
  7569  050B  0020               	movlb	0	; select bank0
  7570  050C  00D8               	movwf	??_main
  7571  050D  0858               	movf	??_main,w
  7572  050E  0021               	movlb	1	; select bank1
  7573  050F  07D9               	addwf	main@displayRefresh^(0+128),f
  7574                           
  7575                           ;main.c: 227: if(displayRefresh>80)
  7576  0510  3051               	movlw	81
  7577  0511  0259               	subwf	main@displayRefresh^(0+128),w
  7578  0512  1C03               	skipc
  7579  0513  2D19               	goto	l3319
  7580                           
  7581                           ;main.c: 228: {
  7582                           ;main.c: 229: LCDClear();
  7583  0514  3193  235B  3182   	fcall	_LCDClear
  7584                           
  7585                           ;main.c: 230: displayRefresh=0;
  7586  0517  0021               	movlb	1	; select bank1
  7587  0518  01D9               	clrf	main@displayRefresh^(0+128)
  7588  0519                     l3319:	
  7589                           
  7590                           ;main.c: 232: }
  7591                           ;main.c: 233: Battery_State_Machine(0);
  7592  0519  3000               	movlw	0
  7593  051A  318E  26F0  3182   	fcall	_Battery_State_Machine
  7594                           
  7595                           ;main.c: 234: Battery_State_Machine(1);
  7596  051D  3001               	movlw	1
  7597  051E  318E  26F0  3182   	fcall	_Battery_State_Machine
  7598                           
  7599                           ;main.c: 237: { gotoXY(0,0); LCDWriteString("In:");};
  7600  0521  01F5               	clrf	gotoXY@y
  7601  0522  3000               	movlw	0
  7602  0523  3192  2236  3182   	fcall	_gotoXY
  7603  0526  3025               	movlw	low (STR_1| (0+32768))
  7604  0527  00FC               	movwf	LCDWriteString@characters
  7605  0528  3098               	movlw	high (STR_1| (0+32768))
  7606  0529  00FD               	movwf	LCDWriteString@characters+1
  7607  052A  3192  2249  3182   	fcall	_LCDWriteString
  7608                           
  7609                           ;main.c: 238: { gotoXY(26,0); LCDWriteString("Out:");};
  7610  052D  01F5               	clrf	gotoXY@y
  7611  052E  301A               	movlw	26
  7612  052F  3192  2236  3182   	fcall	_gotoXY
  7613  0532  3020               	movlw	low (STR_2| (0+32768))
  7614  0533  00FC               	movwf	LCDWriteString@characters
  7615  0534  3098               	movlw	high (STR_2| (0+32768))
  7616  0535  00FD               	movwf	LCDWriteString@characters+1
  7617  0536  3192  2249  3182   	fcall	_LCDWriteString
  7618                           
  7619                           ;main.c: 239: { gotoXY(52,0); LCDWriteString("Ref:");};
  7620  0539  01F5               	clrf	gotoXY@y
  7621  053A  3034               	movlw	52
  7622  053B  3192  2236  3182   	fcall	_gotoXY
  7623  053E  301B               	movlw	low (STR_3| (0+32768))
  7624  053F  00FC               	movwf	LCDWriteString@characters
  7625  0540  3098               	movlw	high (STR_3| (0+32768))
  7626  0541  00FD               	movwf	LCDWriteString@characters+1
  7627  0542  3192  2249  3182   	fcall	_LCDWriteString
  7628                           
  7629                           ;main.c: 241: { gotoXY(0,1); LCDWriteInt(voltage[2],4, 2, 0);};
  7630  0545  01F5               	clrf	gotoXY@y
  7631  0546  0AF5               	incf	gotoXY@y,f
  7632  0547  3000               	movlw	0
  7633  0548  3192  2236  3182   	fcall	_gotoXY
  7634  054B  0021               	movlb	1	; select bank1
  7635  054C  0835               	movf	((_voltage+1)^(0+128)+4),w
  7636  054D  0020               	movlb	0	; select bank0
  7637  054E  00A1               	movwf	LCDWriteInt@value+1
  7638  054F  0021               	movlb	1	; select bank1
  7639  0550  0834               	movf	(_voltage^(0+128)+4),w
  7640  0551  0020               	movlb	0	; select bank0
  7641  0552  00A0               	movwf	LCDWriteInt@value
  7642  0553  3004               	movlw	4
  7643  0554  00D8               	movwf	??_main
  7644  0555  0858               	movf	??_main,w
  7645  0556  00A2               	movwf	LCDWriteInt@fieldLength
  7646  0557  3002               	movlw	2
  7647  0558  00D9               	movwf	??_main+1
  7648  0559  0859               	movf	??_main+1,w
  7649  055A  00A3               	movwf	LCDWriteInt@numPlaces
  7650  055B  01A4               	clrf	LCDWriteInt@sign
  7651  055C  318C  245A  3182   	fcall	_LCDWriteInt
  7652                           
  7653                           ;main.c: 242: LCDWriteCharacter('V');
  7654  055F  3056               	movlw	86
  7655  0560  3196  2666  3182   	fcall	_LCDWriteCharacter
  7656                           
  7657                           ;main.c: 244: { gotoXY(26,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7658  0563  01F5               	clrf	gotoXY@y
  7659  0564  0AF5               	incf	gotoXY@y,f
  7660  0565  301A               	movlw	26
  7661  0566  3192  2236  3182   	fcall	_gotoXY
  7662  0569  0021               	movlb	1	; select bank1
  7663  056A  0831               	movf	(_voltage+1)^(0+128),w
  7664  056B  0020               	movlb	0	; select bank0
  7665  056C  00A1               	movwf	LCDWriteInt@value+1
  7666  056D  0021               	movlb	1	; select bank1
  7667  056E  0830               	movf	_voltage^(0+128),w
  7668  056F  0020               	movlb	0	; select bank0
  7669  0570  00A0               	movwf	LCDWriteInt@value
  7670  0571  3004               	movlw	4
  7671  0572  00D8               	movwf	??_main
  7672  0573  0858               	movf	??_main,w
  7673  0574  00A2               	movwf	LCDWriteInt@fieldLength
  7674  0575  3002               	movlw	2
  7675  0576  00D9               	movwf	??_main+1
  7676  0577  0859               	movf	??_main+1,w
  7677  0578  00A3               	movwf	LCDWriteInt@numPlaces
  7678  0579  01A4               	clrf	LCDWriteInt@sign
  7679  057A  318C  245A  3182   	fcall	_LCDWriteInt
  7680                           
  7681                           ;main.c: 245: LCDWriteCharacter('V');
  7682  057D  3056               	movlw	86
  7683  057E  3196  2666  3182   	fcall	_LCDWriteCharacter
  7684                           
  7685                           ;main.c: 247: { gotoXY(52,1); LCDWriteInt(Vref[0],4, 2, 0);};
  7686  0581  01F5               	clrf	gotoXY@y
  7687  0582  0AF5               	incf	gotoXY@y,f
  7688  0583  3034               	movlw	52
  7689  0584  3192  2236  3182   	fcall	_gotoXY
  7690  0587  0021               	movlb	1	; select bank1
  7691  0588  0841               	movf	(_Vref+1)^(0+128),w
  7692  0589  0020               	movlb	0	; select bank0
  7693  058A  00A1               	movwf	LCDWriteInt@value+1
  7694  058B  0021               	movlb	1	; select bank1
  7695  058C  0840               	movf	_Vref^(0+128),w
  7696  058D  0020               	movlb	0	; select bank0
  7697  058E  00A0               	movwf	LCDWriteInt@value
  7698  058F  3004               	movlw	4
  7699  0590  00D8               	movwf	??_main
  7700  0591  0858               	movf	??_main,w
  7701  0592  00A2               	movwf	LCDWriteInt@fieldLength
  7702  0593  3002               	movlw	2
  7703  0594  00D9               	movwf	??_main+1
  7704  0595  0859               	movf	??_main+1,w
  7705  0596  00A3               	movwf	LCDWriteInt@numPlaces
  7706  0597  01A4               	clrf	LCDWriteInt@sign
  7707  0598  318C  245A  3182   	fcall	_LCDWriteInt
  7708                           
  7709                           ;main.c: 248: LCDWriteCharacter('V');
  7710  059B  3056               	movlw	86
  7711  059C  3196  2666  3182   	fcall	_LCDWriteCharacter
  7712                           
  7713                           ;main.c: 250: { gotoXY(80,1); LCDWriteInt(Imode[0],1, 0, 0);};
  7714  059F  01F5               	clrf	gotoXY@y
  7715  05A0  0AF5               	incf	gotoXY@y,f
  7716  05A1  3050               	movlw	80
  7717  05A2  3192  2236  3182   	fcall	_gotoXY
  7718  05A5  0021               	movlb	1	; select bank1
  7719  05A6  084E               	movf	_Imode^(0+128),w
  7720  05A7  0020               	movlb	0	; select bank0
  7721  05A8  00A0               	movwf	LCDWriteInt@value
  7722  05A9  01A1               	clrf	LCDWriteInt@value+1
  7723  05AA  1BA0               	btfsc	LCDWriteInt@value,7
  7724  05AB  03A1               	decf	LCDWriteInt@value+1,f
  7725  05AC  01A2               	clrf	LCDWriteInt@fieldLength
  7726  05AD  0AA2               	incf	LCDWriteInt@fieldLength,f
  7727  05AE  01A3               	clrf	LCDWriteInt@numPlaces
  7728  05AF  01A4               	clrf	LCDWriteInt@sign
  7729  05B0  318C  245A  3182   	fcall	_LCDWriteInt
  7730                           
  7731                           ;main.c: 252: { gotoXY(0,2); LCDWriteInt(current[2],3, 1, 0);};
  7732  05B3  3002               	movlw	2
  7733  05B4  0020               	movlb	0	; select bank0
  7734  05B5  00D8               	movwf	??_main
  7735  05B6  0858               	movf	??_main,w
  7736  05B7  00F5               	movwf	gotoXY@y
  7737  05B8  3000               	movlw	0
  7738  05B9  3192  2236  3182   	fcall	_gotoXY
  7739  05BC  0021               	movlb	1	; select bank1
  7740  05BD  083D               	movf	((_current+1)^(0+128)+4),w
  7741  05BE  0020               	movlb	0	; select bank0
  7742  05BF  00A1               	movwf	LCDWriteInt@value+1
  7743  05C0  0021               	movlb	1	; select bank1
  7744  05C1  083C               	movf	(_current^(0+128)+4),w
  7745  05C2  0020               	movlb	0	; select bank0
  7746  05C3  00A0               	movwf	LCDWriteInt@value
  7747  05C4  3003               	movlw	3
  7748  05C5  00D8               	movwf	??_main
  7749  05C6  0858               	movf	??_main,w
  7750  05C7  00A2               	movwf	LCDWriteInt@fieldLength
  7751  05C8  01A3               	clrf	LCDWriteInt@numPlaces
  7752  05C9  0AA3               	incf	LCDWriteInt@numPlaces,f
  7753  05CA  01A4               	clrf	LCDWriteInt@sign
  7754  05CB  318C  245A  3182   	fcall	_LCDWriteInt
  7755                           
  7756                           ;main.c: 253: LCDWriteCharacter('A');
  7757  05CE  3041               	movlw	65
  7758  05CF  3196  2666  3182   	fcall	_LCDWriteCharacter
  7759                           
  7760                           ;main.c: 255: { gotoXY(26,2); LCDWriteInt(current[0],3, 1, 0);};
  7761  05D2  3002               	movlw	2
  7762  05D3  0020               	movlb	0	; select bank0
  7763  05D4  00D8               	movwf	??_main
  7764  05D5  0858               	movf	??_main,w
  7765  05D6  00F5               	movwf	gotoXY@y
  7766  05D7  301A               	movlw	26
  7767  05D8  3192  2236  3182   	fcall	_gotoXY
  7768  05DB  0021               	movlb	1	; select bank1
  7769  05DC  0839               	movf	(_current+1)^(0+128),w
  7770  05DD  0020               	movlb	0	; select bank0
  7771  05DE  00A1               	movwf	LCDWriteInt@value+1
  7772  05DF  0021               	movlb	1	; select bank1
  7773  05E0  0838               	movf	_current^(0+128),w
  7774  05E1  0020               	movlb	0	; select bank0
  7775  05E2  00A0               	movwf	LCDWriteInt@value
  7776  05E3  3003               	movlw	3
  7777  05E4  00D8               	movwf	??_main
  7778  05E5  0858               	movf	??_main,w
  7779  05E6  00A2               	movwf	LCDWriteInt@fieldLength
  7780  05E7  01A3               	clrf	LCDWriteInt@numPlaces
  7781  05E8  0AA3               	incf	LCDWriteInt@numPlaces,f
  7782  05E9  01A4               	clrf	LCDWriteInt@sign
  7783  05EA  318C  245A  3182   	fcall	_LCDWriteInt
  7784                           
  7785                           ;main.c: 256: LCDWriteCharacter('A');
  7786  05ED  3041               	movlw	65
  7787  05EE  3196  2666  3182   	fcall	_LCDWriteCharacter
  7788                           
  7789                           ;main.c: 258: { gotoXY(52,2); LCDWriteInt(Iref[0],3, 1, 0);};
  7790  05F1  3002               	movlw	2
  7791  05F2  0020               	movlb	0	; select bank0
  7792  05F3  00D8               	movwf	??_main
  7793  05F4  0858               	movf	??_main,w
  7794  05F5  00F5               	movwf	gotoXY@y
  7795  05F6  3034               	movlw	52
  7796  05F7  3192  2236  3182   	fcall	_gotoXY
  7797  05FA  0021               	movlb	1	; select bank1
  7798  05FB  0845               	movf	(_Iref+1)^(0+128),w
  7799  05FC  0020               	movlb	0	; select bank0
  7800  05FD  00A1               	movwf	LCDWriteInt@value+1
  7801  05FE  0021               	movlb	1	; select bank1
  7802  05FF  0844               	movf	_Iref^(0+128),w
  7803  0600  0020               	movlb	0	; select bank0
  7804  0601  00A0               	movwf	LCDWriteInt@value
  7805  0602  3003               	movlw	3
  7806  0603  00D8               	movwf	??_main
  7807  0604  0858               	movf	??_main,w
  7808  0605  00A2               	movwf	LCDWriteInt@fieldLength
  7809  0606  01A3               	clrf	LCDWriteInt@numPlaces
  7810  0607  0AA3               	incf	LCDWriteInt@numPlaces,f
  7811  0608  01A4               	clrf	LCDWriteInt@sign
  7812  0609  318C  245A  3182   	fcall	_LCDWriteInt
  7813                           
  7814                           ;main.c: 259: LCDWriteCharacter('A');
  7815  060C  3041               	movlw	65
  7816  060D  3196  2666  3182   	fcall	_LCDWriteCharacter
  7817                           
  7818                           ;main.c: 261: { gotoXY(80,2); LCDWriteInt(batteryState[0],1, 0, 0);};
  7819  0610  3002               	movlw	2
  7820  0611  0020               	movlb	0	; select bank0
  7821  0612  00D8               	movwf	??_main
  7822  0613  0858               	movf	??_main,w
  7823  0614  00F5               	movwf	gotoXY@y
  7824  0615  3050               	movlw	80
  7825  0616  3192  2236  3182   	fcall	_gotoXY
  7826  0619  0021               	movlb	1	; select bank1
  7827  061A  0850               	movf	_batteryState^(0+128),w
  7828  061B  0020               	movlb	0	; select bank0
  7829  061C  00D8               	movwf	??_main
  7830  061D  01D9               	clrf	??_main+1
  7831  061E  0858               	movf	??_main,w
  7832  061F  00A0               	movwf	LCDWriteInt@value
  7833  0620  0859               	movf	??_main+1,w
  7834  0621  00A1               	movwf	LCDWriteInt@value+1
  7835  0622  01A2               	clrf	LCDWriteInt@fieldLength
  7836  0623  0AA2               	incf	LCDWriteInt@fieldLength,f
  7837  0624  01A3               	clrf	LCDWriteInt@numPlaces
  7838  0625  01A4               	clrf	LCDWriteInt@sign
  7839  0626  318C  245A  3182   	fcall	_LCDWriteInt
  7840                           
  7841                           ;main.c: 274: { gotoXY(0,3); LCDWriteInt(IOutTotal,4, 1, 0);};
  7842  0629  3003               	movlw	3
  7843  062A  0020               	movlb	0	; select bank0
  7844  062B  00D8               	movwf	??_main
  7845  062C  0858               	movf	??_main,w
  7846  062D  00F5               	movwf	gotoXY@y
  7847  062E  3000               	movlw	0
  7848  062F  3192  2236  3182   	fcall	_gotoXY
  7849  0632  0021               	movlb	1	; select bank1
  7850  0633  0862               	movf	(main@IOutTotal+1)^(0+128),w
  7851  0634  0020               	movlb	0	; select bank0
  7852  0635  00A1               	movwf	LCDWriteInt@value+1
  7853  0636  0021               	movlb	1	; select bank1
  7854  0637  0861               	movf	main@IOutTotal^(0+128),w
  7855  0638  0020               	movlb	0	; select bank0
  7856  0639  00A0               	movwf	LCDWriteInt@value
  7857  063A  3004               	movlw	4
  7858  063B  00D8               	movwf	??_main
  7859  063C  0858               	movf	??_main,w
  7860  063D  00A2               	movwf	LCDWriteInt@fieldLength
  7861  063E  01A3               	clrf	LCDWriteInt@numPlaces
  7862  063F  0AA3               	incf	LCDWriteInt@numPlaces,f
  7863  0640  01A4               	clrf	LCDWriteInt@sign
  7864  0641  318C  245A  3182   	fcall	_LCDWriteInt
  7865                           
  7866                           ;main.c: 275: { gotoXY(24,3); LCDWriteInt((uint16_t)IOutTotal*4+10,4, 0, 0);};
  7867  0644  3003               	movlw	3
  7868  0645  0020               	movlb	0	; select bank0
  7869  0646  00D8               	movwf	??_main
  7870  0647  0858               	movf	??_main,w
  7871  0648  00F5               	movwf	gotoXY@y
  7872  0649  3018               	movlw	24
  7873  064A  3192  2236  3182   	fcall	_gotoXY
  7874  064D  0021               	movlb	1	; select bank1
  7875  064E  0862               	movf	(main@IOutTotal+1)^(0+128),w
  7876  064F  0020               	movlb	0	; select bank0
  7877  0650  00D9               	movwf	??_main+1
  7878  0651  0021               	movlb	1	; select bank1
  7879  0652  0861               	movf	main@IOutTotal^(0+128),w
  7880  0653  0020               	movlb	0	; select bank0
  7881  0654  00D8               	movwf	??_main
  7882  0655  35D8               	lslf	??_main,f
  7883  0656  0DD9               	rlf	??_main+1,f
  7884  0657  35D8               	lslf	??_main,f
  7885  0658  0DD9               	rlf	??_main+1,f
  7886  0659  0858               	movf	??_main,w
  7887  065A  3E0A               	addlw	10
  7888  065B  00A0               	movwf	LCDWriteInt@value
  7889  065C  3000               	movlw	0
  7890  065D  3D59               	addwfc	??_main+1,w
  7891  065E  00A1               	movwf	LCDWriteInt@value+1
  7892  065F  3004               	movlw	4
  7893  0660  00DA               	movwf	??_main+2
  7894  0661  085A               	movf	??_main+2,w
  7895  0662  00A2               	movwf	LCDWriteInt@fieldLength
  7896  0663  01A3               	clrf	LCDWriteInt@numPlaces
  7897  0664  01A4               	clrf	LCDWriteInt@sign
  7898  0665  318C  245A  3182   	fcall	_LCDWriteInt
  7899                           
  7900                           ;main.c: 276: { gotoXY(44,3); LCDWriteInt(tempFanOutput,3, 0, 0);};
  7901  0668  3003               	movlw	3
  7902  0669  0020               	movlb	0	; select bank0
  7903  066A  00D8               	movwf	??_main
  7904  066B  0858               	movf	??_main,w
  7905  066C  00F5               	movwf	gotoXY@y
  7906  066D  302C               	movlw	44
  7907  066E  3192  2236  3182   	fcall	_gotoXY
  7908  0671  0021               	movlb	1	; select bank1
  7909  0672  0866               	movf	(main@tempFanOutput+1)^(0+128),w
  7910  0673  0020               	movlb	0	; select bank0
  7911  0674  00A1               	movwf	LCDWriteInt@value+1
  7912  0675  0021               	movlb	1	; select bank1
  7913  0676  0865               	movf	main@tempFanOutput^(0+128),w
  7914  0677  0020               	movlb	0	; select bank0
  7915  0678  00A0               	movwf	LCDWriteInt@value
  7916  0679  3003               	movlw	3
  7917  067A  00D8               	movwf	??_main
  7918  067B  0858               	movf	??_main,w
  7919  067C  00A2               	movwf	LCDWriteInt@fieldLength
  7920  067D  01A3               	clrf	LCDWriteInt@numPlaces
  7921  067E  01A4               	clrf	LCDWriteInt@sign
  7922  067F  318C  245A  3182   	fcall	_LCDWriteInt
  7923                           
  7924                           ;main.c: 277: { gotoXY(64,3); LCDWriteInt(dutyCycle1,3, 0, 0);};
  7925  0682  3003               	movlw	3
  7926  0683  0020               	movlb	0	; select bank0
  7927  0684  00D8               	movwf	??_main
  7928  0685  0858               	movf	??_main,w
  7929  0686  00F5               	movwf	gotoXY@y
  7930  0687  3040               	movlw	64
  7931  0688  3192  2236  3182   	fcall	_gotoXY
  7932  068B  0021               	movlb	1	; select bank1
  7933  068C  0864               	movf	(main@dutyCycle1+1)^(0+128),w
  7934  068D  0020               	movlb	0	; select bank0
  7935  068E  00A1               	movwf	LCDWriteInt@value+1
  7936  068F  0021               	movlb	1	; select bank1
  7937  0690  0863               	movf	main@dutyCycle1^(0+128),w
  7938  0691  0020               	movlb	0	; select bank0
  7939  0692  00A0               	movwf	LCDWriteInt@value
  7940  0693  3003               	movlw	3
  7941  0694  00D8               	movwf	??_main
  7942  0695  0858               	movf	??_main,w
  7943  0696  00A2               	movwf	LCDWriteInt@fieldLength
  7944  0697  01A3               	clrf	LCDWriteInt@numPlaces
  7945  0698  01A4               	clrf	LCDWriteInt@sign
  7946  0699  318C  245A  3182   	fcall	_LCDWriteInt
  7947                           
  7948                           ;main.c: 281: { gotoXY(0,4); LCDWriteInt(current[3],3, 1, 0);};
  7949  069C  3004               	movlw	4
  7950  069D  0020               	movlb	0	; select bank0
  7951  069E  00D8               	movwf	??_main
  7952  069F  0858               	movf	??_main,w
  7953  06A0  00F5               	movwf	gotoXY@y
  7954  06A1  3000               	movlw	0
  7955  06A2  3192  2236  3182   	fcall	_gotoXY
  7956  06A5  0021               	movlb	1	; select bank1
  7957  06A6  083F               	movf	((_current+1)^(0+128)+6),w
  7958  06A7  0020               	movlb	0	; select bank0
  7959  06A8  00A1               	movwf	LCDWriteInt@value+1
  7960  06A9  0021               	movlb	1	; select bank1
  7961  06AA  083E               	movf	(_current^(0+128)+6),w
  7962  06AB  0020               	movlb	0	; select bank0
  7963  06AC  00A0               	movwf	LCDWriteInt@value
  7964  06AD  3003               	movlw	3
  7965  06AE  00D8               	movwf	??_main
  7966  06AF  0858               	movf	??_main,w
  7967  06B0  00A2               	movwf	LCDWriteInt@fieldLength
  7968  06B1  01A3               	clrf	LCDWriteInt@numPlaces
  7969  06B2  0AA3               	incf	LCDWriteInt@numPlaces,f
  7970  06B3  01A4               	clrf	LCDWriteInt@sign
  7971  06B4  318C  245A  3182   	fcall	_LCDWriteInt
  7972                           
  7973                           ;main.c: 282: LCDWriteCharacter('A');
  7974  06B7  3041               	movlw	65
  7975  06B8  3196  2666  3182   	fcall	_LCDWriteCharacter
  7976                           
  7977                           ;main.c: 284: { gotoXY(26,4); LCDWriteInt(current[1],3, 1, 0);};
  7978  06BB  3004               	movlw	4
  7979  06BC  0020               	movlb	0	; select bank0
  7980  06BD  00D8               	movwf	??_main
  7981  06BE  0858               	movf	??_main,w
  7982  06BF  00F5               	movwf	gotoXY@y
  7983  06C0  301A               	movlw	26
  7984  06C1  3192  2236  3182   	fcall	_gotoXY
  7985  06C4  0021               	movlb	1	; select bank1
  7986  06C5  083B               	movf	((_current+1)^(0+128)+2),w
  7987  06C6  0020               	movlb	0	; select bank0
  7988  06C7  00A1               	movwf	LCDWriteInt@value+1
  7989  06C8  0021               	movlb	1	; select bank1
  7990  06C9  083A               	movf	(_current^(0+128)+2),w
  7991  06CA  0020               	movlb	0	; select bank0
  7992  06CB  00A0               	movwf	LCDWriteInt@value
  7993  06CC  3003               	movlw	3
  7994  06CD  00D8               	movwf	??_main
  7995  06CE  0858               	movf	??_main,w
  7996  06CF  00A2               	movwf	LCDWriteInt@fieldLength
  7997  06D0  01A3               	clrf	LCDWriteInt@numPlaces
  7998  06D1  0AA3               	incf	LCDWriteInt@numPlaces,f
  7999  06D2  01A4               	clrf	LCDWriteInt@sign
  8000  06D3  318C  245A  3182   	fcall	_LCDWriteInt
  8001                           
  8002                           ;main.c: 285: LCDWriteCharacter('A');
  8003  06D6  3041               	movlw	65
  8004  06D7  3196  2666  3182   	fcall	_LCDWriteCharacter
  8005                           
  8006                           ;main.c: 287: { gotoXY(52,4); LCDWriteInt(Iref[1],3, 1, 0);};
  8007  06DA  3004               	movlw	4
  8008  06DB  0020               	movlb	0	; select bank0
  8009  06DC  00D8               	movwf	??_main
  8010  06DD  0858               	movf	??_main,w
  8011  06DE  00F5               	movwf	gotoXY@y
  8012  06DF  3034               	movlw	52
  8013  06E0  3192  2236  3182   	fcall	_gotoXY
  8014  06E3  0021               	movlb	1	; select bank1
  8015  06E4  0847               	movf	((_Iref+1)^(0+128)+2),w
  8016  06E5  0020               	movlb	0	; select bank0
  8017  06E6  00A1               	movwf	LCDWriteInt@value+1
  8018  06E7  0021               	movlb	1	; select bank1
  8019  06E8  0846               	movf	(_Iref^(0+128)+2),w
  8020  06E9  0020               	movlb	0	; select bank0
  8021  06EA  00A0               	movwf	LCDWriteInt@value
  8022  06EB  3003               	movlw	3
  8023  06EC  00D8               	movwf	??_main
  8024  06ED  0858               	movf	??_main,w
  8025  06EE  00A2               	movwf	LCDWriteInt@fieldLength
  8026  06EF  01A3               	clrf	LCDWriteInt@numPlaces
  8027  06F0  0AA3               	incf	LCDWriteInt@numPlaces,f
  8028  06F1  01A4               	clrf	LCDWriteInt@sign
  8029  06F2  318C  245A  3182   	fcall	_LCDWriteInt
  8030                           
  8031                           ;main.c: 288: LCDWriteCharacter('A');
  8032  06F5  3041               	movlw	65
  8033  06F6  3196  2666  3182   	fcall	_LCDWriteCharacter
  8034                           
  8035                           ;main.c: 290: { gotoXY(80,4); LCDWriteInt(batteryState[1],1, 0, 0);};
  8036  06F9  3004               	movlw	4
  8037  06FA  0020               	movlb	0	; select bank0
  8038  06FB  00D8               	movwf	??_main
  8039  06FC  0858               	movf	??_main,w
  8040  06FD  00F5               	movwf	gotoXY@y
  8041  06FE  3050               	movlw	80
  8042  06FF  3192  2236  3182   	fcall	_gotoXY
  8043  0702  0021               	movlb	1	; select bank1
  8044  0703  0851               	movf	(_batteryState^(0+128)+1),w
  8045  0704  0020               	movlb	0	; select bank0
  8046  0705  00D8               	movwf	??_main
  8047  0706  01D9               	clrf	??_main+1
  8048  0707  0858               	movf	??_main,w
  8049  0708  00A0               	movwf	LCDWriteInt@value
  8050  0709  0859               	movf	??_main+1,w
  8051  070A  00A1               	movwf	LCDWriteInt@value+1
  8052  070B  01A2               	clrf	LCDWriteInt@fieldLength
  8053  070C  0AA2               	incf	LCDWriteInt@fieldLength,f
  8054  070D  01A3               	clrf	LCDWriteInt@numPlaces
  8055  070E  01A4               	clrf	LCDWriteInt@sign
  8056  070F  318C  245A  3182   	fcall	_LCDWriteInt
  8057                           
  8058                           ;main.c: 294: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  8059  0712  3005               	movlw	5
  8060  0713  0020               	movlb	0	; select bank0
  8061  0714  00D8               	movwf	??_main
  8062  0715  0858               	movf	??_main,w
  8063  0716  00F5               	movwf	gotoXY@y
  8064  0717  3000               	movlw	0
  8065  0718  3192  2236  3182   	fcall	_gotoXY
  8066  071B  0021               	movlb	1	; select bank1
  8067  071C  0868               	movf	(main@dutyCycle6+1)^(0+128),w
  8068  071D  0020               	movlb	0	; select bank0
  8069  071E  00A1               	movwf	LCDWriteInt@value+1
  8070  071F  0021               	movlb	1	; select bank1
  8071  0720  0867               	movf	main@dutyCycle6^(0+128),w
  8072  0721  0020               	movlb	0	; select bank0
  8073  0722  00A0               	movwf	LCDWriteInt@value
  8074  0723  3004               	movlw	4
  8075  0724  00D8               	movwf	??_main
  8076  0725  0858               	movf	??_main,w
  8077  0726  00A2               	movwf	LCDWriteInt@fieldLength
  8078  0727  01A3               	clrf	LCDWriteInt@numPlaces
  8079  0728  01A4               	clrf	LCDWriteInt@sign
  8080  0729  318C  245A  3182   	fcall	_LCDWriteInt
  8081                           
  8082                           ;main.c: 295: { gotoXY(18,5); LCDWriteInt(VHoldMode[0],1, 0, 0);};
  8083  072C  3005               	movlw	5
  8084  072D  0020               	movlb	0	; select bank0
  8085  072E  00D8               	movwf	??_main
  8086  072F  0858               	movf	??_main,w
  8087  0730  00F5               	movwf	gotoXY@y
  8088  0731  3012               	movlw	18
  8089  0732  3192  2236  3182   	fcall	_gotoXY
  8090  0735  0021               	movlb	1	; select bank1
  8091  0736  084A               	movf	_VHoldMode^(0+128),w
  8092  0737  0020               	movlb	0	; select bank0
  8093  0738  00A0               	movwf	LCDWriteInt@value
  8094  0739  01A1               	clrf	LCDWriteInt@value+1
  8095  073A  1BA0               	btfsc	LCDWriteInt@value,7
  8096  073B  03A1               	decf	LCDWriteInt@value+1,f
  8097  073C  01A2               	clrf	LCDWriteInt@fieldLength
  8098  073D  0AA2               	incf	LCDWriteInt@fieldLength,f
  8099  073E  01A3               	clrf	LCDWriteInt@numPlaces
  8100  073F  01A4               	clrf	LCDWriteInt@sign
  8101  0740  318C  245A  3182   	fcall	_LCDWriteInt
  8102                           
  8103                           ;main.c: 296: LCDWriteCharacter(' ');
  8104  0743  3020               	movlw	32
  8105  0744  3196  2666  3182   	fcall	_LCDWriteCharacter
  8106                           
  8107                           ;main.c: 297: { gotoXY(28,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  8108  0747  3005               	movlw	5
  8109  0748  0020               	movlb	0	; select bank0
  8110  0749  00D8               	movwf	??_main
  8111  074A  0858               	movf	??_main,w
  8112  074B  00F5               	movwf	gotoXY@y
  8113  074C  301C               	movlw	28
  8114  074D  3192  2236  3182   	fcall	_gotoXY
  8115  0750  0021               	movlb	1	; select bank1
  8116  0751  086A               	movf	(main@dutyCycle7+1)^(0+128),w
  8117  0752  0020               	movlb	0	; select bank0
  8118  0753  00A1               	movwf	LCDWriteInt@value+1
  8119  0754  0021               	movlb	1	; select bank1
  8120  0755  0869               	movf	main@dutyCycle7^(0+128),w
  8121  0756  0020               	movlb	0	; select bank0
  8122  0757  00A0               	movwf	LCDWriteInt@value
  8123  0758  3004               	movlw	4
  8124  0759  00D8               	movwf	??_main
  8125  075A  0858               	movf	??_main,w
  8126  075B  00A2               	movwf	LCDWriteInt@fieldLength
  8127  075C  01A3               	clrf	LCDWriteInt@numPlaces
  8128  075D  01A4               	clrf	LCDWriteInt@sign
  8129  075E  318C  245A  3182   	fcall	_LCDWriteInt
  8130                           
  8131                           ;main.c: 298: { gotoXY(46,5); LCDWriteInt(VHoldMode[1],1, 0, 0);};
  8132  0761  3005               	movlw	5
  8133  0762  0020               	movlb	0	; select bank0
  8134  0763  00D8               	movwf	??_main
  8135  0764  0858               	movf	??_main,w
  8136  0765  00F5               	movwf	gotoXY@y
  8137  0766  302E               	movlw	46
  8138  0767  3192  2236  3182   	fcall	_gotoXY
  8139  076A  0021               	movlb	1	; select bank1
  8140  076B  084B               	movf	(_VHoldMode^(0+128)+1),w
  8141  076C  0020               	movlb	0	; select bank0
  8142  076D  00A0               	movwf	LCDWriteInt@value
  8143  076E  01A1               	clrf	LCDWriteInt@value+1
  8144  076F  1BA0               	btfsc	LCDWriteInt@value,7
  8145  0770  03A1               	decf	LCDWriteInt@value+1,f
  8146  0771  01A2               	clrf	LCDWriteInt@fieldLength
  8147  0772  0AA2               	incf	LCDWriteInt@fieldLength,f
  8148  0773  01A3               	clrf	LCDWriteInt@numPlaces
  8149  0774  01A4               	clrf	LCDWriteInt@sign
  8150  0775  318C  245A  3182   	fcall	_LCDWriteInt
  8151                           
  8152                           ;main.c: 299: LCDWriteCharacter(' ');
  8153  0778  3020               	movlw	32
  8154  0779  3196  2666  3182   	fcall	_LCDWriteCharacter
  8155                           
  8156                           ;main.c: 300: { gotoXY(56,5); LCDWriteInt(batteryTemp,3, 1, 0);};
  8157  077C  3005               	movlw	5
  8158  077D  0020               	movlb	0	; select bank0
  8159  077E  00D8               	movwf	??_main
  8160  077F  0858               	movf	??_main,w
  8161  0780  00F5               	movwf	gotoXY@y
  8162  0781  3038               	movlw	56
  8163  0782  3192  2236  3182   	fcall	_gotoXY
  8164  0785  0021               	movlb	1	; select bank1
  8165  0786  086C               	movf	(_batteryTemp+1)^(0+128),w
  8166  0787  0020               	movlb	0	; select bank0
  8167  0788  00A1               	movwf	LCDWriteInt@value+1
  8168  0789  0021               	movlb	1	; select bank1
  8169  078A  086B               	movf	_batteryTemp^(0+128),w
  8170  078B  0020               	movlb	0	; select bank0
  8171  078C  00A0               	movwf	LCDWriteInt@value
  8172  078D  3003               	movlw	3
  8173  078E  00D8               	movwf	??_main
  8174  078F  0858               	movf	??_main,w
  8175  0790  00A2               	movwf	LCDWriteInt@fieldLength
  8176  0791  01A3               	clrf	LCDWriteInt@numPlaces
  8177  0792  0AA3               	incf	LCDWriteInt@numPlaces,f
  8178  0793  01A4               	clrf	LCDWriteInt@sign
  8179  0794  318C  245A  3182   	fcall	_LCDWriteInt
  8180                           
  8181                           ;main.c: 301: LCDWriteCharacter(123);
  8182  0797  307B               	movlw	123
  8183  0798  3196  2666  3182   	fcall	_LCDWriteCharacter
  8184                           
  8185                           ;main.c: 302: LCDWriteCharacter('C');
  8186  079B  3043               	movlw	67
  8187  079C  3196  2666  3182   	fcall	_LCDWriteCharacter
  8188                           
  8189                           ;main.c: 372: if(batteryState[0] > FINISHED)
  8190  079F  3003               	movlw	3
  8191  07A0  0021               	movlb	1	; select bank1
  8192  07A1  0250               	subwf	_batteryState^(0+128),w
  8193  07A2  1C03               	skipc
  8194  07A3  2FA8               	goto	l3449
  8195                           
  8196                           ;main.c: 373: {
  8197                           ;main.c: 374: cc_cv_mode(0);
  8198  07A4  3000               	movlw	0
  8199  07A5  3180  2004  3182   	fcall	_cc_cv_mode
  8200  07A8                     l3449:	
  8201                           
  8202                           ;main.c: 375: }
  8203                           ;main.c: 376: if(batteryState[1] > FINISHED)
  8204  07A8  3003               	movlw	3
  8205  07A9  0021               	movlb	1	; select bank1
  8206  07AA  0251               	subwf	(_batteryState^(0+128)+1),w
  8207  07AB  1C03               	skipc
  8208  07AC  2FB1               	goto	l3453
  8209                           
  8210                           ;main.c: 377: {
  8211                           ;main.c: 378: cc_cv_mode(1);
  8212  07AD  3001               	movlw	1
  8213  07AE  3180  2004  3182   	fcall	_cc_cv_mode
  8214  07B1                     l3453:	
  8215                           
  8216                           ;main.c: 379: }
  8217                           ;main.c: 380: slowLoop=0;
  8218  07B1  0021               	movlb	1	; select bank1
  8219  07B2  01DA               	clrf	main@slowLoop^(0+128)
  8220  07B3  2A4E               	goto	l3161
  8221  07B4                     __end_of_main:	
  8222                           
  8223                           	psect	text1
  8224  0D13                     __ptext1:	
  8225 ;; *************** function _tempCalc *****************
  8226 ;; Defined at:
  8227 ;;		line 4 in file "tempCalc.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  analogValue     2   45[BANK0 ] int 
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  steinhart       3   53[BANK0 ] float 
  8232 ;;  R               3   47[BANK0 ] float 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  2   45[BANK0 ] int 
  8235 ;; Registers used:
  8236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;Total ram usage:       11 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    4
  8249 ;; This function calls:
  8250 ;;		___awtoft
  8251 ;;		___ftadd
  8252 ;;		___ftdiv
  8253 ;;		___ftmul
  8254 ;;		___ftsub
  8255 ;;		___fttol
  8256 ;;		_log
  8257 ;; This function is called by:
  8258 ;;		_main
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           
  8263                           ;psect for function _tempCalc
  8264  0D13                     _tempCalc:	
  8265                           
  8266                           ;tempCalc.c: 6: float R, steinhart;
  8267                           ;tempCalc.c: 8: R=10030/(1023/(float)analogValue-1);
  8268                           
  8269                           ;incstack = 0
  8270                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8271  0D13  3000               	movlw	0
  8272  0D14  0020               	movlb	0	; select bank0
  8273  0D15  00B0               	movwf	___ftadd@f1
  8274  0D16  3080               	movlw	128
  8275  0D17  00B1               	movwf	___ftadd@f1+1
  8276  0D18  30BF               	movlw	191
  8277  0D19  00B2               	movwf	___ftadd@f1+2
  8278  0D1A  084E               	movf	tempCalc@analogValue+1,w
  8279  0D1B  00F9               	movwf	___awtoft@c+1
  8280  0D1C  084D               	movf	tempCalc@analogValue,w
  8281  0D1D  00F8               	movwf	___awtoft@c
  8282  0D1E  3193  2316  318D   	fcall	___awtoft
  8283  0D21  0878               	movf	?___awtoft,w
  8284  0D22  0020               	movlb	0	; select bank0
  8285  0D23  00A0               	movwf	___ftdiv@f2
  8286  0D24  0879               	movf	?___awtoft+1,w
  8287  0D25  00A1               	movwf	___ftdiv@f2+1
  8288  0D26  087A               	movf	?___awtoft+2,w
  8289  0D27  00A2               	movwf	___ftdiv@f2+2
  8290  0D28  30C0               	movlw	192
  8291  0D29  00A3               	movwf	___ftdiv@f1
  8292  0D2A  307F               	movlw	127
  8293  0D2B  00A4               	movwf	___ftdiv@f1+1
  8294  0D2C  3044               	movlw	68
  8295  0D2D  00A5               	movwf	___ftdiv@f1+2
  8296  0D2E  318A  224D  318D   	fcall	___ftdiv
  8297  0D31  0020               	movlb	0	; select bank0
  8298  0D32  0820               	movf	?___ftdiv,w
  8299  0D33  00B3               	movwf	___ftadd@f2
  8300  0D34  0821               	movf	?___ftdiv+1,w
  8301  0D35  00B4               	movwf	___ftadd@f2+1
  8302  0D36  0822               	movf	?___ftdiv+2,w
  8303  0D37  00B5               	movwf	___ftadd@f2+2
  8304  0D38  318D  25FA  318D   	fcall	___ftadd
  8305  0D3B  0020               	movlb	0	; select bank0
  8306  0D3C  0830               	movf	?___ftadd,w
  8307  0D3D  00D2               	movwf	_tempCalc$1296
  8308  0D3E  0831               	movf	?___ftadd+1,w
  8309  0D3F  00D3               	movwf	_tempCalc$1296+1
  8310  0D40  0832               	movf	?___ftadd+2,w
  8311  0D41  00D4               	movwf	_tempCalc$1296+2
  8312                           
  8313                           ;tempCalc.c: 6: float R, steinhart;
  8314                           ;tempCalc.c: 8: R=10030/(1023/(float)analogValue-1);
  8315  0D42  0852               	movf	_tempCalc$1296,w
  8316  0D43  00A0               	movwf	___ftdiv@f2
  8317  0D44  0853               	movf	_tempCalc$1296+1,w
  8318  0D45  00A1               	movwf	___ftdiv@f2+1
  8319  0D46  0854               	movf	_tempCalc$1296+2,w
  8320  0D47  00A2               	movwf	___ftdiv@f2+2
  8321  0D48  30B8               	movlw	184
  8322  0D49  00A3               	movwf	___ftdiv@f1
  8323  0D4A  301C               	movlw	28
  8324  0D4B  00A4               	movwf	___ftdiv@f1+1
  8325  0D4C  3046               	movlw	70
  8326  0D4D  00A5               	movwf	___ftdiv@f1+2
  8327  0D4E  318A  224D  318D   	fcall	___ftdiv
  8328  0D51  0020               	movlb	0	; select bank0
  8329  0D52  0820               	movf	?___ftdiv,w
  8330  0D53  00CF               	movwf	tempCalc@R
  8331  0D54  0821               	movf	?___ftdiv+1,w
  8332  0D55  00D0               	movwf	tempCalc@R+1
  8333  0D56  0822               	movf	?___ftdiv+2,w
  8334  0D57  00D1               	movwf	tempCalc@R+2
  8335                           
  8336                           ;tempCalc.c: 10: steinhart=R/10010;
  8337  0D58  3068               	movlw	104
  8338  0D59  00A0               	movwf	___ftdiv@f2
  8339  0D5A  301C               	movlw	28
  8340  0D5B  00A1               	movwf	___ftdiv@f2+1
  8341  0D5C  3046               	movlw	70
  8342  0D5D  00A2               	movwf	___ftdiv@f2+2
  8343  0D5E  084F               	movf	tempCalc@R,w
  8344  0D5F  00A3               	movwf	___ftdiv@f1
  8345  0D60  0850               	movf	tempCalc@R+1,w
  8346  0D61  00A4               	movwf	___ftdiv@f1+1
  8347  0D62  0851               	movf	tempCalc@R+2,w
  8348  0D63  00A5               	movwf	___ftdiv@f1+2
  8349  0D64  318A  224D  318D   	fcall	___ftdiv
  8350  0D67  0020               	movlb	0	; select bank0
  8351  0D68  0820               	movf	?___ftdiv,w
  8352  0D69  00D5               	movwf	tempCalc@steinhart
  8353  0D6A  0821               	movf	?___ftdiv+1,w
  8354  0D6B  00D6               	movwf	tempCalc@steinhart+1
  8355  0D6C  0822               	movf	?___ftdiv+2,w
  8356  0D6D  00D7               	movwf	tempCalc@steinhart+2
  8357                           
  8358                           ;tempCalc.c: 11: steinhart=log(steinhart);
  8359  0D6E  0855               	movf	tempCalc@steinhart,w
  8360  0D6F  00C7               	movwf	log@x
  8361  0D70  0856               	movf	tempCalc@steinhart+1,w
  8362  0D71  00C8               	movwf	log@x+1
  8363  0D72  0857               	movf	tempCalc@steinhart+2,w
  8364  0D73  00C9               	movwf	log@x+2
  8365  0D74  318A  22F6  318D   	fcall	_log
  8366  0D77  0020               	movlb	0	; select bank0
  8367  0D78  0847               	movf	?_log,w
  8368  0D79  00D5               	movwf	tempCalc@steinhart
  8369  0D7A  0848               	movf	?_log+1,w
  8370  0D7B  00D6               	movwf	tempCalc@steinhart+1
  8371  0D7C  0849               	movf	?_log+2,w
  8372  0D7D  00D7               	movwf	tempCalc@steinhart+2
  8373                           
  8374                           ;tempCalc.c: 12: steinhart/=3795.3;
  8375  0D7E  3035               	movlw	53
  8376  0D7F  00A0               	movwf	___ftdiv@f2
  8377  0D80  306D               	movlw	109
  8378  0D81  00A1               	movwf	___ftdiv@f2+1
  8379  0D82  3045               	movlw	69
  8380  0D83  00A2               	movwf	___ftdiv@f2+2
  8381  0D84  0855               	movf	tempCalc@steinhart,w
  8382  0D85  00A3               	movwf	___ftdiv@f1
  8383  0D86  0856               	movf	tempCalc@steinhart+1,w
  8384  0D87  00A4               	movwf	___ftdiv@f1+1
  8385  0D88  0857               	movf	tempCalc@steinhart+2,w
  8386  0D89  00A5               	movwf	___ftdiv@f1+2
  8387  0D8A  318A  224D  318D   	fcall	___ftdiv
  8388  0D8D  0020               	movlb	0	; select bank0
  8389  0D8E  0820               	movf	?___ftdiv,w
  8390  0D8F  00D5               	movwf	tempCalc@steinhart
  8391  0D90  0821               	movf	?___ftdiv+1,w
  8392  0D91  00D6               	movwf	tempCalc@steinhart+1
  8393  0D92  0822               	movf	?___ftdiv+2,w
  8394  0D93  00D7               	movwf	tempCalc@steinhart+2
  8395                           
  8396                           ;tempCalc.c: 16: steinhart+=1.0/(25+273.15);
  8397  0D94  30CF               	movlw	207
  8398  0D95  00B0               	movwf	___ftadd@f1
  8399  0D96  305B               	movlw	91
  8400  0D97  00B1               	movwf	___ftadd@f1+1
  8401  0D98  303B               	movlw	59
  8402  0D99  00B2               	movwf	___ftadd@f1+2
  8403  0D9A  0855               	movf	tempCalc@steinhart,w
  8404  0D9B  00B3               	movwf	___ftadd@f2
  8405  0D9C  0856               	movf	tempCalc@steinhart+1,w
  8406  0D9D  00B4               	movwf	___ftadd@f2+1
  8407  0D9E  0857               	movf	tempCalc@steinhart+2,w
  8408  0D9F  00B5               	movwf	___ftadd@f2+2
  8409  0DA0  318D  25FA  318D   	fcall	___ftadd
  8410  0DA3  0020               	movlb	0	; select bank0
  8411  0DA4  0830               	movf	?___ftadd,w
  8412  0DA5  00D5               	movwf	tempCalc@steinhart
  8413  0DA6  0831               	movf	?___ftadd+1,w
  8414  0DA7  00D6               	movwf	tempCalc@steinhart+1
  8415  0DA8  0832               	movf	?___ftadd+2,w
  8416  0DA9  00D7               	movwf	tempCalc@steinhart+2
  8417                           
  8418                           ;tempCalc.c: 17: steinhart=1.0/steinhart;
  8419  0DAA  0855               	movf	tempCalc@steinhart,w
  8420  0DAB  00A0               	movwf	___ftdiv@f2
  8421  0DAC  0856               	movf	tempCalc@steinhart+1,w
  8422  0DAD  00A1               	movwf	___ftdiv@f2+1
  8423  0DAE  0857               	movf	tempCalc@steinhart+2,w
  8424  0DAF  00A2               	movwf	___ftdiv@f2+2
  8425  0DB0  3000               	movlw	0
  8426  0DB1  00A3               	movwf	___ftdiv@f1
  8427  0DB2  3080               	movlw	128
  8428  0DB3  00A4               	movwf	___ftdiv@f1+1
  8429  0DB4  303F               	movlw	63
  8430  0DB5  00A5               	movwf	___ftdiv@f1+2
  8431  0DB6  318A  224D  318D   	fcall	___ftdiv
  8432  0DB9  0020               	movlb	0	; select bank0
  8433  0DBA  0820               	movf	?___ftdiv,w
  8434  0DBB  00D5               	movwf	tempCalc@steinhart
  8435  0DBC  0821               	movf	?___ftdiv+1,w
  8436  0DBD  00D6               	movwf	tempCalc@steinhart+1
  8437  0DBE  0822               	movf	?___ftdiv+2,w
  8438  0DBF  00D7               	movwf	tempCalc@steinhart+2
  8439                           
  8440                           ;tempCalc.c: 18: steinhart-=273.15;
  8441  0DC0  3093               	movlw	147
  8442  0DC1  00BD               	movwf	___ftsub@f2
  8443  0DC2  3088               	movlw	136
  8444  0DC3  00BE               	movwf	___ftsub@f2+1
  8445  0DC4  3043               	movlw	67
  8446  0DC5  00BF               	movwf	___ftsub@f2+2
  8447  0DC6  0855               	movf	tempCalc@steinhart,w
  8448  0DC7  00C0               	movwf	___ftsub@f1
  8449  0DC8  0856               	movf	tempCalc@steinhart+1,w
  8450  0DC9  00C1               	movwf	___ftsub@f1+1
  8451  0DCA  0857               	movf	tempCalc@steinhart+2,w
  8452  0DCB  00C2               	movwf	___ftsub@f1+2
  8453  0DCC  3192  22BA  318D   	fcall	___ftsub
  8454  0DCF  0020               	movlb	0	; select bank0
  8455  0DD0  083D               	movf	?___ftsub,w
  8456  0DD1  00D5               	movwf	tempCalc@steinhart
  8457  0DD2  083E               	movf	?___ftsub+1,w
  8458  0DD3  00D6               	movwf	tempCalc@steinhart+1
  8459  0DD4  083F               	movf	?___ftsub+2,w
  8460  0DD5  00D7               	movwf	tempCalc@steinhart+2
  8461                           
  8462                           ;tempCalc.c: 20: steinhart*=10;
  8463  0DD6  3000               	movlw	0
  8464  0DD7  00A0               	movwf	___ftmul@f1
  8465  0DD8  3020               	movlw	32
  8466  0DD9  00A1               	movwf	___ftmul@f1+1
  8467  0DDA  3041               	movlw	65
  8468  0DDB  00A2               	movwf	___ftmul@f1+2
  8469  0DDC  0855               	movf	tempCalc@steinhart,w
  8470  0DDD  00A3               	movwf	___ftmul@f2
  8471  0DDE  0856               	movf	tempCalc@steinhart+1,w
  8472  0DDF  00A4               	movwf	___ftmul@f2+1
  8473  0DE0  0857               	movf	tempCalc@steinhart+2,w
  8474  0DE1  00A5               	movwf	___ftmul@f2+2
  8475  0DE2  318B  23A6  318D   	fcall	___ftmul
  8476  0DE5  0020               	movlb	0	; select bank0
  8477  0DE6  0820               	movf	?___ftmul,w
  8478  0DE7  00D5               	movwf	tempCalc@steinhart
  8479  0DE8  0821               	movf	?___ftmul+1,w
  8480  0DE9  00D6               	movwf	tempCalc@steinhart+1
  8481  0DEA  0822               	movf	?___ftmul+2,w
  8482  0DEB  00D7               	movwf	tempCalc@steinhart+2
  8483                           
  8484                           ;tempCalc.c: 24: return (int16_t)steinhart;
  8485  0DEC  0855               	movf	tempCalc@steinhart,w
  8486  0DED  00B0               	movwf	___fttol@f1
  8487  0DEE  0856               	movf	tempCalc@steinhart+1,w
  8488  0DEF  00B1               	movwf	___fttol@f1+1
  8489  0DF0  0857               	movf	tempCalc@steinhart+2,w
  8490  0DF1  00B2               	movwf	___fttol@f1+2
  8491  0DF2  3189  21C6         	fcall	___fttol
  8492  0DF4  0020               	movlb	0	; select bank0
  8493  0DF5  0831               	movf	?___fttol+1,w
  8494  0DF6  00CE               	movwf	?_tempCalc+1
  8495  0DF7  0830               	movf	?___fttol,w
  8496  0DF8  00CD               	movwf	?_tempCalc
  8497  0DF9  0008               	return
  8498  0DFA                     __end_of_tempCalc:	
  8499                           
  8500                           	psect	text2
  8501  0AF6                     __ptext2:	
  8502 ;; *************** function _log *****************
  8503 ;; Defined at:
  8504 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  x               3   39[BANK0 ] int 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;  exponent        2   43[BANK0 ] int 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  3   39[BANK0 ] int 
  8511 ;; Registers used:
  8512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8518 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8519 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;Total ram usage:        6 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    3
  8525 ;; This function calls:
  8526 ;;		___awtoft
  8527 ;;		___ftadd
  8528 ;;		___ftge
  8529 ;;		___ftmul
  8530 ;;		_eval_poly
  8531 ;;		_frexp
  8532 ;; This function is called by:
  8533 ;;		_tempCalc
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           
  8538                           ;psect for function _log
  8539  0AF6                     _log:	
  8540                           
  8541                           ;incstack = 0
  8542                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8543  0AF6  0020               	movlb	0	; select bank0
  8544  0AF7  0847               	movf	log@x,w
  8545  0AF8  00F0               	movwf	___ftge@ff1
  8546  0AF9  0848               	movf	log@x+1,w
  8547  0AFA  00F1               	movwf	___ftge@ff1+1
  8548  0AFB  0849               	movf	log@x+2,w
  8549  0AFC  00F2               	movwf	___ftge@ff1+2
  8550  0AFD  3000               	movlw	0
  8551  0AFE  00F3               	movwf	___ftge@ff2
  8552  0AFF  3000               	movlw	0
  8553  0B00  00F4               	movwf	___ftge@ff2+1
  8554  0B01  3000               	movlw	0
  8555  0B02  00F5               	movwf	___ftge@ff2+2
  8556  0B03  3194  248B  318A   	fcall	___ftge
  8557  0B06  1803               	btfsc	3,0
  8558  0B07  2B15               	goto	l2675
  8559  0B08  3021               	movlw	33
  8560  0B09  0021               	movlb	1	; select bank1
  8561  0B0A  00C8               	movwf	_errno^(0+128)
  8562  0B0B  3000               	movlw	0
  8563  0B0C  00C9               	movwf	(_errno^(0+128)+1)
  8564  0B0D  3000               	movlw	0
  8565  0B0E  0020               	movlb	0	; select bank0
  8566  0B0F  00C7               	movwf	?_log
  8567  0B10  3000               	movlw	0
  8568  0B11  00C8               	movwf	?_log+1
  8569  0B12  3000               	movlw	0
  8570  0B13  00C9               	movwf	?_log+2
  8571  0B14  0008               	return
  8572  0B15                     l2675:	
  8573  0B15  0020               	movlb	0	; select bank0
  8574  0B16  0849               	movf	log@x+2,w
  8575  0B17  0448               	iorwf	log@x+1,w
  8576  0B18  0447               	iorwf	log@x,w
  8577  0B19  1D03               	skipz
  8578  0B1A  2B28               	goto	l2681
  8579  0B1B  3022               	movlw	34
  8580  0B1C  0021               	movlb	1	; select bank1
  8581  0B1D  00C8               	movwf	_errno^(0+128)
  8582  0B1E  3000               	movlw	0
  8583  0B1F  00C9               	movwf	(_errno^(0+128)+1)
  8584  0B20  3000               	movlw	0
  8585  0B21  0020               	movlb	0	; select bank0
  8586  0B22  00C7               	movwf	?_log
  8587  0B23  3000               	movlw	0
  8588  0B24  00C8               	movwf	?_log+1
  8589  0B25  3000               	movlw	0
  8590  0B26  00C9               	movwf	?_log+2
  8591  0B27  0008               	return
  8592  0B28                     l2681:	
  8593  0B28  3000               	movlw	0
  8594  0B29  00B0               	movwf	___ftadd@f1
  8595  0B2A  3080               	movlw	128
  8596  0B2B  00B1               	movwf	___ftadd@f1+1
  8597  0B2C  30BF               	movlw	191
  8598  0B2D  00B2               	movwf	___ftadd@f1+2
  8599  0B2E  3000               	movlw	0
  8600  0B2F  00A0               	movwf	___ftmul@f1
  8601  0B30  3000               	movlw	0
  8602  0B31  00A1               	movwf	___ftmul@f1+1
  8603  0B32  3040               	movlw	64
  8604  0B33  00A2               	movwf	___ftmul@f1+2
  8605  0B34  304B               	movlw	(low (log@exponent| 0))& (0+255)
  8606  0B35  00CA               	movwf	??_log
  8607  0B36  084A               	movf	??_log,w
  8608  0B37  00F3               	movwf	frexp@eptr
  8609  0B38  0847               	movf	log@x,w
  8610  0B39  00F0               	movwf	frexp@value
  8611  0B3A  0848               	movf	log@x+1,w
  8612  0B3B  00F1               	movwf	frexp@value+1
  8613  0B3C  0849               	movf	log@x+2,w
  8614  0B3D  00F2               	movwf	frexp@value+2
  8615  0B3E  3194  24C6  318A   	fcall	_frexp
  8616  0B41  0870               	movf	?_frexp,w
  8617  0B42  0020               	movlb	0	; select bank0
  8618  0B43  00A3               	movwf	___ftmul@f2
  8619  0B44  0871               	movf	?_frexp+1,w
  8620  0B45  00A4               	movwf	___ftmul@f2+1
  8621  0B46  0872               	movf	?_frexp+2,w
  8622  0B47  00A5               	movwf	___ftmul@f2+2
  8623  0B48  318B  23A6  318A   	fcall	___ftmul
  8624  0B4B  0020               	movlb	0	; select bank0
  8625  0B4C  0820               	movf	?___ftmul,w
  8626  0B4D  00B3               	movwf	___ftadd@f2
  8627  0B4E  0821               	movf	?___ftmul+1,w
  8628  0B4F  00B4               	movwf	___ftadd@f2+1
  8629  0B50  0822               	movf	?___ftmul+2,w
  8630  0B51  00B5               	movwf	___ftadd@f2+2
  8631  0B52  318D  25FA  318A   	fcall	___ftadd
  8632  0B55  0020               	movlb	0	; select bank0
  8633  0B56  0830               	movf	?___ftadd,w
  8634  0B57  00C7               	movwf	log@x
  8635  0B58  0831               	movf	?___ftadd+1,w
  8636  0B59  00C8               	movwf	log@x+1
  8637  0B5A  0832               	movf	?___ftadd+2,w
  8638  0B5B  00C9               	movwf	log@x+2
  8639  0B5C  30FF               	movlw	255
  8640  0B5D  07CB               	addwf	log@exponent,f
  8641  0B5E  30FF               	movlw	255
  8642  0B5F  3DCC               	addwfc	log@exponent+1,f
  8643  0B60  0847               	movf	log@x,w
  8644  0B61  00BD               	movwf	eval_poly@x
  8645  0B62  0848               	movf	log@x+1,w
  8646  0B63  00BE               	movwf	eval_poly@x+1
  8647  0B64  0849               	movf	log@x+2,w
  8648  0B65  00BF               	movwf	eval_poly@x+2
  8649  0B66  3000               	movlw	low (log@coeff| (0+32768))
  8650  0B67  00C0               	movwf	eval_poly@d
  8651  0B68  3098               	movlw	high (log@coeff| (0+32768))
  8652  0B69  00C1               	movwf	eval_poly@d+1
  8653  0B6A  3008               	movlw	8
  8654  0B6B  00C2               	movwf	eval_poly@n
  8655  0B6C  3000               	movlw	0
  8656  0B6D  00C3               	movwf	eval_poly@n+1
  8657  0B6E  3196  26BA  318A   	fcall	_eval_poly
  8658  0B71  0020               	movlb	0	; select bank0
  8659  0B72  083D               	movf	?_eval_poly,w
  8660  0B73  00C7               	movwf	log@x
  8661  0B74  083E               	movf	?_eval_poly+1,w
  8662  0B75  00C8               	movwf	log@x+1
  8663  0B76  083F               	movf	?_eval_poly+2,w
  8664  0B77  00C9               	movwf	log@x+2
  8665  0B78  0847               	movf	log@x,w
  8666  0B79  00B0               	movwf	___ftadd@f1
  8667  0B7A  0848               	movf	log@x+1,w
  8668  0B7B  00B1               	movwf	___ftadd@f1+1
  8669  0B7C  0849               	movf	log@x+2,w
  8670  0B7D  00B2               	movwf	___ftadd@f1+2
  8671  0B7E  3072               	movlw	114
  8672  0B7F  00A0               	movwf	___ftmul@f1
  8673  0B80  3031               	movlw	49
  8674  0B81  00A1               	movwf	___ftmul@f1+1
  8675  0B82  303F               	movlw	63
  8676  0B83  00A2               	movwf	___ftmul@f1+2
  8677  0B84  084C               	movf	log@exponent+1,w
  8678  0B85  00F9               	movwf	___awtoft@c+1
  8679  0B86  084B               	movf	log@exponent,w
  8680  0B87  00F8               	movwf	___awtoft@c
  8681  0B88  3193  2316  318A   	fcall	___awtoft
  8682  0B8B  0878               	movf	?___awtoft,w
  8683  0B8C  0020               	movlb	0	; select bank0
  8684  0B8D  00A3               	movwf	___ftmul@f2
  8685  0B8E  0879               	movf	?___awtoft+1,w
  8686  0B8F  00A4               	movwf	___ftmul@f2+1
  8687  0B90  087A               	movf	?___awtoft+2,w
  8688  0B91  00A5               	movwf	___ftmul@f2+2
  8689  0B92  318B  23A6  318A   	fcall	___ftmul
  8690  0B95  0020               	movlb	0	; select bank0
  8691  0B96  0820               	movf	?___ftmul,w
  8692  0B97  00B3               	movwf	___ftadd@f2
  8693  0B98  0821               	movf	?___ftmul+1,w
  8694  0B99  00B4               	movwf	___ftadd@f2+1
  8695  0B9A  0822               	movf	?___ftmul+2,w
  8696  0B9B  00B5               	movwf	___ftadd@f2+2
  8697  0B9C  318D  25FA         	fcall	___ftadd
  8698  0B9E  0020               	movlb	0	; select bank0
  8699  0B9F  0830               	movf	?___ftadd,w
  8700  0BA0  00C7               	movwf	?_log
  8701  0BA1  0831               	movf	?___ftadd+1,w
  8702  0BA2  00C8               	movwf	?_log+1
  8703  0BA3  0832               	movf	?___ftadd+2,w
  8704  0BA4  00C9               	movwf	?_log+2
  8705  0BA5  0008               	return
  8706  0BA6                     __end_of_log:	
  8707                           
  8708                           	psect	text3
  8709  14C6                     __ptext3:	
  8710 ;; *************** function _frexp *****************
  8711 ;; Defined at:
  8712 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8713 ;; Parameters:    Size  Location     Type
  8714 ;;  value           3    0[COMMON] int 
  8715 ;;  eptr            1    3[COMMON] PTR int 
  8716 ;;		 -> log@exponent(2), 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  3    0[COMMON] PTR int 
  8721 ;; Registers used:
  8722 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8731 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8732 ;;Total ram usage:        6 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; This function calls:
  8735 ;;		Nothing
  8736 ;; This function is called by:
  8737 ;;		_log
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741                           
  8742                           ;psect for function _frexp
  8743  14C6                     _frexp:	
  8744                           
  8745                           ;incstack = 0
  8746                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8747  14C6  0872               	movf	frexp@value+2,w
  8748  14C7  0471               	iorwf	frexp@value+1,w
  8749  14C8  0470               	iorwf	frexp@value,w
  8750  14C9  1D03               	skipz
  8751  14CA  2CD8               	goto	l2477
  8752  14CB  0873               	movf	frexp@eptr,w
  8753  14CC  0086               	movwf	6
  8754  14CD  0187               	clrf	7
  8755  14CE  3000               	movlw	0
  8756  14CF  3FC0               	movwi [0]fsr1
  8757  14D0  3FC1               	movwi [1]fsr1
  8758  14D1  3000               	movlw	0
  8759  14D2  00F0               	movwf	?_frexp
  8760  14D3  3000               	movlw	0
  8761  14D4  00F1               	movwf	?_frexp+1
  8762  14D5  3000               	movlw	0
  8763  14D6  00F2               	movwf	?_frexp+2
  8764  14D7  0008               	return
  8765  14D8                     l2477:	
  8766  14D8  0872               	movf	frexp@value+2,w
  8767  14D9  397F               	andlw	127
  8768  14DA  00F4               	movwf	??_frexp
  8769  14DB  01F5               	clrf	??_frexp+1
  8770  14DC  35F4               	lslf	??_frexp,f
  8771  14DD  0DF5               	rlf	??_frexp+1,f
  8772  14DE  0873               	movf	frexp@eptr,w
  8773  14DF  0086               	movwf	6
  8774  14E0  0187               	clrf	7
  8775  14E1  0874               	movf	??_frexp,w
  8776  14E2  3FC0               	movwi [0]fsr1
  8777  14E3  0875               	movf	??_frexp+1,w
  8778  14E4  3FC1               	movwi [1]fsr1
  8779  14E5  0D71               	rlf	frexp@value+1,w
  8780  14E6  0D71               	rlf	frexp@value+1,w
  8781  14E7  3901               	andlw	1
  8782  14E8  00F4               	movwf	??_frexp
  8783  14E9  01F5               	clrf	??_frexp+1
  8784  14EA  0873               	movf	frexp@eptr,w
  8785  14EB  0086               	movwf	6
  8786  14EC  0187               	clrf	7
  8787  14ED  0874               	movf	??_frexp,w
  8788  14EE  0481               	iorwf	1,f
  8789  14EF  3141               	addfsr 1,1
  8790  14F0  0875               	movf	??_frexp+1,w
  8791  14F1  0481               	iorwf	1,f
  8792  14F2  0873               	movf	frexp@eptr,w
  8793  14F3  0086               	movwf	6
  8794  14F4  0187               	clrf	7
  8795  14F5  3082               	movlw	130
  8796  14F6  0781               	addwf	1,f
  8797  14F7  3141               	addfsr 1,1
  8798  14F8  30FF               	movlw	255
  8799  14F9  3D81               	addwfc	1,f
  8800  14FA  317F               	addfsr 1,-1
  8801  14FB  0872               	movf	frexp@value+2,w
  8802  14FC  3980               	andlw	-128
  8803  14FD  383F               	iorlw	63
  8804  14FE  00F2               	movwf	frexp@value+2
  8805  14FF  13F1               	bcf	frexp@value+1,7
  8806  1500  0008               	return
  8807  1501                     __end_of_frexp:	
  8808                           
  8809                           	psect	text4
  8810  16BA                     __ptext4:	
  8811 ;; *************** function _eval_poly *****************
  8812 ;; Defined at:
  8813 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  x               3   29[BANK0 ] PTR int 
  8816 ;;  d               2   32[BANK0 ] PTR const 
  8817 ;;		 -> log@coeff(27), 
  8818 ;;  n               2   34[BANK0 ] int 
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;  res             3   36[BANK0 ] int 
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  3   29[BANK0 ] int 
  8823 ;; Registers used:
  8824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8830 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8831 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;Total ram usage:       10 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; Hardware stack levels required when called:    2
  8837 ;; This function calls:
  8838 ;;		___ftadd
  8839 ;;		___ftmul
  8840 ;;		___wmul
  8841 ;; This function is called by:
  8842 ;;		_log
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           
  8847                           ;psect for function _eval_poly
  8848  16BA                     _eval_poly:	
  8849                           
  8850                           ;incstack = 0
  8851                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8852  16BA  0020               	movlb	0	; select bank0
  8853  16BB  0843               	movf	eval_poly@n+1,w
  8854  16BC  00F1               	movwf	___wmul@multiplier+1
  8855  16BD  0842               	movf	eval_poly@n,w
  8856  16BE  00F0               	movwf	___wmul@multiplier
  8857  16BF  3003               	movlw	3
  8858  16C0  00F2               	movwf	___wmul@multiplicand
  8859  16C1  3000               	movlw	0
  8860  16C2  00F3               	movwf	___wmul@multiplicand+1
  8861  16C3  3192  229F  3196   	fcall	___wmul
  8862  16C6  0020               	movlb	0	; select bank0
  8863  16C7  0840               	movf	eval_poly@d,w
  8864  16C8  0770               	addwf	?___wmul,w
  8865  16C9  0084               	movwf	4
  8866  16CA  0841               	movf	eval_poly@d+1,w
  8867  16CB  3D71               	addwfc	?___wmul+1,w
  8868  16CC  0085               	movwf	5
  8869  16CD  3F00               	moviw [0]fsr0
  8870  16CE  00C4               	movwf	eval_poly@res
  8871  16CF  3F01               	moviw [1]fsr0
  8872  16D0  00C5               	movwf	eval_poly@res+1
  8873  16D1  3F02               	moviw [2]fsr0
  8874  16D2                     L5:	
  8875  16D2  00C6               	movwf	eval_poly@res+2
  8876  16D3  0842               	movf	eval_poly@n,w
  8877  16D4  0443               	iorwf	eval_poly@n+1,w
  8878  16D5  1903               	btfsc	3,2
  8879  16D6  2F13               	goto	l2495
  8880  16D7  30FF               	movlw	255
  8881  16D8  07C2               	addwf	eval_poly@n,f
  8882  16D9  30FF               	movlw	255
  8883  16DA  3DC3               	addwfc	eval_poly@n+1,f
  8884  16DB  0843               	movf	eval_poly@n+1,w
  8885  16DC  00F1               	movwf	___wmul@multiplier+1
  8886  16DD  0842               	movf	eval_poly@n,w
  8887  16DE  00F0               	movwf	___wmul@multiplier
  8888  16DF  3003               	movlw	3
  8889  16E0  00F2               	movwf	___wmul@multiplicand
  8890  16E1  3000               	movlw	0
  8891  16E2  00F3               	movwf	___wmul@multiplicand+1
  8892  16E3  3192  229F  3196   	fcall	___wmul
  8893  16E6  0020               	movlb	0	; select bank0
  8894  16E7  0840               	movf	eval_poly@d,w
  8895  16E8  0770               	addwf	?___wmul,w
  8896  16E9  0084               	movwf	4
  8897  16EA  0841               	movf	eval_poly@d+1,w
  8898  16EB  3D71               	addwfc	?___wmul+1,w
  8899  16EC  0085               	movwf	5
  8900  16ED  3F00               	moviw [0]fsr0
  8901  16EE  00B0               	movwf	___ftadd@f1
  8902  16EF  3F01               	moviw [1]fsr0
  8903  16F0  00B1               	movwf	___ftadd@f1+1
  8904  16F1  3F02               	moviw [2]fsr0
  8905  16F2  00B2               	movwf	___ftadd@f1+2
  8906  16F3  0844               	movf	eval_poly@res,w
  8907  16F4  00A0               	movwf	___ftmul@f1
  8908  16F5  0845               	movf	eval_poly@res+1,w
  8909  16F6  00A1               	movwf	___ftmul@f1+1
  8910  16F7  0846               	movf	eval_poly@res+2,w
  8911  16F8  00A2               	movwf	___ftmul@f1+2
  8912  16F9  083D               	movf	eval_poly@x,w
  8913  16FA  00A3               	movwf	___ftmul@f2
  8914  16FB  083E               	movf	eval_poly@x+1,w
  8915  16FC  00A4               	movwf	___ftmul@f2+1
  8916  16FD  083F               	movf	eval_poly@x+2,w
  8917  16FE  00A5               	movwf	___ftmul@f2+2
  8918  16FF  318B  23A6  3196   	fcall	___ftmul
  8919  1702  0020               	movlb	0	; select bank0
  8920  1703  0820               	movf	?___ftmul,w
  8921  1704  00B3               	movwf	___ftadd@f2
  8922  1705  0821               	movf	?___ftmul+1,w
  8923  1706  00B4               	movwf	___ftadd@f2+1
  8924  1707  0822               	movf	?___ftmul+2,w
  8925  1708  00B5               	movwf	___ftadd@f2+2
  8926  1709  318D  25FA  3196   	fcall	___ftadd
  8927  170C  0020               	movlb	0	; select bank0
  8928  170D  0830               	movf	?___ftadd,w
  8929  170E  00C4               	movwf	eval_poly@res
  8930  170F  0831               	movf	?___ftadd+1,w
  8931  1710  00C5               	movwf	eval_poly@res+1
  8932  1711  0832               	movf	?___ftadd+2,w
  8933  1712  2ED2               	goto	L5
  8934  1713                     l2495:	
  8935  1713  0844               	movf	eval_poly@res,w
  8936  1714  00BD               	movwf	?_eval_poly
  8937  1715  0845               	movf	eval_poly@res+1,w
  8938  1716  00BE               	movwf	?_eval_poly+1
  8939  1717  0846               	movf	eval_poly@res+2,w
  8940  1718  00BF               	movwf	?_eval_poly+2
  8941  1719  0008               	return
  8942  171A                     __end_of_eval_poly:	
  8943                           
  8944                           	psect	text5
  8945  0BA6                     __ptext5:	
  8946 ;; *************** function ___ftmul *****************
  8947 ;; Defined at:
  8948 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;  f1              3    0[BANK0 ] float 
  8951 ;;  f2              3    3[BANK0 ] float 
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  8954 ;;  sign            1   15[BANK0 ] unsigned char 
  8955 ;;  cntr            1   14[BANK0 ] unsigned char 
  8956 ;;  exp             1   10[BANK0 ] unsigned char 
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  3    0[BANK0 ] float 
  8959 ;; Registers used:
  8960 ;;		wreg, status,2, status,0, pclath, cstack
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8966 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8969 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8970 ;;Total ram usage:       16 bytes
  8971 ;; Hardware stack levels used:    1
  8972 ;; Hardware stack levels required when called:    1
  8973 ;; This function calls:
  8974 ;;		___ftpack
  8975 ;; This function is called by:
  8976 ;;		_tempCalc
  8977 ;;		_log
  8978 ;;		_eval_poly
  8979 ;; This function uses a non-reentrant model
  8980 ;;
  8981                           
  8982                           
  8983                           ;psect for function ___ftmul
  8984  0BA6                     ___ftmul:	
  8985                           
  8986                           ;incstack = 0
  8987                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8988  0BA6  0020               	movlb	0	; select bank0
  8989  0BA7  0820               	movf	___ftmul@f1,w
  8990  0BA8  00A6               	movwf	??___ftmul
  8991  0BA9  0821               	movf	___ftmul@f1+1,w
  8992  0BAA  00A7               	movwf	??___ftmul+1
  8993  0BAB  0822               	movf	___ftmul@f1+2,w
  8994  0BAC  00A8               	movwf	??___ftmul+2
  8995  0BAD  1003               	clrc
  8996  0BAE  0D27               	rlf	??___ftmul+1,w
  8997  0BAF  0D28               	rlf	??___ftmul+2,w
  8998  0BB0  00A9               	movwf	??___ftmul+3
  8999  0BB1  0829               	movf	??___ftmul+3,w
  9000  0BB2  00AA               	movwf	___ftmul@exp
  9001  0BB3  082A               	movf	___ftmul@exp,w
  9002  0BB4  1D03               	btfss	3,2
  9003  0BB5  2BBD               	goto	l2391
  9004  0BB6  3000               	movlw	0
  9005  0BB7  00A0               	movwf	?___ftmul
  9006  0BB8  3000               	movlw	0
  9007  0BB9  00A1               	movwf	?___ftmul+1
  9008  0BBA  3000               	movlw	0
  9009  0BBB  00A2               	movwf	?___ftmul+2
  9010  0BBC  0008               	return
  9011  0BBD                     l2391:	
  9012  0BBD  0823               	movf	___ftmul@f2,w
  9013  0BBE  00A6               	movwf	??___ftmul
  9014  0BBF  0824               	movf	___ftmul@f2+1,w
  9015  0BC0  00A7               	movwf	??___ftmul+1
  9016  0BC1  0825               	movf	___ftmul@f2+2,w
  9017  0BC2  00A8               	movwf	??___ftmul+2
  9018  0BC3  1003               	clrc
  9019  0BC4  0D27               	rlf	??___ftmul+1,w
  9020  0BC5  0D28               	rlf	??___ftmul+2,w
  9021  0BC6  00A9               	movwf	??___ftmul+3
  9022  0BC7  0829               	movf	??___ftmul+3,w
  9023  0BC8  00AF               	movwf	___ftmul@sign
  9024  0BC9  082F               	movf	___ftmul@sign,w
  9025  0BCA  1D03               	btfss	3,2
  9026  0BCB  2BD3               	goto	l2397
  9027  0BCC  3000               	movlw	0
  9028  0BCD  00A0               	movwf	?___ftmul
  9029  0BCE  3000               	movlw	0
  9030  0BCF  00A1               	movwf	?___ftmul+1
  9031  0BD0  3000               	movlw	0
  9032  0BD1  00A2               	movwf	?___ftmul+2
  9033  0BD2  0008               	return
  9034  0BD3                     l2397:	
  9035  0BD3  082F               	movf	___ftmul@sign,w
  9036  0BD4  3E7B               	addlw	123
  9037  0BD5  00A6               	movwf	??___ftmul
  9038  0BD6  0826               	movf	??___ftmul,w
  9039  0BD7  07AA               	addwf	___ftmul@exp,f
  9040  0BD8  0820               	movf	___ftmul@f1,w
  9041  0BD9  00A6               	movwf	??___ftmul
  9042  0BDA  0821               	movf	___ftmul@f1+1,w
  9043  0BDB  00A7               	movwf	??___ftmul+1
  9044  0BDC  0822               	movf	___ftmul@f1+2,w
  9045  0BDD  00A8               	movwf	??___ftmul+2
  9046  0BDE  3010               	movlw	16
  9047  0BDF                     u2515:	
  9048  0BDF  36A8               	lsrf	??___ftmul+2,f
  9049  0BE0  0CA7               	rrf	??___ftmul+1,f
  9050  0BE1  0CA6               	rrf	??___ftmul,f
  9051  0BE2  0B89               	decfsz	9,f
  9052  0BE3  2BDF               	goto	u2515
  9053  0BE4  0826               	movf	??___ftmul,w
  9054  0BE5  00A9               	movwf	??___ftmul+3
  9055  0BE6  0829               	movf	??___ftmul+3,w
  9056  0BE7  00AF               	movwf	___ftmul@sign
  9057  0BE8  0823               	movf	___ftmul@f2,w
  9058  0BE9  00A6               	movwf	??___ftmul
  9059  0BEA  0824               	movf	___ftmul@f2+1,w
  9060  0BEB  00A7               	movwf	??___ftmul+1
  9061  0BEC  0825               	movf	___ftmul@f2+2,w
  9062  0BED  00A8               	movwf	??___ftmul+2
  9063  0BEE  3010               	movlw	16
  9064  0BEF                     u2525:	
  9065  0BEF  36A8               	lsrf	??___ftmul+2,f
  9066  0BF0  0CA7               	rrf	??___ftmul+1,f
  9067  0BF1  0CA6               	rrf	??___ftmul,f
  9068  0BF2  0B89               	decfsz	9,f
  9069  0BF3  2BEF               	goto	u2525
  9070  0BF4  0826               	movf	??___ftmul,w
  9071  0BF5  00A9               	movwf	??___ftmul+3
  9072  0BF6  0829               	movf	??___ftmul+3,w
  9073  0BF7  06AF               	xorwf	___ftmul@sign,f
  9074  0BF8  3080               	movlw	128
  9075  0BF9  00A6               	movwf	??___ftmul
  9076  0BFA  0826               	movf	??___ftmul,w
  9077  0BFB  05AF               	andwf	___ftmul@sign,f
  9078  0BFC  17A1               	bsf	___ftmul@f1+1,7
  9079  0BFD  17A4               	bsf	___ftmul@f2+1,7
  9080  0BFE  30FF               	movlw	255
  9081  0BFF  05A3               	andwf	___ftmul@f2,f
  9082  0C00  30FF               	movlw	255
  9083  0C01  05A4               	andwf	___ftmul@f2+1,f
  9084  0C02  3000               	movlw	0
  9085  0C03  05A5               	andwf	___ftmul@f2+2,f
  9086  0C04  3000               	movlw	0
  9087  0C05  00AB               	movwf	___ftmul@f3_as_product
  9088  0C06  3000               	movlw	0
  9089  0C07  00AC               	movwf	___ftmul@f3_as_product+1
  9090  0C08  3000               	movlw	0
  9091  0C09  00AD               	movwf	___ftmul@f3_as_product+2
  9092  0C0A  3007               	movlw	7
  9093  0C0B  00A6               	movwf	??___ftmul
  9094  0C0C  0826               	movf	??___ftmul,w
  9095  0C0D  00AE               	movwf	___ftmul@cntr
  9096  0C0E                     l2409:	
  9097  0C0E  1C20               	btfss	___ftmul@f1,0
  9098  0C0F  2C16               	goto	l2413
  9099  0C10  0823               	movf	___ftmul@f2,w
  9100  0C11  07AB               	addwf	___ftmul@f3_as_product,f
  9101  0C12  0824               	movf	___ftmul@f2+1,w
  9102  0C13  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  9103  0C14  0825               	movf	___ftmul@f2+2,w
  9104  0C15  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  9105  0C16                     l2413:	
  9106  0C16  3001               	movlw	1
  9107  0C17                     u2545:	
  9108  0C17  36A2               	lsrf	___ftmul@f1+2,f
  9109  0C18  0CA1               	rrf	___ftmul@f1+1,f
  9110  0C19  0CA0               	rrf	___ftmul@f1,f
  9111  0C1A  0B89               	decfsz	9,f
  9112  0C1B  2C17               	goto	u2545
  9113  0C1C  3001               	movlw	1
  9114  0C1D                     u2555:	
  9115  0C1D  35A3               	lslf	___ftmul@f2,f
  9116  0C1E  0DA4               	rlf	___ftmul@f2+1,f
  9117  0C1F  0DA5               	rlf	___ftmul@f2+2,f
  9118  0C20  0B89               	decfsz	9,f
  9119  0C21  2C1D               	goto	u2555
  9120  0C22  3001               	movlw	1
  9121  0C23  02AE               	subwf	___ftmul@cntr,f
  9122  0C24  1D03               	btfss	3,2
  9123  0C25  2C0E               	goto	l2409
  9124  0C26  3009               	movlw	9
  9125  0C27  00A6               	movwf	??___ftmul
  9126  0C28  0826               	movf	??___ftmul,w
  9127  0C29  00AE               	movwf	___ftmul@cntr
  9128  0C2A                     l2421:	
  9129  0C2A  1C20               	btfss	___ftmul@f1,0
  9130  0C2B  2C32               	goto	l2425
  9131  0C2C  0823               	movf	___ftmul@f2,w
  9132  0C2D  07AB               	addwf	___ftmul@f3_as_product,f
  9133  0C2E  0824               	movf	___ftmul@f2+1,w
  9134  0C2F  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  9135  0C30  0825               	movf	___ftmul@f2+2,w
  9136  0C31  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  9137  0C32                     l2425:	
  9138  0C32  3001               	movlw	1
  9139  0C33                     u2585:	
  9140  0C33  36A2               	lsrf	___ftmul@f1+2,f
  9141  0C34  0CA1               	rrf	___ftmul@f1+1,f
  9142  0C35  0CA0               	rrf	___ftmul@f1,f
  9143  0C36  0B89               	decfsz	9,f
  9144  0C37  2C33               	goto	u2585
  9145  0C38  3001               	movlw	1
  9146  0C39                     u2595:	
  9147  0C39  36AD               	lsrf	___ftmul@f3_as_product+2,f
  9148  0C3A  0CAC               	rrf	___ftmul@f3_as_product+1,f
  9149  0C3B  0CAB               	rrf	___ftmul@f3_as_product,f
  9150  0C3C  0B89               	decfsz	9,f
  9151  0C3D  2C39               	goto	u2595
  9152  0C3E  3001               	movlw	1
  9153  0C3F  02AE               	subwf	___ftmul@cntr,f
  9154  0C40  1D03               	btfss	3,2
  9155  0C41  2C2A               	goto	l2421
  9156  0C42  082B               	movf	___ftmul@f3_as_product,w
  9157  0C43  00F0               	movwf	___ftpack@arg
  9158  0C44  082C               	movf	___ftmul@f3_as_product+1,w
  9159  0C45  00F1               	movwf	___ftpack@arg+1
  9160  0C46  082D               	movf	___ftmul@f3_as_product+2,w
  9161  0C47  00F2               	movwf	___ftpack@arg+2
  9162  0C48  082A               	movf	___ftmul@exp,w
  9163  0C49  00A6               	movwf	??___ftmul
  9164  0C4A  0826               	movf	??___ftmul,w
  9165  0C4B  00F3               	movwf	___ftpack@exp
  9166  0C4C  082F               	movf	___ftmul@sign,w
  9167  0C4D  00A7               	movwf	??___ftmul+1
  9168  0C4E  0827               	movf	??___ftmul+1,w
  9169  0C4F  00F4               	movwf	___ftpack@sign
  9170  0C50  3197  271A         	fcall	___ftpack
  9171  0C52  0870               	movf	?___ftpack,w
  9172  0C53  0020               	movlb	0	; select bank0
  9173  0C54  00A0               	movwf	?___ftmul
  9174  0C55  0871               	movf	?___ftpack+1,w
  9175  0C56  00A1               	movwf	?___ftmul+1
  9176  0C57  0872               	movf	?___ftpack+2,w
  9177  0C58  00A2               	movwf	?___ftmul+2
  9178  0C59  0008               	return
  9179  0C5A                     __end_of___ftmul:	
  9180                           
  9181                           	psect	text6
  9182  148B                     __ptext6:	
  9183 ;; *************** function ___ftge *****************
  9184 ;; Defined at:
  9185 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  ff1             3    0[COMMON] float 
  9188 ;;  ff2             3    3[COMMON] float 
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;		None
  9191 ;; Return value:  Size  Location     Type
  9192 ;;		None               void
  9193 ;; Registers used:
  9194 ;;		wreg, status,2, status,0
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9200 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9202 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9203 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9204 ;;Total ram usage:        9 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; This function calls:
  9207 ;;		Nothing
  9208 ;; This function is called by:
  9209 ;;		_log
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           
  9214                           ;psect for function ___ftge
  9215  148B                     ___ftge:	
  9216                           
  9217                           ;incstack = 0
  9218                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9219  148B  1FF2               	btfss	___ftge@ff1+2,7
  9220  148C  2CA1               	goto	l2453
  9221  148D  0970               	comf	___ftge@ff1,w
  9222  148E  00F6               	movwf	??___ftge
  9223  148F  0971               	comf	___ftge@ff1+1,w
  9224  1490  00F7               	movwf	??___ftge+1
  9225  1491  0972               	comf	___ftge@ff1+2,w
  9226  1492  00F8               	movwf	??___ftge+2
  9227  1493  0AF6               	incf	??___ftge,f
  9228  1494  1903               	skipnz
  9229  1495  0AF7               	incf	??___ftge+1,f
  9230  1496  1903               	skipnz
  9231  1497  0AF8               	incf	??___ftge+2,f
  9232  1498  3000               	movlw	0
  9233  1499  0776               	addwf	??___ftge,w
  9234  149A  00F0               	movwf	___ftge@ff1
  9235  149B  3000               	movlw	0
  9236  149C  3D77               	addwfc	??___ftge+1,w
  9237  149D  00F1               	movwf	___ftge@ff1+1
  9238  149E  3080               	movlw	128
  9239  149F  3D78               	addwfc	??___ftge+2,w
  9240  14A0  00F2               	movwf	___ftge@ff1+2
  9241  14A1                     l2453:	
  9242  14A1  1FF5               	btfss	___ftge@ff2+2,7
  9243  14A2  2CB7               	goto	l2457
  9244  14A3  0973               	comf	___ftge@ff2,w
  9245  14A4  00F6               	movwf	??___ftge
  9246  14A5  0974               	comf	___ftge@ff2+1,w
  9247  14A6  00F7               	movwf	??___ftge+1
  9248  14A7  0975               	comf	___ftge@ff2+2,w
  9249  14A8  00F8               	movwf	??___ftge+2
  9250  14A9  0AF6               	incf	??___ftge,f
  9251  14AA  1903               	skipnz
  9252  14AB  0AF7               	incf	??___ftge+1,f
  9253  14AC  1903               	skipnz
  9254  14AD  0AF8               	incf	??___ftge+2,f
  9255  14AE  3000               	movlw	0
  9256  14AF  0776               	addwf	??___ftge,w
  9257  14B0  00F3               	movwf	___ftge@ff2
  9258  14B1  3000               	movlw	0
  9259  14B2  3D77               	addwfc	??___ftge+1,w
  9260  14B3  00F4               	movwf	___ftge@ff2+1
  9261  14B4  3080               	movlw	128
  9262  14B5  3D78               	addwfc	??___ftge+2,w
  9263  14B6  00F5               	movwf	___ftge@ff2+2
  9264  14B7                     l2457:	
  9265  14B7  3080               	movlw	128
  9266  14B8  06F2               	xorwf	___ftge@ff1+2,f
  9267  14B9  3080               	movlw	128
  9268  14BA  06F5               	xorwf	___ftge@ff2+2,f
  9269  14BB  0875               	movf	___ftge@ff2+2,w
  9270  14BC  0272               	subwf	___ftge@ff1+2,w
  9271  14BD  1D03               	skipz
  9272  14BE  0008               	return
  9273  14BF  0874               	movf	___ftge@ff2+1,w
  9274  14C0  0271               	subwf	___ftge@ff1+1,w
  9275  14C1  1D03               	skipz
  9276  14C2  0008               	return
  9277  14C3  0873               	movf	___ftge@ff2,w
  9278  14C4  0270               	subwf	___ftge@ff1,w
  9279  14C5  0008               	return
  9280  14C6                     __end_of___ftge:	
  9281                           
  9282                           	psect	text7
  9283  12BA                     __ptext7:	
  9284 ;; *************** function ___ftsub *****************
  9285 ;; Defined at:
  9286 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9287 ;; Parameters:    Size  Location     Type
  9288 ;;  f2              3   29[BANK0 ] float 
  9289 ;;  f1              3   32[BANK0 ] float 
  9290 ;; Auto vars:     Size  Location     Type
  9291 ;;		None
  9292 ;; Return value:  Size  Location     Type
  9293 ;;                  3   29[BANK0 ] float 
  9294 ;; Registers used:
  9295 ;;		wreg, status,2, status,0, pclath, cstack
  9296 ;; Tracked objects:
  9297 ;;		On entry : 0/0
  9298 ;;		On exit  : 0/0
  9299 ;;		Unchanged: 0/0
  9300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9301 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9304 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9305 ;;Total ram usage:        6 bytes
  9306 ;; Hardware stack levels used:    1
  9307 ;; Hardware stack levels required when called:    2
  9308 ;; This function calls:
  9309 ;;		___ftadd
  9310 ;; This function is called by:
  9311 ;;		_tempCalc
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           
  9316                           ;psect for function ___ftsub
  9317  12BA                     ___ftsub:	
  9318                           
  9319                           ;incstack = 0
  9320                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9321  12BA  0020               	movlb	0	; select bank0
  9322  12BB  083F               	movf	___ftsub@f2+2,w
  9323  12BC  043E               	iorwf	___ftsub@f2+1,w
  9324  12BD  043D               	iorwf	___ftsub@f2,w
  9325  12BE  1903               	skipnz
  9326  12BF  2AC2               	goto	l2821
  9327  12C0  3080               	movlw	128
  9328  12C1  06BF               	xorwf	___ftsub@f2+2,f
  9329  12C2                     l2821:	
  9330  12C2  0840               	movf	___ftsub@f1,w
  9331  12C3  00B0               	movwf	___ftadd@f1
  9332  12C4  0841               	movf	___ftsub@f1+1,w
  9333  12C5  00B1               	movwf	___ftadd@f1+1
  9334  12C6  0842               	movf	___ftsub@f1+2,w
  9335  12C7  00B2               	movwf	___ftadd@f1+2
  9336  12C8  083D               	movf	___ftsub@f2,w
  9337  12C9  00B3               	movwf	___ftadd@f2
  9338  12CA  083E               	movf	___ftsub@f2+1,w
  9339  12CB  00B4               	movwf	___ftadd@f2+1
  9340  12CC  083F               	movf	___ftsub@f2+2,w
  9341  12CD  00B5               	movwf	___ftadd@f2+2
  9342  12CE  318D  25FA         	fcall	___ftadd
  9343  12D0  0020               	movlb	0	; select bank0
  9344  12D1  0830               	movf	?___ftadd,w
  9345  12D2  00BD               	movwf	?___ftsub
  9346  12D3  0831               	movf	?___ftadd+1,w
  9347  12D4  00BE               	movwf	?___ftsub+1
  9348  12D5  0832               	movf	?___ftadd+2,w
  9349  12D6  00BF               	movwf	?___ftsub+2
  9350  12D7  0008               	return
  9351  12D8                     __end_of___ftsub:	
  9352                           
  9353                           	psect	text8
  9354  0DFA                     __ptext8:	
  9355 ;; *************** function ___ftadd *****************
  9356 ;; Defined at:
  9357 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  f1              3   16[BANK0 ] float 
  9360 ;;  f2              3   19[BANK0 ] float 
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;  exp1            1   28[BANK0 ] unsigned char 
  9363 ;;  exp2            1   27[BANK0 ] unsigned char 
  9364 ;;  sign            1   26[BANK0 ] unsigned char 
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  3   16[BANK0 ] float 
  9367 ;; Registers used:
  9368 ;;		wreg, status,2, status,0, pclath, cstack
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9374 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9375 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9376 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9377 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9378 ;;Total ram usage:       13 bytes
  9379 ;; Hardware stack levels used:    1
  9380 ;; Hardware stack levels required when called:    1
  9381 ;; This function calls:
  9382 ;;		___ftpack
  9383 ;; This function is called by:
  9384 ;;		_tempCalc
  9385 ;;		___ftsub
  9386 ;;		_log
  9387 ;;		_eval_poly
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           
  9392                           ;psect for function ___ftadd
  9393  0DFA                     ___ftadd:	
  9394                           
  9395                           ;incstack = 0
  9396                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9397  0DFA  0020               	movlb	0	; select bank0
  9398  0DFB  0830               	movf	___ftadd@f1,w
  9399  0DFC  00B6               	movwf	??___ftadd
  9400  0DFD  0831               	movf	___ftadd@f1+1,w
  9401  0DFE  00B7               	movwf	??___ftadd+1
  9402  0DFF  0832               	movf	___ftadd@f1+2,w
  9403  0E00  00B8               	movwf	??___ftadd+2
  9404  0E01  1003               	clrc
  9405  0E02  0D37               	rlf	??___ftadd+1,w
  9406  0E03  0D38               	rlf	??___ftadd+2,w
  9407  0E04  00B9               	movwf	??___ftadd+3
  9408  0E05  0839               	movf	??___ftadd+3,w
  9409  0E06  00BC               	movwf	___ftadd@exp1
  9410  0E07  0833               	movf	___ftadd@f2,w
  9411  0E08  00B6               	movwf	??___ftadd
  9412  0E09  0834               	movf	___ftadd@f2+1,w
  9413  0E0A  00B7               	movwf	??___ftadd+1
  9414  0E0B  0835               	movf	___ftadd@f2+2,w
  9415  0E0C  00B8               	movwf	??___ftadd+2
  9416  0E0D  1003               	clrc
  9417  0E0E  0D37               	rlf	??___ftadd+1,w
  9418  0E0F  0D38               	rlf	??___ftadd+2,w
  9419  0E10  00B9               	movwf	??___ftadd+3
  9420  0E11  0839               	movf	??___ftadd+3,w
  9421  0E12  00BB               	movwf	___ftadd@exp2
  9422  0E13  083C               	movf	___ftadd@exp1,w
  9423  0E14  1903               	btfsc	3,2
  9424  0E15  2E22               	goto	l2321
  9425  0E16  083B               	movf	___ftadd@exp2,w
  9426  0E17  023C               	subwf	___ftadd@exp1,w
  9427  0E18  1803               	skipnc
  9428  0E19  2E29               	goto	l2325
  9429  0E1A  033C               	decf	___ftadd@exp1,w
  9430  0E1B  3AFF               	xorlw	255
  9431  0E1C  073B               	addwf	___ftadd@exp2,w
  9432  0E1D  00B6               	movwf	??___ftadd
  9433  0E1E  3019               	movlw	25
  9434  0E1F  0236               	subwf	??___ftadd,w
  9435  0E20  1C03               	skipc
  9436  0E21  2E29               	goto	l2325
  9437  0E22                     l2321:	
  9438  0E22  0833               	movf	___ftadd@f2,w
  9439  0E23  00B0               	movwf	?___ftadd
  9440  0E24  0834               	movf	___ftadd@f2+1,w
  9441  0E25  00B1               	movwf	?___ftadd+1
  9442  0E26  0835               	movf	___ftadd@f2+2,w
  9443  0E27  00B2               	movwf	?___ftadd+2
  9444  0E28  0008               	return
  9445  0E29                     l2325:	
  9446  0E29  083B               	movf	___ftadd@exp2,w
  9447  0E2A  1903               	btfsc	3,2
  9448  0E2B  0008               	return
  9449  0E2C  083C               	movf	___ftadd@exp1,w
  9450  0E2D  023B               	subwf	___ftadd@exp2,w
  9451  0E2E  1803               	skipnc
  9452  0E2F  2E38               	goto	l2331
  9453  0E30  033B               	decf	___ftadd@exp2,w
  9454  0E31  3AFF               	xorlw	255
  9455  0E32  073C               	addwf	___ftadd@exp1,w
  9456  0E33  00B6               	movwf	??___ftadd
  9457  0E34  3019               	movlw	25
  9458  0E35  0236               	subwf	??___ftadd,w
  9459  0E36  1803               	btfsc	3,0
  9460  0E37  0008               	return
  9461  0E38                     l2331:	
  9462  0E38  3006               	movlw	6
  9463  0E39  00B6               	movwf	??___ftadd
  9464  0E3A  0836               	movf	??___ftadd,w
  9465  0E3B  00BA               	movwf	___ftadd@sign
  9466  0E3C  1BB2               	btfsc	___ftadd@f1+2,7
  9467  0E3D  17BA               	bsf	___ftadd@sign,7
  9468  0E3E  1BB5               	btfsc	___ftadd@f2+2,7
  9469  0E3F  173A               	bsf	___ftadd@sign,6
  9470  0E40  17B1               	bsf	___ftadd@f1+1,7
  9471  0E41  30FF               	movlw	255
  9472  0E42  05B0               	andwf	___ftadd@f1,f
  9473  0E43  30FF               	movlw	255
  9474  0E44  05B1               	andwf	___ftadd@f1+1,f
  9475  0E45  3000               	movlw	0
  9476  0E46  05B2               	andwf	___ftadd@f1+2,f
  9477  0E47  17B4               	bsf	___ftadd@f2+1,7
  9478  0E48  30FF               	movlw	255
  9479  0E49  05B3               	andwf	___ftadd@f2,f
  9480  0E4A  30FF               	movlw	255
  9481  0E4B  05B4               	andwf	___ftadd@f2+1,f
  9482  0E4C  3000               	movlw	0
  9483  0E4D  05B5               	andwf	___ftadd@f2+2,f
  9484  0E4E  083B               	movf	___ftadd@exp2,w
  9485  0E4F  023C               	subwf	___ftadd@exp1,w
  9486  0E50  1803               	skipnc
  9487  0E51  2E74               	goto	l2353
  9488  0E52                     l2343:	
  9489  0E52  3001               	movlw	1
  9490  0E53                     u2355:	
  9491  0E53  35B3               	lslf	___ftadd@f2,f
  9492  0E54  0DB4               	rlf	___ftadd@f2+1,f
  9493  0E55  0DB5               	rlf	___ftadd@f2+2,f
  9494  0E56  0B89               	decfsz	9,f
  9495  0E57  2E53               	goto	u2355
  9496  0E58  3001               	movlw	1
  9497  0E59  02BB               	subwf	___ftadd@exp2,f
  9498  0E5A  083B               	movf	___ftadd@exp2,w
  9499  0E5B  063C               	xorwf	___ftadd@exp1,w
  9500  0E5C  1903               	skipnz
  9501  0E5D  2E6F               	goto	l2351
  9502  0E5E  3001               	movlw	1
  9503  0E5F  02BA               	subwf	___ftadd@sign,f
  9504  0E60  083A               	movf	___ftadd@sign,w
  9505  0E61  3907               	andlw	7
  9506  0E62  1903               	btfsc	3,2
  9507  0E63  2E6F               	goto	l2351
  9508  0E64  2E52               	goto	l2343
  9509  0E65                     l2349:	
  9510  0E65  3001               	movlw	1
  9511  0E66                     u2385:	
  9512  0E66  36B2               	lsrf	___ftadd@f1+2,f
  9513  0E67  0CB1               	rrf	___ftadd@f1+1,f
  9514  0E68  0CB0               	rrf	___ftadd@f1,f
  9515  0E69  0B89               	decfsz	9,f
  9516  0E6A  2E66               	goto	u2385
  9517  0E6B  3001               	movlw	1
  9518  0E6C  00B6               	movwf	??___ftadd
  9519  0E6D  0836               	movf	??___ftadd,w
  9520  0E6E  07BC               	addwf	___ftadd@exp1,f
  9521  0E6F                     l2351:	
  9522  0E6F  083C               	movf	___ftadd@exp1,w
  9523  0E70  063B               	xorwf	___ftadd@exp2,w
  9524  0E71  1903               	btfsc	3,2
  9525  0E72  2E99               	goto	l795
  9526  0E73  2E65               	goto	l2349
  9527  0E74                     l2353:	
  9528  0E74  083C               	movf	___ftadd@exp1,w
  9529  0E75  023B               	subwf	___ftadd@exp2,w
  9530  0E76  1803               	skipnc
  9531  0E77  2E99               	goto	l795
  9532  0E78                     l2355:	
  9533  0E78  3001               	movlw	1
  9534  0E79                     u2415:	
  9535  0E79  35B0               	lslf	___ftadd@f1,f
  9536  0E7A  0DB1               	rlf	___ftadd@f1+1,f
  9537  0E7B  0DB2               	rlf	___ftadd@f1+2,f
  9538  0E7C  0B89               	decfsz	9,f
  9539  0E7D  2E79               	goto	u2415
  9540  0E7E  3001               	movlw	1
  9541  0E7F  02BC               	subwf	___ftadd@exp1,f
  9542  0E80  083B               	movf	___ftadd@exp2,w
  9543  0E81  063C               	xorwf	___ftadd@exp1,w
  9544  0E82  1903               	skipnz
  9545  0E83  2E95               	goto	l2363
  9546  0E84  3001               	movlw	1
  9547  0E85  02BA               	subwf	___ftadd@sign,f
  9548  0E86  083A               	movf	___ftadd@sign,w
  9549  0E87  3907               	andlw	7
  9550  0E88  1903               	btfsc	3,2
  9551  0E89  2E95               	goto	l2363
  9552  0E8A  2E78               	goto	l2355
  9553  0E8B                     l2361:	
  9554  0E8B  3001               	movlw	1
  9555  0E8C                     u2445:	
  9556  0E8C  36B5               	lsrf	___ftadd@f2+2,f
  9557  0E8D  0CB4               	rrf	___ftadd@f2+1,f
  9558  0E8E  0CB3               	rrf	___ftadd@f2,f
  9559  0E8F  0B89               	decfsz	9,f
  9560  0E90  2E8C               	goto	u2445
  9561  0E91  3001               	movlw	1
  9562  0E92  00B6               	movwf	??___ftadd
  9563  0E93  0836               	movf	??___ftadd,w
  9564  0E94  07BB               	addwf	___ftadd@exp2,f
  9565  0E95                     l2363:	
  9566  0E95  083C               	movf	___ftadd@exp1,w
  9567  0E96  063B               	xorwf	___ftadd@exp2,w
  9568  0E97  1D03               	skipz
  9569  0E98  2E8B               	goto	l2361
  9570  0E99                     l795:	
  9571  0E99  1FBA               	btfss	___ftadd@sign,7
  9572  0E9A  2EAB               	goto	l2367
  9573  0E9B  30FF               	movlw	255
  9574  0E9C  06B0               	xorwf	___ftadd@f1,f
  9575  0E9D  30FF               	movlw	255
  9576  0E9E  06B1               	xorwf	___ftadd@f1+1,f
  9577  0E9F  30FF               	movlw	255
  9578  0EA0  06B2               	xorwf	___ftadd@f1+2,f
  9579  0EA1  3001               	movlw	1
  9580  0EA2  07B0               	addwf	___ftadd@f1,f
  9581  0EA3  3000               	movlw	0
  9582  0EA4  1803               	skipnc
  9583  0EA5  3001               	movlw	1
  9584  0EA6  07B1               	addwf	___ftadd@f1+1,f
  9585  0EA7  3000               	movlw	0
  9586  0EA8  1803               	skipnc
  9587  0EA9  3001               	movlw	1
  9588  0EAA  07B2               	addwf	___ftadd@f1+2,f
  9589  0EAB                     l2367:	
  9590  0EAB  1F3A               	btfss	___ftadd@sign,6
  9591  0EAC  2EBD               	goto	l2371
  9592  0EAD  30FF               	movlw	255
  9593  0EAE  06B3               	xorwf	___ftadd@f2,f
  9594  0EAF  30FF               	movlw	255
  9595  0EB0  06B4               	xorwf	___ftadd@f2+1,f
  9596  0EB1  30FF               	movlw	255
  9597  0EB2  06B5               	xorwf	___ftadd@f2+2,f
  9598  0EB3  3001               	movlw	1
  9599  0EB4  07B3               	addwf	___ftadd@f2,f
  9600  0EB5  3000               	movlw	0
  9601  0EB6  1803               	skipnc
  9602  0EB7  3001               	movlw	1
  9603  0EB8  07B4               	addwf	___ftadd@f2+1,f
  9604  0EB9  3000               	movlw	0
  9605  0EBA  1803               	skipnc
  9606  0EBB  3001               	movlw	1
  9607  0EBC  07B5               	addwf	___ftadd@f2+2,f
  9608  0EBD                     l2371:	
  9609  0EBD  01BA               	clrf	___ftadd@sign
  9610  0EBE  0830               	movf	___ftadd@f1,w
  9611  0EBF  07B3               	addwf	___ftadd@f2,f
  9612  0EC0  0831               	movf	___ftadd@f1+1,w
  9613  0EC1  3DB4               	addwfc	___ftadd@f2+1,f
  9614  0EC2  0832               	movf	___ftadd@f1+2,w
  9615  0EC3  3DB5               	addwfc	___ftadd@f2+2,f
  9616  0EC4  1FB5               	btfss	___ftadd@f2+2,7
  9617  0EC5  2ED8               	goto	l2381
  9618  0EC6  30FF               	movlw	255
  9619  0EC7  06B3               	xorwf	___ftadd@f2,f
  9620  0EC8  30FF               	movlw	255
  9621  0EC9  06B4               	xorwf	___ftadd@f2+1,f
  9622  0ECA  30FF               	movlw	255
  9623  0ECB  06B5               	xorwf	___ftadd@f2+2,f
  9624  0ECC  3001               	movlw	1
  9625  0ECD  07B3               	addwf	___ftadd@f2,f
  9626  0ECE  3000               	movlw	0
  9627  0ECF  1803               	skipnc
  9628  0ED0  3001               	movlw	1
  9629  0ED1  07B4               	addwf	___ftadd@f2+1,f
  9630  0ED2  3000               	movlw	0
  9631  0ED3  1803               	skipnc
  9632  0ED4  3001               	movlw	1
  9633  0ED5  07B5               	addwf	___ftadd@f2+2,f
  9634  0ED6  01BA               	clrf	___ftadd@sign
  9635  0ED7  0ABA               	incf	___ftadd@sign,f
  9636  0ED8                     l2381:	
  9637  0ED8  0833               	movf	___ftadd@f2,w
  9638  0ED9  00F0               	movwf	___ftpack@arg
  9639  0EDA  0834               	movf	___ftadd@f2+1,w
  9640  0EDB  00F1               	movwf	___ftpack@arg+1
  9641  0EDC  0835               	movf	___ftadd@f2+2,w
  9642  0EDD  00F2               	movwf	___ftpack@arg+2
  9643  0EDE  083C               	movf	___ftadd@exp1,w
  9644  0EDF  00B6               	movwf	??___ftadd
  9645  0EE0  0836               	movf	??___ftadd,w
  9646  0EE1  00F3               	movwf	___ftpack@exp
  9647  0EE2  083A               	movf	___ftadd@sign,w
  9648  0EE3  00B7               	movwf	??___ftadd+1
  9649  0EE4  0837               	movf	??___ftadd+1,w
  9650  0EE5  00F4               	movwf	___ftpack@sign
  9651  0EE6  3197  271A         	fcall	___ftpack
  9652  0EE8  0870               	movf	?___ftpack,w
  9653  0EE9  0020               	movlb	0	; select bank0
  9654  0EEA  00B0               	movwf	?___ftadd
  9655  0EEB  0871               	movf	?___ftpack+1,w
  9656  0EEC  00B1               	movwf	?___ftadd+1
  9657  0EED  0872               	movf	?___ftpack+2,w
  9658  0EEE  00B2               	movwf	?___ftadd+2
  9659  0EEF  0008               	return
  9660  0EF0                     __end_of___ftadd:	
  9661                           
  9662                           	psect	text9
  9663  00DC                     __ptext9:	
  9664 ;; *************** function _readIAnalog *****************
  9665 ;; Defined at:
  9666 ;;		line 77 in file "adc.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;  channel         2    6[BANK0 ] unsigned int 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;  value           2   11[COMMON] int 
  9671 ;;  analog_chann    2    9[COMMON] unsigned int 
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  2    6[BANK0 ] int 
  9674 ;; Registers used:
  9675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9682 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9683 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;      Totals:         4      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;Total ram usage:       24 bytes
  9686 ;; Hardware stack levels used:    1
  9687 ;; Hardware stack levels required when called:    1
  9688 ;; This function calls:
  9689 ;;		_ADCRead
  9690 ;;		___aldiv
  9691 ;;		___wmul
  9692 ;; This function is called by:
  9693 ;;		_main
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           
  9698                           ;psect for function _readIAnalog
  9699  00DC                     _readIAnalog:	
  9700                           
  9701                           ;adc.c: 79: int16_t value;
  9702                           ;adc.c: 81: uint16_t analog_channel = channels[channel];
  9703                           
  9704                           ;incstack = 0
  9705                           ; Regs used in _readIAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9706  00DC  0020               	movlb	0	; select bank0
  9707  00DD  3526               	lslf	readIAnalog@channel,w
  9708  00DE  3E39               	addlw	(low (_channels| (0+256)))& (0+255)
  9709  00DF  0086               	movwf	6
  9710  00E0  3001               	movlw	1	; select bank2/3
  9711  00E1  0087               	movwf	7
  9712  00E2  3F40               	moviw [0]fsr1
  9713  00E3  00F9               	movwf	readIAnalog@analog_channel
  9714  00E4  3F41               	moviw [1]fsr1
  9715  00E5  00FA               	movwf	readIAnalog@analog_channel+1
  9716                           
  9717                           ;adc.c: 83: value = ADCRead(analog_channel);
  9718  00E6  0879               	movf	readIAnalog@analog_channel,w
  9719  00E7  3189  212F  3180   	fcall	_ADCRead
  9720  00EA  0871               	movf	?_ADCRead+1,w
  9721  00EB  00FC               	movwf	readIAnalog@value+1
  9722  00EC  0870               	movf	?_ADCRead,w
  9723  00ED  00FB               	movwf	readIAnalog@value
  9724                           
  9725                           ;adc.c: 85: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9726  00EE  0020               	movlb	0	; select bank0
  9727  00EF  0826               	movf	readIAnalog@channel,w
  9728  00F0  00A8               	movwf	??_readIAnalog
  9729  00F1  3001               	movlw	1
  9730  00F2                     u3205:	
  9731  00F2  35A8               	lslf	??_readIAnalog,f
  9732  00F3  3EFF               	addlw	-1
  9733  00F4  1D03               	skipz
  9734  00F5  28F2               	goto	u3205
  9735  00F6  3528               	lslf	??_readIAnalog,w
  9736  00F7  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9737  00F8  0086               	movwf	6
  9738  00F9  3001               	movlw	1	; select bank2/3
  9739  00FA  0087               	movwf	7
  9740  00FB  3F40               	moviw [0]fsr1
  9741  00FC  00A9               	movwf	??_readIAnalog+1
  9742  00FD  3F41               	moviw [1]fsr1
  9743  00FE  00AA               	movwf	??_readIAnalog+2
  9744  00FF  3F42               	moviw [2]fsr1
  9745  0100  00AB               	movwf	??_readIAnalog+3
  9746  0101  3F43               	moviw [3]fsr1
  9747  0102  00AC               	movwf	??_readIAnalog+4
  9748  0103  0869               	movf	_sampleIndex+1,w
  9749  0104  00AE               	movwf	??_readIAnalog+6
  9750  0105  0868               	movf	_sampleIndex,w
  9751  0106  00AD               	movwf	??_readIAnalog+5
  9752  0107  35AD               	lslf	??_readIAnalog+5,f
  9753  0108  0DAE               	rlf	??_readIAnalog+6,f
  9754  0109  0827               	movf	readIAnalog@channel+1,w
  9755  010A  00F1               	movwf	___wmul@multiplier+1
  9756  010B  0826               	movf	readIAnalog@channel,w
  9757  010C  00F0               	movwf	___wmul@multiplier
  9758  010D  3064               	movlw	100
  9759  010E  00F2               	movwf	___wmul@multiplicand
  9760  010F  3000               	movlw	0
  9761  0110  00F3               	movwf	___wmul@multiplicand+1
  9762  0111  3192  229F  3180   	fcall	___wmul
  9763  0114  3060               	movlw	96
  9764  0115  0020               	movlb	0	; select bank0
  9765  0116  00AF               	movwf	??_readIAnalog+7
  9766  0117  3022               	movlw	34
  9767  0118  00B0               	movwf	??_readIAnalog+8
  9768  0119  0870               	movf	?___wmul,w
  9769  011A  072F               	addwf	??_readIAnalog+7,w
  9770  011B  00B1               	movwf	??_readIAnalog+9
  9771  011C  0871               	movf	?___wmul+1,w
  9772  011D  3D30               	addwfc	??_readIAnalog+8,w
  9773  011E  00B2               	movwf	??_readIAnalog+10
  9774  011F  082D               	movf	??_readIAnalog+5,w
  9775  0120  0731               	addwf	??_readIAnalog+9,w
  9776  0121  0086               	movwf	6
  9777  0122  082E               	movf	??_readIAnalog+6,w
  9778  0123  3D32               	addwfc	??_readIAnalog+10,w
  9779  0124  0087               	movwf	7
  9780  0125  3F40               	moviw [0]fsr1
  9781  0126  00B3               	movwf	??_readIAnalog+11
  9782  0127  3F41               	moviw [1]fsr1
  9783  0128  00B4               	movwf	??_readIAnalog+12
  9784  0129  0833               	movf	??_readIAnalog+11,w
  9785  012A  00B5               	movwf	??_readIAnalog+13
  9786  012B  0834               	movf	??_readIAnalog+12,w
  9787  012C  00B6               	movwf	??_readIAnalog+14
  9788  012D  3000               	movlw	0
  9789  012E  1BB6               	btfsc	??_readIAnalog+14,7
  9790  012F  30FF               	movlw	255
  9791  0130  00B7               	movwf	??_readIAnalog+15
  9792  0131  00B8               	movwf	??_readIAnalog+16
  9793  0132  09B5               	comf	??_readIAnalog+13,f
  9794  0133  09B6               	comf	??_readIAnalog+14,f
  9795  0134  09B7               	comf	??_readIAnalog+15,f
  9796  0135  09B8               	comf	??_readIAnalog+16,f
  9797  0136  0AB5               	incf	??_readIAnalog+13,f
  9798  0137  1903               	skipnz
  9799  0138  0AB6               	incf	??_readIAnalog+14,f
  9800  0139  1903               	skipnz
  9801  013A  0AB7               	incf	??_readIAnalog+15,f
  9802  013B  1903               	skipnz
  9803  013C  0AB8               	incf	??_readIAnalog+16,f
  9804  013D  0835               	movf	??_readIAnalog+13,w
  9805  013E  07A9               	addwf	??_readIAnalog+1,f
  9806  013F  0836               	movf	??_readIAnalog+14,w
  9807  0140  3DAA               	addwfc	??_readIAnalog+2,f
  9808  0141  0837               	movf	??_readIAnalog+15,w
  9809  0142  3DAB               	addwfc	??_readIAnalog+3,f
  9810  0143  0838               	movf	??_readIAnalog+16,w
  9811  0144  3DAC               	addwfc	??_readIAnalog+4,f
  9812  0145  0826               	movf	readIAnalog@channel,w
  9813  0146  00B9               	movwf	??_readIAnalog+17
  9814  0147  3001               	movlw	1
  9815  0148                     u3215:	
  9816  0148  35B9               	lslf	??_readIAnalog+17,f
  9817  0149  3EFF               	addlw	-1
  9818  014A  1D03               	skipz
  9819  014B  2948               	goto	u3215
  9820  014C  3539               	lslf	??_readIAnalog+17,w
  9821  014D  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9822  014E  0086               	movwf	6
  9823  014F  3001               	movlw	1	; select bank2/3
  9824  0150  0087               	movwf	7
  9825  0151  0829               	movf	??_readIAnalog+1,w
  9826  0152  3FC0               	movwi [0]fsr1
  9827  0153  082A               	movf	??_readIAnalog+2,w
  9828  0154  3FC1               	movwi [1]fsr1
  9829  0155  082B               	movf	??_readIAnalog+3,w
  9830  0156  3FC2               	movwi [2]fsr1
  9831  0157  082C               	movf	??_readIAnalog+4,w
  9832  0158  3FC3               	movwi [3]fsr1
  9833                           
  9834                           ;adc.c: 87: samples[channel][sampleIndex] = value;
  9835  0159  0869               	movf	_sampleIndex+1,w
  9836  015A  00A9               	movwf	??_readIAnalog+1
  9837  015B  0868               	movf	_sampleIndex,w
  9838  015C  00A8               	movwf	??_readIAnalog
  9839  015D  35A8               	lslf	??_readIAnalog,f
  9840  015E  0DA9               	rlf	??_readIAnalog+1,f
  9841  015F  0827               	movf	readIAnalog@channel+1,w
  9842  0160  00F1               	movwf	___wmul@multiplier+1
  9843  0161  0826               	movf	readIAnalog@channel,w
  9844  0162  00F0               	movwf	___wmul@multiplier
  9845  0163  3064               	movlw	100
  9846  0164  00F2               	movwf	___wmul@multiplicand
  9847  0165  3000               	movlw	0
  9848  0166  00F3               	movwf	___wmul@multiplicand+1
  9849  0167  3192  229F  3180   	fcall	___wmul
  9850  016A  3060               	movlw	96
  9851  016B  0020               	movlb	0	; select bank0
  9852  016C  00AA               	movwf	??_readIAnalog+2
  9853  016D  3022               	movlw	34
  9854  016E  00AB               	movwf	??_readIAnalog+3
  9855  016F  0870               	movf	?___wmul,w
  9856  0170  072A               	addwf	??_readIAnalog+2,w
  9857  0171  00AC               	movwf	??_readIAnalog+4
  9858  0172  0871               	movf	?___wmul+1,w
  9859  0173  3D2B               	addwfc	??_readIAnalog+3,w
  9860  0174  00AD               	movwf	??_readIAnalog+5
  9861  0175  0828               	movf	??_readIAnalog,w
  9862  0176  072C               	addwf	??_readIAnalog+4,w
  9863  0177  0086               	movwf	6
  9864  0178  0829               	movf	??_readIAnalog+1,w
  9865  0179  3D2D               	addwfc	??_readIAnalog+5,w
  9866  017A  0087               	movwf	7
  9867  017B  087B               	movf	readIAnalog@value,w
  9868  017C  3FC0               	movwi [0]fsr1
  9869  017D  087C               	movf	readIAnalog@value+1,w
  9870  017E  3FC1               	movwi [1]fsr1
  9871                           
  9872                           ;adc.c: 89: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9873  017F  0826               	movf	readIAnalog@channel,w
  9874  0180  00A8               	movwf	??_readIAnalog
  9875  0181  3001               	movlw	1
  9876  0182                     u3225:	
  9877  0182  35A8               	lslf	??_readIAnalog,f
  9878  0183  3EFF               	addlw	-1
  9879  0184  1D03               	skipz
  9880  0185  2982               	goto	u3225
  9881  0186  3528               	lslf	??_readIAnalog,w
  9882  0187  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9883  0188  0086               	movwf	6
  9884  0189  3001               	movlw	1	; select bank2/3
  9885  018A  0087               	movwf	7
  9886  018B  3F40               	moviw [0]fsr1
  9887  018C  00A9               	movwf	??_readIAnalog+1
  9888  018D  3F41               	moviw [1]fsr1
  9889  018E  00AA               	movwf	??_readIAnalog+2
  9890  018F  3F42               	moviw [2]fsr1
  9891  0190  00AB               	movwf	??_readIAnalog+3
  9892  0191  3F43               	moviw [3]fsr1
  9893  0192  00AC               	movwf	??_readIAnalog+4
  9894  0193  0869               	movf	_sampleIndex+1,w
  9895  0194  00AE               	movwf	??_readIAnalog+6
  9896  0195  0868               	movf	_sampleIndex,w
  9897  0196  00AD               	movwf	??_readIAnalog+5
  9898  0197  35AD               	lslf	??_readIAnalog+5,f
  9899  0198  0DAE               	rlf	??_readIAnalog+6,f
  9900  0199  0827               	movf	readIAnalog@channel+1,w
  9901  019A  00F1               	movwf	___wmul@multiplier+1
  9902  019B  0826               	movf	readIAnalog@channel,w
  9903  019C  00F0               	movwf	___wmul@multiplier
  9904  019D  3064               	movlw	100
  9905  019E  00F2               	movwf	___wmul@multiplicand
  9906  019F  3000               	movlw	0
  9907  01A0  00F3               	movwf	___wmul@multiplicand+1
  9908  01A1  3192  229F  3180   	fcall	___wmul
  9909  01A4  3060               	movlw	96
  9910  01A5  0020               	movlb	0	; select bank0
  9911  01A6  00AF               	movwf	??_readIAnalog+7
  9912  01A7  3022               	movlw	34
  9913  01A8  00B0               	movwf	??_readIAnalog+8
  9914  01A9  0870               	movf	?___wmul,w
  9915  01AA  072F               	addwf	??_readIAnalog+7,w
  9916  01AB  00B1               	movwf	??_readIAnalog+9
  9917  01AC  0871               	movf	?___wmul+1,w
  9918  01AD  3D30               	addwfc	??_readIAnalog+8,w
  9919  01AE  00B2               	movwf	??_readIAnalog+10
  9920  01AF  082D               	movf	??_readIAnalog+5,w
  9921  01B0  0731               	addwf	??_readIAnalog+9,w
  9922  01B1  0086               	movwf	6
  9923  01B2  082E               	movf	??_readIAnalog+6,w
  9924  01B3  3D32               	addwfc	??_readIAnalog+10,w
  9925  01B4  0087               	movwf	7
  9926  01B5  3F40               	moviw [0]fsr1
  9927  01B6  00B3               	movwf	??_readIAnalog+11
  9928  01B7  3F41               	moviw [1]fsr1
  9929  01B8  00B4               	movwf	??_readIAnalog+12
  9930  01B9  0833               	movf	??_readIAnalog+11,w
  9931  01BA  00B5               	movwf	??_readIAnalog+13
  9932  01BB  0834               	movf	??_readIAnalog+12,w
  9933  01BC  00B6               	movwf	??_readIAnalog+14
  9934  01BD  3000               	movlw	0
  9935  01BE  1BB6               	btfsc	??_readIAnalog+14,7
  9936  01BF  30FF               	movlw	255
  9937  01C0  00B7               	movwf	??_readIAnalog+15
  9938  01C1  00B8               	movwf	??_readIAnalog+16
  9939  01C2  0835               	movf	??_readIAnalog+13,w
  9940  01C3  07A9               	addwf	??_readIAnalog+1,f
  9941  01C4  0836               	movf	??_readIAnalog+14,w
  9942  01C5  3DAA               	addwfc	??_readIAnalog+2,f
  9943  01C6  0837               	movf	??_readIAnalog+15,w
  9944  01C7  3DAB               	addwfc	??_readIAnalog+3,f
  9945  01C8  0838               	movf	??_readIAnalog+16,w
  9946  01C9  3DAC               	addwfc	??_readIAnalog+4,f
  9947  01CA  0826               	movf	readIAnalog@channel,w
  9948  01CB  00B9               	movwf	??_readIAnalog+17
  9949  01CC  3001               	movlw	1
  9950  01CD                     u3235:	
  9951  01CD  35B9               	lslf	??_readIAnalog+17,f
  9952  01CE  3EFF               	addlw	-1
  9953  01CF  1D03               	skipz
  9954  01D0  29CD               	goto	u3235
  9955  01D1  3539               	lslf	??_readIAnalog+17,w
  9956  01D2  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9957  01D3  0086               	movwf	6
  9958  01D4  3001               	movlw	1	; select bank2/3
  9959  01D5  0087               	movwf	7
  9960  01D6  0829               	movf	??_readIAnalog+1,w
  9961  01D7  3FC0               	movwi [0]fsr1
  9962  01D8  082A               	movf	??_readIAnalog+2,w
  9963  01D9  3FC1               	movwi [1]fsr1
  9964  01DA  082B               	movf	??_readIAnalog+3,w
  9965  01DB  3FC2               	movwi [2]fsr1
  9966  01DC  082C               	movf	??_readIAnalog+4,w
  9967  01DD  3FC3               	movwi [3]fsr1
  9968                           
  9969                           ;adc.c: 91: if(channel>=(4-1))
  9970  01DE  3000               	movlw	0
  9971  01DF  0227               	subwf	readIAnalog@channel+1,w
  9972  01E0  3003               	movlw	3
  9973  01E1  1903               	skipnz
  9974  01E2  0226               	subwf	readIAnalog@channel,w
  9975  01E3  1C03               	skipc
  9976  01E4  29F2               	goto	l2903
  9977                           
  9978                           ;adc.c: 92: {
  9979                           ;adc.c: 93: sampleIndex+=1;
  9980  01E5  3001               	movlw	1
  9981  01E6  07E8               	addwf	_sampleIndex,f
  9982  01E7  3000               	movlw	0
  9983  01E8  3DE9               	addwfc	_sampleIndex+1,f
  9984                           
  9985                           ;adc.c: 94: if(sampleIndex >= 50)sampleIndex = 0;
  9986  01E9  3000               	movlw	0
  9987  01EA  0269               	subwf	_sampleIndex+1,w
  9988  01EB  3032               	movlw	50
  9989  01EC  1903               	skipnz
  9990  01ED  0268               	subwf	_sampleIndex,w
  9991  01EE  1C03               	skipc
  9992  01EF  29F2               	goto	l2903
  9993  01F0  01E8               	clrf	_sampleIndex
  9994  01F1  01E9               	clrf	_sampleIndex+1
  9995  01F2                     l2903:	
  9996                           
  9997                           ;adc.c: 95: }
  9998                           ;adc.c: 97: value = totals[channel]/50;
  9999  01F2  3000               	movlw	0
 10000  01F3  00F3               	movwf	___aldiv@divisor+3
 10001  01F4  3000               	movlw	0
 10002  01F5  00F2               	movwf	___aldiv@divisor+2
 10003  01F6  3000               	movlw	0
 10004  01F7  00F1               	movwf	___aldiv@divisor+1
 10005  01F8  3032               	movlw	50
 10006  01F9  00F0               	movwf	___aldiv@divisor
 10007  01FA  0826               	movf	readIAnalog@channel,w
 10008  01FB  00A8               	movwf	??_readIAnalog
 10009  01FC  3001               	movlw	1
 10010  01FD                     u3265:	
 10011  01FD  35A8               	lslf	??_readIAnalog,f
 10012  01FE  3EFF               	addlw	-1
 10013  01FF  1D03               	skipz
 10014  0200  29FD               	goto	u3265
 10015  0201  3528               	lslf	??_readIAnalog,w
 10016  0202  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10017  0203  0086               	movwf	6
 10018  0204  3001               	movlw	1	; select bank2/3
 10019  0205  0087               	movwf	7
 10020  0206  3F40               	moviw [0]fsr1
 10021  0207  00F4               	movwf	___aldiv@dividend
 10022  0208  3F41               	moviw [1]fsr1
 10023  0209  00F5               	movwf	___aldiv@dividend+1
 10024  020A  3F42               	moviw [2]fsr1
 10025  020B  00F6               	movwf	___aldiv@dividend+2
 10026  020C  3F43               	moviw [3]fsr1
 10027  020D  00F7               	movwf	___aldiv@dividend+3
 10028  020E  3189  2144         	fcall	___aldiv
 10029  0210  0871               	movf	?___aldiv+1,w
 10030  0211  00FC               	movwf	readIAnalog@value+1
 10031  0212  0870               	movf	?___aldiv,w
 10032  0213  00FB               	movwf	readIAnalog@value
 10033                           
 10034                           ;adc.c: 99: return value;
 10035  0214  087C               	movf	readIAnalog@value+1,w
 10036  0215  0020               	movlb	0	; select bank0
 10037  0216  00A7               	movwf	?_readIAnalog+1
 10038  0217  087B               	movf	readIAnalog@value,w
 10039  0218  00A6               	movwf	?_readIAnalog
 10040  0219  0008               	return
 10041  021A                     __end_of_readIAnalog:	
 10042                           
 10043                           	psect	text10
 10044  0944                     __ptext10:	
 10045 ;; *************** function ___aldiv *****************
 10046 ;; Defined at:
 10047 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10048 ;; Parameters:    Size  Location     Type
 10049 ;;  divisor         4    0[COMMON] long 
 10050 ;;  dividend        4    4[COMMON] long 
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;  quotient        4    2[BANK0 ] long 
 10053 ;;  sign            1    1[BANK0 ] unsigned char 
 10054 ;;  counter         1    0[BANK0 ] unsigned char 
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  4    0[COMMON] long 
 10057 ;; Registers used:
 10058 ;;		wreg, status,2, status,0
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10064 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10065 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10067 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10068 ;;Total ram usage:       15 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; This function calls:
 10071 ;;		Nothing
 10072 ;; This function is called by:
 10073 ;;		_readIAnalog
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077                           
 10078                           ;psect for function ___aldiv
 10079  0944                     ___aldiv:	
 10080                           
 10081                           ;incstack = 0
 10082                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10083  0944  0020               	movlb	0	; select bank0
 10084  0945  01A1               	clrf	___aldiv@sign
 10085  0946  1FF3               	btfss	___aldiv@divisor+3,7
 10086  0947  2955               	goto	l658
 10087  0948  09F0               	comf	___aldiv@divisor,f
 10088  0949  09F1               	comf	___aldiv@divisor+1,f
 10089  094A  09F2               	comf	___aldiv@divisor+2,f
 10090  094B  09F3               	comf	___aldiv@divisor+3,f
 10091  094C  0AF0               	incf	___aldiv@divisor,f
 10092  094D  1903               	skipnz
 10093  094E  0AF1               	incf	___aldiv@divisor+1,f
 10094  094F  1903               	skipnz
 10095  0950  0AF2               	incf	___aldiv@divisor+2,f
 10096  0951  1903               	skipnz
 10097  0952  0AF3               	incf	___aldiv@divisor+3,f
 10098  0953  01A1               	clrf	___aldiv@sign
 10099  0954  0AA1               	incf	___aldiv@sign,f
 10100  0955                     l658:	
 10101  0955  1FF7               	btfss	___aldiv@dividend+3,7
 10102  0956  2966               	goto	l2701
 10103  0957  09F4               	comf	___aldiv@dividend,f
 10104  0958  09F5               	comf	___aldiv@dividend+1,f
 10105  0959  09F6               	comf	___aldiv@dividend+2,f
 10106  095A  09F7               	comf	___aldiv@dividend+3,f
 10107  095B  0AF4               	incf	___aldiv@dividend,f
 10108  095C  1903               	skipnz
 10109  095D  0AF5               	incf	___aldiv@dividend+1,f
 10110  095E  1903               	skipnz
 10111  095F  0AF6               	incf	___aldiv@dividend+2,f
 10112  0960  1903               	skipnz
 10113  0961  0AF7               	incf	___aldiv@dividend+3,f
 10114  0962  3001               	movlw	1
 10115  0963  00F8               	movwf	??___aldiv
 10116  0964  0878               	movf	??___aldiv,w
 10117  0965  06A1               	xorwf	___aldiv@sign,f
 10118  0966                     l2701:	
 10119  0966  3000               	movlw	0
 10120  0967  00A5               	movwf	___aldiv@quotient+3
 10121  0968  3000               	movlw	0
 10122  0969  00A4               	movwf	___aldiv@quotient+2
 10123  096A  3000               	movlw	0
 10124  096B  00A3               	movwf	___aldiv@quotient+1
 10125  096C  3000               	movlw	0
 10126  096D  00A2               	movwf	___aldiv@quotient
 10127  096E  0873               	movf	___aldiv@divisor+3,w
 10128  096F  0472               	iorwf	___aldiv@divisor+2,w
 10129  0970  0471               	iorwf	___aldiv@divisor+1,w
 10130  0971  0470               	iorwf	___aldiv@divisor,w
 10131  0972  1903               	skipnz
 10132  0973  29AF               	goto	l2723
 10133  0974  01A0               	clrf	___aldiv@counter
 10134  0975  0AA0               	incf	___aldiv@counter,f
 10135  0976                     l2709:	
 10136  0976  1BF3               	btfsc	___aldiv@divisor+3,7
 10137  0977  2984               	goto	l2711
 10138  0978  3001               	movlw	1
 10139  0979                     u2785:	
 10140  0979  35F0               	lslf	___aldiv@divisor,f
 10141  097A  0DF1               	rlf	___aldiv@divisor+1,f
 10142  097B  0DF2               	rlf	___aldiv@divisor+2,f
 10143  097C  0DF3               	rlf	___aldiv@divisor+3,f
 10144  097D  0B89               	decfsz	9,f
 10145  097E  2979               	goto	u2785
 10146  097F  3001               	movlw	1
 10147  0980  00F8               	movwf	??___aldiv
 10148  0981  0878               	movf	??___aldiv,w
 10149  0982  07A0               	addwf	___aldiv@counter,f
 10150  0983  2976               	goto	l2709
 10151  0984                     l2711:	
 10152  0984  3001               	movlw	1
 10153  0985                     u2805:	
 10154  0985  35A2               	lslf	___aldiv@quotient,f
 10155  0986  0DA3               	rlf	___aldiv@quotient+1,f
 10156  0987  0DA4               	rlf	___aldiv@quotient+2,f
 10157  0988  0DA5               	rlf	___aldiv@quotient+3,f
 10158  0989  0B89               	decfsz	9,f
 10159  098A  2985               	goto	u2805
 10160  098B  0873               	movf	___aldiv@divisor+3,w
 10161  098C  0277               	subwf	___aldiv@dividend+3,w
 10162  098D  1D03               	skipz
 10163  098E  2999               	goto	u2815
 10164  098F  0872               	movf	___aldiv@divisor+2,w
 10165  0990  0276               	subwf	___aldiv@dividend+2,w
 10166  0991  1D03               	skipz
 10167  0992  2999               	goto	u2815
 10168  0993  0871               	movf	___aldiv@divisor+1,w
 10169  0994  0275               	subwf	___aldiv@dividend+1,w
 10170  0995  1D03               	skipz
 10171  0996  2999               	goto	u2815
 10172  0997  0870               	movf	___aldiv@divisor,w
 10173  0998  0274               	subwf	___aldiv@dividend,w
 10174  0999                     u2815:	
 10175  0999  1C03               	skipc
 10176  099A  29A4               	goto	l2719
 10177  099B  0870               	movf	___aldiv@divisor,w
 10178  099C  02F4               	subwf	___aldiv@dividend,f
 10179  099D  0871               	movf	___aldiv@divisor+1,w
 10180  099E  3BF5               	subwfb	___aldiv@dividend+1,f
 10181  099F  0872               	movf	___aldiv@divisor+2,w
 10182  09A0  3BF6               	subwfb	___aldiv@dividend+2,f
 10183  09A1  0873               	movf	___aldiv@divisor+3,w
 10184  09A2  3BF7               	subwfb	___aldiv@dividend+3,f
 10185  09A3  1422               	bsf	___aldiv@quotient,0
 10186  09A4                     l2719:	
 10187  09A4  3001               	movlw	1
 10188  09A5                     u2825:	
 10189  09A5  36F3               	lsrf	___aldiv@divisor+3,f
 10190  09A6  0CF2               	rrf	___aldiv@divisor+2,f
 10191  09A7  0CF1               	rrf	___aldiv@divisor+1,f
 10192  09A8  0CF0               	rrf	___aldiv@divisor,f
 10193  09A9  0B89               	decfsz	9,f
 10194  09AA  29A5               	goto	u2825
 10195  09AB  3001               	movlw	1
 10196  09AC  02A0               	subwf	___aldiv@counter,f
 10197  09AD  1D03               	btfss	3,2
 10198  09AE  2984               	goto	l2711
 10199  09AF                     l2723:	
 10200  09AF  0821               	movf	___aldiv@sign,w
 10201  09B0  1903               	btfsc	3,2
 10202  09B1  29BD               	goto	l2727
 10203  09B2  09A2               	comf	___aldiv@quotient,f
 10204  09B3  09A3               	comf	___aldiv@quotient+1,f
 10205  09B4  09A4               	comf	___aldiv@quotient+2,f
 10206  09B5  09A5               	comf	___aldiv@quotient+3,f
 10207  09B6  0AA2               	incf	___aldiv@quotient,f
 10208  09B7  1903               	skipnz
 10209  09B8  0AA3               	incf	___aldiv@quotient+1,f
 10210  09B9  1903               	skipnz
 10211  09BA  0AA4               	incf	___aldiv@quotient+2,f
 10212  09BB  1903               	skipnz
 10213  09BC  0AA5               	incf	___aldiv@quotient+3,f
 10214  09BD                     l2727:	
 10215  09BD  0825               	movf	___aldiv@quotient+3,w
 10216  09BE  00F3               	movwf	?___aldiv+3
 10217  09BF  0824               	movf	___aldiv@quotient+2,w
 10218  09C0  00F2               	movwf	?___aldiv+2
 10219  09C1  0823               	movf	___aldiv@quotient+1,w
 10220  09C2  00F1               	movwf	?___aldiv+1
 10221  09C3  0822               	movf	___aldiv@quotient,w
 10222  09C4  00F0               	movwf	?___aldiv
 10223  09C5  0008               	return
 10224  09C6                     __end_of___aldiv:	
 10225                           
 10226                           	psect	text11
 10227  177E                     __ptext11:	
 10228 ;; *************** function _readButton *****************
 10229 ;; Defined at:
 10230 ;;		line 9 in file "buttons.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;		None
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;		None
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  1    wreg      unsigned char 
 10237 ;; Registers used:
 10238 ;;		wreg, status,2, status,0, pclath, cstack
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10248 ;;Total ram usage:        2 bytes
 10249 ;; Hardware stack levels used:    1
 10250 ;; Hardware stack levels required when called:    1
 10251 ;; This function calls:
 10252 ;;		_ADCRead
 10253 ;; This function is called by:
 10254 ;;		_main
 10255 ;; This function uses a non-reentrant model
 10256 ;;
 10257                           
 10258                           
 10259                           ;psect for function _readButton
 10260  177E                     _readButton:	
 10261                           
 10262                           ;buttons.c: 11: readButtons=ADCRead(11);
 10263                           
 10264                           ;incstack = 0
 10265                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
 10266  177E  300B               	movlw	11
 10267  177F  3189  212F  3197   	fcall	_ADCRead
 10268  1782  0871               	movf	?_ADCRead+1,w
 10269  1783  0020               	movlb	0	; select bank0
 10270  1784  00E5               	movwf	_readButtons+1
 10271  1785  0870               	movf	?_ADCRead,w
 10272  1786  00E4               	movwf	_readButtons
 10273                           
 10274                           ;buttons.c: 13: if(readButtons>=365&&readButtons<405)
 10275  1787  0865               	movf	_readButtons+1,w
 10276  1788  3A80               	xorlw	128
 10277  1789  00F4               	movwf	??_readButton
 10278  178A  3081               	movlw	129
 10279  178B  0274               	subwf	??_readButton,w
 10280  178C  1D03               	skipz
 10281  178D  2F90               	goto	u3485
 10282  178E  306D               	movlw	109
 10283  178F  0264               	subwf	_readButtons,w
 10284  1790                     u3485:	
 10285  1790  1C03               	skipc
 10286  1791  2FA2               	goto	l2981
 10287  1792  0020               	movlb	0	; select bank0
 10288  1793  0865               	movf	_readButtons+1,w
 10289  1794  3A80               	xorlw	128
 10290  1795  00F4               	movwf	??_readButton
 10291  1796  3081               	movlw	129
 10292  1797  0274               	subwf	??_readButton,w
 10293  1798  1D03               	skipz
 10294  1799  2F9C               	goto	u3495
 10295  179A  3095               	movlw	149
 10296  179B  0264               	subwf	_readButtons,w
 10297  179C                     u3495:	
 10298  179C  1803               	skipnc
 10299  179D  2FA2               	goto	l2981
 10300                           
 10301                           ;buttons.c: 14: {
 10302                           ;buttons.c: 15: button=1;
 10303  179E  0020               	movlb	0	; select bank0
 10304  179F  01EC               	clrf	_button
 10305  17A0  0AEC               	incf	_button,f
 10306                           
 10307                           ;buttons.c: 16: }
 10308  17A1  2FD0               	goto	l2993
 10309  17A2                     l2981:	
 10310                           
 10311                           ;buttons.c: 18: else if(readButtons>=535&&readButtons<590)
 10312  17A2  0020               	movlb	0	; select bank0
 10313  17A3  0865               	movf	_readButtons+1,w
 10314  17A4  3A80               	xorlw	128
 10315  17A5  00F4               	movwf	??_readButton
 10316  17A6  3082               	movlw	130
 10317  17A7  0274               	subwf	??_readButton,w
 10318  17A8  1D03               	skipz
 10319  17A9  2FAC               	goto	u3505
 10320  17AA  3017               	movlw	23
 10321  17AB  0264               	subwf	_readButtons,w
 10322  17AC                     u3505:	
 10323  17AC  1C03               	skipc
 10324  17AD  2FBC               	goto	l2987
 10325  17AE  0020               	movlb	0	; select bank0
 10326  17AF  0865               	movf	_readButtons+1,w
 10327  17B0  3A80               	xorlw	128
 10328  17B1  00F4               	movwf	??_readButton
 10329  17B2  3082               	movlw	130
 10330  17B3  0274               	subwf	??_readButton,w
 10331  17B4  1D03               	skipz
 10332  17B5  2FB8               	goto	u3515
 10333  17B6  304E               	movlw	78
 10334  17B7  0264               	subwf	_readButtons,w
 10335  17B8                     u3515:	
 10336  17B8  1803               	skipnc
 10337  17B9  2FBC               	goto	l2987
 10338                           
 10339                           ;buttons.c: 19: {
 10340                           ;buttons.c: 20: button=2;
 10341  17BA  3002               	movlw	2
 10342  17BB  2FC9               	goto	L7
 10343  17BC                     l2987:	
 10344                           ;buttons.c: 21: }
 10345                           
 10346                           
 10347                           ;buttons.c: 23: else if(readButtons>745)
 10348  17BC  0020               	movlb	0	; select bank0
 10349  17BD  0865               	movf	_readButtons+1,w
 10350  17BE  3A80               	xorlw	128
 10351  17BF  00F4               	movwf	??_readButton
 10352  17C0  3082               	movlw	130
 10353  17C1  0274               	subwf	??_readButton,w
 10354  17C2  1D03               	skipz
 10355  17C3  2FC6               	goto	u3525
 10356  17C4  30EA               	movlw	234
 10357  17C5  0264               	subwf	_readButtons,w
 10358  17C6                     u3525:	
 10359  17C6  1C03               	skipc
 10360  17C7  2FCE               	goto	l2991
 10361                           
 10362                           ;buttons.c: 24: {
 10363                           ;buttons.c: 25: button=3;
 10364  17C8  3003               	movlw	3
 10365  17C9                     L7:	
 10366  17C9  00F4               	movwf	??_readButton
 10367  17CA  0874               	movf	??_readButton,w
 10368  17CB  0020               	movlb	0	; select bank0
 10369  17CC  00EC               	movwf	_button
 10370                           
 10371                           ;buttons.c: 26: }
 10372  17CD  2FD0               	goto	l2993
 10373  17CE                     l2991:	
 10374                           
 10375                           ;buttons.c: 28: else
 10376                           ;buttons.c: 29: {
 10377                           ;buttons.c: 30: button=0;
 10378  17CE  0020               	movlb	0	; select bank0
 10379  17CF  01EC               	clrf	_button
 10380  17D0                     l2993:	
 10381                           
 10382                           ;buttons.c: 31: }
 10383                           ;buttons.c: 33: if (button!=0)
 10384  17D0  086C               	movf	_button,w
 10385  17D1  1903               	btfsc	3,2
 10386  17D2  2FFD               	goto	l3013
 10387                           
 10388                           ;buttons.c: 34: {
 10389                           ;buttons.c: 35: if (button!=lastButton)
 10390  17D3  086C               	movf	_button,w
 10391  17D4  066B               	xorwf	_lastButton,w
 10392  17D5  1903               	skipnz
 10393  17D6  2FDC               	goto	l3001
 10394                           
 10395                           ;buttons.c: 36: {
 10396                           ;buttons.c: 37: lastButton=button;
 10397  17D7  086C               	movf	_button,w
 10398  17D8  00F4               	movwf	??_readButton
 10399  17D9  0874               	movf	??_readButton,w
 10400  17DA  00EB               	movwf	_lastButton
 10401  17DB  2FFD               	goto	l3013
 10402  17DC                     l3001:	
 10403                           ;buttons.c: 39: }
 10404                           
 10405                           ;buttons.c: 38: j=0;
 10406                           
 10407                           
 10408                           ;buttons.c: 40: else
 10409                           ;buttons.c: 41: {
 10410                           ;buttons.c: 42: j+=1;
 10411  17DC  3001               	movlw	1
 10412  17DD  00F4               	movwf	??_readButton
 10413  17DE  0874               	movf	??_readButton,w
 10414  17DF  07EA               	addwf	_j,f
 10415                           
 10416                           ;buttons.c: 44: if(j==1)
 10417  17E0  036A               	decf	_j,w
 10418  17E1  1D03               	btfss	3,2
 10419  17E2  2FE5               	goto	l3007
 10420                           
 10421                           ;buttons.c: 45: {
 10422                           ;buttons.c: 46: return (lastButton);
 10423  17E3  086B               	movf	_lastButton,w
 10424  17E4  0008               	return
 10425  17E5                     l3007:	
 10426                           
 10427                           ;buttons.c: 47: }
 10428                           ;buttons.c: 49: if (j>10)
 10429  17E5  086A               	movf	_j,w
 10430  17E6  3A80               	xorlw	128
 10431  17E7  3E75               	addlw	-139
 10432  17E8  1C03               	skipc
 10433  17E9  2FFE               	goto	l3015
 10434                           
 10435                           ;buttons.c: 50: {
 10436                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
 10437  17EA  3002               	movlw	2
 10438  17EB  00F5               	movwf	??_readButton+1
 10439  17EC  3004               	movlw	4
 10440  17ED  00F4               	movwf	??_readButton
 10441  17EE  30BA               	movlw	186
 10442  17EF                     u4127:	
 10443  17EF  0B89               	decfsz	9,f
 10444  17F0  2FEF               	goto	u4127
 10445  17F1  0BF4               	decfsz	??_readButton,f
 10446  17F2  2FEF               	goto	u4127
 10447  17F3  0BF5               	decfsz	??_readButton+1,f
 10448  17F4  2FEF               	goto	u4127
 10449  17F5  3200               	nop2
 10450                           
 10451                           ;buttons.c: 52: j=10;
 10452  17F6  300A               	movlw	10
 10453  17F7  00F4               	movwf	??_readButton
 10454  17F8  0874               	movf	??_readButton,w
 10455  17F9  0020               	movlb	0	; select bank0
 10456  17FA  00EA               	movwf	_j
 10457                           
 10458                           ;buttons.c: 53: return (lastButton);
 10459  17FB  086B               	movf	_lastButton,w
 10460  17FC  0008               	return
 10461  17FD                     l3013:	
 10462                           ;buttons.c: 54: }
 10463                           ;buttons.c: 55: }
 10464                           ;buttons.c: 56: goto end;
 10465                           
 10466                           
 10467                           ;buttons.c: 57: }
 10468                           ;buttons.c: 59: j=0;
 10469  17FD  01EA               	clrf	_j
 10470  17FE                     l3015:	
 10471                           ;buttons.c: 61: end:
 10472                           
 10473                           
 10474                           ;buttons.c: 63: return (0);
 10475  17FE  3000               	movlw	0
 10476  17FF  0008               	return
 10477  1800                     __end_of_readButton:	
 10478                           
 10479                           	psect	text12
 10480  092F                     __ptext12:	
 10481 ;; *************** function _ADCRead *****************
 10482 ;; Defined at:
 10483 ;;		line 21 in file "adc.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;  channel         1    wreg     enum E14259
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;  channel         1    3[COMMON] enum E14259
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  2    0[COMMON] int 
 10490 ;; Registers used:
 10491 ;;		wreg
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10497 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10500 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10501 ;;Total ram usage:        4 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; This function calls:
 10504 ;;		Nothing
 10505 ;; This function is called by:
 10506 ;;		_readIAnalog
 10507 ;;		_readButton
 10508 ;;		_main
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512                           
 10513                           ;psect for function _ADCRead
 10514  092F                     _ADCRead:	
 10515                           
 10516                           ;incstack = 0
 10517                           ; Regs used in _ADCRead: [wreg]
 10518                           ;ADCRead@channel stored from wreg
 10519  092F  00F3               	movwf	ADCRead@channel
 10520                           
 10521                           ;adc.c: 23: ADPCH = channel_VSS;
 10522  0930  303C               	movlw	60
 10523  0931  0021               	movlb	1	; select bank1
 10524  0932  009E               	movwf	30	;volatile
 10525                           
 10526                           ;adc.c: 25: ADCON0bits.ADON = 1;
 10527  0933  1793               	bsf	19,7	;volatile
 10528                           
 10529                           ;adc.c: 27: ADCON0bits.ADCONT = 0;
 10530  0934  1313               	bcf	19,6	;volatile
 10531                           
 10532                           ;adc.c: 29: ADCON0bits.ADGO = 1;
 10533  0935  1413               	bsf	19,0	;volatile
 10534  0936                     l57:	
 10535                           ;adc.c: 32: {
 10536                           
 10537                           ;adc.c: 31: while(ADCON0bits.ADGO)
 10538                           
 10539  0936  1813               	btfsc	19,0	;volatile
 10540  0937  2936               	goto	l57
 10541                           
 10542                           ;adc.c: 33: }
 10543                           ;adc.c: 35: ADPCH = channel;
 10544  0938  0873               	movf	ADCRead@channel,w
 10545  0939  009E               	movwf	30	;volatile
 10546                           
 10547                           ;adc.c: 37: ADCON0bits.ADON = 1;
 10548  093A  1793               	bsf	19,7	;volatile
 10549                           
 10550                           ;adc.c: 39: ADCON0bits.ADCONT = 0;
 10551  093B  1313               	bcf	19,6	;volatile
 10552                           
 10553                           ;adc.c: 41: ADCON0bits.ADGO = 1;
 10554  093C  1413               	bsf	19,0	;volatile
 10555  093D                     l60:	
 10556                           ;adc.c: 44: {
 10557                           
 10558                           ;adc.c: 43: while(ADCON0bits.ADGO)
 10559                           
 10560  093D  1813               	btfsc	19,0	;volatile
 10561  093E  293D               	goto	l60
 10562                           
 10563                           ;adc.c: 45: }
 10564                           ;adc.c: 47: return ((ADRESH<<8)+ADRESL);
 10565  093F  080D               	movf	13,w	;volatile
 10566  0940  00F1               	movwf	?_ADCRead+1
 10567  0941  080C               	movf	12,w	;volatile
 10568  0942  00F0               	movwf	?_ADCRead
 10569  0943  0008               	return
 10570  0944                     __end_of_ADCRead:	
 10571                           
 10572                           	psect	text13
 10573  0004                     __ptext13:	
 10574 ;; *************** function _cc_cv_mode *****************
 10575 ;; Defined at:
 10576 ;;		line 83 in file "battery_charger.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  z               1    wreg     unsigned char 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;  z               1    5[COMMON] unsigned char 
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  1    wreg      void 
 10583 ;; Registers used:
 10584 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;Total ram usage:        6 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; This function calls:
 10597 ;;		Nothing
 10598 ;; This function is called by:
 10599 ;;		_main
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           
 10604                           ;psect for function _cc_cv_mode
 10605  0004                     _cc_cv_mode:	
 10606                           
 10607                           ;incstack = 0
 10608                           ; Regs used in _cc_cv_mode: [wreg+fsr1l+fsr1h+status,2+status,0]
 10609                           ;cc_cv_mode@z stored from wreg
 10610  0004  00F5               	movwf	cc_cv_mode@z
 10611                           
 10612                           ;battery_charger.c: 85: if(voltage[z]>=Vref[z])
 10613  0005  3575               	lslf	cc_cv_mode@z,w
 10614  0006  3EC0               	addlw	(low (_Vref| 0))& (0+255)
 10615  0007  0086               	movwf	6
 10616  0008  0187               	clrf	7
 10617  0009  3F40               	moviw [0]fsr1
 10618  000A  00F0               	movwf	??_cc_cv_mode
 10619  000B  3F41               	moviw [1]fsr1
 10620  000C  00F1               	movwf	??_cc_cv_mode+1
 10621  000D  3575               	lslf	cc_cv_mode@z,w
 10622  000E  3EB0               	addlw	(low (_voltage| 0))& (0+255)
 10623  000F  0086               	movwf	6
 10624  0010  0187               	clrf	7
 10625  0011  3F40               	moviw [0]fsr1
 10626  0012  00F2               	movwf	??_cc_cv_mode+2
 10627  0013  3F41               	moviw [1]fsr1
 10628  0014  00F3               	movwf	??_cc_cv_mode+3
 10629  0015  0873               	movf	??_cc_cv_mode+3,w
 10630  0016  3A80               	xorlw	128
 10631  0017  00F4               	movwf	??_cc_cv_mode+4
 10632  0018  0871               	movf	??_cc_cv_mode+1,w
 10633  0019  3A80               	xorlw	128
 10634  001A  0274               	subwf	??_cc_cv_mode+4,w
 10635  001B  1D03               	skipz
 10636  001C  281F               	goto	u3385
 10637  001D  0870               	movf	??_cc_cv_mode,w
 10638  001E  0272               	subwf	??_cc_cv_mode+2,w
 10639  001F                     u3385:	
 10640  001F  1C03               	skipc
 10641  0020  285E               	goto	l2961
 10642                           
 10643                           ;battery_charger.c: 86: {
 10644                           ;battery_charger.c: 87: if(VHoldMode[z]<9)VHoldMode[z]+=1;
 10645  0021  0875               	movf	cc_cv_mode@z,w
 10646  0022  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10647  0023  0086               	movwf	6
 10648  0024  0187               	clrf	7
 10649  0025  0801               	movf	1,w
 10650  0026  3A80               	xorlw	128
 10651  0027  3E77               	addlw	-137
 10652  0028  1803               	skipnc
 10653  0029  2832               	goto	l125
 10654  002A  3001               	movlw	1
 10655  002B  00F0               	movwf	??_cc_cv_mode
 10656  002C  0875               	movf	cc_cv_mode@z,w
 10657  002D  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10658  002E  0086               	movwf	6
 10659  002F  0187               	clrf	7
 10660  0030  0870               	movf	??_cc_cv_mode,w
 10661  0031  0781               	addwf	1,f
 10662  0032                     l125:	
 10663                           
 10664                           ;battery_charger.c: 88: if(VHoldMode[z]<9)VHoldMode[z]+=1;
 10665  0032  0875               	movf	cc_cv_mode@z,w
 10666  0033  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10667  0034  0086               	movwf	6
 10668  0035  0187               	clrf	7
 10669  0036  0801               	movf	1,w
 10670  0037  3A80               	xorlw	128
 10671  0038  3E77               	addlw	-137
 10672  0039  1803               	skipnc
 10673  003A  2843               	goto	l126
 10674  003B  3001               	movlw	1
 10675  003C  00F0               	movwf	??_cc_cv_mode
 10676  003D  0875               	movf	cc_cv_mode@z,w
 10677  003E  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10678  003F  0086               	movwf	6
 10679  0040  0187               	clrf	7
 10680  0041  0870               	movf	??_cc_cv_mode,w
 10681  0042  0781               	addwf	1,f
 10682  0043                     l126:	
 10683                           
 10684                           ;battery_charger.c: 90: if(cc_cv[z])
 10685  0043  0875               	movf	cc_cv_mode@z,w
 10686  0044  3E66               	addlw	(low (_cc_cv| 0))& (0+255)
 10687  0045  0086               	movwf	6
 10688  0046  0187               	clrf	7
 10689  0047  0801               	movf	1,w
 10690  0048  1903               	btfsc	3,2
 10691  0049  2851               	goto	l2957
 10692                           
 10693                           ;battery_charger.c: 91: {
 10694                           ;battery_charger.c: 92: cc_cv[z]-=1;
 10695  004A  0875               	movf	cc_cv_mode@z,w
 10696  004B  3E66               	addlw	(low (_cc_cv| 0))& (0+255)
 10697  004C  0086               	movwf	6
 10698  004D  0187               	clrf	7
 10699  004E  3001               	movlw	1
 10700  004F  0281               	subwf	1,f
 10701                           
 10702                           ;battery_charger.c: 93: }
 10703  0050  2885               	goto	l130
 10704  0051                     l2957:	
 10705                           
 10706                           ;battery_charger.c: 94: else
 10707                           ;battery_charger.c: 95: {
 10708                           ;battery_charger.c: 96: if(Imode[z])
 10709  0051  0875               	movf	cc_cv_mode@z,w
 10710  0052  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 10711  0053  0086               	movwf	6
 10712  0054  0187               	clrf	7
 10713  0055  0801               	movf	1,w
 10714  0056  1903               	btfsc	3,2
 10715  0057  2885               	goto	l130
 10716                           
 10717                           ;battery_charger.c: 97: {
 10718                           ;battery_charger.c: 98: Imode[z]=0;
 10719  0058  0875               	movf	cc_cv_mode@z,w
 10720  0059  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 10721  005A  0086               	movwf	6
 10722  005B  0187               	clrf	7
 10723  005C  0181               	clrf	1
 10724                           
 10725                           ;battery_charger.c: 99: }
 10726                           ;battery_charger.c: 100: }
 10727                           ;battery_charger.c: 101: }
 10728  005D  2885               	goto	l130
 10729  005E                     l2961:	
 10730                           
 10731                           ;battery_charger.c: 102: else
 10732                           ;battery_charger.c: 103: {
 10733                           ;battery_charger.c: 104: VHoldMode[z]-=1;
 10734  005E  30FF               	movlw	255
 10735  005F  00F0               	movwf	??_cc_cv_mode
 10736  0060  0875               	movf	cc_cv_mode@z,w
 10737  0061  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10738  0062  0086               	movwf	6
 10739  0063  0187               	clrf	7
 10740  0064  0870               	movf	??_cc_cv_mode,w
 10741  0065  0781               	addwf	1,f
 10742                           
 10743                           ;battery_charger.c: 105: if(VHoldMode[z]<(9*-1))
 10744  0066  0875               	movf	cc_cv_mode@z,w
 10745  0067  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10746  0068  0086               	movwf	6
 10747  0069  0187               	clrf	7
 10748  006A  0801               	movf	1,w
 10749  006B  3A80               	xorlw	128
 10750  006C  3E89               	addlw	137
 10751  006D  1803               	skipnc
 10752  006E  2885               	goto	l130
 10753                           
 10754                           ;battery_charger.c: 106: {
 10755                           ;battery_charger.c: 107: Imode[z]=1;
 10756  006F  0875               	movf	cc_cv_mode@z,w
 10757  0070  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 10758  0071  0086               	movwf	6
 10759  0072  0187               	clrf	7
 10760  0073  0181               	clrf	1
 10761  0074  0A81               	incf	1,f
 10762                           
 10763                           ;battery_charger.c: 108: cc_cv[z]=(9*2);
 10764  0075  3012               	movlw	18
 10765  0076  00F0               	movwf	??_cc_cv_mode
 10766  0077  0875               	movf	cc_cv_mode@z,w
 10767  0078  3E66               	addlw	(low (_cc_cv| 0))& (0+255)
 10768  0079  0086               	movwf	6
 10769  007A  0187               	clrf	7
 10770  007B  0870               	movf	??_cc_cv_mode,w
 10771  007C  0081               	movwf	1
 10772                           
 10773                           ;battery_charger.c: 109: VHoldMode[z]=(9*-1);
 10774  007D  30F7               	movlw	247
 10775  007E  00F0               	movwf	??_cc_cv_mode
 10776  007F  0875               	movf	cc_cv_mode@z,w
 10777  0080  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10778  0081  0086               	movwf	6
 10779  0082  0187               	clrf	7
 10780  0083  0870               	movf	??_cc_cv_mode,w
 10781  0084  0081               	movwf	1
 10782  0085                     l130:	
 10783                           
 10784                           ;battery_charger.c: 110: }
 10785                           ;battery_charger.c: 111: }
 10786                           ;battery_charger.c: 113: if(current[z]>Iref[z])
 10787  0085  3575               	lslf	cc_cv_mode@z,w
 10788  0086  3EB8               	addlw	(low (_current| 0))& (0+255)
 10789  0087  0086               	movwf	6
 10790  0088  0187               	clrf	7
 10791  0089  3F40               	moviw [0]fsr1
 10792  008A  00F0               	movwf	??_cc_cv_mode
 10793  008B  3F41               	moviw [1]fsr1
 10794  008C  00F1               	movwf	??_cc_cv_mode+1
 10795  008D  3575               	lslf	cc_cv_mode@z,w
 10796  008E  3EC4               	addlw	(low (_Iref| 0))& (0+255)
 10797  008F  0086               	movwf	6
 10798  0090  0187               	clrf	7
 10799  0091  3F40               	moviw [0]fsr1
 10800  0092  00F2               	movwf	??_cc_cv_mode+2
 10801  0093  3F41               	moviw [1]fsr1
 10802  0094  00F3               	movwf	??_cc_cv_mode+3
 10803  0095  0873               	movf	??_cc_cv_mode+3,w
 10804  0096  3A80               	xorlw	128
 10805  0097  00F4               	movwf	??_cc_cv_mode+4
 10806  0098  0871               	movf	??_cc_cv_mode+1,w
 10807  0099  3A80               	xorlw	128
 10808  009A  0274               	subwf	??_cc_cv_mode+4,w
 10809  009B  1D03               	skipz
 10810  009C  289F               	goto	u3445
 10811  009D  0870               	movf	??_cc_cv_mode,w
 10812  009E  0272               	subwf	??_cc_cv_mode+2,w
 10813  009F                     u3445:	
 10814  009F  1803               	skipnc
 10815  00A0  0008               	return
 10816                           
 10817                           ;battery_charger.c: 114: {
 10818                           ;battery_charger.c: 115: if(!(Imode[z]))
 10819  00A1  0875               	movf	cc_cv_mode@z,w
 10820  00A2  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 10821  00A3  0086               	movwf	6
 10822  00A4  0187               	clrf	7
 10823  00A5  0801               	movf	1,w
 10824  00A6  1D03               	btfss	3,2
 10825  00A7  0008               	return
 10826                           
 10827                           ;battery_charger.c: 116: {
 10828                           ;battery_charger.c: 117: if(batteryState[z]==FLOAT)
 10829  00A8  0875               	movf	cc_cv_mode@z,w
 10830  00A9  3ED0               	addlw	(low (_batteryState| 0))& (0+255)
 10831  00AA  0086               	movwf	6
 10832  00AB  0187               	clrf	7
 10833  00AC  3005               	movlw	5
 10834  00AD  0601               	xorwf	1,w
 10835  00AE  1D03               	btfss	3,2
 10836  00AF  0008               	return
 10837                           
 10838                           ;battery_charger.c: 118: {
 10839                           ;battery_charger.c: 119: if(voltage[z]<1350-70)
 10840  00B0  3575               	lslf	cc_cv_mode@z,w
 10841  00B1  3EB0               	addlw	(low (_voltage| 0))& (0+255)
 10842  00B2  0086               	movwf	6
 10843  00B3  0187               	clrf	7
 10844  00B4  3F40               	moviw [0]fsr1
 10845  00B5  00F0               	movwf	??_cc_cv_mode
 10846  00B6  3F41               	moviw [1]fsr1
 10847  00B7  00F1               	movwf	??_cc_cv_mode+1
 10848  00B8  0871               	movf	??_cc_cv_mode+1,w
 10849  00B9  3A80               	xorlw	128
 10850  00BA  00F2               	movwf	??_cc_cv_mode+2
 10851  00BB  3085               	movlw	133
 10852  00BC  0272               	subwf	??_cc_cv_mode+2,w
 10853  00BD  1D03               	skipz
 10854  00BE  28C1               	goto	u3475
 10855  00BF  3000               	movlw	0
 10856  00C0  0270               	subwf	??_cc_cv_mode,w
 10857  00C1                     u3475:	
 10858  00C1  1803               	skipnc
 10859  00C2  0008               	return
 10860                           
 10861                           ;battery_charger.c: 120: {
 10862                           ;battery_charger.c: 121: batteryState[z]=CHARGE;
 10863  00C3  3004               	movlw	4
 10864  00C4  00F0               	movwf	??_cc_cv_mode
 10865  00C5  0875               	movf	cc_cv_mode@z,w
 10866  00C6  3ED0               	addlw	(low (_batteryState| 0))& (0+255)
 10867  00C7  0086               	movwf	6
 10868  00C8  0187               	clrf	7
 10869  00C9  0870               	movf	??_cc_cv_mode,w
 10870  00CA  0081               	movwf	1
 10871                           
 10872                           ;battery_charger.c: 122: Vref[z]=1425;
 10873  00CB  3575               	lslf	cc_cv_mode@z,w
 10874  00CC  3EC0               	addlw	(low (_Vref| 0))& (0+255)
 10875  00CD  0086               	movwf	6
 10876  00CE  0187               	clrf	7
 10877  00CF  3091               	movlw	145
 10878  00D0  3FC0               	movwi [0]fsr1
 10879  00D1  3005               	movlw	5
 10880  00D2  3FC1               	movwi [1]fsr1
 10881                           
 10882                           ;battery_charger.c: 123: Iref[z]=35;
 10883  00D3  3575               	lslf	cc_cv_mode@z,w
 10884  00D4  3EC4               	addlw	(low (_Iref| 0))& (0+255)
 10885  00D5  0086               	movwf	6
 10886  00D6  0187               	clrf	7
 10887  00D7  3023               	movlw	35
 10888  00D8  3FC0               	movwi [0]fsr1
 10889  00D9  3000               	movlw	0
 10890  00DA  3FC1               	movwi [1]fsr1
 10891  00DB  0008               	return
 10892  00DC                     __end_of_cc_cv_mode:	
 10893                           
 10894                           	psect	text14
 10895  15D0                     __ptext14:	
 10896 ;; *************** function _calculateCurrent3 *****************
 10897 ;; Defined at:
 10898 ;;		line 422 in file "main.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;		None
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  1    wreg      void 
 10905 ;; Registers used:
 10906 ;;		wreg, status,2, status,0, pclath, cstack
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10914 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10915 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10916 ;;Total ram usage:        3 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:    2
 10919 ;; This function calls:
 10920 ;;		___awtoft
 10921 ;;		___ftdiv
 10922 ;;		___fttol
 10923 ;; This function is called by:
 10924 ;;		_main
 10925 ;; This function uses a non-reentrant model
 10926 ;;
 10927                           
 10928                           
 10929                           ;psect for function _calculateCurrent3
 10930  15D0                     _calculateCurrent3:	
 10931                           
 10932                           ;main.c: 424: if(Ianalogs[3]-559<=0)
 10933                           
 10934                           ;incstack = 0
 10935                           ; Regs used in _calculateCurrent3: [wreg+status,2+status,0+pclath+cstack]
 10936  15D0  0021               	movlb	1	; select bank1
 10937  15D1  0826               	movf	(_Ianalogs^(0+128)+6),w
 10938  15D2  3ED1               	addlw	209
 10939  15D3  0020               	movlb	0	; select bank0
 10940  15D4  00BE               	movwf	??_calculateCurrent3
 10941  15D5  30FD               	movlw	253
 10942  15D6  0021               	movlb	1	; select bank1
 10943  15D7  3D27               	addwfc	((_Ianalogs+1)^(0+128)+6),w
 10944  15D8  0020               	movlb	0	; select bank0
 10945  15D9  00BF               	movwf	??_calculateCurrent3+1
 10946  15DA  083F               	movf	??_calculateCurrent3+1,w
 10947  15DB  3A80               	xorlw	128
 10948  15DC  00C0               	movwf	??_calculateCurrent3+2
 10949  15DD  3080               	movlw	128
 10950  15DE  0240               	subwf	??_calculateCurrent3+2,w
 10951  15DF  1D03               	skipz
 10952  15E0  2DE3               	goto	u3735
 10953  15E1  3001               	movlw	1
 10954  15E2  023E               	subwf	??_calculateCurrent3,w
 10955  15E3                     u3735:	
 10956  15E3  1803               	skipnc
 10957  15E4  2DE9               	goto	l3133
 10958                           
 10959                           ;main.c: 425: {
 10960                           ;main.c: 426: current[3]=0;
 10961  15E5  0021               	movlb	1	; select bank1
 10962  15E6  01BE               	clrf	(_current^(0+128)+6)
 10963  15E7  01BF               	clrf	((_current+1)^(0+128)+6)
 10964                           
 10965                           ;main.c: 427: }
 10966  15E8  0008               	return
 10967  15E9                     l3133:	
 10968                           
 10969                           ;main.c: 428: else
 10970                           ;main.c: 429: {
 10971                           ;main.c: 430: current[3]=(int16_t)((Ianalogs[3]-559)/1.60575);
 10972  15E9  0021               	movlb	1	; select bank1
 10973  15EA  0826               	movf	(_Ianalogs^(0+128)+6),w
 10974  15EB  3ED1               	addlw	209
 10975  15EC  00F8               	movwf	___awtoft@c
 10976  15ED  30FD               	movlw	253
 10977  15EE  3D27               	addwfc	((_Ianalogs+1)^(0+128)+6),w
 10978  15EF  00F9               	movwf	___awtoft@c+1
 10979  15F0  3193  2316  3195   	fcall	___awtoft
 10980  15F3  0878               	movf	?___awtoft,w
 10981  15F4  0020               	movlb	0	; select bank0
 10982  15F5  00A3               	movwf	___ftdiv@f1
 10983  15F6  0879               	movf	?___awtoft+1,w
 10984  15F7  00A4               	movwf	___ftdiv@f1+1
 10985  15F8  087A               	movf	?___awtoft+2,w
 10986  15F9  00A5               	movwf	___ftdiv@f1+2
 10987  15FA  3089               	movlw	137
 10988  15FB  00A0               	movwf	___ftdiv@f2
 10989  15FC  30CD               	movlw	205
 10990  15FD  00A1               	movwf	___ftdiv@f2+1
 10991  15FE  303F               	movlw	63
 10992  15FF  00A2               	movwf	___ftdiv@f2+2
 10993  1600  318A  224D  3195   	fcall	___ftdiv
 10994  1603  0020               	movlb	0	; select bank0
 10995  1604  0820               	movf	?___ftdiv,w
 10996  1605  00B0               	movwf	___fttol@f1
 10997  1606  0821               	movf	?___ftdiv+1,w
 10998  1607  00B1               	movwf	___fttol@f1+1
 10999  1608  0822               	movf	?___ftdiv+2,w
 11000  1609  00B2               	movwf	___fttol@f1+2
 11001  160A  3189  21C6         	fcall	___fttol
 11002  160C  0020               	movlb	0	; select bank0
 11003  160D  0831               	movf	?___fttol+1,w
 11004  160E  0021               	movlb	1	; select bank1
 11005  160F  00BF               	movwf	((_current+1)^(0+128)+6)
 11006  1610  0020               	movlb	0	; select bank0
 11007  1611  0830               	movf	?___fttol,w
 11008  1612  0021               	movlb	1	; select bank1
 11009  1613  00BE               	movwf	(_current^(0+128)+6)
 11010  1614  0008               	return
 11011  1615                     __end_of_calculateCurrent3:	
 11012                           
 11013                           	psect	text15
 11014  158B                     __ptext15:	
 11015 ;; *************** function _calculateCurrent2 *****************
 11016 ;; Defined at:
 11017 ;;		line 410 in file "main.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;		None
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;		None
 11022 ;; Return value:  Size  Location     Type
 11023 ;;                  1    wreg      void 
 11024 ;; Registers used:
 11025 ;;		wreg, status,2, status,0, pclath, cstack
 11026 ;; Tracked objects:
 11027 ;;		On entry : 0/0
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11033 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11034 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11035 ;;Total ram usage:        3 bytes
 11036 ;; Hardware stack levels used:    1
 11037 ;; Hardware stack levels required when called:    2
 11038 ;; This function calls:
 11039 ;;		___awtoft
 11040 ;;		___ftdiv
 11041 ;;		___fttol
 11042 ;; This function is called by:
 11043 ;;		_main
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           
 11048                           ;psect for function _calculateCurrent2
 11049  158B                     _calculateCurrent2:	
 11050                           
 11051                           ;main.c: 412: if(Ianalogs[2]-589<=0)
 11052                           
 11053                           ;incstack = 0
 11054                           ; Regs used in _calculateCurrent2: [wreg+status,2+status,0+pclath+cstack]
 11055  158B  0021               	movlb	1	; select bank1
 11056  158C  0824               	movf	(_Ianalogs^(0+128)+4),w
 11057  158D  3EB3               	addlw	179
 11058  158E  0020               	movlb	0	; select bank0
 11059  158F  00BE               	movwf	??_calculateCurrent2
 11060  1590  30FD               	movlw	253
 11061  1591  0021               	movlb	1	; select bank1
 11062  1592  3D25               	addwfc	((_Ianalogs+1)^(0+128)+4),w
 11063  1593  0020               	movlb	0	; select bank0
 11064  1594  00BF               	movwf	??_calculateCurrent2+1
 11065  1595  083F               	movf	??_calculateCurrent2+1,w
 11066  1596  3A80               	xorlw	128
 11067  1597  00C0               	movwf	??_calculateCurrent2+2
 11068  1598  3080               	movlw	128
 11069  1599  0240               	subwf	??_calculateCurrent2+2,w
 11070  159A  1D03               	skipz
 11071  159B  2D9E               	goto	u3725
 11072  159C  3001               	movlw	1
 11073  159D  023E               	subwf	??_calculateCurrent2,w
 11074  159E                     u3725:	
 11075  159E  1803               	skipnc
 11076  159F  2DA4               	goto	l3127
 11077                           
 11078                           ;main.c: 413: {
 11079                           ;main.c: 414: current[2]=0;
 11080  15A0  0021               	movlb	1	; select bank1
 11081  15A1  01BC               	clrf	(_current^(0+128)+4)
 11082  15A2  01BD               	clrf	((_current+1)^(0+128)+4)
 11083                           
 11084                           ;main.c: 415: }
 11085  15A3  0008               	return
 11086  15A4                     l3127:	
 11087                           
 11088                           ;main.c: 416: else
 11089                           ;main.c: 417: {
 11090                           ;main.c: 418: current[2]=(int16_t)((Ianalogs[2]-589)/1.3165);
 11091  15A4  0021               	movlb	1	; select bank1
 11092  15A5  0824               	movf	(_Ianalogs^(0+128)+4),w
 11093  15A6  3EB3               	addlw	179
 11094  15A7  00F8               	movwf	___awtoft@c
 11095  15A8  30FD               	movlw	253
 11096  15A9  3D25               	addwfc	((_Ianalogs+1)^(0+128)+4),w
 11097  15AA  00F9               	movwf	___awtoft@c+1
 11098  15AB  3193  2316  3195   	fcall	___awtoft
 11099  15AE  0878               	movf	?___awtoft,w
 11100  15AF  0020               	movlb	0	; select bank0
 11101  15B0  00A3               	movwf	___ftdiv@f1
 11102  15B1  0879               	movf	?___awtoft+1,w
 11103  15B2  00A4               	movwf	___ftdiv@f1+1
 11104  15B3  087A               	movf	?___awtoft+2,w
 11105  15B4  00A5               	movwf	___ftdiv@f1+2
 11106  15B5  3083               	movlw	131
 11107  15B6  00A0               	movwf	___ftdiv@f2
 11108  15B7  30A8               	movlw	168
 11109  15B8  00A1               	movwf	___ftdiv@f2+1
 11110  15B9  303F               	movlw	63
 11111  15BA  00A2               	movwf	___ftdiv@f2+2
 11112  15BB  318A  224D  3195   	fcall	___ftdiv
 11113  15BE  0020               	movlb	0	; select bank0
 11114  15BF  0820               	movf	?___ftdiv,w
 11115  15C0  00B0               	movwf	___fttol@f1
 11116  15C1  0821               	movf	?___ftdiv+1,w
 11117  15C2  00B1               	movwf	___fttol@f1+1
 11118  15C3  0822               	movf	?___ftdiv+2,w
 11119  15C4  00B2               	movwf	___fttol@f1+2
 11120  15C5  3189  21C6         	fcall	___fttol
 11121  15C7  0020               	movlb	0	; select bank0
 11122  15C8  0831               	movf	?___fttol+1,w
 11123  15C9  0021               	movlb	1	; select bank1
 11124  15CA  00BD               	movwf	((_current+1)^(0+128)+4)
 11125  15CB  0020               	movlb	0	; select bank0
 11126  15CC  0830               	movf	?___fttol,w
 11127  15CD  0021               	movlb	1	; select bank1
 11128  15CE  00BC               	movwf	(_current^(0+128)+4)
 11129  15CF  0008               	return
 11130  15D0                     __end_of_calculateCurrent2:	
 11131                           
 11132                           	psect	text16
 11133  1546                     __ptext16:	
 11134 ;; *************** function _calculateCurrent1 *****************
 11135 ;; Defined at:
 11136 ;;		line 398 in file "main.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;		None
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;		None
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  1    wreg      void 
 11143 ;; Registers used:
 11144 ;;		wreg, status,2, status,0, pclath, cstack
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11152 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11153 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11154 ;;Total ram usage:        3 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; Hardware stack levels required when called:    2
 11157 ;; This function calls:
 11158 ;;		___awtoft
 11159 ;;		___ftdiv
 11160 ;;		___fttol
 11161 ;; This function is called by:
 11162 ;;		_main
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           
 11167                           ;psect for function _calculateCurrent1
 11168  1546                     _calculateCurrent1:	
 11169                           
 11170                           ;main.c: 400: if(Ianalogs[1]-561<=0)
 11171                           
 11172                           ;incstack = 0
 11173                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 11174  1546  0021               	movlb	1	; select bank1
 11175  1547  0822               	movf	(_Ianalogs^(0+128)+2),w
 11176  1548  3ECF               	addlw	207
 11177  1549  0020               	movlb	0	; select bank0
 11178  154A  00BE               	movwf	??_calculateCurrent1
 11179  154B  30FD               	movlw	253
 11180  154C  0021               	movlb	1	; select bank1
 11181  154D  3D23               	addwfc	((_Ianalogs+1)^(0+128)+2),w
 11182  154E  0020               	movlb	0	; select bank0
 11183  154F  00BF               	movwf	??_calculateCurrent1+1
 11184  1550  083F               	movf	??_calculateCurrent1+1,w
 11185  1551  3A80               	xorlw	128
 11186  1552  00C0               	movwf	??_calculateCurrent1+2
 11187  1553  3080               	movlw	128
 11188  1554  0240               	subwf	??_calculateCurrent1+2,w
 11189  1555  1D03               	skipz
 11190  1556  2D59               	goto	u3715
 11191  1557  3001               	movlw	1
 11192  1558  023E               	subwf	??_calculateCurrent1,w
 11193  1559                     u3715:	
 11194  1559  1803               	skipnc
 11195  155A  2D5F               	goto	l3121
 11196                           
 11197                           ;main.c: 401: {
 11198                           ;main.c: 402: current[1]=0;
 11199  155B  0021               	movlb	1	; select bank1
 11200  155C  01BA               	clrf	(_current^(0+128)+2)
 11201  155D  01BB               	clrf	((_current+1)^(0+128)+2)
 11202                           
 11203                           ;main.c: 403: }
 11204  155E  0008               	return
 11205  155F                     l3121:	
 11206                           
 11207                           ;main.c: 404: else
 11208                           ;main.c: 405: {
 11209                           ;main.c: 406: current[1]=(int16_t)((Ianalogs[1]-561)/1.99055);
 11210  155F  0021               	movlb	1	; select bank1
 11211  1560  0822               	movf	(_Ianalogs^(0+128)+2),w
 11212  1561  3ECF               	addlw	207
 11213  1562  00F8               	movwf	___awtoft@c
 11214  1563  30FD               	movlw	253
 11215  1564  3D23               	addwfc	((_Ianalogs+1)^(0+128)+2),w
 11216  1565  00F9               	movwf	___awtoft@c+1
 11217  1566  3193  2316  3195   	fcall	___awtoft
 11218  1569  0878               	movf	?___awtoft,w
 11219  156A  0020               	movlb	0	; select bank0
 11220  156B  00A3               	movwf	___ftdiv@f1
 11221  156C  0879               	movf	?___awtoft+1,w
 11222  156D  00A4               	movwf	___ftdiv@f1+1
 11223  156E  087A               	movf	?___awtoft+2,w
 11224  156F  00A5               	movwf	___ftdiv@f1+2
 11225  1570  30CA               	movlw	202
 11226  1571  00A0               	movwf	___ftdiv@f2
 11227  1572  30FE               	movlw	254
 11228  1573  00A1               	movwf	___ftdiv@f2+1
 11229  1574  303F               	movlw	63
 11230  1575  00A2               	movwf	___ftdiv@f2+2
 11231  1576  318A  224D  3195   	fcall	___ftdiv
 11232  1579  0020               	movlb	0	; select bank0
 11233  157A  0820               	movf	?___ftdiv,w
 11234  157B  00B0               	movwf	___fttol@f1
 11235  157C  0821               	movf	?___ftdiv+1,w
 11236  157D  00B1               	movwf	___fttol@f1+1
 11237  157E  0822               	movf	?___ftdiv+2,w
 11238  157F  00B2               	movwf	___fttol@f1+2
 11239  1580  3189  21C6         	fcall	___fttol
 11240  1582  0020               	movlb	0	; select bank0
 11241  1583  0831               	movf	?___fttol+1,w
 11242  1584  0021               	movlb	1	; select bank1
 11243  1585  00BB               	movwf	((_current+1)^(0+128)+2)
 11244  1586  0020               	movlb	0	; select bank0
 11245  1587  0830               	movf	?___fttol,w
 11246  1588  0021               	movlb	1	; select bank1
 11247  1589  00BA               	movwf	(_current^(0+128)+2)
 11248  158A  0008               	return
 11249  158B                     __end_of_calculateCurrent1:	
 11250                           
 11251                           	psect	text17
 11252  1501                     __ptext17:	
 11253 ;; *************** function _calculateCurrent0 *****************
 11254 ;; Defined at:
 11255 ;;		line 386 in file "main.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;		None
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;		None
 11260 ;; Return value:  Size  Location     Type
 11261 ;;                  1    wreg      void 
 11262 ;; Registers used:
 11263 ;;		wreg, status,2, status,0, pclath, cstack
 11264 ;; Tracked objects:
 11265 ;;		On entry : 0/0
 11266 ;;		On exit  : 0/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11271 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11272 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11273 ;;Total ram usage:        3 bytes
 11274 ;; Hardware stack levels used:    1
 11275 ;; Hardware stack levels required when called:    2
 11276 ;; This function calls:
 11277 ;;		___awtoft
 11278 ;;		___ftdiv
 11279 ;;		___fttol
 11280 ;; This function is called by:
 11281 ;;		_main
 11282 ;; This function uses a non-reentrant model
 11283 ;;
 11284                           
 11285                           
 11286                           ;psect for function _calculateCurrent0
 11287  1501                     _calculateCurrent0:	
 11288                           
 11289                           ;main.c: 388: if(Ianalogs[0]-578<=0)
 11290                           
 11291                           ;incstack = 0
 11292                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 11293  1501  0021               	movlb	1	; select bank1
 11294  1502  0820               	movf	_Ianalogs^(0+128),w
 11295  1503  3EBE               	addlw	190
 11296  1504  0020               	movlb	0	; select bank0
 11297  1505  00BE               	movwf	??_calculateCurrent0
 11298  1506  30FD               	movlw	253
 11299  1507  0021               	movlb	1	; select bank1
 11300  1508  3D21               	addwfc	(_Ianalogs+1)^(0+128),w
 11301  1509  0020               	movlb	0	; select bank0
 11302  150A  00BF               	movwf	??_calculateCurrent0+1
 11303  150B  083F               	movf	??_calculateCurrent0+1,w
 11304  150C  3A80               	xorlw	128
 11305  150D  00C0               	movwf	??_calculateCurrent0+2
 11306  150E  3080               	movlw	128
 11307  150F  0240               	subwf	??_calculateCurrent0+2,w
 11308  1510  1D03               	skipz
 11309  1511  2D14               	goto	u3705
 11310  1512  3001               	movlw	1
 11311  1513  023E               	subwf	??_calculateCurrent0,w
 11312  1514                     u3705:	
 11313  1514  1803               	skipnc
 11314  1515  2D1A               	goto	l3115
 11315                           
 11316                           ;main.c: 389: {
 11317                           ;main.c: 390: current[0]=0;
 11318  1516  0021               	movlb	1	; select bank1
 11319  1517  01B8               	clrf	_current^(0+128)
 11320  1518  01B9               	clrf	(_current+1)^(0+128)
 11321                           
 11322                           ;main.c: 391: }
 11323  1519  0008               	return
 11324  151A                     l3115:	
 11325                           
 11326                           ;main.c: 392: else
 11327                           ;main.c: 393: {
 11328                           ;main.c: 394: current[0]=(int16_t)((Ianalogs[0]-578)/3.2323);
 11329  151A  0021               	movlb	1	; select bank1
 11330  151B  0820               	movf	_Ianalogs^(0+128),w
 11331  151C  3EBE               	addlw	190
 11332  151D  00F8               	movwf	___awtoft@c
 11333  151E  30FD               	movlw	253
 11334  151F  3D21               	addwfc	(_Ianalogs+1)^(0+128),w
 11335  1520  00F9               	movwf	___awtoft@c+1
 11336  1521  3193  2316  3195   	fcall	___awtoft
 11337  1524  0878               	movf	?___awtoft,w
 11338  1525  0020               	movlb	0	; select bank0
 11339  1526  00A3               	movwf	___ftdiv@f1
 11340  1527  0879               	movf	?___awtoft+1,w
 11341  1528  00A4               	movwf	___ftdiv@f1+1
 11342  1529  087A               	movf	?___awtoft+2,w
 11343  152A  00A5               	movwf	___ftdiv@f1+2
 11344  152B  30DE               	movlw	222
 11345  152C  00A0               	movwf	___ftdiv@f2
 11346  152D  304E               	movlw	78
 11347  152E  00A1               	movwf	___ftdiv@f2+1
 11348  152F  3040               	movlw	64
 11349  1530  00A2               	movwf	___ftdiv@f2+2
 11350  1531  318A  224D  3195   	fcall	___ftdiv
 11351  1534  0020               	movlb	0	; select bank0
 11352  1535  0820               	movf	?___ftdiv,w
 11353  1536  00B0               	movwf	___fttol@f1
 11354  1537  0821               	movf	?___ftdiv+1,w
 11355  1538  00B1               	movwf	___fttol@f1+1
 11356  1539  0822               	movf	?___ftdiv+2,w
 11357  153A  00B2               	movwf	___fttol@f1+2
 11358  153B  3189  21C6         	fcall	___fttol
 11359  153D  0020               	movlb	0	; select bank0
 11360  153E  0831               	movf	?___fttol+1,w
 11361  153F  0021               	movlb	1	; select bank1
 11362  1540  00B9               	movwf	(_current+1)^(0+128)
 11363  1541  0020               	movlb	0	; select bank0
 11364  1542  0830               	movf	?___fttol,w
 11365  1543  0021               	movlb	1	; select bank1
 11366  1544  00B8               	movwf	_current^(0+128)
 11367  1545  0008               	return
 11368  1546                     __end_of_calculateCurrent0:	
 11369                           
 11370                           	psect	text18
 11371  09C6                     __ptext18:	
 11372 ;; *************** function ___fttol *****************
 11373 ;; Defined at:
 11374 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;  f1              3   16[BANK0 ] float 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;  lval            4   25[BANK0 ] unsigned long 
 11379 ;;  exp1            1   29[BANK0 ] unsigned char 
 11380 ;;  sign1           1   24[BANK0 ] unsigned char 
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  4   16[BANK0 ] long 
 11383 ;; Registers used:
 11384 ;;		wreg, status,2, status,0
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11390 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11394 ;;Total ram usage:       14 bytes
 11395 ;; Hardware stack levels used:    1
 11396 ;; This function calls:
 11397 ;;		Nothing
 11398 ;; This function is called by:
 11399 ;;		_tempCalc
 11400 ;;		_main
 11401 ;;		_calculateCurrent0
 11402 ;;		_calculateCurrent1
 11403 ;;		_calculateCurrent2
 11404 ;;		_calculateCurrent3
 11405 ;; This function uses a non-reentrant model
 11406 ;;
 11407                           
 11408                           
 11409                           ;psect for function ___fttol
 11410  09C6                     ___fttol:	
 11411                           
 11412                           ;incstack = 0
 11413                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 11414  09C6  0020               	movlb	0	; select bank0
 11415  09C7  0830               	movf	___fttol@f1,w
 11416  09C8  00B4               	movwf	??___fttol
 11417  09C9  0831               	movf	___fttol@f1+1,w
 11418  09CA  00B5               	movwf	??___fttol+1
 11419  09CB  0832               	movf	___fttol@f1+2,w
 11420  09CC  00B6               	movwf	??___fttol+2
 11421  09CD  1003               	clrc
 11422  09CE  0D35               	rlf	??___fttol+1,w
 11423  09CF  0D36               	rlf	??___fttol+2,w
 11424  09D0  00B7               	movwf	??___fttol+3
 11425  09D1  0837               	movf	??___fttol+3,w
 11426  09D2  00BD               	movwf	___fttol@exp1
 11427  09D3  083D               	movf	___fttol@exp1,w
 11428  09D4  1D03               	btfss	3,2
 11429  09D5  29DF               	goto	l2831
 11430  09D6  3000               	movlw	0
 11431  09D7  00B3               	movwf	?___fttol+3
 11432  09D8  3000               	movlw	0
 11433  09D9  00B2               	movwf	?___fttol+2
 11434  09DA  3000               	movlw	0
 11435  09DB  00B1               	movwf	?___fttol+1
 11436  09DC  3000               	movlw	0
 11437  09DD  00B0               	movwf	?___fttol
 11438  09DE  0008               	return
 11439  09DF                     l2831:	
 11440  09DF  0830               	movf	___fttol@f1,w
 11441  09E0  00B4               	movwf	??___fttol
 11442  09E1  0831               	movf	___fttol@f1+1,w
 11443  09E2  00B5               	movwf	??___fttol+1
 11444  09E3  0832               	movf	___fttol@f1+2,w
 11445  09E4  00B6               	movwf	??___fttol+2
 11446  09E5  3017               	movlw	23
 11447  09E6                     u3055:	
 11448  09E6  36B6               	lsrf	??___fttol+2,f
 11449  09E7  0CB5               	rrf	??___fttol+1,f
 11450  09E8  0CB4               	rrf	??___fttol,f
 11451  09E9  0B89               	decfsz	9,f
 11452  09EA  29E6               	goto	u3055
 11453  09EB  0834               	movf	??___fttol,w
 11454  09EC  00B7               	movwf	??___fttol+3
 11455  09ED  0837               	movf	??___fttol+3,w
 11456  09EE  00B8               	movwf	___fttol@sign1
 11457  09EF  17B1               	bsf	___fttol@f1+1,7
 11458  09F0  30FF               	movlw	255
 11459  09F1  05B0               	andwf	___fttol@f1,f
 11460  09F2  30FF               	movlw	255
 11461  09F3  05B1               	andwf	___fttol@f1+1,f
 11462  09F4  3000               	movlw	0
 11463  09F5  05B2               	andwf	___fttol@f1+2,f
 11464  09F6  0830               	movf	___fttol@f1,w
 11465  09F7  00B9               	movwf	___fttol@lval
 11466  09F8  0831               	movf	___fttol@f1+1,w
 11467  09F9  00BA               	movwf	___fttol@lval+1
 11468  09FA  0832               	movf	___fttol@f1+2,w
 11469  09FB  00BB               	movwf	___fttol@lval+2
 11470  09FC  01BC               	clrf	___fttol@lval+3
 11471  09FD  308E               	movlw	142
 11472  09FE  02BD               	subwf	___fttol@exp1,f
 11473  09FF  1FBD               	btfss	___fttol@exp1,7
 11474  0A00  2A1D               	goto	l2851
 11475  0A01  083D               	movf	___fttol@exp1,w
 11476  0A02  3A80               	xorlw	128
 11477  0A03  3E8F               	addlw	143
 11478  0A04  1803               	skipnc
 11479  0A05  2A0F               	goto	l2849
 11480  0A06  3000               	movlw	0
 11481  0A07  00B3               	movwf	?___fttol+3
 11482  0A08  3000               	movlw	0
 11483  0A09  00B2               	movwf	?___fttol+2
 11484  0A0A  3000               	movlw	0
 11485  0A0B  00B1               	movwf	?___fttol+1
 11486  0A0C  3000               	movlw	0
 11487  0A0D  00B0               	movwf	?___fttol
 11488  0A0E  0008               	return
 11489  0A0F                     l2849:	
 11490  0A0F  3001               	movlw	1
 11491  0A10                     u3085:	
 11492  0A10  36BC               	lsrf	___fttol@lval+3,f
 11493  0A11  0CBB               	rrf	___fttol@lval+2,f
 11494  0A12  0CBA               	rrf	___fttol@lval+1,f
 11495  0A13  0CB9               	rrf	___fttol@lval,f
 11496  0A14  0B89               	decfsz	9,f
 11497  0A15  2A10               	goto	u3085
 11498  0A16  3001               	movlw	1
 11499  0A17  00B4               	movwf	??___fttol
 11500  0A18  0834               	movf	??___fttol,w
 11501  0A19  07BD               	addwf	___fttol@exp1,f
 11502  0A1A  1903               	btfsc	3,2
 11503  0A1B  2A36               	goto	l2859
 11504  0A1C  2A0F               	goto	l2849
 11505  0A1D                     l2851:	
 11506  0A1D  3018               	movlw	24
 11507  0A1E  023D               	subwf	___fttol@exp1,w
 11508  0A1F  1C03               	skipc
 11509  0A20  2A33               	goto	l855
 11510  0A21  3000               	movlw	0
 11511  0A22  00B3               	movwf	?___fttol+3
 11512  0A23  3000               	movlw	0
 11513  0A24  00B2               	movwf	?___fttol+2
 11514  0A25  3000               	movlw	0
 11515  0A26  00B1               	movwf	?___fttol+1
 11516  0A27  3000               	movlw	0
 11517  0A28  00B0               	movwf	?___fttol
 11518  0A29  0008               	return
 11519  0A2A                     l2857:	
 11520  0A2A  3001               	movlw	1
 11521  0A2B                     u3115:	
 11522  0A2B  35B9               	lslf	___fttol@lval,f
 11523  0A2C  0DBA               	rlf	___fttol@lval+1,f
 11524  0A2D  0DBB               	rlf	___fttol@lval+2,f
 11525  0A2E  0DBC               	rlf	___fttol@lval+3,f
 11526  0A2F  0B89               	decfsz	9,f
 11527  0A30  2A2B               	goto	u3115
 11528  0A31  3001               	movlw	1
 11529  0A32  02BD               	subwf	___fttol@exp1,f
 11530  0A33                     l855:	
 11531  0A33  083D               	movf	___fttol@exp1,w
 11532  0A34  1D03               	btfss	3,2
 11533  0A35  2A2A               	goto	l2857
 11534  0A36                     l2859:	
 11535  0A36  0838               	movf	___fttol@sign1,w
 11536  0A37  1903               	btfsc	3,2
 11537  0A38  2A44               	goto	l2863
 11538  0A39  09B9               	comf	___fttol@lval,f
 11539  0A3A  09BA               	comf	___fttol@lval+1,f
 11540  0A3B  09BB               	comf	___fttol@lval+2,f
 11541  0A3C  09BC               	comf	___fttol@lval+3,f
 11542  0A3D  0AB9               	incf	___fttol@lval,f
 11543  0A3E  1903               	skipnz
 11544  0A3F  0ABA               	incf	___fttol@lval+1,f
 11545  0A40  1903               	skipnz
 11546  0A41  0ABB               	incf	___fttol@lval+2,f
 11547  0A42  1903               	skipnz
 11548  0A43  0ABC               	incf	___fttol@lval+3,f
 11549  0A44                     l2863:	
 11550  0A44  083C               	movf	___fttol@lval+3,w
 11551  0A45  00B3               	movwf	?___fttol+3
 11552  0A46  083B               	movf	___fttol@lval+2,w
 11553  0A47  00B2               	movwf	?___fttol+2
 11554  0A48  083A               	movf	___fttol@lval+1,w
 11555  0A49  00B1               	movwf	?___fttol+1
 11556  0A4A  0839               	movf	___fttol@lval,w
 11557  0A4B  00B0               	movwf	?___fttol
 11558  0A4C  0008               	return
 11559  0A4D                     __end_of___fttol:	
 11560                           
 11561                           	psect	text19
 11562  0A4D                     __ptext19:	
 11563 ;; *************** function ___ftdiv *****************
 11564 ;; Defined at:
 11565 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  f2              3    0[BANK0 ] float 
 11568 ;;  f1              3    3[BANK0 ] float 
 11569 ;; Auto vars:     Size  Location     Type
 11570 ;;  f3              3   11[BANK0 ] float 
 11571 ;;  sign            1   15[BANK0 ] unsigned char 
 11572 ;;  exp             1   14[BANK0 ] unsigned char 
 11573 ;;  cntr            1   10[BANK0 ] unsigned char 
 11574 ;; Return value:  Size  Location     Type
 11575 ;;                  3    0[BANK0 ] float 
 11576 ;; Registers used:
 11577 ;;		wreg, status,2, status,0, pclath, cstack
 11578 ;; Tracked objects:
 11579 ;;		On entry : 0/0
 11580 ;;		On exit  : 0/0
 11581 ;;		Unchanged: 0/0
 11582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11583 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11584 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11585 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11586 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11587 ;;Total ram usage:       16 bytes
 11588 ;; Hardware stack levels used:    1
 11589 ;; Hardware stack levels required when called:    1
 11590 ;; This function calls:
 11591 ;;		___ftpack
 11592 ;; This function is called by:
 11593 ;;		_tempCalc
 11594 ;;		_main
 11595 ;;		_calculateCurrent0
 11596 ;;		_calculateCurrent1
 11597 ;;		_calculateCurrent2
 11598 ;;		_calculateCurrent3
 11599 ;; This function uses a non-reentrant model
 11600 ;;
 11601                           
 11602                           
 11603                           ;psect for function ___ftdiv
 11604  0A4D                     ___ftdiv:	
 11605                           
 11606                           ;incstack = 0
 11607                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11608  0A4D  0020               	movlb	0	; select bank0
 11609  0A4E  0823               	movf	___ftdiv@f1,w
 11610  0A4F  00A6               	movwf	??___ftdiv
 11611  0A50  0824               	movf	___ftdiv@f1+1,w
 11612  0A51  00A7               	movwf	??___ftdiv+1
 11613  0A52  0825               	movf	___ftdiv@f1+2,w
 11614  0A53  00A8               	movwf	??___ftdiv+2
 11615  0A54  1003               	clrc
 11616  0A55  0D27               	rlf	??___ftdiv+1,w
 11617  0A56  0D28               	rlf	??___ftdiv+2,w
 11618  0A57  00A9               	movwf	??___ftdiv+3
 11619  0A58  0829               	movf	??___ftdiv+3,w
 11620  0A59  00AE               	movwf	___ftdiv@exp
 11621  0A5A  082E               	movf	___ftdiv@exp,w
 11622  0A5B  1D03               	btfss	3,2
 11623  0A5C  2A64               	goto	l2781
 11624  0A5D  3000               	movlw	0
 11625  0A5E  00A0               	movwf	?___ftdiv
 11626  0A5F  3000               	movlw	0
 11627  0A60  00A1               	movwf	?___ftdiv+1
 11628  0A61  3000               	movlw	0
 11629  0A62  00A2               	movwf	?___ftdiv+2
 11630  0A63  0008               	return
 11631  0A64                     l2781:	
 11632  0A64  0820               	movf	___ftdiv@f2,w
 11633  0A65  00A6               	movwf	??___ftdiv
 11634  0A66  0821               	movf	___ftdiv@f2+1,w
 11635  0A67  00A7               	movwf	??___ftdiv+1
 11636  0A68  0822               	movf	___ftdiv@f2+2,w
 11637  0A69  00A8               	movwf	??___ftdiv+2
 11638  0A6A  1003               	clrc
 11639  0A6B  0D27               	rlf	??___ftdiv+1,w
 11640  0A6C  0D28               	rlf	??___ftdiv+2,w
 11641  0A6D  00A9               	movwf	??___ftdiv+3
 11642  0A6E  0829               	movf	??___ftdiv+3,w
 11643  0A6F  00AF               	movwf	___ftdiv@sign
 11644  0A70  082F               	movf	___ftdiv@sign,w
 11645  0A71  1D03               	btfss	3,2
 11646  0A72  2A7A               	goto	l2787
 11647  0A73  3000               	movlw	0
 11648  0A74  00A0               	movwf	?___ftdiv
 11649  0A75  3000               	movlw	0
 11650  0A76  00A1               	movwf	?___ftdiv+1
 11651  0A77  3000               	movlw	0
 11652  0A78  00A2               	movwf	?___ftdiv+2
 11653  0A79  0008               	return
 11654  0A7A                     l2787:	
 11655  0A7A  3000               	movlw	0
 11656  0A7B  00AB               	movwf	___ftdiv@f3
 11657  0A7C  3000               	movlw	0
 11658  0A7D  00AC               	movwf	___ftdiv@f3+1
 11659  0A7E  3000               	movlw	0
 11660  0A7F  00AD               	movwf	___ftdiv@f3+2
 11661  0A80  3089               	movlw	137
 11662  0A81  072F               	addwf	___ftdiv@sign,w
 11663  0A82  00A6               	movwf	??___ftdiv
 11664  0A83  0826               	movf	??___ftdiv,w
 11665  0A84  02AE               	subwf	___ftdiv@exp,f
 11666  0A85  0823               	movf	___ftdiv@f1,w
 11667  0A86  00A6               	movwf	??___ftdiv
 11668  0A87  0824               	movf	___ftdiv@f1+1,w
 11669  0A88  00A7               	movwf	??___ftdiv+1
 11670  0A89  0825               	movf	___ftdiv@f1+2,w
 11671  0A8A  00A8               	movwf	??___ftdiv+2
 11672  0A8B  3010               	movlw	16
 11673  0A8C                     u2975:	
 11674  0A8C  36A8               	lsrf	??___ftdiv+2,f
 11675  0A8D  0CA7               	rrf	??___ftdiv+1,f
 11676  0A8E  0CA6               	rrf	??___ftdiv,f
 11677  0A8F  0B89               	decfsz	9,f
 11678  0A90  2A8C               	goto	u2975
 11679  0A91  0826               	movf	??___ftdiv,w
 11680  0A92  00A9               	movwf	??___ftdiv+3
 11681  0A93  0829               	movf	??___ftdiv+3,w
 11682  0A94  00AF               	movwf	___ftdiv@sign
 11683  0A95  0820               	movf	___ftdiv@f2,w
 11684  0A96  00A6               	movwf	??___ftdiv
 11685  0A97  0821               	movf	___ftdiv@f2+1,w
 11686  0A98  00A7               	movwf	??___ftdiv+1
 11687  0A99  0822               	movf	___ftdiv@f2+2,w
 11688  0A9A  00A8               	movwf	??___ftdiv+2
 11689  0A9B  3010               	movlw	16
 11690  0A9C                     u2985:	
 11691  0A9C  36A8               	lsrf	??___ftdiv+2,f
 11692  0A9D  0CA7               	rrf	??___ftdiv+1,f
 11693  0A9E  0CA6               	rrf	??___ftdiv,f
 11694  0A9F  0B89               	decfsz	9,f
 11695  0AA0  2A9C               	goto	u2985
 11696  0AA1  0826               	movf	??___ftdiv,w
 11697  0AA2  00A9               	movwf	??___ftdiv+3
 11698  0AA3  0829               	movf	??___ftdiv+3,w
 11699  0AA4  06AF               	xorwf	___ftdiv@sign,f
 11700  0AA5  3080               	movlw	128
 11701  0AA6  00A6               	movwf	??___ftdiv
 11702  0AA7  0826               	movf	??___ftdiv,w
 11703  0AA8  05AF               	andwf	___ftdiv@sign,f
 11704  0AA9  17A4               	bsf	___ftdiv@f1+1,7
 11705  0AAA  30FF               	movlw	255
 11706  0AAB  05A3               	andwf	___ftdiv@f1,f
 11707  0AAC  30FF               	movlw	255
 11708  0AAD  05A4               	andwf	___ftdiv@f1+1,f
 11709  0AAE  3000               	movlw	0
 11710  0AAF  05A5               	andwf	___ftdiv@f1+2,f
 11711  0AB0  17A1               	bsf	___ftdiv@f2+1,7
 11712  0AB1  30FF               	movlw	255
 11713  0AB2  05A0               	andwf	___ftdiv@f2,f
 11714  0AB3  30FF               	movlw	255
 11715  0AB4  05A1               	andwf	___ftdiv@f2+1,f
 11716  0AB5  3000               	movlw	0
 11717  0AB6  05A2               	andwf	___ftdiv@f2+2,f
 11718  0AB7  3018               	movlw	24
 11719  0AB8  00A6               	movwf	??___ftdiv
 11720  0AB9  0826               	movf	??___ftdiv,w
 11721  0ABA  00AA               	movwf	___ftdiv@cntr
 11722  0ABB                     l2801:	
 11723  0ABB  3001               	movlw	1
 11724  0ABC                     u2995:	
 11725  0ABC  35AB               	lslf	___ftdiv@f3,f
 11726  0ABD  0DAC               	rlf	___ftdiv@f3+1,f
 11727  0ABE  0DAD               	rlf	___ftdiv@f3+2,f
 11728  0ABF  0B89               	decfsz	9,f
 11729  0AC0  2ABC               	goto	u2995
 11730  0AC1  0822               	movf	___ftdiv@f2+2,w
 11731  0AC2  0225               	subwf	___ftdiv@f1+2,w
 11732  0AC3  1D03               	skipz
 11733  0AC4  2ACB               	goto	u3005
 11734  0AC5  0821               	movf	___ftdiv@f2+1,w
 11735  0AC6  0224               	subwf	___ftdiv@f1+1,w
 11736  0AC7  1D03               	skipz
 11737  0AC8  2ACB               	goto	u3005
 11738  0AC9  0820               	movf	___ftdiv@f2,w
 11739  0ACA  0223               	subwf	___ftdiv@f1,w
 11740  0ACB                     u3005:	
 11741  0ACB  1C03               	skipc
 11742  0ACC  2AD4               	goto	l2809
 11743  0ACD  0820               	movf	___ftdiv@f2,w
 11744  0ACE  02A3               	subwf	___ftdiv@f1,f
 11745  0ACF  0821               	movf	___ftdiv@f2+1,w
 11746  0AD0  3BA4               	subwfb	___ftdiv@f1+1,f
 11747  0AD1  0822               	movf	___ftdiv@f2+2,w
 11748  0AD2  3BA5               	subwfb	___ftdiv@f1+2,f
 11749  0AD3  142B               	bsf	___ftdiv@f3,0
 11750  0AD4                     l2809:	
 11751  0AD4  3001               	movlw	1
 11752  0AD5                     u3015:	
 11753  0AD5  35A3               	lslf	___ftdiv@f1,f
 11754  0AD6  0DA4               	rlf	___ftdiv@f1+1,f
 11755  0AD7  0DA5               	rlf	___ftdiv@f1+2,f
 11756  0AD8  0B89               	decfsz	9,f
 11757  0AD9  2AD5               	goto	u3015
 11758  0ADA  3001               	movlw	1
 11759  0ADB  02AA               	subwf	___ftdiv@cntr,f
 11760  0ADC  1D03               	btfss	3,2
 11761  0ADD  2ABB               	goto	l2801
 11762  0ADE  082B               	movf	___ftdiv@f3,w
 11763  0ADF  00F0               	movwf	___ftpack@arg
 11764  0AE0  082C               	movf	___ftdiv@f3+1,w
 11765  0AE1  00F1               	movwf	___ftpack@arg+1
 11766  0AE2  082D               	movf	___ftdiv@f3+2,w
 11767  0AE3  00F2               	movwf	___ftpack@arg+2
 11768  0AE4  082E               	movf	___ftdiv@exp,w
 11769  0AE5  00A6               	movwf	??___ftdiv
 11770  0AE6  0826               	movf	??___ftdiv,w
 11771  0AE7  00F3               	movwf	___ftpack@exp
 11772  0AE8  082F               	movf	___ftdiv@sign,w
 11773  0AE9  00A7               	movwf	??___ftdiv+1
 11774  0AEA  0827               	movf	??___ftdiv+1,w
 11775  0AEB  00F4               	movwf	___ftpack@sign
 11776  0AEC  3197  271A         	fcall	___ftpack
 11777  0AEE  0870               	movf	?___ftpack,w
 11778  0AEF  0020               	movlb	0	; select bank0
 11779  0AF0  00A0               	movwf	?___ftdiv
 11780  0AF1  0871               	movf	?___ftpack+1,w
 11781  0AF2  00A1               	movwf	?___ftdiv+1
 11782  0AF3  0872               	movf	?___ftpack+2,w
 11783  0AF4  00A2               	movwf	?___ftdiv+2
 11784  0AF5  0008               	return
 11785  0AF6                     __end_of___ftdiv:	
 11786                           
 11787                           	psect	text20
 11788  1316                     __ptext20:	
 11789 ;; *************** function ___awtoft *****************
 11790 ;; Defined at:
 11791 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11792 ;; Parameters:    Size  Location     Type
 11793 ;;  c               2    8[COMMON] int 
 11794 ;; Auto vars:     Size  Location     Type
 11795 ;;  sign            1   13[COMMON] unsigned char 
 11796 ;; Return value:  Size  Location     Type
 11797 ;;                  3    8[COMMON] float 
 11798 ;; Registers used:
 11799 ;;		wreg, status,2, status,0, pclath, cstack
 11800 ;; Tracked objects:
 11801 ;;		On entry : 0/0
 11802 ;;		On exit  : 0/0
 11803 ;;		Unchanged: 0/0
 11804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11805 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11808 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11809 ;;Total ram usage:        6 bytes
 11810 ;; Hardware stack levels used:    1
 11811 ;; Hardware stack levels required when called:    1
 11812 ;; This function calls:
 11813 ;;		___ftpack
 11814 ;; This function is called by:
 11815 ;;		_tempCalc
 11816 ;;		_main
 11817 ;;		_calculateCurrent0
 11818 ;;		_calculateCurrent1
 11819 ;;		_calculateCurrent2
 11820 ;;		_calculateCurrent3
 11821 ;;		_log
 11822 ;; This function uses a non-reentrant model
 11823 ;;
 11824                           
 11825                           
 11826                           ;psect for function ___awtoft
 11827  1316                     ___awtoft:	
 11828                           
 11829                           ;incstack = 0
 11830                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11831  1316  01FD               	clrf	___awtoft@sign
 11832  1317  1FF9               	btfss	___awtoft@c+1,7
 11833  1318  2B20               	goto	l2445
 11834  1319  09F8               	comf	___awtoft@c,f
 11835  131A  09F9               	comf	___awtoft@c+1,f
 11836  131B  0AF8               	incf	___awtoft@c,f
 11837  131C  1903               	skipnz
 11838  131D  0AF9               	incf	___awtoft@c+1,f
 11839  131E  01FD               	clrf	___awtoft@sign
 11840  131F  0AFD               	incf	___awtoft@sign,f
 11841  1320                     l2445:	
 11842  1320  0878               	movf	___awtoft@c,w
 11843  1321  00F0               	movwf	___ftpack@arg
 11844  1322  0879               	movf	___awtoft@c+1,w
 11845  1323  00F1               	movwf	___ftpack@arg+1
 11846  1324  01F2               	clrf	___ftpack@arg+2
 11847  1325  308E               	movlw	142
 11848  1326  00FB               	movwf	??___awtoft
 11849  1327  087B               	movf	??___awtoft,w
 11850  1328  00F3               	movwf	___ftpack@exp
 11851  1329  087D               	movf	___awtoft@sign,w
 11852  132A  00FC               	movwf	??___awtoft+1
 11853  132B  087C               	movf	??___awtoft+1,w
 11854  132C  00F4               	movwf	___ftpack@sign
 11855  132D  3197  271A         	fcall	___ftpack
 11856  132F  0870               	movf	?___ftpack,w
 11857  1330  00F8               	movwf	?___awtoft
 11858  1331  0871               	movf	?___ftpack+1,w
 11859  1332  00F9               	movwf	?___awtoft+1
 11860  1333  0872               	movf	?___ftpack+2,w
 11861  1334  00FA               	movwf	?___awtoft+2
 11862  1335  0008               	return
 11863  1336                     __end_of___awtoft:	
 11864                           
 11865                           	psect	text21
 11866  171A                     __ptext21:	
 11867 ;; *************** function ___ftpack *****************
 11868 ;; Defined at:
 11869 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;  arg             3    0[COMMON] unsigned um
 11872 ;;  exp             1    3[COMMON] unsigned char 
 11873 ;;  sign            1    4[COMMON] unsigned char 
 11874 ;; Auto vars:     Size  Location     Type
 11875 ;;		None
 11876 ;; Return value:  Size  Location     Type
 11877 ;;                  3    0[COMMON] float 
 11878 ;; Registers used:
 11879 ;;		wreg, status,2, status,0
 11880 ;; Tracked objects:
 11881 ;;		On entry : 0/0
 11882 ;;		On exit  : 0/0
 11883 ;;		Unchanged: 0/0
 11884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11885 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11887 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11888 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11889 ;;Total ram usage:        8 bytes
 11890 ;; Hardware stack levels used:    1
 11891 ;; This function calls:
 11892 ;;		Nothing
 11893 ;; This function is called by:
 11894 ;;		___awtoft
 11895 ;;		___ftadd
 11896 ;;		___ftdiv
 11897 ;;		___ftmul
 11898 ;; This function uses a non-reentrant model
 11899 ;;
 11900                           
 11901                           
 11902                           ;psect for function ___ftpack
 11903  171A                     ___ftpack:	
 11904                           
 11905                           ;incstack = 0
 11906                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11907  171A  0873               	movf	___ftpack@exp,w
 11908  171B  1903               	btfsc	3,2
 11909  171C  2F22               	goto	l2251
 11910  171D  0872               	movf	___ftpack@arg+2,w
 11911  171E  0471               	iorwf	___ftpack@arg+1,w
 11912  171F  0470               	iorwf	___ftpack@arg,w
 11913  1720  1D03               	skipz
 11914  1721  2F33               	goto	l2257
 11915  1722                     l2251:	
 11916  1722  3000               	movlw	0
 11917  1723  00F0               	movwf	?___ftpack
 11918  1724  3000               	movlw	0
 11919  1725  00F1               	movwf	?___ftpack+1
 11920  1726  3000               	movlw	0
 11921  1727  00F2               	movwf	?___ftpack+2
 11922  1728  0008               	return
 11923  1729                     l2255:	
 11924  1729  3001               	movlw	1
 11925  172A  00F5               	movwf	??___ftpack
 11926  172B  0875               	movf	??___ftpack,w
 11927  172C  07F3               	addwf	___ftpack@exp,f
 11928  172D  3001               	movlw	1
 11929  172E                     u2085:	
 11930  172E  36F2               	lsrf	___ftpack@arg+2,f
 11931  172F  0CF1               	rrf	___ftpack@arg+1,f
 11932  1730  0CF0               	rrf	___ftpack@arg,f
 11933  1731  0B89               	decfsz	9,f
 11934  1732  2F2E               	goto	u2085
 11935  1733                     l2257:	
 11936  1733  30FE               	movlw	254
 11937  1734  0572               	andwf	___ftpack@arg+2,w
 11938  1735  1903               	btfsc	3,2
 11939  1736  2F4C               	goto	l764
 11940  1737  2F29               	goto	l2255
 11941  1738                     l2259:	
 11942  1738  3001               	movlw	1
 11943  1739  00F5               	movwf	??___ftpack
 11944  173A  0875               	movf	??___ftpack,w
 11945  173B  07F3               	addwf	___ftpack@exp,f
 11946  173C  3001               	movlw	1
 11947  173D  07F0               	addwf	___ftpack@arg,f
 11948  173E  3000               	movlw	0
 11949  173F  1803               	skipnc
 11950  1740  3001               	movlw	1
 11951  1741  07F1               	addwf	___ftpack@arg+1,f
 11952  1742  3000               	movlw	0
 11953  1743  1803               	skipnc
 11954  1744  3001               	movlw	1
 11955  1745  07F2               	addwf	___ftpack@arg+2,f
 11956  1746  3001               	movlw	1
 11957  1747                     u2105:	
 11958  1747  36F2               	lsrf	___ftpack@arg+2,f
 11959  1748  0CF1               	rrf	___ftpack@arg+1,f
 11960  1749  0CF0               	rrf	___ftpack@arg,f
 11961  174A  0B89               	decfsz	9,f
 11962  174B  2F47               	goto	u2105
 11963  174C                     l764:	
 11964  174C  30FF               	movlw	255
 11965  174D  0572               	andwf	___ftpack@arg+2,w
 11966  174E  1903               	btfsc	3,2
 11967  174F  2F59               	goto	l2267
 11968  1750  2F38               	goto	l2259
 11969  1751                     l2265:	
 11970  1751  3001               	movlw	1
 11971  1752  02F3               	subwf	___ftpack@exp,f
 11972  1753  3001               	movlw	1
 11973  1754                     u2125:	
 11974  1754  35F0               	lslf	___ftpack@arg,f
 11975  1755  0DF1               	rlf	___ftpack@arg+1,f
 11976  1756  0DF2               	rlf	___ftpack@arg+2,f
 11977  1757  0B89               	decfsz	9,f
 11978  1758  2F54               	goto	u2125
 11979  1759                     l2267:	
 11980  1759  1BF1               	btfsc	___ftpack@arg+1,7
 11981  175A  2F5F               	goto	l771
 11982  175B  3002               	movlw	2
 11983  175C  0273               	subwf	___ftpack@exp,w
 11984  175D  1803               	skipnc
 11985  175E  2F51               	goto	l2265
 11986  175F                     l771:	
 11987  175F  1873               	btfsc	___ftpack@exp,0
 11988  1760  2F67               	goto	l772
 11989  1761  30FF               	movlw	255
 11990  1762  05F0               	andwf	___ftpack@arg,f
 11991  1763  307F               	movlw	127
 11992  1764  05F1               	andwf	___ftpack@arg+1,f
 11993  1765  30FF               	movlw	255
 11994  1766  05F2               	andwf	___ftpack@arg+2,f
 11995  1767                     l772:	
 11996  1767  1003               	clrc
 11997  1768  0CF3               	rrf	___ftpack@exp,f
 11998  1769  0873               	movf	___ftpack@exp,w
 11999  176A  00F5               	movwf	??___ftpack
 12000  176B  01F6               	clrf	??___ftpack+1
 12001  176C  01F7               	clrf	??___ftpack+2
 12002  176D  3010               	movlw	16
 12003  176E                     u2165:	
 12004  176E  35F5               	lslf	??___ftpack,f
 12005  176F  0DF6               	rlf	??___ftpack+1,f
 12006  1770  0DF7               	rlf	??___ftpack+2,f
 12007  1771  0B89               	decfsz	9,f
 12008  1772  2F6E               	goto	u2165
 12009  1773  0875               	movf	??___ftpack,w
 12010  1774  04F0               	iorwf	___ftpack@arg,f
 12011  1775  0876               	movf	??___ftpack+1,w
 12012  1776  04F1               	iorwf	___ftpack@arg+1,f
 12013  1777  0877               	movf	??___ftpack+2,w
 12014  1778  04F2               	iorwf	___ftpack@arg+2,f
 12015  1779  0874               	movf	___ftpack@sign,w
 12016  177A  1903               	btfsc	3,2
 12017  177B  0008               	return
 12018  177C  17F2               	bsf	___ftpack@arg+2,7
 12019  177D  0008               	return
 12020  177E                     __end_of___ftpack:	
 12021                           
 12022                           	psect	text22
 12023  1417                     __ptext22:	
 12024 ;; *************** function _SYSTEM_Initialize *****************
 12025 ;; Defined at:
 12026 ;;		line 71 in file "system.c"
 12027 ;; Parameters:    Size  Location     Type
 12028 ;;		None
 12029 ;; Auto vars:     Size  Location     Type
 12030 ;;		None
 12031 ;; Return value:  Size  Location     Type
 12032 ;;                  1    wreg      void 
 12033 ;; Registers used:
 12034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12035 ;; Tracked objects:
 12036 ;;		On entry : 0/0
 12037 ;;		On exit  : 0/0
 12038 ;;		Unchanged: 0/0
 12039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12044 ;;Total ram usage:        2 bytes
 12045 ;; Hardware stack levels used:    1
 12046 ;; Hardware stack levels required when called:    3
 12047 ;; This function calls:
 12048 ;;		_ADC_Initialize
 12049 ;;		_Init_Battery_State_Machine
 12050 ;;		_LCDClear
 12051 ;;		_LCDInit
 12052 ;;		_OSCILLATOR_Initialize
 12053 ;;		_PIN_MANAGER_Initialize
 12054 ;;		_PWM_Initialize
 12055 ;;		_TMR2_Initialize
 12056 ;;		_TMR4_Initialize
 12057 ;; This function is called by:
 12058 ;;		_main
 12059 ;; This function uses a non-reentrant model
 12060 ;;
 12061                           
 12062                           
 12063                           ;psect for function _SYSTEM_Initialize
 12064  1417                     _SYSTEM_Initialize:	
 12065                           
 12066                           ;system.c: 73: PIN_MANAGER_Initialize();
 12067                           
 12068                           ;incstack = 0
 12069                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12070  1417  3193  23E0  3194   	fcall	_PIN_MANAGER_Initialize
 12071                           
 12072                           ;system.c: 74: OSCILLATOR_Initialize();
 12073  141A  3192  2205  3194   	fcall	_OSCILLATOR_Initialize
 12074                           
 12075                           ;system.c: 76: ADC_Initialize();
 12076  141D  3192  22D8  3194   	fcall	_ADC_Initialize
 12077                           
 12078                           ;system.c: 77: PWM_Initialize();
 12079  1420  3192  22F7  3194   	fcall	_PWM_Initialize
 12080                           
 12081                           ;system.c: 79: TMR2_Initialize();
 12082  1423  3192  221A  3194   	fcall	_TMR2_Initialize
 12083                           
 12084                           ;system.c: 80: TMR4_Initialize();
 12085  1426  3192  2228  3194   	fcall	_TMR4_Initialize
 12086                           
 12087                           ;system.c: 81: Init_Battery_State_Machine(0);
 12088  1429  3000               	movlw	0
 12089  142A  3193  23AD  3194   	fcall	_Init_Battery_State_Machine
 12090                           
 12091                           ;system.c: 82: Init_Battery_State_Machine(1);
 12092  142D  3001               	movlw	1
 12093  142E  3193  23AD  3194   	fcall	_Init_Battery_State_Machine
 12094                           
 12095                           ;system.c: 83: LCDInit();
 12096  1431  3194  2450  3194   	fcall	_LCDInit
 12097                           
 12098                           ;system.c: 84: _delay((unsigned long)((200)*(32000000/4000.0)));
 12099  1434  3009               	movlw	9
 12100  1435  00FC               	movwf	??_SYSTEM_Initialize+1
 12101  1436  301E               	movlw	30
 12102  1437  00FB               	movwf	??_SYSTEM_Initialize
 12103  1438  30E4               	movlw	228
 12104  1439                     u4137:	
 12105  1439  0B89               	decfsz	9,f
 12106  143A  2C39               	goto	u4137
 12107  143B  0BFB               	decfsz	??_SYSTEM_Initialize,f
 12108  143C  2C39               	goto	u4137
 12109  143D  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 12110  143E  2C39               	goto	u4137
 12111  143F  3200               	nop2
 12112                           
 12113                           ;system.c: 85: LCDClear();
 12114  1440  3193  235B  3194   	fcall	_LCDClear
 12115                           
 12116                           ;system.c: 86: _delay((unsigned long)((200)*(32000000/4000.0)));
 12117  1443  3009               	movlw	9
 12118  1444  00FC               	movwf	??_SYSTEM_Initialize+1
 12119  1445  301E               	movlw	30
 12120  1446  00FB               	movwf	??_SYSTEM_Initialize
 12121  1447  30E4               	movlw	228
 12122  1448                     u4147:	
 12123  1448  0B89               	decfsz	9,f
 12124  1449  2C48               	goto	u4147
 12125  144A  0BFB               	decfsz	??_SYSTEM_Initialize,f
 12126  144B  2C48               	goto	u4147
 12127  144C  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 12128  144D  2C48               	goto	u4147
 12129  144E  3200               	nop2
 12130  144F  0008               	return
 12131  1450                     __end_of_SYSTEM_Initialize:	
 12132                           
 12133                           	psect	text23
 12134  1228                     __ptext23:	
 12135 ;; *************** function _TMR4_Initialize *****************
 12136 ;; Defined at:
 12137 ;;		line 25 in file "tmr.c"
 12138 ;; Parameters:    Size  Location     Type
 12139 ;;		None
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;		None
 12142 ;; Return value:  Size  Location     Type
 12143 ;;                  1    wreg      void 
 12144 ;; Registers used:
 12145 ;;		wreg, status,2
 12146 ;; Tracked objects:
 12147 ;;		On entry : 0/0
 12148 ;;		On exit  : 0/0
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12155 ;;Total ram usage:        0 bytes
 12156 ;; Hardware stack levels used:    1
 12157 ;; This function calls:
 12158 ;;		Nothing
 12159 ;; This function is called by:
 12160 ;;		_SYSTEM_Initialize
 12161 ;; This function uses a non-reentrant model
 12162 ;;
 12163                           
 12164                           
 12165                           ;psect for function _TMR4_Initialize
 12166  1228                     _TMR4_Initialize:	
 12167                           
 12168                           ;tmr.c: 27: T4CON = 0x00;
 12169                           
 12170                           ;incstack = 0
 12171                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 12172  1228  0025               	movlb	5	; select bank5
 12173  1229  0194               	clrf	20	;volatile
 12174                           
 12175                           ;tmr.c: 29: T4CLKCON = 0x01;
 12176  122A  3001               	movlw	1
 12177  122B  0096               	movwf	22	;volatile
 12178                           
 12179                           ;tmr.c: 31: T4HLT = 0x00;
 12180  122C  0195               	clrf	21	;volatile
 12181                           
 12182                           ;tmr.c: 33: T4RST = 0x00;
 12183  122D  0197               	clrf	23	;volatile
 12184                           
 12185                           ;tmr.c: 35: T4PR = 0xFE;
 12186  122E  30FE               	movlw	254
 12187  122F  0093               	movwf	19	;volatile
 12188                           
 12189                           ;tmr.c: 39: T4TMR = 0x00;
 12190  1230  0192               	clrf	18	;volatile
 12191                           
 12192                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 12193  1231  002E               	movlb	14	; select bank14
 12194  1232  1190               	bcf	16,3	;volatile
 12195                           
 12196                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 12197  1233  0025               	movlb	5	; select bank5
 12198  1234  1794               	bsf	20,7	;volatile
 12199  1235  0008               	return
 12200  1236                     __end_of_TMR4_Initialize:	
 12201                           
 12202                           	psect	text24
 12203  121A                     __ptext24:	
 12204 ;; *************** function _TMR2_Initialize *****************
 12205 ;; Defined at:
 12206 ;;		line 3 in file "tmr.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;		None
 12209 ;; Auto vars:     Size  Location     Type
 12210 ;;		None
 12211 ;; Return value:  Size  Location     Type
 12212 ;;                  1    wreg      void 
 12213 ;; Registers used:
 12214 ;;		wreg, status,2
 12215 ;; Tracked objects:
 12216 ;;		On entry : 0/0
 12217 ;;		On exit  : 0/0
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12224 ;;Total ram usage:        0 bytes
 12225 ;; Hardware stack levels used:    1
 12226 ;; This function calls:
 12227 ;;		Nothing
 12228 ;; This function is called by:
 12229 ;;		_SYSTEM_Initialize
 12230 ;; This function uses a non-reentrant model
 12231 ;;
 12232                           
 12233                           
 12234                           ;psect for function _TMR2_Initialize
 12235  121A                     _TMR2_Initialize:	
 12236                           
 12237                           ;tmr.c: 5: T2CON = 0x00;
 12238                           
 12239                           ;incstack = 0
 12240                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12241  121A  0025               	movlb	5	; select bank5
 12242  121B  018E               	clrf	14	;volatile
 12243                           
 12244                           ;tmr.c: 7: T2CLKCON = 0x01;
 12245  121C  3001               	movlw	1
 12246  121D  0090               	movwf	16	;volatile
 12247                           
 12248                           ;tmr.c: 9: T2HLT = 0x00;
 12249  121E  018F               	clrf	15	;volatile
 12250                           
 12251                           ;tmr.c: 11: T2RST = 0x00;
 12252  121F  0191               	clrf	17	;volatile
 12253                           
 12254                           ;tmr.c: 13: T2PR = 0xFE;
 12255  1220  30FE               	movlw	254
 12256  1221  008D               	movwf	13	;volatile
 12257                           
 12258                           ;tmr.c: 18: T2TMR = 0x00;
 12259  1222  018C               	clrf	12	;volatile
 12260                           
 12261                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 12262  1223  002E               	movlb	14	; select bank14
 12263  1224  1090               	bcf	16,1	;volatile
 12264                           
 12265                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 12266  1225  0025               	movlb	5	; select bank5
 12267  1226  178E               	bsf	14,7	;volatile
 12268  1227  0008               	return
 12269  1228                     __end_of_TMR2_Initialize:	
 12270                           
 12271                           	psect	text25
 12272  12F7                     __ptext25:	
 12273 ;; *************** function _PWM_Initialize *****************
 12274 ;; Defined at:
 12275 ;;		line 3 in file "pwm.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;		None
 12278 ;; Auto vars:     Size  Location     Type
 12279 ;;		None
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  1    wreg      void 
 12282 ;; Registers used:
 12283 ;;		wreg, status,2, status,0
 12284 ;; Tracked objects:
 12285 ;;		On entry : 0/0
 12286 ;;		On exit  : 0/0
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12293 ;;Total ram usage:        0 bytes
 12294 ;; Hardware stack levels used:    1
 12295 ;; This function calls:
 12296 ;;		Nothing
 12297 ;; This function is called by:
 12298 ;;		_SYSTEM_Initialize
 12299 ;; This function uses a non-reentrant model
 12300 ;;
 12301                           
 12302                           
 12303                           ;psect for function _PWM_Initialize
 12304  12F7                     _PWM_Initialize:	
 12305                           
 12306                           ;pwm.c: 5: PWM6CON = 0x80;
 12307                           
 12308                           ;incstack = 0
 12309                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 12310  12F7  3080               	movlw	128
 12311  12F8  0027               	movlb	7	; select bank7
 12312  12F9  008E               	movwf	14	;volatile
 12313                           
 12314                           ;pwm.c: 7: PWM6DCH = 0x00;
 12315  12FA  018D               	clrf	13	;volatile
 12316                           
 12317                           ;pwm.c: 9: PWM6DCL = 0x00;
 12318  12FB  018C               	clrf	12	;volatile
 12319                           
 12320                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 12321  12FC  0024               	movlb	4	; select bank4
 12322  12FD  081F               	movf	31,w	;volatile
 12323  12FE  39F3               	andlw	-13
 12324  12FF  3804               	iorlw	4
 12325  1300  009F               	movwf	31	;volatile
 12326                           
 12327                           ;pwm.c: 14: PWM7CON = 0x80;
 12328  1301  3080               	movlw	128
 12329  1302  0027               	movlb	7	; select bank7
 12330  1303  0092               	movwf	18	;volatile
 12331                           
 12332                           ;pwm.c: 16: PWM7DCH = 0x00;
 12333  1304  0191               	clrf	17	;volatile
 12334                           
 12335                           ;pwm.c: 18: PWM7DCL = 0x00;
 12336  1305  0190               	clrf	16	;volatile
 12337                           
 12338                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 12339  1306  0024               	movlb	4	; select bank4
 12340  1307  081F               	movf	31,w	;volatile
 12341  1308  39CF               	andlw	-49
 12342  1309  3820               	iorlw	32
 12343  130A  009F               	movwf	31	;volatile
 12344                           
 12345                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 12346  130B  0026               	movlb	6	; select bank6
 12347  130C  178E               	bsf	14,7	;volatile
 12348                           
 12349                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 12350  130D  160E               	bsf	14,4	;volatile
 12351                           
 12352                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 12353  130E  300F               	movlw	15
 12354  130F  048E               	iorwf	14,f	;volatile
 12355                           
 12356                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 12357  1310  0024               	movlb	4	; select bank4
 12358  1311  081E               	movf	30,w	;volatile
 12359  1312  39FC               	andlw	-4
 12360  1313  3801               	iorlw	1
 12361  1314  009E               	movwf	30	;volatile
 12362  1315  0008               	return
 12363  1316                     __end_of_PWM_Initialize:	
 12364                           
 12365                           	psect	text26
 12366  13E0                     __ptext26:	
 12367 ;; *************** function _PIN_MANAGER_Initialize *****************
 12368 ;; Defined at:
 12369 ;;		line 5 in file "pin_manager.c"
 12370 ;; Parameters:    Size  Location     Type
 12371 ;;		None
 12372 ;; Auto vars:     Size  Location     Type
 12373 ;;  state           1    0[COMMON] char 
 12374 ;; Return value:  Size  Location     Type
 12375 ;;                  1    wreg      void 
 12376 ;; Registers used:
 12377 ;;		wreg, status,2
 12378 ;; Tracked objects:
 12379 ;;		On entry : 0/0
 12380 ;;		On exit  : 0/0
 12381 ;;		Unchanged: 0/0
 12382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12387 ;;Total ram usage:        1 bytes
 12388 ;; Hardware stack levels used:    1
 12389 ;; This function calls:
 12390 ;;		Nothing
 12391 ;; This function is called by:
 12392 ;;		_SYSTEM_Initialize
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           
 12397                           ;psect for function _PIN_MANAGER_Initialize
 12398  13E0                     _PIN_MANAGER_Initialize:	
 12399                           
 12400                           ;pin_manager.c: 7: LATA = 0x20;
 12401                           
 12402                           ;incstack = 0
 12403                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12404  13E0  3020               	movlw	32
 12405  13E1  0020               	movlb	0	; select bank0
 12406  13E2  0096               	movwf	22	;volatile
 12407                           
 12408                           ;pin_manager.c: 8: LATB = 0x00;
 12409  13E3  0197               	clrf	23	;volatile
 12410                           
 12411                           ;pin_manager.c: 9: LATC = 0x00;
 12412  13E4  0198               	clrf	24	;volatile
 12413                           
 12414                           ;pin_manager.c: 11: WPUA = 0x00;
 12415  13E5  003E               	movlb	30	; select bank30
 12416  13E6  01B9               	clrf	57	;volatile
 12417                           
 12418                           ;pin_manager.c: 12: WPUB = 0x00;
 12419  13E7  01C4               	clrf	68	;volatile
 12420                           
 12421                           ;pin_manager.c: 13: WPUC = 0x00;
 12422  13E8  01CF               	clrf	79	;volatile
 12423                           
 12424                           ;pin_manager.c: 14: WPUE = 0x8;
 12425  13E9  3008               	movlw	8
 12426  13EA  00E5               	movwf	101	;volatile
 12427                           
 12428                           ;pin_manager.c: 16: TRISA = 0x00;
 12429  13EB  0020               	movlb	0	; select bank0
 12430  13EC  0191               	clrf	17	;volatile
 12431                           
 12432                           ;pin_manager.c: 17: TRISB = 0x0E;
 12433  13ED  300E               	movlw	14
 12434  13EE  0092               	movwf	18	;volatile
 12435                           
 12436                           ;pin_manager.c: 18: TRISC = 0xFF;
 12437  13EF  30FF               	movlw	255
 12438  13F0  0093               	movwf	19	;volatile
 12439                           
 12440                           ;pin_manager.c: 20: ANSELA = 0x00;
 12441  13F1  003E               	movlb	30	; select bank30
 12442  13F2  01B8               	clrf	56	;volatile
 12443                           
 12444                           ;pin_manager.c: 21: ANSELB = 0x0A;
 12445  13F3  300A               	movlw	10
 12446  13F4  00C3               	movwf	67	;volatile
 12447                           
 12448                           ;pin_manager.c: 22: ANSELC = 0xFF;
 12449  13F5  30FF               	movlw	255
 12450  13F6  00CE               	movwf	78	;volatile
 12451                           
 12452                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 12453  13F7  002E               	movlb	14	; select bank14
 12454  13F8  1216               	bcf	22,4	;volatile
 12455                           
 12456                           ;pin_manager.c: 26: int8_t state = GIE;
 12457  13F9  3000               	movlw	0
 12458  13FA  1B8B               	btfsc	11,7	;volatile
 12459  13FB  3001               	movlw	1
 12460  13FC  00F0               	movwf	PIN_MANAGER_Initialize@state
 12461                           
 12462                           ;pin_manager.c: 27: GIE = 0;
 12463  13FD  138B               	bcf	11,7	;volatile
 12464                           
 12465                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 12466  13FE  3055               	movlw	85
 12467  13FF  003D               	movlb	29	; select bank29
 12468  1400  008F               	movwf	15	;volsfr
 12469                           
 12470                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 12471  1401  30AA               	movlw	170
 12472  1402  008F               	movwf	15	;volsfr
 12473                           
 12474                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 12475  1403  100F               	bcf	15,0	;volsfr
 12476                           
 12477                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 12478  1404  300E               	movlw	14
 12479  1405  003E               	movlb	30	; select bank30
 12480  1406  0096               	movwf	22	;volatile
 12481                           
 12482                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 12483  1407  300F               	movlw	15
 12484  1408  0097               	movwf	23	;volatile
 12485                           
 12486                           ;pin_manager.c: 34: RB5PPS = 0x09;
 12487  1409  3009               	movlw	9
 12488  140A  009D               	movwf	29	;volatile
 12489                           
 12490                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 12491  140B  3055               	movlw	85
 12492  140C  003D               	movlb	29	; select bank29
 12493  140D  008F               	movwf	15	;volsfr
 12494                           
 12495                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 12496  140E  30AA               	movlw	170
 12497  140F  008F               	movwf	15	;volsfr
 12498                           
 12499                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 12500  1410  140F               	bsf	15,0	;volsfr
 12501                           
 12502                           ;pin_manager.c: 38: GIE = state;
 12503  1411  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12504  1412  2C15               	goto	u2710
 12505  1413  178B               	bsf	11,7	;volatile
 12506  1414  0008               	return
 12507  1415                     u2710:	
 12508  1415  138B               	bcf	11,7	;volatile
 12509  1416  0008               	return
 12510  1417                     __end_of_PIN_MANAGER_Initialize:	
 12511                           
 12512                           	psect	text27
 12513  1205                     __ptext27:	
 12514 ;; *************** function _OSCILLATOR_Initialize *****************
 12515 ;; Defined at:
 12516 ;;		line 89 in file "system.c"
 12517 ;; Parameters:    Size  Location     Type
 12518 ;;		None
 12519 ;; Auto vars:     Size  Location     Type
 12520 ;;		None
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  1    wreg      void 
 12523 ;; Registers used:
 12524 ;;		wreg, status,2
 12525 ;; Tracked objects:
 12526 ;;		On entry : 0/0
 12527 ;;		On exit  : 0/0
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12534 ;;Total ram usage:        0 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; This function calls:
 12537 ;;		Nothing
 12538 ;; This function is called by:
 12539 ;;		_SYSTEM_Initialize
 12540 ;; This function uses a non-reentrant model
 12541 ;;
 12542                           
 12543                           
 12544                           ;psect for function _OSCILLATOR_Initialize
 12545  1205                     _OSCILLATOR_Initialize:	
 12546                           
 12547                           ;system.c: 91: OSCCON1 = 0x60;
 12548                           
 12549                           ;incstack = 0
 12550                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12551  1205  3060               	movlw	96
 12552  1206  0031               	movlb	17	; select bank17
 12553  1207  008D               	movwf	13	;volatile
 12554                           
 12555                           ;system.c: 92: OSCCON3 = 0x00;
 12556  1208  018F               	clrf	15	;volatile
 12557                           
 12558                           ;system.c: 93: OSCEN = 0x00;
 12559  1209  0191               	clrf	17	;volatile
 12560                           
 12561                           ;system.c: 94: OSCFRQ = 0x06;
 12562  120A  3006               	movlw	6
 12563  120B  0093               	movwf	19	;volatile
 12564                           
 12565                           ;system.c: 95: OSCTUNE = 0x00;
 12566  120C  0192               	clrf	18	;volatile
 12567  120D  0008               	return
 12568  120E                     __end_of_OSCILLATOR_Initialize:	
 12569                           
 12570                           	psect	text28
 12571  1450                     __ptext28:	
 12572 ;; *************** function _LCDInit *****************
 12573 ;; Defined at:
 12574 ;;		line 247 in file "lcd.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;		None
 12577 ;; Auto vars:     Size  Location     Type
 12578 ;;		None
 12579 ;; Return value:  Size  Location     Type
 12580 ;;                  1    wreg      void 
 12581 ;; Registers used:
 12582 ;;		wreg, status,2, status,0, pclath, cstack
 12583 ;; Tracked objects:
 12584 ;;		On entry : 0/0
 12585 ;;		On exit  : 0/0
 12586 ;;		Unchanged: 0/0
 12587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;Total ram usage:        1 bytes
 12593 ;; Hardware stack levels used:    1
 12594 ;; Hardware stack levels required when called:    1
 12595 ;; This function calls:
 12596 ;;		_LCDWrite
 12597 ;; This function is called by:
 12598 ;;		_SYSTEM_Initialize
 12599 ;;		_main
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603                           
 12604                           ;psect for function _LCDInit
 12605  1450                     _LCDInit:	
 12606                           
 12607                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12608                           
 12609                           ;incstack = 0
 12610                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12611  1450  0020               	movlb	0	; select bank0
 12612  1451  1011               	bcf	17,0	;volatile
 12613                           
 12614                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12615  1452  1091               	bcf	17,1	;volatile
 12616                           
 12617                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12618  1453  1111               	bcf	17,2	;volatile
 12619                           
 12620                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12621  1454  1191               	bcf	17,3	;volatile
 12622                           
 12623                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12624  1455  1211               	bcf	17,4	;volatile
 12625                           
 12626                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12627  1456  1196               	bcf	22,3	;volatile
 12628                           
 12629                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12630  1457  1216               	bcf	22,4	;volatile
 12631                           
 12632                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12633  1458  1116               	bcf	22,2	;volatile
 12634                           
 12635                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12636  1459  1016               	bcf	22,0	;volatile
 12637                           
 12638                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12639  145A  1416               	bsf	22,0	;volatile
 12640                           
 12641                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12642  145B  3021               	movlw	33
 12643  145C  00F5               	movwf	??_LCDInit
 12644  145D  0875               	movf	??_LCDInit,w
 12645  145E  00F0               	movwf	LCDWrite@data
 12646  145F  3000               	movlw	0
 12647  1460  3193  2336  3194   	fcall	_LCDWrite
 12648                           
 12649                           ;lcd.c: 269: LCDWrite(0, 0XB9);
 12650  1463  30B9               	movlw	185
 12651  1464  00F5               	movwf	??_LCDInit
 12652  1465  0875               	movf	??_LCDInit,w
 12653  1466  00F0               	movwf	LCDWrite@data
 12654  1467  3000               	movlw	0
 12655  1468  3193  2336  3194   	fcall	_LCDWrite
 12656                           
 12657                           ;lcd.c: 271: LCDWrite(0, 0x04);
 12658  146B  3004               	movlw	4
 12659  146C  00F5               	movwf	??_LCDInit
 12660  146D  0875               	movf	??_LCDInit,w
 12661  146E  00F0               	movwf	LCDWrite@data
 12662  146F  3000               	movlw	0
 12663  1470  3193  2336  3194   	fcall	_LCDWrite
 12664                           
 12665                           ;lcd.c: 273: LCDWrite(0, 0x14);
 12666  1473  3014               	movlw	20
 12667  1474  00F5               	movwf	??_LCDInit
 12668  1475  0875               	movf	??_LCDInit,w
 12669  1476  00F0               	movwf	LCDWrite@data
 12670  1477  3000               	movlw	0
 12671  1478  3193  2336  3194   	fcall	_LCDWrite
 12672                           
 12673                           ;lcd.c: 275: LCDWrite(0, 0x20);
 12674  147B  3020               	movlw	32
 12675  147C  00F5               	movwf	??_LCDInit
 12676  147D  0875               	movf	??_LCDInit,w
 12677  147E  00F0               	movwf	LCDWrite@data
 12678  147F  3000               	movlw	0
 12679  1480  3193  2336  3194   	fcall	_LCDWrite
 12680                           
 12681                           ;lcd.c: 277: LCDWrite(0, 0x0C);
 12682  1483  300C               	movlw	12
 12683  1484  00F5               	movwf	??_LCDInit
 12684  1485  0875               	movf	??_LCDInit,w
 12685  1486  00F0               	movwf	LCDWrite@data
 12686  1487  3000               	movlw	0
 12687  1488  3193  2336         	fcall	_LCDWrite
 12688  148A  0008               	return
 12689  148B                     __end_of_LCDInit:	
 12690                           
 12691                           	psect	text29
 12692  135B                     __ptext29:	
 12693 ;; *************** function _LCDClear *****************
 12694 ;; Defined at:
 12695 ;;		line 182 in file "lcd.c"
 12696 ;; Parameters:    Size  Location     Type
 12697 ;;		None
 12698 ;; Auto vars:     Size  Location     Type
 12699 ;;  index           2    9[COMMON] int 
 12700 ;; Return value:  Size  Location     Type
 12701 ;;                  1    wreg      void 
 12702 ;; Registers used:
 12703 ;;		wreg, status,2, status,0, pclath, cstack
 12704 ;; Tracked objects:
 12705 ;;		On entry : 0/0
 12706 ;;		On exit  : 0/0
 12707 ;;		Unchanged: 0/0
 12708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12711 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12712 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12713 ;;Total ram usage:        3 bytes
 12714 ;; Hardware stack levels used:    1
 12715 ;; Hardware stack levels required when called:    2
 12716 ;; This function calls:
 12717 ;;		_LCDWrite
 12718 ;;		_gotoXY
 12719 ;; This function is called by:
 12720 ;;		_SYSTEM_Initialize
 12721 ;;		_main
 12722 ;; This function uses a non-reentrant model
 12723 ;;
 12724                           
 12725                           
 12726                           ;psect for function _LCDClear
 12727  135B                     _LCDClear:	
 12728                           
 12729                           ;lcd.c: 184: int index;
 12730                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12731                           
 12732                           ;incstack = 0
 12733                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12734  135B  01F9               	clrf	LCDClear@index
 12735  135C  01FA               	clrf	LCDClear@index+1
 12736  135D  087A               	movf	LCDClear@index+1,w
 12737  135E  3A80               	xorlw	128
 12738  135F  00F8               	movwf	??_LCDClear
 12739  1360  3081               	movlw	129
 12740  1361  0278               	subwf	??_LCDClear,w
 12741  1362  1D03               	skipz
 12742  1363  2B66               	goto	u2695
 12743  1364  30F8               	movlw	248
 12744  1365  0279               	subwf	LCDClear@index,w
 12745  1366                     u2695:	
 12746  1366  1803               	btfsc	3,0
 12747  1367  2B7C               	goto	l2575
 12748  1368                     l2569:	
 12749                           
 12750                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12751  1368  01F0               	clrf	LCDWrite@data
 12752  1369  3001               	movlw	1
 12753  136A  3193  2336  3193   	fcall	_LCDWrite
 12754  136D  3001               	movlw	1
 12755  136E  07F9               	addwf	LCDClear@index,f
 12756  136F  3000               	movlw	0
 12757  1370  3DFA               	addwfc	LCDClear@index+1,f
 12758  1371  087A               	movf	LCDClear@index+1,w
 12759  1372  3A80               	xorlw	128
 12760  1373  00F8               	movwf	??_LCDClear
 12761  1374  3081               	movlw	129
 12762  1375  0278               	subwf	??_LCDClear,w
 12763  1376  1D03               	skipz
 12764  1377  2B7A               	goto	u2705
 12765  1378  30F8               	movlw	248
 12766  1379  0279               	subwf	LCDClear@index,w
 12767  137A                     u2705:	
 12768  137A  1C03               	skipc
 12769  137B  2B68               	goto	l2569
 12770  137C                     l2575:	
 12771                           
 12772                           ;lcd.c: 187: gotoXY(0, 0);
 12773  137C  01F5               	clrf	gotoXY@y
 12774  137D  3000               	movlw	0
 12775  137E  3192  2236         	fcall	_gotoXY
 12776  1380  0008               	return
 12777  1381                     __end_of_LCDClear:	
 12778                           
 12779                           	psect	text30
 12780  1236                     __ptext30:	
 12781 ;; *************** function _gotoXY *****************
 12782 ;; Defined at:
 12783 ;;		line 124 in file "lcd.c"
 12784 ;; Parameters:    Size  Location     Type
 12785 ;;  x               1    wreg     unsigned char 
 12786 ;;  y               1    5[COMMON] unsigned char 
 12787 ;; Auto vars:     Size  Location     Type
 12788 ;;  x               1    7[COMMON] unsigned char 
 12789 ;; Return value:  Size  Location     Type
 12790 ;;                  1    wreg      void 
 12791 ;; Registers used:
 12792 ;;		wreg, status,2, status,0, pclath, cstack
 12793 ;; Tracked objects:
 12794 ;;		On entry : 0/0
 12795 ;;		On exit  : 0/0
 12796 ;;		Unchanged: 0/0
 12797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12798 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12801 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12802 ;;Total ram usage:        3 bytes
 12803 ;; Hardware stack levels used:    1
 12804 ;; Hardware stack levels required when called:    1
 12805 ;; This function calls:
 12806 ;;		_LCDWrite
 12807 ;; This function is called by:
 12808 ;;		_LCDClear
 12809 ;;		_main
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           
 12814                           ;psect for function _gotoXY
 12815  1236                     _gotoXY:	
 12816                           
 12817                           ;incstack = 0
 12818                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 12819                           ;gotoXY@x stored from wreg
 12820  1236  00F7               	movwf	gotoXY@x
 12821                           
 12822                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 12823  1237  0877               	movf	gotoXY@x,w
 12824  1238  3880               	iorlw	128
 12825  1239  00F6               	movwf	??_gotoXY
 12826  123A  0876               	movf	??_gotoXY,w
 12827  123B  00F0               	movwf	LCDWrite@data
 12828  123C  3000               	movlw	0
 12829  123D  3193  2336  3192   	fcall	_LCDWrite
 12830                           
 12831                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 12832  1240  0875               	movf	gotoXY@y,w
 12833  1241  3840               	iorlw	64
 12834  1242  00F6               	movwf	??_gotoXY
 12835  1243  0876               	movf	??_gotoXY,w
 12836  1244  00F0               	movwf	LCDWrite@data
 12837  1245  3000               	movlw	0
 12838  1246  3193  2336         	fcall	_LCDWrite
 12839  1248  0008               	return
 12840  1249                     __end_of_gotoXY:	
 12841                           
 12842                           	psect	text31
 12843  13AD                     __ptext31:	
 12844 ;; *************** function _Init_Battery_State_Machine *****************
 12845 ;; Defined at:
 12846 ;;		line 18 in file "battery_charger.c"
 12847 ;; Parameters:    Size  Location     Type
 12848 ;;  z               1    wreg     unsigned char 
 12849 ;; Auto vars:     Size  Location     Type
 12850 ;;  z               1    1[COMMON] unsigned char 
 12851 ;; Return value:  Size  Location     Type
 12852 ;;                  1    wreg      void 
 12853 ;; Registers used:
 12854 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12855 ;; Tracked objects:
 12856 ;;		On entry : 0/0
 12857 ;;		On exit  : 0/0
 12858 ;;		Unchanged: 0/0
 12859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12862 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12864 ;;Total ram usage:        2 bytes
 12865 ;; Hardware stack levels used:    1
 12866 ;; This function calls:
 12867 ;;		Nothing
 12868 ;; This function is called by:
 12869 ;;		_SYSTEM_Initialize
 12870 ;; This function uses a non-reentrant model
 12871 ;;
 12872                           
 12873                           
 12874                           ;psect for function _Init_Battery_State_Machine
 12875  13AD                     _Init_Battery_State_Machine:	
 12876                           
 12877                           ;incstack = 0
 12878                           ; Regs used in _Init_Battery_State_Machine: [wreg+fsr1l+fsr1h+status,2+status,0]
 12879                           ;Init_Battery_State_Machine@z stored from wreg
 12880  13AD  00F1               	movwf	Init_Battery_State_Machine@z
 12881                           
 12882                           ;battery_charger.c: 20: batteryState[z] =PRECHARGE;
 12883  13AE  3003               	movlw	3
 12884  13AF  00F0               	movwf	??_Init_Battery_State_Machine
 12885  13B0  0871               	movf	Init_Battery_State_Machine@z,w
 12886  13B1  3ED0               	addlw	(low (_batteryState| 0))& (0+255)
 12887  13B2  0086               	movwf	6
 12888  13B3  0187               	clrf	7
 12889  13B4  0870               	movf	??_Init_Battery_State_Machine,w
 12890  13B5  0081               	movwf	1
 12891                           
 12892                           ;battery_charger.c: 21: stateCounter[z] =5;
 12893  13B6  3571               	lslf	Init_Battery_State_Machine@z,w
 12894  13B7  3E5C               	addlw	(low (_stateCounter| 0))& (0+255)
 12895  13B8  0086               	movwf	6
 12896  13B9  0187               	clrf	7
 12897  13BA  3005               	movlw	5
 12898  13BB  3FC0               	movwi [0]fsr1
 12899  13BC  3000               	movlw	0
 12900  13BD  3FC1               	movwi [1]fsr1
 12901                           
 12902                           ;battery_charger.c: 22: Iref[z] =10;
 12903  13BE  3571               	lslf	Init_Battery_State_Machine@z,w
 12904  13BF  3EC4               	addlw	(low (_Iref| 0))& (0+255)
 12905  13C0  0086               	movwf	6
 12906  13C1  0187               	clrf	7
 12907  13C2  300A               	movlw	10
 12908  13C3  3FC0               	movwi [0]fsr1
 12909  13C4  3000               	movlw	0
 12910  13C5  3FC1               	movwi [1]fsr1
 12911                           
 12912                           ;battery_charger.c: 23: Vref[z] =1425;
 12913  13C6  3571               	lslf	Init_Battery_State_Machine@z,w
 12914  13C7  3EC0               	addlw	(low (_Vref| 0))& (0+255)
 12915  13C8  0086               	movwf	6
 12916  13C9  0187               	clrf	7
 12917  13CA  3091               	movlw	145
 12918  13CB  3FC0               	movwi [0]fsr1
 12919  13CC  3005               	movlw	5
 12920  13CD  3FC1               	movwi [1]fsr1
 12921                           
 12922                           ;battery_charger.c: 24: Imin[z] =15;
 12923  13CE  3571               	lslf	Init_Battery_State_Machine@z,w
 12924  13CF  3E35               	addlw	(low (_Imin| (0+256)))& (0+255)
 12925  13D0  0086               	movwf	6
 12926  13D1  3001               	movlw	1	; select bank2/3
 12927  13D2  0087               	movwf	7
 12928  13D3  300F               	movlw	15
 12929  13D4  3FC0               	movwi [0]fsr1
 12930  13D5  3000               	movlw	0
 12931  13D6  3FC1               	movwi [1]fsr1
 12932                           
 12933                           ;battery_charger.c: 25: IminCount[z] = 60;
 12934  13D7  3571               	lslf	Init_Battery_State_Machine@z,w
 12935  13D8  3E60               	addlw	(low (_IminCount| 0))& (0+255)
 12936  13D9  0086               	movwf	6
 12937  13DA  0187               	clrf	7
 12938  13DB  303C               	movlw	60
 12939  13DC  3FC0               	movwi [0]fsr1
 12940  13DD  3000               	movlw	0
 12941  13DE  3FC1               	movwi [1]fsr1
 12942  13DF  0008               	return
 12943  13E0                     __end_of_Init_Battery_State_Machine:	
 12944                           
 12945                           	psect	text32
 12946  12D8                     __ptext32:	
 12947 ;; *************** function _ADC_Initialize *****************
 12948 ;; Defined at:
 12949 ;;		line 111 in file "adc.c"
 12950 ;; Parameters:    Size  Location     Type
 12951 ;;		None
 12952 ;; Auto vars:     Size  Location     Type
 12953 ;;		None
 12954 ;; Return value:  Size  Location     Type
 12955 ;;                  1    wreg      void 
 12956 ;; Registers used:
 12957 ;;		wreg, status,2
 12958 ;; Tracked objects:
 12959 ;;		On entry : 0/0
 12960 ;;		On exit  : 0/0
 12961 ;;		Unchanged: 0/0
 12962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12967 ;;Total ram usage:        0 bytes
 12968 ;; Hardware stack levels used:    1
 12969 ;; This function calls:
 12970 ;;		Nothing
 12971 ;; This function is called by:
 12972 ;;		_SYSTEM_Initialize
 12973 ;; This function uses a non-reentrant model
 12974 ;;
 12975                           
 12976                           
 12977                           ;psect for function _ADC_Initialize
 12978  12D8                     _ADC_Initialize:	
 12979                           
 12980                           ;adc.c: 113: ADCON1 = 0x00;
 12981                           
 12982                           ;incstack = 0
 12983                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12984  12D8  0021               	movlb	1	; select bank1
 12985  12D9  0194               	clrf	20	;volatile
 12986                           
 12987                           ;adc.c: 115: ADCON2 = 0x00;
 12988  12DA  0195               	clrf	21	;volatile
 12989                           
 12990                           ;adc.c: 117: ADCON3 = 0x00;
 12991  12DB  0196               	clrf	22	;volatile
 12992                           
 12993                           ;adc.c: 119: ADACT = 0x00;
 12994  12DC  0199               	clrf	25	;volatile
 12995                           
 12996                           ;adc.c: 121: ADSTAT = 0x00;
 12997  12DD  0197               	clrf	23	;volatile
 12998                           
 12999                           ;adc.c: 123: FVRCON = 0b11000011;
 13000  12DE  30C3               	movlw	195
 13001  12DF  0032               	movlb	18	; select bank18
 13002  12E0  008C               	movwf	12	;volatile
 13003                           
 13004                           ;adc.c: 124: ADCLK = 0x3F;
 13005  12E1  303F               	movlw	63
 13006  12E2  0021               	movlb	1	; select bank1
 13007  12E3  0098               	movwf	24	;volatile
 13008                           
 13009                           ;adc.c: 131: ADREF = 0x03;
 13010  12E4  3003               	movlw	3
 13011  12E5  009A               	movwf	26	;volatile
 13012                           
 13013                           ;adc.c: 134: ADCAP = 0x00;
 13014  12E6  019B               	clrf	27	;volatile
 13015                           
 13016                           ;adc.c: 137: ADPRE = 0x07;
 13017  12E7  3007               	movlw	7
 13018  12E8  009C               	movwf	28	;volatile
 13019                           
 13020                           ;adc.c: 139: ADACQ = 0x00;
 13021  12E9  019D               	clrf	29	;volatile
 13022                           
 13023                           ;adc.c: 141: ADPCH = 0x00;
 13024  12EA  019E               	clrf	30	;volatile
 13025                           
 13026                           ;adc.c: 143: ADRPT = 0x00;
 13027  12EB  0022               	movlb	2	; select bank2
 13028  12EC  018D               	clrf	13	;volatile
 13029                           
 13030                           ;adc.c: 145: ADLTHL = 0x00;
 13031  12ED  018E               	clrf	14	;volatile
 13032                           
 13033                           ;adc.c: 147: ADLTHH = 0x00;
 13034  12EE  018F               	clrf	15	;volatile
 13035                           
 13036                           ;adc.c: 149: ADUTHL = 0x00;
 13037  12EF  0190               	clrf	16	;volatile
 13038                           
 13039                           ;adc.c: 151: ADUTHH = 0x00;
 13040  12F0  0191               	clrf	17	;volatile
 13041                           
 13042                           ;adc.c: 153: ADSTPTL = 0x00;
 13043  12F1  0192               	clrf	18	;volatile
 13044                           
 13045                           ;adc.c: 155: ADSTPTH = 0x00;
 13046  12F2  0193               	clrf	19	;volatile
 13047                           
 13048                           ;adc.c: 157: ADCON0 = 0x84;
 13049  12F3  3084               	movlw	132
 13050  12F4  0021               	movlb	1	; select bank1
 13051  12F5  0093               	movwf	19	;volatile
 13052  12F6  0008               	return
 13053  12F7                     __end_of_ADC_Initialize:	
 13054                           
 13055                           	psect	text33
 13056  1289                     __ptext33:	
 13057 ;; *************** function _PWM7_LoadDutyValue *****************
 13058 ;; Defined at:
 13059 ;;		line 37 in file "pwm.c"
 13060 ;; Parameters:    Size  Location     Type
 13061 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 13062 ;; Auto vars:     Size  Location     Type
 13063 ;;		None
 13064 ;; Return value:  Size  Location     Type
 13065 ;;                  1    wreg      void 
 13066 ;; Registers used:
 13067 ;;		wreg, status,2, status,0
 13068 ;; Tracked objects:
 13069 ;;		On entry : 0/0
 13070 ;;		On exit  : 0/0
 13071 ;;		Unchanged: 0/0
 13072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13076 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13077 ;;Total ram usage:        4 bytes
 13078 ;; Hardware stack levels used:    1
 13079 ;; This function calls:
 13080 ;;		Nothing
 13081 ;; This function is called by:
 13082 ;;		_main
 13083 ;; This function uses a non-reentrant model
 13084 ;;
 13085                           
 13086                           
 13087                           ;psect for function _PWM7_LoadDutyValue
 13088  1289                     _PWM7_LoadDutyValue:	
 13089                           
 13090                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 13091                           
 13092                           ;incstack = 0
 13093                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 13094  1289  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 13095  128A  00F3               	movwf	??_PWM7_LoadDutyValue+1
 13096  128B  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 13097  128C  00F2               	movwf	??_PWM7_LoadDutyValue
 13098  128D  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 13099  128E  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 13100  128F  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 13101  1290  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 13102  1291  0872               	movf	??_PWM7_LoadDutyValue,w
 13103  1292  0027               	movlb	7	; select bank7
 13104  1293  0091               	movwf	17	;volatile
 13105                           
 13106                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 13107  1294  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 13108  1295  3903               	andlw	3
 13109  1296  00F2               	movwf	??_PWM7_LoadDutyValue
 13110  1297  3005               	movlw	5
 13111  1298                     u3685:	
 13112  1298  35F2               	lslf	??_PWM7_LoadDutyValue,f
 13113  1299  3EFF               	addlw	-1
 13114  129A  1D03               	skipz
 13115  129B  2A98               	goto	u3685
 13116  129C  3572               	lslf	??_PWM7_LoadDutyValue,w
 13117  129D  0090               	movwf	16	;volatile
 13118  129E  0008               	return
 13119  129F                     __end_of_PWM7_LoadDutyValue:	
 13120                           
 13121                           	psect	text34
 13122  1273                     __ptext34:	
 13123 ;; *************** function _PWM6_LoadDutyValue *****************
 13124 ;; Defined at:
 13125 ;;		line 30 in file "pwm.c"
 13126 ;; Parameters:    Size  Location     Type
 13127 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 13128 ;; Auto vars:     Size  Location     Type
 13129 ;;		None
 13130 ;; Return value:  Size  Location     Type
 13131 ;;                  1    wreg      void 
 13132 ;; Registers used:
 13133 ;;		wreg, status,2, status,0
 13134 ;; Tracked objects:
 13135 ;;		On entry : 0/0
 13136 ;;		On exit  : 0/0
 13137 ;;		Unchanged: 0/0
 13138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13143 ;;Total ram usage:        4 bytes
 13144 ;; Hardware stack levels used:    1
 13145 ;; This function calls:
 13146 ;;		Nothing
 13147 ;; This function is called by:
 13148 ;;		_main
 13149 ;; This function uses a non-reentrant model
 13150 ;;
 13151                           
 13152                           
 13153                           ;psect for function _PWM6_LoadDutyValue
 13154  1273                     _PWM6_LoadDutyValue:	
 13155                           
 13156                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 13157                           
 13158                           ;incstack = 0
 13159                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 13160  1273  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 13161  1274  00F3               	movwf	??_PWM6_LoadDutyValue+1
 13162  1275  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 13163  1276  00F2               	movwf	??_PWM6_LoadDutyValue
 13164  1277  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 13165  1278  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 13166  1279  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 13167  127A  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 13168  127B  0872               	movf	??_PWM6_LoadDutyValue,w
 13169  127C  0027               	movlb	7	; select bank7
 13170  127D  008D               	movwf	13	;volatile
 13171                           
 13172                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 13173  127E  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 13174  127F  3903               	andlw	3
 13175  1280  00F2               	movwf	??_PWM6_LoadDutyValue
 13176  1281  3005               	movlw	5
 13177  1282                     u3675:	
 13178  1282  35F2               	lslf	??_PWM6_LoadDutyValue,f
 13179  1283  3EFF               	addlw	-1
 13180  1284  1D03               	skipz
 13181  1285  2A82               	goto	u3675
 13182  1286  3572               	lslf	??_PWM6_LoadDutyValue,w
 13183  1287  008C               	movwf	12	;volatile
 13184  1288  0008               	return
 13185  1289                     __end_of_PWM6_LoadDutyValue:	
 13186                           
 13187                           	psect	text35
 13188  125D                     __ptext35:	
 13189 ;; *************** function _PWM1_LoadDutyValue *****************
 13190 ;; Defined at:
 13191 ;;		line 44 in file "pwm.c"
 13192 ;; Parameters:    Size  Location     Type
 13193 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 13194 ;; Auto vars:     Size  Location     Type
 13195 ;;		None
 13196 ;; Return value:  Size  Location     Type
 13197 ;;                  1    wreg      void 
 13198 ;; Registers used:
 13199 ;;		wreg, status,2, status,0
 13200 ;; Tracked objects:
 13201 ;;		On entry : 0/0
 13202 ;;		On exit  : 0/0
 13203 ;;		Unchanged: 0/0
 13204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13208 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13209 ;;Total ram usage:        4 bytes
 13210 ;; Hardware stack levels used:    1
 13211 ;; This function calls:
 13212 ;;		Nothing
 13213 ;; This function is called by:
 13214 ;;		_main
 13215 ;; This function uses a non-reentrant model
 13216 ;;
 13217                           
 13218                           
 13219                           ;psect for function _PWM1_LoadDutyValue
 13220  125D                     _PWM1_LoadDutyValue:	
 13221                           
 13222                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 13223                           
 13224                           ;incstack = 0
 13225                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 13226  125D  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 13227  125E  00F3               	movwf	??_PWM1_LoadDutyValue+1
 13228  125F  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 13229  1260  00F2               	movwf	??_PWM1_LoadDutyValue
 13230  1261  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 13231  1262  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 13232  1263  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 13233  1264  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 13234  1265  0872               	movf	??_PWM1_LoadDutyValue,w
 13235  1266  0026               	movlb	6	; select bank6
 13236  1267  008D               	movwf	13	;volatile
 13237                           
 13238                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 13239  1268  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 13240  1269  3903               	andlw	3
 13241  126A  00F2               	movwf	??_PWM1_LoadDutyValue
 13242  126B  3005               	movlw	5
 13243  126C                     u3695:	
 13244  126C  35F2               	lslf	??_PWM1_LoadDutyValue,f
 13245  126D  3EFF               	addlw	-1
 13246  126E  1D03               	skipz
 13247  126F  2A6C               	goto	u3695
 13248  1270  3572               	lslf	??_PWM1_LoadDutyValue,w
 13249  1271  008C               	movwf	12	;volatile
 13250  1272  0008               	return
 13251  1273                     __end_of_PWM1_LoadDutyValue:	
 13252                           
 13253                           	psect	text36
 13254  1249                     __ptext36:	
 13255 ;; *************** function _LCDWriteString *****************
 13256 ;; Defined at:
 13257 ;;		line 176 in file "lcd.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  characters      2   12[COMMON] PTR const unsigned char 
 13260 ;;		 -> STR_3(5), STR_2(5), STR_1(4), 
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;		None
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  1    wreg      void 
 13265 ;; Registers used:
 13266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/0
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13274 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13275 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13276 ;;Total ram usage:        3 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; Hardware stack levels required when called:    2
 13279 ;; This function calls:
 13280 ;;		_LCDWriteCharacter
 13281 ;; This function is called by:
 13282 ;;		_main
 13283 ;; This function uses a non-reentrant model
 13284 ;;
 13285                           
 13286                           
 13287                           ;psect for function _LCDWriteString
 13288  1249                     _LCDWriteString:	
 13289  1249                     l3025:	
 13290                           ;lcd.c: 178: while (*characters)
 13291                           
 13292                           ;incstack = 0
 13293                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13294                           
 13295  1249  087C               	movf	LCDWriteString@characters,w
 13296  124A  0084               	movwf	4
 13297  124B  087D               	movf	LCDWriteString@characters+1,w
 13298  124C  0085               	movwf	5
 13299  124D  0012               	moviw fsr0++
 13300  124E  1903               	btfsc	3,2
 13301  124F  0008               	return
 13302                           
 13303                           ;lcd.c: 179: LCDWriteCharacter(*characters++);
 13304  1250  087C               	movf	LCDWriteString@characters,w
 13305  1251  0084               	movwf	4
 13306  1252  087D               	movf	LCDWriteString@characters+1,w
 13307  1253  0085               	movwf	5
 13308  1254  0800               	movf	0,w	;code access
 13309  1255  3196  2666  3192   	fcall	_LCDWriteCharacter
 13310  1258  3001               	movlw	1
 13311  1259  07FC               	addwf	LCDWriteString@characters,f
 13312  125A  3000               	movlw	0
 13313  125B  3DFD               	addwfc	LCDWriteString@characters+1,f
 13314  125C  2A49               	goto	l3025
 13315  125D                     __end_of_LCDWriteString:	
 13316                           
 13317                           	psect	text37
 13318  0C5A                     __ptext37:	
 13319 ;; *************** function _LCDWriteInt *****************
 13320 ;; Defined at:
 13321 ;;		line 190 in file "lcd.c"
 13322 ;; Parameters:    Size  Location     Type
 13323 ;;  value           2    0[BANK0 ] int 
 13324 ;;  fieldLength     1    2[BANK0 ] char 
 13325 ;;  numPlaces       1    3[BANK0 ] unsigned char 
 13326 ;;  sign            1    4[BANK0 ] unsigned char 
 13327 ;; Auto vars:     Size  Location     Type
 13328 ;;  str             5    9[BANK0 ] unsigned char [5]
 13329 ;;  i               1   15[BANK0 ] unsigned char 
 13330 ;;  j               1   14[BANK0 ] unsigned char 
 13331 ;; Return value:  Size  Location     Type
 13332 ;;                  1    wreg      void 
 13333 ;; Registers used:
 13334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13335 ;; Tracked objects:
 13336 ;;		On entry : 0/0
 13337 ;;		On exit  : 0/0
 13338 ;;		Unchanged: 0/0
 13339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13340 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13341 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13342 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13343 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13344 ;;Total ram usage:       16 bytes
 13345 ;; Hardware stack levels used:    1
 13346 ;; Hardware stack levels required when called:    2
 13347 ;; This function calls:
 13348 ;;		_LCDWriteCharacter
 13349 ;;		___awdiv
 13350 ;;		___lwmod
 13351 ;; This function is called by:
 13352 ;;		_main
 13353 ;; This function uses a non-reentrant model
 13354 ;;
 13355                           
 13356                           
 13357                           ;psect for function _LCDWriteInt
 13358  0C5A                     _LCDWriteInt:	
 13359                           
 13360                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 13361                           
 13362                           ;incstack = 0
 13363                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13364  0C5A  3030               	movlw	low LCDWriteInt@F14390
 13365  0C5B  0086               	movwf	6
 13366  0C5C  3001               	movlw	high LCDWriteInt@F14390
 13367  0C5D  0087               	movwf	7
 13368  0C5E  3029               	movlw	low LCDWriteInt@str
 13369  0C5F  0084               	movwf	4
 13370  0C60  3000               	movlw	high LCDWriteInt@str
 13371  0C61  0085               	movwf	5
 13372  0C62  3005               	movlw	5
 13373  0C63  0020               	movlb	0	; select bank0
 13374  0C64  00A5               	movwf	??_LCDWriteInt
 13375  0C65                     u3580:	
 13376  0C65  0016               	moviw fsr1++
 13377  0C66  001A               	movwi fsr0++
 13378  0C67  0BA5               	decfsz	??_LCDWriteInt,f
 13379  0C68  2C65               	goto	u3580
 13380                           
 13381                           ;lcd.c: 193: uint8_t i=4,j=0;
 13382  0C69  3004               	movlw	4
 13383  0C6A  00A5               	movwf	??_LCDWriteInt
 13384  0C6B  0825               	movf	??_LCDWriteInt,w
 13385  0C6C  00AF               	movwf	LCDWriteInt@i
 13386  0C6D  01AE               	clrf	LCDWriteInt@j
 13387                           
 13388                           ;lcd.c: 195: if(value<0)
 13389  0C6E  1FA1               	btfss	LCDWriteInt@value+1,7
 13390  0C6F  2C7B               	goto	l3039
 13391                           
 13392                           ;lcd.c: 196: {
 13393                           ;lcd.c: 197: LCDWriteCharacter('-');
 13394  0C70  302D               	movlw	45
 13395  0C71  3196  2666  318C   	fcall	_LCDWriteCharacter
 13396                           
 13397                           ;lcd.c: 198: value=value*-1;
 13398  0C74  0020               	movlb	0	; select bank0
 13399  0C75  09A0               	comf	LCDWriteInt@value,f
 13400  0C76  09A1               	comf	LCDWriteInt@value+1,f
 13401  0C77  0AA0               	incf	LCDWriteInt@value,f
 13402  0C78  1903               	skipnz
 13403  0C79  0AA1               	incf	LCDWriteInt@value+1,f
 13404                           
 13405                           ;lcd.c: 199: }
 13406  0C7A  2C82               	goto	l3049
 13407  0C7B                     l3039:	
 13408                           
 13409                           ;lcd.c: 201: else
 13410                           ;lcd.c: 202: {
 13411                           ;lcd.c: 203: if(sign == 1)
 13412  0C7B  0324               	decf	LCDWriteInt@sign,w
 13413  0C7C  1D03               	btfss	3,2
 13414  0C7D  2C82               	goto	l3049
 13415                           
 13416                           ;lcd.c: 204: {
 13417                           ;lcd.c: 205: LCDWriteCharacter('+');
 13418  0C7E  302B               	movlw	43
 13419  0C7F  3196  2666  318C   	fcall	_LCDWriteCharacter
 13420  0C82                     l3049:	
 13421                           ;lcd.c: 206: }
 13422                           ;lcd.c: 207: }
 13423                           ;lcd.c: 209: while(value)
 13424                           
 13425  0C82  0020               	movlb	0	; select bank0
 13426  0C83  0820               	movf	LCDWriteInt@value,w
 13427  0C84  0421               	iorwf	LCDWriteInt@value+1,w
 13428  0C85  1903               	btfsc	3,2
 13429  0C86  2CAF               	goto	l3051
 13430                           
 13431                           ;lcd.c: 210: {
 13432                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 13433  0C87  300A               	movlw	10
 13434  0C88  00F0               	movwf	___lwmod@divisor
 13435  0C89  3000               	movlw	0
 13436  0C8A  00F1               	movwf	___lwmod@divisor+1
 13437  0C8B  0020               	movlb	0	; select bank0
 13438  0C8C  0821               	movf	LCDWriteInt@value+1,w
 13439  0C8D  00F3               	movwf	___lwmod@dividend+1
 13440  0C8E  0820               	movf	LCDWriteInt@value,w
 13441  0C8F  00F2               	movwf	___lwmod@dividend
 13442  0C90  3193  2381  318C   	fcall	___lwmod
 13443  0C93  0870               	movf	?___lwmod,w
 13444  0C94  0020               	movlb	0	; select bank0
 13445  0C95  00A5               	movwf	??_LCDWriteInt
 13446  0C96  082F               	movf	LCDWriteInt@i,w
 13447  0C97  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13448  0C98  0086               	movwf	6
 13449  0C99  0187               	clrf	7
 13450  0C9A  0825               	movf	??_LCDWriteInt,w
 13451  0C9B  0081               	movwf	1
 13452                           
 13453                           ;lcd.c: 212: value=value/10;
 13454  0C9C  300A               	movlw	10
 13455  0C9D  00F0               	movwf	___awdiv@divisor
 13456  0C9E  3000               	movlw	0
 13457  0C9F  00F1               	movwf	___awdiv@divisor+1
 13458  0CA0  0821               	movf	LCDWriteInt@value+1,w
 13459  0CA1  00F3               	movwf	___awdiv@dividend+1
 13460  0CA2  0820               	movf	LCDWriteInt@value,w
 13461  0CA3  00F2               	movwf	___awdiv@dividend
 13462  0CA4  3196  2615  318C   	fcall	___awdiv
 13463  0CA7  0871               	movf	?___awdiv+1,w
 13464  0CA8  0020               	movlb	0	; select bank0
 13465  0CA9  00A1               	movwf	LCDWriteInt@value+1
 13466  0CAA  0870               	movf	?___awdiv,w
 13467  0CAB  00A0               	movwf	LCDWriteInt@value
 13468                           
 13469                           ;lcd.c: 213: i--;
 13470  0CAC  3001               	movlw	1
 13471  0CAD  02AF               	subwf	LCDWriteInt@i,f
 13472  0CAE  2C82               	goto	l3049
 13473  0CAF                     l3051:	
 13474                           
 13475                           ;lcd.c: 214: }
 13476                           ;lcd.c: 215: if(fieldLength==-1)
 13477  0CAF  0A22               	incf	LCDWriteInt@fieldLength,w
 13478  0CB0  1903               	btfsc	3,2
 13479  0CB1  2CB7               	goto	l3057
 13480  0CB2  2CBF               	goto	l3059
 13481  0CB3                     l3055:	
 13482                           ;lcd.c: 216: {
 13483                           ;lcd.c: 217: while(str[j]==0)
 13484                           
 13485                           
 13486                           ;lcd.c: 218: {
 13487                           ;lcd.c: 219: j++;
 13488  0CB3  3001               	movlw	1
 13489  0CB4  00A5               	movwf	??_LCDWriteInt
 13490  0CB5  0825               	movf	??_LCDWriteInt,w
 13491  0CB6  07AE               	addwf	LCDWriteInt@j,f
 13492  0CB7                     l3057:	
 13493  0CB7  082E               	movf	LCDWriteInt@j,w
 13494  0CB8  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13495  0CB9  0086               	movwf	6
 13496  0CBA  0187               	clrf	7
 13497  0CBB  0801               	movf	1,w
 13498  0CBC  1D03               	btfss	3,2
 13499  0CBD  2CC5               	goto	l3061
 13500  0CBE  2CB3               	goto	l3055
 13501  0CBF                     l3059:	
 13502                           ;lcd.c: 220: }
 13503                           ;lcd.c: 221: }
 13504                           
 13505                           
 13506                           ;lcd.c: 222: else
 13507                           ;lcd.c: 223: {
 13508                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 13509  0CBF  0322               	decf	LCDWriteInt@fieldLength,w
 13510  0CC0  3AFF               	xorlw	255
 13511  0CC1  3E05               	addlw	5
 13512  0CC2  00A5               	movwf	??_LCDWriteInt
 13513  0CC3  0825               	movf	??_LCDWriteInt,w
 13514  0CC4  00AE               	movwf	LCDWriteInt@j
 13515  0CC5                     l3061:	
 13516                           
 13517                           ;lcd.c: 225: }
 13518                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 13519  0CC5  082E               	movf	LCDWriteInt@j,w
 13520  0CC6  00A5               	movwf	??_LCDWriteInt
 13521  0CC7  0825               	movf	??_LCDWriteInt,w
 13522  0CC8  00AF               	movwf	LCDWriteInt@i
 13523  0CC9                     l3067:	
 13524  0CC9  0823               	movf	LCDWriteInt@numPlaces,w
 13525  0CCA  00A5               	movwf	??_LCDWriteInt
 13526  0CCB  01A6               	clrf	??_LCDWriteInt+1
 13527  0CCC  09A5               	comf	??_LCDWriteInt,f
 13528  0CCD  09A6               	comf	??_LCDWriteInt+1,f
 13529  0CCE  0AA5               	incf	??_LCDWriteInt,f
 13530  0CCF  1903               	skipnz
 13531  0CD0  0AA6               	incf	??_LCDWriteInt+1,f
 13532  0CD1  0825               	movf	??_LCDWriteInt,w
 13533  0CD2  3E05               	addlw	5
 13534  0CD3  00A7               	movwf	??_LCDWriteInt+2
 13535  0CD4  3000               	movlw	0
 13536  0CD5  3D26               	addwfc	??_LCDWriteInt+1,w
 13537  0CD6  00A8               	movwf	??_LCDWriteInt+3
 13538  0CD7  0828               	movf	??_LCDWriteInt+3,w
 13539  0CD8  3A80               	xorlw	128
 13540  0CD9  3C80               	sublw	128
 13541  0CDA  1D03               	skipz
 13542  0CDB  2CDE               	goto	u3645
 13543  0CDC  0827               	movf	??_LCDWriteInt+2,w
 13544  0CDD  022F               	subwf	LCDWriteInt@i,w
 13545  0CDE                     u3645:	
 13546  0CDE  1803               	btfsc	3,0
 13547  0CDF  2CF0               	goto	l3069
 13548                           
 13549                           ;lcd.c: 228: {
 13550                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 13551  0CE0  0020               	movlb	0	; select bank0
 13552  0CE1  082F               	movf	LCDWriteInt@i,w
 13553  0CE2  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13554  0CE3  0086               	movwf	6
 13555  0CE4  0187               	clrf	7
 13556  0CE5  0801               	movf	1,w
 13557  0CE6  3E30               	addlw	48
 13558  0CE7  3196  2666  318C   	fcall	_LCDWriteCharacter
 13559  0CEA  3001               	movlw	1
 13560  0CEB  0020               	movlb	0	; select bank0
 13561  0CEC  00A5               	movwf	??_LCDWriteInt
 13562  0CED  0825               	movf	??_LCDWriteInt,w
 13563  0CEE  07AF               	addwf	LCDWriteInt@i,f
 13564  0CEF  2CC9               	goto	l3067
 13565  0CF0                     l3069:	
 13566                           
 13567                           ;lcd.c: 230: }
 13568                           ;lcd.c: 232: if(numPlaces == 1)
 13569  0CF0  0020               	movlb	0	; select bank0
 13570  0CF1  0323               	decf	LCDWriteInt@numPlaces,w
 13571  0CF2  1D03               	btfss	3,2
 13572  0CF3  2CFE               	goto	l3073
 13573                           
 13574                           ;lcd.c: 233: {
 13575                           ;lcd.c: 234: LCDWriteCharacter(46);
 13576  0CF4  302E               	movlw	46
 13577  0CF5  3196  2666  318C   	fcall	_LCDWriteCharacter
 13578                           
 13579                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 13580  0CF8  0020               	movlb	0	; select bank0
 13581  0CF9  082D               	movf	LCDWriteInt@str+4,w
 13582  0CFA  3E30               	addlw	48
 13583  0CFB  3196  2666  318C   	fcall	_LCDWriteCharacter
 13584  0CFE                     l3073:	
 13585                           
 13586                           ;lcd.c: 236: }
 13587                           ;lcd.c: 238: if(numPlaces == 2)
 13588  0CFE  3002               	movlw	2
 13589  0CFF  0020               	movlb	0	; select bank0
 13590  0D00  0623               	xorwf	LCDWriteInt@numPlaces,w
 13591  0D01  1D03               	btfss	3,2
 13592  0D02  0008               	return
 13593                           
 13594                           ;lcd.c: 239: {
 13595                           ;lcd.c: 240: LCDWriteCharacter(46);
 13596  0D03  302E               	movlw	46
 13597  0D04  3196  2666  318C   	fcall	_LCDWriteCharacter
 13598                           
 13599                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 13600  0D07  0020               	movlb	0	; select bank0
 13601  0D08  082C               	movf	LCDWriteInt@str+3,w
 13602  0D09  3E30               	addlw	48
 13603  0D0A  3196  2666  318C   	fcall	_LCDWriteCharacter
 13604                           
 13605                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 13606  0D0D  0020               	movlb	0	; select bank0
 13607  0D0E  082D               	movf	LCDWriteInt@str+4,w
 13608  0D0F  3E30               	addlw	48
 13609  0D10  3196  2666         	fcall	_LCDWriteCharacter
 13610  0D12  0008               	return
 13611  0D13                     __end_of_LCDWriteInt:	
 13612                           
 13613                           	psect	text38
 13614  1381                     __ptext38:	
 13615 ;; *************** function ___lwmod *****************
 13616 ;; Defined at:
 13617 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 13618 ;; Parameters:    Size  Location     Type
 13619 ;;  divisor         2    0[COMMON] unsigned int 
 13620 ;;  dividend        2    2[COMMON] unsigned int 
 13621 ;; Auto vars:     Size  Location     Type
 13622 ;;  counter         1    5[COMMON] unsigned char 
 13623 ;; Return value:  Size  Location     Type
 13624 ;;                  2    0[COMMON] unsigned int 
 13625 ;; Registers used:
 13626 ;;		wreg, status,2, status,0
 13627 ;; Tracked objects:
 13628 ;;		On entry : 0/0
 13629 ;;		On exit  : 0/0
 13630 ;;		Unchanged: 0/0
 13631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13635 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13636 ;;Total ram usage:        6 bytes
 13637 ;; Hardware stack levels used:    1
 13638 ;; This function calls:
 13639 ;;		Nothing
 13640 ;; This function is called by:
 13641 ;;		_LCDWriteInt
 13642 ;; This function uses a non-reentrant model
 13643 ;;
 13644                           
 13645                           
 13646                           ;psect for function ___lwmod
 13647  1381                     ___lwmod:	
 13648                           
 13649                           ;incstack = 0
 13650                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13651  1381  0870               	movf	___lwmod@divisor,w
 13652  1382  0471               	iorwf	___lwmod@divisor+1,w
 13653  1383  1903               	btfsc	3,2
 13654  1384  2BA8               	goto	l2885
 13655  1385  01F5               	clrf	___lwmod@counter
 13656  1386  0AF5               	incf	___lwmod@counter,f
 13657  1387                     l2875:	
 13658  1387  1BF1               	btfsc	___lwmod@divisor+1,7
 13659  1388  2B93               	goto	l2877
 13660  1389  3001               	movlw	1
 13661  138A                     u3155:	
 13662  138A  35F0               	lslf	___lwmod@divisor,f
 13663  138B  0DF1               	rlf	___lwmod@divisor+1,f
 13664  138C  0B89               	decfsz	9,f
 13665  138D  2B8A               	goto	u3155
 13666  138E  3001               	movlw	1
 13667  138F  00F4               	movwf	??___lwmod
 13668  1390  0874               	movf	??___lwmod,w
 13669  1391  07F5               	addwf	___lwmod@counter,f
 13670  1392  2B87               	goto	l2875
 13671  1393                     l2877:	
 13672  1393  0871               	movf	___lwmod@divisor+1,w
 13673  1394  0273               	subwf	___lwmod@dividend+1,w
 13674  1395  1D03               	skipz
 13675  1396  2B99               	goto	u3175
 13676  1397  0870               	movf	___lwmod@divisor,w
 13677  1398  0272               	subwf	___lwmod@dividend,w
 13678  1399                     u3175:	
 13679  1399  1C03               	skipc
 13680  139A  2B9F               	goto	l2881
 13681  139B  0870               	movf	___lwmod@divisor,w
 13682  139C  02F2               	subwf	___lwmod@dividend,f
 13683  139D  0871               	movf	___lwmod@divisor+1,w
 13684  139E  3BF3               	subwfb	___lwmod@dividend+1,f
 13685  139F                     l2881:	
 13686  139F  3001               	movlw	1
 13687  13A0                     u3185:	
 13688  13A0  36F1               	lsrf	___lwmod@divisor+1,f
 13689  13A1  0CF0               	rrf	___lwmod@divisor,f
 13690  13A2  0B89               	decfsz	9,f
 13691  13A3  2BA0               	goto	u3185
 13692  13A4  3001               	movlw	1
 13693  13A5  02F5               	subwf	___lwmod@counter,f
 13694  13A6  1D03               	btfss	3,2
 13695  13A7  2B93               	goto	l2877
 13696  13A8                     l2885:	
 13697  13A8  0873               	movf	___lwmod@dividend+1,w
 13698  13A9  00F1               	movwf	?___lwmod+1
 13699  13AA  0872               	movf	___lwmod@dividend,w
 13700  13AB  00F0               	movwf	?___lwmod
 13701  13AC  0008               	return
 13702  13AD                     __end_of___lwmod:	
 13703                           
 13704                           	psect	text39
 13705  1615                     __ptext39:	
 13706 ;; *************** function ___awdiv *****************
 13707 ;; Defined at:
 13708 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13709 ;; Parameters:    Size  Location     Type
 13710 ;;  divisor         2    0[COMMON] int 
 13711 ;;  dividend        2    2[COMMON] int 
 13712 ;; Auto vars:     Size  Location     Type
 13713 ;;  quotient        2    7[COMMON] int 
 13714 ;;  sign            1    6[COMMON] unsigned char 
 13715 ;;  counter         1    5[COMMON] unsigned char 
 13716 ;; Return value:  Size  Location     Type
 13717 ;;                  2    0[COMMON] int 
 13718 ;; Registers used:
 13719 ;;		wreg, status,2, status,0
 13720 ;; Tracked objects:
 13721 ;;		On entry : 0/0
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13726 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;Total ram usage:        9 bytes
 13730 ;; Hardware stack levels used:    1
 13731 ;; This function calls:
 13732 ;;		Nothing
 13733 ;; This function is called by:
 13734 ;;		_LCDWriteInt
 13735 ;; This function uses a non-reentrant model
 13736 ;;
 13737                           
 13738                           
 13739                           ;psect for function ___awdiv
 13740  1615                     ___awdiv:	
 13741                           
 13742                           ;incstack = 0
 13743                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13744  1615  01F6               	clrf	___awdiv@sign
 13745  1616  1FF1               	btfss	___awdiv@divisor+1,7
 13746  1617  2E1F               	goto	l2739
 13747  1618  09F0               	comf	___awdiv@divisor,f
 13748  1619  09F1               	comf	___awdiv@divisor+1,f
 13749  161A  0AF0               	incf	___awdiv@divisor,f
 13750  161B  1903               	skipnz
 13751  161C  0AF1               	incf	___awdiv@divisor+1,f
 13752  161D  01F6               	clrf	___awdiv@sign
 13753  161E  0AF6               	incf	___awdiv@sign,f
 13754  161F                     l2739:	
 13755  161F  1FF3               	btfss	___awdiv@dividend+1,7
 13756  1620  2E2A               	goto	l2745
 13757  1621  09F2               	comf	___awdiv@dividend,f
 13758  1622  09F3               	comf	___awdiv@dividend+1,f
 13759  1623  0AF2               	incf	___awdiv@dividend,f
 13760  1624  1903               	skipnz
 13761  1625  0AF3               	incf	___awdiv@dividend+1,f
 13762  1626  3001               	movlw	1
 13763  1627  00F4               	movwf	??___awdiv
 13764  1628  0874               	movf	??___awdiv,w
 13765  1629  06F6               	xorwf	___awdiv@sign,f
 13766  162A                     l2745:	
 13767  162A  01F7               	clrf	___awdiv@quotient
 13768  162B  01F8               	clrf	___awdiv@quotient+1
 13769  162C  0870               	movf	___awdiv@divisor,w
 13770  162D  0471               	iorwf	___awdiv@divisor+1,w
 13771  162E  1903               	btfsc	3,2
 13772  162F  2E59               	goto	l2767
 13773  1630  01F5               	clrf	___awdiv@counter
 13774  1631  0AF5               	incf	___awdiv@counter,f
 13775  1632                     l2755:	
 13776  1632  1BF1               	btfsc	___awdiv@divisor+1,7
 13777  1633  2E3E               	goto	l2757
 13778  1634  3001               	movlw	1
 13779  1635                     u2885:	
 13780  1635  35F0               	lslf	___awdiv@divisor,f
 13781  1636  0DF1               	rlf	___awdiv@divisor+1,f
 13782  1637  0B89               	decfsz	9,f
 13783  1638  2E35               	goto	u2885
 13784  1639  3001               	movlw	1
 13785  163A  00F4               	movwf	??___awdiv
 13786  163B  0874               	movf	??___awdiv,w
 13787  163C  07F5               	addwf	___awdiv@counter,f
 13788  163D  2E32               	goto	l2755
 13789  163E                     l2757:	
 13790  163E  3001               	movlw	1
 13791  163F                     u2905:	
 13792  163F  35F7               	lslf	___awdiv@quotient,f
 13793  1640  0DF8               	rlf	___awdiv@quotient+1,f
 13794  1641  0B89               	decfsz	9,f
 13795  1642  2E3F               	goto	u2905
 13796  1643  0871               	movf	___awdiv@divisor+1,w
 13797  1644  0273               	subwf	___awdiv@dividend+1,w
 13798  1645  1D03               	skipz
 13799  1646  2E49               	goto	u2915
 13800  1647  0870               	movf	___awdiv@divisor,w
 13801  1648  0272               	subwf	___awdiv@dividend,w
 13802  1649                     u2915:	
 13803  1649  1C03               	skipc
 13804  164A  2E50               	goto	l2763
 13805  164B  0870               	movf	___awdiv@divisor,w
 13806  164C  02F2               	subwf	___awdiv@dividend,f
 13807  164D  0871               	movf	___awdiv@divisor+1,w
 13808  164E  3BF3               	subwfb	___awdiv@dividend+1,f
 13809  164F  1477               	bsf	___awdiv@quotient,0
 13810  1650                     l2763:	
 13811  1650  3001               	movlw	1
 13812  1651                     u2925:	
 13813  1651  36F1               	lsrf	___awdiv@divisor+1,f
 13814  1652  0CF0               	rrf	___awdiv@divisor,f
 13815  1653  0B89               	decfsz	9,f
 13816  1654  2E51               	goto	u2925
 13817  1655  3001               	movlw	1
 13818  1656  02F5               	subwf	___awdiv@counter,f
 13819  1657  1D03               	btfss	3,2
 13820  1658  2E3E               	goto	l2757
 13821  1659                     l2767:	
 13822  1659  0876               	movf	___awdiv@sign,w
 13823  165A  1903               	btfsc	3,2
 13824  165B  2E61               	goto	l2771
 13825  165C  09F7               	comf	___awdiv@quotient,f
 13826  165D  09F8               	comf	___awdiv@quotient+1,f
 13827  165E  0AF7               	incf	___awdiv@quotient,f
 13828  165F  1903               	skipnz
 13829  1660  0AF8               	incf	___awdiv@quotient+1,f
 13830  1661                     l2771:	
 13831  1661  0878               	movf	___awdiv@quotient+1,w
 13832  1662  00F1               	movwf	?___awdiv+1
 13833  1663  0877               	movf	___awdiv@quotient,w
 13834  1664  00F0               	movwf	?___awdiv
 13835  1665  0008               	return
 13836  1666                     __end_of___awdiv:	
 13837                           
 13838                           	psect	text40
 13839  1666                     __ptext40:	
 13840 ;; *************** function _LCDWriteCharacter *****************
 13841 ;; Defined at:
 13842 ;;		line 140 in file "lcd.c"
 13843 ;; Parameters:    Size  Location     Type
 13844 ;;  character       1    wreg     const unsigned char 
 13845 ;; Auto vars:     Size  Location     Type
 13846 ;;  character       1    9[COMMON] const unsigned char 
 13847 ;;  base            2   10[COMMON] unsigned int 
 13848 ;; Return value:  Size  Location     Type
 13849 ;;                  1    wreg      void 
 13850 ;; Registers used:
 13851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13852 ;; Tracked objects:
 13853 ;;		On entry : 0/0
 13854 ;;		On exit  : 0/0
 13855 ;;		Unchanged: 0/0
 13856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13858 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13861 ;;Total ram usage:        6 bytes
 13862 ;; Hardware stack levels used:    1
 13863 ;; Hardware stack levels required when called:    1
 13864 ;; This function calls:
 13865 ;;		_LCDWrite
 13866 ;;		___wmul
 13867 ;; This function is called by:
 13868 ;;		_LCDWriteString
 13869 ;;		_LCDWriteInt
 13870 ;;		_main
 13871 ;; This function uses a non-reentrant model
 13872 ;;
 13873                           
 13874                           
 13875                           ;psect for function _LCDWriteCharacter
 13876  1666                     _LCDWriteCharacter:	
 13877                           
 13878                           ;incstack = 0
 13879                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13880                           ;LCDWriteCharacter@character stored from wreg
 13881  1666  00F9               	movwf	LCDWriteCharacter@character
 13882                           
 13883                           ;lcd.c: 142: uint16_t base;
 13884                           ;lcd.c: 143: base = character - 0x20;
 13885  1667  0879               	movf	LCDWriteCharacter@character,w
 13886  1668  3EE0               	addlw	224
 13887  1669  00FA               	movwf	LCDWriteCharacter@base
 13888  166A  30FF               	movlw	255
 13889  166B  1803               	skipnc
 13890  166C  3000               	movlw	0
 13891  166D  00FB               	movwf	LCDWriteCharacter@base+1
 13892                           
 13893                           ;lcd.c: 144: base *= 3;
 13894  166E  3003               	movlw	3
 13895  166F  00F0               	movwf	___wmul@multiplier
 13896  1670  3000               	movlw	0
 13897  1671  00F1               	movwf	___wmul@multiplier+1
 13898  1672  087B               	movf	LCDWriteCharacter@base+1,w
 13899  1673  00F3               	movwf	___wmul@multiplicand+1
 13900  1674  087A               	movf	LCDWriteCharacter@base,w
 13901  1675  00F2               	movwf	___wmul@multiplicand
 13902  1676  3192  229F  3196   	fcall	___wmul
 13903  1679  0871               	movf	?___wmul+1,w
 13904  167A  00FB               	movwf	LCDWriteCharacter@base+1
 13905  167B  0870               	movf	?___wmul,w
 13906  167C  00FA               	movwf	LCDWriteCharacter@base
 13907                           
 13908                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13909  167D  087B               	movf	LCDWriteCharacter@base+1,w
 13910  167E  0085               	movwf	5
 13911  167F  087A               	movf	LCDWriteCharacter@base,w
 13912  1680  0084               	movwf	4
 13913  1681  3000               	movlw	low (_fonts| (0+32768))
 13914  1682  0784               	addwf	4,f
 13915  1683  3088               	movlw	high (_fonts| (0+32768))
 13916  1684  3D85               	addwfc	5,f
 13917  1685  0800               	movf	0,w	;code access
 13918  1686  00F6               	movwf	??_LCDWriteCharacter
 13919  1687  0876               	movf	??_LCDWriteCharacter,w
 13920  1688  00F0               	movwf	LCDWrite@data
 13921  1689  3001               	movlw	1
 13922  168A  3193  2336  3196   	fcall	_LCDWrite
 13923                           
 13924                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13925  168D  087A               	movf	LCDWriteCharacter@base,w
 13926  168E  3E01               	addlw	1
 13927  168F  00F6               	movwf	??_LCDWriteCharacter
 13928  1690  3000               	movlw	0
 13929  1691  3D7B               	addwfc	LCDWriteCharacter@base+1,w
 13930  1692  00F7               	movwf	??_LCDWriteCharacter+1
 13931  1693  3000               	movlw	low (_fonts| (0+32768))
 13932  1694  0776               	addwf	??_LCDWriteCharacter,w
 13933  1695  0084               	movwf	4
 13934  1696  3088               	movlw	high (_fonts| (0+32768))
 13935  1697  3D77               	addwfc	??_LCDWriteCharacter+1,w
 13936  1698  0085               	movwf	5
 13937  1699  0800               	movf	0,w	;code access
 13938  169A  00F8               	movwf	??_LCDWriteCharacter+2
 13939  169B  0878               	movf	??_LCDWriteCharacter+2,w
 13940  169C  00F0               	movwf	LCDWrite@data
 13941  169D  3001               	movlw	1
 13942  169E  3193  2336  3196   	fcall	_LCDWrite
 13943                           
 13944                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13945  16A1  087A               	movf	LCDWriteCharacter@base,w
 13946  16A2  3E02               	addlw	2
 13947  16A3  00F6               	movwf	??_LCDWriteCharacter
 13948  16A4  3000               	movlw	0
 13949  16A5  3D7B               	addwfc	LCDWriteCharacter@base+1,w
 13950  16A6  00F7               	movwf	??_LCDWriteCharacter+1
 13951  16A7  3000               	movlw	low (_fonts| (0+32768))
 13952  16A8  0776               	addwf	??_LCDWriteCharacter,w
 13953  16A9  0084               	movwf	4
 13954  16AA  3088               	movlw	high (_fonts| (0+32768))
 13955  16AB  3D77               	addwfc	??_LCDWriteCharacter+1,w
 13956  16AC  0085               	movwf	5
 13957  16AD  0800               	movf	0,w	;code access
 13958  16AE  00F8               	movwf	??_LCDWriteCharacter+2
 13959  16AF  0878               	movf	??_LCDWriteCharacter+2,w
 13960  16B0  00F0               	movwf	LCDWrite@data
 13961  16B1  3001               	movlw	1
 13962  16B2  3193  2336  3196   	fcall	_LCDWrite
 13963                           
 13964                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13965  16B5  01F0               	clrf	LCDWrite@data
 13966  16B6  3001               	movlw	1
 13967  16B7  3193  2336         	fcall	_LCDWrite
 13968  16B9  0008               	return
 13969  16BA                     __end_of_LCDWriteCharacter:	
 13970                           
 13971                           	psect	text41
 13972  129F                     __ptext41:	
 13973 ;; *************** function ___wmul *****************
 13974 ;; Defined at:
 13975 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13976 ;; Parameters:    Size  Location     Type
 13977 ;;  multiplier      2    0[COMMON] unsigned int 
 13978 ;;  multiplicand    2    2[COMMON] unsigned int 
 13979 ;; Auto vars:     Size  Location     Type
 13980 ;;  product         2    4[COMMON] unsigned int 
 13981 ;; Return value:  Size  Location     Type
 13982 ;;                  2    0[COMMON] unsigned int 
 13983 ;; Registers used:
 13984 ;;		wreg, status,2, status,0
 13985 ;; Tracked objects:
 13986 ;;		On entry : 0/0
 13987 ;;		On exit  : 0/0
 13988 ;;		Unchanged: 0/0
 13989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13993 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13994 ;;Total ram usage:        6 bytes
 13995 ;; Hardware stack levels used:    1
 13996 ;; This function calls:
 13997 ;;		Nothing
 13998 ;; This function is called by:
 13999 ;;		_readIAnalog
 14000 ;;		_LCDWriteCharacter
 14001 ;;		_eval_poly
 14002 ;; This function uses a non-reentrant model
 14003 ;;
 14004                           
 14005                           
 14006                           ;psect for function ___wmul
 14007  129F                     ___wmul:	
 14008                           
 14009                           ;incstack = 0
 14010                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14011  129F  01F4               	clrf	___wmul@product
 14012  12A0  01F5               	clrf	___wmul@product+1
 14013  12A1                     l2303:	
 14014  12A1  1C70               	btfss	___wmul@multiplier,0
 14015  12A2  2AA7               	goto	l603
 14016  12A3  0872               	movf	___wmul@multiplicand,w
 14017  12A4  07F4               	addwf	___wmul@product,f
 14018  12A5  0873               	movf	___wmul@multiplicand+1,w
 14019  12A6  3DF5               	addwfc	___wmul@product+1,f
 14020  12A7                     l603:	
 14021  12A7  3001               	movlw	1
 14022  12A8                     u2235:	
 14023  12A8  35F2               	lslf	___wmul@multiplicand,f
 14024  12A9  0DF3               	rlf	___wmul@multiplicand+1,f
 14025  12AA  0B89               	decfsz	9,f
 14026  12AB  2AA8               	goto	u2235
 14027  12AC  3001               	movlw	1
 14028  12AD                     u2245:	
 14029  12AD  36F1               	lsrf	___wmul@multiplier+1,f
 14030  12AE  0CF0               	rrf	___wmul@multiplier,f
 14031  12AF  0B89               	decfsz	9,f
 14032  12B0  2AAD               	goto	u2245
 14033  12B1  0870               	movf	___wmul@multiplier,w
 14034  12B2  0471               	iorwf	___wmul@multiplier+1,w
 14035  12B3  1D03               	btfss	3,2
 14036  12B4  2AA1               	goto	l2303
 14037  12B5  0875               	movf	___wmul@product+1,w
 14038  12B6  00F1               	movwf	?___wmul+1
 14039  12B7  0874               	movf	___wmul@product,w
 14040  12B8  00F0               	movwf	?___wmul
 14041  12B9  0008               	return
 14042  12BA                     __end_of___wmul:	
 14043                           
 14044                           	psect	text42
 14045  1336                     __ptext42:	
 14046 ;; *************** function _LCDWrite *****************
 14047 ;; Defined at:
 14048 ;;		line 281 in file "lcd.c"
 14049 ;; Parameters:    Size  Location     Type
 14050 ;;  data_or_comm    1    wreg     unsigned char 
 14051 ;;  data            1    0[COMMON] unsigned char 
 14052 ;; Auto vars:     Size  Location     Type
 14053 ;;  data_or_comm    1    2[COMMON] unsigned char 
 14054 ;;  i               1    4[COMMON] unsigned char 
 14055 ;;  d               1    3[COMMON] unsigned char 
 14056 ;; Return value:  Size  Location     Type
 14057 ;;                  1    wreg      void 
 14058 ;; Registers used:
 14059 ;;		wreg, status,2, status,0
 14060 ;; Tracked objects:
 14061 ;;		On entry : 0/0
 14062 ;;		On exit  : 0/0
 14063 ;;		Unchanged: 0/0
 14064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14065 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14066 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14068 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14069 ;;Total ram usage:        5 bytes
 14070 ;; Hardware stack levels used:    1
 14071 ;; This function calls:
 14072 ;;		Nothing
 14073 ;; This function is called by:
 14074 ;;		_gotoXY
 14075 ;;		_LCDWriteCharacter
 14076 ;;		_LCDClear
 14077 ;;		_LCDInit
 14078 ;; This function uses a non-reentrant model
 14079 ;;
 14080                           
 14081                           
 14082                           ;psect for function _LCDWrite
 14083  1336                     _LCDWrite:	
 14084                           
 14085                           ;incstack = 0
 14086                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 14087                           ;LCDWrite@data_or_command stored from wreg
 14088  1336  00F2               	movwf	LCDWrite@data_or_command
 14089                           
 14090                           ;lcd.c: 283: uint8_t i,d;
 14091                           ;lcd.c: 285: d=data;
 14092  1337  0870               	movf	LCDWrite@data,w
 14093  1338  00F1               	movwf	??_LCDWrite
 14094  1339  0871               	movf	??_LCDWrite,w
 14095  133A  00F3               	movwf	LCDWrite@d
 14096                           
 14097                           ;lcd.c: 287: if(data_or_command == 0)
 14098  133B  0872               	movf	LCDWrite@data_or_command,w
 14099  133C  1D03               	btfss	3,2
 14100  133D  2B41               	goto	l215
 14101                           
 14102                           ;lcd.c: 288: {
 14103                           ;lcd.c: 289: LATAbits.LATA2 = 0;
 14104  133E  0020               	movlb	0	; select bank0
 14105  133F  1116               	bcf	22,2	;volatile
 14106                           
 14107                           ;lcd.c: 290: }
 14108  1340  2B43               	goto	l216
 14109  1341                     l215:	
 14110                           
 14111                           ;lcd.c: 291: else
 14112                           ;lcd.c: 292: {
 14113                           ;lcd.c: 293: LATAbits.LATA2 = 1;
 14114  1341  0020               	movlb	0	; select bank0
 14115  1342  1516               	bsf	22,2	;volatile
 14116  1343                     l216:	
 14117                           
 14118                           ;lcd.c: 294: }
 14119                           ;lcd.c: 296: LATAbits.LATA1 = 0;
 14120  1343  1096               	bcf	22,1	;volatile
 14121                           
 14122                           ;lcd.c: 298: for(i=0;i<8;i++)
 14123  1344  01F4               	clrf	LCDWrite@i
 14124  1345  3008               	movlw	8
 14125  1346  0274               	subwf	LCDWrite@i,w
 14126  1347  1803               	btfsc	3,0
 14127  1348  2B59               	goto	l218
 14128  1349                     l217:	
 14129                           
 14130                           ;lcd.c: 299: {
 14131                           ;lcd.c: 300: LATAbits.LATA3 = 0;
 14132  1349  1196               	bcf	22,3	;volatile
 14133                           
 14134                           ;lcd.c: 302: if(d&0x80)
 14135  134A  1FF3               	btfss	LCDWrite@d,7
 14136  134B  2B4D               	goto	l219
 14137                           
 14138                           ;lcd.c: 303: {
 14139                           ;lcd.c: 304: LATAbits.LATA3 = 1;
 14140  134C  1596               	bsf	22,3	;volatile
 14141  134D                     l219:	
 14142                           
 14143                           ;lcd.c: 305: }
 14144                           ;lcd.c: 307: LATAbits.LATA4 = 1;
 14145  134D  1616               	bsf	22,4	;volatile
 14146                           
 14147                           ;lcd.c: 309: d<<=1;
 14148  134E  1003               	clrc
 14149  134F  0DF3               	rlf	LCDWrite@d,f
 14150                           
 14151                           ;lcd.c: 311: LATAbits.LATA4=0;
 14152  1350  1216               	bcf	22,4	;volatile
 14153  1351  3001               	movlw	1
 14154  1352  00F1               	movwf	??_LCDWrite
 14155  1353  0871               	movf	??_LCDWrite,w
 14156  1354  07F4               	addwf	LCDWrite@i,f
 14157  1355  3008               	movlw	8
 14158  1356  0274               	subwf	LCDWrite@i,w
 14159  1357  1C03               	skipc
 14160  1358  2B49               	goto	l217
 14161  1359                     l218:	
 14162                           
 14163                           ;lcd.c: 312: }
 14164                           ;lcd.c: 314: LATAbits.LATA1 = 1;
 14165  1359  1496               	bsf	22,1	;volatile
 14166  135A  0008               	return
 14167  135B                     __end_of_LCDWrite:	
 14168                           
 14169                           	psect	text43
 14170  0EF0                     __ptext43:	
 14171 ;; *************** function _Battery_State_Machine *****************
 14172 ;; Defined at:
 14173 ;;		line 28 in file "battery_charger.c"
 14174 ;; Parameters:    Size  Location     Type
 14175 ;;  z               1    wreg     unsigned char 
 14176 ;; Auto vars:     Size  Location     Type
 14177 ;;  z               1    5[COMMON] unsigned char 
 14178 ;; Return value:  Size  Location     Type
 14179 ;;                  1    wreg      void 
 14180 ;; Registers used:
 14181 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14182 ;; Tracked objects:
 14183 ;;		On entry : 0/0
 14184 ;;		On exit  : 0/0
 14185 ;;		Unchanged: 0/0
 14186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14189 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14190 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14191 ;;Total ram usage:        6 bytes
 14192 ;; Hardware stack levels used:    1
 14193 ;; This function calls:
 14194 ;;		Nothing
 14195 ;; This function is called by:
 14196 ;;		_main
 14197 ;; This function uses a non-reentrant model
 14198 ;;
 14199                           
 14200                           
 14201                           ;psect for function _Battery_State_Machine
 14202  0EF0                     _Battery_State_Machine:	
 14203                           
 14204                           ;incstack = 0
 14205                           ; Regs used in _Battery_State_Machine: [wreg+fsr1l+fsr1h+status,2+status,0]
 14206                           ;Battery_State_Machine@z stored from wreg
 14207  0EF0  00F5               	movwf	Battery_State_Machine@z
 14208                           
 14209                           ;battery_charger.c: 30: if(batteryState[z]==PRECHARGE)
 14210  0EF1  0875               	movf	Battery_State_Machine@z,w
 14211  0EF2  3ED0               	addlw	(low (_batteryState| 0))& (0+255)
 14212  0EF3  0086               	movwf	6
 14213  0EF4  0187               	clrf	7
 14214  0EF5  3003               	movlw	3
 14215  0EF6  0601               	xorwf	1,w
 14216  0EF7  1D03               	btfss	3,2
 14217  0EF8  2F42               	goto	l2921
 14218                           
 14219                           ;battery_charger.c: 31: {
 14220                           ;battery_charger.c: 32: if(voltage[z]<1075)
 14221  0EF9  3575               	lslf	Battery_State_Machine@z,w
 14222  0EFA  3EB0               	addlw	(low (_voltage| 0))& (0+255)
 14223  0EFB  0086               	movwf	6
 14224  0EFC  0187               	clrf	7
 14225  0EFD  3F40               	moviw [0]fsr1
 14226  0EFE  00F0               	movwf	??_Battery_State_Machine
 14227  0EFF  3F41               	moviw [1]fsr1
 14228  0F00  00F1               	movwf	??_Battery_State_Machine+1
 14229  0F01  0871               	movf	??_Battery_State_Machine+1,w
 14230  0F02  3A80               	xorlw	128
 14231  0F03  00F2               	movwf	??_Battery_State_Machine+2
 14232  0F04  3084               	movlw	132
 14233  0F05  0272               	subwf	??_Battery_State_Machine+2,w
 14234  0F06  1D03               	skipz
 14235  0F07  2F0A               	goto	u3285
 14236  0F08  3033               	movlw	51
 14237  0F09  0270               	subwf	??_Battery_State_Machine,w
 14238  0F0A                     u3285:	
 14239  0F0A  1803               	skipnc
 14240  0F0B  2F31               	goto	l2919
 14241                           
 14242                           ;battery_charger.c: 33: {
 14243                           ;battery_charger.c: 34: if(stateCounter[z]>0)
 14244  0F0C  3575               	lslf	Battery_State_Machine@z,w
 14245  0F0D  3E5C               	addlw	(low (_stateCounter| 0))& (0+255)
 14246  0F0E  0086               	movwf	6
 14247  0F0F  0187               	clrf	7
 14248  0F10  3F40               	moviw [0]fsr1
 14249  0F11  00F0               	movwf	??_Battery_State_Machine
 14250  0F12  3F41               	moviw [1]fsr1
 14251  0F13  00F1               	movwf	??_Battery_State_Machine+1
 14252  0F14  0871               	movf	??_Battery_State_Machine+1,w
 14253  0F15  3A80               	xorlw	128
 14254  0F16  00F2               	movwf	??_Battery_State_Machine+2
 14255  0F17  3080               	movlw	128
 14256  0F18  0272               	subwf	??_Battery_State_Machine+2,w
 14257  0F19  1D03               	skipz
 14258  0F1A  2F1D               	goto	u3295
 14259  0F1B  3001               	movlw	1
 14260  0F1C  0270               	subwf	??_Battery_State_Machine,w
 14261  0F1D                     u3295:	
 14262  0F1D  1C03               	skipc
 14263  0F1E  2F2A               	goto	l2917
 14264                           
 14265                           ;battery_charger.c: 35: {
 14266                           ;battery_charger.c: 36: stateCounter[z]-=1;
 14267  0F1F  3575               	lslf	Battery_State_Machine@z,w
 14268  0F20  3E5C               	addlw	(low (_stateCounter| 0))& (0+255)
 14269  0F21  0086               	movwf	6
 14270  0F22  0187               	clrf	7
 14271  0F23  30FF               	movlw	255
 14272  0F24  0781               	addwf	1,f
 14273  0F25  3141               	addfsr 1,1
 14274  0F26  30FF               	movlw	255
 14275  0F27  3D81               	addwfc	1,f
 14276  0F28  317F               	addfsr 1,-1
 14277                           
 14278                           ;battery_charger.c: 37: }
 14279  0F29  0008               	return
 14280  0F2A                     l2917:	
 14281                           
 14282                           ;battery_charger.c: 38: else
 14283                           ;battery_charger.c: 39: {
 14284                           ;battery_charger.c: 40: batteryState[z]=FAULT;
 14285  0F2A  0875               	movf	Battery_State_Machine@z,w
 14286  0F2B  3ED0               	addlw	(low (_batteryState| 0))& (0+255)
 14287  0F2C  0086               	movwf	6
 14288  0F2D  0187               	clrf	7
 14289  0F2E  0181               	clrf	1
 14290  0F2F  0A81               	incf	1,f
 14291                           
 14292                           ;battery_charger.c: 41: }
 14293                           ;battery_charger.c: 42: }
 14294  0F30  0008               	return
 14295  0F31                     l2919:	
 14296                           
 14297                           ;battery_charger.c: 43: else
 14298                           ;battery_charger.c: 44: {
 14299                           ;battery_charger.c: 45: batteryState[z]=CHARGE;
 14300  0F31  3004               	movlw	4
 14301  0F32  00F0               	movwf	??_Battery_State_Machine
 14302  0F33  0875               	movf	Battery_State_Machine@z,w
 14303  0F34  3ED0               	addlw	(low (_batteryState| 0))& (0+255)
 14304  0F35  0086               	movwf	6
 14305  0F36  0187               	clrf	7
 14306  0F37  0870               	movf	??_Battery_State_Machine,w
 14307  0F38  0081               	movwf	1
 14308                           
 14309                           ;battery_charger.c: 46: Iref[z]=35;
 14310  0F39  3575               	lslf	Battery_State_Machine@z,w
 14311  0F3A  3EC4               	addlw	(low (_Iref| 0))& (0+255)
 14312  0F3B  0086               	movwf	6
 14313  0F3C  0187               	clrf	7
 14314  0F3D  3023               	movlw	35
 14315  0F3E  3FC0               	movwi [0]fsr1
 14316  0F3F  3000               	movlw	0
 14317  0F40  3FC1               	movwi [1]fsr1
 14318                           
 14319                           ;battery_charger.c: 47: }
 14320                           ;battery_charger.c: 48: }
 14321  0F41  0008               	return
 14322  0F42                     l2921:	
 14323                           
 14324                           ;battery_charger.c: 49: else if(batteryState[z]==CHARGE)
 14325  0F42  0875               	movf	Battery_State_Machine@z,w
 14326  0F43  3ED0               	addlw	(low (_batteryState| 0))& (0+255)
 14327  0F44  0086               	movwf	6
 14328  0F45  0187               	clrf	7
 14329  0F46  3004               	movlw	4
 14330  0F47  0601               	xorwf	1,w
 14331  0F48  1D03               	btfss	3,2
 14332  0F49  2FD2               	goto	l2939
 14333                           
 14334                           ;battery_charger.c: 50: {
 14335                           ;battery_charger.c: 51: Vref[z]=1425;
 14336  0F4A  3575               	lslf	Battery_State_Machine@z,w
 14337  0F4B  3EC0               	addlw	(low (_Vref| 0))& (0+255)
 14338  0F4C  0086               	movwf	6
 14339  0F4D  0187               	clrf	7
 14340  0F4E  3091               	movlw	145
 14341  0F4F  3FC0               	movwi [0]fsr1
 14342  0F50  3005               	movlw	5
 14343  0F51  3FC1               	movwi [1]fsr1
 14344                           
 14345                           ;battery_charger.c: 52: if(!(Imode[z]))
 14346  0F52  0875               	movf	Battery_State_Machine@z,w
 14347  0F53  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 14348  0F54  0086               	movwf	6
 14349  0F55  0187               	clrf	7
 14350  0F56  0801               	movf	1,w
 14351  0F57  1D03               	btfss	3,2
 14352  0F58  2FB9               	goto	l2935
 14353                           
 14354                           ;battery_charger.c: 53: {
 14355                           ;battery_charger.c: 54: if(current[z] < Imin[z])
 14356  0F59  3575               	lslf	Battery_State_Machine@z,w
 14357  0F5A  3E35               	addlw	(low (_Imin| (0+256)))& (0+255)
 14358  0F5B  0086               	movwf	6
 14359  0F5C  3001               	movlw	1	; select bank2/3
 14360  0F5D  0087               	movwf	7
 14361  0F5E  3F40               	moviw [0]fsr1
 14362  0F5F  00F0               	movwf	??_Battery_State_Machine
 14363  0F60  3F41               	moviw [1]fsr1
 14364  0F61  00F1               	movwf	??_Battery_State_Machine+1
 14365  0F62  3575               	lslf	Battery_State_Machine@z,w
 14366  0F63  3EB8               	addlw	(low (_current| 0))& (0+255)
 14367  0F64  0086               	movwf	6
 14368  0F65  0187               	clrf	7
 14369  0F66  3F40               	moviw [0]fsr1
 14370  0F67  00F2               	movwf	??_Battery_State_Machine+2
 14371  0F68  3F41               	moviw [1]fsr1
 14372  0F69  00F3               	movwf	??_Battery_State_Machine+3
 14373  0F6A  0873               	movf	??_Battery_State_Machine+3,w
 14374  0F6B  3A80               	xorlw	128
 14375  0F6C  00F4               	movwf	??_Battery_State_Machine+4
 14376  0F6D  0871               	movf	??_Battery_State_Machine+1,w
 14377  0F6E  3A80               	xorlw	128
 14378  0F6F  0274               	subwf	??_Battery_State_Machine+4,w
 14379  0F70  1D03               	skipz
 14380  0F71  2F74               	goto	u3325
 14381  0F72  0870               	movf	??_Battery_State_Machine,w
 14382  0F73  0272               	subwf	??_Battery_State_Machine+2,w
 14383  0F74                     u3325:	
 14384  0F74  1803               	skipnc
 14385  0F75  2FA0               	goto	l2931
 14386                           
 14387                           ;battery_charger.c: 55: {
 14388                           ;battery_charger.c: 56: IminCount[z]-=2;
 14389  0F76  3575               	lslf	Battery_State_Machine@z,w
 14390  0F77  3E60               	addlw	(low (_IminCount| 0))& (0+255)
 14391  0F78  0086               	movwf	6
 14392  0F79  0187               	clrf	7
 14393  0F7A  3002               	movlw	2
 14394  0F7B  0281               	subwf	1,f
 14395  0F7C  3141               	addfsr 1,1
 14396  0F7D  3000               	movlw	0
 14397  0F7E  3B81               	subwfb	1,f
 14398  0F7F  317F               	addfsr 1,-1
 14399                           
 14400                           ;battery_charger.c: 57: if(IminCount[z]<10)
 14401  0F80  3575               	lslf	Battery_State_Machine@z,w
 14402  0F81  3E60               	addlw	(low (_IminCount| 0))& (0+255)
 14403  0F82  0086               	movwf	6
 14404  0F83  0187               	clrf	7
 14405  0F84  3F40               	moviw [0]fsr1
 14406  0F85  00F0               	movwf	??_Battery_State_Machine
 14407  0F86  3F41               	moviw [1]fsr1
 14408  0F87  00F1               	movwf	??_Battery_State_Machine+1
 14409  0F88  3000               	movlw	0
 14410  0F89  0271               	subwf	??_Battery_State_Machine+1,w
 14411  0F8A  300A               	movlw	10
 14412  0F8B  1903               	skipnz
 14413  0F8C  0270               	subwf	??_Battery_State_Machine,w
 14414  0F8D  1803               	skipnc
 14415  0F8E  0008               	return
 14416                           
 14417                           ;battery_charger.c: 58: {
 14418                           ;battery_charger.c: 59: batteryState[z] = FLOAT;
 14419  0F8F  3005               	movlw	5
 14420  0F90  00F0               	movwf	??_Battery_State_Machine
 14421  0F91  0875               	movf	Battery_State_Machine@z,w
 14422  0F92  3ED0               	addlw	(low (_batteryState| 0))& (0+255)
 14423  0F93  0086               	movwf	6
 14424  0F94  0187               	clrf	7
 14425  0F95  0870               	movf	??_Battery_State_Machine,w
 14426  0F96  0081               	movwf	1
 14427                           
 14428                           ;battery_charger.c: 60: IminCount[z]=10;
 14429  0F97  3575               	lslf	Battery_State_Machine@z,w
 14430  0F98  3E60               	addlw	(low (_IminCount| 0))& (0+255)
 14431  0F99  0086               	movwf	6
 14432  0F9A  0187               	clrf	7
 14433  0F9B  300A               	movlw	10
 14434  0F9C  3FC0               	movwi [0]fsr1
 14435  0F9D  3000               	movlw	0
 14436  0F9E  3FC1               	movwi [1]fsr1
 14437                           
 14438                           ;battery_charger.c: 61: }
 14439                           ;battery_charger.c: 62: }
 14440  0F9F  0008               	return
 14441  0FA0                     l2931:	
 14442                           
 14443                           ;battery_charger.c: 63: else
 14444                           ;battery_charger.c: 64: {
 14445                           ;battery_charger.c: 65: if(IminCount[z]<60)IminCount[z]+=1;
 14446  0FA0  3575               	lslf	Battery_State_Machine@z,w
 14447  0FA1  3E60               	addlw	(low (_IminCount| 0))& (0+255)
 14448  0FA2  0086               	movwf	6
 14449  0FA3  0187               	clrf	7
 14450  0FA4  3F40               	moviw [0]fsr1
 14451  0FA5  00F0               	movwf	??_Battery_State_Machine
 14452  0FA6  3F41               	moviw [1]fsr1
 14453  0FA7  00F1               	movwf	??_Battery_State_Machine+1
 14454  0FA8  3000               	movlw	0
 14455  0FA9  0271               	subwf	??_Battery_State_Machine+1,w
 14456  0FAA  303C               	movlw	60
 14457  0FAB  1903               	skipnz
 14458  0FAC  0270               	subwf	??_Battery_State_Machine,w
 14459  0FAD  1803               	skipnc
 14460  0FAE  0008               	return
 14461  0FAF  3575               	lslf	Battery_State_Machine@z,w
 14462  0FB0  3E60               	addlw	(low (_IminCount| 0))& (0+255)
 14463  0FB1  0086               	movwf	6
 14464  0FB2  0187               	clrf	7
 14465  0FB3  3001               	movlw	1
 14466  0FB4  0781               	addwf	1,f
 14467  0FB5  3141               	addfsr 1,1
 14468  0FB6  1803               	skipnc
 14469  0FB7  0A81               	incf	1,f
 14470                           
 14471                           ;battery_charger.c: 66: }
 14472                           ;battery_charger.c: 67: }
 14473  0FB8  0008               	return
 14474  0FB9                     l2935:	
 14475                           
 14476                           ;battery_charger.c: 68: else if(IminCount[z]<60)IminCount[z]+=1;
 14477  0FB9  3575               	lslf	Battery_State_Machine@z,w
 14478  0FBA  3E60               	addlw	(low (_IminCount| 0))& (0+255)
 14479  0FBB  0086               	movwf	6
 14480  0FBC  0187               	clrf	7
 14481  0FBD  3F40               	moviw [0]fsr1
 14482  0FBE  00F0               	movwf	??_Battery_State_Machine
 14483  0FBF  3F41               	moviw [1]fsr1
 14484  0FC0  00F1               	movwf	??_Battery_State_Machine+1
 14485  0FC1  3000               	movlw	0
 14486  0FC2  0271               	subwf	??_Battery_State_Machine+1,w
 14487  0FC3  303C               	movlw	60
 14488  0FC4  1903               	skipnz
 14489  0FC5  0270               	subwf	??_Battery_State_Machine,w
 14490  0FC6  1803               	skipnc
 14491  0FC7  0008               	return
 14492  0FC8  3575               	lslf	Battery_State_Machine@z,w
 14493  0FC9  3E60               	addlw	(low (_IminCount| 0))& (0+255)
 14494  0FCA  0086               	movwf	6
 14495  0FCB  0187               	clrf	7
 14496  0FCC  3001               	movlw	1
 14497  0FCD  0781               	addwf	1,f
 14498  0FCE  3141               	addfsr 1,1
 14499  0FCF  1803               	skipnc
 14500  0FD0  0A81               	incf	1,f
 14501                           
 14502                           ;battery_charger.c: 69: }
 14503  0FD1  0008               	return
 14504  0FD2                     l2939:	
 14505                           
 14506                           ;battery_charger.c: 70: else if(batteryState[z] == FLOAT)
 14507  0FD2  0875               	movf	Battery_State_Machine@z,w
 14508  0FD3  3ED0               	addlw	(low (_batteryState| 0))& (0+255)
 14509  0FD4  0086               	movwf	6
 14510  0FD5  0187               	clrf	7
 14511  0FD6  3005               	movlw	5
 14512  0FD7  0601               	xorwf	1,w
 14513  0FD8  1D03               	btfss	3,2
 14514  0FD9  2FF0               	goto	l2943
 14515                           
 14516                           ;battery_charger.c: 71: {
 14517                           ;battery_charger.c: 72: Vref[z]=1350;
 14518  0FDA  3575               	lslf	Battery_State_Machine@z,w
 14519  0FDB  3EC0               	addlw	(low (_Vref| 0))& (0+255)
 14520  0FDC  0086               	movwf	6
 14521  0FDD  0187               	clrf	7
 14522  0FDE  3046               	movlw	70
 14523  0FDF  3FC0               	movwi [0]fsr1
 14524  0FE0  3005               	movlw	5
 14525  0FE1  3FC1               	movwi [1]fsr1
 14526                           
 14527                           ;battery_charger.c: 73: Iref[z]=15;
 14528  0FE2  3575               	lslf	Battery_State_Machine@z,w
 14529  0FE3  3EC4               	addlw	(low (_Iref| 0))& (0+255)
 14530  0FE4  0086               	movwf	6
 14531  0FE5  0187               	clrf	7
 14532  0FE6  300F               	movlw	15
 14533  0FE7  3FC0               	movwi [0]fsr1
 14534  0FE8  3000               	movlw	0
 14535  0FE9  3FC1               	movwi [1]fsr1
 14536                           
 14537                           ;battery_charger.c: 74: Imode[z]=0;
 14538  0FEA  0875               	movf	Battery_State_Machine@z,w
 14539  0FEB  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 14540  0FEC  0086               	movwf	6
 14541  0FED  0187               	clrf	7
 14542  0FEE  0181               	clrf	1
 14543                           
 14544                           ;battery_charger.c: 75: }
 14545  0FEF  0008               	return
 14546  0FF0                     l2943:	
 14547                           
 14548                           ;battery_charger.c: 76: else
 14549                           ;battery_charger.c: 77: if(batteryState[z] == FAULT)
 14550  0FF0  0875               	movf	Battery_State_Machine@z,w
 14551  0FF1  3ED0               	addlw	(low (_batteryState| 0))& (0+255)
 14552  0FF2  0086               	movwf	6
 14553  0FF3  0187               	clrf	7
 14554  0FF4  0301               	decf	1,w
 14555  0FF5  1D03               	btfss	3,2
 14556  0FF6  0008               	return
 14557                           
 14558                           ;battery_charger.c: 78: {
 14559                           ;battery_charger.c: 79: batteryState[z]=PRECHARGE;
 14560  0FF7  3003               	movlw	3
 14561  0FF8  00F0               	movwf	??_Battery_State_Machine
 14562  0FF9  0875               	movf	Battery_State_Machine@z,w
 14563  0FFA  3ED0               	addlw	(low (_batteryState| 0))& (0+255)
 14564  0FFB  0086               	movwf	6
 14565  0FFC  0187               	clrf	7
 14566  0FFD  0870               	movf	??_Battery_State_Machine,w
 14567  0FFE  0081               	movwf	1
 14568  0FFF  0008               	return
 14569  1000                     __end_of_Battery_State_Machine:	
 14570  007E                     btemp	set	126	;btemp
 14571  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    330
    Data        10
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      78
    BANK1            80     25      77
    BANK2            80      0      33
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            48      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCDWriteString@characters	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_LCDWriteString
    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readIAnalog->___aldiv
    _readButton->_ADCRead
    _calculateCurrent3->___awtoft
    _calculateCurrent2->___awtoft
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteString->_LCDWriteCharacter
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftadd->___ftmul
    _readIAnalog->___aldiv
    _calculateCurrent3->___fttol
    _calculateCurrent2->___fttol
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   88198
                                             56 BANK0      4     4      0
                                              0 BANK1     25    25      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                     _LCDWriteString
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                           ___awtoft
                            ___ftdiv
                            ___fttol
                  _calculateCurrent0
                  _calculateCurrent1
                  _calculateCurrent2
                  _calculateCurrent3
                         _cc_cv_mode
                             _gotoXY
                         _readButton
                        _readIAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   31523
                                             45 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   15743
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    6785
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2537
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3356
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3183
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readIAnalog                                         24    22      2    1498
                                              9 COMMON     4     4      0
                                              6 BANK0     20    18      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           6     6      0     506
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent3                                    3     3      0    6422
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent2                                    3     3      0    6422
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6422
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6422
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     729
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3365
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2328
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3979
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     803
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    3021
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    2172
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           2     2      0     132
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     1      2    1847
                                             12 COMMON     2     0      2
                                              0 BANK0      1     1      0
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7267
                                              0 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1643
                                              6 COMMON     6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     728
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     803
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                6     6      0     572
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
     ___awdiv
     ___lwmod
   _LCDWriteString
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent2
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent3
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readButton
     _ADCRead
   _readIAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     19      4D       7       96.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      21       9       41.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               30      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      CA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      CA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jul 20 12:40:15 2018

                       _stateCounter 005C                                    _j 006A  
                                  _x 006D               LCDWriteInt@fieldLength 0022  
            __size_of_PWM_Initialize 001F                          __CFG_CP$OFF 0000  
                                 l60 093D                                   l57 0936  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 0072  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 003C  
                       ___ftadd@exp2 003B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 003A                                  l130 0085  
                                l125 0032                                  l126 0043  
                                l215 1341                                  l216 1343  
                                l217 1349                                  l218 1359  
                                l219 134D                                  l603 12A7  
                      LCDClear@index 0079                                  l489 04CF  
                                l658 0955                                  l771 175F  
                                l772 1767                                  l764 174C  
                                l855 0A33                                  l795 0E99  
                                _GIE 005F                                  _RB2 006A  
                       __CFG_CPD$OFF 0000                                  _log 0AF6  
                    __end_of_ADCRead 0944                      _TMR2_Initialize 121A  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                    __end_of_LCDInit 148B                         ?_LCDWriteInt 0020  
                       __CFG_ZCD$OFF 0000                         ___ftdiv@cntr 002A  
                       ___ftdiv@sign 002F                                 l3001 17DC  
                               l3013 17FD                                 l2303 12A1  
                               l3007 17E5                                 l3015 17FE  
                               l3025 1249                                 l3121 155F  
                               l2321 0E22                                 l3051 0CAF  
                               l2251 1722                                 l3115 151A  
                               l2331 0E38                                 l3061 0CC5  
                               l3133 15E9                                 l2325 0E29  
                               l2421 0C2A                                 l2413 0C16  
                               l3301 04DE                                 l3055 0CB3  
                               l3039 0C7B                                 l2255 1729  
                               l3127 15A4                                 l2351 0E6F  
                               l2343 0E52                                 l3223 03A4  
                               l3073 0CFE                                 l3057 0CB7  
                               l3049 0C82                                 l2265 1751  
                               l2257 1733                                 l2361 0E8B  
                               l2353 0E74                                 l2425 0C32  
                               l2409 0C0E                                 l3305 04F2  
                               l3241 03D3                                 l3217 0387  
                               l3161 024E                                 l3067 0CC9  
                               l3059 0CBF                                 l2267 1759  
                               l2259 1738                                 l2371 0EBD  
                               l2363 0E95                                 l2355 0E78  
                               l3069 0CF0                                 l2445 1320  
                               l2701 0966                                 l2381 0ED8  
                               l2349 0E65                                 l2453 14A1  
                               l3253 040A                                 l3229 03BE  
                               l3181 0286                                 l2711 0984  
                               l2367 0EAB                                 l2391 0BBD  
                               l3319 0519                                 l3247 03F0  
                               l3175 0268                                 l2801 0ABB  
                               l2457 14B7                                 l3273 045C  
                               l3169 0262                                 l2723 09AF  
                               l3267 0445                                 l3187 02B2  
                               l2709 0976                                 l2821 12C2  
                               l2397 0BD3                                 l2477 14D8  
                               l3453 07B1                                 l3293 04C7  
                               l3285 049B                                 l3277 0463  
                               l2575 137C                                 l2831 09DF  
                               l2727 09BD                                 l2719 09A4  
                               l2903 01F2                                 l2495 1713  
                               l3287 049F                                 l2921 0F42  
                               l2745 162A                                 l2569 1368  
                               l2809 0AD4                                 l2681 0B28  
                               l3449 07A8                                 l2931 0FA0  
                               l2771 1661                                 l2763 1650  
                               l2755 1632                                 l2739 161F  
                               l2851 0A1D                                 l2675 0B15  
                               l3299 04DB                                 l2917 0F2A  
                               l2757 163E                                 l2781 0A64  
                               l2943 0FF0                                 l2935 0FB9  
                               l2919 0F31                                 l2767 1659  
                               l2863 0A44                                 l2881 139F  
                               l2857 0A2A                                 l2849 0A0F  
                               l2961 005E                                 l2939 0FD2  
                               l2875 1387                                 l2787 0A7A  
                               l2859 0A36                                 l2877 1393  
                               l2885 13A8                                 l2957 0051  
                               l2981 17A2                                 l2991 17CE  
                               l2993 17D0                                 l2987 17BC  
                               ?_log 0047                                 STR_1 1825  
                               STR_2 1820                                 STR_3 181B  
                               u2105 1747                                 u2125 1754  
                               u3005 0ACB                                 _LATA 0016  
                               _LATB 0017                                 u3015 0AD5  
                               _LATC 0018                                 u2235 12A8  
                               u3115 0A2B                                 u2245 12AD  
                               u2165 176E                                 u2085 172E  
                               u3205 00F2                                 u3055 09E6  
                               u3215 0148                                 u2415 0E79  
                               u4015 0477                                 u3225 0182  
                               u4025 0494                                 _T2PR 028D  
                               u3155 138A                                 u3235 01CD  
                               u2355 0E53                                 u2515 0BDF  
                               u4035 04B9                                 u3325 0F74  
                               u3085 0A10                                 u2445 0E8C  
                               u2525 0BEF                                 u4117 0256  
                               u2710 1415                                 u3175 1399  
                               u4127 17EF                                 u3185 13A0  
                               u2705 137A                                 u4137 1439  
                               u3505 17AC                                 u3265 01FD  
                               u2385 0E66                                 u2545 0C17  
                               _T4PR 0293                                 u4147 1448  
                               u3515 17B8                                 u2555 0C1D  
                               u3285 0F0A                                 u3445 009F  
                               u3525 17C6                                 u2805 0985  
                               u3295 0F1D                                 u2815 0999  
                               u2905 163F                                 u3705 1514  
                               u3385 001F                                 u2825 09A5  
                               u2585 0C33                                 u2915 1649  
                               u3715 1559                                 u3475 00C1  
                               u2595 0C39                                 u3580 0C65  
                               u2925 1651                                 u3645 0CDE  
                               u3725 159E                                 u3485 1790  
                               u2695 1366                                 u3735 15E3  
                               u3495 179C                                 u2785 0979  
                               u3675 1282                                 u3915 03E1  
                               u3835 0395                                 u2885 1635  
                               u3685 1298                                 u3695 126C  
                               u2975 0A8C                                 u3935 03FF  
                               u3855 03B3                                 u2985 0A9C  
                               u2995 0ABC                                 u3795 0375  
                               u3965 043E                                 u3885 03D0  
                               u3985 0455                  tempCalc@analogValue 004D  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Imin 0135                                 _Iref 00C4  
                               _Iout 00CC                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Vref 00C0  
                               _main 021A                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               log@x 0047                         ?_readIAnalog 0026  
                      __CFG_BOREN$ON 0000                                 start 0002  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 002E                         ___ftmul@sign 002F  
                   __end_of_LCDClear 1381                         ___fttol@exp1 003D  
                              ??_log 004A                         ___fttol@lval 0039  
__size_of_Init_Battery_State_Machine 0033       __size_of_OSCILLATOR_Initialize 0009  
                   __end_of_LCDWrite 135B        __end_of_OSCILLATOR_Initialize 120E  
                    __end_of___aldiv 09C6                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADPCH 009E                                _ADREF 009A  
                    __end_of___awdiv 1666                                _ADPRE 009C  
                    __end_of___ftadd 0EF0                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      __end_of___ftdiv 0AF6  
                    __end_of___ftmul 0C5A                      ___awdiv@divisor 0070  
                    __end_of___ftsub 12D8                      __end_of___fttol 0A4D  
                              _T2CON 028E                                _LATA5 00B5  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 13AD  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 1228  
                              _Imode 00CE               ?_Battery_State_Machine 0070  
                              _cc_cv 0066                        ___awtoft@sign 007D  
                              _frexp 14C6                                _fonts 0800  
                              _errno 00C8                        ___ftpack@sign 0074  
                              main@j 00E0                         main@slowLoop 00DA  
                              status 0003                                wtemp0 007E  
                    __initialization 07B4                          log@exponent 004B  
                       __end_of_main 07B4              __end_of_TMR2_Initialize 1228  
                          ??_ADCRead 0073                               ??_main 0058  
                      ___fttol@sign1 0038                            ??_LCDInit 0075  
             Battery_State_Machine@z 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             ?_frexp 0070                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _CCPR1H 030D  
                             _CCPR1L 030C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                     __end_of___awtoft 1336  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                     __end_of___ftpack 177E  
                             _RA6PPS 0F16                               _RA7PPS 0F17  
                             _RB5PPS 0F1D                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                     __CFG_PWRTE$OFF 0000                       _LCDWriteString 1249  
                       _CCPTMRS0bits 021E                         _CCPTMRS1bits 021F  
                             ___ftge 148B                            ??___aldiv 0078  
                             ___wmul 129F                            ??___awdiv 0074  
                          ??___ftadd 0036                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 12F7                            ??___ftdiv 0026  
                          ??___ftmul 0026                            ??___ftsub 007E  
                          ??___fttol 0034                            ??___lwmod 0074  
                             _gotoXY 1236                               _button 006C  
            __end_of_TMR4_Initialize 1236                     ___awdiv@quotient 0077  
                             _totals 0120                ___ftmul@f3_as_product 002B  
                   __end_of_tempCalc 0DFA                         LCDWrite@data 0070  
                       LCDWriteInt@i 002F                         LCDWriteInt@j 002E  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 1417  
               __size_of_LCDWriteInt 00B9                     __end_oflog@coeff 181B  
            __end_of__initialization 07FD                           ___ftadd@f1 0030  
                         ___ftadd@f2 0033                           ___ftge@ff1 0070  
                         ___ftge@ff2 0073                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070               __end_of_LCDWriteString 125D  
                       eval_poly@res 0044                           ___ftdiv@f1 0023  
                         ___ftdiv@f2 0020                           ___ftdiv@f3 002B  
                         ___awtoft@c 0078                           ___ftmul@f1 0020  
                         ___ftmul@f2 0023               __end_of_PWM_Initialize 1316  
               __size_of_readIAnalog 013E                           ___ftsub@f1 0040  
                         ___ftsub@f2 003D                           ___fttol@f1 0030  
                     __pcstackCOMMON 0070                         __pidataBANK1 11FB  
                       __pidataBANK2 11FD                  ??_SYSTEM_Initialize 007B  
                      __end_of_frexp 1501                        __end_of_fonts 092F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
                 _PWM1_LoadDutyValue 125D                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 0004          __size_of_PWM7_LoadDutyValue 0016  
                     main@efficiency 00D2                  ?_PWM1_LoadDutyValue 0070  
                  LCDWriteInt@F14390 0130                    _calculateCurrent0 1501  
                  _calculateCurrent1 1546                    _calculateCurrent2 158B  
                  _calculateCurrent3 15D0                              ??_frexp 0074  
          __end_of_SYSTEM_Initialize 1450                           __pbssBANK0 005C  
                         __pbssBANK1 00A0                           __pbssBANK2 0120  
                 ?_calculateCurrent0 0070                   ?_calculateCurrent1 0070  
                 ?_calculateCurrent2 0070                   ?_calculateCurrent3 0070  
                       _batteryState 00D0                   __size_of_eval_poly 0060  
                         ??_LCDClear 0078                       main@faultCount 00D5  
                         ??_LCDWrite 0071                      ?_LCDWriteString 007C  
               ??_PWM1_LoadDutyValue 0072                  ??_calculateCurrent0 003E  
                ??_calculateCurrent1 003E                  ??_calculateCurrent2 003E  
                ??_calculateCurrent3 003E                      ?_PWM_Initialize 0070  
                         __pmaintext 021A                              ?___ftge 0070  
                            ?___wmul 0070                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 1289                              ?_gotoXY 0075  
                            _ADCRead 092F                     ?_TMR4_Initialize 0070  
                          ?___awtoft 0078                            ?___ftpack 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 0070  
                            _LCDInit 1450            __end_of_calculateCurrent0 1546  
          __end_of_calculateCurrent1 158B            __end_of_calculateCurrent2 15D0  
          __end_of_calculateCurrent3 1615                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 00DF  
                     main@dutyCycle1 00E3                       main@dutyCycle6 00E7  
                     main@dutyCycle7 00E9                    main@tempFanOutput 00E5  
                         _lastButton 006B                            ?_tempCalc 004D  
                            ___aldiv 0944                      __size_of___ftge 003B  
                            ___awdiv 1615                              ___ftadd 0DFA  
                         _readButton 177E                              ___ftdiv 0A4D  
                    __size_of___wmul 001B                              ___ftmul 0BA6  
                            ___ftsub 12BA                              ___fttol 09C6  
                 main@displayRefresh 00D9                              ___lwmod 1381  
                    __size_of_gotoXY 0013                           ??___awtoft 007B  
                         ??___ftpack 0075                    __end_of_eval_poly 171A  
                            __ptext1 0D13                              __ptext2 0AF6  
                            __ptext3 14C6                              __ptext4 16BA  
                            __ptext5 0BA6                              __ptext6 148B  
                            __ptext7 12BA                              __ptext8 0DFA  
                            __ptext9 00DC                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 1205                            _T2CONbits 028E  
                            _current 00B8                         __size_of_log 00B0  
                     ADCRead@channel 0073                     ___aldiv@dividend 0074  
                          _T4CONbits 0294             ??_PIN_MANAGER_Initialize 0070  
                            _samples 2260           __size_of_SYSTEM_Initialize 0039  
                            clrloop0 120F                              _voltage 00B0  
       ??_Init_Battery_State_Machine 0070                 end_of_initialization 07FD  
              LCDWriteCharacter@base 007A                              gotoXY@x 0077  
                            gotoXY@y 0075                           ??_tempCalc 007E  
                   ___aldiv@quotient 0022                    _LCDWriteCharacter 1666  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
         __size_of_calculateCurrent0 0045           __size_of_calculateCurrent1 0045  
         __size_of_calculateCurrent2 0045           __size_of_calculateCurrent3 0045  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0076  
                   __CFG_FEXTOSC$OFF 0000         PWM1_LoadDutyValue@dutyCycle1 0070  
                        _CCP1CONbits 030E                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 00D8                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0079                    __size_of_LCDWrite 0025  
                        ___ftmul@exp 002A            __end_of_LCDWriteCharacter 16BA  
                        ?_readButton 0070            readIAnalog@analog_channel 0079  
                     __end_of___ftge 14C6                            _VHoldMode 00CA  
                     __end_of___wmul 12BA                       _ADC_Initialize 12D8  
                     __end_of_gotoXY 1249               ?_OSCILLATOR_Initialize 0070  
                          _IminCount 0060                  start_initialization 07B4  
                         eval_poly@d 0040                           eval_poly@n 0042  
                         eval_poly@x 003D                    main@faultNotReset 00D7  
    __size_of_PIN_MANAGER_Initialize 0037                          __end_of_log 0BA6  
                      ??_LCDWriteInt 0025                     ??_LCDWriteString 0020  
                         frexp@value 0070                     ??_PWM_Initialize 0070  
                      ??_readIAnalog 0028                     __CFG_LPBOREN$OFF 0000  
                           ??___ftge 0076                    tempCalc@steinhart 0055  
                           ??___wmul 0074               __end_of_ADC_Initialize 12F7  
                      _tempCalc$1296 0052                          __pdataBANK1 00EB  
                        __pdataBANK2 0139           __end_of_PWM7_LoadDutyValue 129F  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 2260       __size_of_Battery_State_Machine 0110  
      __end_of_Battery_State_Machine 1000                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00D2  
                 _PWM6_LoadDutyValue 1273             __size_of_TMR2_Initialize 000E  
 __end_of_Init_Battery_State_Machine 13E0           _Init_Battery_State_Machine 13AD  
                __size_of_readButton 0082                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 0D13                          _batteryTemp 00EB  
        __size_of_PWM1_LoadDutyValue 0016               _PIN_MANAGER_Initialize 13E0  
         __size_of_LCDWriteCharacter 0054                             ?___aldiv 0070  
                __end_of_readIAnalog 021A                    __size_of_tempCalc 00E7  
                           ?___awdiv 0070                             ?___ftadd 0030  
                           ?___ftdiv 0020                             ?___ftmul 0020  
                           ?___ftsub 003D                             ?___fttol 0030  
                   LCDWriteInt@value 0020                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                            _eval_poly 16BA  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003B  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                        cc_cv_mode@z 0075                             _LCDClear 135B  
                    ___aldiv@divisor 0070                      ___aldiv@counter 0020  
                     ___wmul@product 0074                             _LATAbits 0016  
                           _LCDWrite 1336                            clear_ram0 120E  
                           _PIE0bits 0716                   __end_of_cc_cv_mode 00DC  
                           _PIR4bits 0710                     readIAnalog@value 007B  
                          main@MPPT0 00DD                            main@MPPT1 00DB  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0070                           ?_eval_poly 003D  
                   __size_of_LCDInit 003B                             _Ianalogs 00A0  
                        _LCDWriteInt 0C5A          Init_Battery_State_Machine@z 0071  
                  ??_TMR2_Initialize 0070                          _readIAnalog 00DC  
                          frexp@eptr 0073                             _Vanalogs 00A8  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 0023                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftmul 00B4  
                   __size_of___ftsub 001E                     __size_of___fttol 0087  
                   __size_of___lwmod 002C                          _readButtons 0064  
                           ___awtoft 1316                             ___ftpack 171A  
                           _channels 0139                             __ptext10 0944  
                           __ptext11 177E                             __ptext20 1316  
                           __ptext12 092F                             __ptext21 171A  
                           __ptext13 0004                             __ptext30 1236  
                           __ptext22 1417                             __ptext14 15D0  
                           __ptext31 13AD                             __ptext23 1228  
                           __ptext15 158B                             __ptext40 1666  
                           __ptext32 12D8                             __ptext24 121A  
                           __ptext16 1546                             __ptext41 129F  
                           __ptext33 1289                             __ptext25 12F7  
                           __ptext17 1501                             __ptext42 1336  
                           __ptext34 1273                             __ptext26 13E0  
                           __ptext18 09C6                             __ptext43 0EF0  
                           __ptext35 125D                             __ptext27 1205  
                           __ptext19 0A4D                             __ptext36 1249  
                           __ptext28 1450                             __ptext37 0C5A  
                           __ptext29 135B                             __ptext38 1381  
                           __ptext39 1615                      LCDWriteInt@sign 0024  
                          tempCalc@R 004F                   __end_of_readButton 1800  
                  ??_TMR4_Initialize 0070                        __size_of_main 059A  
               __CFG_WDTCWS$WDTCWS_7 0000                             _tempCalc 0D13  
        PIN_MANAGER_Initialize@state 0070                             log@coeff 1800  
                        ??_eval_poly 007E                          _sampleIndex 0068  
                 _PWM7_LoadDutyValue 1289          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0029  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                        __pstringtext2 1800  
                      __pstringtext3 1820                        __pstringtext4 1825  
                      __pstringtext5 0000                 ??_PWM7_LoadDutyValue 0072  
                    ___lwmod@divisor 0070                      ___lwmod@counter 0075  
           LCDWriteString@characters 007C                         ___aldiv@sign 0021  
                 readIAnalog@channel 0026                _Battery_State_Machine 0EF0  
     __end_of_PIN_MANAGER_Initialize 1417           __end_of_PWM1_LoadDutyValue 1273  
                      main@IOutTotal 00E1              __size_of_LCDWriteString 0014  
