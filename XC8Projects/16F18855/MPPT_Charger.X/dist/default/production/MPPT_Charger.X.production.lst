

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jun 27 10:45:59 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x620,48
    62                           	dabs	1,0x5A0,80
    63                           	dabs	1,0x520,80
    64                           	dabs	1,0x4A0,80
    65                           	dabs	1,0x420,80
    66                           	dabs	1,0x3A0,80
    67                           	dabs	1,0x320,80
    68                           	dabs	1,0x2A0,80
    69                           	dabs	1,0x220,80
    70                           	dabs	1,0x1D0,32
    71                           	dabs	1,0x2120,0,_samples
    72                           	dabs	1,0x7E,2
    73  0000                     
    74                           ; Version 1.45
    75                           ; Generated 16/11/2017 GMT
    76                           ; 
    77                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F18855 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  001C                     	;# 
   131  001C                     	;# 
   132  001D                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  008C                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0110                     	;# 
   163  0110                     	;# 
   164  0111                     	;# 
   165  0112                     	;# 
   166  0112                     	;# 
   167  0113                     	;# 
   168  0114                     	;# 
   169  0114                     	;# 
   170  0115                     	;# 
   171  0116                     	;# 
   172  0116                     	;# 
   173  0117                     	;# 
   174  0119                     	;# 
   175  0119                     	;# 
   176  0119                     	;# 
   177  011A                     	;# 
   178  011A                     	;# 
   179  011A                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011B                     	;# 
   185  011C                     	;# 
   186  011C                     	;# 
   187  011C                     	;# 
   188  011D                     	;# 
   189  011D                     	;# 
   190  011D                     	;# 
   191  011E                     	;# 
   192  011E                     	;# 
   193  011E                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  011F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  018E                     	;# 
   202  018F                     	;# 
   203  0190                     	;# 
   204  0191                     	;# 
   205  0192                     	;# 
   206  0196                     	;# 
   207  0197                     	;# 
   208  0198                     	;# 
   209  0199                     	;# 
   210  019A                     	;# 
   211  019B                     	;# 
   212  019C                     	;# 
   213  020C                     	;# 
   214  020C                     	;# 
   215  020D                     	;# 
   216  020E                     	;# 
   217  020F                     	;# 
   218  020F                     	;# 
   219  0210                     	;# 
   220  0210                     	;# 
   221  0211                     	;# 
   222  0211                     	;# 
   223  0212                     	;# 
   224  0212                     	;# 
   225  0213                     	;# 
   226  0214                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0216                     	;# 
   230  0216                     	;# 
   231  0217                     	;# 
   232  0217                     	;# 
   233  0218                     	;# 
   234  0218                     	;# 
   235  0219                     	;# 
   236  021A                     	;# 
   237  021B                     	;# 
   238  021B                     	;# 
   239  021C                     	;# 
   240  021C                     	;# 
   241  021D                     	;# 
   242  021D                     	;# 
   243  021E                     	;# 
   244  021F                     	;# 
   245  028C                     	;# 
   246  028C                     	;# 
   247  028D                     	;# 
   248  028D                     	;# 
   249  028E                     	;# 
   250  028F                     	;# 
   251  0290                     	;# 
   252  0290                     	;# 
   253  0291                     	;# 
   254  0292                     	;# 
   255  0292                     	;# 
   256  0293                     	;# 
   257  0293                     	;# 
   258  0294                     	;# 
   259  0295                     	;# 
   260  0296                     	;# 
   261  0296                     	;# 
   262  0297                     	;# 
   263  0298                     	;# 
   264  0298                     	;# 
   265  0299                     	;# 
   266  0299                     	;# 
   267  029A                     	;# 
   268  029B                     	;# 
   269  029C                     	;# 
   270  029C                     	;# 
   271  029D                     	;# 
   272  030C                     	;# 
   273  030C                     	;# 
   274  030D                     	;# 
   275  030E                     	;# 
   276  030F                     	;# 
   277  0310                     	;# 
   278  0310                     	;# 
   279  0311                     	;# 
   280  0312                     	;# 
   281  0313                     	;# 
   282  0314                     	;# 
   283  0314                     	;# 
   284  0315                     	;# 
   285  0316                     	;# 
   286  0317                     	;# 
   287  0318                     	;# 
   288  0318                     	;# 
   289  0319                     	;# 
   290  031A                     	;# 
   291  031B                     	;# 
   292  031C                     	;# 
   293  031C                     	;# 
   294  031D                     	;# 
   295  031E                     	;# 
   296  031F                     	;# 
   297  038C                     	;# 
   298  038D                     	;# 
   299  038E                     	;# 
   300  0390                     	;# 
   301  0391                     	;# 
   302  0392                     	;# 
   303  040C                     	;# 
   304  040D                     	;# 
   305  040E                     	;# 
   306  040F                     	;# 
   307  0410                     	;# 
   308  0411                     	;# 
   309  0416                     	;# 
   310  0416                     	;# 
   311  0417                     	;# 
   312  0418                     	;# 
   313  0418                     	;# 
   314  0419                     	;# 
   315  041A                     	;# 
   316  041A                     	;# 
   317  041B                     	;# 
   318  041C                     	;# 
   319  041C                     	;# 
   320  041D                     	;# 
   321  041E                     	;# 
   322  041F                     	;# 
   323  048C                     	;# 
   324  048C                     	;# 
   325  048D                     	;# 
   326  048E                     	;# 
   327  048F                     	;# 
   328  048F                     	;# 
   329  0490                     	;# 
   330  0491                     	;# 
   331  0492                     	;# 
   332  0492                     	;# 
   333  0493                     	;# 
   334  0494                     	;# 
   335  0495                     	;# 
   336  0495                     	;# 
   337  0496                     	;# 
   338  0497                     	;# 
   339  0498                     	;# 
   340  0499                     	;# 
   341  049A                     	;# 
   342  049B                     	;# 
   343  049C                     	;# 
   344  049D                     	;# 
   345  050C                     	;# 
   346  050C                     	;# 
   347  050D                     	;# 
   348  050E                     	;# 
   349  050F                     	;# 
   350  050F                     	;# 
   351  0510                     	;# 
   352  0511                     	;# 
   353  0512                     	;# 
   354  0512                     	;# 
   355  0513                     	;# 
   356  0514                     	;# 
   357  0515                     	;# 
   358  0515                     	;# 
   359  0516                     	;# 
   360  0517                     	;# 
   361  0518                     	;# 
   362  0519                     	;# 
   363  051A                     	;# 
   364  051B                     	;# 
   365  051C                     	;# 
   366  051D                     	;# 
   367  058C                     	;# 
   368  058C                     	;# 
   369  058D                     	;# 
   370  058E                     	;# 
   371  058F                     	;# 
   372  058F                     	;# 
   373  0590                     	;# 
   374  0591                     	;# 
   375  0592                     	;# 
   376  0593                     	;# 
   377  060C                     	;# 
   378  060D                     	;# 
   379  060E                     	;# 
   380  060F                     	;# 
   381  0610                     	;# 
   382  0611                     	;# 
   383  0612                     	;# 
   384  0613                     	;# 
   385  0614                     	;# 
   386  0616                     	;# 
   387  0617                     	;# 
   388  0618                     	;# 
   389  0619                     	;# 
   390  061A                     	;# 
   391  061B                     	;# 
   392  061C                     	;# 
   393  061D                     	;# 
   394  061E                     	;# 
   395  068C                     	;# 
   396  068D                     	;# 
   397  068E                     	;# 
   398  068F                     	;# 
   399  0690                     	;# 
   400  0691                     	;# 
   401  0692                     	;# 
   402  0693                     	;# 
   403  0694                     	;# 
   404  070C                     	;# 
   405  070D                     	;# 
   406  070E                     	;# 
   407  070F                     	;# 
   408  0710                     	;# 
   409  0711                     	;# 
   410  0712                     	;# 
   411  0713                     	;# 
   412  0714                     	;# 
   413  0716                     	;# 
   414  0717                     	;# 
   415  0718                     	;# 
   416  0719                     	;# 
   417  071A                     	;# 
   418  071B                     	;# 
   419  071C                     	;# 
   420  071D                     	;# 
   421  071E                     	;# 
   422  0796                     	;# 
   423  0797                     	;# 
   424  0798                     	;# 
   425  0799                     	;# 
   426  079A                     	;# 
   427  079B                     	;# 
   428  080C                     	;# 
   429  080D                     	;# 
   430  080E                     	;# 
   431  080F                     	;# 
   432  0810                     	;# 
   433  0811                     	;# 
   434  0812                     	;# 
   435  0813                     	;# 
   436  0814                     	;# 
   437  081A                     	;# 
   438  081B                     	;# 
   439  081C                     	;# 
   440  081D                     	;# 
   441  081E                     	;# 
   442  081F                     	;# 
   443  088C                     	;# 
   444  088D                     	;# 
   445  088E                     	;# 
   446  088F                     	;# 
   447  0890                     	;# 
   448  0891                     	;# 
   449  0892                     	;# 
   450  0893                     	;# 
   451  0895                     	;# 
   452  0896                     	;# 
   453  0897                     	;# 
   454  0898                     	;# 
   455  0899                     	;# 
   456  089A                     	;# 
   457  089B                     	;# 
   458  090C                     	;# 
   459  090E                     	;# 
   460  090F                     	;# 
   461  091F                     	;# 
   462  091F                     	;# 
   463  098F                     	;# 
   464  098F                     	;# 
   465  0990                     	;# 
   466  0991                     	;# 
   467  0992                     	;# 
   468  0993                     	;# 
   469  0994                     	;# 
   470  0995                     	;# 
   471  0996                     	;# 
   472  0997                     	;# 
   473  0E0F                     	;# 
   474  0E10                     	;# 
   475  0E11                     	;# 
   476  0E12                     	;# 
   477  0E13                     	;# 
   478  0E14                     	;# 
   479  0E15                     	;# 
   480  0E16                     	;# 
   481  0E17                     	;# 
   482  0E18                     	;# 
   483  0E19                     	;# 
   484  0E1A                     	;# 
   485  0E1B                     	;# 
   486  0E1C                     	;# 
   487  0E1D                     	;# 
   488  0E1E                     	;# 
   489  0E1F                     	;# 
   490  0E20                     	;# 
   491  0E21                     	;# 
   492  0E22                     	;# 
   493  0E23                     	;# 
   494  0E24                     	;# 
   495  0E25                     	;# 
   496  0E26                     	;# 
   497  0E27                     	;# 
   498  0E28                     	;# 
   499  0E29                     	;# 
   500  0E2A                     	;# 
   501  0E2B                     	;# 
   502  0E2C                     	;# 
   503  0E2D                     	;# 
   504  0E2E                     	;# 
   505  0E2F                     	;# 
   506  0E30                     	;# 
   507  0E31                     	;# 
   508  0E32                     	;# 
   509  0E33                     	;# 
   510  0E34                     	;# 
   511  0E35                     	;# 
   512  0E36                     	;# 
   513  0E37                     	;# 
   514  0E8F                     	;# 
   515  0E90                     	;# 
   516  0E91                     	;# 
   517  0E92                     	;# 
   518  0E93                     	;# 
   519  0E94                     	;# 
   520  0E95                     	;# 
   521  0E96                     	;# 
   522  0E97                     	;# 
   523  0E9C                     	;# 
   524  0E9D                     	;# 
   525  0E9E                     	;# 
   526  0EA1                     	;# 
   527  0EA2                     	;# 
   528  0EA3                     	;# 
   529  0EA4                     	;# 
   530  0EA5                     	;# 
   531  0EA9                     	;# 
   532  0EAA                     	;# 
   533  0EAB                     	;# 
   534  0EAC                     	;# 
   535  0EB1                     	;# 
   536  0EB2                     	;# 
   537  0EB3                     	;# 
   538  0EB8                     	;# 
   539  0EB9                     	;# 
   540  0EBA                     	;# 
   541  0EBB                     	;# 
   542  0EBC                     	;# 
   543  0EBD                     	;# 
   544  0EBE                     	;# 
   545  0EC3                     	;# 
   546  0EC5                     	;# 
   547  0EC6                     	;# 
   548  0EC7                     	;# 
   549  0EC8                     	;# 
   550  0EC9                     	;# 
   551  0ECA                     	;# 
   552  0ECB                     	;# 
   553  0ECC                     	;# 
   554  0F10                     	;# 
   555  0F11                     	;# 
   556  0F12                     	;# 
   557  0F13                     	;# 
   558  0F14                     	;# 
   559  0F15                     	;# 
   560  0F16                     	;# 
   561  0F17                     	;# 
   562  0F18                     	;# 
   563  0F19                     	;# 
   564  0F1A                     	;# 
   565  0F1B                     	;# 
   566  0F1C                     	;# 
   567  0F1D                     	;# 
   568  0F1E                     	;# 
   569  0F1F                     	;# 
   570  0F20                     	;# 
   571  0F21                     	;# 
   572  0F22                     	;# 
   573  0F23                     	;# 
   574  0F24                     	;# 
   575  0F25                     	;# 
   576  0F26                     	;# 
   577  0F27                     	;# 
   578  0F38                     	;# 
   579  0F39                     	;# 
   580  0F3A                     	;# 
   581  0F3B                     	;# 
   582  0F3C                     	;# 
   583  0F3D                     	;# 
   584  0F3E                     	;# 
   585  0F3F                     	;# 
   586  0F40                     	;# 
   587  0F41                     	;# 
   588  0F43                     	;# 
   589  0F44                     	;# 
   590  0F45                     	;# 
   591  0F46                     	;# 
   592  0F47                     	;# 
   593  0F48                     	;# 
   594  0F49                     	;# 
   595  0F4A                     	;# 
   596  0F4B                     	;# 
   597  0F4C                     	;# 
   598  0F4E                     	;# 
   599  0F4F                     	;# 
   600  0F50                     	;# 
   601  0F51                     	;# 
   602  0F52                     	;# 
   603  0F53                     	;# 
   604  0F54                     	;# 
   605  0F55                     	;# 
   606  0F56                     	;# 
   607  0F57                     	;# 
   608  0F65                     	;# 
   609  0F68                     	;# 
   610  0F69                     	;# 
   611  0F6A                     	;# 
   612  0F6B                     	;# 
   613  0FE4                     	;# 
   614  0FE5                     	;# 
   615  0FE6                     	;# 
   616  0FE7                     	;# 
   617  0FE8                     	;# 
   618  0FE9                     	;# 
   619  0FEA                     	;# 
   620  0FEB                     	;# 
   621  0FED                     	;# 
   622  0FEE                     	;# 
   623  0FEF                     	;# 
   624  0000                     	;# 
   625  0001                     	;# 
   626  0002                     	;# 
   627  0003                     	;# 
   628  0004                     	;# 
   629  0005                     	;# 
   630  0006                     	;# 
   631  0007                     	;# 
   632  0008                     	;# 
   633  0009                     	;# 
   634  000A                     	;# 
   635  000B                     	;# 
   636  000C                     	;# 
   637  000D                     	;# 
   638  000E                     	;# 
   639  0010                     	;# 
   640  0011                     	;# 
   641  0012                     	;# 
   642  0013                     	;# 
   643  0016                     	;# 
   644  0017                     	;# 
   645  0018                     	;# 
   646  001C                     	;# 
   647  001C                     	;# 
   648  001D                     	;# 
   649  001D                     	;# 
   650  001E                     	;# 
   651  001F                     	;# 
   652  008C                     	;# 
   653  008C                     	;# 
   654  008D                     	;# 
   655  008E                     	;# 
   656  008E                     	;# 
   657  008F                     	;# 
   658  0090                     	;# 
   659  0090                     	;# 
   660  0091                     	;# 
   661  0093                     	;# 
   662  0094                     	;# 
   663  0095                     	;# 
   664  0096                     	;# 
   665  0097                     	;# 
   666  0098                     	;# 
   667  0099                     	;# 
   668  009A                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  010C                     	;# 
   674  010D                     	;# 
   675  010E                     	;# 
   676  010E                     	;# 
   677  010F                     	;# 
   678  0110                     	;# 
   679  0110                     	;# 
   680  0111                     	;# 
   681  0112                     	;# 
   682  0112                     	;# 
   683  0113                     	;# 
   684  0114                     	;# 
   685  0114                     	;# 
   686  0115                     	;# 
   687  0116                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0119                     	;# 
   691  0119                     	;# 
   692  0119                     	;# 
   693  011A                     	;# 
   694  011A                     	;# 
   695  011A                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011C                     	;# 
   702  011C                     	;# 
   703  011C                     	;# 
   704  011D                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  011E                     	;# 
   708  011E                     	;# 
   709  011E                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  018C                     	;# 
   716  018D                     	;# 
   717  018E                     	;# 
   718  018F                     	;# 
   719  0190                     	;# 
   720  0191                     	;# 
   721  0192                     	;# 
   722  0196                     	;# 
   723  0197                     	;# 
   724  0198                     	;# 
   725  0199                     	;# 
   726  019A                     	;# 
   727  019B                     	;# 
   728  019C                     	;# 
   729  020C                     	;# 
   730  020C                     	;# 
   731  020D                     	;# 
   732  020E                     	;# 
   733  020F                     	;# 
   734  020F                     	;# 
   735  0210                     	;# 
   736  0210                     	;# 
   737  0211                     	;# 
   738  0211                     	;# 
   739  0212                     	;# 
   740  0212                     	;# 
   741  0213                     	;# 
   742  0214                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  0218                     	;# 
   750  0218                     	;# 
   751  0219                     	;# 
   752  021A                     	;# 
   753  021B                     	;# 
   754  021B                     	;# 
   755  021C                     	;# 
   756  021C                     	;# 
   757  021D                     	;# 
   758  021D                     	;# 
   759  021E                     	;# 
   760  021F                     	;# 
   761  028C                     	;# 
   762  028C                     	;# 
   763  028D                     	;# 
   764  028D                     	;# 
   765  028E                     	;# 
   766  028F                     	;# 
   767  0290                     	;# 
   768  0290                     	;# 
   769  0291                     	;# 
   770  0292                     	;# 
   771  0292                     	;# 
   772  0293                     	;# 
   773  0293                     	;# 
   774  0294                     	;# 
   775  0295                     	;# 
   776  0296                     	;# 
   777  0296                     	;# 
   778  0297                     	;# 
   779  0298                     	;# 
   780  0298                     	;# 
   781  0299                     	;# 
   782  0299                     	;# 
   783  029A                     	;# 
   784  029B                     	;# 
   785  029C                     	;# 
   786  029C                     	;# 
   787  029D                     	;# 
   788  030C                     	;# 
   789  030C                     	;# 
   790  030D                     	;# 
   791  030E                     	;# 
   792  030F                     	;# 
   793  0310                     	;# 
   794  0310                     	;# 
   795  0311                     	;# 
   796  0312                     	;# 
   797  0313                     	;# 
   798  0314                     	;# 
   799  0314                     	;# 
   800  0315                     	;# 
   801  0316                     	;# 
   802  0317                     	;# 
   803  0318                     	;# 
   804  0318                     	;# 
   805  0319                     	;# 
   806  031A                     	;# 
   807  031B                     	;# 
   808  031C                     	;# 
   809  031C                     	;# 
   810  031D                     	;# 
   811  031E                     	;# 
   812  031F                     	;# 
   813  038C                     	;# 
   814  038D                     	;# 
   815  038E                     	;# 
   816  0390                     	;# 
   817  0391                     	;# 
   818  0392                     	;# 
   819  040C                     	;# 
   820  040D                     	;# 
   821  040E                     	;# 
   822  040F                     	;# 
   823  0410                     	;# 
   824  0411                     	;# 
   825  0416                     	;# 
   826  0416                     	;# 
   827  0417                     	;# 
   828  0418                     	;# 
   829  0418                     	;# 
   830  0419                     	;# 
   831  041A                     	;# 
   832  041A                     	;# 
   833  041B                     	;# 
   834  041C                     	;# 
   835  041C                     	;# 
   836  041D                     	;# 
   837  041E                     	;# 
   838  041F                     	;# 
   839  048C                     	;# 
   840  048C                     	;# 
   841  048D                     	;# 
   842  048E                     	;# 
   843  048F                     	;# 
   844  048F                     	;# 
   845  0490                     	;# 
   846  0491                     	;# 
   847  0492                     	;# 
   848  0492                     	;# 
   849  0493                     	;# 
   850  0494                     	;# 
   851  0495                     	;# 
   852  0495                     	;# 
   853  0496                     	;# 
   854  0497                     	;# 
   855  0498                     	;# 
   856  0499                     	;# 
   857  049A                     	;# 
   858  049B                     	;# 
   859  049C                     	;# 
   860  049D                     	;# 
   861  050C                     	;# 
   862  050C                     	;# 
   863  050D                     	;# 
   864  050E                     	;# 
   865  050F                     	;# 
   866  050F                     	;# 
   867  0510                     	;# 
   868  0511                     	;# 
   869  0512                     	;# 
   870  0512                     	;# 
   871  0513                     	;# 
   872  0514                     	;# 
   873  0515                     	;# 
   874  0515                     	;# 
   875  0516                     	;# 
   876  0517                     	;# 
   877  0518                     	;# 
   878  0519                     	;# 
   879  051A                     	;# 
   880  051B                     	;# 
   881  051C                     	;# 
   882  051D                     	;# 
   883  058C                     	;# 
   884  058C                     	;# 
   885  058D                     	;# 
   886  058E                     	;# 
   887  058F                     	;# 
   888  058F                     	;# 
   889  0590                     	;# 
   890  0591                     	;# 
   891  0592                     	;# 
   892  0593                     	;# 
   893  060C                     	;# 
   894  060D                     	;# 
   895  060E                     	;# 
   896  060F                     	;# 
   897  0610                     	;# 
   898  0611                     	;# 
   899  0612                     	;# 
   900  0613                     	;# 
   901  0614                     	;# 
   902  0616                     	;# 
   903  0617                     	;# 
   904  0618                     	;# 
   905  0619                     	;# 
   906  061A                     	;# 
   907  061B                     	;# 
   908  061C                     	;# 
   909  061D                     	;# 
   910  061E                     	;# 
   911  068C                     	;# 
   912  068D                     	;# 
   913  068E                     	;# 
   914  068F                     	;# 
   915  0690                     	;# 
   916  0691                     	;# 
   917  0692                     	;# 
   918  0693                     	;# 
   919  0694                     	;# 
   920  070C                     	;# 
   921  070D                     	;# 
   922  070E                     	;# 
   923  070F                     	;# 
   924  0710                     	;# 
   925  0711                     	;# 
   926  0712                     	;# 
   927  0713                     	;# 
   928  0714                     	;# 
   929  0716                     	;# 
   930  0717                     	;# 
   931  0718                     	;# 
   932  0719                     	;# 
   933  071A                     	;# 
   934  071B                     	;# 
   935  071C                     	;# 
   936  071D                     	;# 
   937  071E                     	;# 
   938  0796                     	;# 
   939  0797                     	;# 
   940  0798                     	;# 
   941  0799                     	;# 
   942  079A                     	;# 
   943  079B                     	;# 
   944  080C                     	;# 
   945  080D                     	;# 
   946  080E                     	;# 
   947  080F                     	;# 
   948  0810                     	;# 
   949  0811                     	;# 
   950  0812                     	;# 
   951  0813                     	;# 
   952  0814                     	;# 
   953  081A                     	;# 
   954  081B                     	;# 
   955  081C                     	;# 
   956  081D                     	;# 
   957  081E                     	;# 
   958  081F                     	;# 
   959  088C                     	;# 
   960  088D                     	;# 
   961  088E                     	;# 
   962  088F                     	;# 
   963  0890                     	;# 
   964  0891                     	;# 
   965  0892                     	;# 
   966  0893                     	;# 
   967  0895                     	;# 
   968  0896                     	;# 
   969  0897                     	;# 
   970  0898                     	;# 
   971  0899                     	;# 
   972  089A                     	;# 
   973  089B                     	;# 
   974  090C                     	;# 
   975  090E                     	;# 
   976  090F                     	;# 
   977  091F                     	;# 
   978  091F                     	;# 
   979  098F                     	;# 
   980  098F                     	;# 
   981  0990                     	;# 
   982  0991                     	;# 
   983  0992                     	;# 
   984  0993                     	;# 
   985  0994                     	;# 
   986  0995                     	;# 
   987  0996                     	;# 
   988  0997                     	;# 
   989  0E0F                     	;# 
   990  0E10                     	;# 
   991  0E11                     	;# 
   992  0E12                     	;# 
   993  0E13                     	;# 
   994  0E14                     	;# 
   995  0E15                     	;# 
   996  0E16                     	;# 
   997  0E17                     	;# 
   998  0E18                     	;# 
   999  0E19                     	;# 
  1000  0E1A                     	;# 
  1001  0E1B                     	;# 
  1002  0E1C                     	;# 
  1003  0E1D                     	;# 
  1004  0E1E                     	;# 
  1005  0E1F                     	;# 
  1006  0E20                     	;# 
  1007  0E21                     	;# 
  1008  0E22                     	;# 
  1009  0E23                     	;# 
  1010  0E24                     	;# 
  1011  0E25                     	;# 
  1012  0E26                     	;# 
  1013  0E27                     	;# 
  1014  0E28                     	;# 
  1015  0E29                     	;# 
  1016  0E2A                     	;# 
  1017  0E2B                     	;# 
  1018  0E2C                     	;# 
  1019  0E2D                     	;# 
  1020  0E2E                     	;# 
  1021  0E2F                     	;# 
  1022  0E30                     	;# 
  1023  0E31                     	;# 
  1024  0E32                     	;# 
  1025  0E33                     	;# 
  1026  0E34                     	;# 
  1027  0E35                     	;# 
  1028  0E36                     	;# 
  1029  0E37                     	;# 
  1030  0E8F                     	;# 
  1031  0E90                     	;# 
  1032  0E91                     	;# 
  1033  0E92                     	;# 
  1034  0E93                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0E96                     	;# 
  1038  0E97                     	;# 
  1039  0E9C                     	;# 
  1040  0E9D                     	;# 
  1041  0E9E                     	;# 
  1042  0EA1                     	;# 
  1043  0EA2                     	;# 
  1044  0EA3                     	;# 
  1045  0EA4                     	;# 
  1046  0EA5                     	;# 
  1047  0EA9                     	;# 
  1048  0EAA                     	;# 
  1049  0EAB                     	;# 
  1050  0EAC                     	;# 
  1051  0EB1                     	;# 
  1052  0EB2                     	;# 
  1053  0EB3                     	;# 
  1054  0EB8                     	;# 
  1055  0EB9                     	;# 
  1056  0EBA                     	;# 
  1057  0EBB                     	;# 
  1058  0EBC                     	;# 
  1059  0EBD                     	;# 
  1060  0EBE                     	;# 
  1061  0EC3                     	;# 
  1062  0EC5                     	;# 
  1063  0EC6                     	;# 
  1064  0EC7                     	;# 
  1065  0EC8                     	;# 
  1066  0EC9                     	;# 
  1067  0ECA                     	;# 
  1068  0ECB                     	;# 
  1069  0ECC                     	;# 
  1070  0F10                     	;# 
  1071  0F11                     	;# 
  1072  0F12                     	;# 
  1073  0F13                     	;# 
  1074  0F14                     	;# 
  1075  0F15                     	;# 
  1076  0F16                     	;# 
  1077  0F17                     	;# 
  1078  0F18                     	;# 
  1079  0F19                     	;# 
  1080  0F1A                     	;# 
  1081  0F1B                     	;# 
  1082  0F1C                     	;# 
  1083  0F1D                     	;# 
  1084  0F1E                     	;# 
  1085  0F1F                     	;# 
  1086  0F20                     	;# 
  1087  0F21                     	;# 
  1088  0F22                     	;# 
  1089  0F23                     	;# 
  1090  0F24                     	;# 
  1091  0F25                     	;# 
  1092  0F26                     	;# 
  1093  0F27                     	;# 
  1094  0F38                     	;# 
  1095  0F39                     	;# 
  1096  0F3A                     	;# 
  1097  0F3B                     	;# 
  1098  0F3C                     	;# 
  1099  0F3D                     	;# 
  1100  0F3E                     	;# 
  1101  0F3F                     	;# 
  1102  0F40                     	;# 
  1103  0F41                     	;# 
  1104  0F43                     	;# 
  1105  0F44                     	;# 
  1106  0F45                     	;# 
  1107  0F46                     	;# 
  1108  0F47                     	;# 
  1109  0F48                     	;# 
  1110  0F49                     	;# 
  1111  0F4A                     	;# 
  1112  0F4B                     	;# 
  1113  0F4C                     	;# 
  1114  0F4E                     	;# 
  1115  0F4F                     	;# 
  1116  0F50                     	;# 
  1117  0F51                     	;# 
  1118  0F52                     	;# 
  1119  0F53                     	;# 
  1120  0F54                     	;# 
  1121  0F55                     	;# 
  1122  0F56                     	;# 
  1123  0F57                     	;# 
  1124  0F65                     	;# 
  1125  0F68                     	;# 
  1126  0F69                     	;# 
  1127  0F6A                     	;# 
  1128  0F6B                     	;# 
  1129  0FE4                     	;# 
  1130  0FE5                     	;# 
  1131  0FE6                     	;# 
  1132  0FE7                     	;# 
  1133  0FE8                     	;# 
  1134  0FE9                     	;# 
  1135  0FEA                     	;# 
  1136  0FEB                     	;# 
  1137  0FED                     	;# 
  1138  0FEE                     	;# 
  1139  0FEF                     	;# 
  1140  0000                     	;# 
  1141  0001                     	;# 
  1142  0002                     	;# 
  1143  0003                     	;# 
  1144  0004                     	;# 
  1145  0005                     	;# 
  1146  0006                     	;# 
  1147  0007                     	;# 
  1148  0008                     	;# 
  1149  0009                     	;# 
  1150  000A                     	;# 
  1151  000B                     	;# 
  1152  000C                     	;# 
  1153  000D                     	;# 
  1154  000E                     	;# 
  1155  0010                     	;# 
  1156  0011                     	;# 
  1157  0012                     	;# 
  1158  0013                     	;# 
  1159  0016                     	;# 
  1160  0017                     	;# 
  1161  0018                     	;# 
  1162  001C                     	;# 
  1163  001C                     	;# 
  1164  001D                     	;# 
  1165  001D                     	;# 
  1166  001E                     	;# 
  1167  001F                     	;# 
  1168  008C                     	;# 
  1169  008C                     	;# 
  1170  008D                     	;# 
  1171  008E                     	;# 
  1172  008E                     	;# 
  1173  008F                     	;# 
  1174  0090                     	;# 
  1175  0090                     	;# 
  1176  0091                     	;# 
  1177  0093                     	;# 
  1178  0094                     	;# 
  1179  0095                     	;# 
  1180  0096                     	;# 
  1181  0097                     	;# 
  1182  0098                     	;# 
  1183  0099                     	;# 
  1184  009A                     	;# 
  1185  009B                     	;# 
  1186  009C                     	;# 
  1187  009D                     	;# 
  1188  009E                     	;# 
  1189  010C                     	;# 
  1190  010D                     	;# 
  1191  010E                     	;# 
  1192  010E                     	;# 
  1193  010F                     	;# 
  1194  0110                     	;# 
  1195  0110                     	;# 
  1196  0111                     	;# 
  1197  0112                     	;# 
  1198  0112                     	;# 
  1199  0113                     	;# 
  1200  0114                     	;# 
  1201  0114                     	;# 
  1202  0115                     	;# 
  1203  0116                     	;# 
  1204  0116                     	;# 
  1205  0117                     	;# 
  1206  0119                     	;# 
  1207  0119                     	;# 
  1208  0119                     	;# 
  1209  011A                     	;# 
  1210  011A                     	;# 
  1211  011A                     	;# 
  1212  011B                     	;# 
  1213  011B                     	;# 
  1214  011B                     	;# 
  1215  011B                     	;# 
  1216  011B                     	;# 
  1217  011C                     	;# 
  1218  011C                     	;# 
  1219  011C                     	;# 
  1220  011D                     	;# 
  1221  011D                     	;# 
  1222  011D                     	;# 
  1223  011E                     	;# 
  1224  011E                     	;# 
  1225  011E                     	;# 
  1226  011F                     	;# 
  1227  011F                     	;# 
  1228  011F                     	;# 
  1229  011F                     	;# 
  1230  011F                     	;# 
  1231  018C                     	;# 
  1232  018D                     	;# 
  1233  018E                     	;# 
  1234  018F                     	;# 
  1235  0190                     	;# 
  1236  0191                     	;# 
  1237  0192                     	;# 
  1238  0196                     	;# 
  1239  0197                     	;# 
  1240  0198                     	;# 
  1241  0199                     	;# 
  1242  019A                     	;# 
  1243  019B                     	;# 
  1244  019C                     	;# 
  1245  020C                     	;# 
  1246  020C                     	;# 
  1247  020D                     	;# 
  1248  020E                     	;# 
  1249  020F                     	;# 
  1250  020F                     	;# 
  1251  0210                     	;# 
  1252  0210                     	;# 
  1253  0211                     	;# 
  1254  0211                     	;# 
  1255  0212                     	;# 
  1256  0212                     	;# 
  1257  0213                     	;# 
  1258  0214                     	;# 
  1259  0215                     	;# 
  1260  0215                     	;# 
  1261  0216                     	;# 
  1262  0216                     	;# 
  1263  0217                     	;# 
  1264  0217                     	;# 
  1265  0218                     	;# 
  1266  0218                     	;# 
  1267  0219                     	;# 
  1268  021A                     	;# 
  1269  021B                     	;# 
  1270  021B                     	;# 
  1271  021C                     	;# 
  1272  021C                     	;# 
  1273  021D                     	;# 
  1274  021D                     	;# 
  1275  021E                     	;# 
  1276  021F                     	;# 
  1277  028C                     	;# 
  1278  028C                     	;# 
  1279  028D                     	;# 
  1280  028D                     	;# 
  1281  028E                     	;# 
  1282  028F                     	;# 
  1283  0290                     	;# 
  1284  0290                     	;# 
  1285  0291                     	;# 
  1286  0292                     	;# 
  1287  0292                     	;# 
  1288  0293                     	;# 
  1289  0293                     	;# 
  1290  0294                     	;# 
  1291  0295                     	;# 
  1292  0296                     	;# 
  1293  0296                     	;# 
  1294  0297                     	;# 
  1295  0298                     	;# 
  1296  0298                     	;# 
  1297  0299                     	;# 
  1298  0299                     	;# 
  1299  029A                     	;# 
  1300  029B                     	;# 
  1301  029C                     	;# 
  1302  029C                     	;# 
  1303  029D                     	;# 
  1304  030C                     	;# 
  1305  030C                     	;# 
  1306  030D                     	;# 
  1307  030E                     	;# 
  1308  030F                     	;# 
  1309  0310                     	;# 
  1310  0310                     	;# 
  1311  0311                     	;# 
  1312  0312                     	;# 
  1313  0313                     	;# 
  1314  0314                     	;# 
  1315  0314                     	;# 
  1316  0315                     	;# 
  1317  0316                     	;# 
  1318  0317                     	;# 
  1319  0318                     	;# 
  1320  0318                     	;# 
  1321  0319                     	;# 
  1322  031A                     	;# 
  1323  031B                     	;# 
  1324  031C                     	;# 
  1325  031C                     	;# 
  1326  031D                     	;# 
  1327  031E                     	;# 
  1328  031F                     	;# 
  1329  038C                     	;# 
  1330  038D                     	;# 
  1331  038E                     	;# 
  1332  0390                     	;# 
  1333  0391                     	;# 
  1334  0392                     	;# 
  1335  040C                     	;# 
  1336  040D                     	;# 
  1337  040E                     	;# 
  1338  040F                     	;# 
  1339  0410                     	;# 
  1340  0411                     	;# 
  1341  0416                     	;# 
  1342  0416                     	;# 
  1343  0417                     	;# 
  1344  0418                     	;# 
  1345  0418                     	;# 
  1346  0419                     	;# 
  1347  041A                     	;# 
  1348  041A                     	;# 
  1349  041B                     	;# 
  1350  041C                     	;# 
  1351  041C                     	;# 
  1352  041D                     	;# 
  1353  041E                     	;# 
  1354  041F                     	;# 
  1355  048C                     	;# 
  1356  048C                     	;# 
  1357  048D                     	;# 
  1358  048E                     	;# 
  1359  048F                     	;# 
  1360  048F                     	;# 
  1361  0490                     	;# 
  1362  0491                     	;# 
  1363  0492                     	;# 
  1364  0492                     	;# 
  1365  0493                     	;# 
  1366  0494                     	;# 
  1367  0495                     	;# 
  1368  0495                     	;# 
  1369  0496                     	;# 
  1370  0497                     	;# 
  1371  0498                     	;# 
  1372  0499                     	;# 
  1373  049A                     	;# 
  1374  049B                     	;# 
  1375  049C                     	;# 
  1376  049D                     	;# 
  1377  050C                     	;# 
  1378  050C                     	;# 
  1379  050D                     	;# 
  1380  050E                     	;# 
  1381  050F                     	;# 
  1382  050F                     	;# 
  1383  0510                     	;# 
  1384  0511                     	;# 
  1385  0512                     	;# 
  1386  0512                     	;# 
  1387  0513                     	;# 
  1388  0514                     	;# 
  1389  0515                     	;# 
  1390  0515                     	;# 
  1391  0516                     	;# 
  1392  0517                     	;# 
  1393  0518                     	;# 
  1394  0519                     	;# 
  1395  051A                     	;# 
  1396  051B                     	;# 
  1397  051C                     	;# 
  1398  051D                     	;# 
  1399  058C                     	;# 
  1400  058C                     	;# 
  1401  058D                     	;# 
  1402  058E                     	;# 
  1403  058F                     	;# 
  1404  058F                     	;# 
  1405  0590                     	;# 
  1406  0591                     	;# 
  1407  0592                     	;# 
  1408  0593                     	;# 
  1409  060C                     	;# 
  1410  060D                     	;# 
  1411  060E                     	;# 
  1412  060F                     	;# 
  1413  0610                     	;# 
  1414  0611                     	;# 
  1415  0612                     	;# 
  1416  0613                     	;# 
  1417  0614                     	;# 
  1418  0616                     	;# 
  1419  0617                     	;# 
  1420  0618                     	;# 
  1421  0619                     	;# 
  1422  061A                     	;# 
  1423  061B                     	;# 
  1424  061C                     	;# 
  1425  061D                     	;# 
  1426  061E                     	;# 
  1427  068C                     	;# 
  1428  068D                     	;# 
  1429  068E                     	;# 
  1430  068F                     	;# 
  1431  0690                     	;# 
  1432  0691                     	;# 
  1433  0692                     	;# 
  1434  0693                     	;# 
  1435  0694                     	;# 
  1436  070C                     	;# 
  1437  070D                     	;# 
  1438  070E                     	;# 
  1439  070F                     	;# 
  1440  0710                     	;# 
  1441  0711                     	;# 
  1442  0712                     	;# 
  1443  0713                     	;# 
  1444  0714                     	;# 
  1445  0716                     	;# 
  1446  0717                     	;# 
  1447  0718                     	;# 
  1448  0719                     	;# 
  1449  071A                     	;# 
  1450  071B                     	;# 
  1451  071C                     	;# 
  1452  071D                     	;# 
  1453  071E                     	;# 
  1454  0796                     	;# 
  1455  0797                     	;# 
  1456  0798                     	;# 
  1457  0799                     	;# 
  1458  079A                     	;# 
  1459  079B                     	;# 
  1460  080C                     	;# 
  1461  080D                     	;# 
  1462  080E                     	;# 
  1463  080F                     	;# 
  1464  0810                     	;# 
  1465  0811                     	;# 
  1466  0812                     	;# 
  1467  0813                     	;# 
  1468  0814                     	;# 
  1469  081A                     	;# 
  1470  081B                     	;# 
  1471  081C                     	;# 
  1472  081D                     	;# 
  1473  081E                     	;# 
  1474  081F                     	;# 
  1475  088C                     	;# 
  1476  088D                     	;# 
  1477  088E                     	;# 
  1478  088F                     	;# 
  1479  0890                     	;# 
  1480  0891                     	;# 
  1481  0892                     	;# 
  1482  0893                     	;# 
  1483  0895                     	;# 
  1484  0896                     	;# 
  1485  0897                     	;# 
  1486  0898                     	;# 
  1487  0899                     	;# 
  1488  089A                     	;# 
  1489  089B                     	;# 
  1490  090C                     	;# 
  1491  090E                     	;# 
  1492  090F                     	;# 
  1493  091F                     	;# 
  1494  091F                     	;# 
  1495  098F                     	;# 
  1496  098F                     	;# 
  1497  0990                     	;# 
  1498  0991                     	;# 
  1499  0992                     	;# 
  1500  0993                     	;# 
  1501  0994                     	;# 
  1502  0995                     	;# 
  1503  0996                     	;# 
  1504  0997                     	;# 
  1505  0E0F                     	;# 
  1506  0E10                     	;# 
  1507  0E11                     	;# 
  1508  0E12                     	;# 
  1509  0E13                     	;# 
  1510  0E14                     	;# 
  1511  0E15                     	;# 
  1512  0E16                     	;# 
  1513  0E17                     	;# 
  1514  0E18                     	;# 
  1515  0E19                     	;# 
  1516  0E1A                     	;# 
  1517  0E1B                     	;# 
  1518  0E1C                     	;# 
  1519  0E1D                     	;# 
  1520  0E1E                     	;# 
  1521  0E1F                     	;# 
  1522  0E20                     	;# 
  1523  0E21                     	;# 
  1524  0E22                     	;# 
  1525  0E23                     	;# 
  1526  0E24                     	;# 
  1527  0E25                     	;# 
  1528  0E26                     	;# 
  1529  0E27                     	;# 
  1530  0E28                     	;# 
  1531  0E29                     	;# 
  1532  0E2A                     	;# 
  1533  0E2B                     	;# 
  1534  0E2C                     	;# 
  1535  0E2D                     	;# 
  1536  0E2E                     	;# 
  1537  0E2F                     	;# 
  1538  0E30                     	;# 
  1539  0E31                     	;# 
  1540  0E32                     	;# 
  1541  0E33                     	;# 
  1542  0E34                     	;# 
  1543  0E35                     	;# 
  1544  0E36                     	;# 
  1545  0E37                     	;# 
  1546  0E8F                     	;# 
  1547  0E90                     	;# 
  1548  0E91                     	;# 
  1549  0E92                     	;# 
  1550  0E93                     	;# 
  1551  0E94                     	;# 
  1552  0E95                     	;# 
  1553  0E96                     	;# 
  1554  0E97                     	;# 
  1555  0E9C                     	;# 
  1556  0E9D                     	;# 
  1557  0E9E                     	;# 
  1558  0EA1                     	;# 
  1559  0EA2                     	;# 
  1560  0EA3                     	;# 
  1561  0EA4                     	;# 
  1562  0EA5                     	;# 
  1563  0EA9                     	;# 
  1564  0EAA                     	;# 
  1565  0EAB                     	;# 
  1566  0EAC                     	;# 
  1567  0EB1                     	;# 
  1568  0EB2                     	;# 
  1569  0EB3                     	;# 
  1570  0EB8                     	;# 
  1571  0EB9                     	;# 
  1572  0EBA                     	;# 
  1573  0EBB                     	;# 
  1574  0EBC                     	;# 
  1575  0EBD                     	;# 
  1576  0EBE                     	;# 
  1577  0EC3                     	;# 
  1578  0EC5                     	;# 
  1579  0EC6                     	;# 
  1580  0EC7                     	;# 
  1581  0EC8                     	;# 
  1582  0EC9                     	;# 
  1583  0ECA                     	;# 
  1584  0ECB                     	;# 
  1585  0ECC                     	;# 
  1586  0F10                     	;# 
  1587  0F11                     	;# 
  1588  0F12                     	;# 
  1589  0F13                     	;# 
  1590  0F14                     	;# 
  1591  0F15                     	;# 
  1592  0F16                     	;# 
  1593  0F17                     	;# 
  1594  0F18                     	;# 
  1595  0F19                     	;# 
  1596  0F1A                     	;# 
  1597  0F1B                     	;# 
  1598  0F1C                     	;# 
  1599  0F1D                     	;# 
  1600  0F1E                     	;# 
  1601  0F1F                     	;# 
  1602  0F20                     	;# 
  1603  0F21                     	;# 
  1604  0F22                     	;# 
  1605  0F23                     	;# 
  1606  0F24                     	;# 
  1607  0F25                     	;# 
  1608  0F26                     	;# 
  1609  0F27                     	;# 
  1610  0F38                     	;# 
  1611  0F39                     	;# 
  1612  0F3A                     	;# 
  1613  0F3B                     	;# 
  1614  0F3C                     	;# 
  1615  0F3D                     	;# 
  1616  0F3E                     	;# 
  1617  0F3F                     	;# 
  1618  0F40                     	;# 
  1619  0F41                     	;# 
  1620  0F43                     	;# 
  1621  0F44                     	;# 
  1622  0F45                     	;# 
  1623  0F46                     	;# 
  1624  0F47                     	;# 
  1625  0F48                     	;# 
  1626  0F49                     	;# 
  1627  0F4A                     	;# 
  1628  0F4B                     	;# 
  1629  0F4C                     	;# 
  1630  0F4E                     	;# 
  1631  0F4F                     	;# 
  1632  0F50                     	;# 
  1633  0F51                     	;# 
  1634  0F52                     	;# 
  1635  0F53                     	;# 
  1636  0F54                     	;# 
  1637  0F55                     	;# 
  1638  0F56                     	;# 
  1639  0F57                     	;# 
  1640  0F65                     	;# 
  1641  0F68                     	;# 
  1642  0F69                     	;# 
  1643  0F6A                     	;# 
  1644  0F6B                     	;# 
  1645  0FE4                     	;# 
  1646  0FE5                     	;# 
  1647  0FE6                     	;# 
  1648  0FE7                     	;# 
  1649  0FE8                     	;# 
  1650  0FE9                     	;# 
  1651  0FEA                     	;# 
  1652  0FEB                     	;# 
  1653  0FED                     	;# 
  1654  0FEE                     	;# 
  1655  0FEF                     	;# 
  1656  0000                     	;# 
  1657  0001                     	;# 
  1658  0002                     	;# 
  1659  0003                     	;# 
  1660  0004                     	;# 
  1661  0005                     	;# 
  1662  0006                     	;# 
  1663  0007                     	;# 
  1664  0008                     	;# 
  1665  0009                     	;# 
  1666  000A                     	;# 
  1667  000B                     	;# 
  1668  000C                     	;# 
  1669  000D                     	;# 
  1670  000E                     	;# 
  1671  0010                     	;# 
  1672  0011                     	;# 
  1673  0012                     	;# 
  1674  0013                     	;# 
  1675  0016                     	;# 
  1676  0017                     	;# 
  1677  0018                     	;# 
  1678  001C                     	;# 
  1679  001C                     	;# 
  1680  001D                     	;# 
  1681  001D                     	;# 
  1682  001E                     	;# 
  1683  001F                     	;# 
  1684  008C                     	;# 
  1685  008C                     	;# 
  1686  008D                     	;# 
  1687  008E                     	;# 
  1688  008E                     	;# 
  1689  008F                     	;# 
  1690  0090                     	;# 
  1691  0090                     	;# 
  1692  0091                     	;# 
  1693  0093                     	;# 
  1694  0094                     	;# 
  1695  0095                     	;# 
  1696  0096                     	;# 
  1697  0097                     	;# 
  1698  0098                     	;# 
  1699  0099                     	;# 
  1700  009A                     	;# 
  1701  009B                     	;# 
  1702  009C                     	;# 
  1703  009D                     	;# 
  1704  009E                     	;# 
  1705  010C                     	;# 
  1706  010D                     	;# 
  1707  010E                     	;# 
  1708  010E                     	;# 
  1709  010F                     	;# 
  1710  0110                     	;# 
  1711  0110                     	;# 
  1712  0111                     	;# 
  1713  0112                     	;# 
  1714  0112                     	;# 
  1715  0113                     	;# 
  1716  0114                     	;# 
  1717  0114                     	;# 
  1718  0115                     	;# 
  1719  0116                     	;# 
  1720  0116                     	;# 
  1721  0117                     	;# 
  1722  0119                     	;# 
  1723  0119                     	;# 
  1724  0119                     	;# 
  1725  011A                     	;# 
  1726  011A                     	;# 
  1727  011A                     	;# 
  1728  011B                     	;# 
  1729  011B                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011C                     	;# 
  1734  011C                     	;# 
  1735  011C                     	;# 
  1736  011D                     	;# 
  1737  011D                     	;# 
  1738  011D                     	;# 
  1739  011E                     	;# 
  1740  011E                     	;# 
  1741  011E                     	;# 
  1742  011F                     	;# 
  1743  011F                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  018C                     	;# 
  1748  018D                     	;# 
  1749  018E                     	;# 
  1750  018F                     	;# 
  1751  0190                     	;# 
  1752  0191                     	;# 
  1753  0192                     	;# 
  1754  0196                     	;# 
  1755  0197                     	;# 
  1756  0198                     	;# 
  1757  0199                     	;# 
  1758  019A                     	;# 
  1759  019B                     	;# 
  1760  019C                     	;# 
  1761  020C                     	;# 
  1762  020C                     	;# 
  1763  020D                     	;# 
  1764  020E                     	;# 
  1765  020F                     	;# 
  1766  020F                     	;# 
  1767  0210                     	;# 
  1768  0210                     	;# 
  1769  0211                     	;# 
  1770  0211                     	;# 
  1771  0212                     	;# 
  1772  0212                     	;# 
  1773  0213                     	;# 
  1774  0214                     	;# 
  1775  0215                     	;# 
  1776  0215                     	;# 
  1777  0216                     	;# 
  1778  0216                     	;# 
  1779  0217                     	;# 
  1780  0217                     	;# 
  1781  0218                     	;# 
  1782  0218                     	;# 
  1783  0219                     	;# 
  1784  021A                     	;# 
  1785  021B                     	;# 
  1786  021B                     	;# 
  1787  021C                     	;# 
  1788  021C                     	;# 
  1789  021D                     	;# 
  1790  021D                     	;# 
  1791  021E                     	;# 
  1792  021F                     	;# 
  1793  028C                     	;# 
  1794  028C                     	;# 
  1795  028D                     	;# 
  1796  028D                     	;# 
  1797  028E                     	;# 
  1798  028F                     	;# 
  1799  0290                     	;# 
  1800  0290                     	;# 
  1801  0291                     	;# 
  1802  0292                     	;# 
  1803  0292                     	;# 
  1804  0293                     	;# 
  1805  0293                     	;# 
  1806  0294                     	;# 
  1807  0295                     	;# 
  1808  0296                     	;# 
  1809  0296                     	;# 
  1810  0297                     	;# 
  1811  0298                     	;# 
  1812  0298                     	;# 
  1813  0299                     	;# 
  1814  0299                     	;# 
  1815  029A                     	;# 
  1816  029B                     	;# 
  1817  029C                     	;# 
  1818  029C                     	;# 
  1819  029D                     	;# 
  1820  030C                     	;# 
  1821  030C                     	;# 
  1822  030D                     	;# 
  1823  030E                     	;# 
  1824  030F                     	;# 
  1825  0310                     	;# 
  1826  0310                     	;# 
  1827  0311                     	;# 
  1828  0312                     	;# 
  1829  0313                     	;# 
  1830  0314                     	;# 
  1831  0314                     	;# 
  1832  0315                     	;# 
  1833  0316                     	;# 
  1834  0317                     	;# 
  1835  0318                     	;# 
  1836  0318                     	;# 
  1837  0319                     	;# 
  1838  031A                     	;# 
  1839  031B                     	;# 
  1840  031C                     	;# 
  1841  031C                     	;# 
  1842  031D                     	;# 
  1843  031E                     	;# 
  1844  031F                     	;# 
  1845  038C                     	;# 
  1846  038D                     	;# 
  1847  038E                     	;# 
  1848  0390                     	;# 
  1849  0391                     	;# 
  1850  0392                     	;# 
  1851  040C                     	;# 
  1852  040D                     	;# 
  1853  040E                     	;# 
  1854  040F                     	;# 
  1855  0410                     	;# 
  1856  0411                     	;# 
  1857  0416                     	;# 
  1858  0416                     	;# 
  1859  0417                     	;# 
  1860  0418                     	;# 
  1861  0418                     	;# 
  1862  0419                     	;# 
  1863  041A                     	;# 
  1864  041A                     	;# 
  1865  041B                     	;# 
  1866  041C                     	;# 
  1867  041C                     	;# 
  1868  041D                     	;# 
  1869  041E                     	;# 
  1870  041F                     	;# 
  1871  048C                     	;# 
  1872  048C                     	;# 
  1873  048D                     	;# 
  1874  048E                     	;# 
  1875  048F                     	;# 
  1876  048F                     	;# 
  1877  0490                     	;# 
  1878  0491                     	;# 
  1879  0492                     	;# 
  1880  0492                     	;# 
  1881  0493                     	;# 
  1882  0494                     	;# 
  1883  0495                     	;# 
  1884  0495                     	;# 
  1885  0496                     	;# 
  1886  0497                     	;# 
  1887  0498                     	;# 
  1888  0499                     	;# 
  1889  049A                     	;# 
  1890  049B                     	;# 
  1891  049C                     	;# 
  1892  049D                     	;# 
  1893  050C                     	;# 
  1894  050C                     	;# 
  1895  050D                     	;# 
  1896  050E                     	;# 
  1897  050F                     	;# 
  1898  050F                     	;# 
  1899  0510                     	;# 
  1900  0511                     	;# 
  1901  0512                     	;# 
  1902  0512                     	;# 
  1903  0513                     	;# 
  1904  0514                     	;# 
  1905  0515                     	;# 
  1906  0515                     	;# 
  1907  0516                     	;# 
  1908  0517                     	;# 
  1909  0518                     	;# 
  1910  0519                     	;# 
  1911  051A                     	;# 
  1912  051B                     	;# 
  1913  051C                     	;# 
  1914  051D                     	;# 
  1915  058C                     	;# 
  1916  058C                     	;# 
  1917  058D                     	;# 
  1918  058E                     	;# 
  1919  058F                     	;# 
  1920  058F                     	;# 
  1921  0590                     	;# 
  1922  0591                     	;# 
  1923  0592                     	;# 
  1924  0593                     	;# 
  1925  060C                     	;# 
  1926  060D                     	;# 
  1927  060E                     	;# 
  1928  060F                     	;# 
  1929  0610                     	;# 
  1930  0611                     	;# 
  1931  0612                     	;# 
  1932  0613                     	;# 
  1933  0614                     	;# 
  1934  0616                     	;# 
  1935  0617                     	;# 
  1936  0618                     	;# 
  1937  0619                     	;# 
  1938  061A                     	;# 
  1939  061B                     	;# 
  1940  061C                     	;# 
  1941  061D                     	;# 
  1942  061E                     	;# 
  1943  068C                     	;# 
  1944  068D                     	;# 
  1945  068E                     	;# 
  1946  068F                     	;# 
  1947  0690                     	;# 
  1948  0691                     	;# 
  1949  0692                     	;# 
  1950  0693                     	;# 
  1951  0694                     	;# 
  1952  070C                     	;# 
  1953  070D                     	;# 
  1954  070E                     	;# 
  1955  070F                     	;# 
  1956  0710                     	;# 
  1957  0711                     	;# 
  1958  0712                     	;# 
  1959  0713                     	;# 
  1960  0714                     	;# 
  1961  0716                     	;# 
  1962  0717                     	;# 
  1963  0718                     	;# 
  1964  0719                     	;# 
  1965  071A                     	;# 
  1966  071B                     	;# 
  1967  071C                     	;# 
  1968  071D                     	;# 
  1969  071E                     	;# 
  1970  0796                     	;# 
  1971  0797                     	;# 
  1972  0798                     	;# 
  1973  0799                     	;# 
  1974  079A                     	;# 
  1975  079B                     	;# 
  1976  080C                     	;# 
  1977  080D                     	;# 
  1978  080E                     	;# 
  1979  080F                     	;# 
  1980  0810                     	;# 
  1981  0811                     	;# 
  1982  0812                     	;# 
  1983  0813                     	;# 
  1984  0814                     	;# 
  1985  081A                     	;# 
  1986  081B                     	;# 
  1987  081C                     	;# 
  1988  081D                     	;# 
  1989  081E                     	;# 
  1990  081F                     	;# 
  1991  088C                     	;# 
  1992  088D                     	;# 
  1993  088E                     	;# 
  1994  088F                     	;# 
  1995  0890                     	;# 
  1996  0891                     	;# 
  1997  0892                     	;# 
  1998  0893                     	;# 
  1999  0895                     	;# 
  2000  0896                     	;# 
  2001  0897                     	;# 
  2002  0898                     	;# 
  2003  0899                     	;# 
  2004  089A                     	;# 
  2005  089B                     	;# 
  2006  090C                     	;# 
  2007  090E                     	;# 
  2008  090F                     	;# 
  2009  091F                     	;# 
  2010  091F                     	;# 
  2011  098F                     	;# 
  2012  098F                     	;# 
  2013  0990                     	;# 
  2014  0991                     	;# 
  2015  0992                     	;# 
  2016  0993                     	;# 
  2017  0994                     	;# 
  2018  0995                     	;# 
  2019  0996                     	;# 
  2020  0997                     	;# 
  2021  0E0F                     	;# 
  2022  0E10                     	;# 
  2023  0E11                     	;# 
  2024  0E12                     	;# 
  2025  0E13                     	;# 
  2026  0E14                     	;# 
  2027  0E15                     	;# 
  2028  0E16                     	;# 
  2029  0E17                     	;# 
  2030  0E18                     	;# 
  2031  0E19                     	;# 
  2032  0E1A                     	;# 
  2033  0E1B                     	;# 
  2034  0E1C                     	;# 
  2035  0E1D                     	;# 
  2036  0E1E                     	;# 
  2037  0E1F                     	;# 
  2038  0E20                     	;# 
  2039  0E21                     	;# 
  2040  0E22                     	;# 
  2041  0E23                     	;# 
  2042  0E24                     	;# 
  2043  0E25                     	;# 
  2044  0E26                     	;# 
  2045  0E27                     	;# 
  2046  0E28                     	;# 
  2047  0E29                     	;# 
  2048  0E2A                     	;# 
  2049  0E2B                     	;# 
  2050  0E2C                     	;# 
  2051  0E2D                     	;# 
  2052  0E2E                     	;# 
  2053  0E2F                     	;# 
  2054  0E30                     	;# 
  2055  0E31                     	;# 
  2056  0E32                     	;# 
  2057  0E33                     	;# 
  2058  0E34                     	;# 
  2059  0E35                     	;# 
  2060  0E36                     	;# 
  2061  0E37                     	;# 
  2062  0E8F                     	;# 
  2063  0E90                     	;# 
  2064  0E91                     	;# 
  2065  0E92                     	;# 
  2066  0E93                     	;# 
  2067  0E94                     	;# 
  2068  0E95                     	;# 
  2069  0E96                     	;# 
  2070  0E97                     	;# 
  2071  0E9C                     	;# 
  2072  0E9D                     	;# 
  2073  0E9E                     	;# 
  2074  0EA1                     	;# 
  2075  0EA2                     	;# 
  2076  0EA3                     	;# 
  2077  0EA4                     	;# 
  2078  0EA5                     	;# 
  2079  0EA9                     	;# 
  2080  0EAA                     	;# 
  2081  0EAB                     	;# 
  2082  0EAC                     	;# 
  2083  0EB1                     	;# 
  2084  0EB2                     	;# 
  2085  0EB3                     	;# 
  2086  0EB8                     	;# 
  2087  0EB9                     	;# 
  2088  0EBA                     	;# 
  2089  0EBB                     	;# 
  2090  0EBC                     	;# 
  2091  0EBD                     	;# 
  2092  0EBE                     	;# 
  2093  0EC3                     	;# 
  2094  0EC5                     	;# 
  2095  0EC6                     	;# 
  2096  0EC7                     	;# 
  2097  0EC8                     	;# 
  2098  0EC9                     	;# 
  2099  0ECA                     	;# 
  2100  0ECB                     	;# 
  2101  0ECC                     	;# 
  2102  0F10                     	;# 
  2103  0F11                     	;# 
  2104  0F12                     	;# 
  2105  0F13                     	;# 
  2106  0F14                     	;# 
  2107  0F15                     	;# 
  2108  0F16                     	;# 
  2109  0F17                     	;# 
  2110  0F18                     	;# 
  2111  0F19                     	;# 
  2112  0F1A                     	;# 
  2113  0F1B                     	;# 
  2114  0F1C                     	;# 
  2115  0F1D                     	;# 
  2116  0F1E                     	;# 
  2117  0F1F                     	;# 
  2118  0F20                     	;# 
  2119  0F21                     	;# 
  2120  0F22                     	;# 
  2121  0F23                     	;# 
  2122  0F24                     	;# 
  2123  0F25                     	;# 
  2124  0F26                     	;# 
  2125  0F27                     	;# 
  2126  0F38                     	;# 
  2127  0F39                     	;# 
  2128  0F3A                     	;# 
  2129  0F3B                     	;# 
  2130  0F3C                     	;# 
  2131  0F3D                     	;# 
  2132  0F3E                     	;# 
  2133  0F3F                     	;# 
  2134  0F40                     	;# 
  2135  0F41                     	;# 
  2136  0F43                     	;# 
  2137  0F44                     	;# 
  2138  0F45                     	;# 
  2139  0F46                     	;# 
  2140  0F47                     	;# 
  2141  0F48                     	;# 
  2142  0F49                     	;# 
  2143  0F4A                     	;# 
  2144  0F4B                     	;# 
  2145  0F4C                     	;# 
  2146  0F4E                     	;# 
  2147  0F4F                     	;# 
  2148  0F50                     	;# 
  2149  0F51                     	;# 
  2150  0F52                     	;# 
  2151  0F53                     	;# 
  2152  0F54                     	;# 
  2153  0F55                     	;# 
  2154  0F56                     	;# 
  2155  0F57                     	;# 
  2156  0F65                     	;# 
  2157  0F68                     	;# 
  2158  0F69                     	;# 
  2159  0F6A                     	;# 
  2160  0F6B                     	;# 
  2161  0FE4                     	;# 
  2162  0FE5                     	;# 
  2163  0FE6                     	;# 
  2164  0FE7                     	;# 
  2165  0FE8                     	;# 
  2166  0FE9                     	;# 
  2167  0FEA                     	;# 
  2168  0FEB                     	;# 
  2169  0FED                     	;# 
  2170  0FEE                     	;# 
  2171  0FEF                     	;# 
  2172  0000                     	;# 
  2173  0001                     	;# 
  2174  0002                     	;# 
  2175  0003                     	;# 
  2176  0004                     	;# 
  2177  0005                     	;# 
  2178  0006                     	;# 
  2179  0007                     	;# 
  2180  0008                     	;# 
  2181  0009                     	;# 
  2182  000A                     	;# 
  2183  000B                     	;# 
  2184  000C                     	;# 
  2185  000D                     	;# 
  2186  000E                     	;# 
  2187  0010                     	;# 
  2188  0011                     	;# 
  2189  0012                     	;# 
  2190  0013                     	;# 
  2191  0016                     	;# 
  2192  0017                     	;# 
  2193  0018                     	;# 
  2194  001C                     	;# 
  2195  001C                     	;# 
  2196  001D                     	;# 
  2197  001D                     	;# 
  2198  001E                     	;# 
  2199  001F                     	;# 
  2200  008C                     	;# 
  2201  008C                     	;# 
  2202  008D                     	;# 
  2203  008E                     	;# 
  2204  008E                     	;# 
  2205  008F                     	;# 
  2206  0090                     	;# 
  2207  0090                     	;# 
  2208  0091                     	;# 
  2209  0093                     	;# 
  2210  0094                     	;# 
  2211  0095                     	;# 
  2212  0096                     	;# 
  2213  0097                     	;# 
  2214  0098                     	;# 
  2215  0099                     	;# 
  2216  009A                     	;# 
  2217  009B                     	;# 
  2218  009C                     	;# 
  2219  009D                     	;# 
  2220  009E                     	;# 
  2221  010C                     	;# 
  2222  010D                     	;# 
  2223  010E                     	;# 
  2224  010E                     	;# 
  2225  010F                     	;# 
  2226  0110                     	;# 
  2227  0110                     	;# 
  2228  0111                     	;# 
  2229  0112                     	;# 
  2230  0112                     	;# 
  2231  0113                     	;# 
  2232  0114                     	;# 
  2233  0114                     	;# 
  2234  0115                     	;# 
  2235  0116                     	;# 
  2236  0116                     	;# 
  2237  0117                     	;# 
  2238  0119                     	;# 
  2239  0119                     	;# 
  2240  0119                     	;# 
  2241  011A                     	;# 
  2242  011A                     	;# 
  2243  011A                     	;# 
  2244  011B                     	;# 
  2245  011B                     	;# 
  2246  011B                     	;# 
  2247  011B                     	;# 
  2248  011B                     	;# 
  2249  011C                     	;# 
  2250  011C                     	;# 
  2251  011C                     	;# 
  2252  011D                     	;# 
  2253  011D                     	;# 
  2254  011D                     	;# 
  2255  011E                     	;# 
  2256  011E                     	;# 
  2257  011E                     	;# 
  2258  011F                     	;# 
  2259  011F                     	;# 
  2260  011F                     	;# 
  2261  011F                     	;# 
  2262  011F                     	;# 
  2263  018C                     	;# 
  2264  018D                     	;# 
  2265  018E                     	;# 
  2266  018F                     	;# 
  2267  0190                     	;# 
  2268  0191                     	;# 
  2269  0192                     	;# 
  2270  0196                     	;# 
  2271  0197                     	;# 
  2272  0198                     	;# 
  2273  0199                     	;# 
  2274  019A                     	;# 
  2275  019B                     	;# 
  2276  019C                     	;# 
  2277  020C                     	;# 
  2278  020C                     	;# 
  2279  020D                     	;# 
  2280  020E                     	;# 
  2281  020F                     	;# 
  2282  020F                     	;# 
  2283  0210                     	;# 
  2284  0210                     	;# 
  2285  0211                     	;# 
  2286  0211                     	;# 
  2287  0212                     	;# 
  2288  0212                     	;# 
  2289  0213                     	;# 
  2290  0214                     	;# 
  2291  0215                     	;# 
  2292  0215                     	;# 
  2293  0216                     	;# 
  2294  0216                     	;# 
  2295  0217                     	;# 
  2296  0217                     	;# 
  2297  0218                     	;# 
  2298  0218                     	;# 
  2299  0219                     	;# 
  2300  021A                     	;# 
  2301  021B                     	;# 
  2302  021B                     	;# 
  2303  021C                     	;# 
  2304  021C                     	;# 
  2305  021D                     	;# 
  2306  021D                     	;# 
  2307  021E                     	;# 
  2308  021F                     	;# 
  2309  028C                     	;# 
  2310  028C                     	;# 
  2311  028D                     	;# 
  2312  028D                     	;# 
  2313  028E                     	;# 
  2314  028F                     	;# 
  2315  0290                     	;# 
  2316  0290                     	;# 
  2317  0291                     	;# 
  2318  0292                     	;# 
  2319  0292                     	;# 
  2320  0293                     	;# 
  2321  0293                     	;# 
  2322  0294                     	;# 
  2323  0295                     	;# 
  2324  0296                     	;# 
  2325  0296                     	;# 
  2326  0297                     	;# 
  2327  0298                     	;# 
  2328  0298                     	;# 
  2329  0299                     	;# 
  2330  0299                     	;# 
  2331  029A                     	;# 
  2332  029B                     	;# 
  2333  029C                     	;# 
  2334  029C                     	;# 
  2335  029D                     	;# 
  2336  030C                     	;# 
  2337  030C                     	;# 
  2338  030D                     	;# 
  2339  030E                     	;# 
  2340  030F                     	;# 
  2341  0310                     	;# 
  2342  0310                     	;# 
  2343  0311                     	;# 
  2344  0312                     	;# 
  2345  0313                     	;# 
  2346  0314                     	;# 
  2347  0314                     	;# 
  2348  0315                     	;# 
  2349  0316                     	;# 
  2350  0317                     	;# 
  2351  0318                     	;# 
  2352  0318                     	;# 
  2353  0319                     	;# 
  2354  031A                     	;# 
  2355  031B                     	;# 
  2356  031C                     	;# 
  2357  031C                     	;# 
  2358  031D                     	;# 
  2359  031E                     	;# 
  2360  031F                     	;# 
  2361  038C                     	;# 
  2362  038D                     	;# 
  2363  038E                     	;# 
  2364  0390                     	;# 
  2365  0391                     	;# 
  2366  0392                     	;# 
  2367  040C                     	;# 
  2368  040D                     	;# 
  2369  040E                     	;# 
  2370  040F                     	;# 
  2371  0410                     	;# 
  2372  0411                     	;# 
  2373  0416                     	;# 
  2374  0416                     	;# 
  2375  0417                     	;# 
  2376  0418                     	;# 
  2377  0418                     	;# 
  2378  0419                     	;# 
  2379  041A                     	;# 
  2380  041A                     	;# 
  2381  041B                     	;# 
  2382  041C                     	;# 
  2383  041C                     	;# 
  2384  041D                     	;# 
  2385  041E                     	;# 
  2386  041F                     	;# 
  2387  048C                     	;# 
  2388  048C                     	;# 
  2389  048D                     	;# 
  2390  048E                     	;# 
  2391  048F                     	;# 
  2392  048F                     	;# 
  2393  0490                     	;# 
  2394  0491                     	;# 
  2395  0492                     	;# 
  2396  0492                     	;# 
  2397  0493                     	;# 
  2398  0494                     	;# 
  2399  0495                     	;# 
  2400  0495                     	;# 
  2401  0496                     	;# 
  2402  0497                     	;# 
  2403  0498                     	;# 
  2404  0499                     	;# 
  2405  049A                     	;# 
  2406  049B                     	;# 
  2407  049C                     	;# 
  2408  049D                     	;# 
  2409  050C                     	;# 
  2410  050C                     	;# 
  2411  050D                     	;# 
  2412  050E                     	;# 
  2413  050F                     	;# 
  2414  050F                     	;# 
  2415  0510                     	;# 
  2416  0511                     	;# 
  2417  0512                     	;# 
  2418  0512                     	;# 
  2419  0513                     	;# 
  2420  0514                     	;# 
  2421  0515                     	;# 
  2422  0515                     	;# 
  2423  0516                     	;# 
  2424  0517                     	;# 
  2425  0518                     	;# 
  2426  0519                     	;# 
  2427  051A                     	;# 
  2428  051B                     	;# 
  2429  051C                     	;# 
  2430  051D                     	;# 
  2431  058C                     	;# 
  2432  058C                     	;# 
  2433  058D                     	;# 
  2434  058E                     	;# 
  2435  058F                     	;# 
  2436  058F                     	;# 
  2437  0590                     	;# 
  2438  0591                     	;# 
  2439  0592                     	;# 
  2440  0593                     	;# 
  2441  060C                     	;# 
  2442  060D                     	;# 
  2443  060E                     	;# 
  2444  060F                     	;# 
  2445  0610                     	;# 
  2446  0611                     	;# 
  2447  0612                     	;# 
  2448  0613                     	;# 
  2449  0614                     	;# 
  2450  0616                     	;# 
  2451  0617                     	;# 
  2452  0618                     	;# 
  2453  0619                     	;# 
  2454  061A                     	;# 
  2455  061B                     	;# 
  2456  061C                     	;# 
  2457  061D                     	;# 
  2458  061E                     	;# 
  2459  068C                     	;# 
  2460  068D                     	;# 
  2461  068E                     	;# 
  2462  068F                     	;# 
  2463  0690                     	;# 
  2464  0691                     	;# 
  2465  0692                     	;# 
  2466  0693                     	;# 
  2467  0694                     	;# 
  2468  070C                     	;# 
  2469  070D                     	;# 
  2470  070E                     	;# 
  2471  070F                     	;# 
  2472  0710                     	;# 
  2473  0711                     	;# 
  2474  0712                     	;# 
  2475  0713                     	;# 
  2476  0714                     	;# 
  2477  0716                     	;# 
  2478  0717                     	;# 
  2479  0718                     	;# 
  2480  0719                     	;# 
  2481  071A                     	;# 
  2482  071B                     	;# 
  2483  071C                     	;# 
  2484  071D                     	;# 
  2485  071E                     	;# 
  2486  0796                     	;# 
  2487  0797                     	;# 
  2488  0798                     	;# 
  2489  0799                     	;# 
  2490  079A                     	;# 
  2491  079B                     	;# 
  2492  080C                     	;# 
  2493  080D                     	;# 
  2494  080E                     	;# 
  2495  080F                     	;# 
  2496  0810                     	;# 
  2497  0811                     	;# 
  2498  0812                     	;# 
  2499  0813                     	;# 
  2500  0814                     	;# 
  2501  081A                     	;# 
  2502  081B                     	;# 
  2503  081C                     	;# 
  2504  081D                     	;# 
  2505  081E                     	;# 
  2506  081F                     	;# 
  2507  088C                     	;# 
  2508  088D                     	;# 
  2509  088E                     	;# 
  2510  088F                     	;# 
  2511  0890                     	;# 
  2512  0891                     	;# 
  2513  0892                     	;# 
  2514  0893                     	;# 
  2515  0895                     	;# 
  2516  0896                     	;# 
  2517  0897                     	;# 
  2518  0898                     	;# 
  2519  0899                     	;# 
  2520  089A                     	;# 
  2521  089B                     	;# 
  2522  090C                     	;# 
  2523  090E                     	;# 
  2524  090F                     	;# 
  2525  091F                     	;# 
  2526  091F                     	;# 
  2527  098F                     	;# 
  2528  098F                     	;# 
  2529  0990                     	;# 
  2530  0991                     	;# 
  2531  0992                     	;# 
  2532  0993                     	;# 
  2533  0994                     	;# 
  2534  0995                     	;# 
  2535  0996                     	;# 
  2536  0997                     	;# 
  2537  0E0F                     	;# 
  2538  0E10                     	;# 
  2539  0E11                     	;# 
  2540  0E12                     	;# 
  2541  0E13                     	;# 
  2542  0E14                     	;# 
  2543  0E15                     	;# 
  2544  0E16                     	;# 
  2545  0E17                     	;# 
  2546  0E18                     	;# 
  2547  0E19                     	;# 
  2548  0E1A                     	;# 
  2549  0E1B                     	;# 
  2550  0E1C                     	;# 
  2551  0E1D                     	;# 
  2552  0E1E                     	;# 
  2553  0E1F                     	;# 
  2554  0E20                     	;# 
  2555  0E21                     	;# 
  2556  0E22                     	;# 
  2557  0E23                     	;# 
  2558  0E24                     	;# 
  2559  0E25                     	;# 
  2560  0E26                     	;# 
  2561  0E27                     	;# 
  2562  0E28                     	;# 
  2563  0E29                     	;# 
  2564  0E2A                     	;# 
  2565  0E2B                     	;# 
  2566  0E2C                     	;# 
  2567  0E2D                     	;# 
  2568  0E2E                     	;# 
  2569  0E2F                     	;# 
  2570  0E30                     	;# 
  2571  0E31                     	;# 
  2572  0E32                     	;# 
  2573  0E33                     	;# 
  2574  0E34                     	;# 
  2575  0E35                     	;# 
  2576  0E36                     	;# 
  2577  0E37                     	;# 
  2578  0E8F                     	;# 
  2579  0E90                     	;# 
  2580  0E91                     	;# 
  2581  0E92                     	;# 
  2582  0E93                     	;# 
  2583  0E94                     	;# 
  2584  0E95                     	;# 
  2585  0E96                     	;# 
  2586  0E97                     	;# 
  2587  0E9C                     	;# 
  2588  0E9D                     	;# 
  2589  0E9E                     	;# 
  2590  0EA1                     	;# 
  2591  0EA2                     	;# 
  2592  0EA3                     	;# 
  2593  0EA4                     	;# 
  2594  0EA5                     	;# 
  2595  0EA9                     	;# 
  2596  0EAA                     	;# 
  2597  0EAB                     	;# 
  2598  0EAC                     	;# 
  2599  0EB1                     	;# 
  2600  0EB2                     	;# 
  2601  0EB3                     	;# 
  2602  0EB8                     	;# 
  2603  0EB9                     	;# 
  2604  0EBA                     	;# 
  2605  0EBB                     	;# 
  2606  0EBC                     	;# 
  2607  0EBD                     	;# 
  2608  0EBE                     	;# 
  2609  0EC3                     	;# 
  2610  0EC5                     	;# 
  2611  0EC6                     	;# 
  2612  0EC7                     	;# 
  2613  0EC8                     	;# 
  2614  0EC9                     	;# 
  2615  0ECA                     	;# 
  2616  0ECB                     	;# 
  2617  0ECC                     	;# 
  2618  0F10                     	;# 
  2619  0F11                     	;# 
  2620  0F12                     	;# 
  2621  0F13                     	;# 
  2622  0F14                     	;# 
  2623  0F15                     	;# 
  2624  0F16                     	;# 
  2625  0F17                     	;# 
  2626  0F18                     	;# 
  2627  0F19                     	;# 
  2628  0F1A                     	;# 
  2629  0F1B                     	;# 
  2630  0F1C                     	;# 
  2631  0F1D                     	;# 
  2632  0F1E                     	;# 
  2633  0F1F                     	;# 
  2634  0F20                     	;# 
  2635  0F21                     	;# 
  2636  0F22                     	;# 
  2637  0F23                     	;# 
  2638  0F24                     	;# 
  2639  0F25                     	;# 
  2640  0F26                     	;# 
  2641  0F27                     	;# 
  2642  0F38                     	;# 
  2643  0F39                     	;# 
  2644  0F3A                     	;# 
  2645  0F3B                     	;# 
  2646  0F3C                     	;# 
  2647  0F3D                     	;# 
  2648  0F3E                     	;# 
  2649  0F3F                     	;# 
  2650  0F40                     	;# 
  2651  0F41                     	;# 
  2652  0F43                     	;# 
  2653  0F44                     	;# 
  2654  0F45                     	;# 
  2655  0F46                     	;# 
  2656  0F47                     	;# 
  2657  0F48                     	;# 
  2658  0F49                     	;# 
  2659  0F4A                     	;# 
  2660  0F4B                     	;# 
  2661  0F4C                     	;# 
  2662  0F4E                     	;# 
  2663  0F4F                     	;# 
  2664  0F50                     	;# 
  2665  0F51                     	;# 
  2666  0F52                     	;# 
  2667  0F53                     	;# 
  2668  0F54                     	;# 
  2669  0F55                     	;# 
  2670  0F56                     	;# 
  2671  0F57                     	;# 
  2672  0F65                     	;# 
  2673  0F68                     	;# 
  2674  0F69                     	;# 
  2675  0F6A                     	;# 
  2676  0F6B                     	;# 
  2677  0FE4                     	;# 
  2678  0FE5                     	;# 
  2679  0FE6                     	;# 
  2680  0FE7                     	;# 
  2681  0FE8                     	;# 
  2682  0FE9                     	;# 
  2683  0FEA                     	;# 
  2684  0FEB                     	;# 
  2685  0FED                     	;# 
  2686  0FEE                     	;# 
  2687  0FEF                     	;# 
  2688  0000                     	;# 
  2689  0001                     	;# 
  2690  0002                     	;# 
  2691  0003                     	;# 
  2692  0004                     	;# 
  2693  0005                     	;# 
  2694  0006                     	;# 
  2695  0007                     	;# 
  2696  0008                     	;# 
  2697  0009                     	;# 
  2698  000A                     	;# 
  2699  000B                     	;# 
  2700  000C                     	;# 
  2701  000D                     	;# 
  2702  000E                     	;# 
  2703  0010                     	;# 
  2704  0011                     	;# 
  2705  0012                     	;# 
  2706  0013                     	;# 
  2707  0016                     	;# 
  2708  0017                     	;# 
  2709  0018                     	;# 
  2710  001C                     	;# 
  2711  001C                     	;# 
  2712  001D                     	;# 
  2713  001D                     	;# 
  2714  001E                     	;# 
  2715  001F                     	;# 
  2716  008C                     	;# 
  2717  008C                     	;# 
  2718  008D                     	;# 
  2719  008E                     	;# 
  2720  008E                     	;# 
  2721  008F                     	;# 
  2722  0090                     	;# 
  2723  0090                     	;# 
  2724  0091                     	;# 
  2725  0093                     	;# 
  2726  0094                     	;# 
  2727  0095                     	;# 
  2728  0096                     	;# 
  2729  0097                     	;# 
  2730  0098                     	;# 
  2731  0099                     	;# 
  2732  009A                     	;# 
  2733  009B                     	;# 
  2734  009C                     	;# 
  2735  009D                     	;# 
  2736  009E                     	;# 
  2737  010C                     	;# 
  2738  010D                     	;# 
  2739  010E                     	;# 
  2740  010E                     	;# 
  2741  010F                     	;# 
  2742  0110                     	;# 
  2743  0110                     	;# 
  2744  0111                     	;# 
  2745  0112                     	;# 
  2746  0112                     	;# 
  2747  0113                     	;# 
  2748  0114                     	;# 
  2749  0114                     	;# 
  2750  0115                     	;# 
  2751  0116                     	;# 
  2752  0116                     	;# 
  2753  0117                     	;# 
  2754  0119                     	;# 
  2755  0119                     	;# 
  2756  0119                     	;# 
  2757  011A                     	;# 
  2758  011A                     	;# 
  2759  011A                     	;# 
  2760  011B                     	;# 
  2761  011B                     	;# 
  2762  011B                     	;# 
  2763  011B                     	;# 
  2764  011B                     	;# 
  2765  011C                     	;# 
  2766  011C                     	;# 
  2767  011C                     	;# 
  2768  011D                     	;# 
  2769  011D                     	;# 
  2770  011D                     	;# 
  2771  011E                     	;# 
  2772  011E                     	;# 
  2773  011E                     	;# 
  2774  011F                     	;# 
  2775  011F                     	;# 
  2776  011F                     	;# 
  2777  011F                     	;# 
  2778  011F                     	;# 
  2779  018C                     	;# 
  2780  018D                     	;# 
  2781  018E                     	;# 
  2782  018F                     	;# 
  2783  0190                     	;# 
  2784  0191                     	;# 
  2785  0192                     	;# 
  2786  0196                     	;# 
  2787  0197                     	;# 
  2788  0198                     	;# 
  2789  0199                     	;# 
  2790  019A                     	;# 
  2791  019B                     	;# 
  2792  019C                     	;# 
  2793  020C                     	;# 
  2794  020C                     	;# 
  2795  020D                     	;# 
  2796  020E                     	;# 
  2797  020F                     	;# 
  2798  020F                     	;# 
  2799  0210                     	;# 
  2800  0210                     	;# 
  2801  0211                     	;# 
  2802  0211                     	;# 
  2803  0212                     	;# 
  2804  0212                     	;# 
  2805  0213                     	;# 
  2806  0214                     	;# 
  2807  0215                     	;# 
  2808  0215                     	;# 
  2809  0216                     	;# 
  2810  0216                     	;# 
  2811  0217                     	;# 
  2812  0217                     	;# 
  2813  0218                     	;# 
  2814  0218                     	;# 
  2815  0219                     	;# 
  2816  021A                     	;# 
  2817  021B                     	;# 
  2818  021B                     	;# 
  2819  021C                     	;# 
  2820  021C                     	;# 
  2821  021D                     	;# 
  2822  021D                     	;# 
  2823  021E                     	;# 
  2824  021F                     	;# 
  2825  028C                     	;# 
  2826  028C                     	;# 
  2827  028D                     	;# 
  2828  028D                     	;# 
  2829  028E                     	;# 
  2830  028F                     	;# 
  2831  0290                     	;# 
  2832  0290                     	;# 
  2833  0291                     	;# 
  2834  0292                     	;# 
  2835  0292                     	;# 
  2836  0293                     	;# 
  2837  0293                     	;# 
  2838  0294                     	;# 
  2839  0295                     	;# 
  2840  0296                     	;# 
  2841  0296                     	;# 
  2842  0297                     	;# 
  2843  0298                     	;# 
  2844  0298                     	;# 
  2845  0299                     	;# 
  2846  0299                     	;# 
  2847  029A                     	;# 
  2848  029B                     	;# 
  2849  029C                     	;# 
  2850  029C                     	;# 
  2851  029D                     	;# 
  2852  030C                     	;# 
  2853  030C                     	;# 
  2854  030D                     	;# 
  2855  030E                     	;# 
  2856  030F                     	;# 
  2857  0310                     	;# 
  2858  0310                     	;# 
  2859  0311                     	;# 
  2860  0312                     	;# 
  2861  0313                     	;# 
  2862  0314                     	;# 
  2863  0314                     	;# 
  2864  0315                     	;# 
  2865  0316                     	;# 
  2866  0317                     	;# 
  2867  0318                     	;# 
  2868  0318                     	;# 
  2869  0319                     	;# 
  2870  031A                     	;# 
  2871  031B                     	;# 
  2872  031C                     	;# 
  2873  031C                     	;# 
  2874  031D                     	;# 
  2875  031E                     	;# 
  2876  031F                     	;# 
  2877  038C                     	;# 
  2878  038D                     	;# 
  2879  038E                     	;# 
  2880  0390                     	;# 
  2881  0391                     	;# 
  2882  0392                     	;# 
  2883  040C                     	;# 
  2884  040D                     	;# 
  2885  040E                     	;# 
  2886  040F                     	;# 
  2887  0410                     	;# 
  2888  0411                     	;# 
  2889  0416                     	;# 
  2890  0416                     	;# 
  2891  0417                     	;# 
  2892  0418                     	;# 
  2893  0418                     	;# 
  2894  0419                     	;# 
  2895  041A                     	;# 
  2896  041A                     	;# 
  2897  041B                     	;# 
  2898  041C                     	;# 
  2899  041C                     	;# 
  2900  041D                     	;# 
  2901  041E                     	;# 
  2902  041F                     	;# 
  2903  048C                     	;# 
  2904  048C                     	;# 
  2905  048D                     	;# 
  2906  048E                     	;# 
  2907  048F                     	;# 
  2908  048F                     	;# 
  2909  0490                     	;# 
  2910  0491                     	;# 
  2911  0492                     	;# 
  2912  0492                     	;# 
  2913  0493                     	;# 
  2914  0494                     	;# 
  2915  0495                     	;# 
  2916  0495                     	;# 
  2917  0496                     	;# 
  2918  0497                     	;# 
  2919  0498                     	;# 
  2920  0499                     	;# 
  2921  049A                     	;# 
  2922  049B                     	;# 
  2923  049C                     	;# 
  2924  049D                     	;# 
  2925  050C                     	;# 
  2926  050C                     	;# 
  2927  050D                     	;# 
  2928  050E                     	;# 
  2929  050F                     	;# 
  2930  050F                     	;# 
  2931  0510                     	;# 
  2932  0511                     	;# 
  2933  0512                     	;# 
  2934  0512                     	;# 
  2935  0513                     	;# 
  2936  0514                     	;# 
  2937  0515                     	;# 
  2938  0515                     	;# 
  2939  0516                     	;# 
  2940  0517                     	;# 
  2941  0518                     	;# 
  2942  0519                     	;# 
  2943  051A                     	;# 
  2944  051B                     	;# 
  2945  051C                     	;# 
  2946  051D                     	;# 
  2947  058C                     	;# 
  2948  058C                     	;# 
  2949  058D                     	;# 
  2950  058E                     	;# 
  2951  058F                     	;# 
  2952  058F                     	;# 
  2953  0590                     	;# 
  2954  0591                     	;# 
  2955  0592                     	;# 
  2956  0593                     	;# 
  2957  060C                     	;# 
  2958  060D                     	;# 
  2959  060E                     	;# 
  2960  060F                     	;# 
  2961  0610                     	;# 
  2962  0611                     	;# 
  2963  0612                     	;# 
  2964  0613                     	;# 
  2965  0614                     	;# 
  2966  0616                     	;# 
  2967  0617                     	;# 
  2968  0618                     	;# 
  2969  0619                     	;# 
  2970  061A                     	;# 
  2971  061B                     	;# 
  2972  061C                     	;# 
  2973  061D                     	;# 
  2974  061E                     	;# 
  2975  068C                     	;# 
  2976  068D                     	;# 
  2977  068E                     	;# 
  2978  068F                     	;# 
  2979  0690                     	;# 
  2980  0691                     	;# 
  2981  0692                     	;# 
  2982  0693                     	;# 
  2983  0694                     	;# 
  2984  070C                     	;# 
  2985  070D                     	;# 
  2986  070E                     	;# 
  2987  070F                     	;# 
  2988  0710                     	;# 
  2989  0711                     	;# 
  2990  0712                     	;# 
  2991  0713                     	;# 
  2992  0714                     	;# 
  2993  0716                     	;# 
  2994  0717                     	;# 
  2995  0718                     	;# 
  2996  0719                     	;# 
  2997  071A                     	;# 
  2998  071B                     	;# 
  2999  071C                     	;# 
  3000  071D                     	;# 
  3001  071E                     	;# 
  3002  0796                     	;# 
  3003  0797                     	;# 
  3004  0798                     	;# 
  3005  0799                     	;# 
  3006  079A                     	;# 
  3007  079B                     	;# 
  3008  080C                     	;# 
  3009  080D                     	;# 
  3010  080E                     	;# 
  3011  080F                     	;# 
  3012  0810                     	;# 
  3013  0811                     	;# 
  3014  0812                     	;# 
  3015  0813                     	;# 
  3016  0814                     	;# 
  3017  081A                     	;# 
  3018  081B                     	;# 
  3019  081C                     	;# 
  3020  081D                     	;# 
  3021  081E                     	;# 
  3022  081F                     	;# 
  3023  088C                     	;# 
  3024  088D                     	;# 
  3025  088E                     	;# 
  3026  088F                     	;# 
  3027  0890                     	;# 
  3028  0891                     	;# 
  3029  0892                     	;# 
  3030  0893                     	;# 
  3031  0895                     	;# 
  3032  0896                     	;# 
  3033  0897                     	;# 
  3034  0898                     	;# 
  3035  0899                     	;# 
  3036  089A                     	;# 
  3037  089B                     	;# 
  3038  090C                     	;# 
  3039  090E                     	;# 
  3040  090F                     	;# 
  3041  091F                     	;# 
  3042  091F                     	;# 
  3043  098F                     	;# 
  3044  098F                     	;# 
  3045  0990                     	;# 
  3046  0991                     	;# 
  3047  0992                     	;# 
  3048  0993                     	;# 
  3049  0994                     	;# 
  3050  0995                     	;# 
  3051  0996                     	;# 
  3052  0997                     	;# 
  3053  0E0F                     	;# 
  3054  0E10                     	;# 
  3055  0E11                     	;# 
  3056  0E12                     	;# 
  3057  0E13                     	;# 
  3058  0E14                     	;# 
  3059  0E15                     	;# 
  3060  0E16                     	;# 
  3061  0E17                     	;# 
  3062  0E18                     	;# 
  3063  0E19                     	;# 
  3064  0E1A                     	;# 
  3065  0E1B                     	;# 
  3066  0E1C                     	;# 
  3067  0E1D                     	;# 
  3068  0E1E                     	;# 
  3069  0E1F                     	;# 
  3070  0E20                     	;# 
  3071  0E21                     	;# 
  3072  0E22                     	;# 
  3073  0E23                     	;# 
  3074  0E24                     	;# 
  3075  0E25                     	;# 
  3076  0E26                     	;# 
  3077  0E27                     	;# 
  3078  0E28                     	;# 
  3079  0E29                     	;# 
  3080  0E2A                     	;# 
  3081  0E2B                     	;# 
  3082  0E2C                     	;# 
  3083  0E2D                     	;# 
  3084  0E2E                     	;# 
  3085  0E2F                     	;# 
  3086  0E30                     	;# 
  3087  0E31                     	;# 
  3088  0E32                     	;# 
  3089  0E33                     	;# 
  3090  0E34                     	;# 
  3091  0E35                     	;# 
  3092  0E36                     	;# 
  3093  0E37                     	;# 
  3094  0E8F                     	;# 
  3095  0E90                     	;# 
  3096  0E91                     	;# 
  3097  0E92                     	;# 
  3098  0E93                     	;# 
  3099  0E94                     	;# 
  3100  0E95                     	;# 
  3101  0E96                     	;# 
  3102  0E97                     	;# 
  3103  0E9C                     	;# 
  3104  0E9D                     	;# 
  3105  0E9E                     	;# 
  3106  0EA1                     	;# 
  3107  0EA2                     	;# 
  3108  0EA3                     	;# 
  3109  0EA4                     	;# 
  3110  0EA5                     	;# 
  3111  0EA9                     	;# 
  3112  0EAA                     	;# 
  3113  0EAB                     	;# 
  3114  0EAC                     	;# 
  3115  0EB1                     	;# 
  3116  0EB2                     	;# 
  3117  0EB3                     	;# 
  3118  0EB8                     	;# 
  3119  0EB9                     	;# 
  3120  0EBA                     	;# 
  3121  0EBB                     	;# 
  3122  0EBC                     	;# 
  3123  0EBD                     	;# 
  3124  0EBE                     	;# 
  3125  0EC3                     	;# 
  3126  0EC5                     	;# 
  3127  0EC6                     	;# 
  3128  0EC7                     	;# 
  3129  0EC8                     	;# 
  3130  0EC9                     	;# 
  3131  0ECA                     	;# 
  3132  0ECB                     	;# 
  3133  0ECC                     	;# 
  3134  0F10                     	;# 
  3135  0F11                     	;# 
  3136  0F12                     	;# 
  3137  0F13                     	;# 
  3138  0F14                     	;# 
  3139  0F15                     	;# 
  3140  0F16                     	;# 
  3141  0F17                     	;# 
  3142  0F18                     	;# 
  3143  0F19                     	;# 
  3144  0F1A                     	;# 
  3145  0F1B                     	;# 
  3146  0F1C                     	;# 
  3147  0F1D                     	;# 
  3148  0F1E                     	;# 
  3149  0F1F                     	;# 
  3150  0F20                     	;# 
  3151  0F21                     	;# 
  3152  0F22                     	;# 
  3153  0F23                     	;# 
  3154  0F24                     	;# 
  3155  0F25                     	;# 
  3156  0F26                     	;# 
  3157  0F27                     	;# 
  3158  0F38                     	;# 
  3159  0F39                     	;# 
  3160  0F3A                     	;# 
  3161  0F3B                     	;# 
  3162  0F3C                     	;# 
  3163  0F3D                     	;# 
  3164  0F3E                     	;# 
  3165  0F3F                     	;# 
  3166  0F40                     	;# 
  3167  0F41                     	;# 
  3168  0F43                     	;# 
  3169  0F44                     	;# 
  3170  0F45                     	;# 
  3171  0F46                     	;# 
  3172  0F47                     	;# 
  3173  0F48                     	;# 
  3174  0F49                     	;# 
  3175  0F4A                     	;# 
  3176  0F4B                     	;# 
  3177  0F4C                     	;# 
  3178  0F4E                     	;# 
  3179  0F4F                     	;# 
  3180  0F50                     	;# 
  3181  0F51                     	;# 
  3182  0F52                     	;# 
  3183  0F53                     	;# 
  3184  0F54                     	;# 
  3185  0F55                     	;# 
  3186  0F56                     	;# 
  3187  0F57                     	;# 
  3188  0F65                     	;# 
  3189  0F68                     	;# 
  3190  0F69                     	;# 
  3191  0F6A                     	;# 
  3192  0F6B                     	;# 
  3193  0FE4                     	;# 
  3194  0FE5                     	;# 
  3195  0FE6                     	;# 
  3196  0FE7                     	;# 
  3197  0FE8                     	;# 
  3198  0FE9                     	;# 
  3199  0FEA                     	;# 
  3200  0FEB                     	;# 
  3201  0FED                     	;# 
  3202  0FEE                     	;# 
  3203  0FEF                     	;# 
  3204  0000                     	;# 
  3205  0001                     	;# 
  3206  0002                     	;# 
  3207  0003                     	;# 
  3208  0004                     	;# 
  3209  0005                     	;# 
  3210  0006                     	;# 
  3211  0007                     	;# 
  3212  0008                     	;# 
  3213  0009                     	;# 
  3214  000A                     	;# 
  3215  000B                     	;# 
  3216  000C                     	;# 
  3217  000D                     	;# 
  3218  000E                     	;# 
  3219  0010                     	;# 
  3220  0011                     	;# 
  3221  0012                     	;# 
  3222  0013                     	;# 
  3223  0016                     	;# 
  3224  0017                     	;# 
  3225  0018                     	;# 
  3226  001C                     	;# 
  3227  001C                     	;# 
  3228  001D                     	;# 
  3229  001D                     	;# 
  3230  001E                     	;# 
  3231  001F                     	;# 
  3232  008C                     	;# 
  3233  008C                     	;# 
  3234  008D                     	;# 
  3235  008E                     	;# 
  3236  008E                     	;# 
  3237  008F                     	;# 
  3238  0090                     	;# 
  3239  0090                     	;# 
  3240  0091                     	;# 
  3241  0093                     	;# 
  3242  0094                     	;# 
  3243  0095                     	;# 
  3244  0096                     	;# 
  3245  0097                     	;# 
  3246  0098                     	;# 
  3247  0099                     	;# 
  3248  009A                     	;# 
  3249  009B                     	;# 
  3250  009C                     	;# 
  3251  009D                     	;# 
  3252  009E                     	;# 
  3253  010C                     	;# 
  3254  010D                     	;# 
  3255  010E                     	;# 
  3256  010E                     	;# 
  3257  010F                     	;# 
  3258  0110                     	;# 
  3259  0110                     	;# 
  3260  0111                     	;# 
  3261  0112                     	;# 
  3262  0112                     	;# 
  3263  0113                     	;# 
  3264  0114                     	;# 
  3265  0114                     	;# 
  3266  0115                     	;# 
  3267  0116                     	;# 
  3268  0116                     	;# 
  3269  0117                     	;# 
  3270  0119                     	;# 
  3271  0119                     	;# 
  3272  0119                     	;# 
  3273  011A                     	;# 
  3274  011A                     	;# 
  3275  011A                     	;# 
  3276  011B                     	;# 
  3277  011B                     	;# 
  3278  011B                     	;# 
  3279  011B                     	;# 
  3280  011B                     	;# 
  3281  011C                     	;# 
  3282  011C                     	;# 
  3283  011C                     	;# 
  3284  011D                     	;# 
  3285  011D                     	;# 
  3286  011D                     	;# 
  3287  011E                     	;# 
  3288  011E                     	;# 
  3289  011E                     	;# 
  3290  011F                     	;# 
  3291  011F                     	;# 
  3292  011F                     	;# 
  3293  011F                     	;# 
  3294  011F                     	;# 
  3295  018C                     	;# 
  3296  018D                     	;# 
  3297  018E                     	;# 
  3298  018F                     	;# 
  3299  0190                     	;# 
  3300  0191                     	;# 
  3301  0192                     	;# 
  3302  0196                     	;# 
  3303  0197                     	;# 
  3304  0198                     	;# 
  3305  0199                     	;# 
  3306  019A                     	;# 
  3307  019B                     	;# 
  3308  019C                     	;# 
  3309  020C                     	;# 
  3310  020C                     	;# 
  3311  020D                     	;# 
  3312  020E                     	;# 
  3313  020F                     	;# 
  3314  020F                     	;# 
  3315  0210                     	;# 
  3316  0210                     	;# 
  3317  0211                     	;# 
  3318  0211                     	;# 
  3319  0212                     	;# 
  3320  0212                     	;# 
  3321  0213                     	;# 
  3322  0214                     	;# 
  3323  0215                     	;# 
  3324  0215                     	;# 
  3325  0216                     	;# 
  3326  0216                     	;# 
  3327  0217                     	;# 
  3328  0217                     	;# 
  3329  0218                     	;# 
  3330  0218                     	;# 
  3331  0219                     	;# 
  3332  021A                     	;# 
  3333  021B                     	;# 
  3334  021B                     	;# 
  3335  021C                     	;# 
  3336  021C                     	;# 
  3337  021D                     	;# 
  3338  021D                     	;# 
  3339  021E                     	;# 
  3340  021F                     	;# 
  3341  028C                     	;# 
  3342  028C                     	;# 
  3343  028D                     	;# 
  3344  028D                     	;# 
  3345  028E                     	;# 
  3346  028F                     	;# 
  3347  0290                     	;# 
  3348  0290                     	;# 
  3349  0291                     	;# 
  3350  0292                     	;# 
  3351  0292                     	;# 
  3352  0293                     	;# 
  3353  0293                     	;# 
  3354  0294                     	;# 
  3355  0295                     	;# 
  3356  0296                     	;# 
  3357  0296                     	;# 
  3358  0297                     	;# 
  3359  0298                     	;# 
  3360  0298                     	;# 
  3361  0299                     	;# 
  3362  0299                     	;# 
  3363  029A                     	;# 
  3364  029B                     	;# 
  3365  029C                     	;# 
  3366  029C                     	;# 
  3367  029D                     	;# 
  3368  030C                     	;# 
  3369  030C                     	;# 
  3370  030D                     	;# 
  3371  030E                     	;# 
  3372  030F                     	;# 
  3373  0310                     	;# 
  3374  0310                     	;# 
  3375  0311                     	;# 
  3376  0312                     	;# 
  3377  0313                     	;# 
  3378  0314                     	;# 
  3379  0314                     	;# 
  3380  0315                     	;# 
  3381  0316                     	;# 
  3382  0317                     	;# 
  3383  0318                     	;# 
  3384  0318                     	;# 
  3385  0319                     	;# 
  3386  031A                     	;# 
  3387  031B                     	;# 
  3388  031C                     	;# 
  3389  031C                     	;# 
  3390  031D                     	;# 
  3391  031E                     	;# 
  3392  031F                     	;# 
  3393  038C                     	;# 
  3394  038D                     	;# 
  3395  038E                     	;# 
  3396  0390                     	;# 
  3397  0391                     	;# 
  3398  0392                     	;# 
  3399  040C                     	;# 
  3400  040D                     	;# 
  3401  040E                     	;# 
  3402  040F                     	;# 
  3403  0410                     	;# 
  3404  0411                     	;# 
  3405  0416                     	;# 
  3406  0416                     	;# 
  3407  0417                     	;# 
  3408  0418                     	;# 
  3409  0418                     	;# 
  3410  0419                     	;# 
  3411  041A                     	;# 
  3412  041A                     	;# 
  3413  041B                     	;# 
  3414  041C                     	;# 
  3415  041C                     	;# 
  3416  041D                     	;# 
  3417  041E                     	;# 
  3418  041F                     	;# 
  3419  048C                     	;# 
  3420  048C                     	;# 
  3421  048D                     	;# 
  3422  048E                     	;# 
  3423  048F                     	;# 
  3424  048F                     	;# 
  3425  0490                     	;# 
  3426  0491                     	;# 
  3427  0492                     	;# 
  3428  0492                     	;# 
  3429  0493                     	;# 
  3430  0494                     	;# 
  3431  0495                     	;# 
  3432  0495                     	;# 
  3433  0496                     	;# 
  3434  0497                     	;# 
  3435  0498                     	;# 
  3436  0499                     	;# 
  3437  049A                     	;# 
  3438  049B                     	;# 
  3439  049C                     	;# 
  3440  049D                     	;# 
  3441  050C                     	;# 
  3442  050C                     	;# 
  3443  050D                     	;# 
  3444  050E                     	;# 
  3445  050F                     	;# 
  3446  050F                     	;# 
  3447  0510                     	;# 
  3448  0511                     	;# 
  3449  0512                     	;# 
  3450  0512                     	;# 
  3451  0513                     	;# 
  3452  0514                     	;# 
  3453  0515                     	;# 
  3454  0515                     	;# 
  3455  0516                     	;# 
  3456  0517                     	;# 
  3457  0518                     	;# 
  3458  0519                     	;# 
  3459  051A                     	;# 
  3460  051B                     	;# 
  3461  051C                     	;# 
  3462  051D                     	;# 
  3463  058C                     	;# 
  3464  058C                     	;# 
  3465  058D                     	;# 
  3466  058E                     	;# 
  3467  058F                     	;# 
  3468  058F                     	;# 
  3469  0590                     	;# 
  3470  0591                     	;# 
  3471  0592                     	;# 
  3472  0593                     	;# 
  3473  060C                     	;# 
  3474  060D                     	;# 
  3475  060E                     	;# 
  3476  060F                     	;# 
  3477  0610                     	;# 
  3478  0611                     	;# 
  3479  0612                     	;# 
  3480  0613                     	;# 
  3481  0614                     	;# 
  3482  0616                     	;# 
  3483  0617                     	;# 
  3484  0618                     	;# 
  3485  0619                     	;# 
  3486  061A                     	;# 
  3487  061B                     	;# 
  3488  061C                     	;# 
  3489  061D                     	;# 
  3490  061E                     	;# 
  3491  068C                     	;# 
  3492  068D                     	;# 
  3493  068E                     	;# 
  3494  068F                     	;# 
  3495  0690                     	;# 
  3496  0691                     	;# 
  3497  0692                     	;# 
  3498  0693                     	;# 
  3499  0694                     	;# 
  3500  070C                     	;# 
  3501  070D                     	;# 
  3502  070E                     	;# 
  3503  070F                     	;# 
  3504  0710                     	;# 
  3505  0711                     	;# 
  3506  0712                     	;# 
  3507  0713                     	;# 
  3508  0714                     	;# 
  3509  0716                     	;# 
  3510  0717                     	;# 
  3511  0718                     	;# 
  3512  0719                     	;# 
  3513  071A                     	;# 
  3514  071B                     	;# 
  3515  071C                     	;# 
  3516  071D                     	;# 
  3517  071E                     	;# 
  3518  0796                     	;# 
  3519  0797                     	;# 
  3520  0798                     	;# 
  3521  0799                     	;# 
  3522  079A                     	;# 
  3523  079B                     	;# 
  3524  080C                     	;# 
  3525  080D                     	;# 
  3526  080E                     	;# 
  3527  080F                     	;# 
  3528  0810                     	;# 
  3529  0811                     	;# 
  3530  0812                     	;# 
  3531  0813                     	;# 
  3532  0814                     	;# 
  3533  081A                     	;# 
  3534  081B                     	;# 
  3535  081C                     	;# 
  3536  081D                     	;# 
  3537  081E                     	;# 
  3538  081F                     	;# 
  3539  088C                     	;# 
  3540  088D                     	;# 
  3541  088E                     	;# 
  3542  088F                     	;# 
  3543  0890                     	;# 
  3544  0891                     	;# 
  3545  0892                     	;# 
  3546  0893                     	;# 
  3547  0895                     	;# 
  3548  0896                     	;# 
  3549  0897                     	;# 
  3550  0898                     	;# 
  3551  0899                     	;# 
  3552  089A                     	;# 
  3553  089B                     	;# 
  3554  090C                     	;# 
  3555  090E                     	;# 
  3556  090F                     	;# 
  3557  091F                     	;# 
  3558  091F                     	;# 
  3559  098F                     	;# 
  3560  098F                     	;# 
  3561  0990                     	;# 
  3562  0991                     	;# 
  3563  0992                     	;# 
  3564  0993                     	;# 
  3565  0994                     	;# 
  3566  0995                     	;# 
  3567  0996                     	;# 
  3568  0997                     	;# 
  3569  0E0F                     	;# 
  3570  0E10                     	;# 
  3571  0E11                     	;# 
  3572  0E12                     	;# 
  3573  0E13                     	;# 
  3574  0E14                     	;# 
  3575  0E15                     	;# 
  3576  0E16                     	;# 
  3577  0E17                     	;# 
  3578  0E18                     	;# 
  3579  0E19                     	;# 
  3580  0E1A                     	;# 
  3581  0E1B                     	;# 
  3582  0E1C                     	;# 
  3583  0E1D                     	;# 
  3584  0E1E                     	;# 
  3585  0E1F                     	;# 
  3586  0E20                     	;# 
  3587  0E21                     	;# 
  3588  0E22                     	;# 
  3589  0E23                     	;# 
  3590  0E24                     	;# 
  3591  0E25                     	;# 
  3592  0E26                     	;# 
  3593  0E27                     	;# 
  3594  0E28                     	;# 
  3595  0E29                     	;# 
  3596  0E2A                     	;# 
  3597  0E2B                     	;# 
  3598  0E2C                     	;# 
  3599  0E2D                     	;# 
  3600  0E2E                     	;# 
  3601  0E2F                     	;# 
  3602  0E30                     	;# 
  3603  0E31                     	;# 
  3604  0E32                     	;# 
  3605  0E33                     	;# 
  3606  0E34                     	;# 
  3607  0E35                     	;# 
  3608  0E36                     	;# 
  3609  0E37                     	;# 
  3610  0E8F                     	;# 
  3611  0E90                     	;# 
  3612  0E91                     	;# 
  3613  0E92                     	;# 
  3614  0E93                     	;# 
  3615  0E94                     	;# 
  3616  0E95                     	;# 
  3617  0E96                     	;# 
  3618  0E97                     	;# 
  3619  0E9C                     	;# 
  3620  0E9D                     	;# 
  3621  0E9E                     	;# 
  3622  0EA1                     	;# 
  3623  0EA2                     	;# 
  3624  0EA3                     	;# 
  3625  0EA4                     	;# 
  3626  0EA5                     	;# 
  3627  0EA9                     	;# 
  3628  0EAA                     	;# 
  3629  0EAB                     	;# 
  3630  0EAC                     	;# 
  3631  0EB1                     	;# 
  3632  0EB2                     	;# 
  3633  0EB3                     	;# 
  3634  0EB8                     	;# 
  3635  0EB9                     	;# 
  3636  0EBA                     	;# 
  3637  0EBB                     	;# 
  3638  0EBC                     	;# 
  3639  0EBD                     	;# 
  3640  0EBE                     	;# 
  3641  0EC3                     	;# 
  3642  0EC5                     	;# 
  3643  0EC6                     	;# 
  3644  0EC7                     	;# 
  3645  0EC8                     	;# 
  3646  0EC9                     	;# 
  3647  0ECA                     	;# 
  3648  0ECB                     	;# 
  3649  0ECC                     	;# 
  3650  0F10                     	;# 
  3651  0F11                     	;# 
  3652  0F12                     	;# 
  3653  0F13                     	;# 
  3654  0F14                     	;# 
  3655  0F15                     	;# 
  3656  0F16                     	;# 
  3657  0F17                     	;# 
  3658  0F18                     	;# 
  3659  0F19                     	;# 
  3660  0F1A                     	;# 
  3661  0F1B                     	;# 
  3662  0F1C                     	;# 
  3663  0F1D                     	;# 
  3664  0F1E                     	;# 
  3665  0F1F                     	;# 
  3666  0F20                     	;# 
  3667  0F21                     	;# 
  3668  0F22                     	;# 
  3669  0F23                     	;# 
  3670  0F24                     	;# 
  3671  0F25                     	;# 
  3672  0F26                     	;# 
  3673  0F27                     	;# 
  3674  0F38                     	;# 
  3675  0F39                     	;# 
  3676  0F3A                     	;# 
  3677  0F3B                     	;# 
  3678  0F3C                     	;# 
  3679  0F3D                     	;# 
  3680  0F3E                     	;# 
  3681  0F3F                     	;# 
  3682  0F40                     	;# 
  3683  0F41                     	;# 
  3684  0F43                     	;# 
  3685  0F44                     	;# 
  3686  0F45                     	;# 
  3687  0F46                     	;# 
  3688  0F47                     	;# 
  3689  0F48                     	;# 
  3690  0F49                     	;# 
  3691  0F4A                     	;# 
  3692  0F4B                     	;# 
  3693  0F4C                     	;# 
  3694  0F4E                     	;# 
  3695  0F4F                     	;# 
  3696  0F50                     	;# 
  3697  0F51                     	;# 
  3698  0F52                     	;# 
  3699  0F53                     	;# 
  3700  0F54                     	;# 
  3701  0F55                     	;# 
  3702  0F56                     	;# 
  3703  0F57                     	;# 
  3704  0F65                     	;# 
  3705  0F68                     	;# 
  3706  0F69                     	;# 
  3707  0F6A                     	;# 
  3708  0F6B                     	;# 
  3709  0FE4                     	;# 
  3710  0FE5                     	;# 
  3711  0FE6                     	;# 
  3712  0FE7                     	;# 
  3713  0FE8                     	;# 
  3714  0FE9                     	;# 
  3715  0FEA                     	;# 
  3716  0FEB                     	;# 
  3717  0FED                     	;# 
  3718  0FEE                     	;# 
  3719  0FEF                     	;# 
  3720  0000                     	;# 
  3721  0001                     	;# 
  3722  0002                     	;# 
  3723  0003                     	;# 
  3724  0004                     	;# 
  3725  0005                     	;# 
  3726  0006                     	;# 
  3727  0007                     	;# 
  3728  0008                     	;# 
  3729  0009                     	;# 
  3730  000A                     	;# 
  3731  000B                     	;# 
  3732  000C                     	;# 
  3733  000D                     	;# 
  3734  000E                     	;# 
  3735  0010                     	;# 
  3736  0011                     	;# 
  3737  0012                     	;# 
  3738  0013                     	;# 
  3739  0016                     	;# 
  3740  0017                     	;# 
  3741  0018                     	;# 
  3742  001C                     	;# 
  3743  001C                     	;# 
  3744  001D                     	;# 
  3745  001D                     	;# 
  3746  001E                     	;# 
  3747  001F                     	;# 
  3748  008C                     	;# 
  3749  008C                     	;# 
  3750  008D                     	;# 
  3751  008E                     	;# 
  3752  008E                     	;# 
  3753  008F                     	;# 
  3754  0090                     	;# 
  3755  0090                     	;# 
  3756  0091                     	;# 
  3757  0093                     	;# 
  3758  0094                     	;# 
  3759  0095                     	;# 
  3760  0096                     	;# 
  3761  0097                     	;# 
  3762  0098                     	;# 
  3763  0099                     	;# 
  3764  009A                     	;# 
  3765  009B                     	;# 
  3766  009C                     	;# 
  3767  009D                     	;# 
  3768  009E                     	;# 
  3769  010C                     	;# 
  3770  010D                     	;# 
  3771  010E                     	;# 
  3772  010E                     	;# 
  3773  010F                     	;# 
  3774  0110                     	;# 
  3775  0110                     	;# 
  3776  0111                     	;# 
  3777  0112                     	;# 
  3778  0112                     	;# 
  3779  0113                     	;# 
  3780  0114                     	;# 
  3781  0114                     	;# 
  3782  0115                     	;# 
  3783  0116                     	;# 
  3784  0116                     	;# 
  3785  0117                     	;# 
  3786  0119                     	;# 
  3787  0119                     	;# 
  3788  0119                     	;# 
  3789  011A                     	;# 
  3790  011A                     	;# 
  3791  011A                     	;# 
  3792  011B                     	;# 
  3793  011B                     	;# 
  3794  011B                     	;# 
  3795  011B                     	;# 
  3796  011B                     	;# 
  3797  011C                     	;# 
  3798  011C                     	;# 
  3799  011C                     	;# 
  3800  011D                     	;# 
  3801  011D                     	;# 
  3802  011D                     	;# 
  3803  011E                     	;# 
  3804  011E                     	;# 
  3805  011E                     	;# 
  3806  011F                     	;# 
  3807  011F                     	;# 
  3808  011F                     	;# 
  3809  011F                     	;# 
  3810  011F                     	;# 
  3811  018C                     	;# 
  3812  018D                     	;# 
  3813  018E                     	;# 
  3814  018F                     	;# 
  3815  0190                     	;# 
  3816  0191                     	;# 
  3817  0192                     	;# 
  3818  0196                     	;# 
  3819  0197                     	;# 
  3820  0198                     	;# 
  3821  0199                     	;# 
  3822  019A                     	;# 
  3823  019B                     	;# 
  3824  019C                     	;# 
  3825  020C                     	;# 
  3826  020C                     	;# 
  3827  020D                     	;# 
  3828  020E                     	;# 
  3829  020F                     	;# 
  3830  020F                     	;# 
  3831  0210                     	;# 
  3832  0210                     	;# 
  3833  0211                     	;# 
  3834  0211                     	;# 
  3835  0212                     	;# 
  3836  0212                     	;# 
  3837  0213                     	;# 
  3838  0214                     	;# 
  3839  0215                     	;# 
  3840  0215                     	;# 
  3841  0216                     	;# 
  3842  0216                     	;# 
  3843  0217                     	;# 
  3844  0217                     	;# 
  3845  0218                     	;# 
  3846  0218                     	;# 
  3847  0219                     	;# 
  3848  021A                     	;# 
  3849  021B                     	;# 
  3850  021B                     	;# 
  3851  021C                     	;# 
  3852  021C                     	;# 
  3853  021D                     	;# 
  3854  021D                     	;# 
  3855  021E                     	;# 
  3856  021F                     	;# 
  3857  028C                     	;# 
  3858  028C                     	;# 
  3859  028D                     	;# 
  3860  028D                     	;# 
  3861  028E                     	;# 
  3862  028F                     	;# 
  3863  0290                     	;# 
  3864  0290                     	;# 
  3865  0291                     	;# 
  3866  0292                     	;# 
  3867  0292                     	;# 
  3868  0293                     	;# 
  3869  0293                     	;# 
  3870  0294                     	;# 
  3871  0295                     	;# 
  3872  0296                     	;# 
  3873  0296                     	;# 
  3874  0297                     	;# 
  3875  0298                     	;# 
  3876  0298                     	;# 
  3877  0299                     	;# 
  3878  0299                     	;# 
  3879  029A                     	;# 
  3880  029B                     	;# 
  3881  029C                     	;# 
  3882  029C                     	;# 
  3883  029D                     	;# 
  3884  030C                     	;# 
  3885  030C                     	;# 
  3886  030D                     	;# 
  3887  030E                     	;# 
  3888  030F                     	;# 
  3889  0310                     	;# 
  3890  0310                     	;# 
  3891  0311                     	;# 
  3892  0312                     	;# 
  3893  0313                     	;# 
  3894  0314                     	;# 
  3895  0314                     	;# 
  3896  0315                     	;# 
  3897  0316                     	;# 
  3898  0317                     	;# 
  3899  0318                     	;# 
  3900  0318                     	;# 
  3901  0319                     	;# 
  3902  031A                     	;# 
  3903  031B                     	;# 
  3904  031C                     	;# 
  3905  031C                     	;# 
  3906  031D                     	;# 
  3907  031E                     	;# 
  3908  031F                     	;# 
  3909  038C                     	;# 
  3910  038D                     	;# 
  3911  038E                     	;# 
  3912  0390                     	;# 
  3913  0391                     	;# 
  3914  0392                     	;# 
  3915  040C                     	;# 
  3916  040D                     	;# 
  3917  040E                     	;# 
  3918  040F                     	;# 
  3919  0410                     	;# 
  3920  0411                     	;# 
  3921  0416                     	;# 
  3922  0416                     	;# 
  3923  0417                     	;# 
  3924  0418                     	;# 
  3925  0418                     	;# 
  3926  0419                     	;# 
  3927  041A                     	;# 
  3928  041A                     	;# 
  3929  041B                     	;# 
  3930  041C                     	;# 
  3931  041C                     	;# 
  3932  041D                     	;# 
  3933  041E                     	;# 
  3934  041F                     	;# 
  3935  048C                     	;# 
  3936  048C                     	;# 
  3937  048D                     	;# 
  3938  048E                     	;# 
  3939  048F                     	;# 
  3940  048F                     	;# 
  3941  0490                     	;# 
  3942  0491                     	;# 
  3943  0492                     	;# 
  3944  0492                     	;# 
  3945  0493                     	;# 
  3946  0494                     	;# 
  3947  0495                     	;# 
  3948  0495                     	;# 
  3949  0496                     	;# 
  3950  0497                     	;# 
  3951  0498                     	;# 
  3952  0499                     	;# 
  3953  049A                     	;# 
  3954  049B                     	;# 
  3955  049C                     	;# 
  3956  049D                     	;# 
  3957  050C                     	;# 
  3958  050C                     	;# 
  3959  050D                     	;# 
  3960  050E                     	;# 
  3961  050F                     	;# 
  3962  050F                     	;# 
  3963  0510                     	;# 
  3964  0511                     	;# 
  3965  0512                     	;# 
  3966  0512                     	;# 
  3967  0513                     	;# 
  3968  0514                     	;# 
  3969  0515                     	;# 
  3970  0515                     	;# 
  3971  0516                     	;# 
  3972  0517                     	;# 
  3973  0518                     	;# 
  3974  0519                     	;# 
  3975  051A                     	;# 
  3976  051B                     	;# 
  3977  051C                     	;# 
  3978  051D                     	;# 
  3979  058C                     	;# 
  3980  058C                     	;# 
  3981  058D                     	;# 
  3982  058E                     	;# 
  3983  058F                     	;# 
  3984  058F                     	;# 
  3985  0590                     	;# 
  3986  0591                     	;# 
  3987  0592                     	;# 
  3988  0593                     	;# 
  3989  060C                     	;# 
  3990  060D                     	;# 
  3991  060E                     	;# 
  3992  060F                     	;# 
  3993  0610                     	;# 
  3994  0611                     	;# 
  3995  0612                     	;# 
  3996  0613                     	;# 
  3997  0614                     	;# 
  3998  0616                     	;# 
  3999  0617                     	;# 
  4000  0618                     	;# 
  4001  0619                     	;# 
  4002  061A                     	;# 
  4003  061B                     	;# 
  4004  061C                     	;# 
  4005  061D                     	;# 
  4006  061E                     	;# 
  4007  068C                     	;# 
  4008  068D                     	;# 
  4009  068E                     	;# 
  4010  068F                     	;# 
  4011  0690                     	;# 
  4012  0691                     	;# 
  4013  0692                     	;# 
  4014  0693                     	;# 
  4015  0694                     	;# 
  4016  070C                     	;# 
  4017  070D                     	;# 
  4018  070E                     	;# 
  4019  070F                     	;# 
  4020  0710                     	;# 
  4021  0711                     	;# 
  4022  0712                     	;# 
  4023  0713                     	;# 
  4024  0714                     	;# 
  4025  0716                     	;# 
  4026  0717                     	;# 
  4027  0718                     	;# 
  4028  0719                     	;# 
  4029  071A                     	;# 
  4030  071B                     	;# 
  4031  071C                     	;# 
  4032  071D                     	;# 
  4033  071E                     	;# 
  4034  0796                     	;# 
  4035  0797                     	;# 
  4036  0798                     	;# 
  4037  0799                     	;# 
  4038  079A                     	;# 
  4039  079B                     	;# 
  4040  080C                     	;# 
  4041  080D                     	;# 
  4042  080E                     	;# 
  4043  080F                     	;# 
  4044  0810                     	;# 
  4045  0811                     	;# 
  4046  0812                     	;# 
  4047  0813                     	;# 
  4048  0814                     	;# 
  4049  081A                     	;# 
  4050  081B                     	;# 
  4051  081C                     	;# 
  4052  081D                     	;# 
  4053  081E                     	;# 
  4054  081F                     	;# 
  4055  088C                     	;# 
  4056  088D                     	;# 
  4057  088E                     	;# 
  4058  088F                     	;# 
  4059  0890                     	;# 
  4060  0891                     	;# 
  4061  0892                     	;# 
  4062  0893                     	;# 
  4063  0895                     	;# 
  4064  0896                     	;# 
  4065  0897                     	;# 
  4066  0898                     	;# 
  4067  0899                     	;# 
  4068  089A                     	;# 
  4069  089B                     	;# 
  4070  090C                     	;# 
  4071  090E                     	;# 
  4072  090F                     	;# 
  4073  091F                     	;# 
  4074  091F                     	;# 
  4075  098F                     	;# 
  4076  098F                     	;# 
  4077  0990                     	;# 
  4078  0991                     	;# 
  4079  0992                     	;# 
  4080  0993                     	;# 
  4081  0994                     	;# 
  4082  0995                     	;# 
  4083  0996                     	;# 
  4084  0997                     	;# 
  4085  0E0F                     	;# 
  4086  0E10                     	;# 
  4087  0E11                     	;# 
  4088  0E12                     	;# 
  4089  0E13                     	;# 
  4090  0E14                     	;# 
  4091  0E15                     	;# 
  4092  0E16                     	;# 
  4093  0E17                     	;# 
  4094  0E18                     	;# 
  4095  0E19                     	;# 
  4096  0E1A                     	;# 
  4097  0E1B                     	;# 
  4098  0E1C                     	;# 
  4099  0E1D                     	;# 
  4100  0E1E                     	;# 
  4101  0E1F                     	;# 
  4102  0E20                     	;# 
  4103  0E21                     	;# 
  4104  0E22                     	;# 
  4105  0E23                     	;# 
  4106  0E24                     	;# 
  4107  0E25                     	;# 
  4108  0E26                     	;# 
  4109  0E27                     	;# 
  4110  0E28                     	;# 
  4111  0E29                     	;# 
  4112  0E2A                     	;# 
  4113  0E2B                     	;# 
  4114  0E2C                     	;# 
  4115  0E2D                     	;# 
  4116  0E2E                     	;# 
  4117  0E2F                     	;# 
  4118  0E30                     	;# 
  4119  0E31                     	;# 
  4120  0E32                     	;# 
  4121  0E33                     	;# 
  4122  0E34                     	;# 
  4123  0E35                     	;# 
  4124  0E36                     	;# 
  4125  0E37                     	;# 
  4126  0E8F                     	;# 
  4127  0E90                     	;# 
  4128  0E91                     	;# 
  4129  0E92                     	;# 
  4130  0E93                     	;# 
  4131  0E94                     	;# 
  4132  0E95                     	;# 
  4133  0E96                     	;# 
  4134  0E97                     	;# 
  4135  0E9C                     	;# 
  4136  0E9D                     	;# 
  4137  0E9E                     	;# 
  4138  0EA1                     	;# 
  4139  0EA2                     	;# 
  4140  0EA3                     	;# 
  4141  0EA4                     	;# 
  4142  0EA5                     	;# 
  4143  0EA9                     	;# 
  4144  0EAA                     	;# 
  4145  0EAB                     	;# 
  4146  0EAC                     	;# 
  4147  0EB1                     	;# 
  4148  0EB2                     	;# 
  4149  0EB3                     	;# 
  4150  0EB8                     	;# 
  4151  0EB9                     	;# 
  4152  0EBA                     	;# 
  4153  0EBB                     	;# 
  4154  0EBC                     	;# 
  4155  0EBD                     	;# 
  4156  0EBE                     	;# 
  4157  0EC3                     	;# 
  4158  0EC5                     	;# 
  4159  0EC6                     	;# 
  4160  0EC7                     	;# 
  4161  0EC8                     	;# 
  4162  0EC9                     	;# 
  4163  0ECA                     	;# 
  4164  0ECB                     	;# 
  4165  0ECC                     	;# 
  4166  0F10                     	;# 
  4167  0F11                     	;# 
  4168  0F12                     	;# 
  4169  0F13                     	;# 
  4170  0F14                     	;# 
  4171  0F15                     	;# 
  4172  0F16                     	;# 
  4173  0F17                     	;# 
  4174  0F18                     	;# 
  4175  0F19                     	;# 
  4176  0F1A                     	;# 
  4177  0F1B                     	;# 
  4178  0F1C                     	;# 
  4179  0F1D                     	;# 
  4180  0F1E                     	;# 
  4181  0F1F                     	;# 
  4182  0F20                     	;# 
  4183  0F21                     	;# 
  4184  0F22                     	;# 
  4185  0F23                     	;# 
  4186  0F24                     	;# 
  4187  0F25                     	;# 
  4188  0F26                     	;# 
  4189  0F27                     	;# 
  4190  0F38                     	;# 
  4191  0F39                     	;# 
  4192  0F3A                     	;# 
  4193  0F3B                     	;# 
  4194  0F3C                     	;# 
  4195  0F3D                     	;# 
  4196  0F3E                     	;# 
  4197  0F3F                     	;# 
  4198  0F40                     	;# 
  4199  0F41                     	;# 
  4200  0F43                     	;# 
  4201  0F44                     	;# 
  4202  0F45                     	;# 
  4203  0F46                     	;# 
  4204  0F47                     	;# 
  4205  0F48                     	;# 
  4206  0F49                     	;# 
  4207  0F4A                     	;# 
  4208  0F4B                     	;# 
  4209  0F4C                     	;# 
  4210  0F4E                     	;# 
  4211  0F4F                     	;# 
  4212  0F50                     	;# 
  4213  0F51                     	;# 
  4214  0F52                     	;# 
  4215  0F53                     	;# 
  4216  0F54                     	;# 
  4217  0F55                     	;# 
  4218  0F56                     	;# 
  4219  0F57                     	;# 
  4220  0F65                     	;# 
  4221  0F68                     	;# 
  4222  0F69                     	;# 
  4223  0F6A                     	;# 
  4224  0F6B                     	;# 
  4225  0FE4                     	;# 
  4226  0FE5                     	;# 
  4227  0FE6                     	;# 
  4228  0FE7                     	;# 
  4229  0FE8                     	;# 
  4230  0FE9                     	;# 
  4231  0FEA                     	;# 
  4232  0FEB                     	;# 
  4233  0FED                     	;# 
  4234  0FEE                     	;# 
  4235  0FEF                     	;# 
  4236  0000                     	;# 
  4237  0001                     	;# 
  4238  0002                     	;# 
  4239  0003                     	;# 
  4240  0004                     	;# 
  4241  0005                     	;# 
  4242  0006                     	;# 
  4243  0007                     	;# 
  4244  0008                     	;# 
  4245  0009                     	;# 
  4246  000A                     	;# 
  4247  000B                     	;# 
  4248  000C                     	;# 
  4249  000D                     	;# 
  4250  000E                     	;# 
  4251  0010                     	;# 
  4252  0011                     	;# 
  4253  0012                     	;# 
  4254  0013                     	;# 
  4255  0016                     	;# 
  4256  0017                     	;# 
  4257  0018                     	;# 
  4258  001C                     	;# 
  4259  001C                     	;# 
  4260  001D                     	;# 
  4261  001D                     	;# 
  4262  001E                     	;# 
  4263  001F                     	;# 
  4264  008C                     	;# 
  4265  008C                     	;# 
  4266  008D                     	;# 
  4267  008E                     	;# 
  4268  008E                     	;# 
  4269  008F                     	;# 
  4270  0090                     	;# 
  4271  0090                     	;# 
  4272  0091                     	;# 
  4273  0093                     	;# 
  4274  0094                     	;# 
  4275  0095                     	;# 
  4276  0096                     	;# 
  4277  0097                     	;# 
  4278  0098                     	;# 
  4279  0099                     	;# 
  4280  009A                     	;# 
  4281  009B                     	;# 
  4282  009C                     	;# 
  4283  009D                     	;# 
  4284  009E                     	;# 
  4285  010C                     	;# 
  4286  010D                     	;# 
  4287  010E                     	;# 
  4288  010E                     	;# 
  4289  010F                     	;# 
  4290  0110                     	;# 
  4291  0110                     	;# 
  4292  0111                     	;# 
  4293  0112                     	;# 
  4294  0112                     	;# 
  4295  0113                     	;# 
  4296  0114                     	;# 
  4297  0114                     	;# 
  4298  0115                     	;# 
  4299  0116                     	;# 
  4300  0116                     	;# 
  4301  0117                     	;# 
  4302  0119                     	;# 
  4303  0119                     	;# 
  4304  0119                     	;# 
  4305  011A                     	;# 
  4306  011A                     	;# 
  4307  011A                     	;# 
  4308  011B                     	;# 
  4309  011B                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011C                     	;# 
  4314  011C                     	;# 
  4315  011C                     	;# 
  4316  011D                     	;# 
  4317  011D                     	;# 
  4318  011D                     	;# 
  4319  011E                     	;# 
  4320  011E                     	;# 
  4321  011E                     	;# 
  4322  011F                     	;# 
  4323  011F                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  018C                     	;# 
  4328  018D                     	;# 
  4329  018E                     	;# 
  4330  018F                     	;# 
  4331  0190                     	;# 
  4332  0191                     	;# 
  4333  0192                     	;# 
  4334  0196                     	;# 
  4335  0197                     	;# 
  4336  0198                     	;# 
  4337  0199                     	;# 
  4338  019A                     	;# 
  4339  019B                     	;# 
  4340  019C                     	;# 
  4341  020C                     	;# 
  4342  020C                     	;# 
  4343  020D                     	;# 
  4344  020E                     	;# 
  4345  020F                     	;# 
  4346  020F                     	;# 
  4347  0210                     	;# 
  4348  0210                     	;# 
  4349  0211                     	;# 
  4350  0211                     	;# 
  4351  0212                     	;# 
  4352  0212                     	;# 
  4353  0213                     	;# 
  4354  0214                     	;# 
  4355  0215                     	;# 
  4356  0215                     	;# 
  4357  0216                     	;# 
  4358  0216                     	;# 
  4359  0217                     	;# 
  4360  0217                     	;# 
  4361  0218                     	;# 
  4362  0218                     	;# 
  4363  0219                     	;# 
  4364  021A                     	;# 
  4365  021B                     	;# 
  4366  021B                     	;# 
  4367  021C                     	;# 
  4368  021C                     	;# 
  4369  021D                     	;# 
  4370  021D                     	;# 
  4371  021E                     	;# 
  4372  021F                     	;# 
  4373  028C                     	;# 
  4374  028C                     	;# 
  4375  028D                     	;# 
  4376  028D                     	;# 
  4377  028E                     	;# 
  4378  028F                     	;# 
  4379  0290                     	;# 
  4380  0290                     	;# 
  4381  0291                     	;# 
  4382  0292                     	;# 
  4383  0292                     	;# 
  4384  0293                     	;# 
  4385  0293                     	;# 
  4386  0294                     	;# 
  4387  0295                     	;# 
  4388  0296                     	;# 
  4389  0296                     	;# 
  4390  0297                     	;# 
  4391  0298                     	;# 
  4392  0298                     	;# 
  4393  0299                     	;# 
  4394  0299                     	;# 
  4395  029A                     	;# 
  4396  029B                     	;# 
  4397  029C                     	;# 
  4398  029C                     	;# 
  4399  029D                     	;# 
  4400  030C                     	;# 
  4401  030C                     	;# 
  4402  030D                     	;# 
  4403  030E                     	;# 
  4404  030F                     	;# 
  4405  0310                     	;# 
  4406  0310                     	;# 
  4407  0311                     	;# 
  4408  0312                     	;# 
  4409  0313                     	;# 
  4410  0314                     	;# 
  4411  0314                     	;# 
  4412  0315                     	;# 
  4413  0316                     	;# 
  4414  0317                     	;# 
  4415  0318                     	;# 
  4416  0318                     	;# 
  4417  0319                     	;# 
  4418  031A                     	;# 
  4419  031B                     	;# 
  4420  031C                     	;# 
  4421  031C                     	;# 
  4422  031D                     	;# 
  4423  031E                     	;# 
  4424  031F                     	;# 
  4425  038C                     	;# 
  4426  038D                     	;# 
  4427  038E                     	;# 
  4428  0390                     	;# 
  4429  0391                     	;# 
  4430  0392                     	;# 
  4431  040C                     	;# 
  4432  040D                     	;# 
  4433  040E                     	;# 
  4434  040F                     	;# 
  4435  0410                     	;# 
  4436  0411                     	;# 
  4437  0416                     	;# 
  4438  0416                     	;# 
  4439  0417                     	;# 
  4440  0418                     	;# 
  4441  0418                     	;# 
  4442  0419                     	;# 
  4443  041A                     	;# 
  4444  041A                     	;# 
  4445  041B                     	;# 
  4446  041C                     	;# 
  4447  041C                     	;# 
  4448  041D                     	;# 
  4449  041E                     	;# 
  4450  041F                     	;# 
  4451  048C                     	;# 
  4452  048C                     	;# 
  4453  048D                     	;# 
  4454  048E                     	;# 
  4455  048F                     	;# 
  4456  048F                     	;# 
  4457  0490                     	;# 
  4458  0491                     	;# 
  4459  0492                     	;# 
  4460  0492                     	;# 
  4461  0493                     	;# 
  4462  0494                     	;# 
  4463  0495                     	;# 
  4464  0495                     	;# 
  4465  0496                     	;# 
  4466  0497                     	;# 
  4467  0498                     	;# 
  4468  0499                     	;# 
  4469  049A                     	;# 
  4470  049B                     	;# 
  4471  049C                     	;# 
  4472  049D                     	;# 
  4473  050C                     	;# 
  4474  050C                     	;# 
  4475  050D                     	;# 
  4476  050E                     	;# 
  4477  050F                     	;# 
  4478  050F                     	;# 
  4479  0510                     	;# 
  4480  0511                     	;# 
  4481  0512                     	;# 
  4482  0512                     	;# 
  4483  0513                     	;# 
  4484  0514                     	;# 
  4485  0515                     	;# 
  4486  0515                     	;# 
  4487  0516                     	;# 
  4488  0517                     	;# 
  4489  0518                     	;# 
  4490  0519                     	;# 
  4491  051A                     	;# 
  4492  051B                     	;# 
  4493  051C                     	;# 
  4494  051D                     	;# 
  4495  058C                     	;# 
  4496  058C                     	;# 
  4497  058D                     	;# 
  4498  058E                     	;# 
  4499  058F                     	;# 
  4500  058F                     	;# 
  4501  0590                     	;# 
  4502  0591                     	;# 
  4503  0592                     	;# 
  4504  0593                     	;# 
  4505  060C                     	;# 
  4506  060D                     	;# 
  4507  060E                     	;# 
  4508  060F                     	;# 
  4509  0610                     	;# 
  4510  0611                     	;# 
  4511  0612                     	;# 
  4512  0613                     	;# 
  4513  0614                     	;# 
  4514  0616                     	;# 
  4515  0617                     	;# 
  4516  0618                     	;# 
  4517  0619                     	;# 
  4518  061A                     	;# 
  4519  061B                     	;# 
  4520  061C                     	;# 
  4521  061D                     	;# 
  4522  061E                     	;# 
  4523  068C                     	;# 
  4524  068D                     	;# 
  4525  068E                     	;# 
  4526  068F                     	;# 
  4527  0690                     	;# 
  4528  0691                     	;# 
  4529  0692                     	;# 
  4530  0693                     	;# 
  4531  0694                     	;# 
  4532  070C                     	;# 
  4533  070D                     	;# 
  4534  070E                     	;# 
  4535  070F                     	;# 
  4536  0710                     	;# 
  4537  0711                     	;# 
  4538  0712                     	;# 
  4539  0713                     	;# 
  4540  0714                     	;# 
  4541  0716                     	;# 
  4542  0717                     	;# 
  4543  0718                     	;# 
  4544  0719                     	;# 
  4545  071A                     	;# 
  4546  071B                     	;# 
  4547  071C                     	;# 
  4548  071D                     	;# 
  4549  071E                     	;# 
  4550  0796                     	;# 
  4551  0797                     	;# 
  4552  0798                     	;# 
  4553  0799                     	;# 
  4554  079A                     	;# 
  4555  079B                     	;# 
  4556  080C                     	;# 
  4557  080D                     	;# 
  4558  080E                     	;# 
  4559  080F                     	;# 
  4560  0810                     	;# 
  4561  0811                     	;# 
  4562  0812                     	;# 
  4563  0813                     	;# 
  4564  0814                     	;# 
  4565  081A                     	;# 
  4566  081B                     	;# 
  4567  081C                     	;# 
  4568  081D                     	;# 
  4569  081E                     	;# 
  4570  081F                     	;# 
  4571  088C                     	;# 
  4572  088D                     	;# 
  4573  088E                     	;# 
  4574  088F                     	;# 
  4575  0890                     	;# 
  4576  0891                     	;# 
  4577  0892                     	;# 
  4578  0893                     	;# 
  4579  0895                     	;# 
  4580  0896                     	;# 
  4581  0897                     	;# 
  4582  0898                     	;# 
  4583  0899                     	;# 
  4584  089A                     	;# 
  4585  089B                     	;# 
  4586  090C                     	;# 
  4587  090E                     	;# 
  4588  090F                     	;# 
  4589  091F                     	;# 
  4590  091F                     	;# 
  4591  098F                     	;# 
  4592  098F                     	;# 
  4593  0990                     	;# 
  4594  0991                     	;# 
  4595  0992                     	;# 
  4596  0993                     	;# 
  4597  0994                     	;# 
  4598  0995                     	;# 
  4599  0996                     	;# 
  4600  0997                     	;# 
  4601  0E0F                     	;# 
  4602  0E10                     	;# 
  4603  0E11                     	;# 
  4604  0E12                     	;# 
  4605  0E13                     	;# 
  4606  0E14                     	;# 
  4607  0E15                     	;# 
  4608  0E16                     	;# 
  4609  0E17                     	;# 
  4610  0E18                     	;# 
  4611  0E19                     	;# 
  4612  0E1A                     	;# 
  4613  0E1B                     	;# 
  4614  0E1C                     	;# 
  4615  0E1D                     	;# 
  4616  0E1E                     	;# 
  4617  0E1F                     	;# 
  4618  0E20                     	;# 
  4619  0E21                     	;# 
  4620  0E22                     	;# 
  4621  0E23                     	;# 
  4622  0E24                     	;# 
  4623  0E25                     	;# 
  4624  0E26                     	;# 
  4625  0E27                     	;# 
  4626  0E28                     	;# 
  4627  0E29                     	;# 
  4628  0E2A                     	;# 
  4629  0E2B                     	;# 
  4630  0E2C                     	;# 
  4631  0E2D                     	;# 
  4632  0E2E                     	;# 
  4633  0E2F                     	;# 
  4634  0E30                     	;# 
  4635  0E31                     	;# 
  4636  0E32                     	;# 
  4637  0E33                     	;# 
  4638  0E34                     	;# 
  4639  0E35                     	;# 
  4640  0E36                     	;# 
  4641  0E37                     	;# 
  4642  0E8F                     	;# 
  4643  0E90                     	;# 
  4644  0E91                     	;# 
  4645  0E92                     	;# 
  4646  0E93                     	;# 
  4647  0E94                     	;# 
  4648  0E95                     	;# 
  4649  0E96                     	;# 
  4650  0E97                     	;# 
  4651  0E9C                     	;# 
  4652  0E9D                     	;# 
  4653  0E9E                     	;# 
  4654  0EA1                     	;# 
  4655  0EA2                     	;# 
  4656  0EA3                     	;# 
  4657  0EA4                     	;# 
  4658  0EA5                     	;# 
  4659  0EA9                     	;# 
  4660  0EAA                     	;# 
  4661  0EAB                     	;# 
  4662  0EAC                     	;# 
  4663  0EB1                     	;# 
  4664  0EB2                     	;# 
  4665  0EB3                     	;# 
  4666  0EB8                     	;# 
  4667  0EB9                     	;# 
  4668  0EBA                     	;# 
  4669  0EBB                     	;# 
  4670  0EBC                     	;# 
  4671  0EBD                     	;# 
  4672  0EBE                     	;# 
  4673  0EC3                     	;# 
  4674  0EC5                     	;# 
  4675  0EC6                     	;# 
  4676  0EC7                     	;# 
  4677  0EC8                     	;# 
  4678  0EC9                     	;# 
  4679  0ECA                     	;# 
  4680  0ECB                     	;# 
  4681  0ECC                     	;# 
  4682  0F10                     	;# 
  4683  0F11                     	;# 
  4684  0F12                     	;# 
  4685  0F13                     	;# 
  4686  0F14                     	;# 
  4687  0F15                     	;# 
  4688  0F16                     	;# 
  4689  0F17                     	;# 
  4690  0F18                     	;# 
  4691  0F19                     	;# 
  4692  0F1A                     	;# 
  4693  0F1B                     	;# 
  4694  0F1C                     	;# 
  4695  0F1D                     	;# 
  4696  0F1E                     	;# 
  4697  0F1F                     	;# 
  4698  0F20                     	;# 
  4699  0F21                     	;# 
  4700  0F22                     	;# 
  4701  0F23                     	;# 
  4702  0F24                     	;# 
  4703  0F25                     	;# 
  4704  0F26                     	;# 
  4705  0F27                     	;# 
  4706  0F38                     	;# 
  4707  0F39                     	;# 
  4708  0F3A                     	;# 
  4709  0F3B                     	;# 
  4710  0F3C                     	;# 
  4711  0F3D                     	;# 
  4712  0F3E                     	;# 
  4713  0F3F                     	;# 
  4714  0F40                     	;# 
  4715  0F41                     	;# 
  4716  0F43                     	;# 
  4717  0F44                     	;# 
  4718  0F45                     	;# 
  4719  0F46                     	;# 
  4720  0F47                     	;# 
  4721  0F48                     	;# 
  4722  0F49                     	;# 
  4723  0F4A                     	;# 
  4724  0F4B                     	;# 
  4725  0F4C                     	;# 
  4726  0F4E                     	;# 
  4727  0F4F                     	;# 
  4728  0F50                     	;# 
  4729  0F51                     	;# 
  4730  0F52                     	;# 
  4731  0F53                     	;# 
  4732  0F54                     	;# 
  4733  0F55                     	;# 
  4734  0F56                     	;# 
  4735  0F57                     	;# 
  4736  0F65                     	;# 
  4737  0F68                     	;# 
  4738  0F69                     	;# 
  4739  0F6A                     	;# 
  4740  0F6B                     	;# 
  4741  0FE4                     	;# 
  4742  0FE5                     	;# 
  4743  0FE6                     	;# 
  4744  0FE7                     	;# 
  4745  0FE8                     	;# 
  4746  0FE9                     	;# 
  4747  0FEA                     	;# 
  4748  0FEB                     	;# 
  4749  0FED                     	;# 
  4750  0FEE                     	;# 
  4751  0FEF                     	;# 
  4752  0000                     	;# 
  4753  0001                     	;# 
  4754  0002                     	;# 
  4755  0003                     	;# 
  4756  0004                     	;# 
  4757  0005                     	;# 
  4758  0006                     	;# 
  4759  0007                     	;# 
  4760  0008                     	;# 
  4761  0009                     	;# 
  4762  000A                     	;# 
  4763  000B                     	;# 
  4764  000C                     	;# 
  4765  000D                     	;# 
  4766  000E                     	;# 
  4767  0010                     	;# 
  4768  0011                     	;# 
  4769  0012                     	;# 
  4770  0013                     	;# 
  4771  0016                     	;# 
  4772  0017                     	;# 
  4773  0018                     	;# 
  4774  001C                     	;# 
  4775  001C                     	;# 
  4776  001D                     	;# 
  4777  001D                     	;# 
  4778  001E                     	;# 
  4779  001F                     	;# 
  4780  008C                     	;# 
  4781  008C                     	;# 
  4782  008D                     	;# 
  4783  008E                     	;# 
  4784  008E                     	;# 
  4785  008F                     	;# 
  4786  0090                     	;# 
  4787  0090                     	;# 
  4788  0091                     	;# 
  4789  0093                     	;# 
  4790  0094                     	;# 
  4791  0095                     	;# 
  4792  0096                     	;# 
  4793  0097                     	;# 
  4794  0098                     	;# 
  4795  0099                     	;# 
  4796  009A                     	;# 
  4797  009B                     	;# 
  4798  009C                     	;# 
  4799  009D                     	;# 
  4800  009E                     	;# 
  4801  010C                     	;# 
  4802  010D                     	;# 
  4803  010E                     	;# 
  4804  010E                     	;# 
  4805  010F                     	;# 
  4806  0110                     	;# 
  4807  0110                     	;# 
  4808  0111                     	;# 
  4809  0112                     	;# 
  4810  0112                     	;# 
  4811  0113                     	;# 
  4812  0114                     	;# 
  4813  0114                     	;# 
  4814  0115                     	;# 
  4815  0116                     	;# 
  4816  0116                     	;# 
  4817  0117                     	;# 
  4818  0119                     	;# 
  4819  0119                     	;# 
  4820  0119                     	;# 
  4821  011A                     	;# 
  4822  011A                     	;# 
  4823  011A                     	;# 
  4824  011B                     	;# 
  4825  011B                     	;# 
  4826  011B                     	;# 
  4827  011B                     	;# 
  4828  011B                     	;# 
  4829  011C                     	;# 
  4830  011C                     	;# 
  4831  011C                     	;# 
  4832  011D                     	;# 
  4833  011D                     	;# 
  4834  011D                     	;# 
  4835  011E                     	;# 
  4836  011E                     	;# 
  4837  011E                     	;# 
  4838  011F                     	;# 
  4839  011F                     	;# 
  4840  011F                     	;# 
  4841  011F                     	;# 
  4842  011F                     	;# 
  4843  018C                     	;# 
  4844  018D                     	;# 
  4845  018E                     	;# 
  4846  018F                     	;# 
  4847  0190                     	;# 
  4848  0191                     	;# 
  4849  0192                     	;# 
  4850  0196                     	;# 
  4851  0197                     	;# 
  4852  0198                     	;# 
  4853  0199                     	;# 
  4854  019A                     	;# 
  4855  019B                     	;# 
  4856  019C                     	;# 
  4857  020C                     	;# 
  4858  020C                     	;# 
  4859  020D                     	;# 
  4860  020E                     	;# 
  4861  020F                     	;# 
  4862  020F                     	;# 
  4863  0210                     	;# 
  4864  0210                     	;# 
  4865  0211                     	;# 
  4866  0211                     	;# 
  4867  0212                     	;# 
  4868  0212                     	;# 
  4869  0213                     	;# 
  4870  0214                     	;# 
  4871  0215                     	;# 
  4872  0215                     	;# 
  4873  0216                     	;# 
  4874  0216                     	;# 
  4875  0217                     	;# 
  4876  0217                     	;# 
  4877  0218                     	;# 
  4878  0218                     	;# 
  4879  0219                     	;# 
  4880  021A                     	;# 
  4881  021B                     	;# 
  4882  021B                     	;# 
  4883  021C                     	;# 
  4884  021C                     	;# 
  4885  021D                     	;# 
  4886  021D                     	;# 
  4887  021E                     	;# 
  4888  021F                     	;# 
  4889  028C                     	;# 
  4890  028C                     	;# 
  4891  028D                     	;# 
  4892  028D                     	;# 
  4893  028E                     	;# 
  4894  028F                     	;# 
  4895  0290                     	;# 
  4896  0290                     	;# 
  4897  0291                     	;# 
  4898  0292                     	;# 
  4899  0292                     	;# 
  4900  0293                     	;# 
  4901  0293                     	;# 
  4902  0294                     	;# 
  4903  0295                     	;# 
  4904  0296                     	;# 
  4905  0296                     	;# 
  4906  0297                     	;# 
  4907  0298                     	;# 
  4908  0298                     	;# 
  4909  0299                     	;# 
  4910  0299                     	;# 
  4911  029A                     	;# 
  4912  029B                     	;# 
  4913  029C                     	;# 
  4914  029C                     	;# 
  4915  029D                     	;# 
  4916  030C                     	;# 
  4917  030C                     	;# 
  4918  030D                     	;# 
  4919  030E                     	;# 
  4920  030F                     	;# 
  4921  0310                     	;# 
  4922  0310                     	;# 
  4923  0311                     	;# 
  4924  0312                     	;# 
  4925  0313                     	;# 
  4926  0314                     	;# 
  4927  0314                     	;# 
  4928  0315                     	;# 
  4929  0316                     	;# 
  4930  0317                     	;# 
  4931  0318                     	;# 
  4932  0318                     	;# 
  4933  0319                     	;# 
  4934  031A                     	;# 
  4935  031B                     	;# 
  4936  031C                     	;# 
  4937  031C                     	;# 
  4938  031D                     	;# 
  4939  031E                     	;# 
  4940  031F                     	;# 
  4941  038C                     	;# 
  4942  038D                     	;# 
  4943  038E                     	;# 
  4944  0390                     	;# 
  4945  0391                     	;# 
  4946  0392                     	;# 
  4947  040C                     	;# 
  4948  040D                     	;# 
  4949  040E                     	;# 
  4950  040F                     	;# 
  4951  0410                     	;# 
  4952  0411                     	;# 
  4953  0416                     	;# 
  4954  0416                     	;# 
  4955  0417                     	;# 
  4956  0418                     	;# 
  4957  0418                     	;# 
  4958  0419                     	;# 
  4959  041A                     	;# 
  4960  041A                     	;# 
  4961  041B                     	;# 
  4962  041C                     	;# 
  4963  041C                     	;# 
  4964  041D                     	;# 
  4965  041E                     	;# 
  4966  041F                     	;# 
  4967  048C                     	;# 
  4968  048C                     	;# 
  4969  048D                     	;# 
  4970  048E                     	;# 
  4971  048F                     	;# 
  4972  048F                     	;# 
  4973  0490                     	;# 
  4974  0491                     	;# 
  4975  0492                     	;# 
  4976  0492                     	;# 
  4977  0493                     	;# 
  4978  0494                     	;# 
  4979  0495                     	;# 
  4980  0495                     	;# 
  4981  0496                     	;# 
  4982  0497                     	;# 
  4983  0498                     	;# 
  4984  0499                     	;# 
  4985  049A                     	;# 
  4986  049B                     	;# 
  4987  049C                     	;# 
  4988  049D                     	;# 
  4989  050C                     	;# 
  4990  050C                     	;# 
  4991  050D                     	;# 
  4992  050E                     	;# 
  4993  050F                     	;# 
  4994  050F                     	;# 
  4995  0510                     	;# 
  4996  0511                     	;# 
  4997  0512                     	;# 
  4998  0512                     	;# 
  4999  0513                     	;# 
  5000  0514                     	;# 
  5001  0515                     	;# 
  5002  0515                     	;# 
  5003  0516                     	;# 
  5004  0517                     	;# 
  5005  0518                     	;# 
  5006  0519                     	;# 
  5007  051A                     	;# 
  5008  051B                     	;# 
  5009  051C                     	;# 
  5010  051D                     	;# 
  5011  058C                     	;# 
  5012  058C                     	;# 
  5013  058D                     	;# 
  5014  058E                     	;# 
  5015  058F                     	;# 
  5016  058F                     	;# 
  5017  0590                     	;# 
  5018  0591                     	;# 
  5019  0592                     	;# 
  5020  0593                     	;# 
  5021  060C                     	;# 
  5022  060D                     	;# 
  5023  060E                     	;# 
  5024  060F                     	;# 
  5025  0610                     	;# 
  5026  0611                     	;# 
  5027  0612                     	;# 
  5028  0613                     	;# 
  5029  0614                     	;# 
  5030  0616                     	;# 
  5031  0617                     	;# 
  5032  0618                     	;# 
  5033  0619                     	;# 
  5034  061A                     	;# 
  5035  061B                     	;# 
  5036  061C                     	;# 
  5037  061D                     	;# 
  5038  061E                     	;# 
  5039  068C                     	;# 
  5040  068D                     	;# 
  5041  068E                     	;# 
  5042  068F                     	;# 
  5043  0690                     	;# 
  5044  0691                     	;# 
  5045  0692                     	;# 
  5046  0693                     	;# 
  5047  0694                     	;# 
  5048  070C                     	;# 
  5049  070D                     	;# 
  5050  070E                     	;# 
  5051  070F                     	;# 
  5052  0710                     	;# 
  5053  0711                     	;# 
  5054  0712                     	;# 
  5055  0713                     	;# 
  5056  0714                     	;# 
  5057  0716                     	;# 
  5058  0717                     	;# 
  5059  0718                     	;# 
  5060  0719                     	;# 
  5061  071A                     	;# 
  5062  071B                     	;# 
  5063  071C                     	;# 
  5064  071D                     	;# 
  5065  071E                     	;# 
  5066  0796                     	;# 
  5067  0797                     	;# 
  5068  0798                     	;# 
  5069  0799                     	;# 
  5070  079A                     	;# 
  5071  079B                     	;# 
  5072  080C                     	;# 
  5073  080D                     	;# 
  5074  080E                     	;# 
  5075  080F                     	;# 
  5076  0810                     	;# 
  5077  0811                     	;# 
  5078  0812                     	;# 
  5079  0813                     	;# 
  5080  0814                     	;# 
  5081  081A                     	;# 
  5082  081B                     	;# 
  5083  081C                     	;# 
  5084  081D                     	;# 
  5085  081E                     	;# 
  5086  081F                     	;# 
  5087  088C                     	;# 
  5088  088D                     	;# 
  5089  088E                     	;# 
  5090  088F                     	;# 
  5091  0890                     	;# 
  5092  0891                     	;# 
  5093  0892                     	;# 
  5094  0893                     	;# 
  5095  0895                     	;# 
  5096  0896                     	;# 
  5097  0897                     	;# 
  5098  0898                     	;# 
  5099  0899                     	;# 
  5100  089A                     	;# 
  5101  089B                     	;# 
  5102  090C                     	;# 
  5103  090E                     	;# 
  5104  090F                     	;# 
  5105  091F                     	;# 
  5106  091F                     	;# 
  5107  098F                     	;# 
  5108  098F                     	;# 
  5109  0990                     	;# 
  5110  0991                     	;# 
  5111  0992                     	;# 
  5112  0993                     	;# 
  5113  0994                     	;# 
  5114  0995                     	;# 
  5115  0996                     	;# 
  5116  0997                     	;# 
  5117  0E0F                     	;# 
  5118  0E10                     	;# 
  5119  0E11                     	;# 
  5120  0E12                     	;# 
  5121  0E13                     	;# 
  5122  0E14                     	;# 
  5123  0E15                     	;# 
  5124  0E16                     	;# 
  5125  0E17                     	;# 
  5126  0E18                     	;# 
  5127  0E19                     	;# 
  5128  0E1A                     	;# 
  5129  0E1B                     	;# 
  5130  0E1C                     	;# 
  5131  0E1D                     	;# 
  5132  0E1E                     	;# 
  5133  0E1F                     	;# 
  5134  0E20                     	;# 
  5135  0E21                     	;# 
  5136  0E22                     	;# 
  5137  0E23                     	;# 
  5138  0E24                     	;# 
  5139  0E25                     	;# 
  5140  0E26                     	;# 
  5141  0E27                     	;# 
  5142  0E28                     	;# 
  5143  0E29                     	;# 
  5144  0E2A                     	;# 
  5145  0E2B                     	;# 
  5146  0E2C                     	;# 
  5147  0E2D                     	;# 
  5148  0E2E                     	;# 
  5149  0E2F                     	;# 
  5150  0E30                     	;# 
  5151  0E31                     	;# 
  5152  0E32                     	;# 
  5153  0E33                     	;# 
  5154  0E34                     	;# 
  5155  0E35                     	;# 
  5156  0E36                     	;# 
  5157  0E37                     	;# 
  5158  0E8F                     	;# 
  5159  0E90                     	;# 
  5160  0E91                     	;# 
  5161  0E92                     	;# 
  5162  0E93                     	;# 
  5163  0E94                     	;# 
  5164  0E95                     	;# 
  5165  0E96                     	;# 
  5166  0E97                     	;# 
  5167  0E9C                     	;# 
  5168  0E9D                     	;# 
  5169  0E9E                     	;# 
  5170  0EA1                     	;# 
  5171  0EA2                     	;# 
  5172  0EA3                     	;# 
  5173  0EA4                     	;# 
  5174  0EA5                     	;# 
  5175  0EA9                     	;# 
  5176  0EAA                     	;# 
  5177  0EAB                     	;# 
  5178  0EAC                     	;# 
  5179  0EB1                     	;# 
  5180  0EB2                     	;# 
  5181  0EB3                     	;# 
  5182  0EB8                     	;# 
  5183  0EB9                     	;# 
  5184  0EBA                     	;# 
  5185  0EBB                     	;# 
  5186  0EBC                     	;# 
  5187  0EBD                     	;# 
  5188  0EBE                     	;# 
  5189  0EC3                     	;# 
  5190  0EC5                     	;# 
  5191  0EC6                     	;# 
  5192  0EC7                     	;# 
  5193  0EC8                     	;# 
  5194  0EC9                     	;# 
  5195  0ECA                     	;# 
  5196  0ECB                     	;# 
  5197  0ECC                     	;# 
  5198  0F10                     	;# 
  5199  0F11                     	;# 
  5200  0F12                     	;# 
  5201  0F13                     	;# 
  5202  0F14                     	;# 
  5203  0F15                     	;# 
  5204  0F16                     	;# 
  5205  0F17                     	;# 
  5206  0F18                     	;# 
  5207  0F19                     	;# 
  5208  0F1A                     	;# 
  5209  0F1B                     	;# 
  5210  0F1C                     	;# 
  5211  0F1D                     	;# 
  5212  0F1E                     	;# 
  5213  0F1F                     	;# 
  5214  0F20                     	;# 
  5215  0F21                     	;# 
  5216  0F22                     	;# 
  5217  0F23                     	;# 
  5218  0F24                     	;# 
  5219  0F25                     	;# 
  5220  0F26                     	;# 
  5221  0F27                     	;# 
  5222  0F38                     	;# 
  5223  0F39                     	;# 
  5224  0F3A                     	;# 
  5225  0F3B                     	;# 
  5226  0F3C                     	;# 
  5227  0F3D                     	;# 
  5228  0F3E                     	;# 
  5229  0F3F                     	;# 
  5230  0F40                     	;# 
  5231  0F41                     	;# 
  5232  0F43                     	;# 
  5233  0F44                     	;# 
  5234  0F45                     	;# 
  5235  0F46                     	;# 
  5236  0F47                     	;# 
  5237  0F48                     	;# 
  5238  0F49                     	;# 
  5239  0F4A                     	;# 
  5240  0F4B                     	;# 
  5241  0F4C                     	;# 
  5242  0F4E                     	;# 
  5243  0F4F                     	;# 
  5244  0F50                     	;# 
  5245  0F51                     	;# 
  5246  0F52                     	;# 
  5247  0F53                     	;# 
  5248  0F54                     	;# 
  5249  0F55                     	;# 
  5250  0F56                     	;# 
  5251  0F57                     	;# 
  5252  0F65                     	;# 
  5253  0F68                     	;# 
  5254  0F69                     	;# 
  5255  0F6A                     	;# 
  5256  0F6B                     	;# 
  5257  0FE4                     	;# 
  5258  0FE5                     	;# 
  5259  0FE6                     	;# 
  5260  0FE7                     	;# 
  5261  0FE8                     	;# 
  5262  0FE9                     	;# 
  5263  0FEA                     	;# 
  5264  0FEB                     	;# 
  5265  0FED                     	;# 
  5266  0FEE                     	;# 
  5267  0FEF                     	;_samples
  5268                           
  5269                           	psect	idataBANK1
  5270  1424                     __pidataBANK1:	
  5271                           
  5272                           ;initializer for _Imode1
  5273  1424  3401               	retlw	1
  5274                           
  5275                           ;initializer for _Imode0
  5276  1425  3401               	retlw	1
  5277                           
  5278                           	psect	idataBANK2
  5279  145A                     __pidataBANK2:	
  5280                           
  5281                           ;initializer for _channels
  5282  145A  3417               	retlw	23
  5283  145B  3400               	retlw	0
  5284  145C  3415               	retlw	21
  5285  145D  3400               	retlw	0
  5286  145E  3413               	retlw	19
  5287  145F  3400               	retlw	0
  5288  1460  3411               	retlw	17
  5289  1461  3400               	retlw	0
  5290  1462  3416               	retlw	22
  5291  1463  3400               	retlw	0
  5292  1464  3414               	retlw	20
  5293  1465  3400               	retlw	0
  5294  1466  3412               	retlw	18
  5295  1467  3400               	retlw	0
  5296  1468  3410               	retlw	16
  5297  1469  3400               	retlw	0
  5298                           
  5299                           	psect	stringtext1
  5300  0800                     __pstringtext1:	
  5301  0800                     _fonts:	
  5302  0800  3400               	retlw	0
  5303  0801  3400               	retlw	0
  5304  0802  3400               	retlw	0
  5305  0803  3400               	retlw	0
  5306  0804  344E               	retlw	78
  5307  0805  3400               	retlw	0
  5308  0806  3406               	retlw	6
  5309  0807  3400               	retlw	0
  5310  0808  3406               	retlw	6
  5311  0809  34FF               	retlw	255
  5312  080A  34FF               	retlw	255
  5313  080B  34FF               	retlw	255
  5314  080C  3448               	retlw	72
  5315  080D  34D6               	retlw	214
  5316  080E  3424               	retlw	36
  5317  080F  3412               	retlw	18
  5318  0810  3408               	retlw	8
  5319  0811  3424               	retlw	36
  5320  0812  34FF               	retlw	255
  5321  0813  34FF               	retlw	255
  5322  0814  34FF               	retlw	255
  5323  0815  3400               	retlw	0
  5324  0816  3406               	retlw	6
  5325  0817  3400               	retlw	0
  5326  0818  3438               	retlw	56
  5327  0819  3444               	retlw	68
  5328  081A  3482               	retlw	130
  5329  081B  3482               	retlw	130
  5330  081C  3444               	retlw	68
  5331  081D  3438               	retlw	56
  5332  081E  3414               	retlw	20
  5333  081F  3408               	retlw	8
  5334  0820  343E               	retlw	62
  5335  0821  3410               	retlw	16
  5336  0822  3438               	retlw	56
  5337  0823  3410               	retlw	16
  5338  0824  34A0               	retlw	160
  5339  0825  3460               	retlw	96
  5340  0826  3400               	retlw	0
  5341  0827  3410               	retlw	16
  5342  0828  3410               	retlw	16
  5343  0829  3410               	retlw	16
  5344  082A  3460               	retlw	96
  5345  082B  3460               	retlw	96
  5346  082C  3400               	retlw	0
  5347  082D  3460               	retlw	96
  5348  082E  3418               	retlw	24
  5349  082F  3406               	retlw	6
  5350  0830  347C               	retlw	124
  5351  0831  3442               	retlw	66
  5352  0832  347C               	retlw	124
  5353  0833  3444               	retlw	68
  5354  0834  347E               	retlw	126
  5355  0835  3440               	retlw	64
  5356  0836  3464               	retlw	100
  5357  0837  3452               	retlw	82
  5358  0838  344C               	retlw	76
  5359  0839  344A               	retlw	74
  5360  083A  344A               	retlw	74
  5361  083B  3434               	retlw	52
  5362  083C  3438               	retlw	56
  5363  083D  3424               	retlw	36
  5364  083E  347E               	retlw	126
  5365  083F  344E               	retlw	78
  5366  0840  344A               	retlw	74
  5367  0841  3432               	retlw	50
  5368  0842  343C               	retlw	60
  5369  0843  344A               	retlw	74
  5370  0844  3432               	retlw	50
  5371  0845  3462               	retlw	98
  5372  0846  341A               	retlw	26
  5373  0847  3406               	retlw	6
  5374  0848  3476               	retlw	118
  5375  0849  344A               	retlw	74
  5376  084A  3476               	retlw	118
  5377  084B  344C               	retlw	76
  5378  084C  3452               	retlw	82
  5379  084D  343C               	retlw	60
  5380  084E  346C               	retlw	108
  5381  084F  346C               	retlw	108
  5382  0850  3400               	retlw	0
  5383  0851  34AC               	retlw	172
  5384  0852  346C               	retlw	108
  5385  0853  3400               	retlw	0
  5386  0854  3410               	retlw	16
  5387  0855  3428               	retlw	40
  5388  0856  3444               	retlw	68
  5389  0857  3428               	retlw	40
  5390  0858  3428               	retlw	40
  5391  0859  3428               	retlw	40
  5392  085A  3444               	retlw	68
  5393  085B  3428               	retlw	40
  5394  085C  3410               	retlw	16
  5395  085D  3402               	retlw	2
  5396  085E  3459               	retlw	89
  5397  085F  3406               	retlw	6
  5398  0860  34FF               	retlw	255
  5399  0861  34FF               	retlw	255
  5400  0862  34FF               	retlw	255
  5401  0863  347C               	retlw	124
  5402  0864  3412               	retlw	18
  5403  0865  347C               	retlw	124
  5404  0866  347E               	retlw	126
  5405  0867  345A               	retlw	90
  5406  0868  3434               	retlw	52
  5407  0869  343C               	retlw	60
  5408  086A  3442               	retlw	66
  5409  086B  3442               	retlw	66
  5410  086C  347E               	retlw	126
  5411  086D  3442               	retlw	66
  5412  086E  343C               	retlw	60
  5413  086F  347E               	retlw	126
  5414  0870  344A               	retlw	74
  5415  0871  3442               	retlw	66
  5416  0872  347E               	retlw	126
  5417  0873  340A               	retlw	10
  5418  0874  340A               	retlw	10
  5419  0875  343C               	retlw	60
  5420  0876  3452               	retlw	82
  5421  0877  3434               	retlw	52
  5422  0878  347E               	retlw	126
  5423  0879  3408               	retlw	8
  5424  087A  347E               	retlw	126
  5425  087B  3442               	retlw	66
  5426  087C  347E               	retlw	126
  5427  087D  3442               	retlw	66
  5428  087E  3430               	retlw	48
  5429  087F  3440               	retlw	64
  5430  0880  343E               	retlw	62
  5431  0881  347E               	retlw	126
  5432  0882  3418               	retlw	24
  5433  0883  3466               	retlw	102
  5434  0884  347E               	retlw	126
  5435  0885  3440               	retlw	64
  5436  0886  3440               	retlw	64
  5437  0887  347E               	retlw	126
  5438  0888  341C               	retlw	28
  5439  0889  347E               	retlw	126
  5440  088A  347E               	retlw	126
  5441  088B  3402               	retlw	2
  5442  088C  347E               	retlw	126
  5443  088D  343C               	retlw	60
  5444  088E  3442               	retlw	66
  5445  088F  343C               	retlw	60
  5446  0890  347E               	retlw	126
  5447  0891  3412               	retlw	18
  5448  0892  340C               	retlw	12
  5449  0893  347E               	retlw	126
  5450  0894  3462               	retlw	98
  5451  0895  34FE               	retlw	254
  5452  0896  347E               	retlw	126
  5453  0897  3432               	retlw	50
  5454  0898  344E               	retlw	78
  5455  0899  3444               	retlw	68
  5456  089A  344A               	retlw	74
  5457  089B  3432               	retlw	50
  5458  089C  3402               	retlw	2
  5459  089D  347E               	retlw	126
  5460  089E  3402               	retlw	2
  5461  089F  347E               	retlw	126
  5462  08A0  3440               	retlw	64
  5463  08A1  347E               	retlw	126
  5464  08A2  343E               	retlw	62
  5465  08A3  3440               	retlw	64
  5466  08A4  343E               	retlw	62
  5467  08A5  347E               	retlw	126
  5468  08A6  3438               	retlw	56
  5469  08A7  347E               	retlw	126
  5470  08A8  3466               	retlw	102
  5471  08A9  3418               	retlw	24
  5472  08AA  3466               	retlw	102
  5473  08AB  340E               	retlw	14
  5474  08AC  3470               	retlw	112
  5475  08AD  340E               	retlw	14
  5476  08AE  3462               	retlw	98
  5477  08AF  345A               	retlw	90
  5478  08B0  3446               	retlw	70
  5479  08B1  3400               	retlw	0
  5480  08B2  347E               	retlw	126
  5481  08B3  3442               	retlw	66
  5482  08B4  3406               	retlw	6
  5483  08B5  3418               	retlw	24
  5484  08B6  3460               	retlw	96
  5485  08B7  3442               	retlw	66
  5486  08B8  347E               	retlw	126
  5487  08B9  3400               	retlw	0
  5488  08BA  3404               	retlw	4
  5489  08BB  3402               	retlw	2
  5490  08BC  3404               	retlw	4
  5491  08BD  3440               	retlw	64
  5492  08BE  3440               	retlw	64
  5493  08BF  3440               	retlw	64
  5494  08C0  3400               	retlw	0
  5495  08C1  3402               	retlw	2
  5496  08C2  3404               	retlw	4
  5497  08C3  3474               	retlw	116
  5498  08C4  3454               	retlw	84
  5499  08C5  3478               	retlw	120
  5500  08C6  347E               	retlw	126
  5501  08C7  3448               	retlw	72
  5502  08C8  3430               	retlw	48
  5503  08C9  3430               	retlw	48
  5504  08CA  3448               	retlw	72
  5505  08CB  3448               	retlw	72
  5506  08CC  3430               	retlw	48
  5507  08CD  3448               	retlw	72
  5508  08CE  347E               	retlw	126
  5509  08CF  3438               	retlw	56
  5510  08D0  3454               	retlw	84
  5511  08D1  3458               	retlw	88
  5512  08D2  347C               	retlw	124
  5513  08D3  340A               	retlw	10
  5514  08D4  3402               	retlw	2
  5515  08D5  3498               	retlw	152
  5516  08D6  34A4               	retlw	164
  5517  08D7  347C               	retlw	124
  5518  08D8  347E               	retlw	126
  5519  08D9  3408               	retlw	8
  5520  08DA  3470               	retlw	112
  5521  08DB  3448               	retlw	72
  5522  08DC  347A               	retlw	122
  5523  08DD  3440               	retlw	64
  5524  08DE  3488               	retlw	136
  5525  08DF  34FA               	retlw	250
  5526  08E0  3400               	retlw	0
  5527  08E1  347E               	retlw	126
  5528  08E2  3418               	retlw	24
  5529  08E3  3464               	retlw	100
  5530  08E4  3442               	retlw	66
  5531  08E5  347E               	retlw	126
  5532  08E6  3440               	retlw	64
  5533  08E7  347C               	retlw	124
  5534  08E8  3438               	retlw	56
  5535  08E9  347C               	retlw	124
  5536  08EA  347C               	retlw	124
  5537  08EB  3404               	retlw	4
  5538  08EC  3478               	retlw	120
  5539  08ED  3438               	retlw	56
  5540  08EE  3444               	retlw	68
  5541  08EF  3438               	retlw	56
  5542  08F0  34FC               	retlw	252
  5543  08F1  3424               	retlw	36
  5544  08F2  3418               	retlw	24
  5545  08F3  3418               	retlw	24
  5546  08F4  3424               	retlw	36
  5547  08F5  34FC               	retlw	252
  5548  08F6  3478               	retlw	120
  5549  08F7  3404               	retlw	4
  5550  08F8  3404               	retlw	4
  5551  08F9  3448               	retlw	72
  5552  08FA  3454               	retlw	84
  5553  08FB  3424               	retlw	36
  5554  08FC  3404               	retlw	4
  5555  08FD  343E               	retlw	62
  5556  08FE  3444               	retlw	68
  5557  08FF  347C               	retlw	124
  5558  0900  3440               	retlw	64
  5559  0901  347C               	retlw	124
  5560  0902  343C               	retlw	60
  5561  0903  3440               	retlw	64
  5562  0904  343C               	retlw	60
  5563  0905  347C               	retlw	124
  5564  0906  3430               	retlw	48
  5565  0907  347C               	retlw	124
  5566  0908  346C               	retlw	108
  5567  0909  3410               	retlw	16
  5568  090A  346C               	retlw	108
  5569  090B  349C               	retlw	156
  5570  090C  34A0               	retlw	160
  5571  090D  347C               	retlw	124
  5572  090E  3464               	retlw	100
  5573  090F  3454               	retlw	84
  5574  0910  344C               	retlw	76
  5575  0911  340C               	retlw	12
  5576  0912  3412               	retlw	18
  5577  0913  340C               	retlw	12
  5578  0914  34FF               	retlw	255
  5579  0915  34FF               	retlw	255
  5580  0916  34FF               	retlw	255
  5581  0917  34FF               	retlw	255
  5582  0918  34FF               	retlw	255
  5583  0919  34FF               	retlw	255
  5584  091A  34FF               	retlw	255
  5585  091B  34FF               	retlw	255
  5586  091C  34FF               	retlw	255
  5587  091D  34FF               	retlw	255
  5588  091E  34FF               	retlw	255
  5589  091F  34FF               	retlw	255
  5590  0920  34FF               	retlw	255
  5591  0921  34FF               	retlw	255
  5592  0922  34FF               	retlw	255
  5593  0923  34FF               	retlw	255
  5594  0924  34FF               	retlw	255
  5595  0925  34FF               	retlw	255
  5596  0926  34FC               	retlw	252
  5597  0927  3440               	retlw	64
  5598  0928  347C               	retlw	124
  5599  0929  34FF               	retlw	255
  5600  092A  34FF               	retlw	255
  5601  092B  34FF               	retlw	255
  5602  092C  34FF               	retlw	255
  5603  092D  34FF               	retlw	255
  5604  092E  34FF               	retlw	255
  5605  092F                     __end_of_fonts:	
  5606                           
  5607                           	psect	stringtext2
  5608  1800                     __pstringtext2:	
  5609  1800                     log@coeff:	
  5610  1800  3400               	retlw	0
  5611  1801  3400               	retlw	0
  5612  1802  3400               	retlw	0
  5613  1803  3400               	retlw	0
  5614  1804  3480               	retlw	128
  5615  1805  343F               	retlw	63
  5616  1806  34F0               	retlw	240
  5617  1807  34FF               	retlw	255
  5618  1808  34BE               	retlw	190
  5619  1809  34E2               	retlw	226
  5620  180A  34A9               	retlw	169
  5621  180B  343E               	retlw	62
  5622  180C  3483               	retlw	131
  5623  180D  3476               	retlw	118
  5624  180E  34BE               	retlw	190
  5625  180F  34AE               	retlw	174
  5626  1810  342B               	retlw	43
  5627  1811  343E               	retlw	62
  5628  1812  343C               	retlw	60
  5629  1813  34C3               	retlw	195
  5630  1814  34BD               	retlw	189
  5631  1815  34D2               	retlw	210
  5632  1816  3413               	retlw	19
  5633  1817  343D               	retlw	61
  5634  1818  3478               	retlw	120
  5635  1819  34D3               	retlw	211
  5636  181A  34BB               	retlw	187
  5637  181B                     __end_oflog@coeff:	
  5638                           
  5639                           	psect	nvBANK1
  5640  00E1                     __pnvBANK1:	
  5641  00E1                     _Vref:	
  5642  00E1                     	ds	2
  5643  00E3                     _Iref:	
  5644  00E3                     	ds	2
  5645  00E5                     _Imin:	
  5646  00E5                     	ds	2
  5647  00E7                     _state_counter:	
  5648  00E7                     	ds	2
  5649  00E9                     _IminCount:	
  5650  00E9                     	ds	2
  5651  00EB                     _battery_state:	
  5652  00EB                     	ds	1
  5653  0013                     _TRISC	set	19
  5654  0012                     _TRISB	set	18
  5655  0011                     _TRISA	set	17
  5656  0018                     _LATC	set	24
  5657  0017                     _LATB	set	23
  5658  0016                     _LATA	set	22
  5659  0016                     _LATAbits	set	22
  5660  0011                     _TRISAbits	set	17
  5661  006A                     _RB2	set	106
  5662  005F                     _GIE	set	95
  5663  0093                     _ADCON0	set	147
  5664  009D                     _ADACQ	set	157
  5665  009C                     _ADPRE	set	156
  5666  009B                     _ADCAP	set	155
  5667  009A                     _ADREF	set	154
  5668  0098                     _ADCLK	set	152
  5669  0097                     _ADSTAT	set	151
  5670  0099                     _ADACT	set	153
  5671  0096                     _ADCON3	set	150
  5672  0095                     _ADCON2	set	149
  5673  0094                     _ADCON1	set	148
  5674  008C                     _ADRESL	set	140
  5675  008D                     _ADRESH	set	141
  5676  0093                     _ADCON0bits	set	147
  5677  009E                     _ADPCH	set	158
  5678  0113                     _ADSTPTH	set	275
  5679  0112                     _ADSTPTL	set	274
  5680  0111                     _ADUTHH	set	273
  5681  0110                     _ADUTHL	set	272
  5682  010F                     _ADLTHH	set	271
  5683  010E                     _ADLTHL	set	270
  5684  010D                     _ADRPT	set	269
  5685  021E                     _CCPTMRS0bits	set	542
  5686  021F                     _CCPTMRS1bits	set	543
  5687  0294                     _T4CONbits	set	660
  5688  0292                     _T4TMR	set	658
  5689  0293                     _T4PR	set	659
  5690  0297                     _T4RST	set	663
  5691  0295                     _T4HLT	set	661
  5692  0296                     _T4CLKCON	set	662
  5693  0294                     _T4CON	set	660
  5694  028E                     _T2CONbits	set	654
  5695  028C                     _T2TMR	set	652
  5696  028D                     _T2PR	set	653
  5697  0291                     _T2RST	set	657
  5698  028F                     _T2HLT	set	655
  5699  0290                     _T2CLKCON	set	656
  5700  028E                     _T2CON	set	654
  5701  030C                     _CCPR1L	set	780
  5702  030D                     _CCPR1H	set	781
  5703  030E                     _CCP1CONbits	set	782
  5704  0390                     _PWM7DCL	set	912
  5705  0391                     _PWM7DCH	set	913
  5706  0392                     _PWM7CON	set	914
  5707  038C                     _PWM6DCL	set	908
  5708  038D                     _PWM6DCH	set	909
  5709  038E                     _PWM6CON	set	910
  5710  0710                     _PIR4bits	set	1808
  5711  0716                     _PIE0bits	set	1814
  5712  0892                     _OSCTUNE	set	2194
  5713  0893                     _OSCFRQ	set	2195
  5714  0891                     _OSCEN	set	2193
  5715  088F                     _OSCCON3	set	2191
  5716  088D                     _OSCCON1	set	2189
  5717  090C                     _FVRCON	set	2316
  5718  0E8F                     _PPSLOCKbits	set	3727
  5719  0E8F                     _PPSLOCK	set	3727
  5720  0F18                     _RB0PPS	set	3864
  5721  0F17                     _RA7PPS	set	3863
  5722  0F16                     _RA6PPS	set	3862
  5723  0F4E                     _ANSELC	set	3918
  5724  0F43                     _ANSELB	set	3907
  5725  0F38                     _ANSELA	set	3896
  5726  0F65                     _WPUE	set	3941
  5727  0F4F                     _WPUC	set	3919
  5728  0F44                     _WPUB	set	3908
  5729  0F39                     _WPUA	set	3897
  5730                           
  5731                           ; #config settings
  5732  0000                     
  5733                           	psect	cinit
  5734  07C0                     start_initialization:	
  5735  07C0                     __initialization:		;BIGRAM
  5736                           
  5737                           ; Initialize objects allocated to BANK1
  5738  07C0  0021               	movlb	1	; select bank1
  5739  07C1  3194  2424  3187   	fcall	__pidataBANK1	;fetch initializer
  5740  07C4  00EC               	movwf	__pdataBANK1& (0+127)
  5741  07C5  3194  2425  3187   	fcall	__pidataBANK1+1	;fetch initializer
  5742  07C8  00ED               	movwf	(__pdataBANK1+1)& (0+127)
  5743                           
  5744                           ; Initialize objects allocated to BANK2
  5745  07C9  305A               	movlw	low __pidataBANK2
  5746  07CA  0084               	movwf	4
  5747  07CB  3094               	movlw	(high __pidataBANK2)| (0+128)
  5748  07CC  0085               	movwf	5
  5749  07CD  3050               	movlw	low __pdataBANK2
  5750  07CE  0086               	movwf	6
  5751  07CF  3001               	movlw	high __pdataBANK2
  5752  07D0  0087               	movwf	7
  5753  07D1  3000               	movlw	0
  5754  07D2  00FF               	movwf	btemp+1
  5755  07D3  3010               	movlw	16
  5756  07D4  3194  2432  3187   	fcall	init_ram
  5757                           
  5758                           ; Clear objects allocated to BIGRAM
  5759  07D7  3020               	movlw	low (0+8480)
  5760  07D8  0084               	movwf	4
  5761  07D9  3021               	movlw	high (0+8480)
  5762  07DA  0085               	movwf	5
  5763  07DB  30D0               	movlw	208
  5764  07DC  00FE               	movwf	btemp
  5765  07DD  3002               	movlw	2
  5766  07DE  00FF               	movwf	btemp+1
  5767  07DF  3194  2426  3187   	fcall	clear_ram0
  5768                           
  5769                           ; Clear objects allocated to BANK0
  5770  07E2  0020               	movlb	0	; select bank0
  5771  07E3  01EA               	clrf	__pbssBANK0& (0+127)
  5772  07E4  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  5773  07E5  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  5774  07E6  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  5775  07E7  01EE               	clrf	(__pbssBANK0+4)& (0+127)
  5776                           
  5777                           ; Clear objects allocated to BANK1
  5778  07E8  30C1               	movlw	low __pbssBANK1
  5779  07E9  0084               	movwf	4
  5780  07EA  3000               	movlw	high __pbssBANK1
  5781  07EB  0085               	movwf	5
  5782  07EC  3020               	movlw	32
  5783  07ED  00FE               	movwf	btemp
  5784  07EE  3000               	movlw	0
  5785  07EF  00FF               	movwf	btemp+1
  5786  07F0  3194  2426  3187   	fcall	clear_ram0
  5787                           
  5788                           ; Clear objects allocated to BANK2
  5789  07F3  3020               	movlw	low __pbssBANK2
  5790  07F4  0084               	movwf	4
  5791  07F5  3001               	movlw	high __pbssBANK2
  5792  07F6  0085               	movwf	5
  5793  07F7  3030               	movlw	48
  5794  07F8  00FE               	movwf	btemp
  5795  07F9  3000               	movlw	0
  5796  07FA  00FF               	movwf	btemp+1
  5797  07FB  3194  2426         	fcall	clear_ram0
  5798  07FD                     end_of_initialization:	
  5799                           ;End of C runtime variable initialization code
  5800                           
  5801  07FD                     __end_of__initialization:	
  5802  07FD  0020               	movlb	0
  5803  07FE  3182  2AA5         	ljmp	_main	;jump to C main() function
  5804                           
  5805                           	psect	bssBANK0
  5806  006A                     __pbssBANK0:	
  5807  006A                     _readButtons:	
  5808  006A                     	ds	2
  5809  006C                     _j:	
  5810  006C                     	ds	1
  5811  006D                     _lastButton:	
  5812  006D                     	ds	1
  5813  006E                     _button:	
  5814  006E                     	ds	1
  5815                           
  5816                           	psect	bssBANK1
  5817  00C1                     __pbssBANK1:	
  5818  00C1                     _current:	
  5819  00C1                     	ds	8
  5820  00C9                     _voltage:	
  5821  00C9                     	ds	8
  5822  00D1                     LCDWriteInt@F14396:	
  5823  00D1                     	ds	5
  5824  00D6                     _errno:	
  5825  00D6                     	ds	2
  5826  00D8                     _Iout:	
  5827  00D8                     	ds	2
  5828  00DA                     _warmup:	
  5829  00DA                     	ds	2
  5830  00DC                     _Iflat_db:	
  5831  00DC                     	ds	2
  5832  00DE                     _sampleIndex:	
  5833  00DE                     	ds	2
  5834  00E0                     _cc_cv:	
  5835  00E0                     	ds	1
  5836                           
  5837                           	psect	dataBANK1
  5838  00EC                     __pdataBANK1:	
  5839  00EC                     _Imode1:	
  5840  00EC                     	ds	1
  5841  00ED                     _Imode0:	
  5842  00ED                     	ds	1
  5843                           
  5844                           	psect	bssBANK2
  5845  0120                     __pbssBANK2:	
  5846  0120                     _totals:	
  5847  0120                     	ds	32
  5848  0140                     _analogs:	
  5849  0140                     	ds	16
  5850                           
  5851                           	psect	dataBANK2
  5852  0150                     __pdataBANK2:	
  5853  0150                     _channels:	
  5854  0150                     	ds	16
  5855                           
  5856                           	psect	inittext
  5857  1432                     init_ram:	
  5858  1432  00FE               	movwf	126
  5859  1433                     initloop:	
  5860  1433  0012               	moviw fsr0++
  5861  1434  001E               	movwi fsr1++
  5862  1435  3001               	movlw	1
  5863  1436  02FE               	subwf	126,f
  5864  1437  3000               	movlw	0
  5865  1438  3BFF               	subwfb	127,f
  5866  1439  087F               	movf	127,w
  5867  143A  047E               	iorwf	126,w
  5868  143B  1903               	btfsc	3,2
  5869  143C  3400               	retlw	0
  5870  143D  2C33               	goto	initloop
  5871                           
  5872                           	psect	clrtext
  5873  1426                     clear_ram0:	
  5874                           ;	Called with FSR0 containing the base address, and
  5875                           ;	btemp/btemp+1 has the size to clear
  5876                           
  5877  1426  0064               	clrwdt	;clear the watchdog before getting into this loop
  5878  1427                     clrloop0:	
  5879  1427  0180               	clrf	0	;clear RAM location pointed to by FSR
  5880  1428  3101               	addfsr 0,1
  5881  1429  3001               	movlw	1
  5882  142A  02FE               	subwf	126,f
  5883  142B  3000               	movlw	0
  5884  142C  3BFF               	subwfb	127,f
  5885  142D  087F               	movf	127,w
  5886  142E  047E               	iorwf	126,w
  5887  142F  1903               	btfsc	3,2
  5888  1430  3400               	retlw	0	;all done for this memory range, return
  5889  1431  2C27               	goto	clrloop0	;have we reached the end yet?
  5890                           
  5891                           	psect	cstackBANK1
  5892  00A0                     __pcstackBANK1:	
  5893  00A0                     _main$1292:	
  5894                           
  5895                           ; 3 bytes @ 0x0
  5896  00A0                     	ds	3
  5897  00A3                     main@MPPT1:	
  5898                           
  5899                           ; 2 bytes @ 0x3
  5900  00A3                     	ds	2
  5901  00A5                     main@batteryTemp:	
  5902                           
  5903                           ; 2 bytes @ 0x5
  5904  00A5                     	ds	2
  5905  00A7                     main@fastLoop:	
  5906                           
  5907                           ; 1 bytes @ 0x7
  5908  00A7                     	ds	1
  5909  00A8                     main@slowLoop:	
  5910                           
  5911                           ; 1 bytes @ 0x8
  5912  00A8                     	ds	1
  5913  00A9                     main@displayRefresh:	
  5914                           
  5915                           ; 1 bytes @ 0x9
  5916  00A9                     	ds	1
  5917  00AA                     main@faultReset:	
  5918                           
  5919                           ; 1 bytes @ 0xA
  5920  00AA                     	ds	1
  5921  00AB                     _main$1291:	
  5922                           
  5923                           ; 3 bytes @ 0xB
  5924  00AB                     	ds	3
  5925  00AE                     main@IOutTotal:	
  5926                           
  5927                           ; 2 bytes @ 0xE
  5928  00AE                     	ds	2
  5929  00B0                     _main$1293:	
  5930                           
  5931                           ; 2 bytes @ 0x10
  5932  00B0                     	ds	2
  5933  00B2                     _main$1294:	
  5934                           
  5935                           ; 2 bytes @ 0x12
  5936  00B2                     	ds	2
  5937  00B4                     main@efficiency:	
  5938                           
  5939                           ; 3 bytes @ 0x14
  5940  00B4                     	ds	3
  5941  00B7                     main@dutyCycle1:	
  5942                           
  5943                           ; 2 bytes @ 0x17
  5944  00B7                     	ds	2
  5945  00B9                     main@menuButton:	
  5946                           
  5947                           ; 1 bytes @ 0x19
  5948  00B9                     	ds	1
  5949  00BA                     main@dutyCycle7:	
  5950                           
  5951                           ; 2 bytes @ 0x1A
  5952  00BA                     	ds	2
  5953  00BC                     main@MPPT0:	
  5954                           
  5955                           ; 2 bytes @ 0x1C
  5956  00BC                     	ds	2
  5957  00BE                     main@j:	
  5958                           
  5959                           ; 1 bytes @ 0x1E
  5960  00BE                     	ds	1
  5961  00BF                     main@dutyCycle6:	
  5962                           
  5963                           ; 2 bytes @ 0x1F
  5964  00BF                     	ds	2
  5965                           
  5966                           	psect	cstackCOMMON
  5967  0070                     __pcstackCOMMON:	
  5968  0070                     ?___ftge:	
  5969  0070                     ?_LCDWrite:	
  5970                           ; 1 bit 
  5971                           
  5972  0070                     ?_OSCILLATOR_Initialize:	
  5973                           ; 1 bytes @ 0x0
  5974                           
  5975  0070                     ??_OSCILLATOR_Initialize:	
  5976                           ; 1 bytes @ 0x0
  5977                           
  5978  0070                     ?_TMR2_Initialize:	
  5979                           ; 1 bytes @ 0x0
  5980                           
  5981  0070                     ??_TMR2_Initialize:	
  5982                           ; 1 bytes @ 0x0
  5983                           
  5984  0070                     ?_TMR4_Initialize:	
  5985                           ; 1 bytes @ 0x0
  5986                           
  5987  0070                     ??_TMR4_Initialize:	
  5988                           ; 1 bytes @ 0x0
  5989                           
  5990  0070                     ?_calculateCurrent0:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ?_calculateCurrent1:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ?_ADC_Initialize:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ??_ADC_Initialize:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ?_Init_Battery_State_Machine:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ??_Init_Battery_State_Machine:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ?_Battery_State_Machine:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ??_Battery_State_Machine:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ?_cc_cv_mode:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ??_cc_cv_mode:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_LCDWriteCharacter:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     ?_LCDClear:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     ?_LCDInit:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     ?_PIN_MANAGER_Initialize:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032  0070                     ??_PIN_MANAGER_Initialize:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0070                     ?_PWM_Initialize:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0070                     ??_PWM_Initialize:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0070                     ?_PWM6_LoadDutyValue:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0070                     ?_PWM7_LoadDutyValue:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0070                     ?_PWM1_LoadDutyValue:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0070                     ?_SYSTEM_Initialize:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0070                     ?_readButton:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0070                     ?_main:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0070                     ?_ADCRead:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0070                     ?___awdiv:	
  6063                           ; 2 bytes @ 0x0
  6064                           
  6065  0070                     ?___lwmod:	
  6066                           ; 2 bytes @ 0x0
  6067                           
  6068  0070                     ?___ftpack:	
  6069                           ; 2 bytes @ 0x0
  6070                           
  6071  0070                     ?_frexp:	
  6072                           ; 3 bytes @ 0x0
  6073                           
  6074  0070                     ?___aldiv:	
  6075                           ; 3 bytes @ 0x0
  6076                           
  6077  0070                     LCDWrite@data:	
  6078                           ; 4 bytes @ 0x0
  6079                           
  6080  0070                     PIN_MANAGER_Initialize@state:	
  6081                           ; 1 bytes @ 0x0
  6082                           
  6083  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6084                           ; 1 bytes @ 0x0
  6085                           
  6086  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6087                           ; 2 bytes @ 0x0
  6088                           
  6089  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6090                           ; 2 bytes @ 0x0
  6091                           
  6092  0070                     ___awdiv@divisor:	
  6093                           ; 2 bytes @ 0x0
  6094                           
  6095  0070                     ___lwmod@divisor:	
  6096                           ; 2 bytes @ 0x0
  6097                           
  6098  0070                     ___ftpack@arg:	
  6099                           ; 2 bytes @ 0x0
  6100                           
  6101  0070                     ___ftge@ff1:	
  6102                           ; 3 bytes @ 0x0
  6103                           
  6104  0070                     frexp@value:	
  6105                           ; 3 bytes @ 0x0
  6106                           
  6107  0070                     ___aldiv@divisor:	
  6108                           ; 3 bytes @ 0x0
  6109                           
  6110                           
  6111                           ; 4 bytes @ 0x0
  6112  0070                     	ds	1
  6113  0071                     ??_LCDWrite:	
  6114                           
  6115                           ; 1 bytes @ 0x1
  6116  0071                     	ds	1
  6117  0072                     ??_PWM6_LoadDutyValue:	
  6118  0072                     ??_PWM7_LoadDutyValue:	
  6119                           ; 1 bytes @ 0x2
  6120                           
  6121  0072                     ??_PWM1_LoadDutyValue:	
  6122                           ; 1 bytes @ 0x2
  6123                           
  6124  0072                     LCDWrite@data_or_command:	
  6125                           ; 1 bytes @ 0x2
  6126                           
  6127  0072                     ___awdiv@dividend:	
  6128                           ; 1 bytes @ 0x2
  6129                           
  6130  0072                     ___lwmod@dividend:	
  6131                           ; 2 bytes @ 0x2
  6132                           
  6133                           
  6134                           ; 2 bytes @ 0x2
  6135  0072                     	ds	1
  6136  0073                     ??_ADCRead:	
  6137  0073                     ADCRead@channel:	
  6138                           ; 1 bytes @ 0x3
  6139                           
  6140  0073                     LCDWrite@d:	
  6141                           ; 1 bytes @ 0x3
  6142                           
  6143  0073                     ___ftpack@exp:	
  6144                           ; 1 bytes @ 0x3
  6145                           
  6146  0073                     frexp@eptr:	
  6147                           ; 1 bytes @ 0x3
  6148                           
  6149  0073                     ___ftge@ff2:	
  6150                           ; 1 bytes @ 0x3
  6151                           
  6152                           
  6153                           ; 3 bytes @ 0x3
  6154  0073                     	ds	1
  6155  0074                     ??_frexp:	
  6156  0074                     ??_readButton:	
  6157                           ; 1 bytes @ 0x4
  6158                           
  6159  0074                     ??___awdiv:	
  6160                           ; 1 bytes @ 0x4
  6161                           
  6162  0074                     ??___lwmod:	
  6163                           ; 1 bytes @ 0x4
  6164                           
  6165  0074                     LCDWrite@i:	
  6166                           ; 1 bytes @ 0x4
  6167                           
  6168  0074                     ___ftpack@sign:	
  6169                           ; 1 bytes @ 0x4
  6170                           
  6171  0074                     ___aldiv@dividend:	
  6172                           ; 1 bytes @ 0x4
  6173                           
  6174                           
  6175                           ; 4 bytes @ 0x4
  6176  0074                     	ds	1
  6177  0075                     ??___ftpack:	
  6178  0075                     ?_gotoXY:	
  6179                           ; 1 bytes @ 0x5
  6180                           
  6181  0075                     ??_LCDInit:	
  6182                           ; 1 bytes @ 0x5
  6183                           
  6184  0075                     gotoXY@y:	
  6185                           ; 1 bytes @ 0x5
  6186                           
  6187  0075                     ___awdiv@counter:	
  6188                           ; 1 bytes @ 0x5
  6189                           
  6190  0075                     ___lwmod@counter:	
  6191                           ; 1 bytes @ 0x5
  6192                           
  6193                           
  6194                           ; 1 bytes @ 0x5
  6195  0075                     	ds	1
  6196  0076                     ??_gotoXY:	
  6197  0076                     ??___ftge:	
  6198                           ; 1 bytes @ 0x6
  6199                           
  6200  0076                     ___awdiv@sign:	
  6201                           ; 1 bytes @ 0x6
  6202                           
  6203                           
  6204                           ; 1 bytes @ 0x6
  6205  0076                     	ds	1
  6206  0077                     gotoXY@x:	
  6207  0077                     ___awdiv@quotient:	
  6208                           ; 1 bytes @ 0x7
  6209                           
  6210                           
  6211                           ; 2 bytes @ 0x7
  6212  0077                     	ds	1
  6213  0078                     ??_LCDClear:	
  6214  0078                     ??___aldiv:	
  6215                           ; 1 bytes @ 0x8
  6216                           
  6217  0078                     ?___awtoft:	
  6218                           ; 1 bytes @ 0x8
  6219                           
  6220  0078                     ___awtoft@c:	
  6221                           ; 3 bytes @ 0x8
  6222                           
  6223                           
  6224                           ; 2 bytes @ 0x8
  6225  0078                     	ds	1
  6226  0079                     ?___wmul:	
  6227  0079                     LCDClear@index:	
  6228                           ; 2 bytes @ 0x9
  6229                           
  6230  0079                     ___wmul@multiplier:	
  6231                           ; 2 bytes @ 0x9
  6232                           
  6233                           
  6234                           ; 2 bytes @ 0x9
  6235  0079                     	ds	2
  6236  007B                     ??_SYSTEM_Initialize:	
  6237  007B                     ??___awtoft:	
  6238                           ; 1 bytes @ 0xB
  6239                           
  6240  007B                     ___wmul@multiplicand:	
  6241                           ; 1 bytes @ 0xB
  6242                           
  6243                           
  6244                           ; 2 bytes @ 0xB
  6245  007B                     	ds	2
  6246  007D                     ??___wmul:	
  6247  007D                     ___awtoft@sign:	
  6248                           ; 1 bytes @ 0xD
  6249                           
  6250                           
  6251                           ; 1 bytes @ 0xD
  6252  007D                     	ds	1
  6253  007E                     ??_eval_poly:	
  6254  007E                     ??_tempCalc:	
  6255                           ; 1 bytes @ 0xE
  6256                           
  6257  007E                     ??___ftsub:	
  6258                           ; 1 bytes @ 0xE
  6259                           
  6260                           
  6261                           	psect	cstackBANK0
  6262  0020                     __pcstackBANK0:	
  6263                           ; 1 bytes @ 0xE
  6264                           
  6265  0020                     ?___ftdiv:	
  6266  0020                     ___aldiv@counter:	
  6267                           ; 3 bytes @ 0x0
  6268                           
  6269  0020                     ___wmul@product:	
  6270                           ; 1 bytes @ 0x0
  6271                           
  6272  0020                     ___ftdiv@f2:	
  6273                           ; 2 bytes @ 0x0
  6274                           
  6275                           
  6276                           ; 3 bytes @ 0x0
  6277  0020                     	ds	1
  6278  0021                     ___aldiv@sign:	
  6279                           
  6280                           ; 1 bytes @ 0x1
  6281  0021                     	ds	1
  6282  0022                     ??_LCDWriteCharacter:	
  6283  0022                     ___aldiv@quotient:	
  6284                           ; 1 bytes @ 0x2
  6285                           
  6286                           
  6287                           ; 4 bytes @ 0x2
  6288  0022                     	ds	1
  6289  0023                     ___ftdiv@f1:	
  6290                           
  6291                           ; 3 bytes @ 0x3
  6292  0023                     	ds	2
  6293  0025                     LCDWriteCharacter@character:	
  6294                           
  6295                           ; 1 bytes @ 0x5
  6296  0025                     	ds	1
  6297  0026                     ??___ftdiv:	
  6298  0026                     ?_readAnalog:	
  6299                           ; 1 bytes @ 0x6
  6300                           
  6301  0026                     readAnalog@channel:	
  6302                           ; 2 bytes @ 0x6
  6303                           
  6304  0026                     LCDWriteCharacter@base:	
  6305                           ; 2 bytes @ 0x6
  6306                           
  6307                           
  6308                           ; 2 bytes @ 0x6
  6309  0026                     	ds	2
  6310  0028                     ??_readAnalog:	
  6311  0028                     ?_LCDWriteInt:	
  6312                           ; 1 bytes @ 0x8
  6313                           
  6314  0028                     LCDWriteInt@value:	
  6315                           ; 1 bytes @ 0x8
  6316                           
  6317                           
  6318                           ; 2 bytes @ 0x8
  6319  0028                     	ds	2
  6320  002A                     LCDWriteInt@fieldLength:	
  6321  002A                     ___ftdiv@cntr:	
  6322                           ; 1 bytes @ 0xA
  6323                           
  6324                           
  6325                           ; 1 bytes @ 0xA
  6326  002A                     	ds	1
  6327  002B                     LCDWriteInt@numPlaces:	
  6328  002B                     ___ftdiv@f3:	
  6329                           ; 1 bytes @ 0xB
  6330                           
  6331                           
  6332                           ; 3 bytes @ 0xB
  6333  002B                     	ds	1
  6334  002C                     LCDWriteInt@sign:	
  6335                           
  6336                           ; 1 bytes @ 0xC
  6337  002C                     	ds	1
  6338  002D                     ??_LCDWriteInt:	
  6339                           
  6340                           ; 1 bytes @ 0xD
  6341  002D                     	ds	1
  6342  002E                     ___ftdiv@exp:	
  6343                           
  6344                           ; 1 bytes @ 0xE
  6345  002E                     	ds	1
  6346  002F                     ___ftdiv@sign:	
  6347                           
  6348                           ; 1 bytes @ 0xF
  6349  002F                     	ds	1
  6350  0030                     ?___ftmul:	
  6351  0030                     ?___fttol:	
  6352                           ; 3 bytes @ 0x10
  6353                           
  6354  0030                     ___ftmul@f1:	
  6355                           ; 4 bytes @ 0x10
  6356                           
  6357  0030                     ___fttol@f1:	
  6358                           ; 3 bytes @ 0x10
  6359                           
  6360                           
  6361                           ; 3 bytes @ 0x10
  6362  0030                     	ds	1
  6363  0031                     LCDWriteInt@str:	
  6364                           
  6365                           ; 5 bytes @ 0x11
  6366  0031                     	ds	2
  6367  0033                     ___ftmul@f2:	
  6368                           
  6369                           ; 3 bytes @ 0x13
  6370  0033                     	ds	1
  6371  0034                     ??___fttol:	
  6372                           
  6373                           ; 1 bytes @ 0x14
  6374  0034                     	ds	2
  6375  0036                     ??___ftmul:	
  6376  0036                     LCDWriteInt@j:	
  6377                           ; 1 bytes @ 0x16
  6378                           
  6379                           
  6380                           ; 1 bytes @ 0x16
  6381  0036                     	ds	1
  6382  0037                     LCDWriteInt@i:	
  6383                           
  6384                           ; 1 bytes @ 0x17
  6385  0037                     	ds	1
  6386  0038                     ___fttol@sign1:	
  6387                           
  6388                           ; 1 bytes @ 0x18
  6389  0038                     	ds	1
  6390  0039                     ___fttol@lval:	
  6391                           
  6392                           ; 4 bytes @ 0x19
  6393  0039                     	ds	1
  6394  003A                     ___ftmul@exp:	
  6395  003A                     readAnalog@analog_channel:	
  6396                           ; 1 bytes @ 0x1A
  6397                           
  6398                           
  6399                           ; 2 bytes @ 0x1A
  6400  003A                     	ds	1
  6401  003B                     ___ftmul@f3_as_product:	
  6402                           
  6403                           ; 3 bytes @ 0x1B
  6404  003B                     	ds	1
  6405  003C                     readAnalog@value:	
  6406                           
  6407                           ; 2 bytes @ 0x1C
  6408  003C                     	ds	1
  6409  003D                     ___fttol@exp1:	
  6410                           
  6411                           ; 1 bytes @ 0x1D
  6412  003D                     	ds	1
  6413  003E                     ??_calculateCurrent0:	
  6414  003E                     ??_calculateCurrent1:	
  6415                           ; 1 bytes @ 0x1E
  6416                           
  6417  003E                     ___ftmul@cntr:	
  6418                           ; 1 bytes @ 0x1E
  6419                           
  6420                           
  6421                           ; 1 bytes @ 0x1E
  6422  003E                     	ds	1
  6423  003F                     ___ftmul@sign:	
  6424                           
  6425                           ; 1 bytes @ 0x1F
  6426  003F                     	ds	1
  6427  0040                     ?___ftadd:	
  6428  0040                     ___ftadd@f1:	
  6429                           ; 3 bytes @ 0x20
  6430                           
  6431                           
  6432                           ; 3 bytes @ 0x20
  6433  0040                     	ds	3
  6434  0043                     ___ftadd@f2:	
  6435                           
  6436                           ; 3 bytes @ 0x23
  6437  0043                     	ds	3
  6438  0046                     ??___ftadd:	
  6439                           
  6440                           ; 1 bytes @ 0x26
  6441  0046                     	ds	4
  6442  004A                     ___ftadd@sign:	
  6443                           
  6444                           ; 1 bytes @ 0x2A
  6445  004A                     	ds	1
  6446  004B                     ___ftadd@exp2:	
  6447                           
  6448                           ; 1 bytes @ 0x2B
  6449  004B                     	ds	1
  6450  004C                     ___ftadd@exp1:	
  6451                           
  6452                           ; 1 bytes @ 0x2C
  6453  004C                     	ds	1
  6454  004D                     ?_eval_poly:	
  6455  004D                     ?___ftsub:	
  6456                           ; 3 bytes @ 0x2D
  6457                           
  6458  004D                     ___ftsub@f2:	
  6459                           ; 3 bytes @ 0x2D
  6460                           
  6461  004D                     eval_poly@x:	
  6462                           ; 3 bytes @ 0x2D
  6463                           
  6464                           
  6465                           ; 3 bytes @ 0x2D
  6466  004D                     	ds	3
  6467  0050                     eval_poly@d:	
  6468  0050                     ___ftsub@f1:	
  6469                           ; 2 bytes @ 0x30
  6470                           
  6471                           
  6472                           ; 3 bytes @ 0x30
  6473  0050                     	ds	2
  6474  0052                     eval_poly@n:	
  6475                           
  6476                           ; 2 bytes @ 0x32
  6477  0052                     	ds	2
  6478  0054                     eval_poly@res:	
  6479                           
  6480                           ; 3 bytes @ 0x34
  6481  0054                     	ds	3
  6482  0057                     ?_log:	
  6483  0057                     log@x:	
  6484                           ; 3 bytes @ 0x37
  6485                           
  6486                           
  6487                           ; 3 bytes @ 0x37
  6488  0057                     	ds	3
  6489  005A                     ??_log:	
  6490                           
  6491                           ; 1 bytes @ 0x3A
  6492  005A                     	ds	1
  6493  005B                     log@exponent:	
  6494                           
  6495                           ; 2 bytes @ 0x3B
  6496  005B                     	ds	2
  6497  005D                     ?_tempCalc:	
  6498  005D                     tempCalc@analogValue:	
  6499                           ; 2 bytes @ 0x3D
  6500                           
  6501                           
  6502                           ; 2 bytes @ 0x3D
  6503  005D                     	ds	2
  6504  005F                     tempCalc@R:	
  6505                           
  6506                           ; 3 bytes @ 0x3F
  6507  005F                     	ds	3
  6508  0062                     _tempCalc$1290:	
  6509                           
  6510                           ; 3 bytes @ 0x42
  6511  0062                     	ds	3
  6512  0065                     tempCalc@steinhart:	
  6513                           
  6514                           ; 3 bytes @ 0x45
  6515  0065                     	ds	3
  6516  0068                     ??_main:	
  6517                           
  6518                           ; 1 bytes @ 0x48
  6519  0068                     	ds	2
  6520                           
  6521                           	psect	maintext
  6522  02A5                     __pmaintext:	
  6523 ;;
  6524 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6525 ;;
  6526 ;; *************** function _main *****************
  6527 ;; Defined at:
  6528 ;;		line 40 in file "main.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;		None
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  efficiency      3   20[BANK1 ] float 
  6533 ;;  dutyCycle6      2   31[BANK1 ] unsigned int 
  6534 ;;  MPPT0           2   28[BANK1 ] int 
  6535 ;;  dutyCycle7      2   26[BANK1 ] unsigned int 
  6536 ;;  dutyCycle1      2   23[BANK1 ] unsigned int 
  6537 ;;  IOutTotal       2   14[BANK1 ] int 
  6538 ;;  batteryTemp     2    5[BANK1 ] int 
  6539 ;;  MPPT1           2    3[BANK1 ] int 
  6540 ;;  j               1   30[BANK1 ] unsigned char 
  6541 ;;  menuButton      1   25[BANK1 ] unsigned char 
  6542 ;;  faultReset      1   10[BANK1 ] unsigned char 
  6543 ;;  displayRefre    1    9[BANK1 ] unsigned char 
  6544 ;;  slowLoop        1    8[BANK1 ] unsigned char 
  6545 ;;  fastLoop        1    7[BANK1 ] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      void 
  6548 ;; Registers used:
  6549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : B1F/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;      Totals:         0       2      33       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;Total ram usage:       35 bytes
  6560 ;; Hardware stack levels required when called:    5
  6561 ;; This function calls:
  6562 ;;		_ADCRead
  6563 ;;		_Battery_State_Machine
  6564 ;;		_LCDClear
  6565 ;;		_LCDInit
  6566 ;;		_LCDWriteCharacter
  6567 ;;		_LCDWriteInt
  6568 ;;		_PWM1_LoadDutyValue
  6569 ;;		_PWM6_LoadDutyValue
  6570 ;;		_PWM7_LoadDutyValue
  6571 ;;		_SYSTEM_Initialize
  6572 ;;		___awdiv
  6573 ;;		___awtoft
  6574 ;;		___ftdiv
  6575 ;;		___ftmul
  6576 ;;		___fttol
  6577 ;;		___wmul
  6578 ;;		_calculateCurrent0
  6579 ;;		_calculateCurrent1
  6580 ;;		_cc_cv_mode
  6581 ;;		_gotoXY
  6582 ;;		_readAnalog
  6583 ;;		_readButton
  6584 ;;		_tempCalc
  6585 ;; This function is called by:
  6586 ;;		Startup code after reset
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           
  6591                           ;psect for function _main
  6592  02A5                     _main:	
  6593                           
  6594                           ;main.c: 42: int16_t MPPT0 = 3144;
  6595                           
  6596                           ;incstack = 0
  6597                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6598  02A5  3048               	movlw	72
  6599  02A6  0021               	movlb	1	; select bank1
  6600  02A7  00BC               	movwf	main@MPPT0^(0+128)
  6601  02A8  300C               	movlw	12
  6602  02A9  00BD               	movwf	(main@MPPT0^(0+128)+1)
  6603                           
  6604                           ;main.c: 43: int16_t MPPT1 = 3144;
  6605  02AA  3048               	movlw	72
  6606  02AB  00A3               	movwf	main@MPPT1^(0+128)
  6607  02AC  300C               	movlw	12
  6608  02AD  00A4               	movwf	(main@MPPT1^(0+128)+1)
  6609                           
  6610                           ;main.c: 45: uint16_t dutyCycle6 = 1023;
  6611  02AE  30FF               	movlw	255
  6612  02AF  00BF               	movwf	main@dutyCycle6^(0+128)
  6613  02B0  3003               	movlw	3
  6614  02B1  00C0               	movwf	(main@dutyCycle6^(0+128)+1)
  6615                           
  6616                           ;main.c: 46: uint16_t dutyCycle7 = 256;
  6617  02B2  3000               	movlw	0
  6618  02B3  00BA               	movwf	main@dutyCycle7^(0+128)
  6619  02B4  3001               	movlw	1
  6620  02B5  00BB               	movwf	(main@dutyCycle7^(0+128)+1)
  6621                           
  6622                           ;main.c: 47: uint16_t dutyCycle1 = 60;
  6623  02B6  303C               	movlw	60
  6624  02B7  00B7               	movwf	main@dutyCycle1^(0+128)
  6625  02B8  3000               	movlw	0
  6626  02B9  00B8               	movwf	(main@dutyCycle1^(0+128)+1)
  6627                           
  6628                           ;main.c: 48: int16_t IOutTotal = 0;
  6629  02BA  01AE               	clrf	main@IOutTotal^(0+128)
  6630  02BB  01AF               	clrf	(main@IOutTotal+1)^(0+128)
  6631                           
  6632                           ;main.c: 50: uint8_t j = 0;
  6633  02BC  01BE               	clrf	main@j^(0+128)
  6634                           
  6635                           ;main.c: 52: uint8_t fastLoop = 0;
  6636  02BD  01A7               	clrf	main@fastLoop^(0+128)
  6637                           
  6638                           ;main.c: 53: uint8_t slowLoop = 200;
  6639  02BE  30C8               	movlw	200
  6640  02BF  0020               	movlb	0	; select bank0
  6641  02C0  00E8               	movwf	??_main
  6642  02C1  0868               	movf	??_main,w
  6643  02C2  0021               	movlb	1	; select bank1
  6644  02C3  00A8               	movwf	main@slowLoop^(0+128)
  6645                           
  6646                           ;main.c: 54: uint8_t displayRefresh = 0;
  6647  02C4  01A9               	clrf	main@displayRefresh^(0+128)
  6648                           
  6649                           ;main.c: 55: int16_t batteryTemp = 250;
  6650  02C5  30FA               	movlw	250
  6651  02C6  00A5               	movwf	main@batteryTemp^(0+128)
  6652  02C7  3000               	movlw	0
  6653  02C8  00A6               	movwf	(main@batteryTemp^(0+128)+1)
  6654                           
  6655                           ;main.c: 56: float efficiency = 0;
  6656  02C9  3000               	movlw	0
  6657  02CA  00B4               	movwf	main@efficiency^(0+128)
  6658  02CB  3000               	movlw	0
  6659  02CC  00B5               	movwf	(main@efficiency+1)^(0+128)
  6660  02CD  3000               	movlw	0
  6661  02CE  00B6               	movwf	(main@efficiency+2)^(0+128)
  6662                           
  6663                           ;main.c: 57: extern int8_t Imode0;
  6664                           ;main.c: 58: extern int16_t Vref;
  6665                           ;main.c: 59: extern int16_t Iref;
  6666                           ;main.c: 60: uint8_t menuButton = 0;
  6667  02CF  01B9               	clrf	main@menuButton^(0+128)
  6668                           
  6669                           ;main.c: 61: uint8_t faultReset = 0;
  6670  02D0  01AA               	clrf	main@faultReset^(0+128)
  6671                           
  6672                           ;main.c: 63: SYSTEM_Initialize();
  6673  02D1  3195  25FF  3182   	fcall	_SYSTEM_Initialize
  6674                           
  6675                           ;main.c: 65: LCDClear();
  6676  02D4  3195  25AD  3182   	fcall	_LCDClear
  6677  02D7                     l435:	
  6678                           ;main.c: 67: void calculateCurrent0(void);
  6679                           ;main.c: 68: void calculateCurrent1(void);
  6680                           ;main.c: 69: void calculateCurrent2(void);
  6681                           ;main.c: 70: void calculateCurrent3(void);
  6682                           ;main.c: 84: while (1)
  6683                           
  6684                           
  6685                           ;main.c: 85: {
  6686                           ;main.c: 86: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  6687  02D7  0021               	movlb	1	; select bank1
  6688  02D8  01BE               	clrf	main@j^(0+128)
  6689  02D9  3008               	movlw	8
  6690  02DA  023E               	subwf	main@j^(0+128),w
  6691  02DB  1803               	btfsc	3,0
  6692  02DC  2AFC               	goto	l3029
  6693  02DD                     l3023:	
  6694  02DD  083E               	movf	main@j^(0+128),w
  6695  02DE  0020               	movlb	0	; select bank0
  6696  02DF  00E8               	movwf	??_main
  6697  02E0  01E9               	clrf	??_main+1
  6698  02E1  0868               	movf	??_main,w
  6699  02E2  00A6               	movwf	readAnalog@channel
  6700  02E3  0869               	movf	??_main+1,w
  6701  02E4  00A7               	movwf	readAnalog@channel+1
  6702  02E5  3181  2159  3182   	fcall	_readAnalog
  6703  02E8  0021               	movlb	1	; select bank1
  6704  02E9  353E               	lslf	main@j^(0+128),w
  6705  02EA  3E40               	addlw	(low (_analogs| (0+256)))& (0+255)
  6706  02EB  0086               	movwf	6
  6707  02EC  3001               	movlw	1	; select bank2/3
  6708  02ED  0087               	movwf	7
  6709  02EE  0020               	movlb	0	; select bank0
  6710  02EF  0826               	movf	?_readAnalog,w
  6711  02F0  3FC0               	movwi [0]fsr1
  6712  02F1  0827               	movf	?_readAnalog+1,w
  6713  02F2  3FC1               	movwi [1]fsr1
  6714  02F3  3001               	movlw	1
  6715  02F4  00E8               	movwf	??_main
  6716  02F5  0868               	movf	??_main,w
  6717  02F6  0021               	movlb	1	; select bank1
  6718  02F7  07BE               	addwf	main@j^(0+128),f
  6719  02F8  3008               	movlw	8
  6720  02F9  023E               	subwf	main@j^(0+128),w
  6721  02FA  1C03               	skipc
  6722  02FB  2ADD               	goto	l3023
  6723  02FC                     l3029:	
  6724                           
  6725                           ;main.c: 89: voltage[0]=(int16_t)(analogs[0]/.20885);
  6726  02FC  0022               	movlb	2	; select bank2
  6727  02FD  0841               	movf	(_analogs+1)^(0+256),w
  6728  02FE  00F9               	movwf	___awtoft@c+1
  6729  02FF  0840               	movf	_analogs^(0+256),w
  6730  0300  00F8               	movwf	___awtoft@c
  6731  0301  3195  2568  3182   	fcall	___awtoft
  6732  0304  0878               	movf	?___awtoft,w
  6733  0305  0020               	movlb	0	; select bank0
  6734  0306  00A3               	movwf	___ftdiv@f1
  6735  0307  0879               	movf	?___awtoft+1,w
  6736  0308  00A4               	movwf	___ftdiv@f1+1
  6737  0309  087A               	movf	?___awtoft+2,w
  6738  030A  00A5               	movwf	___ftdiv@f1+2
  6739  030B  30DD               	movlw	221
  6740  030C  00A0               	movwf	___ftdiv@f2
  6741  030D  3055               	movlw	85
  6742  030E  00A1               	movwf	___ftdiv@f2+1
  6743  030F  303E               	movlw	62
  6744  0310  00A2               	movwf	___ftdiv@f2+2
  6745  0311  318C  2444  3182   	fcall	___ftdiv
  6746  0314  0020               	movlb	0	; select bank0
  6747  0315  0820               	movf	?___ftdiv,w
  6748  0316  00B0               	movwf	___fttol@f1
  6749  0317  0821               	movf	?___ftdiv+1,w
  6750  0318  00B1               	movwf	___fttol@f1+1
  6751  0319  0822               	movf	?___ftdiv+2,w
  6752  031A  00B2               	movwf	___fttol@f1+2
  6753  031B  318B  23BD  3182   	fcall	___fttol
  6754  031E  0020               	movlb	0	; select bank0
  6755  031F  0831               	movf	?___fttol+1,w
  6756  0320  0021               	movlb	1	; select bank1
  6757  0321  00CA               	movwf	(_voltage+1)^(0+128)
  6758  0322  0020               	movlb	0	; select bank0
  6759  0323  0830               	movf	?___fttol,w
  6760  0324  0021               	movlb	1	; select bank1
  6761  0325  00C9               	movwf	_voltage^(0+128)
  6762                           
  6763                           ;main.c: 91: voltage[1]=(int16_t)(analogs[1]/.54503);
  6764  0326  0022               	movlb	2	; select bank2
  6765  0327  0843               	movf	((_analogs+1)^(0+256)+2),w
  6766  0328  00F9               	movwf	___awtoft@c+1
  6767  0329  0842               	movf	(_analogs^(0+256)+2),w
  6768  032A  00F8               	movwf	___awtoft@c
  6769  032B  3195  2568  3182   	fcall	___awtoft
  6770  032E  0878               	movf	?___awtoft,w
  6771  032F  0020               	movlb	0	; select bank0
  6772  0330  00A3               	movwf	___ftdiv@f1
  6773  0331  0879               	movf	?___awtoft+1,w
  6774  0332  00A4               	movwf	___ftdiv@f1+1
  6775  0333  087A               	movf	?___awtoft+2,w
  6776  0334  00A5               	movwf	___ftdiv@f1+2
  6777  0335  3087               	movlw	135
  6778  0336  00A0               	movwf	___ftdiv@f2
  6779  0337  300B               	movlw	11
  6780  0338  00A1               	movwf	___ftdiv@f2+1
  6781  0339  303F               	movlw	63
  6782  033A  00A2               	movwf	___ftdiv@f2+2
  6783  033B  318C  2444  3182   	fcall	___ftdiv
  6784  033E  0020               	movlb	0	; select bank0
  6785  033F  0820               	movf	?___ftdiv,w
  6786  0340  00B0               	movwf	___fttol@f1
  6787  0341  0821               	movf	?___ftdiv+1,w
  6788  0342  00B1               	movwf	___fttol@f1+1
  6789  0343  0822               	movf	?___ftdiv+2,w
  6790  0344  00B2               	movwf	___fttol@f1+2
  6791  0345  318B  23BD  3182   	fcall	___fttol
  6792  0348  0020               	movlb	0	; select bank0
  6793  0349  0831               	movf	?___fttol+1,w
  6794  034A  0021               	movlb	1	; select bank1
  6795  034B  00CC               	movwf	((_voltage+1)^(0+128)+2)
  6796  034C  0020               	movlb	0	; select bank0
  6797  034D  0830               	movf	?___fttol,w
  6798  034E  0021               	movlb	1	; select bank1
  6799  034F  00CB               	movwf	(_voltage^(0+128)+2)
  6800                           
  6801                           ;main.c: 97: calculateCurrent0();
  6802  0350  3197  2725  3182   	fcall	_calculateCurrent0
  6803                           
  6804                           ;main.c: 100: calculateCurrent1();
  6805  0353  3197  276A  3182   	fcall	_calculateCurrent1
  6806                           
  6807                           ;main.c: 103: if(fastLoop>2)
  6808  0356  3003               	movlw	3
  6809  0357  0021               	movlb	1	; select bank1
  6810  0358  0227               	subwf	main@fastLoop^(0+128),w
  6811  0359  1C03               	skipc
  6812  035A  2BED               	goto	l3089
  6813                           
  6814                           ;main.c: 104: {
  6815                           ;main.c: 105: if(Imode0)
  6816  035B  086D               	movf	_Imode0^(0+128),w
  6817  035C  1903               	btfsc	3,2
  6818  035D  2B6D               	goto	l3049
  6819                           
  6820                           ;main.c: 106: {
  6821                           ;main.c: 107: if(voltage[0]<MPPT0)
  6822  035E  084A               	movf	(_voltage+1)^(0+128),w
  6823  035F  3A80               	xorlw	128
  6824  0360  0020               	movlb	0	; select bank0
  6825  0361  00E8               	movwf	??_main
  6826  0362  0021               	movlb	1	; select bank1
  6827  0363  083D               	movf	(main@MPPT0+1)^(0+128),w
  6828  0364  3A80               	xorlw	128
  6829  0365  0020               	movlb	0	; select bank0
  6830  0366  0268               	subwf	??_main,w
  6831  0367  1D03               	skipz
  6832  0368  2B7B               	goto	u3535
  6833  0369  0021               	movlb	1	; select bank1
  6834  036A  083C               	movf	main@MPPT0^(0+128),w
  6835  036B  0249               	subwf	_voltage^(0+128),w
  6836  036C  2B7B               	goto	u3535
  6837  036D                     l3049:	
  6838                           ;main.c: 129: }
  6839                           ;main.c: 130: }
  6840                           
  6841                           ;main.c: 127: {
  6842                           
  6843                           ;main.c: 124: }
  6844                           ;main.c: 125: }
  6845                           
  6846                           ;main.c: 122: {
  6847                           
  6848                           ;main.c: 115: {
  6849                           ;main.c: 116: dutyCycle6-=1;
  6850                           
  6851                           ;main.c: 114: else if(dutyCycle6>0)
  6852                           
  6853                           ;main.c: 112: }
  6854                           ;main.c: 113: }
  6855                           
  6856                           ;main.c: 110: {
  6857                           ;main.c: 111: dutyCycle6+=1;
  6858                           
  6859                           ;main.c: 108: {
  6860                           ;main.c: 109: if(dutyCycle6<1023)
  6861                           
  6862                           
  6863                           ;main.c: 131: else
  6864                           ;main.c: 132: {
  6865                           ;main.c: 133: if(voltage[1]>(int16_t)Vref)
  6866  036D  0862               	movf	(_Vref+1)^(0+128),w
  6867  036E  3A80               	xorlw	128
  6868  036F  0020               	movlb	0	; select bank0
  6869  0370  00E8               	movwf	??_main
  6870  0371  0021               	movlb	1	; select bank1
  6871  0372  084C               	movf	((_voltage+1)^(0+128)+2),w
  6872  0373  3A80               	xorlw	128
  6873  0374  0020               	movlb	0	; select bank0
  6874  0375  0268               	subwf	??_main,w
  6875  0376  1D03               	skipz
  6876  0377  2B7B               	goto	u3535
  6877  0378  0021               	movlb	1	; select bank1
  6878  0379  084B               	movf	(_voltage^(0+128)+2),w
  6879  037A  0261               	subwf	_Vref^(0+128),w
  6880  037B                     u3535:	
  6881  037B  1803               	skipnc
  6882  037C  2B8A               	goto	l3055
  6883                           
  6884                           ;main.c: 134: {
  6885                           ;main.c: 135: if(dutyCycle6<1023) dutyCycle6+=1;
  6886  037D  3003               	movlw	3
  6887  037E  0021               	movlb	1	; select bank1
  6888  037F  0240               	subwf	(main@dutyCycle6+1)^(0+128),w
  6889  0380  30FF               	movlw	255
  6890  0381  1903               	skipnz
  6891  0382  023F               	subwf	main@dutyCycle6^(0+128),w
  6892  0383  1803               	skipnc
  6893  0384  2B93               	goto	l3061
  6894  0385  3001               	movlw	1
  6895  0386  07BF               	addwf	main@dutyCycle6^(0+128),f
  6896  0387  3000               	movlw	0
  6897  0388  3DC0               	addwfc	(main@dutyCycle6+1)^(0+128),f
  6898                           
  6899                           ;main.c: 136: }
  6900  0389  2B93               	goto	l3061
  6901  038A                     l3055:	
  6902                           
  6903                           ;main.c: 137: else
  6904                           ;main.c: 138: {
  6905                           ;main.c: 139: if(dutyCycle6>0) dutyCycle6-=1;;
  6906  038A  0021               	movlb	1	; select bank1
  6907  038B  083F               	movf	main@dutyCycle6^(0+128),w
  6908  038C  0440               	iorwf	(main@dutyCycle6+1)^(0+128),w
  6909  038D  1903               	btfsc	3,2
  6910  038E  2B93               	goto	l3061
  6911  038F  3001               	movlw	1
  6912  0390  02BF               	subwf	main@dutyCycle6^(0+128),f
  6913  0391  3000               	movlw	0
  6914  0392  3BC0               	subwfb	(main@dutyCycle6+1)^(0+128),f
  6915  0393                     l3061:	
  6916                           ;main.c: 146: else
  6917                           ;main.c: 147: {
  6918                           
  6919                           ;main.c: 143: {
  6920                           ;main.c: 145: }
  6921                           
  6922                           
  6923                           ;main.c: 149: }
  6924                           ;main.c: 151: }
  6925                           ;main.c: 152: fastLoop=0;
  6926  0393  01A7               	clrf	main@fastLoop^(0+128)
  6927                           
  6928                           ;main.c: 153: slowLoop+=1;
  6929  0394  3001               	movlw	1
  6930  0395  0020               	movlb	0	; select bank0
  6931  0396  00E8               	movwf	??_main
  6932  0397  0868               	movf	??_main,w
  6933  0398  0021               	movlb	1	; select bank1
  6934  0399  07A8               	addwf	main@slowLoop^(0+128),f
  6935                           
  6936                           ;main.c: 155: PWM1_LoadDutyValue(dutyCycle1);
  6937  039A  0838               	movf	(main@dutyCycle1+1)^(0+128),w
  6938  039B  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  6939  039C  0837               	movf	main@dutyCycle1^(0+128),w
  6940  039D  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  6941  039E  3194  2492  3182   	fcall	_PWM1_LoadDutyValue
  6942                           
  6943                           ;main.c: 156: PWM6_LoadDutyValue(dutyCycle6);
  6944  03A1  0021               	movlb	1	; select bank1
  6945  03A2  0840               	movf	(main@dutyCycle6+1)^(0+128),w
  6946  03A3  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6947  03A4  083F               	movf	main@dutyCycle6^(0+128),w
  6948  03A5  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6949  03A6  3194  24A8  3182   	fcall	_PWM6_LoadDutyValue
  6950                           
  6951                           ;main.c: 157: PWM7_LoadDutyValue(dutyCycle7);
  6952  03A9  0021               	movlb	1	; select bank1
  6953  03AA  083B               	movf	(main@dutyCycle7+1)^(0+128),w
  6954  03AB  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6955  03AC  083A               	movf	main@dutyCycle7^(0+128),w
  6956  03AD  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6957  03AE  3194  24BE  3182   	fcall	_PWM7_LoadDutyValue
  6958                           
  6959                           ;main.c: 159: menuButton = readButton();
  6960  03B1  318B  233B  3182   	fcall	_readButton
  6961  03B4  0020               	movlb	0	; select bank0
  6962  03B5  00E8               	movwf	??_main
  6963  03B6  0868               	movf	??_main,w
  6964  03B7  0021               	movlb	1	; select bank1
  6965  03B8  00B9               	movwf	main@menuButton^(0+128)
  6966                           
  6967                           ;main.c: 160: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  6968  03B9  3002               	movlw	2
  6969  03BA  0639               	xorwf	main@menuButton^(0+128),w
  6970  03BB  1D03               	btfss	3,2
  6971  03BC  2BCF               	goto	l3079
  6972  03BD  083D               	movf	(main@MPPT0+1)^(0+128),w
  6973  03BE  3A80               	xorlw	128
  6974  03BF  0020               	movlb	0	; select bank0
  6975  03C0  00E8               	movwf	??_main
  6976  03C1  308A               	movlw	138
  6977  03C2  0268               	subwf	??_main,w
  6978  03C3  1D03               	skipz
  6979  03C4  2BC8               	goto	u3575
  6980  03C5  30F1               	movlw	241
  6981  03C6  0021               	movlb	1	; select bank1
  6982  03C7  023C               	subwf	main@MPPT0^(0+128),w
  6983  03C8                     u3575:	
  6984  03C8  1C03               	skipc
  6985  03C9  2BCF               	goto	l3079
  6986  03CA  30F6               	movlw	246
  6987  03CB  0021               	movlb	1	; select bank1
  6988  03CC  07BC               	addwf	main@MPPT0^(0+128),f
  6989  03CD  30FF               	movlw	255
  6990  03CE  3DBD               	addwfc	(main@MPPT0+1)^(0+128),f
  6991  03CF                     l3079:	
  6992                           
  6993                           ;main.c: 161: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  6994  03CF  3003               	movlw	3
  6995  03D0  0021               	movlb	1	; select bank1
  6996  03D1  0639               	xorwf	main@menuButton^(0+128),w
  6997  03D2  1D03               	btfss	3,2
  6998  03D3  2BE6               	goto	l3085
  6999  03D4  083D               	movf	(main@MPPT0+1)^(0+128),w
  7000  03D5  3A80               	xorlw	128
  7001  03D6  0020               	movlb	0	; select bank0
  7002  03D7  00E8               	movwf	??_main
  7003  03D8  308D               	movlw	141
  7004  03D9  0268               	subwf	??_main,w
  7005  03DA  1D03               	skipz
  7006  03DB  2BDF               	goto	u3595
  7007  03DC  3048               	movlw	72
  7008  03DD  0021               	movlb	1	; select bank1
  7009  03DE  023C               	subwf	main@MPPT0^(0+128),w
  7010  03DF                     u3595:	
  7011  03DF  1803               	skipnc
  7012  03E0  2BE6               	goto	l3085
  7013  03E1  300A               	movlw	10
  7014  03E2  0021               	movlb	1	; select bank1
  7015  03E3  07BC               	addwf	main@MPPT0^(0+128),f
  7016  03E4  3000               	movlw	0
  7017  03E5  3DBD               	addwfc	(main@MPPT0+1)^(0+128),f
  7018  03E6                     l3085:	
  7019                           
  7020                           ;main.c: 162: if(menuButton == 1)LCDInit();
  7021  03E6  0021               	movlb	1	; select bank1
  7022  03E7  0339               	decf	main@menuButton^(0+128),w
  7023  03E8  1D03               	btfss	3,2
  7024  03E9  2BED               	goto	l3089
  7025  03EA  3196  2633  3182   	fcall	_LCDInit
  7026  03ED                     l3089:	
  7027                           
  7028                           ;main.c: 163: }
  7029                           ;main.c: 164: fastLoop+=1;
  7030  03ED  3001               	movlw	1
  7031  03EE  0020               	movlb	0	; select bank0
  7032  03EF  00E8               	movwf	??_main
  7033  03F0  0868               	movf	??_main,w
  7034  03F1  0021               	movlb	1	; select bank1
  7035  03F2  07A7               	addwf	main@fastLoop^(0+128),f
  7036                           
  7037                           ;main.c: 166: if(slowLoop>50)
  7038  03F3  3033               	movlw	51
  7039  03F4  0228               	subwf	main@slowLoop^(0+128),w
  7040  03F5  1C03               	skipc
  7041  03F6  2AD7               	goto	l435
  7042                           
  7043                           ;main.c: 167: {
  7044                           ;main.c: 169: IOutTotal=current[1]+current[3];
  7045  03F7  3006               	movlw	6
  7046  03F8  3EC1               	addlw	(low (_current| 0))& (0+255)
  7047  03F9  0086               	movwf	6
  7048  03FA  0187               	clrf	7
  7049  03FB  3002               	movlw	2
  7050  03FC  3EC1               	addlw	(low (_current| 0))& (0+255)
  7051  03FD  0084               	movwf	4
  7052  03FE  0185               	clrf	5
  7053  03FF  3F40               	moviw [0]fsr1
  7054  0400  0700               	addwf	0,w
  7055  0401  00AE               	movwf	main@IOutTotal^(0+128)
  7056  0402  3101               	addfsr 0,1
  7057  0403  3F41               	moviw [1]fsr1
  7058  0404  3D00               	addwfc	0,w
  7059  0405  00AF               	movwf	(main@IOutTotal^(0+128)+1)
  7060                           
  7061                           ;main.c: 171: if(IOutTotal>20)
  7062  0406  082F               	movf	(main@IOutTotal+1)^(0+128),w
  7063  0407  3A80               	xorlw	128
  7064  0408  0020               	movlb	0	; select bank0
  7065  0409  00E8               	movwf	??_main
  7066  040A  3080               	movlw	128
  7067  040B  0268               	subwf	??_main,w
  7068  040C  1D03               	skipz
  7069  040D  2C11               	goto	u3625
  7070  040E  3015               	movlw	21
  7071  040F  0021               	movlb	1	; select bank1
  7072  0410  022E               	subwf	main@IOutTotal^(0+128),w
  7073  0411                     u3625:	
  7074  0411  1C03               	skipc
  7075  0412  2C27               	goto	l3099
  7076                           
  7077                           ;main.c: 172: {
  7078                           ;main.c: 173: dutyCycle1=(uint16_t)IOutTotal/2+10;
  7079  0413  0021               	movlb	1	; select bank1
  7080  0414  082F               	movf	(main@IOutTotal+1)^(0+128),w
  7081  0415  0020               	movlb	0	; select bank0
  7082  0416  00E9               	movwf	??_main+1
  7083  0417  0021               	movlb	1	; select bank1
  7084  0418  082E               	movf	main@IOutTotal^(0+128),w
  7085  0419  0020               	movlb	0	; select bank0
  7086  041A  00E8               	movwf	??_main
  7087  041B  36E9               	lsrf	??_main+1,f
  7088  041C  0CE8               	rrf	??_main,f
  7089  041D  0868               	movf	??_main,w
  7090  041E  3E0A               	addlw	10
  7091  041F  0021               	movlb	1	; select bank1
  7092  0420  00B7               	movwf	main@dutyCycle1^(0+128)
  7093  0421  3000               	movlw	0
  7094  0422  0020               	movlb	0	; select bank0
  7095  0423  3D69               	addwfc	??_main+1,w
  7096  0424  0021               	movlb	1	; select bank1
  7097  0425  00B8               	movwf	(main@dutyCycle1+1)^(0+128)
  7098                           
  7099                           ;main.c: 174: }
  7100  0426  2C2A               	goto	l3101
  7101  0427                     l3099:	
  7102                           
  7103                           ;main.c: 175: else
  7104                           ;main.c: 176: {
  7105                           ;main.c: 177: dutyCycle1=0;
  7106  0427  0021               	movlb	1	; select bank1
  7107  0428  01B7               	clrf	main@dutyCycle1^(0+128)
  7108  0429  01B8               	clrf	(main@dutyCycle1+1)^(0+128)
  7109  042A                     l3101:	
  7110                           
  7111                           ;main.c: 178: }
  7112                           ;main.c: 179: if(!RB2==1)dutyCycle1=55;
  7113  042A  0020               	movlb	0	; select bank0
  7114  042B  190D               	btfsc	13,2	;volatile
  7115  042C  2C32               	goto	l3105
  7116  042D  3037               	movlw	55
  7117  042E  0021               	movlb	1	; select bank1
  7118  042F  00B7               	movwf	main@dutyCycle1^(0+128)
  7119  0430  3000               	movlw	0
  7120  0431  00B8               	movwf	(main@dutyCycle1^(0+128)+1)
  7121  0432                     l3105:	
  7122                           
  7123                           ;main.c: 182: displayRefresh+=1;
  7124  0432  3001               	movlw	1
  7125  0433  0020               	movlb	0	; select bank0
  7126  0434  00E8               	movwf	??_main
  7127  0435  0868               	movf	??_main,w
  7128  0436  0021               	movlb	1	; select bank1
  7129  0437  07A9               	addwf	main@displayRefresh^(0+128),f
  7130                           
  7131                           ;main.c: 183: if(displayRefresh>80)
  7132  0438  3051               	movlw	81
  7133  0439  0229               	subwf	main@displayRefresh^(0+128),w
  7134  043A  1C03               	skipc
  7135  043B  2C62               	goto	l3123
  7136                           
  7137                           ;main.c: 184: {
  7138                           ;main.c: 185: LCDClear();
  7139  043C  3195  25AD  3182   	fcall	_LCDClear
  7140                           
  7141                           ;main.c: 186: displayRefresh=0;
  7142  043F  0021               	movlb	1	; select bank1
  7143  0440  01A9               	clrf	main@displayRefresh^(0+128)
  7144                           
  7145                           ;main.c: 187: batteryTemp=tempCalc(ADCRead(9));
  7146  0441  3009               	movlw	9
  7147  0442  3194  247D  3182   	fcall	_ADCRead
  7148  0445  0871               	movf	?_ADCRead+1,w
  7149  0446  0020               	movlb	0	; select bank0
  7150  0447  00DE               	movwf	tempCalc@analogValue+1
  7151  0448  0870               	movf	?_ADCRead,w
  7152  0449  00DD               	movwf	tempCalc@analogValue
  7153  044A  3180  203C  3182   	fcall	_tempCalc
  7154  044D  0020               	movlb	0	; select bank0
  7155  044E  085E               	movf	?_tempCalc+1,w
  7156  044F  0021               	movlb	1	; select bank1
  7157  0450  00A6               	movwf	(main@batteryTemp+1)^(0+128)
  7158  0451  0020               	movlb	0	; select bank0
  7159  0452  085D               	movf	?_tempCalc,w
  7160  0453  0021               	movlb	1	; select bank1
  7161  0454  00A5               	movwf	main@batteryTemp^(0+128)
  7162                           
  7163                           ;main.c: 188: faultReset+=1;
  7164  0455  3001               	movlw	1
  7165  0456  0020               	movlb	0	; select bank0
  7166  0457  00E8               	movwf	??_main
  7167  0458  0868               	movf	??_main,w
  7168  0459  0021               	movlb	1	; select bank1
  7169  045A  07AA               	addwf	main@faultReset^(0+128),f
  7170                           
  7171                           ;main.c: 189: if(faultReset>29)
  7172  045B  301E               	movlw	30
  7173  045C  022A               	subwf	main@faultReset^(0+128),w
  7174  045D  1C03               	skipc
  7175  045E  2C62               	goto	l3123
  7176  045F  0001               	reset	;# 
  7177                           
  7178                           ;main.c: 192: faultReset=0;
  7179  0460  0021               	movlb	1	; select bank1
  7180  0461  01AA               	clrf	main@faultReset^(0+128)
  7181  0462                     l3123:	
  7182                           
  7183                           ;main.c: 193: }
  7184                           ;main.c: 194: }
  7185                           ;main.c: 195: Battery_State_Machine();
  7186  0462  318A  2254  3182   	fcall	_Battery_State_Machine
  7187                           
  7188                           ;main.c: 196: efficiency=(float)voltage[1]/100*current[1]/10;
  7189  0465  0021               	movlb	1	; select bank1
  7190  0466  0844               	movf	((_current+1)^(0+128)+2),w
  7191  0467  00F9               	movwf	___awtoft@c+1
  7192  0468  0843               	movf	(_current^(0+128)+2),w
  7193  0469  00F8               	movwf	___awtoft@c
  7194  046A  3195  2568  3182   	fcall	___awtoft
  7195  046D  0878               	movf	?___awtoft,w
  7196  046E  0020               	movlb	0	; select bank0
  7197  046F  00B0               	movwf	___ftmul@f1
  7198  0470  0879               	movf	?___awtoft+1,w
  7199  0471  00B1               	movwf	___ftmul@f1+1
  7200  0472  087A               	movf	?___awtoft+2,w
  7201  0473  00B2               	movwf	___ftmul@f1+2
  7202  0474  3000               	movlw	0
  7203  0475  00A0               	movwf	___ftdiv@f2
  7204  0476  30C8               	movlw	200
  7205  0477  00A1               	movwf	___ftdiv@f2+1
  7206  0478  3042               	movlw	66
  7207  0479  00A2               	movwf	___ftdiv@f2+2
  7208  047A  0021               	movlb	1	; select bank1
  7209  047B  084C               	movf	((_voltage+1)^(0+128)+2),w
  7210  047C  00F9               	movwf	___awtoft@c+1
  7211  047D  084B               	movf	(_voltage^(0+128)+2),w
  7212  047E  00F8               	movwf	___awtoft@c
  7213  047F  3195  2568  3182   	fcall	___awtoft
  7214  0482  0878               	movf	?___awtoft,w
  7215  0483  0020               	movlb	0	; select bank0
  7216  0484  00A3               	movwf	___ftdiv@f1
  7217  0485  0879               	movf	?___awtoft+1,w
  7218  0486  00A4               	movwf	___ftdiv@f1+1
  7219  0487  087A               	movf	?___awtoft+2,w
  7220  0488  00A5               	movwf	___ftdiv@f1+2
  7221  0489  318C  2444  3182   	fcall	___ftdiv
  7222  048C  0020               	movlb	0	; select bank0
  7223  048D  0820               	movf	?___ftdiv,w
  7224  048E  00B3               	movwf	___ftmul@f2
  7225  048F  0821               	movf	?___ftdiv+1,w
  7226  0490  00B4               	movwf	___ftmul@f2+1
  7227  0491  0822               	movf	?___ftdiv+2,w
  7228  0492  00B5               	movwf	___ftmul@f2+2
  7229  0493  318D  259D  3182   	fcall	___ftmul
  7230  0496  0020               	movlb	0	; select bank0
  7231  0497  0830               	movf	?___ftmul,w
  7232  0498  0021               	movlb	1	; select bank1
  7233  0499  00AB               	movwf	_main$1291^(0+128)
  7234  049A  0020               	movlb	0	; select bank0
  7235  049B  0831               	movf	?___ftmul+1,w
  7236  049C  0021               	movlb	1	; select bank1
  7237  049D  00AC               	movwf	(_main$1291+1)^(0+128)
  7238  049E  0020               	movlb	0	; select bank0
  7239  049F  0832               	movf	?___ftmul+2,w
  7240  04A0  0021               	movlb	1	; select bank1
  7241  04A1  00AD               	movwf	(_main$1291+2)^(0+128)
  7242                           
  7243                           ;main.c: 196: efficiency=(float)voltage[1]/100*current[1]/10;
  7244  04A2  3000               	movlw	0
  7245  04A3  0020               	movlb	0	; select bank0
  7246  04A4  00A0               	movwf	___ftdiv@f2
  7247  04A5  3020               	movlw	32
  7248  04A6  00A1               	movwf	___ftdiv@f2+1
  7249  04A7  3041               	movlw	65
  7250  04A8  00A2               	movwf	___ftdiv@f2+2
  7251  04A9  0021               	movlb	1	; select bank1
  7252  04AA  082B               	movf	_main$1291^(0+128),w
  7253  04AB  0020               	movlb	0	; select bank0
  7254  04AC  00A3               	movwf	___ftdiv@f1
  7255  04AD  0021               	movlb	1	; select bank1
  7256  04AE  082C               	movf	(_main$1291+1)^(0+128),w
  7257  04AF  0020               	movlb	0	; select bank0
  7258  04B0  00A4               	movwf	___ftdiv@f1+1
  7259  04B1  0021               	movlb	1	; select bank1
  7260  04B2  082D               	movf	(_main$1291+2)^(0+128),w
  7261  04B3  0020               	movlb	0	; select bank0
  7262  04B4  00A5               	movwf	___ftdiv@f1+2
  7263  04B5  318C  2444  3182   	fcall	___ftdiv
  7264  04B8  0020               	movlb	0	; select bank0
  7265  04B9  0820               	movf	?___ftdiv,w
  7266  04BA  0021               	movlb	1	; select bank1
  7267  04BB  00B4               	movwf	main@efficiency^(0+128)
  7268  04BC  0020               	movlb	0	; select bank0
  7269  04BD  0821               	movf	?___ftdiv+1,w
  7270  04BE  0021               	movlb	1	; select bank1
  7271  04BF  00B5               	movwf	(main@efficiency+1)^(0+128)
  7272  04C0  0020               	movlb	0	; select bank0
  7273  04C1  0822               	movf	?___ftdiv+2,w
  7274  04C2  0021               	movlb	1	; select bank1
  7275  04C3  00B6               	movwf	(main@efficiency+2)^(0+128)
  7276                           
  7277                           ;main.c: 197: efficiency/=(float)voltage[0]/100*current[0]/10;
  7278  04C4  084A               	movf	(_voltage+1)^(0+128),w
  7279  04C5  00F9               	movwf	___awtoft@c+1
  7280  04C6  0849               	movf	_voltage^(0+128),w
  7281  04C7  00F8               	movwf	___awtoft@c
  7282  04C8  3195  2568  3182   	fcall	___awtoft
  7283  04CB  0878               	movf	?___awtoft,w
  7284  04CC  0020               	movlb	0	; select bank0
  7285  04CD  00A3               	movwf	___ftdiv@f1
  7286  04CE  0879               	movf	?___awtoft+1,w
  7287  04CF  00A4               	movwf	___ftdiv@f1+1
  7288  04D0  087A               	movf	?___awtoft+2,w
  7289  04D1  00A5               	movwf	___ftdiv@f1+2
  7290  04D2  3000               	movlw	0
  7291  04D3  00A0               	movwf	___ftdiv@f2
  7292  04D4  30C8               	movlw	200
  7293  04D5  00A1               	movwf	___ftdiv@f2+1
  7294  04D6  3042               	movlw	66
  7295  04D7  00A2               	movwf	___ftdiv@f2+2
  7296  04D8  318C  2444  3182   	fcall	___ftdiv
  7297  04DB  0020               	movlb	0	; select bank0
  7298  04DC  0820               	movf	?___ftdiv,w
  7299  04DD  00B3               	movwf	___ftmul@f2
  7300  04DE  0821               	movf	?___ftdiv+1,w
  7301  04DF  00B4               	movwf	___ftmul@f2+1
  7302  04E0  0822               	movf	?___ftdiv+2,w
  7303  04E1  00B5               	movwf	___ftmul@f2+2
  7304  04E2  0021               	movlb	1	; select bank1
  7305  04E3  0842               	movf	(_current+1)^(0+128),w
  7306  04E4  00F9               	movwf	___awtoft@c+1
  7307  04E5  0841               	movf	_current^(0+128),w
  7308  04E6  00F8               	movwf	___awtoft@c
  7309  04E7  3195  2568  3182   	fcall	___awtoft
  7310  04EA  0878               	movf	?___awtoft,w
  7311  04EB  0020               	movlb	0	; select bank0
  7312  04EC  00B0               	movwf	___ftmul@f1
  7313  04ED  0879               	movf	?___awtoft+1,w
  7314  04EE  00B1               	movwf	___ftmul@f1+1
  7315  04EF  087A               	movf	?___awtoft+2,w
  7316  04F0  00B2               	movwf	___ftmul@f1+2
  7317  04F1  318D  259D  3182   	fcall	___ftmul
  7318  04F4  0020               	movlb	0	; select bank0
  7319  04F5  0830               	movf	?___ftmul,w
  7320  04F6  0021               	movlb	1	; select bank1
  7321  04F7  00AB               	movwf	_main$1291^(0+128)
  7322  04F8  0020               	movlb	0	; select bank0
  7323  04F9  0831               	movf	?___ftmul+1,w
  7324  04FA  0021               	movlb	1	; select bank1
  7325  04FB  00AC               	movwf	(_main$1291+1)^(0+128)
  7326  04FC  0020               	movlb	0	; select bank0
  7327  04FD  0832               	movf	?___ftmul+2,w
  7328  04FE  0021               	movlb	1	; select bank1
  7329  04FF  00AD               	movwf	(_main$1291+2)^(0+128)
  7330                           
  7331                           ;main.c: 197: efficiency/=(float)voltage[0]/100*current[0]/10;
  7332  0500  082B               	movf	_main$1291^(0+128),w
  7333  0501  0020               	movlb	0	; select bank0
  7334  0502  00A3               	movwf	___ftdiv@f1
  7335  0503  0021               	movlb	1	; select bank1
  7336  0504  082C               	movf	(_main$1291+1)^(0+128),w
  7337  0505  0020               	movlb	0	; select bank0
  7338  0506  00A4               	movwf	___ftdiv@f1+1
  7339  0507  0021               	movlb	1	; select bank1
  7340  0508  082D               	movf	(_main$1291+2)^(0+128),w
  7341  0509  0020               	movlb	0	; select bank0
  7342  050A  00A5               	movwf	___ftdiv@f1+2
  7343  050B  3000               	movlw	0
  7344  050C  00A0               	movwf	___ftdiv@f2
  7345  050D  3020               	movlw	32
  7346  050E  00A1               	movwf	___ftdiv@f2+1
  7347  050F  3041               	movlw	65
  7348  0510  00A2               	movwf	___ftdiv@f2+2
  7349  0511  318C  2444  3182   	fcall	___ftdiv
  7350  0514  0020               	movlb	0	; select bank0
  7351  0515  0820               	movf	?___ftdiv,w
  7352  0516  0021               	movlb	1	; select bank1
  7353  0517  00A0               	movwf	_main$1292^(0+128)
  7354  0518  0020               	movlb	0	; select bank0
  7355  0519  0821               	movf	?___ftdiv+1,w
  7356  051A  0021               	movlb	1	; select bank1
  7357  051B  00A1               	movwf	(_main$1292+1)^(0+128)
  7358  051C  0020               	movlb	0	; select bank0
  7359  051D  0822               	movf	?___ftdiv+2,w
  7360  051E  0021               	movlb	1	; select bank1
  7361  051F  00A2               	movwf	(_main$1292+2)^(0+128)
  7362                           
  7363                           ;main.c: 197: efficiency/=(float)voltage[0]/100*current[0]/10;
  7364  0520  0820               	movf	_main$1292^(0+128),w
  7365  0521  0020               	movlb	0	; select bank0
  7366  0522  00A0               	movwf	___ftdiv@f2
  7367  0523  0021               	movlb	1	; select bank1
  7368  0524  0821               	movf	(_main$1292+1)^(0+128),w
  7369  0525  0020               	movlb	0	; select bank0
  7370  0526  00A1               	movwf	___ftdiv@f2+1
  7371  0527  0021               	movlb	1	; select bank1
  7372  0528  0822               	movf	(_main$1292+2)^(0+128),w
  7373  0529  0020               	movlb	0	; select bank0
  7374  052A  00A2               	movwf	___ftdiv@f2+2
  7375  052B  0021               	movlb	1	; select bank1
  7376  052C  0834               	movf	main@efficiency^(0+128),w
  7377  052D  0020               	movlb	0	; select bank0
  7378  052E  00A3               	movwf	___ftdiv@f1
  7379  052F  0021               	movlb	1	; select bank1
  7380  0530  0835               	movf	(main@efficiency+1)^(0+128),w
  7381  0531  0020               	movlb	0	; select bank0
  7382  0532  00A4               	movwf	___ftdiv@f1+1
  7383  0533  0021               	movlb	1	; select bank1
  7384  0534  0836               	movf	(main@efficiency+2)^(0+128),w
  7385  0535  0020               	movlb	0	; select bank0
  7386  0536  00A5               	movwf	___ftdiv@f1+2
  7387  0537  318C  2444  3182   	fcall	___ftdiv
  7388  053A  0020               	movlb	0	; select bank0
  7389  053B  0820               	movf	?___ftdiv,w
  7390  053C  0021               	movlb	1	; select bank1
  7391  053D  00B4               	movwf	main@efficiency^(0+128)
  7392  053E  0020               	movlb	0	; select bank0
  7393  053F  0821               	movf	?___ftdiv+1,w
  7394  0540  0021               	movlb	1	; select bank1
  7395  0541  00B5               	movwf	(main@efficiency+1)^(0+128)
  7396  0542  0020               	movlb	0	; select bank0
  7397  0543  0822               	movf	?___ftdiv+2,w
  7398  0544  0021               	movlb	1	; select bank1
  7399  0545  00B6               	movwf	(main@efficiency+2)^(0+128)
  7400                           
  7401                           ;main.c: 198: efficiency*=100;
  7402  0546  3000               	movlw	0
  7403  0547  0020               	movlb	0	; select bank0
  7404  0548  00B0               	movwf	___ftmul@f1
  7405  0549  30C8               	movlw	200
  7406  054A  00B1               	movwf	___ftmul@f1+1
  7407  054B  3042               	movlw	66
  7408  054C  00B2               	movwf	___ftmul@f1+2
  7409  054D  0021               	movlb	1	; select bank1
  7410  054E  0834               	movf	main@efficiency^(0+128),w
  7411  054F  0020               	movlb	0	; select bank0
  7412  0550  00B3               	movwf	___ftmul@f2
  7413  0551  0021               	movlb	1	; select bank1
  7414  0552  0835               	movf	(main@efficiency+1)^(0+128),w
  7415  0553  0020               	movlb	0	; select bank0
  7416  0554  00B4               	movwf	___ftmul@f2+1
  7417  0555  0021               	movlb	1	; select bank1
  7418  0556  0836               	movf	(main@efficiency+2)^(0+128),w
  7419  0557  0020               	movlb	0	; select bank0
  7420  0558  00B5               	movwf	___ftmul@f2+2
  7421  0559  318D  259D  3182   	fcall	___ftmul
  7422  055C  0020               	movlb	0	; select bank0
  7423  055D  0830               	movf	?___ftmul,w
  7424  055E  0021               	movlb	1	; select bank1
  7425  055F  00B4               	movwf	main@efficiency^(0+128)
  7426  0560  0020               	movlb	0	; select bank0
  7427  0561  0831               	movf	?___ftmul+1,w
  7428  0562  0021               	movlb	1	; select bank1
  7429  0563  00B5               	movwf	(main@efficiency+1)^(0+128)
  7430  0564  0020               	movlb	0	; select bank0
  7431  0565  0832               	movf	?___ftmul+2,w
  7432  0566  0021               	movlb	1	; select bank1
  7433  0567  00B6               	movwf	(main@efficiency+2)^(0+128)
  7434                           
  7435                           ;main.c: 199: LCDWriteCharacter(' ');
  7436  0568  3020               	movlw	32
  7437  0569  3189  2138  3182   	fcall	_LCDWriteCharacter
  7438                           
  7439                           ;main.c: 212: { gotoXY(0,0); LCDWriteInt(batteryTemp,4, 1, 0);};
  7440  056C  01F5               	clrf	gotoXY@y
  7441  056D  3000               	movlw	0
  7442  056E  3194  246A  3182   	fcall	_gotoXY
  7443  0571  0021               	movlb	1	; select bank1
  7444  0572  0826               	movf	(main@batteryTemp+1)^(0+128),w
  7445  0573  0020               	movlb	0	; select bank0
  7446  0574  00A9               	movwf	LCDWriteInt@value+1
  7447  0575  0021               	movlb	1	; select bank1
  7448  0576  0825               	movf	main@batteryTemp^(0+128),w
  7449  0577  0020               	movlb	0	; select bank0
  7450  0578  00A8               	movwf	LCDWriteInt@value
  7451  0579  3004               	movlw	4
  7452  057A  00E8               	movwf	??_main
  7453  057B  0868               	movf	??_main,w
  7454  057C  00AA               	movwf	LCDWriteInt@fieldLength
  7455  057D  01AB               	clrf	LCDWriteInt@numPlaces
  7456  057E  0AAB               	incf	LCDWriteInt@numPlaces,f
  7457  057F  01AC               	clrf	LCDWriteInt@sign
  7458  0580  318E  2651  3182   	fcall	_LCDWriteInt
  7459                           
  7460                           ;main.c: 215: { gotoXY(28,0); LCDWriteInt(analogs[4],4, 0, 0);};
  7461  0583  01F5               	clrf	gotoXY@y
  7462  0584  301C               	movlw	28
  7463  0585  3194  246A  3182   	fcall	_gotoXY
  7464  0588  0022               	movlb	2	; select bank2
  7465  0589  0849               	movf	((_analogs+1)^(0+256)+8),w
  7466  058A  0020               	movlb	0	; select bank0
  7467  058B  00A9               	movwf	LCDWriteInt@value+1
  7468  058C  0022               	movlb	2	; select bank2
  7469  058D  0848               	movf	(_analogs^(0+256)+8),w
  7470  058E  0020               	movlb	0	; select bank0
  7471  058F  00A8               	movwf	LCDWriteInt@value
  7472  0590  3004               	movlw	4
  7473  0591  00E8               	movwf	??_main
  7474  0592  0868               	movf	??_main,w
  7475  0593  00AA               	movwf	LCDWriteInt@fieldLength
  7476  0594  01AB               	clrf	LCDWriteInt@numPlaces
  7477  0595  01AC               	clrf	LCDWriteInt@sign
  7478  0596  318E  2651  3182   	fcall	_LCDWriteInt
  7479                           
  7480                           ;main.c: 216: { gotoXY(48,0); LCDWriteInt(analogs[5],4, 0, 0);};
  7481  0599  01F5               	clrf	gotoXY@y
  7482  059A  3030               	movlw	48
  7483  059B  3194  246A  3182   	fcall	_gotoXY
  7484  059E  0022               	movlb	2	; select bank2
  7485  059F  084B               	movf	((_analogs+1)^(0+256)+10),w
  7486  05A0  0020               	movlb	0	; select bank0
  7487  05A1  00A9               	movwf	LCDWriteInt@value+1
  7488  05A2  0022               	movlb	2	; select bank2
  7489  05A3  084A               	movf	(_analogs^(0+256)+10),w
  7490  05A4  0020               	movlb	0	; select bank0
  7491  05A5  00A8               	movwf	LCDWriteInt@value
  7492  05A6  3004               	movlw	4
  7493  05A7  00E8               	movwf	??_main
  7494  05A8  0868               	movf	??_main,w
  7495  05A9  00AA               	movwf	LCDWriteInt@fieldLength
  7496  05AA  01AB               	clrf	LCDWriteInt@numPlaces
  7497  05AB  01AC               	clrf	LCDWriteInt@sign
  7498  05AC  318E  2651  3182   	fcall	_LCDWriteInt
  7499                           
  7500                           ;main.c: 217: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7501  05AF  01F5               	clrf	gotoXY@y
  7502  05B0  0AF5               	incf	gotoXY@y,f
  7503  05B1  3000               	movlw	0
  7504  05B2  3194  246A  3182   	fcall	_gotoXY
  7505  05B5  0021               	movlb	1	; select bank1
  7506  05B6  084A               	movf	(_voltage+1)^(0+128),w
  7507  05B7  0020               	movlb	0	; select bank0
  7508  05B8  00A9               	movwf	LCDWriteInt@value+1
  7509  05B9  0021               	movlb	1	; select bank1
  7510  05BA  0849               	movf	_voltage^(0+128),w
  7511  05BB  0020               	movlb	0	; select bank0
  7512  05BC  00A8               	movwf	LCDWriteInt@value
  7513  05BD  3004               	movlw	4
  7514  05BE  00E8               	movwf	??_main
  7515  05BF  0868               	movf	??_main,w
  7516  05C0  00AA               	movwf	LCDWriteInt@fieldLength
  7517  05C1  3002               	movlw	2
  7518  05C2  00E9               	movwf	??_main+1
  7519  05C3  0869               	movf	??_main+1,w
  7520  05C4  00AB               	movwf	LCDWriteInt@numPlaces
  7521  05C5  01AC               	clrf	LCDWriteInt@sign
  7522  05C6  318E  2651  3182   	fcall	_LCDWriteInt
  7523                           
  7524                           ;main.c: 218: LCDWriteCharacter('V');
  7525  05C9  3056               	movlw	86
  7526  05CA  3189  2138  3182   	fcall	_LCDWriteCharacter
  7527                           
  7528                           ;main.c: 219: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7529  05CD  01F5               	clrf	gotoXY@y
  7530  05CE  0AF5               	incf	gotoXY@y,f
  7531  05CF  301C               	movlw	28
  7532  05D0  3194  246A  3182   	fcall	_gotoXY
  7533  05D3  0021               	movlb	1	; select bank1
  7534  05D4  0842               	movf	(_current+1)^(0+128),w
  7535  05D5  0020               	movlb	0	; select bank0
  7536  05D6  00A9               	movwf	LCDWriteInt@value+1
  7537  05D7  0021               	movlb	1	; select bank1
  7538  05D8  0841               	movf	_current^(0+128),w
  7539  05D9  0020               	movlb	0	; select bank0
  7540  05DA  00A8               	movwf	LCDWriteInt@value
  7541  05DB  3003               	movlw	3
  7542  05DC  00E8               	movwf	??_main
  7543  05DD  0868               	movf	??_main,w
  7544  05DE  00AA               	movwf	LCDWriteInt@fieldLength
  7545  05DF  01AB               	clrf	LCDWriteInt@numPlaces
  7546  05E0  0AAB               	incf	LCDWriteInt@numPlaces,f
  7547  05E1  01AC               	clrf	LCDWriteInt@sign
  7548  05E2  318E  2651  3182   	fcall	_LCDWriteInt
  7549                           
  7550                           ;main.c: 220: LCDWriteCharacter('A');
  7551  05E5  3041               	movlw	65
  7552  05E6  3189  2138  3182   	fcall	_LCDWriteCharacter
  7553                           
  7554                           ;main.c: 222: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7555  05E9  3002               	movlw	2
  7556  05EA  0020               	movlb	0	; select bank0
  7557  05EB  00E8               	movwf	??_main
  7558  05EC  0868               	movf	??_main,w
  7559  05ED  00F5               	movwf	gotoXY@y
  7560  05EE  3000               	movlw	0
  7561  05EF  3194  246A  3182   	fcall	_gotoXY
  7562  05F2  0021               	movlb	1	; select bank1
  7563  05F3  084C               	movf	((_voltage+1)^(0+128)+2),w
  7564  05F4  0020               	movlb	0	; select bank0
  7565  05F5  00A9               	movwf	LCDWriteInt@value+1
  7566  05F6  0021               	movlb	1	; select bank1
  7567  05F7  084B               	movf	(_voltage^(0+128)+2),w
  7568  05F8  0020               	movlb	0	; select bank0
  7569  05F9  00A8               	movwf	LCDWriteInt@value
  7570  05FA  3004               	movlw	4
  7571  05FB  00E8               	movwf	??_main
  7572  05FC  0868               	movf	??_main,w
  7573  05FD  00AA               	movwf	LCDWriteInt@fieldLength
  7574  05FE  3002               	movlw	2
  7575  05FF  00E9               	movwf	??_main+1
  7576  0600  0869               	movf	??_main+1,w
  7577  0601  00AB               	movwf	LCDWriteInt@numPlaces
  7578  0602  01AC               	clrf	LCDWriteInt@sign
  7579  0603  318E  2651  3182   	fcall	_LCDWriteInt
  7580                           
  7581                           ;main.c: 223: LCDWriteCharacter('V');
  7582  0606  3056               	movlw	86
  7583  0607  3189  2138  3182   	fcall	_LCDWriteCharacter
  7584                           
  7585                           ;main.c: 224: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7586  060A  3002               	movlw	2
  7587  060B  0020               	movlb	0	; select bank0
  7588  060C  00E8               	movwf	??_main
  7589  060D  0868               	movf	??_main,w
  7590  060E  00F5               	movwf	gotoXY@y
  7591  060F  301C               	movlw	28
  7592  0610  3194  246A  3182   	fcall	_gotoXY
  7593  0613  0021               	movlb	1	; select bank1
  7594  0614  0844               	movf	((_current+1)^(0+128)+2),w
  7595  0615  0020               	movlb	0	; select bank0
  7596  0616  00A9               	movwf	LCDWriteInt@value+1
  7597  0617  0021               	movlb	1	; select bank1
  7598  0618  0843               	movf	(_current^(0+128)+2),w
  7599  0619  0020               	movlb	0	; select bank0
  7600  061A  00A8               	movwf	LCDWriteInt@value
  7601  061B  3003               	movlw	3
  7602  061C  00E8               	movwf	??_main
  7603  061D  0868               	movf	??_main,w
  7604  061E  00AA               	movwf	LCDWriteInt@fieldLength
  7605  061F  01AB               	clrf	LCDWriteInt@numPlaces
  7606  0620  0AAB               	incf	LCDWriteInt@numPlaces,f
  7607  0621  01AC               	clrf	LCDWriteInt@sign
  7608  0622  318E  2651  3182   	fcall	_LCDWriteInt
  7609                           
  7610                           ;main.c: 225: LCDWriteCharacter('A');
  7611  0625  3041               	movlw	65
  7612  0626  3189  2138  3182   	fcall	_LCDWriteCharacter
  7613                           
  7614                           ;main.c: 226: { gotoXY(56,2); LCDWriteInt(Vref,4, 2, 0);};
  7615  0629  3002               	movlw	2
  7616  062A  0020               	movlb	0	; select bank0
  7617  062B  00E8               	movwf	??_main
  7618  062C  0868               	movf	??_main,w
  7619  062D  00F5               	movwf	gotoXY@y
  7620  062E  3038               	movlw	56
  7621  062F  3194  246A  3182   	fcall	_gotoXY
  7622  0632  0021               	movlb	1	; select bank1
  7623  0633  0862               	movf	(_Vref+1)^(0+128),w
  7624  0634  0020               	movlb	0	; select bank0
  7625  0635  00A9               	movwf	LCDWriteInt@value+1
  7626  0636  0021               	movlb	1	; select bank1
  7627  0637  0861               	movf	_Vref^(0+128),w
  7628  0638  0020               	movlb	0	; select bank0
  7629  0639  00A8               	movwf	LCDWriteInt@value
  7630  063A  3004               	movlw	4
  7631  063B  00E8               	movwf	??_main
  7632  063C  0868               	movf	??_main,w
  7633  063D  00AA               	movwf	LCDWriteInt@fieldLength
  7634  063E  3002               	movlw	2
  7635  063F  00E9               	movwf	??_main+1
  7636  0640  0869               	movf	??_main+1,w
  7637  0641  00AB               	movwf	LCDWriteInt@numPlaces
  7638  0642  01AC               	clrf	LCDWriteInt@sign
  7639  0643  318E  2651  3182   	fcall	_LCDWriteInt
  7640                           
  7641                           ;main.c: 227: LCDWriteCharacter('V');
  7642  0646  3056               	movlw	86
  7643  0647  3189  2138  3182   	fcall	_LCDWriteCharacter
  7644                           
  7645                           ;main.c: 229: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7646  064A  3003               	movlw	3
  7647  064B  0020               	movlb	0	; select bank0
  7648  064C  00E8               	movwf	??_main
  7649  064D  0868               	movf	??_main,w
  7650  064E  00F5               	movwf	gotoXY@y
  7651  064F  3000               	movlw	0
  7652  0650  3194  246A  3182   	fcall	_gotoXY
  7653  0653  3064               	movlw	100
  7654  0654  00F0               	movwf	___awdiv@divisor
  7655  0655  3000               	movlw	0
  7656  0656  00F1               	movwf	___awdiv@divisor+1
  7657  0657  0021               	movlb	1	; select bank1
  7658  0658  084A               	movf	(_voltage+1)^(0+128),w
  7659  0659  00F3               	movwf	___awdiv@dividend+1
  7660  065A  0849               	movf	_voltage^(0+128),w
  7661  065B  00F2               	movwf	___awdiv@dividend
  7662  065C  3197  27AF  3182   	fcall	___awdiv
  7663  065F  0871               	movf	?___awdiv+1,w
  7664  0660  00FA               	movwf	___wmul@multiplier+1
  7665  0661  0870               	movf	?___awdiv,w
  7666  0662  00F9               	movwf	___wmul@multiplier
  7667  0663  0021               	movlb	1	; select bank1
  7668  0664  0842               	movf	(_current+1)^(0+128),w
  7669  0665  00FC               	movwf	___wmul@multiplicand+1
  7670  0666  0841               	movf	_current^(0+128),w
  7671  0667  00FB               	movwf	___wmul@multiplicand
  7672  0668  3194  24EE  3182   	fcall	___wmul
  7673  066B  087A               	movf	?___wmul+1,w
  7674  066C  0021               	movlb	1	; select bank1
  7675  066D  00B1               	movwf	(_main$1293+1)^(0+128)
  7676  066E  0879               	movf	?___wmul,w
  7677  066F  00B0               	movwf	_main$1293^(0+128)
  7678  0670  300A               	movlw	10
  7679  0671  00F0               	movwf	___awdiv@divisor
  7680  0672  3000               	movlw	0
  7681  0673  00F1               	movwf	___awdiv@divisor+1
  7682  0674  0831               	movf	(_main$1293+1)^(0+128),w
  7683  0675  00F3               	movwf	___awdiv@dividend+1
  7684  0676  0830               	movf	_main$1293^(0+128),w
  7685  0677  00F2               	movwf	___awdiv@dividend
  7686  0678  3197  27AF  3182   	fcall	___awdiv
  7687  067B  0871               	movf	?___awdiv+1,w
  7688  067C  0021               	movlb	1	; select bank1
  7689  067D  00B3               	movwf	(_main$1294+1)^(0+128)
  7690  067E  0870               	movf	?___awdiv,w
  7691  067F  00B2               	movwf	_main$1294^(0+128)
  7692  0680  0833               	movf	(_main$1294+1)^(0+128),w
  7693  0681  0020               	movlb	0	; select bank0
  7694  0682  00A9               	movwf	LCDWriteInt@value+1
  7695  0683  0021               	movlb	1	; select bank1
  7696  0684  0832               	movf	_main$1294^(0+128),w
  7697  0685  0020               	movlb	0	; select bank0
  7698  0686  00A8               	movwf	LCDWriteInt@value
  7699  0687  3003               	movlw	3
  7700  0688  00E8               	movwf	??_main
  7701  0689  0868               	movf	??_main,w
  7702  068A  00AA               	movwf	LCDWriteInt@fieldLength
  7703  068B  01AB               	clrf	LCDWriteInt@numPlaces
  7704  068C  01AC               	clrf	LCDWriteInt@sign
  7705  068D  318E  2651  3182   	fcall	_LCDWriteInt
  7706                           
  7707                           ;main.c: 230: LCDWriteCharacter('W');
  7708  0690  3057               	movlw	87
  7709  0691  3189  2138  3182   	fcall	_LCDWriteCharacter
  7710                           
  7711                           ;main.c: 231: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7712  0694  3003               	movlw	3
  7713  0695  0020               	movlb	0	; select bank0
  7714  0696  00E8               	movwf	??_main
  7715  0697  0868               	movf	??_main,w
  7716  0698  00F5               	movwf	gotoXY@y
  7717  0699  301C               	movlw	28
  7718  069A  3194  246A  3182   	fcall	_gotoXY
  7719  069D  0021               	movlb	1	; select bank1
  7720  069E  086B               	movf	_battery_state^(0+128),w
  7721  069F  0020               	movlb	0	; select bank0
  7722  06A0  00E8               	movwf	??_main
  7723  06A1  01E9               	clrf	??_main+1
  7724  06A2  0868               	movf	??_main,w
  7725  06A3  00A8               	movwf	LCDWriteInt@value
  7726  06A4  0869               	movf	??_main+1,w
  7727  06A5  00A9               	movwf	LCDWriteInt@value+1
  7728  06A6  01AA               	clrf	LCDWriteInt@fieldLength
  7729  06A7  0AAA               	incf	LCDWriteInt@fieldLength,f
  7730  06A8  01AB               	clrf	LCDWriteInt@numPlaces
  7731  06A9  01AC               	clrf	LCDWriteInt@sign
  7732  06AA  318E  2651  3182   	fcall	_LCDWriteInt
  7733                           
  7734                           ;main.c: 232: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7735  06AD  3003               	movlw	3
  7736  06AE  0020               	movlb	0	; select bank0
  7737  06AF  00E8               	movwf	??_main
  7738  06B0  0868               	movf	??_main,w
  7739  06B1  00F5               	movwf	gotoXY@y
  7740  06B2  3024               	movlw	36
  7741  06B3  3194  246A  3182   	fcall	_gotoXY
  7742  06B6  0021               	movlb	1	; select bank1
  7743  06B7  086D               	movf	_Imode0^(0+128),w
  7744  06B8  0020               	movlb	0	; select bank0
  7745  06B9  00A8               	movwf	LCDWriteInt@value
  7746  06BA  01A9               	clrf	LCDWriteInt@value+1
  7747  06BB  1BA8               	btfsc	LCDWriteInt@value,7
  7748  06BC  03A9               	decf	LCDWriteInt@value+1,f
  7749  06BD  01AA               	clrf	LCDWriteInt@fieldLength
  7750  06BE  0AAA               	incf	LCDWriteInt@fieldLength,f
  7751  06BF  01AB               	clrf	LCDWriteInt@numPlaces
  7752  06C0  01AC               	clrf	LCDWriteInt@sign
  7753  06C1  318E  2651  3182   	fcall	_LCDWriteInt
  7754                           
  7755                           ;main.c: 233: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7756  06C4  3003               	movlw	3
  7757  06C5  0020               	movlb	0	; select bank0
  7758  06C6  00E8               	movwf	??_main
  7759  06C7  0868               	movf	??_main,w
  7760  06C8  00F5               	movwf	gotoXY@y
  7761  06C9  3030               	movlw	48
  7762  06CA  3194  246A  3182   	fcall	_gotoXY
  7763  06CD  0021               	movlb	1	; select bank1
  7764  06CE  0864               	movf	(_Iref+1)^(0+128),w
  7765  06CF  0020               	movlb	0	; select bank0
  7766  06D0  00A9               	movwf	LCDWriteInt@value+1
  7767  06D1  0021               	movlb	1	; select bank1
  7768  06D2  0863               	movf	_Iref^(0+128),w
  7769  06D3  0020               	movlb	0	; select bank0
  7770  06D4  00A8               	movwf	LCDWriteInt@value
  7771  06D5  3003               	movlw	3
  7772  06D6  00E8               	movwf	??_main
  7773  06D7  0868               	movf	??_main,w
  7774  06D8  00AA               	movwf	LCDWriteInt@fieldLength
  7775  06D9  01AB               	clrf	LCDWriteInt@numPlaces
  7776  06DA  0AAB               	incf	LCDWriteInt@numPlaces,f
  7777  06DB  01AC               	clrf	LCDWriteInt@sign
  7778  06DC  318E  2651  3182   	fcall	_LCDWriteInt
  7779                           
  7780                           ;main.c: 234: LCDWriteCharacter('A');
  7781  06DF  3041               	movlw	65
  7782  06E0  3189  2138  3182   	fcall	_LCDWriteCharacter
  7783                           
  7784                           ;main.c: 236: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7785  06E3  3004               	movlw	4
  7786  06E4  0020               	movlb	0	; select bank0
  7787  06E5  00E8               	movwf	??_main
  7788  06E6  0868               	movf	??_main,w
  7789  06E7  00F5               	movwf	gotoXY@y
  7790  06E8  3000               	movlw	0
  7791  06E9  3194  246A  3182   	fcall	_gotoXY
  7792  06EC  3064               	movlw	100
  7793  06ED  00F0               	movwf	___awdiv@divisor
  7794  06EE  3000               	movlw	0
  7795  06EF  00F1               	movwf	___awdiv@divisor+1
  7796  06F0  0021               	movlb	1	; select bank1
  7797  06F1  084C               	movf	((_voltage+1)^(0+128)+2),w
  7798  06F2  00F3               	movwf	___awdiv@dividend+1
  7799  06F3  084B               	movf	(_voltage^(0+128)+2),w
  7800  06F4  00F2               	movwf	___awdiv@dividend
  7801  06F5  3197  27AF  3182   	fcall	___awdiv
  7802  06F8  0871               	movf	?___awdiv+1,w
  7803  06F9  00FA               	movwf	___wmul@multiplier+1
  7804  06FA  0870               	movf	?___awdiv,w
  7805  06FB  00F9               	movwf	___wmul@multiplier
  7806  06FC  0021               	movlb	1	; select bank1
  7807  06FD  0844               	movf	((_current+1)^(0+128)+2),w
  7808  06FE  00FC               	movwf	___wmul@multiplicand+1
  7809  06FF  0843               	movf	(_current^(0+128)+2),w
  7810  0700  00FB               	movwf	___wmul@multiplicand
  7811  0701  3194  24EE  3182   	fcall	___wmul
  7812  0704  087A               	movf	?___wmul+1,w
  7813  0705  0021               	movlb	1	; select bank1
  7814  0706  00B1               	movwf	(_main$1293+1)^(0+128)
  7815  0707  0879               	movf	?___wmul,w
  7816  0708  00B0               	movwf	_main$1293^(0+128)
  7817  0709  300A               	movlw	10
  7818  070A  00F0               	movwf	___awdiv@divisor
  7819  070B  3000               	movlw	0
  7820  070C  00F1               	movwf	___awdiv@divisor+1
  7821  070D  0831               	movf	(_main$1293+1)^(0+128),w
  7822  070E  00F3               	movwf	___awdiv@dividend+1
  7823  070F  0830               	movf	_main$1293^(0+128),w
  7824  0710  00F2               	movwf	___awdiv@dividend
  7825  0711  3197  27AF  3182   	fcall	___awdiv
  7826  0714  0871               	movf	?___awdiv+1,w
  7827  0715  0021               	movlb	1	; select bank1
  7828  0716  00B3               	movwf	(_main$1294+1)^(0+128)
  7829  0717  0870               	movf	?___awdiv,w
  7830  0718  00B2               	movwf	_main$1294^(0+128)
  7831  0719  0833               	movf	(_main$1294+1)^(0+128),w
  7832  071A  0020               	movlb	0	; select bank0
  7833  071B  00A9               	movwf	LCDWriteInt@value+1
  7834  071C  0021               	movlb	1	; select bank1
  7835  071D  0832               	movf	_main$1294^(0+128),w
  7836  071E  0020               	movlb	0	; select bank0
  7837  071F  00A8               	movwf	LCDWriteInt@value
  7838  0720  3003               	movlw	3
  7839  0721  00E8               	movwf	??_main
  7840  0722  0868               	movf	??_main,w
  7841  0723  00AA               	movwf	LCDWriteInt@fieldLength
  7842  0724  01AB               	clrf	LCDWriteInt@numPlaces
  7843  0725  01AC               	clrf	LCDWriteInt@sign
  7844  0726  318E  2651  3182   	fcall	_LCDWriteInt
  7845                           
  7846                           ;main.c: 237: LCDWriteCharacter('W');
  7847  0729  3057               	movlw	87
  7848  072A  3189  2138  3182   	fcall	_LCDWriteCharacter
  7849                           
  7850                           ;main.c: 239: LCDWriteCharacter('W');
  7851  072D  3057               	movlw	87
  7852  072E  3189  2138  3182   	fcall	_LCDWriteCharacter
  7853                           
  7854                           ;main.c: 240: { gotoXY(48,4); LCDWriteInt(MPPT0,4, 0, 0);};
  7855  0731  3004               	movlw	4
  7856  0732  0020               	movlb	0	; select bank0
  7857  0733  00E8               	movwf	??_main
  7858  0734  0868               	movf	??_main,w
  7859  0735  00F5               	movwf	gotoXY@y
  7860  0736  3030               	movlw	48
  7861  0737  3194  246A  3182   	fcall	_gotoXY
  7862  073A  0021               	movlb	1	; select bank1
  7863  073B  083D               	movf	(main@MPPT0+1)^(0+128),w
  7864  073C  0020               	movlb	0	; select bank0
  7865  073D  00A9               	movwf	LCDWriteInt@value+1
  7866  073E  0021               	movlb	1	; select bank1
  7867  073F  083C               	movf	main@MPPT0^(0+128),w
  7868  0740  0020               	movlb	0	; select bank0
  7869  0741  00A8               	movwf	LCDWriteInt@value
  7870  0742  3004               	movlw	4
  7871  0743  00E8               	movwf	??_main
  7872  0744  0868               	movf	??_main,w
  7873  0745  00AA               	movwf	LCDWriteInt@fieldLength
  7874  0746  01AB               	clrf	LCDWriteInt@numPlaces
  7875  0747  01AC               	clrf	LCDWriteInt@sign
  7876  0748  318E  2651  3182   	fcall	_LCDWriteInt
  7877                           
  7878                           ;main.c: 248: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  7879  074B  3005               	movlw	5
  7880  074C  0020               	movlb	0	; select bank0
  7881  074D  00E8               	movwf	??_main
  7882  074E  0868               	movf	??_main,w
  7883  074F  00F5               	movwf	gotoXY@y
  7884  0750  3000               	movlw	0
  7885  0751  3194  246A  3182   	fcall	_gotoXY
  7886  0754  0021               	movlb	1	; select bank1
  7887  0755  0840               	movf	(main@dutyCycle6+1)^(0+128),w
  7888  0756  0020               	movlb	0	; select bank0
  7889  0757  00A9               	movwf	LCDWriteInt@value+1
  7890  0758  0021               	movlb	1	; select bank1
  7891  0759  083F               	movf	main@dutyCycle6^(0+128),w
  7892  075A  0020               	movlb	0	; select bank0
  7893  075B  00A8               	movwf	LCDWriteInt@value
  7894  075C  3004               	movlw	4
  7895  075D  00E8               	movwf	??_main
  7896  075E  0868               	movf	??_main,w
  7897  075F  00AA               	movwf	LCDWriteInt@fieldLength
  7898  0760  01AB               	clrf	LCDWriteInt@numPlaces
  7899  0761  01AC               	clrf	LCDWriteInt@sign
  7900  0762  318E  2651  3182   	fcall	_LCDWriteInt
  7901                           
  7902                           ;main.c: 249: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  7903  0765  3005               	movlw	5
  7904  0766  0020               	movlb	0	; select bank0
  7905  0767  00E8               	movwf	??_main
  7906  0768  0868               	movf	??_main,w
  7907  0769  00F5               	movwf	gotoXY@y
  7908  076A  3018               	movlw	24
  7909  076B  3194  246A  3182   	fcall	_gotoXY
  7910  076E  0021               	movlb	1	; select bank1
  7911  076F  083B               	movf	(main@dutyCycle7+1)^(0+128),w
  7912  0770  0020               	movlb	0	; select bank0
  7913  0771  00A9               	movwf	LCDWriteInt@value+1
  7914  0772  0021               	movlb	1	; select bank1
  7915  0773  083A               	movf	main@dutyCycle7^(0+128),w
  7916  0774  0020               	movlb	0	; select bank0
  7917  0775  00A8               	movwf	LCDWriteInt@value
  7918  0776  3004               	movlw	4
  7919  0777  00E8               	movwf	??_main
  7920  0778  0868               	movf	??_main,w
  7921  0779  00AA               	movwf	LCDWriteInt@fieldLength
  7922  077A  01AB               	clrf	LCDWriteInt@numPlaces
  7923  077B  01AC               	clrf	LCDWriteInt@sign
  7924  077C  318E  2651  3182   	fcall	_LCDWriteInt
  7925                           
  7926                           ;main.c: 250: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  7927  077F  3005               	movlw	5
  7928  0780  0020               	movlb	0	; select bank0
  7929  0781  00E8               	movwf	??_main
  7930  0782  0868               	movf	??_main,w
  7931  0783  00F5               	movwf	gotoXY@y
  7932  0784  3030               	movlw	48
  7933  0785  3194  246A  3182   	fcall	_gotoXY
  7934  0788  0021               	movlb	1	; select bank1
  7935  0789  0838               	movf	(main@dutyCycle1+1)^(0+128),w
  7936  078A  0020               	movlb	0	; select bank0
  7937  078B  00A9               	movwf	LCDWriteInt@value+1
  7938  078C  0021               	movlb	1	; select bank1
  7939  078D  0837               	movf	main@dutyCycle1^(0+128),w
  7940  078E  0020               	movlb	0	; select bank0
  7941  078F  00A8               	movwf	LCDWriteInt@value
  7942  0790  3004               	movlw	4
  7943  0791  00E8               	movwf	??_main
  7944  0792  0868               	movf	??_main,w
  7945  0793  00AA               	movwf	LCDWriteInt@fieldLength
  7946  0794  01AB               	clrf	LCDWriteInt@numPlaces
  7947  0795  01AC               	clrf	LCDWriteInt@sign
  7948  0796  318E  2651  3182   	fcall	_LCDWriteInt
  7949                           
  7950                           ;main.c: 251: { gotoXY(74,5); LCDWriteInt(!RB2,1, 0, 0);};
  7951  0799  3005               	movlw	5
  7952  079A  0020               	movlb	0	; select bank0
  7953  079B  00E8               	movwf	??_main
  7954  079C  0868               	movf	??_main,w
  7955  079D  00F5               	movwf	gotoXY@y
  7956  079E  304A               	movlw	74
  7957  079F  3194  246A  3182   	fcall	_gotoXY
  7958  07A2  1003               	clrc
  7959  07A3  0020               	movlb	0	; select bank0
  7960  07A4  1D0D               	btfss	13,2	;volatile
  7961  07A5  1403               	setc
  7962  07A6  3000               	movlw	0
  7963  07A7  3D09               	addwfc	9,w
  7964  07A8  00E8               	movwf	??_main
  7965  07A9  01E9               	clrf	??_main+1
  7966  07AA  0868               	movf	??_main,w
  7967  07AB  00A8               	movwf	LCDWriteInt@value
  7968  07AC  0869               	movf	??_main+1,w
  7969  07AD  00A9               	movwf	LCDWriteInt@value+1
  7970  07AE  01AA               	clrf	LCDWriteInt@fieldLength
  7971  07AF  0AAA               	incf	LCDWriteInt@fieldLength,f
  7972  07B0  01AB               	clrf	LCDWriteInt@numPlaces
  7973  07B1  01AC               	clrf	LCDWriteInt@sign
  7974  07B2  318E  2651  3182   	fcall	_LCDWriteInt
  7975                           
  7976                           ;main.c: 253: if(battery_state > FINISHED)
  7977  07B5  3003               	movlw	3
  7978  07B6  0021               	movlb	1	; select bank1
  7979  07B7  026B               	subwf	_battery_state^(0+128),w
  7980  07B8  1C03               	skipc
  7981  07B9  2FBD               	goto	l3241
  7982                           
  7983                           ;main.c: 254: {
  7984                           ;main.c: 255: cc_cv_mode();
  7985  07BA  3196  26E4  3182   	fcall	_cc_cv_mode
  7986  07BD                     l3241:	
  7987                           
  7988                           ;main.c: 256: }
  7989                           ;main.c: 257: slowLoop=0;
  7990  07BD  0021               	movlb	1	; select bank1
  7991  07BE  01A8               	clrf	main@slowLoop^(0+128)
  7992  07BF  2AD7               	goto	l435
  7993  07C0                     __end_of_main:	
  7994                           
  7995                           	psect	text1
  7996  003C                     __ptext1:	
  7997 ;; *************** function _tempCalc *****************
  7998 ;; Defined at:
  7999 ;;		line 4 in file "tempCalc.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;  analogValue     2   61[BANK0 ] int 
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;  steinhart       3   69[BANK0 ] float 
  8004 ;;  R               3   63[BANK0 ] float 
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  2   61[BANK0 ] int 
  8007 ;; Registers used:
  8008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8017 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8018 ;;Total ram usage:       11 bytes
  8019 ;; Hardware stack levels used:    1
  8020 ;; Hardware stack levels required when called:    4
  8021 ;; This function calls:
  8022 ;;		___awtoft
  8023 ;;		___ftadd
  8024 ;;		___ftdiv
  8025 ;;		___ftmul
  8026 ;;		___ftsub
  8027 ;;		___fttol
  8028 ;;		_log
  8029 ;; This function is called by:
  8030 ;;		_main
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           
  8035                           ;psect for function _tempCalc
  8036  003C                     _tempCalc:	
  8037                           
  8038                           ;tempCalc.c: 6: float R, steinhart;
  8039                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8040                           
  8041                           ;incstack = 0
  8042                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8043  003C  3000               	movlw	0
  8044  003D  0020               	movlb	0	; select bank0
  8045  003E  00C0               	movwf	___ftadd@f1
  8046  003F  3080               	movlw	128
  8047  0040  00C1               	movwf	___ftadd@f1+1
  8048  0041  30BF               	movlw	191
  8049  0042  00C2               	movwf	___ftadd@f1+2
  8050  0043  085E               	movf	tempCalc@analogValue+1,w
  8051  0044  00F9               	movwf	___awtoft@c+1
  8052  0045  085D               	movf	tempCalc@analogValue,w
  8053  0046  00F8               	movwf	___awtoft@c
  8054  0047  3195  2568  3180   	fcall	___awtoft
  8055  004A  0878               	movf	?___awtoft,w
  8056  004B  0020               	movlb	0	; select bank0
  8057  004C  00A0               	movwf	___ftdiv@f2
  8058  004D  0879               	movf	?___awtoft+1,w
  8059  004E  00A1               	movwf	___ftdiv@f2+1
  8060  004F  087A               	movf	?___awtoft+2,w
  8061  0050  00A2               	movwf	___ftdiv@f2+2
  8062  0051  30C0               	movlw	192
  8063  0052  00A3               	movwf	___ftdiv@f1
  8064  0053  307F               	movlw	127
  8065  0054  00A4               	movwf	___ftdiv@f1+1
  8066  0055  3044               	movlw	68
  8067  0056  00A5               	movwf	___ftdiv@f1+2
  8068  0057  318C  2444  3180   	fcall	___ftdiv
  8069  005A  0020               	movlb	0	; select bank0
  8070  005B  0820               	movf	?___ftdiv,w
  8071  005C  00C3               	movwf	___ftadd@f2
  8072  005D  0821               	movf	?___ftdiv+1,w
  8073  005E  00C4               	movwf	___ftadd@f2+1
  8074  005F  0822               	movf	?___ftdiv+2,w
  8075  0060  00C5               	movwf	___ftadd@f2+2
  8076  0061  318F  270A  3180   	fcall	___ftadd
  8077  0064  0020               	movlb	0	; select bank0
  8078  0065  0840               	movf	?___ftadd,w
  8079  0066  00E2               	movwf	_tempCalc$1290
  8080  0067  0841               	movf	?___ftadd+1,w
  8081  0068  00E3               	movwf	_tempCalc$1290+1
  8082  0069  0842               	movf	?___ftadd+2,w
  8083  006A  00E4               	movwf	_tempCalc$1290+2
  8084                           
  8085                           ;tempCalc.c: 6: float R, steinhart;
  8086                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8087  006B  0862               	movf	_tempCalc$1290,w
  8088  006C  00A0               	movwf	___ftdiv@f2
  8089  006D  0863               	movf	_tempCalc$1290+1,w
  8090  006E  00A1               	movwf	___ftdiv@f2+1
  8091  006F  0864               	movf	_tempCalc$1290+2,w
  8092  0070  00A2               	movwf	___ftdiv@f2+2
  8093  0071  3088               	movlw	136
  8094  0072  00A3               	movwf	___ftdiv@f1
  8095  0073  301A               	movlw	26
  8096  0074  00A4               	movwf	___ftdiv@f1+1
  8097  0075  3046               	movlw	70
  8098  0076  00A5               	movwf	___ftdiv@f1+2
  8099  0077  318C  2444  3180   	fcall	___ftdiv
  8100  007A  0020               	movlb	0	; select bank0
  8101  007B  0820               	movf	?___ftdiv,w
  8102  007C  00DF               	movwf	tempCalc@R
  8103  007D  0821               	movf	?___ftdiv+1,w
  8104  007E  00E0               	movwf	tempCalc@R+1
  8105  007F  0822               	movf	?___ftdiv+2,w
  8106  0080  00E1               	movwf	tempCalc@R+2
  8107                           
  8108                           ;tempCalc.c: 10: steinhart = R /9990;
  8109  0081  3018               	movlw	24
  8110  0082  00A0               	movwf	___ftdiv@f2
  8111  0083  301C               	movlw	28
  8112  0084  00A1               	movwf	___ftdiv@f2+1
  8113  0085  3046               	movlw	70
  8114  0086  00A2               	movwf	___ftdiv@f2+2
  8115  0087  085F               	movf	tempCalc@R,w
  8116  0088  00A3               	movwf	___ftdiv@f1
  8117  0089  0860               	movf	tempCalc@R+1,w
  8118  008A  00A4               	movwf	___ftdiv@f1+1
  8119  008B  0861               	movf	tempCalc@R+2,w
  8120  008C  00A5               	movwf	___ftdiv@f1+2
  8121  008D  318C  2444  3180   	fcall	___ftdiv
  8122  0090  0020               	movlb	0	; select bank0
  8123  0091  0820               	movf	?___ftdiv,w
  8124  0092  00E5               	movwf	tempCalc@steinhart
  8125  0093  0821               	movf	?___ftdiv+1,w
  8126  0094  00E6               	movwf	tempCalc@steinhart+1
  8127  0095  0822               	movf	?___ftdiv+2,w
  8128  0096  00E7               	movwf	tempCalc@steinhart+2
  8129                           
  8130                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8131  0097  0865               	movf	tempCalc@steinhart,w
  8132  0098  00D7               	movwf	log@x
  8133  0099  0866               	movf	tempCalc@steinhart+1,w
  8134  009A  00D8               	movwf	log@x+1
  8135  009B  0867               	movf	tempCalc@steinhart+2,w
  8136  009C  00D9               	movwf	log@x+2
  8137  009D  318C  24ED  3180   	fcall	_log
  8138  00A0  0020               	movlb	0	; select bank0
  8139  00A1  0857               	movf	?_log,w
  8140  00A2  00E5               	movwf	tempCalc@steinhart
  8141  00A3  0858               	movf	?_log+1,w
  8142  00A4  00E6               	movwf	tempCalc@steinhart+1
  8143  00A5  0859               	movf	?_log+2,w
  8144  00A6  00E7               	movwf	tempCalc@steinhart+2
  8145                           
  8146                           ;tempCalc.c: 12: steinhart /= 4030;
  8147  00A7  30E0               	movlw	224
  8148  00A8  00A0               	movwf	___ftdiv@f2
  8149  00A9  307B               	movlw	123
  8150  00AA  00A1               	movwf	___ftdiv@f2+1
  8151  00AB  3045               	movlw	69
  8152  00AC  00A2               	movwf	___ftdiv@f2+2
  8153  00AD  0865               	movf	tempCalc@steinhart,w
  8154  00AE  00A3               	movwf	___ftdiv@f1
  8155  00AF  0866               	movf	tempCalc@steinhart+1,w
  8156  00B0  00A4               	movwf	___ftdiv@f1+1
  8157  00B1  0867               	movf	tempCalc@steinhart+2,w
  8158  00B2  00A5               	movwf	___ftdiv@f1+2
  8159  00B3  318C  2444  3180   	fcall	___ftdiv
  8160  00B6  0020               	movlb	0	; select bank0
  8161  00B7  0820               	movf	?___ftdiv,w
  8162  00B8  00E5               	movwf	tempCalc@steinhart
  8163  00B9  0821               	movf	?___ftdiv+1,w
  8164  00BA  00E6               	movwf	tempCalc@steinhart+1
  8165  00BB  0822               	movf	?___ftdiv+2,w
  8166  00BC  00E7               	movwf	tempCalc@steinhart+2
  8167                           
  8168                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8169  00BD  30CF               	movlw	207
  8170  00BE  00C0               	movwf	___ftadd@f1
  8171  00BF  305B               	movlw	91
  8172  00C0  00C1               	movwf	___ftadd@f1+1
  8173  00C1  303B               	movlw	59
  8174  00C2  00C2               	movwf	___ftadd@f1+2
  8175  00C3  0865               	movf	tempCalc@steinhart,w
  8176  00C4  00C3               	movwf	___ftadd@f2
  8177  00C5  0866               	movf	tempCalc@steinhart+1,w
  8178  00C6  00C4               	movwf	___ftadd@f2+1
  8179  00C7  0867               	movf	tempCalc@steinhart+2,w
  8180  00C8  00C5               	movwf	___ftadd@f2+2
  8181  00C9  318F  270A  3180   	fcall	___ftadd
  8182  00CC  0020               	movlb	0	; select bank0
  8183  00CD  0840               	movf	?___ftadd,w
  8184  00CE  00E5               	movwf	tempCalc@steinhart
  8185  00CF  0841               	movf	?___ftadd+1,w
  8186  00D0  00E6               	movwf	tempCalc@steinhart+1
  8187  00D1  0842               	movf	?___ftadd+2,w
  8188  00D2  00E7               	movwf	tempCalc@steinhart+2
  8189                           
  8190                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8191  00D3  0865               	movf	tempCalc@steinhart,w
  8192  00D4  00A0               	movwf	___ftdiv@f2
  8193  00D5  0866               	movf	tempCalc@steinhart+1,w
  8194  00D6  00A1               	movwf	___ftdiv@f2+1
  8195  00D7  0867               	movf	tempCalc@steinhart+2,w
  8196  00D8  00A2               	movwf	___ftdiv@f2+2
  8197  00D9  3000               	movlw	0
  8198  00DA  00A3               	movwf	___ftdiv@f1
  8199  00DB  3080               	movlw	128
  8200  00DC  00A4               	movwf	___ftdiv@f1+1
  8201  00DD  303F               	movlw	63
  8202  00DE  00A5               	movwf	___ftdiv@f1+2
  8203  00DF  318C  2444  3180   	fcall	___ftdiv
  8204  00E2  0020               	movlb	0	; select bank0
  8205  00E3  0820               	movf	?___ftdiv,w
  8206  00E4  00E5               	movwf	tempCalc@steinhart
  8207  00E5  0821               	movf	?___ftdiv+1,w
  8208  00E6  00E6               	movwf	tempCalc@steinhart+1
  8209  00E7  0822               	movf	?___ftdiv+2,w
  8210  00E8  00E7               	movwf	tempCalc@steinhart+2
  8211                           
  8212                           ;tempCalc.c: 17: steinhart -= 273.15;
  8213  00E9  3093               	movlw	147
  8214  00EA  00CD               	movwf	___ftsub@f2
  8215  00EB  3088               	movlw	136
  8216  00EC  00CE               	movwf	___ftsub@f2+1
  8217  00ED  3043               	movlw	67
  8218  00EE  00CF               	movwf	___ftsub@f2+2
  8219  00EF  0865               	movf	tempCalc@steinhart,w
  8220  00F0  00D0               	movwf	___ftsub@f1
  8221  00F1  0866               	movf	tempCalc@steinhart+1,w
  8222  00F2  00D1               	movwf	___ftsub@f1+1
  8223  00F3  0867               	movf	tempCalc@steinhart+2,w
  8224  00F4  00D2               	movwf	___ftsub@f1+2
  8225  00F5  3195  250C  3180   	fcall	___ftsub
  8226  00F8  0020               	movlb	0	; select bank0
  8227  00F9  084D               	movf	?___ftsub,w
  8228  00FA  00E5               	movwf	tempCalc@steinhart
  8229  00FB  084E               	movf	?___ftsub+1,w
  8230  00FC  00E6               	movwf	tempCalc@steinhart+1
  8231  00FD  084F               	movf	?___ftsub+2,w
  8232  00FE  00E7               	movwf	tempCalc@steinhart+2
  8233                           
  8234                           ;tempCalc.c: 19: steinhart*=10;
  8235  00FF  3000               	movlw	0
  8236  0100  00B0               	movwf	___ftmul@f1
  8237  0101  3020               	movlw	32
  8238  0102  00B1               	movwf	___ftmul@f1+1
  8239  0103  3041               	movlw	65
  8240  0104  00B2               	movwf	___ftmul@f1+2
  8241  0105  0865               	movf	tempCalc@steinhart,w
  8242  0106  00B3               	movwf	___ftmul@f2
  8243  0107  0866               	movf	tempCalc@steinhart+1,w
  8244  0108  00B4               	movwf	___ftmul@f2+1
  8245  0109  0867               	movf	tempCalc@steinhart+2,w
  8246  010A  00B5               	movwf	___ftmul@f2+2
  8247  010B  318D  259D  3180   	fcall	___ftmul
  8248  010E  0020               	movlb	0	; select bank0
  8249  010F  0830               	movf	?___ftmul,w
  8250  0110  00E5               	movwf	tempCalc@steinhart
  8251  0111  0831               	movf	?___ftmul+1,w
  8252  0112  00E6               	movwf	tempCalc@steinhart+1
  8253  0113  0832               	movf	?___ftmul+2,w
  8254  0114  00E7               	movwf	tempCalc@steinhart+2
  8255                           
  8256                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8257  0115  3000               	movlw	0
  8258  0116  00C0               	movwf	___ftadd@f1
  8259  0117  30A0               	movlw	160
  8260  0118  00C1               	movwf	___ftadd@f1+1
  8261  0119  3043               	movlw	67
  8262  011A  00C2               	movwf	___ftadd@f1+2
  8263  011B  3000               	movlw	0
  8264  011C  00A0               	movwf	___ftdiv@f2
  8265  011D  30A0               	movlw	160
  8266  011E  00A1               	movwf	___ftdiv@f2+1
  8267  011F  3040               	movlw	64
  8268  0120  00A2               	movwf	___ftdiv@f2+2
  8269  0121  3000               	movlw	0
  8270  0122  00B0               	movwf	___ftmul@f1
  8271  0123  3010               	movlw	16
  8272  0124  00B1               	movwf	___ftmul@f1+1
  8273  0125  3041               	movlw	65
  8274  0126  00B2               	movwf	___ftmul@f1+2
  8275  0127  0865               	movf	tempCalc@steinhart,w
  8276  0128  00B3               	movwf	___ftmul@f2
  8277  0129  0866               	movf	tempCalc@steinhart+1,w
  8278  012A  00B4               	movwf	___ftmul@f2+1
  8279  012B  0867               	movf	tempCalc@steinhart+2,w
  8280  012C  00B5               	movwf	___ftmul@f2+2
  8281  012D  318D  259D  3180   	fcall	___ftmul
  8282  0130  0020               	movlb	0	; select bank0
  8283  0131  0830               	movf	?___ftmul,w
  8284  0132  00A3               	movwf	___ftdiv@f1
  8285  0133  0831               	movf	?___ftmul+1,w
  8286  0134  00A4               	movwf	___ftdiv@f1+1
  8287  0135  0832               	movf	?___ftmul+2,w
  8288  0136  00A5               	movwf	___ftdiv@f1+2
  8289  0137  318C  2444  3180   	fcall	___ftdiv
  8290  013A  0020               	movlb	0	; select bank0
  8291  013B  0820               	movf	?___ftdiv,w
  8292  013C  00C3               	movwf	___ftadd@f2
  8293  013D  0821               	movf	?___ftdiv+1,w
  8294  013E  00C4               	movwf	___ftadd@f2+1
  8295  013F  0822               	movf	?___ftdiv+2,w
  8296  0140  00C5               	movwf	___ftadd@f2+2
  8297  0141  318F  270A  3180   	fcall	___ftadd
  8298  0144  0020               	movlb	0	; select bank0
  8299  0145  0840               	movf	?___ftadd,w
  8300  0146  00E5               	movwf	tempCalc@steinhart
  8301  0147  0841               	movf	?___ftadd+1,w
  8302  0148  00E6               	movwf	tempCalc@steinhart+1
  8303  0149  0842               	movf	?___ftadd+2,w
  8304  014A  00E7               	movwf	tempCalc@steinhart+2
  8305                           
  8306                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8307  014B  0865               	movf	tempCalc@steinhart,w
  8308  014C  00B0               	movwf	___fttol@f1
  8309  014D  0866               	movf	tempCalc@steinhart+1,w
  8310  014E  00B1               	movwf	___fttol@f1+1
  8311  014F  0867               	movf	tempCalc@steinhart+2,w
  8312  0150  00B2               	movwf	___fttol@f1+2
  8313  0151  318B  23BD         	fcall	___fttol
  8314  0153  0020               	movlb	0	; select bank0
  8315  0154  0831               	movf	?___fttol+1,w
  8316  0155  00DE               	movwf	?_tempCalc+1
  8317  0156  0830               	movf	?___fttol,w
  8318  0157  00DD               	movwf	?_tempCalc
  8319  0158  0008               	return
  8320  0159                     __end_of_tempCalc:	
  8321                           
  8322                           	psect	text2
  8323  0CED                     __ptext2:	
  8324 ;; *************** function _log *****************
  8325 ;; Defined at:
  8326 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  x               3   55[BANK0 ] int 
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;  exponent        2   59[BANK0 ] int 
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  3   55[BANK0 ] int 
  8333 ;; Registers used:
  8334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8340 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;Total ram usage:        6 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; Hardware stack levels required when called:    3
  8347 ;; This function calls:
  8348 ;;		___awtoft
  8349 ;;		___ftadd
  8350 ;;		___ftge
  8351 ;;		___ftmul
  8352 ;;		_eval_poly
  8353 ;;		_frexp
  8354 ;; This function is called by:
  8355 ;;		_tempCalc
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           
  8360                           ;psect for function _log
  8361  0CED                     _log:	
  8362                           
  8363                           ;incstack = 0
  8364                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8365  0CED  0020               	movlb	0	; select bank0
  8366  0CEE  0857               	movf	log@x,w
  8367  0CEF  00F0               	movwf	___ftge@ff1
  8368  0CF0  0858               	movf	log@x+1,w
  8369  0CF1  00F1               	movwf	___ftge@ff1+1
  8370  0CF2  0859               	movf	log@x+2,w
  8371  0CF3  00F2               	movwf	___ftge@ff1+2
  8372  0CF4  3000               	movlw	0
  8373  0CF5  00F3               	movwf	___ftge@ff2
  8374  0CF6  3000               	movlw	0
  8375  0CF7  00F4               	movwf	___ftge@ff2+1
  8376  0CF8  3000               	movlw	0
  8377  0CF9  00F5               	movwf	___ftge@ff2+2
  8378  0CFA  3196  266E  318C   	fcall	___ftge
  8379  0CFD  1803               	btfsc	3,0
  8380  0CFE  2D0C               	goto	l2559
  8381  0CFF  3021               	movlw	33
  8382  0D00  0021               	movlb	1	; select bank1
  8383  0D01  00D6               	movwf	_errno^(0+128)
  8384  0D02  3000               	movlw	0
  8385  0D03  00D7               	movwf	(_errno^(0+128)+1)
  8386  0D04  3000               	movlw	0
  8387  0D05  0020               	movlb	0	; select bank0
  8388  0D06  00D7               	movwf	?_log
  8389  0D07  3000               	movlw	0
  8390  0D08  00D8               	movwf	?_log+1
  8391  0D09  3000               	movlw	0
  8392  0D0A  00D9               	movwf	?_log+2
  8393  0D0B  0008               	return
  8394  0D0C                     l2559:	
  8395  0D0C  0020               	movlb	0	; select bank0
  8396  0D0D  0859               	movf	log@x+2,w
  8397  0D0E  0458               	iorwf	log@x+1,w
  8398  0D0F  0457               	iorwf	log@x,w
  8399  0D10  1D03               	skipz
  8400  0D11  2D1F               	goto	l2565
  8401  0D12  3022               	movlw	34
  8402  0D13  0021               	movlb	1	; select bank1
  8403  0D14  00D6               	movwf	_errno^(0+128)
  8404  0D15  3000               	movlw	0
  8405  0D16  00D7               	movwf	(_errno^(0+128)+1)
  8406  0D17  3000               	movlw	0
  8407  0D18  0020               	movlb	0	; select bank0
  8408  0D19  00D7               	movwf	?_log
  8409  0D1A  3000               	movlw	0
  8410  0D1B  00D8               	movwf	?_log+1
  8411  0D1C  3000               	movlw	0
  8412  0D1D  00D9               	movwf	?_log+2
  8413  0D1E  0008               	return
  8414  0D1F                     l2565:	
  8415  0D1F  3000               	movlw	0
  8416  0D20  00C0               	movwf	___ftadd@f1
  8417  0D21  3080               	movlw	128
  8418  0D22  00C1               	movwf	___ftadd@f1+1
  8419  0D23  30BF               	movlw	191
  8420  0D24  00C2               	movwf	___ftadd@f1+2
  8421  0D25  3000               	movlw	0
  8422  0D26  00B0               	movwf	___ftmul@f1
  8423  0D27  3000               	movlw	0
  8424  0D28  00B1               	movwf	___ftmul@f1+1
  8425  0D29  3040               	movlw	64
  8426  0D2A  00B2               	movwf	___ftmul@f1+2
  8427  0D2B  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8428  0D2C  00DA               	movwf	??_log
  8429  0D2D  085A               	movf	??_log,w
  8430  0D2E  00F3               	movwf	frexp@eptr
  8431  0D2F  0857               	movf	log@x,w
  8432  0D30  00F0               	movwf	frexp@value
  8433  0D31  0858               	movf	log@x+1,w
  8434  0D32  00F1               	movwf	frexp@value+1
  8435  0D33  0859               	movf	log@x+2,w
  8436  0D34  00F2               	movwf	frexp@value+2
  8437  0D35  3196  26A9  318C   	fcall	_frexp
  8438  0D38  0870               	movf	?_frexp,w
  8439  0D39  0020               	movlb	0	; select bank0
  8440  0D3A  00B3               	movwf	___ftmul@f2
  8441  0D3B  0871               	movf	?_frexp+1,w
  8442  0D3C  00B4               	movwf	___ftmul@f2+1
  8443  0D3D  0872               	movf	?_frexp+2,w
  8444  0D3E  00B5               	movwf	___ftmul@f2+2
  8445  0D3F  318D  259D  318C   	fcall	___ftmul
  8446  0D42  0020               	movlb	0	; select bank0
  8447  0D43  0830               	movf	?___ftmul,w
  8448  0D44  00C3               	movwf	___ftadd@f2
  8449  0D45  0831               	movf	?___ftmul+1,w
  8450  0D46  00C4               	movwf	___ftadd@f2+1
  8451  0D47  0832               	movf	?___ftmul+2,w
  8452  0D48  00C5               	movwf	___ftadd@f2+2
  8453  0D49  318F  270A  318C   	fcall	___ftadd
  8454  0D4C  0020               	movlb	0	; select bank0
  8455  0D4D  0840               	movf	?___ftadd,w
  8456  0D4E  00D7               	movwf	log@x
  8457  0D4F  0841               	movf	?___ftadd+1,w
  8458  0D50  00D8               	movwf	log@x+1
  8459  0D51  0842               	movf	?___ftadd+2,w
  8460  0D52  00D9               	movwf	log@x+2
  8461  0D53  30FF               	movlw	255
  8462  0D54  07DB               	addwf	log@exponent,f
  8463  0D55  30FF               	movlw	255
  8464  0D56  3DDC               	addwfc	log@exponent+1,f
  8465  0D57  0857               	movf	log@x,w
  8466  0D58  00CD               	movwf	eval_poly@x
  8467  0D59  0858               	movf	log@x+1,w
  8468  0D5A  00CE               	movwf	eval_poly@x+1
  8469  0D5B  0859               	movf	log@x+2,w
  8470  0D5C  00CF               	movwf	eval_poly@x+2
  8471  0D5D  3000               	movlw	low (log@coeff| (0+32768))
  8472  0D5E  00D0               	movwf	eval_poly@d
  8473  0D5F  3098               	movlw	high (log@coeff| (0+32768))
  8474  0D60  00D1               	movwf	eval_poly@d+1
  8475  0D61  3008               	movlw	8
  8476  0D62  00D2               	movwf	eval_poly@n
  8477  0D63  3000               	movlw	0
  8478  0D64  00D3               	movwf	eval_poly@n+1
  8479  0D65  3189  2190  318C   	fcall	_eval_poly
  8480  0D68  0020               	movlb	0	; select bank0
  8481  0D69  084D               	movf	?_eval_poly,w
  8482  0D6A  00D7               	movwf	log@x
  8483  0D6B  084E               	movf	?_eval_poly+1,w
  8484  0D6C  00D8               	movwf	log@x+1
  8485  0D6D  084F               	movf	?_eval_poly+2,w
  8486  0D6E  00D9               	movwf	log@x+2
  8487  0D6F  0857               	movf	log@x,w
  8488  0D70  00C0               	movwf	___ftadd@f1
  8489  0D71  0858               	movf	log@x+1,w
  8490  0D72  00C1               	movwf	___ftadd@f1+1
  8491  0D73  0859               	movf	log@x+2,w
  8492  0D74  00C2               	movwf	___ftadd@f1+2
  8493  0D75  3072               	movlw	114
  8494  0D76  00B0               	movwf	___ftmul@f1
  8495  0D77  3031               	movlw	49
  8496  0D78  00B1               	movwf	___ftmul@f1+1
  8497  0D79  303F               	movlw	63
  8498  0D7A  00B2               	movwf	___ftmul@f1+2
  8499  0D7B  085C               	movf	log@exponent+1,w
  8500  0D7C  00F9               	movwf	___awtoft@c+1
  8501  0D7D  085B               	movf	log@exponent,w
  8502  0D7E  00F8               	movwf	___awtoft@c
  8503  0D7F  3195  2568  318C   	fcall	___awtoft
  8504  0D82  0878               	movf	?___awtoft,w
  8505  0D83  0020               	movlb	0	; select bank0
  8506  0D84  00B3               	movwf	___ftmul@f2
  8507  0D85  0879               	movf	?___awtoft+1,w
  8508  0D86  00B4               	movwf	___ftmul@f2+1
  8509  0D87  087A               	movf	?___awtoft+2,w
  8510  0D88  00B5               	movwf	___ftmul@f2+2
  8511  0D89  318D  259D  318C   	fcall	___ftmul
  8512  0D8C  0020               	movlb	0	; select bank0
  8513  0D8D  0830               	movf	?___ftmul,w
  8514  0D8E  00C3               	movwf	___ftadd@f2
  8515  0D8F  0831               	movf	?___ftmul+1,w
  8516  0D90  00C4               	movwf	___ftadd@f2+1
  8517  0D91  0832               	movf	?___ftmul+2,w
  8518  0D92  00C5               	movwf	___ftadd@f2+2
  8519  0D93  318F  270A         	fcall	___ftadd
  8520  0D95  0020               	movlb	0	; select bank0
  8521  0D96  0840               	movf	?___ftadd,w
  8522  0D97  00D7               	movwf	?_log
  8523  0D98  0841               	movf	?___ftadd+1,w
  8524  0D99  00D8               	movwf	?_log+1
  8525  0D9A  0842               	movf	?___ftadd+2,w
  8526  0D9B  00D9               	movwf	?_log+2
  8527  0D9C  0008               	return
  8528  0D9D                     __end_of_log:	
  8529                           
  8530                           	psect	text3
  8531  16A9                     __ptext3:	
  8532 ;; *************** function _frexp *****************
  8533 ;; Defined at:
  8534 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;  value           3    0[COMMON] int 
  8537 ;;  eptr            1    3[COMMON] PTR int 
  8538 ;;		 -> log@exponent(2), 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  3    0[COMMON] PTR int 
  8543 ;; Registers used:
  8544 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8554 ;;Total ram usage:        6 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; This function calls:
  8557 ;;		Nothing
  8558 ;; This function is called by:
  8559 ;;		_log
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           
  8564                           ;psect for function _frexp
  8565  16A9                     _frexp:	
  8566                           
  8567                           ;incstack = 0
  8568                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8569  16A9  0872               	movf	frexp@value+2,w
  8570  16AA  0471               	iorwf	frexp@value+1,w
  8571  16AB  0470               	iorwf	frexp@value,w
  8572  16AC  1D03               	skipz
  8573  16AD  2EBB               	goto	l2361
  8574  16AE  0873               	movf	frexp@eptr,w
  8575  16AF  0086               	movwf	6
  8576  16B0  0187               	clrf	7
  8577  16B1  3000               	movlw	0
  8578  16B2  3FC0               	movwi [0]fsr1
  8579  16B3  3FC1               	movwi [1]fsr1
  8580  16B4  3000               	movlw	0
  8581  16B5  00F0               	movwf	?_frexp
  8582  16B6  3000               	movlw	0
  8583  16B7  00F1               	movwf	?_frexp+1
  8584  16B8  3000               	movlw	0
  8585  16B9  00F2               	movwf	?_frexp+2
  8586  16BA  0008               	return
  8587  16BB                     l2361:	
  8588  16BB  0872               	movf	frexp@value+2,w
  8589  16BC  397F               	andlw	127
  8590  16BD  00F4               	movwf	??_frexp
  8591  16BE  01F5               	clrf	??_frexp+1
  8592  16BF  35F4               	lslf	??_frexp,f
  8593  16C0  0DF5               	rlf	??_frexp+1,f
  8594  16C1  0873               	movf	frexp@eptr,w
  8595  16C2  0086               	movwf	6
  8596  16C3  0187               	clrf	7
  8597  16C4  0874               	movf	??_frexp,w
  8598  16C5  3FC0               	movwi [0]fsr1
  8599  16C6  0875               	movf	??_frexp+1,w
  8600  16C7  3FC1               	movwi [1]fsr1
  8601  16C8  0D71               	rlf	frexp@value+1,w
  8602  16C9  0D71               	rlf	frexp@value+1,w
  8603  16CA  3901               	andlw	1
  8604  16CB  00F4               	movwf	??_frexp
  8605  16CC  01F5               	clrf	??_frexp+1
  8606  16CD  0873               	movf	frexp@eptr,w
  8607  16CE  0086               	movwf	6
  8608  16CF  0187               	clrf	7
  8609  16D0  0874               	movf	??_frexp,w
  8610  16D1  0481               	iorwf	1,f
  8611  16D2  3141               	addfsr 1,1
  8612  16D3  0875               	movf	??_frexp+1,w
  8613  16D4  0481               	iorwf	1,f
  8614  16D5  0873               	movf	frexp@eptr,w
  8615  16D6  0086               	movwf	6
  8616  16D7  0187               	clrf	7
  8617  16D8  3082               	movlw	130
  8618  16D9  0781               	addwf	1,f
  8619  16DA  3141               	addfsr 1,1
  8620  16DB  30FF               	movlw	255
  8621  16DC  3D81               	addwfc	1,f
  8622  16DD  317F               	addfsr 1,-1
  8623  16DE  0872               	movf	frexp@value+2,w
  8624  16DF  3980               	andlw	-128
  8625  16E0  383F               	iorlw	63
  8626  16E1  00F2               	movwf	frexp@value+2
  8627  16E2  13F1               	bcf	frexp@value+1,7
  8628  16E3  0008               	return
  8629  16E4                     __end_of_frexp:	
  8630                           
  8631                           	psect	text4
  8632  0990                     __ptext4:	
  8633 ;; *************** function _eval_poly *****************
  8634 ;; Defined at:
  8635 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  x               3   45[BANK0 ] PTR int 
  8638 ;;  d               2   48[BANK0 ] PTR const 
  8639 ;;		 -> log@coeff(27), 
  8640 ;;  n               2   50[BANK0 ] int 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;  res             3   52[BANK0 ] int 
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  3   45[BANK0 ] int 
  8645 ;; Registers used:
  8646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8652 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;Total ram usage:       10 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; Hardware stack levels required when called:    2
  8659 ;; This function calls:
  8660 ;;		___ftadd
  8661 ;;		___ftmul
  8662 ;;		___wmul
  8663 ;; This function is called by:
  8664 ;;		_log
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           
  8669                           ;psect for function _eval_poly
  8670  0990                     _eval_poly:	
  8671                           
  8672                           ;incstack = 0
  8673                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8674  0990  0020               	movlb	0	; select bank0
  8675  0991  0853               	movf	eval_poly@n+1,w
  8676  0992  00FA               	movwf	___wmul@multiplier+1
  8677  0993  0852               	movf	eval_poly@n,w
  8678  0994  00F9               	movwf	___wmul@multiplier
  8679  0995  3003               	movlw	3
  8680  0996  00FB               	movwf	___wmul@multiplicand
  8681  0997  3000               	movlw	0
  8682  0998  00FC               	movwf	___wmul@multiplicand+1
  8683  0999  3194  24EE  3189   	fcall	___wmul
  8684  099C  0020               	movlb	0	; select bank0
  8685  099D  0850               	movf	eval_poly@d,w
  8686  099E  0779               	addwf	?___wmul,w
  8687  099F  0084               	movwf	4
  8688  09A0  0851               	movf	eval_poly@d+1,w
  8689  09A1  3D7A               	addwfc	?___wmul+1,w
  8690  09A2  0085               	movwf	5
  8691  09A3  3F00               	moviw [0]fsr0
  8692  09A4  00D4               	movwf	eval_poly@res
  8693  09A5  3F01               	moviw [1]fsr0
  8694  09A6  00D5               	movwf	eval_poly@res+1
  8695  09A7  3F02               	moviw [2]fsr0
  8696  09A8                     L2:	
  8697  09A8  00D6               	movwf	eval_poly@res+2
  8698  09A9  0852               	movf	eval_poly@n,w
  8699  09AA  0453               	iorwf	eval_poly@n+1,w
  8700  09AB  1903               	btfsc	3,2
  8701  09AC  29E9               	goto	l2379
  8702  09AD  30FF               	movlw	255
  8703  09AE  07D2               	addwf	eval_poly@n,f
  8704  09AF  30FF               	movlw	255
  8705  09B0  3DD3               	addwfc	eval_poly@n+1,f
  8706  09B1  0853               	movf	eval_poly@n+1,w
  8707  09B2  00FA               	movwf	___wmul@multiplier+1
  8708  09B3  0852               	movf	eval_poly@n,w
  8709  09B4  00F9               	movwf	___wmul@multiplier
  8710  09B5  3003               	movlw	3
  8711  09B6  00FB               	movwf	___wmul@multiplicand
  8712  09B7  3000               	movlw	0
  8713  09B8  00FC               	movwf	___wmul@multiplicand+1
  8714  09B9  3194  24EE  3189   	fcall	___wmul
  8715  09BC  0020               	movlb	0	; select bank0
  8716  09BD  0850               	movf	eval_poly@d,w
  8717  09BE  0779               	addwf	?___wmul,w
  8718  09BF  0084               	movwf	4
  8719  09C0  0851               	movf	eval_poly@d+1,w
  8720  09C1  3D7A               	addwfc	?___wmul+1,w
  8721  09C2  0085               	movwf	5
  8722  09C3  3F00               	moviw [0]fsr0
  8723  09C4  00C0               	movwf	___ftadd@f1
  8724  09C5  3F01               	moviw [1]fsr0
  8725  09C6  00C1               	movwf	___ftadd@f1+1
  8726  09C7  3F02               	moviw [2]fsr0
  8727  09C8  00C2               	movwf	___ftadd@f1+2
  8728  09C9  0854               	movf	eval_poly@res,w
  8729  09CA  00B0               	movwf	___ftmul@f1
  8730  09CB  0855               	movf	eval_poly@res+1,w
  8731  09CC  00B1               	movwf	___ftmul@f1+1
  8732  09CD  0856               	movf	eval_poly@res+2,w
  8733  09CE  00B2               	movwf	___ftmul@f1+2
  8734  09CF  084D               	movf	eval_poly@x,w
  8735  09D0  00B3               	movwf	___ftmul@f2
  8736  09D1  084E               	movf	eval_poly@x+1,w
  8737  09D2  00B4               	movwf	___ftmul@f2+1
  8738  09D3  084F               	movf	eval_poly@x+2,w
  8739  09D4  00B5               	movwf	___ftmul@f2+2
  8740  09D5  318D  259D  3189   	fcall	___ftmul
  8741  09D8  0020               	movlb	0	; select bank0
  8742  09D9  0830               	movf	?___ftmul,w
  8743  09DA  00C3               	movwf	___ftadd@f2
  8744  09DB  0831               	movf	?___ftmul+1,w
  8745  09DC  00C4               	movwf	___ftadd@f2+1
  8746  09DD  0832               	movf	?___ftmul+2,w
  8747  09DE  00C5               	movwf	___ftadd@f2+2
  8748  09DF  318F  270A  3189   	fcall	___ftadd
  8749  09E2  0020               	movlb	0	; select bank0
  8750  09E3  0840               	movf	?___ftadd,w
  8751  09E4  00D4               	movwf	eval_poly@res
  8752  09E5  0841               	movf	?___ftadd+1,w
  8753  09E6  00D5               	movwf	eval_poly@res+1
  8754  09E7  0842               	movf	?___ftadd+2,w
  8755  09E8  29A8               	goto	L2
  8756  09E9                     l2379:	
  8757  09E9  0854               	movf	eval_poly@res,w
  8758  09EA  00CD               	movwf	?_eval_poly
  8759  09EB  0855               	movf	eval_poly@res+1,w
  8760  09EC  00CE               	movwf	?_eval_poly+1
  8761  09ED  0856               	movf	eval_poly@res+2,w
  8762  09EE  00CF               	movwf	?_eval_poly+2
  8763  09EF  0008               	return
  8764  09F0                     __end_of_eval_poly:	
  8765                           
  8766                           	psect	text5
  8767  0D9D                     __ptext5:	
  8768 ;; *************** function ___ftmul *****************
  8769 ;; Defined at:
  8770 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;  f1              3   16[BANK0 ] float 
  8773 ;;  f2              3   19[BANK0 ] float 
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  8776 ;;  sign            1   31[BANK0 ] unsigned char 
  8777 ;;  cntr            1   30[BANK0 ] unsigned char 
  8778 ;;  exp             1   26[BANK0 ] unsigned char 
  8779 ;; Return value:  Size  Location     Type
  8780 ;;                  3   16[BANK0 ] float 
  8781 ;; Registers used:
  8782 ;;		wreg, status,2, status,0, pclath, cstack
  8783 ;; Tracked objects:
  8784 ;;		On entry : 0/0
  8785 ;;		On exit  : 0/0
  8786 ;;		Unchanged: 0/0
  8787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8788 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8789 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8790 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;Total ram usage:       16 bytes
  8793 ;; Hardware stack levels used:    1
  8794 ;; Hardware stack levels required when called:    1
  8795 ;; This function calls:
  8796 ;;		___ftpack
  8797 ;; This function is called by:
  8798 ;;		_tempCalc
  8799 ;;		_main
  8800 ;;		_log
  8801 ;;		_eval_poly
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           
  8806                           ;psect for function ___ftmul
  8807  0D9D                     ___ftmul:	
  8808                           
  8809                           ;incstack = 0
  8810                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8811  0D9D  0020               	movlb	0	; select bank0
  8812  0D9E  0830               	movf	___ftmul@f1,w
  8813  0D9F  00B6               	movwf	??___ftmul
  8814  0DA0  0831               	movf	___ftmul@f1+1,w
  8815  0DA1  00B7               	movwf	??___ftmul+1
  8816  0DA2  0832               	movf	___ftmul@f1+2,w
  8817  0DA3  00B8               	movwf	??___ftmul+2
  8818  0DA4  1003               	clrc
  8819  0DA5  0D37               	rlf	??___ftmul+1,w
  8820  0DA6  0D38               	rlf	??___ftmul+2,w
  8821  0DA7  00B9               	movwf	??___ftmul+3
  8822  0DA8  0839               	movf	??___ftmul+3,w
  8823  0DA9  00BA               	movwf	___ftmul@exp
  8824  0DAA  083A               	movf	___ftmul@exp,w
  8825  0DAB  1D03               	btfss	3,2
  8826  0DAC  2DB4               	goto	l2275
  8827  0DAD  3000               	movlw	0
  8828  0DAE  00B0               	movwf	?___ftmul
  8829  0DAF  3000               	movlw	0
  8830  0DB0  00B1               	movwf	?___ftmul+1
  8831  0DB1  3000               	movlw	0
  8832  0DB2  00B2               	movwf	?___ftmul+2
  8833  0DB3  0008               	return
  8834  0DB4                     l2275:	
  8835  0DB4  0833               	movf	___ftmul@f2,w
  8836  0DB5  00B6               	movwf	??___ftmul
  8837  0DB6  0834               	movf	___ftmul@f2+1,w
  8838  0DB7  00B7               	movwf	??___ftmul+1
  8839  0DB8  0835               	movf	___ftmul@f2+2,w
  8840  0DB9  00B8               	movwf	??___ftmul+2
  8841  0DBA  1003               	clrc
  8842  0DBB  0D37               	rlf	??___ftmul+1,w
  8843  0DBC  0D38               	rlf	??___ftmul+2,w
  8844  0DBD  00B9               	movwf	??___ftmul+3
  8845  0DBE  0839               	movf	??___ftmul+3,w
  8846  0DBF  00BF               	movwf	___ftmul@sign
  8847  0DC0  083F               	movf	___ftmul@sign,w
  8848  0DC1  1D03               	btfss	3,2
  8849  0DC2  2DCA               	goto	l2281
  8850  0DC3  3000               	movlw	0
  8851  0DC4  00B0               	movwf	?___ftmul
  8852  0DC5  3000               	movlw	0
  8853  0DC6  00B1               	movwf	?___ftmul+1
  8854  0DC7  3000               	movlw	0
  8855  0DC8  00B2               	movwf	?___ftmul+2
  8856  0DC9  0008               	return
  8857  0DCA                     l2281:	
  8858  0DCA  083F               	movf	___ftmul@sign,w
  8859  0DCB  3E7B               	addlw	123
  8860  0DCC  00B6               	movwf	??___ftmul
  8861  0DCD  0836               	movf	??___ftmul,w
  8862  0DCE  07BA               	addwf	___ftmul@exp,f
  8863  0DCF  0830               	movf	___ftmul@f1,w
  8864  0DD0  00B6               	movwf	??___ftmul
  8865  0DD1  0831               	movf	___ftmul@f1+1,w
  8866  0DD2  00B7               	movwf	??___ftmul+1
  8867  0DD3  0832               	movf	___ftmul@f1+2,w
  8868  0DD4  00B8               	movwf	??___ftmul+2
  8869  0DD5  3010               	movlw	16
  8870  0DD6                     u2305:	
  8871  0DD6  36B8               	lsrf	??___ftmul+2,f
  8872  0DD7  0CB7               	rrf	??___ftmul+1,f
  8873  0DD8  0CB6               	rrf	??___ftmul,f
  8874  0DD9  0B89               	decfsz	9,f
  8875  0DDA  2DD6               	goto	u2305
  8876  0DDB  0836               	movf	??___ftmul,w
  8877  0DDC  00B9               	movwf	??___ftmul+3
  8878  0DDD  0839               	movf	??___ftmul+3,w
  8879  0DDE  00BF               	movwf	___ftmul@sign
  8880  0DDF  0833               	movf	___ftmul@f2,w
  8881  0DE0  00B6               	movwf	??___ftmul
  8882  0DE1  0834               	movf	___ftmul@f2+1,w
  8883  0DE2  00B7               	movwf	??___ftmul+1
  8884  0DE3  0835               	movf	___ftmul@f2+2,w
  8885  0DE4  00B8               	movwf	??___ftmul+2
  8886  0DE5  3010               	movlw	16
  8887  0DE6                     u2315:	
  8888  0DE6  36B8               	lsrf	??___ftmul+2,f
  8889  0DE7  0CB7               	rrf	??___ftmul+1,f
  8890  0DE8  0CB6               	rrf	??___ftmul,f
  8891  0DE9  0B89               	decfsz	9,f
  8892  0DEA  2DE6               	goto	u2315
  8893  0DEB  0836               	movf	??___ftmul,w
  8894  0DEC  00B9               	movwf	??___ftmul+3
  8895  0DED  0839               	movf	??___ftmul+3,w
  8896  0DEE  06BF               	xorwf	___ftmul@sign,f
  8897  0DEF  3080               	movlw	128
  8898  0DF0  00B6               	movwf	??___ftmul
  8899  0DF1  0836               	movf	??___ftmul,w
  8900  0DF2  05BF               	andwf	___ftmul@sign,f
  8901  0DF3  17B1               	bsf	___ftmul@f1+1,7
  8902  0DF4  17B4               	bsf	___ftmul@f2+1,7
  8903  0DF5  30FF               	movlw	255
  8904  0DF6  05B3               	andwf	___ftmul@f2,f
  8905  0DF7  30FF               	movlw	255
  8906  0DF8  05B4               	andwf	___ftmul@f2+1,f
  8907  0DF9  3000               	movlw	0
  8908  0DFA  05B5               	andwf	___ftmul@f2+2,f
  8909  0DFB  3000               	movlw	0
  8910  0DFC  00BB               	movwf	___ftmul@f3_as_product
  8911  0DFD  3000               	movlw	0
  8912  0DFE  00BC               	movwf	___ftmul@f3_as_product+1
  8913  0DFF  3000               	movlw	0
  8914  0E00  00BD               	movwf	___ftmul@f3_as_product+2
  8915  0E01  3007               	movlw	7
  8916  0E02  00B6               	movwf	??___ftmul
  8917  0E03  0836               	movf	??___ftmul,w
  8918  0E04  00BE               	movwf	___ftmul@cntr
  8919  0E05                     l2293:	
  8920  0E05  1C30               	btfss	___ftmul@f1,0
  8921  0E06  2E0D               	goto	l2297
  8922  0E07  0833               	movf	___ftmul@f2,w
  8923  0E08  07BB               	addwf	___ftmul@f3_as_product,f
  8924  0E09  0834               	movf	___ftmul@f2+1,w
  8925  0E0A  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  8926  0E0B  0835               	movf	___ftmul@f2+2,w
  8927  0E0C  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  8928  0E0D                     l2297:	
  8929  0E0D  3001               	movlw	1
  8930  0E0E                     u2335:	
  8931  0E0E  36B2               	lsrf	___ftmul@f1+2,f
  8932  0E0F  0CB1               	rrf	___ftmul@f1+1,f
  8933  0E10  0CB0               	rrf	___ftmul@f1,f
  8934  0E11  0B89               	decfsz	9,f
  8935  0E12  2E0E               	goto	u2335
  8936  0E13  3001               	movlw	1
  8937  0E14                     u2345:	
  8938  0E14  35B3               	lslf	___ftmul@f2,f
  8939  0E15  0DB4               	rlf	___ftmul@f2+1,f
  8940  0E16  0DB5               	rlf	___ftmul@f2+2,f
  8941  0E17  0B89               	decfsz	9,f
  8942  0E18  2E14               	goto	u2345
  8943  0E19  3001               	movlw	1
  8944  0E1A  02BE               	subwf	___ftmul@cntr,f
  8945  0E1B  1D03               	btfss	3,2
  8946  0E1C  2E05               	goto	l2293
  8947  0E1D  3009               	movlw	9
  8948  0E1E  00B6               	movwf	??___ftmul
  8949  0E1F  0836               	movf	??___ftmul,w
  8950  0E20  00BE               	movwf	___ftmul@cntr
  8951  0E21                     l2305:	
  8952  0E21  1C30               	btfss	___ftmul@f1,0
  8953  0E22  2E29               	goto	l2309
  8954  0E23  0833               	movf	___ftmul@f2,w
  8955  0E24  07BB               	addwf	___ftmul@f3_as_product,f
  8956  0E25  0834               	movf	___ftmul@f2+1,w
  8957  0E26  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  8958  0E27  0835               	movf	___ftmul@f2+2,w
  8959  0E28  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  8960  0E29                     l2309:	
  8961  0E29  3001               	movlw	1
  8962  0E2A                     u2375:	
  8963  0E2A  36B2               	lsrf	___ftmul@f1+2,f
  8964  0E2B  0CB1               	rrf	___ftmul@f1+1,f
  8965  0E2C  0CB0               	rrf	___ftmul@f1,f
  8966  0E2D  0B89               	decfsz	9,f
  8967  0E2E  2E2A               	goto	u2375
  8968  0E2F  3001               	movlw	1
  8969  0E30                     u2385:	
  8970  0E30  36BD               	lsrf	___ftmul@f3_as_product+2,f
  8971  0E31  0CBC               	rrf	___ftmul@f3_as_product+1,f
  8972  0E32  0CBB               	rrf	___ftmul@f3_as_product,f
  8973  0E33  0B89               	decfsz	9,f
  8974  0E34  2E30               	goto	u2385
  8975  0E35  3001               	movlw	1
  8976  0E36  02BE               	subwf	___ftmul@cntr,f
  8977  0E37  1D03               	btfss	3,2
  8978  0E38  2E21               	goto	l2305
  8979  0E39  083B               	movf	___ftmul@f3_as_product,w
  8980  0E3A  00F0               	movwf	___ftpack@arg
  8981  0E3B  083C               	movf	___ftmul@f3_as_product+1,w
  8982  0E3C  00F1               	movwf	___ftpack@arg+1
  8983  0E3D  083D               	movf	___ftmul@f3_as_product+2,w
  8984  0E3E  00F2               	movwf	___ftpack@arg+2
  8985  0E3F  083A               	movf	___ftmul@exp,w
  8986  0E40  00B6               	movwf	??___ftmul
  8987  0E41  0836               	movf	??___ftmul,w
  8988  0E42  00F3               	movwf	___ftpack@exp
  8989  0E43  083F               	movf	___ftmul@sign,w
  8990  0E44  00B7               	movwf	??___ftmul+1
  8991  0E45  0837               	movf	??___ftmul+1,w
  8992  0E46  00F4               	movwf	___ftpack@sign
  8993  0E47  3189  21F0         	fcall	___ftpack
  8994  0E49  0870               	movf	?___ftpack,w
  8995  0E4A  0020               	movlb	0	; select bank0
  8996  0E4B  00B0               	movwf	?___ftmul
  8997  0E4C  0871               	movf	?___ftpack+1,w
  8998  0E4D  00B1               	movwf	?___ftmul+1
  8999  0E4E  0872               	movf	?___ftpack+2,w
  9000  0E4F  00B2               	movwf	?___ftmul+2
  9001  0E50  0008               	return
  9002  0E51                     __end_of___ftmul:	
  9003                           
  9004                           	psect	text6
  9005  166E                     __ptext6:	
  9006 ;; *************** function ___ftge *****************
  9007 ;; Defined at:
  9008 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  ff1             3    0[COMMON] float 
  9011 ;;  ff2             3    3[COMMON] float 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;		None
  9014 ;; Return value:  Size  Location     Type
  9015 ;;		None               void
  9016 ;; Registers used:
  9017 ;;		wreg, status,2, status,0
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9023 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;Total ram usage:        9 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		_log
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           
  9037                           ;psect for function ___ftge
  9038  166E                     ___ftge:	
  9039                           
  9040                           ;incstack = 0
  9041                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9042  166E  1FF2               	btfss	___ftge@ff1+2,7
  9043  166F  2E84               	goto	l2337
  9044  1670  0970               	comf	___ftge@ff1,w
  9045  1671  00F6               	movwf	??___ftge
  9046  1672  0971               	comf	___ftge@ff1+1,w
  9047  1673  00F7               	movwf	??___ftge+1
  9048  1674  0972               	comf	___ftge@ff1+2,w
  9049  1675  00F8               	movwf	??___ftge+2
  9050  1676  0AF6               	incf	??___ftge,f
  9051  1677  1903               	skipnz
  9052  1678  0AF7               	incf	??___ftge+1,f
  9053  1679  1903               	skipnz
  9054  167A  0AF8               	incf	??___ftge+2,f
  9055  167B  3000               	movlw	0
  9056  167C  0776               	addwf	??___ftge,w
  9057  167D  00F0               	movwf	___ftge@ff1
  9058  167E  3000               	movlw	0
  9059  167F  3D77               	addwfc	??___ftge+1,w
  9060  1680  00F1               	movwf	___ftge@ff1+1
  9061  1681  3080               	movlw	128
  9062  1682  3D78               	addwfc	??___ftge+2,w
  9063  1683  00F2               	movwf	___ftge@ff1+2
  9064  1684                     l2337:	
  9065  1684  1FF5               	btfss	___ftge@ff2+2,7
  9066  1685  2E9A               	goto	l2341
  9067  1686  0973               	comf	___ftge@ff2,w
  9068  1687  00F6               	movwf	??___ftge
  9069  1688  0974               	comf	___ftge@ff2+1,w
  9070  1689  00F7               	movwf	??___ftge+1
  9071  168A  0975               	comf	___ftge@ff2+2,w
  9072  168B  00F8               	movwf	??___ftge+2
  9073  168C  0AF6               	incf	??___ftge,f
  9074  168D  1903               	skipnz
  9075  168E  0AF7               	incf	??___ftge+1,f
  9076  168F  1903               	skipnz
  9077  1690  0AF8               	incf	??___ftge+2,f
  9078  1691  3000               	movlw	0
  9079  1692  0776               	addwf	??___ftge,w
  9080  1693  00F3               	movwf	___ftge@ff2
  9081  1694  3000               	movlw	0
  9082  1695  3D77               	addwfc	??___ftge+1,w
  9083  1696  00F4               	movwf	___ftge@ff2+1
  9084  1697  3080               	movlw	128
  9085  1698  3D78               	addwfc	??___ftge+2,w
  9086  1699  00F5               	movwf	___ftge@ff2+2
  9087  169A                     l2341:	
  9088  169A  3080               	movlw	128
  9089  169B  06F2               	xorwf	___ftge@ff1+2,f
  9090  169C  3080               	movlw	128
  9091  169D  06F5               	xorwf	___ftge@ff2+2,f
  9092  169E  0875               	movf	___ftge@ff2+2,w
  9093  169F  0272               	subwf	___ftge@ff1+2,w
  9094  16A0  1D03               	skipz
  9095  16A1  0008               	return
  9096  16A2  0874               	movf	___ftge@ff2+1,w
  9097  16A3  0271               	subwf	___ftge@ff1+1,w
  9098  16A4  1D03               	skipz
  9099  16A5  0008               	return
  9100  16A6  0873               	movf	___ftge@ff2,w
  9101  16A7  0270               	subwf	___ftge@ff1,w
  9102  16A8  0008               	return
  9103  16A9                     __end_of___ftge:	
  9104                           
  9105                           	psect	text7
  9106  150C                     __ptext7:	
  9107 ;; *************** function ___ftsub *****************
  9108 ;; Defined at:
  9109 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  f2              3   45[BANK0 ] float 
  9112 ;;  f1              3   48[BANK0 ] float 
  9113 ;; Auto vars:     Size  Location     Type
  9114 ;;		None
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  3   45[BANK0 ] float 
  9117 ;; Registers used:
  9118 ;;		wreg, status,2, status,0, pclath, cstack
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9124 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9128 ;;Total ram usage:        6 bytes
  9129 ;; Hardware stack levels used:    1
  9130 ;; Hardware stack levels required when called:    2
  9131 ;; This function calls:
  9132 ;;		___ftadd
  9133 ;; This function is called by:
  9134 ;;		_tempCalc
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           
  9139                           ;psect for function ___ftsub
  9140  150C                     ___ftsub:	
  9141                           
  9142                           ;incstack = 0
  9143                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9144  150C  0020               	movlb	0	; select bank0
  9145  150D  084F               	movf	___ftsub@f2+2,w
  9146  150E  044E               	iorwf	___ftsub@f2+1,w
  9147  150F  044D               	iorwf	___ftsub@f2,w
  9148  1510  1903               	skipnz
  9149  1511  2D14               	goto	l2705
  9150  1512  3080               	movlw	128
  9151  1513  06CF               	xorwf	___ftsub@f2+2,f
  9152  1514                     l2705:	
  9153  1514  0850               	movf	___ftsub@f1,w
  9154  1515  00C0               	movwf	___ftadd@f1
  9155  1516  0851               	movf	___ftsub@f1+1,w
  9156  1517  00C1               	movwf	___ftadd@f1+1
  9157  1518  0852               	movf	___ftsub@f1+2,w
  9158  1519  00C2               	movwf	___ftadd@f1+2
  9159  151A  084D               	movf	___ftsub@f2,w
  9160  151B  00C3               	movwf	___ftadd@f2
  9161  151C  084E               	movf	___ftsub@f2+1,w
  9162  151D  00C4               	movwf	___ftadd@f2+1
  9163  151E  084F               	movf	___ftsub@f2+2,w
  9164  151F  00C5               	movwf	___ftadd@f2+2
  9165  1520  318F  270A         	fcall	___ftadd
  9166  1522  0020               	movlb	0	; select bank0
  9167  1523  0840               	movf	?___ftadd,w
  9168  1524  00CD               	movwf	?___ftsub
  9169  1525  0841               	movf	?___ftadd+1,w
  9170  1526  00CE               	movwf	?___ftsub+1
  9171  1527  0842               	movf	?___ftadd+2,w
  9172  1528  00CF               	movwf	?___ftsub+2
  9173  1529  0008               	return
  9174  152A                     __end_of___ftsub:	
  9175                           
  9176                           	psect	text8
  9177  0F0A                     __ptext8:	
  9178 ;; *************** function ___ftadd *****************
  9179 ;; Defined at:
  9180 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9181 ;; Parameters:    Size  Location     Type
  9182 ;;  f1              3   32[BANK0 ] float 
  9183 ;;  f2              3   35[BANK0 ] float 
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;  exp1            1   44[BANK0 ] unsigned char 
  9186 ;;  exp2            1   43[BANK0 ] unsigned char 
  9187 ;;  sign            1   42[BANK0 ] unsigned char 
  9188 ;; Return value:  Size  Location     Type
  9189 ;;                  3   32[BANK0 ] float 
  9190 ;; Registers used:
  9191 ;;		wreg, status,2, status,0, pclath, cstack
  9192 ;; Tracked objects:
  9193 ;;		On entry : 0/0
  9194 ;;		On exit  : 0/0
  9195 ;;		Unchanged: 0/0
  9196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9197 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;Total ram usage:       13 bytes
  9202 ;; Hardware stack levels used:    1
  9203 ;; Hardware stack levels required when called:    1
  9204 ;; This function calls:
  9205 ;;		___ftpack
  9206 ;; This function is called by:
  9207 ;;		_tempCalc
  9208 ;;		___ftsub
  9209 ;;		_log
  9210 ;;		_eval_poly
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           
  9215                           ;psect for function ___ftadd
  9216  0F0A                     ___ftadd:	
  9217                           
  9218                           ;incstack = 0
  9219                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9220  0F0A  0020               	movlb	0	; select bank0
  9221  0F0B  0840               	movf	___ftadd@f1,w
  9222  0F0C  00C6               	movwf	??___ftadd
  9223  0F0D  0841               	movf	___ftadd@f1+1,w
  9224  0F0E  00C7               	movwf	??___ftadd+1
  9225  0F0F  0842               	movf	___ftadd@f1+2,w
  9226  0F10  00C8               	movwf	??___ftadd+2
  9227  0F11  1003               	clrc
  9228  0F12  0D47               	rlf	??___ftadd+1,w
  9229  0F13  0D48               	rlf	??___ftadd+2,w
  9230  0F14  00C9               	movwf	??___ftadd+3
  9231  0F15  0849               	movf	??___ftadd+3,w
  9232  0F16  00CC               	movwf	___ftadd@exp1
  9233  0F17  0843               	movf	___ftadd@f2,w
  9234  0F18  00C6               	movwf	??___ftadd
  9235  0F19  0844               	movf	___ftadd@f2+1,w
  9236  0F1A  00C7               	movwf	??___ftadd+1
  9237  0F1B  0845               	movf	___ftadd@f2+2,w
  9238  0F1C  00C8               	movwf	??___ftadd+2
  9239  0F1D  1003               	clrc
  9240  0F1E  0D47               	rlf	??___ftadd+1,w
  9241  0F1F  0D48               	rlf	??___ftadd+2,w
  9242  0F20  00C9               	movwf	??___ftadd+3
  9243  0F21  0849               	movf	??___ftadd+3,w
  9244  0F22  00CB               	movwf	___ftadd@exp2
  9245  0F23  084C               	movf	___ftadd@exp1,w
  9246  0F24  1903               	btfsc	3,2
  9247  0F25  2F32               	goto	l2205
  9248  0F26  084B               	movf	___ftadd@exp2,w
  9249  0F27  024C               	subwf	___ftadd@exp1,w
  9250  0F28  1803               	skipnc
  9251  0F29  2F39               	goto	l2209
  9252  0F2A  034C               	decf	___ftadd@exp1,w
  9253  0F2B  3AFF               	xorlw	255
  9254  0F2C  074B               	addwf	___ftadd@exp2,w
  9255  0F2D  00C6               	movwf	??___ftadd
  9256  0F2E  3019               	movlw	25
  9257  0F2F  0246               	subwf	??___ftadd,w
  9258  0F30  1C03               	skipc
  9259  0F31  2F39               	goto	l2209
  9260  0F32                     l2205:	
  9261  0F32  0843               	movf	___ftadd@f2,w
  9262  0F33  00C0               	movwf	?___ftadd
  9263  0F34  0844               	movf	___ftadd@f2+1,w
  9264  0F35  00C1               	movwf	?___ftadd+1
  9265  0F36  0845               	movf	___ftadd@f2+2,w
  9266  0F37  00C2               	movwf	?___ftadd+2
  9267  0F38  0008               	return
  9268  0F39                     l2209:	
  9269  0F39  084B               	movf	___ftadd@exp2,w
  9270  0F3A  1903               	btfsc	3,2
  9271  0F3B  0008               	return
  9272  0F3C  084C               	movf	___ftadd@exp1,w
  9273  0F3D  024B               	subwf	___ftadd@exp2,w
  9274  0F3E  1803               	skipnc
  9275  0F3F  2F48               	goto	l2215
  9276  0F40  034B               	decf	___ftadd@exp2,w
  9277  0F41  3AFF               	xorlw	255
  9278  0F42  074C               	addwf	___ftadd@exp1,w
  9279  0F43  00C6               	movwf	??___ftadd
  9280  0F44  3019               	movlw	25
  9281  0F45  0246               	subwf	??___ftadd,w
  9282  0F46  1803               	btfsc	3,0
  9283  0F47  0008               	return
  9284  0F48                     l2215:	
  9285  0F48  3006               	movlw	6
  9286  0F49  00C6               	movwf	??___ftadd
  9287  0F4A  0846               	movf	??___ftadd,w
  9288  0F4B  00CA               	movwf	___ftadd@sign
  9289  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  9290  0F4D  17CA               	bsf	___ftadd@sign,7
  9291  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  9292  0F4F  174A               	bsf	___ftadd@sign,6
  9293  0F50  17C1               	bsf	___ftadd@f1+1,7
  9294  0F51  30FF               	movlw	255
  9295  0F52  05C0               	andwf	___ftadd@f1,f
  9296  0F53  30FF               	movlw	255
  9297  0F54  05C1               	andwf	___ftadd@f1+1,f
  9298  0F55  3000               	movlw	0
  9299  0F56  05C2               	andwf	___ftadd@f1+2,f
  9300  0F57  17C4               	bsf	___ftadd@f2+1,7
  9301  0F58  30FF               	movlw	255
  9302  0F59  05C3               	andwf	___ftadd@f2,f
  9303  0F5A  30FF               	movlw	255
  9304  0F5B  05C4               	andwf	___ftadd@f2+1,f
  9305  0F5C  3000               	movlw	0
  9306  0F5D  05C5               	andwf	___ftadd@f2+2,f
  9307  0F5E  084B               	movf	___ftadd@exp2,w
  9308  0F5F  024C               	subwf	___ftadd@exp1,w
  9309  0F60  1803               	skipnc
  9310  0F61  2F84               	goto	l2237
  9311  0F62                     l2227:	
  9312  0F62  3001               	movlw	1
  9313  0F63                     u2145:	
  9314  0F63  35C3               	lslf	___ftadd@f2,f
  9315  0F64  0DC4               	rlf	___ftadd@f2+1,f
  9316  0F65  0DC5               	rlf	___ftadd@f2+2,f
  9317  0F66  0B89               	decfsz	9,f
  9318  0F67  2F63               	goto	u2145
  9319  0F68  3001               	movlw	1
  9320  0F69  02CB               	subwf	___ftadd@exp2,f
  9321  0F6A  084B               	movf	___ftadd@exp2,w
  9322  0F6B  064C               	xorwf	___ftadd@exp1,w
  9323  0F6C  1903               	skipnz
  9324  0F6D  2F7F               	goto	l2235
  9325  0F6E  3001               	movlw	1
  9326  0F6F  02CA               	subwf	___ftadd@sign,f
  9327  0F70  084A               	movf	___ftadd@sign,w
  9328  0F71  3907               	andlw	7
  9329  0F72  1903               	btfsc	3,2
  9330  0F73  2F7F               	goto	l2235
  9331  0F74  2F62               	goto	l2227
  9332  0F75                     l2233:	
  9333  0F75  3001               	movlw	1
  9334  0F76                     u2175:	
  9335  0F76  36C2               	lsrf	___ftadd@f1+2,f
  9336  0F77  0CC1               	rrf	___ftadd@f1+1,f
  9337  0F78  0CC0               	rrf	___ftadd@f1,f
  9338  0F79  0B89               	decfsz	9,f
  9339  0F7A  2F76               	goto	u2175
  9340  0F7B  3001               	movlw	1
  9341  0F7C  00C6               	movwf	??___ftadd
  9342  0F7D  0846               	movf	??___ftadd,w
  9343  0F7E  07CC               	addwf	___ftadd@exp1,f
  9344  0F7F                     l2235:	
  9345  0F7F  084C               	movf	___ftadd@exp1,w
  9346  0F80  064B               	xorwf	___ftadd@exp2,w
  9347  0F81  1903               	btfsc	3,2
  9348  0F82  2FA9               	goto	l763
  9349  0F83  2F75               	goto	l2233
  9350  0F84                     l2237:	
  9351  0F84  084C               	movf	___ftadd@exp1,w
  9352  0F85  024B               	subwf	___ftadd@exp2,w
  9353  0F86  1803               	skipnc
  9354  0F87  2FA9               	goto	l763
  9355  0F88                     l2239:	
  9356  0F88  3001               	movlw	1
  9357  0F89                     u2205:	
  9358  0F89  35C0               	lslf	___ftadd@f1,f
  9359  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  9360  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  9361  0F8C  0B89               	decfsz	9,f
  9362  0F8D  2F89               	goto	u2205
  9363  0F8E  3001               	movlw	1
  9364  0F8F  02CC               	subwf	___ftadd@exp1,f
  9365  0F90  084B               	movf	___ftadd@exp2,w
  9366  0F91  064C               	xorwf	___ftadd@exp1,w
  9367  0F92  1903               	skipnz
  9368  0F93  2FA5               	goto	l2247
  9369  0F94  3001               	movlw	1
  9370  0F95  02CA               	subwf	___ftadd@sign,f
  9371  0F96  084A               	movf	___ftadd@sign,w
  9372  0F97  3907               	andlw	7
  9373  0F98  1903               	btfsc	3,2
  9374  0F99  2FA5               	goto	l2247
  9375  0F9A  2F88               	goto	l2239
  9376  0F9B                     l2245:	
  9377  0F9B  3001               	movlw	1
  9378  0F9C                     u2235:	
  9379  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  9380  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  9381  0F9E  0CC3               	rrf	___ftadd@f2,f
  9382  0F9F  0B89               	decfsz	9,f
  9383  0FA0  2F9C               	goto	u2235
  9384  0FA1  3001               	movlw	1
  9385  0FA2  00C6               	movwf	??___ftadd
  9386  0FA3  0846               	movf	??___ftadd,w
  9387  0FA4  07CB               	addwf	___ftadd@exp2,f
  9388  0FA5                     l2247:	
  9389  0FA5  084C               	movf	___ftadd@exp1,w
  9390  0FA6  064B               	xorwf	___ftadd@exp2,w
  9391  0FA7  1D03               	skipz
  9392  0FA8  2F9B               	goto	l2245
  9393  0FA9                     l763:	
  9394  0FA9  1FCA               	btfss	___ftadd@sign,7
  9395  0FAA  2FBB               	goto	l2251
  9396  0FAB  30FF               	movlw	255
  9397  0FAC  06C0               	xorwf	___ftadd@f1,f
  9398  0FAD  30FF               	movlw	255
  9399  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  9400  0FAF  30FF               	movlw	255
  9401  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  9402  0FB1  3001               	movlw	1
  9403  0FB2  07C0               	addwf	___ftadd@f1,f
  9404  0FB3  3000               	movlw	0
  9405  0FB4  1803               	skipnc
  9406  0FB5  3001               	movlw	1
  9407  0FB6  07C1               	addwf	___ftadd@f1+1,f
  9408  0FB7  3000               	movlw	0
  9409  0FB8  1803               	skipnc
  9410  0FB9  3001               	movlw	1
  9411  0FBA  07C2               	addwf	___ftadd@f1+2,f
  9412  0FBB                     l2251:	
  9413  0FBB  1F4A               	btfss	___ftadd@sign,6
  9414  0FBC  2FCD               	goto	l2255
  9415  0FBD  30FF               	movlw	255
  9416  0FBE  06C3               	xorwf	___ftadd@f2,f
  9417  0FBF  30FF               	movlw	255
  9418  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  9419  0FC1  30FF               	movlw	255
  9420  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  9421  0FC3  3001               	movlw	1
  9422  0FC4  07C3               	addwf	___ftadd@f2,f
  9423  0FC5  3000               	movlw	0
  9424  0FC6  1803               	skipnc
  9425  0FC7  3001               	movlw	1
  9426  0FC8  07C4               	addwf	___ftadd@f2+1,f
  9427  0FC9  3000               	movlw	0
  9428  0FCA  1803               	skipnc
  9429  0FCB  3001               	movlw	1
  9430  0FCC  07C5               	addwf	___ftadd@f2+2,f
  9431  0FCD                     l2255:	
  9432  0FCD  01CA               	clrf	___ftadd@sign
  9433  0FCE  0840               	movf	___ftadd@f1,w
  9434  0FCF  07C3               	addwf	___ftadd@f2,f
  9435  0FD0  0841               	movf	___ftadd@f1+1,w
  9436  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  9437  0FD2  0842               	movf	___ftadd@f1+2,w
  9438  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  9439  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  9440  0FD5  2FE8               	goto	l2265
  9441  0FD6  30FF               	movlw	255
  9442  0FD7  06C3               	xorwf	___ftadd@f2,f
  9443  0FD8  30FF               	movlw	255
  9444  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  9445  0FDA  30FF               	movlw	255
  9446  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  9447  0FDC  3001               	movlw	1
  9448  0FDD  07C3               	addwf	___ftadd@f2,f
  9449  0FDE  3000               	movlw	0
  9450  0FDF  1803               	skipnc
  9451  0FE0  3001               	movlw	1
  9452  0FE1  07C4               	addwf	___ftadd@f2+1,f
  9453  0FE2  3000               	movlw	0
  9454  0FE3  1803               	skipnc
  9455  0FE4  3001               	movlw	1
  9456  0FE5  07C5               	addwf	___ftadd@f2+2,f
  9457  0FE6  01CA               	clrf	___ftadd@sign
  9458  0FE7  0ACA               	incf	___ftadd@sign,f
  9459  0FE8                     l2265:	
  9460  0FE8  0843               	movf	___ftadd@f2,w
  9461  0FE9  00F0               	movwf	___ftpack@arg
  9462  0FEA  0844               	movf	___ftadd@f2+1,w
  9463  0FEB  00F1               	movwf	___ftpack@arg+1
  9464  0FEC  0845               	movf	___ftadd@f2+2,w
  9465  0FED  00F2               	movwf	___ftpack@arg+2
  9466  0FEE  084C               	movf	___ftadd@exp1,w
  9467  0FEF  00C6               	movwf	??___ftadd
  9468  0FF0  0846               	movf	??___ftadd,w
  9469  0FF1  00F3               	movwf	___ftpack@exp
  9470  0FF2  084A               	movf	___ftadd@sign,w
  9471  0FF3  00C7               	movwf	??___ftadd+1
  9472  0FF4  0847               	movf	??___ftadd+1,w
  9473  0FF5  00F4               	movwf	___ftpack@sign
  9474  0FF6  3189  21F0         	fcall	___ftpack
  9475  0FF8  0870               	movf	?___ftpack,w
  9476  0FF9  0020               	movlb	0	; select bank0
  9477  0FFA  00C0               	movwf	?___ftadd
  9478  0FFB  0871               	movf	?___ftpack+1,w
  9479  0FFC  00C1               	movwf	?___ftadd+1
  9480  0FFD  0872               	movf	?___ftpack+2,w
  9481  0FFE  00C2               	movwf	?___ftadd+2
  9482  0FFF  0008               	return
  9483  1000                     __end_of___ftadd:	
  9484                           
  9485                           	psect	text9
  9486  0B3B                     __ptext9:	
  9487 ;; *************** function _readButton *****************
  9488 ;; Defined at:
  9489 ;;		line 9 in file "buttons.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;		None
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;		None
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      unsigned char 
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0, pclath, cstack
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9507 ;;Total ram usage:        2 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    1
  9510 ;; This function calls:
  9511 ;;		_ADCRead
  9512 ;; This function is called by:
  9513 ;;		_main
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           
  9518                           ;psect for function _readButton
  9519  0B3B                     _readButton:	
  9520                           
  9521                           ;buttons.c: 11: readButtons = ADCRead(11);
  9522                           
  9523                           ;incstack = 0
  9524                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  9525  0B3B  300B               	movlw	11
  9526  0B3C  3194  247D  318B   	fcall	_ADCRead
  9527  0B3F  0871               	movf	?_ADCRead+1,w
  9528  0B40  0020               	movlb	0	; select bank0
  9529  0B41  00EB               	movwf	_readButtons+1
  9530  0B42  0870               	movf	?_ADCRead,w
  9531  0B43  00EA               	movwf	_readButtons
  9532                           
  9533                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  9534  0B44  086B               	movf	_readButtons+1,w
  9535  0B45  3A80               	xorlw	128
  9536  0B46  00F4               	movwf	??_readButton
  9537  0B47  3081               	movlw	129
  9538  0B48  0274               	subwf	??_readButton,w
  9539  0B49  1D03               	skipz
  9540  0B4A  2B4D               	goto	u3335
  9541  0B4B  306D               	movlw	109
  9542  0B4C  026A               	subwf	_readButtons,w
  9543  0B4D                     u3335:	
  9544  0B4D  1C03               	skipc
  9545  0B4E  2B5F               	goto	l2913
  9546  0B4F  0020               	movlb	0	; select bank0
  9547  0B50  086B               	movf	_readButtons+1,w
  9548  0B51  3A80               	xorlw	128
  9549  0B52  00F4               	movwf	??_readButton
  9550  0B53  3081               	movlw	129
  9551  0B54  0274               	subwf	??_readButton,w
  9552  0B55  1D03               	skipz
  9553  0B56  2B59               	goto	u3345
  9554  0B57  3095               	movlw	149
  9555  0B58  026A               	subwf	_readButtons,w
  9556  0B59                     u3345:	
  9557  0B59  1803               	skipnc
  9558  0B5A  2B5F               	goto	l2913
  9559                           
  9560                           ;buttons.c: 14: {
  9561                           ;buttons.c: 15: button = 1;
  9562  0B5B  0020               	movlb	0	; select bank0
  9563  0B5C  01EE               	clrf	_button
  9564  0B5D  0AEE               	incf	_button,f
  9565                           
  9566                           ;buttons.c: 16: }
  9567  0B5E  2B8D               	goto	l2925
  9568  0B5F                     l2913:	
  9569                           
  9570                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  9571  0B5F  0020               	movlb	0	; select bank0
  9572  0B60  086B               	movf	_readButtons+1,w
  9573  0B61  3A80               	xorlw	128
  9574  0B62  00F4               	movwf	??_readButton
  9575  0B63  3082               	movlw	130
  9576  0B64  0274               	subwf	??_readButton,w
  9577  0B65  1D03               	skipz
  9578  0B66  2B69               	goto	u3355
  9579  0B67  3017               	movlw	23
  9580  0B68  026A               	subwf	_readButtons,w
  9581  0B69                     u3355:	
  9582  0B69  1C03               	skipc
  9583  0B6A  2B79               	goto	l2919
  9584  0B6B  0020               	movlb	0	; select bank0
  9585  0B6C  086B               	movf	_readButtons+1,w
  9586  0B6D  3A80               	xorlw	128
  9587  0B6E  00F4               	movwf	??_readButton
  9588  0B6F  3082               	movlw	130
  9589  0B70  0274               	subwf	??_readButton,w
  9590  0B71  1D03               	skipz
  9591  0B72  2B75               	goto	u3365
  9592  0B73  304E               	movlw	78
  9593  0B74  026A               	subwf	_readButtons,w
  9594  0B75                     u3365:	
  9595  0B75  1803               	skipnc
  9596  0B76  2B79               	goto	l2919
  9597                           
  9598                           ;buttons.c: 19: {
  9599                           ;buttons.c: 20: button = 2;
  9600  0B77  3002               	movlw	2
  9601  0B78  2B86               	goto	L4
  9602  0B79                     l2919:	
  9603                           ;buttons.c: 21: }
  9604                           
  9605                           
  9606                           ;buttons.c: 23: else if(readButtons > 745)
  9607  0B79  0020               	movlb	0	; select bank0
  9608  0B7A  086B               	movf	_readButtons+1,w
  9609  0B7B  3A80               	xorlw	128
  9610  0B7C  00F4               	movwf	??_readButton
  9611  0B7D  3082               	movlw	130
  9612  0B7E  0274               	subwf	??_readButton,w
  9613  0B7F  1D03               	skipz
  9614  0B80  2B83               	goto	u3375
  9615  0B81  30EA               	movlw	234
  9616  0B82  026A               	subwf	_readButtons,w
  9617  0B83                     u3375:	
  9618  0B83  1C03               	skipc
  9619  0B84  2B8B               	goto	l2923
  9620                           
  9621                           ;buttons.c: 24: {
  9622                           ;buttons.c: 25: button = 3;
  9623  0B85  3003               	movlw	3
  9624  0B86                     L4:	
  9625  0B86  00F4               	movwf	??_readButton
  9626  0B87  0874               	movf	??_readButton,w
  9627  0B88  0020               	movlb	0	; select bank0
  9628  0B89  00EE               	movwf	_button
  9629                           
  9630                           ;buttons.c: 26: }
  9631  0B8A  2B8D               	goto	l2925
  9632  0B8B                     l2923:	
  9633                           
  9634                           ;buttons.c: 28: else
  9635                           ;buttons.c: 29: {
  9636                           ;buttons.c: 30: button = 0;
  9637  0B8B  0020               	movlb	0	; select bank0
  9638  0B8C  01EE               	clrf	_button
  9639  0B8D                     l2925:	
  9640                           
  9641                           ;buttons.c: 31: }
  9642                           ;buttons.c: 33: if (button != 0)
  9643  0B8D  086E               	movf	_button,w
  9644  0B8E  1903               	btfsc	3,2
  9645  0B8F  2BBA               	goto	l2945
  9646                           
  9647                           ;buttons.c: 34: {
  9648                           ;buttons.c: 35: if (button != lastButton)
  9649  0B90  086E               	movf	_button,w
  9650  0B91  066D               	xorwf	_lastButton,w
  9651  0B92  1903               	skipnz
  9652  0B93  2B99               	goto	l2933
  9653                           
  9654                           ;buttons.c: 36: {
  9655                           ;buttons.c: 37: lastButton = button;
  9656  0B94  086E               	movf	_button,w
  9657  0B95  00F4               	movwf	??_readButton
  9658  0B96  0874               	movf	??_readButton,w
  9659  0B97  00ED               	movwf	_lastButton
  9660  0B98  2BBA               	goto	l2945
  9661  0B99                     l2933:	
  9662                           ;buttons.c: 39: }
  9663                           
  9664                           ;buttons.c: 38: j = 0;
  9665                           
  9666                           
  9667                           ;buttons.c: 40: else
  9668                           ;buttons.c: 41: {
  9669                           ;buttons.c: 42: j += 1;
  9670  0B99  3001               	movlw	1
  9671  0B9A  00F4               	movwf	??_readButton
  9672  0B9B  0874               	movf	??_readButton,w
  9673  0B9C  07EC               	addwf	_j,f
  9674                           
  9675                           ;buttons.c: 44: if(j == 1)
  9676  0B9D  036C               	decf	_j,w
  9677  0B9E  1D03               	btfss	3,2
  9678  0B9F  2BA2               	goto	l2939
  9679                           
  9680                           ;buttons.c: 45: {
  9681                           ;buttons.c: 46: return (lastButton);
  9682  0BA0  086D               	movf	_lastButton,w
  9683  0BA1  0008               	return
  9684  0BA2                     l2939:	
  9685                           
  9686                           ;buttons.c: 47: }
  9687                           ;buttons.c: 49: if (j >10)
  9688  0BA2  086C               	movf	_j,w
  9689  0BA3  3A80               	xorlw	128
  9690  0BA4  3E75               	addlw	-139
  9691  0BA5  1C03               	skipc
  9692  0BA6  2BBB               	goto	l2947
  9693                           
  9694                           ;buttons.c: 50: {
  9695                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  9696  0BA7  3002               	movlw	2
  9697  0BA8  00F5               	movwf	??_readButton+1
  9698  0BA9  3004               	movlw	4
  9699  0BAA  00F4               	movwf	??_readButton
  9700  0BAB  30BA               	movlw	186
  9701  0BAC                     u3697:	
  9702  0BAC  0B89               	decfsz	9,f
  9703  0BAD  2BAC               	goto	u3697
  9704  0BAE  0BF4               	decfsz	??_readButton,f
  9705  0BAF  2BAC               	goto	u3697
  9706  0BB0  0BF5               	decfsz	??_readButton+1,f
  9707  0BB1  2BAC               	goto	u3697
  9708  0BB2  3200               	nop2
  9709                           
  9710                           ;buttons.c: 52: j = 10;
  9711  0BB3  300A               	movlw	10
  9712  0BB4  00F4               	movwf	??_readButton
  9713  0BB5  0874               	movf	??_readButton,w
  9714  0BB6  0020               	movlb	0	; select bank0
  9715  0BB7  00EC               	movwf	_j
  9716                           
  9717                           ;buttons.c: 53: return (lastButton);
  9718  0BB8  086D               	movf	_lastButton,w
  9719  0BB9  0008               	return
  9720  0BBA                     l2945:	
  9721                           ;buttons.c: 54: }
  9722                           ;buttons.c: 55: }
  9723                           ;buttons.c: 56: goto end;
  9724                           
  9725                           
  9726                           ;buttons.c: 57: }
  9727                           ;buttons.c: 59: j = 0;
  9728  0BBA  01EC               	clrf	_j
  9729  0BBB                     l2947:	
  9730                           ;buttons.c: 61: end:
  9731                           
  9732                           
  9733                           ;buttons.c: 63: return (0);
  9734  0BBB  3000               	movlw	0
  9735  0BBC  0008               	return
  9736  0BBD                     __end_of_readButton:	
  9737                           
  9738                           	psect	text10
  9739  0159                     __ptext10:	
  9740 ;; *************** function _readAnalog *****************
  9741 ;; Defined at:
  9742 ;;		line 49 in file "adc.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;  channel         2    6[BANK0 ] unsigned int 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;  value           2   28[BANK0 ] int 
  9747 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  2    6[BANK0 ] int 
  9750 ;; Registers used:
  9751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;Total ram usage:       24 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    1
  9764 ;; This function calls:
  9765 ;;		_ADCRead
  9766 ;;		___aldiv
  9767 ;;		___wmul
  9768 ;; This function is called by:
  9769 ;;		_main
  9770 ;; This function uses a non-reentrant model
  9771 ;;
  9772                           
  9773                           
  9774                           ;psect for function _readAnalog
  9775  0159                     _readAnalog:	
  9776                           
  9777                           ;adc.c: 51: int16_t value;
  9778                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  9779                           
  9780                           ;incstack = 0
  9781                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9782  0159  0020               	movlb	0	; select bank0
  9783  015A  3526               	lslf	readAnalog@channel,w
  9784  015B  3E50               	addlw	(low (_channels| (0+256)))& (0+255)
  9785  015C  0086               	movwf	6
  9786  015D  3001               	movlw	1	; select bank2/3
  9787  015E  0087               	movwf	7
  9788  015F  3F40               	moviw [0]fsr1
  9789  0160  00BA               	movwf	readAnalog@analog_channel
  9790  0161  3F41               	moviw [1]fsr1
  9791  0162  00BB               	movwf	readAnalog@analog_channel+1
  9792                           
  9793                           ;adc.c: 55: value = ADCRead(analog_channel);
  9794  0163  083A               	movf	readAnalog@analog_channel,w
  9795  0164  3194  247D  3181   	fcall	_ADCRead
  9796  0167  0871               	movf	?_ADCRead+1,w
  9797  0168  0020               	movlb	0	; select bank0
  9798  0169  00BD               	movwf	readAnalog@value+1
  9799  016A  0870               	movf	?_ADCRead,w
  9800  016B  00BC               	movwf	readAnalog@value
  9801                           
  9802                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9803  016C  0826               	movf	readAnalog@channel,w
  9804  016D  00A8               	movwf	??_readAnalog
  9805  016E  3001               	movlw	1
  9806  016F                     u2995:	
  9807  016F  35A8               	lslf	??_readAnalog,f
  9808  0170  3EFF               	addlw	-1
  9809  0171  1D03               	skipz
  9810  0172  296F               	goto	u2995
  9811  0173  3528               	lslf	??_readAnalog,w
  9812  0174  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9813  0175  0086               	movwf	6
  9814  0176  3001               	movlw	1	; select bank2/3
  9815  0177  0087               	movwf	7
  9816  0178  3F40               	moviw [0]fsr1
  9817  0179  00A9               	movwf	??_readAnalog+1
  9818  017A  3F41               	moviw [1]fsr1
  9819  017B  00AA               	movwf	??_readAnalog+2
  9820  017C  3F42               	moviw [2]fsr1
  9821  017D  00AB               	movwf	??_readAnalog+3
  9822  017E  3F43               	moviw [3]fsr1
  9823  017F  00AC               	movwf	??_readAnalog+4
  9824  0180  0021               	movlb	1	; select bank1
  9825  0181  085F               	movf	(_sampleIndex+1)^(0+128),w
  9826  0182  0020               	movlb	0	; select bank0
  9827  0183  00AE               	movwf	??_readAnalog+6
  9828  0184  0021               	movlb	1	; select bank1
  9829  0185  085E               	movf	_sampleIndex^(0+128),w
  9830  0186  0020               	movlb	0	; select bank0
  9831  0187  00AD               	movwf	??_readAnalog+5
  9832  0188  35AD               	lslf	??_readAnalog+5,f
  9833  0189  0DAE               	rlf	??_readAnalog+6,f
  9834  018A  0827               	movf	readAnalog@channel+1,w
  9835  018B  00FA               	movwf	___wmul@multiplier+1
  9836  018C  0826               	movf	readAnalog@channel,w
  9837  018D  00F9               	movwf	___wmul@multiplier
  9838  018E  305A               	movlw	90
  9839  018F  00FB               	movwf	___wmul@multiplicand
  9840  0190  3000               	movlw	0
  9841  0191  00FC               	movwf	___wmul@multiplicand+1
  9842  0192  3194  24EE  3181   	fcall	___wmul
  9843  0195  3020               	movlw	32
  9844  0196  0020               	movlb	0	; select bank0
  9845  0197  00AF               	movwf	??_readAnalog+7
  9846  0198  3021               	movlw	33
  9847  0199  00B0               	movwf	??_readAnalog+8
  9848  019A  0879               	movf	?___wmul,w
  9849  019B  072F               	addwf	??_readAnalog+7,w
  9850  019C  00B1               	movwf	??_readAnalog+9
  9851  019D  087A               	movf	?___wmul+1,w
  9852  019E  3D30               	addwfc	??_readAnalog+8,w
  9853  019F  00B2               	movwf	??_readAnalog+10
  9854  01A0  082D               	movf	??_readAnalog+5,w
  9855  01A1  0731               	addwf	??_readAnalog+9,w
  9856  01A2  0086               	movwf	6
  9857  01A3  082E               	movf	??_readAnalog+6,w
  9858  01A4  3D32               	addwfc	??_readAnalog+10,w
  9859  01A5  0087               	movwf	7
  9860  01A6  3F40               	moviw [0]fsr1
  9861  01A7  00B3               	movwf	??_readAnalog+11
  9862  01A8  3F41               	moviw [1]fsr1
  9863  01A9  00B4               	movwf	??_readAnalog+12
  9864  01AA  0833               	movf	??_readAnalog+11,w
  9865  01AB  00B5               	movwf	??_readAnalog+13
  9866  01AC  0834               	movf	??_readAnalog+12,w
  9867  01AD  00B6               	movwf	??_readAnalog+14
  9868  01AE  3000               	movlw	0
  9869  01AF  1BB6               	btfsc	??_readAnalog+14,7
  9870  01B0  30FF               	movlw	255
  9871  01B1  00B7               	movwf	??_readAnalog+15
  9872  01B2  00B8               	movwf	??_readAnalog+16
  9873  01B3  09B5               	comf	??_readAnalog+13,f
  9874  01B4  09B6               	comf	??_readAnalog+14,f
  9875  01B5  09B7               	comf	??_readAnalog+15,f
  9876  01B6  09B8               	comf	??_readAnalog+16,f
  9877  01B7  0AB5               	incf	??_readAnalog+13,f
  9878  01B8  1903               	skipnz
  9879  01B9  0AB6               	incf	??_readAnalog+14,f
  9880  01BA  1903               	skipnz
  9881  01BB  0AB7               	incf	??_readAnalog+15,f
  9882  01BC  1903               	skipnz
  9883  01BD  0AB8               	incf	??_readAnalog+16,f
  9884  01BE  0835               	movf	??_readAnalog+13,w
  9885  01BF  07A9               	addwf	??_readAnalog+1,f
  9886  01C0  0836               	movf	??_readAnalog+14,w
  9887  01C1  3DAA               	addwfc	??_readAnalog+2,f
  9888  01C2  0837               	movf	??_readAnalog+15,w
  9889  01C3  3DAB               	addwfc	??_readAnalog+3,f
  9890  01C4  0838               	movf	??_readAnalog+16,w
  9891  01C5  3DAC               	addwfc	??_readAnalog+4,f
  9892  01C6  0826               	movf	readAnalog@channel,w
  9893  01C7  00B9               	movwf	??_readAnalog+17
  9894  01C8  3001               	movlw	1
  9895  01C9                     u3005:	
  9896  01C9  35B9               	lslf	??_readAnalog+17,f
  9897  01CA  3EFF               	addlw	-1
  9898  01CB  1D03               	skipz
  9899  01CC  29C9               	goto	u3005
  9900  01CD  3539               	lslf	??_readAnalog+17,w
  9901  01CE  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9902  01CF  0086               	movwf	6
  9903  01D0  3001               	movlw	1	; select bank2/3
  9904  01D1  0087               	movwf	7
  9905  01D2  0829               	movf	??_readAnalog+1,w
  9906  01D3  3FC0               	movwi [0]fsr1
  9907  01D4  082A               	movf	??_readAnalog+2,w
  9908  01D5  3FC1               	movwi [1]fsr1
  9909  01D6  082B               	movf	??_readAnalog+3,w
  9910  01D7  3FC2               	movwi [2]fsr1
  9911  01D8  082C               	movf	??_readAnalog+4,w
  9912  01D9  3FC3               	movwi [3]fsr1
  9913                           
  9914                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  9915  01DA  0021               	movlb	1	; select bank1
  9916  01DB  085F               	movf	(_sampleIndex+1)^(0+128),w
  9917  01DC  0020               	movlb	0	; select bank0
  9918  01DD  00A9               	movwf	??_readAnalog+1
  9919  01DE  0021               	movlb	1	; select bank1
  9920  01DF  085E               	movf	_sampleIndex^(0+128),w
  9921  01E0  0020               	movlb	0	; select bank0
  9922  01E1  00A8               	movwf	??_readAnalog
  9923  01E2  35A8               	lslf	??_readAnalog,f
  9924  01E3  0DA9               	rlf	??_readAnalog+1,f
  9925  01E4  0827               	movf	readAnalog@channel+1,w
  9926  01E5  00FA               	movwf	___wmul@multiplier+1
  9927  01E6  0826               	movf	readAnalog@channel,w
  9928  01E7  00F9               	movwf	___wmul@multiplier
  9929  01E8  305A               	movlw	90
  9930  01E9  00FB               	movwf	___wmul@multiplicand
  9931  01EA  3000               	movlw	0
  9932  01EB  00FC               	movwf	___wmul@multiplicand+1
  9933  01EC  3194  24EE  3181   	fcall	___wmul
  9934  01EF  3020               	movlw	32
  9935  01F0  0020               	movlb	0	; select bank0
  9936  01F1  00AA               	movwf	??_readAnalog+2
  9937  01F2  3021               	movlw	33
  9938  01F3  00AB               	movwf	??_readAnalog+3
  9939  01F4  0879               	movf	?___wmul,w
  9940  01F5  072A               	addwf	??_readAnalog+2,w
  9941  01F6  00AC               	movwf	??_readAnalog+4
  9942  01F7  087A               	movf	?___wmul+1,w
  9943  01F8  3D2B               	addwfc	??_readAnalog+3,w
  9944  01F9  00AD               	movwf	??_readAnalog+5
  9945  01FA  0828               	movf	??_readAnalog,w
  9946  01FB  072C               	addwf	??_readAnalog+4,w
  9947  01FC  0086               	movwf	6
  9948  01FD  0829               	movf	??_readAnalog+1,w
  9949  01FE  3D2D               	addwfc	??_readAnalog+5,w
  9950  01FF  0087               	movwf	7
  9951  0200  083C               	movf	readAnalog@value,w
  9952  0201  3FC0               	movwi [0]fsr1
  9953  0202  083D               	movf	readAnalog@value+1,w
  9954  0203  3FC1               	movwi [1]fsr1
  9955                           
  9956                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9957  0204  0826               	movf	readAnalog@channel,w
  9958  0205  00A8               	movwf	??_readAnalog
  9959  0206  3001               	movlw	1
  9960  0207                     u3015:	
  9961  0207  35A8               	lslf	??_readAnalog,f
  9962  0208  3EFF               	addlw	-1
  9963  0209  1D03               	skipz
  9964  020A  2A07               	goto	u3015
  9965  020B  3528               	lslf	??_readAnalog,w
  9966  020C  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9967  020D  0086               	movwf	6
  9968  020E  3001               	movlw	1	; select bank2/3
  9969  020F  0087               	movwf	7
  9970  0210  3F40               	moviw [0]fsr1
  9971  0211  00A9               	movwf	??_readAnalog+1
  9972  0212  3F41               	moviw [1]fsr1
  9973  0213  00AA               	movwf	??_readAnalog+2
  9974  0214  3F42               	moviw [2]fsr1
  9975  0215  00AB               	movwf	??_readAnalog+3
  9976  0216  3F43               	moviw [3]fsr1
  9977  0217  00AC               	movwf	??_readAnalog+4
  9978  0218  0021               	movlb	1	; select bank1
  9979  0219  085F               	movf	(_sampleIndex+1)^(0+128),w
  9980  021A  0020               	movlb	0	; select bank0
  9981  021B  00AE               	movwf	??_readAnalog+6
  9982  021C  0021               	movlb	1	; select bank1
  9983  021D  085E               	movf	_sampleIndex^(0+128),w
  9984  021E  0020               	movlb	0	; select bank0
  9985  021F  00AD               	movwf	??_readAnalog+5
  9986  0220  35AD               	lslf	??_readAnalog+5,f
  9987  0221  0DAE               	rlf	??_readAnalog+6,f
  9988  0222  0827               	movf	readAnalog@channel+1,w
  9989  0223  00FA               	movwf	___wmul@multiplier+1
  9990  0224  0826               	movf	readAnalog@channel,w
  9991  0225  00F9               	movwf	___wmul@multiplier
  9992  0226  305A               	movlw	90
  9993  0227  00FB               	movwf	___wmul@multiplicand
  9994  0228  3000               	movlw	0
  9995  0229  00FC               	movwf	___wmul@multiplicand+1
  9996  022A  3194  24EE  3181   	fcall	___wmul
  9997  022D  3020               	movlw	32
  9998  022E  0020               	movlb	0	; select bank0
  9999  022F  00AF               	movwf	??_readAnalog+7
 10000  0230  3021               	movlw	33
 10001  0231  00B0               	movwf	??_readAnalog+8
 10002  0232  0879               	movf	?___wmul,w
 10003  0233  072F               	addwf	??_readAnalog+7,w
 10004  0234  00B1               	movwf	??_readAnalog+9
 10005  0235  087A               	movf	?___wmul+1,w
 10006  0236  3D30               	addwfc	??_readAnalog+8,w
 10007  0237  00B2               	movwf	??_readAnalog+10
 10008  0238  082D               	movf	??_readAnalog+5,w
 10009  0239  0731               	addwf	??_readAnalog+9,w
 10010  023A  0086               	movwf	6
 10011  023B  082E               	movf	??_readAnalog+6,w
 10012  023C  3D32               	addwfc	??_readAnalog+10,w
 10013  023D  0087               	movwf	7
 10014  023E  3F40               	moviw [0]fsr1
 10015  023F  00B3               	movwf	??_readAnalog+11
 10016  0240  3F41               	moviw [1]fsr1
 10017  0241  00B4               	movwf	??_readAnalog+12
 10018  0242  0833               	movf	??_readAnalog+11,w
 10019  0243  00B5               	movwf	??_readAnalog+13
 10020  0244  0834               	movf	??_readAnalog+12,w
 10021  0245  00B6               	movwf	??_readAnalog+14
 10022  0246  3000               	movlw	0
 10023  0247  1BB6               	btfsc	??_readAnalog+14,7
 10024  0248  30FF               	movlw	255
 10025  0249  00B7               	movwf	??_readAnalog+15
 10026  024A  00B8               	movwf	??_readAnalog+16
 10027  024B  0835               	movf	??_readAnalog+13,w
 10028  024C  07A9               	addwf	??_readAnalog+1,f
 10029  024D  0836               	movf	??_readAnalog+14,w
 10030  024E  3DAA               	addwfc	??_readAnalog+2,f
 10031  024F  0837               	movf	??_readAnalog+15,w
 10032  0250  3DAB               	addwfc	??_readAnalog+3,f
 10033  0251  0838               	movf	??_readAnalog+16,w
 10034  0252  3DAC               	addwfc	??_readAnalog+4,f
 10035  0253  0826               	movf	readAnalog@channel,w
 10036  0254  00B9               	movwf	??_readAnalog+17
 10037  0255  3001               	movlw	1
 10038  0256                     u3025:	
 10039  0256  35B9               	lslf	??_readAnalog+17,f
 10040  0257  3EFF               	addlw	-1
 10041  0258  1D03               	skipz
 10042  0259  2A56               	goto	u3025
 10043  025A  3539               	lslf	??_readAnalog+17,w
 10044  025B  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10045  025C  0086               	movwf	6
 10046  025D  3001               	movlw	1	; select bank2/3
 10047  025E  0087               	movwf	7
 10048  025F  0829               	movf	??_readAnalog+1,w
 10049  0260  3FC0               	movwi [0]fsr1
 10050  0261  082A               	movf	??_readAnalog+2,w
 10051  0262  3FC1               	movwi [1]fsr1
 10052  0263  082B               	movf	??_readAnalog+3,w
 10053  0264  3FC2               	movwi [2]fsr1
 10054  0265  082C               	movf	??_readAnalog+4,w
 10055  0266  3FC3               	movwi [3]fsr1
 10056                           
 10057                           ;adc.c: 63: if(channel>=(8-1))
 10058  0267  3000               	movlw	0
 10059  0268  0227               	subwf	readAnalog@channel+1,w
 10060  0269  3007               	movlw	7
 10061  026A  1903               	skipnz
 10062  026B  0226               	subwf	readAnalog@channel,w
 10063  026C  1C03               	skipc
 10064  026D  2A7C               	goto	l2787
 10065                           
 10066                           ;adc.c: 64: {
 10067                           ;adc.c: 65: sampleIndex+=1;
 10068  026E  3001               	movlw	1
 10069  026F  0021               	movlb	1	; select bank1
 10070  0270  07DE               	addwf	_sampleIndex^(0+128),f
 10071  0271  3000               	movlw	0
 10072  0272  3DDF               	addwfc	(_sampleIndex+1)^(0+128),f
 10073                           
 10074                           ;adc.c: 66: if(sampleIndex >= 45)sampleIndex = 0;
 10075  0273  3000               	movlw	0
 10076  0274  025F               	subwf	(_sampleIndex+1)^(0+128),w
 10077  0275  302D               	movlw	45
 10078  0276  1903               	skipnz
 10079  0277  025E               	subwf	_sampleIndex^(0+128),w
 10080  0278  1C03               	skipc
 10081  0279  2A7C               	goto	l2787
 10082  027A  01DE               	clrf	_sampleIndex^(0+128)
 10083  027B  01DF               	clrf	(_sampleIndex+1)^(0+128)
 10084  027C                     l2787:	
 10085                           
 10086                           ;adc.c: 67: }
 10087                           ;adc.c: 69: value = totals[channel]/45;
 10088  027C  3000               	movlw	0
 10089  027D  00F3               	movwf	___aldiv@divisor+3
 10090  027E  3000               	movlw	0
 10091  027F  00F2               	movwf	___aldiv@divisor+2
 10092  0280  3000               	movlw	0
 10093  0281  00F1               	movwf	___aldiv@divisor+1
 10094  0282  302D               	movlw	45
 10095  0283  00F0               	movwf	___aldiv@divisor
 10096  0284  0020               	movlb	0	; select bank0
 10097  0285  0826               	movf	readAnalog@channel,w
 10098  0286  00A8               	movwf	??_readAnalog
 10099  0287  3001               	movlw	1
 10100  0288                     u3055:	
 10101  0288  35A8               	lslf	??_readAnalog,f
 10102  0289  3EFF               	addlw	-1
 10103  028A  1D03               	skipz
 10104  028B  2A88               	goto	u3055
 10105  028C  3528               	lslf	??_readAnalog,w
 10106  028D  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10107  028E  0086               	movwf	6
 10108  028F  3001               	movlw	1	; select bank2/3
 10109  0290  0087               	movwf	7
 10110  0291  3F40               	moviw [0]fsr1
 10111  0292  00F4               	movwf	___aldiv@dividend
 10112  0293  3F41               	moviw [1]fsr1
 10113  0294  00F5               	movwf	___aldiv@dividend+1
 10114  0295  3F42               	moviw [2]fsr1
 10115  0296  00F6               	movwf	___aldiv@dividend+2
 10116  0297  3F43               	moviw [3]fsr1
 10117  0298  00F7               	movwf	___aldiv@dividend+3
 10118  0299  318A  22B9         	fcall	___aldiv
 10119  029B  0871               	movf	?___aldiv+1,w
 10120  029C  0020               	movlb	0	; select bank0
 10121  029D  00BD               	movwf	readAnalog@value+1
 10122  029E  0870               	movf	?___aldiv,w
 10123  029F  00BC               	movwf	readAnalog@value
 10124                           
 10125                           ;adc.c: 71: return value;
 10126  02A0  083D               	movf	readAnalog@value+1,w
 10127  02A1  00A7               	movwf	?_readAnalog+1
 10128  02A2  083C               	movf	readAnalog@value,w
 10129  02A3  00A6               	movwf	?_readAnalog
 10130  02A4  0008               	return
 10131  02A5                     __end_of_readAnalog:	
 10132                           
 10133                           	psect	text11
 10134  0AB9                     __ptext11:	
 10135 ;; *************** function ___aldiv *****************
 10136 ;; Defined at:
 10137 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;  divisor         4    0[COMMON] long 
 10140 ;;  dividend        4    4[COMMON] long 
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;  quotient        4    2[BANK0 ] long 
 10143 ;;  sign            1    1[BANK0 ] unsigned char 
 10144 ;;  counter         1    0[BANK0 ] unsigned char 
 10145 ;; Return value:  Size  Location     Type
 10146 ;;                  4    0[COMMON] long 
 10147 ;; Registers used:
 10148 ;;		wreg, status,2, status,0
 10149 ;; Tracked objects:
 10150 ;;		On entry : 0/0
 10151 ;;		On exit  : 0/0
 10152 ;;		Unchanged: 0/0
 10153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10154 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10158 ;;Total ram usage:       15 bytes
 10159 ;; Hardware stack levels used:    1
 10160 ;; This function calls:
 10161 ;;		Nothing
 10162 ;; This function is called by:
 10163 ;;		_readAnalog
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           
 10168                           ;psect for function ___aldiv
 10169  0AB9                     ___aldiv:	
 10170                           
 10171                           ;incstack = 0
 10172                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10173  0AB9  0020               	movlb	0	; select bank0
 10174  0ABA  01A1               	clrf	___aldiv@sign
 10175  0ABB  1FF3               	btfss	___aldiv@divisor+3,7
 10176  0ABC  2ACA               	goto	l626
 10177  0ABD  09F0               	comf	___aldiv@divisor,f
 10178  0ABE  09F1               	comf	___aldiv@divisor+1,f
 10179  0ABF  09F2               	comf	___aldiv@divisor+2,f
 10180  0AC0  09F3               	comf	___aldiv@divisor+3,f
 10181  0AC1  0AF0               	incf	___aldiv@divisor,f
 10182  0AC2  1903               	skipnz
 10183  0AC3  0AF1               	incf	___aldiv@divisor+1,f
 10184  0AC4  1903               	skipnz
 10185  0AC5  0AF2               	incf	___aldiv@divisor+2,f
 10186  0AC6  1903               	skipnz
 10187  0AC7  0AF3               	incf	___aldiv@divisor+3,f
 10188  0AC8  01A1               	clrf	___aldiv@sign
 10189  0AC9  0AA1               	incf	___aldiv@sign,f
 10190  0ACA                     l626:	
 10191  0ACA  1FF7               	btfss	___aldiv@dividend+3,7
 10192  0ACB  2ADB               	goto	l2585
 10193  0ACC  09F4               	comf	___aldiv@dividend,f
 10194  0ACD  09F5               	comf	___aldiv@dividend+1,f
 10195  0ACE  09F6               	comf	___aldiv@dividend+2,f
 10196  0ACF  09F7               	comf	___aldiv@dividend+3,f
 10197  0AD0  0AF4               	incf	___aldiv@dividend,f
 10198  0AD1  1903               	skipnz
 10199  0AD2  0AF5               	incf	___aldiv@dividend+1,f
 10200  0AD3  1903               	skipnz
 10201  0AD4  0AF6               	incf	___aldiv@dividend+2,f
 10202  0AD5  1903               	skipnz
 10203  0AD6  0AF7               	incf	___aldiv@dividend+3,f
 10204  0AD7  3001               	movlw	1
 10205  0AD8  00F8               	movwf	??___aldiv
 10206  0AD9  0878               	movf	??___aldiv,w
 10207  0ADA  06A1               	xorwf	___aldiv@sign,f
 10208  0ADB                     l2585:	
 10209  0ADB  3000               	movlw	0
 10210  0ADC  00A5               	movwf	___aldiv@quotient+3
 10211  0ADD  3000               	movlw	0
 10212  0ADE  00A4               	movwf	___aldiv@quotient+2
 10213  0ADF  3000               	movlw	0
 10214  0AE0  00A3               	movwf	___aldiv@quotient+1
 10215  0AE1  3000               	movlw	0
 10216  0AE2  00A2               	movwf	___aldiv@quotient
 10217  0AE3  0873               	movf	___aldiv@divisor+3,w
 10218  0AE4  0472               	iorwf	___aldiv@divisor+2,w
 10219  0AE5  0471               	iorwf	___aldiv@divisor+1,w
 10220  0AE6  0470               	iorwf	___aldiv@divisor,w
 10221  0AE7  1903               	skipnz
 10222  0AE8  2B24               	goto	l2607
 10223  0AE9  01A0               	clrf	___aldiv@counter
 10224  0AEA  0AA0               	incf	___aldiv@counter,f
 10225  0AEB                     l2593:	
 10226  0AEB  1BF3               	btfsc	___aldiv@divisor+3,7
 10227  0AEC  2AF9               	goto	l2595
 10228  0AED  3001               	movlw	1
 10229  0AEE                     u2575:	
 10230  0AEE  35F0               	lslf	___aldiv@divisor,f
 10231  0AEF  0DF1               	rlf	___aldiv@divisor+1,f
 10232  0AF0  0DF2               	rlf	___aldiv@divisor+2,f
 10233  0AF1  0DF3               	rlf	___aldiv@divisor+3,f
 10234  0AF2  0B89               	decfsz	9,f
 10235  0AF3  2AEE               	goto	u2575
 10236  0AF4  3001               	movlw	1
 10237  0AF5  00F8               	movwf	??___aldiv
 10238  0AF6  0878               	movf	??___aldiv,w
 10239  0AF7  07A0               	addwf	___aldiv@counter,f
 10240  0AF8  2AEB               	goto	l2593
 10241  0AF9                     l2595:	
 10242  0AF9  3001               	movlw	1
 10243  0AFA                     u2595:	
 10244  0AFA  35A2               	lslf	___aldiv@quotient,f
 10245  0AFB  0DA3               	rlf	___aldiv@quotient+1,f
 10246  0AFC  0DA4               	rlf	___aldiv@quotient+2,f
 10247  0AFD  0DA5               	rlf	___aldiv@quotient+3,f
 10248  0AFE  0B89               	decfsz	9,f
 10249  0AFF  2AFA               	goto	u2595
 10250  0B00  0873               	movf	___aldiv@divisor+3,w
 10251  0B01  0277               	subwf	___aldiv@dividend+3,w
 10252  0B02  1D03               	skipz
 10253  0B03  2B0E               	goto	u2605
 10254  0B04  0872               	movf	___aldiv@divisor+2,w
 10255  0B05  0276               	subwf	___aldiv@dividend+2,w
 10256  0B06  1D03               	skipz
 10257  0B07  2B0E               	goto	u2605
 10258  0B08  0871               	movf	___aldiv@divisor+1,w
 10259  0B09  0275               	subwf	___aldiv@dividend+1,w
 10260  0B0A  1D03               	skipz
 10261  0B0B  2B0E               	goto	u2605
 10262  0B0C  0870               	movf	___aldiv@divisor,w
 10263  0B0D  0274               	subwf	___aldiv@dividend,w
 10264  0B0E                     u2605:	
 10265  0B0E  1C03               	skipc
 10266  0B0F  2B19               	goto	l2603
 10267  0B10  0870               	movf	___aldiv@divisor,w
 10268  0B11  02F4               	subwf	___aldiv@dividend,f
 10269  0B12  0871               	movf	___aldiv@divisor+1,w
 10270  0B13  3BF5               	subwfb	___aldiv@dividend+1,f
 10271  0B14  0872               	movf	___aldiv@divisor+2,w
 10272  0B15  3BF6               	subwfb	___aldiv@dividend+2,f
 10273  0B16  0873               	movf	___aldiv@divisor+3,w
 10274  0B17  3BF7               	subwfb	___aldiv@dividend+3,f
 10275  0B18  1422               	bsf	___aldiv@quotient,0
 10276  0B19                     l2603:	
 10277  0B19  3001               	movlw	1
 10278  0B1A                     u2615:	
 10279  0B1A  36F3               	lsrf	___aldiv@divisor+3,f
 10280  0B1B  0CF2               	rrf	___aldiv@divisor+2,f
 10281  0B1C  0CF1               	rrf	___aldiv@divisor+1,f
 10282  0B1D  0CF0               	rrf	___aldiv@divisor,f
 10283  0B1E  0B89               	decfsz	9,f
 10284  0B1F  2B1A               	goto	u2615
 10285  0B20  3001               	movlw	1
 10286  0B21  02A0               	subwf	___aldiv@counter,f
 10287  0B22  1D03               	btfss	3,2
 10288  0B23  2AF9               	goto	l2595
 10289  0B24                     l2607:	
 10290  0B24  0821               	movf	___aldiv@sign,w
 10291  0B25  1903               	btfsc	3,2
 10292  0B26  2B32               	goto	l2611
 10293  0B27  09A2               	comf	___aldiv@quotient,f
 10294  0B28  09A3               	comf	___aldiv@quotient+1,f
 10295  0B29  09A4               	comf	___aldiv@quotient+2,f
 10296  0B2A  09A5               	comf	___aldiv@quotient+3,f
 10297  0B2B  0AA2               	incf	___aldiv@quotient,f
 10298  0B2C  1903               	skipnz
 10299  0B2D  0AA3               	incf	___aldiv@quotient+1,f
 10300  0B2E  1903               	skipnz
 10301  0B2F  0AA4               	incf	___aldiv@quotient+2,f
 10302  0B30  1903               	skipnz
 10303  0B31  0AA5               	incf	___aldiv@quotient+3,f
 10304  0B32                     l2611:	
 10305  0B32  0825               	movf	___aldiv@quotient+3,w
 10306  0B33  00F3               	movwf	?___aldiv+3
 10307  0B34  0824               	movf	___aldiv@quotient+2,w
 10308  0B35  00F2               	movwf	?___aldiv+2
 10309  0B36  0823               	movf	___aldiv@quotient+1,w
 10310  0B37  00F1               	movwf	?___aldiv+1
 10311  0B38  0822               	movf	___aldiv@quotient,w
 10312  0B39  00F0               	movwf	?___aldiv
 10313  0B3A  0008               	return
 10314  0B3B                     __end_of___aldiv:	
 10315                           
 10316                           	psect	text12
 10317  147D                     __ptext12:	
 10318 ;; *************** function _ADCRead *****************
 10319 ;; Defined at:
 10320 ;;		line 19 in file "adc.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;  channel         1    wreg     enum E14259
 10323 ;; Auto vars:     Size  Location     Type
 10324 ;;  channel         1    3[COMMON] enum E14259
 10325 ;; Return value:  Size  Location     Type
 10326 ;;                  2    0[COMMON] int 
 10327 ;; Registers used:
 10328 ;;		wreg
 10329 ;; Tracked objects:
 10330 ;;		On entry : 0/0
 10331 ;;		On exit  : 0/0
 10332 ;;		Unchanged: 0/0
 10333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10334 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10338 ;;Total ram usage:        4 bytes
 10339 ;; Hardware stack levels used:    1
 10340 ;; This function calls:
 10341 ;;		Nothing
 10342 ;; This function is called by:
 10343 ;;		_readAnalog
 10344 ;;		_readButton
 10345 ;;		_main
 10346 ;; This function uses a non-reentrant model
 10347 ;;
 10348                           
 10349                           
 10350                           ;psect for function _ADCRead
 10351  147D                     _ADCRead:	
 10352                           
 10353                           ;incstack = 0
 10354                           ; Regs used in _ADCRead: [wreg]
 10355                           ;ADCRead@channel stored from wreg
 10356  147D  00F3               	movwf	ADCRead@channel
 10357                           
 10358                           ;adc.c: 21: ADPCH = channel_VSS;
 10359  147E  303C               	movlw	60
 10360  147F  0021               	movlb	1	; select bank1
 10361  1480  009E               	movwf	30	;volatile
 10362                           
 10363                           ;adc.c: 23: ADCON0bits.ADON = 1;
 10364  1481  1793               	bsf	19,7	;volatile
 10365                           
 10366                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
 10367  1482  1313               	bcf	19,6	;volatile
 10368                           
 10369                           ;adc.c: 27: ADCON0bits.ADGO = 1;
 10370  1483  1413               	bsf	19,0	;volatile
 10371  1484                     l57:	
 10372                           ;adc.c: 30: {
 10373                           
 10374                           ;adc.c: 29: while(ADCON0bits.ADGO)
 10375                           
 10376  1484  1813               	btfsc	19,0	;volatile
 10377  1485  2C84               	goto	l57
 10378                           
 10379                           ;adc.c: 31: }
 10380                           ;adc.c: 33: ADPCH = channel;
 10381  1486  0873               	movf	ADCRead@channel,w
 10382  1487  009E               	movwf	30	;volatile
 10383                           
 10384                           ;adc.c: 35: ADCON0bits.ADON = 1;
 10385  1488  1793               	bsf	19,7	;volatile
 10386                           
 10387                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
 10388  1489  1313               	bcf	19,6	;volatile
 10389                           
 10390                           ;adc.c: 39: ADCON0bits.ADGO = 1;
 10391  148A  1413               	bsf	19,0	;volatile
 10392  148B                     l60:	
 10393                           ;adc.c: 42: {
 10394                           
 10395                           ;adc.c: 41: while(ADCON0bits.ADGO)
 10396                           
 10397  148B  1813               	btfsc	19,0	;volatile
 10398  148C  2C8B               	goto	l60
 10399                           
 10400                           ;adc.c: 43: }
 10401                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
 10402  148D  080D               	movf	13,w	;volatile
 10403  148E  00F1               	movwf	?_ADCRead+1
 10404  148F  080C               	movf	12,w	;volatile
 10405  1490  00F0               	movwf	?_ADCRead
 10406  1491  0008               	return
 10407  1492                     __end_of_ADCRead:	
 10408                           
 10409                           	psect	text13
 10410  16E4                     __ptext13:	
 10411 ;; *************** function _cc_cv_mode *****************
 10412 ;; Defined at:
 10413 ;;		line 88 in file "battery_charger.c"
 10414 ;; Parameters:    Size  Location     Type
 10415 ;;		None
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;		None
 10418 ;; Return value:  Size  Location     Type
 10419 ;;                  1    wreg      void 
 10420 ;; Registers used:
 10421 ;;		wreg, status,2, status,0
 10422 ;; Tracked objects:
 10423 ;;		On entry : 0/0
 10424 ;;		On exit  : 0/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10430 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10431 ;;Total ram usage:        1 bytes
 10432 ;; Hardware stack levels used:    1
 10433 ;; This function calls:
 10434 ;;		Nothing
 10435 ;; This function is called by:
 10436 ;;		_main
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           
 10441                           ;psect for function _cc_cv_mode
 10442  16E4                     _cc_cv_mode:	
 10443                           
 10444                           ;battery_charger.c: 90: if(voltage[1] > Vref)
 10445                           
 10446                           ;incstack = 0
 10447                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 10448  16E4  0021               	movlb	1	; select bank1
 10449  16E5  0862               	movf	(_Vref+1)^(0+128),w
 10450  16E6  3A80               	xorlw	128
 10451  16E7  00F0               	movwf	??_cc_cv_mode
 10452  16E8  084C               	movf	((_voltage+1)^(0+128)+2),w
 10453  16E9  3A80               	xorlw	128
 10454  16EA  0270               	subwf	??_cc_cv_mode,w
 10455  16EB  1D03               	skipz
 10456  16EC  2EEF               	goto	u3155
 10457  16ED  084B               	movf	(_voltage^(0+128)+2),w
 10458  16EE  0261               	subwf	_Vref^(0+128),w
 10459  16EF                     u3155:	
 10460  16EF  1803               	skipnc
 10461  16F0  2EFD               	goto	l2833
 10462                           
 10463                           ;battery_charger.c: 91: {
 10464                           ;battery_charger.c: 92: if(cc_cv)
 10465  16F1  0021               	movlb	1	; select bank1
 10466  16F2  0860               	movf	_cc_cv^(0+128),w
 10467  16F3  1903               	btfsc	3,2
 10468  16F4  2EF8               	goto	l2829
 10469                           
 10470                           ;battery_charger.c: 93: {
 10471                           ;battery_charger.c: 94: cc_cv-=1;
 10472  16F5  3001               	movlw	1
 10473  16F6  02E0               	subwf	_cc_cv^(0+128),f
 10474                           
 10475                           ;battery_charger.c: 95: }
 10476  16F7  0008               	return
 10477  16F8                     l2829:	
 10478                           
 10479                           ;battery_charger.c: 96: else
 10480                           ;battery_charger.c: 97: {
 10481                           ;battery_charger.c: 98: if(Imode0)
 10482  16F8  086D               	movf	_Imode0^(0+128),w
 10483  16F9  1903               	btfsc	3,2
 10484  16FA  0008               	return
 10485                           
 10486                           ;battery_charger.c: 99: {
 10487                           ;battery_charger.c: 100: Imode0 = 0;
 10488  16FB  01ED               	clrf	_Imode0^(0+128)
 10489                           
 10490                           ;battery_charger.c: 101: }
 10491                           ;battery_charger.c: 102: }
 10492                           ;battery_charger.c: 103: }
 10493  16FC  0008               	return
 10494  16FD                     l2833:	
 10495                           
 10496                           ;battery_charger.c: 104: else if(current[1] > Iref)
 10497  16FD  0021               	movlb	1	; select bank1
 10498  16FE  0864               	movf	(_Iref+1)^(0+128),w
 10499  16FF  3A80               	xorlw	128
 10500  1700  00F0               	movwf	??_cc_cv_mode
 10501  1701  0844               	movf	((_current+1)^(0+128)+2),w
 10502  1702  3A80               	xorlw	128
 10503  1703  0270               	subwf	??_cc_cv_mode,w
 10504  1704  1D03               	skipz
 10505  1705  2F08               	goto	u3185
 10506  1706  0843               	movf	(_current^(0+128)+2),w
 10507  1707  0263               	subwf	_Iref^(0+128),w
 10508  1708                     u3185:	
 10509  1708  1803               	skipnc
 10510  1709  0008               	return
 10511                           
 10512                           ;battery_charger.c: 105: {
 10513                           ;battery_charger.c: 106: if(!Imode0)
 10514  170A  0021               	movlb	1	; select bank1
 10515  170B  086D               	movf	_Imode0^(0+128),w
 10516  170C  1D03               	btfss	3,2
 10517  170D  0008               	return
 10518                           
 10519                           ;battery_charger.c: 107: {
 10520                           ;battery_charger.c: 108: if(battery_state == FLOAT)
 10521  170E  3005               	movlw	5
 10522  170F  066B               	xorwf	_battery_state^(0+128),w
 10523  1710  1D03               	btfss	3,2
 10524  1711  2F1E               	goto	l2841
 10525                           
 10526                           ;battery_charger.c: 109: {
 10527                           ;battery_charger.c: 110: battery_state=CHARGE;
 10528  1712  3004               	movlw	4
 10529  1713  00F0               	movwf	??_cc_cv_mode
 10530  1714  0870               	movf	??_cc_cv_mode,w
 10531  1715  00EB               	movwf	_battery_state^(0+128)
 10532                           
 10533                           ;battery_charger.c: 111: { Vref = 1425; };
 10534  1716  3091               	movlw	145
 10535  1717  00E1               	movwf	_Vref^(0+128)
 10536  1718  3005               	movlw	5
 10537  1719  00E2               	movwf	(_Vref^(0+128)+1)
 10538                           
 10539                           ;battery_charger.c: 112: { Iref = 40; };
 10540  171A  3028               	movlw	40
 10541  171B  00E3               	movwf	_Iref^(0+128)
 10542  171C  3000               	movlw	0
 10543  171D  00E4               	movwf	(_Iref^(0+128)+1)
 10544  171E                     l2841:	
 10545                           
 10546                           ;battery_charger.c: 113: }
 10547                           ;battery_charger.c: 114: Imode0 = 1;
 10548  171E  01ED               	clrf	_Imode0^(0+128)
 10549  171F  0AED               	incf	_Imode0^(0+128),f
 10550                           
 10551                           ;battery_charger.c: 115: cc_cv = 10;
 10552  1720  300A               	movlw	10
 10553  1721  00F0               	movwf	??_cc_cv_mode
 10554  1722  0870               	movf	??_cc_cv_mode,w
 10555  1723  00E0               	movwf	_cc_cv^(0+128)
 10556  1724  0008               	return
 10557  1725                     __end_of_cc_cv_mode:	
 10558                           
 10559                           	psect	text14
 10560  176A                     __ptext14:	
 10561 ;; *************** function _calculateCurrent1 *****************
 10562 ;; Defined at:
 10563 ;;		line 274 in file "main.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;		None
 10566 ;; Auto vars:     Size  Location     Type
 10567 ;;		None
 10568 ;; Return value:  Size  Location     Type
 10569 ;;                  1    wreg      void 
 10570 ;; Registers used:
 10571 ;;		wreg, status,2, status,0, pclath, cstack
 10572 ;; Tracked objects:
 10573 ;;		On entry : 0/0
 10574 ;;		On exit  : 0/0
 10575 ;;		Unchanged: 0/0
 10576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10579 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10580 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10581 ;;Total ram usage:        3 bytes
 10582 ;; Hardware stack levels used:    1
 10583 ;; Hardware stack levels required when called:    2
 10584 ;; This function calls:
 10585 ;;		___awtoft
 10586 ;;		___ftdiv
 10587 ;;		___fttol
 10588 ;; This function is called by:
 10589 ;;		_main
 10590 ;; This function uses a non-reentrant model
 10591 ;;
 10592                           
 10593                           
 10594                           ;psect for function _calculateCurrent1
 10595  176A                     _calculateCurrent1:	
 10596                           
 10597                           ;main.c: 276: if(analogs[5]-578<=0)
 10598                           
 10599                           ;incstack = 0
 10600                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10601  176A  0022               	movlb	2	; select bank2
 10602  176B  084A               	movf	(_analogs^(0+256)+10),w
 10603  176C  3EBE               	addlw	190
 10604  176D  0020               	movlb	0	; select bank0
 10605  176E  00BE               	movwf	??_calculateCurrent1
 10606  176F  30FD               	movlw	253
 10607  1770  0022               	movlb	2	; select bank2
 10608  1771  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10609  1772  0020               	movlb	0	; select bank0
 10610  1773  00BF               	movwf	??_calculateCurrent1+1
 10611  1774  083F               	movf	??_calculateCurrent1+1,w
 10612  1775  3A80               	xorlw	128
 10613  1776  00C0               	movwf	??_calculateCurrent1+2
 10614  1777  3080               	movlw	128
 10615  1778  0240               	subwf	??_calculateCurrent1+2,w
 10616  1779  1D03               	skipz
 10617  177A  2F7D               	goto	u3435
 10618  177B  3001               	movlw	1
 10619  177C  023E               	subwf	??_calculateCurrent1,w
 10620  177D                     u3435:	
 10621  177D  1803               	skipnc
 10622  177E  2F83               	goto	l2981
 10623                           
 10624                           ;main.c: 277: {
 10625                           ;main.c: 278: current[1]=0;
 10626  177F  0021               	movlb	1	; select bank1
 10627  1780  01C3               	clrf	(_current^(0+128)+2)
 10628  1781  01C4               	clrf	((_current+1)^(0+128)+2)
 10629                           
 10630                           ;main.c: 279: }
 10631  1782  0008               	return
 10632  1783                     l2981:	
 10633                           
 10634                           ;main.c: 280: else
 10635                           ;main.c: 281: {
 10636                           ;main.c: 282: current[1]=(int16_t)((analogs[5]-578)/3.2323);
 10637  1783  0022               	movlb	2	; select bank2
 10638  1784  084A               	movf	(_analogs^(0+256)+10),w
 10639  1785  3EBE               	addlw	190
 10640  1786  00F8               	movwf	___awtoft@c
 10641  1787  30FD               	movlw	253
 10642  1788  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10643  1789  00F9               	movwf	___awtoft@c+1
 10644  178A  3195  2568  3197   	fcall	___awtoft
 10645  178D  0878               	movf	?___awtoft,w
 10646  178E  0020               	movlb	0	; select bank0
 10647  178F  00A3               	movwf	___ftdiv@f1
 10648  1790  0879               	movf	?___awtoft+1,w
 10649  1791  00A4               	movwf	___ftdiv@f1+1
 10650  1792  087A               	movf	?___awtoft+2,w
 10651  1793  00A5               	movwf	___ftdiv@f1+2
 10652  1794  30DE               	movlw	222
 10653  1795  00A0               	movwf	___ftdiv@f2
 10654  1796  304E               	movlw	78
 10655  1797  00A1               	movwf	___ftdiv@f2+1
 10656  1798  3040               	movlw	64
 10657  1799  00A2               	movwf	___ftdiv@f2+2
 10658  179A  318C  2444  3197   	fcall	___ftdiv
 10659  179D  0020               	movlb	0	; select bank0
 10660  179E  0820               	movf	?___ftdiv,w
 10661  179F  00B0               	movwf	___fttol@f1
 10662  17A0  0821               	movf	?___ftdiv+1,w
 10663  17A1  00B1               	movwf	___fttol@f1+1
 10664  17A2  0822               	movf	?___ftdiv+2,w
 10665  17A3  00B2               	movwf	___fttol@f1+2
 10666  17A4  318B  23BD         	fcall	___fttol
 10667  17A6  0020               	movlb	0	; select bank0
 10668  17A7  0831               	movf	?___fttol+1,w
 10669  17A8  0021               	movlb	1	; select bank1
 10670  17A9  00C4               	movwf	((_current+1)^(0+128)+2)
 10671  17AA  0020               	movlb	0	; select bank0
 10672  17AB  0830               	movf	?___fttol,w
 10673  17AC  0021               	movlb	1	; select bank1
 10674  17AD  00C3               	movwf	(_current^(0+128)+2)
 10675  17AE  0008               	return
 10676  17AF                     __end_of_calculateCurrent1:	
 10677                           
 10678                           	psect	text15
 10679  1725                     __ptext15:	
 10680 ;; *************** function _calculateCurrent0 *****************
 10681 ;; Defined at:
 10682 ;;		line 262 in file "main.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;		None
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;		None
 10687 ;; Return value:  Size  Location     Type
 10688 ;;                  1    wreg      void 
 10689 ;; Registers used:
 10690 ;;		wreg, status,2, status,0, pclath, cstack
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10699 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10700 ;;Total ram usage:        3 bytes
 10701 ;; Hardware stack levels used:    1
 10702 ;; Hardware stack levels required when called:    2
 10703 ;; This function calls:
 10704 ;;		___awtoft
 10705 ;;		___ftdiv
 10706 ;;		___fttol
 10707 ;; This function is called by:
 10708 ;;		_main
 10709 ;; This function uses a non-reentrant model
 10710 ;;
 10711                           
 10712                           
 10713                           ;psect for function _calculateCurrent0
 10714  1725                     _calculateCurrent0:	
 10715                           
 10716                           ;main.c: 264: if(analogs[4]-589<=0)
 10717                           
 10718                           ;incstack = 0
 10719                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 10720  1725  0022               	movlb	2	; select bank2
 10721  1726  0848               	movf	(_analogs^(0+256)+8),w
 10722  1727  3EB3               	addlw	179
 10723  1728  0020               	movlb	0	; select bank0
 10724  1729  00BE               	movwf	??_calculateCurrent0
 10725  172A  30FD               	movlw	253
 10726  172B  0022               	movlb	2	; select bank2
 10727  172C  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10728  172D  0020               	movlb	0	; select bank0
 10729  172E  00BF               	movwf	??_calculateCurrent0+1
 10730  172F  083F               	movf	??_calculateCurrent0+1,w
 10731  1730  3A80               	xorlw	128
 10732  1731  00C0               	movwf	??_calculateCurrent0+2
 10733  1732  3080               	movlw	128
 10734  1733  0240               	subwf	??_calculateCurrent0+2,w
 10735  1734  1D03               	skipz
 10736  1735  2F38               	goto	u3425
 10737  1736  3001               	movlw	1
 10738  1737  023E               	subwf	??_calculateCurrent0,w
 10739  1738                     u3425:	
 10740  1738  1803               	skipnc
 10741  1739  2F3E               	goto	l2975
 10742                           
 10743                           ;main.c: 265: {
 10744                           ;main.c: 266: current[0]=0;
 10745  173A  0021               	movlb	1	; select bank1
 10746  173B  01C1               	clrf	_current^(0+128)
 10747  173C  01C2               	clrf	(_current+1)^(0+128)
 10748                           
 10749                           ;main.c: 267: }
 10750  173D  0008               	return
 10751  173E                     l2975:	
 10752                           
 10753                           ;main.c: 268: else
 10754                           ;main.c: 269: {
 10755                           ;main.c: 270: current[0]=(int16_t)((analogs[4]-589)/1.3165);
 10756  173E  0022               	movlb	2	; select bank2
 10757  173F  0848               	movf	(_analogs^(0+256)+8),w
 10758  1740  3EB3               	addlw	179
 10759  1741  00F8               	movwf	___awtoft@c
 10760  1742  30FD               	movlw	253
 10761  1743  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10762  1744  00F9               	movwf	___awtoft@c+1
 10763  1745  3195  2568  3197   	fcall	___awtoft
 10764  1748  0878               	movf	?___awtoft,w
 10765  1749  0020               	movlb	0	; select bank0
 10766  174A  00A3               	movwf	___ftdiv@f1
 10767  174B  0879               	movf	?___awtoft+1,w
 10768  174C  00A4               	movwf	___ftdiv@f1+1
 10769  174D  087A               	movf	?___awtoft+2,w
 10770  174E  00A5               	movwf	___ftdiv@f1+2
 10771  174F  3083               	movlw	131
 10772  1750  00A0               	movwf	___ftdiv@f2
 10773  1751  30A8               	movlw	168
 10774  1752  00A1               	movwf	___ftdiv@f2+1
 10775  1753  303F               	movlw	63
 10776  1754  00A2               	movwf	___ftdiv@f2+2
 10777  1755  318C  2444  3197   	fcall	___ftdiv
 10778  1758  0020               	movlb	0	; select bank0
 10779  1759  0820               	movf	?___ftdiv,w
 10780  175A  00B0               	movwf	___fttol@f1
 10781  175B  0821               	movf	?___ftdiv+1,w
 10782  175C  00B1               	movwf	___fttol@f1+1
 10783  175D  0822               	movf	?___ftdiv+2,w
 10784  175E  00B2               	movwf	___fttol@f1+2
 10785  175F  318B  23BD         	fcall	___fttol
 10786  1761  0020               	movlb	0	; select bank0
 10787  1762  0831               	movf	?___fttol+1,w
 10788  1763  0021               	movlb	1	; select bank1
 10789  1764  00C2               	movwf	(_current+1)^(0+128)
 10790  1765  0020               	movlb	0	; select bank0
 10791  1766  0830               	movf	?___fttol,w
 10792  1767  0021               	movlb	1	; select bank1
 10793  1768  00C1               	movwf	_current^(0+128)
 10794  1769  0008               	return
 10795  176A                     __end_of_calculateCurrent0:	
 10796                           
 10797                           	psect	text16
 10798  0BBD                     __ptext16:	
 10799 ;; *************** function ___fttol *****************
 10800 ;; Defined at:
 10801 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 10802 ;; Parameters:    Size  Location     Type
 10803 ;;  f1              3   16[BANK0 ] float 
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;  lval            4   25[BANK0 ] unsigned long 
 10806 ;;  exp1            1   29[BANK0 ] unsigned char 
 10807 ;;  sign1           1   24[BANK0 ] unsigned char 
 10808 ;; Return value:  Size  Location     Type
 10809 ;;                  4   16[BANK0 ] long 
 10810 ;; Registers used:
 10811 ;;		wreg, status,2, status,0
 10812 ;; Tracked objects:
 10813 ;;		On entry : 0/0
 10814 ;;		On exit  : 0/0
 10815 ;;		Unchanged: 0/0
 10816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10817 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;Total ram usage:       14 bytes
 10822 ;; Hardware stack levels used:    1
 10823 ;; This function calls:
 10824 ;;		Nothing
 10825 ;; This function is called by:
 10826 ;;		_tempCalc
 10827 ;;		_main
 10828 ;;		_calculateCurrent0
 10829 ;;		_calculateCurrent1
 10830 ;;		_calculateCurrent2
 10831 ;;		_calculateCurrent3
 10832 ;; This function uses a non-reentrant model
 10833 ;;
 10834                           
 10835                           
 10836                           ;psect for function ___fttol
 10837  0BBD                     ___fttol:	
 10838                           
 10839                           ;incstack = 0
 10840                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10841  0BBD  0020               	movlb	0	; select bank0
 10842  0BBE  0830               	movf	___fttol@f1,w
 10843  0BBF  00B4               	movwf	??___fttol
 10844  0BC0  0831               	movf	___fttol@f1+1,w
 10845  0BC1  00B5               	movwf	??___fttol+1
 10846  0BC2  0832               	movf	___fttol@f1+2,w
 10847  0BC3  00B6               	movwf	??___fttol+2
 10848  0BC4  1003               	clrc
 10849  0BC5  0D35               	rlf	??___fttol+1,w
 10850  0BC6  0D36               	rlf	??___fttol+2,w
 10851  0BC7  00B7               	movwf	??___fttol+3
 10852  0BC8  0837               	movf	??___fttol+3,w
 10853  0BC9  00BD               	movwf	___fttol@exp1
 10854  0BCA  083D               	movf	___fttol@exp1,w
 10855  0BCB  1D03               	btfss	3,2
 10856  0BCC  2BD6               	goto	l2715
 10857  0BCD  3000               	movlw	0
 10858  0BCE  00B3               	movwf	?___fttol+3
 10859  0BCF  3000               	movlw	0
 10860  0BD0  00B2               	movwf	?___fttol+2
 10861  0BD1  3000               	movlw	0
 10862  0BD2  00B1               	movwf	?___fttol+1
 10863  0BD3  3000               	movlw	0
 10864  0BD4  00B0               	movwf	?___fttol
 10865  0BD5  0008               	return
 10866  0BD6                     l2715:	
 10867  0BD6  0830               	movf	___fttol@f1,w
 10868  0BD7  00B4               	movwf	??___fttol
 10869  0BD8  0831               	movf	___fttol@f1+1,w
 10870  0BD9  00B5               	movwf	??___fttol+1
 10871  0BDA  0832               	movf	___fttol@f1+2,w
 10872  0BDB  00B6               	movwf	??___fttol+2
 10873  0BDC  3017               	movlw	23
 10874  0BDD                     u2845:	
 10875  0BDD  36B6               	lsrf	??___fttol+2,f
 10876  0BDE  0CB5               	rrf	??___fttol+1,f
 10877  0BDF  0CB4               	rrf	??___fttol,f
 10878  0BE0  0B89               	decfsz	9,f
 10879  0BE1  2BDD               	goto	u2845
 10880  0BE2  0834               	movf	??___fttol,w
 10881  0BE3  00B7               	movwf	??___fttol+3
 10882  0BE4  0837               	movf	??___fttol+3,w
 10883  0BE5  00B8               	movwf	___fttol@sign1
 10884  0BE6  17B1               	bsf	___fttol@f1+1,7
 10885  0BE7  30FF               	movlw	255
 10886  0BE8  05B0               	andwf	___fttol@f1,f
 10887  0BE9  30FF               	movlw	255
 10888  0BEA  05B1               	andwf	___fttol@f1+1,f
 10889  0BEB  3000               	movlw	0
 10890  0BEC  05B2               	andwf	___fttol@f1+2,f
 10891  0BED  0830               	movf	___fttol@f1,w
 10892  0BEE  00B9               	movwf	___fttol@lval
 10893  0BEF  0831               	movf	___fttol@f1+1,w
 10894  0BF0  00BA               	movwf	___fttol@lval+1
 10895  0BF1  0832               	movf	___fttol@f1+2,w
 10896  0BF2  00BB               	movwf	___fttol@lval+2
 10897  0BF3  01BC               	clrf	___fttol@lval+3
 10898  0BF4  308E               	movlw	142
 10899  0BF5  02BD               	subwf	___fttol@exp1,f
 10900  0BF6  1FBD               	btfss	___fttol@exp1,7
 10901  0BF7  2C14               	goto	l2735
 10902  0BF8  083D               	movf	___fttol@exp1,w
 10903  0BF9  3A80               	xorlw	128
 10904  0BFA  3E8F               	addlw	143
 10905  0BFB  1803               	skipnc
 10906  0BFC  2C06               	goto	l2733
 10907  0BFD  3000               	movlw	0
 10908  0BFE  00B3               	movwf	?___fttol+3
 10909  0BFF  3000               	movlw	0
 10910  0C00  00B2               	movwf	?___fttol+2
 10911  0C01  3000               	movlw	0
 10912  0C02  00B1               	movwf	?___fttol+1
 10913  0C03  3000               	movlw	0
 10914  0C04  00B0               	movwf	?___fttol
 10915  0C05  0008               	return
 10916  0C06                     l2733:	
 10917  0C06  3001               	movlw	1
 10918  0C07                     u2875:	
 10919  0C07  36BC               	lsrf	___fttol@lval+3,f
 10920  0C08  0CBB               	rrf	___fttol@lval+2,f
 10921  0C09  0CBA               	rrf	___fttol@lval+1,f
 10922  0C0A  0CB9               	rrf	___fttol@lval,f
 10923  0C0B  0B89               	decfsz	9,f
 10924  0C0C  2C07               	goto	u2875
 10925  0C0D  3001               	movlw	1
 10926  0C0E  00B4               	movwf	??___fttol
 10927  0C0F  0834               	movf	??___fttol,w
 10928  0C10  07BD               	addwf	___fttol@exp1,f
 10929  0C11  1903               	btfsc	3,2
 10930  0C12  2C2D               	goto	l2743
 10931  0C13  2C06               	goto	l2733
 10932  0C14                     l2735:	
 10933  0C14  3018               	movlw	24
 10934  0C15  023D               	subwf	___fttol@exp1,w
 10935  0C16  1C03               	skipc
 10936  0C17  2C2A               	goto	l823
 10937  0C18  3000               	movlw	0
 10938  0C19  00B3               	movwf	?___fttol+3
 10939  0C1A  3000               	movlw	0
 10940  0C1B  00B2               	movwf	?___fttol+2
 10941  0C1C  3000               	movlw	0
 10942  0C1D  00B1               	movwf	?___fttol+1
 10943  0C1E  3000               	movlw	0
 10944  0C1F  00B0               	movwf	?___fttol
 10945  0C20  0008               	return
 10946  0C21                     l2741:	
 10947  0C21  3001               	movlw	1
 10948  0C22                     u2905:	
 10949  0C22  35B9               	lslf	___fttol@lval,f
 10950  0C23  0DBA               	rlf	___fttol@lval+1,f
 10951  0C24  0DBB               	rlf	___fttol@lval+2,f
 10952  0C25  0DBC               	rlf	___fttol@lval+3,f
 10953  0C26  0B89               	decfsz	9,f
 10954  0C27  2C22               	goto	u2905
 10955  0C28  3001               	movlw	1
 10956  0C29  02BD               	subwf	___fttol@exp1,f
 10957  0C2A                     l823:	
 10958  0C2A  083D               	movf	___fttol@exp1,w
 10959  0C2B  1D03               	btfss	3,2
 10960  0C2C  2C21               	goto	l2741
 10961  0C2D                     l2743:	
 10962  0C2D  0838               	movf	___fttol@sign1,w
 10963  0C2E  1903               	btfsc	3,2
 10964  0C2F  2C3B               	goto	l2747
 10965  0C30  09B9               	comf	___fttol@lval,f
 10966  0C31  09BA               	comf	___fttol@lval+1,f
 10967  0C32  09BB               	comf	___fttol@lval+2,f
 10968  0C33  09BC               	comf	___fttol@lval+3,f
 10969  0C34  0AB9               	incf	___fttol@lval,f
 10970  0C35  1903               	skipnz
 10971  0C36  0ABA               	incf	___fttol@lval+1,f
 10972  0C37  1903               	skipnz
 10973  0C38  0ABB               	incf	___fttol@lval+2,f
 10974  0C39  1903               	skipnz
 10975  0C3A  0ABC               	incf	___fttol@lval+3,f
 10976  0C3B                     l2747:	
 10977  0C3B  083C               	movf	___fttol@lval+3,w
 10978  0C3C  00B3               	movwf	?___fttol+3
 10979  0C3D  083B               	movf	___fttol@lval+2,w
 10980  0C3E  00B2               	movwf	?___fttol+2
 10981  0C3F  083A               	movf	___fttol@lval+1,w
 10982  0C40  00B1               	movwf	?___fttol+1
 10983  0C41  0839               	movf	___fttol@lval,w
 10984  0C42  00B0               	movwf	?___fttol
 10985  0C43  0008               	return
 10986  0C44                     __end_of___fttol:	
 10987                           
 10988                           	psect	text17
 10989  0C44                     __ptext17:	
 10990 ;; *************** function ___ftdiv *****************
 10991 ;; Defined at:
 10992 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 10993 ;; Parameters:    Size  Location     Type
 10994 ;;  f2              3    0[BANK0 ] float 
 10995 ;;  f1              3    3[BANK0 ] float 
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;  f3              3   11[BANK0 ] float 
 10998 ;;  sign            1   15[BANK0 ] unsigned char 
 10999 ;;  exp             1   14[BANK0 ] unsigned char 
 11000 ;;  cntr            1   10[BANK0 ] unsigned char 
 11001 ;; Return value:  Size  Location     Type
 11002 ;;                  3    0[BANK0 ] float 
 11003 ;; Registers used:
 11004 ;;		wreg, status,2, status,0, pclath, cstack
 11005 ;; Tracked objects:
 11006 ;;		On entry : 0/0
 11007 ;;		On exit  : 0/0
 11008 ;;		Unchanged: 0/0
 11009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11010 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11011 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;Total ram usage:       16 bytes
 11015 ;; Hardware stack levels used:    1
 11016 ;; Hardware stack levels required when called:    1
 11017 ;; This function calls:
 11018 ;;		___ftpack
 11019 ;; This function is called by:
 11020 ;;		_tempCalc
 11021 ;;		_main
 11022 ;;		_calculateCurrent0
 11023 ;;		_calculateCurrent1
 11024 ;;		_calculateCurrent2
 11025 ;;		_calculateCurrent3
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029                           
 11030                           ;psect for function ___ftdiv
 11031  0C44                     ___ftdiv:	
 11032                           
 11033                           ;incstack = 0
 11034                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11035  0C44  0020               	movlb	0	; select bank0
 11036  0C45  0823               	movf	___ftdiv@f1,w
 11037  0C46  00A6               	movwf	??___ftdiv
 11038  0C47  0824               	movf	___ftdiv@f1+1,w
 11039  0C48  00A7               	movwf	??___ftdiv+1
 11040  0C49  0825               	movf	___ftdiv@f1+2,w
 11041  0C4A  00A8               	movwf	??___ftdiv+2
 11042  0C4B  1003               	clrc
 11043  0C4C  0D27               	rlf	??___ftdiv+1,w
 11044  0C4D  0D28               	rlf	??___ftdiv+2,w
 11045  0C4E  00A9               	movwf	??___ftdiv+3
 11046  0C4F  0829               	movf	??___ftdiv+3,w
 11047  0C50  00AE               	movwf	___ftdiv@exp
 11048  0C51  082E               	movf	___ftdiv@exp,w
 11049  0C52  1D03               	btfss	3,2
 11050  0C53  2C5B               	goto	l2665
 11051  0C54  3000               	movlw	0
 11052  0C55  00A0               	movwf	?___ftdiv
 11053  0C56  3000               	movlw	0
 11054  0C57  00A1               	movwf	?___ftdiv+1
 11055  0C58  3000               	movlw	0
 11056  0C59  00A2               	movwf	?___ftdiv+2
 11057  0C5A  0008               	return
 11058  0C5B                     l2665:	
 11059  0C5B  0820               	movf	___ftdiv@f2,w
 11060  0C5C  00A6               	movwf	??___ftdiv
 11061  0C5D  0821               	movf	___ftdiv@f2+1,w
 11062  0C5E  00A7               	movwf	??___ftdiv+1
 11063  0C5F  0822               	movf	___ftdiv@f2+2,w
 11064  0C60  00A8               	movwf	??___ftdiv+2
 11065  0C61  1003               	clrc
 11066  0C62  0D27               	rlf	??___ftdiv+1,w
 11067  0C63  0D28               	rlf	??___ftdiv+2,w
 11068  0C64  00A9               	movwf	??___ftdiv+3
 11069  0C65  0829               	movf	??___ftdiv+3,w
 11070  0C66  00AF               	movwf	___ftdiv@sign
 11071  0C67  082F               	movf	___ftdiv@sign,w
 11072  0C68  1D03               	btfss	3,2
 11073  0C69  2C71               	goto	l2671
 11074  0C6A  3000               	movlw	0
 11075  0C6B  00A0               	movwf	?___ftdiv
 11076  0C6C  3000               	movlw	0
 11077  0C6D  00A1               	movwf	?___ftdiv+1
 11078  0C6E  3000               	movlw	0
 11079  0C6F  00A2               	movwf	?___ftdiv+2
 11080  0C70  0008               	return
 11081  0C71                     l2671:	
 11082  0C71  3000               	movlw	0
 11083  0C72  00AB               	movwf	___ftdiv@f3
 11084  0C73  3000               	movlw	0
 11085  0C74  00AC               	movwf	___ftdiv@f3+1
 11086  0C75  3000               	movlw	0
 11087  0C76  00AD               	movwf	___ftdiv@f3+2
 11088  0C77  3089               	movlw	137
 11089  0C78  072F               	addwf	___ftdiv@sign,w
 11090  0C79  00A6               	movwf	??___ftdiv
 11091  0C7A  0826               	movf	??___ftdiv,w
 11092  0C7B  02AE               	subwf	___ftdiv@exp,f
 11093  0C7C  0823               	movf	___ftdiv@f1,w
 11094  0C7D  00A6               	movwf	??___ftdiv
 11095  0C7E  0824               	movf	___ftdiv@f1+1,w
 11096  0C7F  00A7               	movwf	??___ftdiv+1
 11097  0C80  0825               	movf	___ftdiv@f1+2,w
 11098  0C81  00A8               	movwf	??___ftdiv+2
 11099  0C82  3010               	movlw	16
 11100  0C83                     u2765:	
 11101  0C83  36A8               	lsrf	??___ftdiv+2,f
 11102  0C84  0CA7               	rrf	??___ftdiv+1,f
 11103  0C85  0CA6               	rrf	??___ftdiv,f
 11104  0C86  0B89               	decfsz	9,f
 11105  0C87  2C83               	goto	u2765
 11106  0C88  0826               	movf	??___ftdiv,w
 11107  0C89  00A9               	movwf	??___ftdiv+3
 11108  0C8A  0829               	movf	??___ftdiv+3,w
 11109  0C8B  00AF               	movwf	___ftdiv@sign
 11110  0C8C  0820               	movf	___ftdiv@f2,w
 11111  0C8D  00A6               	movwf	??___ftdiv
 11112  0C8E  0821               	movf	___ftdiv@f2+1,w
 11113  0C8F  00A7               	movwf	??___ftdiv+1
 11114  0C90  0822               	movf	___ftdiv@f2+2,w
 11115  0C91  00A8               	movwf	??___ftdiv+2
 11116  0C92  3010               	movlw	16
 11117  0C93                     u2775:	
 11118  0C93  36A8               	lsrf	??___ftdiv+2,f
 11119  0C94  0CA7               	rrf	??___ftdiv+1,f
 11120  0C95  0CA6               	rrf	??___ftdiv,f
 11121  0C96  0B89               	decfsz	9,f
 11122  0C97  2C93               	goto	u2775
 11123  0C98  0826               	movf	??___ftdiv,w
 11124  0C99  00A9               	movwf	??___ftdiv+3
 11125  0C9A  0829               	movf	??___ftdiv+3,w
 11126  0C9B  06AF               	xorwf	___ftdiv@sign,f
 11127  0C9C  3080               	movlw	128
 11128  0C9D  00A6               	movwf	??___ftdiv
 11129  0C9E  0826               	movf	??___ftdiv,w
 11130  0C9F  05AF               	andwf	___ftdiv@sign,f
 11131  0CA0  17A4               	bsf	___ftdiv@f1+1,7
 11132  0CA1  30FF               	movlw	255
 11133  0CA2  05A3               	andwf	___ftdiv@f1,f
 11134  0CA3  30FF               	movlw	255
 11135  0CA4  05A4               	andwf	___ftdiv@f1+1,f
 11136  0CA5  3000               	movlw	0
 11137  0CA6  05A5               	andwf	___ftdiv@f1+2,f
 11138  0CA7  17A1               	bsf	___ftdiv@f2+1,7
 11139  0CA8  30FF               	movlw	255
 11140  0CA9  05A0               	andwf	___ftdiv@f2,f
 11141  0CAA  30FF               	movlw	255
 11142  0CAB  05A1               	andwf	___ftdiv@f2+1,f
 11143  0CAC  3000               	movlw	0
 11144  0CAD  05A2               	andwf	___ftdiv@f2+2,f
 11145  0CAE  3018               	movlw	24
 11146  0CAF  00A6               	movwf	??___ftdiv
 11147  0CB0  0826               	movf	??___ftdiv,w
 11148  0CB1  00AA               	movwf	___ftdiv@cntr
 11149  0CB2                     l2685:	
 11150  0CB2  3001               	movlw	1
 11151  0CB3                     u2785:	
 11152  0CB3  35AB               	lslf	___ftdiv@f3,f
 11153  0CB4  0DAC               	rlf	___ftdiv@f3+1,f
 11154  0CB5  0DAD               	rlf	___ftdiv@f3+2,f
 11155  0CB6  0B89               	decfsz	9,f
 11156  0CB7  2CB3               	goto	u2785
 11157  0CB8  0822               	movf	___ftdiv@f2+2,w
 11158  0CB9  0225               	subwf	___ftdiv@f1+2,w
 11159  0CBA  1D03               	skipz
 11160  0CBB  2CC2               	goto	u2795
 11161  0CBC  0821               	movf	___ftdiv@f2+1,w
 11162  0CBD  0224               	subwf	___ftdiv@f1+1,w
 11163  0CBE  1D03               	skipz
 11164  0CBF  2CC2               	goto	u2795
 11165  0CC0  0820               	movf	___ftdiv@f2,w
 11166  0CC1  0223               	subwf	___ftdiv@f1,w
 11167  0CC2                     u2795:	
 11168  0CC2  1C03               	skipc
 11169  0CC3  2CCB               	goto	l2693
 11170  0CC4  0820               	movf	___ftdiv@f2,w
 11171  0CC5  02A3               	subwf	___ftdiv@f1,f
 11172  0CC6  0821               	movf	___ftdiv@f2+1,w
 11173  0CC7  3BA4               	subwfb	___ftdiv@f1+1,f
 11174  0CC8  0822               	movf	___ftdiv@f2+2,w
 11175  0CC9  3BA5               	subwfb	___ftdiv@f1+2,f
 11176  0CCA  142B               	bsf	___ftdiv@f3,0
 11177  0CCB                     l2693:	
 11178  0CCB  3001               	movlw	1
 11179  0CCC                     u2805:	
 11180  0CCC  35A3               	lslf	___ftdiv@f1,f
 11181  0CCD  0DA4               	rlf	___ftdiv@f1+1,f
 11182  0CCE  0DA5               	rlf	___ftdiv@f1+2,f
 11183  0CCF  0B89               	decfsz	9,f
 11184  0CD0  2CCC               	goto	u2805
 11185  0CD1  3001               	movlw	1
 11186  0CD2  02AA               	subwf	___ftdiv@cntr,f
 11187  0CD3  1D03               	btfss	3,2
 11188  0CD4  2CB2               	goto	l2685
 11189  0CD5  082B               	movf	___ftdiv@f3,w
 11190  0CD6  00F0               	movwf	___ftpack@arg
 11191  0CD7  082C               	movf	___ftdiv@f3+1,w
 11192  0CD8  00F1               	movwf	___ftpack@arg+1
 11193  0CD9  082D               	movf	___ftdiv@f3+2,w
 11194  0CDA  00F2               	movwf	___ftpack@arg+2
 11195  0CDB  082E               	movf	___ftdiv@exp,w
 11196  0CDC  00A6               	movwf	??___ftdiv
 11197  0CDD  0826               	movf	??___ftdiv,w
 11198  0CDE  00F3               	movwf	___ftpack@exp
 11199  0CDF  082F               	movf	___ftdiv@sign,w
 11200  0CE0  00A7               	movwf	??___ftdiv+1
 11201  0CE1  0827               	movf	??___ftdiv+1,w
 11202  0CE2  00F4               	movwf	___ftpack@sign
 11203  0CE3  3189  21F0         	fcall	___ftpack
 11204  0CE5  0870               	movf	?___ftpack,w
 11205  0CE6  0020               	movlb	0	; select bank0
 11206  0CE7  00A0               	movwf	?___ftdiv
 11207  0CE8  0871               	movf	?___ftpack+1,w
 11208  0CE9  00A1               	movwf	?___ftdiv+1
 11209  0CEA  0872               	movf	?___ftpack+2,w
 11210  0CEB  00A2               	movwf	?___ftdiv+2
 11211  0CEC  0008               	return
 11212  0CED                     __end_of___ftdiv:	
 11213                           
 11214                           	psect	text18
 11215  1568                     __ptext18:	
 11216 ;; *************** function ___awtoft *****************
 11217 ;; Defined at:
 11218 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;  c               2    8[COMMON] int 
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;  sign            1   13[COMMON] unsigned char 
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  3    8[COMMON] float 
 11225 ;; Registers used:
 11226 ;;		wreg, status,2, status,0, pclath, cstack
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11232 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11235 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11236 ;;Total ram usage:        6 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; Hardware stack levels required when called:    1
 11239 ;; This function calls:
 11240 ;;		___ftpack
 11241 ;; This function is called by:
 11242 ;;		_tempCalc
 11243 ;;		_main
 11244 ;;		_calculateCurrent0
 11245 ;;		_calculateCurrent1
 11246 ;;		_log
 11247 ;;		_calculateCurrent2
 11248 ;;		_calculateCurrent3
 11249 ;; This function uses a non-reentrant model
 11250 ;;
 11251                           
 11252                           
 11253                           ;psect for function ___awtoft
 11254  1568                     ___awtoft:	
 11255                           
 11256                           ;incstack = 0
 11257                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11258  1568  01FD               	clrf	___awtoft@sign
 11259  1569  1FF9               	btfss	___awtoft@c+1,7
 11260  156A  2D72               	goto	l2329
 11261  156B  09F8               	comf	___awtoft@c,f
 11262  156C  09F9               	comf	___awtoft@c+1,f
 11263  156D  0AF8               	incf	___awtoft@c,f
 11264  156E  1903               	skipnz
 11265  156F  0AF9               	incf	___awtoft@c+1,f
 11266  1570  01FD               	clrf	___awtoft@sign
 11267  1571  0AFD               	incf	___awtoft@sign,f
 11268  1572                     l2329:	
 11269  1572  0878               	movf	___awtoft@c,w
 11270  1573  00F0               	movwf	___ftpack@arg
 11271  1574  0879               	movf	___awtoft@c+1,w
 11272  1575  00F1               	movwf	___ftpack@arg+1
 11273  1576  01F2               	clrf	___ftpack@arg+2
 11274  1577  308E               	movlw	142
 11275  1578  00FB               	movwf	??___awtoft
 11276  1579  087B               	movf	??___awtoft,w
 11277  157A  00F3               	movwf	___ftpack@exp
 11278  157B  087D               	movf	___awtoft@sign,w
 11279  157C  00FC               	movwf	??___awtoft+1
 11280  157D  087C               	movf	??___awtoft+1,w
 11281  157E  00F4               	movwf	___ftpack@sign
 11282  157F  3189  21F0         	fcall	___ftpack
 11283  1581  0870               	movf	?___ftpack,w
 11284  1582  00F8               	movwf	?___awtoft
 11285  1583  0871               	movf	?___ftpack+1,w
 11286  1584  00F9               	movwf	?___awtoft+1
 11287  1585  0872               	movf	?___ftpack+2,w
 11288  1586  00FA               	movwf	?___awtoft+2
 11289  1587  0008               	return
 11290  1588                     __end_of___awtoft:	
 11291                           
 11292                           	psect	text19
 11293  09F0                     __ptext19:	
 11294 ;; *************** function ___ftpack *****************
 11295 ;; Defined at:
 11296 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11297 ;; Parameters:    Size  Location     Type
 11298 ;;  arg             3    0[COMMON] unsigned um
 11299 ;;  exp             1    3[COMMON] unsigned char 
 11300 ;;  sign            1    4[COMMON] unsigned char 
 11301 ;; Auto vars:     Size  Location     Type
 11302 ;;		None
 11303 ;; Return value:  Size  Location     Type
 11304 ;;                  3    0[COMMON] float 
 11305 ;; Registers used:
 11306 ;;		wreg, status,2, status,0
 11307 ;; Tracked objects:
 11308 ;;		On entry : 0/0
 11309 ;;		On exit  : 0/0
 11310 ;;		Unchanged: 0/0
 11311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11312 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;Total ram usage:        8 bytes
 11317 ;; Hardware stack levels used:    1
 11318 ;; This function calls:
 11319 ;;		Nothing
 11320 ;; This function is called by:
 11321 ;;		___awtoft
 11322 ;;		___ftadd
 11323 ;;		___ftdiv
 11324 ;;		___ftmul
 11325 ;; This function uses a non-reentrant model
 11326 ;;
 11327                           
 11328                           
 11329                           ;psect for function ___ftpack
 11330  09F0                     ___ftpack:	
 11331                           
 11332                           ;incstack = 0
 11333                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11334  09F0  0873               	movf	___ftpack@exp,w
 11335  09F1  1903               	btfsc	3,2
 11336  09F2  29F8               	goto	l2135
 11337  09F3  0872               	movf	___ftpack@arg+2,w
 11338  09F4  0471               	iorwf	___ftpack@arg+1,w
 11339  09F5  0470               	iorwf	___ftpack@arg,w
 11340  09F6  1D03               	skipz
 11341  09F7  2A09               	goto	l2141
 11342  09F8                     l2135:	
 11343  09F8  3000               	movlw	0
 11344  09F9  00F0               	movwf	?___ftpack
 11345  09FA  3000               	movlw	0
 11346  09FB  00F1               	movwf	?___ftpack+1
 11347  09FC  3000               	movlw	0
 11348  09FD  00F2               	movwf	?___ftpack+2
 11349  09FE  0008               	return
 11350  09FF                     l2139:	
 11351  09FF  3001               	movlw	1
 11352  0A00  00F5               	movwf	??___ftpack
 11353  0A01  0875               	movf	??___ftpack,w
 11354  0A02  07F3               	addwf	___ftpack@exp,f
 11355  0A03  3001               	movlw	1
 11356  0A04                     u1875:	
 11357  0A04  36F2               	lsrf	___ftpack@arg+2,f
 11358  0A05  0CF1               	rrf	___ftpack@arg+1,f
 11359  0A06  0CF0               	rrf	___ftpack@arg,f
 11360  0A07  0B89               	decfsz	9,f
 11361  0A08  2A04               	goto	u1875
 11362  0A09                     l2141:	
 11363  0A09  30FE               	movlw	254
 11364  0A0A  0572               	andwf	___ftpack@arg+2,w
 11365  0A0B  1903               	btfsc	3,2
 11366  0A0C  2A22               	goto	l732
 11367  0A0D  29FF               	goto	l2139
 11368  0A0E                     l2143:	
 11369  0A0E  3001               	movlw	1
 11370  0A0F  00F5               	movwf	??___ftpack
 11371  0A10  0875               	movf	??___ftpack,w
 11372  0A11  07F3               	addwf	___ftpack@exp,f
 11373  0A12  3001               	movlw	1
 11374  0A13  07F0               	addwf	___ftpack@arg,f
 11375  0A14  3000               	movlw	0
 11376  0A15  1803               	skipnc
 11377  0A16  3001               	movlw	1
 11378  0A17  07F1               	addwf	___ftpack@arg+1,f
 11379  0A18  3000               	movlw	0
 11380  0A19  1803               	skipnc
 11381  0A1A  3001               	movlw	1
 11382  0A1B  07F2               	addwf	___ftpack@arg+2,f
 11383  0A1C  3001               	movlw	1
 11384  0A1D                     u1895:	
 11385  0A1D  36F2               	lsrf	___ftpack@arg+2,f
 11386  0A1E  0CF1               	rrf	___ftpack@arg+1,f
 11387  0A1F  0CF0               	rrf	___ftpack@arg,f
 11388  0A20  0B89               	decfsz	9,f
 11389  0A21  2A1D               	goto	u1895
 11390  0A22                     l732:	
 11391  0A22  30FF               	movlw	255
 11392  0A23  0572               	andwf	___ftpack@arg+2,w
 11393  0A24  1903               	btfsc	3,2
 11394  0A25  2A2F               	goto	l2151
 11395  0A26  2A0E               	goto	l2143
 11396  0A27                     l2149:	
 11397  0A27  3001               	movlw	1
 11398  0A28  02F3               	subwf	___ftpack@exp,f
 11399  0A29  3001               	movlw	1
 11400  0A2A                     u1915:	
 11401  0A2A  35F0               	lslf	___ftpack@arg,f
 11402  0A2B  0DF1               	rlf	___ftpack@arg+1,f
 11403  0A2C  0DF2               	rlf	___ftpack@arg+2,f
 11404  0A2D  0B89               	decfsz	9,f
 11405  0A2E  2A2A               	goto	u1915
 11406  0A2F                     l2151:	
 11407  0A2F  1BF1               	btfsc	___ftpack@arg+1,7
 11408  0A30  2A35               	goto	l739
 11409  0A31  3002               	movlw	2
 11410  0A32  0273               	subwf	___ftpack@exp,w
 11411  0A33  1803               	skipnc
 11412  0A34  2A27               	goto	l2149
 11413  0A35                     l739:	
 11414  0A35  1873               	btfsc	___ftpack@exp,0
 11415  0A36  2A3D               	goto	l740
 11416  0A37  30FF               	movlw	255
 11417  0A38  05F0               	andwf	___ftpack@arg,f
 11418  0A39  307F               	movlw	127
 11419  0A3A  05F1               	andwf	___ftpack@arg+1,f
 11420  0A3B  30FF               	movlw	255
 11421  0A3C  05F2               	andwf	___ftpack@arg+2,f
 11422  0A3D                     l740:	
 11423  0A3D  1003               	clrc
 11424  0A3E  0CF3               	rrf	___ftpack@exp,f
 11425  0A3F  0873               	movf	___ftpack@exp,w
 11426  0A40  00F5               	movwf	??___ftpack
 11427  0A41  01F6               	clrf	??___ftpack+1
 11428  0A42  01F7               	clrf	??___ftpack+2
 11429  0A43  3010               	movlw	16
 11430  0A44                     u1955:	
 11431  0A44  35F5               	lslf	??___ftpack,f
 11432  0A45  0DF6               	rlf	??___ftpack+1,f
 11433  0A46  0DF7               	rlf	??___ftpack+2,f
 11434  0A47  0B89               	decfsz	9,f
 11435  0A48  2A44               	goto	u1955
 11436  0A49  0875               	movf	??___ftpack,w
 11437  0A4A  04F0               	iorwf	___ftpack@arg,f
 11438  0A4B  0876               	movf	??___ftpack+1,w
 11439  0A4C  04F1               	iorwf	___ftpack@arg+1,f
 11440  0A4D  0877               	movf	??___ftpack+2,w
 11441  0A4E  04F2               	iorwf	___ftpack@arg+2,f
 11442  0A4F  0874               	movf	___ftpack@sign,w
 11443  0A50  1903               	btfsc	3,2
 11444  0A51  0008               	return
 11445  0A52  17F2               	bsf	___ftpack@arg+2,7
 11446  0A53  0008               	return
 11447  0A54                     __end_of___ftpack:	
 11448                           
 11449                           	psect	text20
 11450  15FF                     __ptext20:	
 11451 ;; *************** function _SYSTEM_Initialize *****************
 11452 ;; Defined at:
 11453 ;;		line 71 in file "system.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;		None
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;		None
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      void 
 11460 ;; Registers used:
 11461 ;;		wreg, status,2, status,0, pclath, cstack
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;Total ram usage:        2 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:    3
 11474 ;; This function calls:
 11475 ;;		_ADC_Initialize
 11476 ;;		_Init_Battery_State_Machine
 11477 ;;		_LCDClear
 11478 ;;		_LCDInit
 11479 ;;		_OSCILLATOR_Initialize
 11480 ;;		_PIN_MANAGER_Initialize
 11481 ;;		_PWM_Initialize
 11482 ;;		_TMR2_Initialize
 11483 ;;		_TMR4_Initialize
 11484 ;; This function is called by:
 11485 ;;		_main
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           
 11489                           
 11490                           ;psect for function _SYSTEM_Initialize
 11491  15FF                     _SYSTEM_Initialize:	
 11492                           
 11493                           ;system.c: 73: PIN_MANAGER_Initialize();
 11494                           
 11495                           ;incstack = 0
 11496                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11497  15FF  3180  2005  3195   	fcall	_PIN_MANAGER_Initialize
 11498                           
 11499                           ;system.c: 74: OSCILLATOR_Initialize();
 11500  1602  3189  212F  3195   	fcall	_OSCILLATOR_Initialize
 11501                           
 11502                           ;system.c: 76: ADC_Initialize();
 11503  1605  3195  252A  3195   	fcall	_ADC_Initialize
 11504                           
 11505                           ;system.c: 77: PWM_Initialize();
 11506  1608  3195  2549  3195   	fcall	_PWM_Initialize
 11507                           
 11508                           ;system.c: 79: TMR2_Initialize();
 11509  160B  3194  243E  3195   	fcall	_TMR2_Initialize
 11510                           
 11511                           ;system.c: 80: TMR4_Initialize();
 11512  160E  3194  244C  3195   	fcall	_TMR4_Initialize
 11513                           
 11514                           ;system.c: 81: Init_Battery_State_Machine();
 11515  1611  3194  24D4  3195   	fcall	_Init_Battery_State_Machine
 11516                           
 11517                           ;system.c: 82: LCDInit();
 11518  1614  3196  2633  3195   	fcall	_LCDInit
 11519                           
 11520                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 11521  1617  3009               	movlw	9
 11522  1618  00FC               	movwf	??_SYSTEM_Initialize+1
 11523  1619  301E               	movlw	30
 11524  161A  00FB               	movwf	??_SYSTEM_Initialize
 11525  161B  30E4               	movlw	228
 11526  161C                     u3707:	
 11527  161C  0B89               	decfsz	9,f
 11528  161D  2E1C               	goto	u3707
 11529  161E  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11530  161F  2E1C               	goto	u3707
 11531  1620  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11532  1621  2E1C               	goto	u3707
 11533  1622  3200               	nop2
 11534                           
 11535                           ;system.c: 84: LCDClear();
 11536  1623  3195  25AD  3195   	fcall	_LCDClear
 11537                           
 11538                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11539  1626  3009               	movlw	9
 11540  1627  00FC               	movwf	??_SYSTEM_Initialize+1
 11541  1628  301E               	movlw	30
 11542  1629  00FB               	movwf	??_SYSTEM_Initialize
 11543  162A  30E4               	movlw	228
 11544  162B                     u3717:	
 11545  162B  0B89               	decfsz	9,f
 11546  162C  2E2B               	goto	u3717
 11547  162D  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11548  162E  2E2B               	goto	u3717
 11549  162F  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11550  1630  2E2B               	goto	u3717
 11551  1631  3200               	nop2
 11552  1632  0008               	return
 11553  1633                     __end_of_SYSTEM_Initialize:	
 11554                           
 11555                           	psect	text21
 11556  144C                     __ptext21:	
 11557 ;; *************** function _TMR4_Initialize *****************
 11558 ;; Defined at:
 11559 ;;		line 25 in file "tmr.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;		None
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;		None
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  1    wreg      void 
 11566 ;; Registers used:
 11567 ;;		wreg, status,2
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;Total ram usage:        0 bytes
 11578 ;; Hardware stack levels used:    1
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_SYSTEM_Initialize
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           
 11587                           ;psect for function _TMR4_Initialize
 11588  144C                     _TMR4_Initialize:	
 11589                           
 11590                           ;tmr.c: 27: T4CON = 0x00;
 11591                           
 11592                           ;incstack = 0
 11593                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11594  144C  0025               	movlb	5	; select bank5
 11595  144D  0194               	clrf	20	;volatile
 11596                           
 11597                           ;tmr.c: 29: T4CLKCON = 0x01;
 11598  144E  3001               	movlw	1
 11599  144F  0096               	movwf	22	;volatile
 11600                           
 11601                           ;tmr.c: 31: T4HLT = 0x00;
 11602  1450  0195               	clrf	21	;volatile
 11603                           
 11604                           ;tmr.c: 33: T4RST = 0x00;
 11605  1451  0197               	clrf	23	;volatile
 11606                           
 11607                           ;tmr.c: 35: T4PR = 0xFE;
 11608  1452  30FE               	movlw	254
 11609  1453  0093               	movwf	19	;volatile
 11610                           
 11611                           ;tmr.c: 39: T4TMR = 0x00;
 11612  1454  0192               	clrf	18	;volatile
 11613                           
 11614                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11615  1455  002E               	movlb	14	; select bank14
 11616  1456  1190               	bcf	16,3	;volatile
 11617                           
 11618                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 11619  1457  0025               	movlb	5	; select bank5
 11620  1458  1794               	bsf	20,7	;volatile
 11621  1459  0008               	return
 11622  145A                     __end_of_TMR4_Initialize:	
 11623                           
 11624                           	psect	text22
 11625  143E                     __ptext22:	
 11626 ;; *************** function _TMR2_Initialize *****************
 11627 ;; Defined at:
 11628 ;;		line 3 in file "tmr.c"
 11629 ;; Parameters:    Size  Location     Type
 11630 ;;		None
 11631 ;; Auto vars:     Size  Location     Type
 11632 ;;		None
 11633 ;; Return value:  Size  Location     Type
 11634 ;;                  1    wreg      void 
 11635 ;; Registers used:
 11636 ;;		wreg, status,2
 11637 ;; Tracked objects:
 11638 ;;		On entry : 0/0
 11639 ;;		On exit  : 0/0
 11640 ;;		Unchanged: 0/0
 11641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11646 ;;Total ram usage:        0 bytes
 11647 ;; Hardware stack levels used:    1
 11648 ;; This function calls:
 11649 ;;		Nothing
 11650 ;; This function is called by:
 11651 ;;		_SYSTEM_Initialize
 11652 ;; This function uses a non-reentrant model
 11653 ;;
 11654                           
 11655                           
 11656                           ;psect for function _TMR2_Initialize
 11657  143E                     _TMR2_Initialize:	
 11658                           
 11659                           ;tmr.c: 5: T2CON = 0x00;
 11660                           
 11661                           ;incstack = 0
 11662                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11663  143E  0025               	movlb	5	; select bank5
 11664  143F  018E               	clrf	14	;volatile
 11665                           
 11666                           ;tmr.c: 7: T2CLKCON = 0x01;
 11667  1440  3001               	movlw	1
 11668  1441  0090               	movwf	16	;volatile
 11669                           
 11670                           ;tmr.c: 9: T2HLT = 0x00;
 11671  1442  018F               	clrf	15	;volatile
 11672                           
 11673                           ;tmr.c: 11: T2RST = 0x00;
 11674  1443  0191               	clrf	17	;volatile
 11675                           
 11676                           ;tmr.c: 13: T2PR = 0xFE;
 11677  1444  30FE               	movlw	254
 11678  1445  008D               	movwf	13	;volatile
 11679                           
 11680                           ;tmr.c: 18: T2TMR = 0x00;
 11681  1446  018C               	clrf	12	;volatile
 11682                           
 11683                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 11684  1447  002E               	movlb	14	; select bank14
 11685  1448  1090               	bcf	16,1	;volatile
 11686                           
 11687                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 11688  1449  0025               	movlb	5	; select bank5
 11689  144A  178E               	bsf	14,7	;volatile
 11690  144B  0008               	return
 11691  144C                     __end_of_TMR2_Initialize:	
 11692                           
 11693                           	psect	text23
 11694  1549                     __ptext23:	
 11695 ;; *************** function _PWM_Initialize *****************
 11696 ;; Defined at:
 11697 ;;		line 3 in file "pwm.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;		None
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;		None
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1    wreg      void 
 11704 ;; Registers used:
 11705 ;;		wreg, status,2, status,0
 11706 ;; Tracked objects:
 11707 ;;		On entry : 0/0
 11708 ;;		On exit  : 0/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;Total ram usage:        0 bytes
 11716 ;; Hardware stack levels used:    1
 11717 ;; This function calls:
 11718 ;;		Nothing
 11719 ;; This function is called by:
 11720 ;;		_SYSTEM_Initialize
 11721 ;; This function uses a non-reentrant model
 11722 ;;
 11723                           
 11724                           
 11725                           ;psect for function _PWM_Initialize
 11726  1549                     _PWM_Initialize:	
 11727                           
 11728                           ;pwm.c: 5: PWM6CON = 0x80;
 11729                           
 11730                           ;incstack = 0
 11731                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11732  1549  3080               	movlw	128
 11733  154A  0027               	movlb	7	; select bank7
 11734  154B  008E               	movwf	14	;volatile
 11735                           
 11736                           ;pwm.c: 7: PWM6DCH = 0x00;
 11737  154C  018D               	clrf	13	;volatile
 11738                           
 11739                           ;pwm.c: 9: PWM6DCL = 0x00;
 11740  154D  018C               	clrf	12	;volatile
 11741                           
 11742                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 11743  154E  0024               	movlb	4	; select bank4
 11744  154F  081F               	movf	31,w	;volatile
 11745  1550  39F3               	andlw	-13
 11746  1551  3804               	iorlw	4
 11747  1552  009F               	movwf	31	;volatile
 11748                           
 11749                           ;pwm.c: 14: PWM7CON = 0x80;
 11750  1553  3080               	movlw	128
 11751  1554  0027               	movlb	7	; select bank7
 11752  1555  0092               	movwf	18	;volatile
 11753                           
 11754                           ;pwm.c: 16: PWM7DCH = 0x00;
 11755  1556  0191               	clrf	17	;volatile
 11756                           
 11757                           ;pwm.c: 18: PWM7DCL = 0x00;
 11758  1557  0190               	clrf	16	;volatile
 11759                           
 11760                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 11761  1558  0024               	movlb	4	; select bank4
 11762  1559  081F               	movf	31,w	;volatile
 11763  155A  39CF               	andlw	-49
 11764  155B  3820               	iorlw	32
 11765  155C  009F               	movwf	31	;volatile
 11766                           
 11767                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 11768  155D  0026               	movlb	6	; select bank6
 11769  155E  178E               	bsf	14,7	;volatile
 11770                           
 11771                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 11772  155F  160E               	bsf	14,4	;volatile
 11773                           
 11774                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 11775  1560  300F               	movlw	15
 11776  1561  048E               	iorwf	14,f	;volatile
 11777                           
 11778                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 11779  1562  0024               	movlb	4	; select bank4
 11780  1563  081E               	movf	30,w	;volatile
 11781  1564  39FC               	andlw	-4
 11782  1565  3801               	iorlw	1
 11783  1566  009E               	movwf	30	;volatile
 11784  1567  0008               	return
 11785  1568                     __end_of_PWM_Initialize:	
 11786                           
 11787                           	psect	text24
 11788  0005                     __ptext24:	
 11789 ;; *************** function _PIN_MANAGER_Initialize *****************
 11790 ;; Defined at:
 11791 ;;		line 5 in file "pin_manager.c"
 11792 ;; Parameters:    Size  Location     Type
 11793 ;;		None
 11794 ;; Auto vars:     Size  Location     Type
 11795 ;;  state           1    0[COMMON] char 
 11796 ;; Return value:  Size  Location     Type
 11797 ;;                  1    wreg      void 
 11798 ;; Registers used:
 11799 ;;		wreg, status,2
 11800 ;; Tracked objects:
 11801 ;;		On entry : 0/0
 11802 ;;		On exit  : 0/0
 11803 ;;		Unchanged: 0/0
 11804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11809 ;;Total ram usage:        1 bytes
 11810 ;; Hardware stack levels used:    1
 11811 ;; This function calls:
 11812 ;;		Nothing
 11813 ;; This function is called by:
 11814 ;;		_SYSTEM_Initialize
 11815 ;; This function uses a non-reentrant model
 11816 ;;
 11817                           
 11818                           
 11819                           ;psect for function _PIN_MANAGER_Initialize
 11820  0005                     _PIN_MANAGER_Initialize:	
 11821                           
 11822                           ;pin_manager.c: 7: LATA = 0x20;
 11823                           
 11824                           ;incstack = 0
 11825                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11826  0005  3020               	movlw	32
 11827  0006  0020               	movlb	0	; select bank0
 11828  0007  0096               	movwf	22	;volatile
 11829                           
 11830                           ;pin_manager.c: 8: LATB = 0x00;
 11831  0008  0197               	clrf	23	;volatile
 11832                           
 11833                           ;pin_manager.c: 9: LATC = 0x00;
 11834  0009  0198               	clrf	24	;volatile
 11835                           
 11836                           ;pin_manager.c: 11: WPUA = 0x00;
 11837  000A  003E               	movlb	30	; select bank30
 11838  000B  01B9               	clrf	57	;volatile
 11839                           
 11840                           ;pin_manager.c: 12: WPUB = 0x00;
 11841  000C  01C4               	clrf	68	;volatile
 11842                           
 11843                           ;pin_manager.c: 13: WPUC = 0x00;
 11844  000D  01CF               	clrf	79	;volatile
 11845                           
 11846                           ;pin_manager.c: 14: WPUE = 0x8;
 11847  000E  3008               	movlw	8
 11848  000F  00E5               	movwf	101	;volatile
 11849                           
 11850                           ;pin_manager.c: 16: TRISA = 0x00;
 11851  0010  0020               	movlb	0	; select bank0
 11852  0011  0191               	clrf	17	;volatile
 11853                           
 11854                           ;pin_manager.c: 17: TRISB = 0x0E;
 11855  0012  300E               	movlw	14
 11856  0013  0092               	movwf	18	;volatile
 11857                           
 11858                           ;pin_manager.c: 18: TRISC = 0xFF;
 11859  0014  30FF               	movlw	255
 11860  0015  0093               	movwf	19	;volatile
 11861                           
 11862                           ;pin_manager.c: 20: ANSELA = 0x00;
 11863  0016  003E               	movlb	30	; select bank30
 11864  0017  01B8               	clrf	56	;volatile
 11865                           
 11866                           ;pin_manager.c: 21: ANSELB = 0x0A;
 11867  0018  300A               	movlw	10
 11868  0019  00C3               	movwf	67	;volatile
 11869                           
 11870                           ;pin_manager.c: 22: ANSELC = 0xFF;
 11871  001A  30FF               	movlw	255
 11872  001B  00CE               	movwf	78	;volatile
 11873                           
 11874                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 11875  001C  002E               	movlb	14	; select bank14
 11876  001D  1216               	bcf	22,4	;volatile
 11877                           
 11878                           ;pin_manager.c: 26: int8_t state = GIE;
 11879  001E  3000               	movlw	0
 11880  001F  1B8B               	btfsc	11,7	;volatile
 11881  0020  3001               	movlw	1
 11882  0021  00F0               	movwf	PIN_MANAGER_Initialize@state
 11883                           
 11884                           ;pin_manager.c: 27: GIE = 0;
 11885  0022  138B               	bcf	11,7	;volatile
 11886                           
 11887                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 11888  0023  3055               	movlw	85
 11889  0024  003D               	movlb	29	; select bank29
 11890  0025  008F               	movwf	15	;volsfr
 11891                           
 11892                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 11893  0026  30AA               	movlw	170
 11894  0027  008F               	movwf	15	;volsfr
 11895                           
 11896                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 11897  0028  100F               	bcf	15,0	;volsfr
 11898                           
 11899                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 11900  0029  300E               	movlw	14
 11901  002A  003E               	movlb	30	; select bank30
 11902  002B  0096               	movwf	22	;volatile
 11903                           
 11904                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 11905  002C  300F               	movlw	15
 11906  002D  0097               	movwf	23	;volatile
 11907                           
 11908                           ;pin_manager.c: 34: RB0PPS = 0x09;
 11909  002E  3009               	movlw	9
 11910  002F  0098               	movwf	24	;volatile
 11911                           
 11912                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 11913  0030  3055               	movlw	85
 11914  0031  003D               	movlb	29	; select bank29
 11915  0032  008F               	movwf	15	;volsfr
 11916                           
 11917                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 11918  0033  30AA               	movlw	170
 11919  0034  008F               	movwf	15	;volsfr
 11920                           
 11921                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 11922  0035  140F               	bsf	15,0	;volsfr
 11923                           
 11924                           ;pin_manager.c: 38: GIE = state;
 11925  0036  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11926  0037  283A               	goto	u2500
 11927  0038  178B               	bsf	11,7	;volatile
 11928  0039  0008               	return
 11929  003A                     u2500:	
 11930  003A  138B               	bcf	11,7	;volatile
 11931  003B  0008               	return
 11932  003C                     __end_of_PIN_MANAGER_Initialize:	
 11933                           
 11934                           	psect	text25
 11935  092F                     __ptext25:	
 11936 ;; *************** function _OSCILLATOR_Initialize *****************
 11937 ;; Defined at:
 11938 ;;		line 88 in file "system.c"
 11939 ;; Parameters:    Size  Location     Type
 11940 ;;		None
 11941 ;; Auto vars:     Size  Location     Type
 11942 ;;		None
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  1    wreg      void 
 11945 ;; Registers used:
 11946 ;;		wreg, status,2
 11947 ;; Tracked objects:
 11948 ;;		On entry : 0/0
 11949 ;;		On exit  : 0/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11956 ;;Total ram usage:        0 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; This function calls:
 11959 ;;		Nothing
 11960 ;; This function is called by:
 11961 ;;		_SYSTEM_Initialize
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           
 11966                           ;psect for function _OSCILLATOR_Initialize
 11967  092F                     _OSCILLATOR_Initialize:	
 11968                           
 11969                           ;system.c: 90: OSCCON1 = 0x60;
 11970                           
 11971                           ;incstack = 0
 11972                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11973  092F  3060               	movlw	96
 11974  0930  0031               	movlb	17	; select bank17
 11975  0931  008D               	movwf	13	;volatile
 11976                           
 11977                           ;system.c: 91: OSCCON3 = 0x00;
 11978  0932  018F               	clrf	15	;volatile
 11979                           
 11980                           ;system.c: 92: OSCEN = 0x00;
 11981  0933  0191               	clrf	17	;volatile
 11982                           
 11983                           ;system.c: 93: OSCFRQ = 0x06;
 11984  0934  3006               	movlw	6
 11985  0935  0093               	movwf	19	;volatile
 11986                           
 11987                           ;system.c: 94: OSCTUNE = 0x00;
 11988  0936  0192               	clrf	18	;volatile
 11989  0937  0008               	return
 11990  0938                     __end_of_OSCILLATOR_Initialize:	
 11991                           
 11992                           	psect	text26
 11993  1633                     __ptext26:	
 11994 ;; *************** function _LCDInit *****************
 11995 ;; Defined at:
 11996 ;;		line 247 in file "lcd.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;		None
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;		None
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  1    wreg      void 
 12003 ;; Registers used:
 12004 ;;		wreg, status,2, status,0, pclath, cstack
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12013 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12014 ;;Total ram usage:        1 bytes
 12015 ;; Hardware stack levels used:    1
 12016 ;; Hardware stack levels required when called:    1
 12017 ;; This function calls:
 12018 ;;		_LCDWrite
 12019 ;; This function is called by:
 12020 ;;		_SYSTEM_Initialize
 12021 ;;		_main
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           
 12026                           ;psect for function _LCDInit
 12027  1633                     _LCDInit:	
 12028                           
 12029                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12030                           
 12031                           ;incstack = 0
 12032                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12033  1633  0020               	movlb	0	; select bank0
 12034  1634  1011               	bcf	17,0	;volatile
 12035                           
 12036                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12037  1635  1091               	bcf	17,1	;volatile
 12038                           
 12039                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12040  1636  1111               	bcf	17,2	;volatile
 12041                           
 12042                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12043  1637  1191               	bcf	17,3	;volatile
 12044                           
 12045                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12046  1638  1211               	bcf	17,4	;volatile
 12047                           
 12048                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12049  1639  1196               	bcf	22,3	;volatile
 12050                           
 12051                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12052  163A  1216               	bcf	22,4	;volatile
 12053                           
 12054                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12055  163B  1116               	bcf	22,2	;volatile
 12056                           
 12057                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12058  163C  1016               	bcf	22,0	;volatile
 12059                           
 12060                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12061  163D  1416               	bsf	22,0	;volatile
 12062                           
 12063                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12064  163E  3021               	movlw	33
 12065  163F  00F5               	movwf	??_LCDInit
 12066  1640  0875               	movf	??_LCDInit,w
 12067  1641  00F0               	movwf	LCDWrite@data
 12068  1642  3000               	movlw	0
 12069  1643  3195  2588  3196   	fcall	_LCDWrite
 12070                           
 12071                           ;lcd.c: 268: LCDWrite(0, 0XB7);
 12072  1646  30B7               	movlw	183
 12073  1647  00F5               	movwf	??_LCDInit
 12074  1648  0875               	movf	??_LCDInit,w
 12075  1649  00F0               	movwf	LCDWrite@data
 12076  164A  3000               	movlw	0
 12077  164B  3195  2588  3196   	fcall	_LCDWrite
 12078                           
 12079                           ;lcd.c: 270: LCDWrite(0, 0x04);
 12080  164E  3004               	movlw	4
 12081  164F  00F5               	movwf	??_LCDInit
 12082  1650  0875               	movf	??_LCDInit,w
 12083  1651  00F0               	movwf	LCDWrite@data
 12084  1652  3000               	movlw	0
 12085  1653  3195  2588  3196   	fcall	_LCDWrite
 12086                           
 12087                           ;lcd.c: 272: LCDWrite(0, 0x14);
 12088  1656  3014               	movlw	20
 12089  1657  00F5               	movwf	??_LCDInit
 12090  1658  0875               	movf	??_LCDInit,w
 12091  1659  00F0               	movwf	LCDWrite@data
 12092  165A  3000               	movlw	0
 12093  165B  3195  2588  3196   	fcall	_LCDWrite
 12094                           
 12095                           ;lcd.c: 274: LCDWrite(0, 0x20);
 12096  165E  3020               	movlw	32
 12097  165F  00F5               	movwf	??_LCDInit
 12098  1660  0875               	movf	??_LCDInit,w
 12099  1661  00F0               	movwf	LCDWrite@data
 12100  1662  3000               	movlw	0
 12101  1663  3195  2588  3196   	fcall	_LCDWrite
 12102                           
 12103                           ;lcd.c: 276: LCDWrite(0, 0x0C);
 12104  1666  300C               	movlw	12
 12105  1667  00F5               	movwf	??_LCDInit
 12106  1668  0875               	movf	??_LCDInit,w
 12107  1669  00F0               	movwf	LCDWrite@data
 12108  166A  3000               	movlw	0
 12109  166B  3195  2588         	fcall	_LCDWrite
 12110  166D  0008               	return
 12111  166E                     __end_of_LCDInit:	
 12112                           
 12113                           	psect	text27
 12114  15AD                     __ptext27:	
 12115 ;; *************** function _LCDClear *****************
 12116 ;; Defined at:
 12117 ;;		line 182 in file "lcd.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;		None
 12120 ;; Auto vars:     Size  Location     Type
 12121 ;;  index           2    9[COMMON] int 
 12122 ;; Return value:  Size  Location     Type
 12123 ;;                  1    wreg      void 
 12124 ;; Registers used:
 12125 ;;		wreg, status,2, status,0, pclath, cstack
 12126 ;; Tracked objects:
 12127 ;;		On entry : 0/0
 12128 ;;		On exit  : 0/0
 12129 ;;		Unchanged: 0/0
 12130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12134 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12135 ;;Total ram usage:        3 bytes
 12136 ;; Hardware stack levels used:    1
 12137 ;; Hardware stack levels required when called:    2
 12138 ;; This function calls:
 12139 ;;		_LCDWrite
 12140 ;;		_gotoXY
 12141 ;; This function is called by:
 12142 ;;		_SYSTEM_Initialize
 12143 ;;		_main
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           
 12148                           ;psect for function _LCDClear
 12149  15AD                     _LCDClear:	
 12150                           
 12151                           ;lcd.c: 184: int index;
 12152                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12153                           
 12154                           ;incstack = 0
 12155                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12156  15AD  01F9               	clrf	LCDClear@index
 12157  15AE  01FA               	clrf	LCDClear@index+1
 12158  15AF  087A               	movf	LCDClear@index+1,w
 12159  15B0  3A80               	xorlw	128
 12160  15B1  00F8               	movwf	??_LCDClear
 12161  15B2  3081               	movlw	129
 12162  15B3  0278               	subwf	??_LCDClear,w
 12163  15B4  1D03               	skipz
 12164  15B5  2DB8               	goto	u2485
 12165  15B6  30F8               	movlw	248
 12166  15B7  0279               	subwf	LCDClear@index,w
 12167  15B8                     u2485:	
 12168  15B8  1803               	btfsc	3,0
 12169  15B9  2DCE               	goto	l2459
 12170  15BA                     l2453:	
 12171                           
 12172                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12173  15BA  01F0               	clrf	LCDWrite@data
 12174  15BB  3001               	movlw	1
 12175  15BC  3195  2588  3195   	fcall	_LCDWrite
 12176  15BF  3001               	movlw	1
 12177  15C0  07F9               	addwf	LCDClear@index,f
 12178  15C1  3000               	movlw	0
 12179  15C2  3DFA               	addwfc	LCDClear@index+1,f
 12180  15C3  087A               	movf	LCDClear@index+1,w
 12181  15C4  3A80               	xorlw	128
 12182  15C5  00F8               	movwf	??_LCDClear
 12183  15C6  3081               	movlw	129
 12184  15C7  0278               	subwf	??_LCDClear,w
 12185  15C8  1D03               	skipz
 12186  15C9  2DCC               	goto	u2495
 12187  15CA  30F8               	movlw	248
 12188  15CB  0279               	subwf	LCDClear@index,w
 12189  15CC                     u2495:	
 12190  15CC  1C03               	skipc
 12191  15CD  2DBA               	goto	l2453
 12192  15CE                     l2459:	
 12193                           
 12194                           ;lcd.c: 187: gotoXY(0, 0);
 12195  15CE  01F5               	clrf	gotoXY@y
 12196  15CF  3000               	movlw	0
 12197  15D0  3194  246A         	fcall	_gotoXY
 12198  15D2  0008               	return
 12199  15D3                     __end_of_LCDClear:	
 12200                           
 12201                           	psect	text28
 12202  146A                     __ptext28:	
 12203 ;; *************** function _gotoXY *****************
 12204 ;; Defined at:
 12205 ;;		line 124 in file "lcd.c"
 12206 ;; Parameters:    Size  Location     Type
 12207 ;;  x               1    wreg     unsigned char 
 12208 ;;  y               1    5[COMMON] unsigned char 
 12209 ;; Auto vars:     Size  Location     Type
 12210 ;;  x               1    7[COMMON] unsigned char 
 12211 ;; Return value:  Size  Location     Type
 12212 ;;                  1    wreg      void 
 12213 ;; Registers used:
 12214 ;;		wreg, status,2, status,0, pclath, cstack
 12215 ;; Tracked objects:
 12216 ;;		On entry : 0/0
 12217 ;;		On exit  : 0/0
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12220 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12224 ;;Total ram usage:        3 bytes
 12225 ;; Hardware stack levels used:    1
 12226 ;; Hardware stack levels required when called:    1
 12227 ;; This function calls:
 12228 ;;		_LCDWrite
 12229 ;; This function is called by:
 12230 ;;		_LCDClear
 12231 ;;		_main
 12232 ;;		_LCDBitmap
 12233 ;; This function uses a non-reentrant model
 12234 ;;
 12235                           
 12236                           
 12237                           ;psect for function _gotoXY
 12238  146A                     _gotoXY:	
 12239                           
 12240                           ;incstack = 0
 12241                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 12242                           ;gotoXY@x stored from wreg
 12243  146A  00F7               	movwf	gotoXY@x
 12244                           
 12245                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 12246  146B  0877               	movf	gotoXY@x,w
 12247  146C  3880               	iorlw	128
 12248  146D  00F6               	movwf	??_gotoXY
 12249  146E  0876               	movf	??_gotoXY,w
 12250  146F  00F0               	movwf	LCDWrite@data
 12251  1470  3000               	movlw	0
 12252  1471  3195  2588  3194   	fcall	_LCDWrite
 12253                           
 12254                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 12255  1474  0875               	movf	gotoXY@y,w
 12256  1475  3840               	iorlw	64
 12257  1476  00F6               	movwf	??_gotoXY
 12258  1477  0876               	movf	??_gotoXY,w
 12259  1478  00F0               	movwf	LCDWrite@data
 12260  1479  3000               	movlw	0
 12261  147A  3195  2588         	fcall	_LCDWrite
 12262  147C  0008               	return
 12263  147D                     __end_of_gotoXY:	
 12264                           
 12265                           	psect	text29
 12266  14D4                     __ptext29:	
 12267 ;; *************** function _Init_Battery_State_Machine *****************
 12268 ;; Defined at:
 12269 ;;		line 23 in file "battery_charger.c"
 12270 ;; Parameters:    Size  Location     Type
 12271 ;;		None
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;		None
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  1    wreg      void 
 12276 ;; Registers used:
 12277 ;;		wreg
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12285 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12287 ;;Total ram usage:        1 bytes
 12288 ;; Hardware stack levels used:    1
 12289 ;; This function calls:
 12290 ;;		Nothing
 12291 ;; This function is called by:
 12292 ;;		_SYSTEM_Initialize
 12293 ;; This function uses a non-reentrant model
 12294 ;;
 12295                           
 12296                           
 12297                           ;psect for function _Init_Battery_State_Machine
 12298  14D4                     _Init_Battery_State_Machine:	
 12299                           
 12300                           ;battery_charger.c: 25: battery_state = PRECHARGE;
 12301                           
 12302                           ;incstack = 0
 12303                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 12304  14D4  3003               	movlw	3
 12305  14D5  00F0               	movwf	??_Init_Battery_State_Machine
 12306  14D6  0870               	movf	??_Init_Battery_State_Machine,w
 12307  14D7  0021               	movlb	1	; select bank1
 12308  14D8  00EB               	movwf	_battery_state^(0+128)
 12309                           
 12310                           ;battery_charger.c: 26: state_counter = 600;
 12311  14D9  3058               	movlw	88
 12312  14DA  00E7               	movwf	_state_counter^(0+128)
 12313  14DB  3002               	movlw	2
 12314  14DC  00E8               	movwf	(_state_counter^(0+128)+1)
 12315                           
 12316                           ;battery_charger.c: 28: { Iref = 10; };
 12317  14DD  300A               	movlw	10
 12318  14DE  00E3               	movwf	_Iref^(0+128)
 12319  14DF  3000               	movlw	0
 12320  14E0  00E4               	movwf	(_Iref^(0+128)+1)
 12321                           
 12322                           ;battery_charger.c: 29: { Vref = 1425; };
 12323  14E1  3091               	movlw	145
 12324  14E2  00E1               	movwf	_Vref^(0+128)
 12325  14E3  3005               	movlw	5
 12326  14E4  00E2               	movwf	(_Vref^(0+128)+1)
 12327                           
 12328                           ;battery_charger.c: 31: Imin = 20;
 12329  14E5  3014               	movlw	20
 12330  14E6  00E5               	movwf	_Imin^(0+128)
 12331  14E7  3000               	movlw	0
 12332  14E8  00E6               	movwf	(_Imin^(0+128)+1)
 12333                           
 12334                           ;battery_charger.c: 32: IminCount = 10;
 12335  14E9  300A               	movlw	10
 12336  14EA  00E9               	movwf	_IminCount^(0+128)
 12337  14EB  3000               	movlw	0
 12338  14EC  00EA               	movwf	(_IminCount^(0+128)+1)
 12339  14ED  0008               	return
 12340  14EE                     __end_of_Init_Battery_State_Machine:	
 12341                           
 12342                           	psect	text30
 12343  152A                     __ptext30:	
 12344 ;; *************** function _ADC_Initialize *****************
 12345 ;; Defined at:
 12346 ;;		line 83 in file "adc.c"
 12347 ;; Parameters:    Size  Location     Type
 12348 ;;		None
 12349 ;; Auto vars:     Size  Location     Type
 12350 ;;		None
 12351 ;; Return value:  Size  Location     Type
 12352 ;;                  1    wreg      void 
 12353 ;; Registers used:
 12354 ;;		wreg, status,2
 12355 ;; Tracked objects:
 12356 ;;		On entry : 0/0
 12357 ;;		On exit  : 0/0
 12358 ;;		Unchanged: 0/0
 12359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;Total ram usage:        0 bytes
 12365 ;; Hardware stack levels used:    1
 12366 ;; This function calls:
 12367 ;;		Nothing
 12368 ;; This function is called by:
 12369 ;;		_SYSTEM_Initialize
 12370 ;; This function uses a non-reentrant model
 12371 ;;
 12372                           
 12373                           
 12374                           ;psect for function _ADC_Initialize
 12375  152A                     _ADC_Initialize:	
 12376                           
 12377                           ;adc.c: 85: ADCON1 = 0x00;
 12378                           
 12379                           ;incstack = 0
 12380                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12381  152A  0021               	movlb	1	; select bank1
 12382  152B  0194               	clrf	20	;volatile
 12383                           
 12384                           ;adc.c: 87: ADCON2 = 0x00;
 12385  152C  0195               	clrf	21	;volatile
 12386                           
 12387                           ;adc.c: 89: ADCON3 = 0x00;
 12388  152D  0196               	clrf	22	;volatile
 12389                           
 12390                           ;adc.c: 91: ADACT = 0x00;
 12391  152E  0199               	clrf	25	;volatile
 12392                           
 12393                           ;adc.c: 93: ADSTAT = 0x00;
 12394  152F  0197               	clrf	23	;volatile
 12395                           
 12396                           ;adc.c: 95: FVRCON = 0b11000011;
 12397  1530  30C3               	movlw	195
 12398  1531  0032               	movlb	18	; select bank18
 12399  1532  008C               	movwf	12	;volatile
 12400                           
 12401                           ;adc.c: 96: ADCLK = 0x3F;
 12402  1533  303F               	movlw	63
 12403  1534  0021               	movlb	1	; select bank1
 12404  1535  0098               	movwf	24	;volatile
 12405                           
 12406                           ;adc.c: 103: ADREF = 0x03;
 12407  1536  3003               	movlw	3
 12408  1537  009A               	movwf	26	;volatile
 12409                           
 12410                           ;adc.c: 106: ADCAP = 0x00;
 12411  1538  019B               	clrf	27	;volatile
 12412                           
 12413                           ;adc.c: 109: ADPRE = 0x07;
 12414  1539  3007               	movlw	7
 12415  153A  009C               	movwf	28	;volatile
 12416                           
 12417                           ;adc.c: 111: ADACQ = 0x00;
 12418  153B  019D               	clrf	29	;volatile
 12419                           
 12420                           ;adc.c: 113: ADPCH = 0x00;
 12421  153C  019E               	clrf	30	;volatile
 12422                           
 12423                           ;adc.c: 115: ADRPT = 0x00;
 12424  153D  0022               	movlb	2	; select bank2
 12425  153E  018D               	clrf	13	;volatile
 12426                           
 12427                           ;adc.c: 117: ADLTHL = 0x00;
 12428  153F  018E               	clrf	14	;volatile
 12429                           
 12430                           ;adc.c: 119: ADLTHH = 0x00;
 12431  1540  018F               	clrf	15	;volatile
 12432                           
 12433                           ;adc.c: 121: ADUTHL = 0x00;
 12434  1541  0190               	clrf	16	;volatile
 12435                           
 12436                           ;adc.c: 123: ADUTHH = 0x00;
 12437  1542  0191               	clrf	17	;volatile
 12438                           
 12439                           ;adc.c: 125: ADSTPTL = 0x00;
 12440  1543  0192               	clrf	18	;volatile
 12441                           
 12442                           ;adc.c: 127: ADSTPTH = 0x00;
 12443  1544  0193               	clrf	19	;volatile
 12444                           
 12445                           ;adc.c: 129: ADCON0 = 0x84;
 12446  1545  3084               	movlw	132
 12447  1546  0021               	movlb	1	; select bank1
 12448  1547  0093               	movwf	19	;volatile
 12449  1548  0008               	return
 12450  1549                     __end_of_ADC_Initialize:	
 12451                           
 12452                           	psect	text31
 12453  14BE                     __ptext31:	
 12454 ;; *************** function _PWM7_LoadDutyValue *****************
 12455 ;; Defined at:
 12456 ;;		line 37 in file "pwm.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12459 ;; Auto vars:     Size  Location     Type
 12460 ;;		None
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  1    wreg      void 
 12463 ;; Registers used:
 12464 ;;		wreg, status,2, status,0
 12465 ;; Tracked objects:
 12466 ;;		On entry : 0/0
 12467 ;;		On exit  : 0/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;Total ram usage:        4 bytes
 12475 ;; Hardware stack levels used:    1
 12476 ;; This function calls:
 12477 ;;		Nothing
 12478 ;; This function is called by:
 12479 ;;		_main
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483                           
 12484                           ;psect for function _PWM7_LoadDutyValue
 12485  14BE                     _PWM7_LoadDutyValue:	
 12486                           
 12487                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12488                           
 12489                           ;incstack = 0
 12490                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12491  14BE  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12492  14BF  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12493  14C0  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12494  14C1  00F2               	movwf	??_PWM7_LoadDutyValue
 12495  14C2  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12496  14C3  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12497  14C4  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12498  14C5  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12499  14C6  0872               	movf	??_PWM7_LoadDutyValue,w
 12500  14C7  0027               	movlb	7	; select bank7
 12501  14C8  0091               	movwf	17	;volatile
 12502                           
 12503                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12504  14C9  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12505  14CA  3903               	andlw	3
 12506  14CB  00F2               	movwf	??_PWM7_LoadDutyValue
 12507  14CC  3005               	movlw	5
 12508  14CD                     u3315:	
 12509  14CD  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12510  14CE  3EFF               	addlw	-1
 12511  14CF  1D03               	skipz
 12512  14D0  2CCD               	goto	u3315
 12513  14D1  3572               	lslf	??_PWM7_LoadDutyValue,w
 12514  14D2  0090               	movwf	16	;volatile
 12515  14D3  0008               	return
 12516  14D4                     __end_of_PWM7_LoadDutyValue:	
 12517                           
 12518                           	psect	text32
 12519  14A8                     __ptext32:	
 12520 ;; *************** function _PWM6_LoadDutyValue *****************
 12521 ;; Defined at:
 12522 ;;		line 30 in file "pwm.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12525 ;; Auto vars:     Size  Location     Type
 12526 ;;		None
 12527 ;; Return value:  Size  Location     Type
 12528 ;;                  1    wreg      void 
 12529 ;; Registers used:
 12530 ;;		wreg, status,2, status,0
 12531 ;; Tracked objects:
 12532 ;;		On entry : 0/0
 12533 ;;		On exit  : 0/0
 12534 ;;		Unchanged: 0/0
 12535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12539 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12540 ;;Total ram usage:        4 bytes
 12541 ;; Hardware stack levels used:    1
 12542 ;; This function calls:
 12543 ;;		Nothing
 12544 ;; This function is called by:
 12545 ;;		_main
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           
 12550                           ;psect for function _PWM6_LoadDutyValue
 12551  14A8                     _PWM6_LoadDutyValue:	
 12552                           
 12553                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12554                           
 12555                           ;incstack = 0
 12556                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12557  14A8  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12558  14A9  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12559  14AA  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12560  14AB  00F2               	movwf	??_PWM6_LoadDutyValue
 12561  14AC  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12562  14AD  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12563  14AE  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12564  14AF  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12565  14B0  0872               	movf	??_PWM6_LoadDutyValue,w
 12566  14B1  0027               	movlb	7	; select bank7
 12567  14B2  008D               	movwf	13	;volatile
 12568                           
 12569                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12570  14B3  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12571  14B4  3903               	andlw	3
 12572  14B5  00F2               	movwf	??_PWM6_LoadDutyValue
 12573  14B6  3005               	movlw	5
 12574  14B7                     u3305:	
 12575  14B7  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12576  14B8  3EFF               	addlw	-1
 12577  14B9  1D03               	skipz
 12578  14BA  2CB7               	goto	u3305
 12579  14BB  3572               	lslf	??_PWM6_LoadDutyValue,w
 12580  14BC  008C               	movwf	12	;volatile
 12581  14BD  0008               	return
 12582  14BE                     __end_of_PWM6_LoadDutyValue:	
 12583                           
 12584                           	psect	text33
 12585  1492                     __ptext33:	
 12586 ;; *************** function _PWM1_LoadDutyValue *****************
 12587 ;; Defined at:
 12588 ;;		line 44 in file "pwm.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;		None
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  1    wreg      void 
 12595 ;; Registers used:
 12596 ;;		wreg, status,2, status,0
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/0
 12599 ;;		On exit  : 0/0
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12605 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12606 ;;Total ram usage:        4 bytes
 12607 ;; Hardware stack levels used:    1
 12608 ;; This function calls:
 12609 ;;		Nothing
 12610 ;; This function is called by:
 12611 ;;		_main
 12612 ;; This function uses a non-reentrant model
 12613 ;;
 12614                           
 12615                           
 12616                           ;psect for function _PWM1_LoadDutyValue
 12617  1492                     _PWM1_LoadDutyValue:	
 12618                           
 12619                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 12620                           
 12621                           ;incstack = 0
 12622                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 12623  1492  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 12624  1493  00F3               	movwf	??_PWM1_LoadDutyValue+1
 12625  1494  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12626  1495  00F2               	movwf	??_PWM1_LoadDutyValue
 12627  1496  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12628  1497  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12629  1498  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12630  1499  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12631  149A  0872               	movf	??_PWM1_LoadDutyValue,w
 12632  149B  0026               	movlb	6	; select bank6
 12633  149C  008D               	movwf	13	;volatile
 12634                           
 12635                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 12636  149D  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12637  149E  3903               	andlw	3
 12638  149F  00F2               	movwf	??_PWM1_LoadDutyValue
 12639  14A0  3005               	movlw	5
 12640  14A1                     u3325:	
 12641  14A1  35F2               	lslf	??_PWM1_LoadDutyValue,f
 12642  14A2  3EFF               	addlw	-1
 12643  14A3  1D03               	skipz
 12644  14A4  2CA1               	goto	u3325
 12645  14A5  3572               	lslf	??_PWM1_LoadDutyValue,w
 12646  14A6  008C               	movwf	12	;volatile
 12647  14A7  0008               	return
 12648  14A8                     __end_of_PWM1_LoadDutyValue:	
 12649                           
 12650                           	psect	text34
 12651  0E51                     __ptext34:	
 12652 ;; *************** function _LCDWriteInt *****************
 12653 ;; Defined at:
 12654 ;;		line 190 in file "lcd.c"
 12655 ;; Parameters:    Size  Location     Type
 12656 ;;  value           2    8[BANK0 ] int 
 12657 ;;  fieldLength     1   10[BANK0 ] char 
 12658 ;;  numPlaces       1   11[BANK0 ] unsigned char 
 12659 ;;  sign            1   12[BANK0 ] unsigned char 
 12660 ;; Auto vars:     Size  Location     Type
 12661 ;;  str             5   17[BANK0 ] unsigned char [5]
 12662 ;;  i               1   23[BANK0 ] unsigned char 
 12663 ;;  j               1   22[BANK0 ] unsigned char 
 12664 ;; Return value:  Size  Location     Type
 12665 ;;                  1    wreg      void 
 12666 ;; Registers used:
 12667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12668 ;; Tracked objects:
 12669 ;;		On entry : 0/0
 12670 ;;		On exit  : 0/0
 12671 ;;		Unchanged: 0/0
 12672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12673 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12674 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12675 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12676 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12677 ;;Total ram usage:       16 bytes
 12678 ;; Hardware stack levels used:    1
 12679 ;; Hardware stack levels required when called:    2
 12680 ;; This function calls:
 12681 ;;		_LCDWriteCharacter
 12682 ;;		___awdiv
 12683 ;;		___lwmod
 12684 ;; This function is called by:
 12685 ;;		_main
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           
 12690                           ;psect for function _LCDWriteInt
 12691  0E51                     _LCDWriteInt:	
 12692                           
 12693                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 12694                           
 12695                           ;incstack = 0
 12696                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12697  0E51  30D1               	movlw	low LCDWriteInt@F14396
 12698  0E52  0086               	movwf	6
 12699  0E53  3000               	movlw	high LCDWriteInt@F14396
 12700  0E54  0087               	movwf	7
 12701  0E55  3031               	movlw	low LCDWriteInt@str
 12702  0E56  0084               	movwf	4
 12703  0E57  3000               	movlw	high LCDWriteInt@str
 12704  0E58  0085               	movwf	5
 12705  0E59  3005               	movlw	5
 12706  0E5A  0020               	movlb	0	; select bank0
 12707  0E5B  00AD               	movwf	??_LCDWriteInt
 12708  0E5C                     u3210:	
 12709  0E5C  0016               	moviw fsr1++
 12710  0E5D  001A               	movwi fsr0++
 12711  0E5E  0BAD               	decfsz	??_LCDWriteInt,f
 12712  0E5F  2E5C               	goto	u3210
 12713                           
 12714                           ;lcd.c: 193: uint8_t i=4,j=0;
 12715  0E60  3004               	movlw	4
 12716  0E61  00AD               	movwf	??_LCDWriteInt
 12717  0E62  082D               	movf	??_LCDWriteInt,w
 12718  0E63  00B7               	movwf	LCDWriteInt@i
 12719  0E64  01B6               	clrf	LCDWriteInt@j
 12720                           
 12721                           ;lcd.c: 195: if(value<0)
 12722  0E65  1FA9               	btfss	LCDWriteInt@value+1,7
 12723  0E66  2E72               	goto	l2855
 12724                           
 12725                           ;lcd.c: 196: {
 12726                           ;lcd.c: 197: LCDWriteCharacter('-');
 12727  0E67  302D               	movlw	45
 12728  0E68  3189  2138  318E   	fcall	_LCDWriteCharacter
 12729                           
 12730                           ;lcd.c: 198: value=value*-1;
 12731  0E6B  0020               	movlb	0	; select bank0
 12732  0E6C  09A8               	comf	LCDWriteInt@value,f
 12733  0E6D  09A9               	comf	LCDWriteInt@value+1,f
 12734  0E6E  0AA8               	incf	LCDWriteInt@value,f
 12735  0E6F  1903               	skipnz
 12736  0E70  0AA9               	incf	LCDWriteInt@value+1,f
 12737                           
 12738                           ;lcd.c: 199: }
 12739  0E71  2E79               	goto	l2865
 12740  0E72                     l2855:	
 12741                           
 12742                           ;lcd.c: 201: else
 12743                           ;lcd.c: 202: {
 12744                           ;lcd.c: 203: if(sign == 1)
 12745  0E72  032C               	decf	LCDWriteInt@sign,w
 12746  0E73  1D03               	btfss	3,2
 12747  0E74  2E79               	goto	l2865
 12748                           
 12749                           ;lcd.c: 204: {
 12750                           ;lcd.c: 205: LCDWriteCharacter('+');
 12751  0E75  302B               	movlw	43
 12752  0E76  3189  2138  318E   	fcall	_LCDWriteCharacter
 12753  0E79                     l2865:	
 12754                           ;lcd.c: 206: }
 12755                           ;lcd.c: 207: }
 12756                           ;lcd.c: 209: while(value)
 12757                           
 12758  0E79  0020               	movlb	0	; select bank0
 12759  0E7A  0828               	movf	LCDWriteInt@value,w
 12760  0E7B  0429               	iorwf	LCDWriteInt@value+1,w
 12761  0E7C  1903               	btfsc	3,2
 12762  0E7D  2EA6               	goto	l2867
 12763                           
 12764                           ;lcd.c: 210: {
 12765                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 12766  0E7E  300A               	movlw	10
 12767  0E7F  00F0               	movwf	___lwmod@divisor
 12768  0E80  3000               	movlw	0
 12769  0E81  00F1               	movwf	___lwmod@divisor+1
 12770  0E82  0020               	movlb	0	; select bank0
 12771  0E83  0829               	movf	LCDWriteInt@value+1,w
 12772  0E84  00F3               	movwf	___lwmod@dividend+1
 12773  0E85  0828               	movf	LCDWriteInt@value,w
 12774  0E86  00F2               	movwf	___lwmod@dividend
 12775  0E87  3195  25D3  318E   	fcall	___lwmod
 12776  0E8A  0870               	movf	?___lwmod,w
 12777  0E8B  0020               	movlb	0	; select bank0
 12778  0E8C  00AD               	movwf	??_LCDWriteInt
 12779  0E8D  0837               	movf	LCDWriteInt@i,w
 12780  0E8E  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12781  0E8F  0086               	movwf	6
 12782  0E90  0187               	clrf	7
 12783  0E91  082D               	movf	??_LCDWriteInt,w
 12784  0E92  0081               	movwf	1
 12785                           
 12786                           ;lcd.c: 212: value=value/10;
 12787  0E93  300A               	movlw	10
 12788  0E94  00F0               	movwf	___awdiv@divisor
 12789  0E95  3000               	movlw	0
 12790  0E96  00F1               	movwf	___awdiv@divisor+1
 12791  0E97  0829               	movf	LCDWriteInt@value+1,w
 12792  0E98  00F3               	movwf	___awdiv@dividend+1
 12793  0E99  0828               	movf	LCDWriteInt@value,w
 12794  0E9A  00F2               	movwf	___awdiv@dividend
 12795  0E9B  3197  27AF  318E   	fcall	___awdiv
 12796  0E9E  0871               	movf	?___awdiv+1,w
 12797  0E9F  0020               	movlb	0	; select bank0
 12798  0EA0  00A9               	movwf	LCDWriteInt@value+1
 12799  0EA1  0870               	movf	?___awdiv,w
 12800  0EA2  00A8               	movwf	LCDWriteInt@value
 12801                           
 12802                           ;lcd.c: 213: i--;
 12803  0EA3  3001               	movlw	1
 12804  0EA4  02B7               	subwf	LCDWriteInt@i,f
 12805  0EA5  2E79               	goto	l2865
 12806  0EA6                     l2867:	
 12807                           
 12808                           ;lcd.c: 214: }
 12809                           ;lcd.c: 215: if(fieldLength==-1)
 12810  0EA6  0A2A               	incf	LCDWriteInt@fieldLength,w
 12811  0EA7  1903               	btfsc	3,2
 12812  0EA8  2EAE               	goto	l2873
 12813  0EA9  2EB6               	goto	l2875
 12814  0EAA                     l2871:	
 12815                           ;lcd.c: 216: {
 12816                           ;lcd.c: 217: while(str[j]==0)
 12817                           
 12818                           
 12819                           ;lcd.c: 218: {
 12820                           ;lcd.c: 219: j++;
 12821  0EAA  3001               	movlw	1
 12822  0EAB  00AD               	movwf	??_LCDWriteInt
 12823  0EAC  082D               	movf	??_LCDWriteInt,w
 12824  0EAD  07B6               	addwf	LCDWriteInt@j,f
 12825  0EAE                     l2873:	
 12826  0EAE  0836               	movf	LCDWriteInt@j,w
 12827  0EAF  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12828  0EB0  0086               	movwf	6
 12829  0EB1  0187               	clrf	7
 12830  0EB2  0801               	movf	1,w
 12831  0EB3  1D03               	btfss	3,2
 12832  0EB4  2EBC               	goto	l2877
 12833  0EB5  2EAA               	goto	l2871
 12834  0EB6                     l2875:	
 12835                           ;lcd.c: 220: }
 12836                           ;lcd.c: 221: }
 12837                           
 12838                           
 12839                           ;lcd.c: 222: else
 12840                           ;lcd.c: 223: {
 12841                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 12842  0EB6  032A               	decf	LCDWriteInt@fieldLength,w
 12843  0EB7  3AFF               	xorlw	255
 12844  0EB8  3E05               	addlw	5
 12845  0EB9  00AD               	movwf	??_LCDWriteInt
 12846  0EBA  082D               	movf	??_LCDWriteInt,w
 12847  0EBB  00B6               	movwf	LCDWriteInt@j
 12848  0EBC                     l2877:	
 12849                           
 12850                           ;lcd.c: 225: }
 12851                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 12852  0EBC  0836               	movf	LCDWriteInt@j,w
 12853  0EBD  00AD               	movwf	??_LCDWriteInt
 12854  0EBE  082D               	movf	??_LCDWriteInt,w
 12855  0EBF  00B7               	movwf	LCDWriteInt@i
 12856  0EC0                     l2883:	
 12857  0EC0  082B               	movf	LCDWriteInt@numPlaces,w
 12858  0EC1  00AD               	movwf	??_LCDWriteInt
 12859  0EC2  01AE               	clrf	??_LCDWriteInt+1
 12860  0EC3  09AD               	comf	??_LCDWriteInt,f
 12861  0EC4  09AE               	comf	??_LCDWriteInt+1,f
 12862  0EC5  0AAD               	incf	??_LCDWriteInt,f
 12863  0EC6  1903               	skipnz
 12864  0EC7  0AAE               	incf	??_LCDWriteInt+1,f
 12865  0EC8  082D               	movf	??_LCDWriteInt,w
 12866  0EC9  3E05               	addlw	5
 12867  0ECA  00AF               	movwf	??_LCDWriteInt+2
 12868  0ECB  3000               	movlw	0
 12869  0ECC  3D2E               	addwfc	??_LCDWriteInt+1,w
 12870  0ECD  00B0               	movwf	??_LCDWriteInt+3
 12871  0ECE  0830               	movf	??_LCDWriteInt+3,w
 12872  0ECF  3A80               	xorlw	128
 12873  0ED0  3C80               	sublw	128
 12874  0ED1  1D03               	skipz
 12875  0ED2  2ED5               	goto	u3275
 12876  0ED3  082F               	movf	??_LCDWriteInt+2,w
 12877  0ED4  0237               	subwf	LCDWriteInt@i,w
 12878  0ED5                     u3275:	
 12879  0ED5  1803               	btfsc	3,0
 12880  0ED6  2EE7               	goto	l2885
 12881                           
 12882                           ;lcd.c: 228: {
 12883                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 12884  0ED7  0020               	movlb	0	; select bank0
 12885  0ED8  0837               	movf	LCDWriteInt@i,w
 12886  0ED9  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12887  0EDA  0086               	movwf	6
 12888  0EDB  0187               	clrf	7
 12889  0EDC  0801               	movf	1,w
 12890  0EDD  3E30               	addlw	48
 12891  0EDE  3189  2138  318E   	fcall	_LCDWriteCharacter
 12892  0EE1  3001               	movlw	1
 12893  0EE2  0020               	movlb	0	; select bank0
 12894  0EE3  00AD               	movwf	??_LCDWriteInt
 12895  0EE4  082D               	movf	??_LCDWriteInt,w
 12896  0EE5  07B7               	addwf	LCDWriteInt@i,f
 12897  0EE6  2EC0               	goto	l2883
 12898  0EE7                     l2885:	
 12899                           
 12900                           ;lcd.c: 230: }
 12901                           ;lcd.c: 232: if(numPlaces == 1)
 12902  0EE7  0020               	movlb	0	; select bank0
 12903  0EE8  032B               	decf	LCDWriteInt@numPlaces,w
 12904  0EE9  1D03               	btfss	3,2
 12905  0EEA  2EF5               	goto	l2889
 12906                           
 12907                           ;lcd.c: 233: {
 12908                           ;lcd.c: 234: LCDWriteCharacter(46);
 12909  0EEB  302E               	movlw	46
 12910  0EEC  3189  2138  318E   	fcall	_LCDWriteCharacter
 12911                           
 12912                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 12913  0EEF  0020               	movlb	0	; select bank0
 12914  0EF0  0835               	movf	LCDWriteInt@str+4,w
 12915  0EF1  3E30               	addlw	48
 12916  0EF2  3189  2138  318E   	fcall	_LCDWriteCharacter
 12917  0EF5                     l2889:	
 12918                           
 12919                           ;lcd.c: 236: }
 12920                           ;lcd.c: 238: if(numPlaces == 2)
 12921  0EF5  3002               	movlw	2
 12922  0EF6  0020               	movlb	0	; select bank0
 12923  0EF7  062B               	xorwf	LCDWriteInt@numPlaces,w
 12924  0EF8  1D03               	btfss	3,2
 12925  0EF9  0008               	return
 12926                           
 12927                           ;lcd.c: 239: {
 12928                           ;lcd.c: 240: LCDWriteCharacter(46);
 12929  0EFA  302E               	movlw	46
 12930  0EFB  3189  2138  318E   	fcall	_LCDWriteCharacter
 12931                           
 12932                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 12933  0EFE  0020               	movlb	0	; select bank0
 12934  0EFF  0834               	movf	LCDWriteInt@str+3,w
 12935  0F00  3E30               	addlw	48
 12936  0F01  3189  2138  318E   	fcall	_LCDWriteCharacter
 12937                           
 12938                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 12939  0F04  0020               	movlb	0	; select bank0
 12940  0F05  0835               	movf	LCDWriteInt@str+4,w
 12941  0F06  3E30               	addlw	48
 12942  0F07  3189  2138         	fcall	_LCDWriteCharacter
 12943  0F09  0008               	return
 12944  0F0A                     __end_of_LCDWriteInt:	
 12945                           
 12946                           	psect	text35
 12947  15D3                     __ptext35:	
 12948 ;; *************** function ___lwmod *****************
 12949 ;; Defined at:
 12950 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 12951 ;; Parameters:    Size  Location     Type
 12952 ;;  divisor         2    0[COMMON] unsigned int 
 12953 ;;  dividend        2    2[COMMON] unsigned int 
 12954 ;; Auto vars:     Size  Location     Type
 12955 ;;  counter         1    5[COMMON] unsigned char 
 12956 ;; Return value:  Size  Location     Type
 12957 ;;                  2    0[COMMON] unsigned int 
 12958 ;; Registers used:
 12959 ;;		wreg, status,2, status,0
 12960 ;; Tracked objects:
 12961 ;;		On entry : 0/0
 12962 ;;		On exit  : 0/0
 12963 ;;		Unchanged: 0/0
 12964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12965 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12968 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12969 ;;Total ram usage:        6 bytes
 12970 ;; Hardware stack levels used:    1
 12971 ;; This function calls:
 12972 ;;		Nothing
 12973 ;; This function is called by:
 12974 ;;		_LCDWriteInt
 12975 ;; This function uses a non-reentrant model
 12976 ;;
 12977                           
 12978                           
 12979                           ;psect for function ___lwmod
 12980  15D3                     ___lwmod:	
 12981                           
 12982                           ;incstack = 0
 12983                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12984  15D3  0870               	movf	___lwmod@divisor,w
 12985  15D4  0471               	iorwf	___lwmod@divisor+1,w
 12986  15D5  1903               	btfsc	3,2
 12987  15D6  2DFA               	goto	l2769
 12988  15D7  01F5               	clrf	___lwmod@counter
 12989  15D8  0AF5               	incf	___lwmod@counter,f
 12990  15D9                     l2759:	
 12991  15D9  1BF1               	btfsc	___lwmod@divisor+1,7
 12992  15DA  2DE5               	goto	l2761
 12993  15DB  3001               	movlw	1
 12994  15DC                     u2945:	
 12995  15DC  35F0               	lslf	___lwmod@divisor,f
 12996  15DD  0DF1               	rlf	___lwmod@divisor+1,f
 12997  15DE  0B89               	decfsz	9,f
 12998  15DF  2DDC               	goto	u2945
 12999  15E0  3001               	movlw	1
 13000  15E1  00F4               	movwf	??___lwmod
 13001  15E2  0874               	movf	??___lwmod,w
 13002  15E3  07F5               	addwf	___lwmod@counter,f
 13003  15E4  2DD9               	goto	l2759
 13004  15E5                     l2761:	
 13005  15E5  0871               	movf	___lwmod@divisor+1,w
 13006  15E6  0273               	subwf	___lwmod@dividend+1,w
 13007  15E7  1D03               	skipz
 13008  15E8  2DEB               	goto	u2965
 13009  15E9  0870               	movf	___lwmod@divisor,w
 13010  15EA  0272               	subwf	___lwmod@dividend,w
 13011  15EB                     u2965:	
 13012  15EB  1C03               	skipc
 13013  15EC  2DF1               	goto	l2765
 13014  15ED  0870               	movf	___lwmod@divisor,w
 13015  15EE  02F2               	subwf	___lwmod@dividend,f
 13016  15EF  0871               	movf	___lwmod@divisor+1,w
 13017  15F0  3BF3               	subwfb	___lwmod@dividend+1,f
 13018  15F1                     l2765:	
 13019  15F1  3001               	movlw	1
 13020  15F2                     u2975:	
 13021  15F2  36F1               	lsrf	___lwmod@divisor+1,f
 13022  15F3  0CF0               	rrf	___lwmod@divisor,f
 13023  15F4  0B89               	decfsz	9,f
 13024  15F5  2DF2               	goto	u2975
 13025  15F6  3001               	movlw	1
 13026  15F7  02F5               	subwf	___lwmod@counter,f
 13027  15F8  1D03               	btfss	3,2
 13028  15F9  2DE5               	goto	l2761
 13029  15FA                     l2769:	
 13030  15FA  0873               	movf	___lwmod@dividend+1,w
 13031  15FB  00F1               	movwf	?___lwmod+1
 13032  15FC  0872               	movf	___lwmod@dividend,w
 13033  15FD  00F0               	movwf	?___lwmod
 13034  15FE  0008               	return
 13035  15FF                     __end_of___lwmod:	
 13036                           
 13037                           	psect	text36
 13038  17AF                     __ptext36:	
 13039 ;; *************** function ___awdiv *****************
 13040 ;; Defined at:
 13041 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;  divisor         2    0[COMMON] int 
 13044 ;;  dividend        2    2[COMMON] int 
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  quotient        2    7[COMMON] int 
 13047 ;;  sign            1    6[COMMON] unsigned char 
 13048 ;;  counter         1    5[COMMON] unsigned char 
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  2    0[COMMON] int 
 13051 ;; Registers used:
 13052 ;;		wreg, status,2, status,0
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/0
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13059 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13061 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13062 ;;Total ram usage:        9 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; This function calls:
 13065 ;;		Nothing
 13066 ;; This function is called by:
 13067 ;;		_LCDWriteInt
 13068 ;;		_main
 13069 ;; This function uses a non-reentrant model
 13070 ;;
 13071                           
 13072                           
 13073                           ;psect for function ___awdiv
 13074  17AF                     ___awdiv:	
 13075                           
 13076                           ;incstack = 0
 13077                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13078  17AF  01F6               	clrf	___awdiv@sign
 13079  17B0  1FF1               	btfss	___awdiv@divisor+1,7
 13080  17B1  2FB9               	goto	l2623
 13081  17B2  09F0               	comf	___awdiv@divisor,f
 13082  17B3  09F1               	comf	___awdiv@divisor+1,f
 13083  17B4  0AF0               	incf	___awdiv@divisor,f
 13084  17B5  1903               	skipnz
 13085  17B6  0AF1               	incf	___awdiv@divisor+1,f
 13086  17B7  01F6               	clrf	___awdiv@sign
 13087  17B8  0AF6               	incf	___awdiv@sign,f
 13088  17B9                     l2623:	
 13089  17B9  1FF3               	btfss	___awdiv@dividend+1,7
 13090  17BA  2FC4               	goto	l2629
 13091  17BB  09F2               	comf	___awdiv@dividend,f
 13092  17BC  09F3               	comf	___awdiv@dividend+1,f
 13093  17BD  0AF2               	incf	___awdiv@dividend,f
 13094  17BE  1903               	skipnz
 13095  17BF  0AF3               	incf	___awdiv@dividend+1,f
 13096  17C0  3001               	movlw	1
 13097  17C1  00F4               	movwf	??___awdiv
 13098  17C2  0874               	movf	??___awdiv,w
 13099  17C3  06F6               	xorwf	___awdiv@sign,f
 13100  17C4                     l2629:	
 13101  17C4  01F7               	clrf	___awdiv@quotient
 13102  17C5  01F8               	clrf	___awdiv@quotient+1
 13103  17C6  0870               	movf	___awdiv@divisor,w
 13104  17C7  0471               	iorwf	___awdiv@divisor+1,w
 13105  17C8  1903               	btfsc	3,2
 13106  17C9  2FF3               	goto	l2651
 13107  17CA  01F5               	clrf	___awdiv@counter
 13108  17CB  0AF5               	incf	___awdiv@counter,f
 13109  17CC                     l2639:	
 13110  17CC  1BF1               	btfsc	___awdiv@divisor+1,7
 13111  17CD  2FD8               	goto	l2641
 13112  17CE  3001               	movlw	1
 13113  17CF                     u2675:	
 13114  17CF  35F0               	lslf	___awdiv@divisor,f
 13115  17D0  0DF1               	rlf	___awdiv@divisor+1,f
 13116  17D1  0B89               	decfsz	9,f
 13117  17D2  2FCF               	goto	u2675
 13118  17D3  3001               	movlw	1
 13119  17D4  00F4               	movwf	??___awdiv
 13120  17D5  0874               	movf	??___awdiv,w
 13121  17D6  07F5               	addwf	___awdiv@counter,f
 13122  17D7  2FCC               	goto	l2639
 13123  17D8                     l2641:	
 13124  17D8  3001               	movlw	1
 13125  17D9                     u2695:	
 13126  17D9  35F7               	lslf	___awdiv@quotient,f
 13127  17DA  0DF8               	rlf	___awdiv@quotient+1,f
 13128  17DB  0B89               	decfsz	9,f
 13129  17DC  2FD9               	goto	u2695
 13130  17DD  0871               	movf	___awdiv@divisor+1,w
 13131  17DE  0273               	subwf	___awdiv@dividend+1,w
 13132  17DF  1D03               	skipz
 13133  17E0  2FE3               	goto	u2705
 13134  17E1  0870               	movf	___awdiv@divisor,w
 13135  17E2  0272               	subwf	___awdiv@dividend,w
 13136  17E3                     u2705:	
 13137  17E3  1C03               	skipc
 13138  17E4  2FEA               	goto	l2647
 13139  17E5  0870               	movf	___awdiv@divisor,w
 13140  17E6  02F2               	subwf	___awdiv@dividend,f
 13141  17E7  0871               	movf	___awdiv@divisor+1,w
 13142  17E8  3BF3               	subwfb	___awdiv@dividend+1,f
 13143  17E9  1477               	bsf	___awdiv@quotient,0
 13144  17EA                     l2647:	
 13145  17EA  3001               	movlw	1
 13146  17EB                     u2715:	
 13147  17EB  36F1               	lsrf	___awdiv@divisor+1,f
 13148  17EC  0CF0               	rrf	___awdiv@divisor,f
 13149  17ED  0B89               	decfsz	9,f
 13150  17EE  2FEB               	goto	u2715
 13151  17EF  3001               	movlw	1
 13152  17F0  02F5               	subwf	___awdiv@counter,f
 13153  17F1  1D03               	btfss	3,2
 13154  17F2  2FD8               	goto	l2641
 13155  17F3                     l2651:	
 13156  17F3  0876               	movf	___awdiv@sign,w
 13157  17F4  1903               	btfsc	3,2
 13158  17F5  2FFB               	goto	l2655
 13159  17F6  09F7               	comf	___awdiv@quotient,f
 13160  17F7  09F8               	comf	___awdiv@quotient+1,f
 13161  17F8  0AF7               	incf	___awdiv@quotient,f
 13162  17F9  1903               	skipnz
 13163  17FA  0AF8               	incf	___awdiv@quotient+1,f
 13164  17FB                     l2655:	
 13165  17FB  0878               	movf	___awdiv@quotient+1,w
 13166  17FC  00F1               	movwf	?___awdiv+1
 13167  17FD  0877               	movf	___awdiv@quotient,w
 13168  17FE  00F0               	movwf	?___awdiv
 13169  17FF  0008               	return
 13170  1800                     __end_of___awdiv:	
 13171                           
 13172                           	psect	text37
 13173  0938                     __ptext37:	
 13174 ;; *************** function _LCDWriteCharacter *****************
 13175 ;; Defined at:
 13176 ;;		line 140 in file "lcd.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;  character       1    wreg     const unsigned char 
 13179 ;; Auto vars:     Size  Location     Type
 13180 ;;  character       1    5[BANK0 ] const unsigned char 
 13181 ;;  base            2    6[BANK0 ] unsigned int 
 13182 ;; Return value:  Size  Location     Type
 13183 ;;                  1    wreg      void 
 13184 ;; Registers used:
 13185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13186 ;; Tracked objects:
 13187 ;;		On entry : 0/0
 13188 ;;		On exit  : 0/0
 13189 ;;		Unchanged: 0/0
 13190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13194 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13195 ;;Total ram usage:        6 bytes
 13196 ;; Hardware stack levels used:    1
 13197 ;; Hardware stack levels required when called:    1
 13198 ;; This function calls:
 13199 ;;		_LCDWrite
 13200 ;;		___wmul
 13201 ;; This function is called by:
 13202 ;;		_LCDWriteInt
 13203 ;;		_main
 13204 ;;		_LCDWriteString
 13205 ;; This function uses a non-reentrant model
 13206 ;;
 13207                           
 13208                           
 13209                           ;psect for function _LCDWriteCharacter
 13210  0938                     _LCDWriteCharacter:	
 13211                           
 13212                           ;incstack = 0
 13213                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13214                           ;LCDWriteCharacter@character stored from wreg
 13215  0938  0020               	movlb	0	; select bank0
 13216  0939  00A5               	movwf	LCDWriteCharacter@character
 13217                           
 13218                           ;lcd.c: 142: uint16_t base;
 13219                           ;lcd.c: 143: base = character - 0x20;
 13220  093A  0825               	movf	LCDWriteCharacter@character,w
 13221  093B  3EE0               	addlw	224
 13222  093C  00A6               	movwf	LCDWriteCharacter@base
 13223  093D  30FF               	movlw	255
 13224  093E  1803               	skipnc
 13225  093F  3000               	movlw	0
 13226  0940  00A7               	movwf	LCDWriteCharacter@base+1
 13227                           
 13228                           ;lcd.c: 144: base *= 3;
 13229  0941  3003               	movlw	3
 13230  0942  00F9               	movwf	___wmul@multiplier
 13231  0943  3000               	movlw	0
 13232  0944  00FA               	movwf	___wmul@multiplier+1
 13233  0945  0827               	movf	LCDWriteCharacter@base+1,w
 13234  0946  00FC               	movwf	___wmul@multiplicand+1
 13235  0947  0826               	movf	LCDWriteCharacter@base,w
 13236  0948  00FB               	movwf	___wmul@multiplicand
 13237  0949  3194  24EE  3189   	fcall	___wmul
 13238  094C  087A               	movf	?___wmul+1,w
 13239  094D  0020               	movlb	0	; select bank0
 13240  094E  00A7               	movwf	LCDWriteCharacter@base+1
 13241  094F  0879               	movf	?___wmul,w
 13242  0950  00A6               	movwf	LCDWriteCharacter@base
 13243                           
 13244                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13245  0951  0827               	movf	LCDWriteCharacter@base+1,w
 13246  0952  0085               	movwf	5
 13247  0953  0826               	movf	LCDWriteCharacter@base,w
 13248  0954  0084               	movwf	4
 13249  0955  3000               	movlw	low (_fonts| (0+32768))
 13250  0956  0784               	addwf	4,f
 13251  0957  3088               	movlw	high (_fonts| (0+32768))
 13252  0958  3D85               	addwfc	5,f
 13253  0959  0800               	movf	0,w	;code access
 13254  095A  00A2               	movwf	??_LCDWriteCharacter
 13255  095B  0822               	movf	??_LCDWriteCharacter,w
 13256  095C  00F0               	movwf	LCDWrite@data
 13257  095D  3001               	movlw	1
 13258  095E  3195  2588  3189   	fcall	_LCDWrite
 13259                           
 13260                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13261  0961  0020               	movlb	0	; select bank0
 13262  0962  0826               	movf	LCDWriteCharacter@base,w
 13263  0963  3E01               	addlw	1
 13264  0964  00A2               	movwf	??_LCDWriteCharacter
 13265  0965  3000               	movlw	0
 13266  0966  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13267  0967  00A3               	movwf	??_LCDWriteCharacter+1
 13268  0968  3000               	movlw	low (_fonts| (0+32768))
 13269  0969  0722               	addwf	??_LCDWriteCharacter,w
 13270  096A  0084               	movwf	4
 13271  096B  3088               	movlw	high (_fonts| (0+32768))
 13272  096C  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13273  096D  0085               	movwf	5
 13274  096E  0800               	movf	0,w	;code access
 13275  096F  00A4               	movwf	??_LCDWriteCharacter+2
 13276  0970  0824               	movf	??_LCDWriteCharacter+2,w
 13277  0971  00F0               	movwf	LCDWrite@data
 13278  0972  3001               	movlw	1
 13279  0973  3195  2588  3189   	fcall	_LCDWrite
 13280                           
 13281                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13282  0976  0020               	movlb	0	; select bank0
 13283  0977  0826               	movf	LCDWriteCharacter@base,w
 13284  0978  3E02               	addlw	2
 13285  0979  00A2               	movwf	??_LCDWriteCharacter
 13286  097A  3000               	movlw	0
 13287  097B  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13288  097C  00A3               	movwf	??_LCDWriteCharacter+1
 13289  097D  3000               	movlw	low (_fonts| (0+32768))
 13290  097E  0722               	addwf	??_LCDWriteCharacter,w
 13291  097F  0084               	movwf	4
 13292  0980  3088               	movlw	high (_fonts| (0+32768))
 13293  0981  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13294  0982  0085               	movwf	5
 13295  0983  0800               	movf	0,w	;code access
 13296  0984  00A4               	movwf	??_LCDWriteCharacter+2
 13297  0985  0824               	movf	??_LCDWriteCharacter+2,w
 13298  0986  00F0               	movwf	LCDWrite@data
 13299  0987  3001               	movlw	1
 13300  0988  3195  2588  3189   	fcall	_LCDWrite
 13301                           
 13302                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13303  098B  01F0               	clrf	LCDWrite@data
 13304  098C  3001               	movlw	1
 13305  098D  3195  2588         	fcall	_LCDWrite
 13306  098F  0008               	return
 13307  0990                     __end_of_LCDWriteCharacter:	
 13308                           
 13309                           	psect	text38
 13310  14EE                     __ptext38:	
 13311 ;; *************** function ___wmul *****************
 13312 ;; Defined at:
 13313 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;  multiplier      2    9[COMMON] unsigned int 
 13316 ;;  multiplicand    2   11[COMMON] unsigned int 
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;  product         2    0[BANK0 ] unsigned int 
 13319 ;; Return value:  Size  Location     Type
 13320 ;;                  2    9[COMMON] unsigned int 
 13321 ;; Registers used:
 13322 ;;		wreg, status,2, status,0
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/0
 13325 ;;		On exit  : 0/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13331 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13332 ;;Total ram usage:        6 bytes
 13333 ;; Hardware stack levels used:    1
 13334 ;; This function calls:
 13335 ;;		Nothing
 13336 ;; This function is called by:
 13337 ;;		_readAnalog
 13338 ;;		_LCDWriteCharacter
 13339 ;;		_main
 13340 ;;		_eval_poly
 13341 ;; This function uses a non-reentrant model
 13342 ;;
 13343                           
 13344                           
 13345                           ;psect for function ___wmul
 13346  14EE                     ___wmul:	
 13347                           
 13348                           ;incstack = 0
 13349                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13350  14EE  0020               	movlb	0	; select bank0
 13351  14EF  01A0               	clrf	___wmul@product
 13352  14F0  01A1               	clrf	___wmul@product+1
 13353  14F1                     l2187:	
 13354  14F1  1C79               	btfss	___wmul@multiplier,0
 13355  14F2  2CF8               	goto	l571
 13356  14F3  087B               	movf	___wmul@multiplicand,w
 13357  14F4  0020               	movlb	0	; select bank0
 13358  14F5  07A0               	addwf	___wmul@product,f
 13359  14F6  087C               	movf	___wmul@multiplicand+1,w
 13360  14F7  3DA1               	addwfc	___wmul@product+1,f
 13361  14F8                     l571:	
 13362  14F8  3001               	movlw	1
 13363  14F9                     u2025:	
 13364  14F9  35FB               	lslf	___wmul@multiplicand,f
 13365  14FA  0DFC               	rlf	___wmul@multiplicand+1,f
 13366  14FB  0B89               	decfsz	9,f
 13367  14FC  2CF9               	goto	u2025
 13368  14FD  3001               	movlw	1
 13369  14FE                     u2035:	
 13370  14FE  36FA               	lsrf	___wmul@multiplier+1,f
 13371  14FF  0CF9               	rrf	___wmul@multiplier,f
 13372  1500  0B89               	decfsz	9,f
 13373  1501  2CFE               	goto	u2035
 13374  1502  0879               	movf	___wmul@multiplier,w
 13375  1503  047A               	iorwf	___wmul@multiplier+1,w
 13376  1504  1D03               	btfss	3,2
 13377  1505  2CF1               	goto	l2187
 13378  1506  0020               	movlb	0	; select bank0
 13379  1507  0821               	movf	___wmul@product+1,w
 13380  1508  00FA               	movwf	?___wmul+1
 13381  1509  0820               	movf	___wmul@product,w
 13382  150A  00F9               	movwf	?___wmul
 13383  150B  0008               	return
 13384  150C                     __end_of___wmul:	
 13385                           
 13386                           	psect	text39
 13387  1588                     __ptext39:	
 13388 ;; *************** function _LCDWrite *****************
 13389 ;; Defined at:
 13390 ;;		line 280 in file "lcd.c"
 13391 ;; Parameters:    Size  Location     Type
 13392 ;;  data_or_comm    1    wreg     unsigned char 
 13393 ;;  data            1    0[COMMON] unsigned char 
 13394 ;; Auto vars:     Size  Location     Type
 13395 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13396 ;;  i               1    4[COMMON] unsigned char 
 13397 ;;  d               1    3[COMMON] unsigned char 
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  1    wreg      void 
 13400 ;; Registers used:
 13401 ;;		wreg, status,2, status,0
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13407 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;Total ram usage:        5 bytes
 13412 ;; Hardware stack levels used:    1
 13413 ;; This function calls:
 13414 ;;		Nothing
 13415 ;; This function is called by:
 13416 ;;		_gotoXY
 13417 ;;		_LCDWriteCharacter
 13418 ;;		_LCDClear
 13419 ;;		_LCDInit
 13420 ;;		_LCDBitmap
 13421 ;; This function uses a non-reentrant model
 13422 ;;
 13423                           
 13424                           
 13425                           ;psect for function _LCDWrite
 13426  1588                     _LCDWrite:	
 13427                           
 13428                           ;incstack = 0
 13429                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13430                           ;LCDWrite@data_or_command stored from wreg
 13431  1588  00F2               	movwf	LCDWrite@data_or_command
 13432                           
 13433                           ;lcd.c: 282: uint8_t i,d;
 13434                           ;lcd.c: 284: d=data;
 13435  1589  0870               	movf	LCDWrite@data,w
 13436  158A  00F1               	movwf	??_LCDWrite
 13437  158B  0871               	movf	??_LCDWrite,w
 13438  158C  00F3               	movwf	LCDWrite@d
 13439                           
 13440                           ;lcd.c: 286: if(data_or_command == 0)
 13441  158D  0872               	movf	LCDWrite@data_or_command,w
 13442  158E  1D03               	btfss	3,2
 13443  158F  2D93               	goto	l190
 13444                           
 13445                           ;lcd.c: 287: {
 13446                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 13447  1590  0020               	movlb	0	; select bank0
 13448  1591  1116               	bcf	22,2	;volatile
 13449                           
 13450                           ;lcd.c: 289: }
 13451  1592  2D95               	goto	l191
 13452  1593                     l190:	
 13453                           
 13454                           ;lcd.c: 290: else
 13455                           ;lcd.c: 291: {
 13456                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 13457  1593  0020               	movlb	0	; select bank0
 13458  1594  1516               	bsf	22,2	;volatile
 13459  1595                     l191:	
 13460                           
 13461                           ;lcd.c: 293: }
 13462                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 13463  1595  1096               	bcf	22,1	;volatile
 13464                           
 13465                           ;lcd.c: 297: for(i=0;i<8;i++)
 13466  1596  01F4               	clrf	LCDWrite@i
 13467  1597  3008               	movlw	8
 13468  1598  0274               	subwf	LCDWrite@i,w
 13469  1599  1803               	btfsc	3,0
 13470  159A  2DAB               	goto	l193
 13471  159B                     l192:	
 13472                           
 13473                           ;lcd.c: 298: {
 13474                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 13475  159B  1196               	bcf	22,3	;volatile
 13476                           
 13477                           ;lcd.c: 301: if(d&0x80)
 13478  159C  1FF3               	btfss	LCDWrite@d,7
 13479  159D  2D9F               	goto	l194
 13480                           
 13481                           ;lcd.c: 302: {
 13482                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 13483  159E  1596               	bsf	22,3	;volatile
 13484  159F                     l194:	
 13485                           
 13486                           ;lcd.c: 304: }
 13487                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 13488  159F  1616               	bsf	22,4	;volatile
 13489                           
 13490                           ;lcd.c: 308: d<<=1;
 13491  15A0  1003               	clrc
 13492  15A1  0DF3               	rlf	LCDWrite@d,f
 13493                           
 13494                           ;lcd.c: 310: LATAbits.LATA4=0;
 13495  15A2  1216               	bcf	22,4	;volatile
 13496  15A3  3001               	movlw	1
 13497  15A4  00F1               	movwf	??_LCDWrite
 13498  15A5  0871               	movf	??_LCDWrite,w
 13499  15A6  07F4               	addwf	LCDWrite@i,f
 13500  15A7  3008               	movlw	8
 13501  15A8  0274               	subwf	LCDWrite@i,w
 13502  15A9  1C03               	skipc
 13503  15AA  2D9B               	goto	l192
 13504  15AB                     l193:	
 13505                           
 13506                           ;lcd.c: 311: }
 13507                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 13508  15AB  1496               	bsf	22,1	;volatile
 13509  15AC  0008               	return
 13510  15AD                     __end_of_LCDWrite:	
 13511                           
 13512                           	psect	text40
 13513  0A54                     __ptext40:	
 13514 ;; *************** function _Battery_State_Machine *****************
 13515 ;; Defined at:
 13516 ;;		line 35 in file "battery_charger.c"
 13517 ;; Parameters:    Size  Location     Type
 13518 ;;		None
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;		None
 13521 ;; Return value:  Size  Location     Type
 13522 ;;                  1    wreg      void 
 13523 ;; Registers used:
 13524 ;;		wreg, status,2, status,0
 13525 ;; Tracked objects:
 13526 ;;		On entry : 0/0
 13527 ;;		On exit  : 0/0
 13528 ;;		Unchanged: 0/0
 13529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;Total ram usage:        1 bytes
 13535 ;; Hardware stack levels used:    1
 13536 ;; This function calls:
 13537 ;;		Nothing
 13538 ;; This function is called by:
 13539 ;;		_main
 13540 ;; This function uses a non-reentrant model
 13541 ;;
 13542                           
 13543                           
 13544                           ;psect for function _Battery_State_Machine
 13545  0A54                     _Battery_State_Machine:	
 13546                           
 13547                           ;battery_charger.c: 37: if(battery_state == PRECHARGE)
 13548                           
 13549                           ;incstack = 0
 13550                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 13551  0A54  3003               	movlw	3
 13552  0A55  0021               	movlb	1	; select bank1
 13553  0A56  066B               	xorwf	_battery_state^(0+128),w
 13554  0A57  1D03               	btfss	3,2
 13555  0A58  2A7B               	goto	l2803
 13556                           
 13557                           ;battery_charger.c: 38: {
 13558                           ;battery_charger.c: 39: if(voltage[1] < 1075)
 13559  0A59  084C               	movf	((_voltage+1)^(0+128)+2),w
 13560  0A5A  3A80               	xorlw	128
 13561  0A5B  00F0               	movwf	??_Battery_State_Machine
 13562  0A5C  3084               	movlw	132
 13563  0A5D  0270               	subwf	??_Battery_State_Machine,w
 13564  0A5E  1D03               	skipz
 13565  0A5F  2A62               	goto	u3075
 13566  0A60  3033               	movlw	51
 13567  0A61  024B               	subwf	(_voltage^(0+128)+2),w
 13568  0A62                     u3075:	
 13569  0A62  1803               	skipnc
 13570  0A63  2A71               	goto	l2801
 13571                           
 13572                           ;battery_charger.c: 40: {
 13573                           ;battery_charger.c: 41: if(state_counter)
 13574  0A64  0021               	movlb	1	; select bank1
 13575  0A65  0867               	movf	_state_counter^(0+128),w
 13576  0A66  0468               	iorwf	(_state_counter+1)^(0+128),w
 13577  0A67  1903               	btfsc	3,2
 13578  0A68  2A6E               	goto	l107
 13579                           
 13580                           ;battery_charger.c: 42: {
 13581                           ;battery_charger.c: 43: state_counter-=1;
 13582  0A69  3001               	movlw	1
 13583  0A6A  02E7               	subwf	_state_counter^(0+128),f
 13584  0A6B  3000               	movlw	0
 13585  0A6C  3BE8               	subwfb	(_state_counter+1)^(0+128),f
 13586                           
 13587                           ;battery_charger.c: 44: }
 13588  0A6D  0008               	return
 13589  0A6E                     l107:	
 13590                           
 13591                           ;battery_charger.c: 45: else
 13592                           ;battery_charger.c: 46: {
 13593                           ;battery_charger.c: 47: battery_state = FAULT;
 13594  0A6E  01EB               	clrf	_battery_state^(0+128)
 13595  0A6F  0AEB               	incf	_battery_state^(0+128),f
 13596                           
 13597                           ;battery_charger.c: 48: }
 13598                           ;battery_charger.c: 49: }
 13599  0A70  0008               	return
 13600  0A71                     l2801:	
 13601                           
 13602                           ;battery_charger.c: 50: else
 13603                           ;battery_charger.c: 51: {
 13604                           ;battery_charger.c: 52: battery_state = CHARGE;
 13605  0A71  3004               	movlw	4
 13606  0A72  00F0               	movwf	??_Battery_State_Machine
 13607  0A73  0870               	movf	??_Battery_State_Machine,w
 13608  0A74  0021               	movlb	1	; select bank1
 13609  0A75  00EB               	movwf	_battery_state^(0+128)
 13610                           
 13611                           ;battery_charger.c: 53: { Iref = 40; };
 13612  0A76  3028               	movlw	40
 13613  0A77  00E3               	movwf	_Iref^(0+128)
 13614  0A78  3000               	movlw	0
 13615  0A79  00E4               	movwf	(_Iref^(0+128)+1)
 13616                           
 13617                           ;battery_charger.c: 54: }
 13618                           ;battery_charger.c: 55: }
 13619  0A7A  0008               	return
 13620  0A7B                     l2803:	
 13621                           
 13622                           ;battery_charger.c: 56: else if(battery_state == CHARGE)
 13623  0A7B  3004               	movlw	4
 13624  0A7C  066B               	xorwf	_battery_state^(0+128),w
 13625  0A7D  1D03               	btfss	3,2
 13626  0A7E  2AAC               	goto	l2817
 13627                           
 13628                           ;battery_charger.c: 57: {
 13629                           ;battery_charger.c: 58: if((!Imode0))
 13630  0A7F  086D               	movf	_Imode0^(0+128),w
 13631  0A80  1D03               	btfss	3,2
 13632  0A81  0008               	return
 13633                           
 13634                           ;battery_charger.c: 59: {
 13635                           ;battery_charger.c: 60: if(current[1] < Imin)
 13636  0A82  0844               	movf	((_current+1)^(0+128)+2),w
 13637  0A83  3A80               	xorlw	128
 13638  0A84  00F0               	movwf	??_Battery_State_Machine
 13639  0A85  0866               	movf	(_Imin+1)^(0+128),w
 13640  0A86  3A80               	xorlw	128
 13641  0A87  0270               	subwf	??_Battery_State_Machine,w
 13642  0A88  1D03               	skipz
 13643  0A89  2A8C               	goto	u3115
 13644  0A8A  0865               	movf	_Imin^(0+128),w
 13645  0A8B  0243               	subwf	(_current^(0+128)+2),w
 13646  0A8C                     u3115:	
 13647  0A8C  1803               	skipnc
 13648  0A8D  2A9F               	goto	l2813
 13649                           
 13650                           ;battery_charger.c: 61: {
 13651                           ;battery_charger.c: 62: IminCount-=2;
 13652  0A8E  3002               	movlw	2
 13653  0A8F  0021               	movlb	1	; select bank1
 13654  0A90  02E9               	subwf	_IminCount^(0+128),f
 13655  0A91  3000               	movlw	0
 13656  0A92  3BEA               	subwfb	(_IminCount+1)^(0+128),f
 13657                           
 13658                           ;battery_charger.c: 63: if(IminCount<2)
 13659  0A93  3000               	movlw	0
 13660  0A94  026A               	subwf	(_IminCount+1)^(0+128),w
 13661  0A95  3002               	movlw	2
 13662  0A96  1903               	skipnz
 13663  0A97  0269               	subwf	_IminCount^(0+128),w
 13664  0A98  1803               	skipnc
 13665  0A99  0008               	return
 13666                           
 13667                           ;battery_charger.c: 64: {
 13668                           ;battery_charger.c: 65: battery_state = FLOAT;
 13669  0A9A  3005               	movlw	5
 13670  0A9B  00F0               	movwf	??_Battery_State_Machine
 13671  0A9C  0870               	movf	??_Battery_State_Machine,w
 13672  0A9D  00EB               	movwf	_battery_state^(0+128)
 13673                           
 13674                           ;battery_charger.c: 66: }
 13675                           ;battery_charger.c: 67: }
 13676  0A9E  0008               	return
 13677  0A9F                     l2813:	
 13678                           
 13679                           ;battery_charger.c: 68: else
 13680                           ;battery_charger.c: 69: {
 13681                           ;battery_charger.c: 70: if(IminCount<10)IminCount+=1;
 13682  0A9F  3000               	movlw	0
 13683  0AA0  0021               	movlb	1	; select bank1
 13684  0AA1  026A               	subwf	(_IminCount+1)^(0+128),w
 13685  0AA2  300A               	movlw	10
 13686  0AA3  1903               	skipnz
 13687  0AA4  0269               	subwf	_IminCount^(0+128),w
 13688  0AA5  1803               	skipnc
 13689  0AA6  0008               	return
 13690  0AA7  3001               	movlw	1
 13691  0AA8  07E9               	addwf	_IminCount^(0+128),f
 13692  0AA9  3000               	movlw	0
 13693  0AAA  3DEA               	addwfc	(_IminCount+1)^(0+128),f
 13694                           
 13695                           ;battery_charger.c: 71: }
 13696                           ;battery_charger.c: 72: }
 13697                           ;battery_charger.c: 73: }
 13698  0AAB  0008               	return
 13699  0AAC                     l2817:	
 13700                           
 13701                           ;battery_charger.c: 74: else if(battery_state == FLOAT)
 13702  0AAC  3005               	movlw	5
 13703  0AAD  066B               	xorwf	_battery_state^(0+128),w
 13704  0AAE  1D03               	btfss	3,2
 13705  0AAF  0008               	return
 13706                           
 13707                           ;battery_charger.c: 75: {
 13708                           ;battery_charger.c: 76: { Vref = 1380; };
 13709  0AB0  3064               	movlw	100
 13710  0AB1  00E1               	movwf	_Vref^(0+128)
 13711  0AB2  3005               	movlw	5
 13712  0AB3  00E2               	movwf	(_Vref^(0+128)+1)
 13713                           
 13714                           ;battery_charger.c: 77: { Iref = 20; };
 13715  0AB4  3014               	movlw	20
 13716  0AB5  00E3               	movwf	_Iref^(0+128)
 13717  0AB6  3000               	movlw	0
 13718  0AB7  00E4               	movwf	(_Iref^(0+128)+1)
 13719                           
 13720                           ;battery_charger.c: 81: {
 13721                           
 13722                           ;battery_charger.c: 78: }
 13723  0AB8  0008               	return
 13724  0AB9                     __end_of_Battery_State_Machine:	
 13725  007E                     btemp	set	126	;btemp
 13726  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    330
    Data        18
    BSS         85
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      79
    BANK1            80     33      78
    BANK2            80      0      64
    BANK3            48      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   80871
                                             72 BANK0      2     2      0
                                              0 BANK1     33    33      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   33984
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   17121
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7527
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2961
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1710
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6846
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6846
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     623
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3789
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2434
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3741
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2862
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1960
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7320
                                              8 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     830
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1908
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     940
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv
     ___lwmod
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     21      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               30      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EB      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EB      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jun 27 10:45:59 2018

                                  _j 006C               LCDWriteInt@fieldLength 002A  
            __size_of_PWM_Initialize 001F                          __CFG_CP$OFF 0000  
                                 l60 148B                                   l57 1484  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 004C  
                       ___ftadd@exp2 004B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 004A                                  l107 0A6E  
                                l190 1593                                  l191 1595  
                                l192 159B                                  l193 15AB  
                                l194 159F                                  l435 02D7  
                      LCDClear@index 0079                                  l626 0ACA  
                                l571 14F8                                  l740 0A3D  
                                l732 0A22                                  l823 0C2A  
                                l739 0A35                                  l763 0FA9  
                                _GIE 005F                                  _RB2 006A  
                       __CFG_CPD$OFF 0000                                  _log 0CED  
                    __end_of_ADCRead 1492                      _TMR2_Initialize 143E  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                    __end_of_LCDInit 166E                         ?_LCDWriteInt 0028  
                       __CFG_ZCD$OFF 0000                         ___ftdiv@cntr 002A  
                       ___ftdiv@sign 002F                                 l2141 0A09  
                               l2205 0F32                                 l3101 042A  
                               l2151 0A2F                                 l2143 0A0E  
                               l2135 09F8                                 l2215 0F48  
                               l3023 02DD                                 l2233 0F75  
                               l2209 0F39                                 l2305 0E21  
                               l3105 0432                                 l2139 09FF  
                               l2251 0FBB                                 l2235 0F7F  
                               l2227 0F62                                 l3123 0462  
                               l2149 0A27                                 l2245 0F9B  
                               l2237 0F84                                 l2341 169A  
                               l2309 0E29                                 l3061 0393  
                               l3029 02FC                                 l2255 0FCD  
                               l2247 0FA5                                 l2239 0F88  
                               l3055 038A                                 l2329 1572  
                               l2265 0FE8                                 l2337 1684  
                               l2281 0DCA                                 l2361 16BB  
                               l3241 07BD                                 l3049 036D  
                               l2187 14F1                                 l2611 0B32  
                               l2603 0B19                                 l2275 0DB4  
                               l2453 15BA                                 l2293 0E05  
                               l3085 03E6                                 l2623 17B9  
                               l2607 0B24                                 l3079 03CF  
                               l2801 0A71                                 l2641 17D8  
                               l2705 1514                                 l2297 0E0D  
                               l3089 03ED                                 l2803 0A7B  
                               l2651 17F3                                 l2459 15CE  
                               l2715 0BD6                                 l2379 09E9  
                               l3099 0427                                 l2813 0A9F  
                               l2629 17C4                                 l2741 0C21  
                               l2733 0C06                                 l2565 0D1F  
                               l2655 17FB                                 l2647 17EA  
                               l2639 17CC                                 l2671 0C71  
                               l2743 0C2D                                 l2735 0C14  
                               l2559 0D0C                                 l2817 0AAC  
                               l2761 15E5                                 l2665 0C5B  
                               l2841 171E                                 l2833 16FD  
                               l2593 0AEB                                 l2585 0ADB  
                               l2913 0B5F                                 l2747 0C3B  
                               l2595 0AF9                                 l2923 0B8B  
                               l2765 15F1                                 l2693 0CCB  
                               l2685 0CB2                                 l2829 16F8  
                               l2933 0B99                                 l2925 0B8D  
                               l2759 15D9                                 l2871 0EAA  
                               l2855 0E72                                 l2919 0B79  
                               l2769 15FA                                 l2873 0EAE  
                               l2865 0E79                                 l2945 0BBA  
                               l2883 0EC0                                 l2875 0EB6  
                               l2867 0EA6                                 l2787 027C  
                               l2939 0BA2                                 l2947 0BBB  
                               l2885 0EE7                                 l2877 0EBC  
                               l2981 1783                                 l2975 173E  
                               l2889 0EF5                                 ?_log 0057  
                               u2025 14F9                                 u2035 14FE  
                               u3005 01C9                                 u2205 0F89  
                               _LATA 0016                                 _LATB 0017  
                               u3015 0207                                 _LATC 0018  
                               u3025 0256                                 u2145 0F63  
                               u2305 0DD6                                 u3210 0E5C  
                               u3115 0A8C                                 u2235 0F9C  
                               u2315 0DE6                                 u2500 003A  
                               u3055 0288                                 u2175 0F76  
                               u2335 0E0E                                 u3305 14B7  
                               u2345 0E14                                 _T2PR 028D  
                               u3075 0A62                                 u3315 14CD  
                               u3155 16EF                                 u3325 14A1  
                               u2605 0B0E                                 u2615 0B1A  
                               u3335 0B4D                                 u2375 0E2A  
                               u2705 17E3                                 u3425 1738  
                               u3185 1708                                 u3345 0B59  
                               u2385 0E30                                 _T4PR 0293  
                               u2715 17EB                                 u3275 0ED5  
                               u1915 0A2A                                 u3435 177D  
                               u3355 0B69                                 u2485 15B8  
                               u2805 0CCC                                 u3365 0B75  
                               u2495 15CC                                 u2575 0AEE  
                               u3375 0B83                                 u3535 037B  
                               u2905 0C22                                 u3625 0411  
                               u2675 17CF                                 u3707 161C  
                               u1955 0A44                                 u1875 0A04  
                               u2595 0AFA                                 u3717 162B  
                               u2765 0C83                                 u2845 0BDD  
                               u2695 17D9                                 u1895 0A1D  
                               u2775 0C93                                 u3575 03C8  
                               u2945 15DC                                 u2785 0CB3  
                               u2795 0CC2                                 u2875 0C07  
                               u3595 03DF                                 u2965 15EB  
                               u2975 15F2                                 u3697 0BAC  
                               u2995 016F                  tempCalc@analogValue 005D  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Imin 00E5                                 _Iref 00E3  
                               _Iout 00D8                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Vref 00E1  
                               _main 02A5                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                        _state_counter 00E7  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 log@x 0057  
                      __CFG_BOREN$ON 0000                                 start 0002  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 003E                         ___ftmul@sign 003F  
                   __end_of_LCDClear 15D3                         ___fttol@exp1 003D  
                              ??_log 005A                         ___fttol@lval 0039  
                       main@fastLoop 00A7  __size_of_Init_Battery_State_Machine 001A  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 15AD  
      __end_of_OSCILLATOR_Initialize 0938                      __end_of___aldiv 0B3B  
                              _ADACQ 009D                                _ADACT 0099  
                              _ADCAP 009B                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___awdiv 1800  
                              _ADPRE 009C                      __end_of___ftadd 1000  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___ftdiv 0CED                      __end_of___ftmul 0E51  
                    ___awdiv@divisor 0070                      __end_of___ftsub 152A  
                    __end_of___fttol 0C44                                _T2CON 028E  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 15FF  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 144C  
             ?_Battery_State_Machine 0070                                _cc_cv 00E0  
                      ___awtoft@sign 007D                                _frexp 16A9  
                              _fonts 0800                                _errno 00D6  
                      ___ftpack@sign 0074                                main@j 00BE  
                       main@slowLoop 00A8                                status 0003  
                              wtemp0 007E                      __initialization 07C0  
                        log@exponent 005B                         __end_of_main 07C0  
                  readAnalog@channel 0026              __end_of_TMR2_Initialize 144C  
                          ??_ADCRead 0073                               ??_main 0068  
                      ___fttol@sign1 0038                            ??_LCDInit 0075  
            LCDWrite@data_or_command 0072                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             _ADCON3 0096                               ?_frexp 0070  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _CCPR1H 030D                               _CCPR1L 030C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                   __end_of___awtoft 1588                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                   __end_of___ftpack 0A54                               _RB0PPS 0F18  
                             _RA6PPS 0F16                               _RA7PPS 0F17  
                     __CFG_WDTCCS$SC 0000                               _FVRCON 090C  
                             _OSCFRQ 0893                       __CFG_PWRTE$OFF 0000  
                             _Imode0 00ED                               _Imode1 00EC  
                       _CCPTMRS0bits 021E                         _CCPTMRS1bits 021F  
                             ___ftge 166E                            ??___aldiv 0078  
                             ___wmul 14EE                            ??___awdiv 0074  
                          ??___ftadd 0046                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 1549                            ??___ftdiv 0026  
                          ??___ftmul 0036                            ??___ftsub 007E  
                          ??___fttol 0034                            ??___lwmod 0074  
                             _gotoXY 146A                               _button 006E  
            __end_of_TMR4_Initialize 145A                     ___awdiv@quotient 0077  
                             _warmup 00DA                               _totals 0120  
              ___ftmul@f3_as_product 003B                     __end_of_tempCalc 0159  
                       LCDWrite@data 0070                         LCDWriteInt@i 0037  
                       LCDWriteInt@j 0036             readAnalog@analog_channel 003A  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 15FF  
               __size_of_LCDWriteInt 00B9                     __end_oflog@coeff 181B  
            __end_of__initialization 07FD                           ___ftadd@f1 0040  
                         ___ftadd@f2 0043                           ___ftge@ff1 0070  
                         ___ftge@ff2 0073                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070                         eval_poly@res 0054  
                         ___ftdiv@f1 0023                           ___ftdiv@f2 0020  
                         ___ftdiv@f3 002B                           ___awtoft@c 0078  
                         ___ftmul@f1 0030                           ___ftmul@f2 0033  
             __end_of_PWM_Initialize 1568                           ___ftsub@f1 0050  
                         ___ftsub@f2 004D                           ___fttol@f1 0030  
                     __pcstackCOMMON 0070                         __pidataBANK1 1424  
                       __pidataBANK2 145A                  ??_SYSTEM_Initialize 007B  
                      __end_of_frexp 16E4                        __end_of_fonts 092F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
                 _PWM1_LoadDutyValue 1492                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 16E4          __size_of_PWM7_LoadDutyValue 0016  
                     main@efficiency 00B4                  ?_PWM1_LoadDutyValue 0070  
                  LCDWriteInt@F14396 00D1                    _calculateCurrent0 1725  
                  _calculateCurrent1 176A                              ??_frexp 0074  
          __end_of_SYSTEM_Initialize 1633                           __pbssBANK0 006A  
                         __pbssBANK1 00C1                           __pbssBANK2 0120  
                 ?_calculateCurrent0 0070                   ?_calculateCurrent1 0070  
                 __size_of_eval_poly 0060                           ??_LCDClear 0078  
                     main@faultReset 00AA                           ??_LCDWrite 0071  
               ??_PWM1_LoadDutyValue 0072                  ??_calculateCurrent0 003E  
                ??_calculateCurrent1 003E                      ?_PWM_Initialize 0070  
                         __pmaintext 02A5                              ?___ftge 0070  
                            ?___wmul 0079                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 14BE                              ?_gotoXY 0075  
                            _ADCRead 147D                     ?_TMR4_Initialize 0070  
                          ?___awtoft 0078                            ?___ftpack 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 0070  
                            _LCDInit 1633            __end_of_calculateCurrent0 176A  
          __end_of_calculateCurrent1 17AF                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 00B9  
                     main@dutyCycle1 00B7                       main@dutyCycle6 00BF  
                     main@dutyCycle7 00BA                           _lastButton 006D  
                          ?_tempCalc 005D                           _readAnalog 0159  
                            ___aldiv 0AB9                      __size_of___ftge 003B  
                            ___awdiv 17AF                              ___ftadd 0F0A  
                         _readButton 0B3B                              ___ftdiv 0C44  
                    __size_of___wmul 001E                              ___ftmul 0D9D  
                            ___ftsub 150C                              ___fttol 0BBD  
                 main@displayRefresh 00A9                              ___lwmod 15D3  
                    __size_of_gotoXY 0013                           ??___awtoft 007B  
                         ??___ftpack 0075                    __end_of_eval_poly 09F0  
                            _analogs 0140                              __ptext1 003C  
                            __ptext2 0CED                              __ptext3 16A9  
                            __ptext4 0990                              __ptext5 0D9D  
                            __ptext6 166E                              __ptext7 150C  
                            __ptext8 0F0A                              __ptext9 0B3B  
                        ?_cc_cv_mode 0070                _OSCILLATOR_Initialize 092F  
                          _T2CONbits 028E                              _current 00C1  
                       __size_of_log 00B0                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074                            _T4CONbits 0294  
           ??_PIN_MANAGER_Initialize 0070                              _samples 2120  
         __size_of_SYSTEM_Initialize 0034                              clrloop0 1427  
                            _voltage 00C9         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 0026  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 1432                              initloop 1433  
                         ??_tempCalc 007E                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 0938                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070           __size_of_calculateCurrent0 0045  
         __size_of_calculateCurrent1 0045                            _TRISAbits 0011  
                ??_LCDWriteCharacter 0022                     __CFG_FEXTOSC$OFF 0000  
       PWM1_LoadDutyValue@dutyCycle1 0070                          _CCP1CONbits 030E  
                        ___ftdiv@exp 002E                  __size_of_cc_cv_mode 0041  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0025  
                  __size_of_LCDWrite 0025                          ___ftmul@exp 003A  
                        ?_readAnalog 0026            __end_of_LCDWriteCharacter 0990  
                        ?_readButton 0070                       __end_of___ftge 16A9  
                     __end_of___wmul 150C                       _ADC_Initialize 152A  
                     __end_of_gotoXY 147D               ?_OSCILLATOR_Initialize 0070  
                          _IminCount 00E9                  start_initialization 07C0  
                         eval_poly@d 0050                           eval_poly@n 0052  
                         eval_poly@x 004D      __size_of_PIN_MANAGER_Initialize 0037  
                        __end_of_log 0D9D                        ??_LCDWriteInt 002D  
                         frexp@value 0070                     ??_PWM_Initialize 0070  
                    main@batteryTemp 00A5                     __CFG_LPBOREN$OFF 0000  
                           ??___ftge 0076                    tempCalc@steinhart 0065  
                           ??___wmul 007D               __end_of_ADC_Initialize 1549  
                      _tempCalc$1290 0062                          __pdataBANK1 00EC  
                        __pdataBANK2 0150           __end_of_PWM7_LoadDutyValue 14D4  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 2120       __size_of_Battery_State_Machine 0065  
      __end_of_Battery_State_Machine 0AB9                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
                 _PWM6_LoadDutyValue 14A8             __size_of_TMR2_Initialize 000E  
                      _battery_state 00EB   __end_of_Init_Battery_State_Machine 14EE  
         _Init_Battery_State_Machine 14D4                  __size_of_readAnalog 014C  
                __size_of_readButton 0082                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 0F0A                            __pnvBANK1 00E1  
        __size_of_PWM1_LoadDutyValue 0016                            _main$1291 00AB  
                          _main$1292 00A0                            _main$1293 00B0  
                          _main$1294 00B2               _PIN_MANAGER_Initialize 0005  
         __size_of_LCDWriteCharacter 0058                             ?___aldiv 0070  
                  __size_of_tempCalc 011D                             ?___awdiv 0070  
                           ?___ftadd 0040                             ?___ftdiv 0020  
                           ?___ftmul 0030                             ?___ftsub 004D  
                           ?___fttol 0030                     LCDWriteInt@value 0028  
                           ?___lwmod 0070                      ?_ADC_Initialize 0070  
               ??_PWM6_LoadDutyValue 0072                         ??_cc_cv_mode 0070  
                          _eval_poly 0990             __size_of_TMR4_Initialize 000E  
                     __size_of_frexp 003B                             _T2CLKCON 0290  
                           _T4CLKCON 0296                             _LCDClear 15AD  
                    ___aldiv@divisor 0070                      ___aldiv@counter 0020  
                     ___wmul@product 0020                             _LATAbits 0016  
                           _LCDWrite 1588                            clear_ram0 1426  
                           _PIE0bits 0716                   __end_of_cc_cv_mode 1725  
                           _PIR4bits 0710                            main@MPPT0 00BC  
                          main@MPPT1 00A3                     __size_of_ADCRead 0015  
                         _ADCON0bits 0093                    ___wmul@multiplier 0079  
                         ?_eval_poly 004D                     __size_of_LCDInit 003B  
                        _LCDWriteInt 0E51                             _Iflat_db 00DC  
                  ??_TMR2_Initialize 0070                      readAnalog@value 003C  
                          frexp@eptr 0073                         ??_readAnalog 0028  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 002B                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftmul 00B4  
                   __size_of___ftsub 001E                     __size_of___fttol 0087  
                   __size_of___lwmod 002C                          _readButtons 006A  
                           ___awtoft 1568                             ___ftpack 09F0  
                           _channels 0150                             __ptext10 0159  
                           __ptext11 0AB9                             __ptext20 15FF  
                           __ptext12 147D                             __ptext21 144C  
                           __ptext13 16E4                             __ptext30 152A  
                           __ptext22 143E                             __ptext14 176A  
                           __ptext31 14BE                             __ptext23 1549  
                           __ptext15 1725                             __ptext40 0A54  
                           __ptext32 14A8                             __ptext24 0005  
                           __ptext16 0BBD                             __ptext33 1492  
                           __ptext25 092F                             __ptext17 0C44  
                           __ptext34 0E51                             __ptext26 1633  
                           __ptext18 1568                             __ptext35 15D3  
                           __ptext27 15AD                             __ptext19 09F0  
                           __ptext36 17AF                             __ptext28 146A  
                           __ptext37 0938                             __ptext29 14D4  
                           __ptext38 14EE                             __ptext39 1588  
                    LCDWriteInt@sign 002C                   __end_of_readAnalog 02A5  
                          tempCalc@R 005F                   __end_of_readButton 0BBD  
                  ??_TMR4_Initialize 0070                        __size_of_main 051B  
               __CFG_WDTCWS$WDTCWS_7 0000                             _tempCalc 003C  
        PIN_MANAGER_Initialize@state 0070                             log@coeff 1800  
                        ??_eval_poly 007E                          _sampleIndex 00DE  
                 _PWM7_LoadDutyValue 14BE          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0031  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                        __pstringtext2 1800  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075                         ___aldiv@sign 0021  
              _Battery_State_Machine 0A54       __end_of_PIN_MANAGER_Initialize 003C  
         __end_of_PWM1_LoadDutyValue 14A8                        main@IOutTotal 00AE  
