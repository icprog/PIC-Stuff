

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jun 29 23:29:14 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x620,48
    63                           	dabs	1,0x5A0,80
    64                           	dabs	1,0x520,80
    65                           	dabs	1,0x4A0,80
    66                           	dabs	1,0x420,80
    67                           	dabs	1,0x3A0,80
    68                           	dabs	1,0x320,80
    69                           	dabs	1,0x2A0,80
    70                           	dabs	1,0x220,80
    71                           	dabs	1,0x1D0,32
    72                           	dabs	1,0x2120,0,_samples
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 1.45
    76                           ; Generated 16/11/2017 GMT
    77                           ; 
    78                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F18855 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  001C                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  008C                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0090                     	;# 
   145  0091                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0110                     	;# 
   164  0110                     	;# 
   165  0111                     	;# 
   166  0112                     	;# 
   167  0112                     	;# 
   168  0113                     	;# 
   169  0114                     	;# 
   170  0114                     	;# 
   171  0115                     	;# 
   172  0116                     	;# 
   173  0116                     	;# 
   174  0117                     	;# 
   175  0119                     	;# 
   176  0119                     	;# 
   177  0119                     	;# 
   178  011A                     	;# 
   179  011A                     	;# 
   180  011A                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011C                     	;# 
   187  011C                     	;# 
   188  011C                     	;# 
   189  011D                     	;# 
   190  011D                     	;# 
   191  011D                     	;# 
   192  011E                     	;# 
   193  011E                     	;# 
   194  011E                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  018E                     	;# 
   203  018F                     	;# 
   204  0190                     	;# 
   205  0191                     	;# 
   206  0192                     	;# 
   207  0196                     	;# 
   208  0197                     	;# 
   209  0198                     	;# 
   210  0199                     	;# 
   211  019A                     	;# 
   212  019B                     	;# 
   213  019C                     	;# 
   214  020C                     	;# 
   215  020C                     	;# 
   216  020D                     	;# 
   217  020E                     	;# 
   218  020F                     	;# 
   219  020F                     	;# 
   220  0210                     	;# 
   221  0210                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0214                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0216                     	;# 
   232  0217                     	;# 
   233  0217                     	;# 
   234  0218                     	;# 
   235  0218                     	;# 
   236  0219                     	;# 
   237  021A                     	;# 
   238  021B                     	;# 
   239  021B                     	;# 
   240  021C                     	;# 
   241  021C                     	;# 
   242  021D                     	;# 
   243  021D                     	;# 
   244  021E                     	;# 
   245  021F                     	;# 
   246  028C                     	;# 
   247  028C                     	;# 
   248  028D                     	;# 
   249  028D                     	;# 
   250  028E                     	;# 
   251  028F                     	;# 
   252  0290                     	;# 
   253  0290                     	;# 
   254  0291                     	;# 
   255  0292                     	;# 
   256  0292                     	;# 
   257  0293                     	;# 
   258  0293                     	;# 
   259  0294                     	;# 
   260  0295                     	;# 
   261  0296                     	;# 
   262  0296                     	;# 
   263  0297                     	;# 
   264  0298                     	;# 
   265  0298                     	;# 
   266  0299                     	;# 
   267  0299                     	;# 
   268  029A                     	;# 
   269  029B                     	;# 
   270  029C                     	;# 
   271  029C                     	;# 
   272  029D                     	;# 
   273  030C                     	;# 
   274  030C                     	;# 
   275  030D                     	;# 
   276  030E                     	;# 
   277  030F                     	;# 
   278  0310                     	;# 
   279  0310                     	;# 
   280  0311                     	;# 
   281  0312                     	;# 
   282  0313                     	;# 
   283  0314                     	;# 
   284  0314                     	;# 
   285  0315                     	;# 
   286  0316                     	;# 
   287  0317                     	;# 
   288  0318                     	;# 
   289  0318                     	;# 
   290  0319                     	;# 
   291  031A                     	;# 
   292  031B                     	;# 
   293  031C                     	;# 
   294  031C                     	;# 
   295  031D                     	;# 
   296  031E                     	;# 
   297  031F                     	;# 
   298  038C                     	;# 
   299  038D                     	;# 
   300  038E                     	;# 
   301  0390                     	;# 
   302  0391                     	;# 
   303  0392                     	;# 
   304  040C                     	;# 
   305  040D                     	;# 
   306  040E                     	;# 
   307  040F                     	;# 
   308  0410                     	;# 
   309  0411                     	;# 
   310  0416                     	;# 
   311  0416                     	;# 
   312  0417                     	;# 
   313  0418                     	;# 
   314  0418                     	;# 
   315  0419                     	;# 
   316  041A                     	;# 
   317  041A                     	;# 
   318  041B                     	;# 
   319  041C                     	;# 
   320  041C                     	;# 
   321  041D                     	;# 
   322  041E                     	;# 
   323  041F                     	;# 
   324  048C                     	;# 
   325  048C                     	;# 
   326  048D                     	;# 
   327  048E                     	;# 
   328  048F                     	;# 
   329  048F                     	;# 
   330  0490                     	;# 
   331  0491                     	;# 
   332  0492                     	;# 
   333  0492                     	;# 
   334  0493                     	;# 
   335  0494                     	;# 
   336  0495                     	;# 
   337  0495                     	;# 
   338  0496                     	;# 
   339  0497                     	;# 
   340  0498                     	;# 
   341  0499                     	;# 
   342  049A                     	;# 
   343  049B                     	;# 
   344  049C                     	;# 
   345  049D                     	;# 
   346  050C                     	;# 
   347  050C                     	;# 
   348  050D                     	;# 
   349  050E                     	;# 
   350  050F                     	;# 
   351  050F                     	;# 
   352  0510                     	;# 
   353  0511                     	;# 
   354  0512                     	;# 
   355  0512                     	;# 
   356  0513                     	;# 
   357  0514                     	;# 
   358  0515                     	;# 
   359  0515                     	;# 
   360  0516                     	;# 
   361  0517                     	;# 
   362  0518                     	;# 
   363  0519                     	;# 
   364  051A                     	;# 
   365  051B                     	;# 
   366  051C                     	;# 
   367  051D                     	;# 
   368  058C                     	;# 
   369  058C                     	;# 
   370  058D                     	;# 
   371  058E                     	;# 
   372  058F                     	;# 
   373  058F                     	;# 
   374  0590                     	;# 
   375  0591                     	;# 
   376  0592                     	;# 
   377  0593                     	;# 
   378  060C                     	;# 
   379  060D                     	;# 
   380  060E                     	;# 
   381  060F                     	;# 
   382  0610                     	;# 
   383  0611                     	;# 
   384  0612                     	;# 
   385  0613                     	;# 
   386  0614                     	;# 
   387  0616                     	;# 
   388  0617                     	;# 
   389  0618                     	;# 
   390  0619                     	;# 
   391  061A                     	;# 
   392  061B                     	;# 
   393  061C                     	;# 
   394  061D                     	;# 
   395  061E                     	;# 
   396  068C                     	;# 
   397  068D                     	;# 
   398  068E                     	;# 
   399  068F                     	;# 
   400  0690                     	;# 
   401  0691                     	;# 
   402  0692                     	;# 
   403  0693                     	;# 
   404  0694                     	;# 
   405  070C                     	;# 
   406  070D                     	;# 
   407  070E                     	;# 
   408  070F                     	;# 
   409  0710                     	;# 
   410  0711                     	;# 
   411  0712                     	;# 
   412  0713                     	;# 
   413  0714                     	;# 
   414  0716                     	;# 
   415  0717                     	;# 
   416  0718                     	;# 
   417  0719                     	;# 
   418  071A                     	;# 
   419  071B                     	;# 
   420  071C                     	;# 
   421  071D                     	;# 
   422  071E                     	;# 
   423  0796                     	;# 
   424  0797                     	;# 
   425  0798                     	;# 
   426  0799                     	;# 
   427  079A                     	;# 
   428  079B                     	;# 
   429  080C                     	;# 
   430  080D                     	;# 
   431  080E                     	;# 
   432  080F                     	;# 
   433  0810                     	;# 
   434  0811                     	;# 
   435  0812                     	;# 
   436  0813                     	;# 
   437  0814                     	;# 
   438  081A                     	;# 
   439  081B                     	;# 
   440  081C                     	;# 
   441  081D                     	;# 
   442  081E                     	;# 
   443  081F                     	;# 
   444  088C                     	;# 
   445  088D                     	;# 
   446  088E                     	;# 
   447  088F                     	;# 
   448  0890                     	;# 
   449  0891                     	;# 
   450  0892                     	;# 
   451  0893                     	;# 
   452  0895                     	;# 
   453  0896                     	;# 
   454  0897                     	;# 
   455  0898                     	;# 
   456  0899                     	;# 
   457  089A                     	;# 
   458  089B                     	;# 
   459  090C                     	;# 
   460  090E                     	;# 
   461  090F                     	;# 
   462  091F                     	;# 
   463  091F                     	;# 
   464  098F                     	;# 
   465  098F                     	;# 
   466  0990                     	;# 
   467  0991                     	;# 
   468  0992                     	;# 
   469  0993                     	;# 
   470  0994                     	;# 
   471  0995                     	;# 
   472  0996                     	;# 
   473  0997                     	;# 
   474  0E0F                     	;# 
   475  0E10                     	;# 
   476  0E11                     	;# 
   477  0E12                     	;# 
   478  0E13                     	;# 
   479  0E14                     	;# 
   480  0E15                     	;# 
   481  0E16                     	;# 
   482  0E17                     	;# 
   483  0E18                     	;# 
   484  0E19                     	;# 
   485  0E1A                     	;# 
   486  0E1B                     	;# 
   487  0E1C                     	;# 
   488  0E1D                     	;# 
   489  0E1E                     	;# 
   490  0E1F                     	;# 
   491  0E20                     	;# 
   492  0E21                     	;# 
   493  0E22                     	;# 
   494  0E23                     	;# 
   495  0E24                     	;# 
   496  0E25                     	;# 
   497  0E26                     	;# 
   498  0E27                     	;# 
   499  0E28                     	;# 
   500  0E29                     	;# 
   501  0E2A                     	;# 
   502  0E2B                     	;# 
   503  0E2C                     	;# 
   504  0E2D                     	;# 
   505  0E2E                     	;# 
   506  0E2F                     	;# 
   507  0E30                     	;# 
   508  0E31                     	;# 
   509  0E32                     	;# 
   510  0E33                     	;# 
   511  0E34                     	;# 
   512  0E35                     	;# 
   513  0E36                     	;# 
   514  0E37                     	;# 
   515  0E8F                     	;# 
   516  0E90                     	;# 
   517  0E91                     	;# 
   518  0E92                     	;# 
   519  0E93                     	;# 
   520  0E94                     	;# 
   521  0E95                     	;# 
   522  0E96                     	;# 
   523  0E97                     	;# 
   524  0E9C                     	;# 
   525  0E9D                     	;# 
   526  0E9E                     	;# 
   527  0EA1                     	;# 
   528  0EA2                     	;# 
   529  0EA3                     	;# 
   530  0EA4                     	;# 
   531  0EA5                     	;# 
   532  0EA9                     	;# 
   533  0EAA                     	;# 
   534  0EAB                     	;# 
   535  0EAC                     	;# 
   536  0EB1                     	;# 
   537  0EB2                     	;# 
   538  0EB3                     	;# 
   539  0EB8                     	;# 
   540  0EB9                     	;# 
   541  0EBA                     	;# 
   542  0EBB                     	;# 
   543  0EBC                     	;# 
   544  0EBD                     	;# 
   545  0EBE                     	;# 
   546  0EC3                     	;# 
   547  0EC5                     	;# 
   548  0EC6                     	;# 
   549  0EC7                     	;# 
   550  0EC8                     	;# 
   551  0EC9                     	;# 
   552  0ECA                     	;# 
   553  0ECB                     	;# 
   554  0ECC                     	;# 
   555  0F10                     	;# 
   556  0F11                     	;# 
   557  0F12                     	;# 
   558  0F13                     	;# 
   559  0F14                     	;# 
   560  0F15                     	;# 
   561  0F16                     	;# 
   562  0F17                     	;# 
   563  0F18                     	;# 
   564  0F19                     	;# 
   565  0F1A                     	;# 
   566  0F1B                     	;# 
   567  0F1C                     	;# 
   568  0F1D                     	;# 
   569  0F1E                     	;# 
   570  0F1F                     	;# 
   571  0F20                     	;# 
   572  0F21                     	;# 
   573  0F22                     	;# 
   574  0F23                     	;# 
   575  0F24                     	;# 
   576  0F25                     	;# 
   577  0F26                     	;# 
   578  0F27                     	;# 
   579  0F38                     	;# 
   580  0F39                     	;# 
   581  0F3A                     	;# 
   582  0F3B                     	;# 
   583  0F3C                     	;# 
   584  0F3D                     	;# 
   585  0F3E                     	;# 
   586  0F3F                     	;# 
   587  0F40                     	;# 
   588  0F41                     	;# 
   589  0F43                     	;# 
   590  0F44                     	;# 
   591  0F45                     	;# 
   592  0F46                     	;# 
   593  0F47                     	;# 
   594  0F48                     	;# 
   595  0F49                     	;# 
   596  0F4A                     	;# 
   597  0F4B                     	;# 
   598  0F4C                     	;# 
   599  0F4E                     	;# 
   600  0F4F                     	;# 
   601  0F50                     	;# 
   602  0F51                     	;# 
   603  0F52                     	;# 
   604  0F53                     	;# 
   605  0F54                     	;# 
   606  0F55                     	;# 
   607  0F56                     	;# 
   608  0F57                     	;# 
   609  0F65                     	;# 
   610  0F68                     	;# 
   611  0F69                     	;# 
   612  0F6A                     	;# 
   613  0F6B                     	;# 
   614  0FE4                     	;# 
   615  0FE5                     	;# 
   616  0FE6                     	;# 
   617  0FE7                     	;# 
   618  0FE8                     	;# 
   619  0FE9                     	;# 
   620  0FEA                     	;# 
   621  0FEB                     	;# 
   622  0FED                     	;# 
   623  0FEE                     	;# 
   624  0FEF                     	;# 
   625  0000                     	;# 
   626  0001                     	;# 
   627  0002                     	;# 
   628  0003                     	;# 
   629  0004                     	;# 
   630  0005                     	;# 
   631  0006                     	;# 
   632  0007                     	;# 
   633  0008                     	;# 
   634  0009                     	;# 
   635  000A                     	;# 
   636  000B                     	;# 
   637  000C                     	;# 
   638  000D                     	;# 
   639  000E                     	;# 
   640  0010                     	;# 
   641  0011                     	;# 
   642  0012                     	;# 
   643  0013                     	;# 
   644  0016                     	;# 
   645  0017                     	;# 
   646  0018                     	;# 
   647  001C                     	;# 
   648  001C                     	;# 
   649  001D                     	;# 
   650  001D                     	;# 
   651  001E                     	;# 
   652  001F                     	;# 
   653  008C                     	;# 
   654  008C                     	;# 
   655  008D                     	;# 
   656  008E                     	;# 
   657  008E                     	;# 
   658  008F                     	;# 
   659  0090                     	;# 
   660  0090                     	;# 
   661  0091                     	;# 
   662  0093                     	;# 
   663  0094                     	;# 
   664  0095                     	;# 
   665  0096                     	;# 
   666  0097                     	;# 
   667  0098                     	;# 
   668  0099                     	;# 
   669  009A                     	;# 
   670  009B                     	;# 
   671  009C                     	;# 
   672  009D                     	;# 
   673  009E                     	;# 
   674  010C                     	;# 
   675  010D                     	;# 
   676  010E                     	;# 
   677  010E                     	;# 
   678  010F                     	;# 
   679  0110                     	;# 
   680  0110                     	;# 
   681  0111                     	;# 
   682  0112                     	;# 
   683  0112                     	;# 
   684  0113                     	;# 
   685  0114                     	;# 
   686  0114                     	;# 
   687  0115                     	;# 
   688  0116                     	;# 
   689  0116                     	;# 
   690  0117                     	;# 
   691  0119                     	;# 
   692  0119                     	;# 
   693  0119                     	;# 
   694  011A                     	;# 
   695  011A                     	;# 
   696  011A                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011C                     	;# 
   703  011C                     	;# 
   704  011C                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  011D                     	;# 
   708  011E                     	;# 
   709  011E                     	;# 
   710  011E                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  018E                     	;# 
   719  018F                     	;# 
   720  0190                     	;# 
   721  0191                     	;# 
   722  0192                     	;# 
   723  0196                     	;# 
   724  0197                     	;# 
   725  0198                     	;# 
   726  0199                     	;# 
   727  019A                     	;# 
   728  019B                     	;# 
   729  019C                     	;# 
   730  020C                     	;# 
   731  020C                     	;# 
   732  020D                     	;# 
   733  020E                     	;# 
   734  020F                     	;# 
   735  020F                     	;# 
   736  0210                     	;# 
   737  0210                     	;# 
   738  0211                     	;# 
   739  0211                     	;# 
   740  0212                     	;# 
   741  0212                     	;# 
   742  0213                     	;# 
   743  0214                     	;# 
   744  0215                     	;# 
   745  0215                     	;# 
   746  0216                     	;# 
   747  0216                     	;# 
   748  0217                     	;# 
   749  0217                     	;# 
   750  0218                     	;# 
   751  0218                     	;# 
   752  0219                     	;# 
   753  021A                     	;# 
   754  021B                     	;# 
   755  021B                     	;# 
   756  021C                     	;# 
   757  021C                     	;# 
   758  021D                     	;# 
   759  021D                     	;# 
   760  021E                     	;# 
   761  021F                     	;# 
   762  028C                     	;# 
   763  028C                     	;# 
   764  028D                     	;# 
   765  028D                     	;# 
   766  028E                     	;# 
   767  028F                     	;# 
   768  0290                     	;# 
   769  0290                     	;# 
   770  0291                     	;# 
   771  0292                     	;# 
   772  0292                     	;# 
   773  0293                     	;# 
   774  0293                     	;# 
   775  0294                     	;# 
   776  0295                     	;# 
   777  0296                     	;# 
   778  0296                     	;# 
   779  0297                     	;# 
   780  0298                     	;# 
   781  0298                     	;# 
   782  0299                     	;# 
   783  0299                     	;# 
   784  029A                     	;# 
   785  029B                     	;# 
   786  029C                     	;# 
   787  029C                     	;# 
   788  029D                     	;# 
   789  030C                     	;# 
   790  030C                     	;# 
   791  030D                     	;# 
   792  030E                     	;# 
   793  030F                     	;# 
   794  0310                     	;# 
   795  0310                     	;# 
   796  0311                     	;# 
   797  0312                     	;# 
   798  0313                     	;# 
   799  0314                     	;# 
   800  0314                     	;# 
   801  0315                     	;# 
   802  0316                     	;# 
   803  0317                     	;# 
   804  0318                     	;# 
   805  0318                     	;# 
   806  0319                     	;# 
   807  031A                     	;# 
   808  031B                     	;# 
   809  031C                     	;# 
   810  031C                     	;# 
   811  031D                     	;# 
   812  031E                     	;# 
   813  031F                     	;# 
   814  038C                     	;# 
   815  038D                     	;# 
   816  038E                     	;# 
   817  0390                     	;# 
   818  0391                     	;# 
   819  0392                     	;# 
   820  040C                     	;# 
   821  040D                     	;# 
   822  040E                     	;# 
   823  040F                     	;# 
   824  0410                     	;# 
   825  0411                     	;# 
   826  0416                     	;# 
   827  0416                     	;# 
   828  0417                     	;# 
   829  0418                     	;# 
   830  0418                     	;# 
   831  0419                     	;# 
   832  041A                     	;# 
   833  041A                     	;# 
   834  041B                     	;# 
   835  041C                     	;# 
   836  041C                     	;# 
   837  041D                     	;# 
   838  041E                     	;# 
   839  041F                     	;# 
   840  048C                     	;# 
   841  048C                     	;# 
   842  048D                     	;# 
   843  048E                     	;# 
   844  048F                     	;# 
   845  048F                     	;# 
   846  0490                     	;# 
   847  0491                     	;# 
   848  0492                     	;# 
   849  0492                     	;# 
   850  0493                     	;# 
   851  0494                     	;# 
   852  0495                     	;# 
   853  0495                     	;# 
   854  0496                     	;# 
   855  0497                     	;# 
   856  0498                     	;# 
   857  0499                     	;# 
   858  049A                     	;# 
   859  049B                     	;# 
   860  049C                     	;# 
   861  049D                     	;# 
   862  050C                     	;# 
   863  050C                     	;# 
   864  050D                     	;# 
   865  050E                     	;# 
   866  050F                     	;# 
   867  050F                     	;# 
   868  0510                     	;# 
   869  0511                     	;# 
   870  0512                     	;# 
   871  0512                     	;# 
   872  0513                     	;# 
   873  0514                     	;# 
   874  0515                     	;# 
   875  0515                     	;# 
   876  0516                     	;# 
   877  0517                     	;# 
   878  0518                     	;# 
   879  0519                     	;# 
   880  051A                     	;# 
   881  051B                     	;# 
   882  051C                     	;# 
   883  051D                     	;# 
   884  058C                     	;# 
   885  058C                     	;# 
   886  058D                     	;# 
   887  058E                     	;# 
   888  058F                     	;# 
   889  058F                     	;# 
   890  0590                     	;# 
   891  0591                     	;# 
   892  0592                     	;# 
   893  0593                     	;# 
   894  060C                     	;# 
   895  060D                     	;# 
   896  060E                     	;# 
   897  060F                     	;# 
   898  0610                     	;# 
   899  0611                     	;# 
   900  0612                     	;# 
   901  0613                     	;# 
   902  0614                     	;# 
   903  0616                     	;# 
   904  0617                     	;# 
   905  0618                     	;# 
   906  0619                     	;# 
   907  061A                     	;# 
   908  061B                     	;# 
   909  061C                     	;# 
   910  061D                     	;# 
   911  061E                     	;# 
   912  068C                     	;# 
   913  068D                     	;# 
   914  068E                     	;# 
   915  068F                     	;# 
   916  0690                     	;# 
   917  0691                     	;# 
   918  0692                     	;# 
   919  0693                     	;# 
   920  0694                     	;# 
   921  070C                     	;# 
   922  070D                     	;# 
   923  070E                     	;# 
   924  070F                     	;# 
   925  0710                     	;# 
   926  0711                     	;# 
   927  0712                     	;# 
   928  0713                     	;# 
   929  0714                     	;# 
   930  0716                     	;# 
   931  0717                     	;# 
   932  0718                     	;# 
   933  0719                     	;# 
   934  071A                     	;# 
   935  071B                     	;# 
   936  071C                     	;# 
   937  071D                     	;# 
   938  071E                     	;# 
   939  0796                     	;# 
   940  0797                     	;# 
   941  0798                     	;# 
   942  0799                     	;# 
   943  079A                     	;# 
   944  079B                     	;# 
   945  080C                     	;# 
   946  080D                     	;# 
   947  080E                     	;# 
   948  080F                     	;# 
   949  0810                     	;# 
   950  0811                     	;# 
   951  0812                     	;# 
   952  0813                     	;# 
   953  0814                     	;# 
   954  081A                     	;# 
   955  081B                     	;# 
   956  081C                     	;# 
   957  081D                     	;# 
   958  081E                     	;# 
   959  081F                     	;# 
   960  088C                     	;# 
   961  088D                     	;# 
   962  088E                     	;# 
   963  088F                     	;# 
   964  0890                     	;# 
   965  0891                     	;# 
   966  0892                     	;# 
   967  0893                     	;# 
   968  0895                     	;# 
   969  0896                     	;# 
   970  0897                     	;# 
   971  0898                     	;# 
   972  0899                     	;# 
   973  089A                     	;# 
   974  089B                     	;# 
   975  090C                     	;# 
   976  090E                     	;# 
   977  090F                     	;# 
   978  091F                     	;# 
   979  091F                     	;# 
   980  098F                     	;# 
   981  098F                     	;# 
   982  0990                     	;# 
   983  0991                     	;# 
   984  0992                     	;# 
   985  0993                     	;# 
   986  0994                     	;# 
   987  0995                     	;# 
   988  0996                     	;# 
   989  0997                     	;# 
   990  0E0F                     	;# 
   991  0E10                     	;# 
   992  0E11                     	;# 
   993  0E12                     	;# 
   994  0E13                     	;# 
   995  0E14                     	;# 
   996  0E15                     	;# 
   997  0E16                     	;# 
   998  0E17                     	;# 
   999  0E18                     	;# 
  1000  0E19                     	;# 
  1001  0E1A                     	;# 
  1002  0E1B                     	;# 
  1003  0E1C                     	;# 
  1004  0E1D                     	;# 
  1005  0E1E                     	;# 
  1006  0E1F                     	;# 
  1007  0E20                     	;# 
  1008  0E21                     	;# 
  1009  0E22                     	;# 
  1010  0E23                     	;# 
  1011  0E24                     	;# 
  1012  0E25                     	;# 
  1013  0E26                     	;# 
  1014  0E27                     	;# 
  1015  0E28                     	;# 
  1016  0E29                     	;# 
  1017  0E2A                     	;# 
  1018  0E2B                     	;# 
  1019  0E2C                     	;# 
  1020  0E2D                     	;# 
  1021  0E2E                     	;# 
  1022  0E2F                     	;# 
  1023  0E30                     	;# 
  1024  0E31                     	;# 
  1025  0E32                     	;# 
  1026  0E33                     	;# 
  1027  0E34                     	;# 
  1028  0E35                     	;# 
  1029  0E36                     	;# 
  1030  0E37                     	;# 
  1031  0E8F                     	;# 
  1032  0E90                     	;# 
  1033  0E91                     	;# 
  1034  0E92                     	;# 
  1035  0E93                     	;# 
  1036  0E94                     	;# 
  1037  0E95                     	;# 
  1038  0E96                     	;# 
  1039  0E97                     	;# 
  1040  0E9C                     	;# 
  1041  0E9D                     	;# 
  1042  0E9E                     	;# 
  1043  0EA1                     	;# 
  1044  0EA2                     	;# 
  1045  0EA3                     	;# 
  1046  0EA4                     	;# 
  1047  0EA5                     	;# 
  1048  0EA9                     	;# 
  1049  0EAA                     	;# 
  1050  0EAB                     	;# 
  1051  0EAC                     	;# 
  1052  0EB1                     	;# 
  1053  0EB2                     	;# 
  1054  0EB3                     	;# 
  1055  0EB8                     	;# 
  1056  0EB9                     	;# 
  1057  0EBA                     	;# 
  1058  0EBB                     	;# 
  1059  0EBC                     	;# 
  1060  0EBD                     	;# 
  1061  0EBE                     	;# 
  1062  0EC3                     	;# 
  1063  0EC5                     	;# 
  1064  0EC6                     	;# 
  1065  0EC7                     	;# 
  1066  0EC8                     	;# 
  1067  0EC9                     	;# 
  1068  0ECA                     	;# 
  1069  0ECB                     	;# 
  1070  0ECC                     	;# 
  1071  0F10                     	;# 
  1072  0F11                     	;# 
  1073  0F12                     	;# 
  1074  0F13                     	;# 
  1075  0F14                     	;# 
  1076  0F15                     	;# 
  1077  0F16                     	;# 
  1078  0F17                     	;# 
  1079  0F18                     	;# 
  1080  0F19                     	;# 
  1081  0F1A                     	;# 
  1082  0F1B                     	;# 
  1083  0F1C                     	;# 
  1084  0F1D                     	;# 
  1085  0F1E                     	;# 
  1086  0F1F                     	;# 
  1087  0F20                     	;# 
  1088  0F21                     	;# 
  1089  0F22                     	;# 
  1090  0F23                     	;# 
  1091  0F24                     	;# 
  1092  0F25                     	;# 
  1093  0F26                     	;# 
  1094  0F27                     	;# 
  1095  0F38                     	;# 
  1096  0F39                     	;# 
  1097  0F3A                     	;# 
  1098  0F3B                     	;# 
  1099  0F3C                     	;# 
  1100  0F3D                     	;# 
  1101  0F3E                     	;# 
  1102  0F3F                     	;# 
  1103  0F40                     	;# 
  1104  0F41                     	;# 
  1105  0F43                     	;# 
  1106  0F44                     	;# 
  1107  0F45                     	;# 
  1108  0F46                     	;# 
  1109  0F47                     	;# 
  1110  0F48                     	;# 
  1111  0F49                     	;# 
  1112  0F4A                     	;# 
  1113  0F4B                     	;# 
  1114  0F4C                     	;# 
  1115  0F4E                     	;# 
  1116  0F4F                     	;# 
  1117  0F50                     	;# 
  1118  0F51                     	;# 
  1119  0F52                     	;# 
  1120  0F53                     	;# 
  1121  0F54                     	;# 
  1122  0F55                     	;# 
  1123  0F56                     	;# 
  1124  0F57                     	;# 
  1125  0F65                     	;# 
  1126  0F68                     	;# 
  1127  0F69                     	;# 
  1128  0F6A                     	;# 
  1129  0F6B                     	;# 
  1130  0FE4                     	;# 
  1131  0FE5                     	;# 
  1132  0FE6                     	;# 
  1133  0FE7                     	;# 
  1134  0FE8                     	;# 
  1135  0FE9                     	;# 
  1136  0FEA                     	;# 
  1137  0FEB                     	;# 
  1138  0FED                     	;# 
  1139  0FEE                     	;# 
  1140  0FEF                     	;# 
  1141  0000                     	;# 
  1142  0001                     	;# 
  1143  0002                     	;# 
  1144  0003                     	;# 
  1145  0004                     	;# 
  1146  0005                     	;# 
  1147  0006                     	;# 
  1148  0007                     	;# 
  1149  0008                     	;# 
  1150  0009                     	;# 
  1151  000A                     	;# 
  1152  000B                     	;# 
  1153  000C                     	;# 
  1154  000D                     	;# 
  1155  000E                     	;# 
  1156  0010                     	;# 
  1157  0011                     	;# 
  1158  0012                     	;# 
  1159  0013                     	;# 
  1160  0016                     	;# 
  1161  0017                     	;# 
  1162  0018                     	;# 
  1163  001C                     	;# 
  1164  001C                     	;# 
  1165  001D                     	;# 
  1166  001D                     	;# 
  1167  001E                     	;# 
  1168  001F                     	;# 
  1169  008C                     	;# 
  1170  008C                     	;# 
  1171  008D                     	;# 
  1172  008E                     	;# 
  1173  008E                     	;# 
  1174  008F                     	;# 
  1175  0090                     	;# 
  1176  0090                     	;# 
  1177  0091                     	;# 
  1178  0093                     	;# 
  1179  0094                     	;# 
  1180  0095                     	;# 
  1181  0096                     	;# 
  1182  0097                     	;# 
  1183  0098                     	;# 
  1184  0099                     	;# 
  1185  009A                     	;# 
  1186  009B                     	;# 
  1187  009C                     	;# 
  1188  009D                     	;# 
  1189  009E                     	;# 
  1190  010C                     	;# 
  1191  010D                     	;# 
  1192  010E                     	;# 
  1193  010E                     	;# 
  1194  010F                     	;# 
  1195  0110                     	;# 
  1196  0110                     	;# 
  1197  0111                     	;# 
  1198  0112                     	;# 
  1199  0112                     	;# 
  1200  0113                     	;# 
  1201  0114                     	;# 
  1202  0114                     	;# 
  1203  0115                     	;# 
  1204  0116                     	;# 
  1205  0116                     	;# 
  1206  0117                     	;# 
  1207  0119                     	;# 
  1208  0119                     	;# 
  1209  0119                     	;# 
  1210  011A                     	;# 
  1211  011A                     	;# 
  1212  011A                     	;# 
  1213  011B                     	;# 
  1214  011B                     	;# 
  1215  011B                     	;# 
  1216  011B                     	;# 
  1217  011B                     	;# 
  1218  011C                     	;# 
  1219  011C                     	;# 
  1220  011C                     	;# 
  1221  011D                     	;# 
  1222  011D                     	;# 
  1223  011D                     	;# 
  1224  011E                     	;# 
  1225  011E                     	;# 
  1226  011E                     	;# 
  1227  011F                     	;# 
  1228  011F                     	;# 
  1229  011F                     	;# 
  1230  011F                     	;# 
  1231  011F                     	;# 
  1232  018C                     	;# 
  1233  018D                     	;# 
  1234  018E                     	;# 
  1235  018F                     	;# 
  1236  0190                     	;# 
  1237  0191                     	;# 
  1238  0192                     	;# 
  1239  0196                     	;# 
  1240  0197                     	;# 
  1241  0198                     	;# 
  1242  0199                     	;# 
  1243  019A                     	;# 
  1244  019B                     	;# 
  1245  019C                     	;# 
  1246  020C                     	;# 
  1247  020C                     	;# 
  1248  020D                     	;# 
  1249  020E                     	;# 
  1250  020F                     	;# 
  1251  020F                     	;# 
  1252  0210                     	;# 
  1253  0210                     	;# 
  1254  0211                     	;# 
  1255  0211                     	;# 
  1256  0212                     	;# 
  1257  0212                     	;# 
  1258  0213                     	;# 
  1259  0214                     	;# 
  1260  0215                     	;# 
  1261  0215                     	;# 
  1262  0216                     	;# 
  1263  0216                     	;# 
  1264  0217                     	;# 
  1265  0217                     	;# 
  1266  0218                     	;# 
  1267  0218                     	;# 
  1268  0219                     	;# 
  1269  021A                     	;# 
  1270  021B                     	;# 
  1271  021B                     	;# 
  1272  021C                     	;# 
  1273  021C                     	;# 
  1274  021D                     	;# 
  1275  021D                     	;# 
  1276  021E                     	;# 
  1277  021F                     	;# 
  1278  028C                     	;# 
  1279  028C                     	;# 
  1280  028D                     	;# 
  1281  028D                     	;# 
  1282  028E                     	;# 
  1283  028F                     	;# 
  1284  0290                     	;# 
  1285  0290                     	;# 
  1286  0291                     	;# 
  1287  0292                     	;# 
  1288  0292                     	;# 
  1289  0293                     	;# 
  1290  0293                     	;# 
  1291  0294                     	;# 
  1292  0295                     	;# 
  1293  0296                     	;# 
  1294  0296                     	;# 
  1295  0297                     	;# 
  1296  0298                     	;# 
  1297  0298                     	;# 
  1298  0299                     	;# 
  1299  0299                     	;# 
  1300  029A                     	;# 
  1301  029B                     	;# 
  1302  029C                     	;# 
  1303  029C                     	;# 
  1304  029D                     	;# 
  1305  030C                     	;# 
  1306  030C                     	;# 
  1307  030D                     	;# 
  1308  030E                     	;# 
  1309  030F                     	;# 
  1310  0310                     	;# 
  1311  0310                     	;# 
  1312  0311                     	;# 
  1313  0312                     	;# 
  1314  0313                     	;# 
  1315  0314                     	;# 
  1316  0314                     	;# 
  1317  0315                     	;# 
  1318  0316                     	;# 
  1319  0317                     	;# 
  1320  0318                     	;# 
  1321  0318                     	;# 
  1322  0319                     	;# 
  1323  031A                     	;# 
  1324  031B                     	;# 
  1325  031C                     	;# 
  1326  031C                     	;# 
  1327  031D                     	;# 
  1328  031E                     	;# 
  1329  031F                     	;# 
  1330  038C                     	;# 
  1331  038D                     	;# 
  1332  038E                     	;# 
  1333  0390                     	;# 
  1334  0391                     	;# 
  1335  0392                     	;# 
  1336  040C                     	;# 
  1337  040D                     	;# 
  1338  040E                     	;# 
  1339  040F                     	;# 
  1340  0410                     	;# 
  1341  0411                     	;# 
  1342  0416                     	;# 
  1343  0416                     	;# 
  1344  0417                     	;# 
  1345  0418                     	;# 
  1346  0418                     	;# 
  1347  0419                     	;# 
  1348  041A                     	;# 
  1349  041A                     	;# 
  1350  041B                     	;# 
  1351  041C                     	;# 
  1352  041C                     	;# 
  1353  041D                     	;# 
  1354  041E                     	;# 
  1355  041F                     	;# 
  1356  048C                     	;# 
  1357  048C                     	;# 
  1358  048D                     	;# 
  1359  048E                     	;# 
  1360  048F                     	;# 
  1361  048F                     	;# 
  1362  0490                     	;# 
  1363  0491                     	;# 
  1364  0492                     	;# 
  1365  0492                     	;# 
  1366  0493                     	;# 
  1367  0494                     	;# 
  1368  0495                     	;# 
  1369  0495                     	;# 
  1370  0496                     	;# 
  1371  0497                     	;# 
  1372  0498                     	;# 
  1373  0499                     	;# 
  1374  049A                     	;# 
  1375  049B                     	;# 
  1376  049C                     	;# 
  1377  049D                     	;# 
  1378  050C                     	;# 
  1379  050C                     	;# 
  1380  050D                     	;# 
  1381  050E                     	;# 
  1382  050F                     	;# 
  1383  050F                     	;# 
  1384  0510                     	;# 
  1385  0511                     	;# 
  1386  0512                     	;# 
  1387  0512                     	;# 
  1388  0513                     	;# 
  1389  0514                     	;# 
  1390  0515                     	;# 
  1391  0515                     	;# 
  1392  0516                     	;# 
  1393  0517                     	;# 
  1394  0518                     	;# 
  1395  0519                     	;# 
  1396  051A                     	;# 
  1397  051B                     	;# 
  1398  051C                     	;# 
  1399  051D                     	;# 
  1400  058C                     	;# 
  1401  058C                     	;# 
  1402  058D                     	;# 
  1403  058E                     	;# 
  1404  058F                     	;# 
  1405  058F                     	;# 
  1406  0590                     	;# 
  1407  0591                     	;# 
  1408  0592                     	;# 
  1409  0593                     	;# 
  1410  060C                     	;# 
  1411  060D                     	;# 
  1412  060E                     	;# 
  1413  060F                     	;# 
  1414  0610                     	;# 
  1415  0611                     	;# 
  1416  0612                     	;# 
  1417  0613                     	;# 
  1418  0614                     	;# 
  1419  0616                     	;# 
  1420  0617                     	;# 
  1421  0618                     	;# 
  1422  0619                     	;# 
  1423  061A                     	;# 
  1424  061B                     	;# 
  1425  061C                     	;# 
  1426  061D                     	;# 
  1427  061E                     	;# 
  1428  068C                     	;# 
  1429  068D                     	;# 
  1430  068E                     	;# 
  1431  068F                     	;# 
  1432  0690                     	;# 
  1433  0691                     	;# 
  1434  0692                     	;# 
  1435  0693                     	;# 
  1436  0694                     	;# 
  1437  070C                     	;# 
  1438  070D                     	;# 
  1439  070E                     	;# 
  1440  070F                     	;# 
  1441  0710                     	;# 
  1442  0711                     	;# 
  1443  0712                     	;# 
  1444  0713                     	;# 
  1445  0714                     	;# 
  1446  0716                     	;# 
  1447  0717                     	;# 
  1448  0718                     	;# 
  1449  0719                     	;# 
  1450  071A                     	;# 
  1451  071B                     	;# 
  1452  071C                     	;# 
  1453  071D                     	;# 
  1454  071E                     	;# 
  1455  0796                     	;# 
  1456  0797                     	;# 
  1457  0798                     	;# 
  1458  0799                     	;# 
  1459  079A                     	;# 
  1460  079B                     	;# 
  1461  080C                     	;# 
  1462  080D                     	;# 
  1463  080E                     	;# 
  1464  080F                     	;# 
  1465  0810                     	;# 
  1466  0811                     	;# 
  1467  0812                     	;# 
  1468  0813                     	;# 
  1469  0814                     	;# 
  1470  081A                     	;# 
  1471  081B                     	;# 
  1472  081C                     	;# 
  1473  081D                     	;# 
  1474  081E                     	;# 
  1475  081F                     	;# 
  1476  088C                     	;# 
  1477  088D                     	;# 
  1478  088E                     	;# 
  1479  088F                     	;# 
  1480  0890                     	;# 
  1481  0891                     	;# 
  1482  0892                     	;# 
  1483  0893                     	;# 
  1484  0895                     	;# 
  1485  0896                     	;# 
  1486  0897                     	;# 
  1487  0898                     	;# 
  1488  0899                     	;# 
  1489  089A                     	;# 
  1490  089B                     	;# 
  1491  090C                     	;# 
  1492  090E                     	;# 
  1493  090F                     	;# 
  1494  091F                     	;# 
  1495  091F                     	;# 
  1496  098F                     	;# 
  1497  098F                     	;# 
  1498  0990                     	;# 
  1499  0991                     	;# 
  1500  0992                     	;# 
  1501  0993                     	;# 
  1502  0994                     	;# 
  1503  0995                     	;# 
  1504  0996                     	;# 
  1505  0997                     	;# 
  1506  0E0F                     	;# 
  1507  0E10                     	;# 
  1508  0E11                     	;# 
  1509  0E12                     	;# 
  1510  0E13                     	;# 
  1511  0E14                     	;# 
  1512  0E15                     	;# 
  1513  0E16                     	;# 
  1514  0E17                     	;# 
  1515  0E18                     	;# 
  1516  0E19                     	;# 
  1517  0E1A                     	;# 
  1518  0E1B                     	;# 
  1519  0E1C                     	;# 
  1520  0E1D                     	;# 
  1521  0E1E                     	;# 
  1522  0E1F                     	;# 
  1523  0E20                     	;# 
  1524  0E21                     	;# 
  1525  0E22                     	;# 
  1526  0E23                     	;# 
  1527  0E24                     	;# 
  1528  0E25                     	;# 
  1529  0E26                     	;# 
  1530  0E27                     	;# 
  1531  0E28                     	;# 
  1532  0E29                     	;# 
  1533  0E2A                     	;# 
  1534  0E2B                     	;# 
  1535  0E2C                     	;# 
  1536  0E2D                     	;# 
  1537  0E2E                     	;# 
  1538  0E2F                     	;# 
  1539  0E30                     	;# 
  1540  0E31                     	;# 
  1541  0E32                     	;# 
  1542  0E33                     	;# 
  1543  0E34                     	;# 
  1544  0E35                     	;# 
  1545  0E36                     	;# 
  1546  0E37                     	;# 
  1547  0E8F                     	;# 
  1548  0E90                     	;# 
  1549  0E91                     	;# 
  1550  0E92                     	;# 
  1551  0E93                     	;# 
  1552  0E94                     	;# 
  1553  0E95                     	;# 
  1554  0E96                     	;# 
  1555  0E97                     	;# 
  1556  0E9C                     	;# 
  1557  0E9D                     	;# 
  1558  0E9E                     	;# 
  1559  0EA1                     	;# 
  1560  0EA2                     	;# 
  1561  0EA3                     	;# 
  1562  0EA4                     	;# 
  1563  0EA5                     	;# 
  1564  0EA9                     	;# 
  1565  0EAA                     	;# 
  1566  0EAB                     	;# 
  1567  0EAC                     	;# 
  1568  0EB1                     	;# 
  1569  0EB2                     	;# 
  1570  0EB3                     	;# 
  1571  0EB8                     	;# 
  1572  0EB9                     	;# 
  1573  0EBA                     	;# 
  1574  0EBB                     	;# 
  1575  0EBC                     	;# 
  1576  0EBD                     	;# 
  1577  0EBE                     	;# 
  1578  0EC3                     	;# 
  1579  0EC5                     	;# 
  1580  0EC6                     	;# 
  1581  0EC7                     	;# 
  1582  0EC8                     	;# 
  1583  0EC9                     	;# 
  1584  0ECA                     	;# 
  1585  0ECB                     	;# 
  1586  0ECC                     	;# 
  1587  0F10                     	;# 
  1588  0F11                     	;# 
  1589  0F12                     	;# 
  1590  0F13                     	;# 
  1591  0F14                     	;# 
  1592  0F15                     	;# 
  1593  0F16                     	;# 
  1594  0F17                     	;# 
  1595  0F18                     	;# 
  1596  0F19                     	;# 
  1597  0F1A                     	;# 
  1598  0F1B                     	;# 
  1599  0F1C                     	;# 
  1600  0F1D                     	;# 
  1601  0F1E                     	;# 
  1602  0F1F                     	;# 
  1603  0F20                     	;# 
  1604  0F21                     	;# 
  1605  0F22                     	;# 
  1606  0F23                     	;# 
  1607  0F24                     	;# 
  1608  0F25                     	;# 
  1609  0F26                     	;# 
  1610  0F27                     	;# 
  1611  0F38                     	;# 
  1612  0F39                     	;# 
  1613  0F3A                     	;# 
  1614  0F3B                     	;# 
  1615  0F3C                     	;# 
  1616  0F3D                     	;# 
  1617  0F3E                     	;# 
  1618  0F3F                     	;# 
  1619  0F40                     	;# 
  1620  0F41                     	;# 
  1621  0F43                     	;# 
  1622  0F44                     	;# 
  1623  0F45                     	;# 
  1624  0F46                     	;# 
  1625  0F47                     	;# 
  1626  0F48                     	;# 
  1627  0F49                     	;# 
  1628  0F4A                     	;# 
  1629  0F4B                     	;# 
  1630  0F4C                     	;# 
  1631  0F4E                     	;# 
  1632  0F4F                     	;# 
  1633  0F50                     	;# 
  1634  0F51                     	;# 
  1635  0F52                     	;# 
  1636  0F53                     	;# 
  1637  0F54                     	;# 
  1638  0F55                     	;# 
  1639  0F56                     	;# 
  1640  0F57                     	;# 
  1641  0F65                     	;# 
  1642  0F68                     	;# 
  1643  0F69                     	;# 
  1644  0F6A                     	;# 
  1645  0F6B                     	;# 
  1646  0FE4                     	;# 
  1647  0FE5                     	;# 
  1648  0FE6                     	;# 
  1649  0FE7                     	;# 
  1650  0FE8                     	;# 
  1651  0FE9                     	;# 
  1652  0FEA                     	;# 
  1653  0FEB                     	;# 
  1654  0FED                     	;# 
  1655  0FEE                     	;# 
  1656  0FEF                     	;# 
  1657  0000                     	;# 
  1658  0001                     	;# 
  1659  0002                     	;# 
  1660  0003                     	;# 
  1661  0004                     	;# 
  1662  0005                     	;# 
  1663  0006                     	;# 
  1664  0007                     	;# 
  1665  0008                     	;# 
  1666  0009                     	;# 
  1667  000A                     	;# 
  1668  000B                     	;# 
  1669  000C                     	;# 
  1670  000D                     	;# 
  1671  000E                     	;# 
  1672  0010                     	;# 
  1673  0011                     	;# 
  1674  0012                     	;# 
  1675  0013                     	;# 
  1676  0016                     	;# 
  1677  0017                     	;# 
  1678  0018                     	;# 
  1679  001C                     	;# 
  1680  001C                     	;# 
  1681  001D                     	;# 
  1682  001D                     	;# 
  1683  001E                     	;# 
  1684  001F                     	;# 
  1685  008C                     	;# 
  1686  008C                     	;# 
  1687  008D                     	;# 
  1688  008E                     	;# 
  1689  008E                     	;# 
  1690  008F                     	;# 
  1691  0090                     	;# 
  1692  0090                     	;# 
  1693  0091                     	;# 
  1694  0093                     	;# 
  1695  0094                     	;# 
  1696  0095                     	;# 
  1697  0096                     	;# 
  1698  0097                     	;# 
  1699  0098                     	;# 
  1700  0099                     	;# 
  1701  009A                     	;# 
  1702  009B                     	;# 
  1703  009C                     	;# 
  1704  009D                     	;# 
  1705  009E                     	;# 
  1706  010C                     	;# 
  1707  010D                     	;# 
  1708  010E                     	;# 
  1709  010E                     	;# 
  1710  010F                     	;# 
  1711  0110                     	;# 
  1712  0110                     	;# 
  1713  0111                     	;# 
  1714  0112                     	;# 
  1715  0112                     	;# 
  1716  0113                     	;# 
  1717  0114                     	;# 
  1718  0114                     	;# 
  1719  0115                     	;# 
  1720  0116                     	;# 
  1721  0116                     	;# 
  1722  0117                     	;# 
  1723  0119                     	;# 
  1724  0119                     	;# 
  1725  0119                     	;# 
  1726  011A                     	;# 
  1727  011A                     	;# 
  1728  011A                     	;# 
  1729  011B                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011C                     	;# 
  1735  011C                     	;# 
  1736  011C                     	;# 
  1737  011D                     	;# 
  1738  011D                     	;# 
  1739  011D                     	;# 
  1740  011E                     	;# 
  1741  011E                     	;# 
  1742  011E                     	;# 
  1743  011F                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  018C                     	;# 
  1749  018D                     	;# 
  1750  018E                     	;# 
  1751  018F                     	;# 
  1752  0190                     	;# 
  1753  0191                     	;# 
  1754  0192                     	;# 
  1755  0196                     	;# 
  1756  0197                     	;# 
  1757  0198                     	;# 
  1758  0199                     	;# 
  1759  019A                     	;# 
  1760  019B                     	;# 
  1761  019C                     	;# 
  1762  020C                     	;# 
  1763  020C                     	;# 
  1764  020D                     	;# 
  1765  020E                     	;# 
  1766  020F                     	;# 
  1767  020F                     	;# 
  1768  0210                     	;# 
  1769  0210                     	;# 
  1770  0211                     	;# 
  1771  0211                     	;# 
  1772  0212                     	;# 
  1773  0212                     	;# 
  1774  0213                     	;# 
  1775  0214                     	;# 
  1776  0215                     	;# 
  1777  0215                     	;# 
  1778  0216                     	;# 
  1779  0216                     	;# 
  1780  0217                     	;# 
  1781  0217                     	;# 
  1782  0218                     	;# 
  1783  0218                     	;# 
  1784  0219                     	;# 
  1785  021A                     	;# 
  1786  021B                     	;# 
  1787  021B                     	;# 
  1788  021C                     	;# 
  1789  021C                     	;# 
  1790  021D                     	;# 
  1791  021D                     	;# 
  1792  021E                     	;# 
  1793  021F                     	;# 
  1794  028C                     	;# 
  1795  028C                     	;# 
  1796  028D                     	;# 
  1797  028D                     	;# 
  1798  028E                     	;# 
  1799  028F                     	;# 
  1800  0290                     	;# 
  1801  0290                     	;# 
  1802  0291                     	;# 
  1803  0292                     	;# 
  1804  0292                     	;# 
  1805  0293                     	;# 
  1806  0293                     	;# 
  1807  0294                     	;# 
  1808  0295                     	;# 
  1809  0296                     	;# 
  1810  0296                     	;# 
  1811  0297                     	;# 
  1812  0298                     	;# 
  1813  0298                     	;# 
  1814  0299                     	;# 
  1815  0299                     	;# 
  1816  029A                     	;# 
  1817  029B                     	;# 
  1818  029C                     	;# 
  1819  029C                     	;# 
  1820  029D                     	;# 
  1821  030C                     	;# 
  1822  030C                     	;# 
  1823  030D                     	;# 
  1824  030E                     	;# 
  1825  030F                     	;# 
  1826  0310                     	;# 
  1827  0310                     	;# 
  1828  0311                     	;# 
  1829  0312                     	;# 
  1830  0313                     	;# 
  1831  0314                     	;# 
  1832  0314                     	;# 
  1833  0315                     	;# 
  1834  0316                     	;# 
  1835  0317                     	;# 
  1836  0318                     	;# 
  1837  0318                     	;# 
  1838  0319                     	;# 
  1839  031A                     	;# 
  1840  031B                     	;# 
  1841  031C                     	;# 
  1842  031C                     	;# 
  1843  031D                     	;# 
  1844  031E                     	;# 
  1845  031F                     	;# 
  1846  038C                     	;# 
  1847  038D                     	;# 
  1848  038E                     	;# 
  1849  0390                     	;# 
  1850  0391                     	;# 
  1851  0392                     	;# 
  1852  040C                     	;# 
  1853  040D                     	;# 
  1854  040E                     	;# 
  1855  040F                     	;# 
  1856  0410                     	;# 
  1857  0411                     	;# 
  1858  0416                     	;# 
  1859  0416                     	;# 
  1860  0417                     	;# 
  1861  0418                     	;# 
  1862  0418                     	;# 
  1863  0419                     	;# 
  1864  041A                     	;# 
  1865  041A                     	;# 
  1866  041B                     	;# 
  1867  041C                     	;# 
  1868  041C                     	;# 
  1869  041D                     	;# 
  1870  041E                     	;# 
  1871  041F                     	;# 
  1872  048C                     	;# 
  1873  048C                     	;# 
  1874  048D                     	;# 
  1875  048E                     	;# 
  1876  048F                     	;# 
  1877  048F                     	;# 
  1878  0490                     	;# 
  1879  0491                     	;# 
  1880  0492                     	;# 
  1881  0492                     	;# 
  1882  0493                     	;# 
  1883  0494                     	;# 
  1884  0495                     	;# 
  1885  0495                     	;# 
  1886  0496                     	;# 
  1887  0497                     	;# 
  1888  0498                     	;# 
  1889  0499                     	;# 
  1890  049A                     	;# 
  1891  049B                     	;# 
  1892  049C                     	;# 
  1893  049D                     	;# 
  1894  050C                     	;# 
  1895  050C                     	;# 
  1896  050D                     	;# 
  1897  050E                     	;# 
  1898  050F                     	;# 
  1899  050F                     	;# 
  1900  0510                     	;# 
  1901  0511                     	;# 
  1902  0512                     	;# 
  1903  0512                     	;# 
  1904  0513                     	;# 
  1905  0514                     	;# 
  1906  0515                     	;# 
  1907  0515                     	;# 
  1908  0516                     	;# 
  1909  0517                     	;# 
  1910  0518                     	;# 
  1911  0519                     	;# 
  1912  051A                     	;# 
  1913  051B                     	;# 
  1914  051C                     	;# 
  1915  051D                     	;# 
  1916  058C                     	;# 
  1917  058C                     	;# 
  1918  058D                     	;# 
  1919  058E                     	;# 
  1920  058F                     	;# 
  1921  058F                     	;# 
  1922  0590                     	;# 
  1923  0591                     	;# 
  1924  0592                     	;# 
  1925  0593                     	;# 
  1926  060C                     	;# 
  1927  060D                     	;# 
  1928  060E                     	;# 
  1929  060F                     	;# 
  1930  0610                     	;# 
  1931  0611                     	;# 
  1932  0612                     	;# 
  1933  0613                     	;# 
  1934  0614                     	;# 
  1935  0616                     	;# 
  1936  0617                     	;# 
  1937  0618                     	;# 
  1938  0619                     	;# 
  1939  061A                     	;# 
  1940  061B                     	;# 
  1941  061C                     	;# 
  1942  061D                     	;# 
  1943  061E                     	;# 
  1944  068C                     	;# 
  1945  068D                     	;# 
  1946  068E                     	;# 
  1947  068F                     	;# 
  1948  0690                     	;# 
  1949  0691                     	;# 
  1950  0692                     	;# 
  1951  0693                     	;# 
  1952  0694                     	;# 
  1953  070C                     	;# 
  1954  070D                     	;# 
  1955  070E                     	;# 
  1956  070F                     	;# 
  1957  0710                     	;# 
  1958  0711                     	;# 
  1959  0712                     	;# 
  1960  0713                     	;# 
  1961  0714                     	;# 
  1962  0716                     	;# 
  1963  0717                     	;# 
  1964  0718                     	;# 
  1965  0719                     	;# 
  1966  071A                     	;# 
  1967  071B                     	;# 
  1968  071C                     	;# 
  1969  071D                     	;# 
  1970  071E                     	;# 
  1971  0796                     	;# 
  1972  0797                     	;# 
  1973  0798                     	;# 
  1974  0799                     	;# 
  1975  079A                     	;# 
  1976  079B                     	;# 
  1977  080C                     	;# 
  1978  080D                     	;# 
  1979  080E                     	;# 
  1980  080F                     	;# 
  1981  0810                     	;# 
  1982  0811                     	;# 
  1983  0812                     	;# 
  1984  0813                     	;# 
  1985  0814                     	;# 
  1986  081A                     	;# 
  1987  081B                     	;# 
  1988  081C                     	;# 
  1989  081D                     	;# 
  1990  081E                     	;# 
  1991  081F                     	;# 
  1992  088C                     	;# 
  1993  088D                     	;# 
  1994  088E                     	;# 
  1995  088F                     	;# 
  1996  0890                     	;# 
  1997  0891                     	;# 
  1998  0892                     	;# 
  1999  0893                     	;# 
  2000  0895                     	;# 
  2001  0896                     	;# 
  2002  0897                     	;# 
  2003  0898                     	;# 
  2004  0899                     	;# 
  2005  089A                     	;# 
  2006  089B                     	;# 
  2007  090C                     	;# 
  2008  090E                     	;# 
  2009  090F                     	;# 
  2010  091F                     	;# 
  2011  091F                     	;# 
  2012  098F                     	;# 
  2013  098F                     	;# 
  2014  0990                     	;# 
  2015  0991                     	;# 
  2016  0992                     	;# 
  2017  0993                     	;# 
  2018  0994                     	;# 
  2019  0995                     	;# 
  2020  0996                     	;# 
  2021  0997                     	;# 
  2022  0E0F                     	;# 
  2023  0E10                     	;# 
  2024  0E11                     	;# 
  2025  0E12                     	;# 
  2026  0E13                     	;# 
  2027  0E14                     	;# 
  2028  0E15                     	;# 
  2029  0E16                     	;# 
  2030  0E17                     	;# 
  2031  0E18                     	;# 
  2032  0E19                     	;# 
  2033  0E1A                     	;# 
  2034  0E1B                     	;# 
  2035  0E1C                     	;# 
  2036  0E1D                     	;# 
  2037  0E1E                     	;# 
  2038  0E1F                     	;# 
  2039  0E20                     	;# 
  2040  0E21                     	;# 
  2041  0E22                     	;# 
  2042  0E23                     	;# 
  2043  0E24                     	;# 
  2044  0E25                     	;# 
  2045  0E26                     	;# 
  2046  0E27                     	;# 
  2047  0E28                     	;# 
  2048  0E29                     	;# 
  2049  0E2A                     	;# 
  2050  0E2B                     	;# 
  2051  0E2C                     	;# 
  2052  0E2D                     	;# 
  2053  0E2E                     	;# 
  2054  0E2F                     	;# 
  2055  0E30                     	;# 
  2056  0E31                     	;# 
  2057  0E32                     	;# 
  2058  0E33                     	;# 
  2059  0E34                     	;# 
  2060  0E35                     	;# 
  2061  0E36                     	;# 
  2062  0E37                     	;# 
  2063  0E8F                     	;# 
  2064  0E90                     	;# 
  2065  0E91                     	;# 
  2066  0E92                     	;# 
  2067  0E93                     	;# 
  2068  0E94                     	;# 
  2069  0E95                     	;# 
  2070  0E96                     	;# 
  2071  0E97                     	;# 
  2072  0E9C                     	;# 
  2073  0E9D                     	;# 
  2074  0E9E                     	;# 
  2075  0EA1                     	;# 
  2076  0EA2                     	;# 
  2077  0EA3                     	;# 
  2078  0EA4                     	;# 
  2079  0EA5                     	;# 
  2080  0EA9                     	;# 
  2081  0EAA                     	;# 
  2082  0EAB                     	;# 
  2083  0EAC                     	;# 
  2084  0EB1                     	;# 
  2085  0EB2                     	;# 
  2086  0EB3                     	;# 
  2087  0EB8                     	;# 
  2088  0EB9                     	;# 
  2089  0EBA                     	;# 
  2090  0EBB                     	;# 
  2091  0EBC                     	;# 
  2092  0EBD                     	;# 
  2093  0EBE                     	;# 
  2094  0EC3                     	;# 
  2095  0EC5                     	;# 
  2096  0EC6                     	;# 
  2097  0EC7                     	;# 
  2098  0EC8                     	;# 
  2099  0EC9                     	;# 
  2100  0ECA                     	;# 
  2101  0ECB                     	;# 
  2102  0ECC                     	;# 
  2103  0F10                     	;# 
  2104  0F11                     	;# 
  2105  0F12                     	;# 
  2106  0F13                     	;# 
  2107  0F14                     	;# 
  2108  0F15                     	;# 
  2109  0F16                     	;# 
  2110  0F17                     	;# 
  2111  0F18                     	;# 
  2112  0F19                     	;# 
  2113  0F1A                     	;# 
  2114  0F1B                     	;# 
  2115  0F1C                     	;# 
  2116  0F1D                     	;# 
  2117  0F1E                     	;# 
  2118  0F1F                     	;# 
  2119  0F20                     	;# 
  2120  0F21                     	;# 
  2121  0F22                     	;# 
  2122  0F23                     	;# 
  2123  0F24                     	;# 
  2124  0F25                     	;# 
  2125  0F26                     	;# 
  2126  0F27                     	;# 
  2127  0F38                     	;# 
  2128  0F39                     	;# 
  2129  0F3A                     	;# 
  2130  0F3B                     	;# 
  2131  0F3C                     	;# 
  2132  0F3D                     	;# 
  2133  0F3E                     	;# 
  2134  0F3F                     	;# 
  2135  0F40                     	;# 
  2136  0F41                     	;# 
  2137  0F43                     	;# 
  2138  0F44                     	;# 
  2139  0F45                     	;# 
  2140  0F46                     	;# 
  2141  0F47                     	;# 
  2142  0F48                     	;# 
  2143  0F49                     	;# 
  2144  0F4A                     	;# 
  2145  0F4B                     	;# 
  2146  0F4C                     	;# 
  2147  0F4E                     	;# 
  2148  0F4F                     	;# 
  2149  0F50                     	;# 
  2150  0F51                     	;# 
  2151  0F52                     	;# 
  2152  0F53                     	;# 
  2153  0F54                     	;# 
  2154  0F55                     	;# 
  2155  0F56                     	;# 
  2156  0F57                     	;# 
  2157  0F65                     	;# 
  2158  0F68                     	;# 
  2159  0F69                     	;# 
  2160  0F6A                     	;# 
  2161  0F6B                     	;# 
  2162  0FE4                     	;# 
  2163  0FE5                     	;# 
  2164  0FE6                     	;# 
  2165  0FE7                     	;# 
  2166  0FE8                     	;# 
  2167  0FE9                     	;# 
  2168  0FEA                     	;# 
  2169  0FEB                     	;# 
  2170  0FED                     	;# 
  2171  0FEE                     	;# 
  2172  0FEF                     	;# 
  2173  0000                     	;# 
  2174  0001                     	;# 
  2175  0002                     	;# 
  2176  0003                     	;# 
  2177  0004                     	;# 
  2178  0005                     	;# 
  2179  0006                     	;# 
  2180  0007                     	;# 
  2181  0008                     	;# 
  2182  0009                     	;# 
  2183  000A                     	;# 
  2184  000B                     	;# 
  2185  000C                     	;# 
  2186  000D                     	;# 
  2187  000E                     	;# 
  2188  0010                     	;# 
  2189  0011                     	;# 
  2190  0012                     	;# 
  2191  0013                     	;# 
  2192  0016                     	;# 
  2193  0017                     	;# 
  2194  0018                     	;# 
  2195  001C                     	;# 
  2196  001C                     	;# 
  2197  001D                     	;# 
  2198  001D                     	;# 
  2199  001E                     	;# 
  2200  001F                     	;# 
  2201  008C                     	;# 
  2202  008C                     	;# 
  2203  008D                     	;# 
  2204  008E                     	;# 
  2205  008E                     	;# 
  2206  008F                     	;# 
  2207  0090                     	;# 
  2208  0090                     	;# 
  2209  0091                     	;# 
  2210  0093                     	;# 
  2211  0094                     	;# 
  2212  0095                     	;# 
  2213  0096                     	;# 
  2214  0097                     	;# 
  2215  0098                     	;# 
  2216  0099                     	;# 
  2217  009A                     	;# 
  2218  009B                     	;# 
  2219  009C                     	;# 
  2220  009D                     	;# 
  2221  009E                     	;# 
  2222  010C                     	;# 
  2223  010D                     	;# 
  2224  010E                     	;# 
  2225  010E                     	;# 
  2226  010F                     	;# 
  2227  0110                     	;# 
  2228  0110                     	;# 
  2229  0111                     	;# 
  2230  0112                     	;# 
  2231  0112                     	;# 
  2232  0113                     	;# 
  2233  0114                     	;# 
  2234  0114                     	;# 
  2235  0115                     	;# 
  2236  0116                     	;# 
  2237  0116                     	;# 
  2238  0117                     	;# 
  2239  0119                     	;# 
  2240  0119                     	;# 
  2241  0119                     	;# 
  2242  011A                     	;# 
  2243  011A                     	;# 
  2244  011A                     	;# 
  2245  011B                     	;# 
  2246  011B                     	;# 
  2247  011B                     	;# 
  2248  011B                     	;# 
  2249  011B                     	;# 
  2250  011C                     	;# 
  2251  011C                     	;# 
  2252  011C                     	;# 
  2253  011D                     	;# 
  2254  011D                     	;# 
  2255  011D                     	;# 
  2256  011E                     	;# 
  2257  011E                     	;# 
  2258  011E                     	;# 
  2259  011F                     	;# 
  2260  011F                     	;# 
  2261  011F                     	;# 
  2262  011F                     	;# 
  2263  011F                     	;# 
  2264  018C                     	;# 
  2265  018D                     	;# 
  2266  018E                     	;# 
  2267  018F                     	;# 
  2268  0190                     	;# 
  2269  0191                     	;# 
  2270  0192                     	;# 
  2271  0196                     	;# 
  2272  0197                     	;# 
  2273  0198                     	;# 
  2274  0199                     	;# 
  2275  019A                     	;# 
  2276  019B                     	;# 
  2277  019C                     	;# 
  2278  020C                     	;# 
  2279  020C                     	;# 
  2280  020D                     	;# 
  2281  020E                     	;# 
  2282  020F                     	;# 
  2283  020F                     	;# 
  2284  0210                     	;# 
  2285  0210                     	;# 
  2286  0211                     	;# 
  2287  0211                     	;# 
  2288  0212                     	;# 
  2289  0212                     	;# 
  2290  0213                     	;# 
  2291  0214                     	;# 
  2292  0215                     	;# 
  2293  0215                     	;# 
  2294  0216                     	;# 
  2295  0216                     	;# 
  2296  0217                     	;# 
  2297  0217                     	;# 
  2298  0218                     	;# 
  2299  0218                     	;# 
  2300  0219                     	;# 
  2301  021A                     	;# 
  2302  021B                     	;# 
  2303  021B                     	;# 
  2304  021C                     	;# 
  2305  021C                     	;# 
  2306  021D                     	;# 
  2307  021D                     	;# 
  2308  021E                     	;# 
  2309  021F                     	;# 
  2310  028C                     	;# 
  2311  028C                     	;# 
  2312  028D                     	;# 
  2313  028D                     	;# 
  2314  028E                     	;# 
  2315  028F                     	;# 
  2316  0290                     	;# 
  2317  0290                     	;# 
  2318  0291                     	;# 
  2319  0292                     	;# 
  2320  0292                     	;# 
  2321  0293                     	;# 
  2322  0293                     	;# 
  2323  0294                     	;# 
  2324  0295                     	;# 
  2325  0296                     	;# 
  2326  0296                     	;# 
  2327  0297                     	;# 
  2328  0298                     	;# 
  2329  0298                     	;# 
  2330  0299                     	;# 
  2331  0299                     	;# 
  2332  029A                     	;# 
  2333  029B                     	;# 
  2334  029C                     	;# 
  2335  029C                     	;# 
  2336  029D                     	;# 
  2337  030C                     	;# 
  2338  030C                     	;# 
  2339  030D                     	;# 
  2340  030E                     	;# 
  2341  030F                     	;# 
  2342  0310                     	;# 
  2343  0310                     	;# 
  2344  0311                     	;# 
  2345  0312                     	;# 
  2346  0313                     	;# 
  2347  0314                     	;# 
  2348  0314                     	;# 
  2349  0315                     	;# 
  2350  0316                     	;# 
  2351  0317                     	;# 
  2352  0318                     	;# 
  2353  0318                     	;# 
  2354  0319                     	;# 
  2355  031A                     	;# 
  2356  031B                     	;# 
  2357  031C                     	;# 
  2358  031C                     	;# 
  2359  031D                     	;# 
  2360  031E                     	;# 
  2361  031F                     	;# 
  2362  038C                     	;# 
  2363  038D                     	;# 
  2364  038E                     	;# 
  2365  0390                     	;# 
  2366  0391                     	;# 
  2367  0392                     	;# 
  2368  040C                     	;# 
  2369  040D                     	;# 
  2370  040E                     	;# 
  2371  040F                     	;# 
  2372  0410                     	;# 
  2373  0411                     	;# 
  2374  0416                     	;# 
  2375  0416                     	;# 
  2376  0417                     	;# 
  2377  0418                     	;# 
  2378  0418                     	;# 
  2379  0419                     	;# 
  2380  041A                     	;# 
  2381  041A                     	;# 
  2382  041B                     	;# 
  2383  041C                     	;# 
  2384  041C                     	;# 
  2385  041D                     	;# 
  2386  041E                     	;# 
  2387  041F                     	;# 
  2388  048C                     	;# 
  2389  048C                     	;# 
  2390  048D                     	;# 
  2391  048E                     	;# 
  2392  048F                     	;# 
  2393  048F                     	;# 
  2394  0490                     	;# 
  2395  0491                     	;# 
  2396  0492                     	;# 
  2397  0492                     	;# 
  2398  0493                     	;# 
  2399  0494                     	;# 
  2400  0495                     	;# 
  2401  0495                     	;# 
  2402  0496                     	;# 
  2403  0497                     	;# 
  2404  0498                     	;# 
  2405  0499                     	;# 
  2406  049A                     	;# 
  2407  049B                     	;# 
  2408  049C                     	;# 
  2409  049D                     	;# 
  2410  050C                     	;# 
  2411  050C                     	;# 
  2412  050D                     	;# 
  2413  050E                     	;# 
  2414  050F                     	;# 
  2415  050F                     	;# 
  2416  0510                     	;# 
  2417  0511                     	;# 
  2418  0512                     	;# 
  2419  0512                     	;# 
  2420  0513                     	;# 
  2421  0514                     	;# 
  2422  0515                     	;# 
  2423  0515                     	;# 
  2424  0516                     	;# 
  2425  0517                     	;# 
  2426  0518                     	;# 
  2427  0519                     	;# 
  2428  051A                     	;# 
  2429  051B                     	;# 
  2430  051C                     	;# 
  2431  051D                     	;# 
  2432  058C                     	;# 
  2433  058C                     	;# 
  2434  058D                     	;# 
  2435  058E                     	;# 
  2436  058F                     	;# 
  2437  058F                     	;# 
  2438  0590                     	;# 
  2439  0591                     	;# 
  2440  0592                     	;# 
  2441  0593                     	;# 
  2442  060C                     	;# 
  2443  060D                     	;# 
  2444  060E                     	;# 
  2445  060F                     	;# 
  2446  0610                     	;# 
  2447  0611                     	;# 
  2448  0612                     	;# 
  2449  0613                     	;# 
  2450  0614                     	;# 
  2451  0616                     	;# 
  2452  0617                     	;# 
  2453  0618                     	;# 
  2454  0619                     	;# 
  2455  061A                     	;# 
  2456  061B                     	;# 
  2457  061C                     	;# 
  2458  061D                     	;# 
  2459  061E                     	;# 
  2460  068C                     	;# 
  2461  068D                     	;# 
  2462  068E                     	;# 
  2463  068F                     	;# 
  2464  0690                     	;# 
  2465  0691                     	;# 
  2466  0692                     	;# 
  2467  0693                     	;# 
  2468  0694                     	;# 
  2469  070C                     	;# 
  2470  070D                     	;# 
  2471  070E                     	;# 
  2472  070F                     	;# 
  2473  0710                     	;# 
  2474  0711                     	;# 
  2475  0712                     	;# 
  2476  0713                     	;# 
  2477  0714                     	;# 
  2478  0716                     	;# 
  2479  0717                     	;# 
  2480  0718                     	;# 
  2481  0719                     	;# 
  2482  071A                     	;# 
  2483  071B                     	;# 
  2484  071C                     	;# 
  2485  071D                     	;# 
  2486  071E                     	;# 
  2487  0796                     	;# 
  2488  0797                     	;# 
  2489  0798                     	;# 
  2490  0799                     	;# 
  2491  079A                     	;# 
  2492  079B                     	;# 
  2493  080C                     	;# 
  2494  080D                     	;# 
  2495  080E                     	;# 
  2496  080F                     	;# 
  2497  0810                     	;# 
  2498  0811                     	;# 
  2499  0812                     	;# 
  2500  0813                     	;# 
  2501  0814                     	;# 
  2502  081A                     	;# 
  2503  081B                     	;# 
  2504  081C                     	;# 
  2505  081D                     	;# 
  2506  081E                     	;# 
  2507  081F                     	;# 
  2508  088C                     	;# 
  2509  088D                     	;# 
  2510  088E                     	;# 
  2511  088F                     	;# 
  2512  0890                     	;# 
  2513  0891                     	;# 
  2514  0892                     	;# 
  2515  0893                     	;# 
  2516  0895                     	;# 
  2517  0896                     	;# 
  2518  0897                     	;# 
  2519  0898                     	;# 
  2520  0899                     	;# 
  2521  089A                     	;# 
  2522  089B                     	;# 
  2523  090C                     	;# 
  2524  090E                     	;# 
  2525  090F                     	;# 
  2526  091F                     	;# 
  2527  091F                     	;# 
  2528  098F                     	;# 
  2529  098F                     	;# 
  2530  0990                     	;# 
  2531  0991                     	;# 
  2532  0992                     	;# 
  2533  0993                     	;# 
  2534  0994                     	;# 
  2535  0995                     	;# 
  2536  0996                     	;# 
  2537  0997                     	;# 
  2538  0E0F                     	;# 
  2539  0E10                     	;# 
  2540  0E11                     	;# 
  2541  0E12                     	;# 
  2542  0E13                     	;# 
  2543  0E14                     	;# 
  2544  0E15                     	;# 
  2545  0E16                     	;# 
  2546  0E17                     	;# 
  2547  0E18                     	;# 
  2548  0E19                     	;# 
  2549  0E1A                     	;# 
  2550  0E1B                     	;# 
  2551  0E1C                     	;# 
  2552  0E1D                     	;# 
  2553  0E1E                     	;# 
  2554  0E1F                     	;# 
  2555  0E20                     	;# 
  2556  0E21                     	;# 
  2557  0E22                     	;# 
  2558  0E23                     	;# 
  2559  0E24                     	;# 
  2560  0E25                     	;# 
  2561  0E26                     	;# 
  2562  0E27                     	;# 
  2563  0E28                     	;# 
  2564  0E29                     	;# 
  2565  0E2A                     	;# 
  2566  0E2B                     	;# 
  2567  0E2C                     	;# 
  2568  0E2D                     	;# 
  2569  0E2E                     	;# 
  2570  0E2F                     	;# 
  2571  0E30                     	;# 
  2572  0E31                     	;# 
  2573  0E32                     	;# 
  2574  0E33                     	;# 
  2575  0E34                     	;# 
  2576  0E35                     	;# 
  2577  0E36                     	;# 
  2578  0E37                     	;# 
  2579  0E8F                     	;# 
  2580  0E90                     	;# 
  2581  0E91                     	;# 
  2582  0E92                     	;# 
  2583  0E93                     	;# 
  2584  0E94                     	;# 
  2585  0E95                     	;# 
  2586  0E96                     	;# 
  2587  0E97                     	;# 
  2588  0E9C                     	;# 
  2589  0E9D                     	;# 
  2590  0E9E                     	;# 
  2591  0EA1                     	;# 
  2592  0EA2                     	;# 
  2593  0EA3                     	;# 
  2594  0EA4                     	;# 
  2595  0EA5                     	;# 
  2596  0EA9                     	;# 
  2597  0EAA                     	;# 
  2598  0EAB                     	;# 
  2599  0EAC                     	;# 
  2600  0EB1                     	;# 
  2601  0EB2                     	;# 
  2602  0EB3                     	;# 
  2603  0EB8                     	;# 
  2604  0EB9                     	;# 
  2605  0EBA                     	;# 
  2606  0EBB                     	;# 
  2607  0EBC                     	;# 
  2608  0EBD                     	;# 
  2609  0EBE                     	;# 
  2610  0EC3                     	;# 
  2611  0EC5                     	;# 
  2612  0EC6                     	;# 
  2613  0EC7                     	;# 
  2614  0EC8                     	;# 
  2615  0EC9                     	;# 
  2616  0ECA                     	;# 
  2617  0ECB                     	;# 
  2618  0ECC                     	;# 
  2619  0F10                     	;# 
  2620  0F11                     	;# 
  2621  0F12                     	;# 
  2622  0F13                     	;# 
  2623  0F14                     	;# 
  2624  0F15                     	;# 
  2625  0F16                     	;# 
  2626  0F17                     	;# 
  2627  0F18                     	;# 
  2628  0F19                     	;# 
  2629  0F1A                     	;# 
  2630  0F1B                     	;# 
  2631  0F1C                     	;# 
  2632  0F1D                     	;# 
  2633  0F1E                     	;# 
  2634  0F1F                     	;# 
  2635  0F20                     	;# 
  2636  0F21                     	;# 
  2637  0F22                     	;# 
  2638  0F23                     	;# 
  2639  0F24                     	;# 
  2640  0F25                     	;# 
  2641  0F26                     	;# 
  2642  0F27                     	;# 
  2643  0F38                     	;# 
  2644  0F39                     	;# 
  2645  0F3A                     	;# 
  2646  0F3B                     	;# 
  2647  0F3C                     	;# 
  2648  0F3D                     	;# 
  2649  0F3E                     	;# 
  2650  0F3F                     	;# 
  2651  0F40                     	;# 
  2652  0F41                     	;# 
  2653  0F43                     	;# 
  2654  0F44                     	;# 
  2655  0F45                     	;# 
  2656  0F46                     	;# 
  2657  0F47                     	;# 
  2658  0F48                     	;# 
  2659  0F49                     	;# 
  2660  0F4A                     	;# 
  2661  0F4B                     	;# 
  2662  0F4C                     	;# 
  2663  0F4E                     	;# 
  2664  0F4F                     	;# 
  2665  0F50                     	;# 
  2666  0F51                     	;# 
  2667  0F52                     	;# 
  2668  0F53                     	;# 
  2669  0F54                     	;# 
  2670  0F55                     	;# 
  2671  0F56                     	;# 
  2672  0F57                     	;# 
  2673  0F65                     	;# 
  2674  0F68                     	;# 
  2675  0F69                     	;# 
  2676  0F6A                     	;# 
  2677  0F6B                     	;# 
  2678  0FE4                     	;# 
  2679  0FE5                     	;# 
  2680  0FE6                     	;# 
  2681  0FE7                     	;# 
  2682  0FE8                     	;# 
  2683  0FE9                     	;# 
  2684  0FEA                     	;# 
  2685  0FEB                     	;# 
  2686  0FED                     	;# 
  2687  0FEE                     	;# 
  2688  0FEF                     	;# 
  2689  0000                     	;# 
  2690  0001                     	;# 
  2691  0002                     	;# 
  2692  0003                     	;# 
  2693  0004                     	;# 
  2694  0005                     	;# 
  2695  0006                     	;# 
  2696  0007                     	;# 
  2697  0008                     	;# 
  2698  0009                     	;# 
  2699  000A                     	;# 
  2700  000B                     	;# 
  2701  000C                     	;# 
  2702  000D                     	;# 
  2703  000E                     	;# 
  2704  0010                     	;# 
  2705  0011                     	;# 
  2706  0012                     	;# 
  2707  0013                     	;# 
  2708  0016                     	;# 
  2709  0017                     	;# 
  2710  0018                     	;# 
  2711  001C                     	;# 
  2712  001C                     	;# 
  2713  001D                     	;# 
  2714  001D                     	;# 
  2715  001E                     	;# 
  2716  001F                     	;# 
  2717  008C                     	;# 
  2718  008C                     	;# 
  2719  008D                     	;# 
  2720  008E                     	;# 
  2721  008E                     	;# 
  2722  008F                     	;# 
  2723  0090                     	;# 
  2724  0090                     	;# 
  2725  0091                     	;# 
  2726  0093                     	;# 
  2727  0094                     	;# 
  2728  0095                     	;# 
  2729  0096                     	;# 
  2730  0097                     	;# 
  2731  0098                     	;# 
  2732  0099                     	;# 
  2733  009A                     	;# 
  2734  009B                     	;# 
  2735  009C                     	;# 
  2736  009D                     	;# 
  2737  009E                     	;# 
  2738  010C                     	;# 
  2739  010D                     	;# 
  2740  010E                     	;# 
  2741  010E                     	;# 
  2742  010F                     	;# 
  2743  0110                     	;# 
  2744  0110                     	;# 
  2745  0111                     	;# 
  2746  0112                     	;# 
  2747  0112                     	;# 
  2748  0113                     	;# 
  2749  0114                     	;# 
  2750  0114                     	;# 
  2751  0115                     	;# 
  2752  0116                     	;# 
  2753  0116                     	;# 
  2754  0117                     	;# 
  2755  0119                     	;# 
  2756  0119                     	;# 
  2757  0119                     	;# 
  2758  011A                     	;# 
  2759  011A                     	;# 
  2760  011A                     	;# 
  2761  011B                     	;# 
  2762  011B                     	;# 
  2763  011B                     	;# 
  2764  011B                     	;# 
  2765  011B                     	;# 
  2766  011C                     	;# 
  2767  011C                     	;# 
  2768  011C                     	;# 
  2769  011D                     	;# 
  2770  011D                     	;# 
  2771  011D                     	;# 
  2772  011E                     	;# 
  2773  011E                     	;# 
  2774  011E                     	;# 
  2775  011F                     	;# 
  2776  011F                     	;# 
  2777  011F                     	;# 
  2778  011F                     	;# 
  2779  011F                     	;# 
  2780  018C                     	;# 
  2781  018D                     	;# 
  2782  018E                     	;# 
  2783  018F                     	;# 
  2784  0190                     	;# 
  2785  0191                     	;# 
  2786  0192                     	;# 
  2787  0196                     	;# 
  2788  0197                     	;# 
  2789  0198                     	;# 
  2790  0199                     	;# 
  2791  019A                     	;# 
  2792  019B                     	;# 
  2793  019C                     	;# 
  2794  020C                     	;# 
  2795  020C                     	;# 
  2796  020D                     	;# 
  2797  020E                     	;# 
  2798  020F                     	;# 
  2799  020F                     	;# 
  2800  0210                     	;# 
  2801  0210                     	;# 
  2802  0211                     	;# 
  2803  0211                     	;# 
  2804  0212                     	;# 
  2805  0212                     	;# 
  2806  0213                     	;# 
  2807  0214                     	;# 
  2808  0215                     	;# 
  2809  0215                     	;# 
  2810  0216                     	;# 
  2811  0216                     	;# 
  2812  0217                     	;# 
  2813  0217                     	;# 
  2814  0218                     	;# 
  2815  0218                     	;# 
  2816  0219                     	;# 
  2817  021A                     	;# 
  2818  021B                     	;# 
  2819  021B                     	;# 
  2820  021C                     	;# 
  2821  021C                     	;# 
  2822  021D                     	;# 
  2823  021D                     	;# 
  2824  021E                     	;# 
  2825  021F                     	;# 
  2826  028C                     	;# 
  2827  028C                     	;# 
  2828  028D                     	;# 
  2829  028D                     	;# 
  2830  028E                     	;# 
  2831  028F                     	;# 
  2832  0290                     	;# 
  2833  0290                     	;# 
  2834  0291                     	;# 
  2835  0292                     	;# 
  2836  0292                     	;# 
  2837  0293                     	;# 
  2838  0293                     	;# 
  2839  0294                     	;# 
  2840  0295                     	;# 
  2841  0296                     	;# 
  2842  0296                     	;# 
  2843  0297                     	;# 
  2844  0298                     	;# 
  2845  0298                     	;# 
  2846  0299                     	;# 
  2847  0299                     	;# 
  2848  029A                     	;# 
  2849  029B                     	;# 
  2850  029C                     	;# 
  2851  029C                     	;# 
  2852  029D                     	;# 
  2853  030C                     	;# 
  2854  030C                     	;# 
  2855  030D                     	;# 
  2856  030E                     	;# 
  2857  030F                     	;# 
  2858  0310                     	;# 
  2859  0310                     	;# 
  2860  0311                     	;# 
  2861  0312                     	;# 
  2862  0313                     	;# 
  2863  0314                     	;# 
  2864  0314                     	;# 
  2865  0315                     	;# 
  2866  0316                     	;# 
  2867  0317                     	;# 
  2868  0318                     	;# 
  2869  0318                     	;# 
  2870  0319                     	;# 
  2871  031A                     	;# 
  2872  031B                     	;# 
  2873  031C                     	;# 
  2874  031C                     	;# 
  2875  031D                     	;# 
  2876  031E                     	;# 
  2877  031F                     	;# 
  2878  038C                     	;# 
  2879  038D                     	;# 
  2880  038E                     	;# 
  2881  0390                     	;# 
  2882  0391                     	;# 
  2883  0392                     	;# 
  2884  040C                     	;# 
  2885  040D                     	;# 
  2886  040E                     	;# 
  2887  040F                     	;# 
  2888  0410                     	;# 
  2889  0411                     	;# 
  2890  0416                     	;# 
  2891  0416                     	;# 
  2892  0417                     	;# 
  2893  0418                     	;# 
  2894  0418                     	;# 
  2895  0419                     	;# 
  2896  041A                     	;# 
  2897  041A                     	;# 
  2898  041B                     	;# 
  2899  041C                     	;# 
  2900  041C                     	;# 
  2901  041D                     	;# 
  2902  041E                     	;# 
  2903  041F                     	;# 
  2904  048C                     	;# 
  2905  048C                     	;# 
  2906  048D                     	;# 
  2907  048E                     	;# 
  2908  048F                     	;# 
  2909  048F                     	;# 
  2910  0490                     	;# 
  2911  0491                     	;# 
  2912  0492                     	;# 
  2913  0492                     	;# 
  2914  0493                     	;# 
  2915  0494                     	;# 
  2916  0495                     	;# 
  2917  0495                     	;# 
  2918  0496                     	;# 
  2919  0497                     	;# 
  2920  0498                     	;# 
  2921  0499                     	;# 
  2922  049A                     	;# 
  2923  049B                     	;# 
  2924  049C                     	;# 
  2925  049D                     	;# 
  2926  050C                     	;# 
  2927  050C                     	;# 
  2928  050D                     	;# 
  2929  050E                     	;# 
  2930  050F                     	;# 
  2931  050F                     	;# 
  2932  0510                     	;# 
  2933  0511                     	;# 
  2934  0512                     	;# 
  2935  0512                     	;# 
  2936  0513                     	;# 
  2937  0514                     	;# 
  2938  0515                     	;# 
  2939  0515                     	;# 
  2940  0516                     	;# 
  2941  0517                     	;# 
  2942  0518                     	;# 
  2943  0519                     	;# 
  2944  051A                     	;# 
  2945  051B                     	;# 
  2946  051C                     	;# 
  2947  051D                     	;# 
  2948  058C                     	;# 
  2949  058C                     	;# 
  2950  058D                     	;# 
  2951  058E                     	;# 
  2952  058F                     	;# 
  2953  058F                     	;# 
  2954  0590                     	;# 
  2955  0591                     	;# 
  2956  0592                     	;# 
  2957  0593                     	;# 
  2958  060C                     	;# 
  2959  060D                     	;# 
  2960  060E                     	;# 
  2961  060F                     	;# 
  2962  0610                     	;# 
  2963  0611                     	;# 
  2964  0612                     	;# 
  2965  0613                     	;# 
  2966  0614                     	;# 
  2967  0616                     	;# 
  2968  0617                     	;# 
  2969  0618                     	;# 
  2970  0619                     	;# 
  2971  061A                     	;# 
  2972  061B                     	;# 
  2973  061C                     	;# 
  2974  061D                     	;# 
  2975  061E                     	;# 
  2976  068C                     	;# 
  2977  068D                     	;# 
  2978  068E                     	;# 
  2979  068F                     	;# 
  2980  0690                     	;# 
  2981  0691                     	;# 
  2982  0692                     	;# 
  2983  0693                     	;# 
  2984  0694                     	;# 
  2985  070C                     	;# 
  2986  070D                     	;# 
  2987  070E                     	;# 
  2988  070F                     	;# 
  2989  0710                     	;# 
  2990  0711                     	;# 
  2991  0712                     	;# 
  2992  0713                     	;# 
  2993  0714                     	;# 
  2994  0716                     	;# 
  2995  0717                     	;# 
  2996  0718                     	;# 
  2997  0719                     	;# 
  2998  071A                     	;# 
  2999  071B                     	;# 
  3000  071C                     	;# 
  3001  071D                     	;# 
  3002  071E                     	;# 
  3003  0796                     	;# 
  3004  0797                     	;# 
  3005  0798                     	;# 
  3006  0799                     	;# 
  3007  079A                     	;# 
  3008  079B                     	;# 
  3009  080C                     	;# 
  3010  080D                     	;# 
  3011  080E                     	;# 
  3012  080F                     	;# 
  3013  0810                     	;# 
  3014  0811                     	;# 
  3015  0812                     	;# 
  3016  0813                     	;# 
  3017  0814                     	;# 
  3018  081A                     	;# 
  3019  081B                     	;# 
  3020  081C                     	;# 
  3021  081D                     	;# 
  3022  081E                     	;# 
  3023  081F                     	;# 
  3024  088C                     	;# 
  3025  088D                     	;# 
  3026  088E                     	;# 
  3027  088F                     	;# 
  3028  0890                     	;# 
  3029  0891                     	;# 
  3030  0892                     	;# 
  3031  0893                     	;# 
  3032  0895                     	;# 
  3033  0896                     	;# 
  3034  0897                     	;# 
  3035  0898                     	;# 
  3036  0899                     	;# 
  3037  089A                     	;# 
  3038  089B                     	;# 
  3039  090C                     	;# 
  3040  090E                     	;# 
  3041  090F                     	;# 
  3042  091F                     	;# 
  3043  091F                     	;# 
  3044  098F                     	;# 
  3045  098F                     	;# 
  3046  0990                     	;# 
  3047  0991                     	;# 
  3048  0992                     	;# 
  3049  0993                     	;# 
  3050  0994                     	;# 
  3051  0995                     	;# 
  3052  0996                     	;# 
  3053  0997                     	;# 
  3054  0E0F                     	;# 
  3055  0E10                     	;# 
  3056  0E11                     	;# 
  3057  0E12                     	;# 
  3058  0E13                     	;# 
  3059  0E14                     	;# 
  3060  0E15                     	;# 
  3061  0E16                     	;# 
  3062  0E17                     	;# 
  3063  0E18                     	;# 
  3064  0E19                     	;# 
  3065  0E1A                     	;# 
  3066  0E1B                     	;# 
  3067  0E1C                     	;# 
  3068  0E1D                     	;# 
  3069  0E1E                     	;# 
  3070  0E1F                     	;# 
  3071  0E20                     	;# 
  3072  0E21                     	;# 
  3073  0E22                     	;# 
  3074  0E23                     	;# 
  3075  0E24                     	;# 
  3076  0E25                     	;# 
  3077  0E26                     	;# 
  3078  0E27                     	;# 
  3079  0E28                     	;# 
  3080  0E29                     	;# 
  3081  0E2A                     	;# 
  3082  0E2B                     	;# 
  3083  0E2C                     	;# 
  3084  0E2D                     	;# 
  3085  0E2E                     	;# 
  3086  0E2F                     	;# 
  3087  0E30                     	;# 
  3088  0E31                     	;# 
  3089  0E32                     	;# 
  3090  0E33                     	;# 
  3091  0E34                     	;# 
  3092  0E35                     	;# 
  3093  0E36                     	;# 
  3094  0E37                     	;# 
  3095  0E8F                     	;# 
  3096  0E90                     	;# 
  3097  0E91                     	;# 
  3098  0E92                     	;# 
  3099  0E93                     	;# 
  3100  0E94                     	;# 
  3101  0E95                     	;# 
  3102  0E96                     	;# 
  3103  0E97                     	;# 
  3104  0E9C                     	;# 
  3105  0E9D                     	;# 
  3106  0E9E                     	;# 
  3107  0EA1                     	;# 
  3108  0EA2                     	;# 
  3109  0EA3                     	;# 
  3110  0EA4                     	;# 
  3111  0EA5                     	;# 
  3112  0EA9                     	;# 
  3113  0EAA                     	;# 
  3114  0EAB                     	;# 
  3115  0EAC                     	;# 
  3116  0EB1                     	;# 
  3117  0EB2                     	;# 
  3118  0EB3                     	;# 
  3119  0EB8                     	;# 
  3120  0EB9                     	;# 
  3121  0EBA                     	;# 
  3122  0EBB                     	;# 
  3123  0EBC                     	;# 
  3124  0EBD                     	;# 
  3125  0EBE                     	;# 
  3126  0EC3                     	;# 
  3127  0EC5                     	;# 
  3128  0EC6                     	;# 
  3129  0EC7                     	;# 
  3130  0EC8                     	;# 
  3131  0EC9                     	;# 
  3132  0ECA                     	;# 
  3133  0ECB                     	;# 
  3134  0ECC                     	;# 
  3135  0F10                     	;# 
  3136  0F11                     	;# 
  3137  0F12                     	;# 
  3138  0F13                     	;# 
  3139  0F14                     	;# 
  3140  0F15                     	;# 
  3141  0F16                     	;# 
  3142  0F17                     	;# 
  3143  0F18                     	;# 
  3144  0F19                     	;# 
  3145  0F1A                     	;# 
  3146  0F1B                     	;# 
  3147  0F1C                     	;# 
  3148  0F1D                     	;# 
  3149  0F1E                     	;# 
  3150  0F1F                     	;# 
  3151  0F20                     	;# 
  3152  0F21                     	;# 
  3153  0F22                     	;# 
  3154  0F23                     	;# 
  3155  0F24                     	;# 
  3156  0F25                     	;# 
  3157  0F26                     	;# 
  3158  0F27                     	;# 
  3159  0F38                     	;# 
  3160  0F39                     	;# 
  3161  0F3A                     	;# 
  3162  0F3B                     	;# 
  3163  0F3C                     	;# 
  3164  0F3D                     	;# 
  3165  0F3E                     	;# 
  3166  0F3F                     	;# 
  3167  0F40                     	;# 
  3168  0F41                     	;# 
  3169  0F43                     	;# 
  3170  0F44                     	;# 
  3171  0F45                     	;# 
  3172  0F46                     	;# 
  3173  0F47                     	;# 
  3174  0F48                     	;# 
  3175  0F49                     	;# 
  3176  0F4A                     	;# 
  3177  0F4B                     	;# 
  3178  0F4C                     	;# 
  3179  0F4E                     	;# 
  3180  0F4F                     	;# 
  3181  0F50                     	;# 
  3182  0F51                     	;# 
  3183  0F52                     	;# 
  3184  0F53                     	;# 
  3185  0F54                     	;# 
  3186  0F55                     	;# 
  3187  0F56                     	;# 
  3188  0F57                     	;# 
  3189  0F65                     	;# 
  3190  0F68                     	;# 
  3191  0F69                     	;# 
  3192  0F6A                     	;# 
  3193  0F6B                     	;# 
  3194  0FE4                     	;# 
  3195  0FE5                     	;# 
  3196  0FE6                     	;# 
  3197  0FE7                     	;# 
  3198  0FE8                     	;# 
  3199  0FE9                     	;# 
  3200  0FEA                     	;# 
  3201  0FEB                     	;# 
  3202  0FED                     	;# 
  3203  0FEE                     	;# 
  3204  0FEF                     	;# 
  3205  0000                     	;# 
  3206  0001                     	;# 
  3207  0002                     	;# 
  3208  0003                     	;# 
  3209  0004                     	;# 
  3210  0005                     	;# 
  3211  0006                     	;# 
  3212  0007                     	;# 
  3213  0008                     	;# 
  3214  0009                     	;# 
  3215  000A                     	;# 
  3216  000B                     	;# 
  3217  000C                     	;# 
  3218  000D                     	;# 
  3219  000E                     	;# 
  3220  0010                     	;# 
  3221  0011                     	;# 
  3222  0012                     	;# 
  3223  0013                     	;# 
  3224  0016                     	;# 
  3225  0017                     	;# 
  3226  0018                     	;# 
  3227  001C                     	;# 
  3228  001C                     	;# 
  3229  001D                     	;# 
  3230  001D                     	;# 
  3231  001E                     	;# 
  3232  001F                     	;# 
  3233  008C                     	;# 
  3234  008C                     	;# 
  3235  008D                     	;# 
  3236  008E                     	;# 
  3237  008E                     	;# 
  3238  008F                     	;# 
  3239  0090                     	;# 
  3240  0090                     	;# 
  3241  0091                     	;# 
  3242  0093                     	;# 
  3243  0094                     	;# 
  3244  0095                     	;# 
  3245  0096                     	;# 
  3246  0097                     	;# 
  3247  0098                     	;# 
  3248  0099                     	;# 
  3249  009A                     	;# 
  3250  009B                     	;# 
  3251  009C                     	;# 
  3252  009D                     	;# 
  3253  009E                     	;# 
  3254  010C                     	;# 
  3255  010D                     	;# 
  3256  010E                     	;# 
  3257  010E                     	;# 
  3258  010F                     	;# 
  3259  0110                     	;# 
  3260  0110                     	;# 
  3261  0111                     	;# 
  3262  0112                     	;# 
  3263  0112                     	;# 
  3264  0113                     	;# 
  3265  0114                     	;# 
  3266  0114                     	;# 
  3267  0115                     	;# 
  3268  0116                     	;# 
  3269  0116                     	;# 
  3270  0117                     	;# 
  3271  0119                     	;# 
  3272  0119                     	;# 
  3273  0119                     	;# 
  3274  011A                     	;# 
  3275  011A                     	;# 
  3276  011A                     	;# 
  3277  011B                     	;# 
  3278  011B                     	;# 
  3279  011B                     	;# 
  3280  011B                     	;# 
  3281  011B                     	;# 
  3282  011C                     	;# 
  3283  011C                     	;# 
  3284  011C                     	;# 
  3285  011D                     	;# 
  3286  011D                     	;# 
  3287  011D                     	;# 
  3288  011E                     	;# 
  3289  011E                     	;# 
  3290  011E                     	;# 
  3291  011F                     	;# 
  3292  011F                     	;# 
  3293  011F                     	;# 
  3294  011F                     	;# 
  3295  011F                     	;# 
  3296  018C                     	;# 
  3297  018D                     	;# 
  3298  018E                     	;# 
  3299  018F                     	;# 
  3300  0190                     	;# 
  3301  0191                     	;# 
  3302  0192                     	;# 
  3303  0196                     	;# 
  3304  0197                     	;# 
  3305  0198                     	;# 
  3306  0199                     	;# 
  3307  019A                     	;# 
  3308  019B                     	;# 
  3309  019C                     	;# 
  3310  020C                     	;# 
  3311  020C                     	;# 
  3312  020D                     	;# 
  3313  020E                     	;# 
  3314  020F                     	;# 
  3315  020F                     	;# 
  3316  0210                     	;# 
  3317  0210                     	;# 
  3318  0211                     	;# 
  3319  0211                     	;# 
  3320  0212                     	;# 
  3321  0212                     	;# 
  3322  0213                     	;# 
  3323  0214                     	;# 
  3324  0215                     	;# 
  3325  0215                     	;# 
  3326  0216                     	;# 
  3327  0216                     	;# 
  3328  0217                     	;# 
  3329  0217                     	;# 
  3330  0218                     	;# 
  3331  0218                     	;# 
  3332  0219                     	;# 
  3333  021A                     	;# 
  3334  021B                     	;# 
  3335  021B                     	;# 
  3336  021C                     	;# 
  3337  021C                     	;# 
  3338  021D                     	;# 
  3339  021D                     	;# 
  3340  021E                     	;# 
  3341  021F                     	;# 
  3342  028C                     	;# 
  3343  028C                     	;# 
  3344  028D                     	;# 
  3345  028D                     	;# 
  3346  028E                     	;# 
  3347  028F                     	;# 
  3348  0290                     	;# 
  3349  0290                     	;# 
  3350  0291                     	;# 
  3351  0292                     	;# 
  3352  0292                     	;# 
  3353  0293                     	;# 
  3354  0293                     	;# 
  3355  0294                     	;# 
  3356  0295                     	;# 
  3357  0296                     	;# 
  3358  0296                     	;# 
  3359  0297                     	;# 
  3360  0298                     	;# 
  3361  0298                     	;# 
  3362  0299                     	;# 
  3363  0299                     	;# 
  3364  029A                     	;# 
  3365  029B                     	;# 
  3366  029C                     	;# 
  3367  029C                     	;# 
  3368  029D                     	;# 
  3369  030C                     	;# 
  3370  030C                     	;# 
  3371  030D                     	;# 
  3372  030E                     	;# 
  3373  030F                     	;# 
  3374  0310                     	;# 
  3375  0310                     	;# 
  3376  0311                     	;# 
  3377  0312                     	;# 
  3378  0313                     	;# 
  3379  0314                     	;# 
  3380  0314                     	;# 
  3381  0315                     	;# 
  3382  0316                     	;# 
  3383  0317                     	;# 
  3384  0318                     	;# 
  3385  0318                     	;# 
  3386  0319                     	;# 
  3387  031A                     	;# 
  3388  031B                     	;# 
  3389  031C                     	;# 
  3390  031C                     	;# 
  3391  031D                     	;# 
  3392  031E                     	;# 
  3393  031F                     	;# 
  3394  038C                     	;# 
  3395  038D                     	;# 
  3396  038E                     	;# 
  3397  0390                     	;# 
  3398  0391                     	;# 
  3399  0392                     	;# 
  3400  040C                     	;# 
  3401  040D                     	;# 
  3402  040E                     	;# 
  3403  040F                     	;# 
  3404  0410                     	;# 
  3405  0411                     	;# 
  3406  0416                     	;# 
  3407  0416                     	;# 
  3408  0417                     	;# 
  3409  0418                     	;# 
  3410  0418                     	;# 
  3411  0419                     	;# 
  3412  041A                     	;# 
  3413  041A                     	;# 
  3414  041B                     	;# 
  3415  041C                     	;# 
  3416  041C                     	;# 
  3417  041D                     	;# 
  3418  041E                     	;# 
  3419  041F                     	;# 
  3420  048C                     	;# 
  3421  048C                     	;# 
  3422  048D                     	;# 
  3423  048E                     	;# 
  3424  048F                     	;# 
  3425  048F                     	;# 
  3426  0490                     	;# 
  3427  0491                     	;# 
  3428  0492                     	;# 
  3429  0492                     	;# 
  3430  0493                     	;# 
  3431  0494                     	;# 
  3432  0495                     	;# 
  3433  0495                     	;# 
  3434  0496                     	;# 
  3435  0497                     	;# 
  3436  0498                     	;# 
  3437  0499                     	;# 
  3438  049A                     	;# 
  3439  049B                     	;# 
  3440  049C                     	;# 
  3441  049D                     	;# 
  3442  050C                     	;# 
  3443  050C                     	;# 
  3444  050D                     	;# 
  3445  050E                     	;# 
  3446  050F                     	;# 
  3447  050F                     	;# 
  3448  0510                     	;# 
  3449  0511                     	;# 
  3450  0512                     	;# 
  3451  0512                     	;# 
  3452  0513                     	;# 
  3453  0514                     	;# 
  3454  0515                     	;# 
  3455  0515                     	;# 
  3456  0516                     	;# 
  3457  0517                     	;# 
  3458  0518                     	;# 
  3459  0519                     	;# 
  3460  051A                     	;# 
  3461  051B                     	;# 
  3462  051C                     	;# 
  3463  051D                     	;# 
  3464  058C                     	;# 
  3465  058C                     	;# 
  3466  058D                     	;# 
  3467  058E                     	;# 
  3468  058F                     	;# 
  3469  058F                     	;# 
  3470  0590                     	;# 
  3471  0591                     	;# 
  3472  0592                     	;# 
  3473  0593                     	;# 
  3474  060C                     	;# 
  3475  060D                     	;# 
  3476  060E                     	;# 
  3477  060F                     	;# 
  3478  0610                     	;# 
  3479  0611                     	;# 
  3480  0612                     	;# 
  3481  0613                     	;# 
  3482  0614                     	;# 
  3483  0616                     	;# 
  3484  0617                     	;# 
  3485  0618                     	;# 
  3486  0619                     	;# 
  3487  061A                     	;# 
  3488  061B                     	;# 
  3489  061C                     	;# 
  3490  061D                     	;# 
  3491  061E                     	;# 
  3492  068C                     	;# 
  3493  068D                     	;# 
  3494  068E                     	;# 
  3495  068F                     	;# 
  3496  0690                     	;# 
  3497  0691                     	;# 
  3498  0692                     	;# 
  3499  0693                     	;# 
  3500  0694                     	;# 
  3501  070C                     	;# 
  3502  070D                     	;# 
  3503  070E                     	;# 
  3504  070F                     	;# 
  3505  0710                     	;# 
  3506  0711                     	;# 
  3507  0712                     	;# 
  3508  0713                     	;# 
  3509  0714                     	;# 
  3510  0716                     	;# 
  3511  0717                     	;# 
  3512  0718                     	;# 
  3513  0719                     	;# 
  3514  071A                     	;# 
  3515  071B                     	;# 
  3516  071C                     	;# 
  3517  071D                     	;# 
  3518  071E                     	;# 
  3519  0796                     	;# 
  3520  0797                     	;# 
  3521  0798                     	;# 
  3522  0799                     	;# 
  3523  079A                     	;# 
  3524  079B                     	;# 
  3525  080C                     	;# 
  3526  080D                     	;# 
  3527  080E                     	;# 
  3528  080F                     	;# 
  3529  0810                     	;# 
  3530  0811                     	;# 
  3531  0812                     	;# 
  3532  0813                     	;# 
  3533  0814                     	;# 
  3534  081A                     	;# 
  3535  081B                     	;# 
  3536  081C                     	;# 
  3537  081D                     	;# 
  3538  081E                     	;# 
  3539  081F                     	;# 
  3540  088C                     	;# 
  3541  088D                     	;# 
  3542  088E                     	;# 
  3543  088F                     	;# 
  3544  0890                     	;# 
  3545  0891                     	;# 
  3546  0892                     	;# 
  3547  0893                     	;# 
  3548  0895                     	;# 
  3549  0896                     	;# 
  3550  0897                     	;# 
  3551  0898                     	;# 
  3552  0899                     	;# 
  3553  089A                     	;# 
  3554  089B                     	;# 
  3555  090C                     	;# 
  3556  090E                     	;# 
  3557  090F                     	;# 
  3558  091F                     	;# 
  3559  091F                     	;# 
  3560  098F                     	;# 
  3561  098F                     	;# 
  3562  0990                     	;# 
  3563  0991                     	;# 
  3564  0992                     	;# 
  3565  0993                     	;# 
  3566  0994                     	;# 
  3567  0995                     	;# 
  3568  0996                     	;# 
  3569  0997                     	;# 
  3570  0E0F                     	;# 
  3571  0E10                     	;# 
  3572  0E11                     	;# 
  3573  0E12                     	;# 
  3574  0E13                     	;# 
  3575  0E14                     	;# 
  3576  0E15                     	;# 
  3577  0E16                     	;# 
  3578  0E17                     	;# 
  3579  0E18                     	;# 
  3580  0E19                     	;# 
  3581  0E1A                     	;# 
  3582  0E1B                     	;# 
  3583  0E1C                     	;# 
  3584  0E1D                     	;# 
  3585  0E1E                     	;# 
  3586  0E1F                     	;# 
  3587  0E20                     	;# 
  3588  0E21                     	;# 
  3589  0E22                     	;# 
  3590  0E23                     	;# 
  3591  0E24                     	;# 
  3592  0E25                     	;# 
  3593  0E26                     	;# 
  3594  0E27                     	;# 
  3595  0E28                     	;# 
  3596  0E29                     	;# 
  3597  0E2A                     	;# 
  3598  0E2B                     	;# 
  3599  0E2C                     	;# 
  3600  0E2D                     	;# 
  3601  0E2E                     	;# 
  3602  0E2F                     	;# 
  3603  0E30                     	;# 
  3604  0E31                     	;# 
  3605  0E32                     	;# 
  3606  0E33                     	;# 
  3607  0E34                     	;# 
  3608  0E35                     	;# 
  3609  0E36                     	;# 
  3610  0E37                     	;# 
  3611  0E8F                     	;# 
  3612  0E90                     	;# 
  3613  0E91                     	;# 
  3614  0E92                     	;# 
  3615  0E93                     	;# 
  3616  0E94                     	;# 
  3617  0E95                     	;# 
  3618  0E96                     	;# 
  3619  0E97                     	;# 
  3620  0E9C                     	;# 
  3621  0E9D                     	;# 
  3622  0E9E                     	;# 
  3623  0EA1                     	;# 
  3624  0EA2                     	;# 
  3625  0EA3                     	;# 
  3626  0EA4                     	;# 
  3627  0EA5                     	;# 
  3628  0EA9                     	;# 
  3629  0EAA                     	;# 
  3630  0EAB                     	;# 
  3631  0EAC                     	;# 
  3632  0EB1                     	;# 
  3633  0EB2                     	;# 
  3634  0EB3                     	;# 
  3635  0EB8                     	;# 
  3636  0EB9                     	;# 
  3637  0EBA                     	;# 
  3638  0EBB                     	;# 
  3639  0EBC                     	;# 
  3640  0EBD                     	;# 
  3641  0EBE                     	;# 
  3642  0EC3                     	;# 
  3643  0EC5                     	;# 
  3644  0EC6                     	;# 
  3645  0EC7                     	;# 
  3646  0EC8                     	;# 
  3647  0EC9                     	;# 
  3648  0ECA                     	;# 
  3649  0ECB                     	;# 
  3650  0ECC                     	;# 
  3651  0F10                     	;# 
  3652  0F11                     	;# 
  3653  0F12                     	;# 
  3654  0F13                     	;# 
  3655  0F14                     	;# 
  3656  0F15                     	;# 
  3657  0F16                     	;# 
  3658  0F17                     	;# 
  3659  0F18                     	;# 
  3660  0F19                     	;# 
  3661  0F1A                     	;# 
  3662  0F1B                     	;# 
  3663  0F1C                     	;# 
  3664  0F1D                     	;# 
  3665  0F1E                     	;# 
  3666  0F1F                     	;# 
  3667  0F20                     	;# 
  3668  0F21                     	;# 
  3669  0F22                     	;# 
  3670  0F23                     	;# 
  3671  0F24                     	;# 
  3672  0F25                     	;# 
  3673  0F26                     	;# 
  3674  0F27                     	;# 
  3675  0F38                     	;# 
  3676  0F39                     	;# 
  3677  0F3A                     	;# 
  3678  0F3B                     	;# 
  3679  0F3C                     	;# 
  3680  0F3D                     	;# 
  3681  0F3E                     	;# 
  3682  0F3F                     	;# 
  3683  0F40                     	;# 
  3684  0F41                     	;# 
  3685  0F43                     	;# 
  3686  0F44                     	;# 
  3687  0F45                     	;# 
  3688  0F46                     	;# 
  3689  0F47                     	;# 
  3690  0F48                     	;# 
  3691  0F49                     	;# 
  3692  0F4A                     	;# 
  3693  0F4B                     	;# 
  3694  0F4C                     	;# 
  3695  0F4E                     	;# 
  3696  0F4F                     	;# 
  3697  0F50                     	;# 
  3698  0F51                     	;# 
  3699  0F52                     	;# 
  3700  0F53                     	;# 
  3701  0F54                     	;# 
  3702  0F55                     	;# 
  3703  0F56                     	;# 
  3704  0F57                     	;# 
  3705  0F65                     	;# 
  3706  0F68                     	;# 
  3707  0F69                     	;# 
  3708  0F6A                     	;# 
  3709  0F6B                     	;# 
  3710  0FE4                     	;# 
  3711  0FE5                     	;# 
  3712  0FE6                     	;# 
  3713  0FE7                     	;# 
  3714  0FE8                     	;# 
  3715  0FE9                     	;# 
  3716  0FEA                     	;# 
  3717  0FEB                     	;# 
  3718  0FED                     	;# 
  3719  0FEE                     	;# 
  3720  0FEF                     	;# 
  3721  0000                     	;# 
  3722  0001                     	;# 
  3723  0002                     	;# 
  3724  0003                     	;# 
  3725  0004                     	;# 
  3726  0005                     	;# 
  3727  0006                     	;# 
  3728  0007                     	;# 
  3729  0008                     	;# 
  3730  0009                     	;# 
  3731  000A                     	;# 
  3732  000B                     	;# 
  3733  000C                     	;# 
  3734  000D                     	;# 
  3735  000E                     	;# 
  3736  0010                     	;# 
  3737  0011                     	;# 
  3738  0012                     	;# 
  3739  0013                     	;# 
  3740  0016                     	;# 
  3741  0017                     	;# 
  3742  0018                     	;# 
  3743  001C                     	;# 
  3744  001C                     	;# 
  3745  001D                     	;# 
  3746  001D                     	;# 
  3747  001E                     	;# 
  3748  001F                     	;# 
  3749  008C                     	;# 
  3750  008C                     	;# 
  3751  008D                     	;# 
  3752  008E                     	;# 
  3753  008E                     	;# 
  3754  008F                     	;# 
  3755  0090                     	;# 
  3756  0090                     	;# 
  3757  0091                     	;# 
  3758  0093                     	;# 
  3759  0094                     	;# 
  3760  0095                     	;# 
  3761  0096                     	;# 
  3762  0097                     	;# 
  3763  0098                     	;# 
  3764  0099                     	;# 
  3765  009A                     	;# 
  3766  009B                     	;# 
  3767  009C                     	;# 
  3768  009D                     	;# 
  3769  009E                     	;# 
  3770  010C                     	;# 
  3771  010D                     	;# 
  3772  010E                     	;# 
  3773  010E                     	;# 
  3774  010F                     	;# 
  3775  0110                     	;# 
  3776  0110                     	;# 
  3777  0111                     	;# 
  3778  0112                     	;# 
  3779  0112                     	;# 
  3780  0113                     	;# 
  3781  0114                     	;# 
  3782  0114                     	;# 
  3783  0115                     	;# 
  3784  0116                     	;# 
  3785  0116                     	;# 
  3786  0117                     	;# 
  3787  0119                     	;# 
  3788  0119                     	;# 
  3789  0119                     	;# 
  3790  011A                     	;# 
  3791  011A                     	;# 
  3792  011A                     	;# 
  3793  011B                     	;# 
  3794  011B                     	;# 
  3795  011B                     	;# 
  3796  011B                     	;# 
  3797  011B                     	;# 
  3798  011C                     	;# 
  3799  011C                     	;# 
  3800  011C                     	;# 
  3801  011D                     	;# 
  3802  011D                     	;# 
  3803  011D                     	;# 
  3804  011E                     	;# 
  3805  011E                     	;# 
  3806  011E                     	;# 
  3807  011F                     	;# 
  3808  011F                     	;# 
  3809  011F                     	;# 
  3810  011F                     	;# 
  3811  011F                     	;# 
  3812  018C                     	;# 
  3813  018D                     	;# 
  3814  018E                     	;# 
  3815  018F                     	;# 
  3816  0190                     	;# 
  3817  0191                     	;# 
  3818  0192                     	;# 
  3819  0196                     	;# 
  3820  0197                     	;# 
  3821  0198                     	;# 
  3822  0199                     	;# 
  3823  019A                     	;# 
  3824  019B                     	;# 
  3825  019C                     	;# 
  3826  020C                     	;# 
  3827  020C                     	;# 
  3828  020D                     	;# 
  3829  020E                     	;# 
  3830  020F                     	;# 
  3831  020F                     	;# 
  3832  0210                     	;# 
  3833  0210                     	;# 
  3834  0211                     	;# 
  3835  0211                     	;# 
  3836  0212                     	;# 
  3837  0212                     	;# 
  3838  0213                     	;# 
  3839  0214                     	;# 
  3840  0215                     	;# 
  3841  0215                     	;# 
  3842  0216                     	;# 
  3843  0216                     	;# 
  3844  0217                     	;# 
  3845  0217                     	;# 
  3846  0218                     	;# 
  3847  0218                     	;# 
  3848  0219                     	;# 
  3849  021A                     	;# 
  3850  021B                     	;# 
  3851  021B                     	;# 
  3852  021C                     	;# 
  3853  021C                     	;# 
  3854  021D                     	;# 
  3855  021D                     	;# 
  3856  021E                     	;# 
  3857  021F                     	;# 
  3858  028C                     	;# 
  3859  028C                     	;# 
  3860  028D                     	;# 
  3861  028D                     	;# 
  3862  028E                     	;# 
  3863  028F                     	;# 
  3864  0290                     	;# 
  3865  0290                     	;# 
  3866  0291                     	;# 
  3867  0292                     	;# 
  3868  0292                     	;# 
  3869  0293                     	;# 
  3870  0293                     	;# 
  3871  0294                     	;# 
  3872  0295                     	;# 
  3873  0296                     	;# 
  3874  0296                     	;# 
  3875  0297                     	;# 
  3876  0298                     	;# 
  3877  0298                     	;# 
  3878  0299                     	;# 
  3879  0299                     	;# 
  3880  029A                     	;# 
  3881  029B                     	;# 
  3882  029C                     	;# 
  3883  029C                     	;# 
  3884  029D                     	;# 
  3885  030C                     	;# 
  3886  030C                     	;# 
  3887  030D                     	;# 
  3888  030E                     	;# 
  3889  030F                     	;# 
  3890  0310                     	;# 
  3891  0310                     	;# 
  3892  0311                     	;# 
  3893  0312                     	;# 
  3894  0313                     	;# 
  3895  0314                     	;# 
  3896  0314                     	;# 
  3897  0315                     	;# 
  3898  0316                     	;# 
  3899  0317                     	;# 
  3900  0318                     	;# 
  3901  0318                     	;# 
  3902  0319                     	;# 
  3903  031A                     	;# 
  3904  031B                     	;# 
  3905  031C                     	;# 
  3906  031C                     	;# 
  3907  031D                     	;# 
  3908  031E                     	;# 
  3909  031F                     	;# 
  3910  038C                     	;# 
  3911  038D                     	;# 
  3912  038E                     	;# 
  3913  0390                     	;# 
  3914  0391                     	;# 
  3915  0392                     	;# 
  3916  040C                     	;# 
  3917  040D                     	;# 
  3918  040E                     	;# 
  3919  040F                     	;# 
  3920  0410                     	;# 
  3921  0411                     	;# 
  3922  0416                     	;# 
  3923  0416                     	;# 
  3924  0417                     	;# 
  3925  0418                     	;# 
  3926  0418                     	;# 
  3927  0419                     	;# 
  3928  041A                     	;# 
  3929  041A                     	;# 
  3930  041B                     	;# 
  3931  041C                     	;# 
  3932  041C                     	;# 
  3933  041D                     	;# 
  3934  041E                     	;# 
  3935  041F                     	;# 
  3936  048C                     	;# 
  3937  048C                     	;# 
  3938  048D                     	;# 
  3939  048E                     	;# 
  3940  048F                     	;# 
  3941  048F                     	;# 
  3942  0490                     	;# 
  3943  0491                     	;# 
  3944  0492                     	;# 
  3945  0492                     	;# 
  3946  0493                     	;# 
  3947  0494                     	;# 
  3948  0495                     	;# 
  3949  0495                     	;# 
  3950  0496                     	;# 
  3951  0497                     	;# 
  3952  0498                     	;# 
  3953  0499                     	;# 
  3954  049A                     	;# 
  3955  049B                     	;# 
  3956  049C                     	;# 
  3957  049D                     	;# 
  3958  050C                     	;# 
  3959  050C                     	;# 
  3960  050D                     	;# 
  3961  050E                     	;# 
  3962  050F                     	;# 
  3963  050F                     	;# 
  3964  0510                     	;# 
  3965  0511                     	;# 
  3966  0512                     	;# 
  3967  0512                     	;# 
  3968  0513                     	;# 
  3969  0514                     	;# 
  3970  0515                     	;# 
  3971  0515                     	;# 
  3972  0516                     	;# 
  3973  0517                     	;# 
  3974  0518                     	;# 
  3975  0519                     	;# 
  3976  051A                     	;# 
  3977  051B                     	;# 
  3978  051C                     	;# 
  3979  051D                     	;# 
  3980  058C                     	;# 
  3981  058C                     	;# 
  3982  058D                     	;# 
  3983  058E                     	;# 
  3984  058F                     	;# 
  3985  058F                     	;# 
  3986  0590                     	;# 
  3987  0591                     	;# 
  3988  0592                     	;# 
  3989  0593                     	;# 
  3990  060C                     	;# 
  3991  060D                     	;# 
  3992  060E                     	;# 
  3993  060F                     	;# 
  3994  0610                     	;# 
  3995  0611                     	;# 
  3996  0612                     	;# 
  3997  0613                     	;# 
  3998  0614                     	;# 
  3999  0616                     	;# 
  4000  0617                     	;# 
  4001  0618                     	;# 
  4002  0619                     	;# 
  4003  061A                     	;# 
  4004  061B                     	;# 
  4005  061C                     	;# 
  4006  061D                     	;# 
  4007  061E                     	;# 
  4008  068C                     	;# 
  4009  068D                     	;# 
  4010  068E                     	;# 
  4011  068F                     	;# 
  4012  0690                     	;# 
  4013  0691                     	;# 
  4014  0692                     	;# 
  4015  0693                     	;# 
  4016  0694                     	;# 
  4017  070C                     	;# 
  4018  070D                     	;# 
  4019  070E                     	;# 
  4020  070F                     	;# 
  4021  0710                     	;# 
  4022  0711                     	;# 
  4023  0712                     	;# 
  4024  0713                     	;# 
  4025  0714                     	;# 
  4026  0716                     	;# 
  4027  0717                     	;# 
  4028  0718                     	;# 
  4029  0719                     	;# 
  4030  071A                     	;# 
  4031  071B                     	;# 
  4032  071C                     	;# 
  4033  071D                     	;# 
  4034  071E                     	;# 
  4035  0796                     	;# 
  4036  0797                     	;# 
  4037  0798                     	;# 
  4038  0799                     	;# 
  4039  079A                     	;# 
  4040  079B                     	;# 
  4041  080C                     	;# 
  4042  080D                     	;# 
  4043  080E                     	;# 
  4044  080F                     	;# 
  4045  0810                     	;# 
  4046  0811                     	;# 
  4047  0812                     	;# 
  4048  0813                     	;# 
  4049  0814                     	;# 
  4050  081A                     	;# 
  4051  081B                     	;# 
  4052  081C                     	;# 
  4053  081D                     	;# 
  4054  081E                     	;# 
  4055  081F                     	;# 
  4056  088C                     	;# 
  4057  088D                     	;# 
  4058  088E                     	;# 
  4059  088F                     	;# 
  4060  0890                     	;# 
  4061  0891                     	;# 
  4062  0892                     	;# 
  4063  0893                     	;# 
  4064  0895                     	;# 
  4065  0896                     	;# 
  4066  0897                     	;# 
  4067  0898                     	;# 
  4068  0899                     	;# 
  4069  089A                     	;# 
  4070  089B                     	;# 
  4071  090C                     	;# 
  4072  090E                     	;# 
  4073  090F                     	;# 
  4074  091F                     	;# 
  4075  091F                     	;# 
  4076  098F                     	;# 
  4077  098F                     	;# 
  4078  0990                     	;# 
  4079  0991                     	;# 
  4080  0992                     	;# 
  4081  0993                     	;# 
  4082  0994                     	;# 
  4083  0995                     	;# 
  4084  0996                     	;# 
  4085  0997                     	;# 
  4086  0E0F                     	;# 
  4087  0E10                     	;# 
  4088  0E11                     	;# 
  4089  0E12                     	;# 
  4090  0E13                     	;# 
  4091  0E14                     	;# 
  4092  0E15                     	;# 
  4093  0E16                     	;# 
  4094  0E17                     	;# 
  4095  0E18                     	;# 
  4096  0E19                     	;# 
  4097  0E1A                     	;# 
  4098  0E1B                     	;# 
  4099  0E1C                     	;# 
  4100  0E1D                     	;# 
  4101  0E1E                     	;# 
  4102  0E1F                     	;# 
  4103  0E20                     	;# 
  4104  0E21                     	;# 
  4105  0E22                     	;# 
  4106  0E23                     	;# 
  4107  0E24                     	;# 
  4108  0E25                     	;# 
  4109  0E26                     	;# 
  4110  0E27                     	;# 
  4111  0E28                     	;# 
  4112  0E29                     	;# 
  4113  0E2A                     	;# 
  4114  0E2B                     	;# 
  4115  0E2C                     	;# 
  4116  0E2D                     	;# 
  4117  0E2E                     	;# 
  4118  0E2F                     	;# 
  4119  0E30                     	;# 
  4120  0E31                     	;# 
  4121  0E32                     	;# 
  4122  0E33                     	;# 
  4123  0E34                     	;# 
  4124  0E35                     	;# 
  4125  0E36                     	;# 
  4126  0E37                     	;# 
  4127  0E8F                     	;# 
  4128  0E90                     	;# 
  4129  0E91                     	;# 
  4130  0E92                     	;# 
  4131  0E93                     	;# 
  4132  0E94                     	;# 
  4133  0E95                     	;# 
  4134  0E96                     	;# 
  4135  0E97                     	;# 
  4136  0E9C                     	;# 
  4137  0E9D                     	;# 
  4138  0E9E                     	;# 
  4139  0EA1                     	;# 
  4140  0EA2                     	;# 
  4141  0EA3                     	;# 
  4142  0EA4                     	;# 
  4143  0EA5                     	;# 
  4144  0EA9                     	;# 
  4145  0EAA                     	;# 
  4146  0EAB                     	;# 
  4147  0EAC                     	;# 
  4148  0EB1                     	;# 
  4149  0EB2                     	;# 
  4150  0EB3                     	;# 
  4151  0EB8                     	;# 
  4152  0EB9                     	;# 
  4153  0EBA                     	;# 
  4154  0EBB                     	;# 
  4155  0EBC                     	;# 
  4156  0EBD                     	;# 
  4157  0EBE                     	;# 
  4158  0EC3                     	;# 
  4159  0EC5                     	;# 
  4160  0EC6                     	;# 
  4161  0EC7                     	;# 
  4162  0EC8                     	;# 
  4163  0EC9                     	;# 
  4164  0ECA                     	;# 
  4165  0ECB                     	;# 
  4166  0ECC                     	;# 
  4167  0F10                     	;# 
  4168  0F11                     	;# 
  4169  0F12                     	;# 
  4170  0F13                     	;# 
  4171  0F14                     	;# 
  4172  0F15                     	;# 
  4173  0F16                     	;# 
  4174  0F17                     	;# 
  4175  0F18                     	;# 
  4176  0F19                     	;# 
  4177  0F1A                     	;# 
  4178  0F1B                     	;# 
  4179  0F1C                     	;# 
  4180  0F1D                     	;# 
  4181  0F1E                     	;# 
  4182  0F1F                     	;# 
  4183  0F20                     	;# 
  4184  0F21                     	;# 
  4185  0F22                     	;# 
  4186  0F23                     	;# 
  4187  0F24                     	;# 
  4188  0F25                     	;# 
  4189  0F26                     	;# 
  4190  0F27                     	;# 
  4191  0F38                     	;# 
  4192  0F39                     	;# 
  4193  0F3A                     	;# 
  4194  0F3B                     	;# 
  4195  0F3C                     	;# 
  4196  0F3D                     	;# 
  4197  0F3E                     	;# 
  4198  0F3F                     	;# 
  4199  0F40                     	;# 
  4200  0F41                     	;# 
  4201  0F43                     	;# 
  4202  0F44                     	;# 
  4203  0F45                     	;# 
  4204  0F46                     	;# 
  4205  0F47                     	;# 
  4206  0F48                     	;# 
  4207  0F49                     	;# 
  4208  0F4A                     	;# 
  4209  0F4B                     	;# 
  4210  0F4C                     	;# 
  4211  0F4E                     	;# 
  4212  0F4F                     	;# 
  4213  0F50                     	;# 
  4214  0F51                     	;# 
  4215  0F52                     	;# 
  4216  0F53                     	;# 
  4217  0F54                     	;# 
  4218  0F55                     	;# 
  4219  0F56                     	;# 
  4220  0F57                     	;# 
  4221  0F65                     	;# 
  4222  0F68                     	;# 
  4223  0F69                     	;# 
  4224  0F6A                     	;# 
  4225  0F6B                     	;# 
  4226  0FE4                     	;# 
  4227  0FE5                     	;# 
  4228  0FE6                     	;# 
  4229  0FE7                     	;# 
  4230  0FE8                     	;# 
  4231  0FE9                     	;# 
  4232  0FEA                     	;# 
  4233  0FEB                     	;# 
  4234  0FED                     	;# 
  4235  0FEE                     	;# 
  4236  0FEF                     	;# 
  4237  0000                     	;# 
  4238  0001                     	;# 
  4239  0002                     	;# 
  4240  0003                     	;# 
  4241  0004                     	;# 
  4242  0005                     	;# 
  4243  0006                     	;# 
  4244  0007                     	;# 
  4245  0008                     	;# 
  4246  0009                     	;# 
  4247  000A                     	;# 
  4248  000B                     	;# 
  4249  000C                     	;# 
  4250  000D                     	;# 
  4251  000E                     	;# 
  4252  0010                     	;# 
  4253  0011                     	;# 
  4254  0012                     	;# 
  4255  0013                     	;# 
  4256  0016                     	;# 
  4257  0017                     	;# 
  4258  0018                     	;# 
  4259  001C                     	;# 
  4260  001C                     	;# 
  4261  001D                     	;# 
  4262  001D                     	;# 
  4263  001E                     	;# 
  4264  001F                     	;# 
  4265  008C                     	;# 
  4266  008C                     	;# 
  4267  008D                     	;# 
  4268  008E                     	;# 
  4269  008E                     	;# 
  4270  008F                     	;# 
  4271  0090                     	;# 
  4272  0090                     	;# 
  4273  0091                     	;# 
  4274  0093                     	;# 
  4275  0094                     	;# 
  4276  0095                     	;# 
  4277  0096                     	;# 
  4278  0097                     	;# 
  4279  0098                     	;# 
  4280  0099                     	;# 
  4281  009A                     	;# 
  4282  009B                     	;# 
  4283  009C                     	;# 
  4284  009D                     	;# 
  4285  009E                     	;# 
  4286  010C                     	;# 
  4287  010D                     	;# 
  4288  010E                     	;# 
  4289  010E                     	;# 
  4290  010F                     	;# 
  4291  0110                     	;# 
  4292  0110                     	;# 
  4293  0111                     	;# 
  4294  0112                     	;# 
  4295  0112                     	;# 
  4296  0113                     	;# 
  4297  0114                     	;# 
  4298  0114                     	;# 
  4299  0115                     	;# 
  4300  0116                     	;# 
  4301  0116                     	;# 
  4302  0117                     	;# 
  4303  0119                     	;# 
  4304  0119                     	;# 
  4305  0119                     	;# 
  4306  011A                     	;# 
  4307  011A                     	;# 
  4308  011A                     	;# 
  4309  011B                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011B                     	;# 
  4314  011C                     	;# 
  4315  011C                     	;# 
  4316  011C                     	;# 
  4317  011D                     	;# 
  4318  011D                     	;# 
  4319  011D                     	;# 
  4320  011E                     	;# 
  4321  011E                     	;# 
  4322  011E                     	;# 
  4323  011F                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  011F                     	;# 
  4328  018C                     	;# 
  4329  018D                     	;# 
  4330  018E                     	;# 
  4331  018F                     	;# 
  4332  0190                     	;# 
  4333  0191                     	;# 
  4334  0192                     	;# 
  4335  0196                     	;# 
  4336  0197                     	;# 
  4337  0198                     	;# 
  4338  0199                     	;# 
  4339  019A                     	;# 
  4340  019B                     	;# 
  4341  019C                     	;# 
  4342  020C                     	;# 
  4343  020C                     	;# 
  4344  020D                     	;# 
  4345  020E                     	;# 
  4346  020F                     	;# 
  4347  020F                     	;# 
  4348  0210                     	;# 
  4349  0210                     	;# 
  4350  0211                     	;# 
  4351  0211                     	;# 
  4352  0212                     	;# 
  4353  0212                     	;# 
  4354  0213                     	;# 
  4355  0214                     	;# 
  4356  0215                     	;# 
  4357  0215                     	;# 
  4358  0216                     	;# 
  4359  0216                     	;# 
  4360  0217                     	;# 
  4361  0217                     	;# 
  4362  0218                     	;# 
  4363  0218                     	;# 
  4364  0219                     	;# 
  4365  021A                     	;# 
  4366  021B                     	;# 
  4367  021B                     	;# 
  4368  021C                     	;# 
  4369  021C                     	;# 
  4370  021D                     	;# 
  4371  021D                     	;# 
  4372  021E                     	;# 
  4373  021F                     	;# 
  4374  028C                     	;# 
  4375  028C                     	;# 
  4376  028D                     	;# 
  4377  028D                     	;# 
  4378  028E                     	;# 
  4379  028F                     	;# 
  4380  0290                     	;# 
  4381  0290                     	;# 
  4382  0291                     	;# 
  4383  0292                     	;# 
  4384  0292                     	;# 
  4385  0293                     	;# 
  4386  0293                     	;# 
  4387  0294                     	;# 
  4388  0295                     	;# 
  4389  0296                     	;# 
  4390  0296                     	;# 
  4391  0297                     	;# 
  4392  0298                     	;# 
  4393  0298                     	;# 
  4394  0299                     	;# 
  4395  0299                     	;# 
  4396  029A                     	;# 
  4397  029B                     	;# 
  4398  029C                     	;# 
  4399  029C                     	;# 
  4400  029D                     	;# 
  4401  030C                     	;# 
  4402  030C                     	;# 
  4403  030D                     	;# 
  4404  030E                     	;# 
  4405  030F                     	;# 
  4406  0310                     	;# 
  4407  0310                     	;# 
  4408  0311                     	;# 
  4409  0312                     	;# 
  4410  0313                     	;# 
  4411  0314                     	;# 
  4412  0314                     	;# 
  4413  0315                     	;# 
  4414  0316                     	;# 
  4415  0317                     	;# 
  4416  0318                     	;# 
  4417  0318                     	;# 
  4418  0319                     	;# 
  4419  031A                     	;# 
  4420  031B                     	;# 
  4421  031C                     	;# 
  4422  031C                     	;# 
  4423  031D                     	;# 
  4424  031E                     	;# 
  4425  031F                     	;# 
  4426  038C                     	;# 
  4427  038D                     	;# 
  4428  038E                     	;# 
  4429  0390                     	;# 
  4430  0391                     	;# 
  4431  0392                     	;# 
  4432  040C                     	;# 
  4433  040D                     	;# 
  4434  040E                     	;# 
  4435  040F                     	;# 
  4436  0410                     	;# 
  4437  0411                     	;# 
  4438  0416                     	;# 
  4439  0416                     	;# 
  4440  0417                     	;# 
  4441  0418                     	;# 
  4442  0418                     	;# 
  4443  0419                     	;# 
  4444  041A                     	;# 
  4445  041A                     	;# 
  4446  041B                     	;# 
  4447  041C                     	;# 
  4448  041C                     	;# 
  4449  041D                     	;# 
  4450  041E                     	;# 
  4451  041F                     	;# 
  4452  048C                     	;# 
  4453  048C                     	;# 
  4454  048D                     	;# 
  4455  048E                     	;# 
  4456  048F                     	;# 
  4457  048F                     	;# 
  4458  0490                     	;# 
  4459  0491                     	;# 
  4460  0492                     	;# 
  4461  0492                     	;# 
  4462  0493                     	;# 
  4463  0494                     	;# 
  4464  0495                     	;# 
  4465  0495                     	;# 
  4466  0496                     	;# 
  4467  0497                     	;# 
  4468  0498                     	;# 
  4469  0499                     	;# 
  4470  049A                     	;# 
  4471  049B                     	;# 
  4472  049C                     	;# 
  4473  049D                     	;# 
  4474  050C                     	;# 
  4475  050C                     	;# 
  4476  050D                     	;# 
  4477  050E                     	;# 
  4478  050F                     	;# 
  4479  050F                     	;# 
  4480  0510                     	;# 
  4481  0511                     	;# 
  4482  0512                     	;# 
  4483  0512                     	;# 
  4484  0513                     	;# 
  4485  0514                     	;# 
  4486  0515                     	;# 
  4487  0515                     	;# 
  4488  0516                     	;# 
  4489  0517                     	;# 
  4490  0518                     	;# 
  4491  0519                     	;# 
  4492  051A                     	;# 
  4493  051B                     	;# 
  4494  051C                     	;# 
  4495  051D                     	;# 
  4496  058C                     	;# 
  4497  058C                     	;# 
  4498  058D                     	;# 
  4499  058E                     	;# 
  4500  058F                     	;# 
  4501  058F                     	;# 
  4502  0590                     	;# 
  4503  0591                     	;# 
  4504  0592                     	;# 
  4505  0593                     	;# 
  4506  060C                     	;# 
  4507  060D                     	;# 
  4508  060E                     	;# 
  4509  060F                     	;# 
  4510  0610                     	;# 
  4511  0611                     	;# 
  4512  0612                     	;# 
  4513  0613                     	;# 
  4514  0614                     	;# 
  4515  0616                     	;# 
  4516  0617                     	;# 
  4517  0618                     	;# 
  4518  0619                     	;# 
  4519  061A                     	;# 
  4520  061B                     	;# 
  4521  061C                     	;# 
  4522  061D                     	;# 
  4523  061E                     	;# 
  4524  068C                     	;# 
  4525  068D                     	;# 
  4526  068E                     	;# 
  4527  068F                     	;# 
  4528  0690                     	;# 
  4529  0691                     	;# 
  4530  0692                     	;# 
  4531  0693                     	;# 
  4532  0694                     	;# 
  4533  070C                     	;# 
  4534  070D                     	;# 
  4535  070E                     	;# 
  4536  070F                     	;# 
  4537  0710                     	;# 
  4538  0711                     	;# 
  4539  0712                     	;# 
  4540  0713                     	;# 
  4541  0714                     	;# 
  4542  0716                     	;# 
  4543  0717                     	;# 
  4544  0718                     	;# 
  4545  0719                     	;# 
  4546  071A                     	;# 
  4547  071B                     	;# 
  4548  071C                     	;# 
  4549  071D                     	;# 
  4550  071E                     	;# 
  4551  0796                     	;# 
  4552  0797                     	;# 
  4553  0798                     	;# 
  4554  0799                     	;# 
  4555  079A                     	;# 
  4556  079B                     	;# 
  4557  080C                     	;# 
  4558  080D                     	;# 
  4559  080E                     	;# 
  4560  080F                     	;# 
  4561  0810                     	;# 
  4562  0811                     	;# 
  4563  0812                     	;# 
  4564  0813                     	;# 
  4565  0814                     	;# 
  4566  081A                     	;# 
  4567  081B                     	;# 
  4568  081C                     	;# 
  4569  081D                     	;# 
  4570  081E                     	;# 
  4571  081F                     	;# 
  4572  088C                     	;# 
  4573  088D                     	;# 
  4574  088E                     	;# 
  4575  088F                     	;# 
  4576  0890                     	;# 
  4577  0891                     	;# 
  4578  0892                     	;# 
  4579  0893                     	;# 
  4580  0895                     	;# 
  4581  0896                     	;# 
  4582  0897                     	;# 
  4583  0898                     	;# 
  4584  0899                     	;# 
  4585  089A                     	;# 
  4586  089B                     	;# 
  4587  090C                     	;# 
  4588  090E                     	;# 
  4589  090F                     	;# 
  4590  091F                     	;# 
  4591  091F                     	;# 
  4592  098F                     	;# 
  4593  098F                     	;# 
  4594  0990                     	;# 
  4595  0991                     	;# 
  4596  0992                     	;# 
  4597  0993                     	;# 
  4598  0994                     	;# 
  4599  0995                     	;# 
  4600  0996                     	;# 
  4601  0997                     	;# 
  4602  0E0F                     	;# 
  4603  0E10                     	;# 
  4604  0E11                     	;# 
  4605  0E12                     	;# 
  4606  0E13                     	;# 
  4607  0E14                     	;# 
  4608  0E15                     	;# 
  4609  0E16                     	;# 
  4610  0E17                     	;# 
  4611  0E18                     	;# 
  4612  0E19                     	;# 
  4613  0E1A                     	;# 
  4614  0E1B                     	;# 
  4615  0E1C                     	;# 
  4616  0E1D                     	;# 
  4617  0E1E                     	;# 
  4618  0E1F                     	;# 
  4619  0E20                     	;# 
  4620  0E21                     	;# 
  4621  0E22                     	;# 
  4622  0E23                     	;# 
  4623  0E24                     	;# 
  4624  0E25                     	;# 
  4625  0E26                     	;# 
  4626  0E27                     	;# 
  4627  0E28                     	;# 
  4628  0E29                     	;# 
  4629  0E2A                     	;# 
  4630  0E2B                     	;# 
  4631  0E2C                     	;# 
  4632  0E2D                     	;# 
  4633  0E2E                     	;# 
  4634  0E2F                     	;# 
  4635  0E30                     	;# 
  4636  0E31                     	;# 
  4637  0E32                     	;# 
  4638  0E33                     	;# 
  4639  0E34                     	;# 
  4640  0E35                     	;# 
  4641  0E36                     	;# 
  4642  0E37                     	;# 
  4643  0E8F                     	;# 
  4644  0E90                     	;# 
  4645  0E91                     	;# 
  4646  0E92                     	;# 
  4647  0E93                     	;# 
  4648  0E94                     	;# 
  4649  0E95                     	;# 
  4650  0E96                     	;# 
  4651  0E97                     	;# 
  4652  0E9C                     	;# 
  4653  0E9D                     	;# 
  4654  0E9E                     	;# 
  4655  0EA1                     	;# 
  4656  0EA2                     	;# 
  4657  0EA3                     	;# 
  4658  0EA4                     	;# 
  4659  0EA5                     	;# 
  4660  0EA9                     	;# 
  4661  0EAA                     	;# 
  4662  0EAB                     	;# 
  4663  0EAC                     	;# 
  4664  0EB1                     	;# 
  4665  0EB2                     	;# 
  4666  0EB3                     	;# 
  4667  0EB8                     	;# 
  4668  0EB9                     	;# 
  4669  0EBA                     	;# 
  4670  0EBB                     	;# 
  4671  0EBC                     	;# 
  4672  0EBD                     	;# 
  4673  0EBE                     	;# 
  4674  0EC3                     	;# 
  4675  0EC5                     	;# 
  4676  0EC6                     	;# 
  4677  0EC7                     	;# 
  4678  0EC8                     	;# 
  4679  0EC9                     	;# 
  4680  0ECA                     	;# 
  4681  0ECB                     	;# 
  4682  0ECC                     	;# 
  4683  0F10                     	;# 
  4684  0F11                     	;# 
  4685  0F12                     	;# 
  4686  0F13                     	;# 
  4687  0F14                     	;# 
  4688  0F15                     	;# 
  4689  0F16                     	;# 
  4690  0F17                     	;# 
  4691  0F18                     	;# 
  4692  0F19                     	;# 
  4693  0F1A                     	;# 
  4694  0F1B                     	;# 
  4695  0F1C                     	;# 
  4696  0F1D                     	;# 
  4697  0F1E                     	;# 
  4698  0F1F                     	;# 
  4699  0F20                     	;# 
  4700  0F21                     	;# 
  4701  0F22                     	;# 
  4702  0F23                     	;# 
  4703  0F24                     	;# 
  4704  0F25                     	;# 
  4705  0F26                     	;# 
  4706  0F27                     	;# 
  4707  0F38                     	;# 
  4708  0F39                     	;# 
  4709  0F3A                     	;# 
  4710  0F3B                     	;# 
  4711  0F3C                     	;# 
  4712  0F3D                     	;# 
  4713  0F3E                     	;# 
  4714  0F3F                     	;# 
  4715  0F40                     	;# 
  4716  0F41                     	;# 
  4717  0F43                     	;# 
  4718  0F44                     	;# 
  4719  0F45                     	;# 
  4720  0F46                     	;# 
  4721  0F47                     	;# 
  4722  0F48                     	;# 
  4723  0F49                     	;# 
  4724  0F4A                     	;# 
  4725  0F4B                     	;# 
  4726  0F4C                     	;# 
  4727  0F4E                     	;# 
  4728  0F4F                     	;# 
  4729  0F50                     	;# 
  4730  0F51                     	;# 
  4731  0F52                     	;# 
  4732  0F53                     	;# 
  4733  0F54                     	;# 
  4734  0F55                     	;# 
  4735  0F56                     	;# 
  4736  0F57                     	;# 
  4737  0F65                     	;# 
  4738  0F68                     	;# 
  4739  0F69                     	;# 
  4740  0F6A                     	;# 
  4741  0F6B                     	;# 
  4742  0FE4                     	;# 
  4743  0FE5                     	;# 
  4744  0FE6                     	;# 
  4745  0FE7                     	;# 
  4746  0FE8                     	;# 
  4747  0FE9                     	;# 
  4748  0FEA                     	;# 
  4749  0FEB                     	;# 
  4750  0FED                     	;# 
  4751  0FEE                     	;# 
  4752  0FEF                     	;# 
  4753  0000                     	;# 
  4754  0001                     	;# 
  4755  0002                     	;# 
  4756  0003                     	;# 
  4757  0004                     	;# 
  4758  0005                     	;# 
  4759  0006                     	;# 
  4760  0007                     	;# 
  4761  0008                     	;# 
  4762  0009                     	;# 
  4763  000A                     	;# 
  4764  000B                     	;# 
  4765  000C                     	;# 
  4766  000D                     	;# 
  4767  000E                     	;# 
  4768  0010                     	;# 
  4769  0011                     	;# 
  4770  0012                     	;# 
  4771  0013                     	;# 
  4772  0016                     	;# 
  4773  0017                     	;# 
  4774  0018                     	;# 
  4775  001C                     	;# 
  4776  001C                     	;# 
  4777  001D                     	;# 
  4778  001D                     	;# 
  4779  001E                     	;# 
  4780  001F                     	;# 
  4781  008C                     	;# 
  4782  008C                     	;# 
  4783  008D                     	;# 
  4784  008E                     	;# 
  4785  008E                     	;# 
  4786  008F                     	;# 
  4787  0090                     	;# 
  4788  0090                     	;# 
  4789  0091                     	;# 
  4790  0093                     	;# 
  4791  0094                     	;# 
  4792  0095                     	;# 
  4793  0096                     	;# 
  4794  0097                     	;# 
  4795  0098                     	;# 
  4796  0099                     	;# 
  4797  009A                     	;# 
  4798  009B                     	;# 
  4799  009C                     	;# 
  4800  009D                     	;# 
  4801  009E                     	;# 
  4802  010C                     	;# 
  4803  010D                     	;# 
  4804  010E                     	;# 
  4805  010E                     	;# 
  4806  010F                     	;# 
  4807  0110                     	;# 
  4808  0110                     	;# 
  4809  0111                     	;# 
  4810  0112                     	;# 
  4811  0112                     	;# 
  4812  0113                     	;# 
  4813  0114                     	;# 
  4814  0114                     	;# 
  4815  0115                     	;# 
  4816  0116                     	;# 
  4817  0116                     	;# 
  4818  0117                     	;# 
  4819  0119                     	;# 
  4820  0119                     	;# 
  4821  0119                     	;# 
  4822  011A                     	;# 
  4823  011A                     	;# 
  4824  011A                     	;# 
  4825  011B                     	;# 
  4826  011B                     	;# 
  4827  011B                     	;# 
  4828  011B                     	;# 
  4829  011B                     	;# 
  4830  011C                     	;# 
  4831  011C                     	;# 
  4832  011C                     	;# 
  4833  011D                     	;# 
  4834  011D                     	;# 
  4835  011D                     	;# 
  4836  011E                     	;# 
  4837  011E                     	;# 
  4838  011E                     	;# 
  4839  011F                     	;# 
  4840  011F                     	;# 
  4841  011F                     	;# 
  4842  011F                     	;# 
  4843  011F                     	;# 
  4844  018C                     	;# 
  4845  018D                     	;# 
  4846  018E                     	;# 
  4847  018F                     	;# 
  4848  0190                     	;# 
  4849  0191                     	;# 
  4850  0192                     	;# 
  4851  0196                     	;# 
  4852  0197                     	;# 
  4853  0198                     	;# 
  4854  0199                     	;# 
  4855  019A                     	;# 
  4856  019B                     	;# 
  4857  019C                     	;# 
  4858  020C                     	;# 
  4859  020C                     	;# 
  4860  020D                     	;# 
  4861  020E                     	;# 
  4862  020F                     	;# 
  4863  020F                     	;# 
  4864  0210                     	;# 
  4865  0210                     	;# 
  4866  0211                     	;# 
  4867  0211                     	;# 
  4868  0212                     	;# 
  4869  0212                     	;# 
  4870  0213                     	;# 
  4871  0214                     	;# 
  4872  0215                     	;# 
  4873  0215                     	;# 
  4874  0216                     	;# 
  4875  0216                     	;# 
  4876  0217                     	;# 
  4877  0217                     	;# 
  4878  0218                     	;# 
  4879  0218                     	;# 
  4880  0219                     	;# 
  4881  021A                     	;# 
  4882  021B                     	;# 
  4883  021B                     	;# 
  4884  021C                     	;# 
  4885  021C                     	;# 
  4886  021D                     	;# 
  4887  021D                     	;# 
  4888  021E                     	;# 
  4889  021F                     	;# 
  4890  028C                     	;# 
  4891  028C                     	;# 
  4892  028D                     	;# 
  4893  028D                     	;# 
  4894  028E                     	;# 
  4895  028F                     	;# 
  4896  0290                     	;# 
  4897  0290                     	;# 
  4898  0291                     	;# 
  4899  0292                     	;# 
  4900  0292                     	;# 
  4901  0293                     	;# 
  4902  0293                     	;# 
  4903  0294                     	;# 
  4904  0295                     	;# 
  4905  0296                     	;# 
  4906  0296                     	;# 
  4907  0297                     	;# 
  4908  0298                     	;# 
  4909  0298                     	;# 
  4910  0299                     	;# 
  4911  0299                     	;# 
  4912  029A                     	;# 
  4913  029B                     	;# 
  4914  029C                     	;# 
  4915  029C                     	;# 
  4916  029D                     	;# 
  4917  030C                     	;# 
  4918  030C                     	;# 
  4919  030D                     	;# 
  4920  030E                     	;# 
  4921  030F                     	;# 
  4922  0310                     	;# 
  4923  0310                     	;# 
  4924  0311                     	;# 
  4925  0312                     	;# 
  4926  0313                     	;# 
  4927  0314                     	;# 
  4928  0314                     	;# 
  4929  0315                     	;# 
  4930  0316                     	;# 
  4931  0317                     	;# 
  4932  0318                     	;# 
  4933  0318                     	;# 
  4934  0319                     	;# 
  4935  031A                     	;# 
  4936  031B                     	;# 
  4937  031C                     	;# 
  4938  031C                     	;# 
  4939  031D                     	;# 
  4940  031E                     	;# 
  4941  031F                     	;# 
  4942  038C                     	;# 
  4943  038D                     	;# 
  4944  038E                     	;# 
  4945  0390                     	;# 
  4946  0391                     	;# 
  4947  0392                     	;# 
  4948  040C                     	;# 
  4949  040D                     	;# 
  4950  040E                     	;# 
  4951  040F                     	;# 
  4952  0410                     	;# 
  4953  0411                     	;# 
  4954  0416                     	;# 
  4955  0416                     	;# 
  4956  0417                     	;# 
  4957  0418                     	;# 
  4958  0418                     	;# 
  4959  0419                     	;# 
  4960  041A                     	;# 
  4961  041A                     	;# 
  4962  041B                     	;# 
  4963  041C                     	;# 
  4964  041C                     	;# 
  4965  041D                     	;# 
  4966  041E                     	;# 
  4967  041F                     	;# 
  4968  048C                     	;# 
  4969  048C                     	;# 
  4970  048D                     	;# 
  4971  048E                     	;# 
  4972  048F                     	;# 
  4973  048F                     	;# 
  4974  0490                     	;# 
  4975  0491                     	;# 
  4976  0492                     	;# 
  4977  0492                     	;# 
  4978  0493                     	;# 
  4979  0494                     	;# 
  4980  0495                     	;# 
  4981  0495                     	;# 
  4982  0496                     	;# 
  4983  0497                     	;# 
  4984  0498                     	;# 
  4985  0499                     	;# 
  4986  049A                     	;# 
  4987  049B                     	;# 
  4988  049C                     	;# 
  4989  049D                     	;# 
  4990  050C                     	;# 
  4991  050C                     	;# 
  4992  050D                     	;# 
  4993  050E                     	;# 
  4994  050F                     	;# 
  4995  050F                     	;# 
  4996  0510                     	;# 
  4997  0511                     	;# 
  4998  0512                     	;# 
  4999  0512                     	;# 
  5000  0513                     	;# 
  5001  0514                     	;# 
  5002  0515                     	;# 
  5003  0515                     	;# 
  5004  0516                     	;# 
  5005  0517                     	;# 
  5006  0518                     	;# 
  5007  0519                     	;# 
  5008  051A                     	;# 
  5009  051B                     	;# 
  5010  051C                     	;# 
  5011  051D                     	;# 
  5012  058C                     	;# 
  5013  058C                     	;# 
  5014  058D                     	;# 
  5015  058E                     	;# 
  5016  058F                     	;# 
  5017  058F                     	;# 
  5018  0590                     	;# 
  5019  0591                     	;# 
  5020  0592                     	;# 
  5021  0593                     	;# 
  5022  060C                     	;# 
  5023  060D                     	;# 
  5024  060E                     	;# 
  5025  060F                     	;# 
  5026  0610                     	;# 
  5027  0611                     	;# 
  5028  0612                     	;# 
  5029  0613                     	;# 
  5030  0614                     	;# 
  5031  0616                     	;# 
  5032  0617                     	;# 
  5033  0618                     	;# 
  5034  0619                     	;# 
  5035  061A                     	;# 
  5036  061B                     	;# 
  5037  061C                     	;# 
  5038  061D                     	;# 
  5039  061E                     	;# 
  5040  068C                     	;# 
  5041  068D                     	;# 
  5042  068E                     	;# 
  5043  068F                     	;# 
  5044  0690                     	;# 
  5045  0691                     	;# 
  5046  0692                     	;# 
  5047  0693                     	;# 
  5048  0694                     	;# 
  5049  070C                     	;# 
  5050  070D                     	;# 
  5051  070E                     	;# 
  5052  070F                     	;# 
  5053  0710                     	;# 
  5054  0711                     	;# 
  5055  0712                     	;# 
  5056  0713                     	;# 
  5057  0714                     	;# 
  5058  0716                     	;# 
  5059  0717                     	;# 
  5060  0718                     	;# 
  5061  0719                     	;# 
  5062  071A                     	;# 
  5063  071B                     	;# 
  5064  071C                     	;# 
  5065  071D                     	;# 
  5066  071E                     	;# 
  5067  0796                     	;# 
  5068  0797                     	;# 
  5069  0798                     	;# 
  5070  0799                     	;# 
  5071  079A                     	;# 
  5072  079B                     	;# 
  5073  080C                     	;# 
  5074  080D                     	;# 
  5075  080E                     	;# 
  5076  080F                     	;# 
  5077  0810                     	;# 
  5078  0811                     	;# 
  5079  0812                     	;# 
  5080  0813                     	;# 
  5081  0814                     	;# 
  5082  081A                     	;# 
  5083  081B                     	;# 
  5084  081C                     	;# 
  5085  081D                     	;# 
  5086  081E                     	;# 
  5087  081F                     	;# 
  5088  088C                     	;# 
  5089  088D                     	;# 
  5090  088E                     	;# 
  5091  088F                     	;# 
  5092  0890                     	;# 
  5093  0891                     	;# 
  5094  0892                     	;# 
  5095  0893                     	;# 
  5096  0895                     	;# 
  5097  0896                     	;# 
  5098  0897                     	;# 
  5099  0898                     	;# 
  5100  0899                     	;# 
  5101  089A                     	;# 
  5102  089B                     	;# 
  5103  090C                     	;# 
  5104  090E                     	;# 
  5105  090F                     	;# 
  5106  091F                     	;# 
  5107  091F                     	;# 
  5108  098F                     	;# 
  5109  098F                     	;# 
  5110  0990                     	;# 
  5111  0991                     	;# 
  5112  0992                     	;# 
  5113  0993                     	;# 
  5114  0994                     	;# 
  5115  0995                     	;# 
  5116  0996                     	;# 
  5117  0997                     	;# 
  5118  0E0F                     	;# 
  5119  0E10                     	;# 
  5120  0E11                     	;# 
  5121  0E12                     	;# 
  5122  0E13                     	;# 
  5123  0E14                     	;# 
  5124  0E15                     	;# 
  5125  0E16                     	;# 
  5126  0E17                     	;# 
  5127  0E18                     	;# 
  5128  0E19                     	;# 
  5129  0E1A                     	;# 
  5130  0E1B                     	;# 
  5131  0E1C                     	;# 
  5132  0E1D                     	;# 
  5133  0E1E                     	;# 
  5134  0E1F                     	;# 
  5135  0E20                     	;# 
  5136  0E21                     	;# 
  5137  0E22                     	;# 
  5138  0E23                     	;# 
  5139  0E24                     	;# 
  5140  0E25                     	;# 
  5141  0E26                     	;# 
  5142  0E27                     	;# 
  5143  0E28                     	;# 
  5144  0E29                     	;# 
  5145  0E2A                     	;# 
  5146  0E2B                     	;# 
  5147  0E2C                     	;# 
  5148  0E2D                     	;# 
  5149  0E2E                     	;# 
  5150  0E2F                     	;# 
  5151  0E30                     	;# 
  5152  0E31                     	;# 
  5153  0E32                     	;# 
  5154  0E33                     	;# 
  5155  0E34                     	;# 
  5156  0E35                     	;# 
  5157  0E36                     	;# 
  5158  0E37                     	;# 
  5159  0E8F                     	;# 
  5160  0E90                     	;# 
  5161  0E91                     	;# 
  5162  0E92                     	;# 
  5163  0E93                     	;# 
  5164  0E94                     	;# 
  5165  0E95                     	;# 
  5166  0E96                     	;# 
  5167  0E97                     	;# 
  5168  0E9C                     	;# 
  5169  0E9D                     	;# 
  5170  0E9E                     	;# 
  5171  0EA1                     	;# 
  5172  0EA2                     	;# 
  5173  0EA3                     	;# 
  5174  0EA4                     	;# 
  5175  0EA5                     	;# 
  5176  0EA9                     	;# 
  5177  0EAA                     	;# 
  5178  0EAB                     	;# 
  5179  0EAC                     	;# 
  5180  0EB1                     	;# 
  5181  0EB2                     	;# 
  5182  0EB3                     	;# 
  5183  0EB8                     	;# 
  5184  0EB9                     	;# 
  5185  0EBA                     	;# 
  5186  0EBB                     	;# 
  5187  0EBC                     	;# 
  5188  0EBD                     	;# 
  5189  0EBE                     	;# 
  5190  0EC3                     	;# 
  5191  0EC5                     	;# 
  5192  0EC6                     	;# 
  5193  0EC7                     	;# 
  5194  0EC8                     	;# 
  5195  0EC9                     	;# 
  5196  0ECA                     	;# 
  5197  0ECB                     	;# 
  5198  0ECC                     	;# 
  5199  0F10                     	;# 
  5200  0F11                     	;# 
  5201  0F12                     	;# 
  5202  0F13                     	;# 
  5203  0F14                     	;# 
  5204  0F15                     	;# 
  5205  0F16                     	;# 
  5206  0F17                     	;# 
  5207  0F18                     	;# 
  5208  0F19                     	;# 
  5209  0F1A                     	;# 
  5210  0F1B                     	;# 
  5211  0F1C                     	;# 
  5212  0F1D                     	;# 
  5213  0F1E                     	;# 
  5214  0F1F                     	;# 
  5215  0F20                     	;# 
  5216  0F21                     	;# 
  5217  0F22                     	;# 
  5218  0F23                     	;# 
  5219  0F24                     	;# 
  5220  0F25                     	;# 
  5221  0F26                     	;# 
  5222  0F27                     	;# 
  5223  0F38                     	;# 
  5224  0F39                     	;# 
  5225  0F3A                     	;# 
  5226  0F3B                     	;# 
  5227  0F3C                     	;# 
  5228  0F3D                     	;# 
  5229  0F3E                     	;# 
  5230  0F3F                     	;# 
  5231  0F40                     	;# 
  5232  0F41                     	;# 
  5233  0F43                     	;# 
  5234  0F44                     	;# 
  5235  0F45                     	;# 
  5236  0F46                     	;# 
  5237  0F47                     	;# 
  5238  0F48                     	;# 
  5239  0F49                     	;# 
  5240  0F4A                     	;# 
  5241  0F4B                     	;# 
  5242  0F4C                     	;# 
  5243  0F4E                     	;# 
  5244  0F4F                     	;# 
  5245  0F50                     	;# 
  5246  0F51                     	;# 
  5247  0F52                     	;# 
  5248  0F53                     	;# 
  5249  0F54                     	;# 
  5250  0F55                     	;# 
  5251  0F56                     	;# 
  5252  0F57                     	;# 
  5253  0F65                     	;# 
  5254  0F68                     	;# 
  5255  0F69                     	;# 
  5256  0F6A                     	;# 
  5257  0F6B                     	;# 
  5258  0FE4                     	;# 
  5259  0FE5                     	;# 
  5260  0FE6                     	;# 
  5261  0FE7                     	;# 
  5262  0FE8                     	;# 
  5263  0FE9                     	;# 
  5264  0FEA                     	;# 
  5265  0FEB                     	;# 
  5266  0FED                     	;# 
  5267  0FEE                     	;# 
  5268  0FEF                     	;_samples
  5269                           
  5270                           	psect	idataBANK1
  5271  000A                     __pidataBANK1:	
  5272                           
  5273                           ;initializer for _Imode1
  5274  000A  3401               	retlw	1
  5275                           
  5276                           ;initializer for _Imode0
  5277  000B  3401               	retlw	1
  5278                           
  5279                           	psect	idataBANK2
  5280  1466                     __pidataBANK2:	
  5281                           
  5282                           ;initializer for _channels
  5283  1466  3417               	retlw	23
  5284  1467  3400               	retlw	0
  5285  1468  3415               	retlw	21
  5286  1469  3400               	retlw	0
  5287  146A  3413               	retlw	19
  5288  146B  3400               	retlw	0
  5289  146C  3411               	retlw	17
  5290  146D  3400               	retlw	0
  5291  146E  3416               	retlw	22
  5292  146F  3400               	retlw	0
  5293  1470  3414               	retlw	20
  5294  1471  3400               	retlw	0
  5295  1472  3412               	retlw	18
  5296  1473  3400               	retlw	0
  5297  1474  3410               	retlw	16
  5298  1475  3400               	retlw	0
  5299                           
  5300                           	psect	stringtext1
  5301  0800                     __pstringtext1:	
  5302  0800                     _fonts:	
  5303  0800  3400               	retlw	0
  5304  0801  3400               	retlw	0
  5305  0802  3400               	retlw	0
  5306  0803  3400               	retlw	0
  5307  0804  344E               	retlw	78
  5308  0805  3400               	retlw	0
  5309  0806  3406               	retlw	6
  5310  0807  3400               	retlw	0
  5311  0808  3406               	retlw	6
  5312  0809  34FF               	retlw	255
  5313  080A  34FF               	retlw	255
  5314  080B  34FF               	retlw	255
  5315  080C  3448               	retlw	72
  5316  080D  34D6               	retlw	214
  5317  080E  3424               	retlw	36
  5318  080F  3412               	retlw	18
  5319  0810  3408               	retlw	8
  5320  0811  3424               	retlw	36
  5321  0812  34FF               	retlw	255
  5322  0813  34FF               	retlw	255
  5323  0814  34FF               	retlw	255
  5324  0815  3400               	retlw	0
  5325  0816  3406               	retlw	6
  5326  0817  3400               	retlw	0
  5327  0818  3438               	retlw	56
  5328  0819  3444               	retlw	68
  5329  081A  3482               	retlw	130
  5330  081B  3482               	retlw	130
  5331  081C  3444               	retlw	68
  5332  081D  3438               	retlw	56
  5333  081E  3414               	retlw	20
  5334  081F  3408               	retlw	8
  5335  0820  343E               	retlw	62
  5336  0821  3410               	retlw	16
  5337  0822  3438               	retlw	56
  5338  0823  3410               	retlw	16
  5339  0824  34A0               	retlw	160
  5340  0825  3460               	retlw	96
  5341  0826  3400               	retlw	0
  5342  0827  3410               	retlw	16
  5343  0828  3410               	retlw	16
  5344  0829  3410               	retlw	16
  5345  082A  3460               	retlw	96
  5346  082B  3460               	retlw	96
  5347  082C  3400               	retlw	0
  5348  082D  3460               	retlw	96
  5349  082E  3418               	retlw	24
  5350  082F  3406               	retlw	6
  5351  0830  347C               	retlw	124
  5352  0831  3442               	retlw	66
  5353  0832  347C               	retlw	124
  5354  0833  3444               	retlw	68
  5355  0834  347E               	retlw	126
  5356  0835  3440               	retlw	64
  5357  0836  3464               	retlw	100
  5358  0837  3452               	retlw	82
  5359  0838  344C               	retlw	76
  5360  0839  344A               	retlw	74
  5361  083A  344A               	retlw	74
  5362  083B  3434               	retlw	52
  5363  083C  3438               	retlw	56
  5364  083D  3424               	retlw	36
  5365  083E  347E               	retlw	126
  5366  083F  344E               	retlw	78
  5367  0840  344A               	retlw	74
  5368  0841  3432               	retlw	50
  5369  0842  343C               	retlw	60
  5370  0843  344A               	retlw	74
  5371  0844  3432               	retlw	50
  5372  0845  3462               	retlw	98
  5373  0846  341A               	retlw	26
  5374  0847  3406               	retlw	6
  5375  0848  3476               	retlw	118
  5376  0849  344A               	retlw	74
  5377  084A  3476               	retlw	118
  5378  084B  344C               	retlw	76
  5379  084C  3452               	retlw	82
  5380  084D  343C               	retlw	60
  5381  084E  346C               	retlw	108
  5382  084F  346C               	retlw	108
  5383  0850  3400               	retlw	0
  5384  0851  34AC               	retlw	172
  5385  0852  346C               	retlw	108
  5386  0853  3400               	retlw	0
  5387  0854  3410               	retlw	16
  5388  0855  3428               	retlw	40
  5389  0856  3444               	retlw	68
  5390  0857  3428               	retlw	40
  5391  0858  3428               	retlw	40
  5392  0859  3428               	retlw	40
  5393  085A  3444               	retlw	68
  5394  085B  3428               	retlw	40
  5395  085C  3410               	retlw	16
  5396  085D  3402               	retlw	2
  5397  085E  3459               	retlw	89
  5398  085F  3406               	retlw	6
  5399  0860  34FF               	retlw	255
  5400  0861  34FF               	retlw	255
  5401  0862  34FF               	retlw	255
  5402  0863  347C               	retlw	124
  5403  0864  3412               	retlw	18
  5404  0865  347C               	retlw	124
  5405  0866  347E               	retlw	126
  5406  0867  345A               	retlw	90
  5407  0868  3434               	retlw	52
  5408  0869  343C               	retlw	60
  5409  086A  3442               	retlw	66
  5410  086B  3442               	retlw	66
  5411  086C  347E               	retlw	126
  5412  086D  3442               	retlw	66
  5413  086E  343C               	retlw	60
  5414  086F  347E               	retlw	126
  5415  0870  344A               	retlw	74
  5416  0871  3442               	retlw	66
  5417  0872  347E               	retlw	126
  5418  0873  340A               	retlw	10
  5419  0874  340A               	retlw	10
  5420  0875  343C               	retlw	60
  5421  0876  3452               	retlw	82
  5422  0877  3434               	retlw	52
  5423  0878  347E               	retlw	126
  5424  0879  3408               	retlw	8
  5425  087A  347E               	retlw	126
  5426  087B  3442               	retlw	66
  5427  087C  347E               	retlw	126
  5428  087D  3442               	retlw	66
  5429  087E  3430               	retlw	48
  5430  087F  3440               	retlw	64
  5431  0880  343E               	retlw	62
  5432  0881  347E               	retlw	126
  5433  0882  3418               	retlw	24
  5434  0883  3466               	retlw	102
  5435  0884  347E               	retlw	126
  5436  0885  3440               	retlw	64
  5437  0886  3440               	retlw	64
  5438  0887  347E               	retlw	126
  5439  0888  341C               	retlw	28
  5440  0889  347E               	retlw	126
  5441  088A  347E               	retlw	126
  5442  088B  3402               	retlw	2
  5443  088C  347E               	retlw	126
  5444  088D  343C               	retlw	60
  5445  088E  3442               	retlw	66
  5446  088F  343C               	retlw	60
  5447  0890  347E               	retlw	126
  5448  0891  3412               	retlw	18
  5449  0892  340C               	retlw	12
  5450  0893  347E               	retlw	126
  5451  0894  3462               	retlw	98
  5452  0895  34FE               	retlw	254
  5453  0896  347E               	retlw	126
  5454  0897  3432               	retlw	50
  5455  0898  344E               	retlw	78
  5456  0899  3444               	retlw	68
  5457  089A  344A               	retlw	74
  5458  089B  3432               	retlw	50
  5459  089C  3402               	retlw	2
  5460  089D  347E               	retlw	126
  5461  089E  3402               	retlw	2
  5462  089F  347E               	retlw	126
  5463  08A0  3440               	retlw	64
  5464  08A1  347E               	retlw	126
  5465  08A2  343E               	retlw	62
  5466  08A3  3440               	retlw	64
  5467  08A4  343E               	retlw	62
  5468  08A5  347E               	retlw	126
  5469  08A6  3438               	retlw	56
  5470  08A7  347E               	retlw	126
  5471  08A8  3466               	retlw	102
  5472  08A9  3418               	retlw	24
  5473  08AA  3466               	retlw	102
  5474  08AB  340E               	retlw	14
  5475  08AC  3470               	retlw	112
  5476  08AD  340E               	retlw	14
  5477  08AE  3462               	retlw	98
  5478  08AF  345A               	retlw	90
  5479  08B0  3446               	retlw	70
  5480  08B1  3400               	retlw	0
  5481  08B2  347E               	retlw	126
  5482  08B3  3442               	retlw	66
  5483  08B4  3406               	retlw	6
  5484  08B5  3418               	retlw	24
  5485  08B6  3460               	retlw	96
  5486  08B7  3442               	retlw	66
  5487  08B8  347E               	retlw	126
  5488  08B9  3400               	retlw	0
  5489  08BA  3404               	retlw	4
  5490  08BB  3402               	retlw	2
  5491  08BC  3404               	retlw	4
  5492  08BD  3440               	retlw	64
  5493  08BE  3440               	retlw	64
  5494  08BF  3440               	retlw	64
  5495  08C0  3400               	retlw	0
  5496  08C1  3402               	retlw	2
  5497  08C2  3404               	retlw	4
  5498  08C3  3474               	retlw	116
  5499  08C4  3454               	retlw	84
  5500  08C5  3478               	retlw	120
  5501  08C6  347E               	retlw	126
  5502  08C7  3448               	retlw	72
  5503  08C8  3430               	retlw	48
  5504  08C9  3430               	retlw	48
  5505  08CA  3448               	retlw	72
  5506  08CB  3448               	retlw	72
  5507  08CC  3430               	retlw	48
  5508  08CD  3448               	retlw	72
  5509  08CE  347E               	retlw	126
  5510  08CF  3438               	retlw	56
  5511  08D0  3454               	retlw	84
  5512  08D1  3458               	retlw	88
  5513  08D2  347C               	retlw	124
  5514  08D3  340A               	retlw	10
  5515  08D4  3402               	retlw	2
  5516  08D5  3498               	retlw	152
  5517  08D6  34A4               	retlw	164
  5518  08D7  347C               	retlw	124
  5519  08D8  347E               	retlw	126
  5520  08D9  3408               	retlw	8
  5521  08DA  3470               	retlw	112
  5522  08DB  3448               	retlw	72
  5523  08DC  347A               	retlw	122
  5524  08DD  3440               	retlw	64
  5525  08DE  3488               	retlw	136
  5526  08DF  34FA               	retlw	250
  5527  08E0  3400               	retlw	0
  5528  08E1  347E               	retlw	126
  5529  08E2  3418               	retlw	24
  5530  08E3  3464               	retlw	100
  5531  08E4  3442               	retlw	66
  5532  08E5  347E               	retlw	126
  5533  08E6  3440               	retlw	64
  5534  08E7  347C               	retlw	124
  5535  08E8  3438               	retlw	56
  5536  08E9  347C               	retlw	124
  5537  08EA  347C               	retlw	124
  5538  08EB  3404               	retlw	4
  5539  08EC  3478               	retlw	120
  5540  08ED  3438               	retlw	56
  5541  08EE  3444               	retlw	68
  5542  08EF  3438               	retlw	56
  5543  08F0  34FC               	retlw	252
  5544  08F1  3424               	retlw	36
  5545  08F2  3418               	retlw	24
  5546  08F3  3418               	retlw	24
  5547  08F4  3424               	retlw	36
  5548  08F5  34FC               	retlw	252
  5549  08F6  3478               	retlw	120
  5550  08F7  3404               	retlw	4
  5551  08F8  3404               	retlw	4
  5552  08F9  3448               	retlw	72
  5553  08FA  3454               	retlw	84
  5554  08FB  3424               	retlw	36
  5555  08FC  3404               	retlw	4
  5556  08FD  343E               	retlw	62
  5557  08FE  3444               	retlw	68
  5558  08FF  347C               	retlw	124
  5559  0900  3440               	retlw	64
  5560  0901  347C               	retlw	124
  5561  0902  343C               	retlw	60
  5562  0903  3440               	retlw	64
  5563  0904  343C               	retlw	60
  5564  0905  347C               	retlw	124
  5565  0906  3430               	retlw	48
  5566  0907  347C               	retlw	124
  5567  0908  346C               	retlw	108
  5568  0909  3410               	retlw	16
  5569  090A  346C               	retlw	108
  5570  090B  349C               	retlw	156
  5571  090C  34A0               	retlw	160
  5572  090D  347C               	retlw	124
  5573  090E  3464               	retlw	100
  5574  090F  3454               	retlw	84
  5575  0910  344C               	retlw	76
  5576  0911  340C               	retlw	12
  5577  0912  3412               	retlw	18
  5578  0913  340C               	retlw	12
  5579  0914  34FF               	retlw	255
  5580  0915  34FF               	retlw	255
  5581  0916  34FF               	retlw	255
  5582  0917  34FF               	retlw	255
  5583  0918  34FF               	retlw	255
  5584  0919  34FF               	retlw	255
  5585  091A  34FF               	retlw	255
  5586  091B  34FF               	retlw	255
  5587  091C  34FF               	retlw	255
  5588  091D  34FF               	retlw	255
  5589  091E  34FF               	retlw	255
  5590  091F  34FF               	retlw	255
  5591  0920  34FF               	retlw	255
  5592  0921  34FF               	retlw	255
  5593  0922  34FF               	retlw	255
  5594  0923  34FF               	retlw	255
  5595  0924  34FF               	retlw	255
  5596  0925  34FF               	retlw	255
  5597  0926  34FC               	retlw	252
  5598  0927  3440               	retlw	64
  5599  0928  347C               	retlw	124
  5600  0929  34FF               	retlw	255
  5601  092A  34FF               	retlw	255
  5602  092B  34FF               	retlw	255
  5603  092C  34FF               	retlw	255
  5604  092D  34FF               	retlw	255
  5605  092E  34FF               	retlw	255
  5606  092F                     __end_of_fonts:	
  5607                           
  5608                           	psect	stringtext2
  5609  1800                     __pstringtext2:	
  5610  1800                     log@coeff:	
  5611  1800  3400               	retlw	0
  5612  1801  3400               	retlw	0
  5613  1802  3400               	retlw	0
  5614  1803  3400               	retlw	0
  5615  1804  3480               	retlw	128
  5616  1805  343F               	retlw	63
  5617  1806  34F0               	retlw	240
  5618  1807  34FF               	retlw	255
  5619  1808  34BE               	retlw	190
  5620  1809  34E2               	retlw	226
  5621  180A  34A9               	retlw	169
  5622  180B  343E               	retlw	62
  5623  180C  3483               	retlw	131
  5624  180D  3476               	retlw	118
  5625  180E  34BE               	retlw	190
  5626  180F  34AE               	retlw	174
  5627  1810  342B               	retlw	43
  5628  1811  343E               	retlw	62
  5629  1812  343C               	retlw	60
  5630  1813  34C3               	retlw	195
  5631  1814  34BD               	retlw	189
  5632  1815  34D2               	retlw	210
  5633  1816  3413               	retlw	19
  5634  1817  343D               	retlw	61
  5635  1818  3478               	retlw	120
  5636  1819  34D3               	retlw	211
  5637  181A  34BB               	retlw	187
  5638  181B                     __end_oflog@coeff:	
  5639                           
  5640                           	psect	nvBANK1
  5641  00E4                     __pnvBANK1:	
  5642  00E4                     _Vref:	
  5643  00E4                     	ds	2
  5644  00E6                     _Iref:	
  5645  00E6                     	ds	2
  5646  00E8                     _state_counter:	
  5647  00E8                     	ds	2
  5648  00EA                     _IminCount:	
  5649  00EA                     	ds	2
  5650  00EC                     _battery_state:	
  5651  00EC                     	ds	1
  5652                           
  5653                           	psect	nvBANK2
  5654  0160                     __pnvBANK2:	
  5655  0160                     _Imin:	
  5656  0160                     	ds	2
  5657  0013                     _TRISC	set	19
  5658  0012                     _TRISB	set	18
  5659  0011                     _TRISA	set	17
  5660  0018                     _LATC	set	24
  5661  0017                     _LATB	set	23
  5662  0016                     _LATA	set	22
  5663  0016                     _LATAbits	set	22
  5664  0011                     _TRISAbits	set	17
  5665  00B5                     _LATA5	set	181
  5666  006A                     _RB2	set	106
  5667  005F                     _GIE	set	95
  5668  0093                     _ADCON0	set	147
  5669  009D                     _ADACQ	set	157
  5670  009C                     _ADPRE	set	156
  5671  009B                     _ADCAP	set	155
  5672  009A                     _ADREF	set	154
  5673  0098                     _ADCLK	set	152
  5674  0097                     _ADSTAT	set	151
  5675  0099                     _ADACT	set	153
  5676  0096                     _ADCON3	set	150
  5677  0095                     _ADCON2	set	149
  5678  0094                     _ADCON1	set	148
  5679  008C                     _ADRESL	set	140
  5680  008D                     _ADRESH	set	141
  5681  0093                     _ADCON0bits	set	147
  5682  009E                     _ADPCH	set	158
  5683  0113                     _ADSTPTH	set	275
  5684  0112                     _ADSTPTL	set	274
  5685  0111                     _ADUTHH	set	273
  5686  0110                     _ADUTHL	set	272
  5687  010F                     _ADLTHH	set	271
  5688  010E                     _ADLTHL	set	270
  5689  010D                     _ADRPT	set	269
  5690  021E                     _CCPTMRS0bits	set	542
  5691  021F                     _CCPTMRS1bits	set	543
  5692  0294                     _T4CONbits	set	660
  5693  0292                     _T4TMR	set	658
  5694  0293                     _T4PR	set	659
  5695  0297                     _T4RST	set	663
  5696  0295                     _T4HLT	set	661
  5697  0296                     _T4CLKCON	set	662
  5698  0294                     _T4CON	set	660
  5699  028E                     _T2CONbits	set	654
  5700  028C                     _T2TMR	set	652
  5701  028D                     _T2PR	set	653
  5702  0291                     _T2RST	set	657
  5703  028F                     _T2HLT	set	655
  5704  0290                     _T2CLKCON	set	656
  5705  028E                     _T2CON	set	654
  5706  030C                     _CCPR1L	set	780
  5707  030D                     _CCPR1H	set	781
  5708  030E                     _CCP1CONbits	set	782
  5709  0390                     _PWM7DCL	set	912
  5710  0391                     _PWM7DCH	set	913
  5711  0392                     _PWM7CON	set	914
  5712  038C                     _PWM6DCL	set	908
  5713  038D                     _PWM6DCH	set	909
  5714  038E                     _PWM6CON	set	910
  5715  0710                     _PIR4bits	set	1808
  5716  0716                     _PIE0bits	set	1814
  5717  0892                     _OSCTUNE	set	2194
  5718  0893                     _OSCFRQ	set	2195
  5719  0891                     _OSCEN	set	2193
  5720  088F                     _OSCCON3	set	2191
  5721  088D                     _OSCCON1	set	2189
  5722  090C                     _FVRCON	set	2316
  5723  0E8F                     _PPSLOCKbits	set	3727
  5724  0E8F                     _PPSLOCK	set	3727
  5725  0F18                     _RB0PPS	set	3864
  5726  0F17                     _RA7PPS	set	3863
  5727  0F16                     _RA6PPS	set	3862
  5728  0F4E                     _ANSELC	set	3918
  5729  0F43                     _ANSELB	set	3907
  5730  0F38                     _ANSELA	set	3896
  5731  0F65                     _WPUE	set	3941
  5732  0F4F                     _WPUC	set	3919
  5733  0F44                     _WPUB	set	3908
  5734  0F39                     _WPUA	set	3897
  5735                           
  5736                           ; #config settings
  5737  0000                     
  5738                           	psect	cinit
  5739  07C0                     start_initialization:	
  5740  07C0                     __initialization:		;BIGRAM
  5741                           
  5742                           ; Initialize objects allocated to BANK1
  5743  07C0  0021               	movlb	1	; select bank1
  5744  07C1  3180  200A  3187   	fcall	__pidataBANK1	;fetch initializer
  5745  07C4  00ED               	movwf	__pdataBANK1& (0+127)
  5746  07C5  3180  200B  3187   	fcall	__pidataBANK1+1	;fetch initializer
  5747  07C8  00EE               	movwf	(__pdataBANK1+1)& (0+127)
  5748                           
  5749                           ; Initialize objects allocated to BANK2
  5750  07C9  3066               	movlw	low __pidataBANK2
  5751  07CA  0084               	movwf	4
  5752  07CB  3094               	movlw	(high __pidataBANK2)| (0+128)
  5753  07CC  0085               	movwf	5
  5754  07CD  3050               	movlw	low __pdataBANK2
  5755  07CE  0086               	movwf	6
  5756  07CF  3001               	movlw	high __pdataBANK2
  5757  07D0  0087               	movwf	7
  5758  07D1  3000               	movlw	0
  5759  07D2  00FF               	movwf	btemp+1
  5760  07D3  3010               	movlw	16
  5761  07D4  3194  243E  3187   	fcall	init_ram
  5762                           
  5763                           ; Clear objects allocated to BIGRAM
  5764  07D7  3020               	movlw	low (0+8480)
  5765  07D8  0084               	movwf	4
  5766  07D9  3021               	movlw	high (0+8480)
  5767  07DA  0085               	movwf	5
  5768  07DB  30D0               	movlw	208
  5769  07DC  00FE               	movwf	btemp
  5770  07DD  3002               	movlw	2
  5771  07DE  00FF               	movwf	btemp+1
  5772  07DF  3194  2432  3187   	fcall	clear_ram0
  5773                           
  5774                           ; Clear objects allocated to BANK0
  5775  07E2  0020               	movlb	0	; select bank0
  5776  07E3  01EA               	clrf	__pbssBANK0& (0+127)
  5777  07E4  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  5778  07E5  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  5779  07E6  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  5780  07E7  01EE               	clrf	(__pbssBANK0+4)& (0+127)
  5781                           
  5782                           ; Clear objects allocated to BANK1
  5783  07E8  30C4               	movlw	low __pbssBANK1
  5784  07E9  0084               	movwf	4
  5785  07EA  3000               	movlw	high __pbssBANK1
  5786  07EB  0085               	movwf	5
  5787  07EC  3020               	movlw	32
  5788  07ED  00FE               	movwf	btemp
  5789  07EE  3000               	movlw	0
  5790  07EF  00FF               	movwf	btemp+1
  5791  07F0  3194  2432  3187   	fcall	clear_ram0
  5792                           
  5793                           ; Clear objects allocated to BANK2
  5794  07F3  3020               	movlw	low __pbssBANK2
  5795  07F4  0084               	movwf	4
  5796  07F5  3001               	movlw	high __pbssBANK2
  5797  07F6  0085               	movwf	5
  5798  07F7  3030               	movlw	48
  5799  07F8  00FE               	movwf	btemp
  5800  07F9  3000               	movlw	0
  5801  07FA  00FF               	movwf	btemp+1
  5802  07FB  3194  2432         	fcall	clear_ram0
  5803  07FD                     end_of_initialization:	
  5804                           ;End of C runtime variable initialization code
  5805                           
  5806  07FD                     __end_of__initialization:	
  5807  07FD  0020               	movlb	0
  5808  07FE  3182  2ABA         	ljmp	_main	;jump to C main() function
  5809                           
  5810                           	psect	bssBANK0
  5811  006A                     __pbssBANK0:	
  5812  006A                     _readButtons:	
  5813  006A                     	ds	2
  5814  006C                     _j:	
  5815  006C                     	ds	1
  5816  006D                     _lastButton:	
  5817  006D                     	ds	1
  5818  006E                     _button:	
  5819  006E                     	ds	1
  5820                           
  5821                           	psect	bssBANK1
  5822  00C4                     __pbssBANK1:	
  5823  00C4                     _current:	
  5824  00C4                     	ds	8
  5825  00CC                     _voltage:	
  5826  00CC                     	ds	8
  5827  00D4                     LCDWriteInt@F14396:	
  5828  00D4                     	ds	5
  5829  00D9                     _errno:	
  5830  00D9                     	ds	2
  5831  00DB                     _Iout:	
  5832  00DB                     	ds	2
  5833  00DD                     _warmup:	
  5834  00DD                     	ds	2
  5835  00DF                     _Iflat_db:	
  5836  00DF                     	ds	2
  5837  00E1                     _sampleIndex:	
  5838  00E1                     	ds	2
  5839  00E3                     _cc_cv:	
  5840  00E3                     	ds	1
  5841                           
  5842                           	psect	dataBANK1
  5843  00ED                     __pdataBANK1:	
  5844  00ED                     _Imode1:	
  5845  00ED                     	ds	1
  5846  00EE                     _Imode0:	
  5847  00EE                     	ds	1
  5848                           
  5849                           	psect	bssBANK2
  5850  0120                     __pbssBANK2:	
  5851  0120                     _totals:	
  5852  0120                     	ds	32
  5853  0140                     _analogs:	
  5854  0140                     	ds	16
  5855                           
  5856                           	psect	dataBANK2
  5857  0150                     __pdataBANK2:	
  5858  0150                     _channels:	
  5859  0150                     	ds	16
  5860                           
  5861                           	psect	inittext
  5862  143E                     init_ram:	
  5863  143E  00FE               	movwf	126
  5864  143F                     initloop:	
  5865  143F  0012               	moviw fsr0++
  5866  1440  001E               	movwi fsr1++
  5867  1441  3001               	movlw	1
  5868  1442  02FE               	subwf	126,f
  5869  1443  3000               	movlw	0
  5870  1444  3BFF               	subwfb	127,f
  5871  1445  087F               	movf	127,w
  5872  1446  047E               	iorwf	126,w
  5873  1447  1903               	btfsc	3,2
  5874  1448  3400               	retlw	0
  5875  1449  2C3F               	goto	initloop
  5876                           
  5877                           	psect	clrtext
  5878  1432                     clear_ram0:	
  5879                           ;	Called with FSR0 containing the base address, and
  5880                           ;	btemp/btemp+1 has the size to clear
  5881                           
  5882  1432  0064               	clrwdt	;clear the watchdog before getting into this loop
  5883  1433                     clrloop0:	
  5884  1433  0180               	clrf	0	;clear RAM location pointed to by FSR
  5885  1434  3101               	addfsr 0,1
  5886  1435  3001               	movlw	1
  5887  1436  02FE               	subwf	126,f
  5888  1437  3000               	movlw	0
  5889  1438  3BFF               	subwfb	127,f
  5890  1439  087F               	movf	127,w
  5891  143A  047E               	iorwf	126,w
  5892  143B  1903               	btfsc	3,2
  5893  143C  3400               	retlw	0	;all done for this memory range, return
  5894  143D  2C33               	goto	clrloop0	;have we reached the end yet?
  5895                           
  5896                           	psect	cstackBANK1
  5897  00A0                     __pcstackBANK1:	
  5898  00A0                     main@batteryTemp:	
  5899                           
  5900                           ; 2 bytes @ 0x0
  5901  00A0                     	ds	2
  5902  00A2                     main@fastLoop:	
  5903                           
  5904                           ; 1 bytes @ 0x2
  5905  00A2                     	ds	1
  5906  00A3                     _main$1296:	
  5907                           
  5908                           ; 3 bytes @ 0x3
  5909  00A3                     	ds	3
  5910  00A6                     main@MPPT1:	
  5911                           
  5912                           ; 2 bytes @ 0x6
  5913  00A6                     	ds	2
  5914  00A8                     main@faultCount:	
  5915                           
  5916                           ; 2 bytes @ 0x8
  5917  00A8                     	ds	2
  5918  00AA                     main@faultNotReset:	
  5919                           
  5920                           ; 2 bytes @ 0xA
  5921  00AA                     	ds	2
  5922  00AC                     main@slowLoop:	
  5923                           
  5924                           ; 1 bytes @ 0xC
  5925  00AC                     	ds	1
  5926  00AD                     main@displayRefresh:	
  5927                           
  5928                           ; 1 bytes @ 0xD
  5929  00AD                     	ds	1
  5930  00AE                     _main$1295:	
  5931                           
  5932                           ; 3 bytes @ 0xE
  5933  00AE                     	ds	3
  5934  00B1                     main@IOutTotal:	
  5935                           
  5936                           ; 2 bytes @ 0x11
  5937  00B1                     	ds	2
  5938  00B3                     _main$1297:	
  5939                           
  5940                           ; 2 bytes @ 0x13
  5941  00B3                     	ds	2
  5942  00B5                     _main$1298:	
  5943                           
  5944                           ; 2 bytes @ 0x15
  5945  00B5                     	ds	2
  5946  00B7                     main@efficiency:	
  5947                           
  5948                           ; 3 bytes @ 0x17
  5949  00B7                     	ds	3
  5950  00BA                     main@dutyCycle1:	
  5951                           
  5952                           ; 2 bytes @ 0x1A
  5953  00BA                     	ds	2
  5954  00BC                     main@menuButton:	
  5955                           
  5956                           ; 1 bytes @ 0x1C
  5957  00BC                     	ds	1
  5958  00BD                     main@dutyCycle7:	
  5959                           
  5960                           ; 2 bytes @ 0x1D
  5961  00BD                     	ds	2
  5962  00BF                     main@MPPT0:	
  5963                           
  5964                           ; 2 bytes @ 0x1F
  5965  00BF                     	ds	2
  5966  00C1                     main@j:	
  5967                           
  5968                           ; 1 bytes @ 0x21
  5969  00C1                     	ds	1
  5970  00C2                     main@dutyCycle6:	
  5971                           
  5972                           ; 2 bytes @ 0x22
  5973  00C2                     	ds	2
  5974                           
  5975                           	psect	cstackCOMMON
  5976  0070                     __pcstackCOMMON:	
  5977  0070                     ?___ftge:	
  5978  0070                     ?_LCDWrite:	
  5979                           ; 1 bit 
  5980                           
  5981  0070                     ?_OSCILLATOR_Initialize:	
  5982                           ; 1 bytes @ 0x0
  5983                           
  5984  0070                     ??_OSCILLATOR_Initialize:	
  5985                           ; 1 bytes @ 0x0
  5986                           
  5987  0070                     ?_TMR2_Initialize:	
  5988                           ; 1 bytes @ 0x0
  5989                           
  5990  0070                     ??_TMR2_Initialize:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ?_TMR4_Initialize:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ??_TMR4_Initialize:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ?_calculateCurrent0:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ?_calculateCurrent1:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ?_ADC_Initialize:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ??_ADC_Initialize:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ?_Init_Battery_State_Machine:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ??_Init_Battery_State_Machine:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ?_Battery_State_Machine:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ??_Battery_State_Machine:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     ?_cc_cv_mode:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     ??_cc_cv_mode:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     ?_LCDWriteCharacter:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032  0070                     ?_LCDClear:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0070                     ?_LCDInit:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0070                     ?_PIN_MANAGER_Initialize:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0070                     ??_PIN_MANAGER_Initialize:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0070                     ?_PWM_Initialize:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0070                     ??_PWM_Initialize:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0070                     ?_PWM6_LoadDutyValue:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0070                     ?_PWM7_LoadDutyValue:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0070                     ?_PWM1_LoadDutyValue:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0070                     ?_SYSTEM_Initialize:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0070                     ?_readButton:	
  6063                           ; 1 bytes @ 0x0
  6064                           
  6065  0070                     ?_main:	
  6066                           ; 1 bytes @ 0x0
  6067                           
  6068  0070                     ?_ADCRead:	
  6069                           ; 1 bytes @ 0x0
  6070                           
  6071  0070                     ?___awdiv:	
  6072                           ; 2 bytes @ 0x0
  6073                           
  6074  0070                     ?___lwmod:	
  6075                           ; 2 bytes @ 0x0
  6076                           
  6077  0070                     ?___ftpack:	
  6078                           ; 2 bytes @ 0x0
  6079                           
  6080  0070                     ?_frexp:	
  6081                           ; 3 bytes @ 0x0
  6082                           
  6083  0070                     ?___aldiv:	
  6084                           ; 3 bytes @ 0x0
  6085                           
  6086  0070                     LCDWrite@data:	
  6087                           ; 4 bytes @ 0x0
  6088                           
  6089  0070                     PIN_MANAGER_Initialize@state:	
  6090                           ; 1 bytes @ 0x0
  6091                           
  6092  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6093                           ; 1 bytes @ 0x0
  6094                           
  6095  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6096                           ; 2 bytes @ 0x0
  6097                           
  6098  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6099                           ; 2 bytes @ 0x0
  6100                           
  6101  0070                     ___awdiv@divisor:	
  6102                           ; 2 bytes @ 0x0
  6103                           
  6104  0070                     ___lwmod@divisor:	
  6105                           ; 2 bytes @ 0x0
  6106                           
  6107  0070                     ___ftpack@arg:	
  6108                           ; 2 bytes @ 0x0
  6109                           
  6110  0070                     ___ftge@ff1:	
  6111                           ; 3 bytes @ 0x0
  6112                           
  6113  0070                     frexp@value:	
  6114                           ; 3 bytes @ 0x0
  6115                           
  6116  0070                     ___aldiv@divisor:	
  6117                           ; 3 bytes @ 0x0
  6118                           
  6119                           
  6120                           ; 4 bytes @ 0x0
  6121  0070                     	ds	1
  6122  0071                     ??_LCDWrite:	
  6123                           
  6124                           ; 1 bytes @ 0x1
  6125  0071                     	ds	1
  6126  0072                     ??_PWM6_LoadDutyValue:	
  6127  0072                     ??_PWM7_LoadDutyValue:	
  6128                           ; 1 bytes @ 0x2
  6129                           
  6130  0072                     ??_PWM1_LoadDutyValue:	
  6131                           ; 1 bytes @ 0x2
  6132                           
  6133  0072                     LCDWrite@data_or_command:	
  6134                           ; 1 bytes @ 0x2
  6135                           
  6136  0072                     ___awdiv@dividend:	
  6137                           ; 1 bytes @ 0x2
  6138                           
  6139  0072                     ___lwmod@dividend:	
  6140                           ; 2 bytes @ 0x2
  6141                           
  6142                           
  6143                           ; 2 bytes @ 0x2
  6144  0072                     	ds	1
  6145  0073                     ??_ADCRead:	
  6146  0073                     ADCRead@channel:	
  6147                           ; 1 bytes @ 0x3
  6148                           
  6149  0073                     LCDWrite@d:	
  6150                           ; 1 bytes @ 0x3
  6151                           
  6152  0073                     ___ftpack@exp:	
  6153                           ; 1 bytes @ 0x3
  6154                           
  6155  0073                     frexp@eptr:	
  6156                           ; 1 bytes @ 0x3
  6157                           
  6158  0073                     ___ftge@ff2:	
  6159                           ; 1 bytes @ 0x3
  6160                           
  6161                           
  6162                           ; 3 bytes @ 0x3
  6163  0073                     	ds	1
  6164  0074                     ??_frexp:	
  6165  0074                     ??_readButton:	
  6166                           ; 1 bytes @ 0x4
  6167                           
  6168  0074                     ??___awdiv:	
  6169                           ; 1 bytes @ 0x4
  6170                           
  6171  0074                     ??___lwmod:	
  6172                           ; 1 bytes @ 0x4
  6173                           
  6174  0074                     LCDWrite@i:	
  6175                           ; 1 bytes @ 0x4
  6176                           
  6177  0074                     ___ftpack@sign:	
  6178                           ; 1 bytes @ 0x4
  6179                           
  6180  0074                     ___aldiv@dividend:	
  6181                           ; 1 bytes @ 0x4
  6182                           
  6183                           
  6184                           ; 4 bytes @ 0x4
  6185  0074                     	ds	1
  6186  0075                     ??___ftpack:	
  6187  0075                     ?_gotoXY:	
  6188                           ; 1 bytes @ 0x5
  6189                           
  6190  0075                     ??_LCDInit:	
  6191                           ; 1 bytes @ 0x5
  6192                           
  6193  0075                     gotoXY@y:	
  6194                           ; 1 bytes @ 0x5
  6195                           
  6196  0075                     ___awdiv@counter:	
  6197                           ; 1 bytes @ 0x5
  6198                           
  6199  0075                     ___lwmod@counter:	
  6200                           ; 1 bytes @ 0x5
  6201                           
  6202                           
  6203                           ; 1 bytes @ 0x5
  6204  0075                     	ds	1
  6205  0076                     ??_gotoXY:	
  6206  0076                     ??___ftge:	
  6207                           ; 1 bytes @ 0x6
  6208                           
  6209  0076                     ___awdiv@sign:	
  6210                           ; 1 bytes @ 0x6
  6211                           
  6212                           
  6213                           ; 1 bytes @ 0x6
  6214  0076                     	ds	1
  6215  0077                     gotoXY@x:	
  6216  0077                     ___awdiv@quotient:	
  6217                           ; 1 bytes @ 0x7
  6218                           
  6219                           
  6220                           ; 2 bytes @ 0x7
  6221  0077                     	ds	1
  6222  0078                     ??_LCDClear:	
  6223  0078                     ??___aldiv:	
  6224                           ; 1 bytes @ 0x8
  6225                           
  6226  0078                     ?___awtoft:	
  6227                           ; 1 bytes @ 0x8
  6228                           
  6229  0078                     ___awtoft@c:	
  6230                           ; 3 bytes @ 0x8
  6231                           
  6232                           
  6233                           ; 2 bytes @ 0x8
  6234  0078                     	ds	1
  6235  0079                     ?___wmul:	
  6236  0079                     LCDClear@index:	
  6237                           ; 2 bytes @ 0x9
  6238                           
  6239  0079                     ___wmul@multiplier:	
  6240                           ; 2 bytes @ 0x9
  6241                           
  6242                           
  6243                           ; 2 bytes @ 0x9
  6244  0079                     	ds	2
  6245  007B                     ??_SYSTEM_Initialize:	
  6246  007B                     ??___awtoft:	
  6247                           ; 1 bytes @ 0xB
  6248                           
  6249  007B                     ___wmul@multiplicand:	
  6250                           ; 1 bytes @ 0xB
  6251                           
  6252                           
  6253                           ; 2 bytes @ 0xB
  6254  007B                     	ds	2
  6255  007D                     ??___wmul:	
  6256  007D                     ___awtoft@sign:	
  6257                           ; 1 bytes @ 0xD
  6258                           
  6259                           
  6260                           ; 1 bytes @ 0xD
  6261  007D                     	ds	1
  6262  007E                     ??_eval_poly:	
  6263  007E                     ??_tempCalc:	
  6264                           ; 1 bytes @ 0xE
  6265                           
  6266  007E                     ??___ftsub:	
  6267                           ; 1 bytes @ 0xE
  6268                           
  6269                           
  6270                           	psect	cstackBANK0
  6271  0020                     __pcstackBANK0:	
  6272                           ; 1 bytes @ 0xE
  6273                           
  6274  0020                     ?___ftdiv:	
  6275  0020                     ___aldiv@counter:	
  6276                           ; 3 bytes @ 0x0
  6277                           
  6278  0020                     ___wmul@product:	
  6279                           ; 1 bytes @ 0x0
  6280                           
  6281  0020                     ___ftdiv@f2:	
  6282                           ; 2 bytes @ 0x0
  6283                           
  6284                           
  6285                           ; 3 bytes @ 0x0
  6286  0020                     	ds	1
  6287  0021                     ___aldiv@sign:	
  6288                           
  6289                           ; 1 bytes @ 0x1
  6290  0021                     	ds	1
  6291  0022                     ??_LCDWriteCharacter:	
  6292  0022                     ___aldiv@quotient:	
  6293                           ; 1 bytes @ 0x2
  6294                           
  6295                           
  6296                           ; 4 bytes @ 0x2
  6297  0022                     	ds	1
  6298  0023                     ___ftdiv@f1:	
  6299                           
  6300                           ; 3 bytes @ 0x3
  6301  0023                     	ds	2
  6302  0025                     LCDWriteCharacter@character:	
  6303                           
  6304                           ; 1 bytes @ 0x5
  6305  0025                     	ds	1
  6306  0026                     ??___ftdiv:	
  6307  0026                     ?_readAnalog:	
  6308                           ; 1 bytes @ 0x6
  6309                           
  6310  0026                     readAnalog@channel:	
  6311                           ; 2 bytes @ 0x6
  6312                           
  6313  0026                     LCDWriteCharacter@base:	
  6314                           ; 2 bytes @ 0x6
  6315                           
  6316                           
  6317                           ; 2 bytes @ 0x6
  6318  0026                     	ds	2
  6319  0028                     ??_readAnalog:	
  6320  0028                     ?_LCDWriteInt:	
  6321                           ; 1 bytes @ 0x8
  6322                           
  6323  0028                     LCDWriteInt@value:	
  6324                           ; 1 bytes @ 0x8
  6325                           
  6326                           
  6327                           ; 2 bytes @ 0x8
  6328  0028                     	ds	2
  6329  002A                     LCDWriteInt@fieldLength:	
  6330  002A                     ___ftdiv@cntr:	
  6331                           ; 1 bytes @ 0xA
  6332                           
  6333                           
  6334                           ; 1 bytes @ 0xA
  6335  002A                     	ds	1
  6336  002B                     LCDWriteInt@numPlaces:	
  6337  002B                     ___ftdiv@f3:	
  6338                           ; 1 bytes @ 0xB
  6339                           
  6340                           
  6341                           ; 3 bytes @ 0xB
  6342  002B                     	ds	1
  6343  002C                     LCDWriteInt@sign:	
  6344                           
  6345                           ; 1 bytes @ 0xC
  6346  002C                     	ds	1
  6347  002D                     ??_LCDWriteInt:	
  6348                           
  6349                           ; 1 bytes @ 0xD
  6350  002D                     	ds	1
  6351  002E                     ___ftdiv@exp:	
  6352                           
  6353                           ; 1 bytes @ 0xE
  6354  002E                     	ds	1
  6355  002F                     ___ftdiv@sign:	
  6356                           
  6357                           ; 1 bytes @ 0xF
  6358  002F                     	ds	1
  6359  0030                     ?___ftmul:	
  6360  0030                     ?___fttol:	
  6361                           ; 3 bytes @ 0x10
  6362                           
  6363  0030                     ___ftmul@f1:	
  6364                           ; 4 bytes @ 0x10
  6365                           
  6366  0030                     ___fttol@f1:	
  6367                           ; 3 bytes @ 0x10
  6368                           
  6369                           
  6370                           ; 3 bytes @ 0x10
  6371  0030                     	ds	1
  6372  0031                     LCDWriteInt@str:	
  6373                           
  6374                           ; 5 bytes @ 0x11
  6375  0031                     	ds	2
  6376  0033                     ___ftmul@f2:	
  6377                           
  6378                           ; 3 bytes @ 0x13
  6379  0033                     	ds	1
  6380  0034                     ??___fttol:	
  6381                           
  6382                           ; 1 bytes @ 0x14
  6383  0034                     	ds	2
  6384  0036                     ??___ftmul:	
  6385  0036                     LCDWriteInt@j:	
  6386                           ; 1 bytes @ 0x16
  6387                           
  6388                           
  6389                           ; 1 bytes @ 0x16
  6390  0036                     	ds	1
  6391  0037                     LCDWriteInt@i:	
  6392                           
  6393                           ; 1 bytes @ 0x17
  6394  0037                     	ds	1
  6395  0038                     ___fttol@sign1:	
  6396                           
  6397                           ; 1 bytes @ 0x18
  6398  0038                     	ds	1
  6399  0039                     ___fttol@lval:	
  6400                           
  6401                           ; 4 bytes @ 0x19
  6402  0039                     	ds	1
  6403  003A                     ___ftmul@exp:	
  6404  003A                     readAnalog@analog_channel:	
  6405                           ; 1 bytes @ 0x1A
  6406                           
  6407                           
  6408                           ; 2 bytes @ 0x1A
  6409  003A                     	ds	1
  6410  003B                     ___ftmul@f3_as_product:	
  6411                           
  6412                           ; 3 bytes @ 0x1B
  6413  003B                     	ds	1
  6414  003C                     readAnalog@value:	
  6415                           
  6416                           ; 2 bytes @ 0x1C
  6417  003C                     	ds	1
  6418  003D                     ___fttol@exp1:	
  6419                           
  6420                           ; 1 bytes @ 0x1D
  6421  003D                     	ds	1
  6422  003E                     ??_calculateCurrent0:	
  6423  003E                     ??_calculateCurrent1:	
  6424                           ; 1 bytes @ 0x1E
  6425                           
  6426  003E                     ___ftmul@cntr:	
  6427                           ; 1 bytes @ 0x1E
  6428                           
  6429                           
  6430                           ; 1 bytes @ 0x1E
  6431  003E                     	ds	1
  6432  003F                     ___ftmul@sign:	
  6433                           
  6434                           ; 1 bytes @ 0x1F
  6435  003F                     	ds	1
  6436  0040                     ?___ftadd:	
  6437  0040                     ___ftadd@f1:	
  6438                           ; 3 bytes @ 0x20
  6439                           
  6440                           
  6441                           ; 3 bytes @ 0x20
  6442  0040                     	ds	3
  6443  0043                     ___ftadd@f2:	
  6444                           
  6445                           ; 3 bytes @ 0x23
  6446  0043                     	ds	3
  6447  0046                     ??___ftadd:	
  6448                           
  6449                           ; 1 bytes @ 0x26
  6450  0046                     	ds	4
  6451  004A                     ___ftadd@sign:	
  6452                           
  6453                           ; 1 bytes @ 0x2A
  6454  004A                     	ds	1
  6455  004B                     ___ftadd@exp2:	
  6456                           
  6457                           ; 1 bytes @ 0x2B
  6458  004B                     	ds	1
  6459  004C                     ___ftadd@exp1:	
  6460                           
  6461                           ; 1 bytes @ 0x2C
  6462  004C                     	ds	1
  6463  004D                     ?_eval_poly:	
  6464  004D                     ?___ftsub:	
  6465                           ; 3 bytes @ 0x2D
  6466                           
  6467  004D                     ___ftsub@f2:	
  6468                           ; 3 bytes @ 0x2D
  6469                           
  6470  004D                     eval_poly@x:	
  6471                           ; 3 bytes @ 0x2D
  6472                           
  6473                           
  6474                           ; 3 bytes @ 0x2D
  6475  004D                     	ds	3
  6476  0050                     eval_poly@d:	
  6477  0050                     ___ftsub@f1:	
  6478                           ; 2 bytes @ 0x30
  6479                           
  6480                           
  6481                           ; 3 bytes @ 0x30
  6482  0050                     	ds	2
  6483  0052                     eval_poly@n:	
  6484                           
  6485                           ; 2 bytes @ 0x32
  6486  0052                     	ds	2
  6487  0054                     eval_poly@res:	
  6488                           
  6489                           ; 3 bytes @ 0x34
  6490  0054                     	ds	3
  6491  0057                     ?_log:	
  6492  0057                     log@x:	
  6493                           ; 3 bytes @ 0x37
  6494                           
  6495                           
  6496                           ; 3 bytes @ 0x37
  6497  0057                     	ds	3
  6498  005A                     ??_log:	
  6499                           
  6500                           ; 1 bytes @ 0x3A
  6501  005A                     	ds	1
  6502  005B                     log@exponent:	
  6503                           
  6504                           ; 2 bytes @ 0x3B
  6505  005B                     	ds	2
  6506  005D                     ?_tempCalc:	
  6507  005D                     tempCalc@analogValue:	
  6508                           ; 2 bytes @ 0x3D
  6509                           
  6510                           
  6511                           ; 2 bytes @ 0x3D
  6512  005D                     	ds	2
  6513  005F                     tempCalc@R:	
  6514                           
  6515                           ; 3 bytes @ 0x3F
  6516  005F                     	ds	3
  6517  0062                     _tempCalc$1294:	
  6518                           
  6519                           ; 3 bytes @ 0x42
  6520  0062                     	ds	3
  6521  0065                     tempCalc@steinhart:	
  6522                           
  6523                           ; 3 bytes @ 0x45
  6524  0065                     	ds	3
  6525  0068                     ??_main:	
  6526                           
  6527                           ; 1 bytes @ 0x48
  6528  0068                     	ds	2
  6529                           
  6530                           	psect	maintext
  6531  02BA                     __pmaintext:	
  6532 ;;
  6533 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6534 ;;
  6535 ;; *************** function _main *****************
  6536 ;; Defined at:
  6537 ;;		line 40 in file "main.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;		None
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  efficiency      3   23[BANK1 ] float 
  6542 ;;  dutyCycle6      2   34[BANK1 ] unsigned int 
  6543 ;;  MPPT0           2   31[BANK1 ] int 
  6544 ;;  dutyCycle7      2   29[BANK1 ] unsigned int 
  6545 ;;  dutyCycle1      2   26[BANK1 ] unsigned int 
  6546 ;;  IOutTotal       2   17[BANK1 ] int 
  6547 ;;  faultNotRese    2   10[BANK1 ] unsigned int 
  6548 ;;  faultCount      2    8[BANK1 ] unsigned int 
  6549 ;;  MPPT1           2    6[BANK1 ] int 
  6550 ;;  batteryTemp     2    0[BANK1 ] int 
  6551 ;;  j               1   33[BANK1 ] unsigned char 
  6552 ;;  menuButton      1   28[BANK1 ] unsigned char 
  6553 ;;  displayRefre    1   13[BANK1 ] unsigned char 
  6554 ;;  slowLoop        1   12[BANK1 ] unsigned char 
  6555 ;;  fastLoop        1    2[BANK1 ] unsigned char 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      void 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : B1F/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6566 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6567 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6568 ;;      Totals:         0       2      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;Total ram usage:       38 bytes
  6570 ;; Hardware stack levels required when called:    5
  6571 ;; This function calls:
  6572 ;;		_ADCRead
  6573 ;;		_Battery_State_Machine
  6574 ;;		_LCDClear
  6575 ;;		_LCDInit
  6576 ;;		_LCDWriteCharacter
  6577 ;;		_LCDWriteInt
  6578 ;;		_PWM1_LoadDutyValue
  6579 ;;		_PWM6_LoadDutyValue
  6580 ;;		_PWM7_LoadDutyValue
  6581 ;;		_SYSTEM_Initialize
  6582 ;;		___awdiv
  6583 ;;		___awtoft
  6584 ;;		___ftdiv
  6585 ;;		___ftmul
  6586 ;;		___fttol
  6587 ;;		___wmul
  6588 ;;		_calculateCurrent0
  6589 ;;		_calculateCurrent1
  6590 ;;		_cc_cv_mode
  6591 ;;		_gotoXY
  6592 ;;		_readAnalog
  6593 ;;		_readButton
  6594 ;;		_tempCalc
  6595 ;; This function is called by:
  6596 ;;		Startup code after reset
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           
  6601                           ;psect for function _main
  6602  02BA                     _main:	
  6603                           
  6604                           ;main.c: 42: int16_t MPPT0 = 3144;
  6605                           
  6606                           ;incstack = 0
  6607                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6608  02BA  3048               	movlw	72
  6609  02BB  0021               	movlb	1	; select bank1
  6610  02BC  00BF               	movwf	main@MPPT0^(0+128)
  6611  02BD  300C               	movlw	12
  6612  02BE  00C0               	movwf	(main@MPPT0^(0+128)+1)
  6613                           
  6614                           ;main.c: 43: int16_t MPPT1 = 3144;
  6615  02BF  3048               	movlw	72
  6616  02C0  00A6               	movwf	main@MPPT1^(0+128)
  6617  02C1  300C               	movlw	12
  6618  02C2  00A7               	movwf	(main@MPPT1^(0+128)+1)
  6619                           
  6620                           ;main.c: 45: uint16_t dutyCycle6 = 1023;
  6621  02C3  30FF               	movlw	255
  6622  02C4  00C2               	movwf	main@dutyCycle6^(0+128)
  6623  02C5  3003               	movlw	3
  6624  02C6  00C3               	movwf	(main@dutyCycle6^(0+128)+1)
  6625                           
  6626                           ;main.c: 46: uint16_t dutyCycle7 = 256;
  6627  02C7  3000               	movlw	0
  6628  02C8  00BD               	movwf	main@dutyCycle7^(0+128)
  6629  02C9  3001               	movlw	1
  6630  02CA  00BE               	movwf	(main@dutyCycle7^(0+128)+1)
  6631                           
  6632                           ;main.c: 47: uint16_t dutyCycle1 = 60;
  6633  02CB  303C               	movlw	60
  6634  02CC  00BA               	movwf	main@dutyCycle1^(0+128)
  6635  02CD  3000               	movlw	0
  6636  02CE  00BB               	movwf	(main@dutyCycle1^(0+128)+1)
  6637                           
  6638                           ;main.c: 48: int16_t IOutTotal = 0;
  6639  02CF  01B1               	clrf	main@IOutTotal^(0+128)
  6640  02D0  01B2               	clrf	(main@IOutTotal+1)^(0+128)
  6641                           
  6642                           ;main.c: 50: uint8_t j = 0;
  6643  02D1  01C1               	clrf	main@j^(0+128)
  6644                           
  6645                           ;main.c: 52: uint8_t fastLoop = 0;
  6646  02D2  01A2               	clrf	main@fastLoop^(0+128)
  6647                           
  6648                           ;main.c: 53: uint8_t slowLoop = 200;
  6649  02D3  30C8               	movlw	200
  6650  02D4  0020               	movlb	0	; select bank0
  6651  02D5  00E8               	movwf	??_main
  6652  02D6  0868               	movf	??_main,w
  6653  02D7  0021               	movlb	1	; select bank1
  6654  02D8  00AC               	movwf	main@slowLoop^(0+128)
  6655                           
  6656                           ;main.c: 54: uint8_t displayRefresh = 0;
  6657  02D9  01AD               	clrf	main@displayRefresh^(0+128)
  6658                           
  6659                           ;main.c: 55: int16_t batteryTemp = 250;
  6660  02DA  30FA               	movlw	250
  6661  02DB  00A0               	movwf	main@batteryTemp^(0+128)
  6662  02DC  3000               	movlw	0
  6663  02DD  00A1               	movwf	(main@batteryTemp^(0+128)+1)
  6664                           
  6665                           ;main.c: 56: float efficiency = 0;
  6666  02DE  3000               	movlw	0
  6667  02DF  00B7               	movwf	main@efficiency^(0+128)
  6668  02E0  3000               	movlw	0
  6669  02E1  00B8               	movwf	(main@efficiency+1)^(0+128)
  6670  02E2  3000               	movlw	0
  6671  02E3  00B9               	movwf	(main@efficiency+2)^(0+128)
  6672                           
  6673                           ;main.c: 57: extern int8_t Imode0;
  6674                           ;main.c: 58: extern int16_t Vref;
  6675                           ;main.c: 59: extern int16_t Iref;
  6676                           ;main.c: 60: uint8_t menuButton = 0;
  6677  02E4  01BC               	clrf	main@menuButton^(0+128)
  6678                           
  6679                           ;main.c: 61: uint16_t faultCount = 0;
  6680  02E5  01A8               	clrf	main@faultCount^(0+128)
  6681  02E6  01A9               	clrf	(main@faultCount+1)^(0+128)
  6682                           
  6683                           ;main.c: 62: uint16_t faultNotReset = 0;
  6684  02E7  01AA               	clrf	main@faultNotReset^(0+128)
  6685  02E8  01AB               	clrf	(main@faultNotReset+1)^(0+128)
  6686                           
  6687                           ;main.c: 64: SYSTEM_Initialize();
  6688  02E9  3196  260D  3182   	fcall	_SYSTEM_Initialize
  6689                           
  6690                           ;main.c: 66: LCDClear();
  6691  02EC  3195  25BB  3182   	fcall	_LCDClear
  6692  02EF                     l3015:	
  6693                           ;main.c: 68: void calculateCurrent0(void);
  6694                           ;main.c: 69: void calculateCurrent1(void);
  6695                           ;main.c: 70: void calculateCurrent2(void);
  6696                           ;main.c: 71: void calculateCurrent3(void);
  6697                           ;main.c: 85: while (1)
  6698                           
  6699                           
  6700                           ;main.c: 86: {
  6701                           ;main.c: 87: if(!RB2)
  6702  02EF  0020               	movlb	0	; select bank0
  6703  02F0  190D               	btfsc	13,2	;volatile
  6704  02F1  2B09               	goto	l3027
  6705                           
  6706                           ;main.c: 88: {
  6707                           ;main.c: 89: LATA5=0;
  6708  02F2  1296               	bcf	22,5	;volatile
  6709                           
  6710                           ;main.c: 90: _delay((unsigned long)((200)*(32000000/4000000.0)));
  6711  02F3  30E4               	movlw	228
  6712  02F4                     u3697:	
  6713  02F4  3200               	nop2
  6714  02F5  3200               	nop2
  6715  02F6  0B89               	decfsz	9,f
  6716  02F7  2AF4               	goto	u3697
  6717  02F8  3200               	nop2
  6718  02F9  3200               	nop2
  6719                           
  6720                           ;main.c: 91: faultCount+=1;
  6721  02FA  3001               	movlw	1
  6722  02FB  0021               	movlb	1	; select bank1
  6723  02FC  07A8               	addwf	main@faultCount^(0+128),f
  6724  02FD  3000               	movlw	0
  6725  02FE  3DA9               	addwfc	(main@faultCount+1)^(0+128),f
  6726                           
  6727                           ;main.c: 92: if(!RB2)
  6728  02FF  0020               	movlb	0	; select bank0
  6729  0300  190D               	btfsc	13,2	;volatile
  6730  0301  2B07               	goto	l3025
  6731                           
  6732                           ;main.c: 93: {
  6733                           ;main.c: 94: faultNotReset+=1;
  6734  0302  3001               	movlw	1
  6735  0303  0021               	movlb	1	; select bank1
  6736  0304  07AA               	addwf	main@faultNotReset^(0+128),f
  6737  0305  3000               	movlw	0
  6738  0306  3DAB               	addwfc	(main@faultNotReset+1)^(0+128),f
  6739  0307                     l3025:	
  6740                           
  6741                           ;main.c: 95: }
  6742                           ;main.c: 96: LATA5=1;
  6743  0307  0020               	movlb	0	; select bank0
  6744  0308  1696               	bsf	22,5	;volatile
  6745  0309                     l3027:	
  6746                           
  6747                           ;main.c: 97: }
  6748                           ;main.c: 98: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  6749  0309  0021               	movlb	1	; select bank1
  6750  030A  01C1               	clrf	main@j^(0+128)
  6751  030B  3008               	movlw	8
  6752  030C  0241               	subwf	main@j^(0+128),w
  6753  030D  1803               	btfsc	3,0
  6754  030E  2B2E               	goto	l3039
  6755  030F                     l3033:	
  6756  030F  0841               	movf	main@j^(0+128),w
  6757  0310  0020               	movlb	0	; select bank0
  6758  0311  00E8               	movwf	??_main
  6759  0312  01E9               	clrf	??_main+1
  6760  0313  0868               	movf	??_main,w
  6761  0314  00A6               	movwf	readAnalog@channel
  6762  0315  0869               	movf	??_main+1,w
  6763  0316  00A7               	movwf	readAnalog@channel+1
  6764  0317  3181  216E  3182   	fcall	_readAnalog
  6765  031A  0021               	movlb	1	; select bank1
  6766  031B  3541               	lslf	main@j^(0+128),w
  6767  031C  3E40               	addlw	(low (_analogs| (0+256)))& (0+255)
  6768  031D  0086               	movwf	6
  6769  031E  3001               	movlw	1	; select bank2/3
  6770  031F  0087               	movwf	7
  6771  0320  0020               	movlb	0	; select bank0
  6772  0321  0826               	movf	?_readAnalog,w
  6773  0322  3FC0               	movwi [0]fsr1
  6774  0323  0827               	movf	?_readAnalog+1,w
  6775  0324  3FC1               	movwi [1]fsr1
  6776  0325  3001               	movlw	1
  6777  0326  00E8               	movwf	??_main
  6778  0327  0868               	movf	??_main,w
  6779  0328  0021               	movlb	1	; select bank1
  6780  0329  07C1               	addwf	main@j^(0+128),f
  6781  032A  3008               	movlw	8
  6782  032B  0241               	subwf	main@j^(0+128),w
  6783  032C  1C03               	skipc
  6784  032D  2B0F               	goto	l3033
  6785  032E                     l3039:	
  6786                           
  6787                           ;main.c: 101: voltage[0]=(int16_t)(analogs[0]/.20885);
  6788  032E  0022               	movlb	2	; select bank2
  6789  032F  0841               	movf	(_analogs+1)^(0+256),w
  6790  0330  00F9               	movwf	___awtoft@c+1
  6791  0331  0840               	movf	_analogs^(0+256),w
  6792  0332  00F8               	movwf	___awtoft@c
  6793  0333  3195  2576  3182   	fcall	___awtoft
  6794  0336  0878               	movf	?___awtoft,w
  6795  0337  0020               	movlb	0	; select bank0
  6796  0338  00A3               	movwf	___ftdiv@f1
  6797  0339  0879               	movf	?___awtoft+1,w
  6798  033A  00A4               	movwf	___ftdiv@f1+1
  6799  033B  087A               	movf	?___awtoft+2,w
  6800  033C  00A5               	movwf	___ftdiv@f1+2
  6801  033D  30DD               	movlw	221
  6802  033E  00A0               	movwf	___ftdiv@f2
  6803  033F  3055               	movlw	85
  6804  0340  00A1               	movwf	___ftdiv@f2+1
  6805  0341  303E               	movlw	62
  6806  0342  00A2               	movwf	___ftdiv@f2+2
  6807  0343  318C  2444  3182   	fcall	___ftdiv
  6808  0346  0020               	movlb	0	; select bank0
  6809  0347  0820               	movf	?___ftdiv,w
  6810  0348  00B0               	movwf	___fttol@f1
  6811  0349  0821               	movf	?___ftdiv+1,w
  6812  034A  00B1               	movwf	___fttol@f1+1
  6813  034B  0822               	movf	?___ftdiv+2,w
  6814  034C  00B2               	movwf	___fttol@f1+2
  6815  034D  318B  23BD  3182   	fcall	___fttol
  6816  0350  0020               	movlb	0	; select bank0
  6817  0351  0831               	movf	?___fttol+1,w
  6818  0352  0021               	movlb	1	; select bank1
  6819  0353  00CD               	movwf	(_voltage+1)^(0+128)
  6820  0354  0020               	movlb	0	; select bank0
  6821  0355  0830               	movf	?___fttol,w
  6822  0356  0021               	movlb	1	; select bank1
  6823  0357  00CC               	movwf	_voltage^(0+128)
  6824                           
  6825                           ;main.c: 103: voltage[1]=(int16_t)(analogs[1]/.54503);
  6826  0358  0022               	movlb	2	; select bank2
  6827  0359  0843               	movf	((_analogs+1)^(0+256)+2),w
  6828  035A  00F9               	movwf	___awtoft@c+1
  6829  035B  0842               	movf	(_analogs^(0+256)+2),w
  6830  035C  00F8               	movwf	___awtoft@c
  6831  035D  3195  2576  3182   	fcall	___awtoft
  6832  0360  0878               	movf	?___awtoft,w
  6833  0361  0020               	movlb	0	; select bank0
  6834  0362  00A3               	movwf	___ftdiv@f1
  6835  0363  0879               	movf	?___awtoft+1,w
  6836  0364  00A4               	movwf	___ftdiv@f1+1
  6837  0365  087A               	movf	?___awtoft+2,w
  6838  0366  00A5               	movwf	___ftdiv@f1+2
  6839  0367  3087               	movlw	135
  6840  0368  00A0               	movwf	___ftdiv@f2
  6841  0369  300B               	movlw	11
  6842  036A  00A1               	movwf	___ftdiv@f2+1
  6843  036B  303F               	movlw	63
  6844  036C  00A2               	movwf	___ftdiv@f2+2
  6845  036D  318C  2444  3182   	fcall	___ftdiv
  6846  0370  0020               	movlb	0	; select bank0
  6847  0371  0820               	movf	?___ftdiv,w
  6848  0372  00B0               	movwf	___fttol@f1
  6849  0373  0821               	movf	?___ftdiv+1,w
  6850  0374  00B1               	movwf	___fttol@f1+1
  6851  0375  0822               	movf	?___ftdiv+2,w
  6852  0376  00B2               	movwf	___fttol@f1+2
  6853  0377  318B  23BD  3182   	fcall	___fttol
  6854  037A  0020               	movlb	0	; select bank0
  6855  037B  0831               	movf	?___fttol+1,w
  6856  037C  0021               	movlb	1	; select bank1
  6857  037D  00CF               	movwf	((_voltage+1)^(0+128)+2)
  6858  037E  0020               	movlb	0	; select bank0
  6859  037F  0830               	movf	?___fttol,w
  6860  0380  0021               	movlb	1	; select bank1
  6861  0381  00CE               	movwf	(_voltage^(0+128)+2)
  6862                           
  6863                           ;main.c: 109: calculateCurrent0();
  6864  0382  3197  276A  3182   	fcall	_calculateCurrent0
  6865                           
  6866                           ;main.c: 112: calculateCurrent1();
  6867  0385  3180  200C  3182   	fcall	_calculateCurrent1
  6868                           
  6869                           ;main.c: 117: if(Imode0)
  6870  0388  0021               	movlb	1	; select bank1
  6871  0389  086E               	movf	_Imode0^(0+128),w
  6872  038A  1903               	btfsc	3,2
  6873  038B  2B9B               	goto	l3057
  6874                           
  6875                           ;main.c: 118: {
  6876                           ;main.c: 119: if(voltage[0]<MPPT0)
  6877  038C  084D               	movf	(_voltage+1)^(0+128),w
  6878  038D  3A80               	xorlw	128
  6879  038E  0020               	movlb	0	; select bank0
  6880  038F  00E8               	movwf	??_main
  6881  0390  0021               	movlb	1	; select bank1
  6882  0391  0840               	movf	(main@MPPT0+1)^(0+128),w
  6883  0392  3A80               	xorlw	128
  6884  0393  0020               	movlb	0	; select bank0
  6885  0394  0268               	subwf	??_main,w
  6886  0395  1D03               	skipz
  6887  0396  2BA9               	goto	u3545
  6888  0397  0021               	movlb	1	; select bank1
  6889  0398  083F               	movf	main@MPPT0^(0+128),w
  6890  0399  024C               	subwf	_voltage^(0+128),w
  6891  039A  2BA9               	goto	u3545
  6892  039B                     l3057:	
  6893                           ;main.c: 141: }
  6894                           ;main.c: 142: }
  6895                           
  6896                           ;main.c: 139: {
  6897                           
  6898                           ;main.c: 136: }
  6899                           ;main.c: 137: }
  6900                           
  6901                           ;main.c: 134: {
  6902                           
  6903                           ;main.c: 127: {
  6904                           ;main.c: 128: dutyCycle6-=1;
  6905                           
  6906                           ;main.c: 126: else if(dutyCycle6>0)
  6907                           
  6908                           ;main.c: 124: }
  6909                           ;main.c: 125: }
  6910                           
  6911                           ;main.c: 122: {
  6912                           ;main.c: 123: dutyCycle6+=1;
  6913                           
  6914                           ;main.c: 120: {
  6915                           ;main.c: 121: if(dutyCycle6<1023)
  6916                           
  6917                           
  6918                           ;main.c: 143: else
  6919                           ;main.c: 144: {
  6920                           ;main.c: 145: if(voltage[1]>(int16_t)Vref)
  6921  039B  0865               	movf	(_Vref+1)^(0+128),w
  6922  039C  3A80               	xorlw	128
  6923  039D  0020               	movlb	0	; select bank0
  6924  039E  00E8               	movwf	??_main
  6925  039F  0021               	movlb	1	; select bank1
  6926  03A0  084F               	movf	((_voltage+1)^(0+128)+2),w
  6927  03A1  3A80               	xorlw	128
  6928  03A2  0020               	movlb	0	; select bank0
  6929  03A3  0268               	subwf	??_main,w
  6930  03A4  1D03               	skipz
  6931  03A5  2BA9               	goto	u3545
  6932  03A6  0021               	movlb	1	; select bank1
  6933  03A7  084E               	movf	(_voltage^(0+128)+2),w
  6934  03A8  0264               	subwf	_Vref^(0+128),w
  6935  03A9                     u3545:	
  6936  03A9  1803               	skipnc
  6937  03AA  2BB8               	goto	l3063
  6938                           
  6939                           ;main.c: 146: {
  6940                           ;main.c: 147: if(dutyCycle6<1023) dutyCycle6+=1;
  6941  03AB  3003               	movlw	3
  6942  03AC  0021               	movlb	1	; select bank1
  6943  03AD  0243               	subwf	(main@dutyCycle6+1)^(0+128),w
  6944  03AE  30FF               	movlw	255
  6945  03AF  1903               	skipnz
  6946  03B0  0242               	subwf	main@dutyCycle6^(0+128),w
  6947  03B1  1803               	skipnc
  6948  03B2  2BC1               	goto	l3069
  6949  03B3  3001               	movlw	1
  6950  03B4  07C2               	addwf	main@dutyCycle6^(0+128),f
  6951  03B5  3000               	movlw	0
  6952  03B6  3DC3               	addwfc	(main@dutyCycle6+1)^(0+128),f
  6953                           
  6954                           ;main.c: 148: }
  6955  03B7  2BC1               	goto	l3069
  6956  03B8                     l3063:	
  6957                           
  6958                           ;main.c: 149: else
  6959                           ;main.c: 150: {
  6960                           ;main.c: 151: if(dutyCycle6>0) dutyCycle6-=1;;
  6961  03B8  0021               	movlb	1	; select bank1
  6962  03B9  0842               	movf	main@dutyCycle6^(0+128),w
  6963  03BA  0443               	iorwf	(main@dutyCycle6+1)^(0+128),w
  6964  03BB  1903               	btfsc	3,2
  6965  03BC  2BC1               	goto	l3069
  6966  03BD  3001               	movlw	1
  6967  03BE  02C2               	subwf	main@dutyCycle6^(0+128),f
  6968  03BF  3000               	movlw	0
  6969  03C0  3BC3               	subwfb	(main@dutyCycle6+1)^(0+128),f
  6970  03C1                     l3069:	
  6971                           ;main.c: 158: else
  6972                           ;main.c: 159: {
  6973                           
  6974                           ;main.c: 155: {
  6975                           ;main.c: 157: }
  6976                           
  6977                           
  6978                           ;main.c: 161: }
  6979                           ;main.c: 163: }
  6980                           ;main.c: 165: slowLoop+=1;
  6981  03C1  3001               	movlw	1
  6982  03C2  0020               	movlb	0	; select bank0
  6983  03C3  00E8               	movwf	??_main
  6984  03C4  0868               	movf	??_main,w
  6985  03C5  0021               	movlb	1	; select bank1
  6986  03C6  07AC               	addwf	main@slowLoop^(0+128),f
  6987                           
  6988                           ;main.c: 167: PWM1_LoadDutyValue(dutyCycle1);
  6989  03C7  083B               	movf	(main@dutyCycle1+1)^(0+128),w
  6990  03C8  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  6991  03C9  083A               	movf	main@dutyCycle1^(0+128),w
  6992  03CA  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  6993  03CB  3194  249E  3182   	fcall	_PWM1_LoadDutyValue
  6994                           
  6995                           ;main.c: 168: PWM6_LoadDutyValue(dutyCycle6);
  6996  03CE  0021               	movlb	1	; select bank1
  6997  03CF  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  6998  03D0  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6999  03D1  0842               	movf	main@dutyCycle6^(0+128),w
  7000  03D2  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7001  03D3  3194  24B4  3182   	fcall	_PWM6_LoadDutyValue
  7002                           
  7003                           ;main.c: 169: PWM7_LoadDutyValue(dutyCycle7);
  7004  03D6  0021               	movlb	1	; select bank1
  7005  03D7  083E               	movf	(main@dutyCycle7+1)^(0+128),w
  7006  03D8  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7007  03D9  083D               	movf	main@dutyCycle7^(0+128),w
  7008  03DA  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7009  03DB  3194  24CA  3182   	fcall	_PWM7_LoadDutyValue
  7010                           
  7011                           ;main.c: 171: menuButton = readButton();
  7012  03DE  318B  233B  3182   	fcall	_readButton
  7013  03E1  0020               	movlb	0	; select bank0
  7014  03E2  00E8               	movwf	??_main
  7015  03E3  0868               	movf	??_main,w
  7016  03E4  0021               	movlb	1	; select bank1
  7017  03E5  00BC               	movwf	main@menuButton^(0+128)
  7018                           
  7019                           ;main.c: 172: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  7020  03E6  3002               	movlw	2
  7021  03E7  063C               	xorwf	main@menuButton^(0+128),w
  7022  03E8  1D03               	btfss	3,2
  7023  03E9  2BFC               	goto	l3083
  7024  03EA  0840               	movf	(main@MPPT0+1)^(0+128),w
  7025  03EB  3A80               	xorlw	128
  7026  03EC  0020               	movlb	0	; select bank0
  7027  03ED  00E8               	movwf	??_main
  7028  03EE  308A               	movlw	138
  7029  03EF  0268               	subwf	??_main,w
  7030  03F0  1D03               	skipz
  7031  03F1  2BF5               	goto	u3585
  7032  03F2  30F1               	movlw	241
  7033  03F3  0021               	movlb	1	; select bank1
  7034  03F4  023F               	subwf	main@MPPT0^(0+128),w
  7035  03F5                     u3585:	
  7036  03F5  1C03               	skipc
  7037  03F6  2BFC               	goto	l3083
  7038  03F7  30F6               	movlw	246
  7039  03F8  0021               	movlb	1	; select bank1
  7040  03F9  07BF               	addwf	main@MPPT0^(0+128),f
  7041  03FA  30FF               	movlw	255
  7042  03FB  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7043  03FC                     l3083:	
  7044                           
  7045                           ;main.c: 173: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  7046  03FC  3003               	movlw	3
  7047  03FD  0021               	movlb	1	; select bank1
  7048  03FE  063C               	xorwf	main@menuButton^(0+128),w
  7049  03FF  1D03               	btfss	3,2
  7050  0400  2C13               	goto	l3089
  7051  0401  0840               	movf	(main@MPPT0+1)^(0+128),w
  7052  0402  3A80               	xorlw	128
  7053  0403  0020               	movlb	0	; select bank0
  7054  0404  00E8               	movwf	??_main
  7055  0405  308D               	movlw	141
  7056  0406  0268               	subwf	??_main,w
  7057  0407  1D03               	skipz
  7058  0408  2C0C               	goto	u3605
  7059  0409  3048               	movlw	72
  7060  040A  0021               	movlb	1	; select bank1
  7061  040B  023F               	subwf	main@MPPT0^(0+128),w
  7062  040C                     u3605:	
  7063  040C  1803               	skipnc
  7064  040D  2C13               	goto	l3089
  7065  040E  300A               	movlw	10
  7066  040F  0021               	movlb	1	; select bank1
  7067  0410  07BF               	addwf	main@MPPT0^(0+128),f
  7068  0411  3000               	movlw	0
  7069  0412  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7070  0413                     l3089:	
  7071                           
  7072                           ;main.c: 174: if(menuButton == 1)LCDInit();
  7073  0413  0021               	movlb	1	; select bank1
  7074  0414  033C               	decf	main@menuButton^(0+128),w
  7075  0415  1D03               	btfss	3,2
  7076  0416  2C1A               	goto	l3093
  7077  0417  3196  2678  3182   	fcall	_LCDInit
  7078  041A                     l3093:	
  7079                           
  7080                           ;main.c: 178: if(slowLoop>50)
  7081  041A  3033               	movlw	51
  7082  041B  0021               	movlb	1	; select bank1
  7083  041C  022C               	subwf	main@slowLoop^(0+128),w
  7084  041D  1C03               	skipc
  7085  041E  2AEF               	goto	l3015
  7086                           
  7087                           ;main.c: 179: {
  7088                           ;main.c: 181: IOutTotal=current[1]+current[3];
  7089  041F  3006               	movlw	6
  7090  0420  3EC4               	addlw	(low (_current| 0))& (0+255)
  7091  0421  0086               	movwf	6
  7092  0422  0187               	clrf	7
  7093  0423  3002               	movlw	2
  7094  0424  3EC4               	addlw	(low (_current| 0))& (0+255)
  7095  0425  0084               	movwf	4
  7096  0426  0185               	clrf	5
  7097  0427  3F40               	moviw [0]fsr1
  7098  0428  0700               	addwf	0,w
  7099  0429  00B1               	movwf	main@IOutTotal^(0+128)
  7100  042A  3101               	addfsr 0,1
  7101  042B  3F41               	moviw [1]fsr1
  7102  042C  3D00               	addwfc	0,w
  7103  042D  00B2               	movwf	(main@IOutTotal^(0+128)+1)
  7104                           
  7105                           ;main.c: 183: if(IOutTotal>20)
  7106  042E  0832               	movf	(main@IOutTotal+1)^(0+128),w
  7107  042F  3A80               	xorlw	128
  7108  0430  0020               	movlb	0	; select bank0
  7109  0431  00E8               	movwf	??_main
  7110  0432  3080               	movlw	128
  7111  0433  0268               	subwf	??_main,w
  7112  0434  1D03               	skipz
  7113  0435  2C39               	goto	u3635
  7114  0436  3015               	movlw	21
  7115  0437  0021               	movlb	1	; select bank1
  7116  0438  0231               	subwf	main@IOutTotal^(0+128),w
  7117  0439                     u3635:	
  7118  0439  1C03               	skipc
  7119  043A  2C4F               	goto	l3101
  7120                           
  7121                           ;main.c: 184: {
  7122                           ;main.c: 185: dutyCycle1=(uint16_t)IOutTotal/2+10;
  7123  043B  0021               	movlb	1	; select bank1
  7124  043C  0832               	movf	(main@IOutTotal+1)^(0+128),w
  7125  043D  0020               	movlb	0	; select bank0
  7126  043E  00E9               	movwf	??_main+1
  7127  043F  0021               	movlb	1	; select bank1
  7128  0440  0831               	movf	main@IOutTotal^(0+128),w
  7129  0441  0020               	movlb	0	; select bank0
  7130  0442  00E8               	movwf	??_main
  7131  0443  36E9               	lsrf	??_main+1,f
  7132  0444  0CE8               	rrf	??_main,f
  7133  0445  0868               	movf	??_main,w
  7134  0446  3E0A               	addlw	10
  7135  0447  0021               	movlb	1	; select bank1
  7136  0448  00BA               	movwf	main@dutyCycle1^(0+128)
  7137  0449  3000               	movlw	0
  7138  044A  0020               	movlb	0	; select bank0
  7139  044B  3D69               	addwfc	??_main+1,w
  7140  044C  0021               	movlb	1	; select bank1
  7141  044D  00BB               	movwf	(main@dutyCycle1+1)^(0+128)
  7142                           
  7143                           ;main.c: 186: }
  7144  044E  2C52               	goto	l3103
  7145  044F                     l3101:	
  7146                           
  7147                           ;main.c: 187: else
  7148                           ;main.c: 188: {
  7149                           ;main.c: 189: dutyCycle1=0;
  7150  044F  0021               	movlb	1	; select bank1
  7151  0450  01BA               	clrf	main@dutyCycle1^(0+128)
  7152  0451  01BB               	clrf	(main@dutyCycle1+1)^(0+128)
  7153  0452                     l3103:	
  7154                           
  7155                           ;main.c: 190: }
  7156                           ;main.c: 191: if(!RB2==1)dutyCycle1=55;
  7157  0452  0020               	movlb	0	; select bank0
  7158  0453  190D               	btfsc	13,2	;volatile
  7159  0454  2C5A               	goto	l3107
  7160  0455  3037               	movlw	55
  7161  0456  0021               	movlb	1	; select bank1
  7162  0457  00BA               	movwf	main@dutyCycle1^(0+128)
  7163  0458  3000               	movlw	0
  7164  0459  00BB               	movwf	(main@dutyCycle1^(0+128)+1)
  7165  045A                     l3107:	
  7166                           
  7167                           ;main.c: 194: displayRefresh+=1;
  7168  045A  3001               	movlw	1
  7169  045B  0020               	movlb	0	; select bank0
  7170  045C  00E8               	movwf	??_main
  7171  045D  0868               	movf	??_main,w
  7172  045E  0021               	movlb	1	; select bank1
  7173  045F  07AD               	addwf	main@displayRefresh^(0+128),f
  7174                           
  7175                           ;main.c: 195: if(displayRefresh>80)
  7176  0460  3051               	movlw	81
  7177  0461  022D               	subwf	main@displayRefresh^(0+128),w
  7178  0462  1C03               	skipc
  7179  0463  2C7D               	goto	l3117
  7180                           
  7181                           ;main.c: 196: {
  7182                           ;main.c: 197: LCDClear();
  7183  0464  3195  25BB  3182   	fcall	_LCDClear
  7184                           
  7185                           ;main.c: 198: displayRefresh=0;
  7186  0467  0021               	movlb	1	; select bank1
  7187  0468  01AD               	clrf	main@displayRefresh^(0+128)
  7188                           
  7189                           ;main.c: 199: batteryTemp=tempCalc(ADCRead(9));
  7190  0469  3009               	movlw	9
  7191  046A  3194  2489  3182   	fcall	_ADCRead
  7192  046D  0871               	movf	?_ADCRead+1,w
  7193  046E  0020               	movlb	0	; select bank0
  7194  046F  00DE               	movwf	tempCalc@analogValue+1
  7195  0470  0870               	movf	?_ADCRead,w
  7196  0471  00DD               	movwf	tempCalc@analogValue
  7197  0472  3180  2051  3182   	fcall	_tempCalc
  7198  0475  0020               	movlb	0	; select bank0
  7199  0476  085E               	movf	?_tempCalc+1,w
  7200  0477  0021               	movlb	1	; select bank1
  7201  0478  00A1               	movwf	(main@batteryTemp+1)^(0+128)
  7202  0479  0020               	movlb	0	; select bank0
  7203  047A  085D               	movf	?_tempCalc,w
  7204  047B  0021               	movlb	1	; select bank1
  7205  047C  00A0               	movwf	main@batteryTemp^(0+128)
  7206  047D                     l3117:	
  7207                           
  7208                           ;main.c: 206: }
  7209                           ;main.c: 207: Battery_State_Machine();
  7210  047D  318A  2252  3182   	fcall	_Battery_State_Machine
  7211                           
  7212                           ;main.c: 208: efficiency=(float)voltage[1]/100*current[1]/10;
  7213  0480  0021               	movlb	1	; select bank1
  7214  0481  0847               	movf	((_current+1)^(0+128)+2),w
  7215  0482  00F9               	movwf	___awtoft@c+1
  7216  0483  0846               	movf	(_current^(0+128)+2),w
  7217  0484  00F8               	movwf	___awtoft@c
  7218  0485  3195  2576  3182   	fcall	___awtoft
  7219  0488  0878               	movf	?___awtoft,w
  7220  0489  0020               	movlb	0	; select bank0
  7221  048A  00B0               	movwf	___ftmul@f1
  7222  048B  0879               	movf	?___awtoft+1,w
  7223  048C  00B1               	movwf	___ftmul@f1+1
  7224  048D  087A               	movf	?___awtoft+2,w
  7225  048E  00B2               	movwf	___ftmul@f1+2
  7226  048F  3000               	movlw	0
  7227  0490  00A0               	movwf	___ftdiv@f2
  7228  0491  30C8               	movlw	200
  7229  0492  00A1               	movwf	___ftdiv@f2+1
  7230  0493  3042               	movlw	66
  7231  0494  00A2               	movwf	___ftdiv@f2+2
  7232  0495  0021               	movlb	1	; select bank1
  7233  0496  084F               	movf	((_voltage+1)^(0+128)+2),w
  7234  0497  00F9               	movwf	___awtoft@c+1
  7235  0498  084E               	movf	(_voltage^(0+128)+2),w
  7236  0499  00F8               	movwf	___awtoft@c
  7237  049A  3195  2576  3182   	fcall	___awtoft
  7238  049D  0878               	movf	?___awtoft,w
  7239  049E  0020               	movlb	0	; select bank0
  7240  049F  00A3               	movwf	___ftdiv@f1
  7241  04A0  0879               	movf	?___awtoft+1,w
  7242  04A1  00A4               	movwf	___ftdiv@f1+1
  7243  04A2  087A               	movf	?___awtoft+2,w
  7244  04A3  00A5               	movwf	___ftdiv@f1+2
  7245  04A4  318C  2444  3182   	fcall	___ftdiv
  7246  04A7  0020               	movlb	0	; select bank0
  7247  04A8  0820               	movf	?___ftdiv,w
  7248  04A9  00B3               	movwf	___ftmul@f2
  7249  04AA  0821               	movf	?___ftdiv+1,w
  7250  04AB  00B4               	movwf	___ftmul@f2+1
  7251  04AC  0822               	movf	?___ftdiv+2,w
  7252  04AD  00B5               	movwf	___ftmul@f2+2
  7253  04AE  318D  259D  3182   	fcall	___ftmul
  7254  04B1  0020               	movlb	0	; select bank0
  7255  04B2  0830               	movf	?___ftmul,w
  7256  04B3  0021               	movlb	1	; select bank1
  7257  04B4  00AE               	movwf	_main$1295^(0+128)
  7258  04B5  0020               	movlb	0	; select bank0
  7259  04B6  0831               	movf	?___ftmul+1,w
  7260  04B7  0021               	movlb	1	; select bank1
  7261  04B8  00AF               	movwf	(_main$1295+1)^(0+128)
  7262  04B9  0020               	movlb	0	; select bank0
  7263  04BA  0832               	movf	?___ftmul+2,w
  7264  04BB  0021               	movlb	1	; select bank1
  7265  04BC  00B0               	movwf	(_main$1295+2)^(0+128)
  7266                           
  7267                           ;main.c: 208: efficiency=(float)voltage[1]/100*current[1]/10;
  7268  04BD  3000               	movlw	0
  7269  04BE  0020               	movlb	0	; select bank0
  7270  04BF  00A0               	movwf	___ftdiv@f2
  7271  04C0  3020               	movlw	32
  7272  04C1  00A1               	movwf	___ftdiv@f2+1
  7273  04C2  3041               	movlw	65
  7274  04C3  00A2               	movwf	___ftdiv@f2+2
  7275  04C4  0021               	movlb	1	; select bank1
  7276  04C5  082E               	movf	_main$1295^(0+128),w
  7277  04C6  0020               	movlb	0	; select bank0
  7278  04C7  00A3               	movwf	___ftdiv@f1
  7279  04C8  0021               	movlb	1	; select bank1
  7280  04C9  082F               	movf	(_main$1295+1)^(0+128),w
  7281  04CA  0020               	movlb	0	; select bank0
  7282  04CB  00A4               	movwf	___ftdiv@f1+1
  7283  04CC  0021               	movlb	1	; select bank1
  7284  04CD  0830               	movf	(_main$1295+2)^(0+128),w
  7285  04CE  0020               	movlb	0	; select bank0
  7286  04CF  00A5               	movwf	___ftdiv@f1+2
  7287  04D0  318C  2444  3182   	fcall	___ftdiv
  7288  04D3  0020               	movlb	0	; select bank0
  7289  04D4  0820               	movf	?___ftdiv,w
  7290  04D5  0021               	movlb	1	; select bank1
  7291  04D6  00B7               	movwf	main@efficiency^(0+128)
  7292  04D7  0020               	movlb	0	; select bank0
  7293  04D8  0821               	movf	?___ftdiv+1,w
  7294  04D9  0021               	movlb	1	; select bank1
  7295  04DA  00B8               	movwf	(main@efficiency+1)^(0+128)
  7296  04DB  0020               	movlb	0	; select bank0
  7297  04DC  0822               	movf	?___ftdiv+2,w
  7298  04DD  0021               	movlb	1	; select bank1
  7299  04DE  00B9               	movwf	(main@efficiency+2)^(0+128)
  7300                           
  7301                           ;main.c: 209: efficiency/=(float)voltage[0]/100*current[0]/10;
  7302  04DF  084D               	movf	(_voltage+1)^(0+128),w
  7303  04E0  00F9               	movwf	___awtoft@c+1
  7304  04E1  084C               	movf	_voltage^(0+128),w
  7305  04E2  00F8               	movwf	___awtoft@c
  7306  04E3  3195  2576  3182   	fcall	___awtoft
  7307  04E6  0878               	movf	?___awtoft,w
  7308  04E7  0020               	movlb	0	; select bank0
  7309  04E8  00A3               	movwf	___ftdiv@f1
  7310  04E9  0879               	movf	?___awtoft+1,w
  7311  04EA  00A4               	movwf	___ftdiv@f1+1
  7312  04EB  087A               	movf	?___awtoft+2,w
  7313  04EC  00A5               	movwf	___ftdiv@f1+2
  7314  04ED  3000               	movlw	0
  7315  04EE  00A0               	movwf	___ftdiv@f2
  7316  04EF  30C8               	movlw	200
  7317  04F0  00A1               	movwf	___ftdiv@f2+1
  7318  04F1  3042               	movlw	66
  7319  04F2  00A2               	movwf	___ftdiv@f2+2
  7320  04F3  318C  2444  3182   	fcall	___ftdiv
  7321  04F6  0020               	movlb	0	; select bank0
  7322  04F7  0820               	movf	?___ftdiv,w
  7323  04F8  00B3               	movwf	___ftmul@f2
  7324  04F9  0821               	movf	?___ftdiv+1,w
  7325  04FA  00B4               	movwf	___ftmul@f2+1
  7326  04FB  0822               	movf	?___ftdiv+2,w
  7327  04FC  00B5               	movwf	___ftmul@f2+2
  7328  04FD  0021               	movlb	1	; select bank1
  7329  04FE  0845               	movf	(_current+1)^(0+128),w
  7330  04FF  00F9               	movwf	___awtoft@c+1
  7331  0500  0844               	movf	_current^(0+128),w
  7332  0501  00F8               	movwf	___awtoft@c
  7333  0502  3195  2576  3182   	fcall	___awtoft
  7334  0505  0878               	movf	?___awtoft,w
  7335  0506  0020               	movlb	0	; select bank0
  7336  0507  00B0               	movwf	___ftmul@f1
  7337  0508  0879               	movf	?___awtoft+1,w
  7338  0509  00B1               	movwf	___ftmul@f1+1
  7339  050A  087A               	movf	?___awtoft+2,w
  7340  050B  00B2               	movwf	___ftmul@f1+2
  7341  050C  318D  259D  3182   	fcall	___ftmul
  7342  050F  0020               	movlb	0	; select bank0
  7343  0510  0830               	movf	?___ftmul,w
  7344  0511  0021               	movlb	1	; select bank1
  7345  0512  00AE               	movwf	_main$1295^(0+128)
  7346  0513  0020               	movlb	0	; select bank0
  7347  0514  0831               	movf	?___ftmul+1,w
  7348  0515  0021               	movlb	1	; select bank1
  7349  0516  00AF               	movwf	(_main$1295+1)^(0+128)
  7350  0517  0020               	movlb	0	; select bank0
  7351  0518  0832               	movf	?___ftmul+2,w
  7352  0519  0021               	movlb	1	; select bank1
  7353  051A  00B0               	movwf	(_main$1295+2)^(0+128)
  7354                           
  7355                           ;main.c: 209: efficiency/=(float)voltage[0]/100*current[0]/10;
  7356  051B  082E               	movf	_main$1295^(0+128),w
  7357  051C  0020               	movlb	0	; select bank0
  7358  051D  00A3               	movwf	___ftdiv@f1
  7359  051E  0021               	movlb	1	; select bank1
  7360  051F  082F               	movf	(_main$1295+1)^(0+128),w
  7361  0520  0020               	movlb	0	; select bank0
  7362  0521  00A4               	movwf	___ftdiv@f1+1
  7363  0522  0021               	movlb	1	; select bank1
  7364  0523  0830               	movf	(_main$1295+2)^(0+128),w
  7365  0524  0020               	movlb	0	; select bank0
  7366  0525  00A5               	movwf	___ftdiv@f1+2
  7367  0526  3000               	movlw	0
  7368  0527  00A0               	movwf	___ftdiv@f2
  7369  0528  3020               	movlw	32
  7370  0529  00A1               	movwf	___ftdiv@f2+1
  7371  052A  3041               	movlw	65
  7372  052B  00A2               	movwf	___ftdiv@f2+2
  7373  052C  318C  2444  3182   	fcall	___ftdiv
  7374  052F  0020               	movlb	0	; select bank0
  7375  0530  0820               	movf	?___ftdiv,w
  7376  0531  0021               	movlb	1	; select bank1
  7377  0532  00A3               	movwf	_main$1296^(0+128)
  7378  0533  0020               	movlb	0	; select bank0
  7379  0534  0821               	movf	?___ftdiv+1,w
  7380  0535  0021               	movlb	1	; select bank1
  7381  0536  00A4               	movwf	(_main$1296+1)^(0+128)
  7382  0537  0020               	movlb	0	; select bank0
  7383  0538  0822               	movf	?___ftdiv+2,w
  7384  0539  0021               	movlb	1	; select bank1
  7385  053A  00A5               	movwf	(_main$1296+2)^(0+128)
  7386                           
  7387                           ;main.c: 209: efficiency/=(float)voltage[0]/100*current[0]/10;
  7388  053B  0823               	movf	_main$1296^(0+128),w
  7389  053C  0020               	movlb	0	; select bank0
  7390  053D  00A0               	movwf	___ftdiv@f2
  7391  053E  0021               	movlb	1	; select bank1
  7392  053F  0824               	movf	(_main$1296+1)^(0+128),w
  7393  0540  0020               	movlb	0	; select bank0
  7394  0541  00A1               	movwf	___ftdiv@f2+1
  7395  0542  0021               	movlb	1	; select bank1
  7396  0543  0825               	movf	(_main$1296+2)^(0+128),w
  7397  0544  0020               	movlb	0	; select bank0
  7398  0545  00A2               	movwf	___ftdiv@f2+2
  7399  0546  0021               	movlb	1	; select bank1
  7400  0547  0837               	movf	main@efficiency^(0+128),w
  7401  0548  0020               	movlb	0	; select bank0
  7402  0549  00A3               	movwf	___ftdiv@f1
  7403  054A  0021               	movlb	1	; select bank1
  7404  054B  0838               	movf	(main@efficiency+1)^(0+128),w
  7405  054C  0020               	movlb	0	; select bank0
  7406  054D  00A4               	movwf	___ftdiv@f1+1
  7407  054E  0021               	movlb	1	; select bank1
  7408  054F  0839               	movf	(main@efficiency+2)^(0+128),w
  7409  0550  0020               	movlb	0	; select bank0
  7410  0551  00A5               	movwf	___ftdiv@f1+2
  7411  0552  318C  2444  3182   	fcall	___ftdiv
  7412  0555  0020               	movlb	0	; select bank0
  7413  0556  0820               	movf	?___ftdiv,w
  7414  0557  0021               	movlb	1	; select bank1
  7415  0558  00B7               	movwf	main@efficiency^(0+128)
  7416  0559  0020               	movlb	0	; select bank0
  7417  055A  0821               	movf	?___ftdiv+1,w
  7418  055B  0021               	movlb	1	; select bank1
  7419  055C  00B8               	movwf	(main@efficiency+1)^(0+128)
  7420  055D  0020               	movlb	0	; select bank0
  7421  055E  0822               	movf	?___ftdiv+2,w
  7422  055F  0021               	movlb	1	; select bank1
  7423  0560  00B9               	movwf	(main@efficiency+2)^(0+128)
  7424                           
  7425                           ;main.c: 210: efficiency*=100;
  7426  0561  3000               	movlw	0
  7427  0562  0020               	movlb	0	; select bank0
  7428  0563  00B0               	movwf	___ftmul@f1
  7429  0564  30C8               	movlw	200
  7430  0565  00B1               	movwf	___ftmul@f1+1
  7431  0566  3042               	movlw	66
  7432  0567  00B2               	movwf	___ftmul@f1+2
  7433  0568  0021               	movlb	1	; select bank1
  7434  0569  0837               	movf	main@efficiency^(0+128),w
  7435  056A  0020               	movlb	0	; select bank0
  7436  056B  00B3               	movwf	___ftmul@f2
  7437  056C  0021               	movlb	1	; select bank1
  7438  056D  0838               	movf	(main@efficiency+1)^(0+128),w
  7439  056E  0020               	movlb	0	; select bank0
  7440  056F  00B4               	movwf	___ftmul@f2+1
  7441  0570  0021               	movlb	1	; select bank1
  7442  0571  0839               	movf	(main@efficiency+2)^(0+128),w
  7443  0572  0020               	movlb	0	; select bank0
  7444  0573  00B5               	movwf	___ftmul@f2+2
  7445  0574  318D  259D  3182   	fcall	___ftmul
  7446  0577  0020               	movlb	0	; select bank0
  7447  0578  0830               	movf	?___ftmul,w
  7448  0579  0021               	movlb	1	; select bank1
  7449  057A  00B7               	movwf	main@efficiency^(0+128)
  7450  057B  0020               	movlb	0	; select bank0
  7451  057C  0831               	movf	?___ftmul+1,w
  7452  057D  0021               	movlb	1	; select bank1
  7453  057E  00B8               	movwf	(main@efficiency+1)^(0+128)
  7454  057F  0020               	movlb	0	; select bank0
  7455  0580  0832               	movf	?___ftmul+2,w
  7456  0581  0021               	movlb	1	; select bank1
  7457  0582  00B9               	movwf	(main@efficiency+2)^(0+128)
  7458                           
  7459                           ;main.c: 211: LCDWriteCharacter(' ');
  7460  0583  3020               	movlw	32
  7461  0584  3189  2136  3182   	fcall	_LCDWriteCharacter
  7462                           
  7463                           ;main.c: 225: { gotoXY(0,0); LCDWriteInt(faultCount,5, 0, 0);};
  7464  0587  01F5               	clrf	gotoXY@y
  7465  0588  3000               	movlw	0
  7466  0589  3194  2476  3182   	fcall	_gotoXY
  7467  058C  0021               	movlb	1	; select bank1
  7468  058D  0829               	movf	(main@faultCount+1)^(0+128),w
  7469  058E  0020               	movlb	0	; select bank0
  7470  058F  00A9               	movwf	LCDWriteInt@value+1
  7471  0590  0021               	movlb	1	; select bank1
  7472  0591  0828               	movf	main@faultCount^(0+128),w
  7473  0592  0020               	movlb	0	; select bank0
  7474  0593  00A8               	movwf	LCDWriteInt@value
  7475  0594  3005               	movlw	5
  7476  0595  00E8               	movwf	??_main
  7477  0596  0868               	movf	??_main,w
  7478  0597  00AA               	movwf	LCDWriteInt@fieldLength
  7479  0598  01AB               	clrf	LCDWriteInt@numPlaces
  7480  0599  01AC               	clrf	LCDWriteInt@sign
  7481  059A  318E  2651  3182   	fcall	_LCDWriteInt
  7482                           
  7483                           ;main.c: 228: { gotoXY(32,0); LCDWriteInt(faultNotReset,5, 0, 0);};
  7484  059D  01F5               	clrf	gotoXY@y
  7485  059E  3020               	movlw	32
  7486  059F  3194  2476  3182   	fcall	_gotoXY
  7487  05A2  0021               	movlb	1	; select bank1
  7488  05A3  082B               	movf	(main@faultNotReset+1)^(0+128),w
  7489  05A4  0020               	movlb	0	; select bank0
  7490  05A5  00A9               	movwf	LCDWriteInt@value+1
  7491  05A6  0021               	movlb	1	; select bank1
  7492  05A7  082A               	movf	main@faultNotReset^(0+128),w
  7493  05A8  0020               	movlb	0	; select bank0
  7494  05A9  00A8               	movwf	LCDWriteInt@value
  7495  05AA  3005               	movlw	5
  7496  05AB  00E8               	movwf	??_main
  7497  05AC  0868               	movf	??_main,w
  7498  05AD  00AA               	movwf	LCDWriteInt@fieldLength
  7499  05AE  01AB               	clrf	LCDWriteInt@numPlaces
  7500  05AF  01AC               	clrf	LCDWriteInt@sign
  7501  05B0  318E  2651  3182   	fcall	_LCDWriteInt
  7502                           
  7503                           ;main.c: 232: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7504  05B3  01F5               	clrf	gotoXY@y
  7505  05B4  0AF5               	incf	gotoXY@y,f
  7506  05B5  3000               	movlw	0
  7507  05B6  3194  2476  3182   	fcall	_gotoXY
  7508  05B9  0021               	movlb	1	; select bank1
  7509  05BA  084D               	movf	(_voltage+1)^(0+128),w
  7510  05BB  0020               	movlb	0	; select bank0
  7511  05BC  00A9               	movwf	LCDWriteInt@value+1
  7512  05BD  0021               	movlb	1	; select bank1
  7513  05BE  084C               	movf	_voltage^(0+128),w
  7514  05BF  0020               	movlb	0	; select bank0
  7515  05C0  00A8               	movwf	LCDWriteInt@value
  7516  05C1  3004               	movlw	4
  7517  05C2  00E8               	movwf	??_main
  7518  05C3  0868               	movf	??_main,w
  7519  05C4  00AA               	movwf	LCDWriteInt@fieldLength
  7520  05C5  3002               	movlw	2
  7521  05C6  00E9               	movwf	??_main+1
  7522  05C7  0869               	movf	??_main+1,w
  7523  05C8  00AB               	movwf	LCDWriteInt@numPlaces
  7524  05C9  01AC               	clrf	LCDWriteInt@sign
  7525  05CA  318E  2651  3182   	fcall	_LCDWriteInt
  7526                           
  7527                           ;main.c: 233: LCDWriteCharacter('V');
  7528  05CD  3056               	movlw	86
  7529  05CE  3189  2136  3182   	fcall	_LCDWriteCharacter
  7530                           
  7531                           ;main.c: 234: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7532  05D1  01F5               	clrf	gotoXY@y
  7533  05D2  0AF5               	incf	gotoXY@y,f
  7534  05D3  301C               	movlw	28
  7535  05D4  3194  2476  3182   	fcall	_gotoXY
  7536  05D7  0021               	movlb	1	; select bank1
  7537  05D8  0845               	movf	(_current+1)^(0+128),w
  7538  05D9  0020               	movlb	0	; select bank0
  7539  05DA  00A9               	movwf	LCDWriteInt@value+1
  7540  05DB  0021               	movlb	1	; select bank1
  7541  05DC  0844               	movf	_current^(0+128),w
  7542  05DD  0020               	movlb	0	; select bank0
  7543  05DE  00A8               	movwf	LCDWriteInt@value
  7544  05DF  3003               	movlw	3
  7545  05E0  00E8               	movwf	??_main
  7546  05E1  0868               	movf	??_main,w
  7547  05E2  00AA               	movwf	LCDWriteInt@fieldLength
  7548  05E3  01AB               	clrf	LCDWriteInt@numPlaces
  7549  05E4  0AAB               	incf	LCDWriteInt@numPlaces,f
  7550  05E5  01AC               	clrf	LCDWriteInt@sign
  7551  05E6  318E  2651  3182   	fcall	_LCDWriteInt
  7552                           
  7553                           ;main.c: 235: LCDWriteCharacter('A');
  7554  05E9  3041               	movlw	65
  7555  05EA  3189  2136  3182   	fcall	_LCDWriteCharacter
  7556                           
  7557                           ;main.c: 237: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7558  05ED  3002               	movlw	2
  7559  05EE  0020               	movlb	0	; select bank0
  7560  05EF  00E8               	movwf	??_main
  7561  05F0  0868               	movf	??_main,w
  7562  05F1  00F5               	movwf	gotoXY@y
  7563  05F2  3000               	movlw	0
  7564  05F3  3194  2476  3182   	fcall	_gotoXY
  7565  05F6  0021               	movlb	1	; select bank1
  7566  05F7  084F               	movf	((_voltage+1)^(0+128)+2),w
  7567  05F8  0020               	movlb	0	; select bank0
  7568  05F9  00A9               	movwf	LCDWriteInt@value+1
  7569  05FA  0021               	movlb	1	; select bank1
  7570  05FB  084E               	movf	(_voltage^(0+128)+2),w
  7571  05FC  0020               	movlb	0	; select bank0
  7572  05FD  00A8               	movwf	LCDWriteInt@value
  7573  05FE  3004               	movlw	4
  7574  05FF  00E8               	movwf	??_main
  7575  0600  0868               	movf	??_main,w
  7576  0601  00AA               	movwf	LCDWriteInt@fieldLength
  7577  0602  3002               	movlw	2
  7578  0603  00E9               	movwf	??_main+1
  7579  0604  0869               	movf	??_main+1,w
  7580  0605  00AB               	movwf	LCDWriteInt@numPlaces
  7581  0606  01AC               	clrf	LCDWriteInt@sign
  7582  0607  318E  2651  3182   	fcall	_LCDWriteInt
  7583                           
  7584                           ;main.c: 238: LCDWriteCharacter('V');
  7585  060A  3056               	movlw	86
  7586  060B  3189  2136  3182   	fcall	_LCDWriteCharacter
  7587                           
  7588                           ;main.c: 239: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7589  060E  3002               	movlw	2
  7590  060F  0020               	movlb	0	; select bank0
  7591  0610  00E8               	movwf	??_main
  7592  0611  0868               	movf	??_main,w
  7593  0612  00F5               	movwf	gotoXY@y
  7594  0613  301C               	movlw	28
  7595  0614  3194  2476  3182   	fcall	_gotoXY
  7596  0617  0021               	movlb	1	; select bank1
  7597  0618  0847               	movf	((_current+1)^(0+128)+2),w
  7598  0619  0020               	movlb	0	; select bank0
  7599  061A  00A9               	movwf	LCDWriteInt@value+1
  7600  061B  0021               	movlb	1	; select bank1
  7601  061C  0846               	movf	(_current^(0+128)+2),w
  7602  061D  0020               	movlb	0	; select bank0
  7603  061E  00A8               	movwf	LCDWriteInt@value
  7604  061F  3003               	movlw	3
  7605  0620  00E8               	movwf	??_main
  7606  0621  0868               	movf	??_main,w
  7607  0622  00AA               	movwf	LCDWriteInt@fieldLength
  7608  0623  01AB               	clrf	LCDWriteInt@numPlaces
  7609  0624  0AAB               	incf	LCDWriteInt@numPlaces,f
  7610  0625  01AC               	clrf	LCDWriteInt@sign
  7611  0626  318E  2651  3182   	fcall	_LCDWriteInt
  7612                           
  7613                           ;main.c: 240: LCDWriteCharacter('A');
  7614  0629  3041               	movlw	65
  7615  062A  3189  2136  3182   	fcall	_LCDWriteCharacter
  7616                           
  7617                           ;main.c: 241: { gotoXY(56,2); LCDWriteInt(Vref,4, 2, 0);};
  7618  062D  3002               	movlw	2
  7619  062E  0020               	movlb	0	; select bank0
  7620  062F  00E8               	movwf	??_main
  7621  0630  0868               	movf	??_main,w
  7622  0631  00F5               	movwf	gotoXY@y
  7623  0632  3038               	movlw	56
  7624  0633  3194  2476  3182   	fcall	_gotoXY
  7625  0636  0021               	movlb	1	; select bank1
  7626  0637  0865               	movf	(_Vref+1)^(0+128),w
  7627  0638  0020               	movlb	0	; select bank0
  7628  0639  00A9               	movwf	LCDWriteInt@value+1
  7629  063A  0021               	movlb	1	; select bank1
  7630  063B  0864               	movf	_Vref^(0+128),w
  7631  063C  0020               	movlb	0	; select bank0
  7632  063D  00A8               	movwf	LCDWriteInt@value
  7633  063E  3004               	movlw	4
  7634  063F  00E8               	movwf	??_main
  7635  0640  0868               	movf	??_main,w
  7636  0641  00AA               	movwf	LCDWriteInt@fieldLength
  7637  0642  3002               	movlw	2
  7638  0643  00E9               	movwf	??_main+1
  7639  0644  0869               	movf	??_main+1,w
  7640  0645  00AB               	movwf	LCDWriteInt@numPlaces
  7641  0646  01AC               	clrf	LCDWriteInt@sign
  7642  0647  318E  2651  3182   	fcall	_LCDWriteInt
  7643                           
  7644                           ;main.c: 242: LCDWriteCharacter('V');
  7645  064A  3056               	movlw	86
  7646  064B  3189  2136  3182   	fcall	_LCDWriteCharacter
  7647                           
  7648                           ;main.c: 244: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7649  064E  3003               	movlw	3
  7650  064F  0020               	movlb	0	; select bank0
  7651  0650  00E8               	movwf	??_main
  7652  0651  0868               	movf	??_main,w
  7653  0652  00F5               	movwf	gotoXY@y
  7654  0653  3000               	movlw	0
  7655  0654  3194  2476  3182   	fcall	_gotoXY
  7656  0657  3064               	movlw	100
  7657  0658  00F0               	movwf	___awdiv@divisor
  7658  0659  3000               	movlw	0
  7659  065A  00F1               	movwf	___awdiv@divisor+1
  7660  065B  0021               	movlb	1	; select bank1
  7661  065C  084D               	movf	(_voltage+1)^(0+128),w
  7662  065D  00F3               	movwf	___awdiv@dividend+1
  7663  065E  084C               	movf	_voltage^(0+128),w
  7664  065F  00F2               	movwf	___awdiv@dividend
  7665  0660  3197  27AF  3182   	fcall	___awdiv
  7666  0663  0871               	movf	?___awdiv+1,w
  7667  0664  00FA               	movwf	___wmul@multiplier+1
  7668  0665  0870               	movf	?___awdiv,w
  7669  0666  00F9               	movwf	___wmul@multiplier
  7670  0667  0021               	movlb	1	; select bank1
  7671  0668  0845               	movf	(_current+1)^(0+128),w
  7672  0669  00FC               	movwf	___wmul@multiplicand+1
  7673  066A  0844               	movf	_current^(0+128),w
  7674  066B  00FB               	movwf	___wmul@multiplicand
  7675  066C  3194  24FC  3182   	fcall	___wmul
  7676  066F  087A               	movf	?___wmul+1,w
  7677  0670  0021               	movlb	1	; select bank1
  7678  0671  00B4               	movwf	(_main$1297+1)^(0+128)
  7679  0672  0879               	movf	?___wmul,w
  7680  0673  00B3               	movwf	_main$1297^(0+128)
  7681  0674  300A               	movlw	10
  7682  0675  00F0               	movwf	___awdiv@divisor
  7683  0676  3000               	movlw	0
  7684  0677  00F1               	movwf	___awdiv@divisor+1
  7685  0678  0834               	movf	(_main$1297+1)^(0+128),w
  7686  0679  00F3               	movwf	___awdiv@dividend+1
  7687  067A  0833               	movf	_main$1297^(0+128),w
  7688  067B  00F2               	movwf	___awdiv@dividend
  7689  067C  3197  27AF  3182   	fcall	___awdiv
  7690  067F  0871               	movf	?___awdiv+1,w
  7691  0680  0021               	movlb	1	; select bank1
  7692  0681  00B6               	movwf	(_main$1298+1)^(0+128)
  7693  0682  0870               	movf	?___awdiv,w
  7694  0683  00B5               	movwf	_main$1298^(0+128)
  7695  0684  0836               	movf	(_main$1298+1)^(0+128),w
  7696  0685  0020               	movlb	0	; select bank0
  7697  0686  00A9               	movwf	LCDWriteInt@value+1
  7698  0687  0021               	movlb	1	; select bank1
  7699  0688  0835               	movf	_main$1298^(0+128),w
  7700  0689  0020               	movlb	0	; select bank0
  7701  068A  00A8               	movwf	LCDWriteInt@value
  7702  068B  3003               	movlw	3
  7703  068C  00E8               	movwf	??_main
  7704  068D  0868               	movf	??_main,w
  7705  068E  00AA               	movwf	LCDWriteInt@fieldLength
  7706  068F  01AB               	clrf	LCDWriteInt@numPlaces
  7707  0690  01AC               	clrf	LCDWriteInt@sign
  7708  0691  318E  2651  3182   	fcall	_LCDWriteInt
  7709                           
  7710                           ;main.c: 245: LCDWriteCharacter('W');
  7711  0694  3057               	movlw	87
  7712  0695  3189  2136  3182   	fcall	_LCDWriteCharacter
  7713                           
  7714                           ;main.c: 246: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7715  0698  3003               	movlw	3
  7716  0699  0020               	movlb	0	; select bank0
  7717  069A  00E8               	movwf	??_main
  7718  069B  0868               	movf	??_main,w
  7719  069C  00F5               	movwf	gotoXY@y
  7720  069D  301C               	movlw	28
  7721  069E  3194  2476  3182   	fcall	_gotoXY
  7722  06A1  0021               	movlb	1	; select bank1
  7723  06A2  086C               	movf	_battery_state^(0+128),w
  7724  06A3  0020               	movlb	0	; select bank0
  7725  06A4  00E8               	movwf	??_main
  7726  06A5  01E9               	clrf	??_main+1
  7727  06A6  0868               	movf	??_main,w
  7728  06A7  00A8               	movwf	LCDWriteInt@value
  7729  06A8  0869               	movf	??_main+1,w
  7730  06A9  00A9               	movwf	LCDWriteInt@value+1
  7731  06AA  01AA               	clrf	LCDWriteInt@fieldLength
  7732  06AB  0AAA               	incf	LCDWriteInt@fieldLength,f
  7733  06AC  01AB               	clrf	LCDWriteInt@numPlaces
  7734  06AD  01AC               	clrf	LCDWriteInt@sign
  7735  06AE  318E  2651  3182   	fcall	_LCDWriteInt
  7736                           
  7737                           ;main.c: 247: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7738  06B1  3003               	movlw	3
  7739  06B2  0020               	movlb	0	; select bank0
  7740  06B3  00E8               	movwf	??_main
  7741  06B4  0868               	movf	??_main,w
  7742  06B5  00F5               	movwf	gotoXY@y
  7743  06B6  3024               	movlw	36
  7744  06B7  3194  2476  3182   	fcall	_gotoXY
  7745  06BA  0021               	movlb	1	; select bank1
  7746  06BB  086E               	movf	_Imode0^(0+128),w
  7747  06BC  0020               	movlb	0	; select bank0
  7748  06BD  00A8               	movwf	LCDWriteInt@value
  7749  06BE  01A9               	clrf	LCDWriteInt@value+1
  7750  06BF  1BA8               	btfsc	LCDWriteInt@value,7
  7751  06C0  03A9               	decf	LCDWriteInt@value+1,f
  7752  06C1  01AA               	clrf	LCDWriteInt@fieldLength
  7753  06C2  0AAA               	incf	LCDWriteInt@fieldLength,f
  7754  06C3  01AB               	clrf	LCDWriteInt@numPlaces
  7755  06C4  01AC               	clrf	LCDWriteInt@sign
  7756  06C5  318E  2651  3182   	fcall	_LCDWriteInt
  7757                           
  7758                           ;main.c: 248: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7759  06C8  3003               	movlw	3
  7760  06C9  0020               	movlb	0	; select bank0
  7761  06CA  00E8               	movwf	??_main
  7762  06CB  0868               	movf	??_main,w
  7763  06CC  00F5               	movwf	gotoXY@y
  7764  06CD  3030               	movlw	48
  7765  06CE  3194  2476  3182   	fcall	_gotoXY
  7766  06D1  0021               	movlb	1	; select bank1
  7767  06D2  0867               	movf	(_Iref+1)^(0+128),w
  7768  06D3  0020               	movlb	0	; select bank0
  7769  06D4  00A9               	movwf	LCDWriteInt@value+1
  7770  06D5  0021               	movlb	1	; select bank1
  7771  06D6  0866               	movf	_Iref^(0+128),w
  7772  06D7  0020               	movlb	0	; select bank0
  7773  06D8  00A8               	movwf	LCDWriteInt@value
  7774  06D9  3003               	movlw	3
  7775  06DA  00E8               	movwf	??_main
  7776  06DB  0868               	movf	??_main,w
  7777  06DC  00AA               	movwf	LCDWriteInt@fieldLength
  7778  06DD  01AB               	clrf	LCDWriteInt@numPlaces
  7779  06DE  0AAB               	incf	LCDWriteInt@numPlaces,f
  7780  06DF  01AC               	clrf	LCDWriteInt@sign
  7781  06E0  318E  2651  3182   	fcall	_LCDWriteInt
  7782                           
  7783                           ;main.c: 249: LCDWriteCharacter('A');
  7784  06E3  3041               	movlw	65
  7785  06E4  3189  2136  3182   	fcall	_LCDWriteCharacter
  7786                           
  7787                           ;main.c: 251: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7788  06E7  3004               	movlw	4
  7789  06E8  0020               	movlb	0	; select bank0
  7790  06E9  00E8               	movwf	??_main
  7791  06EA  0868               	movf	??_main,w
  7792  06EB  00F5               	movwf	gotoXY@y
  7793  06EC  3000               	movlw	0
  7794  06ED  3194  2476  3182   	fcall	_gotoXY
  7795  06F0  3064               	movlw	100
  7796  06F1  00F0               	movwf	___awdiv@divisor
  7797  06F2  3000               	movlw	0
  7798  06F3  00F1               	movwf	___awdiv@divisor+1
  7799  06F4  0021               	movlb	1	; select bank1
  7800  06F5  084F               	movf	((_voltage+1)^(0+128)+2),w
  7801  06F6  00F3               	movwf	___awdiv@dividend+1
  7802  06F7  084E               	movf	(_voltage^(0+128)+2),w
  7803  06F8  00F2               	movwf	___awdiv@dividend
  7804  06F9  3197  27AF  3182   	fcall	___awdiv
  7805  06FC  0871               	movf	?___awdiv+1,w
  7806  06FD  00FA               	movwf	___wmul@multiplier+1
  7807  06FE  0870               	movf	?___awdiv,w
  7808  06FF  00F9               	movwf	___wmul@multiplier
  7809  0700  0021               	movlb	1	; select bank1
  7810  0701  0847               	movf	((_current+1)^(0+128)+2),w
  7811  0702  00FC               	movwf	___wmul@multiplicand+1
  7812  0703  0846               	movf	(_current^(0+128)+2),w
  7813  0704  00FB               	movwf	___wmul@multiplicand
  7814  0705  3194  24FC  3182   	fcall	___wmul
  7815  0708  087A               	movf	?___wmul+1,w
  7816  0709  0021               	movlb	1	; select bank1
  7817  070A  00B4               	movwf	(_main$1297+1)^(0+128)
  7818  070B  0879               	movf	?___wmul,w
  7819  070C  00B3               	movwf	_main$1297^(0+128)
  7820  070D  300A               	movlw	10
  7821  070E  00F0               	movwf	___awdiv@divisor
  7822  070F  3000               	movlw	0
  7823  0710  00F1               	movwf	___awdiv@divisor+1
  7824  0711  0834               	movf	(_main$1297+1)^(0+128),w
  7825  0712  00F3               	movwf	___awdiv@dividend+1
  7826  0713  0833               	movf	_main$1297^(0+128),w
  7827  0714  00F2               	movwf	___awdiv@dividend
  7828  0715  3197  27AF  3182   	fcall	___awdiv
  7829  0718  0871               	movf	?___awdiv+1,w
  7830  0719  0021               	movlb	1	; select bank1
  7831  071A  00B6               	movwf	(_main$1298+1)^(0+128)
  7832  071B  0870               	movf	?___awdiv,w
  7833  071C  00B5               	movwf	_main$1298^(0+128)
  7834  071D  0836               	movf	(_main$1298+1)^(0+128),w
  7835  071E  0020               	movlb	0	; select bank0
  7836  071F  00A9               	movwf	LCDWriteInt@value+1
  7837  0720  0021               	movlb	1	; select bank1
  7838  0721  0835               	movf	_main$1298^(0+128),w
  7839  0722  0020               	movlb	0	; select bank0
  7840  0723  00A8               	movwf	LCDWriteInt@value
  7841  0724  3003               	movlw	3
  7842  0725  00E8               	movwf	??_main
  7843  0726  0868               	movf	??_main,w
  7844  0727  00AA               	movwf	LCDWriteInt@fieldLength
  7845  0728  01AB               	clrf	LCDWriteInt@numPlaces
  7846  0729  01AC               	clrf	LCDWriteInt@sign
  7847  072A  318E  2651  3182   	fcall	_LCDWriteInt
  7848                           
  7849                           ;main.c: 252: LCDWriteCharacter('W');
  7850  072D  3057               	movlw	87
  7851  072E  3189  2136  3182   	fcall	_LCDWriteCharacter
  7852                           
  7853                           ;main.c: 255: { gotoXY(48,4); LCDWriteInt(MPPT0,4, 0, 0);};
  7854  0731  3004               	movlw	4
  7855  0732  0020               	movlb	0	; select bank0
  7856  0733  00E8               	movwf	??_main
  7857  0734  0868               	movf	??_main,w
  7858  0735  00F5               	movwf	gotoXY@y
  7859  0736  3030               	movlw	48
  7860  0737  3194  2476  3182   	fcall	_gotoXY
  7861  073A  0021               	movlb	1	; select bank1
  7862  073B  0840               	movf	(main@MPPT0+1)^(0+128),w
  7863  073C  0020               	movlb	0	; select bank0
  7864  073D  00A9               	movwf	LCDWriteInt@value+1
  7865  073E  0021               	movlb	1	; select bank1
  7866  073F  083F               	movf	main@MPPT0^(0+128),w
  7867  0740  0020               	movlb	0	; select bank0
  7868  0741  00A8               	movwf	LCDWriteInt@value
  7869  0742  3004               	movlw	4
  7870  0743  00E8               	movwf	??_main
  7871  0744  0868               	movf	??_main,w
  7872  0745  00AA               	movwf	LCDWriteInt@fieldLength
  7873  0746  01AB               	clrf	LCDWriteInt@numPlaces
  7874  0747  01AC               	clrf	LCDWriteInt@sign
  7875  0748  318E  2651  3182   	fcall	_LCDWriteInt
  7876                           
  7877                           ;main.c: 263: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  7878  074B  3005               	movlw	5
  7879  074C  0020               	movlb	0	; select bank0
  7880  074D  00E8               	movwf	??_main
  7881  074E  0868               	movf	??_main,w
  7882  074F  00F5               	movwf	gotoXY@y
  7883  0750  3000               	movlw	0
  7884  0751  3194  2476  3182   	fcall	_gotoXY
  7885  0754  0021               	movlb	1	; select bank1
  7886  0755  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  7887  0756  0020               	movlb	0	; select bank0
  7888  0757  00A9               	movwf	LCDWriteInt@value+1
  7889  0758  0021               	movlb	1	; select bank1
  7890  0759  0842               	movf	main@dutyCycle6^(0+128),w
  7891  075A  0020               	movlb	0	; select bank0
  7892  075B  00A8               	movwf	LCDWriteInt@value
  7893  075C  3004               	movlw	4
  7894  075D  00E8               	movwf	??_main
  7895  075E  0868               	movf	??_main,w
  7896  075F  00AA               	movwf	LCDWriteInt@fieldLength
  7897  0760  01AB               	clrf	LCDWriteInt@numPlaces
  7898  0761  01AC               	clrf	LCDWriteInt@sign
  7899  0762  318E  2651  3182   	fcall	_LCDWriteInt
  7900                           
  7901                           ;main.c: 264: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  7902  0765  3005               	movlw	5
  7903  0766  0020               	movlb	0	; select bank0
  7904  0767  00E8               	movwf	??_main
  7905  0768  0868               	movf	??_main,w
  7906  0769  00F5               	movwf	gotoXY@y
  7907  076A  3018               	movlw	24
  7908  076B  3194  2476  3182   	fcall	_gotoXY
  7909  076E  0021               	movlb	1	; select bank1
  7910  076F  083E               	movf	(main@dutyCycle7+1)^(0+128),w
  7911  0770  0020               	movlb	0	; select bank0
  7912  0771  00A9               	movwf	LCDWriteInt@value+1
  7913  0772  0021               	movlb	1	; select bank1
  7914  0773  083D               	movf	main@dutyCycle7^(0+128),w
  7915  0774  0020               	movlb	0	; select bank0
  7916  0775  00A8               	movwf	LCDWriteInt@value
  7917  0776  3004               	movlw	4
  7918  0777  00E8               	movwf	??_main
  7919  0778  0868               	movf	??_main,w
  7920  0779  00AA               	movwf	LCDWriteInt@fieldLength
  7921  077A  01AB               	clrf	LCDWriteInt@numPlaces
  7922  077B  01AC               	clrf	LCDWriteInt@sign
  7923  077C  318E  2651  3182   	fcall	_LCDWriteInt
  7924                           
  7925                           ;main.c: 265: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  7926  077F  3005               	movlw	5
  7927  0780  0020               	movlb	0	; select bank0
  7928  0781  00E8               	movwf	??_main
  7929  0782  0868               	movf	??_main,w
  7930  0783  00F5               	movwf	gotoXY@y
  7931  0784  3030               	movlw	48
  7932  0785  3194  2476  3182   	fcall	_gotoXY
  7933  0788  0021               	movlb	1	; select bank1
  7934  0789  083B               	movf	(main@dutyCycle1+1)^(0+128),w
  7935  078A  0020               	movlb	0	; select bank0
  7936  078B  00A9               	movwf	LCDWriteInt@value+1
  7937  078C  0021               	movlb	1	; select bank1
  7938  078D  083A               	movf	main@dutyCycle1^(0+128),w
  7939  078E  0020               	movlb	0	; select bank0
  7940  078F  00A8               	movwf	LCDWriteInt@value
  7941  0790  3004               	movlw	4
  7942  0791  00E8               	movwf	??_main
  7943  0792  0868               	movf	??_main,w
  7944  0793  00AA               	movwf	LCDWriteInt@fieldLength
  7945  0794  01AB               	clrf	LCDWriteInt@numPlaces
  7946  0795  01AC               	clrf	LCDWriteInt@sign
  7947  0796  318E  2651  3182   	fcall	_LCDWriteInt
  7948                           
  7949                           ;main.c: 266: { gotoXY(74,5); LCDWriteInt(!RB2,1, 0, 0);};
  7950  0799  3005               	movlw	5
  7951  079A  0020               	movlb	0	; select bank0
  7952  079B  00E8               	movwf	??_main
  7953  079C  0868               	movf	??_main,w
  7954  079D  00F5               	movwf	gotoXY@y
  7955  079E  304A               	movlw	74
  7956  079F  3194  2476  3182   	fcall	_gotoXY
  7957  07A2  1003               	clrc
  7958  07A3  0020               	movlb	0	; select bank0
  7959  07A4  1D0D               	btfss	13,2	;volatile
  7960  07A5  1403               	setc
  7961  07A6  3000               	movlw	0
  7962  07A7  3D09               	addwfc	9,w
  7963  07A8  00E8               	movwf	??_main
  7964  07A9  01E9               	clrf	??_main+1
  7965  07AA  0868               	movf	??_main,w
  7966  07AB  00A8               	movwf	LCDWriteInt@value
  7967  07AC  0869               	movf	??_main+1,w
  7968  07AD  00A9               	movwf	LCDWriteInt@value+1
  7969  07AE  01AA               	clrf	LCDWriteInt@fieldLength
  7970  07AF  0AAA               	incf	LCDWriteInt@fieldLength,f
  7971  07B0  01AB               	clrf	LCDWriteInt@numPlaces
  7972  07B1  01AC               	clrf	LCDWriteInt@sign
  7973  07B2  318E  2651  3182   	fcall	_LCDWriteInt
  7974                           
  7975                           ;main.c: 268: if(battery_state > FINISHED)
  7976  07B5  3003               	movlw	3
  7977  07B6  0021               	movlb	1	; select bank1
  7978  07B7  026C               	subwf	_battery_state^(0+128),w
  7979  07B8  1C03               	skipc
  7980  07B9  2FBD               	goto	l3229
  7981                           
  7982                           ;main.c: 269: {
  7983                           ;main.c: 270: cc_cv_mode();
  7984  07BA  3197  2729  3182   	fcall	_cc_cv_mode
  7985  07BD                     l3229:	
  7986                           
  7987                           ;main.c: 271: }
  7988                           ;main.c: 272: slowLoop=0;
  7989  07BD  0021               	movlb	1	; select bank1
  7990  07BE  01AC               	clrf	main@slowLoop^(0+128)
  7991  07BF  2AEF               	goto	l3015
  7992  07C0                     __end_of_main:	
  7993                           
  7994                           	psect	text1
  7995  0051                     __ptext1:	
  7996 ;; *************** function _tempCalc *****************
  7997 ;; Defined at:
  7998 ;;		line 4 in file "tempCalc.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  analogValue     2   61[BANK0 ] int 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;  steinhart       3   69[BANK0 ] float 
  8003 ;;  R               3   63[BANK0 ] float 
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  2   61[BANK0 ] int 
  8006 ;; Registers used:
  8007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8013 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8016 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8017 ;;Total ram usage:       11 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; Hardware stack levels required when called:    4
  8020 ;; This function calls:
  8021 ;;		___awtoft
  8022 ;;		___ftadd
  8023 ;;		___ftdiv
  8024 ;;		___ftmul
  8025 ;;		___ftsub
  8026 ;;		___fttol
  8027 ;;		_log
  8028 ;; This function is called by:
  8029 ;;		_main
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           
  8034                           ;psect for function _tempCalc
  8035  0051                     _tempCalc:	
  8036                           
  8037                           ;tempCalc.c: 6: float R, steinhart;
  8038                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8039                           
  8040                           ;incstack = 0
  8041                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8042  0051  3000               	movlw	0
  8043  0052  0020               	movlb	0	; select bank0
  8044  0053  00C0               	movwf	___ftadd@f1
  8045  0054  3080               	movlw	128
  8046  0055  00C1               	movwf	___ftadd@f1+1
  8047  0056  30BF               	movlw	191
  8048  0057  00C2               	movwf	___ftadd@f1+2
  8049  0058  085E               	movf	tempCalc@analogValue+1,w
  8050  0059  00F9               	movwf	___awtoft@c+1
  8051  005A  085D               	movf	tempCalc@analogValue,w
  8052  005B  00F8               	movwf	___awtoft@c
  8053  005C  3195  2576  3180   	fcall	___awtoft
  8054  005F  0878               	movf	?___awtoft,w
  8055  0060  0020               	movlb	0	; select bank0
  8056  0061  00A0               	movwf	___ftdiv@f2
  8057  0062  0879               	movf	?___awtoft+1,w
  8058  0063  00A1               	movwf	___ftdiv@f2+1
  8059  0064  087A               	movf	?___awtoft+2,w
  8060  0065  00A2               	movwf	___ftdiv@f2+2
  8061  0066  30C0               	movlw	192
  8062  0067  00A3               	movwf	___ftdiv@f1
  8063  0068  307F               	movlw	127
  8064  0069  00A4               	movwf	___ftdiv@f1+1
  8065  006A  3044               	movlw	68
  8066  006B  00A5               	movwf	___ftdiv@f1+2
  8067  006C  318C  2444  3180   	fcall	___ftdiv
  8068  006F  0020               	movlb	0	; select bank0
  8069  0070  0820               	movf	?___ftdiv,w
  8070  0071  00C3               	movwf	___ftadd@f2
  8071  0072  0821               	movf	?___ftdiv+1,w
  8072  0073  00C4               	movwf	___ftadd@f2+1
  8073  0074  0822               	movf	?___ftdiv+2,w
  8074  0075  00C5               	movwf	___ftadd@f2+2
  8075  0076  318F  270A  3180   	fcall	___ftadd
  8076  0079  0020               	movlb	0	; select bank0
  8077  007A  0840               	movf	?___ftadd,w
  8078  007B  00E2               	movwf	_tempCalc$1294
  8079  007C  0841               	movf	?___ftadd+1,w
  8080  007D  00E3               	movwf	_tempCalc$1294+1
  8081  007E  0842               	movf	?___ftadd+2,w
  8082  007F  00E4               	movwf	_tempCalc$1294+2
  8083                           
  8084                           ;tempCalc.c: 6: float R, steinhart;
  8085                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8086  0080  0862               	movf	_tempCalc$1294,w
  8087  0081  00A0               	movwf	___ftdiv@f2
  8088  0082  0863               	movf	_tempCalc$1294+1,w
  8089  0083  00A1               	movwf	___ftdiv@f2+1
  8090  0084  0864               	movf	_tempCalc$1294+2,w
  8091  0085  00A2               	movwf	___ftdiv@f2+2
  8092  0086  3088               	movlw	136
  8093  0087  00A3               	movwf	___ftdiv@f1
  8094  0088  301A               	movlw	26
  8095  0089  00A4               	movwf	___ftdiv@f1+1
  8096  008A  3046               	movlw	70
  8097  008B  00A5               	movwf	___ftdiv@f1+2
  8098  008C  318C  2444  3180   	fcall	___ftdiv
  8099  008F  0020               	movlb	0	; select bank0
  8100  0090  0820               	movf	?___ftdiv,w
  8101  0091  00DF               	movwf	tempCalc@R
  8102  0092  0821               	movf	?___ftdiv+1,w
  8103  0093  00E0               	movwf	tempCalc@R+1
  8104  0094  0822               	movf	?___ftdiv+2,w
  8105  0095  00E1               	movwf	tempCalc@R+2
  8106                           
  8107                           ;tempCalc.c: 10: steinhart = R /9990;
  8108  0096  3018               	movlw	24
  8109  0097  00A0               	movwf	___ftdiv@f2
  8110  0098  301C               	movlw	28
  8111  0099  00A1               	movwf	___ftdiv@f2+1
  8112  009A  3046               	movlw	70
  8113  009B  00A2               	movwf	___ftdiv@f2+2
  8114  009C  085F               	movf	tempCalc@R,w
  8115  009D  00A3               	movwf	___ftdiv@f1
  8116  009E  0860               	movf	tempCalc@R+1,w
  8117  009F  00A4               	movwf	___ftdiv@f1+1
  8118  00A0  0861               	movf	tempCalc@R+2,w
  8119  00A1  00A5               	movwf	___ftdiv@f1+2
  8120  00A2  318C  2444  3180   	fcall	___ftdiv
  8121  00A5  0020               	movlb	0	; select bank0
  8122  00A6  0820               	movf	?___ftdiv,w
  8123  00A7  00E5               	movwf	tempCalc@steinhart
  8124  00A8  0821               	movf	?___ftdiv+1,w
  8125  00A9  00E6               	movwf	tempCalc@steinhart+1
  8126  00AA  0822               	movf	?___ftdiv+2,w
  8127  00AB  00E7               	movwf	tempCalc@steinhart+2
  8128                           
  8129                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8130  00AC  0865               	movf	tempCalc@steinhart,w
  8131  00AD  00D7               	movwf	log@x
  8132  00AE  0866               	movf	tempCalc@steinhart+1,w
  8133  00AF  00D8               	movwf	log@x+1
  8134  00B0  0867               	movf	tempCalc@steinhart+2,w
  8135  00B1  00D9               	movwf	log@x+2
  8136  00B2  318C  24ED  3180   	fcall	_log
  8137  00B5  0020               	movlb	0	; select bank0
  8138  00B6  0857               	movf	?_log,w
  8139  00B7  00E5               	movwf	tempCalc@steinhart
  8140  00B8  0858               	movf	?_log+1,w
  8141  00B9  00E6               	movwf	tempCalc@steinhart+1
  8142  00BA  0859               	movf	?_log+2,w
  8143  00BB  00E7               	movwf	tempCalc@steinhart+2
  8144                           
  8145                           ;tempCalc.c: 12: steinhart /= 4030;
  8146  00BC  30E0               	movlw	224
  8147  00BD  00A0               	movwf	___ftdiv@f2
  8148  00BE  307B               	movlw	123
  8149  00BF  00A1               	movwf	___ftdiv@f2+1
  8150  00C0  3045               	movlw	69
  8151  00C1  00A2               	movwf	___ftdiv@f2+2
  8152  00C2  0865               	movf	tempCalc@steinhart,w
  8153  00C3  00A3               	movwf	___ftdiv@f1
  8154  00C4  0866               	movf	tempCalc@steinhart+1,w
  8155  00C5  00A4               	movwf	___ftdiv@f1+1
  8156  00C6  0867               	movf	tempCalc@steinhart+2,w
  8157  00C7  00A5               	movwf	___ftdiv@f1+2
  8158  00C8  318C  2444  3180   	fcall	___ftdiv
  8159  00CB  0020               	movlb	0	; select bank0
  8160  00CC  0820               	movf	?___ftdiv,w
  8161  00CD  00E5               	movwf	tempCalc@steinhart
  8162  00CE  0821               	movf	?___ftdiv+1,w
  8163  00CF  00E6               	movwf	tempCalc@steinhart+1
  8164  00D0  0822               	movf	?___ftdiv+2,w
  8165  00D1  00E7               	movwf	tempCalc@steinhart+2
  8166                           
  8167                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8168  00D2  30CF               	movlw	207
  8169  00D3  00C0               	movwf	___ftadd@f1
  8170  00D4  305B               	movlw	91
  8171  00D5  00C1               	movwf	___ftadd@f1+1
  8172  00D6  303B               	movlw	59
  8173  00D7  00C2               	movwf	___ftadd@f1+2
  8174  00D8  0865               	movf	tempCalc@steinhart,w
  8175  00D9  00C3               	movwf	___ftadd@f2
  8176  00DA  0866               	movf	tempCalc@steinhart+1,w
  8177  00DB  00C4               	movwf	___ftadd@f2+1
  8178  00DC  0867               	movf	tempCalc@steinhart+2,w
  8179  00DD  00C5               	movwf	___ftadd@f2+2
  8180  00DE  318F  270A  3180   	fcall	___ftadd
  8181  00E1  0020               	movlb	0	; select bank0
  8182  00E2  0840               	movf	?___ftadd,w
  8183  00E3  00E5               	movwf	tempCalc@steinhart
  8184  00E4  0841               	movf	?___ftadd+1,w
  8185  00E5  00E6               	movwf	tempCalc@steinhart+1
  8186  00E6  0842               	movf	?___ftadd+2,w
  8187  00E7  00E7               	movwf	tempCalc@steinhart+2
  8188                           
  8189                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8190  00E8  0865               	movf	tempCalc@steinhart,w
  8191  00E9  00A0               	movwf	___ftdiv@f2
  8192  00EA  0866               	movf	tempCalc@steinhart+1,w
  8193  00EB  00A1               	movwf	___ftdiv@f2+1
  8194  00EC  0867               	movf	tempCalc@steinhart+2,w
  8195  00ED  00A2               	movwf	___ftdiv@f2+2
  8196  00EE  3000               	movlw	0
  8197  00EF  00A3               	movwf	___ftdiv@f1
  8198  00F0  3080               	movlw	128
  8199  00F1  00A4               	movwf	___ftdiv@f1+1
  8200  00F2  303F               	movlw	63
  8201  00F3  00A5               	movwf	___ftdiv@f1+2
  8202  00F4  318C  2444  3180   	fcall	___ftdiv
  8203  00F7  0020               	movlb	0	; select bank0
  8204  00F8  0820               	movf	?___ftdiv,w
  8205  00F9  00E5               	movwf	tempCalc@steinhart
  8206  00FA  0821               	movf	?___ftdiv+1,w
  8207  00FB  00E6               	movwf	tempCalc@steinhart+1
  8208  00FC  0822               	movf	?___ftdiv+2,w
  8209  00FD  00E7               	movwf	tempCalc@steinhart+2
  8210                           
  8211                           ;tempCalc.c: 17: steinhart -= 273.15;
  8212  00FE  3093               	movlw	147
  8213  00FF  00CD               	movwf	___ftsub@f2
  8214  0100  3088               	movlw	136
  8215  0101  00CE               	movwf	___ftsub@f2+1
  8216  0102  3043               	movlw	67
  8217  0103  00CF               	movwf	___ftsub@f2+2
  8218  0104  0865               	movf	tempCalc@steinhart,w
  8219  0105  00D0               	movwf	___ftsub@f1
  8220  0106  0866               	movf	tempCalc@steinhart+1,w
  8221  0107  00D1               	movwf	___ftsub@f1+1
  8222  0108  0867               	movf	tempCalc@steinhart+2,w
  8223  0109  00D2               	movwf	___ftsub@f1+2
  8224  010A  3195  251A  3180   	fcall	___ftsub
  8225  010D  0020               	movlb	0	; select bank0
  8226  010E  084D               	movf	?___ftsub,w
  8227  010F  00E5               	movwf	tempCalc@steinhart
  8228  0110  084E               	movf	?___ftsub+1,w
  8229  0111  00E6               	movwf	tempCalc@steinhart+1
  8230  0112  084F               	movf	?___ftsub+2,w
  8231  0113  00E7               	movwf	tempCalc@steinhart+2
  8232                           
  8233                           ;tempCalc.c: 19: steinhart*=10;
  8234  0114  3000               	movlw	0
  8235  0115  00B0               	movwf	___ftmul@f1
  8236  0116  3020               	movlw	32
  8237  0117  00B1               	movwf	___ftmul@f1+1
  8238  0118  3041               	movlw	65
  8239  0119  00B2               	movwf	___ftmul@f1+2
  8240  011A  0865               	movf	tempCalc@steinhart,w
  8241  011B  00B3               	movwf	___ftmul@f2
  8242  011C  0866               	movf	tempCalc@steinhart+1,w
  8243  011D  00B4               	movwf	___ftmul@f2+1
  8244  011E  0867               	movf	tempCalc@steinhart+2,w
  8245  011F  00B5               	movwf	___ftmul@f2+2
  8246  0120  318D  259D  3180   	fcall	___ftmul
  8247  0123  0020               	movlb	0	; select bank0
  8248  0124  0830               	movf	?___ftmul,w
  8249  0125  00E5               	movwf	tempCalc@steinhart
  8250  0126  0831               	movf	?___ftmul+1,w
  8251  0127  00E6               	movwf	tempCalc@steinhart+1
  8252  0128  0832               	movf	?___ftmul+2,w
  8253  0129  00E7               	movwf	tempCalc@steinhart+2
  8254                           
  8255                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8256  012A  3000               	movlw	0
  8257  012B  00C0               	movwf	___ftadd@f1
  8258  012C  30A0               	movlw	160
  8259  012D  00C1               	movwf	___ftadd@f1+1
  8260  012E  3043               	movlw	67
  8261  012F  00C2               	movwf	___ftadd@f1+2
  8262  0130  3000               	movlw	0
  8263  0131  00A0               	movwf	___ftdiv@f2
  8264  0132  30A0               	movlw	160
  8265  0133  00A1               	movwf	___ftdiv@f2+1
  8266  0134  3040               	movlw	64
  8267  0135  00A2               	movwf	___ftdiv@f2+2
  8268  0136  3000               	movlw	0
  8269  0137  00B0               	movwf	___ftmul@f1
  8270  0138  3010               	movlw	16
  8271  0139  00B1               	movwf	___ftmul@f1+1
  8272  013A  3041               	movlw	65
  8273  013B  00B2               	movwf	___ftmul@f1+2
  8274  013C  0865               	movf	tempCalc@steinhart,w
  8275  013D  00B3               	movwf	___ftmul@f2
  8276  013E  0866               	movf	tempCalc@steinhart+1,w
  8277  013F  00B4               	movwf	___ftmul@f2+1
  8278  0140  0867               	movf	tempCalc@steinhart+2,w
  8279  0141  00B5               	movwf	___ftmul@f2+2
  8280  0142  318D  259D  3180   	fcall	___ftmul
  8281  0145  0020               	movlb	0	; select bank0
  8282  0146  0830               	movf	?___ftmul,w
  8283  0147  00A3               	movwf	___ftdiv@f1
  8284  0148  0831               	movf	?___ftmul+1,w
  8285  0149  00A4               	movwf	___ftdiv@f1+1
  8286  014A  0832               	movf	?___ftmul+2,w
  8287  014B  00A5               	movwf	___ftdiv@f1+2
  8288  014C  318C  2444  3180   	fcall	___ftdiv
  8289  014F  0020               	movlb	0	; select bank0
  8290  0150  0820               	movf	?___ftdiv,w
  8291  0151  00C3               	movwf	___ftadd@f2
  8292  0152  0821               	movf	?___ftdiv+1,w
  8293  0153  00C4               	movwf	___ftadd@f2+1
  8294  0154  0822               	movf	?___ftdiv+2,w
  8295  0155  00C5               	movwf	___ftadd@f2+2
  8296  0156  318F  270A  3180   	fcall	___ftadd
  8297  0159  0020               	movlb	0	; select bank0
  8298  015A  0840               	movf	?___ftadd,w
  8299  015B  00E5               	movwf	tempCalc@steinhart
  8300  015C  0841               	movf	?___ftadd+1,w
  8301  015D  00E6               	movwf	tempCalc@steinhart+1
  8302  015E  0842               	movf	?___ftadd+2,w
  8303  015F  00E7               	movwf	tempCalc@steinhart+2
  8304                           
  8305                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8306  0160  0865               	movf	tempCalc@steinhart,w
  8307  0161  00B0               	movwf	___fttol@f1
  8308  0162  0866               	movf	tempCalc@steinhart+1,w
  8309  0163  00B1               	movwf	___fttol@f1+1
  8310  0164  0867               	movf	tempCalc@steinhart+2,w
  8311  0165  00B2               	movwf	___fttol@f1+2
  8312  0166  318B  23BD         	fcall	___fttol
  8313  0168  0020               	movlb	0	; select bank0
  8314  0169  0831               	movf	?___fttol+1,w
  8315  016A  00DE               	movwf	?_tempCalc+1
  8316  016B  0830               	movf	?___fttol,w
  8317  016C  00DD               	movwf	?_tempCalc
  8318  016D  0008               	return
  8319  016E                     __end_of_tempCalc:	
  8320                           
  8321                           	psect	text2
  8322  0CED                     __ptext2:	
  8323 ;; *************** function _log *****************
  8324 ;; Defined at:
  8325 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;  x               3   55[BANK0 ] int 
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;  exponent        2   59[BANK0 ] int 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  3   55[BANK0 ] int 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8339 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8341 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8342 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;Total ram usage:        6 bytes
  8344 ;; Hardware stack levels used:    1
  8345 ;; Hardware stack levels required when called:    3
  8346 ;; This function calls:
  8347 ;;		___awtoft
  8348 ;;		___ftadd
  8349 ;;		___ftge
  8350 ;;		___ftmul
  8351 ;;		_eval_poly
  8352 ;;		_frexp
  8353 ;; This function is called by:
  8354 ;;		_tempCalc
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           
  8359                           ;psect for function _log
  8360  0CED                     _log:	
  8361                           
  8362                           ;incstack = 0
  8363                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8364  0CED  0020               	movlb	0	; select bank0
  8365  0CEE  0857               	movf	log@x,w
  8366  0CEF  00F0               	movwf	___ftge@ff1
  8367  0CF0  0858               	movf	log@x+1,w
  8368  0CF1  00F1               	movwf	___ftge@ff1+1
  8369  0CF2  0859               	movf	log@x+2,w
  8370  0CF3  00F2               	movwf	___ftge@ff1+2
  8371  0CF4  3000               	movlw	0
  8372  0CF5  00F3               	movwf	___ftge@ff2
  8373  0CF6  3000               	movlw	0
  8374  0CF7  00F4               	movwf	___ftge@ff2+1
  8375  0CF8  3000               	movlw	0
  8376  0CF9  00F5               	movwf	___ftge@ff2+2
  8377  0CFA  3196  26B3  318C   	fcall	___ftge
  8378  0CFD  1803               	btfsc	3,0
  8379  0CFE  2D0C               	goto	l2555
  8380  0CFF  3021               	movlw	33
  8381  0D00  0021               	movlb	1	; select bank1
  8382  0D01  00D9               	movwf	_errno^(0+128)
  8383  0D02  3000               	movlw	0
  8384  0D03  00DA               	movwf	(_errno^(0+128)+1)
  8385  0D04  3000               	movlw	0
  8386  0D05  0020               	movlb	0	; select bank0
  8387  0D06  00D7               	movwf	?_log
  8388  0D07  3000               	movlw	0
  8389  0D08  00D8               	movwf	?_log+1
  8390  0D09  3000               	movlw	0
  8391  0D0A  00D9               	movwf	?_log+2
  8392  0D0B  0008               	return
  8393  0D0C                     l2555:	
  8394  0D0C  0020               	movlb	0	; select bank0
  8395  0D0D  0859               	movf	log@x+2,w
  8396  0D0E  0458               	iorwf	log@x+1,w
  8397  0D0F  0457               	iorwf	log@x,w
  8398  0D10  1D03               	skipz
  8399  0D11  2D1F               	goto	l2561
  8400  0D12  3022               	movlw	34
  8401  0D13  0021               	movlb	1	; select bank1
  8402  0D14  00D9               	movwf	_errno^(0+128)
  8403  0D15  3000               	movlw	0
  8404  0D16  00DA               	movwf	(_errno^(0+128)+1)
  8405  0D17  3000               	movlw	0
  8406  0D18  0020               	movlb	0	; select bank0
  8407  0D19  00D7               	movwf	?_log
  8408  0D1A  3000               	movlw	0
  8409  0D1B  00D8               	movwf	?_log+1
  8410  0D1C  3000               	movlw	0
  8411  0D1D  00D9               	movwf	?_log+2
  8412  0D1E  0008               	return
  8413  0D1F                     l2561:	
  8414  0D1F  3000               	movlw	0
  8415  0D20  00C0               	movwf	___ftadd@f1
  8416  0D21  3080               	movlw	128
  8417  0D22  00C1               	movwf	___ftadd@f1+1
  8418  0D23  30BF               	movlw	191
  8419  0D24  00C2               	movwf	___ftadd@f1+2
  8420  0D25  3000               	movlw	0
  8421  0D26  00B0               	movwf	___ftmul@f1
  8422  0D27  3000               	movlw	0
  8423  0D28  00B1               	movwf	___ftmul@f1+1
  8424  0D29  3040               	movlw	64
  8425  0D2A  00B2               	movwf	___ftmul@f1+2
  8426  0D2B  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8427  0D2C  00DA               	movwf	??_log
  8428  0D2D  085A               	movf	??_log,w
  8429  0D2E  00F3               	movwf	frexp@eptr
  8430  0D2F  0857               	movf	log@x,w
  8431  0D30  00F0               	movwf	frexp@value
  8432  0D31  0858               	movf	log@x+1,w
  8433  0D32  00F1               	movwf	frexp@value+1
  8434  0D33  0859               	movf	log@x+2,w
  8435  0D34  00F2               	movwf	frexp@value+2
  8436  0D35  3196  26EE  318C   	fcall	_frexp
  8437  0D38  0870               	movf	?_frexp,w
  8438  0D39  0020               	movlb	0	; select bank0
  8439  0D3A  00B3               	movwf	___ftmul@f2
  8440  0D3B  0871               	movf	?_frexp+1,w
  8441  0D3C  00B4               	movwf	___ftmul@f2+1
  8442  0D3D  0872               	movf	?_frexp+2,w
  8443  0D3E  00B5               	movwf	___ftmul@f2+2
  8444  0D3F  318D  259D  318C   	fcall	___ftmul
  8445  0D42  0020               	movlb	0	; select bank0
  8446  0D43  0830               	movf	?___ftmul,w
  8447  0D44  00C3               	movwf	___ftadd@f2
  8448  0D45  0831               	movf	?___ftmul+1,w
  8449  0D46  00C4               	movwf	___ftadd@f2+1
  8450  0D47  0832               	movf	?___ftmul+2,w
  8451  0D48  00C5               	movwf	___ftadd@f2+2
  8452  0D49  318F  270A  318C   	fcall	___ftadd
  8453  0D4C  0020               	movlb	0	; select bank0
  8454  0D4D  0840               	movf	?___ftadd,w
  8455  0D4E  00D7               	movwf	log@x
  8456  0D4F  0841               	movf	?___ftadd+1,w
  8457  0D50  00D8               	movwf	log@x+1
  8458  0D51  0842               	movf	?___ftadd+2,w
  8459  0D52  00D9               	movwf	log@x+2
  8460  0D53  30FF               	movlw	255
  8461  0D54  07DB               	addwf	log@exponent,f
  8462  0D55  30FF               	movlw	255
  8463  0D56  3DDC               	addwfc	log@exponent+1,f
  8464  0D57  0857               	movf	log@x,w
  8465  0D58  00CD               	movwf	eval_poly@x
  8466  0D59  0858               	movf	log@x+1,w
  8467  0D5A  00CE               	movwf	eval_poly@x+1
  8468  0D5B  0859               	movf	log@x+2,w
  8469  0D5C  00CF               	movwf	eval_poly@x+2
  8470  0D5D  3000               	movlw	low (log@coeff| (0+32768))
  8471  0D5E  00D0               	movwf	eval_poly@d
  8472  0D5F  3098               	movlw	high (log@coeff| (0+32768))
  8473  0D60  00D1               	movwf	eval_poly@d+1
  8474  0D61  3008               	movlw	8
  8475  0D62  00D2               	movwf	eval_poly@n
  8476  0D63  3000               	movlw	0
  8477  0D64  00D3               	movwf	eval_poly@n+1
  8478  0D65  3189  218E  318C   	fcall	_eval_poly
  8479  0D68  0020               	movlb	0	; select bank0
  8480  0D69  084D               	movf	?_eval_poly,w
  8481  0D6A  00D7               	movwf	log@x
  8482  0D6B  084E               	movf	?_eval_poly+1,w
  8483  0D6C  00D8               	movwf	log@x+1
  8484  0D6D  084F               	movf	?_eval_poly+2,w
  8485  0D6E  00D9               	movwf	log@x+2
  8486  0D6F  0857               	movf	log@x,w
  8487  0D70  00C0               	movwf	___ftadd@f1
  8488  0D71  0858               	movf	log@x+1,w
  8489  0D72  00C1               	movwf	___ftadd@f1+1
  8490  0D73  0859               	movf	log@x+2,w
  8491  0D74  00C2               	movwf	___ftadd@f1+2
  8492  0D75  3072               	movlw	114
  8493  0D76  00B0               	movwf	___ftmul@f1
  8494  0D77  3031               	movlw	49
  8495  0D78  00B1               	movwf	___ftmul@f1+1
  8496  0D79  303F               	movlw	63
  8497  0D7A  00B2               	movwf	___ftmul@f1+2
  8498  0D7B  085C               	movf	log@exponent+1,w
  8499  0D7C  00F9               	movwf	___awtoft@c+1
  8500  0D7D  085B               	movf	log@exponent,w
  8501  0D7E  00F8               	movwf	___awtoft@c
  8502  0D7F  3195  2576  318C   	fcall	___awtoft
  8503  0D82  0878               	movf	?___awtoft,w
  8504  0D83  0020               	movlb	0	; select bank0
  8505  0D84  00B3               	movwf	___ftmul@f2
  8506  0D85  0879               	movf	?___awtoft+1,w
  8507  0D86  00B4               	movwf	___ftmul@f2+1
  8508  0D87  087A               	movf	?___awtoft+2,w
  8509  0D88  00B5               	movwf	___ftmul@f2+2
  8510  0D89  318D  259D  318C   	fcall	___ftmul
  8511  0D8C  0020               	movlb	0	; select bank0
  8512  0D8D  0830               	movf	?___ftmul,w
  8513  0D8E  00C3               	movwf	___ftadd@f2
  8514  0D8F  0831               	movf	?___ftmul+1,w
  8515  0D90  00C4               	movwf	___ftadd@f2+1
  8516  0D91  0832               	movf	?___ftmul+2,w
  8517  0D92  00C5               	movwf	___ftadd@f2+2
  8518  0D93  318F  270A         	fcall	___ftadd
  8519  0D95  0020               	movlb	0	; select bank0
  8520  0D96  0840               	movf	?___ftadd,w
  8521  0D97  00D7               	movwf	?_log
  8522  0D98  0841               	movf	?___ftadd+1,w
  8523  0D99  00D8               	movwf	?_log+1
  8524  0D9A  0842               	movf	?___ftadd+2,w
  8525  0D9B  00D9               	movwf	?_log+2
  8526  0D9C  0008               	return
  8527  0D9D                     __end_of_log:	
  8528                           
  8529                           	psect	text3
  8530  16EE                     __ptext3:	
  8531 ;; *************** function _frexp *****************
  8532 ;; Defined at:
  8533 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;  value           3    0[COMMON] int 
  8536 ;;  eptr            1    3[COMMON] PTR int 
  8537 ;;		 -> log@exponent(2), 
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  3    0[COMMON] PTR int 
  8542 ;; Registers used:
  8543 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;Total ram usage:        6 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; This function calls:
  8556 ;;		Nothing
  8557 ;; This function is called by:
  8558 ;;		_log
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           
  8563                           ;psect for function _frexp
  8564  16EE                     _frexp:	
  8565                           
  8566                           ;incstack = 0
  8567                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8568  16EE  0872               	movf	frexp@value+2,w
  8569  16EF  0471               	iorwf	frexp@value+1,w
  8570  16F0  0470               	iorwf	frexp@value,w
  8571  16F1  1D03               	skipz
  8572  16F2  2F00               	goto	l2357
  8573  16F3  0873               	movf	frexp@eptr,w
  8574  16F4  0086               	movwf	6
  8575  16F5  0187               	clrf	7
  8576  16F6  3000               	movlw	0
  8577  16F7  3FC0               	movwi [0]fsr1
  8578  16F8  3FC1               	movwi [1]fsr1
  8579  16F9  3000               	movlw	0
  8580  16FA  00F0               	movwf	?_frexp
  8581  16FB  3000               	movlw	0
  8582  16FC  00F1               	movwf	?_frexp+1
  8583  16FD  3000               	movlw	0
  8584  16FE  00F2               	movwf	?_frexp+2
  8585  16FF  0008               	return
  8586  1700                     l2357:	
  8587  1700  0872               	movf	frexp@value+2,w
  8588  1701  397F               	andlw	127
  8589  1702  00F4               	movwf	??_frexp
  8590  1703  01F5               	clrf	??_frexp+1
  8591  1704  35F4               	lslf	??_frexp,f
  8592  1705  0DF5               	rlf	??_frexp+1,f
  8593  1706  0873               	movf	frexp@eptr,w
  8594  1707  0086               	movwf	6
  8595  1708  0187               	clrf	7
  8596  1709  0874               	movf	??_frexp,w
  8597  170A  3FC0               	movwi [0]fsr1
  8598  170B  0875               	movf	??_frexp+1,w
  8599  170C  3FC1               	movwi [1]fsr1
  8600  170D  0D71               	rlf	frexp@value+1,w
  8601  170E  0D71               	rlf	frexp@value+1,w
  8602  170F  3901               	andlw	1
  8603  1710  00F4               	movwf	??_frexp
  8604  1711  01F5               	clrf	??_frexp+1
  8605  1712  0873               	movf	frexp@eptr,w
  8606  1713  0086               	movwf	6
  8607  1714  0187               	clrf	7
  8608  1715  0874               	movf	??_frexp,w
  8609  1716  0481               	iorwf	1,f
  8610  1717  3141               	addfsr 1,1
  8611  1718  0875               	movf	??_frexp+1,w
  8612  1719  0481               	iorwf	1,f
  8613  171A  0873               	movf	frexp@eptr,w
  8614  171B  0086               	movwf	6
  8615  171C  0187               	clrf	7
  8616  171D  3082               	movlw	130
  8617  171E  0781               	addwf	1,f
  8618  171F  3141               	addfsr 1,1
  8619  1720  30FF               	movlw	255
  8620  1721  3D81               	addwfc	1,f
  8621  1722  317F               	addfsr 1,-1
  8622  1723  0872               	movf	frexp@value+2,w
  8623  1724  3980               	andlw	-128
  8624  1725  383F               	iorlw	63
  8625  1726  00F2               	movwf	frexp@value+2
  8626  1727  13F1               	bcf	frexp@value+1,7
  8627  1728  0008               	return
  8628  1729                     __end_of_frexp:	
  8629                           
  8630                           	psect	text4
  8631  098E                     __ptext4:	
  8632 ;; *************** function _eval_poly *****************
  8633 ;; Defined at:
  8634 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  x               3   45[BANK0 ] PTR int 
  8637 ;;  d               2   48[BANK0 ] PTR const 
  8638 ;;		 -> log@coeff(27), 
  8639 ;;  n               2   50[BANK0 ] int 
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;  res             3   52[BANK0 ] int 
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  3   45[BANK0 ] int 
  8644 ;; Registers used:
  8645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8651 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;Total ram usage:       10 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:    2
  8658 ;; This function calls:
  8659 ;;		___ftadd
  8660 ;;		___ftmul
  8661 ;;		___wmul
  8662 ;; This function is called by:
  8663 ;;		_log
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           
  8668                           ;psect for function _eval_poly
  8669  098E                     _eval_poly:	
  8670                           
  8671                           ;incstack = 0
  8672                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8673  098E  0020               	movlb	0	; select bank0
  8674  098F  0853               	movf	eval_poly@n+1,w
  8675  0990  00FA               	movwf	___wmul@multiplier+1
  8676  0991  0852               	movf	eval_poly@n,w
  8677  0992  00F9               	movwf	___wmul@multiplier
  8678  0993  3003               	movlw	3
  8679  0994  00FB               	movwf	___wmul@multiplicand
  8680  0995  3000               	movlw	0
  8681  0996  00FC               	movwf	___wmul@multiplicand+1
  8682  0997  3194  24FC  3189   	fcall	___wmul
  8683  099A  0020               	movlb	0	; select bank0
  8684  099B  0850               	movf	eval_poly@d,w
  8685  099C  0779               	addwf	?___wmul,w
  8686  099D  0084               	movwf	4
  8687  099E  0851               	movf	eval_poly@d+1,w
  8688  099F  3D7A               	addwfc	?___wmul+1,w
  8689  09A0  0085               	movwf	5
  8690  09A1  3F00               	moviw [0]fsr0
  8691  09A2  00D4               	movwf	eval_poly@res
  8692  09A3  3F01               	moviw [1]fsr0
  8693  09A4  00D5               	movwf	eval_poly@res+1
  8694  09A5  3F02               	moviw [2]fsr0
  8695  09A6                     L2:	
  8696  09A6  00D6               	movwf	eval_poly@res+2
  8697  09A7  0852               	movf	eval_poly@n,w
  8698  09A8  0453               	iorwf	eval_poly@n+1,w
  8699  09A9  1903               	btfsc	3,2
  8700  09AA  29E7               	goto	l2375
  8701  09AB  30FF               	movlw	255
  8702  09AC  07D2               	addwf	eval_poly@n,f
  8703  09AD  30FF               	movlw	255
  8704  09AE  3DD3               	addwfc	eval_poly@n+1,f
  8705  09AF  0853               	movf	eval_poly@n+1,w
  8706  09B0  00FA               	movwf	___wmul@multiplier+1
  8707  09B1  0852               	movf	eval_poly@n,w
  8708  09B2  00F9               	movwf	___wmul@multiplier
  8709  09B3  3003               	movlw	3
  8710  09B4  00FB               	movwf	___wmul@multiplicand
  8711  09B5  3000               	movlw	0
  8712  09B6  00FC               	movwf	___wmul@multiplicand+1
  8713  09B7  3194  24FC  3189   	fcall	___wmul
  8714  09BA  0020               	movlb	0	; select bank0
  8715  09BB  0850               	movf	eval_poly@d,w
  8716  09BC  0779               	addwf	?___wmul,w
  8717  09BD  0084               	movwf	4
  8718  09BE  0851               	movf	eval_poly@d+1,w
  8719  09BF  3D7A               	addwfc	?___wmul+1,w
  8720  09C0  0085               	movwf	5
  8721  09C1  3F00               	moviw [0]fsr0
  8722  09C2  00C0               	movwf	___ftadd@f1
  8723  09C3  3F01               	moviw [1]fsr0
  8724  09C4  00C1               	movwf	___ftadd@f1+1
  8725  09C5  3F02               	moviw [2]fsr0
  8726  09C6  00C2               	movwf	___ftadd@f1+2
  8727  09C7  0854               	movf	eval_poly@res,w
  8728  09C8  00B0               	movwf	___ftmul@f1
  8729  09C9  0855               	movf	eval_poly@res+1,w
  8730  09CA  00B1               	movwf	___ftmul@f1+1
  8731  09CB  0856               	movf	eval_poly@res+2,w
  8732  09CC  00B2               	movwf	___ftmul@f1+2
  8733  09CD  084D               	movf	eval_poly@x,w
  8734  09CE  00B3               	movwf	___ftmul@f2
  8735  09CF  084E               	movf	eval_poly@x+1,w
  8736  09D0  00B4               	movwf	___ftmul@f2+1
  8737  09D1  084F               	movf	eval_poly@x+2,w
  8738  09D2  00B5               	movwf	___ftmul@f2+2
  8739  09D3  318D  259D  3189   	fcall	___ftmul
  8740  09D6  0020               	movlb	0	; select bank0
  8741  09D7  0830               	movf	?___ftmul,w
  8742  09D8  00C3               	movwf	___ftadd@f2
  8743  09D9  0831               	movf	?___ftmul+1,w
  8744  09DA  00C4               	movwf	___ftadd@f2+1
  8745  09DB  0832               	movf	?___ftmul+2,w
  8746  09DC  00C5               	movwf	___ftadd@f2+2
  8747  09DD  318F  270A  3189   	fcall	___ftadd
  8748  09E0  0020               	movlb	0	; select bank0
  8749  09E1  0840               	movf	?___ftadd,w
  8750  09E2  00D4               	movwf	eval_poly@res
  8751  09E3  0841               	movf	?___ftadd+1,w
  8752  09E4  00D5               	movwf	eval_poly@res+1
  8753  09E5  0842               	movf	?___ftadd+2,w
  8754  09E6  29A6               	goto	L2
  8755  09E7                     l2375:	
  8756  09E7  0854               	movf	eval_poly@res,w
  8757  09E8  00CD               	movwf	?_eval_poly
  8758  09E9  0855               	movf	eval_poly@res+1,w
  8759  09EA  00CE               	movwf	?_eval_poly+1
  8760  09EB  0856               	movf	eval_poly@res+2,w
  8761  09EC  00CF               	movwf	?_eval_poly+2
  8762  09ED  0008               	return
  8763  09EE                     __end_of_eval_poly:	
  8764                           
  8765                           	psect	text5
  8766  0D9D                     __ptext5:	
  8767 ;; *************** function ___ftmul *****************
  8768 ;; Defined at:
  8769 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;  f1              3   16[BANK0 ] float 
  8772 ;;  f2              3   19[BANK0 ] float 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  8775 ;;  sign            1   31[BANK0 ] unsigned char 
  8776 ;;  cntr            1   30[BANK0 ] unsigned char 
  8777 ;;  exp             1   26[BANK0 ] unsigned char 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  3   16[BANK0 ] float 
  8780 ;; Registers used:
  8781 ;;		wreg, status,2, status,0, pclath, cstack
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8787 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8788 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8789 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8790 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;Total ram usage:       16 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:    1
  8794 ;; This function calls:
  8795 ;;		___ftpack
  8796 ;; This function is called by:
  8797 ;;		_tempCalc
  8798 ;;		_main
  8799 ;;		_log
  8800 ;;		_eval_poly
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           
  8805                           ;psect for function ___ftmul
  8806  0D9D                     ___ftmul:	
  8807                           
  8808                           ;incstack = 0
  8809                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8810  0D9D  0020               	movlb	0	; select bank0
  8811  0D9E  0830               	movf	___ftmul@f1,w
  8812  0D9F  00B6               	movwf	??___ftmul
  8813  0DA0  0831               	movf	___ftmul@f1+1,w
  8814  0DA1  00B7               	movwf	??___ftmul+1
  8815  0DA2  0832               	movf	___ftmul@f1+2,w
  8816  0DA3  00B8               	movwf	??___ftmul+2
  8817  0DA4  1003               	clrc
  8818  0DA5  0D37               	rlf	??___ftmul+1,w
  8819  0DA6  0D38               	rlf	??___ftmul+2,w
  8820  0DA7  00B9               	movwf	??___ftmul+3
  8821  0DA8  0839               	movf	??___ftmul+3,w
  8822  0DA9  00BA               	movwf	___ftmul@exp
  8823  0DAA  083A               	movf	___ftmul@exp,w
  8824  0DAB  1D03               	btfss	3,2
  8825  0DAC  2DB4               	goto	l2271
  8826  0DAD  3000               	movlw	0
  8827  0DAE  00B0               	movwf	?___ftmul
  8828  0DAF  3000               	movlw	0
  8829  0DB0  00B1               	movwf	?___ftmul+1
  8830  0DB1  3000               	movlw	0
  8831  0DB2  00B2               	movwf	?___ftmul+2
  8832  0DB3  0008               	return
  8833  0DB4                     l2271:	
  8834  0DB4  0833               	movf	___ftmul@f2,w
  8835  0DB5  00B6               	movwf	??___ftmul
  8836  0DB6  0834               	movf	___ftmul@f2+1,w
  8837  0DB7  00B7               	movwf	??___ftmul+1
  8838  0DB8  0835               	movf	___ftmul@f2+2,w
  8839  0DB9  00B8               	movwf	??___ftmul+2
  8840  0DBA  1003               	clrc
  8841  0DBB  0D37               	rlf	??___ftmul+1,w
  8842  0DBC  0D38               	rlf	??___ftmul+2,w
  8843  0DBD  00B9               	movwf	??___ftmul+3
  8844  0DBE  0839               	movf	??___ftmul+3,w
  8845  0DBF  00BF               	movwf	___ftmul@sign
  8846  0DC0  083F               	movf	___ftmul@sign,w
  8847  0DC1  1D03               	btfss	3,2
  8848  0DC2  2DCA               	goto	l2277
  8849  0DC3  3000               	movlw	0
  8850  0DC4  00B0               	movwf	?___ftmul
  8851  0DC5  3000               	movlw	0
  8852  0DC6  00B1               	movwf	?___ftmul+1
  8853  0DC7  3000               	movlw	0
  8854  0DC8  00B2               	movwf	?___ftmul+2
  8855  0DC9  0008               	return
  8856  0DCA                     l2277:	
  8857  0DCA  083F               	movf	___ftmul@sign,w
  8858  0DCB  3E7B               	addlw	123
  8859  0DCC  00B6               	movwf	??___ftmul
  8860  0DCD  0836               	movf	??___ftmul,w
  8861  0DCE  07BA               	addwf	___ftmul@exp,f
  8862  0DCF  0830               	movf	___ftmul@f1,w
  8863  0DD0  00B6               	movwf	??___ftmul
  8864  0DD1  0831               	movf	___ftmul@f1+1,w
  8865  0DD2  00B7               	movwf	??___ftmul+1
  8866  0DD3  0832               	movf	___ftmul@f1+2,w
  8867  0DD4  00B8               	movwf	??___ftmul+2
  8868  0DD5  3010               	movlw	16
  8869  0DD6                     u2305:	
  8870  0DD6  36B8               	lsrf	??___ftmul+2,f
  8871  0DD7  0CB7               	rrf	??___ftmul+1,f
  8872  0DD8  0CB6               	rrf	??___ftmul,f
  8873  0DD9  0B89               	decfsz	9,f
  8874  0DDA  2DD6               	goto	u2305
  8875  0DDB  0836               	movf	??___ftmul,w
  8876  0DDC  00B9               	movwf	??___ftmul+3
  8877  0DDD  0839               	movf	??___ftmul+3,w
  8878  0DDE  00BF               	movwf	___ftmul@sign
  8879  0DDF  0833               	movf	___ftmul@f2,w
  8880  0DE0  00B6               	movwf	??___ftmul
  8881  0DE1  0834               	movf	___ftmul@f2+1,w
  8882  0DE2  00B7               	movwf	??___ftmul+1
  8883  0DE3  0835               	movf	___ftmul@f2+2,w
  8884  0DE4  00B8               	movwf	??___ftmul+2
  8885  0DE5  3010               	movlw	16
  8886  0DE6                     u2315:	
  8887  0DE6  36B8               	lsrf	??___ftmul+2,f
  8888  0DE7  0CB7               	rrf	??___ftmul+1,f
  8889  0DE8  0CB6               	rrf	??___ftmul,f
  8890  0DE9  0B89               	decfsz	9,f
  8891  0DEA  2DE6               	goto	u2315
  8892  0DEB  0836               	movf	??___ftmul,w
  8893  0DEC  00B9               	movwf	??___ftmul+3
  8894  0DED  0839               	movf	??___ftmul+3,w
  8895  0DEE  06BF               	xorwf	___ftmul@sign,f
  8896  0DEF  3080               	movlw	128
  8897  0DF0  00B6               	movwf	??___ftmul
  8898  0DF1  0836               	movf	??___ftmul,w
  8899  0DF2  05BF               	andwf	___ftmul@sign,f
  8900  0DF3  17B1               	bsf	___ftmul@f1+1,7
  8901  0DF4  17B4               	bsf	___ftmul@f2+1,7
  8902  0DF5  30FF               	movlw	255
  8903  0DF6  05B3               	andwf	___ftmul@f2,f
  8904  0DF7  30FF               	movlw	255
  8905  0DF8  05B4               	andwf	___ftmul@f2+1,f
  8906  0DF9  3000               	movlw	0
  8907  0DFA  05B5               	andwf	___ftmul@f2+2,f
  8908  0DFB  3000               	movlw	0
  8909  0DFC  00BB               	movwf	___ftmul@f3_as_product
  8910  0DFD  3000               	movlw	0
  8911  0DFE  00BC               	movwf	___ftmul@f3_as_product+1
  8912  0DFF  3000               	movlw	0
  8913  0E00  00BD               	movwf	___ftmul@f3_as_product+2
  8914  0E01  3007               	movlw	7
  8915  0E02  00B6               	movwf	??___ftmul
  8916  0E03  0836               	movf	??___ftmul,w
  8917  0E04  00BE               	movwf	___ftmul@cntr
  8918  0E05                     l2289:	
  8919  0E05  1C30               	btfss	___ftmul@f1,0
  8920  0E06  2E0D               	goto	l2293
  8921  0E07  0833               	movf	___ftmul@f2,w
  8922  0E08  07BB               	addwf	___ftmul@f3_as_product,f
  8923  0E09  0834               	movf	___ftmul@f2+1,w
  8924  0E0A  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  8925  0E0B  0835               	movf	___ftmul@f2+2,w
  8926  0E0C  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  8927  0E0D                     l2293:	
  8928  0E0D  3001               	movlw	1
  8929  0E0E                     u2335:	
  8930  0E0E  36B2               	lsrf	___ftmul@f1+2,f
  8931  0E0F  0CB1               	rrf	___ftmul@f1+1,f
  8932  0E10  0CB0               	rrf	___ftmul@f1,f
  8933  0E11  0B89               	decfsz	9,f
  8934  0E12  2E0E               	goto	u2335
  8935  0E13  3001               	movlw	1
  8936  0E14                     u2345:	
  8937  0E14  35B3               	lslf	___ftmul@f2,f
  8938  0E15  0DB4               	rlf	___ftmul@f2+1,f
  8939  0E16  0DB5               	rlf	___ftmul@f2+2,f
  8940  0E17  0B89               	decfsz	9,f
  8941  0E18  2E14               	goto	u2345
  8942  0E19  3001               	movlw	1
  8943  0E1A  02BE               	subwf	___ftmul@cntr,f
  8944  0E1B  1D03               	btfss	3,2
  8945  0E1C  2E05               	goto	l2289
  8946  0E1D  3009               	movlw	9
  8947  0E1E  00B6               	movwf	??___ftmul
  8948  0E1F  0836               	movf	??___ftmul,w
  8949  0E20  00BE               	movwf	___ftmul@cntr
  8950  0E21                     l2301:	
  8951  0E21  1C30               	btfss	___ftmul@f1,0
  8952  0E22  2E29               	goto	l2305
  8953  0E23  0833               	movf	___ftmul@f2,w
  8954  0E24  07BB               	addwf	___ftmul@f3_as_product,f
  8955  0E25  0834               	movf	___ftmul@f2+1,w
  8956  0E26  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  8957  0E27  0835               	movf	___ftmul@f2+2,w
  8958  0E28  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  8959  0E29                     l2305:	
  8960  0E29  3001               	movlw	1
  8961  0E2A                     u2375:	
  8962  0E2A  36B2               	lsrf	___ftmul@f1+2,f
  8963  0E2B  0CB1               	rrf	___ftmul@f1+1,f
  8964  0E2C  0CB0               	rrf	___ftmul@f1,f
  8965  0E2D  0B89               	decfsz	9,f
  8966  0E2E  2E2A               	goto	u2375
  8967  0E2F  3001               	movlw	1
  8968  0E30                     u2385:	
  8969  0E30  36BD               	lsrf	___ftmul@f3_as_product+2,f
  8970  0E31  0CBC               	rrf	___ftmul@f3_as_product+1,f
  8971  0E32  0CBB               	rrf	___ftmul@f3_as_product,f
  8972  0E33  0B89               	decfsz	9,f
  8973  0E34  2E30               	goto	u2385
  8974  0E35  3001               	movlw	1
  8975  0E36  02BE               	subwf	___ftmul@cntr,f
  8976  0E37  1D03               	btfss	3,2
  8977  0E38  2E21               	goto	l2301
  8978  0E39  083B               	movf	___ftmul@f3_as_product,w
  8979  0E3A  00F0               	movwf	___ftpack@arg
  8980  0E3B  083C               	movf	___ftmul@f3_as_product+1,w
  8981  0E3C  00F1               	movwf	___ftpack@arg+1
  8982  0E3D  083D               	movf	___ftmul@f3_as_product+2,w
  8983  0E3E  00F2               	movwf	___ftpack@arg+2
  8984  0E3F  083A               	movf	___ftmul@exp,w
  8985  0E40  00B6               	movwf	??___ftmul
  8986  0E41  0836               	movf	??___ftmul,w
  8987  0E42  00F3               	movwf	___ftpack@exp
  8988  0E43  083F               	movf	___ftmul@sign,w
  8989  0E44  00B7               	movwf	??___ftmul+1
  8990  0E45  0837               	movf	??___ftmul+1,w
  8991  0E46  00F4               	movwf	___ftpack@sign
  8992  0E47  3189  21EE         	fcall	___ftpack
  8993  0E49  0870               	movf	?___ftpack,w
  8994  0E4A  0020               	movlb	0	; select bank0
  8995  0E4B  00B0               	movwf	?___ftmul
  8996  0E4C  0871               	movf	?___ftpack+1,w
  8997  0E4D  00B1               	movwf	?___ftmul+1
  8998  0E4E  0872               	movf	?___ftpack+2,w
  8999  0E4F  00B2               	movwf	?___ftmul+2
  9000  0E50  0008               	return
  9001  0E51                     __end_of___ftmul:	
  9002                           
  9003                           	psect	text6
  9004  16B3                     __ptext6:	
  9005 ;; *************** function ___ftge *****************
  9006 ;; Defined at:
  9007 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  ff1             3    0[COMMON] float 
  9010 ;;  ff2             3    3[COMMON] float 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;		None
  9013 ;; Return value:  Size  Location     Type
  9014 ;;		None               void
  9015 ;; Registers used:
  9016 ;;		wreg, status,2, status,0
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9022 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;Total ram usage:        9 bytes
  9027 ;; Hardware stack levels used:    1
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		_log
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           
  9036                           ;psect for function ___ftge
  9037  16B3                     ___ftge:	
  9038                           
  9039                           ;incstack = 0
  9040                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9041  16B3  1FF2               	btfss	___ftge@ff1+2,7
  9042  16B4  2EC9               	goto	l2333
  9043  16B5  0970               	comf	___ftge@ff1,w
  9044  16B6  00F6               	movwf	??___ftge
  9045  16B7  0971               	comf	___ftge@ff1+1,w
  9046  16B8  00F7               	movwf	??___ftge+1
  9047  16B9  0972               	comf	___ftge@ff1+2,w
  9048  16BA  00F8               	movwf	??___ftge+2
  9049  16BB  0AF6               	incf	??___ftge,f
  9050  16BC  1903               	skipnz
  9051  16BD  0AF7               	incf	??___ftge+1,f
  9052  16BE  1903               	skipnz
  9053  16BF  0AF8               	incf	??___ftge+2,f
  9054  16C0  3000               	movlw	0
  9055  16C1  0776               	addwf	??___ftge,w
  9056  16C2  00F0               	movwf	___ftge@ff1
  9057  16C3  3000               	movlw	0
  9058  16C4  3D77               	addwfc	??___ftge+1,w
  9059  16C5  00F1               	movwf	___ftge@ff1+1
  9060  16C6  3080               	movlw	128
  9061  16C7  3D78               	addwfc	??___ftge+2,w
  9062  16C8  00F2               	movwf	___ftge@ff1+2
  9063  16C9                     l2333:	
  9064  16C9  1FF5               	btfss	___ftge@ff2+2,7
  9065  16CA  2EDF               	goto	l2337
  9066  16CB  0973               	comf	___ftge@ff2,w
  9067  16CC  00F6               	movwf	??___ftge
  9068  16CD  0974               	comf	___ftge@ff2+1,w
  9069  16CE  00F7               	movwf	??___ftge+1
  9070  16CF  0975               	comf	___ftge@ff2+2,w
  9071  16D0  00F8               	movwf	??___ftge+2
  9072  16D1  0AF6               	incf	??___ftge,f
  9073  16D2  1903               	skipnz
  9074  16D3  0AF7               	incf	??___ftge+1,f
  9075  16D4  1903               	skipnz
  9076  16D5  0AF8               	incf	??___ftge+2,f
  9077  16D6  3000               	movlw	0
  9078  16D7  0776               	addwf	??___ftge,w
  9079  16D8  00F3               	movwf	___ftge@ff2
  9080  16D9  3000               	movlw	0
  9081  16DA  3D77               	addwfc	??___ftge+1,w
  9082  16DB  00F4               	movwf	___ftge@ff2+1
  9083  16DC  3080               	movlw	128
  9084  16DD  3D78               	addwfc	??___ftge+2,w
  9085  16DE  00F5               	movwf	___ftge@ff2+2
  9086  16DF                     l2337:	
  9087  16DF  3080               	movlw	128
  9088  16E0  06F2               	xorwf	___ftge@ff1+2,f
  9089  16E1  3080               	movlw	128
  9090  16E2  06F5               	xorwf	___ftge@ff2+2,f
  9091  16E3  0875               	movf	___ftge@ff2+2,w
  9092  16E4  0272               	subwf	___ftge@ff1+2,w
  9093  16E5  1D03               	skipz
  9094  16E6  0008               	return
  9095  16E7  0874               	movf	___ftge@ff2+1,w
  9096  16E8  0271               	subwf	___ftge@ff1+1,w
  9097  16E9  1D03               	skipz
  9098  16EA  0008               	return
  9099  16EB  0873               	movf	___ftge@ff2,w
  9100  16EC  0270               	subwf	___ftge@ff1,w
  9101  16ED  0008               	return
  9102  16EE                     __end_of___ftge:	
  9103                           
  9104                           	psect	text7
  9105  151A                     __ptext7:	
  9106 ;; *************** function ___ftsub *****************
  9107 ;; Defined at:
  9108 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;  f2              3   45[BANK0 ] float 
  9111 ;;  f1              3   48[BANK0 ] float 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  3   45[BANK0 ] float 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0, pclath, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9123 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;Total ram usage:        6 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    2
  9130 ;; This function calls:
  9131 ;;		___ftadd
  9132 ;; This function is called by:
  9133 ;;		_tempCalc
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           
  9138                           ;psect for function ___ftsub
  9139  151A                     ___ftsub:	
  9140                           
  9141                           ;incstack = 0
  9142                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9143  151A  0020               	movlb	0	; select bank0
  9144  151B  084F               	movf	___ftsub@f2+2,w
  9145  151C  044E               	iorwf	___ftsub@f2+1,w
  9146  151D  044D               	iorwf	___ftsub@f2,w
  9147  151E  1903               	skipnz
  9148  151F  2D22               	goto	l2701
  9149  1520  3080               	movlw	128
  9150  1521  06CF               	xorwf	___ftsub@f2+2,f
  9151  1522                     l2701:	
  9152  1522  0850               	movf	___ftsub@f1,w
  9153  1523  00C0               	movwf	___ftadd@f1
  9154  1524  0851               	movf	___ftsub@f1+1,w
  9155  1525  00C1               	movwf	___ftadd@f1+1
  9156  1526  0852               	movf	___ftsub@f1+2,w
  9157  1527  00C2               	movwf	___ftadd@f1+2
  9158  1528  084D               	movf	___ftsub@f2,w
  9159  1529  00C3               	movwf	___ftadd@f2
  9160  152A  084E               	movf	___ftsub@f2+1,w
  9161  152B  00C4               	movwf	___ftadd@f2+1
  9162  152C  084F               	movf	___ftsub@f2+2,w
  9163  152D  00C5               	movwf	___ftadd@f2+2
  9164  152E  318F  270A         	fcall	___ftadd
  9165  1530  0020               	movlb	0	; select bank0
  9166  1531  0840               	movf	?___ftadd,w
  9167  1532  00CD               	movwf	?___ftsub
  9168  1533  0841               	movf	?___ftadd+1,w
  9169  1534  00CE               	movwf	?___ftsub+1
  9170  1535  0842               	movf	?___ftadd+2,w
  9171  1536  00CF               	movwf	?___ftsub+2
  9172  1537  0008               	return
  9173  1538                     __end_of___ftsub:	
  9174                           
  9175                           	psect	text8
  9176  0F0A                     __ptext8:	
  9177 ;; *************** function ___ftadd *****************
  9178 ;; Defined at:
  9179 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  f1              3   32[BANK0 ] float 
  9182 ;;  f2              3   35[BANK0 ] float 
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;  exp1            1   44[BANK0 ] unsigned char 
  9185 ;;  exp2            1   43[BANK0 ] unsigned char 
  9186 ;;  sign            1   42[BANK0 ] unsigned char 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  3   32[BANK0 ] float 
  9189 ;; Registers used:
  9190 ;;		wreg, status,2, status,0, pclath, cstack
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9196 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9197 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;Total ram usage:       13 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:    1
  9203 ;; This function calls:
  9204 ;;		___ftpack
  9205 ;; This function is called by:
  9206 ;;		_tempCalc
  9207 ;;		___ftsub
  9208 ;;		_log
  9209 ;;		_eval_poly
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           
  9214                           ;psect for function ___ftadd
  9215  0F0A                     ___ftadd:	
  9216                           
  9217                           ;incstack = 0
  9218                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9219  0F0A  0020               	movlb	0	; select bank0
  9220  0F0B  0840               	movf	___ftadd@f1,w
  9221  0F0C  00C6               	movwf	??___ftadd
  9222  0F0D  0841               	movf	___ftadd@f1+1,w
  9223  0F0E  00C7               	movwf	??___ftadd+1
  9224  0F0F  0842               	movf	___ftadd@f1+2,w
  9225  0F10  00C8               	movwf	??___ftadd+2
  9226  0F11  1003               	clrc
  9227  0F12  0D47               	rlf	??___ftadd+1,w
  9228  0F13  0D48               	rlf	??___ftadd+2,w
  9229  0F14  00C9               	movwf	??___ftadd+3
  9230  0F15  0849               	movf	??___ftadd+3,w
  9231  0F16  00CC               	movwf	___ftadd@exp1
  9232  0F17  0843               	movf	___ftadd@f2,w
  9233  0F18  00C6               	movwf	??___ftadd
  9234  0F19  0844               	movf	___ftadd@f2+1,w
  9235  0F1A  00C7               	movwf	??___ftadd+1
  9236  0F1B  0845               	movf	___ftadd@f2+2,w
  9237  0F1C  00C8               	movwf	??___ftadd+2
  9238  0F1D  1003               	clrc
  9239  0F1E  0D47               	rlf	??___ftadd+1,w
  9240  0F1F  0D48               	rlf	??___ftadd+2,w
  9241  0F20  00C9               	movwf	??___ftadd+3
  9242  0F21  0849               	movf	??___ftadd+3,w
  9243  0F22  00CB               	movwf	___ftadd@exp2
  9244  0F23  084C               	movf	___ftadd@exp1,w
  9245  0F24  1903               	btfsc	3,2
  9246  0F25  2F32               	goto	l2201
  9247  0F26  084B               	movf	___ftadd@exp2,w
  9248  0F27  024C               	subwf	___ftadd@exp1,w
  9249  0F28  1803               	skipnc
  9250  0F29  2F39               	goto	l2205
  9251  0F2A  034C               	decf	___ftadd@exp1,w
  9252  0F2B  3AFF               	xorlw	255
  9253  0F2C  074B               	addwf	___ftadd@exp2,w
  9254  0F2D  00C6               	movwf	??___ftadd
  9255  0F2E  3019               	movlw	25
  9256  0F2F  0246               	subwf	??___ftadd,w
  9257  0F30  1C03               	skipc
  9258  0F31  2F39               	goto	l2205
  9259  0F32                     l2201:	
  9260  0F32  0843               	movf	___ftadd@f2,w
  9261  0F33  00C0               	movwf	?___ftadd
  9262  0F34  0844               	movf	___ftadd@f2+1,w
  9263  0F35  00C1               	movwf	?___ftadd+1
  9264  0F36  0845               	movf	___ftadd@f2+2,w
  9265  0F37  00C2               	movwf	?___ftadd+2
  9266  0F38  0008               	return
  9267  0F39                     l2205:	
  9268  0F39  084B               	movf	___ftadd@exp2,w
  9269  0F3A  1903               	btfsc	3,2
  9270  0F3B  0008               	return
  9271  0F3C  084C               	movf	___ftadd@exp1,w
  9272  0F3D  024B               	subwf	___ftadd@exp2,w
  9273  0F3E  1803               	skipnc
  9274  0F3F  2F48               	goto	l2211
  9275  0F40  034B               	decf	___ftadd@exp2,w
  9276  0F41  3AFF               	xorlw	255
  9277  0F42  074C               	addwf	___ftadd@exp1,w
  9278  0F43  00C6               	movwf	??___ftadd
  9279  0F44  3019               	movlw	25
  9280  0F45  0246               	subwf	??___ftadd,w
  9281  0F46  1803               	btfsc	3,0
  9282  0F47  0008               	return
  9283  0F48                     l2211:	
  9284  0F48  3006               	movlw	6
  9285  0F49  00C6               	movwf	??___ftadd
  9286  0F4A  0846               	movf	??___ftadd,w
  9287  0F4B  00CA               	movwf	___ftadd@sign
  9288  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  9289  0F4D  17CA               	bsf	___ftadd@sign,7
  9290  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  9291  0F4F  174A               	bsf	___ftadd@sign,6
  9292  0F50  17C1               	bsf	___ftadd@f1+1,7
  9293  0F51  30FF               	movlw	255
  9294  0F52  05C0               	andwf	___ftadd@f1,f
  9295  0F53  30FF               	movlw	255
  9296  0F54  05C1               	andwf	___ftadd@f1+1,f
  9297  0F55  3000               	movlw	0
  9298  0F56  05C2               	andwf	___ftadd@f1+2,f
  9299  0F57  17C4               	bsf	___ftadd@f2+1,7
  9300  0F58  30FF               	movlw	255
  9301  0F59  05C3               	andwf	___ftadd@f2,f
  9302  0F5A  30FF               	movlw	255
  9303  0F5B  05C4               	andwf	___ftadd@f2+1,f
  9304  0F5C  3000               	movlw	0
  9305  0F5D  05C5               	andwf	___ftadd@f2+2,f
  9306  0F5E  084B               	movf	___ftadd@exp2,w
  9307  0F5F  024C               	subwf	___ftadd@exp1,w
  9308  0F60  1803               	skipnc
  9309  0F61  2F84               	goto	l2233
  9310  0F62                     l2223:	
  9311  0F62  3001               	movlw	1
  9312  0F63                     u2145:	
  9313  0F63  35C3               	lslf	___ftadd@f2,f
  9314  0F64  0DC4               	rlf	___ftadd@f2+1,f
  9315  0F65  0DC5               	rlf	___ftadd@f2+2,f
  9316  0F66  0B89               	decfsz	9,f
  9317  0F67  2F63               	goto	u2145
  9318  0F68  3001               	movlw	1
  9319  0F69  02CB               	subwf	___ftadd@exp2,f
  9320  0F6A  084B               	movf	___ftadd@exp2,w
  9321  0F6B  064C               	xorwf	___ftadd@exp1,w
  9322  0F6C  1903               	skipnz
  9323  0F6D  2F7F               	goto	l2231
  9324  0F6E  3001               	movlw	1
  9325  0F6F  02CA               	subwf	___ftadd@sign,f
  9326  0F70  084A               	movf	___ftadd@sign,w
  9327  0F71  3907               	andlw	7
  9328  0F72  1903               	btfsc	3,2
  9329  0F73  2F7F               	goto	l2231
  9330  0F74  2F62               	goto	l2223
  9331  0F75                     l2229:	
  9332  0F75  3001               	movlw	1
  9333  0F76                     u2175:	
  9334  0F76  36C2               	lsrf	___ftadd@f1+2,f
  9335  0F77  0CC1               	rrf	___ftadd@f1+1,f
  9336  0F78  0CC0               	rrf	___ftadd@f1,f
  9337  0F79  0B89               	decfsz	9,f
  9338  0F7A  2F76               	goto	u2175
  9339  0F7B  3001               	movlw	1
  9340  0F7C  00C6               	movwf	??___ftadd
  9341  0F7D  0846               	movf	??___ftadd,w
  9342  0F7E  07CC               	addwf	___ftadd@exp1,f
  9343  0F7F                     l2231:	
  9344  0F7F  084C               	movf	___ftadd@exp1,w
  9345  0F80  064B               	xorwf	___ftadd@exp2,w
  9346  0F81  1903               	btfsc	3,2
  9347  0F82  2FA9               	goto	l767
  9348  0F83  2F75               	goto	l2229
  9349  0F84                     l2233:	
  9350  0F84  084C               	movf	___ftadd@exp1,w
  9351  0F85  024B               	subwf	___ftadd@exp2,w
  9352  0F86  1803               	skipnc
  9353  0F87  2FA9               	goto	l767
  9354  0F88                     l2235:	
  9355  0F88  3001               	movlw	1
  9356  0F89                     u2205:	
  9357  0F89  35C0               	lslf	___ftadd@f1,f
  9358  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  9359  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  9360  0F8C  0B89               	decfsz	9,f
  9361  0F8D  2F89               	goto	u2205
  9362  0F8E  3001               	movlw	1
  9363  0F8F  02CC               	subwf	___ftadd@exp1,f
  9364  0F90  084B               	movf	___ftadd@exp2,w
  9365  0F91  064C               	xorwf	___ftadd@exp1,w
  9366  0F92  1903               	skipnz
  9367  0F93  2FA5               	goto	l2243
  9368  0F94  3001               	movlw	1
  9369  0F95  02CA               	subwf	___ftadd@sign,f
  9370  0F96  084A               	movf	___ftadd@sign,w
  9371  0F97  3907               	andlw	7
  9372  0F98  1903               	btfsc	3,2
  9373  0F99  2FA5               	goto	l2243
  9374  0F9A  2F88               	goto	l2235
  9375  0F9B                     l2241:	
  9376  0F9B  3001               	movlw	1
  9377  0F9C                     u2235:	
  9378  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  9379  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  9380  0F9E  0CC3               	rrf	___ftadd@f2,f
  9381  0F9F  0B89               	decfsz	9,f
  9382  0FA0  2F9C               	goto	u2235
  9383  0FA1  3001               	movlw	1
  9384  0FA2  00C6               	movwf	??___ftadd
  9385  0FA3  0846               	movf	??___ftadd,w
  9386  0FA4  07CB               	addwf	___ftadd@exp2,f
  9387  0FA5                     l2243:	
  9388  0FA5  084C               	movf	___ftadd@exp1,w
  9389  0FA6  064B               	xorwf	___ftadd@exp2,w
  9390  0FA7  1D03               	skipz
  9391  0FA8  2F9B               	goto	l2241
  9392  0FA9                     l767:	
  9393  0FA9  1FCA               	btfss	___ftadd@sign,7
  9394  0FAA  2FBB               	goto	l2247
  9395  0FAB  30FF               	movlw	255
  9396  0FAC  06C0               	xorwf	___ftadd@f1,f
  9397  0FAD  30FF               	movlw	255
  9398  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  9399  0FAF  30FF               	movlw	255
  9400  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  9401  0FB1  3001               	movlw	1
  9402  0FB2  07C0               	addwf	___ftadd@f1,f
  9403  0FB3  3000               	movlw	0
  9404  0FB4  1803               	skipnc
  9405  0FB5  3001               	movlw	1
  9406  0FB6  07C1               	addwf	___ftadd@f1+1,f
  9407  0FB7  3000               	movlw	0
  9408  0FB8  1803               	skipnc
  9409  0FB9  3001               	movlw	1
  9410  0FBA  07C2               	addwf	___ftadd@f1+2,f
  9411  0FBB                     l2247:	
  9412  0FBB  1F4A               	btfss	___ftadd@sign,6
  9413  0FBC  2FCD               	goto	l2251
  9414  0FBD  30FF               	movlw	255
  9415  0FBE  06C3               	xorwf	___ftadd@f2,f
  9416  0FBF  30FF               	movlw	255
  9417  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  9418  0FC1  30FF               	movlw	255
  9419  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  9420  0FC3  3001               	movlw	1
  9421  0FC4  07C3               	addwf	___ftadd@f2,f
  9422  0FC5  3000               	movlw	0
  9423  0FC6  1803               	skipnc
  9424  0FC7  3001               	movlw	1
  9425  0FC8  07C4               	addwf	___ftadd@f2+1,f
  9426  0FC9  3000               	movlw	0
  9427  0FCA  1803               	skipnc
  9428  0FCB  3001               	movlw	1
  9429  0FCC  07C5               	addwf	___ftadd@f2+2,f
  9430  0FCD                     l2251:	
  9431  0FCD  01CA               	clrf	___ftadd@sign
  9432  0FCE  0840               	movf	___ftadd@f1,w
  9433  0FCF  07C3               	addwf	___ftadd@f2,f
  9434  0FD0  0841               	movf	___ftadd@f1+1,w
  9435  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  9436  0FD2  0842               	movf	___ftadd@f1+2,w
  9437  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  9438  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  9439  0FD5  2FE8               	goto	l2261
  9440  0FD6  30FF               	movlw	255
  9441  0FD7  06C3               	xorwf	___ftadd@f2,f
  9442  0FD8  30FF               	movlw	255
  9443  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  9444  0FDA  30FF               	movlw	255
  9445  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  9446  0FDC  3001               	movlw	1
  9447  0FDD  07C3               	addwf	___ftadd@f2,f
  9448  0FDE  3000               	movlw	0
  9449  0FDF  1803               	skipnc
  9450  0FE0  3001               	movlw	1
  9451  0FE1  07C4               	addwf	___ftadd@f2+1,f
  9452  0FE2  3000               	movlw	0
  9453  0FE3  1803               	skipnc
  9454  0FE4  3001               	movlw	1
  9455  0FE5  07C5               	addwf	___ftadd@f2+2,f
  9456  0FE6  01CA               	clrf	___ftadd@sign
  9457  0FE7  0ACA               	incf	___ftadd@sign,f
  9458  0FE8                     l2261:	
  9459  0FE8  0843               	movf	___ftadd@f2,w
  9460  0FE9  00F0               	movwf	___ftpack@arg
  9461  0FEA  0844               	movf	___ftadd@f2+1,w
  9462  0FEB  00F1               	movwf	___ftpack@arg+1
  9463  0FEC  0845               	movf	___ftadd@f2+2,w
  9464  0FED  00F2               	movwf	___ftpack@arg+2
  9465  0FEE  084C               	movf	___ftadd@exp1,w
  9466  0FEF  00C6               	movwf	??___ftadd
  9467  0FF0  0846               	movf	??___ftadd,w
  9468  0FF1  00F3               	movwf	___ftpack@exp
  9469  0FF2  084A               	movf	___ftadd@sign,w
  9470  0FF3  00C7               	movwf	??___ftadd+1
  9471  0FF4  0847               	movf	??___ftadd+1,w
  9472  0FF5  00F4               	movwf	___ftpack@sign
  9473  0FF6  3189  21EE         	fcall	___ftpack
  9474  0FF8  0870               	movf	?___ftpack,w
  9475  0FF9  0020               	movlb	0	; select bank0
  9476  0FFA  00C0               	movwf	?___ftadd
  9477  0FFB  0871               	movf	?___ftpack+1,w
  9478  0FFC  00C1               	movwf	?___ftadd+1
  9479  0FFD  0872               	movf	?___ftpack+2,w
  9480  0FFE  00C2               	movwf	?___ftadd+2
  9481  0FFF  0008               	return
  9482  1000                     __end_of___ftadd:	
  9483                           
  9484                           	psect	text9
  9485  0B3B                     __ptext9:	
  9486 ;; *************** function _readButton *****************
  9487 ;; Defined at:
  9488 ;;		line 9 in file "buttons.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;		None
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;		None
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  1    wreg      unsigned char 
  9495 ;; Registers used:
  9496 ;;		wreg, status,2, status,0, pclath, cstack
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/0
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;Total ram usage:        2 bytes
  9507 ;; Hardware stack levels used:    1
  9508 ;; Hardware stack levels required when called:    1
  9509 ;; This function calls:
  9510 ;;		_ADCRead
  9511 ;; This function is called by:
  9512 ;;		_main
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           
  9517                           ;psect for function _readButton
  9518  0B3B                     _readButton:	
  9519                           
  9520                           ;buttons.c: 11: readButtons = ADCRead(11);
  9521                           
  9522                           ;incstack = 0
  9523                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  9524  0B3B  300B               	movlw	11
  9525  0B3C  3194  2489  318B   	fcall	_ADCRead
  9526  0B3F  0871               	movf	?_ADCRead+1,w
  9527  0B40  0020               	movlb	0	; select bank0
  9528  0B41  00EB               	movwf	_readButtons+1
  9529  0B42  0870               	movf	?_ADCRead,w
  9530  0B43  00EA               	movwf	_readButtons
  9531                           
  9532                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  9533  0B44  086B               	movf	_readButtons+1,w
  9534  0B45  3A80               	xorlw	128
  9535  0B46  00F4               	movwf	??_readButton
  9536  0B47  3081               	movlw	129
  9537  0B48  0274               	subwf	??_readButton,w
  9538  0B49  1D03               	skipz
  9539  0B4A  2B4D               	goto	u3335
  9540  0B4B  306D               	movlw	109
  9541  0B4C  026A               	subwf	_readButtons,w
  9542  0B4D                     u3335:	
  9543  0B4D  1C03               	skipc
  9544  0B4E  2B5F               	goto	l2909
  9545  0B4F  0020               	movlb	0	; select bank0
  9546  0B50  086B               	movf	_readButtons+1,w
  9547  0B51  3A80               	xorlw	128
  9548  0B52  00F4               	movwf	??_readButton
  9549  0B53  3081               	movlw	129
  9550  0B54  0274               	subwf	??_readButton,w
  9551  0B55  1D03               	skipz
  9552  0B56  2B59               	goto	u3345
  9553  0B57  3095               	movlw	149
  9554  0B58  026A               	subwf	_readButtons,w
  9555  0B59                     u3345:	
  9556  0B59  1803               	skipnc
  9557  0B5A  2B5F               	goto	l2909
  9558                           
  9559                           ;buttons.c: 14: {
  9560                           ;buttons.c: 15: button = 1;
  9561  0B5B  0020               	movlb	0	; select bank0
  9562  0B5C  01EE               	clrf	_button
  9563  0B5D  0AEE               	incf	_button,f
  9564                           
  9565                           ;buttons.c: 16: }
  9566  0B5E  2B8D               	goto	l2921
  9567  0B5F                     l2909:	
  9568                           
  9569                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  9570  0B5F  0020               	movlb	0	; select bank0
  9571  0B60  086B               	movf	_readButtons+1,w
  9572  0B61  3A80               	xorlw	128
  9573  0B62  00F4               	movwf	??_readButton
  9574  0B63  3082               	movlw	130
  9575  0B64  0274               	subwf	??_readButton,w
  9576  0B65  1D03               	skipz
  9577  0B66  2B69               	goto	u3355
  9578  0B67  3017               	movlw	23
  9579  0B68  026A               	subwf	_readButtons,w
  9580  0B69                     u3355:	
  9581  0B69  1C03               	skipc
  9582  0B6A  2B79               	goto	l2915
  9583  0B6B  0020               	movlb	0	; select bank0
  9584  0B6C  086B               	movf	_readButtons+1,w
  9585  0B6D  3A80               	xorlw	128
  9586  0B6E  00F4               	movwf	??_readButton
  9587  0B6F  3082               	movlw	130
  9588  0B70  0274               	subwf	??_readButton,w
  9589  0B71  1D03               	skipz
  9590  0B72  2B75               	goto	u3365
  9591  0B73  304E               	movlw	78
  9592  0B74  026A               	subwf	_readButtons,w
  9593  0B75                     u3365:	
  9594  0B75  1803               	skipnc
  9595  0B76  2B79               	goto	l2915
  9596                           
  9597                           ;buttons.c: 19: {
  9598                           ;buttons.c: 20: button = 2;
  9599  0B77  3002               	movlw	2
  9600  0B78  2B86               	goto	L4
  9601  0B79                     l2915:	
  9602                           ;buttons.c: 21: }
  9603                           
  9604                           
  9605                           ;buttons.c: 23: else if(readButtons > 745)
  9606  0B79  0020               	movlb	0	; select bank0
  9607  0B7A  086B               	movf	_readButtons+1,w
  9608  0B7B  3A80               	xorlw	128
  9609  0B7C  00F4               	movwf	??_readButton
  9610  0B7D  3082               	movlw	130
  9611  0B7E  0274               	subwf	??_readButton,w
  9612  0B7F  1D03               	skipz
  9613  0B80  2B83               	goto	u3375
  9614  0B81  30EA               	movlw	234
  9615  0B82  026A               	subwf	_readButtons,w
  9616  0B83                     u3375:	
  9617  0B83  1C03               	skipc
  9618  0B84  2B8B               	goto	l2919
  9619                           
  9620                           ;buttons.c: 24: {
  9621                           ;buttons.c: 25: button = 3;
  9622  0B85  3003               	movlw	3
  9623  0B86                     L4:	
  9624  0B86  00F4               	movwf	??_readButton
  9625  0B87  0874               	movf	??_readButton,w
  9626  0B88  0020               	movlb	0	; select bank0
  9627  0B89  00EE               	movwf	_button
  9628                           
  9629                           ;buttons.c: 26: }
  9630  0B8A  2B8D               	goto	l2921
  9631  0B8B                     l2919:	
  9632                           
  9633                           ;buttons.c: 28: else
  9634                           ;buttons.c: 29: {
  9635                           ;buttons.c: 30: button = 0;
  9636  0B8B  0020               	movlb	0	; select bank0
  9637  0B8C  01EE               	clrf	_button
  9638  0B8D                     l2921:	
  9639                           
  9640                           ;buttons.c: 31: }
  9641                           ;buttons.c: 33: if (button != 0)
  9642  0B8D  086E               	movf	_button,w
  9643  0B8E  1903               	btfsc	3,2
  9644  0B8F  2BBA               	goto	l2941
  9645                           
  9646                           ;buttons.c: 34: {
  9647                           ;buttons.c: 35: if (button != lastButton)
  9648  0B90  086E               	movf	_button,w
  9649  0B91  066D               	xorwf	_lastButton,w
  9650  0B92  1903               	skipnz
  9651  0B93  2B99               	goto	l2929
  9652                           
  9653                           ;buttons.c: 36: {
  9654                           ;buttons.c: 37: lastButton = button;
  9655  0B94  086E               	movf	_button,w
  9656  0B95  00F4               	movwf	??_readButton
  9657  0B96  0874               	movf	??_readButton,w
  9658  0B97  00ED               	movwf	_lastButton
  9659  0B98  2BBA               	goto	l2941
  9660  0B99                     l2929:	
  9661                           ;buttons.c: 39: }
  9662                           
  9663                           ;buttons.c: 38: j = 0;
  9664                           
  9665                           
  9666                           ;buttons.c: 40: else
  9667                           ;buttons.c: 41: {
  9668                           ;buttons.c: 42: j += 1;
  9669  0B99  3001               	movlw	1
  9670  0B9A  00F4               	movwf	??_readButton
  9671  0B9B  0874               	movf	??_readButton,w
  9672  0B9C  07EC               	addwf	_j,f
  9673                           
  9674                           ;buttons.c: 44: if(j == 1)
  9675  0B9D  036C               	decf	_j,w
  9676  0B9E  1D03               	btfss	3,2
  9677  0B9F  2BA2               	goto	l2935
  9678                           
  9679                           ;buttons.c: 45: {
  9680                           ;buttons.c: 46: return (lastButton);
  9681  0BA0  086D               	movf	_lastButton,w
  9682  0BA1  0008               	return
  9683  0BA2                     l2935:	
  9684                           
  9685                           ;buttons.c: 47: }
  9686                           ;buttons.c: 49: if (j >10)
  9687  0BA2  086C               	movf	_j,w
  9688  0BA3  3A80               	xorlw	128
  9689  0BA4  3E75               	addlw	-139
  9690  0BA5  1C03               	skipc
  9691  0BA6  2BBB               	goto	l2943
  9692                           
  9693                           ;buttons.c: 50: {
  9694                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  9695  0BA7  3002               	movlw	2
  9696  0BA8  00F5               	movwf	??_readButton+1
  9697  0BA9  3004               	movlw	4
  9698  0BAA  00F4               	movwf	??_readButton
  9699  0BAB  30BA               	movlw	186
  9700  0BAC                     u3707:	
  9701  0BAC  0B89               	decfsz	9,f
  9702  0BAD  2BAC               	goto	u3707
  9703  0BAE  0BF4               	decfsz	??_readButton,f
  9704  0BAF  2BAC               	goto	u3707
  9705  0BB0  0BF5               	decfsz	??_readButton+1,f
  9706  0BB1  2BAC               	goto	u3707
  9707  0BB2  3200               	nop2
  9708                           
  9709                           ;buttons.c: 52: j = 10;
  9710  0BB3  300A               	movlw	10
  9711  0BB4  00F4               	movwf	??_readButton
  9712  0BB5  0874               	movf	??_readButton,w
  9713  0BB6  0020               	movlb	0	; select bank0
  9714  0BB7  00EC               	movwf	_j
  9715                           
  9716                           ;buttons.c: 53: return (lastButton);
  9717  0BB8  086D               	movf	_lastButton,w
  9718  0BB9  0008               	return
  9719  0BBA                     l2941:	
  9720                           ;buttons.c: 54: }
  9721                           ;buttons.c: 55: }
  9722                           ;buttons.c: 56: goto end;
  9723                           
  9724                           
  9725                           ;buttons.c: 57: }
  9726                           ;buttons.c: 59: j = 0;
  9727  0BBA  01EC               	clrf	_j
  9728  0BBB                     l2943:	
  9729                           ;buttons.c: 61: end:
  9730                           
  9731                           
  9732                           ;buttons.c: 63: return (0);
  9733  0BBB  3000               	movlw	0
  9734  0BBC  0008               	return
  9735  0BBD                     __end_of_readButton:	
  9736                           
  9737                           	psect	text10
  9738  016E                     __ptext10:	
  9739 ;; *************** function _readAnalog *****************
  9740 ;; Defined at:
  9741 ;;		line 49 in file "adc.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;  channel         2    6[BANK0 ] unsigned int 
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;  value           2   28[BANK0 ] int 
  9746 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  2    6[BANK0 ] int 
  9749 ;; Registers used:
  9750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9756 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;Total ram usage:       24 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:    1
  9763 ;; This function calls:
  9764 ;;		_ADCRead
  9765 ;;		___aldiv
  9766 ;;		___wmul
  9767 ;; This function is called by:
  9768 ;;		_main
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           
  9773                           ;psect for function _readAnalog
  9774  016E                     _readAnalog:	
  9775                           
  9776                           ;adc.c: 51: int16_t value;
  9777                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  9778                           
  9779                           ;incstack = 0
  9780                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9781  016E  0020               	movlb	0	; select bank0
  9782  016F  3526               	lslf	readAnalog@channel,w
  9783  0170  3E50               	addlw	(low (_channels| (0+256)))& (0+255)
  9784  0171  0086               	movwf	6
  9785  0172  3001               	movlw	1	; select bank2/3
  9786  0173  0087               	movwf	7
  9787  0174  3F40               	moviw [0]fsr1
  9788  0175  00BA               	movwf	readAnalog@analog_channel
  9789  0176  3F41               	moviw [1]fsr1
  9790  0177  00BB               	movwf	readAnalog@analog_channel+1
  9791                           
  9792                           ;adc.c: 55: value = ADCRead(analog_channel);
  9793  0178  083A               	movf	readAnalog@analog_channel,w
  9794  0179  3194  2489  3181   	fcall	_ADCRead
  9795  017C  0871               	movf	?_ADCRead+1,w
  9796  017D  0020               	movlb	0	; select bank0
  9797  017E  00BD               	movwf	readAnalog@value+1
  9798  017F  0870               	movf	?_ADCRead,w
  9799  0180  00BC               	movwf	readAnalog@value
  9800                           
  9801                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9802  0181  0826               	movf	readAnalog@channel,w
  9803  0182  00A8               	movwf	??_readAnalog
  9804  0183  3001               	movlw	1
  9805  0184                     u2995:	
  9806  0184  35A8               	lslf	??_readAnalog,f
  9807  0185  3EFF               	addlw	-1
  9808  0186  1D03               	skipz
  9809  0187  2984               	goto	u2995
  9810  0188  3528               	lslf	??_readAnalog,w
  9811  0189  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9812  018A  0086               	movwf	6
  9813  018B  3001               	movlw	1	; select bank2/3
  9814  018C  0087               	movwf	7
  9815  018D  3F40               	moviw [0]fsr1
  9816  018E  00A9               	movwf	??_readAnalog+1
  9817  018F  3F41               	moviw [1]fsr1
  9818  0190  00AA               	movwf	??_readAnalog+2
  9819  0191  3F42               	moviw [2]fsr1
  9820  0192  00AB               	movwf	??_readAnalog+3
  9821  0193  3F43               	moviw [3]fsr1
  9822  0194  00AC               	movwf	??_readAnalog+4
  9823  0195  0021               	movlb	1	; select bank1
  9824  0196  0862               	movf	(_sampleIndex+1)^(0+128),w
  9825  0197  0020               	movlb	0	; select bank0
  9826  0198  00AE               	movwf	??_readAnalog+6
  9827  0199  0021               	movlb	1	; select bank1
  9828  019A  0861               	movf	_sampleIndex^(0+128),w
  9829  019B  0020               	movlb	0	; select bank0
  9830  019C  00AD               	movwf	??_readAnalog+5
  9831  019D  35AD               	lslf	??_readAnalog+5,f
  9832  019E  0DAE               	rlf	??_readAnalog+6,f
  9833  019F  0827               	movf	readAnalog@channel+1,w
  9834  01A0  00FA               	movwf	___wmul@multiplier+1
  9835  01A1  0826               	movf	readAnalog@channel,w
  9836  01A2  00F9               	movwf	___wmul@multiplier
  9837  01A3  305A               	movlw	90
  9838  01A4  00FB               	movwf	___wmul@multiplicand
  9839  01A5  3000               	movlw	0
  9840  01A6  00FC               	movwf	___wmul@multiplicand+1
  9841  01A7  3194  24FC  3181   	fcall	___wmul
  9842  01AA  3020               	movlw	32
  9843  01AB  0020               	movlb	0	; select bank0
  9844  01AC  00AF               	movwf	??_readAnalog+7
  9845  01AD  3021               	movlw	33
  9846  01AE  00B0               	movwf	??_readAnalog+8
  9847  01AF  0879               	movf	?___wmul,w
  9848  01B0  072F               	addwf	??_readAnalog+7,w
  9849  01B1  00B1               	movwf	??_readAnalog+9
  9850  01B2  087A               	movf	?___wmul+1,w
  9851  01B3  3D30               	addwfc	??_readAnalog+8,w
  9852  01B4  00B2               	movwf	??_readAnalog+10
  9853  01B5  082D               	movf	??_readAnalog+5,w
  9854  01B6  0731               	addwf	??_readAnalog+9,w
  9855  01B7  0086               	movwf	6
  9856  01B8  082E               	movf	??_readAnalog+6,w
  9857  01B9  3D32               	addwfc	??_readAnalog+10,w
  9858  01BA  0087               	movwf	7
  9859  01BB  3F40               	moviw [0]fsr1
  9860  01BC  00B3               	movwf	??_readAnalog+11
  9861  01BD  3F41               	moviw [1]fsr1
  9862  01BE  00B4               	movwf	??_readAnalog+12
  9863  01BF  0833               	movf	??_readAnalog+11,w
  9864  01C0  00B5               	movwf	??_readAnalog+13
  9865  01C1  0834               	movf	??_readAnalog+12,w
  9866  01C2  00B6               	movwf	??_readAnalog+14
  9867  01C3  3000               	movlw	0
  9868  01C4  1BB6               	btfsc	??_readAnalog+14,7
  9869  01C5  30FF               	movlw	255
  9870  01C6  00B7               	movwf	??_readAnalog+15
  9871  01C7  00B8               	movwf	??_readAnalog+16
  9872  01C8  09B5               	comf	??_readAnalog+13,f
  9873  01C9  09B6               	comf	??_readAnalog+14,f
  9874  01CA  09B7               	comf	??_readAnalog+15,f
  9875  01CB  09B8               	comf	??_readAnalog+16,f
  9876  01CC  0AB5               	incf	??_readAnalog+13,f
  9877  01CD  1903               	skipnz
  9878  01CE  0AB6               	incf	??_readAnalog+14,f
  9879  01CF  1903               	skipnz
  9880  01D0  0AB7               	incf	??_readAnalog+15,f
  9881  01D1  1903               	skipnz
  9882  01D2  0AB8               	incf	??_readAnalog+16,f
  9883  01D3  0835               	movf	??_readAnalog+13,w
  9884  01D4  07A9               	addwf	??_readAnalog+1,f
  9885  01D5  0836               	movf	??_readAnalog+14,w
  9886  01D6  3DAA               	addwfc	??_readAnalog+2,f
  9887  01D7  0837               	movf	??_readAnalog+15,w
  9888  01D8  3DAB               	addwfc	??_readAnalog+3,f
  9889  01D9  0838               	movf	??_readAnalog+16,w
  9890  01DA  3DAC               	addwfc	??_readAnalog+4,f
  9891  01DB  0826               	movf	readAnalog@channel,w
  9892  01DC  00B9               	movwf	??_readAnalog+17
  9893  01DD  3001               	movlw	1
  9894  01DE                     u3005:	
  9895  01DE  35B9               	lslf	??_readAnalog+17,f
  9896  01DF  3EFF               	addlw	-1
  9897  01E0  1D03               	skipz
  9898  01E1  29DE               	goto	u3005
  9899  01E2  3539               	lslf	??_readAnalog+17,w
  9900  01E3  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9901  01E4  0086               	movwf	6
  9902  01E5  3001               	movlw	1	; select bank2/3
  9903  01E6  0087               	movwf	7
  9904  01E7  0829               	movf	??_readAnalog+1,w
  9905  01E8  3FC0               	movwi [0]fsr1
  9906  01E9  082A               	movf	??_readAnalog+2,w
  9907  01EA  3FC1               	movwi [1]fsr1
  9908  01EB  082B               	movf	??_readAnalog+3,w
  9909  01EC  3FC2               	movwi [2]fsr1
  9910  01ED  082C               	movf	??_readAnalog+4,w
  9911  01EE  3FC3               	movwi [3]fsr1
  9912                           
  9913                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  9914  01EF  0021               	movlb	1	; select bank1
  9915  01F0  0862               	movf	(_sampleIndex+1)^(0+128),w
  9916  01F1  0020               	movlb	0	; select bank0
  9917  01F2  00A9               	movwf	??_readAnalog+1
  9918  01F3  0021               	movlb	1	; select bank1
  9919  01F4  0861               	movf	_sampleIndex^(0+128),w
  9920  01F5  0020               	movlb	0	; select bank0
  9921  01F6  00A8               	movwf	??_readAnalog
  9922  01F7  35A8               	lslf	??_readAnalog,f
  9923  01F8  0DA9               	rlf	??_readAnalog+1,f
  9924  01F9  0827               	movf	readAnalog@channel+1,w
  9925  01FA  00FA               	movwf	___wmul@multiplier+1
  9926  01FB  0826               	movf	readAnalog@channel,w
  9927  01FC  00F9               	movwf	___wmul@multiplier
  9928  01FD  305A               	movlw	90
  9929  01FE  00FB               	movwf	___wmul@multiplicand
  9930  01FF  3000               	movlw	0
  9931  0200  00FC               	movwf	___wmul@multiplicand+1
  9932  0201  3194  24FC  3181   	fcall	___wmul
  9933  0204  3020               	movlw	32
  9934  0205  0020               	movlb	0	; select bank0
  9935  0206  00AA               	movwf	??_readAnalog+2
  9936  0207  3021               	movlw	33
  9937  0208  00AB               	movwf	??_readAnalog+3
  9938  0209  0879               	movf	?___wmul,w
  9939  020A  072A               	addwf	??_readAnalog+2,w
  9940  020B  00AC               	movwf	??_readAnalog+4
  9941  020C  087A               	movf	?___wmul+1,w
  9942  020D  3D2B               	addwfc	??_readAnalog+3,w
  9943  020E  00AD               	movwf	??_readAnalog+5
  9944  020F  0828               	movf	??_readAnalog,w
  9945  0210  072C               	addwf	??_readAnalog+4,w
  9946  0211  0086               	movwf	6
  9947  0212  0829               	movf	??_readAnalog+1,w
  9948  0213  3D2D               	addwfc	??_readAnalog+5,w
  9949  0214  0087               	movwf	7
  9950  0215  083C               	movf	readAnalog@value,w
  9951  0216  3FC0               	movwi [0]fsr1
  9952  0217  083D               	movf	readAnalog@value+1,w
  9953  0218  3FC1               	movwi [1]fsr1
  9954                           
  9955                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9956  0219  0826               	movf	readAnalog@channel,w
  9957  021A  00A8               	movwf	??_readAnalog
  9958  021B  3001               	movlw	1
  9959  021C                     u3015:	
  9960  021C  35A8               	lslf	??_readAnalog,f
  9961  021D  3EFF               	addlw	-1
  9962  021E  1D03               	skipz
  9963  021F  2A1C               	goto	u3015
  9964  0220  3528               	lslf	??_readAnalog,w
  9965  0221  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9966  0222  0086               	movwf	6
  9967  0223  3001               	movlw	1	; select bank2/3
  9968  0224  0087               	movwf	7
  9969  0225  3F40               	moviw [0]fsr1
  9970  0226  00A9               	movwf	??_readAnalog+1
  9971  0227  3F41               	moviw [1]fsr1
  9972  0228  00AA               	movwf	??_readAnalog+2
  9973  0229  3F42               	moviw [2]fsr1
  9974  022A  00AB               	movwf	??_readAnalog+3
  9975  022B  3F43               	moviw [3]fsr1
  9976  022C  00AC               	movwf	??_readAnalog+4
  9977  022D  0021               	movlb	1	; select bank1
  9978  022E  0862               	movf	(_sampleIndex+1)^(0+128),w
  9979  022F  0020               	movlb	0	; select bank0
  9980  0230  00AE               	movwf	??_readAnalog+6
  9981  0231  0021               	movlb	1	; select bank1
  9982  0232  0861               	movf	_sampleIndex^(0+128),w
  9983  0233  0020               	movlb	0	; select bank0
  9984  0234  00AD               	movwf	??_readAnalog+5
  9985  0235  35AD               	lslf	??_readAnalog+5,f
  9986  0236  0DAE               	rlf	??_readAnalog+6,f
  9987  0237  0827               	movf	readAnalog@channel+1,w
  9988  0238  00FA               	movwf	___wmul@multiplier+1
  9989  0239  0826               	movf	readAnalog@channel,w
  9990  023A  00F9               	movwf	___wmul@multiplier
  9991  023B  305A               	movlw	90
  9992  023C  00FB               	movwf	___wmul@multiplicand
  9993  023D  3000               	movlw	0
  9994  023E  00FC               	movwf	___wmul@multiplicand+1
  9995  023F  3194  24FC  3181   	fcall	___wmul
  9996  0242  3020               	movlw	32
  9997  0243  0020               	movlb	0	; select bank0
  9998  0244  00AF               	movwf	??_readAnalog+7
  9999  0245  3021               	movlw	33
 10000  0246  00B0               	movwf	??_readAnalog+8
 10001  0247  0879               	movf	?___wmul,w
 10002  0248  072F               	addwf	??_readAnalog+7,w
 10003  0249  00B1               	movwf	??_readAnalog+9
 10004  024A  087A               	movf	?___wmul+1,w
 10005  024B  3D30               	addwfc	??_readAnalog+8,w
 10006  024C  00B2               	movwf	??_readAnalog+10
 10007  024D  082D               	movf	??_readAnalog+5,w
 10008  024E  0731               	addwf	??_readAnalog+9,w
 10009  024F  0086               	movwf	6
 10010  0250  082E               	movf	??_readAnalog+6,w
 10011  0251  3D32               	addwfc	??_readAnalog+10,w
 10012  0252  0087               	movwf	7
 10013  0253  3F40               	moviw [0]fsr1
 10014  0254  00B3               	movwf	??_readAnalog+11
 10015  0255  3F41               	moviw [1]fsr1
 10016  0256  00B4               	movwf	??_readAnalog+12
 10017  0257  0833               	movf	??_readAnalog+11,w
 10018  0258  00B5               	movwf	??_readAnalog+13
 10019  0259  0834               	movf	??_readAnalog+12,w
 10020  025A  00B6               	movwf	??_readAnalog+14
 10021  025B  3000               	movlw	0
 10022  025C  1BB6               	btfsc	??_readAnalog+14,7
 10023  025D  30FF               	movlw	255
 10024  025E  00B7               	movwf	??_readAnalog+15
 10025  025F  00B8               	movwf	??_readAnalog+16
 10026  0260  0835               	movf	??_readAnalog+13,w
 10027  0261  07A9               	addwf	??_readAnalog+1,f
 10028  0262  0836               	movf	??_readAnalog+14,w
 10029  0263  3DAA               	addwfc	??_readAnalog+2,f
 10030  0264  0837               	movf	??_readAnalog+15,w
 10031  0265  3DAB               	addwfc	??_readAnalog+3,f
 10032  0266  0838               	movf	??_readAnalog+16,w
 10033  0267  3DAC               	addwfc	??_readAnalog+4,f
 10034  0268  0826               	movf	readAnalog@channel,w
 10035  0269  00B9               	movwf	??_readAnalog+17
 10036  026A  3001               	movlw	1
 10037  026B                     u3025:	
 10038  026B  35B9               	lslf	??_readAnalog+17,f
 10039  026C  3EFF               	addlw	-1
 10040  026D  1D03               	skipz
 10041  026E  2A6B               	goto	u3025
 10042  026F  3539               	lslf	??_readAnalog+17,w
 10043  0270  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10044  0271  0086               	movwf	6
 10045  0272  3001               	movlw	1	; select bank2/3
 10046  0273  0087               	movwf	7
 10047  0274  0829               	movf	??_readAnalog+1,w
 10048  0275  3FC0               	movwi [0]fsr1
 10049  0276  082A               	movf	??_readAnalog+2,w
 10050  0277  3FC1               	movwi [1]fsr1
 10051  0278  082B               	movf	??_readAnalog+3,w
 10052  0279  3FC2               	movwi [2]fsr1
 10053  027A  082C               	movf	??_readAnalog+4,w
 10054  027B  3FC3               	movwi [3]fsr1
 10055                           
 10056                           ;adc.c: 63: if(channel>=(8-1))
 10057  027C  3000               	movlw	0
 10058  027D  0227               	subwf	readAnalog@channel+1,w
 10059  027E  3007               	movlw	7
 10060  027F  1903               	skipnz
 10061  0280  0226               	subwf	readAnalog@channel,w
 10062  0281  1C03               	skipc
 10063  0282  2A91               	goto	l2783
 10064                           
 10065                           ;adc.c: 64: {
 10066                           ;adc.c: 65: sampleIndex+=1;
 10067  0283  3001               	movlw	1
 10068  0284  0021               	movlb	1	; select bank1
 10069  0285  07E1               	addwf	_sampleIndex^(0+128),f
 10070  0286  3000               	movlw	0
 10071  0287  3DE2               	addwfc	(_sampleIndex+1)^(0+128),f
 10072                           
 10073                           ;adc.c: 66: if(sampleIndex >= 45)sampleIndex = 0;
 10074  0288  3000               	movlw	0
 10075  0289  0262               	subwf	(_sampleIndex+1)^(0+128),w
 10076  028A  302D               	movlw	45
 10077  028B  1903               	skipnz
 10078  028C  0261               	subwf	_sampleIndex^(0+128),w
 10079  028D  1C03               	skipc
 10080  028E  2A91               	goto	l2783
 10081  028F  01E1               	clrf	_sampleIndex^(0+128)
 10082  0290  01E2               	clrf	(_sampleIndex+1)^(0+128)
 10083  0291                     l2783:	
 10084                           
 10085                           ;adc.c: 67: }
 10086                           ;adc.c: 69: value = totals[channel]/45;
 10087  0291  3000               	movlw	0
 10088  0292  00F3               	movwf	___aldiv@divisor+3
 10089  0293  3000               	movlw	0
 10090  0294  00F2               	movwf	___aldiv@divisor+2
 10091  0295  3000               	movlw	0
 10092  0296  00F1               	movwf	___aldiv@divisor+1
 10093  0297  302D               	movlw	45
 10094  0298  00F0               	movwf	___aldiv@divisor
 10095  0299  0020               	movlb	0	; select bank0
 10096  029A  0826               	movf	readAnalog@channel,w
 10097  029B  00A8               	movwf	??_readAnalog
 10098  029C  3001               	movlw	1
 10099  029D                     u3055:	
 10100  029D  35A8               	lslf	??_readAnalog,f
 10101  029E  3EFF               	addlw	-1
 10102  029F  1D03               	skipz
 10103  02A0  2A9D               	goto	u3055
 10104  02A1  3528               	lslf	??_readAnalog,w
 10105  02A2  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10106  02A3  0086               	movwf	6
 10107  02A4  3001               	movlw	1	; select bank2/3
 10108  02A5  0087               	movwf	7
 10109  02A6  3F40               	moviw [0]fsr1
 10110  02A7  00F4               	movwf	___aldiv@dividend
 10111  02A8  3F41               	moviw [1]fsr1
 10112  02A9  00F5               	movwf	___aldiv@dividend+1
 10113  02AA  3F42               	moviw [2]fsr1
 10114  02AB  00F6               	movwf	___aldiv@dividend+2
 10115  02AC  3F43               	moviw [3]fsr1
 10116  02AD  00F7               	movwf	___aldiv@dividend+3
 10117  02AE  318A  22B9         	fcall	___aldiv
 10118  02B0  0871               	movf	?___aldiv+1,w
 10119  02B1  0020               	movlb	0	; select bank0
 10120  02B2  00BD               	movwf	readAnalog@value+1
 10121  02B3  0870               	movf	?___aldiv,w
 10122  02B4  00BC               	movwf	readAnalog@value
 10123                           
 10124                           ;adc.c: 71: return value;
 10125  02B5  083D               	movf	readAnalog@value+1,w
 10126  02B6  00A7               	movwf	?_readAnalog+1
 10127  02B7  083C               	movf	readAnalog@value,w
 10128  02B8  00A6               	movwf	?_readAnalog
 10129  02B9  0008               	return
 10130  02BA                     __end_of_readAnalog:	
 10131                           
 10132                           	psect	text11
 10133  0AB9                     __ptext11:	
 10134 ;; *************** function ___aldiv *****************
 10135 ;; Defined at:
 10136 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;  divisor         4    0[COMMON] long 
 10139 ;;  dividend        4    4[COMMON] long 
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  quotient        4    2[BANK0 ] long 
 10142 ;;  sign            1    1[BANK0 ] unsigned char 
 10143 ;;  counter         1    0[BANK0 ] unsigned char 
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  4    0[COMMON] long 
 10146 ;; Registers used:
 10147 ;;		wreg, status,2, status,0
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10153 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10154 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;Total ram usage:       15 bytes
 10158 ;; Hardware stack levels used:    1
 10159 ;; This function calls:
 10160 ;;		Nothing
 10161 ;; This function is called by:
 10162 ;;		_readAnalog
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166                           
 10167                           ;psect for function ___aldiv
 10168  0AB9                     ___aldiv:	
 10169                           
 10170                           ;incstack = 0
 10171                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10172  0AB9  0020               	movlb	0	; select bank0
 10173  0ABA  01A1               	clrf	___aldiv@sign
 10174  0ABB  1FF3               	btfss	___aldiv@divisor+3,7
 10175  0ABC  2ACA               	goto	l630
 10176  0ABD  09F0               	comf	___aldiv@divisor,f
 10177  0ABE  09F1               	comf	___aldiv@divisor+1,f
 10178  0ABF  09F2               	comf	___aldiv@divisor+2,f
 10179  0AC0  09F3               	comf	___aldiv@divisor+3,f
 10180  0AC1  0AF0               	incf	___aldiv@divisor,f
 10181  0AC2  1903               	skipnz
 10182  0AC3  0AF1               	incf	___aldiv@divisor+1,f
 10183  0AC4  1903               	skipnz
 10184  0AC5  0AF2               	incf	___aldiv@divisor+2,f
 10185  0AC6  1903               	skipnz
 10186  0AC7  0AF3               	incf	___aldiv@divisor+3,f
 10187  0AC8  01A1               	clrf	___aldiv@sign
 10188  0AC9  0AA1               	incf	___aldiv@sign,f
 10189  0ACA                     l630:	
 10190  0ACA  1FF7               	btfss	___aldiv@dividend+3,7
 10191  0ACB  2ADB               	goto	l2581
 10192  0ACC  09F4               	comf	___aldiv@dividend,f
 10193  0ACD  09F5               	comf	___aldiv@dividend+1,f
 10194  0ACE  09F6               	comf	___aldiv@dividend+2,f
 10195  0ACF  09F7               	comf	___aldiv@dividend+3,f
 10196  0AD0  0AF4               	incf	___aldiv@dividend,f
 10197  0AD1  1903               	skipnz
 10198  0AD2  0AF5               	incf	___aldiv@dividend+1,f
 10199  0AD3  1903               	skipnz
 10200  0AD4  0AF6               	incf	___aldiv@dividend+2,f
 10201  0AD5  1903               	skipnz
 10202  0AD6  0AF7               	incf	___aldiv@dividend+3,f
 10203  0AD7  3001               	movlw	1
 10204  0AD8  00F8               	movwf	??___aldiv
 10205  0AD9  0878               	movf	??___aldiv,w
 10206  0ADA  06A1               	xorwf	___aldiv@sign,f
 10207  0ADB                     l2581:	
 10208  0ADB  3000               	movlw	0
 10209  0ADC  00A5               	movwf	___aldiv@quotient+3
 10210  0ADD  3000               	movlw	0
 10211  0ADE  00A4               	movwf	___aldiv@quotient+2
 10212  0ADF  3000               	movlw	0
 10213  0AE0  00A3               	movwf	___aldiv@quotient+1
 10214  0AE1  3000               	movlw	0
 10215  0AE2  00A2               	movwf	___aldiv@quotient
 10216  0AE3  0873               	movf	___aldiv@divisor+3,w
 10217  0AE4  0472               	iorwf	___aldiv@divisor+2,w
 10218  0AE5  0471               	iorwf	___aldiv@divisor+1,w
 10219  0AE6  0470               	iorwf	___aldiv@divisor,w
 10220  0AE7  1903               	skipnz
 10221  0AE8  2B24               	goto	l2603
 10222  0AE9  01A0               	clrf	___aldiv@counter
 10223  0AEA  0AA0               	incf	___aldiv@counter,f
 10224  0AEB                     l2589:	
 10225  0AEB  1BF3               	btfsc	___aldiv@divisor+3,7
 10226  0AEC  2AF9               	goto	l2591
 10227  0AED  3001               	movlw	1
 10228  0AEE                     u2575:	
 10229  0AEE  35F0               	lslf	___aldiv@divisor,f
 10230  0AEF  0DF1               	rlf	___aldiv@divisor+1,f
 10231  0AF0  0DF2               	rlf	___aldiv@divisor+2,f
 10232  0AF1  0DF3               	rlf	___aldiv@divisor+3,f
 10233  0AF2  0B89               	decfsz	9,f
 10234  0AF3  2AEE               	goto	u2575
 10235  0AF4  3001               	movlw	1
 10236  0AF5  00F8               	movwf	??___aldiv
 10237  0AF6  0878               	movf	??___aldiv,w
 10238  0AF7  07A0               	addwf	___aldiv@counter,f
 10239  0AF8  2AEB               	goto	l2589
 10240  0AF9                     l2591:	
 10241  0AF9  3001               	movlw	1
 10242  0AFA                     u2595:	
 10243  0AFA  35A2               	lslf	___aldiv@quotient,f
 10244  0AFB  0DA3               	rlf	___aldiv@quotient+1,f
 10245  0AFC  0DA4               	rlf	___aldiv@quotient+2,f
 10246  0AFD  0DA5               	rlf	___aldiv@quotient+3,f
 10247  0AFE  0B89               	decfsz	9,f
 10248  0AFF  2AFA               	goto	u2595
 10249  0B00  0873               	movf	___aldiv@divisor+3,w
 10250  0B01  0277               	subwf	___aldiv@dividend+3,w
 10251  0B02  1D03               	skipz
 10252  0B03  2B0E               	goto	u2605
 10253  0B04  0872               	movf	___aldiv@divisor+2,w
 10254  0B05  0276               	subwf	___aldiv@dividend+2,w
 10255  0B06  1D03               	skipz
 10256  0B07  2B0E               	goto	u2605
 10257  0B08  0871               	movf	___aldiv@divisor+1,w
 10258  0B09  0275               	subwf	___aldiv@dividend+1,w
 10259  0B0A  1D03               	skipz
 10260  0B0B  2B0E               	goto	u2605
 10261  0B0C  0870               	movf	___aldiv@divisor,w
 10262  0B0D  0274               	subwf	___aldiv@dividend,w
 10263  0B0E                     u2605:	
 10264  0B0E  1C03               	skipc
 10265  0B0F  2B19               	goto	l2599
 10266  0B10  0870               	movf	___aldiv@divisor,w
 10267  0B11  02F4               	subwf	___aldiv@dividend,f
 10268  0B12  0871               	movf	___aldiv@divisor+1,w
 10269  0B13  3BF5               	subwfb	___aldiv@dividend+1,f
 10270  0B14  0872               	movf	___aldiv@divisor+2,w
 10271  0B15  3BF6               	subwfb	___aldiv@dividend+2,f
 10272  0B16  0873               	movf	___aldiv@divisor+3,w
 10273  0B17  3BF7               	subwfb	___aldiv@dividend+3,f
 10274  0B18  1422               	bsf	___aldiv@quotient,0
 10275  0B19                     l2599:	
 10276  0B19  3001               	movlw	1
 10277  0B1A                     u2615:	
 10278  0B1A  36F3               	lsrf	___aldiv@divisor+3,f
 10279  0B1B  0CF2               	rrf	___aldiv@divisor+2,f
 10280  0B1C  0CF1               	rrf	___aldiv@divisor+1,f
 10281  0B1D  0CF0               	rrf	___aldiv@divisor,f
 10282  0B1E  0B89               	decfsz	9,f
 10283  0B1F  2B1A               	goto	u2615
 10284  0B20  3001               	movlw	1
 10285  0B21  02A0               	subwf	___aldiv@counter,f
 10286  0B22  1D03               	btfss	3,2
 10287  0B23  2AF9               	goto	l2591
 10288  0B24                     l2603:	
 10289  0B24  0821               	movf	___aldiv@sign,w
 10290  0B25  1903               	btfsc	3,2
 10291  0B26  2B32               	goto	l2607
 10292  0B27  09A2               	comf	___aldiv@quotient,f
 10293  0B28  09A3               	comf	___aldiv@quotient+1,f
 10294  0B29  09A4               	comf	___aldiv@quotient+2,f
 10295  0B2A  09A5               	comf	___aldiv@quotient+3,f
 10296  0B2B  0AA2               	incf	___aldiv@quotient,f
 10297  0B2C  1903               	skipnz
 10298  0B2D  0AA3               	incf	___aldiv@quotient+1,f
 10299  0B2E  1903               	skipnz
 10300  0B2F  0AA4               	incf	___aldiv@quotient+2,f
 10301  0B30  1903               	skipnz
 10302  0B31  0AA5               	incf	___aldiv@quotient+3,f
 10303  0B32                     l2607:	
 10304  0B32  0825               	movf	___aldiv@quotient+3,w
 10305  0B33  00F3               	movwf	?___aldiv+3
 10306  0B34  0824               	movf	___aldiv@quotient+2,w
 10307  0B35  00F2               	movwf	?___aldiv+2
 10308  0B36  0823               	movf	___aldiv@quotient+1,w
 10309  0B37  00F1               	movwf	?___aldiv+1
 10310  0B38  0822               	movf	___aldiv@quotient,w
 10311  0B39  00F0               	movwf	?___aldiv
 10312  0B3A  0008               	return
 10313  0B3B                     __end_of___aldiv:	
 10314                           
 10315                           	psect	text12
 10316  1489                     __ptext12:	
 10317 ;; *************** function _ADCRead *****************
 10318 ;; Defined at:
 10319 ;;		line 19 in file "adc.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  channel         1    wreg     enum E14259
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;  channel         1    3[COMMON] enum E14259
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  2    0[COMMON] int 
 10326 ;; Registers used:
 10327 ;;		wreg
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10333 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;Total ram usage:        4 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; This function calls:
 10340 ;;		Nothing
 10341 ;; This function is called by:
 10342 ;;		_readAnalog
 10343 ;;		_readButton
 10344 ;;		_main
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           
 10349                           ;psect for function _ADCRead
 10350  1489                     _ADCRead:	
 10351                           
 10352                           ;incstack = 0
 10353                           ; Regs used in _ADCRead: [wreg]
 10354                           ;ADCRead@channel stored from wreg
 10355  1489  00F3               	movwf	ADCRead@channel
 10356                           
 10357                           ;adc.c: 21: ADPCH = channel_VSS;
 10358  148A  303C               	movlw	60
 10359  148B  0021               	movlb	1	; select bank1
 10360  148C  009E               	movwf	30	;volatile
 10361                           
 10362                           ;adc.c: 23: ADCON0bits.ADON = 1;
 10363  148D  1793               	bsf	19,7	;volatile
 10364                           
 10365                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
 10366  148E  1313               	bcf	19,6	;volatile
 10367                           
 10368                           ;adc.c: 27: ADCON0bits.ADGO = 1;
 10369  148F  1413               	bsf	19,0	;volatile
 10370  1490                     l57:	
 10371                           ;adc.c: 30: {
 10372                           
 10373                           ;adc.c: 29: while(ADCON0bits.ADGO)
 10374                           
 10375  1490  1813               	btfsc	19,0	;volatile
 10376  1491  2C90               	goto	l57
 10377                           
 10378                           ;adc.c: 31: }
 10379                           ;adc.c: 33: ADPCH = channel;
 10380  1492  0873               	movf	ADCRead@channel,w
 10381  1493  009E               	movwf	30	;volatile
 10382                           
 10383                           ;adc.c: 35: ADCON0bits.ADON = 1;
 10384  1494  1793               	bsf	19,7	;volatile
 10385                           
 10386                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
 10387  1495  1313               	bcf	19,6	;volatile
 10388                           
 10389                           ;adc.c: 39: ADCON0bits.ADGO = 1;
 10390  1496  1413               	bsf	19,0	;volatile
 10391  1497                     l60:	
 10392                           ;adc.c: 42: {
 10393                           
 10394                           ;adc.c: 41: while(ADCON0bits.ADGO)
 10395                           
 10396  1497  1813               	btfsc	19,0	;volatile
 10397  1498  2C97               	goto	l60
 10398                           
 10399                           ;adc.c: 43: }
 10400                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
 10401  1499  080D               	movf	13,w	;volatile
 10402  149A  00F1               	movwf	?_ADCRead+1
 10403  149B  080C               	movf	12,w	;volatile
 10404  149C  00F0               	movwf	?_ADCRead
 10405  149D  0008               	return
 10406  149E                     __end_of_ADCRead:	
 10407                           
 10408                           	psect	text13
 10409  1729                     __ptext13:	
 10410 ;; *************** function _cc_cv_mode *****************
 10411 ;; Defined at:
 10412 ;;		line 88 in file "battery_charger.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;		None
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;		None
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  1    wreg      void 
 10419 ;; Registers used:
 10420 ;;		wreg, status,2, status,0
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10428 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10430 ;;Total ram usage:        1 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; This function calls:
 10433 ;;		Nothing
 10434 ;; This function is called by:
 10435 ;;		_main
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           
 10440                           ;psect for function _cc_cv_mode
 10441  1729                     _cc_cv_mode:	
 10442                           
 10443                           ;battery_charger.c: 90: if(voltage[1] > Vref)
 10444                           
 10445                           ;incstack = 0
 10446                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 10447  1729  0021               	movlb	1	; select bank1
 10448  172A  0865               	movf	(_Vref+1)^(0+128),w
 10449  172B  3A80               	xorlw	128
 10450  172C  00F0               	movwf	??_cc_cv_mode
 10451  172D  084F               	movf	((_voltage+1)^(0+128)+2),w
 10452  172E  3A80               	xorlw	128
 10453  172F  0270               	subwf	??_cc_cv_mode,w
 10454  1730  1D03               	skipz
 10455  1731  2F34               	goto	u3155
 10456  1732  084E               	movf	(_voltage^(0+128)+2),w
 10457  1733  0264               	subwf	_Vref^(0+128),w
 10458  1734                     u3155:	
 10459  1734  1803               	skipnc
 10460  1735  2F42               	goto	l2829
 10461                           
 10462                           ;battery_charger.c: 91: {
 10463                           ;battery_charger.c: 92: if(cc_cv)
 10464  1736  0021               	movlb	1	; select bank1
 10465  1737  0863               	movf	_cc_cv^(0+128),w
 10466  1738  1903               	btfsc	3,2
 10467  1739  2F3D               	goto	l2825
 10468                           
 10469                           ;battery_charger.c: 93: {
 10470                           ;battery_charger.c: 94: cc_cv-=1;
 10471  173A  3001               	movlw	1
 10472  173B  02E3               	subwf	_cc_cv^(0+128),f
 10473                           
 10474                           ;battery_charger.c: 95: }
 10475  173C  0008               	return
 10476  173D                     l2825:	
 10477                           
 10478                           ;battery_charger.c: 96: else
 10479                           ;battery_charger.c: 97: {
 10480                           ;battery_charger.c: 98: if(Imode0)
 10481  173D  086E               	movf	_Imode0^(0+128),w
 10482  173E  1903               	btfsc	3,2
 10483  173F  0008               	return
 10484                           
 10485                           ;battery_charger.c: 99: {
 10486                           ;battery_charger.c: 100: Imode0 = 0;
 10487  1740  01EE               	clrf	_Imode0^(0+128)
 10488                           
 10489                           ;battery_charger.c: 101: }
 10490                           ;battery_charger.c: 102: }
 10491                           ;battery_charger.c: 103: }
 10492  1741  0008               	return
 10493  1742                     l2829:	
 10494                           
 10495                           ;battery_charger.c: 104: else if(current[1] > Iref)
 10496  1742  0021               	movlb	1	; select bank1
 10497  1743  0867               	movf	(_Iref+1)^(0+128),w
 10498  1744  3A80               	xorlw	128
 10499  1745  00F0               	movwf	??_cc_cv_mode
 10500  1746  0847               	movf	((_current+1)^(0+128)+2),w
 10501  1747  3A80               	xorlw	128
 10502  1748  0270               	subwf	??_cc_cv_mode,w
 10503  1749  1D03               	skipz
 10504  174A  2F4D               	goto	u3185
 10505  174B  0846               	movf	(_current^(0+128)+2),w
 10506  174C  0266               	subwf	_Iref^(0+128),w
 10507  174D                     u3185:	
 10508  174D  1803               	skipnc
 10509  174E  0008               	return
 10510                           
 10511                           ;battery_charger.c: 105: {
 10512                           ;battery_charger.c: 106: if(!Imode0)
 10513  174F  0021               	movlb	1	; select bank1
 10514  1750  086E               	movf	_Imode0^(0+128),w
 10515  1751  1D03               	btfss	3,2
 10516  1752  0008               	return
 10517                           
 10518                           ;battery_charger.c: 107: {
 10519                           ;battery_charger.c: 108: if(battery_state == FLOAT)
 10520  1753  3005               	movlw	5
 10521  1754  066C               	xorwf	_battery_state^(0+128),w
 10522  1755  1D03               	btfss	3,2
 10523  1756  2F63               	goto	l2837
 10524                           
 10525                           ;battery_charger.c: 109: {
 10526                           ;battery_charger.c: 110: battery_state=CHARGE;
 10527  1757  3004               	movlw	4
 10528  1758  00F0               	movwf	??_cc_cv_mode
 10529  1759  0870               	movf	??_cc_cv_mode,w
 10530  175A  00EC               	movwf	_battery_state^(0+128)
 10531                           
 10532                           ;battery_charger.c: 111: { Vref = 1425; };
 10533  175B  3091               	movlw	145
 10534  175C  00E4               	movwf	_Vref^(0+128)
 10535  175D  3005               	movlw	5
 10536  175E  00E5               	movwf	(_Vref^(0+128)+1)
 10537                           
 10538                           ;battery_charger.c: 112: { Iref = 40; };
 10539  175F  3028               	movlw	40
 10540  1760  00E6               	movwf	_Iref^(0+128)
 10541  1761  3000               	movlw	0
 10542  1762  00E7               	movwf	(_Iref^(0+128)+1)
 10543  1763                     l2837:	
 10544                           
 10545                           ;battery_charger.c: 113: }
 10546                           ;battery_charger.c: 114: Imode0 = 1;
 10547  1763  01EE               	clrf	_Imode0^(0+128)
 10548  1764  0AEE               	incf	_Imode0^(0+128),f
 10549                           
 10550                           ;battery_charger.c: 115: cc_cv = 10;
 10551  1765  300A               	movlw	10
 10552  1766  00F0               	movwf	??_cc_cv_mode
 10553  1767  0870               	movf	??_cc_cv_mode,w
 10554  1768  00E3               	movwf	_cc_cv^(0+128)
 10555  1769  0008               	return
 10556  176A                     __end_of_cc_cv_mode:	
 10557                           
 10558                           	psect	text14
 10559  000C                     __ptext14:	
 10560 ;; *************** function _calculateCurrent1 *****************
 10561 ;; Defined at:
 10562 ;;		line 289 in file "main.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;		None
 10565 ;; Auto vars:     Size  Location     Type
 10566 ;;		None
 10567 ;; Return value:  Size  Location     Type
 10568 ;;                  1    wreg      void 
 10569 ;; Registers used:
 10570 ;;		wreg, status,2, status,0, pclath, cstack
 10571 ;; Tracked objects:
 10572 ;;		On entry : 0/0
 10573 ;;		On exit  : 0/0
 10574 ;;		Unchanged: 0/0
 10575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10578 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10579 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10580 ;;Total ram usage:        3 bytes
 10581 ;; Hardware stack levels used:    1
 10582 ;; Hardware stack levels required when called:    2
 10583 ;; This function calls:
 10584 ;;		___awtoft
 10585 ;;		___ftdiv
 10586 ;;		___fttol
 10587 ;; This function is called by:
 10588 ;;		_main
 10589 ;; This function uses a non-reentrant model
 10590 ;;
 10591                           
 10592                           
 10593                           ;psect for function _calculateCurrent1
 10594  000C                     _calculateCurrent1:	
 10595                           
 10596                           ;main.c: 291: if(analogs[5]-578<=0)
 10597                           
 10598                           ;incstack = 0
 10599                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10600  000C  0022               	movlb	2	; select bank2
 10601  000D  084A               	movf	(_analogs^(0+256)+10),w
 10602  000E  3EBE               	addlw	190
 10603  000F  0020               	movlb	0	; select bank0
 10604  0010  00BE               	movwf	??_calculateCurrent1
 10605  0011  30FD               	movlw	253
 10606  0012  0022               	movlb	2	; select bank2
 10607  0013  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10608  0014  0020               	movlb	0	; select bank0
 10609  0015  00BF               	movwf	??_calculateCurrent1+1
 10610  0016  083F               	movf	??_calculateCurrent1+1,w
 10611  0017  3A80               	xorlw	128
 10612  0018  00C0               	movwf	??_calculateCurrent1+2
 10613  0019  3080               	movlw	128
 10614  001A  0240               	subwf	??_calculateCurrent1+2,w
 10615  001B  1D03               	skipz
 10616  001C  281F               	goto	u3435
 10617  001D  3001               	movlw	1
 10618  001E  023E               	subwf	??_calculateCurrent1,w
 10619  001F                     u3435:	
 10620  001F  1803               	skipnc
 10621  0020  2825               	goto	l2977
 10622                           
 10623                           ;main.c: 292: {
 10624                           ;main.c: 293: current[1]=0;
 10625  0021  0021               	movlb	1	; select bank1
 10626  0022  01C6               	clrf	(_current^(0+128)+2)
 10627  0023  01C7               	clrf	((_current+1)^(0+128)+2)
 10628                           
 10629                           ;main.c: 294: }
 10630  0024  0008               	return
 10631  0025                     l2977:	
 10632                           
 10633                           ;main.c: 295: else
 10634                           ;main.c: 296: {
 10635                           ;main.c: 297: current[1]=(int16_t)((analogs[5]-578)/3.2323);
 10636  0025  0022               	movlb	2	; select bank2
 10637  0026  084A               	movf	(_analogs^(0+256)+10),w
 10638  0027  3EBE               	addlw	190
 10639  0028  00F8               	movwf	___awtoft@c
 10640  0029  30FD               	movlw	253
 10641  002A  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10642  002B  00F9               	movwf	___awtoft@c+1
 10643  002C  3195  2576  3180   	fcall	___awtoft
 10644  002F  0878               	movf	?___awtoft,w
 10645  0030  0020               	movlb	0	; select bank0
 10646  0031  00A3               	movwf	___ftdiv@f1
 10647  0032  0879               	movf	?___awtoft+1,w
 10648  0033  00A4               	movwf	___ftdiv@f1+1
 10649  0034  087A               	movf	?___awtoft+2,w
 10650  0035  00A5               	movwf	___ftdiv@f1+2
 10651  0036  30DE               	movlw	222
 10652  0037  00A0               	movwf	___ftdiv@f2
 10653  0038  304E               	movlw	78
 10654  0039  00A1               	movwf	___ftdiv@f2+1
 10655  003A  3040               	movlw	64
 10656  003B  00A2               	movwf	___ftdiv@f2+2
 10657  003C  318C  2444  3180   	fcall	___ftdiv
 10658  003F  0020               	movlb	0	; select bank0
 10659  0040  0820               	movf	?___ftdiv,w
 10660  0041  00B0               	movwf	___fttol@f1
 10661  0042  0821               	movf	?___ftdiv+1,w
 10662  0043  00B1               	movwf	___fttol@f1+1
 10663  0044  0822               	movf	?___ftdiv+2,w
 10664  0045  00B2               	movwf	___fttol@f1+2
 10665  0046  318B  23BD         	fcall	___fttol
 10666  0048  0020               	movlb	0	; select bank0
 10667  0049  0831               	movf	?___fttol+1,w
 10668  004A  0021               	movlb	1	; select bank1
 10669  004B  00C7               	movwf	((_current+1)^(0+128)+2)
 10670  004C  0020               	movlb	0	; select bank0
 10671  004D  0830               	movf	?___fttol,w
 10672  004E  0021               	movlb	1	; select bank1
 10673  004F  00C6               	movwf	(_current^(0+128)+2)
 10674  0050  0008               	return
 10675  0051                     __end_of_calculateCurrent1:	
 10676                           
 10677                           	psect	text15
 10678  176A                     __ptext15:	
 10679 ;; *************** function _calculateCurrent0 *****************
 10680 ;; Defined at:
 10681 ;;		line 277 in file "main.c"
 10682 ;; Parameters:    Size  Location     Type
 10683 ;;		None
 10684 ;; Auto vars:     Size  Location     Type
 10685 ;;		None
 10686 ;; Return value:  Size  Location     Type
 10687 ;;                  1    wreg      void 
 10688 ;; Registers used:
 10689 ;;		wreg, status,2, status,0, pclath, cstack
 10690 ;; Tracked objects:
 10691 ;;		On entry : 0/0
 10692 ;;		On exit  : 0/0
 10693 ;;		Unchanged: 0/0
 10694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10699 ;;Total ram usage:        3 bytes
 10700 ;; Hardware stack levels used:    1
 10701 ;; Hardware stack levels required when called:    2
 10702 ;; This function calls:
 10703 ;;		___awtoft
 10704 ;;		___ftdiv
 10705 ;;		___fttol
 10706 ;; This function is called by:
 10707 ;;		_main
 10708 ;; This function uses a non-reentrant model
 10709 ;;
 10710                           
 10711                           
 10712                           ;psect for function _calculateCurrent0
 10713  176A                     _calculateCurrent0:	
 10714                           
 10715                           ;main.c: 279: if(analogs[4]-589<=0)
 10716                           
 10717                           ;incstack = 0
 10718                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 10719  176A  0022               	movlb	2	; select bank2
 10720  176B  0848               	movf	(_analogs^(0+256)+8),w
 10721  176C  3EB3               	addlw	179
 10722  176D  0020               	movlb	0	; select bank0
 10723  176E  00BE               	movwf	??_calculateCurrent0
 10724  176F  30FD               	movlw	253
 10725  1770  0022               	movlb	2	; select bank2
 10726  1771  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10727  1772  0020               	movlb	0	; select bank0
 10728  1773  00BF               	movwf	??_calculateCurrent0+1
 10729  1774  083F               	movf	??_calculateCurrent0+1,w
 10730  1775  3A80               	xorlw	128
 10731  1776  00C0               	movwf	??_calculateCurrent0+2
 10732  1777  3080               	movlw	128
 10733  1778  0240               	subwf	??_calculateCurrent0+2,w
 10734  1779  1D03               	skipz
 10735  177A  2F7D               	goto	u3425
 10736  177B  3001               	movlw	1
 10737  177C  023E               	subwf	??_calculateCurrent0,w
 10738  177D                     u3425:	
 10739  177D  1803               	skipnc
 10740  177E  2F83               	goto	l2971
 10741                           
 10742                           ;main.c: 280: {
 10743                           ;main.c: 281: current[0]=0;
 10744  177F  0021               	movlb	1	; select bank1
 10745  1780  01C4               	clrf	_current^(0+128)
 10746  1781  01C5               	clrf	(_current+1)^(0+128)
 10747                           
 10748                           ;main.c: 282: }
 10749  1782  0008               	return
 10750  1783                     l2971:	
 10751                           
 10752                           ;main.c: 283: else
 10753                           ;main.c: 284: {
 10754                           ;main.c: 285: current[0]=(int16_t)((analogs[4]-589)/1.3165);
 10755  1783  0022               	movlb	2	; select bank2
 10756  1784  0848               	movf	(_analogs^(0+256)+8),w
 10757  1785  3EB3               	addlw	179
 10758  1786  00F8               	movwf	___awtoft@c
 10759  1787  30FD               	movlw	253
 10760  1788  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10761  1789  00F9               	movwf	___awtoft@c+1
 10762  178A  3195  2576  3197   	fcall	___awtoft
 10763  178D  0878               	movf	?___awtoft,w
 10764  178E  0020               	movlb	0	; select bank0
 10765  178F  00A3               	movwf	___ftdiv@f1
 10766  1790  0879               	movf	?___awtoft+1,w
 10767  1791  00A4               	movwf	___ftdiv@f1+1
 10768  1792  087A               	movf	?___awtoft+2,w
 10769  1793  00A5               	movwf	___ftdiv@f1+2
 10770  1794  3083               	movlw	131
 10771  1795  00A0               	movwf	___ftdiv@f2
 10772  1796  30A8               	movlw	168
 10773  1797  00A1               	movwf	___ftdiv@f2+1
 10774  1798  303F               	movlw	63
 10775  1799  00A2               	movwf	___ftdiv@f2+2
 10776  179A  318C  2444  3197   	fcall	___ftdiv
 10777  179D  0020               	movlb	0	; select bank0
 10778  179E  0820               	movf	?___ftdiv,w
 10779  179F  00B0               	movwf	___fttol@f1
 10780  17A0  0821               	movf	?___ftdiv+1,w
 10781  17A1  00B1               	movwf	___fttol@f1+1
 10782  17A2  0822               	movf	?___ftdiv+2,w
 10783  17A3  00B2               	movwf	___fttol@f1+2
 10784  17A4  318B  23BD         	fcall	___fttol
 10785  17A6  0020               	movlb	0	; select bank0
 10786  17A7  0831               	movf	?___fttol+1,w
 10787  17A8  0021               	movlb	1	; select bank1
 10788  17A9  00C5               	movwf	(_current+1)^(0+128)
 10789  17AA  0020               	movlb	0	; select bank0
 10790  17AB  0830               	movf	?___fttol,w
 10791  17AC  0021               	movlb	1	; select bank1
 10792  17AD  00C4               	movwf	_current^(0+128)
 10793  17AE  0008               	return
 10794  17AF                     __end_of_calculateCurrent0:	
 10795                           
 10796                           	psect	text16
 10797  0BBD                     __ptext16:	
 10798 ;; *************** function ___fttol *****************
 10799 ;; Defined at:
 10800 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;  f1              3   16[BANK0 ] float 
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;  lval            4   25[BANK0 ] unsigned long 
 10805 ;;  exp1            1   29[BANK0 ] unsigned char 
 10806 ;;  sign1           1   24[BANK0 ] unsigned char 
 10807 ;; Return value:  Size  Location     Type
 10808 ;;                  4   16[BANK0 ] long 
 10809 ;; Registers used:
 10810 ;;		wreg, status,2, status,0
 10811 ;; Tracked objects:
 10812 ;;		On entry : 0/0
 10813 ;;		On exit  : 0/0
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;Total ram usage:       14 bytes
 10821 ;; Hardware stack levels used:    1
 10822 ;; This function calls:
 10823 ;;		Nothing
 10824 ;; This function is called by:
 10825 ;;		_tempCalc
 10826 ;;		_main
 10827 ;;		_calculateCurrent0
 10828 ;;		_calculateCurrent1
 10829 ;;		_calculateCurrent2
 10830 ;;		_calculateCurrent3
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           
 10835                           ;psect for function ___fttol
 10836  0BBD                     ___fttol:	
 10837                           
 10838                           ;incstack = 0
 10839                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10840  0BBD  0020               	movlb	0	; select bank0
 10841  0BBE  0830               	movf	___fttol@f1,w
 10842  0BBF  00B4               	movwf	??___fttol
 10843  0BC0  0831               	movf	___fttol@f1+1,w
 10844  0BC1  00B5               	movwf	??___fttol+1
 10845  0BC2  0832               	movf	___fttol@f1+2,w
 10846  0BC3  00B6               	movwf	??___fttol+2
 10847  0BC4  1003               	clrc
 10848  0BC5  0D35               	rlf	??___fttol+1,w
 10849  0BC6  0D36               	rlf	??___fttol+2,w
 10850  0BC7  00B7               	movwf	??___fttol+3
 10851  0BC8  0837               	movf	??___fttol+3,w
 10852  0BC9  00BD               	movwf	___fttol@exp1
 10853  0BCA  083D               	movf	___fttol@exp1,w
 10854  0BCB  1D03               	btfss	3,2
 10855  0BCC  2BD6               	goto	l2711
 10856  0BCD  3000               	movlw	0
 10857  0BCE  00B3               	movwf	?___fttol+3
 10858  0BCF  3000               	movlw	0
 10859  0BD0  00B2               	movwf	?___fttol+2
 10860  0BD1  3000               	movlw	0
 10861  0BD2  00B1               	movwf	?___fttol+1
 10862  0BD3  3000               	movlw	0
 10863  0BD4  00B0               	movwf	?___fttol
 10864  0BD5  0008               	return
 10865  0BD6                     l2711:	
 10866  0BD6  0830               	movf	___fttol@f1,w
 10867  0BD7  00B4               	movwf	??___fttol
 10868  0BD8  0831               	movf	___fttol@f1+1,w
 10869  0BD9  00B5               	movwf	??___fttol+1
 10870  0BDA  0832               	movf	___fttol@f1+2,w
 10871  0BDB  00B6               	movwf	??___fttol+2
 10872  0BDC  3017               	movlw	23
 10873  0BDD                     u2845:	
 10874  0BDD  36B6               	lsrf	??___fttol+2,f
 10875  0BDE  0CB5               	rrf	??___fttol+1,f
 10876  0BDF  0CB4               	rrf	??___fttol,f
 10877  0BE0  0B89               	decfsz	9,f
 10878  0BE1  2BDD               	goto	u2845
 10879  0BE2  0834               	movf	??___fttol,w
 10880  0BE3  00B7               	movwf	??___fttol+3
 10881  0BE4  0837               	movf	??___fttol+3,w
 10882  0BE5  00B8               	movwf	___fttol@sign1
 10883  0BE6  17B1               	bsf	___fttol@f1+1,7
 10884  0BE7  30FF               	movlw	255
 10885  0BE8  05B0               	andwf	___fttol@f1,f
 10886  0BE9  30FF               	movlw	255
 10887  0BEA  05B1               	andwf	___fttol@f1+1,f
 10888  0BEB  3000               	movlw	0
 10889  0BEC  05B2               	andwf	___fttol@f1+2,f
 10890  0BED  0830               	movf	___fttol@f1,w
 10891  0BEE  00B9               	movwf	___fttol@lval
 10892  0BEF  0831               	movf	___fttol@f1+1,w
 10893  0BF0  00BA               	movwf	___fttol@lval+1
 10894  0BF1  0832               	movf	___fttol@f1+2,w
 10895  0BF2  00BB               	movwf	___fttol@lval+2
 10896  0BF3  01BC               	clrf	___fttol@lval+3
 10897  0BF4  308E               	movlw	142
 10898  0BF5  02BD               	subwf	___fttol@exp1,f
 10899  0BF6  1FBD               	btfss	___fttol@exp1,7
 10900  0BF7  2C14               	goto	l2731
 10901  0BF8  083D               	movf	___fttol@exp1,w
 10902  0BF9  3A80               	xorlw	128
 10903  0BFA  3E8F               	addlw	143
 10904  0BFB  1803               	skipnc
 10905  0BFC  2C06               	goto	l2729
 10906  0BFD  3000               	movlw	0
 10907  0BFE  00B3               	movwf	?___fttol+3
 10908  0BFF  3000               	movlw	0
 10909  0C00  00B2               	movwf	?___fttol+2
 10910  0C01  3000               	movlw	0
 10911  0C02  00B1               	movwf	?___fttol+1
 10912  0C03  3000               	movlw	0
 10913  0C04  00B0               	movwf	?___fttol
 10914  0C05  0008               	return
 10915  0C06                     l2729:	
 10916  0C06  3001               	movlw	1
 10917  0C07                     u2875:	
 10918  0C07  36BC               	lsrf	___fttol@lval+3,f
 10919  0C08  0CBB               	rrf	___fttol@lval+2,f
 10920  0C09  0CBA               	rrf	___fttol@lval+1,f
 10921  0C0A  0CB9               	rrf	___fttol@lval,f
 10922  0C0B  0B89               	decfsz	9,f
 10923  0C0C  2C07               	goto	u2875
 10924  0C0D  3001               	movlw	1
 10925  0C0E  00B4               	movwf	??___fttol
 10926  0C0F  0834               	movf	??___fttol,w
 10927  0C10  07BD               	addwf	___fttol@exp1,f
 10928  0C11  1903               	btfsc	3,2
 10929  0C12  2C2D               	goto	l2739
 10930  0C13  2C06               	goto	l2729
 10931  0C14                     l2731:	
 10932  0C14  3018               	movlw	24
 10933  0C15  023D               	subwf	___fttol@exp1,w
 10934  0C16  1C03               	skipc
 10935  0C17  2C2A               	goto	l827
 10936  0C18  3000               	movlw	0
 10937  0C19  00B3               	movwf	?___fttol+3
 10938  0C1A  3000               	movlw	0
 10939  0C1B  00B2               	movwf	?___fttol+2
 10940  0C1C  3000               	movlw	0
 10941  0C1D  00B1               	movwf	?___fttol+1
 10942  0C1E  3000               	movlw	0
 10943  0C1F  00B0               	movwf	?___fttol
 10944  0C20  0008               	return
 10945  0C21                     l2737:	
 10946  0C21  3001               	movlw	1
 10947  0C22                     u2905:	
 10948  0C22  35B9               	lslf	___fttol@lval,f
 10949  0C23  0DBA               	rlf	___fttol@lval+1,f
 10950  0C24  0DBB               	rlf	___fttol@lval+2,f
 10951  0C25  0DBC               	rlf	___fttol@lval+3,f
 10952  0C26  0B89               	decfsz	9,f
 10953  0C27  2C22               	goto	u2905
 10954  0C28  3001               	movlw	1
 10955  0C29  02BD               	subwf	___fttol@exp1,f
 10956  0C2A                     l827:	
 10957  0C2A  083D               	movf	___fttol@exp1,w
 10958  0C2B  1D03               	btfss	3,2
 10959  0C2C  2C21               	goto	l2737
 10960  0C2D                     l2739:	
 10961  0C2D  0838               	movf	___fttol@sign1,w
 10962  0C2E  1903               	btfsc	3,2
 10963  0C2F  2C3B               	goto	l2743
 10964  0C30  09B9               	comf	___fttol@lval,f
 10965  0C31  09BA               	comf	___fttol@lval+1,f
 10966  0C32  09BB               	comf	___fttol@lval+2,f
 10967  0C33  09BC               	comf	___fttol@lval+3,f
 10968  0C34  0AB9               	incf	___fttol@lval,f
 10969  0C35  1903               	skipnz
 10970  0C36  0ABA               	incf	___fttol@lval+1,f
 10971  0C37  1903               	skipnz
 10972  0C38  0ABB               	incf	___fttol@lval+2,f
 10973  0C39  1903               	skipnz
 10974  0C3A  0ABC               	incf	___fttol@lval+3,f
 10975  0C3B                     l2743:	
 10976  0C3B  083C               	movf	___fttol@lval+3,w
 10977  0C3C  00B3               	movwf	?___fttol+3
 10978  0C3D  083B               	movf	___fttol@lval+2,w
 10979  0C3E  00B2               	movwf	?___fttol+2
 10980  0C3F  083A               	movf	___fttol@lval+1,w
 10981  0C40  00B1               	movwf	?___fttol+1
 10982  0C41  0839               	movf	___fttol@lval,w
 10983  0C42  00B0               	movwf	?___fttol
 10984  0C43  0008               	return
 10985  0C44                     __end_of___fttol:	
 10986                           
 10987                           	psect	text17
 10988  0C44                     __ptext17:	
 10989 ;; *************** function ___ftdiv *****************
 10990 ;; Defined at:
 10991 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;  f2              3    0[BANK0 ] float 
 10994 ;;  f1              3    3[BANK0 ] float 
 10995 ;; Auto vars:     Size  Location     Type
 10996 ;;  f3              3   11[BANK0 ] float 
 10997 ;;  sign            1   15[BANK0 ] unsigned char 
 10998 ;;  exp             1   14[BANK0 ] unsigned char 
 10999 ;;  cntr            1   10[BANK0 ] unsigned char 
 11000 ;; Return value:  Size  Location     Type
 11001 ;;                  3    0[BANK0 ] float 
 11002 ;; Registers used:
 11003 ;;		wreg, status,2, status,0, pclath, cstack
 11004 ;; Tracked objects:
 11005 ;;		On entry : 0/0
 11006 ;;		On exit  : 0/0
 11007 ;;		Unchanged: 0/0
 11008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11009 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11010 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11011 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;Total ram usage:       16 bytes
 11014 ;; Hardware stack levels used:    1
 11015 ;; Hardware stack levels required when called:    1
 11016 ;; This function calls:
 11017 ;;		___ftpack
 11018 ;; This function is called by:
 11019 ;;		_tempCalc
 11020 ;;		_main
 11021 ;;		_calculateCurrent0
 11022 ;;		_calculateCurrent1
 11023 ;;		_calculateCurrent2
 11024 ;;		_calculateCurrent3
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           
 11029                           ;psect for function ___ftdiv
 11030  0C44                     ___ftdiv:	
 11031                           
 11032                           ;incstack = 0
 11033                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11034  0C44  0020               	movlb	0	; select bank0
 11035  0C45  0823               	movf	___ftdiv@f1,w
 11036  0C46  00A6               	movwf	??___ftdiv
 11037  0C47  0824               	movf	___ftdiv@f1+1,w
 11038  0C48  00A7               	movwf	??___ftdiv+1
 11039  0C49  0825               	movf	___ftdiv@f1+2,w
 11040  0C4A  00A8               	movwf	??___ftdiv+2
 11041  0C4B  1003               	clrc
 11042  0C4C  0D27               	rlf	??___ftdiv+1,w
 11043  0C4D  0D28               	rlf	??___ftdiv+2,w
 11044  0C4E  00A9               	movwf	??___ftdiv+3
 11045  0C4F  0829               	movf	??___ftdiv+3,w
 11046  0C50  00AE               	movwf	___ftdiv@exp
 11047  0C51  082E               	movf	___ftdiv@exp,w
 11048  0C52  1D03               	btfss	3,2
 11049  0C53  2C5B               	goto	l2661
 11050  0C54  3000               	movlw	0
 11051  0C55  00A0               	movwf	?___ftdiv
 11052  0C56  3000               	movlw	0
 11053  0C57  00A1               	movwf	?___ftdiv+1
 11054  0C58  3000               	movlw	0
 11055  0C59  00A2               	movwf	?___ftdiv+2
 11056  0C5A  0008               	return
 11057  0C5B                     l2661:	
 11058  0C5B  0820               	movf	___ftdiv@f2,w
 11059  0C5C  00A6               	movwf	??___ftdiv
 11060  0C5D  0821               	movf	___ftdiv@f2+1,w
 11061  0C5E  00A7               	movwf	??___ftdiv+1
 11062  0C5F  0822               	movf	___ftdiv@f2+2,w
 11063  0C60  00A8               	movwf	??___ftdiv+2
 11064  0C61  1003               	clrc
 11065  0C62  0D27               	rlf	??___ftdiv+1,w
 11066  0C63  0D28               	rlf	??___ftdiv+2,w
 11067  0C64  00A9               	movwf	??___ftdiv+3
 11068  0C65  0829               	movf	??___ftdiv+3,w
 11069  0C66  00AF               	movwf	___ftdiv@sign
 11070  0C67  082F               	movf	___ftdiv@sign,w
 11071  0C68  1D03               	btfss	3,2
 11072  0C69  2C71               	goto	l2667
 11073  0C6A  3000               	movlw	0
 11074  0C6B  00A0               	movwf	?___ftdiv
 11075  0C6C  3000               	movlw	0
 11076  0C6D  00A1               	movwf	?___ftdiv+1
 11077  0C6E  3000               	movlw	0
 11078  0C6F  00A2               	movwf	?___ftdiv+2
 11079  0C70  0008               	return
 11080  0C71                     l2667:	
 11081  0C71  3000               	movlw	0
 11082  0C72  00AB               	movwf	___ftdiv@f3
 11083  0C73  3000               	movlw	0
 11084  0C74  00AC               	movwf	___ftdiv@f3+1
 11085  0C75  3000               	movlw	0
 11086  0C76  00AD               	movwf	___ftdiv@f3+2
 11087  0C77  3089               	movlw	137
 11088  0C78  072F               	addwf	___ftdiv@sign,w
 11089  0C79  00A6               	movwf	??___ftdiv
 11090  0C7A  0826               	movf	??___ftdiv,w
 11091  0C7B  02AE               	subwf	___ftdiv@exp,f
 11092  0C7C  0823               	movf	___ftdiv@f1,w
 11093  0C7D  00A6               	movwf	??___ftdiv
 11094  0C7E  0824               	movf	___ftdiv@f1+1,w
 11095  0C7F  00A7               	movwf	??___ftdiv+1
 11096  0C80  0825               	movf	___ftdiv@f1+2,w
 11097  0C81  00A8               	movwf	??___ftdiv+2
 11098  0C82  3010               	movlw	16
 11099  0C83                     u2765:	
 11100  0C83  36A8               	lsrf	??___ftdiv+2,f
 11101  0C84  0CA7               	rrf	??___ftdiv+1,f
 11102  0C85  0CA6               	rrf	??___ftdiv,f
 11103  0C86  0B89               	decfsz	9,f
 11104  0C87  2C83               	goto	u2765
 11105  0C88  0826               	movf	??___ftdiv,w
 11106  0C89  00A9               	movwf	??___ftdiv+3
 11107  0C8A  0829               	movf	??___ftdiv+3,w
 11108  0C8B  00AF               	movwf	___ftdiv@sign
 11109  0C8C  0820               	movf	___ftdiv@f2,w
 11110  0C8D  00A6               	movwf	??___ftdiv
 11111  0C8E  0821               	movf	___ftdiv@f2+1,w
 11112  0C8F  00A7               	movwf	??___ftdiv+1
 11113  0C90  0822               	movf	___ftdiv@f2+2,w
 11114  0C91  00A8               	movwf	??___ftdiv+2
 11115  0C92  3010               	movlw	16
 11116  0C93                     u2775:	
 11117  0C93  36A8               	lsrf	??___ftdiv+2,f
 11118  0C94  0CA7               	rrf	??___ftdiv+1,f
 11119  0C95  0CA6               	rrf	??___ftdiv,f
 11120  0C96  0B89               	decfsz	9,f
 11121  0C97  2C93               	goto	u2775
 11122  0C98  0826               	movf	??___ftdiv,w
 11123  0C99  00A9               	movwf	??___ftdiv+3
 11124  0C9A  0829               	movf	??___ftdiv+3,w
 11125  0C9B  06AF               	xorwf	___ftdiv@sign,f
 11126  0C9C  3080               	movlw	128
 11127  0C9D  00A6               	movwf	??___ftdiv
 11128  0C9E  0826               	movf	??___ftdiv,w
 11129  0C9F  05AF               	andwf	___ftdiv@sign,f
 11130  0CA0  17A4               	bsf	___ftdiv@f1+1,7
 11131  0CA1  30FF               	movlw	255
 11132  0CA2  05A3               	andwf	___ftdiv@f1,f
 11133  0CA3  30FF               	movlw	255
 11134  0CA4  05A4               	andwf	___ftdiv@f1+1,f
 11135  0CA5  3000               	movlw	0
 11136  0CA6  05A5               	andwf	___ftdiv@f1+2,f
 11137  0CA7  17A1               	bsf	___ftdiv@f2+1,7
 11138  0CA8  30FF               	movlw	255
 11139  0CA9  05A0               	andwf	___ftdiv@f2,f
 11140  0CAA  30FF               	movlw	255
 11141  0CAB  05A1               	andwf	___ftdiv@f2+1,f
 11142  0CAC  3000               	movlw	0
 11143  0CAD  05A2               	andwf	___ftdiv@f2+2,f
 11144  0CAE  3018               	movlw	24
 11145  0CAF  00A6               	movwf	??___ftdiv
 11146  0CB0  0826               	movf	??___ftdiv,w
 11147  0CB1  00AA               	movwf	___ftdiv@cntr
 11148  0CB2                     l2681:	
 11149  0CB2  3001               	movlw	1
 11150  0CB3                     u2785:	
 11151  0CB3  35AB               	lslf	___ftdiv@f3,f
 11152  0CB4  0DAC               	rlf	___ftdiv@f3+1,f
 11153  0CB5  0DAD               	rlf	___ftdiv@f3+2,f
 11154  0CB6  0B89               	decfsz	9,f
 11155  0CB7  2CB3               	goto	u2785
 11156  0CB8  0822               	movf	___ftdiv@f2+2,w
 11157  0CB9  0225               	subwf	___ftdiv@f1+2,w
 11158  0CBA  1D03               	skipz
 11159  0CBB  2CC2               	goto	u2795
 11160  0CBC  0821               	movf	___ftdiv@f2+1,w
 11161  0CBD  0224               	subwf	___ftdiv@f1+1,w
 11162  0CBE  1D03               	skipz
 11163  0CBF  2CC2               	goto	u2795
 11164  0CC0  0820               	movf	___ftdiv@f2,w
 11165  0CC1  0223               	subwf	___ftdiv@f1,w
 11166  0CC2                     u2795:	
 11167  0CC2  1C03               	skipc
 11168  0CC3  2CCB               	goto	l2689
 11169  0CC4  0820               	movf	___ftdiv@f2,w
 11170  0CC5  02A3               	subwf	___ftdiv@f1,f
 11171  0CC6  0821               	movf	___ftdiv@f2+1,w
 11172  0CC7  3BA4               	subwfb	___ftdiv@f1+1,f
 11173  0CC8  0822               	movf	___ftdiv@f2+2,w
 11174  0CC9  3BA5               	subwfb	___ftdiv@f1+2,f
 11175  0CCA  142B               	bsf	___ftdiv@f3,0
 11176  0CCB                     l2689:	
 11177  0CCB  3001               	movlw	1
 11178  0CCC                     u2805:	
 11179  0CCC  35A3               	lslf	___ftdiv@f1,f
 11180  0CCD  0DA4               	rlf	___ftdiv@f1+1,f
 11181  0CCE  0DA5               	rlf	___ftdiv@f1+2,f
 11182  0CCF  0B89               	decfsz	9,f
 11183  0CD0  2CCC               	goto	u2805
 11184  0CD1  3001               	movlw	1
 11185  0CD2  02AA               	subwf	___ftdiv@cntr,f
 11186  0CD3  1D03               	btfss	3,2
 11187  0CD4  2CB2               	goto	l2681
 11188  0CD5  082B               	movf	___ftdiv@f3,w
 11189  0CD6  00F0               	movwf	___ftpack@arg
 11190  0CD7  082C               	movf	___ftdiv@f3+1,w
 11191  0CD8  00F1               	movwf	___ftpack@arg+1
 11192  0CD9  082D               	movf	___ftdiv@f3+2,w
 11193  0CDA  00F2               	movwf	___ftpack@arg+2
 11194  0CDB  082E               	movf	___ftdiv@exp,w
 11195  0CDC  00A6               	movwf	??___ftdiv
 11196  0CDD  0826               	movf	??___ftdiv,w
 11197  0CDE  00F3               	movwf	___ftpack@exp
 11198  0CDF  082F               	movf	___ftdiv@sign,w
 11199  0CE0  00A7               	movwf	??___ftdiv+1
 11200  0CE1  0827               	movf	??___ftdiv+1,w
 11201  0CE2  00F4               	movwf	___ftpack@sign
 11202  0CE3  3189  21EE         	fcall	___ftpack
 11203  0CE5  0870               	movf	?___ftpack,w
 11204  0CE6  0020               	movlb	0	; select bank0
 11205  0CE7  00A0               	movwf	?___ftdiv
 11206  0CE8  0871               	movf	?___ftpack+1,w
 11207  0CE9  00A1               	movwf	?___ftdiv+1
 11208  0CEA  0872               	movf	?___ftpack+2,w
 11209  0CEB  00A2               	movwf	?___ftdiv+2
 11210  0CEC  0008               	return
 11211  0CED                     __end_of___ftdiv:	
 11212                           
 11213                           	psect	text18
 11214  1576                     __ptext18:	
 11215 ;; *************** function ___awtoft *****************
 11216 ;; Defined at:
 11217 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11218 ;; Parameters:    Size  Location     Type
 11219 ;;  c               2    8[COMMON] int 
 11220 ;; Auto vars:     Size  Location     Type
 11221 ;;  sign            1   13[COMMON] unsigned char 
 11222 ;; Return value:  Size  Location     Type
 11223 ;;                  3    8[COMMON] float 
 11224 ;; Registers used:
 11225 ;;		wreg, status,2, status,0, pclath, cstack
 11226 ;; Tracked objects:
 11227 ;;		On entry : 0/0
 11228 ;;		On exit  : 0/0
 11229 ;;		Unchanged: 0/0
 11230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11231 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11234 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11235 ;;Total ram usage:        6 bytes
 11236 ;; Hardware stack levels used:    1
 11237 ;; Hardware stack levels required when called:    1
 11238 ;; This function calls:
 11239 ;;		___ftpack
 11240 ;; This function is called by:
 11241 ;;		_tempCalc
 11242 ;;		_main
 11243 ;;		_calculateCurrent0
 11244 ;;		_calculateCurrent1
 11245 ;;		_log
 11246 ;;		_calculateCurrent2
 11247 ;;		_calculateCurrent3
 11248 ;; This function uses a non-reentrant model
 11249 ;;
 11250                           
 11251                           
 11252                           ;psect for function ___awtoft
 11253  1576                     ___awtoft:	
 11254                           
 11255                           ;incstack = 0
 11256                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11257  1576  01FD               	clrf	___awtoft@sign
 11258  1577  1FF9               	btfss	___awtoft@c+1,7
 11259  1578  2D80               	goto	l2325
 11260  1579  09F8               	comf	___awtoft@c,f
 11261  157A  09F9               	comf	___awtoft@c+1,f
 11262  157B  0AF8               	incf	___awtoft@c,f
 11263  157C  1903               	skipnz
 11264  157D  0AF9               	incf	___awtoft@c+1,f
 11265  157E  01FD               	clrf	___awtoft@sign
 11266  157F  0AFD               	incf	___awtoft@sign,f
 11267  1580                     l2325:	
 11268  1580  0878               	movf	___awtoft@c,w
 11269  1581  00F0               	movwf	___ftpack@arg
 11270  1582  0879               	movf	___awtoft@c+1,w
 11271  1583  00F1               	movwf	___ftpack@arg+1
 11272  1584  01F2               	clrf	___ftpack@arg+2
 11273  1585  308E               	movlw	142
 11274  1586  00FB               	movwf	??___awtoft
 11275  1587  087B               	movf	??___awtoft,w
 11276  1588  00F3               	movwf	___ftpack@exp
 11277  1589  087D               	movf	___awtoft@sign,w
 11278  158A  00FC               	movwf	??___awtoft+1
 11279  158B  087C               	movf	??___awtoft+1,w
 11280  158C  00F4               	movwf	___ftpack@sign
 11281  158D  3189  21EE         	fcall	___ftpack
 11282  158F  0870               	movf	?___ftpack,w
 11283  1590  00F8               	movwf	?___awtoft
 11284  1591  0871               	movf	?___ftpack+1,w
 11285  1592  00F9               	movwf	?___awtoft+1
 11286  1593  0872               	movf	?___ftpack+2,w
 11287  1594  00FA               	movwf	?___awtoft+2
 11288  1595  0008               	return
 11289  1596                     __end_of___awtoft:	
 11290                           
 11291                           	psect	text19
 11292  09EE                     __ptext19:	
 11293 ;; *************** function ___ftpack *****************
 11294 ;; Defined at:
 11295 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  arg             3    0[COMMON] unsigned um
 11298 ;;  exp             1    3[COMMON] unsigned char 
 11299 ;;  sign            1    4[COMMON] unsigned char 
 11300 ;; Auto vars:     Size  Location     Type
 11301 ;;		None
 11302 ;; Return value:  Size  Location     Type
 11303 ;;                  3    0[COMMON] float 
 11304 ;; Registers used:
 11305 ;;		wreg, status,2, status,0
 11306 ;; Tracked objects:
 11307 ;;		On entry : 0/0
 11308 ;;		On exit  : 0/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11311 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11313 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;Total ram usage:        8 bytes
 11316 ;; Hardware stack levels used:    1
 11317 ;; This function calls:
 11318 ;;		Nothing
 11319 ;; This function is called by:
 11320 ;;		___awtoft
 11321 ;;		___ftadd
 11322 ;;		___ftdiv
 11323 ;;		___ftmul
 11324 ;; This function uses a non-reentrant model
 11325 ;;
 11326                           
 11327                           
 11328                           ;psect for function ___ftpack
 11329  09EE                     ___ftpack:	
 11330                           
 11331                           ;incstack = 0
 11332                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11333  09EE  0873               	movf	___ftpack@exp,w
 11334  09EF  1903               	btfsc	3,2
 11335  09F0  29F6               	goto	l2131
 11336  09F1  0872               	movf	___ftpack@arg+2,w
 11337  09F2  0471               	iorwf	___ftpack@arg+1,w
 11338  09F3  0470               	iorwf	___ftpack@arg,w
 11339  09F4  1D03               	skipz
 11340  09F5  2A07               	goto	l2137
 11341  09F6                     l2131:	
 11342  09F6  3000               	movlw	0
 11343  09F7  00F0               	movwf	?___ftpack
 11344  09F8  3000               	movlw	0
 11345  09F9  00F1               	movwf	?___ftpack+1
 11346  09FA  3000               	movlw	0
 11347  09FB  00F2               	movwf	?___ftpack+2
 11348  09FC  0008               	return
 11349  09FD                     l2135:	
 11350  09FD  3001               	movlw	1
 11351  09FE  00F5               	movwf	??___ftpack
 11352  09FF  0875               	movf	??___ftpack,w
 11353  0A00  07F3               	addwf	___ftpack@exp,f
 11354  0A01  3001               	movlw	1
 11355  0A02                     u1875:	
 11356  0A02  36F2               	lsrf	___ftpack@arg+2,f
 11357  0A03  0CF1               	rrf	___ftpack@arg+1,f
 11358  0A04  0CF0               	rrf	___ftpack@arg,f
 11359  0A05  0B89               	decfsz	9,f
 11360  0A06  2A02               	goto	u1875
 11361  0A07                     l2137:	
 11362  0A07  30FE               	movlw	254
 11363  0A08  0572               	andwf	___ftpack@arg+2,w
 11364  0A09  1903               	btfsc	3,2
 11365  0A0A  2A20               	goto	l736
 11366  0A0B  29FD               	goto	l2135
 11367  0A0C                     l2139:	
 11368  0A0C  3001               	movlw	1
 11369  0A0D  00F5               	movwf	??___ftpack
 11370  0A0E  0875               	movf	??___ftpack,w
 11371  0A0F  07F3               	addwf	___ftpack@exp,f
 11372  0A10  3001               	movlw	1
 11373  0A11  07F0               	addwf	___ftpack@arg,f
 11374  0A12  3000               	movlw	0
 11375  0A13  1803               	skipnc
 11376  0A14  3001               	movlw	1
 11377  0A15  07F1               	addwf	___ftpack@arg+1,f
 11378  0A16  3000               	movlw	0
 11379  0A17  1803               	skipnc
 11380  0A18  3001               	movlw	1
 11381  0A19  07F2               	addwf	___ftpack@arg+2,f
 11382  0A1A  3001               	movlw	1
 11383  0A1B                     u1895:	
 11384  0A1B  36F2               	lsrf	___ftpack@arg+2,f
 11385  0A1C  0CF1               	rrf	___ftpack@arg+1,f
 11386  0A1D  0CF0               	rrf	___ftpack@arg,f
 11387  0A1E  0B89               	decfsz	9,f
 11388  0A1F  2A1B               	goto	u1895
 11389  0A20                     l736:	
 11390  0A20  30FF               	movlw	255
 11391  0A21  0572               	andwf	___ftpack@arg+2,w
 11392  0A22  1903               	btfsc	3,2
 11393  0A23  2A2D               	goto	l2147
 11394  0A24  2A0C               	goto	l2139
 11395  0A25                     l2145:	
 11396  0A25  3001               	movlw	1
 11397  0A26  02F3               	subwf	___ftpack@exp,f
 11398  0A27  3001               	movlw	1
 11399  0A28                     u1915:	
 11400  0A28  35F0               	lslf	___ftpack@arg,f
 11401  0A29  0DF1               	rlf	___ftpack@arg+1,f
 11402  0A2A  0DF2               	rlf	___ftpack@arg+2,f
 11403  0A2B  0B89               	decfsz	9,f
 11404  0A2C  2A28               	goto	u1915
 11405  0A2D                     l2147:	
 11406  0A2D  1BF1               	btfsc	___ftpack@arg+1,7
 11407  0A2E  2A33               	goto	l743
 11408  0A2F  3002               	movlw	2
 11409  0A30  0273               	subwf	___ftpack@exp,w
 11410  0A31  1803               	skipnc
 11411  0A32  2A25               	goto	l2145
 11412  0A33                     l743:	
 11413  0A33  1873               	btfsc	___ftpack@exp,0
 11414  0A34  2A3B               	goto	l744
 11415  0A35  30FF               	movlw	255
 11416  0A36  05F0               	andwf	___ftpack@arg,f
 11417  0A37  307F               	movlw	127
 11418  0A38  05F1               	andwf	___ftpack@arg+1,f
 11419  0A39  30FF               	movlw	255
 11420  0A3A  05F2               	andwf	___ftpack@arg+2,f
 11421  0A3B                     l744:	
 11422  0A3B  1003               	clrc
 11423  0A3C  0CF3               	rrf	___ftpack@exp,f
 11424  0A3D  0873               	movf	___ftpack@exp,w
 11425  0A3E  00F5               	movwf	??___ftpack
 11426  0A3F  01F6               	clrf	??___ftpack+1
 11427  0A40  01F7               	clrf	??___ftpack+2
 11428  0A41  3010               	movlw	16
 11429  0A42                     u1955:	
 11430  0A42  35F5               	lslf	??___ftpack,f
 11431  0A43  0DF6               	rlf	??___ftpack+1,f
 11432  0A44  0DF7               	rlf	??___ftpack+2,f
 11433  0A45  0B89               	decfsz	9,f
 11434  0A46  2A42               	goto	u1955
 11435  0A47  0875               	movf	??___ftpack,w
 11436  0A48  04F0               	iorwf	___ftpack@arg,f
 11437  0A49  0876               	movf	??___ftpack+1,w
 11438  0A4A  04F1               	iorwf	___ftpack@arg+1,f
 11439  0A4B  0877               	movf	??___ftpack+2,w
 11440  0A4C  04F2               	iorwf	___ftpack@arg+2,f
 11441  0A4D  0874               	movf	___ftpack@sign,w
 11442  0A4E  1903               	btfsc	3,2
 11443  0A4F  0008               	return
 11444  0A50  17F2               	bsf	___ftpack@arg+2,7
 11445  0A51  0008               	return
 11446  0A52                     __end_of___ftpack:	
 11447                           
 11448                           	psect	text20
 11449  160D                     __ptext20:	
 11450 ;; *************** function _SYSTEM_Initialize *****************
 11451 ;; Defined at:
 11452 ;;		line 71 in file "system.c"
 11453 ;; Parameters:    Size  Location     Type
 11454 ;;		None
 11455 ;; Auto vars:     Size  Location     Type
 11456 ;;		None
 11457 ;; Return value:  Size  Location     Type
 11458 ;;                  1    wreg      void 
 11459 ;; Registers used:
 11460 ;;		wreg, status,2, status,0, pclath, cstack
 11461 ;; Tracked objects:
 11462 ;;		On entry : 0/0
 11463 ;;		On exit  : 0/0
 11464 ;;		Unchanged: 0/0
 11465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11468 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;Total ram usage:        2 bytes
 11471 ;; Hardware stack levels used:    1
 11472 ;; Hardware stack levels required when called:    3
 11473 ;; This function calls:
 11474 ;;		_ADC_Initialize
 11475 ;;		_Init_Battery_State_Machine
 11476 ;;		_LCDClear
 11477 ;;		_LCDInit
 11478 ;;		_OSCILLATOR_Initialize
 11479 ;;		_PIN_MANAGER_Initialize
 11480 ;;		_PWM_Initialize
 11481 ;;		_TMR2_Initialize
 11482 ;;		_TMR4_Initialize
 11483 ;; This function is called by:
 11484 ;;		_main
 11485 ;; This function uses a non-reentrant model
 11486 ;;
 11487                           
 11488                           
 11489                           ;psect for function _SYSTEM_Initialize
 11490  160D                     _SYSTEM_Initialize:	
 11491                           
 11492                           ;system.c: 73: PIN_MANAGER_Initialize();
 11493                           
 11494                           ;incstack = 0
 11495                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11496  160D  3196  2641  3196   	fcall	_PIN_MANAGER_Initialize
 11497                           
 11498                           ;system.c: 74: OSCILLATOR_Initialize();
 11499  1610  3194  2429  3196   	fcall	_OSCILLATOR_Initialize
 11500                           
 11501                           ;system.c: 76: ADC_Initialize();
 11502  1613  3195  2538  3196   	fcall	_ADC_Initialize
 11503                           
 11504                           ;system.c: 77: PWM_Initialize();
 11505  1616  3195  2557  3196   	fcall	_PWM_Initialize
 11506                           
 11507                           ;system.c: 79: TMR2_Initialize();
 11508  1619  3194  244A  3196   	fcall	_TMR2_Initialize
 11509                           
 11510                           ;system.c: 80: TMR4_Initialize();
 11511  161C  3194  2458  3196   	fcall	_TMR4_Initialize
 11512                           
 11513                           ;system.c: 81: Init_Battery_State_Machine();
 11514  161F  3194  24E0  3196   	fcall	_Init_Battery_State_Machine
 11515                           
 11516                           ;system.c: 82: LCDInit();
 11517  1622  3196  2678  3196   	fcall	_LCDInit
 11518                           
 11519                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 11520  1625  3009               	movlw	9
 11521  1626  00FC               	movwf	??_SYSTEM_Initialize+1
 11522  1627  301E               	movlw	30
 11523  1628  00FB               	movwf	??_SYSTEM_Initialize
 11524  1629  30E4               	movlw	228
 11525  162A                     u3717:	
 11526  162A  0B89               	decfsz	9,f
 11527  162B  2E2A               	goto	u3717
 11528  162C  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11529  162D  2E2A               	goto	u3717
 11530  162E  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11531  162F  2E2A               	goto	u3717
 11532  1630  3200               	nop2
 11533                           
 11534                           ;system.c: 84: LCDClear();
 11535  1631  3195  25BB  3196   	fcall	_LCDClear
 11536                           
 11537                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11538  1634  3009               	movlw	9
 11539  1635  00FC               	movwf	??_SYSTEM_Initialize+1
 11540  1636  301E               	movlw	30
 11541  1637  00FB               	movwf	??_SYSTEM_Initialize
 11542  1638  30E4               	movlw	228
 11543  1639                     u3727:	
 11544  1639  0B89               	decfsz	9,f
 11545  163A  2E39               	goto	u3727
 11546  163B  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11547  163C  2E39               	goto	u3727
 11548  163D  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11549  163E  2E39               	goto	u3727
 11550  163F  3200               	nop2
 11551  1640  0008               	return
 11552  1641                     __end_of_SYSTEM_Initialize:	
 11553                           
 11554                           	psect	text21
 11555  1458                     __ptext21:	
 11556 ;; *************** function _TMR4_Initialize *****************
 11557 ;; Defined at:
 11558 ;;		line 25 in file "tmr.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;		None
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;		None
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1    wreg      void 
 11565 ;; Registers used:
 11566 ;;		wreg, status,2
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;Total ram usage:        0 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		_SYSTEM_Initialize
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           
 11586                           ;psect for function _TMR4_Initialize
 11587  1458                     _TMR4_Initialize:	
 11588                           
 11589                           ;tmr.c: 27: T4CON = 0x00;
 11590                           
 11591                           ;incstack = 0
 11592                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11593  1458  0025               	movlb	5	; select bank5
 11594  1459  0194               	clrf	20	;volatile
 11595                           
 11596                           ;tmr.c: 29: T4CLKCON = 0x01;
 11597  145A  3001               	movlw	1
 11598  145B  0096               	movwf	22	;volatile
 11599                           
 11600                           ;tmr.c: 31: T4HLT = 0x00;
 11601  145C  0195               	clrf	21	;volatile
 11602                           
 11603                           ;tmr.c: 33: T4RST = 0x00;
 11604  145D  0197               	clrf	23	;volatile
 11605                           
 11606                           ;tmr.c: 35: T4PR = 0xFE;
 11607  145E  30FE               	movlw	254
 11608  145F  0093               	movwf	19	;volatile
 11609                           
 11610                           ;tmr.c: 39: T4TMR = 0x00;
 11611  1460  0192               	clrf	18	;volatile
 11612                           
 11613                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11614  1461  002E               	movlb	14	; select bank14
 11615  1462  1190               	bcf	16,3	;volatile
 11616                           
 11617                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 11618  1463  0025               	movlb	5	; select bank5
 11619  1464  1794               	bsf	20,7	;volatile
 11620  1465  0008               	return
 11621  1466                     __end_of_TMR4_Initialize:	
 11622                           
 11623                           	psect	text22
 11624  144A                     __ptext22:	
 11625 ;; *************** function _TMR2_Initialize *****************
 11626 ;; Defined at:
 11627 ;;		line 3 in file "tmr.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;		None
 11630 ;; Auto vars:     Size  Location     Type
 11631 ;;		None
 11632 ;; Return value:  Size  Location     Type
 11633 ;;                  1    wreg      void 
 11634 ;; Registers used:
 11635 ;;		wreg, status,2
 11636 ;; Tracked objects:
 11637 ;;		On entry : 0/0
 11638 ;;		On exit  : 0/0
 11639 ;;		Unchanged: 0/0
 11640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11645 ;;Total ram usage:        0 bytes
 11646 ;; Hardware stack levels used:    1
 11647 ;; This function calls:
 11648 ;;		Nothing
 11649 ;; This function is called by:
 11650 ;;		_SYSTEM_Initialize
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654                           
 11655                           ;psect for function _TMR2_Initialize
 11656  144A                     _TMR2_Initialize:	
 11657                           
 11658                           ;tmr.c: 5: T2CON = 0x00;
 11659                           
 11660                           ;incstack = 0
 11661                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11662  144A  0025               	movlb	5	; select bank5
 11663  144B  018E               	clrf	14	;volatile
 11664                           
 11665                           ;tmr.c: 7: T2CLKCON = 0x01;
 11666  144C  3001               	movlw	1
 11667  144D  0090               	movwf	16	;volatile
 11668                           
 11669                           ;tmr.c: 9: T2HLT = 0x00;
 11670  144E  018F               	clrf	15	;volatile
 11671                           
 11672                           ;tmr.c: 11: T2RST = 0x00;
 11673  144F  0191               	clrf	17	;volatile
 11674                           
 11675                           ;tmr.c: 13: T2PR = 0xFE;
 11676  1450  30FE               	movlw	254
 11677  1451  008D               	movwf	13	;volatile
 11678                           
 11679                           ;tmr.c: 18: T2TMR = 0x00;
 11680  1452  018C               	clrf	12	;volatile
 11681                           
 11682                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 11683  1453  002E               	movlb	14	; select bank14
 11684  1454  1090               	bcf	16,1	;volatile
 11685                           
 11686                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 11687  1455  0025               	movlb	5	; select bank5
 11688  1456  178E               	bsf	14,7	;volatile
 11689  1457  0008               	return
 11690  1458                     __end_of_TMR2_Initialize:	
 11691                           
 11692                           	psect	text23
 11693  1557                     __ptext23:	
 11694 ;; *************** function _PWM_Initialize *****************
 11695 ;; Defined at:
 11696 ;;		line 3 in file "pwm.c"
 11697 ;; Parameters:    Size  Location     Type
 11698 ;;		None
 11699 ;; Auto vars:     Size  Location     Type
 11700 ;;		None
 11701 ;; Return value:  Size  Location     Type
 11702 ;;                  1    wreg      void 
 11703 ;; Registers used:
 11704 ;;		wreg, status,2, status,0
 11705 ;; Tracked objects:
 11706 ;;		On entry : 0/0
 11707 ;;		On exit  : 0/0
 11708 ;;		Unchanged: 0/0
 11709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11714 ;;Total ram usage:        0 bytes
 11715 ;; Hardware stack levels used:    1
 11716 ;; This function calls:
 11717 ;;		Nothing
 11718 ;; This function is called by:
 11719 ;;		_SYSTEM_Initialize
 11720 ;; This function uses a non-reentrant model
 11721 ;;
 11722                           
 11723                           
 11724                           ;psect for function _PWM_Initialize
 11725  1557                     _PWM_Initialize:	
 11726                           
 11727                           ;pwm.c: 5: PWM6CON = 0x80;
 11728                           
 11729                           ;incstack = 0
 11730                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11731  1557  3080               	movlw	128
 11732  1558  0027               	movlb	7	; select bank7
 11733  1559  008E               	movwf	14	;volatile
 11734                           
 11735                           ;pwm.c: 7: PWM6DCH = 0x00;
 11736  155A  018D               	clrf	13	;volatile
 11737                           
 11738                           ;pwm.c: 9: PWM6DCL = 0x00;
 11739  155B  018C               	clrf	12	;volatile
 11740                           
 11741                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 11742  155C  0024               	movlb	4	; select bank4
 11743  155D  081F               	movf	31,w	;volatile
 11744  155E  39F3               	andlw	-13
 11745  155F  3804               	iorlw	4
 11746  1560  009F               	movwf	31	;volatile
 11747                           
 11748                           ;pwm.c: 14: PWM7CON = 0x80;
 11749  1561  3080               	movlw	128
 11750  1562  0027               	movlb	7	; select bank7
 11751  1563  0092               	movwf	18	;volatile
 11752                           
 11753                           ;pwm.c: 16: PWM7DCH = 0x00;
 11754  1564  0191               	clrf	17	;volatile
 11755                           
 11756                           ;pwm.c: 18: PWM7DCL = 0x00;
 11757  1565  0190               	clrf	16	;volatile
 11758                           
 11759                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 11760  1566  0024               	movlb	4	; select bank4
 11761  1567  081F               	movf	31,w	;volatile
 11762  1568  39CF               	andlw	-49
 11763  1569  3820               	iorlw	32
 11764  156A  009F               	movwf	31	;volatile
 11765                           
 11766                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 11767  156B  0026               	movlb	6	; select bank6
 11768  156C  178E               	bsf	14,7	;volatile
 11769                           
 11770                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 11771  156D  160E               	bsf	14,4	;volatile
 11772                           
 11773                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 11774  156E  300F               	movlw	15
 11775  156F  048E               	iorwf	14,f	;volatile
 11776                           
 11777                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 11778  1570  0024               	movlb	4	; select bank4
 11779  1571  081E               	movf	30,w	;volatile
 11780  1572  39FC               	andlw	-4
 11781  1573  3801               	iorlw	1
 11782  1574  009E               	movwf	30	;volatile
 11783  1575  0008               	return
 11784  1576                     __end_of_PWM_Initialize:	
 11785                           
 11786                           	psect	text24
 11787  1641                     __ptext24:	
 11788 ;; *************** function _PIN_MANAGER_Initialize *****************
 11789 ;; Defined at:
 11790 ;;		line 5 in file "pin_manager.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;		None
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;  state           1    0[COMMON] char 
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      void 
 11797 ;; Registers used:
 11798 ;;		wreg, status,2
 11799 ;; Tracked objects:
 11800 ;;		On entry : 0/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11808 ;;Total ram usage:        1 bytes
 11809 ;; Hardware stack levels used:    1
 11810 ;; This function calls:
 11811 ;;		Nothing
 11812 ;; This function is called by:
 11813 ;;		_SYSTEM_Initialize
 11814 ;; This function uses a non-reentrant model
 11815 ;;
 11816                           
 11817                           
 11818                           ;psect for function _PIN_MANAGER_Initialize
 11819  1641                     _PIN_MANAGER_Initialize:	
 11820                           
 11821                           ;pin_manager.c: 7: LATA = 0x20;
 11822                           
 11823                           ;incstack = 0
 11824                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11825  1641  3020               	movlw	32
 11826  1642  0020               	movlb	0	; select bank0
 11827  1643  0096               	movwf	22	;volatile
 11828                           
 11829                           ;pin_manager.c: 8: LATB = 0x00;
 11830  1644  0197               	clrf	23	;volatile
 11831                           
 11832                           ;pin_manager.c: 9: LATC = 0x00;
 11833  1645  0198               	clrf	24	;volatile
 11834                           
 11835                           ;pin_manager.c: 11: WPUA = 0x00;
 11836  1646  003E               	movlb	30	; select bank30
 11837  1647  01B9               	clrf	57	;volatile
 11838                           
 11839                           ;pin_manager.c: 12: WPUB = 0x00;
 11840  1648  01C4               	clrf	68	;volatile
 11841                           
 11842                           ;pin_manager.c: 13: WPUC = 0x00;
 11843  1649  01CF               	clrf	79	;volatile
 11844                           
 11845                           ;pin_manager.c: 14: WPUE = 0x8;
 11846  164A  3008               	movlw	8
 11847  164B  00E5               	movwf	101	;volatile
 11848                           
 11849                           ;pin_manager.c: 16: TRISA = 0x00;
 11850  164C  0020               	movlb	0	; select bank0
 11851  164D  0191               	clrf	17	;volatile
 11852                           
 11853                           ;pin_manager.c: 17: TRISB = 0x0E;
 11854  164E  300E               	movlw	14
 11855  164F  0092               	movwf	18	;volatile
 11856                           
 11857                           ;pin_manager.c: 18: TRISC = 0xFF;
 11858  1650  30FF               	movlw	255
 11859  1651  0093               	movwf	19	;volatile
 11860                           
 11861                           ;pin_manager.c: 20: ANSELA = 0x00;
 11862  1652  003E               	movlb	30	; select bank30
 11863  1653  01B8               	clrf	56	;volatile
 11864                           
 11865                           ;pin_manager.c: 21: ANSELB = 0x0A;
 11866  1654  300A               	movlw	10
 11867  1655  00C3               	movwf	67	;volatile
 11868                           
 11869                           ;pin_manager.c: 22: ANSELC = 0xFF;
 11870  1656  30FF               	movlw	255
 11871  1657  00CE               	movwf	78	;volatile
 11872                           
 11873                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 11874  1658  002E               	movlb	14	; select bank14
 11875  1659  1216               	bcf	22,4	;volatile
 11876                           
 11877                           ;pin_manager.c: 26: int8_t state = GIE;
 11878  165A  3000               	movlw	0
 11879  165B  1B8B               	btfsc	11,7	;volatile
 11880  165C  3001               	movlw	1
 11881  165D  00F0               	movwf	PIN_MANAGER_Initialize@state
 11882                           
 11883                           ;pin_manager.c: 27: GIE = 0;
 11884  165E  138B               	bcf	11,7	;volatile
 11885                           
 11886                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 11887  165F  3055               	movlw	85
 11888  1660  003D               	movlb	29	; select bank29
 11889  1661  008F               	movwf	15	;volsfr
 11890                           
 11891                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 11892  1662  30AA               	movlw	170
 11893  1663  008F               	movwf	15	;volsfr
 11894                           
 11895                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 11896  1664  100F               	bcf	15,0	;volsfr
 11897                           
 11898                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 11899  1665  300E               	movlw	14
 11900  1666  003E               	movlb	30	; select bank30
 11901  1667  0096               	movwf	22	;volatile
 11902                           
 11903                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 11904  1668  300F               	movlw	15
 11905  1669  0097               	movwf	23	;volatile
 11906                           
 11907                           ;pin_manager.c: 34: RB0PPS = 0x09;
 11908  166A  3009               	movlw	9
 11909  166B  0098               	movwf	24	;volatile
 11910                           
 11911                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 11912  166C  3055               	movlw	85
 11913  166D  003D               	movlb	29	; select bank29
 11914  166E  008F               	movwf	15	;volsfr
 11915                           
 11916                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 11917  166F  30AA               	movlw	170
 11918  1670  008F               	movwf	15	;volsfr
 11919                           
 11920                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 11921  1671  140F               	bsf	15,0	;volsfr
 11922                           
 11923                           ;pin_manager.c: 38: GIE = state;
 11924  1672  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 11925  1673  2E76               	goto	u2500
 11926  1674  178B               	bsf	11,7	;volatile
 11927  1675  0008               	return
 11928  1676                     u2500:	
 11929  1676  138B               	bcf	11,7	;volatile
 11930  1677  0008               	return
 11931  1678                     __end_of_PIN_MANAGER_Initialize:	
 11932                           
 11933                           	psect	text25
 11934  1429                     __ptext25:	
 11935 ;; *************** function _OSCILLATOR_Initialize *****************
 11936 ;; Defined at:
 11937 ;;		line 88 in file "system.c"
 11938 ;; Parameters:    Size  Location     Type
 11939 ;;		None
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;		None
 11942 ;; Return value:  Size  Location     Type
 11943 ;;                  1    wreg      void 
 11944 ;; Registers used:
 11945 ;;		wreg, status,2
 11946 ;; Tracked objects:
 11947 ;;		On entry : 0/0
 11948 ;;		On exit  : 0/0
 11949 ;;		Unchanged: 0/0
 11950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;Total ram usage:        0 bytes
 11956 ;; Hardware stack levels used:    1
 11957 ;; This function calls:
 11958 ;;		Nothing
 11959 ;; This function is called by:
 11960 ;;		_SYSTEM_Initialize
 11961 ;; This function uses a non-reentrant model
 11962 ;;
 11963                           
 11964                           
 11965                           ;psect for function _OSCILLATOR_Initialize
 11966  1429                     _OSCILLATOR_Initialize:	
 11967                           
 11968                           ;system.c: 90: OSCCON1 = 0x60;
 11969                           
 11970                           ;incstack = 0
 11971                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11972  1429  3060               	movlw	96
 11973  142A  0031               	movlb	17	; select bank17
 11974  142B  008D               	movwf	13	;volatile
 11975                           
 11976                           ;system.c: 91: OSCCON3 = 0x00;
 11977  142C  018F               	clrf	15	;volatile
 11978                           
 11979                           ;system.c: 92: OSCEN = 0x00;
 11980  142D  0191               	clrf	17	;volatile
 11981                           
 11982                           ;system.c: 93: OSCFRQ = 0x06;
 11983  142E  3006               	movlw	6
 11984  142F  0093               	movwf	19	;volatile
 11985                           
 11986                           ;system.c: 94: OSCTUNE = 0x00;
 11987  1430  0192               	clrf	18	;volatile
 11988  1431  0008               	return
 11989  1432                     __end_of_OSCILLATOR_Initialize:	
 11990                           
 11991                           	psect	text26
 11992  1678                     __ptext26:	
 11993 ;; *************** function _LCDInit *****************
 11994 ;; Defined at:
 11995 ;;		line 247 in file "lcd.c"
 11996 ;; Parameters:    Size  Location     Type
 11997 ;;		None
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;		None
 12000 ;; Return value:  Size  Location     Type
 12001 ;;                  1    wreg      void 
 12002 ;; Registers used:
 12003 ;;		wreg, status,2, status,0, pclath, cstack
 12004 ;; Tracked objects:
 12005 ;;		On entry : 0/0
 12006 ;;		On exit  : 0/0
 12007 ;;		Unchanged: 0/0
 12008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12013 ;;Total ram usage:        1 bytes
 12014 ;; Hardware stack levels used:    1
 12015 ;; Hardware stack levels required when called:    1
 12016 ;; This function calls:
 12017 ;;		_LCDWrite
 12018 ;; This function is called by:
 12019 ;;		_SYSTEM_Initialize
 12020 ;;		_main
 12021 ;; This function uses a non-reentrant model
 12022 ;;
 12023                           
 12024                           
 12025                           ;psect for function _LCDInit
 12026  1678                     _LCDInit:	
 12027                           
 12028                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12029                           
 12030                           ;incstack = 0
 12031                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12032  1678  0020               	movlb	0	; select bank0
 12033  1679  1011               	bcf	17,0	;volatile
 12034                           
 12035                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12036  167A  1091               	bcf	17,1	;volatile
 12037                           
 12038                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12039  167B  1111               	bcf	17,2	;volatile
 12040                           
 12041                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12042  167C  1191               	bcf	17,3	;volatile
 12043                           
 12044                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12045  167D  1211               	bcf	17,4	;volatile
 12046                           
 12047                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12048  167E  1196               	bcf	22,3	;volatile
 12049                           
 12050                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12051  167F  1216               	bcf	22,4	;volatile
 12052                           
 12053                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12054  1680  1116               	bcf	22,2	;volatile
 12055                           
 12056                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12057  1681  1016               	bcf	22,0	;volatile
 12058                           
 12059                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12060  1682  1416               	bsf	22,0	;volatile
 12061                           
 12062                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12063  1683  3021               	movlw	33
 12064  1684  00F5               	movwf	??_LCDInit
 12065  1685  0875               	movf	??_LCDInit,w
 12066  1686  00F0               	movwf	LCDWrite@data
 12067  1687  3000               	movlw	0
 12068  1688  3195  2596  3196   	fcall	_LCDWrite
 12069                           
 12070                           ;lcd.c: 268: LCDWrite(0, 0XB7);
 12071  168B  30B7               	movlw	183
 12072  168C  00F5               	movwf	??_LCDInit
 12073  168D  0875               	movf	??_LCDInit,w
 12074  168E  00F0               	movwf	LCDWrite@data
 12075  168F  3000               	movlw	0
 12076  1690  3195  2596  3196   	fcall	_LCDWrite
 12077                           
 12078                           ;lcd.c: 270: LCDWrite(0, 0x04);
 12079  1693  3004               	movlw	4
 12080  1694  00F5               	movwf	??_LCDInit
 12081  1695  0875               	movf	??_LCDInit,w
 12082  1696  00F0               	movwf	LCDWrite@data
 12083  1697  3000               	movlw	0
 12084  1698  3195  2596  3196   	fcall	_LCDWrite
 12085                           
 12086                           ;lcd.c: 272: LCDWrite(0, 0x14);
 12087  169B  3014               	movlw	20
 12088  169C  00F5               	movwf	??_LCDInit
 12089  169D  0875               	movf	??_LCDInit,w
 12090  169E  00F0               	movwf	LCDWrite@data
 12091  169F  3000               	movlw	0
 12092  16A0  3195  2596  3196   	fcall	_LCDWrite
 12093                           
 12094                           ;lcd.c: 274: LCDWrite(0, 0x20);
 12095  16A3  3020               	movlw	32
 12096  16A4  00F5               	movwf	??_LCDInit
 12097  16A5  0875               	movf	??_LCDInit,w
 12098  16A6  00F0               	movwf	LCDWrite@data
 12099  16A7  3000               	movlw	0
 12100  16A8  3195  2596  3196   	fcall	_LCDWrite
 12101                           
 12102                           ;lcd.c: 276: LCDWrite(0, 0x0C);
 12103  16AB  300C               	movlw	12
 12104  16AC  00F5               	movwf	??_LCDInit
 12105  16AD  0875               	movf	??_LCDInit,w
 12106  16AE  00F0               	movwf	LCDWrite@data
 12107  16AF  3000               	movlw	0
 12108  16B0  3195  2596         	fcall	_LCDWrite
 12109  16B2  0008               	return
 12110  16B3                     __end_of_LCDInit:	
 12111                           
 12112                           	psect	text27
 12113  15BB                     __ptext27:	
 12114 ;; *************** function _LCDClear *****************
 12115 ;; Defined at:
 12116 ;;		line 182 in file "lcd.c"
 12117 ;; Parameters:    Size  Location     Type
 12118 ;;		None
 12119 ;; Auto vars:     Size  Location     Type
 12120 ;;  index           2    9[COMMON] int 
 12121 ;; Return value:  Size  Location     Type
 12122 ;;                  1    wreg      void 
 12123 ;; Registers used:
 12124 ;;		wreg, status,2, status,0, pclath, cstack
 12125 ;; Tracked objects:
 12126 ;;		On entry : 0/0
 12127 ;;		On exit  : 0/0
 12128 ;;		Unchanged: 0/0
 12129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12134 ;;Total ram usage:        3 bytes
 12135 ;; Hardware stack levels used:    1
 12136 ;; Hardware stack levels required when called:    2
 12137 ;; This function calls:
 12138 ;;		_LCDWrite
 12139 ;;		_gotoXY
 12140 ;; This function is called by:
 12141 ;;		_SYSTEM_Initialize
 12142 ;;		_main
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           
 12147                           ;psect for function _LCDClear
 12148  15BB                     _LCDClear:	
 12149                           
 12150                           ;lcd.c: 184: int index;
 12151                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12152                           
 12153                           ;incstack = 0
 12154                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12155  15BB  01F9               	clrf	LCDClear@index
 12156  15BC  01FA               	clrf	LCDClear@index+1
 12157  15BD  087A               	movf	LCDClear@index+1,w
 12158  15BE  3A80               	xorlw	128
 12159  15BF  00F8               	movwf	??_LCDClear
 12160  15C0  3081               	movlw	129
 12161  15C1  0278               	subwf	??_LCDClear,w
 12162  15C2  1D03               	skipz
 12163  15C3  2DC6               	goto	u2485
 12164  15C4  30F8               	movlw	248
 12165  15C5  0279               	subwf	LCDClear@index,w
 12166  15C6                     u2485:	
 12167  15C6  1803               	btfsc	3,0
 12168  15C7  2DDC               	goto	l2455
 12169  15C8                     l2449:	
 12170                           
 12171                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12172  15C8  01F0               	clrf	LCDWrite@data
 12173  15C9  3001               	movlw	1
 12174  15CA  3195  2596  3195   	fcall	_LCDWrite
 12175  15CD  3001               	movlw	1
 12176  15CE  07F9               	addwf	LCDClear@index,f
 12177  15CF  3000               	movlw	0
 12178  15D0  3DFA               	addwfc	LCDClear@index+1,f
 12179  15D1  087A               	movf	LCDClear@index+1,w
 12180  15D2  3A80               	xorlw	128
 12181  15D3  00F8               	movwf	??_LCDClear
 12182  15D4  3081               	movlw	129
 12183  15D5  0278               	subwf	??_LCDClear,w
 12184  15D6  1D03               	skipz
 12185  15D7  2DDA               	goto	u2495
 12186  15D8  30F8               	movlw	248
 12187  15D9  0279               	subwf	LCDClear@index,w
 12188  15DA                     u2495:	
 12189  15DA  1C03               	skipc
 12190  15DB  2DC8               	goto	l2449
 12191  15DC                     l2455:	
 12192                           
 12193                           ;lcd.c: 187: gotoXY(0, 0);
 12194  15DC  01F5               	clrf	gotoXY@y
 12195  15DD  3000               	movlw	0
 12196  15DE  3194  2476         	fcall	_gotoXY
 12197  15E0  0008               	return
 12198  15E1                     __end_of_LCDClear:	
 12199                           
 12200                           	psect	text28
 12201  1476                     __ptext28:	
 12202 ;; *************** function _gotoXY *****************
 12203 ;; Defined at:
 12204 ;;		line 124 in file "lcd.c"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;  x               1    wreg     unsigned char 
 12207 ;;  y               1    5[COMMON] unsigned char 
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;  x               1    7[COMMON] unsigned char 
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  1    wreg      void 
 12212 ;; Registers used:
 12213 ;;		wreg, status,2, status,0, pclath, cstack
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12219 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;Total ram usage:        3 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    1
 12226 ;; This function calls:
 12227 ;;		_LCDWrite
 12228 ;; This function is called by:
 12229 ;;		_LCDClear
 12230 ;;		_main
 12231 ;;		_LCDBitmap
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           
 12236                           ;psect for function _gotoXY
 12237  1476                     _gotoXY:	
 12238                           
 12239                           ;incstack = 0
 12240                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 12241                           ;gotoXY@x stored from wreg
 12242  1476  00F7               	movwf	gotoXY@x
 12243                           
 12244                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 12245  1477  0877               	movf	gotoXY@x,w
 12246  1478  3880               	iorlw	128
 12247  1479  00F6               	movwf	??_gotoXY
 12248  147A  0876               	movf	??_gotoXY,w
 12249  147B  00F0               	movwf	LCDWrite@data
 12250  147C  3000               	movlw	0
 12251  147D  3195  2596  3194   	fcall	_LCDWrite
 12252                           
 12253                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 12254  1480  0875               	movf	gotoXY@y,w
 12255  1481  3840               	iorlw	64
 12256  1482  00F6               	movwf	??_gotoXY
 12257  1483  0876               	movf	??_gotoXY,w
 12258  1484  00F0               	movwf	LCDWrite@data
 12259  1485  3000               	movlw	0
 12260  1486  3195  2596         	fcall	_LCDWrite
 12261  1488  0008               	return
 12262  1489                     __end_of_gotoXY:	
 12263                           
 12264                           	psect	text29
 12265  14E0                     __ptext29:	
 12266 ;; *************** function _Init_Battery_State_Machine *****************
 12267 ;; Defined at:
 12268 ;;		line 23 in file "battery_charger.c"
 12269 ;; Parameters:    Size  Location     Type
 12270 ;;		None
 12271 ;; Auto vars:     Size  Location     Type
 12272 ;;		None
 12273 ;; Return value:  Size  Location     Type
 12274 ;;                  1    wreg      void 
 12275 ;; Registers used:
 12276 ;;		wreg
 12277 ;; Tracked objects:
 12278 ;;		On entry : 0/0
 12279 ;;		On exit  : 0/0
 12280 ;;		Unchanged: 0/0
 12281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12286 ;;Total ram usage:        1 bytes
 12287 ;; Hardware stack levels used:    1
 12288 ;; This function calls:
 12289 ;;		Nothing
 12290 ;; This function is called by:
 12291 ;;		_SYSTEM_Initialize
 12292 ;; This function uses a non-reentrant model
 12293 ;;
 12294                           
 12295                           
 12296                           ;psect for function _Init_Battery_State_Machine
 12297  14E0                     _Init_Battery_State_Machine:	
 12298                           
 12299                           ;battery_charger.c: 25: battery_state = PRECHARGE;
 12300                           
 12301                           ;incstack = 0
 12302                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 12303  14E0  3003               	movlw	3
 12304  14E1  00F0               	movwf	??_Init_Battery_State_Machine
 12305  14E2  0870               	movf	??_Init_Battery_State_Machine,w
 12306  14E3  0021               	movlb	1	; select bank1
 12307  14E4  00EC               	movwf	_battery_state^(0+128)
 12308                           
 12309                           ;battery_charger.c: 26: state_counter = 600;
 12310  14E5  3058               	movlw	88
 12311  14E6  00E8               	movwf	_state_counter^(0+128)
 12312  14E7  3002               	movlw	2
 12313  14E8  00E9               	movwf	(_state_counter^(0+128)+1)
 12314                           
 12315                           ;battery_charger.c: 28: { Iref = 10; };
 12316  14E9  300A               	movlw	10
 12317  14EA  00E6               	movwf	_Iref^(0+128)
 12318  14EB  3000               	movlw	0
 12319  14EC  00E7               	movwf	(_Iref^(0+128)+1)
 12320                           
 12321                           ;battery_charger.c: 29: { Vref = 1425; };
 12322  14ED  3091               	movlw	145
 12323  14EE  00E4               	movwf	_Vref^(0+128)
 12324  14EF  3005               	movlw	5
 12325  14F0  00E5               	movwf	(_Vref^(0+128)+1)
 12326                           
 12327                           ;battery_charger.c: 31: Imin = 20;
 12328  14F1  3014               	movlw	20
 12329  14F2  0022               	movlb	2	; select bank2
 12330  14F3  00E0               	movwf	_Imin^(0+256)
 12331  14F4  3000               	movlw	0
 12332  14F5  00E1               	movwf	(_Imin^(0+256)+1)
 12333                           
 12334                           ;battery_charger.c: 32: IminCount = 10;
 12335  14F6  300A               	movlw	10
 12336  14F7  0021               	movlb	1	; select bank1
 12337  14F8  00EA               	movwf	_IminCount^(0+128)
 12338  14F9  3000               	movlw	0
 12339  14FA  00EB               	movwf	(_IminCount^(0+128)+1)
 12340  14FB  0008               	return
 12341  14FC                     __end_of_Init_Battery_State_Machine:	
 12342                           
 12343                           	psect	text30
 12344  1538                     __ptext30:	
 12345 ;; *************** function _ADC_Initialize *****************
 12346 ;; Defined at:
 12347 ;;		line 83 in file "adc.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;		None
 12350 ;; Auto vars:     Size  Location     Type
 12351 ;;		None
 12352 ;; Return value:  Size  Location     Type
 12353 ;;                  1    wreg      void 
 12354 ;; Registers used:
 12355 ;;		wreg, status,2
 12356 ;; Tracked objects:
 12357 ;;		On entry : 0/0
 12358 ;;		On exit  : 0/0
 12359 ;;		Unchanged: 0/0
 12360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;Total ram usage:        0 bytes
 12366 ;; Hardware stack levels used:    1
 12367 ;; This function calls:
 12368 ;;		Nothing
 12369 ;; This function is called by:
 12370 ;;		_SYSTEM_Initialize
 12371 ;; This function uses a non-reentrant model
 12372 ;;
 12373                           
 12374                           
 12375                           ;psect for function _ADC_Initialize
 12376  1538                     _ADC_Initialize:	
 12377                           
 12378                           ;adc.c: 85: ADCON1 = 0x00;
 12379                           
 12380                           ;incstack = 0
 12381                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12382  1538  0021               	movlb	1	; select bank1
 12383  1539  0194               	clrf	20	;volatile
 12384                           
 12385                           ;adc.c: 87: ADCON2 = 0x00;
 12386  153A  0195               	clrf	21	;volatile
 12387                           
 12388                           ;adc.c: 89: ADCON3 = 0x00;
 12389  153B  0196               	clrf	22	;volatile
 12390                           
 12391                           ;adc.c: 91: ADACT = 0x00;
 12392  153C  0199               	clrf	25	;volatile
 12393                           
 12394                           ;adc.c: 93: ADSTAT = 0x00;
 12395  153D  0197               	clrf	23	;volatile
 12396                           
 12397                           ;adc.c: 95: FVRCON = 0b11000011;
 12398  153E  30C3               	movlw	195
 12399  153F  0032               	movlb	18	; select bank18
 12400  1540  008C               	movwf	12	;volatile
 12401                           
 12402                           ;adc.c: 96: ADCLK = 0x3F;
 12403  1541  303F               	movlw	63
 12404  1542  0021               	movlb	1	; select bank1
 12405  1543  0098               	movwf	24	;volatile
 12406                           
 12407                           ;adc.c: 103: ADREF = 0x03;
 12408  1544  3003               	movlw	3
 12409  1545  009A               	movwf	26	;volatile
 12410                           
 12411                           ;adc.c: 106: ADCAP = 0x00;
 12412  1546  019B               	clrf	27	;volatile
 12413                           
 12414                           ;adc.c: 109: ADPRE = 0x07;
 12415  1547  3007               	movlw	7
 12416  1548  009C               	movwf	28	;volatile
 12417                           
 12418                           ;adc.c: 111: ADACQ = 0x00;
 12419  1549  019D               	clrf	29	;volatile
 12420                           
 12421                           ;adc.c: 113: ADPCH = 0x00;
 12422  154A  019E               	clrf	30	;volatile
 12423                           
 12424                           ;adc.c: 115: ADRPT = 0x00;
 12425  154B  0022               	movlb	2	; select bank2
 12426  154C  018D               	clrf	13	;volatile
 12427                           
 12428                           ;adc.c: 117: ADLTHL = 0x00;
 12429  154D  018E               	clrf	14	;volatile
 12430                           
 12431                           ;adc.c: 119: ADLTHH = 0x00;
 12432  154E  018F               	clrf	15	;volatile
 12433                           
 12434                           ;adc.c: 121: ADUTHL = 0x00;
 12435  154F  0190               	clrf	16	;volatile
 12436                           
 12437                           ;adc.c: 123: ADUTHH = 0x00;
 12438  1550  0191               	clrf	17	;volatile
 12439                           
 12440                           ;adc.c: 125: ADSTPTL = 0x00;
 12441  1551  0192               	clrf	18	;volatile
 12442                           
 12443                           ;adc.c: 127: ADSTPTH = 0x00;
 12444  1552  0193               	clrf	19	;volatile
 12445                           
 12446                           ;adc.c: 129: ADCON0 = 0x84;
 12447  1553  3084               	movlw	132
 12448  1554  0021               	movlb	1	; select bank1
 12449  1555  0093               	movwf	19	;volatile
 12450  1556  0008               	return
 12451  1557                     __end_of_ADC_Initialize:	
 12452                           
 12453                           	psect	text31
 12454  14CA                     __ptext31:	
 12455 ;; *************** function _PWM7_LoadDutyValue *****************
 12456 ;; Defined at:
 12457 ;;		line 37 in file "pwm.c"
 12458 ;; Parameters:    Size  Location     Type
 12459 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12460 ;; Auto vars:     Size  Location     Type
 12461 ;;		None
 12462 ;; Return value:  Size  Location     Type
 12463 ;;                  1    wreg      void 
 12464 ;; Registers used:
 12465 ;;		wreg, status,2, status,0
 12466 ;; Tracked objects:
 12467 ;;		On entry : 0/0
 12468 ;;		On exit  : 0/0
 12469 ;;		Unchanged: 0/0
 12470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12475 ;;Total ram usage:        4 bytes
 12476 ;; Hardware stack levels used:    1
 12477 ;; This function calls:
 12478 ;;		Nothing
 12479 ;; This function is called by:
 12480 ;;		_main
 12481 ;; This function uses a non-reentrant model
 12482 ;;
 12483                           
 12484                           
 12485                           ;psect for function _PWM7_LoadDutyValue
 12486  14CA                     _PWM7_LoadDutyValue:	
 12487                           
 12488                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12489                           
 12490                           ;incstack = 0
 12491                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12492  14CA  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12493  14CB  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12494  14CC  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12495  14CD  00F2               	movwf	??_PWM7_LoadDutyValue
 12496  14CE  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12497  14CF  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12498  14D0  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12499  14D1  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12500  14D2  0872               	movf	??_PWM7_LoadDutyValue,w
 12501  14D3  0027               	movlb	7	; select bank7
 12502  14D4  0091               	movwf	17	;volatile
 12503                           
 12504                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12505  14D5  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12506  14D6  3903               	andlw	3
 12507  14D7  00F2               	movwf	??_PWM7_LoadDutyValue
 12508  14D8  3005               	movlw	5
 12509  14D9                     u3315:	
 12510  14D9  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12511  14DA  3EFF               	addlw	-1
 12512  14DB  1D03               	skipz
 12513  14DC  2CD9               	goto	u3315
 12514  14DD  3572               	lslf	??_PWM7_LoadDutyValue,w
 12515  14DE  0090               	movwf	16	;volatile
 12516  14DF  0008               	return
 12517  14E0                     __end_of_PWM7_LoadDutyValue:	
 12518                           
 12519                           	psect	text32
 12520  14B4                     __ptext32:	
 12521 ;; *************** function _PWM6_LoadDutyValue *****************
 12522 ;; Defined at:
 12523 ;;		line 30 in file "pwm.c"
 12524 ;; Parameters:    Size  Location     Type
 12525 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12526 ;; Auto vars:     Size  Location     Type
 12527 ;;		None
 12528 ;; Return value:  Size  Location     Type
 12529 ;;                  1    wreg      void 
 12530 ;; Registers used:
 12531 ;;		wreg, status,2, status,0
 12532 ;; Tracked objects:
 12533 ;;		On entry : 0/0
 12534 ;;		On exit  : 0/0
 12535 ;;		Unchanged: 0/0
 12536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12540 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;Total ram usage:        4 bytes
 12542 ;; Hardware stack levels used:    1
 12543 ;; This function calls:
 12544 ;;		Nothing
 12545 ;; This function is called by:
 12546 ;;		_main
 12547 ;; This function uses a non-reentrant model
 12548 ;;
 12549                           
 12550                           
 12551                           ;psect for function _PWM6_LoadDutyValue
 12552  14B4                     _PWM6_LoadDutyValue:	
 12553                           
 12554                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12555                           
 12556                           ;incstack = 0
 12557                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12558  14B4  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12559  14B5  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12560  14B6  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12561  14B7  00F2               	movwf	??_PWM6_LoadDutyValue
 12562  14B8  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12563  14B9  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12564  14BA  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12565  14BB  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12566  14BC  0872               	movf	??_PWM6_LoadDutyValue,w
 12567  14BD  0027               	movlb	7	; select bank7
 12568  14BE  008D               	movwf	13	;volatile
 12569                           
 12570                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12571  14BF  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12572  14C0  3903               	andlw	3
 12573  14C1  00F2               	movwf	??_PWM6_LoadDutyValue
 12574  14C2  3005               	movlw	5
 12575  14C3                     u3305:	
 12576  14C3  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12577  14C4  3EFF               	addlw	-1
 12578  14C5  1D03               	skipz
 12579  14C6  2CC3               	goto	u3305
 12580  14C7  3572               	lslf	??_PWM6_LoadDutyValue,w
 12581  14C8  008C               	movwf	12	;volatile
 12582  14C9  0008               	return
 12583  14CA                     __end_of_PWM6_LoadDutyValue:	
 12584                           
 12585                           	psect	text33
 12586  149E                     __ptext33:	
 12587 ;; *************** function _PWM1_LoadDutyValue *****************
 12588 ;; Defined at:
 12589 ;;		line 44 in file "pwm.c"
 12590 ;; Parameters:    Size  Location     Type
 12591 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;		None
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  1    wreg      void 
 12596 ;; Registers used:
 12597 ;;		wreg, status,2, status,0
 12598 ;; Tracked objects:
 12599 ;;		On entry : 0/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12606 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12607 ;;Total ram usage:        4 bytes
 12608 ;; Hardware stack levels used:    1
 12609 ;; This function calls:
 12610 ;;		Nothing
 12611 ;; This function is called by:
 12612 ;;		_main
 12613 ;; This function uses a non-reentrant model
 12614 ;;
 12615                           
 12616                           
 12617                           ;psect for function _PWM1_LoadDutyValue
 12618  149E                     _PWM1_LoadDutyValue:	
 12619                           
 12620                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 12621                           
 12622                           ;incstack = 0
 12623                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 12624  149E  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 12625  149F  00F3               	movwf	??_PWM1_LoadDutyValue+1
 12626  14A0  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12627  14A1  00F2               	movwf	??_PWM1_LoadDutyValue
 12628  14A2  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12629  14A3  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12630  14A4  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12631  14A5  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12632  14A6  0872               	movf	??_PWM1_LoadDutyValue,w
 12633  14A7  0026               	movlb	6	; select bank6
 12634  14A8  008D               	movwf	13	;volatile
 12635                           
 12636                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 12637  14A9  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12638  14AA  3903               	andlw	3
 12639  14AB  00F2               	movwf	??_PWM1_LoadDutyValue
 12640  14AC  3005               	movlw	5
 12641  14AD                     u3325:	
 12642  14AD  35F2               	lslf	??_PWM1_LoadDutyValue,f
 12643  14AE  3EFF               	addlw	-1
 12644  14AF  1D03               	skipz
 12645  14B0  2CAD               	goto	u3325
 12646  14B1  3572               	lslf	??_PWM1_LoadDutyValue,w
 12647  14B2  008C               	movwf	12	;volatile
 12648  14B3  0008               	return
 12649  14B4                     __end_of_PWM1_LoadDutyValue:	
 12650                           
 12651                           	psect	text34
 12652  0E51                     __ptext34:	
 12653 ;; *************** function _LCDWriteInt *****************
 12654 ;; Defined at:
 12655 ;;		line 190 in file "lcd.c"
 12656 ;; Parameters:    Size  Location     Type
 12657 ;;  value           2    8[BANK0 ] int 
 12658 ;;  fieldLength     1   10[BANK0 ] char 
 12659 ;;  numPlaces       1   11[BANK0 ] unsigned char 
 12660 ;;  sign            1   12[BANK0 ] unsigned char 
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;  str             5   17[BANK0 ] unsigned char [5]
 12663 ;;  i               1   23[BANK0 ] unsigned char 
 12664 ;;  j               1   22[BANK0 ] unsigned char 
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  1    wreg      void 
 12667 ;; Registers used:
 12668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12669 ;; Tracked objects:
 12670 ;;		On entry : 0/0
 12671 ;;		On exit  : 0/0
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12674 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12675 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12676 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12677 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;Total ram usage:       16 bytes
 12679 ;; Hardware stack levels used:    1
 12680 ;; Hardware stack levels required when called:    2
 12681 ;; This function calls:
 12682 ;;		_LCDWriteCharacter
 12683 ;;		___awdiv
 12684 ;;		___lwmod
 12685 ;; This function is called by:
 12686 ;;		_main
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690                           
 12691                           ;psect for function _LCDWriteInt
 12692  0E51                     _LCDWriteInt:	
 12693                           
 12694                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 12695                           
 12696                           ;incstack = 0
 12697                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12698  0E51  30D4               	movlw	low LCDWriteInt@F14396
 12699  0E52  0086               	movwf	6
 12700  0E53  3000               	movlw	high LCDWriteInt@F14396
 12701  0E54  0087               	movwf	7
 12702  0E55  3031               	movlw	low LCDWriteInt@str
 12703  0E56  0084               	movwf	4
 12704  0E57  3000               	movlw	high LCDWriteInt@str
 12705  0E58  0085               	movwf	5
 12706  0E59  3005               	movlw	5
 12707  0E5A  0020               	movlb	0	; select bank0
 12708  0E5B  00AD               	movwf	??_LCDWriteInt
 12709  0E5C                     u3210:	
 12710  0E5C  0016               	moviw fsr1++
 12711  0E5D  001A               	movwi fsr0++
 12712  0E5E  0BAD               	decfsz	??_LCDWriteInt,f
 12713  0E5F  2E5C               	goto	u3210
 12714                           
 12715                           ;lcd.c: 193: uint8_t i=4,j=0;
 12716  0E60  3004               	movlw	4
 12717  0E61  00AD               	movwf	??_LCDWriteInt
 12718  0E62  082D               	movf	??_LCDWriteInt,w
 12719  0E63  00B7               	movwf	LCDWriteInt@i
 12720  0E64  01B6               	clrf	LCDWriteInt@j
 12721                           
 12722                           ;lcd.c: 195: if(value<0)
 12723  0E65  1FA9               	btfss	LCDWriteInt@value+1,7
 12724  0E66  2E72               	goto	l2851
 12725                           
 12726                           ;lcd.c: 196: {
 12727                           ;lcd.c: 197: LCDWriteCharacter('-');
 12728  0E67  302D               	movlw	45
 12729  0E68  3189  2136  318E   	fcall	_LCDWriteCharacter
 12730                           
 12731                           ;lcd.c: 198: value=value*-1;
 12732  0E6B  0020               	movlb	0	; select bank0
 12733  0E6C  09A8               	comf	LCDWriteInt@value,f
 12734  0E6D  09A9               	comf	LCDWriteInt@value+1,f
 12735  0E6E  0AA8               	incf	LCDWriteInt@value,f
 12736  0E6F  1903               	skipnz
 12737  0E70  0AA9               	incf	LCDWriteInt@value+1,f
 12738                           
 12739                           ;lcd.c: 199: }
 12740  0E71  2E79               	goto	l2861
 12741  0E72                     l2851:	
 12742                           
 12743                           ;lcd.c: 201: else
 12744                           ;lcd.c: 202: {
 12745                           ;lcd.c: 203: if(sign == 1)
 12746  0E72  032C               	decf	LCDWriteInt@sign,w
 12747  0E73  1D03               	btfss	3,2
 12748  0E74  2E79               	goto	l2861
 12749                           
 12750                           ;lcd.c: 204: {
 12751                           ;lcd.c: 205: LCDWriteCharacter('+');
 12752  0E75  302B               	movlw	43
 12753  0E76  3189  2136  318E   	fcall	_LCDWriteCharacter
 12754  0E79                     l2861:	
 12755                           ;lcd.c: 206: }
 12756                           ;lcd.c: 207: }
 12757                           ;lcd.c: 209: while(value)
 12758                           
 12759  0E79  0020               	movlb	0	; select bank0
 12760  0E7A  0828               	movf	LCDWriteInt@value,w
 12761  0E7B  0429               	iorwf	LCDWriteInt@value+1,w
 12762  0E7C  1903               	btfsc	3,2
 12763  0E7D  2EA6               	goto	l2863
 12764                           
 12765                           ;lcd.c: 210: {
 12766                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 12767  0E7E  300A               	movlw	10
 12768  0E7F  00F0               	movwf	___lwmod@divisor
 12769  0E80  3000               	movlw	0
 12770  0E81  00F1               	movwf	___lwmod@divisor+1
 12771  0E82  0020               	movlb	0	; select bank0
 12772  0E83  0829               	movf	LCDWriteInt@value+1,w
 12773  0E84  00F3               	movwf	___lwmod@dividend+1
 12774  0E85  0828               	movf	LCDWriteInt@value,w
 12775  0E86  00F2               	movwf	___lwmod@dividend
 12776  0E87  3195  25E1  318E   	fcall	___lwmod
 12777  0E8A  0870               	movf	?___lwmod,w
 12778  0E8B  0020               	movlb	0	; select bank0
 12779  0E8C  00AD               	movwf	??_LCDWriteInt
 12780  0E8D  0837               	movf	LCDWriteInt@i,w
 12781  0E8E  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12782  0E8F  0086               	movwf	6
 12783  0E90  0187               	clrf	7
 12784  0E91  082D               	movf	??_LCDWriteInt,w
 12785  0E92  0081               	movwf	1
 12786                           
 12787                           ;lcd.c: 212: value=value/10;
 12788  0E93  300A               	movlw	10
 12789  0E94  00F0               	movwf	___awdiv@divisor
 12790  0E95  3000               	movlw	0
 12791  0E96  00F1               	movwf	___awdiv@divisor+1
 12792  0E97  0829               	movf	LCDWriteInt@value+1,w
 12793  0E98  00F3               	movwf	___awdiv@dividend+1
 12794  0E99  0828               	movf	LCDWriteInt@value,w
 12795  0E9A  00F2               	movwf	___awdiv@dividend
 12796  0E9B  3197  27AF  318E   	fcall	___awdiv
 12797  0E9E  0871               	movf	?___awdiv+1,w
 12798  0E9F  0020               	movlb	0	; select bank0
 12799  0EA0  00A9               	movwf	LCDWriteInt@value+1
 12800  0EA1  0870               	movf	?___awdiv,w
 12801  0EA2  00A8               	movwf	LCDWriteInt@value
 12802                           
 12803                           ;lcd.c: 213: i--;
 12804  0EA3  3001               	movlw	1
 12805  0EA4  02B7               	subwf	LCDWriteInt@i,f
 12806  0EA5  2E79               	goto	l2861
 12807  0EA6                     l2863:	
 12808                           
 12809                           ;lcd.c: 214: }
 12810                           ;lcd.c: 215: if(fieldLength==-1)
 12811  0EA6  0A2A               	incf	LCDWriteInt@fieldLength,w
 12812  0EA7  1903               	btfsc	3,2
 12813  0EA8  2EAE               	goto	l2869
 12814  0EA9  2EB6               	goto	l2871
 12815  0EAA                     l2867:	
 12816                           ;lcd.c: 216: {
 12817                           ;lcd.c: 217: while(str[j]==0)
 12818                           
 12819                           
 12820                           ;lcd.c: 218: {
 12821                           ;lcd.c: 219: j++;
 12822  0EAA  3001               	movlw	1
 12823  0EAB  00AD               	movwf	??_LCDWriteInt
 12824  0EAC  082D               	movf	??_LCDWriteInt,w
 12825  0EAD  07B6               	addwf	LCDWriteInt@j,f
 12826  0EAE                     l2869:	
 12827  0EAE  0836               	movf	LCDWriteInt@j,w
 12828  0EAF  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12829  0EB0  0086               	movwf	6
 12830  0EB1  0187               	clrf	7
 12831  0EB2  0801               	movf	1,w
 12832  0EB3  1D03               	btfss	3,2
 12833  0EB4  2EBC               	goto	l2873
 12834  0EB5  2EAA               	goto	l2867
 12835  0EB6                     l2871:	
 12836                           ;lcd.c: 220: }
 12837                           ;lcd.c: 221: }
 12838                           
 12839                           
 12840                           ;lcd.c: 222: else
 12841                           ;lcd.c: 223: {
 12842                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 12843  0EB6  032A               	decf	LCDWriteInt@fieldLength,w
 12844  0EB7  3AFF               	xorlw	255
 12845  0EB8  3E05               	addlw	5
 12846  0EB9  00AD               	movwf	??_LCDWriteInt
 12847  0EBA  082D               	movf	??_LCDWriteInt,w
 12848  0EBB  00B6               	movwf	LCDWriteInt@j
 12849  0EBC                     l2873:	
 12850                           
 12851                           ;lcd.c: 225: }
 12852                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 12853  0EBC  0836               	movf	LCDWriteInt@j,w
 12854  0EBD  00AD               	movwf	??_LCDWriteInt
 12855  0EBE  082D               	movf	??_LCDWriteInt,w
 12856  0EBF  00B7               	movwf	LCDWriteInt@i
 12857  0EC0                     l2879:	
 12858  0EC0  082B               	movf	LCDWriteInt@numPlaces,w
 12859  0EC1  00AD               	movwf	??_LCDWriteInt
 12860  0EC2  01AE               	clrf	??_LCDWriteInt+1
 12861  0EC3  09AD               	comf	??_LCDWriteInt,f
 12862  0EC4  09AE               	comf	??_LCDWriteInt+1,f
 12863  0EC5  0AAD               	incf	??_LCDWriteInt,f
 12864  0EC6  1903               	skipnz
 12865  0EC7  0AAE               	incf	??_LCDWriteInt+1,f
 12866  0EC8  082D               	movf	??_LCDWriteInt,w
 12867  0EC9  3E05               	addlw	5
 12868  0ECA  00AF               	movwf	??_LCDWriteInt+2
 12869  0ECB  3000               	movlw	0
 12870  0ECC  3D2E               	addwfc	??_LCDWriteInt+1,w
 12871  0ECD  00B0               	movwf	??_LCDWriteInt+3
 12872  0ECE  0830               	movf	??_LCDWriteInt+3,w
 12873  0ECF  3A80               	xorlw	128
 12874  0ED0  3C80               	sublw	128
 12875  0ED1  1D03               	skipz
 12876  0ED2  2ED5               	goto	u3275
 12877  0ED3  082F               	movf	??_LCDWriteInt+2,w
 12878  0ED4  0237               	subwf	LCDWriteInt@i,w
 12879  0ED5                     u3275:	
 12880  0ED5  1803               	btfsc	3,0
 12881  0ED6  2EE7               	goto	l2881
 12882                           
 12883                           ;lcd.c: 228: {
 12884                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 12885  0ED7  0020               	movlb	0	; select bank0
 12886  0ED8  0837               	movf	LCDWriteInt@i,w
 12887  0ED9  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12888  0EDA  0086               	movwf	6
 12889  0EDB  0187               	clrf	7
 12890  0EDC  0801               	movf	1,w
 12891  0EDD  3E30               	addlw	48
 12892  0EDE  3189  2136  318E   	fcall	_LCDWriteCharacter
 12893  0EE1  3001               	movlw	1
 12894  0EE2  0020               	movlb	0	; select bank0
 12895  0EE3  00AD               	movwf	??_LCDWriteInt
 12896  0EE4  082D               	movf	??_LCDWriteInt,w
 12897  0EE5  07B7               	addwf	LCDWriteInt@i,f
 12898  0EE6  2EC0               	goto	l2879
 12899  0EE7                     l2881:	
 12900                           
 12901                           ;lcd.c: 230: }
 12902                           ;lcd.c: 232: if(numPlaces == 1)
 12903  0EE7  0020               	movlb	0	; select bank0
 12904  0EE8  032B               	decf	LCDWriteInt@numPlaces,w
 12905  0EE9  1D03               	btfss	3,2
 12906  0EEA  2EF5               	goto	l2885
 12907                           
 12908                           ;lcd.c: 233: {
 12909                           ;lcd.c: 234: LCDWriteCharacter(46);
 12910  0EEB  302E               	movlw	46
 12911  0EEC  3189  2136  318E   	fcall	_LCDWriteCharacter
 12912                           
 12913                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 12914  0EEF  0020               	movlb	0	; select bank0
 12915  0EF0  0835               	movf	LCDWriteInt@str+4,w
 12916  0EF1  3E30               	addlw	48
 12917  0EF2  3189  2136  318E   	fcall	_LCDWriteCharacter
 12918  0EF5                     l2885:	
 12919                           
 12920                           ;lcd.c: 236: }
 12921                           ;lcd.c: 238: if(numPlaces == 2)
 12922  0EF5  3002               	movlw	2
 12923  0EF6  0020               	movlb	0	; select bank0
 12924  0EF7  062B               	xorwf	LCDWriteInt@numPlaces,w
 12925  0EF8  1D03               	btfss	3,2
 12926  0EF9  0008               	return
 12927                           
 12928                           ;lcd.c: 239: {
 12929                           ;lcd.c: 240: LCDWriteCharacter(46);
 12930  0EFA  302E               	movlw	46
 12931  0EFB  3189  2136  318E   	fcall	_LCDWriteCharacter
 12932                           
 12933                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 12934  0EFE  0020               	movlb	0	; select bank0
 12935  0EFF  0834               	movf	LCDWriteInt@str+3,w
 12936  0F00  3E30               	addlw	48
 12937  0F01  3189  2136  318E   	fcall	_LCDWriteCharacter
 12938                           
 12939                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 12940  0F04  0020               	movlb	0	; select bank0
 12941  0F05  0835               	movf	LCDWriteInt@str+4,w
 12942  0F06  3E30               	addlw	48
 12943  0F07  3189  2136         	fcall	_LCDWriteCharacter
 12944  0F09  0008               	return
 12945  0F0A                     __end_of_LCDWriteInt:	
 12946                           
 12947                           	psect	text35
 12948  15E1                     __ptext35:	
 12949 ;; *************** function ___lwmod *****************
 12950 ;; Defined at:
 12951 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 12952 ;; Parameters:    Size  Location     Type
 12953 ;;  divisor         2    0[COMMON] unsigned int 
 12954 ;;  dividend        2    2[COMMON] unsigned int 
 12955 ;; Auto vars:     Size  Location     Type
 12956 ;;  counter         1    5[COMMON] unsigned char 
 12957 ;; Return value:  Size  Location     Type
 12958 ;;                  2    0[COMMON] unsigned int 
 12959 ;; Registers used:
 12960 ;;		wreg, status,2, status,0
 12961 ;; Tracked objects:
 12962 ;;		On entry : 0/0
 12963 ;;		On exit  : 0/0
 12964 ;;		Unchanged: 0/0
 12965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12969 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12970 ;;Total ram usage:        6 bytes
 12971 ;; Hardware stack levels used:    1
 12972 ;; This function calls:
 12973 ;;		Nothing
 12974 ;; This function is called by:
 12975 ;;		_LCDWriteInt
 12976 ;; This function uses a non-reentrant model
 12977 ;;
 12978                           
 12979                           
 12980                           ;psect for function ___lwmod
 12981  15E1                     ___lwmod:	
 12982                           
 12983                           ;incstack = 0
 12984                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12985  15E1  0870               	movf	___lwmod@divisor,w
 12986  15E2  0471               	iorwf	___lwmod@divisor+1,w
 12987  15E3  1903               	btfsc	3,2
 12988  15E4  2E08               	goto	l2765
 12989  15E5  01F5               	clrf	___lwmod@counter
 12990  15E6  0AF5               	incf	___lwmod@counter,f
 12991  15E7                     l2755:	
 12992  15E7  1BF1               	btfsc	___lwmod@divisor+1,7
 12993  15E8  2DF3               	goto	l2757
 12994  15E9  3001               	movlw	1
 12995  15EA                     u2945:	
 12996  15EA  35F0               	lslf	___lwmod@divisor,f
 12997  15EB  0DF1               	rlf	___lwmod@divisor+1,f
 12998  15EC  0B89               	decfsz	9,f
 12999  15ED  2DEA               	goto	u2945
 13000  15EE  3001               	movlw	1
 13001  15EF  00F4               	movwf	??___lwmod
 13002  15F0  0874               	movf	??___lwmod,w
 13003  15F1  07F5               	addwf	___lwmod@counter,f
 13004  15F2  2DE7               	goto	l2755
 13005  15F3                     l2757:	
 13006  15F3  0871               	movf	___lwmod@divisor+1,w
 13007  15F4  0273               	subwf	___lwmod@dividend+1,w
 13008  15F5  1D03               	skipz
 13009  15F6  2DF9               	goto	u2965
 13010  15F7  0870               	movf	___lwmod@divisor,w
 13011  15F8  0272               	subwf	___lwmod@dividend,w
 13012  15F9                     u2965:	
 13013  15F9  1C03               	skipc
 13014  15FA  2DFF               	goto	l2761
 13015  15FB  0870               	movf	___lwmod@divisor,w
 13016  15FC  02F2               	subwf	___lwmod@dividend,f
 13017  15FD  0871               	movf	___lwmod@divisor+1,w
 13018  15FE  3BF3               	subwfb	___lwmod@dividend+1,f
 13019  15FF                     l2761:	
 13020  15FF  3001               	movlw	1
 13021  1600                     u2975:	
 13022  1600  36F1               	lsrf	___lwmod@divisor+1,f
 13023  1601  0CF0               	rrf	___lwmod@divisor,f
 13024  1602  0B89               	decfsz	9,f
 13025  1603  2E00               	goto	u2975
 13026  1604  3001               	movlw	1
 13027  1605  02F5               	subwf	___lwmod@counter,f
 13028  1606  1D03               	btfss	3,2
 13029  1607  2DF3               	goto	l2757
 13030  1608                     l2765:	
 13031  1608  0873               	movf	___lwmod@dividend+1,w
 13032  1609  00F1               	movwf	?___lwmod+1
 13033  160A  0872               	movf	___lwmod@dividend,w
 13034  160B  00F0               	movwf	?___lwmod
 13035  160C  0008               	return
 13036  160D                     __end_of___lwmod:	
 13037                           
 13038                           	psect	text36
 13039  17AF                     __ptext36:	
 13040 ;; *************** function ___awdiv *****************
 13041 ;; Defined at:
 13042 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13043 ;; Parameters:    Size  Location     Type
 13044 ;;  divisor         2    0[COMMON] int 
 13045 ;;  dividend        2    2[COMMON] int 
 13046 ;; Auto vars:     Size  Location     Type
 13047 ;;  quotient        2    7[COMMON] int 
 13048 ;;  sign            1    6[COMMON] unsigned char 
 13049 ;;  counter         1    5[COMMON] unsigned char 
 13050 ;; Return value:  Size  Location     Type
 13051 ;;                  2    0[COMMON] int 
 13052 ;; Registers used:
 13053 ;;		wreg, status,2, status,0
 13054 ;; Tracked objects:
 13055 ;;		On entry : 0/0
 13056 ;;		On exit  : 0/0
 13057 ;;		Unchanged: 0/0
 13058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13060 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13061 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13062 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13063 ;;Total ram usage:        9 bytes
 13064 ;; Hardware stack levels used:    1
 13065 ;; This function calls:
 13066 ;;		Nothing
 13067 ;; This function is called by:
 13068 ;;		_LCDWriteInt
 13069 ;;		_main
 13070 ;; This function uses a non-reentrant model
 13071 ;;
 13072                           
 13073                           
 13074                           ;psect for function ___awdiv
 13075  17AF                     ___awdiv:	
 13076                           
 13077                           ;incstack = 0
 13078                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13079  17AF  01F6               	clrf	___awdiv@sign
 13080  17B0  1FF1               	btfss	___awdiv@divisor+1,7
 13081  17B1  2FB9               	goto	l2619
 13082  17B2  09F0               	comf	___awdiv@divisor,f
 13083  17B3  09F1               	comf	___awdiv@divisor+1,f
 13084  17B4  0AF0               	incf	___awdiv@divisor,f
 13085  17B5  1903               	skipnz
 13086  17B6  0AF1               	incf	___awdiv@divisor+1,f
 13087  17B7  01F6               	clrf	___awdiv@sign
 13088  17B8  0AF6               	incf	___awdiv@sign,f
 13089  17B9                     l2619:	
 13090  17B9  1FF3               	btfss	___awdiv@dividend+1,7
 13091  17BA  2FC4               	goto	l2625
 13092  17BB  09F2               	comf	___awdiv@dividend,f
 13093  17BC  09F3               	comf	___awdiv@dividend+1,f
 13094  17BD  0AF2               	incf	___awdiv@dividend,f
 13095  17BE  1903               	skipnz
 13096  17BF  0AF3               	incf	___awdiv@dividend+1,f
 13097  17C0  3001               	movlw	1
 13098  17C1  00F4               	movwf	??___awdiv
 13099  17C2  0874               	movf	??___awdiv,w
 13100  17C3  06F6               	xorwf	___awdiv@sign,f
 13101  17C4                     l2625:	
 13102  17C4  01F7               	clrf	___awdiv@quotient
 13103  17C5  01F8               	clrf	___awdiv@quotient+1
 13104  17C6  0870               	movf	___awdiv@divisor,w
 13105  17C7  0471               	iorwf	___awdiv@divisor+1,w
 13106  17C8  1903               	btfsc	3,2
 13107  17C9  2FF3               	goto	l2647
 13108  17CA  01F5               	clrf	___awdiv@counter
 13109  17CB  0AF5               	incf	___awdiv@counter,f
 13110  17CC                     l2635:	
 13111  17CC  1BF1               	btfsc	___awdiv@divisor+1,7
 13112  17CD  2FD8               	goto	l2637
 13113  17CE  3001               	movlw	1
 13114  17CF                     u2675:	
 13115  17CF  35F0               	lslf	___awdiv@divisor,f
 13116  17D0  0DF1               	rlf	___awdiv@divisor+1,f
 13117  17D1  0B89               	decfsz	9,f
 13118  17D2  2FCF               	goto	u2675
 13119  17D3  3001               	movlw	1
 13120  17D4  00F4               	movwf	??___awdiv
 13121  17D5  0874               	movf	??___awdiv,w
 13122  17D6  07F5               	addwf	___awdiv@counter,f
 13123  17D7  2FCC               	goto	l2635
 13124  17D8                     l2637:	
 13125  17D8  3001               	movlw	1
 13126  17D9                     u2695:	
 13127  17D9  35F7               	lslf	___awdiv@quotient,f
 13128  17DA  0DF8               	rlf	___awdiv@quotient+1,f
 13129  17DB  0B89               	decfsz	9,f
 13130  17DC  2FD9               	goto	u2695
 13131  17DD  0871               	movf	___awdiv@divisor+1,w
 13132  17DE  0273               	subwf	___awdiv@dividend+1,w
 13133  17DF  1D03               	skipz
 13134  17E0  2FE3               	goto	u2705
 13135  17E1  0870               	movf	___awdiv@divisor,w
 13136  17E2  0272               	subwf	___awdiv@dividend,w
 13137  17E3                     u2705:	
 13138  17E3  1C03               	skipc
 13139  17E4  2FEA               	goto	l2643
 13140  17E5  0870               	movf	___awdiv@divisor,w
 13141  17E6  02F2               	subwf	___awdiv@dividend,f
 13142  17E7  0871               	movf	___awdiv@divisor+1,w
 13143  17E8  3BF3               	subwfb	___awdiv@dividend+1,f
 13144  17E9  1477               	bsf	___awdiv@quotient,0
 13145  17EA                     l2643:	
 13146  17EA  3001               	movlw	1
 13147  17EB                     u2715:	
 13148  17EB  36F1               	lsrf	___awdiv@divisor+1,f
 13149  17EC  0CF0               	rrf	___awdiv@divisor,f
 13150  17ED  0B89               	decfsz	9,f
 13151  17EE  2FEB               	goto	u2715
 13152  17EF  3001               	movlw	1
 13153  17F0  02F5               	subwf	___awdiv@counter,f
 13154  17F1  1D03               	btfss	3,2
 13155  17F2  2FD8               	goto	l2637
 13156  17F3                     l2647:	
 13157  17F3  0876               	movf	___awdiv@sign,w
 13158  17F4  1903               	btfsc	3,2
 13159  17F5  2FFB               	goto	l2651
 13160  17F6  09F7               	comf	___awdiv@quotient,f
 13161  17F7  09F8               	comf	___awdiv@quotient+1,f
 13162  17F8  0AF7               	incf	___awdiv@quotient,f
 13163  17F9  1903               	skipnz
 13164  17FA  0AF8               	incf	___awdiv@quotient+1,f
 13165  17FB                     l2651:	
 13166  17FB  0878               	movf	___awdiv@quotient+1,w
 13167  17FC  00F1               	movwf	?___awdiv+1
 13168  17FD  0877               	movf	___awdiv@quotient,w
 13169  17FE  00F0               	movwf	?___awdiv
 13170  17FF  0008               	return
 13171  1800                     __end_of___awdiv:	
 13172                           
 13173                           	psect	text37
 13174  0936                     __ptext37:	
 13175 ;; *************** function _LCDWriteCharacter *****************
 13176 ;; Defined at:
 13177 ;;		line 140 in file "lcd.c"
 13178 ;; Parameters:    Size  Location     Type
 13179 ;;  character       1    wreg     const unsigned char 
 13180 ;; Auto vars:     Size  Location     Type
 13181 ;;  character       1    5[BANK0 ] const unsigned char 
 13182 ;;  base            2    6[BANK0 ] unsigned int 
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      void 
 13185 ;; Registers used:
 13186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13194 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13195 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13196 ;;Total ram usage:        6 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    1
 13199 ;; This function calls:
 13200 ;;		_LCDWrite
 13201 ;;		___wmul
 13202 ;; This function is called by:
 13203 ;;		_LCDWriteInt
 13204 ;;		_main
 13205 ;;		_LCDWriteString
 13206 ;; This function uses a non-reentrant model
 13207 ;;
 13208                           
 13209                           
 13210                           ;psect for function _LCDWriteCharacter
 13211  0936                     _LCDWriteCharacter:	
 13212                           
 13213                           ;incstack = 0
 13214                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13215                           ;LCDWriteCharacter@character stored from wreg
 13216  0936  0020               	movlb	0	; select bank0
 13217  0937  00A5               	movwf	LCDWriteCharacter@character
 13218                           
 13219                           ;lcd.c: 142: uint16_t base;
 13220                           ;lcd.c: 143: base = character - 0x20;
 13221  0938  0825               	movf	LCDWriteCharacter@character,w
 13222  0939  3EE0               	addlw	224
 13223  093A  00A6               	movwf	LCDWriteCharacter@base
 13224  093B  30FF               	movlw	255
 13225  093C  1803               	skipnc
 13226  093D  3000               	movlw	0
 13227  093E  00A7               	movwf	LCDWriteCharacter@base+1
 13228                           
 13229                           ;lcd.c: 144: base *= 3;
 13230  093F  3003               	movlw	3
 13231  0940  00F9               	movwf	___wmul@multiplier
 13232  0941  3000               	movlw	0
 13233  0942  00FA               	movwf	___wmul@multiplier+1
 13234  0943  0827               	movf	LCDWriteCharacter@base+1,w
 13235  0944  00FC               	movwf	___wmul@multiplicand+1
 13236  0945  0826               	movf	LCDWriteCharacter@base,w
 13237  0946  00FB               	movwf	___wmul@multiplicand
 13238  0947  3194  24FC  3189   	fcall	___wmul
 13239  094A  087A               	movf	?___wmul+1,w
 13240  094B  0020               	movlb	0	; select bank0
 13241  094C  00A7               	movwf	LCDWriteCharacter@base+1
 13242  094D  0879               	movf	?___wmul,w
 13243  094E  00A6               	movwf	LCDWriteCharacter@base
 13244                           
 13245                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13246  094F  0827               	movf	LCDWriteCharacter@base+1,w
 13247  0950  0085               	movwf	5
 13248  0951  0826               	movf	LCDWriteCharacter@base,w
 13249  0952  0084               	movwf	4
 13250  0953  3000               	movlw	low (_fonts| (0+32768))
 13251  0954  0784               	addwf	4,f
 13252  0955  3088               	movlw	high (_fonts| (0+32768))
 13253  0956  3D85               	addwfc	5,f
 13254  0957  0800               	movf	0,w	;code access
 13255  0958  00A2               	movwf	??_LCDWriteCharacter
 13256  0959  0822               	movf	??_LCDWriteCharacter,w
 13257  095A  00F0               	movwf	LCDWrite@data
 13258  095B  3001               	movlw	1
 13259  095C  3195  2596  3189   	fcall	_LCDWrite
 13260                           
 13261                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13262  095F  0020               	movlb	0	; select bank0
 13263  0960  0826               	movf	LCDWriteCharacter@base,w
 13264  0961  3E01               	addlw	1
 13265  0962  00A2               	movwf	??_LCDWriteCharacter
 13266  0963  3000               	movlw	0
 13267  0964  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13268  0965  00A3               	movwf	??_LCDWriteCharacter+1
 13269  0966  3000               	movlw	low (_fonts| (0+32768))
 13270  0967  0722               	addwf	??_LCDWriteCharacter,w
 13271  0968  0084               	movwf	4
 13272  0969  3088               	movlw	high (_fonts| (0+32768))
 13273  096A  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13274  096B  0085               	movwf	5
 13275  096C  0800               	movf	0,w	;code access
 13276  096D  00A4               	movwf	??_LCDWriteCharacter+2
 13277  096E  0824               	movf	??_LCDWriteCharacter+2,w
 13278  096F  00F0               	movwf	LCDWrite@data
 13279  0970  3001               	movlw	1
 13280  0971  3195  2596  3189   	fcall	_LCDWrite
 13281                           
 13282                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13283  0974  0020               	movlb	0	; select bank0
 13284  0975  0826               	movf	LCDWriteCharacter@base,w
 13285  0976  3E02               	addlw	2
 13286  0977  00A2               	movwf	??_LCDWriteCharacter
 13287  0978  3000               	movlw	0
 13288  0979  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13289  097A  00A3               	movwf	??_LCDWriteCharacter+1
 13290  097B  3000               	movlw	low (_fonts| (0+32768))
 13291  097C  0722               	addwf	??_LCDWriteCharacter,w
 13292  097D  0084               	movwf	4
 13293  097E  3088               	movlw	high (_fonts| (0+32768))
 13294  097F  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13295  0980  0085               	movwf	5
 13296  0981  0800               	movf	0,w	;code access
 13297  0982  00A4               	movwf	??_LCDWriteCharacter+2
 13298  0983  0824               	movf	??_LCDWriteCharacter+2,w
 13299  0984  00F0               	movwf	LCDWrite@data
 13300  0985  3001               	movlw	1
 13301  0986  3195  2596  3189   	fcall	_LCDWrite
 13302                           
 13303                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13304  0989  01F0               	clrf	LCDWrite@data
 13305  098A  3001               	movlw	1
 13306  098B  3195  2596         	fcall	_LCDWrite
 13307  098D  0008               	return
 13308  098E                     __end_of_LCDWriteCharacter:	
 13309                           
 13310                           	psect	text38
 13311  14FC                     __ptext38:	
 13312 ;; *************** function ___wmul *****************
 13313 ;; Defined at:
 13314 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13315 ;; Parameters:    Size  Location     Type
 13316 ;;  multiplier      2    9[COMMON] unsigned int 
 13317 ;;  multiplicand    2   11[COMMON] unsigned int 
 13318 ;; Auto vars:     Size  Location     Type
 13319 ;;  product         2    0[BANK0 ] unsigned int 
 13320 ;; Return value:  Size  Location     Type
 13321 ;;                  2    9[COMMON] unsigned int 
 13322 ;; Registers used:
 13323 ;;		wreg, status,2, status,0
 13324 ;; Tracked objects:
 13325 ;;		On entry : 0/0
 13326 ;;		On exit  : 0/0
 13327 ;;		Unchanged: 0/0
 13328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13330 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13332 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13333 ;;Total ram usage:        6 bytes
 13334 ;; Hardware stack levels used:    1
 13335 ;; This function calls:
 13336 ;;		Nothing
 13337 ;; This function is called by:
 13338 ;;		_readAnalog
 13339 ;;		_LCDWriteCharacter
 13340 ;;		_main
 13341 ;;		_eval_poly
 13342 ;; This function uses a non-reentrant model
 13343 ;;
 13344                           
 13345                           
 13346                           ;psect for function ___wmul
 13347  14FC                     ___wmul:	
 13348                           
 13349                           ;incstack = 0
 13350                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13351  14FC  0020               	movlb	0	; select bank0
 13352  14FD  01A0               	clrf	___wmul@product
 13353  14FE  01A1               	clrf	___wmul@product+1
 13354  14FF                     l2183:	
 13355  14FF  1C79               	btfss	___wmul@multiplier,0
 13356  1500  2D06               	goto	l575
 13357  1501  087B               	movf	___wmul@multiplicand,w
 13358  1502  0020               	movlb	0	; select bank0
 13359  1503  07A0               	addwf	___wmul@product,f
 13360  1504  087C               	movf	___wmul@multiplicand+1,w
 13361  1505  3DA1               	addwfc	___wmul@product+1,f
 13362  1506                     l575:	
 13363  1506  3001               	movlw	1
 13364  1507                     u2025:	
 13365  1507  35FB               	lslf	___wmul@multiplicand,f
 13366  1508  0DFC               	rlf	___wmul@multiplicand+1,f
 13367  1509  0B89               	decfsz	9,f
 13368  150A  2D07               	goto	u2025
 13369  150B  3001               	movlw	1
 13370  150C                     u2035:	
 13371  150C  36FA               	lsrf	___wmul@multiplier+1,f
 13372  150D  0CF9               	rrf	___wmul@multiplier,f
 13373  150E  0B89               	decfsz	9,f
 13374  150F  2D0C               	goto	u2035
 13375  1510  0879               	movf	___wmul@multiplier,w
 13376  1511  047A               	iorwf	___wmul@multiplier+1,w
 13377  1512  1D03               	btfss	3,2
 13378  1513  2CFF               	goto	l2183
 13379  1514  0020               	movlb	0	; select bank0
 13380  1515  0821               	movf	___wmul@product+1,w
 13381  1516  00FA               	movwf	?___wmul+1
 13382  1517  0820               	movf	___wmul@product,w
 13383  1518  00F9               	movwf	?___wmul
 13384  1519  0008               	return
 13385  151A                     __end_of___wmul:	
 13386                           
 13387                           	psect	text39
 13388  1596                     __ptext39:	
 13389 ;; *************** function _LCDWrite *****************
 13390 ;; Defined at:
 13391 ;;		line 280 in file "lcd.c"
 13392 ;; Parameters:    Size  Location     Type
 13393 ;;  data_or_comm    1    wreg     unsigned char 
 13394 ;;  data            1    0[COMMON] unsigned char 
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13397 ;;  i               1    4[COMMON] unsigned char 
 13398 ;;  d               1    3[COMMON] unsigned char 
 13399 ;; Return value:  Size  Location     Type
 13400 ;;                  1    wreg      void 
 13401 ;; Registers used:
 13402 ;;		wreg, status,2, status,0
 13403 ;; Tracked objects:
 13404 ;;		On entry : 0/0
 13405 ;;		On exit  : 0/0
 13406 ;;		Unchanged: 0/0
 13407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13408 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;Total ram usage:        5 bytes
 13413 ;; Hardware stack levels used:    1
 13414 ;; This function calls:
 13415 ;;		Nothing
 13416 ;; This function is called by:
 13417 ;;		_gotoXY
 13418 ;;		_LCDWriteCharacter
 13419 ;;		_LCDClear
 13420 ;;		_LCDInit
 13421 ;;		_LCDBitmap
 13422 ;; This function uses a non-reentrant model
 13423 ;;
 13424                           
 13425                           
 13426                           ;psect for function _LCDWrite
 13427  1596                     _LCDWrite:	
 13428                           
 13429                           ;incstack = 0
 13430                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13431                           ;LCDWrite@data_or_command stored from wreg
 13432  1596  00F2               	movwf	LCDWrite@data_or_command
 13433                           
 13434                           ;lcd.c: 282: uint8_t i,d;
 13435                           ;lcd.c: 284: d=data;
 13436  1597  0870               	movf	LCDWrite@data,w
 13437  1598  00F1               	movwf	??_LCDWrite
 13438  1599  0871               	movf	??_LCDWrite,w
 13439  159A  00F3               	movwf	LCDWrite@d
 13440                           
 13441                           ;lcd.c: 286: if(data_or_command == 0)
 13442  159B  0872               	movf	LCDWrite@data_or_command,w
 13443  159C  1D03               	btfss	3,2
 13444  159D  2DA1               	goto	l190
 13445                           
 13446                           ;lcd.c: 287: {
 13447                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 13448  159E  0020               	movlb	0	; select bank0
 13449  159F  1116               	bcf	22,2	;volatile
 13450                           
 13451                           ;lcd.c: 289: }
 13452  15A0  2DA3               	goto	l191
 13453  15A1                     l190:	
 13454                           
 13455                           ;lcd.c: 290: else
 13456                           ;lcd.c: 291: {
 13457                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 13458  15A1  0020               	movlb	0	; select bank0
 13459  15A2  1516               	bsf	22,2	;volatile
 13460  15A3                     l191:	
 13461                           
 13462                           ;lcd.c: 293: }
 13463                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 13464  15A3  1096               	bcf	22,1	;volatile
 13465                           
 13466                           ;lcd.c: 297: for(i=0;i<8;i++)
 13467  15A4  01F4               	clrf	LCDWrite@i
 13468  15A5  3008               	movlw	8
 13469  15A6  0274               	subwf	LCDWrite@i,w
 13470  15A7  1803               	btfsc	3,0
 13471  15A8  2DB9               	goto	l193
 13472  15A9                     l192:	
 13473                           
 13474                           ;lcd.c: 298: {
 13475                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 13476  15A9  1196               	bcf	22,3	;volatile
 13477                           
 13478                           ;lcd.c: 301: if(d&0x80)
 13479  15AA  1FF3               	btfss	LCDWrite@d,7
 13480  15AB  2DAD               	goto	l194
 13481                           
 13482                           ;lcd.c: 302: {
 13483                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 13484  15AC  1596               	bsf	22,3	;volatile
 13485  15AD                     l194:	
 13486                           
 13487                           ;lcd.c: 304: }
 13488                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 13489  15AD  1616               	bsf	22,4	;volatile
 13490                           
 13491                           ;lcd.c: 308: d<<=1;
 13492  15AE  1003               	clrc
 13493  15AF  0DF3               	rlf	LCDWrite@d,f
 13494                           
 13495                           ;lcd.c: 310: LATAbits.LATA4=0;
 13496  15B0  1216               	bcf	22,4	;volatile
 13497  15B1  3001               	movlw	1
 13498  15B2  00F1               	movwf	??_LCDWrite
 13499  15B3  0871               	movf	??_LCDWrite,w
 13500  15B4  07F4               	addwf	LCDWrite@i,f
 13501  15B5  3008               	movlw	8
 13502  15B6  0274               	subwf	LCDWrite@i,w
 13503  15B7  1C03               	skipc
 13504  15B8  2DA9               	goto	l192
 13505  15B9                     l193:	
 13506                           
 13507                           ;lcd.c: 311: }
 13508                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 13509  15B9  1496               	bsf	22,1	;volatile
 13510  15BA  0008               	return
 13511  15BB                     __end_of_LCDWrite:	
 13512                           
 13513                           	psect	text40
 13514  0A52                     __ptext40:	
 13515 ;; *************** function _Battery_State_Machine *****************
 13516 ;; Defined at:
 13517 ;;		line 35 in file "battery_charger.c"
 13518 ;; Parameters:    Size  Location     Type
 13519 ;;		None
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;		None
 13522 ;; Return value:  Size  Location     Type
 13523 ;;                  1    wreg      void 
 13524 ;; Registers used:
 13525 ;;		wreg, status,2, status,0
 13526 ;; Tracked objects:
 13527 ;;		On entry : 0/0
 13528 ;;		On exit  : 0/0
 13529 ;;		Unchanged: 0/0
 13530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13535 ;;Total ram usage:        1 bytes
 13536 ;; Hardware stack levels used:    1
 13537 ;; This function calls:
 13538 ;;		Nothing
 13539 ;; This function is called by:
 13540 ;;		_main
 13541 ;; This function uses a non-reentrant model
 13542 ;;
 13543                           
 13544                           
 13545                           ;psect for function _Battery_State_Machine
 13546  0A52                     _Battery_State_Machine:	
 13547                           
 13548                           ;battery_charger.c: 37: if(battery_state == PRECHARGE)
 13549                           
 13550                           ;incstack = 0
 13551                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 13552  0A52  3003               	movlw	3
 13553  0A53  0021               	movlb	1	; select bank1
 13554  0A54  066C               	xorwf	_battery_state^(0+128),w
 13555  0A55  1D03               	btfss	3,2
 13556  0A56  2A79               	goto	l2799
 13557                           
 13558                           ;battery_charger.c: 38: {
 13559                           ;battery_charger.c: 39: if(voltage[1] < 1075)
 13560  0A57  084F               	movf	((_voltage+1)^(0+128)+2),w
 13561  0A58  3A80               	xorlw	128
 13562  0A59  00F0               	movwf	??_Battery_State_Machine
 13563  0A5A  3084               	movlw	132
 13564  0A5B  0270               	subwf	??_Battery_State_Machine,w
 13565  0A5C  1D03               	skipz
 13566  0A5D  2A60               	goto	u3075
 13567  0A5E  3033               	movlw	51
 13568  0A5F  024E               	subwf	(_voltage^(0+128)+2),w
 13569  0A60                     u3075:	
 13570  0A60  1803               	skipnc
 13571  0A61  2A6F               	goto	l2797
 13572                           
 13573                           ;battery_charger.c: 40: {
 13574                           ;battery_charger.c: 41: if(state_counter)
 13575  0A62  0021               	movlb	1	; select bank1
 13576  0A63  0868               	movf	_state_counter^(0+128),w
 13577  0A64  0469               	iorwf	(_state_counter+1)^(0+128),w
 13578  0A65  1903               	btfsc	3,2
 13579  0A66  2A6C               	goto	l107
 13580                           
 13581                           ;battery_charger.c: 42: {
 13582                           ;battery_charger.c: 43: state_counter-=1;
 13583  0A67  3001               	movlw	1
 13584  0A68  02E8               	subwf	_state_counter^(0+128),f
 13585  0A69  3000               	movlw	0
 13586  0A6A  3BE9               	subwfb	(_state_counter+1)^(0+128),f
 13587                           
 13588                           ;battery_charger.c: 44: }
 13589  0A6B  0008               	return
 13590  0A6C                     l107:	
 13591                           
 13592                           ;battery_charger.c: 45: else
 13593                           ;battery_charger.c: 46: {
 13594                           ;battery_charger.c: 47: battery_state = FAULT;
 13595  0A6C  01EC               	clrf	_battery_state^(0+128)
 13596  0A6D  0AEC               	incf	_battery_state^(0+128),f
 13597                           
 13598                           ;battery_charger.c: 48: }
 13599                           ;battery_charger.c: 49: }
 13600  0A6E  0008               	return
 13601  0A6F                     l2797:	
 13602                           
 13603                           ;battery_charger.c: 50: else
 13604                           ;battery_charger.c: 51: {
 13605                           ;battery_charger.c: 52: battery_state = CHARGE;
 13606  0A6F  3004               	movlw	4
 13607  0A70  00F0               	movwf	??_Battery_State_Machine
 13608  0A71  0870               	movf	??_Battery_State_Machine,w
 13609  0A72  0021               	movlb	1	; select bank1
 13610  0A73  00EC               	movwf	_battery_state^(0+128)
 13611                           
 13612                           ;battery_charger.c: 53: { Iref = 40; };
 13613  0A74  3028               	movlw	40
 13614  0A75  00E6               	movwf	_Iref^(0+128)
 13615  0A76  3000               	movlw	0
 13616  0A77  00E7               	movwf	(_Iref^(0+128)+1)
 13617                           
 13618                           ;battery_charger.c: 54: }
 13619                           ;battery_charger.c: 55: }
 13620  0A78  0008               	return
 13621  0A79                     l2799:	
 13622                           
 13623                           ;battery_charger.c: 56: else if(battery_state == CHARGE)
 13624  0A79  3004               	movlw	4
 13625  0A7A  066C               	xorwf	_battery_state^(0+128),w
 13626  0A7B  1D03               	btfss	3,2
 13627  0A7C  2AAC               	goto	l2813
 13628                           
 13629                           ;battery_charger.c: 57: {
 13630                           ;battery_charger.c: 58: if((!Imode0))
 13631  0A7D  086E               	movf	_Imode0^(0+128),w
 13632  0A7E  1D03               	btfss	3,2
 13633  0A7F  0008               	return
 13634                           
 13635                           ;battery_charger.c: 59: {
 13636                           ;battery_charger.c: 60: if(current[1] < Imin)
 13637  0A80  0847               	movf	((_current+1)^(0+128)+2),w
 13638  0A81  3A80               	xorlw	128
 13639  0A82  00F0               	movwf	??_Battery_State_Machine
 13640  0A83  0022               	movlb	2	; select bank2
 13641  0A84  0861               	movf	(_Imin+1)^(0+256),w
 13642  0A85  3A80               	xorlw	128
 13643  0A86  0270               	subwf	??_Battery_State_Machine,w
 13644  0A87  1D03               	skipz
 13645  0A88  2A8C               	goto	u3115
 13646  0A89  0860               	movf	_Imin^(0+256),w
 13647  0A8A  0021               	movlb	1	; select bank1
 13648  0A8B  0246               	subwf	(_current^(0+128)+2),w
 13649  0A8C                     u3115:	
 13650  0A8C  1803               	skipnc
 13651  0A8D  2A9F               	goto	l2809
 13652                           
 13653                           ;battery_charger.c: 61: {
 13654                           ;battery_charger.c: 62: IminCount-=2;
 13655  0A8E  3002               	movlw	2
 13656  0A8F  0021               	movlb	1	; select bank1
 13657  0A90  02EA               	subwf	_IminCount^(0+128),f
 13658  0A91  3000               	movlw	0
 13659  0A92  3BEB               	subwfb	(_IminCount+1)^(0+128),f
 13660                           
 13661                           ;battery_charger.c: 63: if(IminCount<2)
 13662  0A93  3000               	movlw	0
 13663  0A94  026B               	subwf	(_IminCount+1)^(0+128),w
 13664  0A95  3002               	movlw	2
 13665  0A96  1903               	skipnz
 13666  0A97  026A               	subwf	_IminCount^(0+128),w
 13667  0A98  1803               	skipnc
 13668  0A99  0008               	return
 13669                           
 13670                           ;battery_charger.c: 64: {
 13671                           ;battery_charger.c: 65: battery_state = FLOAT;
 13672  0A9A  3005               	movlw	5
 13673  0A9B  00F0               	movwf	??_Battery_State_Machine
 13674  0A9C  0870               	movf	??_Battery_State_Machine,w
 13675  0A9D  00EC               	movwf	_battery_state^(0+128)
 13676                           
 13677                           ;battery_charger.c: 66: }
 13678                           ;battery_charger.c: 67: }
 13679  0A9E  0008               	return
 13680  0A9F                     l2809:	
 13681                           
 13682                           ;battery_charger.c: 68: else
 13683                           ;battery_charger.c: 69: {
 13684                           ;battery_charger.c: 70: if(IminCount<10)IminCount+=1;
 13685  0A9F  3000               	movlw	0
 13686  0AA0  0021               	movlb	1	; select bank1
 13687  0AA1  026B               	subwf	(_IminCount+1)^(0+128),w
 13688  0AA2  300A               	movlw	10
 13689  0AA3  1903               	skipnz
 13690  0AA4  026A               	subwf	_IminCount^(0+128),w
 13691  0AA5  1803               	skipnc
 13692  0AA6  0008               	return
 13693  0AA7  3001               	movlw	1
 13694  0AA8  07EA               	addwf	_IminCount^(0+128),f
 13695  0AA9  3000               	movlw	0
 13696  0AAA  3DEB               	addwfc	(_IminCount+1)^(0+128),f
 13697                           
 13698                           ;battery_charger.c: 71: }
 13699                           ;battery_charger.c: 72: }
 13700                           ;battery_charger.c: 73: }
 13701  0AAB  0008               	return
 13702  0AAC                     l2813:	
 13703                           
 13704                           ;battery_charger.c: 74: else if(battery_state == FLOAT)
 13705  0AAC  3005               	movlw	5
 13706  0AAD  066C               	xorwf	_battery_state^(0+128),w
 13707  0AAE  1D03               	btfss	3,2
 13708  0AAF  0008               	return
 13709                           
 13710                           ;battery_charger.c: 75: {
 13711                           ;battery_charger.c: 76: { Vref = 1380; };
 13712  0AB0  3064               	movlw	100
 13713  0AB1  00E4               	movwf	_Vref^(0+128)
 13714  0AB2  3005               	movlw	5
 13715  0AB3  00E5               	movwf	(_Vref^(0+128)+1)
 13716                           
 13717                           ;battery_charger.c: 77: { Iref = 20; };
 13718  0AB4  3014               	movlw	20
 13719  0AB5  00E6               	movwf	_Iref^(0+128)
 13720  0AB6  3000               	movlw	0
 13721  0AB7  00E7               	movwf	(_Iref^(0+128)+1)
 13722                           
 13723                           ;battery_charger.c: 81: {
 13724                           
 13725                           ;battery_charger.c: 78: }
 13726  0AB8  0008               	return
 13727  0AB9                     __end_of_Battery_State_Machine:	
 13728  007E                     btemp	set	126	;btemp
 13729  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    330
    Data        18
    BSS         85
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      79
    BANK1            80     36      79
    BANK2            80      0      66
    BANK3            48      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   80477
                                             72 BANK0      2     2      0
                                              0 BANK1     36    36      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   33984
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   17121
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7527
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2961
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1710
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6846
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6846
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     623
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3789
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2434
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3688
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2809
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1907
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7108
                                              8 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     830
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1908
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     940
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv
     ___lwmod
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      42       9       82.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               30      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jun 29 23:29:14 2018

                                  _j 006C               LCDWriteInt@fieldLength 002A  
            __size_of_PWM_Initialize 001F                          __CFG_CP$OFF 0000  
                                 l60 1497                                   l57 1490  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 004C  
                       ___ftadd@exp2 004B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 004A                                  l107 0A6C  
                                l190 15A1                                  l191 15A3  
                                l192 15A9                                  l193 15B9  
                                l194 15AD                                  l630 0ACA  
                      LCDClear@index 0079                                  l575 1506  
                                l743 0A33                                  l744 0A3B  
                                l736 0A20                                  l827 0C2A  
                                l767 0FA9                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                                _log 0CED                      __end_of_ADCRead 149E  
                    _TMR2_Initialize 144A                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_LCDInit 16B3  
                       ?_LCDWriteInt 0028                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 002A                         ___ftdiv@sign 002F  
                               l2201 0F32                                 l2131 09F6  
                               l2211 0F48                                 l2205 0F39  
                               l2301 0E21                                 l3101 044F  
                               l2135 09FD                                 l2231 0F7F  
                               l2223 0F62                                 l3103 0452  
                               l3015 02EF                                 l2145 0A25  
                               l2137 0A07                                 l2241 0F9B  
                               l2233 0F84                                 l2305 0E29  
                               l3033 030F                                 l3025 0307  
                               l2147 0A2D                                 l2139 0A0C  
                               l2251 0FCD                                 l2243 0FA5  
                               l2235 0F88                                 l3107 045A  
                               l3027 0309                                 l2325 1580  
                               l2261 0FE8                                 l2229 0F75  
                               l2333 16C9                                 l3117 047D  
                               l2183 14FF                                 l2247 0FBB  
                               l2271 0DB4                                 l3063 03B8  
                               l3039 032E                                 l2337 16DF  
                               l3057 039B                                 l2603 0B24  
                               l3083 03FC                                 l2701 1522  
                               l2293 0E0D                                 l2277 0DCA  
                               l2357 1700                                 l3229 07BD  
                               l3093 041A                                 l3069 03C1  
                               l2455 15DC                                 l2711 0BD6  
                               l2607 0B32                                 l2375 09E7  
                               l2625 17C4                                 l2449 15C8  
                               l2289 0E05                                 l2561 0D1F  
                               l3089 0413                                 l2651 17FB  
                               l2643 17EA                                 l2635 17CC  
                               l2619 17B9                                 l2731 0C14  
                               l2555 0D0C                                 l2813 0AAC  
                               l2637 17D8                                 l2661 0C5B  
                               l2581 0ADB                                 l2647 17F3  
                               l2743 0C3B                                 l2591 0AF9  
                               l2809 0A9F                                 l2761 15FF  
                               l2681 0CB2                                 l2737 0C21  
                               l2729 0C06                                 l2825 173D  
                               l2921 0B8D                                 l2755 15E7  
                               l2851 0E72                                 l2667 0C71  
                               l2739 0C2D                                 l2915 0B79  
                               l2757 15F3                                 l2765 1608  
                               l2861 0E79                                 l2837 1763  
                               l2829 1742                                 l2589 0AEB  
                               l2941 0BBA                                 l2909 0B5F  
                               l2871 0EB6                                 l2863 0EA6  
                               l2599 0B19                                 l2783 0291  
                               l2935 0BA2                                 l2943 0BBB  
                               l2919 0B8B                                 l2881 0EE7  
                               l2873 0EBC                                 l2689 0CCB  
                               l2929 0B99                                 l2867 0EAA  
                               l2971 1783                                 l2797 0A6F  
                               l2885 0EF5                                 l2869 0EAE  
                               l2799 0A79                                 l2879 0EC0  
                               l2977 0025                                 ?_log 0057  
                               u2025 1507                                 u2035 150C  
                               u3005 01DE                                 u2205 0F89  
                               _LATA 0016                                 _LATB 0017  
                               u3015 021C                                 _LATC 0018  
                               u3025 026B                                 u2145 0F63  
                               u2305 0DD6                                 u3210 0E5C  
                               u3115 0A8C                                 u2235 0F9C  
                               u2315 0DE6                                 u2500 1676  
                               u3055 029D                                 u2175 0F76  
                               u2335 0E0E                                 u3305 14C3  
                               u2345 0E14                                 _T2PR 028D  
                               u3075 0A60                                 u3315 14D9  
                               u3155 1734                                 u3325 14AD  
                               u2605 0B0E                                 u2615 0B1A  
                               u3335 0B4D                                 u2375 0E2A  
                               u2705 17E3                                 u3425 177D  
                               u3185 174D                                 u3345 0B59  
                               u2385 0E30                                 _T4PR 0293  
                               u2715 17EB                                 u3275 0ED5  
                               u1915 0A28                                 u3435 001F  
                               u3355 0B69                                 u2485 15C6  
                               u2805 0CCC                                 u3365 0B75  
                               u3605 040C                                 u2495 15DA  
                               u2575 0AEE                                 u3375 0B83  
                               u2905 0C22                                 u3545 03A9  
                               u2675 17CF                                 u1955 0A42  
                               u1875 0A02                                 u2595 0AFA  
                               u3707 0BAC                                 u3635 0439  
                               u3717 162A                                 u2765 0C83  
                               u2845 0BDD                                 u2695 17D9  
                               u3727 1639                                 u1895 0A1B  
                               u2775 0C93                                 u2945 15EA  
                               u2785 0CB3                                 u3585 03F5  
                               u2795 0CC2                                 u2875 0C07  
                               u2965 15F9                                 u2975 1600  
                               u3697 02F4                                 u2995 0184  
                tempCalc@analogValue 005D                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 0160  
                               _Iref 00E6                                 _Iout 00DB  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Vref 00E4                                 _main 02BA  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                      _state_counter 00E8                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               log@x 0057                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 003E  
                       ___ftmul@sign 003F                     __end_of_LCDClear 15E1  
                       ___fttol@exp1 003D                                ??_log 005A  
                       ___fttol@lval 0039                         main@fastLoop 00A2  
__size_of_Init_Battery_State_Machine 001C       __size_of_OSCILLATOR_Initialize 0009  
                   __end_of_LCDWrite 15BB        __end_of_OSCILLATOR_Initialize 1432  
                    __end_of___aldiv 0B3B                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADPCH 009E                                _ADREF 009A  
                    __end_of___awdiv 1800                                _ADPRE 009C  
                    __end_of___ftadd 1000                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      __end_of___ftdiv 0CED  
                    __end_of___ftmul 0E51                      ___awdiv@divisor 0070  
                    __end_of___ftsub 1538                      __end_of___fttol 0C44  
                              _T2CON 028E                                _LATA5 00B5  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 160D  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 1458  
             ?_Battery_State_Machine 0070                                _cc_cv 00E3  
                      ___awtoft@sign 007D                                _frexp 16EE  
                              _fonts 0800                                _errno 00D9  
                      ___ftpack@sign 0074                                main@j 00C1  
                       main@slowLoop 00AC                                status 0003  
                              wtemp0 007E                      __initialization 07C0  
                        log@exponent 005B                         __end_of_main 07C0  
                  readAnalog@channel 0026              __end_of_TMR2_Initialize 1458  
                          ??_ADCRead 0073                               ??_main 0068  
                      ___fttol@sign1 0038                            ??_LCDInit 0075  
            LCDWrite@data_or_command 0072                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             _ADCON3 0096                               ?_frexp 0070  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _CCPR1H 030D                               _CCPR1L 030C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                   __end_of___awtoft 1596                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                   __end_of___ftpack 0A52                               _RB0PPS 0F18  
                             _RA6PPS 0F16                               _RA7PPS 0F17  
                     __CFG_WDTCCS$SC 0000                               _FVRCON 090C  
                             _OSCFRQ 0893                       __CFG_PWRTE$OFF 0000  
                             _Imode0 00EE                               _Imode1 00ED  
                       _CCPTMRS0bits 021E                         _CCPTMRS1bits 021F  
                             ___ftge 16B3                            ??___aldiv 0078  
                             ___wmul 14FC                            ??___awdiv 0074  
                          ??___ftadd 0046                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 1557                            ??___ftdiv 0026  
                          ??___ftmul 0036                            ??___ftsub 007E  
                          ??___fttol 0034                            ??___lwmod 0074  
                             _gotoXY 1476                               _button 006E  
            __end_of_TMR4_Initialize 1466                     ___awdiv@quotient 0077  
                             _warmup 00DD                               _totals 0120  
              ___ftmul@f3_as_product 003B                     __end_of_tempCalc 016E  
                       LCDWrite@data 0070                         LCDWriteInt@i 0037  
                       LCDWriteInt@j 0036             readAnalog@analog_channel 003A  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 160D  
               __size_of_LCDWriteInt 00B9                     __end_oflog@coeff 181B  
            __end_of__initialization 07FD                           ___ftadd@f1 0040  
                         ___ftadd@f2 0043                           ___ftge@ff1 0070  
                         ___ftge@ff2 0073                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070                         eval_poly@res 0054  
                         ___ftdiv@f1 0023                           ___ftdiv@f2 0020  
                         ___ftdiv@f3 002B                           ___awtoft@c 0078  
                         ___ftmul@f1 0030                           ___ftmul@f2 0033  
             __end_of_PWM_Initialize 1576                           ___ftsub@f1 0050  
                         ___ftsub@f2 004D                           ___fttol@f1 0030  
                     __pcstackCOMMON 0070                         __pidataBANK1 000A  
                       __pidataBANK2 1466                  ??_SYSTEM_Initialize 007B  
                      __end_of_frexp 1729                        __end_of_fonts 092F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
                 _PWM1_LoadDutyValue 149E                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 1729          __size_of_PWM7_LoadDutyValue 0016  
                     main@efficiency 00B7                  ?_PWM1_LoadDutyValue 0070  
                  LCDWriteInt@F14396 00D4                    _calculateCurrent0 176A  
                  _calculateCurrent1 000C                              ??_frexp 0074  
          __end_of_SYSTEM_Initialize 1641                           __pbssBANK0 006A  
                         __pbssBANK1 00C4                           __pbssBANK2 0120  
                 ?_calculateCurrent0 0070                   ?_calculateCurrent1 0070  
                 __size_of_eval_poly 0060                           ??_LCDClear 0078  
                     main@faultCount 00A8                           ??_LCDWrite 0071  
               ??_PWM1_LoadDutyValue 0072                  ??_calculateCurrent0 003E  
                ??_calculateCurrent1 003E                      ?_PWM_Initialize 0070  
                         __pmaintext 02BA                              ?___ftge 0070  
                            ?___wmul 0079                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 14CA                              ?_gotoXY 0075  
                            _ADCRead 1489                     ?_TMR4_Initialize 0070  
                          ?___awtoft 0078                            ?___ftpack 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 0070  
                            _LCDInit 1678            __end_of_calculateCurrent0 17AF  
          __end_of_calculateCurrent1 0051                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 00BC  
                     main@dutyCycle1 00BA                       main@dutyCycle6 00C2  
                     main@dutyCycle7 00BD                           _lastButton 006D  
                          ?_tempCalc 005D                           _readAnalog 016E  
                            ___aldiv 0AB9                      __size_of___ftge 003B  
                            ___awdiv 17AF                              ___ftadd 0F0A  
                         _readButton 0B3B                              ___ftdiv 0C44  
                    __size_of___wmul 001E                              ___ftmul 0D9D  
                            ___ftsub 151A                              ___fttol 0BBD  
                 main@displayRefresh 00AD                              ___lwmod 15E1  
                    __size_of_gotoXY 0013                           ??___awtoft 007B  
                         ??___ftpack 0075                    __end_of_eval_poly 09EE  
                            _analogs 0140                              __ptext1 0051  
                            __ptext2 0CED                              __ptext3 16EE  
                            __ptext4 098E                              __ptext5 0D9D  
                            __ptext6 16B3                              __ptext7 151A  
                            __ptext8 0F0A                              __ptext9 0B3B  
                        ?_cc_cv_mode 0070                _OSCILLATOR_Initialize 1429  
                          _T2CONbits 028E                              _current 00C4  
                       __size_of_log 00B0                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074                            _T4CONbits 0294  
           ??_PIN_MANAGER_Initialize 0070                              _samples 2120  
         __size_of_SYSTEM_Initialize 0034                              clrloop0 1433  
                            _voltage 00CC         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 0026  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 143E                              initloop 143F  
                         ??_tempCalc 007E                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 0936                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070           __size_of_calculateCurrent0 0045  
         __size_of_calculateCurrent1 0045                            _TRISAbits 0011  
                ??_LCDWriteCharacter 0022                     __CFG_FEXTOSC$OFF 0000  
       PWM1_LoadDutyValue@dutyCycle1 0070                          _CCP1CONbits 030E  
                        ___ftdiv@exp 002E                  __size_of_cc_cv_mode 0041  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0025  
                  __size_of_LCDWrite 0025                          ___ftmul@exp 003A  
                        ?_readAnalog 0026            __end_of_LCDWriteCharacter 098E  
                        ?_readButton 0070                       __end_of___ftge 16EE  
                     __end_of___wmul 151A                       _ADC_Initialize 1538  
                     __end_of_gotoXY 1489               ?_OSCILLATOR_Initialize 0070  
                          _IminCount 00EA                  start_initialization 07C0  
                         eval_poly@d 0050                           eval_poly@n 0052  
                         eval_poly@x 004D                    main@faultNotReset 00AA  
    __size_of_PIN_MANAGER_Initialize 0037                          __end_of_log 0D9D  
                      ??_LCDWriteInt 002D                           frexp@value 0070  
                   ??_PWM_Initialize 0070                      main@batteryTemp 00A0  
                   __CFG_LPBOREN$OFF 0000                             ??___ftge 0076  
                  tempCalc@steinhart 0065                             ??___wmul 007D  
             __end_of_ADC_Initialize 1557                        _tempCalc$1294 0062  
                        __pdataBANK1 00ED                          __pdataBANK2 0150  
         __end_of_PWM7_LoadDutyValue 14E0                             ??_gotoXY 0076  
                           ?_ADCRead 0070         PWM7_LoadDutyValue@dutyCycle7 0070  
                  __size_of___awtoft 0020                             ?_LCDInit 0070  
                  __size_of___ftpack 0064                          __pbssBIGRAM 2120  
     __size_of_Battery_State_Machine 0067        __end_of_Battery_State_Machine 0AB9  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00A0                   _PWM6_LoadDutyValue 14B4  
           __size_of_TMR2_Initialize 000E                        _battery_state 00EC  
 __end_of_Init_Battery_State_Machine 14FC           _Init_Battery_State_Machine 14E0  
                __size_of_readAnalog 014C                  __size_of_readButton 0082  
                ?_PWM6_LoadDutyValue 0070                  __end_of_LCDWriteInt 0F0A  
                          __pnvBANK1 00E4                            __pnvBANK2 0160  
        __size_of_PWM1_LoadDutyValue 0016                            _main$1295 00AE  
                          _main$1296 00A3                            _main$1297 00B3  
                          _main$1298 00B5               _PIN_MANAGER_Initialize 1641  
         __size_of_LCDWriteCharacter 0058                             ?___aldiv 0070  
                  __size_of_tempCalc 011D                             ?___awdiv 0070  
                           ?___ftadd 0040                             ?___ftdiv 0020  
                           ?___ftmul 0030                             ?___ftsub 004D  
                           ?___fttol 0030                     LCDWriteInt@value 0028  
                           ?___lwmod 0070                      ?_ADC_Initialize 0070  
               ??_PWM6_LoadDutyValue 0072                         ??_cc_cv_mode 0070  
                          _eval_poly 098E             __size_of_TMR4_Initialize 000E  
                     __size_of_frexp 003B                             _T2CLKCON 0290  
                           _T4CLKCON 0296                             _LCDClear 15BB  
                    ___aldiv@divisor 0070                      ___aldiv@counter 0020  
                     ___wmul@product 0020                             _LATAbits 0016  
                           _LCDWrite 1596                            clear_ram0 1432  
                           _PIE0bits 0716                   __end_of_cc_cv_mode 176A  
                           _PIR4bits 0710                            main@MPPT0 00BF  
                          main@MPPT1 00A6                     __size_of_ADCRead 0015  
                         _ADCON0bits 0093                    ___wmul@multiplier 0079  
                         ?_eval_poly 004D                     __size_of_LCDInit 003B  
                        _LCDWriteInt 0E51                             _Iflat_db 00DF  
                  ??_TMR2_Initialize 0070                      readAnalog@value 003C  
                          frexp@eptr 0073                         ??_readAnalog 0028  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 002B                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftmul 00B4  
                   __size_of___ftsub 001E                     __size_of___fttol 0087  
                   __size_of___lwmod 002C                          _readButtons 006A  
                           ___awtoft 1576                             ___ftpack 09EE  
                           _channels 0150                             __ptext10 016E  
                           __ptext11 0AB9                             __ptext20 160D  
                           __ptext12 1489                             __ptext21 1458  
                           __ptext13 1729                             __ptext30 1538  
                           __ptext22 144A                             __ptext14 000C  
                           __ptext31 14CA                             __ptext23 1557  
                           __ptext15 176A                             __ptext40 0A52  
                           __ptext32 14B4                             __ptext24 1641  
                           __ptext16 0BBD                             __ptext33 149E  
                           __ptext25 1429                             __ptext17 0C44  
                           __ptext34 0E51                             __ptext26 1678  
                           __ptext18 1576                             __ptext35 15E1  
                           __ptext27 15BB                             __ptext19 09EE  
                           __ptext36 17AF                             __ptext28 1476  
                           __ptext37 0936                             __ptext29 14E0  
                           __ptext38 14FC                             __ptext39 1596  
                    LCDWriteInt@sign 002C                   __end_of_readAnalog 02BA  
                          tempCalc@R 005F                   __end_of_readButton 0BBD  
                  ??_TMR4_Initialize 0070                        __size_of_main 0506  
               __CFG_WDTCWS$WDTCWS_7 0000                             _tempCalc 0051  
        PIN_MANAGER_Initialize@state 0070                             log@coeff 1800  
                        ??_eval_poly 007E                          _sampleIndex 00E1  
                 _PWM7_LoadDutyValue 14CA          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0031  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                        __pstringtext2 1800  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075                         ___aldiv@sign 0021  
              _Battery_State_Machine 0A52       __end_of_PIN_MANAGER_Initialize 1678  
         __end_of_PWM1_LoadDutyValue 14B4                        main@IOutTotal 00B1  
