

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jun 23 19:16:14 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x620,48
    50                           	dabs	1,0x5A0,80
    51                           	dabs	1,0x520,80
    52                           	dabs	1,0x4A0,80
    53                           	dabs	1,0x420,80
    54                           	dabs	1,0x3A0,80
    55                           	dabs	1,0x320,80
    56                           	dabs	1,0x2A0,80
    57                           	dabs	1,0x220,80
    58                           	dabs	1,0x1A0,80
    59                           	dabs	1,0x150,32
    60                           	dabs	1,0x20D0,0,_samples
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 1.45
    64                           ; Generated 16/11/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F18855 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  001C                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0110                     	;# 
   152  0110                     	;# 
   153  0111                     	;# 
   154  0112                     	;# 
   155  0112                     	;# 
   156  0113                     	;# 
   157  0114                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0119                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  011A                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011B                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011C                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011D                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011E                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011F                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  018E                     	;# 
   191  018F                     	;# 
   192  0190                     	;# 
   193  0191                     	;# 
   194  0192                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0198                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019C                     	;# 
   202  020C                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  020E                     	;# 
   206  020F                     	;# 
   207  020F                     	;# 
   208  0210                     	;# 
   209  0210                     	;# 
   210  0211                     	;# 
   211  0211                     	;# 
   212  0212                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  0218                     	;# 
   223  0218                     	;# 
   224  0219                     	;# 
   225  021A                     	;# 
   226  021B                     	;# 
   227  021B                     	;# 
   228  021C                     	;# 
   229  021C                     	;# 
   230  021D                     	;# 
   231  021D                     	;# 
   232  021E                     	;# 
   233  021F                     	;# 
   234  028C                     	;# 
   235  028C                     	;# 
   236  028D                     	;# 
   237  028D                     	;# 
   238  028E                     	;# 
   239  028F                     	;# 
   240  0290                     	;# 
   241  0290                     	;# 
   242  0291                     	;# 
   243  0292                     	;# 
   244  0292                     	;# 
   245  0293                     	;# 
   246  0293                     	;# 
   247  0294                     	;# 
   248  0295                     	;# 
   249  0296                     	;# 
   250  0296                     	;# 
   251  0297                     	;# 
   252  0298                     	;# 
   253  0298                     	;# 
   254  0299                     	;# 
   255  0299                     	;# 
   256  029A                     	;# 
   257  029B                     	;# 
   258  029C                     	;# 
   259  029C                     	;# 
   260  029D                     	;# 
   261  030C                     	;# 
   262  030C                     	;# 
   263  030D                     	;# 
   264  030E                     	;# 
   265  030F                     	;# 
   266  0310                     	;# 
   267  0310                     	;# 
   268  0311                     	;# 
   269  0312                     	;# 
   270  0313                     	;# 
   271  0314                     	;# 
   272  0314                     	;# 
   273  0315                     	;# 
   274  0316                     	;# 
   275  0317                     	;# 
   276  0318                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031A                     	;# 
   280  031B                     	;# 
   281  031C                     	;# 
   282  031C                     	;# 
   283  031D                     	;# 
   284  031E                     	;# 
   285  031F                     	;# 
   286  038C                     	;# 
   287  038D                     	;# 
   288  038E                     	;# 
   289  0390                     	;# 
   290  0391                     	;# 
   291  0392                     	;# 
   292  040C                     	;# 
   293  040D                     	;# 
   294  040E                     	;# 
   295  040F                     	;# 
   296  0410                     	;# 
   297  0411                     	;# 
   298  0416                     	;# 
   299  0416                     	;# 
   300  0417                     	;# 
   301  0418                     	;# 
   302  0418                     	;# 
   303  0419                     	;# 
   304  041A                     	;# 
   305  041A                     	;# 
   306  041B                     	;# 
   307  041C                     	;# 
   308  041C                     	;# 
   309  041D                     	;# 
   310  041E                     	;# 
   311  041F                     	;# 
   312  048C                     	;# 
   313  048C                     	;# 
   314  048D                     	;# 
   315  048E                     	;# 
   316  048F                     	;# 
   317  048F                     	;# 
   318  0490                     	;# 
   319  0491                     	;# 
   320  0492                     	;# 
   321  0492                     	;# 
   322  0493                     	;# 
   323  0494                     	;# 
   324  0495                     	;# 
   325  0495                     	;# 
   326  0496                     	;# 
   327  0497                     	;# 
   328  0498                     	;# 
   329  0499                     	;# 
   330  049A                     	;# 
   331  049B                     	;# 
   332  049C                     	;# 
   333  049D                     	;# 
   334  050C                     	;# 
   335  050C                     	;# 
   336  050D                     	;# 
   337  050E                     	;# 
   338  050F                     	;# 
   339  050F                     	;# 
   340  0510                     	;# 
   341  0511                     	;# 
   342  0512                     	;# 
   343  0512                     	;# 
   344  0513                     	;# 
   345  0514                     	;# 
   346  0515                     	;# 
   347  0515                     	;# 
   348  0516                     	;# 
   349  0517                     	;# 
   350  0518                     	;# 
   351  0519                     	;# 
   352  051A                     	;# 
   353  051B                     	;# 
   354  051C                     	;# 
   355  051D                     	;# 
   356  058C                     	;# 
   357  058C                     	;# 
   358  058D                     	;# 
   359  058E                     	;# 
   360  058F                     	;# 
   361  058F                     	;# 
   362  0590                     	;# 
   363  0591                     	;# 
   364  0592                     	;# 
   365  0593                     	;# 
   366  060C                     	;# 
   367  060D                     	;# 
   368  060E                     	;# 
   369  060F                     	;# 
   370  0610                     	;# 
   371  0611                     	;# 
   372  0612                     	;# 
   373  0613                     	;# 
   374  0614                     	;# 
   375  0616                     	;# 
   376  0617                     	;# 
   377  0618                     	;# 
   378  0619                     	;# 
   379  061A                     	;# 
   380  061B                     	;# 
   381  061C                     	;# 
   382  061D                     	;# 
   383  061E                     	;# 
   384  068C                     	;# 
   385  068D                     	;# 
   386  068E                     	;# 
   387  068F                     	;# 
   388  0690                     	;# 
   389  0691                     	;# 
   390  0692                     	;# 
   391  0693                     	;# 
   392  0694                     	;# 
   393  070C                     	;# 
   394  070D                     	;# 
   395  070E                     	;# 
   396  070F                     	;# 
   397  0710                     	;# 
   398  0711                     	;# 
   399  0712                     	;# 
   400  0713                     	;# 
   401  0714                     	;# 
   402  0716                     	;# 
   403  0717                     	;# 
   404  0718                     	;# 
   405  0719                     	;# 
   406  071A                     	;# 
   407  071B                     	;# 
   408  071C                     	;# 
   409  071D                     	;# 
   410  071E                     	;# 
   411  0796                     	;# 
   412  0797                     	;# 
   413  0798                     	;# 
   414  0799                     	;# 
   415  079A                     	;# 
   416  079B                     	;# 
   417  080C                     	;# 
   418  080D                     	;# 
   419  080E                     	;# 
   420  080F                     	;# 
   421  0810                     	;# 
   422  0811                     	;# 
   423  0812                     	;# 
   424  0813                     	;# 
   425  0814                     	;# 
   426  081A                     	;# 
   427  081B                     	;# 
   428  081C                     	;# 
   429  081D                     	;# 
   430  081E                     	;# 
   431  081F                     	;# 
   432  088C                     	;# 
   433  088D                     	;# 
   434  088E                     	;# 
   435  088F                     	;# 
   436  0890                     	;# 
   437  0891                     	;# 
   438  0892                     	;# 
   439  0893                     	;# 
   440  0895                     	;# 
   441  0896                     	;# 
   442  0897                     	;# 
   443  0898                     	;# 
   444  0899                     	;# 
   445  089A                     	;# 
   446  089B                     	;# 
   447  090C                     	;# 
   448  090E                     	;# 
   449  090F                     	;# 
   450  091F                     	;# 
   451  091F                     	;# 
   452  098F                     	;# 
   453  098F                     	;# 
   454  0990                     	;# 
   455  0991                     	;# 
   456  0992                     	;# 
   457  0993                     	;# 
   458  0994                     	;# 
   459  0995                     	;# 
   460  0996                     	;# 
   461  0997                     	;# 
   462  0E0F                     	;# 
   463  0E10                     	;# 
   464  0E11                     	;# 
   465  0E12                     	;# 
   466  0E13                     	;# 
   467  0E14                     	;# 
   468  0E15                     	;# 
   469  0E16                     	;# 
   470  0E17                     	;# 
   471  0E18                     	;# 
   472  0E19                     	;# 
   473  0E1A                     	;# 
   474  0E1B                     	;# 
   475  0E1C                     	;# 
   476  0E1D                     	;# 
   477  0E1E                     	;# 
   478  0E1F                     	;# 
   479  0E20                     	;# 
   480  0E21                     	;# 
   481  0E22                     	;# 
   482  0E23                     	;# 
   483  0E24                     	;# 
   484  0E25                     	;# 
   485  0E26                     	;# 
   486  0E27                     	;# 
   487  0E28                     	;# 
   488  0E29                     	;# 
   489  0E2A                     	;# 
   490  0E2B                     	;# 
   491  0E2C                     	;# 
   492  0E2D                     	;# 
   493  0E2E                     	;# 
   494  0E2F                     	;# 
   495  0E30                     	;# 
   496  0E31                     	;# 
   497  0E32                     	;# 
   498  0E33                     	;# 
   499  0E34                     	;# 
   500  0E35                     	;# 
   501  0E36                     	;# 
   502  0E37                     	;# 
   503  0E8F                     	;# 
   504  0E90                     	;# 
   505  0E91                     	;# 
   506  0E92                     	;# 
   507  0E93                     	;# 
   508  0E94                     	;# 
   509  0E95                     	;# 
   510  0E96                     	;# 
   511  0E97                     	;# 
   512  0E9C                     	;# 
   513  0E9D                     	;# 
   514  0E9E                     	;# 
   515  0EA1                     	;# 
   516  0EA2                     	;# 
   517  0EA3                     	;# 
   518  0EA4                     	;# 
   519  0EA5                     	;# 
   520  0EA9                     	;# 
   521  0EAA                     	;# 
   522  0EAB                     	;# 
   523  0EAC                     	;# 
   524  0EB1                     	;# 
   525  0EB2                     	;# 
   526  0EB3                     	;# 
   527  0EB8                     	;# 
   528  0EB9                     	;# 
   529  0EBA                     	;# 
   530  0EBB                     	;# 
   531  0EBC                     	;# 
   532  0EBD                     	;# 
   533  0EBE                     	;# 
   534  0EC3                     	;# 
   535  0EC5                     	;# 
   536  0EC6                     	;# 
   537  0EC7                     	;# 
   538  0EC8                     	;# 
   539  0EC9                     	;# 
   540  0ECA                     	;# 
   541  0ECB                     	;# 
   542  0ECC                     	;# 
   543  0F10                     	;# 
   544  0F11                     	;# 
   545  0F12                     	;# 
   546  0F13                     	;# 
   547  0F14                     	;# 
   548  0F15                     	;# 
   549  0F16                     	;# 
   550  0F17                     	;# 
   551  0F18                     	;# 
   552  0F19                     	;# 
   553  0F1A                     	;# 
   554  0F1B                     	;# 
   555  0F1C                     	;# 
   556  0F1D                     	;# 
   557  0F1E                     	;# 
   558  0F1F                     	;# 
   559  0F20                     	;# 
   560  0F21                     	;# 
   561  0F22                     	;# 
   562  0F23                     	;# 
   563  0F24                     	;# 
   564  0F25                     	;# 
   565  0F26                     	;# 
   566  0F27                     	;# 
   567  0F38                     	;# 
   568  0F39                     	;# 
   569  0F3A                     	;# 
   570  0F3B                     	;# 
   571  0F3C                     	;# 
   572  0F3D                     	;# 
   573  0F3E                     	;# 
   574  0F3F                     	;# 
   575  0F40                     	;# 
   576  0F41                     	;# 
   577  0F43                     	;# 
   578  0F44                     	;# 
   579  0F45                     	;# 
   580  0F46                     	;# 
   581  0F47                     	;# 
   582  0F48                     	;# 
   583  0F49                     	;# 
   584  0F4A                     	;# 
   585  0F4B                     	;# 
   586  0F4C                     	;# 
   587  0F4E                     	;# 
   588  0F4F                     	;# 
   589  0F50                     	;# 
   590  0F51                     	;# 
   591  0F52                     	;# 
   592  0F53                     	;# 
   593  0F54                     	;# 
   594  0F55                     	;# 
   595  0F56                     	;# 
   596  0F57                     	;# 
   597  0F65                     	;# 
   598  0F68                     	;# 
   599  0F69                     	;# 
   600  0F6A                     	;# 
   601  0F6B                     	;# 
   602  0FE4                     	;# 
   603  0FE5                     	;# 
   604  0FE6                     	;# 
   605  0FE7                     	;# 
   606  0FE8                     	;# 
   607  0FE9                     	;# 
   608  0FEA                     	;# 
   609  0FEB                     	;# 
   610  0FED                     	;# 
   611  0FEE                     	;# 
   612  0FEF                     	;# 
   613  0000                     	;# 
   614  0001                     	;# 
   615  0002                     	;# 
   616  0003                     	;# 
   617  0004                     	;# 
   618  0005                     	;# 
   619  0006                     	;# 
   620  0007                     	;# 
   621  0008                     	;# 
   622  0009                     	;# 
   623  000A                     	;# 
   624  000B                     	;# 
   625  000C                     	;# 
   626  000D                     	;# 
   627  000E                     	;# 
   628  0010                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0013                     	;# 
   632  0016                     	;# 
   633  0017                     	;# 
   634  0018                     	;# 
   635  001C                     	;# 
   636  001C                     	;# 
   637  001D                     	;# 
   638  001D                     	;# 
   639  001E                     	;# 
   640  001F                     	;# 
   641  008C                     	;# 
   642  008C                     	;# 
   643  008D                     	;# 
   644  008E                     	;# 
   645  008E                     	;# 
   646  008F                     	;# 
   647  0090                     	;# 
   648  0090                     	;# 
   649  0091                     	;# 
   650  0093                     	;# 
   651  0094                     	;# 
   652  0095                     	;# 
   653  0096                     	;# 
   654  0097                     	;# 
   655  0098                     	;# 
   656  0099                     	;# 
   657  009A                     	;# 
   658  009B                     	;# 
   659  009C                     	;# 
   660  009D                     	;# 
   661  009E                     	;# 
   662  010C                     	;# 
   663  010D                     	;# 
   664  010E                     	;# 
   665  010E                     	;# 
   666  010F                     	;# 
   667  0110                     	;# 
   668  0110                     	;# 
   669  0111                     	;# 
   670  0112                     	;# 
   671  0112                     	;# 
   672  0113                     	;# 
   673  0114                     	;# 
   674  0114                     	;# 
   675  0115                     	;# 
   676  0116                     	;# 
   677  0116                     	;# 
   678  0117                     	;# 
   679  0119                     	;# 
   680  0119                     	;# 
   681  0119                     	;# 
   682  011A                     	;# 
   683  011A                     	;# 
   684  011A                     	;# 
   685  011B                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011C                     	;# 
   691  011C                     	;# 
   692  011C                     	;# 
   693  011D                     	;# 
   694  011D                     	;# 
   695  011D                     	;# 
   696  011E                     	;# 
   697  011E                     	;# 
   698  011E                     	;# 
   699  011F                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  018C                     	;# 
   705  018D                     	;# 
   706  018E                     	;# 
   707  018F                     	;# 
   708  0190                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0196                     	;# 
   712  0197                     	;# 
   713  0198                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019B                     	;# 
   717  019C                     	;# 
   718  020C                     	;# 
   719  020C                     	;# 
   720  020D                     	;# 
   721  020E                     	;# 
   722  020F                     	;# 
   723  020F                     	;# 
   724  0210                     	;# 
   725  0210                     	;# 
   726  0211                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0216                     	;# 
   735  0216                     	;# 
   736  0217                     	;# 
   737  0217                     	;# 
   738  0218                     	;# 
   739  0218                     	;# 
   740  0219                     	;# 
   741  021A                     	;# 
   742  021B                     	;# 
   743  021B                     	;# 
   744  021C                     	;# 
   745  021C                     	;# 
   746  021D                     	;# 
   747  021D                     	;# 
   748  021E                     	;# 
   749  021F                     	;# 
   750  028C                     	;# 
   751  028C                     	;# 
   752  028D                     	;# 
   753  028D                     	;# 
   754  028E                     	;# 
   755  028F                     	;# 
   756  0290                     	;# 
   757  0290                     	;# 
   758  0291                     	;# 
   759  0292                     	;# 
   760  0292                     	;# 
   761  0293                     	;# 
   762  0293                     	;# 
   763  0294                     	;# 
   764  0295                     	;# 
   765  0296                     	;# 
   766  0296                     	;# 
   767  0297                     	;# 
   768  0298                     	;# 
   769  0298                     	;# 
   770  0299                     	;# 
   771  0299                     	;# 
   772  029A                     	;# 
   773  029B                     	;# 
   774  029C                     	;# 
   775  029C                     	;# 
   776  029D                     	;# 
   777  030C                     	;# 
   778  030C                     	;# 
   779  030D                     	;# 
   780  030E                     	;# 
   781  030F                     	;# 
   782  0310                     	;# 
   783  0310                     	;# 
   784  0311                     	;# 
   785  0312                     	;# 
   786  0313                     	;# 
   787  0314                     	;# 
   788  0314                     	;# 
   789  0315                     	;# 
   790  0316                     	;# 
   791  0317                     	;# 
   792  0318                     	;# 
   793  0318                     	;# 
   794  0319                     	;# 
   795  031A                     	;# 
   796  031B                     	;# 
   797  031C                     	;# 
   798  031C                     	;# 
   799  031D                     	;# 
   800  031E                     	;# 
   801  031F                     	;# 
   802  038C                     	;# 
   803  038D                     	;# 
   804  038E                     	;# 
   805  0390                     	;# 
   806  0391                     	;# 
   807  0392                     	;# 
   808  040C                     	;# 
   809  040D                     	;# 
   810  040E                     	;# 
   811  040F                     	;# 
   812  0410                     	;# 
   813  0411                     	;# 
   814  0416                     	;# 
   815  0416                     	;# 
   816  0417                     	;# 
   817  0418                     	;# 
   818  0418                     	;# 
   819  0419                     	;# 
   820  041A                     	;# 
   821  041A                     	;# 
   822  041B                     	;# 
   823  041C                     	;# 
   824  041C                     	;# 
   825  041D                     	;# 
   826  041E                     	;# 
   827  041F                     	;# 
   828  048C                     	;# 
   829  048C                     	;# 
   830  048D                     	;# 
   831  048E                     	;# 
   832  048F                     	;# 
   833  048F                     	;# 
   834  0490                     	;# 
   835  0491                     	;# 
   836  0492                     	;# 
   837  0492                     	;# 
   838  0493                     	;# 
   839  0494                     	;# 
   840  0495                     	;# 
   841  0495                     	;# 
   842  0496                     	;# 
   843  0497                     	;# 
   844  0498                     	;# 
   845  0499                     	;# 
   846  049A                     	;# 
   847  049B                     	;# 
   848  049C                     	;# 
   849  049D                     	;# 
   850  050C                     	;# 
   851  050C                     	;# 
   852  050D                     	;# 
   853  050E                     	;# 
   854  050F                     	;# 
   855  050F                     	;# 
   856  0510                     	;# 
   857  0511                     	;# 
   858  0512                     	;# 
   859  0512                     	;# 
   860  0513                     	;# 
   861  0514                     	;# 
   862  0515                     	;# 
   863  0515                     	;# 
   864  0516                     	;# 
   865  0517                     	;# 
   866  0518                     	;# 
   867  0519                     	;# 
   868  051A                     	;# 
   869  051B                     	;# 
   870  051C                     	;# 
   871  051D                     	;# 
   872  058C                     	;# 
   873  058C                     	;# 
   874  058D                     	;# 
   875  058E                     	;# 
   876  058F                     	;# 
   877  058F                     	;# 
   878  0590                     	;# 
   879  0591                     	;# 
   880  0592                     	;# 
   881  0593                     	;# 
   882  060C                     	;# 
   883  060D                     	;# 
   884  060E                     	;# 
   885  060F                     	;# 
   886  0610                     	;# 
   887  0611                     	;# 
   888  0612                     	;# 
   889  0613                     	;# 
   890  0614                     	;# 
   891  0616                     	;# 
   892  0617                     	;# 
   893  0618                     	;# 
   894  0619                     	;# 
   895  061A                     	;# 
   896  061B                     	;# 
   897  061C                     	;# 
   898  061D                     	;# 
   899  061E                     	;# 
   900  068C                     	;# 
   901  068D                     	;# 
   902  068E                     	;# 
   903  068F                     	;# 
   904  0690                     	;# 
   905  0691                     	;# 
   906  0692                     	;# 
   907  0693                     	;# 
   908  0694                     	;# 
   909  070C                     	;# 
   910  070D                     	;# 
   911  070E                     	;# 
   912  070F                     	;# 
   913  0710                     	;# 
   914  0711                     	;# 
   915  0712                     	;# 
   916  0713                     	;# 
   917  0714                     	;# 
   918  0716                     	;# 
   919  0717                     	;# 
   920  0718                     	;# 
   921  0719                     	;# 
   922  071A                     	;# 
   923  071B                     	;# 
   924  071C                     	;# 
   925  071D                     	;# 
   926  071E                     	;# 
   927  0796                     	;# 
   928  0797                     	;# 
   929  0798                     	;# 
   930  0799                     	;# 
   931  079A                     	;# 
   932  079B                     	;# 
   933  080C                     	;# 
   934  080D                     	;# 
   935  080E                     	;# 
   936  080F                     	;# 
   937  0810                     	;# 
   938  0811                     	;# 
   939  0812                     	;# 
   940  0813                     	;# 
   941  0814                     	;# 
   942  081A                     	;# 
   943  081B                     	;# 
   944  081C                     	;# 
   945  081D                     	;# 
   946  081E                     	;# 
   947  081F                     	;# 
   948  088C                     	;# 
   949  088D                     	;# 
   950  088E                     	;# 
   951  088F                     	;# 
   952  0890                     	;# 
   953  0891                     	;# 
   954  0892                     	;# 
   955  0893                     	;# 
   956  0895                     	;# 
   957  0896                     	;# 
   958  0897                     	;# 
   959  0898                     	;# 
   960  0899                     	;# 
   961  089A                     	;# 
   962  089B                     	;# 
   963  090C                     	;# 
   964  090E                     	;# 
   965  090F                     	;# 
   966  091F                     	;# 
   967  091F                     	;# 
   968  098F                     	;# 
   969  098F                     	;# 
   970  0990                     	;# 
   971  0991                     	;# 
   972  0992                     	;# 
   973  0993                     	;# 
   974  0994                     	;# 
   975  0995                     	;# 
   976  0996                     	;# 
   977  0997                     	;# 
   978  0E0F                     	;# 
   979  0E10                     	;# 
   980  0E11                     	;# 
   981  0E12                     	;# 
   982  0E13                     	;# 
   983  0E14                     	;# 
   984  0E15                     	;# 
   985  0E16                     	;# 
   986  0E17                     	;# 
   987  0E18                     	;# 
   988  0E19                     	;# 
   989  0E1A                     	;# 
   990  0E1B                     	;# 
   991  0E1C                     	;# 
   992  0E1D                     	;# 
   993  0E1E                     	;# 
   994  0E1F                     	;# 
   995  0E20                     	;# 
   996  0E21                     	;# 
   997  0E22                     	;# 
   998  0E23                     	;# 
   999  0E24                     	;# 
  1000  0E25                     	;# 
  1001  0E26                     	;# 
  1002  0E27                     	;# 
  1003  0E28                     	;# 
  1004  0E29                     	;# 
  1005  0E2A                     	;# 
  1006  0E2B                     	;# 
  1007  0E2C                     	;# 
  1008  0E2D                     	;# 
  1009  0E2E                     	;# 
  1010  0E2F                     	;# 
  1011  0E30                     	;# 
  1012  0E31                     	;# 
  1013  0E32                     	;# 
  1014  0E33                     	;# 
  1015  0E34                     	;# 
  1016  0E35                     	;# 
  1017  0E36                     	;# 
  1018  0E37                     	;# 
  1019  0E8F                     	;# 
  1020  0E90                     	;# 
  1021  0E91                     	;# 
  1022  0E92                     	;# 
  1023  0E93                     	;# 
  1024  0E94                     	;# 
  1025  0E95                     	;# 
  1026  0E96                     	;# 
  1027  0E97                     	;# 
  1028  0E9C                     	;# 
  1029  0E9D                     	;# 
  1030  0E9E                     	;# 
  1031  0EA1                     	;# 
  1032  0EA2                     	;# 
  1033  0EA3                     	;# 
  1034  0EA4                     	;# 
  1035  0EA5                     	;# 
  1036  0EA9                     	;# 
  1037  0EAA                     	;# 
  1038  0EAB                     	;# 
  1039  0EAC                     	;# 
  1040  0EB1                     	;# 
  1041  0EB2                     	;# 
  1042  0EB3                     	;# 
  1043  0EB8                     	;# 
  1044  0EB9                     	;# 
  1045  0EBA                     	;# 
  1046  0EBB                     	;# 
  1047  0EBC                     	;# 
  1048  0EBD                     	;# 
  1049  0EBE                     	;# 
  1050  0EC3                     	;# 
  1051  0EC5                     	;# 
  1052  0EC6                     	;# 
  1053  0EC7                     	;# 
  1054  0EC8                     	;# 
  1055  0EC9                     	;# 
  1056  0ECA                     	;# 
  1057  0ECB                     	;# 
  1058  0ECC                     	;# 
  1059  0F10                     	;# 
  1060  0F11                     	;# 
  1061  0F12                     	;# 
  1062  0F13                     	;# 
  1063  0F14                     	;# 
  1064  0F15                     	;# 
  1065  0F16                     	;# 
  1066  0F17                     	;# 
  1067  0F18                     	;# 
  1068  0F19                     	;# 
  1069  0F1A                     	;# 
  1070  0F1B                     	;# 
  1071  0F1C                     	;# 
  1072  0F1D                     	;# 
  1073  0F1E                     	;# 
  1074  0F1F                     	;# 
  1075  0F20                     	;# 
  1076  0F21                     	;# 
  1077  0F22                     	;# 
  1078  0F23                     	;# 
  1079  0F24                     	;# 
  1080  0F25                     	;# 
  1081  0F26                     	;# 
  1082  0F27                     	;# 
  1083  0F38                     	;# 
  1084  0F39                     	;# 
  1085  0F3A                     	;# 
  1086  0F3B                     	;# 
  1087  0F3C                     	;# 
  1088  0F3D                     	;# 
  1089  0F3E                     	;# 
  1090  0F3F                     	;# 
  1091  0F40                     	;# 
  1092  0F41                     	;# 
  1093  0F43                     	;# 
  1094  0F44                     	;# 
  1095  0F45                     	;# 
  1096  0F46                     	;# 
  1097  0F47                     	;# 
  1098  0F48                     	;# 
  1099  0F49                     	;# 
  1100  0F4A                     	;# 
  1101  0F4B                     	;# 
  1102  0F4C                     	;# 
  1103  0F4E                     	;# 
  1104  0F4F                     	;# 
  1105  0F50                     	;# 
  1106  0F51                     	;# 
  1107  0F52                     	;# 
  1108  0F53                     	;# 
  1109  0F54                     	;# 
  1110  0F55                     	;# 
  1111  0F56                     	;# 
  1112  0F57                     	;# 
  1113  0F65                     	;# 
  1114  0F68                     	;# 
  1115  0F69                     	;# 
  1116  0F6A                     	;# 
  1117  0F6B                     	;# 
  1118  0FE4                     	;# 
  1119  0FE5                     	;# 
  1120  0FE6                     	;# 
  1121  0FE7                     	;# 
  1122  0FE8                     	;# 
  1123  0FE9                     	;# 
  1124  0FEA                     	;# 
  1125  0FEB                     	;# 
  1126  0FED                     	;# 
  1127  0FEE                     	;# 
  1128  0FEF                     	;# 
  1129  0000                     	;# 
  1130  0001                     	;# 
  1131  0002                     	;# 
  1132  0003                     	;# 
  1133  0004                     	;# 
  1134  0005                     	;# 
  1135  0006                     	;# 
  1136  0007                     	;# 
  1137  0008                     	;# 
  1138  0009                     	;# 
  1139  000A                     	;# 
  1140  000B                     	;# 
  1141  000C                     	;# 
  1142  000D                     	;# 
  1143  000E                     	;# 
  1144  0010                     	;# 
  1145  0011                     	;# 
  1146  0012                     	;# 
  1147  0013                     	;# 
  1148  0016                     	;# 
  1149  0017                     	;# 
  1150  0018                     	;# 
  1151  001C                     	;# 
  1152  001C                     	;# 
  1153  001D                     	;# 
  1154  001D                     	;# 
  1155  001E                     	;# 
  1156  001F                     	;# 
  1157  008C                     	;# 
  1158  008C                     	;# 
  1159  008D                     	;# 
  1160  008E                     	;# 
  1161  008E                     	;# 
  1162  008F                     	;# 
  1163  0090                     	;# 
  1164  0090                     	;# 
  1165  0091                     	;# 
  1166  0093                     	;# 
  1167  0094                     	;# 
  1168  0095                     	;# 
  1169  0096                     	;# 
  1170  0097                     	;# 
  1171  0098                     	;# 
  1172  0099                     	;# 
  1173  009A                     	;# 
  1174  009B                     	;# 
  1175  009C                     	;# 
  1176  009D                     	;# 
  1177  009E                     	;# 
  1178  010C                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  010E                     	;# 
  1182  010F                     	;# 
  1183  0110                     	;# 
  1184  0110                     	;# 
  1185  0111                     	;# 
  1186  0112                     	;# 
  1187  0112                     	;# 
  1188  0113                     	;# 
  1189  0114                     	;# 
  1190  0114                     	;# 
  1191  0115                     	;# 
  1192  0116                     	;# 
  1193  0116                     	;# 
  1194  0117                     	;# 
  1195  0119                     	;# 
  1196  0119                     	;# 
  1197  0119                     	;# 
  1198  011A                     	;# 
  1199  011A                     	;# 
  1200  011A                     	;# 
  1201  011B                     	;# 
  1202  011B                     	;# 
  1203  011B                     	;# 
  1204  011B                     	;# 
  1205  011B                     	;# 
  1206  011C                     	;# 
  1207  011C                     	;# 
  1208  011C                     	;# 
  1209  011D                     	;# 
  1210  011D                     	;# 
  1211  011D                     	;# 
  1212  011E                     	;# 
  1213  011E                     	;# 
  1214  011E                     	;# 
  1215  011F                     	;# 
  1216  011F                     	;# 
  1217  011F                     	;# 
  1218  011F                     	;# 
  1219  011F                     	;# 
  1220  018C                     	;# 
  1221  018D                     	;# 
  1222  018E                     	;# 
  1223  018F                     	;# 
  1224  0190                     	;# 
  1225  0191                     	;# 
  1226  0192                     	;# 
  1227  0196                     	;# 
  1228  0197                     	;# 
  1229  0198                     	;# 
  1230  0199                     	;# 
  1231  019A                     	;# 
  1232  019B                     	;# 
  1233  019C                     	;# 
  1234  020C                     	;# 
  1235  020C                     	;# 
  1236  020D                     	;# 
  1237  020E                     	;# 
  1238  020F                     	;# 
  1239  020F                     	;# 
  1240  0210                     	;# 
  1241  0210                     	;# 
  1242  0211                     	;# 
  1243  0211                     	;# 
  1244  0212                     	;# 
  1245  0212                     	;# 
  1246  0213                     	;# 
  1247  0214                     	;# 
  1248  0215                     	;# 
  1249  0215                     	;# 
  1250  0216                     	;# 
  1251  0216                     	;# 
  1252  0217                     	;# 
  1253  0217                     	;# 
  1254  0218                     	;# 
  1255  0218                     	;# 
  1256  0219                     	;# 
  1257  021A                     	;# 
  1258  021B                     	;# 
  1259  021B                     	;# 
  1260  021C                     	;# 
  1261  021C                     	;# 
  1262  021D                     	;# 
  1263  021D                     	;# 
  1264  021E                     	;# 
  1265  021F                     	;# 
  1266  028C                     	;# 
  1267  028C                     	;# 
  1268  028D                     	;# 
  1269  028D                     	;# 
  1270  028E                     	;# 
  1271  028F                     	;# 
  1272  0290                     	;# 
  1273  0290                     	;# 
  1274  0291                     	;# 
  1275  0292                     	;# 
  1276  0292                     	;# 
  1277  0293                     	;# 
  1278  0293                     	;# 
  1279  0294                     	;# 
  1280  0295                     	;# 
  1281  0296                     	;# 
  1282  0296                     	;# 
  1283  0297                     	;# 
  1284  0298                     	;# 
  1285  0298                     	;# 
  1286  0299                     	;# 
  1287  0299                     	;# 
  1288  029A                     	;# 
  1289  029B                     	;# 
  1290  029C                     	;# 
  1291  029C                     	;# 
  1292  029D                     	;# 
  1293  030C                     	;# 
  1294  030C                     	;# 
  1295  030D                     	;# 
  1296  030E                     	;# 
  1297  030F                     	;# 
  1298  0310                     	;# 
  1299  0310                     	;# 
  1300  0311                     	;# 
  1301  0312                     	;# 
  1302  0313                     	;# 
  1303  0314                     	;# 
  1304  0314                     	;# 
  1305  0315                     	;# 
  1306  0316                     	;# 
  1307  0317                     	;# 
  1308  0318                     	;# 
  1309  0318                     	;# 
  1310  0319                     	;# 
  1311  031A                     	;# 
  1312  031B                     	;# 
  1313  031C                     	;# 
  1314  031C                     	;# 
  1315  031D                     	;# 
  1316  031E                     	;# 
  1317  031F                     	;# 
  1318  038C                     	;# 
  1319  038D                     	;# 
  1320  038E                     	;# 
  1321  0390                     	;# 
  1322  0391                     	;# 
  1323  0392                     	;# 
  1324  040C                     	;# 
  1325  040D                     	;# 
  1326  040E                     	;# 
  1327  040F                     	;# 
  1328  0410                     	;# 
  1329  0411                     	;# 
  1330  0416                     	;# 
  1331  0416                     	;# 
  1332  0417                     	;# 
  1333  0418                     	;# 
  1334  0418                     	;# 
  1335  0419                     	;# 
  1336  041A                     	;# 
  1337  041A                     	;# 
  1338  041B                     	;# 
  1339  041C                     	;# 
  1340  041C                     	;# 
  1341  041D                     	;# 
  1342  041E                     	;# 
  1343  041F                     	;# 
  1344  048C                     	;# 
  1345  048C                     	;# 
  1346  048D                     	;# 
  1347  048E                     	;# 
  1348  048F                     	;# 
  1349  048F                     	;# 
  1350  0490                     	;# 
  1351  0491                     	;# 
  1352  0492                     	;# 
  1353  0492                     	;# 
  1354  0493                     	;# 
  1355  0494                     	;# 
  1356  0495                     	;# 
  1357  0495                     	;# 
  1358  0496                     	;# 
  1359  0497                     	;# 
  1360  0498                     	;# 
  1361  0499                     	;# 
  1362  049A                     	;# 
  1363  049B                     	;# 
  1364  049C                     	;# 
  1365  049D                     	;# 
  1366  050C                     	;# 
  1367  050C                     	;# 
  1368  050D                     	;# 
  1369  050E                     	;# 
  1370  050F                     	;# 
  1371  050F                     	;# 
  1372  0510                     	;# 
  1373  0511                     	;# 
  1374  0512                     	;# 
  1375  0512                     	;# 
  1376  0513                     	;# 
  1377  0514                     	;# 
  1378  0515                     	;# 
  1379  0515                     	;# 
  1380  0516                     	;# 
  1381  0517                     	;# 
  1382  0518                     	;# 
  1383  0519                     	;# 
  1384  051A                     	;# 
  1385  051B                     	;# 
  1386  051C                     	;# 
  1387  051D                     	;# 
  1388  058C                     	;# 
  1389  058C                     	;# 
  1390  058D                     	;# 
  1391  058E                     	;# 
  1392  058F                     	;# 
  1393  058F                     	;# 
  1394  0590                     	;# 
  1395  0591                     	;# 
  1396  0592                     	;# 
  1397  0593                     	;# 
  1398  060C                     	;# 
  1399  060D                     	;# 
  1400  060E                     	;# 
  1401  060F                     	;# 
  1402  0610                     	;# 
  1403  0611                     	;# 
  1404  0612                     	;# 
  1405  0613                     	;# 
  1406  0614                     	;# 
  1407  0616                     	;# 
  1408  0617                     	;# 
  1409  0618                     	;# 
  1410  0619                     	;# 
  1411  061A                     	;# 
  1412  061B                     	;# 
  1413  061C                     	;# 
  1414  061D                     	;# 
  1415  061E                     	;# 
  1416  068C                     	;# 
  1417  068D                     	;# 
  1418  068E                     	;# 
  1419  068F                     	;# 
  1420  0690                     	;# 
  1421  0691                     	;# 
  1422  0692                     	;# 
  1423  0693                     	;# 
  1424  0694                     	;# 
  1425  070C                     	;# 
  1426  070D                     	;# 
  1427  070E                     	;# 
  1428  070F                     	;# 
  1429  0710                     	;# 
  1430  0711                     	;# 
  1431  0712                     	;# 
  1432  0713                     	;# 
  1433  0714                     	;# 
  1434  0716                     	;# 
  1435  0717                     	;# 
  1436  0718                     	;# 
  1437  0719                     	;# 
  1438  071A                     	;# 
  1439  071B                     	;# 
  1440  071C                     	;# 
  1441  071D                     	;# 
  1442  071E                     	;# 
  1443  0796                     	;# 
  1444  0797                     	;# 
  1445  0798                     	;# 
  1446  0799                     	;# 
  1447  079A                     	;# 
  1448  079B                     	;# 
  1449  080C                     	;# 
  1450  080D                     	;# 
  1451  080E                     	;# 
  1452  080F                     	;# 
  1453  0810                     	;# 
  1454  0811                     	;# 
  1455  0812                     	;# 
  1456  0813                     	;# 
  1457  0814                     	;# 
  1458  081A                     	;# 
  1459  081B                     	;# 
  1460  081C                     	;# 
  1461  081D                     	;# 
  1462  081E                     	;# 
  1463  081F                     	;# 
  1464  088C                     	;# 
  1465  088D                     	;# 
  1466  088E                     	;# 
  1467  088F                     	;# 
  1468  0890                     	;# 
  1469  0891                     	;# 
  1470  0892                     	;# 
  1471  0893                     	;# 
  1472  0895                     	;# 
  1473  0896                     	;# 
  1474  0897                     	;# 
  1475  0898                     	;# 
  1476  0899                     	;# 
  1477  089A                     	;# 
  1478  089B                     	;# 
  1479  090C                     	;# 
  1480  090E                     	;# 
  1481  090F                     	;# 
  1482  091F                     	;# 
  1483  091F                     	;# 
  1484  098F                     	;# 
  1485  098F                     	;# 
  1486  0990                     	;# 
  1487  0991                     	;# 
  1488  0992                     	;# 
  1489  0993                     	;# 
  1490  0994                     	;# 
  1491  0995                     	;# 
  1492  0996                     	;# 
  1493  0997                     	;# 
  1494  0E0F                     	;# 
  1495  0E10                     	;# 
  1496  0E11                     	;# 
  1497  0E12                     	;# 
  1498  0E13                     	;# 
  1499  0E14                     	;# 
  1500  0E15                     	;# 
  1501  0E16                     	;# 
  1502  0E17                     	;# 
  1503  0E18                     	;# 
  1504  0E19                     	;# 
  1505  0E1A                     	;# 
  1506  0E1B                     	;# 
  1507  0E1C                     	;# 
  1508  0E1D                     	;# 
  1509  0E1E                     	;# 
  1510  0E1F                     	;# 
  1511  0E20                     	;# 
  1512  0E21                     	;# 
  1513  0E22                     	;# 
  1514  0E23                     	;# 
  1515  0E24                     	;# 
  1516  0E25                     	;# 
  1517  0E26                     	;# 
  1518  0E27                     	;# 
  1519  0E28                     	;# 
  1520  0E29                     	;# 
  1521  0E2A                     	;# 
  1522  0E2B                     	;# 
  1523  0E2C                     	;# 
  1524  0E2D                     	;# 
  1525  0E2E                     	;# 
  1526  0E2F                     	;# 
  1527  0E30                     	;# 
  1528  0E31                     	;# 
  1529  0E32                     	;# 
  1530  0E33                     	;# 
  1531  0E34                     	;# 
  1532  0E35                     	;# 
  1533  0E36                     	;# 
  1534  0E37                     	;# 
  1535  0E8F                     	;# 
  1536  0E90                     	;# 
  1537  0E91                     	;# 
  1538  0E92                     	;# 
  1539  0E93                     	;# 
  1540  0E94                     	;# 
  1541  0E95                     	;# 
  1542  0E96                     	;# 
  1543  0E97                     	;# 
  1544  0E9C                     	;# 
  1545  0E9D                     	;# 
  1546  0E9E                     	;# 
  1547  0EA1                     	;# 
  1548  0EA2                     	;# 
  1549  0EA3                     	;# 
  1550  0EA4                     	;# 
  1551  0EA5                     	;# 
  1552  0EA9                     	;# 
  1553  0EAA                     	;# 
  1554  0EAB                     	;# 
  1555  0EAC                     	;# 
  1556  0EB1                     	;# 
  1557  0EB2                     	;# 
  1558  0EB3                     	;# 
  1559  0EB8                     	;# 
  1560  0EB9                     	;# 
  1561  0EBA                     	;# 
  1562  0EBB                     	;# 
  1563  0EBC                     	;# 
  1564  0EBD                     	;# 
  1565  0EBE                     	;# 
  1566  0EC3                     	;# 
  1567  0EC5                     	;# 
  1568  0EC6                     	;# 
  1569  0EC7                     	;# 
  1570  0EC8                     	;# 
  1571  0EC9                     	;# 
  1572  0ECA                     	;# 
  1573  0ECB                     	;# 
  1574  0ECC                     	;# 
  1575  0F10                     	;# 
  1576  0F11                     	;# 
  1577  0F12                     	;# 
  1578  0F13                     	;# 
  1579  0F14                     	;# 
  1580  0F15                     	;# 
  1581  0F16                     	;# 
  1582  0F17                     	;# 
  1583  0F18                     	;# 
  1584  0F19                     	;# 
  1585  0F1A                     	;# 
  1586  0F1B                     	;# 
  1587  0F1C                     	;# 
  1588  0F1D                     	;# 
  1589  0F1E                     	;# 
  1590  0F1F                     	;# 
  1591  0F20                     	;# 
  1592  0F21                     	;# 
  1593  0F22                     	;# 
  1594  0F23                     	;# 
  1595  0F24                     	;# 
  1596  0F25                     	;# 
  1597  0F26                     	;# 
  1598  0F27                     	;# 
  1599  0F38                     	;# 
  1600  0F39                     	;# 
  1601  0F3A                     	;# 
  1602  0F3B                     	;# 
  1603  0F3C                     	;# 
  1604  0F3D                     	;# 
  1605  0F3E                     	;# 
  1606  0F3F                     	;# 
  1607  0F40                     	;# 
  1608  0F41                     	;# 
  1609  0F43                     	;# 
  1610  0F44                     	;# 
  1611  0F45                     	;# 
  1612  0F46                     	;# 
  1613  0F47                     	;# 
  1614  0F48                     	;# 
  1615  0F49                     	;# 
  1616  0F4A                     	;# 
  1617  0F4B                     	;# 
  1618  0F4C                     	;# 
  1619  0F4E                     	;# 
  1620  0F4F                     	;# 
  1621  0F50                     	;# 
  1622  0F51                     	;# 
  1623  0F52                     	;# 
  1624  0F53                     	;# 
  1625  0F54                     	;# 
  1626  0F55                     	;# 
  1627  0F56                     	;# 
  1628  0F57                     	;# 
  1629  0F65                     	;# 
  1630  0F68                     	;# 
  1631  0F69                     	;# 
  1632  0F6A                     	;# 
  1633  0F6B                     	;# 
  1634  0FE4                     	;# 
  1635  0FE5                     	;# 
  1636  0FE6                     	;# 
  1637  0FE7                     	;# 
  1638  0FE8                     	;# 
  1639  0FE9                     	;# 
  1640  0FEA                     	;# 
  1641  0FEB                     	;# 
  1642  0FED                     	;# 
  1643  0FEE                     	;# 
  1644  0FEF                     	;# 
  1645  0000                     	;# 
  1646  0001                     	;# 
  1647  0002                     	;# 
  1648  0003                     	;# 
  1649  0004                     	;# 
  1650  0005                     	;# 
  1651  0006                     	;# 
  1652  0007                     	;# 
  1653  0008                     	;# 
  1654  0009                     	;# 
  1655  000A                     	;# 
  1656  000B                     	;# 
  1657  000C                     	;# 
  1658  000D                     	;# 
  1659  000E                     	;# 
  1660  0010                     	;# 
  1661  0011                     	;# 
  1662  0012                     	;# 
  1663  0013                     	;# 
  1664  0016                     	;# 
  1665  0017                     	;# 
  1666  0018                     	;# 
  1667  001C                     	;# 
  1668  001C                     	;# 
  1669  001D                     	;# 
  1670  001D                     	;# 
  1671  001E                     	;# 
  1672  001F                     	;# 
  1673  008C                     	;# 
  1674  008C                     	;# 
  1675  008D                     	;# 
  1676  008E                     	;# 
  1677  008E                     	;# 
  1678  008F                     	;# 
  1679  0090                     	;# 
  1680  0090                     	;# 
  1681  0091                     	;# 
  1682  0093                     	;# 
  1683  0094                     	;# 
  1684  0095                     	;# 
  1685  0096                     	;# 
  1686  0097                     	;# 
  1687  0098                     	;# 
  1688  0099                     	;# 
  1689  009A                     	;# 
  1690  009B                     	;# 
  1691  009C                     	;# 
  1692  009D                     	;# 
  1693  009E                     	;# 
  1694  010C                     	;# 
  1695  010D                     	;# 
  1696  010E                     	;# 
  1697  010E                     	;# 
  1698  010F                     	;# 
  1699  0110                     	;# 
  1700  0110                     	;# 
  1701  0111                     	;# 
  1702  0112                     	;# 
  1703  0112                     	;# 
  1704  0113                     	;# 
  1705  0114                     	;# 
  1706  0114                     	;# 
  1707  0115                     	;# 
  1708  0116                     	;# 
  1709  0116                     	;# 
  1710  0117                     	;# 
  1711  0119                     	;# 
  1712  0119                     	;# 
  1713  0119                     	;# 
  1714  011A                     	;# 
  1715  011A                     	;# 
  1716  011A                     	;# 
  1717  011B                     	;# 
  1718  011B                     	;# 
  1719  011B                     	;# 
  1720  011B                     	;# 
  1721  011B                     	;# 
  1722  011C                     	;# 
  1723  011C                     	;# 
  1724  011C                     	;# 
  1725  011D                     	;# 
  1726  011D                     	;# 
  1727  011D                     	;# 
  1728  011E                     	;# 
  1729  011E                     	;# 
  1730  011E                     	;# 
  1731  011F                     	;# 
  1732  011F                     	;# 
  1733  011F                     	;# 
  1734  011F                     	;# 
  1735  011F                     	;# 
  1736  018C                     	;# 
  1737  018D                     	;# 
  1738  018E                     	;# 
  1739  018F                     	;# 
  1740  0190                     	;# 
  1741  0191                     	;# 
  1742  0192                     	;# 
  1743  0196                     	;# 
  1744  0197                     	;# 
  1745  0198                     	;# 
  1746  0199                     	;# 
  1747  019A                     	;# 
  1748  019B                     	;# 
  1749  019C                     	;# 
  1750  020C                     	;# 
  1751  020C                     	;# 
  1752  020D                     	;# 
  1753  020E                     	;# 
  1754  020F                     	;# 
  1755  020F                     	;# 
  1756  0210                     	;# 
  1757  0210                     	;# 
  1758  0211                     	;# 
  1759  0211                     	;# 
  1760  0212                     	;# 
  1761  0212                     	;# 
  1762  0213                     	;# 
  1763  0214                     	;# 
  1764  0215                     	;# 
  1765  0215                     	;# 
  1766  0216                     	;# 
  1767  0216                     	;# 
  1768  0217                     	;# 
  1769  0217                     	;# 
  1770  0218                     	;# 
  1771  0218                     	;# 
  1772  0219                     	;# 
  1773  021A                     	;# 
  1774  021B                     	;# 
  1775  021B                     	;# 
  1776  021C                     	;# 
  1777  021C                     	;# 
  1778  021D                     	;# 
  1779  021D                     	;# 
  1780  021E                     	;# 
  1781  021F                     	;# 
  1782  028C                     	;# 
  1783  028C                     	;# 
  1784  028D                     	;# 
  1785  028D                     	;# 
  1786  028E                     	;# 
  1787  028F                     	;# 
  1788  0290                     	;# 
  1789  0290                     	;# 
  1790  0291                     	;# 
  1791  0292                     	;# 
  1792  0292                     	;# 
  1793  0293                     	;# 
  1794  0293                     	;# 
  1795  0294                     	;# 
  1796  0295                     	;# 
  1797  0296                     	;# 
  1798  0296                     	;# 
  1799  0297                     	;# 
  1800  0298                     	;# 
  1801  0298                     	;# 
  1802  0299                     	;# 
  1803  0299                     	;# 
  1804  029A                     	;# 
  1805  029B                     	;# 
  1806  029C                     	;# 
  1807  029C                     	;# 
  1808  029D                     	;# 
  1809  030C                     	;# 
  1810  030C                     	;# 
  1811  030D                     	;# 
  1812  030E                     	;# 
  1813  030F                     	;# 
  1814  0310                     	;# 
  1815  0310                     	;# 
  1816  0311                     	;# 
  1817  0312                     	;# 
  1818  0313                     	;# 
  1819  0314                     	;# 
  1820  0314                     	;# 
  1821  0315                     	;# 
  1822  0316                     	;# 
  1823  0317                     	;# 
  1824  0318                     	;# 
  1825  0318                     	;# 
  1826  0319                     	;# 
  1827  031A                     	;# 
  1828  031B                     	;# 
  1829  031C                     	;# 
  1830  031C                     	;# 
  1831  031D                     	;# 
  1832  031E                     	;# 
  1833  031F                     	;# 
  1834  038C                     	;# 
  1835  038D                     	;# 
  1836  038E                     	;# 
  1837  0390                     	;# 
  1838  0391                     	;# 
  1839  0392                     	;# 
  1840  040C                     	;# 
  1841  040D                     	;# 
  1842  040E                     	;# 
  1843  040F                     	;# 
  1844  0410                     	;# 
  1845  0411                     	;# 
  1846  0416                     	;# 
  1847  0416                     	;# 
  1848  0417                     	;# 
  1849  0418                     	;# 
  1850  0418                     	;# 
  1851  0419                     	;# 
  1852  041A                     	;# 
  1853  041A                     	;# 
  1854  041B                     	;# 
  1855  041C                     	;# 
  1856  041C                     	;# 
  1857  041D                     	;# 
  1858  041E                     	;# 
  1859  041F                     	;# 
  1860  048C                     	;# 
  1861  048C                     	;# 
  1862  048D                     	;# 
  1863  048E                     	;# 
  1864  048F                     	;# 
  1865  048F                     	;# 
  1866  0490                     	;# 
  1867  0491                     	;# 
  1868  0492                     	;# 
  1869  0492                     	;# 
  1870  0493                     	;# 
  1871  0494                     	;# 
  1872  0495                     	;# 
  1873  0495                     	;# 
  1874  0496                     	;# 
  1875  0497                     	;# 
  1876  0498                     	;# 
  1877  0499                     	;# 
  1878  049A                     	;# 
  1879  049B                     	;# 
  1880  049C                     	;# 
  1881  049D                     	;# 
  1882  050C                     	;# 
  1883  050C                     	;# 
  1884  050D                     	;# 
  1885  050E                     	;# 
  1886  050F                     	;# 
  1887  050F                     	;# 
  1888  0510                     	;# 
  1889  0511                     	;# 
  1890  0512                     	;# 
  1891  0512                     	;# 
  1892  0513                     	;# 
  1893  0514                     	;# 
  1894  0515                     	;# 
  1895  0515                     	;# 
  1896  0516                     	;# 
  1897  0517                     	;# 
  1898  0518                     	;# 
  1899  0519                     	;# 
  1900  051A                     	;# 
  1901  051B                     	;# 
  1902  051C                     	;# 
  1903  051D                     	;# 
  1904  058C                     	;# 
  1905  058C                     	;# 
  1906  058D                     	;# 
  1907  058E                     	;# 
  1908  058F                     	;# 
  1909  058F                     	;# 
  1910  0590                     	;# 
  1911  0591                     	;# 
  1912  0592                     	;# 
  1913  0593                     	;# 
  1914  060C                     	;# 
  1915  060D                     	;# 
  1916  060E                     	;# 
  1917  060F                     	;# 
  1918  0610                     	;# 
  1919  0611                     	;# 
  1920  0612                     	;# 
  1921  0613                     	;# 
  1922  0614                     	;# 
  1923  0616                     	;# 
  1924  0617                     	;# 
  1925  0618                     	;# 
  1926  0619                     	;# 
  1927  061A                     	;# 
  1928  061B                     	;# 
  1929  061C                     	;# 
  1930  061D                     	;# 
  1931  061E                     	;# 
  1932  068C                     	;# 
  1933  068D                     	;# 
  1934  068E                     	;# 
  1935  068F                     	;# 
  1936  0690                     	;# 
  1937  0691                     	;# 
  1938  0692                     	;# 
  1939  0693                     	;# 
  1940  0694                     	;# 
  1941  070C                     	;# 
  1942  070D                     	;# 
  1943  070E                     	;# 
  1944  070F                     	;# 
  1945  0710                     	;# 
  1946  0711                     	;# 
  1947  0712                     	;# 
  1948  0713                     	;# 
  1949  0714                     	;# 
  1950  0716                     	;# 
  1951  0717                     	;# 
  1952  0718                     	;# 
  1953  0719                     	;# 
  1954  071A                     	;# 
  1955  071B                     	;# 
  1956  071C                     	;# 
  1957  071D                     	;# 
  1958  071E                     	;# 
  1959  0796                     	;# 
  1960  0797                     	;# 
  1961  0798                     	;# 
  1962  0799                     	;# 
  1963  079A                     	;# 
  1964  079B                     	;# 
  1965  080C                     	;# 
  1966  080D                     	;# 
  1967  080E                     	;# 
  1968  080F                     	;# 
  1969  0810                     	;# 
  1970  0811                     	;# 
  1971  0812                     	;# 
  1972  0813                     	;# 
  1973  0814                     	;# 
  1974  081A                     	;# 
  1975  081B                     	;# 
  1976  081C                     	;# 
  1977  081D                     	;# 
  1978  081E                     	;# 
  1979  081F                     	;# 
  1980  088C                     	;# 
  1981  088D                     	;# 
  1982  088E                     	;# 
  1983  088F                     	;# 
  1984  0890                     	;# 
  1985  0891                     	;# 
  1986  0892                     	;# 
  1987  0893                     	;# 
  1988  0895                     	;# 
  1989  0896                     	;# 
  1990  0897                     	;# 
  1991  0898                     	;# 
  1992  0899                     	;# 
  1993  089A                     	;# 
  1994  089B                     	;# 
  1995  090C                     	;# 
  1996  090E                     	;# 
  1997  090F                     	;# 
  1998  091F                     	;# 
  1999  091F                     	;# 
  2000  098F                     	;# 
  2001  098F                     	;# 
  2002  0990                     	;# 
  2003  0991                     	;# 
  2004  0992                     	;# 
  2005  0993                     	;# 
  2006  0994                     	;# 
  2007  0995                     	;# 
  2008  0996                     	;# 
  2009  0997                     	;# 
  2010  0E0F                     	;# 
  2011  0E10                     	;# 
  2012  0E11                     	;# 
  2013  0E12                     	;# 
  2014  0E13                     	;# 
  2015  0E14                     	;# 
  2016  0E15                     	;# 
  2017  0E16                     	;# 
  2018  0E17                     	;# 
  2019  0E18                     	;# 
  2020  0E19                     	;# 
  2021  0E1A                     	;# 
  2022  0E1B                     	;# 
  2023  0E1C                     	;# 
  2024  0E1D                     	;# 
  2025  0E1E                     	;# 
  2026  0E1F                     	;# 
  2027  0E20                     	;# 
  2028  0E21                     	;# 
  2029  0E22                     	;# 
  2030  0E23                     	;# 
  2031  0E24                     	;# 
  2032  0E25                     	;# 
  2033  0E26                     	;# 
  2034  0E27                     	;# 
  2035  0E28                     	;# 
  2036  0E29                     	;# 
  2037  0E2A                     	;# 
  2038  0E2B                     	;# 
  2039  0E2C                     	;# 
  2040  0E2D                     	;# 
  2041  0E2E                     	;# 
  2042  0E2F                     	;# 
  2043  0E30                     	;# 
  2044  0E31                     	;# 
  2045  0E32                     	;# 
  2046  0E33                     	;# 
  2047  0E34                     	;# 
  2048  0E35                     	;# 
  2049  0E36                     	;# 
  2050  0E37                     	;# 
  2051  0E8F                     	;# 
  2052  0E90                     	;# 
  2053  0E91                     	;# 
  2054  0E92                     	;# 
  2055  0E93                     	;# 
  2056  0E94                     	;# 
  2057  0E95                     	;# 
  2058  0E96                     	;# 
  2059  0E97                     	;# 
  2060  0E9C                     	;# 
  2061  0E9D                     	;# 
  2062  0E9E                     	;# 
  2063  0EA1                     	;# 
  2064  0EA2                     	;# 
  2065  0EA3                     	;# 
  2066  0EA4                     	;# 
  2067  0EA5                     	;# 
  2068  0EA9                     	;# 
  2069  0EAA                     	;# 
  2070  0EAB                     	;# 
  2071  0EAC                     	;# 
  2072  0EB1                     	;# 
  2073  0EB2                     	;# 
  2074  0EB3                     	;# 
  2075  0EB8                     	;# 
  2076  0EB9                     	;# 
  2077  0EBA                     	;# 
  2078  0EBB                     	;# 
  2079  0EBC                     	;# 
  2080  0EBD                     	;# 
  2081  0EBE                     	;# 
  2082  0EC3                     	;# 
  2083  0EC5                     	;# 
  2084  0EC6                     	;# 
  2085  0EC7                     	;# 
  2086  0EC8                     	;# 
  2087  0EC9                     	;# 
  2088  0ECA                     	;# 
  2089  0ECB                     	;# 
  2090  0ECC                     	;# 
  2091  0F10                     	;# 
  2092  0F11                     	;# 
  2093  0F12                     	;# 
  2094  0F13                     	;# 
  2095  0F14                     	;# 
  2096  0F15                     	;# 
  2097  0F16                     	;# 
  2098  0F17                     	;# 
  2099  0F18                     	;# 
  2100  0F19                     	;# 
  2101  0F1A                     	;# 
  2102  0F1B                     	;# 
  2103  0F1C                     	;# 
  2104  0F1D                     	;# 
  2105  0F1E                     	;# 
  2106  0F1F                     	;# 
  2107  0F20                     	;# 
  2108  0F21                     	;# 
  2109  0F22                     	;# 
  2110  0F23                     	;# 
  2111  0F24                     	;# 
  2112  0F25                     	;# 
  2113  0F26                     	;# 
  2114  0F27                     	;# 
  2115  0F38                     	;# 
  2116  0F39                     	;# 
  2117  0F3A                     	;# 
  2118  0F3B                     	;# 
  2119  0F3C                     	;# 
  2120  0F3D                     	;# 
  2121  0F3E                     	;# 
  2122  0F3F                     	;# 
  2123  0F40                     	;# 
  2124  0F41                     	;# 
  2125  0F43                     	;# 
  2126  0F44                     	;# 
  2127  0F45                     	;# 
  2128  0F46                     	;# 
  2129  0F47                     	;# 
  2130  0F48                     	;# 
  2131  0F49                     	;# 
  2132  0F4A                     	;# 
  2133  0F4B                     	;# 
  2134  0F4C                     	;# 
  2135  0F4E                     	;# 
  2136  0F4F                     	;# 
  2137  0F50                     	;# 
  2138  0F51                     	;# 
  2139  0F52                     	;# 
  2140  0F53                     	;# 
  2141  0F54                     	;# 
  2142  0F55                     	;# 
  2143  0F56                     	;# 
  2144  0F57                     	;# 
  2145  0F65                     	;# 
  2146  0F68                     	;# 
  2147  0F69                     	;# 
  2148  0F6A                     	;# 
  2149  0F6B                     	;# 
  2150  0FE4                     	;# 
  2151  0FE5                     	;# 
  2152  0FE6                     	;# 
  2153  0FE7                     	;# 
  2154  0FE8                     	;# 
  2155  0FE9                     	;# 
  2156  0FEA                     	;# 
  2157  0FEB                     	;# 
  2158  0FED                     	;# 
  2159  0FEE                     	;# 
  2160  0FEF                     	;# 
  2161  0000                     	;# 
  2162  0001                     	;# 
  2163  0002                     	;# 
  2164  0003                     	;# 
  2165  0004                     	;# 
  2166  0005                     	;# 
  2167  0006                     	;# 
  2168  0007                     	;# 
  2169  0008                     	;# 
  2170  0009                     	;# 
  2171  000A                     	;# 
  2172  000B                     	;# 
  2173  000C                     	;# 
  2174  000D                     	;# 
  2175  000E                     	;# 
  2176  0010                     	;# 
  2177  0011                     	;# 
  2178  0012                     	;# 
  2179  0013                     	;# 
  2180  0016                     	;# 
  2181  0017                     	;# 
  2182  0018                     	;# 
  2183  001C                     	;# 
  2184  001C                     	;# 
  2185  001D                     	;# 
  2186  001D                     	;# 
  2187  001E                     	;# 
  2188  001F                     	;# 
  2189  008C                     	;# 
  2190  008C                     	;# 
  2191  008D                     	;# 
  2192  008E                     	;# 
  2193  008E                     	;# 
  2194  008F                     	;# 
  2195  0090                     	;# 
  2196  0090                     	;# 
  2197  0091                     	;# 
  2198  0093                     	;# 
  2199  0094                     	;# 
  2200  0095                     	;# 
  2201  0096                     	;# 
  2202  0097                     	;# 
  2203  0098                     	;# 
  2204  0099                     	;# 
  2205  009A                     	;# 
  2206  009B                     	;# 
  2207  009C                     	;# 
  2208  009D                     	;# 
  2209  009E                     	;# 
  2210  010C                     	;# 
  2211  010D                     	;# 
  2212  010E                     	;# 
  2213  010E                     	;# 
  2214  010F                     	;# 
  2215  0110                     	;# 
  2216  0110                     	;# 
  2217  0111                     	;# 
  2218  0112                     	;# 
  2219  0112                     	;# 
  2220  0113                     	;# 
  2221  0114                     	;# 
  2222  0114                     	;# 
  2223  0115                     	;# 
  2224  0116                     	;# 
  2225  0116                     	;# 
  2226  0117                     	;# 
  2227  0119                     	;# 
  2228  0119                     	;# 
  2229  0119                     	;# 
  2230  011A                     	;# 
  2231  011A                     	;# 
  2232  011A                     	;# 
  2233  011B                     	;# 
  2234  011B                     	;# 
  2235  011B                     	;# 
  2236  011B                     	;# 
  2237  011B                     	;# 
  2238  011C                     	;# 
  2239  011C                     	;# 
  2240  011C                     	;# 
  2241  011D                     	;# 
  2242  011D                     	;# 
  2243  011D                     	;# 
  2244  011E                     	;# 
  2245  011E                     	;# 
  2246  011E                     	;# 
  2247  011F                     	;# 
  2248  011F                     	;# 
  2249  011F                     	;# 
  2250  011F                     	;# 
  2251  011F                     	;# 
  2252  018C                     	;# 
  2253  018D                     	;# 
  2254  018E                     	;# 
  2255  018F                     	;# 
  2256  0190                     	;# 
  2257  0191                     	;# 
  2258  0192                     	;# 
  2259  0196                     	;# 
  2260  0197                     	;# 
  2261  0198                     	;# 
  2262  0199                     	;# 
  2263  019A                     	;# 
  2264  019B                     	;# 
  2265  019C                     	;# 
  2266  020C                     	;# 
  2267  020C                     	;# 
  2268  020D                     	;# 
  2269  020E                     	;# 
  2270  020F                     	;# 
  2271  020F                     	;# 
  2272  0210                     	;# 
  2273  0210                     	;# 
  2274  0211                     	;# 
  2275  0211                     	;# 
  2276  0212                     	;# 
  2277  0212                     	;# 
  2278  0213                     	;# 
  2279  0214                     	;# 
  2280  0215                     	;# 
  2281  0215                     	;# 
  2282  0216                     	;# 
  2283  0216                     	;# 
  2284  0217                     	;# 
  2285  0217                     	;# 
  2286  0218                     	;# 
  2287  0218                     	;# 
  2288  0219                     	;# 
  2289  021A                     	;# 
  2290  021B                     	;# 
  2291  021B                     	;# 
  2292  021C                     	;# 
  2293  021C                     	;# 
  2294  021D                     	;# 
  2295  021D                     	;# 
  2296  021E                     	;# 
  2297  021F                     	;# 
  2298  028C                     	;# 
  2299  028C                     	;# 
  2300  028D                     	;# 
  2301  028D                     	;# 
  2302  028E                     	;# 
  2303  028F                     	;# 
  2304  0290                     	;# 
  2305  0290                     	;# 
  2306  0291                     	;# 
  2307  0292                     	;# 
  2308  0292                     	;# 
  2309  0293                     	;# 
  2310  0293                     	;# 
  2311  0294                     	;# 
  2312  0295                     	;# 
  2313  0296                     	;# 
  2314  0296                     	;# 
  2315  0297                     	;# 
  2316  0298                     	;# 
  2317  0298                     	;# 
  2318  0299                     	;# 
  2319  0299                     	;# 
  2320  029A                     	;# 
  2321  029B                     	;# 
  2322  029C                     	;# 
  2323  029C                     	;# 
  2324  029D                     	;# 
  2325  030C                     	;# 
  2326  030C                     	;# 
  2327  030D                     	;# 
  2328  030E                     	;# 
  2329  030F                     	;# 
  2330  0310                     	;# 
  2331  0310                     	;# 
  2332  0311                     	;# 
  2333  0312                     	;# 
  2334  0313                     	;# 
  2335  0314                     	;# 
  2336  0314                     	;# 
  2337  0315                     	;# 
  2338  0316                     	;# 
  2339  0317                     	;# 
  2340  0318                     	;# 
  2341  0318                     	;# 
  2342  0319                     	;# 
  2343  031A                     	;# 
  2344  031B                     	;# 
  2345  031C                     	;# 
  2346  031C                     	;# 
  2347  031D                     	;# 
  2348  031E                     	;# 
  2349  031F                     	;# 
  2350  038C                     	;# 
  2351  038D                     	;# 
  2352  038E                     	;# 
  2353  0390                     	;# 
  2354  0391                     	;# 
  2355  0392                     	;# 
  2356  040C                     	;# 
  2357  040D                     	;# 
  2358  040E                     	;# 
  2359  040F                     	;# 
  2360  0410                     	;# 
  2361  0411                     	;# 
  2362  0416                     	;# 
  2363  0416                     	;# 
  2364  0417                     	;# 
  2365  0418                     	;# 
  2366  0418                     	;# 
  2367  0419                     	;# 
  2368  041A                     	;# 
  2369  041A                     	;# 
  2370  041B                     	;# 
  2371  041C                     	;# 
  2372  041C                     	;# 
  2373  041D                     	;# 
  2374  041E                     	;# 
  2375  041F                     	;# 
  2376  048C                     	;# 
  2377  048C                     	;# 
  2378  048D                     	;# 
  2379  048E                     	;# 
  2380  048F                     	;# 
  2381  048F                     	;# 
  2382  0490                     	;# 
  2383  0491                     	;# 
  2384  0492                     	;# 
  2385  0492                     	;# 
  2386  0493                     	;# 
  2387  0494                     	;# 
  2388  0495                     	;# 
  2389  0495                     	;# 
  2390  0496                     	;# 
  2391  0497                     	;# 
  2392  0498                     	;# 
  2393  0499                     	;# 
  2394  049A                     	;# 
  2395  049B                     	;# 
  2396  049C                     	;# 
  2397  049D                     	;# 
  2398  050C                     	;# 
  2399  050C                     	;# 
  2400  050D                     	;# 
  2401  050E                     	;# 
  2402  050F                     	;# 
  2403  050F                     	;# 
  2404  0510                     	;# 
  2405  0511                     	;# 
  2406  0512                     	;# 
  2407  0512                     	;# 
  2408  0513                     	;# 
  2409  0514                     	;# 
  2410  0515                     	;# 
  2411  0515                     	;# 
  2412  0516                     	;# 
  2413  0517                     	;# 
  2414  0518                     	;# 
  2415  0519                     	;# 
  2416  051A                     	;# 
  2417  051B                     	;# 
  2418  051C                     	;# 
  2419  051D                     	;# 
  2420  058C                     	;# 
  2421  058C                     	;# 
  2422  058D                     	;# 
  2423  058E                     	;# 
  2424  058F                     	;# 
  2425  058F                     	;# 
  2426  0590                     	;# 
  2427  0591                     	;# 
  2428  0592                     	;# 
  2429  0593                     	;# 
  2430  060C                     	;# 
  2431  060D                     	;# 
  2432  060E                     	;# 
  2433  060F                     	;# 
  2434  0610                     	;# 
  2435  0611                     	;# 
  2436  0612                     	;# 
  2437  0613                     	;# 
  2438  0614                     	;# 
  2439  0616                     	;# 
  2440  0617                     	;# 
  2441  0618                     	;# 
  2442  0619                     	;# 
  2443  061A                     	;# 
  2444  061B                     	;# 
  2445  061C                     	;# 
  2446  061D                     	;# 
  2447  061E                     	;# 
  2448  068C                     	;# 
  2449  068D                     	;# 
  2450  068E                     	;# 
  2451  068F                     	;# 
  2452  0690                     	;# 
  2453  0691                     	;# 
  2454  0692                     	;# 
  2455  0693                     	;# 
  2456  0694                     	;# 
  2457  070C                     	;# 
  2458  070D                     	;# 
  2459  070E                     	;# 
  2460  070F                     	;# 
  2461  0710                     	;# 
  2462  0711                     	;# 
  2463  0712                     	;# 
  2464  0713                     	;# 
  2465  0714                     	;# 
  2466  0716                     	;# 
  2467  0717                     	;# 
  2468  0718                     	;# 
  2469  0719                     	;# 
  2470  071A                     	;# 
  2471  071B                     	;# 
  2472  071C                     	;# 
  2473  071D                     	;# 
  2474  071E                     	;# 
  2475  0796                     	;# 
  2476  0797                     	;# 
  2477  0798                     	;# 
  2478  0799                     	;# 
  2479  079A                     	;# 
  2480  079B                     	;# 
  2481  080C                     	;# 
  2482  080D                     	;# 
  2483  080E                     	;# 
  2484  080F                     	;# 
  2485  0810                     	;# 
  2486  0811                     	;# 
  2487  0812                     	;# 
  2488  0813                     	;# 
  2489  0814                     	;# 
  2490  081A                     	;# 
  2491  081B                     	;# 
  2492  081C                     	;# 
  2493  081D                     	;# 
  2494  081E                     	;# 
  2495  081F                     	;# 
  2496  088C                     	;# 
  2497  088D                     	;# 
  2498  088E                     	;# 
  2499  088F                     	;# 
  2500  0890                     	;# 
  2501  0891                     	;# 
  2502  0892                     	;# 
  2503  0893                     	;# 
  2504  0895                     	;# 
  2505  0896                     	;# 
  2506  0897                     	;# 
  2507  0898                     	;# 
  2508  0899                     	;# 
  2509  089A                     	;# 
  2510  089B                     	;# 
  2511  090C                     	;# 
  2512  090E                     	;# 
  2513  090F                     	;# 
  2514  091F                     	;# 
  2515  091F                     	;# 
  2516  098F                     	;# 
  2517  098F                     	;# 
  2518  0990                     	;# 
  2519  0991                     	;# 
  2520  0992                     	;# 
  2521  0993                     	;# 
  2522  0994                     	;# 
  2523  0995                     	;# 
  2524  0996                     	;# 
  2525  0997                     	;# 
  2526  0E0F                     	;# 
  2527  0E10                     	;# 
  2528  0E11                     	;# 
  2529  0E12                     	;# 
  2530  0E13                     	;# 
  2531  0E14                     	;# 
  2532  0E15                     	;# 
  2533  0E16                     	;# 
  2534  0E17                     	;# 
  2535  0E18                     	;# 
  2536  0E19                     	;# 
  2537  0E1A                     	;# 
  2538  0E1B                     	;# 
  2539  0E1C                     	;# 
  2540  0E1D                     	;# 
  2541  0E1E                     	;# 
  2542  0E1F                     	;# 
  2543  0E20                     	;# 
  2544  0E21                     	;# 
  2545  0E22                     	;# 
  2546  0E23                     	;# 
  2547  0E24                     	;# 
  2548  0E25                     	;# 
  2549  0E26                     	;# 
  2550  0E27                     	;# 
  2551  0E28                     	;# 
  2552  0E29                     	;# 
  2553  0E2A                     	;# 
  2554  0E2B                     	;# 
  2555  0E2C                     	;# 
  2556  0E2D                     	;# 
  2557  0E2E                     	;# 
  2558  0E2F                     	;# 
  2559  0E30                     	;# 
  2560  0E31                     	;# 
  2561  0E32                     	;# 
  2562  0E33                     	;# 
  2563  0E34                     	;# 
  2564  0E35                     	;# 
  2565  0E36                     	;# 
  2566  0E37                     	;# 
  2567  0E8F                     	;# 
  2568  0E90                     	;# 
  2569  0E91                     	;# 
  2570  0E92                     	;# 
  2571  0E93                     	;# 
  2572  0E94                     	;# 
  2573  0E95                     	;# 
  2574  0E96                     	;# 
  2575  0E97                     	;# 
  2576  0E9C                     	;# 
  2577  0E9D                     	;# 
  2578  0E9E                     	;# 
  2579  0EA1                     	;# 
  2580  0EA2                     	;# 
  2581  0EA3                     	;# 
  2582  0EA4                     	;# 
  2583  0EA5                     	;# 
  2584  0EA9                     	;# 
  2585  0EAA                     	;# 
  2586  0EAB                     	;# 
  2587  0EAC                     	;# 
  2588  0EB1                     	;# 
  2589  0EB2                     	;# 
  2590  0EB3                     	;# 
  2591  0EB8                     	;# 
  2592  0EB9                     	;# 
  2593  0EBA                     	;# 
  2594  0EBB                     	;# 
  2595  0EBC                     	;# 
  2596  0EBD                     	;# 
  2597  0EBE                     	;# 
  2598  0EC3                     	;# 
  2599  0EC5                     	;# 
  2600  0EC6                     	;# 
  2601  0EC7                     	;# 
  2602  0EC8                     	;# 
  2603  0EC9                     	;# 
  2604  0ECA                     	;# 
  2605  0ECB                     	;# 
  2606  0ECC                     	;# 
  2607  0F10                     	;# 
  2608  0F11                     	;# 
  2609  0F12                     	;# 
  2610  0F13                     	;# 
  2611  0F14                     	;# 
  2612  0F15                     	;# 
  2613  0F16                     	;# 
  2614  0F17                     	;# 
  2615  0F18                     	;# 
  2616  0F19                     	;# 
  2617  0F1A                     	;# 
  2618  0F1B                     	;# 
  2619  0F1C                     	;# 
  2620  0F1D                     	;# 
  2621  0F1E                     	;# 
  2622  0F1F                     	;# 
  2623  0F20                     	;# 
  2624  0F21                     	;# 
  2625  0F22                     	;# 
  2626  0F23                     	;# 
  2627  0F24                     	;# 
  2628  0F25                     	;# 
  2629  0F26                     	;# 
  2630  0F27                     	;# 
  2631  0F38                     	;# 
  2632  0F39                     	;# 
  2633  0F3A                     	;# 
  2634  0F3B                     	;# 
  2635  0F3C                     	;# 
  2636  0F3D                     	;# 
  2637  0F3E                     	;# 
  2638  0F3F                     	;# 
  2639  0F40                     	;# 
  2640  0F41                     	;# 
  2641  0F43                     	;# 
  2642  0F44                     	;# 
  2643  0F45                     	;# 
  2644  0F46                     	;# 
  2645  0F47                     	;# 
  2646  0F48                     	;# 
  2647  0F49                     	;# 
  2648  0F4A                     	;# 
  2649  0F4B                     	;# 
  2650  0F4C                     	;# 
  2651  0F4E                     	;# 
  2652  0F4F                     	;# 
  2653  0F50                     	;# 
  2654  0F51                     	;# 
  2655  0F52                     	;# 
  2656  0F53                     	;# 
  2657  0F54                     	;# 
  2658  0F55                     	;# 
  2659  0F56                     	;# 
  2660  0F57                     	;# 
  2661  0F65                     	;# 
  2662  0F68                     	;# 
  2663  0F69                     	;# 
  2664  0F6A                     	;# 
  2665  0F6B                     	;# 
  2666  0FE4                     	;# 
  2667  0FE5                     	;# 
  2668  0FE6                     	;# 
  2669  0FE7                     	;# 
  2670  0FE8                     	;# 
  2671  0FE9                     	;# 
  2672  0FEA                     	;# 
  2673  0FEB                     	;# 
  2674  0FED                     	;# 
  2675  0FEE                     	;# 
  2676  0FEF                     	;# 
  2677  0000                     	;# 
  2678  0001                     	;# 
  2679  0002                     	;# 
  2680  0003                     	;# 
  2681  0004                     	;# 
  2682  0005                     	;# 
  2683  0006                     	;# 
  2684  0007                     	;# 
  2685  0008                     	;# 
  2686  0009                     	;# 
  2687  000A                     	;# 
  2688  000B                     	;# 
  2689  000C                     	;# 
  2690  000D                     	;# 
  2691  000E                     	;# 
  2692  0010                     	;# 
  2693  0011                     	;# 
  2694  0012                     	;# 
  2695  0013                     	;# 
  2696  0016                     	;# 
  2697  0017                     	;# 
  2698  0018                     	;# 
  2699  001C                     	;# 
  2700  001C                     	;# 
  2701  001D                     	;# 
  2702  001D                     	;# 
  2703  001E                     	;# 
  2704  001F                     	;# 
  2705  008C                     	;# 
  2706  008C                     	;# 
  2707  008D                     	;# 
  2708  008E                     	;# 
  2709  008E                     	;# 
  2710  008F                     	;# 
  2711  0090                     	;# 
  2712  0090                     	;# 
  2713  0091                     	;# 
  2714  0093                     	;# 
  2715  0094                     	;# 
  2716  0095                     	;# 
  2717  0096                     	;# 
  2718  0097                     	;# 
  2719  0098                     	;# 
  2720  0099                     	;# 
  2721  009A                     	;# 
  2722  009B                     	;# 
  2723  009C                     	;# 
  2724  009D                     	;# 
  2725  009E                     	;# 
  2726  010C                     	;# 
  2727  010D                     	;# 
  2728  010E                     	;# 
  2729  010E                     	;# 
  2730  010F                     	;# 
  2731  0110                     	;# 
  2732  0110                     	;# 
  2733  0111                     	;# 
  2734  0112                     	;# 
  2735  0112                     	;# 
  2736  0113                     	;# 
  2737  0114                     	;# 
  2738  0114                     	;# 
  2739  0115                     	;# 
  2740  0116                     	;# 
  2741  0116                     	;# 
  2742  0117                     	;# 
  2743  0119                     	;# 
  2744  0119                     	;# 
  2745  0119                     	;# 
  2746  011A                     	;# 
  2747  011A                     	;# 
  2748  011A                     	;# 
  2749  011B                     	;# 
  2750  011B                     	;# 
  2751  011B                     	;# 
  2752  011B                     	;# 
  2753  011B                     	;# 
  2754  011C                     	;# 
  2755  011C                     	;# 
  2756  011C                     	;# 
  2757  011D                     	;# 
  2758  011D                     	;# 
  2759  011D                     	;# 
  2760  011E                     	;# 
  2761  011E                     	;# 
  2762  011E                     	;# 
  2763  011F                     	;# 
  2764  011F                     	;# 
  2765  011F                     	;# 
  2766  011F                     	;# 
  2767  011F                     	;# 
  2768  018C                     	;# 
  2769  018D                     	;# 
  2770  018E                     	;# 
  2771  018F                     	;# 
  2772  0190                     	;# 
  2773  0191                     	;# 
  2774  0192                     	;# 
  2775  0196                     	;# 
  2776  0197                     	;# 
  2777  0198                     	;# 
  2778  0199                     	;# 
  2779  019A                     	;# 
  2780  019B                     	;# 
  2781  019C                     	;# 
  2782  020C                     	;# 
  2783  020C                     	;# 
  2784  020D                     	;# 
  2785  020E                     	;# 
  2786  020F                     	;# 
  2787  020F                     	;# 
  2788  0210                     	;# 
  2789  0210                     	;# 
  2790  0211                     	;# 
  2791  0211                     	;# 
  2792  0212                     	;# 
  2793  0212                     	;# 
  2794  0213                     	;# 
  2795  0214                     	;# 
  2796  0215                     	;# 
  2797  0215                     	;# 
  2798  0216                     	;# 
  2799  0216                     	;# 
  2800  0217                     	;# 
  2801  0217                     	;# 
  2802  0218                     	;# 
  2803  0218                     	;# 
  2804  0219                     	;# 
  2805  021A                     	;# 
  2806  021B                     	;# 
  2807  021B                     	;# 
  2808  021C                     	;# 
  2809  021C                     	;# 
  2810  021D                     	;# 
  2811  021D                     	;# 
  2812  021E                     	;# 
  2813  021F                     	;# 
  2814  028C                     	;# 
  2815  028C                     	;# 
  2816  028D                     	;# 
  2817  028D                     	;# 
  2818  028E                     	;# 
  2819  028F                     	;# 
  2820  0290                     	;# 
  2821  0290                     	;# 
  2822  0291                     	;# 
  2823  0292                     	;# 
  2824  0292                     	;# 
  2825  0293                     	;# 
  2826  0293                     	;# 
  2827  0294                     	;# 
  2828  0295                     	;# 
  2829  0296                     	;# 
  2830  0296                     	;# 
  2831  0297                     	;# 
  2832  0298                     	;# 
  2833  0298                     	;# 
  2834  0299                     	;# 
  2835  0299                     	;# 
  2836  029A                     	;# 
  2837  029B                     	;# 
  2838  029C                     	;# 
  2839  029C                     	;# 
  2840  029D                     	;# 
  2841  030C                     	;# 
  2842  030C                     	;# 
  2843  030D                     	;# 
  2844  030E                     	;# 
  2845  030F                     	;# 
  2846  0310                     	;# 
  2847  0310                     	;# 
  2848  0311                     	;# 
  2849  0312                     	;# 
  2850  0313                     	;# 
  2851  0314                     	;# 
  2852  0314                     	;# 
  2853  0315                     	;# 
  2854  0316                     	;# 
  2855  0317                     	;# 
  2856  0318                     	;# 
  2857  0318                     	;# 
  2858  0319                     	;# 
  2859  031A                     	;# 
  2860  031B                     	;# 
  2861  031C                     	;# 
  2862  031C                     	;# 
  2863  031D                     	;# 
  2864  031E                     	;# 
  2865  031F                     	;# 
  2866  038C                     	;# 
  2867  038D                     	;# 
  2868  038E                     	;# 
  2869  0390                     	;# 
  2870  0391                     	;# 
  2871  0392                     	;# 
  2872  040C                     	;# 
  2873  040D                     	;# 
  2874  040E                     	;# 
  2875  040F                     	;# 
  2876  0410                     	;# 
  2877  0411                     	;# 
  2878  0416                     	;# 
  2879  0416                     	;# 
  2880  0417                     	;# 
  2881  0418                     	;# 
  2882  0418                     	;# 
  2883  0419                     	;# 
  2884  041A                     	;# 
  2885  041A                     	;# 
  2886  041B                     	;# 
  2887  041C                     	;# 
  2888  041C                     	;# 
  2889  041D                     	;# 
  2890  041E                     	;# 
  2891  041F                     	;# 
  2892  048C                     	;# 
  2893  048C                     	;# 
  2894  048D                     	;# 
  2895  048E                     	;# 
  2896  048F                     	;# 
  2897  048F                     	;# 
  2898  0490                     	;# 
  2899  0491                     	;# 
  2900  0492                     	;# 
  2901  0492                     	;# 
  2902  0493                     	;# 
  2903  0494                     	;# 
  2904  0495                     	;# 
  2905  0495                     	;# 
  2906  0496                     	;# 
  2907  0497                     	;# 
  2908  0498                     	;# 
  2909  0499                     	;# 
  2910  049A                     	;# 
  2911  049B                     	;# 
  2912  049C                     	;# 
  2913  049D                     	;# 
  2914  050C                     	;# 
  2915  050C                     	;# 
  2916  050D                     	;# 
  2917  050E                     	;# 
  2918  050F                     	;# 
  2919  050F                     	;# 
  2920  0510                     	;# 
  2921  0511                     	;# 
  2922  0512                     	;# 
  2923  0512                     	;# 
  2924  0513                     	;# 
  2925  0514                     	;# 
  2926  0515                     	;# 
  2927  0515                     	;# 
  2928  0516                     	;# 
  2929  0517                     	;# 
  2930  0518                     	;# 
  2931  0519                     	;# 
  2932  051A                     	;# 
  2933  051B                     	;# 
  2934  051C                     	;# 
  2935  051D                     	;# 
  2936  058C                     	;# 
  2937  058C                     	;# 
  2938  058D                     	;# 
  2939  058E                     	;# 
  2940  058F                     	;# 
  2941  058F                     	;# 
  2942  0590                     	;# 
  2943  0591                     	;# 
  2944  0592                     	;# 
  2945  0593                     	;# 
  2946  060C                     	;# 
  2947  060D                     	;# 
  2948  060E                     	;# 
  2949  060F                     	;# 
  2950  0610                     	;# 
  2951  0611                     	;# 
  2952  0612                     	;# 
  2953  0613                     	;# 
  2954  0614                     	;# 
  2955  0616                     	;# 
  2956  0617                     	;# 
  2957  0618                     	;# 
  2958  0619                     	;# 
  2959  061A                     	;# 
  2960  061B                     	;# 
  2961  061C                     	;# 
  2962  061D                     	;# 
  2963  061E                     	;# 
  2964  068C                     	;# 
  2965  068D                     	;# 
  2966  068E                     	;# 
  2967  068F                     	;# 
  2968  0690                     	;# 
  2969  0691                     	;# 
  2970  0692                     	;# 
  2971  0693                     	;# 
  2972  0694                     	;# 
  2973  070C                     	;# 
  2974  070D                     	;# 
  2975  070E                     	;# 
  2976  070F                     	;# 
  2977  0710                     	;# 
  2978  0711                     	;# 
  2979  0712                     	;# 
  2980  0713                     	;# 
  2981  0714                     	;# 
  2982  0716                     	;# 
  2983  0717                     	;# 
  2984  0718                     	;# 
  2985  0719                     	;# 
  2986  071A                     	;# 
  2987  071B                     	;# 
  2988  071C                     	;# 
  2989  071D                     	;# 
  2990  071E                     	;# 
  2991  0796                     	;# 
  2992  0797                     	;# 
  2993  0798                     	;# 
  2994  0799                     	;# 
  2995  079A                     	;# 
  2996  079B                     	;# 
  2997  080C                     	;# 
  2998  080D                     	;# 
  2999  080E                     	;# 
  3000  080F                     	;# 
  3001  0810                     	;# 
  3002  0811                     	;# 
  3003  0812                     	;# 
  3004  0813                     	;# 
  3005  0814                     	;# 
  3006  081A                     	;# 
  3007  081B                     	;# 
  3008  081C                     	;# 
  3009  081D                     	;# 
  3010  081E                     	;# 
  3011  081F                     	;# 
  3012  088C                     	;# 
  3013  088D                     	;# 
  3014  088E                     	;# 
  3015  088F                     	;# 
  3016  0890                     	;# 
  3017  0891                     	;# 
  3018  0892                     	;# 
  3019  0893                     	;# 
  3020  0895                     	;# 
  3021  0896                     	;# 
  3022  0897                     	;# 
  3023  0898                     	;# 
  3024  0899                     	;# 
  3025  089A                     	;# 
  3026  089B                     	;# 
  3027  090C                     	;# 
  3028  090E                     	;# 
  3029  090F                     	;# 
  3030  091F                     	;# 
  3031  091F                     	;# 
  3032  098F                     	;# 
  3033  098F                     	;# 
  3034  0990                     	;# 
  3035  0991                     	;# 
  3036  0992                     	;# 
  3037  0993                     	;# 
  3038  0994                     	;# 
  3039  0995                     	;# 
  3040  0996                     	;# 
  3041  0997                     	;# 
  3042  0E0F                     	;# 
  3043  0E10                     	;# 
  3044  0E11                     	;# 
  3045  0E12                     	;# 
  3046  0E13                     	;# 
  3047  0E14                     	;# 
  3048  0E15                     	;# 
  3049  0E16                     	;# 
  3050  0E17                     	;# 
  3051  0E18                     	;# 
  3052  0E19                     	;# 
  3053  0E1A                     	;# 
  3054  0E1B                     	;# 
  3055  0E1C                     	;# 
  3056  0E1D                     	;# 
  3057  0E1E                     	;# 
  3058  0E1F                     	;# 
  3059  0E20                     	;# 
  3060  0E21                     	;# 
  3061  0E22                     	;# 
  3062  0E23                     	;# 
  3063  0E24                     	;# 
  3064  0E25                     	;# 
  3065  0E26                     	;# 
  3066  0E27                     	;# 
  3067  0E28                     	;# 
  3068  0E29                     	;# 
  3069  0E2A                     	;# 
  3070  0E2B                     	;# 
  3071  0E2C                     	;# 
  3072  0E2D                     	;# 
  3073  0E2E                     	;# 
  3074  0E2F                     	;# 
  3075  0E30                     	;# 
  3076  0E31                     	;# 
  3077  0E32                     	;# 
  3078  0E33                     	;# 
  3079  0E34                     	;# 
  3080  0E35                     	;# 
  3081  0E36                     	;# 
  3082  0E37                     	;# 
  3083  0E8F                     	;# 
  3084  0E90                     	;# 
  3085  0E91                     	;# 
  3086  0E92                     	;# 
  3087  0E93                     	;# 
  3088  0E94                     	;# 
  3089  0E95                     	;# 
  3090  0E96                     	;# 
  3091  0E97                     	;# 
  3092  0E9C                     	;# 
  3093  0E9D                     	;# 
  3094  0E9E                     	;# 
  3095  0EA1                     	;# 
  3096  0EA2                     	;# 
  3097  0EA3                     	;# 
  3098  0EA4                     	;# 
  3099  0EA5                     	;# 
  3100  0EA9                     	;# 
  3101  0EAA                     	;# 
  3102  0EAB                     	;# 
  3103  0EAC                     	;# 
  3104  0EB1                     	;# 
  3105  0EB2                     	;# 
  3106  0EB3                     	;# 
  3107  0EB8                     	;# 
  3108  0EB9                     	;# 
  3109  0EBA                     	;# 
  3110  0EBB                     	;# 
  3111  0EBC                     	;# 
  3112  0EBD                     	;# 
  3113  0EBE                     	;# 
  3114  0EC3                     	;# 
  3115  0EC5                     	;# 
  3116  0EC6                     	;# 
  3117  0EC7                     	;# 
  3118  0EC8                     	;# 
  3119  0EC9                     	;# 
  3120  0ECA                     	;# 
  3121  0ECB                     	;# 
  3122  0ECC                     	;# 
  3123  0F10                     	;# 
  3124  0F11                     	;# 
  3125  0F12                     	;# 
  3126  0F13                     	;# 
  3127  0F14                     	;# 
  3128  0F15                     	;# 
  3129  0F16                     	;# 
  3130  0F17                     	;# 
  3131  0F18                     	;# 
  3132  0F19                     	;# 
  3133  0F1A                     	;# 
  3134  0F1B                     	;# 
  3135  0F1C                     	;# 
  3136  0F1D                     	;# 
  3137  0F1E                     	;# 
  3138  0F1F                     	;# 
  3139  0F20                     	;# 
  3140  0F21                     	;# 
  3141  0F22                     	;# 
  3142  0F23                     	;# 
  3143  0F24                     	;# 
  3144  0F25                     	;# 
  3145  0F26                     	;# 
  3146  0F27                     	;# 
  3147  0F38                     	;# 
  3148  0F39                     	;# 
  3149  0F3A                     	;# 
  3150  0F3B                     	;# 
  3151  0F3C                     	;# 
  3152  0F3D                     	;# 
  3153  0F3E                     	;# 
  3154  0F3F                     	;# 
  3155  0F40                     	;# 
  3156  0F41                     	;# 
  3157  0F43                     	;# 
  3158  0F44                     	;# 
  3159  0F45                     	;# 
  3160  0F46                     	;# 
  3161  0F47                     	;# 
  3162  0F48                     	;# 
  3163  0F49                     	;# 
  3164  0F4A                     	;# 
  3165  0F4B                     	;# 
  3166  0F4C                     	;# 
  3167  0F4E                     	;# 
  3168  0F4F                     	;# 
  3169  0F50                     	;# 
  3170  0F51                     	;# 
  3171  0F52                     	;# 
  3172  0F53                     	;# 
  3173  0F54                     	;# 
  3174  0F55                     	;# 
  3175  0F56                     	;# 
  3176  0F57                     	;# 
  3177  0F65                     	;# 
  3178  0F68                     	;# 
  3179  0F69                     	;# 
  3180  0F6A                     	;# 
  3181  0F6B                     	;# 
  3182  0FE4                     	;# 
  3183  0FE5                     	;# 
  3184  0FE6                     	;# 
  3185  0FE7                     	;# 
  3186  0FE8                     	;# 
  3187  0FE9                     	;# 
  3188  0FEA                     	;# 
  3189  0FEB                     	;# 
  3190  0FED                     	;# 
  3191  0FEE                     	;# 
  3192  0FEF                     	;# 
  3193  0000                     	;# 
  3194  0001                     	;# 
  3195  0002                     	;# 
  3196  0003                     	;# 
  3197  0004                     	;# 
  3198  0005                     	;# 
  3199  0006                     	;# 
  3200  0007                     	;# 
  3201  0008                     	;# 
  3202  0009                     	;# 
  3203  000A                     	;# 
  3204  000B                     	;# 
  3205  000C                     	;# 
  3206  000D                     	;# 
  3207  000E                     	;# 
  3208  0010                     	;# 
  3209  0011                     	;# 
  3210  0012                     	;# 
  3211  0013                     	;# 
  3212  0016                     	;# 
  3213  0017                     	;# 
  3214  0018                     	;# 
  3215  001C                     	;# 
  3216  001C                     	;# 
  3217  001D                     	;# 
  3218  001D                     	;# 
  3219  001E                     	;# 
  3220  001F                     	;# 
  3221  008C                     	;# 
  3222  008C                     	;# 
  3223  008D                     	;# 
  3224  008E                     	;# 
  3225  008E                     	;# 
  3226  008F                     	;# 
  3227  0090                     	;# 
  3228  0090                     	;# 
  3229  0091                     	;# 
  3230  0093                     	;# 
  3231  0094                     	;# 
  3232  0095                     	;# 
  3233  0096                     	;# 
  3234  0097                     	;# 
  3235  0098                     	;# 
  3236  0099                     	;# 
  3237  009A                     	;# 
  3238  009B                     	;# 
  3239  009C                     	;# 
  3240  009D                     	;# 
  3241  009E                     	;# 
  3242  010C                     	;# 
  3243  010D                     	;# 
  3244  010E                     	;# 
  3245  010E                     	;# 
  3246  010F                     	;# 
  3247  0110                     	;# 
  3248  0110                     	;# 
  3249  0111                     	;# 
  3250  0112                     	;# 
  3251  0112                     	;# 
  3252  0113                     	;# 
  3253  0114                     	;# 
  3254  0114                     	;# 
  3255  0115                     	;# 
  3256  0116                     	;# 
  3257  0116                     	;# 
  3258  0117                     	;# 
  3259  0119                     	;# 
  3260  0119                     	;# 
  3261  0119                     	;# 
  3262  011A                     	;# 
  3263  011A                     	;# 
  3264  011A                     	;# 
  3265  011B                     	;# 
  3266  011B                     	;# 
  3267  011B                     	;# 
  3268  011B                     	;# 
  3269  011B                     	;# 
  3270  011C                     	;# 
  3271  011C                     	;# 
  3272  011C                     	;# 
  3273  011D                     	;# 
  3274  011D                     	;# 
  3275  011D                     	;# 
  3276  011E                     	;# 
  3277  011E                     	;# 
  3278  011E                     	;# 
  3279  011F                     	;# 
  3280  011F                     	;# 
  3281  011F                     	;# 
  3282  011F                     	;# 
  3283  011F                     	;# 
  3284  018C                     	;# 
  3285  018D                     	;# 
  3286  018E                     	;# 
  3287  018F                     	;# 
  3288  0190                     	;# 
  3289  0191                     	;# 
  3290  0192                     	;# 
  3291  0196                     	;# 
  3292  0197                     	;# 
  3293  0198                     	;# 
  3294  0199                     	;# 
  3295  019A                     	;# 
  3296  019B                     	;# 
  3297  019C                     	;# 
  3298  020C                     	;# 
  3299  020C                     	;# 
  3300  020D                     	;# 
  3301  020E                     	;# 
  3302  020F                     	;# 
  3303  020F                     	;# 
  3304  0210                     	;# 
  3305  0210                     	;# 
  3306  0211                     	;# 
  3307  0211                     	;# 
  3308  0212                     	;# 
  3309  0212                     	;# 
  3310  0213                     	;# 
  3311  0214                     	;# 
  3312  0215                     	;# 
  3313  0215                     	;# 
  3314  0216                     	;# 
  3315  0216                     	;# 
  3316  0217                     	;# 
  3317  0217                     	;# 
  3318  0218                     	;# 
  3319  0218                     	;# 
  3320  0219                     	;# 
  3321  021A                     	;# 
  3322  021B                     	;# 
  3323  021B                     	;# 
  3324  021C                     	;# 
  3325  021C                     	;# 
  3326  021D                     	;# 
  3327  021D                     	;# 
  3328  021E                     	;# 
  3329  021F                     	;# 
  3330  028C                     	;# 
  3331  028C                     	;# 
  3332  028D                     	;# 
  3333  028D                     	;# 
  3334  028E                     	;# 
  3335  028F                     	;# 
  3336  0290                     	;# 
  3337  0290                     	;# 
  3338  0291                     	;# 
  3339  0292                     	;# 
  3340  0292                     	;# 
  3341  0293                     	;# 
  3342  0293                     	;# 
  3343  0294                     	;# 
  3344  0295                     	;# 
  3345  0296                     	;# 
  3346  0296                     	;# 
  3347  0297                     	;# 
  3348  0298                     	;# 
  3349  0298                     	;# 
  3350  0299                     	;# 
  3351  0299                     	;# 
  3352  029A                     	;# 
  3353  029B                     	;# 
  3354  029C                     	;# 
  3355  029C                     	;# 
  3356  029D                     	;# 
  3357  030C                     	;# 
  3358  030C                     	;# 
  3359  030D                     	;# 
  3360  030E                     	;# 
  3361  030F                     	;# 
  3362  0310                     	;# 
  3363  0310                     	;# 
  3364  0311                     	;# 
  3365  0312                     	;# 
  3366  0313                     	;# 
  3367  0314                     	;# 
  3368  0314                     	;# 
  3369  0315                     	;# 
  3370  0316                     	;# 
  3371  0317                     	;# 
  3372  0318                     	;# 
  3373  0318                     	;# 
  3374  0319                     	;# 
  3375  031A                     	;# 
  3376  031B                     	;# 
  3377  031C                     	;# 
  3378  031C                     	;# 
  3379  031D                     	;# 
  3380  031E                     	;# 
  3381  031F                     	;# 
  3382  038C                     	;# 
  3383  038D                     	;# 
  3384  038E                     	;# 
  3385  0390                     	;# 
  3386  0391                     	;# 
  3387  0392                     	;# 
  3388  040C                     	;# 
  3389  040D                     	;# 
  3390  040E                     	;# 
  3391  040F                     	;# 
  3392  0410                     	;# 
  3393  0411                     	;# 
  3394  0416                     	;# 
  3395  0416                     	;# 
  3396  0417                     	;# 
  3397  0418                     	;# 
  3398  0418                     	;# 
  3399  0419                     	;# 
  3400  041A                     	;# 
  3401  041A                     	;# 
  3402  041B                     	;# 
  3403  041C                     	;# 
  3404  041C                     	;# 
  3405  041D                     	;# 
  3406  041E                     	;# 
  3407  041F                     	;# 
  3408  048C                     	;# 
  3409  048C                     	;# 
  3410  048D                     	;# 
  3411  048E                     	;# 
  3412  048F                     	;# 
  3413  048F                     	;# 
  3414  0490                     	;# 
  3415  0491                     	;# 
  3416  0492                     	;# 
  3417  0492                     	;# 
  3418  0493                     	;# 
  3419  0494                     	;# 
  3420  0495                     	;# 
  3421  0495                     	;# 
  3422  0496                     	;# 
  3423  0497                     	;# 
  3424  0498                     	;# 
  3425  0499                     	;# 
  3426  049A                     	;# 
  3427  049B                     	;# 
  3428  049C                     	;# 
  3429  049D                     	;# 
  3430  050C                     	;# 
  3431  050C                     	;# 
  3432  050D                     	;# 
  3433  050E                     	;# 
  3434  050F                     	;# 
  3435  050F                     	;# 
  3436  0510                     	;# 
  3437  0511                     	;# 
  3438  0512                     	;# 
  3439  0512                     	;# 
  3440  0513                     	;# 
  3441  0514                     	;# 
  3442  0515                     	;# 
  3443  0515                     	;# 
  3444  0516                     	;# 
  3445  0517                     	;# 
  3446  0518                     	;# 
  3447  0519                     	;# 
  3448  051A                     	;# 
  3449  051B                     	;# 
  3450  051C                     	;# 
  3451  051D                     	;# 
  3452  058C                     	;# 
  3453  058C                     	;# 
  3454  058D                     	;# 
  3455  058E                     	;# 
  3456  058F                     	;# 
  3457  058F                     	;# 
  3458  0590                     	;# 
  3459  0591                     	;# 
  3460  0592                     	;# 
  3461  0593                     	;# 
  3462  060C                     	;# 
  3463  060D                     	;# 
  3464  060E                     	;# 
  3465  060F                     	;# 
  3466  0610                     	;# 
  3467  0611                     	;# 
  3468  0612                     	;# 
  3469  0613                     	;# 
  3470  0614                     	;# 
  3471  0616                     	;# 
  3472  0617                     	;# 
  3473  0618                     	;# 
  3474  0619                     	;# 
  3475  061A                     	;# 
  3476  061B                     	;# 
  3477  061C                     	;# 
  3478  061D                     	;# 
  3479  061E                     	;# 
  3480  068C                     	;# 
  3481  068D                     	;# 
  3482  068E                     	;# 
  3483  068F                     	;# 
  3484  0690                     	;# 
  3485  0691                     	;# 
  3486  0692                     	;# 
  3487  0693                     	;# 
  3488  0694                     	;# 
  3489  070C                     	;# 
  3490  070D                     	;# 
  3491  070E                     	;# 
  3492  070F                     	;# 
  3493  0710                     	;# 
  3494  0711                     	;# 
  3495  0712                     	;# 
  3496  0713                     	;# 
  3497  0714                     	;# 
  3498  0716                     	;# 
  3499  0717                     	;# 
  3500  0718                     	;# 
  3501  0719                     	;# 
  3502  071A                     	;# 
  3503  071B                     	;# 
  3504  071C                     	;# 
  3505  071D                     	;# 
  3506  071E                     	;# 
  3507  0796                     	;# 
  3508  0797                     	;# 
  3509  0798                     	;# 
  3510  0799                     	;# 
  3511  079A                     	;# 
  3512  079B                     	;# 
  3513  080C                     	;# 
  3514  080D                     	;# 
  3515  080E                     	;# 
  3516  080F                     	;# 
  3517  0810                     	;# 
  3518  0811                     	;# 
  3519  0812                     	;# 
  3520  0813                     	;# 
  3521  0814                     	;# 
  3522  081A                     	;# 
  3523  081B                     	;# 
  3524  081C                     	;# 
  3525  081D                     	;# 
  3526  081E                     	;# 
  3527  081F                     	;# 
  3528  088C                     	;# 
  3529  088D                     	;# 
  3530  088E                     	;# 
  3531  088F                     	;# 
  3532  0890                     	;# 
  3533  0891                     	;# 
  3534  0892                     	;# 
  3535  0893                     	;# 
  3536  0895                     	;# 
  3537  0896                     	;# 
  3538  0897                     	;# 
  3539  0898                     	;# 
  3540  0899                     	;# 
  3541  089A                     	;# 
  3542  089B                     	;# 
  3543  090C                     	;# 
  3544  090E                     	;# 
  3545  090F                     	;# 
  3546  091F                     	;# 
  3547  091F                     	;# 
  3548  098F                     	;# 
  3549  098F                     	;# 
  3550  0990                     	;# 
  3551  0991                     	;# 
  3552  0992                     	;# 
  3553  0993                     	;# 
  3554  0994                     	;# 
  3555  0995                     	;# 
  3556  0996                     	;# 
  3557  0997                     	;# 
  3558  0E0F                     	;# 
  3559  0E10                     	;# 
  3560  0E11                     	;# 
  3561  0E12                     	;# 
  3562  0E13                     	;# 
  3563  0E14                     	;# 
  3564  0E15                     	;# 
  3565  0E16                     	;# 
  3566  0E17                     	;# 
  3567  0E18                     	;# 
  3568  0E19                     	;# 
  3569  0E1A                     	;# 
  3570  0E1B                     	;# 
  3571  0E1C                     	;# 
  3572  0E1D                     	;# 
  3573  0E1E                     	;# 
  3574  0E1F                     	;# 
  3575  0E20                     	;# 
  3576  0E21                     	;# 
  3577  0E22                     	;# 
  3578  0E23                     	;# 
  3579  0E24                     	;# 
  3580  0E25                     	;# 
  3581  0E26                     	;# 
  3582  0E27                     	;# 
  3583  0E28                     	;# 
  3584  0E29                     	;# 
  3585  0E2A                     	;# 
  3586  0E2B                     	;# 
  3587  0E2C                     	;# 
  3588  0E2D                     	;# 
  3589  0E2E                     	;# 
  3590  0E2F                     	;# 
  3591  0E30                     	;# 
  3592  0E31                     	;# 
  3593  0E32                     	;# 
  3594  0E33                     	;# 
  3595  0E34                     	;# 
  3596  0E35                     	;# 
  3597  0E36                     	;# 
  3598  0E37                     	;# 
  3599  0E8F                     	;# 
  3600  0E90                     	;# 
  3601  0E91                     	;# 
  3602  0E92                     	;# 
  3603  0E93                     	;# 
  3604  0E94                     	;# 
  3605  0E95                     	;# 
  3606  0E96                     	;# 
  3607  0E97                     	;# 
  3608  0E9C                     	;# 
  3609  0E9D                     	;# 
  3610  0E9E                     	;# 
  3611  0EA1                     	;# 
  3612  0EA2                     	;# 
  3613  0EA3                     	;# 
  3614  0EA4                     	;# 
  3615  0EA5                     	;# 
  3616  0EA9                     	;# 
  3617  0EAA                     	;# 
  3618  0EAB                     	;# 
  3619  0EAC                     	;# 
  3620  0EB1                     	;# 
  3621  0EB2                     	;# 
  3622  0EB3                     	;# 
  3623  0EB8                     	;# 
  3624  0EB9                     	;# 
  3625  0EBA                     	;# 
  3626  0EBB                     	;# 
  3627  0EBC                     	;# 
  3628  0EBD                     	;# 
  3629  0EBE                     	;# 
  3630  0EC3                     	;# 
  3631  0EC5                     	;# 
  3632  0EC6                     	;# 
  3633  0EC7                     	;# 
  3634  0EC8                     	;# 
  3635  0EC9                     	;# 
  3636  0ECA                     	;# 
  3637  0ECB                     	;# 
  3638  0ECC                     	;# 
  3639  0F10                     	;# 
  3640  0F11                     	;# 
  3641  0F12                     	;# 
  3642  0F13                     	;# 
  3643  0F14                     	;# 
  3644  0F15                     	;# 
  3645  0F16                     	;# 
  3646  0F17                     	;# 
  3647  0F18                     	;# 
  3648  0F19                     	;# 
  3649  0F1A                     	;# 
  3650  0F1B                     	;# 
  3651  0F1C                     	;# 
  3652  0F1D                     	;# 
  3653  0F1E                     	;# 
  3654  0F1F                     	;# 
  3655  0F20                     	;# 
  3656  0F21                     	;# 
  3657  0F22                     	;# 
  3658  0F23                     	;# 
  3659  0F24                     	;# 
  3660  0F25                     	;# 
  3661  0F26                     	;# 
  3662  0F27                     	;# 
  3663  0F38                     	;# 
  3664  0F39                     	;# 
  3665  0F3A                     	;# 
  3666  0F3B                     	;# 
  3667  0F3C                     	;# 
  3668  0F3D                     	;# 
  3669  0F3E                     	;# 
  3670  0F3F                     	;# 
  3671  0F40                     	;# 
  3672  0F41                     	;# 
  3673  0F43                     	;# 
  3674  0F44                     	;# 
  3675  0F45                     	;# 
  3676  0F46                     	;# 
  3677  0F47                     	;# 
  3678  0F48                     	;# 
  3679  0F49                     	;# 
  3680  0F4A                     	;# 
  3681  0F4B                     	;# 
  3682  0F4C                     	;# 
  3683  0F4E                     	;# 
  3684  0F4F                     	;# 
  3685  0F50                     	;# 
  3686  0F51                     	;# 
  3687  0F52                     	;# 
  3688  0F53                     	;# 
  3689  0F54                     	;# 
  3690  0F55                     	;# 
  3691  0F56                     	;# 
  3692  0F57                     	;# 
  3693  0F65                     	;# 
  3694  0F68                     	;# 
  3695  0F69                     	;# 
  3696  0F6A                     	;# 
  3697  0F6B                     	;# 
  3698  0FE4                     	;# 
  3699  0FE5                     	;# 
  3700  0FE6                     	;# 
  3701  0FE7                     	;# 
  3702  0FE8                     	;# 
  3703  0FE9                     	;# 
  3704  0FEA                     	;# 
  3705  0FEB                     	;# 
  3706  0FED                     	;# 
  3707  0FEE                     	;# 
  3708  0FEF                     	;# 
  3709  0000                     	;# 
  3710  0001                     	;# 
  3711  0002                     	;# 
  3712  0003                     	;# 
  3713  0004                     	;# 
  3714  0005                     	;# 
  3715  0006                     	;# 
  3716  0007                     	;# 
  3717  0008                     	;# 
  3718  0009                     	;# 
  3719  000A                     	;# 
  3720  000B                     	;# 
  3721  000C                     	;# 
  3722  000D                     	;# 
  3723  000E                     	;# 
  3724  0010                     	;# 
  3725  0011                     	;# 
  3726  0012                     	;# 
  3727  0013                     	;# 
  3728  0016                     	;# 
  3729  0017                     	;# 
  3730  0018                     	;# 
  3731  001C                     	;# 
  3732  001C                     	;# 
  3733  001D                     	;# 
  3734  001D                     	;# 
  3735  001E                     	;# 
  3736  001F                     	;# 
  3737  008C                     	;# 
  3738  008C                     	;# 
  3739  008D                     	;# 
  3740  008E                     	;# 
  3741  008E                     	;# 
  3742  008F                     	;# 
  3743  0090                     	;# 
  3744  0090                     	;# 
  3745  0091                     	;# 
  3746  0093                     	;# 
  3747  0094                     	;# 
  3748  0095                     	;# 
  3749  0096                     	;# 
  3750  0097                     	;# 
  3751  0098                     	;# 
  3752  0099                     	;# 
  3753  009A                     	;# 
  3754  009B                     	;# 
  3755  009C                     	;# 
  3756  009D                     	;# 
  3757  009E                     	;# 
  3758  010C                     	;# 
  3759  010D                     	;# 
  3760  010E                     	;# 
  3761  010E                     	;# 
  3762  010F                     	;# 
  3763  0110                     	;# 
  3764  0110                     	;# 
  3765  0111                     	;# 
  3766  0112                     	;# 
  3767  0112                     	;# 
  3768  0113                     	;# 
  3769  0114                     	;# 
  3770  0114                     	;# 
  3771  0115                     	;# 
  3772  0116                     	;# 
  3773  0116                     	;# 
  3774  0117                     	;# 
  3775  0119                     	;# 
  3776  0119                     	;# 
  3777  0119                     	;# 
  3778  011A                     	;# 
  3779  011A                     	;# 
  3780  011A                     	;# 
  3781  011B                     	;# 
  3782  011B                     	;# 
  3783  011B                     	;# 
  3784  011B                     	;# 
  3785  011B                     	;# 
  3786  011C                     	;# 
  3787  011C                     	;# 
  3788  011C                     	;# 
  3789  011D                     	;# 
  3790  011D                     	;# 
  3791  011D                     	;# 
  3792  011E                     	;# 
  3793  011E                     	;# 
  3794  011E                     	;# 
  3795  011F                     	;# 
  3796  011F                     	;# 
  3797  011F                     	;# 
  3798  011F                     	;# 
  3799  011F                     	;# 
  3800  018C                     	;# 
  3801  018D                     	;# 
  3802  018E                     	;# 
  3803  018F                     	;# 
  3804  0190                     	;# 
  3805  0191                     	;# 
  3806  0192                     	;# 
  3807  0196                     	;# 
  3808  0197                     	;# 
  3809  0198                     	;# 
  3810  0199                     	;# 
  3811  019A                     	;# 
  3812  019B                     	;# 
  3813  019C                     	;# 
  3814  020C                     	;# 
  3815  020C                     	;# 
  3816  020D                     	;# 
  3817  020E                     	;# 
  3818  020F                     	;# 
  3819  020F                     	;# 
  3820  0210                     	;# 
  3821  0210                     	;# 
  3822  0211                     	;# 
  3823  0211                     	;# 
  3824  0212                     	;# 
  3825  0212                     	;# 
  3826  0213                     	;# 
  3827  0214                     	;# 
  3828  0215                     	;# 
  3829  0215                     	;# 
  3830  0216                     	;# 
  3831  0216                     	;# 
  3832  0217                     	;# 
  3833  0217                     	;# 
  3834  0218                     	;# 
  3835  0218                     	;# 
  3836  0219                     	;# 
  3837  021A                     	;# 
  3838  021B                     	;# 
  3839  021B                     	;# 
  3840  021C                     	;# 
  3841  021C                     	;# 
  3842  021D                     	;# 
  3843  021D                     	;# 
  3844  021E                     	;# 
  3845  021F                     	;# 
  3846  028C                     	;# 
  3847  028C                     	;# 
  3848  028D                     	;# 
  3849  028D                     	;# 
  3850  028E                     	;# 
  3851  028F                     	;# 
  3852  0290                     	;# 
  3853  0290                     	;# 
  3854  0291                     	;# 
  3855  0292                     	;# 
  3856  0292                     	;# 
  3857  0293                     	;# 
  3858  0293                     	;# 
  3859  0294                     	;# 
  3860  0295                     	;# 
  3861  0296                     	;# 
  3862  0296                     	;# 
  3863  0297                     	;# 
  3864  0298                     	;# 
  3865  0298                     	;# 
  3866  0299                     	;# 
  3867  0299                     	;# 
  3868  029A                     	;# 
  3869  029B                     	;# 
  3870  029C                     	;# 
  3871  029C                     	;# 
  3872  029D                     	;# 
  3873  030C                     	;# 
  3874  030C                     	;# 
  3875  030D                     	;# 
  3876  030E                     	;# 
  3877  030F                     	;# 
  3878  0310                     	;# 
  3879  0310                     	;# 
  3880  0311                     	;# 
  3881  0312                     	;# 
  3882  0313                     	;# 
  3883  0314                     	;# 
  3884  0314                     	;# 
  3885  0315                     	;# 
  3886  0316                     	;# 
  3887  0317                     	;# 
  3888  0318                     	;# 
  3889  0318                     	;# 
  3890  0319                     	;# 
  3891  031A                     	;# 
  3892  031B                     	;# 
  3893  031C                     	;# 
  3894  031C                     	;# 
  3895  031D                     	;# 
  3896  031E                     	;# 
  3897  031F                     	;# 
  3898  038C                     	;# 
  3899  038D                     	;# 
  3900  038E                     	;# 
  3901  0390                     	;# 
  3902  0391                     	;# 
  3903  0392                     	;# 
  3904  040C                     	;# 
  3905  040D                     	;# 
  3906  040E                     	;# 
  3907  040F                     	;# 
  3908  0410                     	;# 
  3909  0411                     	;# 
  3910  0416                     	;# 
  3911  0416                     	;# 
  3912  0417                     	;# 
  3913  0418                     	;# 
  3914  0418                     	;# 
  3915  0419                     	;# 
  3916  041A                     	;# 
  3917  041A                     	;# 
  3918  041B                     	;# 
  3919  041C                     	;# 
  3920  041C                     	;# 
  3921  041D                     	;# 
  3922  041E                     	;# 
  3923  041F                     	;# 
  3924  048C                     	;# 
  3925  048C                     	;# 
  3926  048D                     	;# 
  3927  048E                     	;# 
  3928  048F                     	;# 
  3929  048F                     	;# 
  3930  0490                     	;# 
  3931  0491                     	;# 
  3932  0492                     	;# 
  3933  0492                     	;# 
  3934  0493                     	;# 
  3935  0494                     	;# 
  3936  0495                     	;# 
  3937  0495                     	;# 
  3938  0496                     	;# 
  3939  0497                     	;# 
  3940  0498                     	;# 
  3941  0499                     	;# 
  3942  049A                     	;# 
  3943  049B                     	;# 
  3944  049C                     	;# 
  3945  049D                     	;# 
  3946  050C                     	;# 
  3947  050C                     	;# 
  3948  050D                     	;# 
  3949  050E                     	;# 
  3950  050F                     	;# 
  3951  050F                     	;# 
  3952  0510                     	;# 
  3953  0511                     	;# 
  3954  0512                     	;# 
  3955  0512                     	;# 
  3956  0513                     	;# 
  3957  0514                     	;# 
  3958  0515                     	;# 
  3959  0515                     	;# 
  3960  0516                     	;# 
  3961  0517                     	;# 
  3962  0518                     	;# 
  3963  0519                     	;# 
  3964  051A                     	;# 
  3965  051B                     	;# 
  3966  051C                     	;# 
  3967  051D                     	;# 
  3968  058C                     	;# 
  3969  058C                     	;# 
  3970  058D                     	;# 
  3971  058E                     	;# 
  3972  058F                     	;# 
  3973  058F                     	;# 
  3974  0590                     	;# 
  3975  0591                     	;# 
  3976  0592                     	;# 
  3977  0593                     	;# 
  3978  060C                     	;# 
  3979  060D                     	;# 
  3980  060E                     	;# 
  3981  060F                     	;# 
  3982  0610                     	;# 
  3983  0611                     	;# 
  3984  0612                     	;# 
  3985  0613                     	;# 
  3986  0614                     	;# 
  3987  0616                     	;# 
  3988  0617                     	;# 
  3989  0618                     	;# 
  3990  0619                     	;# 
  3991  061A                     	;# 
  3992  061B                     	;# 
  3993  061C                     	;# 
  3994  061D                     	;# 
  3995  061E                     	;# 
  3996  068C                     	;# 
  3997  068D                     	;# 
  3998  068E                     	;# 
  3999  068F                     	;# 
  4000  0690                     	;# 
  4001  0691                     	;# 
  4002  0692                     	;# 
  4003  0693                     	;# 
  4004  0694                     	;# 
  4005  070C                     	;# 
  4006  070D                     	;# 
  4007  070E                     	;# 
  4008  070F                     	;# 
  4009  0710                     	;# 
  4010  0711                     	;# 
  4011  0712                     	;# 
  4012  0713                     	;# 
  4013  0714                     	;# 
  4014  0716                     	;# 
  4015  0717                     	;# 
  4016  0718                     	;# 
  4017  0719                     	;# 
  4018  071A                     	;# 
  4019  071B                     	;# 
  4020  071C                     	;# 
  4021  071D                     	;# 
  4022  071E                     	;# 
  4023  0796                     	;# 
  4024  0797                     	;# 
  4025  0798                     	;# 
  4026  0799                     	;# 
  4027  079A                     	;# 
  4028  079B                     	;# 
  4029  080C                     	;# 
  4030  080D                     	;# 
  4031  080E                     	;# 
  4032  080F                     	;# 
  4033  0810                     	;# 
  4034  0811                     	;# 
  4035  0812                     	;# 
  4036  0813                     	;# 
  4037  0814                     	;# 
  4038  081A                     	;# 
  4039  081B                     	;# 
  4040  081C                     	;# 
  4041  081D                     	;# 
  4042  081E                     	;# 
  4043  081F                     	;# 
  4044  088C                     	;# 
  4045  088D                     	;# 
  4046  088E                     	;# 
  4047  088F                     	;# 
  4048  0890                     	;# 
  4049  0891                     	;# 
  4050  0892                     	;# 
  4051  0893                     	;# 
  4052  0895                     	;# 
  4053  0896                     	;# 
  4054  0897                     	;# 
  4055  0898                     	;# 
  4056  0899                     	;# 
  4057  089A                     	;# 
  4058  089B                     	;# 
  4059  090C                     	;# 
  4060  090E                     	;# 
  4061  090F                     	;# 
  4062  091F                     	;# 
  4063  091F                     	;# 
  4064  098F                     	;# 
  4065  098F                     	;# 
  4066  0990                     	;# 
  4067  0991                     	;# 
  4068  0992                     	;# 
  4069  0993                     	;# 
  4070  0994                     	;# 
  4071  0995                     	;# 
  4072  0996                     	;# 
  4073  0997                     	;# 
  4074  0E0F                     	;# 
  4075  0E10                     	;# 
  4076  0E11                     	;# 
  4077  0E12                     	;# 
  4078  0E13                     	;# 
  4079  0E14                     	;# 
  4080  0E15                     	;# 
  4081  0E16                     	;# 
  4082  0E17                     	;# 
  4083  0E18                     	;# 
  4084  0E19                     	;# 
  4085  0E1A                     	;# 
  4086  0E1B                     	;# 
  4087  0E1C                     	;# 
  4088  0E1D                     	;# 
  4089  0E1E                     	;# 
  4090  0E1F                     	;# 
  4091  0E20                     	;# 
  4092  0E21                     	;# 
  4093  0E22                     	;# 
  4094  0E23                     	;# 
  4095  0E24                     	;# 
  4096  0E25                     	;# 
  4097  0E26                     	;# 
  4098  0E27                     	;# 
  4099  0E28                     	;# 
  4100  0E29                     	;# 
  4101  0E2A                     	;# 
  4102  0E2B                     	;# 
  4103  0E2C                     	;# 
  4104  0E2D                     	;# 
  4105  0E2E                     	;# 
  4106  0E2F                     	;# 
  4107  0E30                     	;# 
  4108  0E31                     	;# 
  4109  0E32                     	;# 
  4110  0E33                     	;# 
  4111  0E34                     	;# 
  4112  0E35                     	;# 
  4113  0E36                     	;# 
  4114  0E37                     	;# 
  4115  0E8F                     	;# 
  4116  0E90                     	;# 
  4117  0E91                     	;# 
  4118  0E92                     	;# 
  4119  0E93                     	;# 
  4120  0E94                     	;# 
  4121  0E95                     	;# 
  4122  0E96                     	;# 
  4123  0E97                     	;# 
  4124  0E9C                     	;# 
  4125  0E9D                     	;# 
  4126  0E9E                     	;# 
  4127  0EA1                     	;# 
  4128  0EA2                     	;# 
  4129  0EA3                     	;# 
  4130  0EA4                     	;# 
  4131  0EA5                     	;# 
  4132  0EA9                     	;# 
  4133  0EAA                     	;# 
  4134  0EAB                     	;# 
  4135  0EAC                     	;# 
  4136  0EB1                     	;# 
  4137  0EB2                     	;# 
  4138  0EB3                     	;# 
  4139  0EB8                     	;# 
  4140  0EB9                     	;# 
  4141  0EBA                     	;# 
  4142  0EBB                     	;# 
  4143  0EBC                     	;# 
  4144  0EBD                     	;# 
  4145  0EBE                     	;# 
  4146  0EC3                     	;# 
  4147  0EC5                     	;# 
  4148  0EC6                     	;# 
  4149  0EC7                     	;# 
  4150  0EC8                     	;# 
  4151  0EC9                     	;# 
  4152  0ECA                     	;# 
  4153  0ECB                     	;# 
  4154  0ECC                     	;# 
  4155  0F10                     	;# 
  4156  0F11                     	;# 
  4157  0F12                     	;# 
  4158  0F13                     	;# 
  4159  0F14                     	;# 
  4160  0F15                     	;# 
  4161  0F16                     	;# 
  4162  0F17                     	;# 
  4163  0F18                     	;# 
  4164  0F19                     	;# 
  4165  0F1A                     	;# 
  4166  0F1B                     	;# 
  4167  0F1C                     	;# 
  4168  0F1D                     	;# 
  4169  0F1E                     	;# 
  4170  0F1F                     	;# 
  4171  0F20                     	;# 
  4172  0F21                     	;# 
  4173  0F22                     	;# 
  4174  0F23                     	;# 
  4175  0F24                     	;# 
  4176  0F25                     	;# 
  4177  0F26                     	;# 
  4178  0F27                     	;# 
  4179  0F38                     	;# 
  4180  0F39                     	;# 
  4181  0F3A                     	;# 
  4182  0F3B                     	;# 
  4183  0F3C                     	;# 
  4184  0F3D                     	;# 
  4185  0F3E                     	;# 
  4186  0F3F                     	;# 
  4187  0F40                     	;# 
  4188  0F41                     	;# 
  4189  0F43                     	;# 
  4190  0F44                     	;# 
  4191  0F45                     	;# 
  4192  0F46                     	;# 
  4193  0F47                     	;# 
  4194  0F48                     	;# 
  4195  0F49                     	;# 
  4196  0F4A                     	;# 
  4197  0F4B                     	;# 
  4198  0F4C                     	;# 
  4199  0F4E                     	;# 
  4200  0F4F                     	;# 
  4201  0F50                     	;# 
  4202  0F51                     	;# 
  4203  0F52                     	;# 
  4204  0F53                     	;# 
  4205  0F54                     	;# 
  4206  0F55                     	;# 
  4207  0F56                     	;# 
  4208  0F57                     	;# 
  4209  0F65                     	;# 
  4210  0F68                     	;# 
  4211  0F69                     	;# 
  4212  0F6A                     	;# 
  4213  0F6B                     	;# 
  4214  0FE4                     	;# 
  4215  0FE5                     	;# 
  4216  0FE6                     	;# 
  4217  0FE7                     	;# 
  4218  0FE8                     	;# 
  4219  0FE9                     	;# 
  4220  0FEA                     	;# 
  4221  0FEB                     	;# 
  4222  0FED                     	;# 
  4223  0FEE                     	;# 
  4224  0FEF                     	;# 
  4225  0000                     	;# 
  4226  0001                     	;# 
  4227  0002                     	;# 
  4228  0003                     	;# 
  4229  0004                     	;# 
  4230  0005                     	;# 
  4231  0006                     	;# 
  4232  0007                     	;# 
  4233  0008                     	;# 
  4234  0009                     	;# 
  4235  000A                     	;# 
  4236  000B                     	;# 
  4237  000C                     	;# 
  4238  000D                     	;# 
  4239  000E                     	;# 
  4240  0010                     	;# 
  4241  0011                     	;# 
  4242  0012                     	;# 
  4243  0013                     	;# 
  4244  0016                     	;# 
  4245  0017                     	;# 
  4246  0018                     	;# 
  4247  001C                     	;# 
  4248  001C                     	;# 
  4249  001D                     	;# 
  4250  001D                     	;# 
  4251  001E                     	;# 
  4252  001F                     	;# 
  4253  008C                     	;# 
  4254  008C                     	;# 
  4255  008D                     	;# 
  4256  008E                     	;# 
  4257  008E                     	;# 
  4258  008F                     	;# 
  4259  0090                     	;# 
  4260  0090                     	;# 
  4261  0091                     	;# 
  4262  0093                     	;# 
  4263  0094                     	;# 
  4264  0095                     	;# 
  4265  0096                     	;# 
  4266  0097                     	;# 
  4267  0098                     	;# 
  4268  0099                     	;# 
  4269  009A                     	;# 
  4270  009B                     	;# 
  4271  009C                     	;# 
  4272  009D                     	;# 
  4273  009E                     	;# 
  4274  010C                     	;# 
  4275  010D                     	;# 
  4276  010E                     	;# 
  4277  010E                     	;# 
  4278  010F                     	;# 
  4279  0110                     	;# 
  4280  0110                     	;# 
  4281  0111                     	;# 
  4282  0112                     	;# 
  4283  0112                     	;# 
  4284  0113                     	;# 
  4285  0114                     	;# 
  4286  0114                     	;# 
  4287  0115                     	;# 
  4288  0116                     	;# 
  4289  0116                     	;# 
  4290  0117                     	;# 
  4291  0119                     	;# 
  4292  0119                     	;# 
  4293  0119                     	;# 
  4294  011A                     	;# 
  4295  011A                     	;# 
  4296  011A                     	;# 
  4297  011B                     	;# 
  4298  011B                     	;# 
  4299  011B                     	;# 
  4300  011B                     	;# 
  4301  011B                     	;# 
  4302  011C                     	;# 
  4303  011C                     	;# 
  4304  011C                     	;# 
  4305  011D                     	;# 
  4306  011D                     	;# 
  4307  011D                     	;# 
  4308  011E                     	;# 
  4309  011E                     	;# 
  4310  011E                     	;# 
  4311  011F                     	;# 
  4312  011F                     	;# 
  4313  011F                     	;# 
  4314  011F                     	;# 
  4315  011F                     	;# 
  4316  018C                     	;# 
  4317  018D                     	;# 
  4318  018E                     	;# 
  4319  018F                     	;# 
  4320  0190                     	;# 
  4321  0191                     	;# 
  4322  0192                     	;# 
  4323  0196                     	;# 
  4324  0197                     	;# 
  4325  0198                     	;# 
  4326  0199                     	;# 
  4327  019A                     	;# 
  4328  019B                     	;# 
  4329  019C                     	;# 
  4330  020C                     	;# 
  4331  020C                     	;# 
  4332  020D                     	;# 
  4333  020E                     	;# 
  4334  020F                     	;# 
  4335  020F                     	;# 
  4336  0210                     	;# 
  4337  0210                     	;# 
  4338  0211                     	;# 
  4339  0211                     	;# 
  4340  0212                     	;# 
  4341  0212                     	;# 
  4342  0213                     	;# 
  4343  0214                     	;# 
  4344  0215                     	;# 
  4345  0215                     	;# 
  4346  0216                     	;# 
  4347  0216                     	;# 
  4348  0217                     	;# 
  4349  0217                     	;# 
  4350  0218                     	;# 
  4351  0218                     	;# 
  4352  0219                     	;# 
  4353  021A                     	;# 
  4354  021B                     	;# 
  4355  021B                     	;# 
  4356  021C                     	;# 
  4357  021C                     	;# 
  4358  021D                     	;# 
  4359  021D                     	;# 
  4360  021E                     	;# 
  4361  021F                     	;# 
  4362  028C                     	;# 
  4363  028C                     	;# 
  4364  028D                     	;# 
  4365  028D                     	;# 
  4366  028E                     	;# 
  4367  028F                     	;# 
  4368  0290                     	;# 
  4369  0290                     	;# 
  4370  0291                     	;# 
  4371  0292                     	;# 
  4372  0292                     	;# 
  4373  0293                     	;# 
  4374  0293                     	;# 
  4375  0294                     	;# 
  4376  0295                     	;# 
  4377  0296                     	;# 
  4378  0296                     	;# 
  4379  0297                     	;# 
  4380  0298                     	;# 
  4381  0298                     	;# 
  4382  0299                     	;# 
  4383  0299                     	;# 
  4384  029A                     	;# 
  4385  029B                     	;# 
  4386  029C                     	;# 
  4387  029C                     	;# 
  4388  029D                     	;# 
  4389  030C                     	;# 
  4390  030C                     	;# 
  4391  030D                     	;# 
  4392  030E                     	;# 
  4393  030F                     	;# 
  4394  0310                     	;# 
  4395  0310                     	;# 
  4396  0311                     	;# 
  4397  0312                     	;# 
  4398  0313                     	;# 
  4399  0314                     	;# 
  4400  0314                     	;# 
  4401  0315                     	;# 
  4402  0316                     	;# 
  4403  0317                     	;# 
  4404  0318                     	;# 
  4405  0318                     	;# 
  4406  0319                     	;# 
  4407  031A                     	;# 
  4408  031B                     	;# 
  4409  031C                     	;# 
  4410  031C                     	;# 
  4411  031D                     	;# 
  4412  031E                     	;# 
  4413  031F                     	;# 
  4414  038C                     	;# 
  4415  038D                     	;# 
  4416  038E                     	;# 
  4417  0390                     	;# 
  4418  0391                     	;# 
  4419  0392                     	;# 
  4420  040C                     	;# 
  4421  040D                     	;# 
  4422  040E                     	;# 
  4423  040F                     	;# 
  4424  0410                     	;# 
  4425  0411                     	;# 
  4426  0416                     	;# 
  4427  0416                     	;# 
  4428  0417                     	;# 
  4429  0418                     	;# 
  4430  0418                     	;# 
  4431  0419                     	;# 
  4432  041A                     	;# 
  4433  041A                     	;# 
  4434  041B                     	;# 
  4435  041C                     	;# 
  4436  041C                     	;# 
  4437  041D                     	;# 
  4438  041E                     	;# 
  4439  041F                     	;# 
  4440  048C                     	;# 
  4441  048C                     	;# 
  4442  048D                     	;# 
  4443  048E                     	;# 
  4444  048F                     	;# 
  4445  048F                     	;# 
  4446  0490                     	;# 
  4447  0491                     	;# 
  4448  0492                     	;# 
  4449  0492                     	;# 
  4450  0493                     	;# 
  4451  0494                     	;# 
  4452  0495                     	;# 
  4453  0495                     	;# 
  4454  0496                     	;# 
  4455  0497                     	;# 
  4456  0498                     	;# 
  4457  0499                     	;# 
  4458  049A                     	;# 
  4459  049B                     	;# 
  4460  049C                     	;# 
  4461  049D                     	;# 
  4462  050C                     	;# 
  4463  050C                     	;# 
  4464  050D                     	;# 
  4465  050E                     	;# 
  4466  050F                     	;# 
  4467  050F                     	;# 
  4468  0510                     	;# 
  4469  0511                     	;# 
  4470  0512                     	;# 
  4471  0512                     	;# 
  4472  0513                     	;# 
  4473  0514                     	;# 
  4474  0515                     	;# 
  4475  0515                     	;# 
  4476  0516                     	;# 
  4477  0517                     	;# 
  4478  0518                     	;# 
  4479  0519                     	;# 
  4480  051A                     	;# 
  4481  051B                     	;# 
  4482  051C                     	;# 
  4483  051D                     	;# 
  4484  058C                     	;# 
  4485  058C                     	;# 
  4486  058D                     	;# 
  4487  058E                     	;# 
  4488  058F                     	;# 
  4489  058F                     	;# 
  4490  0590                     	;# 
  4491  0591                     	;# 
  4492  0592                     	;# 
  4493  0593                     	;# 
  4494  060C                     	;# 
  4495  060D                     	;# 
  4496  060E                     	;# 
  4497  060F                     	;# 
  4498  0610                     	;# 
  4499  0611                     	;# 
  4500  0612                     	;# 
  4501  0613                     	;# 
  4502  0614                     	;# 
  4503  0616                     	;# 
  4504  0617                     	;# 
  4505  0618                     	;# 
  4506  0619                     	;# 
  4507  061A                     	;# 
  4508  061B                     	;# 
  4509  061C                     	;# 
  4510  061D                     	;# 
  4511  061E                     	;# 
  4512  068C                     	;# 
  4513  068D                     	;# 
  4514  068E                     	;# 
  4515  068F                     	;# 
  4516  0690                     	;# 
  4517  0691                     	;# 
  4518  0692                     	;# 
  4519  0693                     	;# 
  4520  0694                     	;# 
  4521  070C                     	;# 
  4522  070D                     	;# 
  4523  070E                     	;# 
  4524  070F                     	;# 
  4525  0710                     	;# 
  4526  0711                     	;# 
  4527  0712                     	;# 
  4528  0713                     	;# 
  4529  0714                     	;# 
  4530  0716                     	;# 
  4531  0717                     	;# 
  4532  0718                     	;# 
  4533  0719                     	;# 
  4534  071A                     	;# 
  4535  071B                     	;# 
  4536  071C                     	;# 
  4537  071D                     	;# 
  4538  071E                     	;# 
  4539  0796                     	;# 
  4540  0797                     	;# 
  4541  0798                     	;# 
  4542  0799                     	;# 
  4543  079A                     	;# 
  4544  079B                     	;# 
  4545  080C                     	;# 
  4546  080D                     	;# 
  4547  080E                     	;# 
  4548  080F                     	;# 
  4549  0810                     	;# 
  4550  0811                     	;# 
  4551  0812                     	;# 
  4552  0813                     	;# 
  4553  0814                     	;# 
  4554  081A                     	;# 
  4555  081B                     	;# 
  4556  081C                     	;# 
  4557  081D                     	;# 
  4558  081E                     	;# 
  4559  081F                     	;# 
  4560  088C                     	;# 
  4561  088D                     	;# 
  4562  088E                     	;# 
  4563  088F                     	;# 
  4564  0890                     	;# 
  4565  0891                     	;# 
  4566  0892                     	;# 
  4567  0893                     	;# 
  4568  0895                     	;# 
  4569  0896                     	;# 
  4570  0897                     	;# 
  4571  0898                     	;# 
  4572  0899                     	;# 
  4573  089A                     	;# 
  4574  089B                     	;# 
  4575  090C                     	;# 
  4576  090E                     	;# 
  4577  090F                     	;# 
  4578  091F                     	;# 
  4579  091F                     	;# 
  4580  098F                     	;# 
  4581  098F                     	;# 
  4582  0990                     	;# 
  4583  0991                     	;# 
  4584  0992                     	;# 
  4585  0993                     	;# 
  4586  0994                     	;# 
  4587  0995                     	;# 
  4588  0996                     	;# 
  4589  0997                     	;# 
  4590  0E0F                     	;# 
  4591  0E10                     	;# 
  4592  0E11                     	;# 
  4593  0E12                     	;# 
  4594  0E13                     	;# 
  4595  0E14                     	;# 
  4596  0E15                     	;# 
  4597  0E16                     	;# 
  4598  0E17                     	;# 
  4599  0E18                     	;# 
  4600  0E19                     	;# 
  4601  0E1A                     	;# 
  4602  0E1B                     	;# 
  4603  0E1C                     	;# 
  4604  0E1D                     	;# 
  4605  0E1E                     	;# 
  4606  0E1F                     	;# 
  4607  0E20                     	;# 
  4608  0E21                     	;# 
  4609  0E22                     	;# 
  4610  0E23                     	;# 
  4611  0E24                     	;# 
  4612  0E25                     	;# 
  4613  0E26                     	;# 
  4614  0E27                     	;# 
  4615  0E28                     	;# 
  4616  0E29                     	;# 
  4617  0E2A                     	;# 
  4618  0E2B                     	;# 
  4619  0E2C                     	;# 
  4620  0E2D                     	;# 
  4621  0E2E                     	;# 
  4622  0E2F                     	;# 
  4623  0E30                     	;# 
  4624  0E31                     	;# 
  4625  0E32                     	;# 
  4626  0E33                     	;# 
  4627  0E34                     	;# 
  4628  0E35                     	;# 
  4629  0E36                     	;# 
  4630  0E37                     	;# 
  4631  0E8F                     	;# 
  4632  0E90                     	;# 
  4633  0E91                     	;# 
  4634  0E92                     	;# 
  4635  0E93                     	;# 
  4636  0E94                     	;# 
  4637  0E95                     	;# 
  4638  0E96                     	;# 
  4639  0E97                     	;# 
  4640  0E9C                     	;# 
  4641  0E9D                     	;# 
  4642  0E9E                     	;# 
  4643  0EA1                     	;# 
  4644  0EA2                     	;# 
  4645  0EA3                     	;# 
  4646  0EA4                     	;# 
  4647  0EA5                     	;# 
  4648  0EA9                     	;# 
  4649  0EAA                     	;# 
  4650  0EAB                     	;# 
  4651  0EAC                     	;# 
  4652  0EB1                     	;# 
  4653  0EB2                     	;# 
  4654  0EB3                     	;# 
  4655  0EB8                     	;# 
  4656  0EB9                     	;# 
  4657  0EBA                     	;# 
  4658  0EBB                     	;# 
  4659  0EBC                     	;# 
  4660  0EBD                     	;# 
  4661  0EBE                     	;# 
  4662  0EC3                     	;# 
  4663  0EC5                     	;# 
  4664  0EC6                     	;# 
  4665  0EC7                     	;# 
  4666  0EC8                     	;# 
  4667  0EC9                     	;# 
  4668  0ECA                     	;# 
  4669  0ECB                     	;# 
  4670  0ECC                     	;# 
  4671  0F10                     	;# 
  4672  0F11                     	;# 
  4673  0F12                     	;# 
  4674  0F13                     	;# 
  4675  0F14                     	;# 
  4676  0F15                     	;# 
  4677  0F16                     	;# 
  4678  0F17                     	;# 
  4679  0F18                     	;# 
  4680  0F19                     	;# 
  4681  0F1A                     	;# 
  4682  0F1B                     	;# 
  4683  0F1C                     	;# 
  4684  0F1D                     	;# 
  4685  0F1E                     	;# 
  4686  0F1F                     	;# 
  4687  0F20                     	;# 
  4688  0F21                     	;# 
  4689  0F22                     	;# 
  4690  0F23                     	;# 
  4691  0F24                     	;# 
  4692  0F25                     	;# 
  4693  0F26                     	;# 
  4694  0F27                     	;# 
  4695  0F38                     	;# 
  4696  0F39                     	;# 
  4697  0F3A                     	;# 
  4698  0F3B                     	;# 
  4699  0F3C                     	;# 
  4700  0F3D                     	;# 
  4701  0F3E                     	;# 
  4702  0F3F                     	;# 
  4703  0F40                     	;# 
  4704  0F41                     	;# 
  4705  0F43                     	;# 
  4706  0F44                     	;# 
  4707  0F45                     	;# 
  4708  0F46                     	;# 
  4709  0F47                     	;# 
  4710  0F48                     	;# 
  4711  0F49                     	;# 
  4712  0F4A                     	;# 
  4713  0F4B                     	;# 
  4714  0F4C                     	;# 
  4715  0F4E                     	;# 
  4716  0F4F                     	;# 
  4717  0F50                     	;# 
  4718  0F51                     	;# 
  4719  0F52                     	;# 
  4720  0F53                     	;# 
  4721  0F54                     	;# 
  4722  0F55                     	;# 
  4723  0F56                     	;# 
  4724  0F57                     	;# 
  4725  0F65                     	;# 
  4726  0F68                     	;# 
  4727  0F69                     	;# 
  4728  0F6A                     	;# 
  4729  0F6B                     	;# 
  4730  0FE4                     	;# 
  4731  0FE5                     	;# 
  4732  0FE6                     	;# 
  4733  0FE7                     	;# 
  4734  0FE8                     	;# 
  4735  0FE9                     	;# 
  4736  0FEA                     	;# 
  4737  0FEB                     	;# 
  4738  0FED                     	;# 
  4739  0FEE                     	;# 
  4740  0FEF                     	;_samples
  4741                           
  4742                           	psect	idataBANK0
  4743  0006                     __pidataBANK0:	
  4744                           
  4745                           ;initializer for _Imode0
  4746  0006  3401               	retlw	1
  4747                           
  4748                           	psect	idataBANK2
  4749  0BB5                     __pidataBANK2:	
  4750                           
  4751                           ;initializer for _channels
  4752  0BB5  3417               	retlw	23
  4753  0BB6  3400               	retlw	0
  4754  0BB7  3415               	retlw	21
  4755  0BB8  3400               	retlw	0
  4756  0BB9  3413               	retlw	19
  4757  0BBA  3400               	retlw	0
  4758  0BBB  3411               	retlw	17
  4759  0BBC  3400               	retlw	0
  4760  0BBD  3416               	retlw	22
  4761  0BBE  3400               	retlw	0
  4762  0BBF  3414               	retlw	20
  4763  0BC0  3400               	retlw	0
  4764  0BC1  3412               	retlw	18
  4765  0BC2  3400               	retlw	0
  4766  0BC3  3410               	retlw	16
  4767  0BC4  3400               	retlw	0
  4768                           
  4769                           	psect	stringtext1
  4770  0800                     __pstringtext1:	
  4771  0800                     _fonts:	
  4772  0800  3400               	retlw	0
  4773  0801  3400               	retlw	0
  4774  0802  3400               	retlw	0
  4775  0803  3400               	retlw	0
  4776  0804  344E               	retlw	78
  4777  0805  3400               	retlw	0
  4778  0806  3406               	retlw	6
  4779  0807  3400               	retlw	0
  4780  0808  3406               	retlw	6
  4781  0809  34FF               	retlw	255
  4782  080A  34FF               	retlw	255
  4783  080B  34FF               	retlw	255
  4784  080C  3448               	retlw	72
  4785  080D  34D6               	retlw	214
  4786  080E  3424               	retlw	36
  4787  080F  3412               	retlw	18
  4788  0810  3408               	retlw	8
  4789  0811  3424               	retlw	36
  4790  0812  34FF               	retlw	255
  4791  0813  34FF               	retlw	255
  4792  0814  34FF               	retlw	255
  4793  0815  3400               	retlw	0
  4794  0816  3406               	retlw	6
  4795  0817  3400               	retlw	0
  4796  0818  3438               	retlw	56
  4797  0819  3444               	retlw	68
  4798  081A  3482               	retlw	130
  4799  081B  3482               	retlw	130
  4800  081C  3444               	retlw	68
  4801  081D  3438               	retlw	56
  4802  081E  3414               	retlw	20
  4803  081F  3408               	retlw	8
  4804  0820  343E               	retlw	62
  4805  0821  3410               	retlw	16
  4806  0822  3438               	retlw	56
  4807  0823  3410               	retlw	16
  4808  0824  34A0               	retlw	160
  4809  0825  3460               	retlw	96
  4810  0826  3400               	retlw	0
  4811  0827  3410               	retlw	16
  4812  0828  3410               	retlw	16
  4813  0829  3410               	retlw	16
  4814  082A  3460               	retlw	96
  4815  082B  3460               	retlw	96
  4816  082C  3400               	retlw	0
  4817  082D  3460               	retlw	96
  4818  082E  3418               	retlw	24
  4819  082F  3406               	retlw	6
  4820  0830  347C               	retlw	124
  4821  0831  3442               	retlw	66
  4822  0832  347C               	retlw	124
  4823  0833  3444               	retlw	68
  4824  0834  347E               	retlw	126
  4825  0835  3440               	retlw	64
  4826  0836  3464               	retlw	100
  4827  0837  3452               	retlw	82
  4828  0838  344C               	retlw	76
  4829  0839  344A               	retlw	74
  4830  083A  344A               	retlw	74
  4831  083B  3434               	retlw	52
  4832  083C  3438               	retlw	56
  4833  083D  3424               	retlw	36
  4834  083E  347E               	retlw	126
  4835  083F  344E               	retlw	78
  4836  0840  344A               	retlw	74
  4837  0841  3432               	retlw	50
  4838  0842  343C               	retlw	60
  4839  0843  344A               	retlw	74
  4840  0844  3432               	retlw	50
  4841  0845  3462               	retlw	98
  4842  0846  341A               	retlw	26
  4843  0847  3406               	retlw	6
  4844  0848  3476               	retlw	118
  4845  0849  344A               	retlw	74
  4846  084A  3476               	retlw	118
  4847  084B  344C               	retlw	76
  4848  084C  3452               	retlw	82
  4849  084D  343C               	retlw	60
  4850  084E  346C               	retlw	108
  4851  084F  346C               	retlw	108
  4852  0850  3400               	retlw	0
  4853  0851  34AC               	retlw	172
  4854  0852  346C               	retlw	108
  4855  0853  3400               	retlw	0
  4856  0854  3410               	retlw	16
  4857  0855  3428               	retlw	40
  4858  0856  3444               	retlw	68
  4859  0857  3428               	retlw	40
  4860  0858  3428               	retlw	40
  4861  0859  3428               	retlw	40
  4862  085A  3444               	retlw	68
  4863  085B  3428               	retlw	40
  4864  085C  3410               	retlw	16
  4865  085D  3402               	retlw	2
  4866  085E  3459               	retlw	89
  4867  085F  3406               	retlw	6
  4868  0860  34FF               	retlw	255
  4869  0861  34FF               	retlw	255
  4870  0862  34FF               	retlw	255
  4871  0863  347C               	retlw	124
  4872  0864  3412               	retlw	18
  4873  0865  347C               	retlw	124
  4874  0866  347E               	retlw	126
  4875  0867  345A               	retlw	90
  4876  0868  3434               	retlw	52
  4877  0869  343C               	retlw	60
  4878  086A  3442               	retlw	66
  4879  086B  3442               	retlw	66
  4880  086C  347E               	retlw	126
  4881  086D  3442               	retlw	66
  4882  086E  343C               	retlw	60
  4883  086F  347E               	retlw	126
  4884  0870  344A               	retlw	74
  4885  0871  3442               	retlw	66
  4886  0872  347E               	retlw	126
  4887  0873  340A               	retlw	10
  4888  0874  340A               	retlw	10
  4889  0875  343C               	retlw	60
  4890  0876  3452               	retlw	82
  4891  0877  3434               	retlw	52
  4892  0878  347E               	retlw	126
  4893  0879  3408               	retlw	8
  4894  087A  347E               	retlw	126
  4895  087B  3442               	retlw	66
  4896  087C  347E               	retlw	126
  4897  087D  3442               	retlw	66
  4898  087E  3430               	retlw	48
  4899  087F  3440               	retlw	64
  4900  0880  343E               	retlw	62
  4901  0881  347E               	retlw	126
  4902  0882  3418               	retlw	24
  4903  0883  3466               	retlw	102
  4904  0884  347E               	retlw	126
  4905  0885  3440               	retlw	64
  4906  0886  3440               	retlw	64
  4907  0887  347E               	retlw	126
  4908  0888  341C               	retlw	28
  4909  0889  347E               	retlw	126
  4910  088A  347E               	retlw	126
  4911  088B  3402               	retlw	2
  4912  088C  347E               	retlw	126
  4913  088D  343C               	retlw	60
  4914  088E  3442               	retlw	66
  4915  088F  343C               	retlw	60
  4916  0890  347E               	retlw	126
  4917  0891  3412               	retlw	18
  4918  0892  340C               	retlw	12
  4919  0893  347E               	retlw	126
  4920  0894  3462               	retlw	98
  4921  0895  34FE               	retlw	254
  4922  0896  347E               	retlw	126
  4923  0897  3432               	retlw	50
  4924  0898  344E               	retlw	78
  4925  0899  3444               	retlw	68
  4926  089A  344A               	retlw	74
  4927  089B  3432               	retlw	50
  4928  089C  3402               	retlw	2
  4929  089D  347E               	retlw	126
  4930  089E  3402               	retlw	2
  4931  089F  347E               	retlw	126
  4932  08A0  3440               	retlw	64
  4933  08A1  347E               	retlw	126
  4934  08A2  343E               	retlw	62
  4935  08A3  3440               	retlw	64
  4936  08A4  343E               	retlw	62
  4937  08A5  347E               	retlw	126
  4938  08A6  3438               	retlw	56
  4939  08A7  347E               	retlw	126
  4940  08A8  3466               	retlw	102
  4941  08A9  3418               	retlw	24
  4942  08AA  3466               	retlw	102
  4943  08AB  340E               	retlw	14
  4944  08AC  3470               	retlw	112
  4945  08AD  340E               	retlw	14
  4946  08AE  3462               	retlw	98
  4947  08AF  345A               	retlw	90
  4948  08B0  3446               	retlw	70
  4949  08B1  3400               	retlw	0
  4950  08B2  347E               	retlw	126
  4951  08B3  3442               	retlw	66
  4952  08B4  3406               	retlw	6
  4953  08B5  3418               	retlw	24
  4954  08B6  3460               	retlw	96
  4955  08B7  3442               	retlw	66
  4956  08B8  347E               	retlw	126
  4957  08B9  3400               	retlw	0
  4958  08BA  3404               	retlw	4
  4959  08BB  3402               	retlw	2
  4960  08BC  3404               	retlw	4
  4961  08BD  3440               	retlw	64
  4962  08BE  3440               	retlw	64
  4963  08BF  3440               	retlw	64
  4964  08C0  3400               	retlw	0
  4965  08C1  3402               	retlw	2
  4966  08C2  3404               	retlw	4
  4967  08C3  3474               	retlw	116
  4968  08C4  3454               	retlw	84
  4969  08C5  3478               	retlw	120
  4970  08C6  347E               	retlw	126
  4971  08C7  3448               	retlw	72
  4972  08C8  3430               	retlw	48
  4973  08C9  3430               	retlw	48
  4974  08CA  3448               	retlw	72
  4975  08CB  3448               	retlw	72
  4976  08CC  3430               	retlw	48
  4977  08CD  3448               	retlw	72
  4978  08CE  347E               	retlw	126
  4979  08CF  3438               	retlw	56
  4980  08D0  3454               	retlw	84
  4981  08D1  3458               	retlw	88
  4982  08D2  347C               	retlw	124
  4983  08D3  340A               	retlw	10
  4984  08D4  3402               	retlw	2
  4985  08D5  3498               	retlw	152
  4986  08D6  34A4               	retlw	164
  4987  08D7  347C               	retlw	124
  4988  08D8  347E               	retlw	126
  4989  08D9  3408               	retlw	8
  4990  08DA  3470               	retlw	112
  4991  08DB  3448               	retlw	72
  4992  08DC  347A               	retlw	122
  4993  08DD  3440               	retlw	64
  4994  08DE  3488               	retlw	136
  4995  08DF  34FA               	retlw	250
  4996  08E0  3400               	retlw	0
  4997  08E1  347E               	retlw	126
  4998  08E2  3418               	retlw	24
  4999  08E3  3464               	retlw	100
  5000  08E4  3442               	retlw	66
  5001  08E5  347E               	retlw	126
  5002  08E6  3440               	retlw	64
  5003  08E7  347C               	retlw	124
  5004  08E8  3438               	retlw	56
  5005  08E9  347C               	retlw	124
  5006  08EA  347C               	retlw	124
  5007  08EB  3404               	retlw	4
  5008  08EC  3478               	retlw	120
  5009  08ED  3438               	retlw	56
  5010  08EE  3444               	retlw	68
  5011  08EF  3438               	retlw	56
  5012  08F0  34FC               	retlw	252
  5013  08F1  3424               	retlw	36
  5014  08F2  3418               	retlw	24
  5015  08F3  3418               	retlw	24
  5016  08F4  3424               	retlw	36
  5017  08F5  34FC               	retlw	252
  5018  08F6  3478               	retlw	120
  5019  08F7  3404               	retlw	4
  5020  08F8  3404               	retlw	4
  5021  08F9  3448               	retlw	72
  5022  08FA  3454               	retlw	84
  5023  08FB  3424               	retlw	36
  5024  08FC  3404               	retlw	4
  5025  08FD  343E               	retlw	62
  5026  08FE  3444               	retlw	68
  5027  08FF  347C               	retlw	124
  5028  0900  3440               	retlw	64
  5029  0901  347C               	retlw	124
  5030  0902  343C               	retlw	60
  5031  0903  3440               	retlw	64
  5032  0904  343C               	retlw	60
  5033  0905  347C               	retlw	124
  5034  0906  3430               	retlw	48
  5035  0907  347C               	retlw	124
  5036  0908  346C               	retlw	108
  5037  0909  3410               	retlw	16
  5038  090A  346C               	retlw	108
  5039  090B  349C               	retlw	156
  5040  090C  34A0               	retlw	160
  5041  090D  347C               	retlw	124
  5042  090E  3464               	retlw	100
  5043  090F  3454               	retlw	84
  5044  0910  344C               	retlw	76
  5045  0911  340C               	retlw	12
  5046  0912  3412               	retlw	18
  5047  0913  340C               	retlw	12
  5048  0914  34FF               	retlw	255
  5049  0915  34FF               	retlw	255
  5050  0916  34FF               	retlw	255
  5051  0917  34FF               	retlw	255
  5052  0918  34FF               	retlw	255
  5053  0919  34FF               	retlw	255
  5054  091A  34FF               	retlw	255
  5055  091B  34FF               	retlw	255
  5056  091C  34FF               	retlw	255
  5057  091D  34FF               	retlw	255
  5058  091E  34FF               	retlw	255
  5059  091F  34FF               	retlw	255
  5060  0920  34FF               	retlw	255
  5061  0921  34FF               	retlw	255
  5062  0922  34FF               	retlw	255
  5063  0923  34FF               	retlw	255
  5064  0924  34FF               	retlw	255
  5065  0925  34FF               	retlw	255
  5066  0926  34FC               	retlw	252
  5067  0927  3440               	retlw	64
  5068  0928  347C               	retlw	124
  5069  0929  34FF               	retlw	255
  5070  092A  34FF               	retlw	255
  5071  092B  34FF               	retlw	255
  5072  092C  34FF               	retlw	255
  5073  092D  34FF               	retlw	255
  5074  092E  34FF               	retlw	255
  5075  092F                     __end_of_fonts:	
  5076                           
  5077                           	psect	nvBANK0
  5078  006B                     __pnvBANK0:	
  5079  006B                     _Vref:	
  5080  006B                     	ds	2
  5081  006D                     _IminCount:	
  5082  006D                     	ds	1
  5083  006E                     _battery_state:	
  5084  006E                     	ds	1
  5085                           
  5086                           	psect	nvBANK1
  5087  00DD                     __pnvBANK1:	
  5088  00DD                     _warmup:	
  5089  00DD                     	ds	2
  5090  00DF                     _Iref:	
  5091  00DF                     	ds	2
  5092  00E1                     _Imin:	
  5093  00E1                     	ds	2
  5094  00E3                     _state_counter:	
  5095  00E3                     	ds	2
  5096  00E5                     _Iflat_db:	
  5097  00E5                     	ds	2
  5098  0013                     _TRISC	set	19
  5099  0012                     _TRISB	set	18
  5100  0011                     _TRISA	set	17
  5101  0018                     _LATC	set	24
  5102  0017                     _LATB	set	23
  5103  0016                     _LATA	set	22
  5104  0016                     _LATAbits	set	22
  5105  0011                     _TRISAbits	set	17
  5106  006A                     _RB2	set	106
  5107  005F                     _GIE	set	95
  5108  008F                     _TRISA7	set	143
  5109  008E                     _TRISA6	set	142
  5110  0093                     _ADCON0	set	147
  5111  009D                     _ADACQ	set	157
  5112  009C                     _ADPRE	set	156
  5113  009B                     _ADCAP	set	155
  5114  009A                     _ADREF	set	154
  5115  0098                     _ADCLK	set	152
  5116  0097                     _ADSTAT	set	151
  5117  0099                     _ADACT	set	153
  5118  0096                     _ADCON3	set	150
  5119  0095                     _ADCON2	set	149
  5120  0094                     _ADCON1	set	148
  5121  008C                     _ADRESL	set	140
  5122  008D                     _ADRESH	set	141
  5123  0093                     _ADCON0bits	set	147
  5124  009E                     _ADPCH	set	158
  5125  0113                     _ADSTPTH	set	275
  5126  0112                     _ADSTPTL	set	274
  5127  0111                     _ADUTHH	set	273
  5128  0110                     _ADUTHL	set	272
  5129  010F                     _ADLTHH	set	271
  5130  010E                     _ADLTHL	set	270
  5131  010D                     _ADRPT	set	269
  5132  021F                     _CCPTMRS1bits	set	543
  5133  028E                     _T2CONbits	set	654
  5134  028C                     _T2TMR	set	652
  5135  028D                     _T2PR	set	653
  5136  0291                     _T2RST	set	657
  5137  028F                     _T2HLT	set	655
  5138  0290                     _T2CLKCON	set	656
  5139  028E                     _T2CON	set	654
  5140  0390                     _PWM7DCL	set	912
  5141  0391                     _PWM7DCH	set	913
  5142  0392                     _PWM7CON	set	914
  5143  038C                     _PWM6DCL	set	908
  5144  038D                     _PWM6DCH	set	909
  5145  038E                     _PWM6CON	set	910
  5146  0710                     _PIR4bits	set	1808
  5147  0716                     _PIE0bits	set	1814
  5148  0892                     _OSCTUNE	set	2194
  5149  0893                     _OSCFRQ	set	2195
  5150  0891                     _OSCEN	set	2193
  5151  088F                     _OSCCON3	set	2191
  5152  088D                     _OSCCON1	set	2189
  5153  090C                     _FVRCON	set	2316
  5154  0E8F                     _PPSLOCKbits	set	3727
  5155  0E8F                     _PPSLOCK	set	3727
  5156  0F17                     _RA7PPS	set	3863
  5157  0F16                     _RA6PPS	set	3862
  5158  0F4E                     _ANSELC	set	3918
  5159  0F43                     _ANSELB	set	3907
  5160  0F38                     _ANSELA	set	3896
  5161  0F65                     _WPUE	set	3941
  5162  0F4F                     _WPUC	set	3919
  5163  0F44                     _WPUB	set	3908
  5164  0F39                     _WPUA	set	3897
  5165                           
  5166                           ; #config settings
  5167  0000                     
  5168                           	psect	cinit
  5169  07CB                     start_initialization:	
  5170  07CB                     __initialization:		;BIGRAM
  5171                           
  5172                           ; Initialize objects allocated to BANK0
  5173  07CB  3180  2006  3187   	fcall	__pidataBANK0	;fetch initializer
  5174  07CE  00EF               	movwf	__pdataBANK0& (0+127)
  5175                           
  5176                           ; Initialize objects allocated to BANK2
  5177  07CF  30B5               	movlw	low __pidataBANK2
  5178  07D0  0084               	movwf	4
  5179  07D1  308B               	movlw	(high __pidataBANK2)| (0+128)
  5180  07D2  0085               	movwf	5
  5181  07D3  3020               	movlw	low __pdataBANK2
  5182  07D4  0086               	movwf	6
  5183  07D5  3001               	movlw	high __pdataBANK2
  5184  07D6  0087               	movwf	7
  5185  07D7  3000               	movlw	0
  5186  07D8  00FF               	movwf	btemp+1
  5187  07D9  3010               	movlw	16
  5188  07DA  318B  239B  3187   	fcall	init_ram
  5189                           
  5190                           ; Clear objects allocated to BIGRAM
  5191  07DD  30D0               	movlw	low (0+8400)
  5192  07DE  0084               	movwf	4
  5193  07DF  3020               	movlw	high (0+8400)
  5194  07E0  0085               	movwf	5
  5195  07E1  3020               	movlw	32
  5196  07E2  00FE               	movwf	btemp
  5197  07E3  3003               	movlw	3
  5198  07E4  00FF               	movwf	btemp+1
  5199  07E5  318B  238F  3187   	fcall	clear_ram0
  5200                           
  5201                           ; Clear objects allocated to BANK0
  5202  07E8  3057               	movlw	low __pbssBANK0
  5203  07E9  0084               	movwf	4
  5204  07EA  3000               	movlw	high __pbssBANK0
  5205  07EB  0085               	movwf	5
  5206  07EC  3014               	movlw	20
  5207  07ED  00FE               	movwf	btemp
  5208  07EE  3000               	movlw	0
  5209  07EF  00FF               	movwf	btemp+1
  5210  07F0  318B  238F  3187   	fcall	clear_ram0
  5211                           
  5212                           ; Clear objects allocated to BANK1
  5213  07F3  30A0               	movlw	low __pbssBANK1
  5214  07F4  0084               	movwf	4
  5215  07F5  3000               	movlw	high __pbssBANK1
  5216  07F6  0085               	movwf	5
  5217  07F7  303D               	movlw	61
  5218  07F8  00FE               	movwf	btemp
  5219  07F9  3000               	movlw	0
  5220  07FA  00FF               	movwf	btemp+1
  5221  07FB  318B  238F         	fcall	clear_ram0
  5222  07FD                     end_of_initialization:	
  5223                           ;End of C runtime variable initialization code
  5224                           
  5225  07FD                     __end_of__initialization:	
  5226  07FD  0020               	movlb	0
  5227  07FE  3184  2C43         	ljmp	_main	;jump to C main() function
  5228                           
  5229                           	psect	bssBANK0
  5230  0057                     __pbssBANK0:	
  5231  0057                     _voltage:	
  5232  0057                     	ds	8
  5233  005F                     _readButtons:	
  5234  005F                     	ds	2
  5235  0061                     _count:	
  5236  0061                     	ds	2
  5237  0063                     _Iout:	
  5238  0063                     	ds	2
  5239  0065                     _sampleIndex:	
  5240  0065                     	ds	2
  5241  0067                     _j:	
  5242  0067                     	ds	1
  5243  0068                     _lastButton:	
  5244  0068                     	ds	1
  5245  0069                     _button:	
  5246  0069                     	ds	1
  5247  006A                     _cc_cv:	
  5248  006A                     	ds	1
  5249                           
  5250                           	psect	dataBANK0
  5251  006F                     __pdataBANK0:	
  5252  006F                     _Imode0:	
  5253  006F                     	ds	1
  5254                           
  5255                           	psect	bssBANK1
  5256  00A0                     __pbssBANK1:	
  5257  00A0                     _totals:	
  5258  00A0                     	ds	32
  5259  00C0                     _analogs:	
  5260  00C0                     	ds	16
  5261  00D0                     _current:	
  5262  00D0                     	ds	8
  5263  00D8                     LCDWriteInt@F14393:	
  5264  00D8                     	ds	5
  5265                           
  5266                           	psect	dataBANK2
  5267  0120                     __pdataBANK2:	
  5268  0120                     _channels:	
  5269  0120                     	ds	16
  5270                           
  5271                           	psect	inittext
  5272  0B9B                     init_ram:	
  5273  0B9B  00FE               	movwf	126
  5274  0B9C                     initloop:	
  5275  0B9C  0012               	moviw fsr0++
  5276  0B9D  001E               	movwi fsr1++
  5277  0B9E  3001               	movlw	1
  5278  0B9F  02FE               	subwf	126,f
  5279  0BA0  3000               	movlw	0
  5280  0BA1  3BFF               	subwfb	127,f
  5281  0BA2  087F               	movf	127,w
  5282  0BA3  047E               	iorwf	126,w
  5283  0BA4  1903               	btfsc	3,2
  5284  0BA5  3400               	retlw	0
  5285  0BA6  2B9C               	goto	initloop
  5286                           
  5287                           	psect	clrtext
  5288  0B8F                     clear_ram0:	
  5289                           ;	Called with FSR0 containing the base address, and
  5290                           ;	btemp/btemp+1 has the size to clear
  5291                           
  5292  0B8F  0064               	clrwdt	;clear the watchdog before getting into this loop
  5293  0B90                     clrloop0:	
  5294  0B90  0180               	clrf	0	;clear RAM location pointed to by FSR
  5295  0B91  3101               	addfsr 0,1
  5296  0B92  3001               	movlw	1
  5297  0B93  02FE               	subwf	126,f
  5298  0B94  3000               	movlw	0
  5299  0B95  3BFF               	subwfb	127,f
  5300  0B96  087F               	movf	127,w
  5301  0B97  047E               	iorwf	126,w
  5302  0B98  1903               	btfsc	3,2
  5303  0B99  3400               	retlw	0	;all done for this memory range, return
  5304  0B9A  2B90               	goto	clrloop0	;have we reached the end yet?
  5305                           
  5306                           	psect	cstackCOMMON
  5307  0070                     __pcstackCOMMON:	
  5308  0070                     ?_LCDWrite:	
  5309  0070                     ?_OSCILLATOR_Initialize:	
  5310                           ; 1 bytes @ 0x0
  5311                           
  5312  0070                     ??_OSCILLATOR_Initialize:	
  5313                           ; 1 bytes @ 0x0
  5314                           
  5315  0070                     ?_calculateCurrent0:	
  5316                           ; 1 bytes @ 0x0
  5317                           
  5318  0070                     ?_calculateCurrent1:	
  5319                           ; 1 bytes @ 0x0
  5320                           
  5321  0070                     ?_ADC_Initialize:	
  5322                           ; 1 bytes @ 0x0
  5323                           
  5324  0070                     ??_ADC_Initialize:	
  5325                           ; 1 bytes @ 0x0
  5326                           
  5327  0070                     ?_Init_Battery_State_Machine:	
  5328                           ; 1 bytes @ 0x0
  5329                           
  5330  0070                     ??_Init_Battery_State_Machine:	
  5331                           ; 1 bytes @ 0x0
  5332                           
  5333  0070                     ?_Battery_State_Machine:	
  5334                           ; 1 bytes @ 0x0
  5335                           
  5336  0070                     ??_Battery_State_Machine:	
  5337                           ; 1 bytes @ 0x0
  5338                           
  5339  0070                     ?_cc_cv_mode:	
  5340                           ; 1 bytes @ 0x0
  5341                           
  5342  0070                     ??_cc_cv_mode:	
  5343                           ; 1 bytes @ 0x0
  5344                           
  5345  0070                     ?_LCDWriteCharacter:	
  5346                           ; 1 bytes @ 0x0
  5347                           
  5348  0070                     ?_LCDClear:	
  5349                           ; 1 bytes @ 0x0
  5350                           
  5351  0070                     ?_LCDInit:	
  5352                           ; 1 bytes @ 0x0
  5353                           
  5354  0070                     ?_PIN_MANAGER_Initialize:	
  5355                           ; 1 bytes @ 0x0
  5356                           
  5357  0070                     ??_PIN_MANAGER_Initialize:	
  5358                           ; 1 bytes @ 0x0
  5359                           
  5360  0070                     ?_PWM_Initialize:	
  5361                           ; 1 bytes @ 0x0
  5362                           
  5363  0070                     ??_PWM_Initialize:	
  5364                           ; 1 bytes @ 0x0
  5365                           
  5366  0070                     ?_PWM6_LoadDutyValue:	
  5367                           ; 1 bytes @ 0x0
  5368                           
  5369  0070                     ?_PWM7_LoadDutyValue:	
  5370                           ; 1 bytes @ 0x0
  5371                           
  5372  0070                     ?_TMR2_Initialize:	
  5373                           ; 1 bytes @ 0x0
  5374                           
  5375  0070                     ??_TMR2_Initialize:	
  5376                           ; 1 bytes @ 0x0
  5377                           
  5378  0070                     ?_SYSTEM_Initialize:	
  5379                           ; 1 bytes @ 0x0
  5380                           
  5381  0070                     ?_readButton:	
  5382                           ; 1 bytes @ 0x0
  5383                           
  5384  0070                     ?_main:	
  5385                           ; 1 bytes @ 0x0
  5386                           
  5387  0070                     ?_ADCRead:	
  5388                           ; 1 bytes @ 0x0
  5389                           
  5390  0070                     ?___awdiv:	
  5391                           ; 2 bytes @ 0x0
  5392                           
  5393  0070                     ?___lwmod:	
  5394                           ; 2 bytes @ 0x0
  5395                           
  5396  0070                     ?___ftpack:	
  5397                           ; 2 bytes @ 0x0
  5398                           
  5399  0070                     ?___aldiv:	
  5400                           ; 3 bytes @ 0x0
  5401                           
  5402  0070                     LCDWrite@data:	
  5403                           ; 4 bytes @ 0x0
  5404                           
  5405  0070                     PIN_MANAGER_Initialize@state:	
  5406                           ; 1 bytes @ 0x0
  5407                           
  5408  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  5409                           ; 1 bytes @ 0x0
  5410                           
  5411  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5412                           ; 2 bytes @ 0x0
  5413                           
  5414  0070                     ___awdiv@divisor:	
  5415                           ; 2 bytes @ 0x0
  5416                           
  5417  0070                     ___lwmod@divisor:	
  5418                           ; 2 bytes @ 0x0
  5419                           
  5420  0070                     ___ftpack@arg:	
  5421                           ; 2 bytes @ 0x0
  5422                           
  5423  0070                     ___aldiv@divisor:	
  5424                           ; 3 bytes @ 0x0
  5425                           
  5426                           
  5427                           ; 4 bytes @ 0x0
  5428  0070                     	ds	1
  5429  0071                     ??_LCDWrite:	
  5430                           
  5431                           ; 1 bytes @ 0x1
  5432  0071                     	ds	1
  5433  0072                     ??_PWM6_LoadDutyValue:	
  5434  0072                     ??_PWM7_LoadDutyValue:	
  5435                           ; 1 bytes @ 0x2
  5436                           
  5437  0072                     LCDWrite@data_or_command:	
  5438                           ; 1 bytes @ 0x2
  5439                           
  5440  0072                     ___awdiv@dividend:	
  5441                           ; 1 bytes @ 0x2
  5442                           
  5443  0072                     ___lwmod@dividend:	
  5444                           ; 2 bytes @ 0x2
  5445                           
  5446                           
  5447                           ; 2 bytes @ 0x2
  5448  0072                     	ds	1
  5449  0073                     ??_ADCRead:	
  5450  0073                     ADCRead@channel:	
  5451                           ; 1 bytes @ 0x3
  5452                           
  5453  0073                     LCDWrite@d:	
  5454                           ; 1 bytes @ 0x3
  5455                           
  5456  0073                     ___ftpack@exp:	
  5457                           ; 1 bytes @ 0x3
  5458                           
  5459                           
  5460                           ; 1 bytes @ 0x3
  5461  0073                     	ds	1
  5462  0074                     ??_readButton:	
  5463  0074                     ??___awdiv:	
  5464                           ; 1 bytes @ 0x4
  5465                           
  5466  0074                     ??___lwmod:	
  5467                           ; 1 bytes @ 0x4
  5468                           
  5469  0074                     LCDWrite@i:	
  5470                           ; 1 bytes @ 0x4
  5471                           
  5472  0074                     ___ftpack@sign:	
  5473                           ; 1 bytes @ 0x4
  5474                           
  5475  0074                     ___aldiv@dividend:	
  5476                           ; 1 bytes @ 0x4
  5477                           
  5478                           
  5479                           ; 4 bytes @ 0x4
  5480  0074                     	ds	1
  5481  0075                     ??___ftpack:	
  5482  0075                     ?_gotoXY:	
  5483                           ; 1 bytes @ 0x5
  5484                           
  5485  0075                     ??_LCDInit:	
  5486                           ; 1 bytes @ 0x5
  5487                           
  5488  0075                     gotoXY@y:	
  5489                           ; 1 bytes @ 0x5
  5490                           
  5491  0075                     ___awdiv@counter:	
  5492                           ; 1 bytes @ 0x5
  5493                           
  5494  0075                     ___lwmod@counter:	
  5495                           ; 1 bytes @ 0x5
  5496                           
  5497                           
  5498                           ; 1 bytes @ 0x5
  5499  0075                     	ds	1
  5500  0076                     ??_gotoXY:	
  5501  0076                     ___awdiv@sign:	
  5502                           ; 1 bytes @ 0x6
  5503                           
  5504                           
  5505                           ; 1 bytes @ 0x6
  5506  0076                     	ds	1
  5507  0077                     gotoXY@x:	
  5508  0077                     ___awdiv@quotient:	
  5509                           ; 1 bytes @ 0x7
  5510                           
  5511                           
  5512                           ; 2 bytes @ 0x7
  5513  0077                     	ds	1
  5514  0078                     ??_LCDClear:	
  5515  0078                     ??___aldiv:	
  5516                           ; 1 bytes @ 0x8
  5517                           
  5518  0078                     ?___awtoft:	
  5519                           ; 1 bytes @ 0x8
  5520                           
  5521  0078                     ___awtoft@c:	
  5522                           ; 3 bytes @ 0x8
  5523                           
  5524                           
  5525                           ; 2 bytes @ 0x8
  5526  0078                     	ds	1
  5527  0079                     ?___wmul:	
  5528  0079                     LCDClear@index:	
  5529                           ; 2 bytes @ 0x9
  5530                           
  5531  0079                     ___wmul@multiplier:	
  5532                           ; 2 bytes @ 0x9
  5533                           
  5534                           
  5535                           ; 2 bytes @ 0x9
  5536  0079                     	ds	2
  5537  007B                     ??_SYSTEM_Initialize:	
  5538  007B                     ??___awtoft:	
  5539                           ; 1 bytes @ 0xB
  5540                           
  5541  007B                     ___wmul@multiplicand:	
  5542                           ; 1 bytes @ 0xB
  5543                           
  5544                           
  5545                           ; 2 bytes @ 0xB
  5546  007B                     	ds	2
  5547  007D                     ??___wmul:	
  5548  007D                     ___awtoft@sign:	
  5549                           ; 1 bytes @ 0xD
  5550                           
  5551                           
  5552                           ; 1 bytes @ 0xD
  5553  007D                     	ds	1
  5554                           
  5555                           	psect	cstackBANK0
  5556  0020                     __pcstackBANK0:	
  5557  0020                     ?___ftdiv:	
  5558  0020                     ___aldiv@counter:	
  5559                           ; 3 bytes @ 0x0
  5560                           
  5561  0020                     ___wmul@product:	
  5562                           ; 1 bytes @ 0x0
  5563                           
  5564  0020                     ___ftdiv@f2:	
  5565                           ; 2 bytes @ 0x0
  5566                           
  5567                           
  5568                           ; 3 bytes @ 0x0
  5569  0020                     	ds	1
  5570  0021                     ___aldiv@sign:	
  5571                           
  5572                           ; 1 bytes @ 0x1
  5573  0021                     	ds	1
  5574  0022                     ??_LCDWriteCharacter:	
  5575  0022                     ___aldiv@quotient:	
  5576                           ; 1 bytes @ 0x2
  5577                           
  5578                           
  5579                           ; 4 bytes @ 0x2
  5580  0022                     	ds	1
  5581  0023                     ___ftdiv@f1:	
  5582                           
  5583                           ; 3 bytes @ 0x3
  5584  0023                     	ds	2
  5585  0025                     LCDWriteCharacter@character:	
  5586                           
  5587                           ; 1 bytes @ 0x5
  5588  0025                     	ds	1
  5589  0026                     ??___ftdiv:	
  5590  0026                     ?_readAnalog:	
  5591                           ; 1 bytes @ 0x6
  5592                           
  5593  0026                     readAnalog@channel:	
  5594                           ; 2 bytes @ 0x6
  5595                           
  5596  0026                     LCDWriteCharacter@base:	
  5597                           ; 2 bytes @ 0x6
  5598                           
  5599                           
  5600                           ; 2 bytes @ 0x6
  5601  0026                     	ds	2
  5602  0028                     ??_readAnalog:	
  5603  0028                     ?_LCDWriteInt:	
  5604                           ; 1 bytes @ 0x8
  5605                           
  5606  0028                     LCDWriteInt@value:	
  5607                           ; 1 bytes @ 0x8
  5608                           
  5609                           
  5610                           ; 2 bytes @ 0x8
  5611  0028                     	ds	2
  5612  002A                     LCDWriteInt@fieldLength:	
  5613  002A                     ___ftdiv@cntr:	
  5614                           ; 1 bytes @ 0xA
  5615                           
  5616                           
  5617                           ; 1 bytes @ 0xA
  5618  002A                     	ds	1
  5619  002B                     LCDWriteInt@numPlaces:	
  5620  002B                     ___ftdiv@f3:	
  5621                           ; 1 bytes @ 0xB
  5622                           
  5623                           
  5624                           ; 3 bytes @ 0xB
  5625  002B                     	ds	1
  5626  002C                     LCDWriteInt@sign:	
  5627                           
  5628                           ; 1 bytes @ 0xC
  5629  002C                     	ds	1
  5630  002D                     ??_LCDWriteInt:	
  5631                           
  5632                           ; 1 bytes @ 0xD
  5633  002D                     	ds	1
  5634  002E                     ___ftdiv@exp:	
  5635                           
  5636                           ; 1 bytes @ 0xE
  5637  002E                     	ds	1
  5638  002F                     ___ftdiv@sign:	
  5639                           
  5640                           ; 1 bytes @ 0xF
  5641  002F                     	ds	1
  5642  0030                     ?___fttol:	
  5643  0030                     ___fttol@f1:	
  5644                           ; 4 bytes @ 0x10
  5645                           
  5646                           
  5647                           ; 3 bytes @ 0x10
  5648  0030                     	ds	1
  5649  0031                     LCDWriteInt@str:	
  5650                           
  5651                           ; 5 bytes @ 0x11
  5652  0031                     	ds	3
  5653  0034                     ??___fttol:	
  5654                           
  5655                           ; 1 bytes @ 0x14
  5656  0034                     	ds	2
  5657  0036                     LCDWriteInt@j:	
  5658                           
  5659                           ; 1 bytes @ 0x16
  5660  0036                     	ds	1
  5661  0037                     LCDWriteInt@i:	
  5662                           
  5663                           ; 1 bytes @ 0x17
  5664  0037                     	ds	1
  5665  0038                     ___fttol@sign1:	
  5666                           
  5667                           ; 1 bytes @ 0x18
  5668  0038                     	ds	1
  5669  0039                     ___fttol@lval:	
  5670                           
  5671                           ; 4 bytes @ 0x19
  5672  0039                     	ds	1
  5673  003A                     readAnalog@analog_channel:	
  5674                           
  5675                           ; 2 bytes @ 0x1A
  5676  003A                     	ds	2
  5677  003C                     readAnalog@value:	
  5678                           
  5679                           ; 2 bytes @ 0x1C
  5680  003C                     	ds	1
  5681  003D                     ___fttol@exp1:	
  5682                           
  5683                           ; 1 bytes @ 0x1D
  5684  003D                     	ds	1
  5685  003E                     ??_calculateCurrent0:	
  5686  003E                     ??_calculateCurrent1:	
  5687                           ; 1 bytes @ 0x1E
  5688                           
  5689                           
  5690                           ; 1 bytes @ 0x1E
  5691  003E                     	ds	3
  5692  0041                     ??_main:	
  5693                           
  5694                           ; 1 bytes @ 0x21
  5695  0041                     	ds	2
  5696  0043                     main@VIn0_Old:	
  5697                           
  5698                           ; 2 bytes @ 0x23
  5699  0043                     	ds	2
  5700  0045                     main@power0OutOld:	
  5701                           
  5702                           ; 2 bytes @ 0x25
  5703  0045                     	ds	2
  5704  0047                     main@power1OutOld:	
  5705                           
  5706                           ; 2 bytes @ 0x27
  5707  0047                     	ds	2
  5708  0049                     main@fastLoop:	
  5709                           
  5710                           ; 1 bytes @ 0x29
  5711  0049                     	ds	1
  5712  004A                     main@slowLoop:	
  5713                           
  5714                           ; 1 bytes @ 0x2A
  5715  004A                     	ds	1
  5716  004B                     main@VIn1_Old:	
  5717                           
  5718                           ; 2 bytes @ 0x2B
  5719  004B                     	ds	2
  5720  004D                     _main$1023:	
  5721                           
  5722                           ; 2 bytes @ 0x2D
  5723  004D                     	ds	2
  5724  004F                     _main$1022:	
  5725                           
  5726                           ; 2 bytes @ 0x2F
  5727  004F                     	ds	2
  5728  0051                     main@menuButton:	
  5729                           
  5730                           ; 1 bytes @ 0x31
  5731  0051                     	ds	1
  5732  0052                     main@dutyCycle7:	
  5733                           
  5734                           ; 2 bytes @ 0x32
  5735  0052                     	ds	2
  5736  0054                     main@j:	
  5737                           
  5738                           ; 1 bytes @ 0x34
  5739  0054                     	ds	1
  5740  0055                     main@dutyCycle6:	
  5741                           
  5742                           ; 2 bytes @ 0x35
  5743  0055                     	ds	2
  5744                           
  5745                           	psect	maintext
  5746  0443                     __pmaintext:	
  5747 ;;
  5748 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5749 ;;
  5750 ;; *************** function _main *****************
  5751 ;; Defined at:
  5752 ;;		line 39 in file "main.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  dutyCycle6      2   53[BANK0 ] unsigned int 
  5757 ;;  dutyCycle7      2   50[BANK0 ] unsigned int 
  5758 ;;  VIn1_Old        2   43[BANK0 ] int 
  5759 ;;  power1OutOld    2   39[BANK0 ] int 
  5760 ;;  power0OutOld    2   37[BANK0 ] int 
  5761 ;;  VIn0_Old        2   35[BANK0 ] int 
  5762 ;;  j               1   52[BANK0 ] unsigned char 
  5763 ;;  menuButton      1   49[BANK0 ] unsigned char 
  5764 ;;  slowLoop        1   42[BANK0 ] unsigned char 
  5765 ;;  fastLoop        1   41[BANK0 ] unsigned char 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      void 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : B1F/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5777 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5778 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5779 ;;Total ram usage:       22 bytes
  5780 ;; Hardware stack levels required when called:    4
  5781 ;; This function calls:
  5782 ;;		_ADCRead
  5783 ;;		_Battery_State_Machine
  5784 ;;		_LCDClear
  5785 ;;		_LCDInit
  5786 ;;		_LCDWriteCharacter
  5787 ;;		_LCDWriteInt
  5788 ;;		_PWM6_LoadDutyValue
  5789 ;;		_PWM7_LoadDutyValue
  5790 ;;		_SYSTEM_Initialize
  5791 ;;		___awdiv
  5792 ;;		___awtoft
  5793 ;;		___ftdiv
  5794 ;;		___fttol
  5795 ;;		___wmul
  5796 ;;		_calculateCurrent0
  5797 ;;		_calculateCurrent1
  5798 ;;		_cc_cv_mode
  5799 ;;		_gotoXY
  5800 ;;		_readAnalog
  5801 ;;		_readButton
  5802 ;; This function is called by:
  5803 ;;		Startup code after reset
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           
  5808                           ;psect for function _main
  5809  0443                     _main:	
  5810                           
  5811                           ;main.c: 41: int16_t VIn0_Old = 0;
  5812                           
  5813                           ;incstack = 0
  5814                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5815  0443  0020               	movlb	0	; select bank0
  5816  0444  01C3               	clrf	main@VIn0_Old
  5817  0445  01C4               	clrf	main@VIn0_Old+1
  5818                           
  5819                           ;main.c: 42: int16_t VIn1_Old = 0;
  5820  0446  01CB               	clrf	main@VIn1_Old
  5821  0447  01CC               	clrf	main@VIn1_Old+1
  5822                           
  5823                           ;main.c: 43: int16_t power0OutOld = 0;
  5824  0448  01C5               	clrf	main@power0OutOld
  5825  0449  01C6               	clrf	main@power0OutOld+1
  5826                           
  5827                           ;main.c: 44: int16_t power1OutOld = 0;
  5828  044A  01C7               	clrf	main@power1OutOld
  5829  044B  01C8               	clrf	main@power1OutOld+1
  5830                           
  5831                           ;main.c: 46: uint16_t dutyCycle6 = 252;
  5832  044C  30FC               	movlw	252
  5833  044D  00D5               	movwf	main@dutyCycle6
  5834  044E  3000               	movlw	0
  5835  044F  00D6               	movwf	main@dutyCycle6+1
  5836                           
  5837                           ;main.c: 47: uint16_t dutyCycle7 = 126;
  5838  0450  307E               	movlw	126
  5839  0451  00D2               	movwf	main@dutyCycle7
  5840  0452  3000               	movlw	0
  5841  0453  00D3               	movwf	main@dutyCycle7+1
  5842                           
  5843                           ;main.c: 49: uint8_t j = 0;
  5844  0454  01D4               	clrf	main@j
  5845                           
  5846                           ;main.c: 51: uint8_t fastLoop = 0;
  5847  0455  01C9               	clrf	main@fastLoop
  5848                           
  5849                           ;main.c: 52: uint8_t slowLoop = 200;
  5850  0456  30C8               	movlw	200
  5851  0457  00C1               	movwf	??_main
  5852  0458  0841               	movf	??_main,w
  5853  0459  00CA               	movwf	main@slowLoop
  5854                           
  5855                           ;main.c: 53: extern int8_t Imode0;
  5856                           ;main.c: 54: extern int16_t Vref;
  5857                           ;main.c: 55: uint8_t menuButton = 0;
  5858  045A  01D1               	clrf	main@menuButton
  5859                           
  5860                           ;main.c: 57: SYSTEM_Initialize();
  5861  045B  318D  2516  3184   	fcall	_SYSTEM_Initialize
  5862                           
  5863                           ;main.c: 59: LCDClear();
  5864  045E  318C  249A  3184   	fcall	_LCDClear
  5865  0461                     l2376:	
  5866                           ;main.c: 61: void calculateCurrent0(void);
  5867                           ;main.c: 62: void calculateCurrent1(void);
  5868                           ;main.c: 76: while (1)
  5869                           
  5870                           
  5871                           ;main.c: 77: {
  5872                           ;main.c: 78: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  5873  0461  0020               	movlb	0	; select bank0
  5874  0462  01D4               	clrf	main@j
  5875  0463  3008               	movlw	8
  5876  0464  0254               	subwf	main@j,w
  5877  0465  1803               	btfsc	3,0
  5878  0466  2C82               	goto	l2388
  5879  0467                     l2382:	
  5880  0467  0854               	movf	main@j,w
  5881  0468  00C1               	movwf	??_main
  5882  0469  01C2               	clrf	??_main+1
  5883  046A  0841               	movf	??_main,w
  5884  046B  00A6               	movwf	readAnalog@channel
  5885  046C  0842               	movf	??_main+1,w
  5886  046D  00A7               	movwf	readAnalog@channel+1
  5887  046E  3183  230A  3184   	fcall	_readAnalog
  5888  0471  0020               	movlb	0	; select bank0
  5889  0472  3554               	lslf	main@j,w
  5890  0473  3EC0               	addlw	(low (_analogs| 0))& (0+255)
  5891  0474  0086               	movwf	6
  5892  0475  0187               	clrf	7
  5893  0476  0826               	movf	?_readAnalog,w
  5894  0477  3FC0               	movwi [0]fsr1
  5895  0478  0827               	movf	?_readAnalog+1,w
  5896  0479  3FC1               	movwi [1]fsr1
  5897  047A  3001               	movlw	1
  5898  047B  00C1               	movwf	??_main
  5899  047C  0841               	movf	??_main,w
  5900  047D  07D4               	addwf	main@j,f
  5901  047E  3008               	movlw	8
  5902  047F  0254               	subwf	main@j,w
  5903  0480  1C03               	skipc
  5904  0481  2C67               	goto	l2382
  5905  0482                     l2388:	
  5906                           
  5907                           ;main.c: 80: voltage[0]=analogs[0]/.20885;
  5908  0482  0021               	movlb	1	; select bank1
  5909  0483  0841               	movf	(_analogs+1)^(0+128),w
  5910  0484  00F9               	movwf	___awtoft@c+1
  5911  0485  0840               	movf	_analogs^(0+128),w
  5912  0486  00F8               	movwf	___awtoft@c
  5913  0487  318C  2455  3184   	fcall	___awtoft
  5914  048A  0878               	movf	?___awtoft,w
  5915  048B  0020               	movlb	0	; select bank0
  5916  048C  00A3               	movwf	___ftdiv@f1
  5917  048D  0879               	movf	?___awtoft+1,w
  5918  048E  00A4               	movwf	___ftdiv@f1+1
  5919  048F  087A               	movf	?___awtoft+2,w
  5920  0490  00A5               	movwf	___ftdiv@f1+2
  5921  0491  30DD               	movlw	221
  5922  0492  00A0               	movwf	___ftdiv@f2
  5923  0493  3055               	movlw	85
  5924  0494  00A1               	movwf	___ftdiv@f2+1
  5925  0495  303E               	movlw	62
  5926  0496  00A2               	movwf	___ftdiv@f2+2
  5927  0497  3181  21A8  3184   	fcall	___ftdiv
  5928  049A  0020               	movlb	0	; select bank0
  5929  049B  0820               	movf	?___ftdiv,w
  5930  049C  00B0               	movwf	___fttol@f1
  5931  049D  0821               	movf	?___ftdiv+1,w
  5932  049E  00B1               	movwf	___fttol@f1+1
  5933  049F  0822               	movf	?___ftdiv+2,w
  5934  04A0  00B2               	movwf	___fttol@f1+2
  5935  04A1  3181  2121  3184   	fcall	___fttol
  5936  04A4  0020               	movlb	0	; select bank0
  5937  04A5  0831               	movf	?___fttol+1,w
  5938  04A6  00D8               	movwf	_voltage+1
  5939  04A7  0830               	movf	?___fttol,w
  5940  04A8  00D7               	movwf	_voltage
  5941                           
  5942                           ;main.c: 82: voltage[1]=analogs[1]/.54503;
  5943  04A9  0021               	movlb	1	; select bank1
  5944  04AA  0843               	movf	((_analogs+1)^(0+128)+2),w
  5945  04AB  00F9               	movwf	___awtoft@c+1
  5946  04AC  0842               	movf	(_analogs^(0+128)+2),w
  5947  04AD  00F8               	movwf	___awtoft@c
  5948  04AE  318C  2455  3184   	fcall	___awtoft
  5949  04B1  0878               	movf	?___awtoft,w
  5950  04B2  0020               	movlb	0	; select bank0
  5951  04B3  00A3               	movwf	___ftdiv@f1
  5952  04B4  0879               	movf	?___awtoft+1,w
  5953  04B5  00A4               	movwf	___ftdiv@f1+1
  5954  04B6  087A               	movf	?___awtoft+2,w
  5955  04B7  00A5               	movwf	___ftdiv@f1+2
  5956  04B8  3087               	movlw	135
  5957  04B9  00A0               	movwf	___ftdiv@f2
  5958  04BA  300B               	movlw	11
  5959  04BB  00A1               	movwf	___ftdiv@f2+1
  5960  04BC  303F               	movlw	63
  5961  04BD  00A2               	movwf	___ftdiv@f2+2
  5962  04BE  3181  21A8  3184   	fcall	___ftdiv
  5963  04C1  0020               	movlb	0	; select bank0
  5964  04C2  0820               	movf	?___ftdiv,w
  5965  04C3  00B0               	movwf	___fttol@f1
  5966  04C4  0821               	movf	?___ftdiv+1,w
  5967  04C5  00B1               	movwf	___fttol@f1+1
  5968  04C6  0822               	movf	?___ftdiv+2,w
  5969  04C7  00B2               	movwf	___fttol@f1+2
  5970  04C8  3181  2121  3184   	fcall	___fttol
  5971  04CB  0020               	movlb	0	; select bank0
  5972  04CC  0831               	movf	?___fttol+1,w
  5973  04CD  00DA               	movwf	_voltage+3
  5974  04CE  0830               	movf	?___fttol,w
  5975  04CF  00D9               	movwf	_voltage+2
  5976                           
  5977                           ;main.c: 88: calculateCurrent0();
  5978  04D0  318D  25E8  3184   	fcall	_calculateCurrent0
  5979                           
  5980                           ;main.c: 91: calculateCurrent1();
  5981  04D3  318E  262D  3184   	fcall	_calculateCurrent1
  5982                           
  5983                           ;main.c: 94: if(fastLoop>10)
  5984  04D6  300B               	movlw	11
  5985  04D7  0020               	movlb	0	; select bank0
  5986  04D8  0249               	subwf	main@fastLoop,w
  5987  04D9  1C03               	skipc
  5988  04DA  2E04               	goto	l2470
  5989                           
  5990                           ;main.c: 95: {
  5991                           ;main.c: 96: if(Imode0)
  5992  04DB  086F               	movf	_Imode0,w
  5993  04DC  1903               	btfsc	3,2
  5994  04DD  2D84               	goto	l2426
  5995                           
  5996                           ;main.c: 97: {
  5997                           ;main.c: 98: if(voltage[0]<3164)
  5998  04DE  0858               	movf	_voltage+1,w
  5999  04DF  3A80               	xorlw	128
  6000  04E0  00C1               	movwf	??_main
  6001  04E1  308C               	movlw	140
  6002  04E2  0241               	subwf	??_main,w
  6003  04E3  1D03               	skipz
  6004  04E4  2CE7               	goto	u2625
  6005  04E5  305C               	movlw	92
  6006  04E6  0257               	subwf	_voltage,w
  6007  04E7                     u2625:	
  6008  04E7  1803               	skipnc
  6009  04E8  2CF6               	goto	l2400
  6010                           
  6011                           ;main.c: 99: {
  6012                           ;main.c: 100: if(dutyCycle6<252)
  6013  04E9  3000               	movlw	0
  6014  04EA  0020               	movlb	0	; select bank0
  6015  04EB  0256               	subwf	main@dutyCycle6+1,w
  6016  04EC  30FC               	movlw	252
  6017  04ED  1903               	skipnz
  6018  04EE  0255               	subwf	main@dutyCycle6,w
  6019  04EF  1803               	skipnc
  6020  04F0  2CFF               	goto	l2404
  6021                           
  6022                           ;main.c: 101: {
  6023                           ;main.c: 102: dutyCycle6+=1;
  6024  04F1  3001               	movlw	1
  6025  04F2  07D5               	addwf	main@dutyCycle6,f
  6026  04F3  3000               	movlw	0
  6027  04F4  3DD6               	addwfc	main@dutyCycle6+1,f
  6028                           
  6029                           ;main.c: 103: }
  6030                           ;main.c: 104: }
  6031  04F5  2CFF               	goto	l2404
  6032  04F6                     l2400:	
  6033                           
  6034                           ;main.c: 105: else if(dutyCycle6>0)
  6035  04F6  0020               	movlb	0	; select bank0
  6036  04F7  0855               	movf	main@dutyCycle6,w
  6037  04F8  0456               	iorwf	main@dutyCycle6+1,w
  6038  04F9  1903               	btfsc	3,2
  6039  04FA  2CFF               	goto	l2404
  6040                           
  6041                           ;main.c: 106: {
  6042                           ;main.c: 107: dutyCycle6-=1;
  6043  04FB  3001               	movlw	1
  6044  04FC  02D5               	subwf	main@dutyCycle6,f
  6045  04FD  3000               	movlw	0
  6046  04FE  3BD6               	subwfb	main@dutyCycle6+1,f
  6047  04FF                     l2404:	
  6048                           
  6049                           ;main.c: 108: }
  6050                           ;main.c: 139: power0OutOld=voltage[1]/100*current[1]/10;
  6051  04FF  3064               	movlw	100
  6052  0500  00F0               	movwf	___awdiv@divisor
  6053  0501  3000               	movlw	0
  6054  0502  00F1               	movwf	___awdiv@divisor+1
  6055  0503  085A               	movf	_voltage+3,w
  6056  0504  00F3               	movwf	___awdiv@dividend+1
  6057  0505  0859               	movf	_voltage+2,w
  6058  0506  00F2               	movwf	___awdiv@dividend
  6059  0507  318E  2672  3184   	fcall	___awdiv
  6060  050A  0871               	movf	?___awdiv+1,w
  6061  050B  00FA               	movwf	___wmul@multiplier+1
  6062  050C  0870               	movf	?___awdiv,w
  6063  050D  00F9               	movwf	___wmul@multiplier
  6064  050E  0021               	movlb	1	; select bank1
  6065  050F  0853               	movf	((_current+1)^(0+128)+2),w
  6066  0510  00FC               	movwf	___wmul@multiplicand+1
  6067  0511  0852               	movf	(_current^(0+128)+2),w
  6068  0512  00FB               	movwf	___wmul@multiplicand
  6069  0513  318C  2418  3184   	fcall	___wmul
  6070  0516  087A               	movf	?___wmul+1,w
  6071  0517  0020               	movlb	0	; select bank0
  6072  0518  00D0               	movwf	_main$1022+1
  6073  0519  0879               	movf	?___wmul,w
  6074  051A  00CF               	movwf	_main$1022
  6075                           
  6076                           ;main.c: 108: }
  6077                           ;main.c: 139: power0OutOld=voltage[1]/100*current[1]/10;
  6078  051B  300A               	movlw	10
  6079  051C  00F0               	movwf	___awdiv@divisor
  6080  051D  3000               	movlw	0
  6081  051E  00F1               	movwf	___awdiv@divisor+1
  6082  051F  0850               	movf	_main$1022+1,w
  6083  0520  00F3               	movwf	___awdiv@dividend+1
  6084  0521  084F               	movf	_main$1022,w
  6085  0522  00F2               	movwf	___awdiv@dividend
  6086  0523  318E  2672  3184   	fcall	___awdiv
  6087  0526  0871               	movf	?___awdiv+1,w
  6088  0527  0020               	movlb	0	; select bank0
  6089  0528  00C6               	movwf	main@power0OutOld+1
  6090  0529  0870               	movf	?___awdiv,w
  6091  052A  00C5               	movwf	main@power0OutOld
  6092                           
  6093                           ;main.c: 140: VIn0_Old=voltage[0];
  6094  052B  0858               	movf	_voltage+1,w
  6095  052C  00C4               	movwf	main@VIn0_Old+1
  6096  052D  0857               	movf	_voltage,w
  6097  052E  00C3               	movwf	main@VIn0_Old
  6098                           
  6099                           ;main.c: 142: if(voltage[3]*analogs[7]>power1OutOld)
  6100  052F  085E               	movf	_voltage+7,w
  6101  0530  00FA               	movwf	___wmul@multiplier+1
  6102  0531  085D               	movf	_voltage+6,w
  6103  0532  00F9               	movwf	___wmul@multiplier
  6104  0533  0021               	movlb	1	; select bank1
  6105  0534  084F               	movf	((_analogs+1)^(0+128)+14),w
  6106  0535  00FC               	movwf	___wmul@multiplicand+1
  6107  0536  084E               	movf	(_analogs^(0+128)+14),w
  6108  0537  00FB               	movwf	___wmul@multiplicand
  6109  0538  318C  2418  3184   	fcall	___wmul
  6110  053B  0020               	movlb	0	; select bank0
  6111  053C  0848               	movf	main@power1OutOld+1,w
  6112  053D  3A80               	xorlw	128
  6113  053E  00C1               	movwf	??_main
  6114  053F  087A               	movf	?___wmul+1,w
  6115  0540  3A80               	xorlw	128
  6116  0541  0241               	subwf	??_main,w
  6117  0542  1D03               	skipz
  6118  0543  2D46               	goto	u2655
  6119  0544  0879               	movf	?___wmul,w
  6120  0545  0247               	subwf	main@power1OutOld,w
  6121  0546                     u2655:	
  6122  0546  1803               	skipnc
  6123  0547  2D56               	goto	l2416
  6124                           
  6125                           ;main.c: 143: {
  6126                           ;main.c: 144: if(voltage[2]>VIn1_Old)
  6127  0548  0020               	movlb	0	; select bank0
  6128  0549  084C               	movf	main@VIn1_Old+1,w
  6129  054A  3A80               	xorlw	128
  6130  054B  00C1               	movwf	??_main
  6131  054C  085C               	movf	_voltage+5,w
  6132  054D  3A80               	xorlw	128
  6133  054E  0241               	subwf	??_main,w
  6134  054F  1D03               	skipz
  6135  0550  2D53               	goto	u2665
  6136  0551  085B               	movf	_voltage+4,w
  6137  0552  024B               	subwf	main@VIn1_Old,w
  6138  0553                     u2665:	
  6139  0553  1803               	skipnc
  6140  0554  2D63               	goto	l2418
  6141  0555  2D69               	goto	l2420
  6142  0556                     l2416:	
  6143                           ;main.c: 151: }
  6144                           ;main.c: 152: }
  6145                           
  6146                           ;main.c: 148: else
  6147                           ;main.c: 149: {
  6148                           ;main.c: 150: dutyCycle7-=1;
  6149                           
  6150                           ;main.c: 147: }
  6151                           
  6152                           ;main.c: 145: {
  6153                           ;main.c: 146: dutyCycle7+=1;
  6154                           
  6155                           
  6156                           ;main.c: 153: else
  6157                           ;main.c: 154: {
  6158                           ;main.c: 155: if(voltage[2]>VIn1_Old)
  6159  0556  0020               	movlb	0	; select bank0
  6160  0557  084C               	movf	main@VIn1_Old+1,w
  6161  0558  3A80               	xorlw	128
  6162  0559  00C1               	movwf	??_main
  6163  055A  085C               	movf	_voltage+5,w
  6164  055B  3A80               	xorlw	128
  6165  055C  0241               	subwf	??_main,w
  6166  055D  1D03               	skipz
  6167  055E  2D61               	goto	u2675
  6168  055F  085B               	movf	_voltage+4,w
  6169  0560  024B               	subwf	main@VIn1_Old,w
  6170  0561                     u2675:	
  6171  0561  1803               	skipnc
  6172  0562  2D69               	goto	l2420
  6173  0563                     l2418:	
  6174                           
  6175                           ;main.c: 156: {
  6176                           ;main.c: 157: dutyCycle7-=1;
  6177  0563  3001               	movlw	1
  6178  0564  0020               	movlb	0	; select bank0
  6179  0565  02D2               	subwf	main@dutyCycle7,f
  6180  0566  3000               	movlw	0
  6181  0567  3BD3               	subwfb	main@dutyCycle7+1,f
  6182                           
  6183                           ;main.c: 158: }
  6184  0568  2D6E               	goto	l2422
  6185  0569                     l2420:	
  6186                           
  6187                           ;main.c: 159: else
  6188                           ;main.c: 160: {
  6189                           ;main.c: 161: dutyCycle7+=1;
  6190  0569  3001               	movlw	1
  6191  056A  0020               	movlb	0	; select bank0
  6192  056B  07D2               	addwf	main@dutyCycle7,f
  6193  056C  3000               	movlw	0
  6194  056D  3DD3               	addwfc	main@dutyCycle7+1,f
  6195  056E                     l2422:	
  6196                           
  6197                           ;main.c: 162: }
  6198                           ;main.c: 163: }
  6199                           ;main.c: 164: power1OutOld=voltage[3]*analogs[7];
  6200  056E  085E               	movf	_voltage+7,w
  6201  056F  00FA               	movwf	___wmul@multiplier+1
  6202  0570  085D               	movf	_voltage+6,w
  6203  0571  00F9               	movwf	___wmul@multiplier
  6204  0572  0021               	movlb	1	; select bank1
  6205  0573  084F               	movf	((_analogs+1)^(0+128)+14),w
  6206  0574  00FC               	movwf	___wmul@multiplicand+1
  6207  0575  084E               	movf	(_analogs^(0+128)+14),w
  6208  0576  00FB               	movwf	___wmul@multiplicand
  6209  0577  318C  2418  3184   	fcall	___wmul
  6210  057A  087A               	movf	?___wmul+1,w
  6211  057B  0020               	movlb	0	; select bank0
  6212  057C  00C8               	movwf	main@power1OutOld+1
  6213  057D  0879               	movf	?___wmul,w
  6214  057E  00C7               	movwf	main@power1OutOld
  6215                           
  6216                           ;main.c: 165: VIn1_Old=voltage[2];
  6217  057F  085C               	movf	_voltage+5,w
  6218  0580  00CC               	movwf	main@VIn1_Old+1
  6219  0581  085B               	movf	_voltage+4,w
  6220  0582  00CB               	movwf	main@VIn1_Old
  6221                           
  6222                           ;main.c: 166: }
  6223  0583  2DC8               	goto	l2444
  6224  0584                     l2426:	
  6225                           
  6226                           ;main.c: 167: else
  6227                           ;main.c: 168: {
  6228                           ;main.c: 169: if(voltage[1]>(int16_t)Vref)
  6229  0584  086C               	movf	_Vref+1,w
  6230  0585  3A80               	xorlw	128
  6231  0586  00C1               	movwf	??_main
  6232  0587  085A               	movf	_voltage+3,w
  6233  0588  3A80               	xorlw	128
  6234  0589  0241               	subwf	??_main,w
  6235  058A  1D03               	skipz
  6236  058B  2D8E               	goto	u2685
  6237  058C  0859               	movf	_voltage+2,w
  6238  058D  026B               	subwf	_Vref,w
  6239  058E                     u2685:	
  6240  058E  1803               	skipnc
  6241  058F  2D9D               	goto	l2432
  6242                           
  6243                           ;main.c: 170: {
  6244                           ;main.c: 171: if(dutyCycle6<252) dutyCycle6+=1;
  6245  0590  3000               	movlw	0
  6246  0591  0020               	movlb	0	; select bank0
  6247  0592  0256               	subwf	main@dutyCycle6+1,w
  6248  0593  30FC               	movlw	252
  6249  0594  1903               	skipnz
  6250  0595  0255               	subwf	main@dutyCycle6,w
  6251  0596  1803               	skipnc
  6252  0597  2DA6               	goto	l411
  6253  0598  3001               	movlw	1
  6254  0599  07D5               	addwf	main@dutyCycle6,f
  6255  059A  3000               	movlw	0
  6256  059B  3DD6               	addwfc	main@dutyCycle6+1,f
  6257                           
  6258                           ;main.c: 172: }
  6259  059C  2DA6               	goto	l411
  6260  059D                     l2432:	
  6261                           
  6262                           ;main.c: 173: else
  6263                           ;main.c: 174: {
  6264                           ;main.c: 175: if(dutyCycle6>0) dutyCycle6-=1;;
  6265  059D  0020               	movlb	0	; select bank0
  6266  059E  0855               	movf	main@dutyCycle6,w
  6267  059F  0456               	iorwf	main@dutyCycle6+1,w
  6268  05A0  1903               	btfsc	3,2
  6269  05A1  2DA6               	goto	l411
  6270  05A2  3001               	movlw	1
  6271  05A3  02D5               	subwf	main@dutyCycle6,f
  6272  05A4  3000               	movlw	0
  6273  05A5  3BD6               	subwfb	main@dutyCycle6+1,f
  6274  05A6                     l411:	
  6275                           
  6276                           ;main.c: 176: }
  6277                           ;main.c: 178: if(voltage[3]>(int16_t)Vref)
  6278  05A6  086C               	movf	_Vref+1,w
  6279  05A7  3A80               	xorlw	128
  6280  05A8  00C1               	movwf	??_main
  6281  05A9  085E               	movf	_voltage+7,w
  6282  05AA  3A80               	xorlw	128
  6283  05AB  0241               	subwf	??_main,w
  6284  05AC  1D03               	skipz
  6285  05AD  2DB0               	goto	u2715
  6286  05AE  085D               	movf	_voltage+6,w
  6287  05AF  026B               	subwf	_Vref,w
  6288  05B0                     u2715:	
  6289  05B0  1803               	skipnc
  6290  05B1  2DBF               	goto	l2440
  6291                           
  6292                           ;main.c: 179: {
  6293                           ;main.c: 180: if(dutyCycle7<252) dutyCycle7+=1;
  6294  05B2  3000               	movlw	0
  6295  05B3  0020               	movlb	0	; select bank0
  6296  05B4  0253               	subwf	main@dutyCycle7+1,w
  6297  05B5  30FC               	movlw	252
  6298  05B6  1903               	skipnz
  6299  05B7  0252               	subwf	main@dutyCycle7,w
  6300  05B8  1803               	skipnc
  6301  05B9  2DC8               	goto	l2444
  6302  05BA  3001               	movlw	1
  6303  05BB  07D2               	addwf	main@dutyCycle7,f
  6304  05BC  3000               	movlw	0
  6305  05BD  3DD3               	addwfc	main@dutyCycle7+1,f
  6306                           
  6307                           ;main.c: 181: }
  6308  05BE  2DC8               	goto	l2444
  6309  05BF                     l2440:	
  6310                           
  6311                           ;main.c: 182: else
  6312                           ;main.c: 183: {
  6313                           ;main.c: 184: if(dutyCycle7>0) dutyCycle7-=1;;
  6314  05BF  0020               	movlb	0	; select bank0
  6315  05C0  0852               	movf	main@dutyCycle7,w
  6316  05C1  0453               	iorwf	main@dutyCycle7+1,w
  6317  05C2  1903               	btfsc	3,2
  6318  05C3  2DC8               	goto	l2444
  6319  05C4  3001               	movlw	1
  6320  05C5  02D2               	subwf	main@dutyCycle7,f
  6321  05C6  3000               	movlw	0
  6322  05C7  3BD3               	subwfb	main@dutyCycle7+1,f
  6323  05C8                     l2444:	
  6324                           
  6325                           ;main.c: 185: }
  6326                           ;main.c: 186: }
  6327                           ;main.c: 187: fastLoop=0;
  6328  05C8  01C9               	clrf	main@fastLoop
  6329                           
  6330                           ;main.c: 188: slowLoop+=1;
  6331  05C9  3001               	movlw	1
  6332  05CA  00C1               	movwf	??_main
  6333  05CB  0841               	movf	??_main,w
  6334  05CC  07CA               	addwf	main@slowLoop,f
  6335                           
  6336                           ;main.c: 189: PWM6_LoadDutyValue(dutyCycle6);
  6337  05CD  0856               	movf	main@dutyCycle6+1,w
  6338  05CE  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6339  05CF  0855               	movf	main@dutyCycle6,w
  6340  05D0  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6341  05D1  318C  2402  3184   	fcall	_PWM6_LoadDutyValue
  6342                           
  6343                           ;main.c: 190: PWM7_LoadDutyValue(dutyCycle7);
  6344  05D4  0020               	movlb	0	; select bank0
  6345  05D5  0853               	movf	main@dutyCycle7+1,w
  6346  05D6  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6347  05D7  0852               	movf	main@dutyCycle7,w
  6348  05D8  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6349  05D9  3180  2007  3184   	fcall	_PWM7_LoadDutyValue
  6350                           
  6351                           ;main.c: 191: menuButton = readButton();
  6352  05DC  3180  209F  3184   	fcall	_readButton
  6353  05DF  0020               	movlb	0	; select bank0
  6354  05E0  00C1               	movwf	??_main
  6355  05E1  0841               	movf	??_main,w
  6356  05E2  00D1               	movwf	main@menuButton
  6357                           
  6358                           ;main.c: 192: if(menuButton == 2) if(dutyCycle6<197) dutyCycle6+=1;
  6359  05E3  3002               	movlw	2
  6360  05E4  0651               	xorwf	main@menuButton,w
  6361  05E5  1D03               	btfss	3,2
  6362  05E6  2DF2               	goto	l2460
  6363  05E7  3000               	movlw	0
  6364  05E8  0256               	subwf	main@dutyCycle6+1,w
  6365  05E9  30C5               	movlw	197
  6366  05EA  1903               	skipnz
  6367  05EB  0255               	subwf	main@dutyCycle6,w
  6368  05EC  1803               	skipnc
  6369  05ED  2DF2               	goto	l2460
  6370  05EE  3001               	movlw	1
  6371  05EF  07D5               	addwf	main@dutyCycle6,f
  6372  05F0  3000               	movlw	0
  6373  05F1  3DD6               	addwfc	main@dutyCycle6+1,f
  6374  05F2                     l2460:	
  6375                           
  6376                           ;main.c: 193: if(menuButton == 3) if(dutyCycle6>0) dutyCycle6-=1;;
  6377  05F2  3003               	movlw	3
  6378  05F3  0651               	xorwf	main@menuButton,w
  6379  05F4  1D03               	btfss	3,2
  6380  05F5  2DFE               	goto	l2466
  6381  05F6  0855               	movf	main@dutyCycle6,w
  6382  05F7  0456               	iorwf	main@dutyCycle6+1,w
  6383  05F8  1903               	btfsc	3,2
  6384  05F9  2DFE               	goto	l2466
  6385  05FA  3001               	movlw	1
  6386  05FB  02D5               	subwf	main@dutyCycle6,f
  6387  05FC  3000               	movlw	0
  6388  05FD  3BD6               	subwfb	main@dutyCycle6+1,f
  6389  05FE                     l2466:	
  6390                           
  6391                           ;main.c: 194: if(menuButton == 1)LCDInit();
  6392  05FE  0351               	decf	main@menuButton,w
  6393  05FF  1D03               	btfss	3,2
  6394  0600  2E04               	goto	l2470
  6395  0601  318D  25AD  3184   	fcall	_LCDInit
  6396  0604                     l2470:	
  6397                           
  6398                           ;main.c: 195: }
  6399                           ;main.c: 196: fastLoop+=1;
  6400  0604  3001               	movlw	1
  6401  0605  0020               	movlb	0	; select bank0
  6402  0606  00C1               	movwf	??_main
  6403  0607  0841               	movf	??_main,w
  6404  0608  07C9               	addwf	main@fastLoop,f
  6405                           
  6406                           ;main.c: 198: if(slowLoop>10)
  6407  0609  300B               	movlw	11
  6408  060A  024A               	subwf	main@slowLoop,w
  6409  060B  1C03               	skipc
  6410  060C  2C61               	goto	l2376
  6411                           
  6412                           ;main.c: 199: {
  6413                           ;main.c: 200: LCDClear();
  6414  060D  318C  249A  3184   	fcall	_LCDClear
  6415                           
  6416                           ;main.c: 201: Battery_State_Machine();
  6417  0610  318F  277F  3184   	fcall	_Battery_State_Machine
  6418                           
  6419                           ;main.c: 214: { gotoXY(0,0); LCDWriteInt(analogs[1],4, 0, 0);};
  6420  0613  01F5               	clrf	gotoXY@y
  6421  0614  3000               	movlw	0
  6422  0615  318B  23C5  3184   	fcall	_gotoXY
  6423  0618  0021               	movlb	1	; select bank1
  6424  0619  0843               	movf	((_analogs+1)^(0+128)+2),w
  6425  061A  0020               	movlb	0	; select bank0
  6426  061B  00A9               	movwf	LCDWriteInt@value+1
  6427  061C  0021               	movlb	1	; select bank1
  6428  061D  0842               	movf	(_analogs^(0+128)+2),w
  6429  061E  0020               	movlb	0	; select bank0
  6430  061F  00A8               	movwf	LCDWriteInt@value
  6431  0620  3004               	movlw	4
  6432  0621  00C1               	movwf	??_main
  6433  0622  0841               	movf	??_main,w
  6434  0623  00AA               	movwf	LCDWriteInt@fieldLength
  6435  0624  01AB               	clrf	LCDWriteInt@numPlaces
  6436  0625  01AC               	clrf	LCDWriteInt@sign
  6437  0626  3182  2251  3184   	fcall	_LCDWriteInt
  6438                           
  6439                           ;main.c: 215: { gotoXY(28,0); LCDWriteInt(analogs[4],4, 0, 0);};
  6440  0629  01F5               	clrf	gotoXY@y
  6441  062A  301C               	movlw	28
  6442  062B  318B  23C5  3184   	fcall	_gotoXY
  6443  062E  0021               	movlb	1	; select bank1
  6444  062F  0849               	movf	((_analogs+1)^(0+128)+8),w
  6445  0630  0020               	movlb	0	; select bank0
  6446  0631  00A9               	movwf	LCDWriteInt@value+1
  6447  0632  0021               	movlb	1	; select bank1
  6448  0633  0848               	movf	(_analogs^(0+128)+8),w
  6449  0634  0020               	movlb	0	; select bank0
  6450  0635  00A8               	movwf	LCDWriteInt@value
  6451  0636  3004               	movlw	4
  6452  0637  00C1               	movwf	??_main
  6453  0638  0841               	movf	??_main,w
  6454  0639  00AA               	movwf	LCDWriteInt@fieldLength
  6455  063A  01AB               	clrf	LCDWriteInt@numPlaces
  6456  063B  01AC               	clrf	LCDWriteInt@sign
  6457  063C  3182  2251  3184   	fcall	_LCDWriteInt
  6458                           
  6459                           ;main.c: 216: { gotoXY(48,0); LCDWriteInt(analogs[5],4, 0, 0);};
  6460  063F  01F5               	clrf	gotoXY@y
  6461  0640  3030               	movlw	48
  6462  0641  318B  23C5  3184   	fcall	_gotoXY
  6463  0644  0021               	movlb	1	; select bank1
  6464  0645  084B               	movf	((_analogs+1)^(0+128)+10),w
  6465  0646  0020               	movlb	0	; select bank0
  6466  0647  00A9               	movwf	LCDWriteInt@value+1
  6467  0648  0021               	movlb	1	; select bank1
  6468  0649  084A               	movf	(_analogs^(0+128)+10),w
  6469  064A  0020               	movlb	0	; select bank0
  6470  064B  00A8               	movwf	LCDWriteInt@value
  6471  064C  3004               	movlw	4
  6472  064D  00C1               	movwf	??_main
  6473  064E  0841               	movf	??_main,w
  6474  064F  00AA               	movwf	LCDWriteInt@fieldLength
  6475  0650  01AB               	clrf	LCDWriteInt@numPlaces
  6476  0651  01AC               	clrf	LCDWriteInt@sign
  6477  0652  3182  2251  3184   	fcall	_LCDWriteInt
  6478                           
  6479                           ;main.c: 217: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  6480  0655  01F5               	clrf	gotoXY@y
  6481  0656  0AF5               	incf	gotoXY@y,f
  6482  0657  3000               	movlw	0
  6483  0658  318B  23C5  3184   	fcall	_gotoXY
  6484  065B  0020               	movlb	0	; select bank0
  6485  065C  0858               	movf	_voltage+1,w
  6486  065D  00A9               	movwf	LCDWriteInt@value+1
  6487  065E  0857               	movf	_voltage,w
  6488  065F  00A8               	movwf	LCDWriteInt@value
  6489  0660  3004               	movlw	4
  6490  0661  00C1               	movwf	??_main
  6491  0662  0841               	movf	??_main,w
  6492  0663  00AA               	movwf	LCDWriteInt@fieldLength
  6493  0664  3002               	movlw	2
  6494  0665  00C2               	movwf	??_main+1
  6495  0666  0842               	movf	??_main+1,w
  6496  0667  00AB               	movwf	LCDWriteInt@numPlaces
  6497  0668  01AC               	clrf	LCDWriteInt@sign
  6498  0669  3182  2251  3184   	fcall	_LCDWriteInt
  6499                           
  6500                           ;main.c: 218: LCDWriteCharacter('V');
  6501  066C  3056               	movlw	86
  6502  066D  318E  26C3  3184   	fcall	_LCDWriteCharacter
  6503                           
  6504                           ;main.c: 219: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  6505  0670  01F5               	clrf	gotoXY@y
  6506  0671  0AF5               	incf	gotoXY@y,f
  6507  0672  301C               	movlw	28
  6508  0673  318B  23C5  3184   	fcall	_gotoXY
  6509  0676  0021               	movlb	1	; select bank1
  6510  0677  0851               	movf	(_current+1)^(0+128),w
  6511  0678  0020               	movlb	0	; select bank0
  6512  0679  00A9               	movwf	LCDWriteInt@value+1
  6513  067A  0021               	movlb	1	; select bank1
  6514  067B  0850               	movf	_current^(0+128),w
  6515  067C  0020               	movlb	0	; select bank0
  6516  067D  00A8               	movwf	LCDWriteInt@value
  6517  067E  3003               	movlw	3
  6518  067F  00C1               	movwf	??_main
  6519  0680  0841               	movf	??_main,w
  6520  0681  00AA               	movwf	LCDWriteInt@fieldLength
  6521  0682  01AB               	clrf	LCDWriteInt@numPlaces
  6522  0683  0AAB               	incf	LCDWriteInt@numPlaces,f
  6523  0684  01AC               	clrf	LCDWriteInt@sign
  6524  0685  3182  2251  3184   	fcall	_LCDWriteInt
  6525                           
  6526                           ;main.c: 220: { gotoXY(48,1); LCDWriteInt(ADCRead(11),4, 0, 0);};
  6527  0688  01F5               	clrf	gotoXY@y
  6528  0689  0AF5               	incf	gotoXY@y,f
  6529  068A  3030               	movlw	48
  6530  068B  318B  23C5  3184   	fcall	_gotoXY
  6531  068E  300B               	movlw	11
  6532  068F  318B  23ED  3184   	fcall	_ADCRead
  6533  0692  0871               	movf	?_ADCRead+1,w
  6534  0693  0020               	movlb	0	; select bank0
  6535  0694  00A9               	movwf	LCDWriteInt@value+1
  6536  0695  0870               	movf	?_ADCRead,w
  6537  0696  00A8               	movwf	LCDWriteInt@value
  6538  0697  3004               	movlw	4
  6539  0698  00C1               	movwf	??_main
  6540  0699  0841               	movf	??_main,w
  6541  069A  00AA               	movwf	LCDWriteInt@fieldLength
  6542  069B  01AB               	clrf	LCDWriteInt@numPlaces
  6543  069C  01AC               	clrf	LCDWriteInt@sign
  6544  069D  3182  2251  3184   	fcall	_LCDWriteInt
  6545                           
  6546                           ;main.c: 221: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  6547  06A0  3002               	movlw	2
  6548  06A1  0020               	movlb	0	; select bank0
  6549  06A2  00C1               	movwf	??_main
  6550  06A3  0841               	movf	??_main,w
  6551  06A4  00F5               	movwf	gotoXY@y
  6552  06A5  3000               	movlw	0
  6553  06A6  318B  23C5  3184   	fcall	_gotoXY
  6554  06A9  0020               	movlb	0	; select bank0
  6555  06AA  085A               	movf	_voltage+3,w
  6556  06AB  00A9               	movwf	LCDWriteInt@value+1
  6557  06AC  0859               	movf	_voltage+2,w
  6558  06AD  00A8               	movwf	LCDWriteInt@value
  6559  06AE  3004               	movlw	4
  6560  06AF  00C1               	movwf	??_main
  6561  06B0  0841               	movf	??_main,w
  6562  06B1  00AA               	movwf	LCDWriteInt@fieldLength
  6563  06B2  3002               	movlw	2
  6564  06B3  00C2               	movwf	??_main+1
  6565  06B4  0842               	movf	??_main+1,w
  6566  06B5  00AB               	movwf	LCDWriteInt@numPlaces
  6567  06B6  01AC               	clrf	LCDWriteInt@sign
  6568  06B7  3182  2251  3184   	fcall	_LCDWriteInt
  6569                           
  6570                           ;main.c: 222: LCDWriteCharacter('V');
  6571  06BA  3056               	movlw	86
  6572  06BB  318E  26C3  3184   	fcall	_LCDWriteCharacter
  6573                           
  6574                           ;main.c: 223: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  6575  06BE  3002               	movlw	2
  6576  06BF  0020               	movlb	0	; select bank0
  6577  06C0  00C1               	movwf	??_main
  6578  06C1  0841               	movf	??_main,w
  6579  06C2  00F5               	movwf	gotoXY@y
  6580  06C3  301C               	movlw	28
  6581  06C4  318B  23C5  3184   	fcall	_gotoXY
  6582  06C7  0021               	movlb	1	; select bank1
  6583  06C8  0853               	movf	((_current+1)^(0+128)+2),w
  6584  06C9  0020               	movlb	0	; select bank0
  6585  06CA  00A9               	movwf	LCDWriteInt@value+1
  6586  06CB  0021               	movlb	1	; select bank1
  6587  06CC  0852               	movf	(_current^(0+128)+2),w
  6588  06CD  0020               	movlb	0	; select bank0
  6589  06CE  00A8               	movwf	LCDWriteInt@value
  6590  06CF  3003               	movlw	3
  6591  06D0  00C1               	movwf	??_main
  6592  06D1  0841               	movf	??_main,w
  6593  06D2  00AA               	movwf	LCDWriteInt@fieldLength
  6594  06D3  01AB               	clrf	LCDWriteInt@numPlaces
  6595  06D4  0AAB               	incf	LCDWriteInt@numPlaces,f
  6596  06D5  01AC               	clrf	LCDWriteInt@sign
  6597  06D6  3182  2251  3184   	fcall	_LCDWriteInt
  6598                           
  6599                           ;main.c: 224: { gotoXY(48,2); LCDWriteInt(Vref,4, 0, 0);};
  6600  06D9  3002               	movlw	2
  6601  06DA  0020               	movlb	0	; select bank0
  6602  06DB  00C1               	movwf	??_main
  6603  06DC  0841               	movf	??_main,w
  6604  06DD  00F5               	movwf	gotoXY@y
  6605  06DE  3030               	movlw	48
  6606  06DF  318B  23C5  3184   	fcall	_gotoXY
  6607  06E2  0020               	movlb	0	; select bank0
  6608  06E3  086C               	movf	_Vref+1,w
  6609  06E4  00A9               	movwf	LCDWriteInt@value+1
  6610  06E5  086B               	movf	_Vref,w
  6611  06E6  00A8               	movwf	LCDWriteInt@value
  6612  06E7  3004               	movlw	4
  6613  06E8  00C1               	movwf	??_main
  6614  06E9  0841               	movf	??_main,w
  6615  06EA  00AA               	movwf	LCDWriteInt@fieldLength
  6616  06EB  01AB               	clrf	LCDWriteInt@numPlaces
  6617  06EC  01AC               	clrf	LCDWriteInt@sign
  6618  06ED  3182  2251  3184   	fcall	_LCDWriteInt
  6619                           
  6620                           ;main.c: 226: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,5, 0, 0);};
  6621  06F0  3003               	movlw	3
  6622  06F1  0020               	movlb	0	; select bank0
  6623  06F2  00C1               	movwf	??_main
  6624  06F3  0841               	movf	??_main,w
  6625  06F4  00F5               	movwf	gotoXY@y
  6626  06F5  3000               	movlw	0
  6627  06F6  318B  23C5  3184   	fcall	_gotoXY
  6628  06F9  3064               	movlw	100
  6629  06FA  00F0               	movwf	___awdiv@divisor
  6630  06FB  3000               	movlw	0
  6631  06FC  00F1               	movwf	___awdiv@divisor+1
  6632  06FD  0020               	movlb	0	; select bank0
  6633  06FE  0858               	movf	_voltage+1,w
  6634  06FF  00F3               	movwf	___awdiv@dividend+1
  6635  0700  0857               	movf	_voltage,w
  6636  0701  00F2               	movwf	___awdiv@dividend
  6637  0702  318E  2672  3184   	fcall	___awdiv
  6638  0705  0871               	movf	?___awdiv+1,w
  6639  0706  00FA               	movwf	___wmul@multiplier+1
  6640  0707  0870               	movf	?___awdiv,w
  6641  0708  00F9               	movwf	___wmul@multiplier
  6642  0709  0021               	movlb	1	; select bank1
  6643  070A  0851               	movf	(_current+1)^(0+128),w
  6644  070B  00FC               	movwf	___wmul@multiplicand+1
  6645  070C  0850               	movf	_current^(0+128),w
  6646  070D  00FB               	movwf	___wmul@multiplicand
  6647  070E  318C  2418  3184   	fcall	___wmul
  6648  0711  087A               	movf	?___wmul+1,w
  6649  0712  0020               	movlb	0	; select bank0
  6650  0713  00D0               	movwf	_main$1022+1
  6651  0714  0879               	movf	?___wmul,w
  6652  0715  00CF               	movwf	_main$1022
  6653  0716  300A               	movlw	10
  6654  0717  00F0               	movwf	___awdiv@divisor
  6655  0718  3000               	movlw	0
  6656  0719  00F1               	movwf	___awdiv@divisor+1
  6657  071A  0850               	movf	_main$1022+1,w
  6658  071B  00F3               	movwf	___awdiv@dividend+1
  6659  071C  084F               	movf	_main$1022,w
  6660  071D  00F2               	movwf	___awdiv@dividend
  6661  071E  318E  2672  3184   	fcall	___awdiv
  6662  0721  0871               	movf	?___awdiv+1,w
  6663  0722  0020               	movlb	0	; select bank0
  6664  0723  00CE               	movwf	_main$1023+1
  6665  0724  0870               	movf	?___awdiv,w
  6666  0725  00CD               	movwf	_main$1023
  6667  0726  084E               	movf	_main$1023+1,w
  6668  0727  00A9               	movwf	LCDWriteInt@value+1
  6669  0728  084D               	movf	_main$1023,w
  6670  0729  00A8               	movwf	LCDWriteInt@value
  6671  072A  3005               	movlw	5
  6672  072B  00C1               	movwf	??_main
  6673  072C  0841               	movf	??_main,w
  6674  072D  00AA               	movwf	LCDWriteInt@fieldLength
  6675  072E  01AB               	clrf	LCDWriteInt@numPlaces
  6676  072F  01AC               	clrf	LCDWriteInt@sign
  6677  0730  3182  2251  3184   	fcall	_LCDWriteInt
  6678                           
  6679                           ;main.c: 228: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,5, 0, 0);};
  6680  0733  3004               	movlw	4
  6681  0734  0020               	movlb	0	; select bank0
  6682  0735  00C1               	movwf	??_main
  6683  0736  0841               	movf	??_main,w
  6684  0737  00F5               	movwf	gotoXY@y
  6685  0738  3000               	movlw	0
  6686  0739  318B  23C5  3184   	fcall	_gotoXY
  6687  073C  3064               	movlw	100
  6688  073D  00F0               	movwf	___awdiv@divisor
  6689  073E  3000               	movlw	0
  6690  073F  00F1               	movwf	___awdiv@divisor+1
  6691  0740  0020               	movlb	0	; select bank0
  6692  0741  085A               	movf	_voltage+3,w
  6693  0742  00F3               	movwf	___awdiv@dividend+1
  6694  0743  0859               	movf	_voltage+2,w
  6695  0744  00F2               	movwf	___awdiv@dividend
  6696  0745  318E  2672  3184   	fcall	___awdiv
  6697  0748  0871               	movf	?___awdiv+1,w
  6698  0749  00FA               	movwf	___wmul@multiplier+1
  6699  074A  0870               	movf	?___awdiv,w
  6700  074B  00F9               	movwf	___wmul@multiplier
  6701  074C  0021               	movlb	1	; select bank1
  6702  074D  0853               	movf	((_current+1)^(0+128)+2),w
  6703  074E  00FC               	movwf	___wmul@multiplicand+1
  6704  074F  0852               	movf	(_current^(0+128)+2),w
  6705  0750  00FB               	movwf	___wmul@multiplicand
  6706  0751  318C  2418  3184   	fcall	___wmul
  6707  0754  087A               	movf	?___wmul+1,w
  6708  0755  0020               	movlb	0	; select bank0
  6709  0756  00D0               	movwf	_main$1022+1
  6710  0757  0879               	movf	?___wmul,w
  6711  0758  00CF               	movwf	_main$1022
  6712  0759  300A               	movlw	10
  6713  075A  00F0               	movwf	___awdiv@divisor
  6714  075B  3000               	movlw	0
  6715  075C  00F1               	movwf	___awdiv@divisor+1
  6716  075D  0850               	movf	_main$1022+1,w
  6717  075E  00F3               	movwf	___awdiv@dividend+1
  6718  075F  084F               	movf	_main$1022,w
  6719  0760  00F2               	movwf	___awdiv@dividend
  6720  0761  318E  2672  3184   	fcall	___awdiv
  6721  0764  0871               	movf	?___awdiv+1,w
  6722  0765  0020               	movlb	0	; select bank0
  6723  0766  00CE               	movwf	_main$1023+1
  6724  0767  0870               	movf	?___awdiv,w
  6725  0768  00CD               	movwf	_main$1023
  6726  0769  084E               	movf	_main$1023+1,w
  6727  076A  00A9               	movwf	LCDWriteInt@value+1
  6728  076B  084D               	movf	_main$1023,w
  6729  076C  00A8               	movwf	LCDWriteInt@value
  6730  076D  3005               	movlw	5
  6731  076E  00C1               	movwf	??_main
  6732  076F  0841               	movf	??_main,w
  6733  0770  00AA               	movwf	LCDWriteInt@fieldLength
  6734  0771  01AB               	clrf	LCDWriteInt@numPlaces
  6735  0772  01AC               	clrf	LCDWriteInt@sign
  6736  0773  3182  2251  3184   	fcall	_LCDWriteInt
  6737                           
  6738                           ;main.c: 229: { gotoXY(28,4); LCDWriteInt(power0OutOld,5, 0, 0);};
  6739  0776  3004               	movlw	4
  6740  0777  0020               	movlb	0	; select bank0
  6741  0778  00C1               	movwf	??_main
  6742  0779  0841               	movf	??_main,w
  6743  077A  00F5               	movwf	gotoXY@y
  6744  077B  301C               	movlw	28
  6745  077C  318B  23C5  3184   	fcall	_gotoXY
  6746  077F  0020               	movlb	0	; select bank0
  6747  0780  0846               	movf	main@power0OutOld+1,w
  6748  0781  00A9               	movwf	LCDWriteInt@value+1
  6749  0782  0845               	movf	main@power0OutOld,w
  6750  0783  00A8               	movwf	LCDWriteInt@value
  6751  0784  3005               	movlw	5
  6752  0785  00C1               	movwf	??_main
  6753  0786  0841               	movf	??_main,w
  6754  0787  00AA               	movwf	LCDWriteInt@fieldLength
  6755  0788  01AB               	clrf	LCDWriteInt@numPlaces
  6756  0789  01AC               	clrf	LCDWriteInt@sign
  6757  078A  3182  2251  3184   	fcall	_LCDWriteInt
  6758                           
  6759                           ;main.c: 237: { gotoXY(0,5); LCDWriteInt(dutyCycle6,3, 0, 0);};
  6760  078D  3005               	movlw	5
  6761  078E  0020               	movlb	0	; select bank0
  6762  078F  00C1               	movwf	??_main
  6763  0790  0841               	movf	??_main,w
  6764  0791  00F5               	movwf	gotoXY@y
  6765  0792  3000               	movlw	0
  6766  0793  318B  23C5  3184   	fcall	_gotoXY
  6767  0796  0020               	movlb	0	; select bank0
  6768  0797  0856               	movf	main@dutyCycle6+1,w
  6769  0798  00A9               	movwf	LCDWriteInt@value+1
  6770  0799  0855               	movf	main@dutyCycle6,w
  6771  079A  00A8               	movwf	LCDWriteInt@value
  6772  079B  3003               	movlw	3
  6773  079C  00C1               	movwf	??_main
  6774  079D  0841               	movf	??_main,w
  6775  079E  00AA               	movwf	LCDWriteInt@fieldLength
  6776  079F  01AB               	clrf	LCDWriteInt@numPlaces
  6777  07A0  01AC               	clrf	LCDWriteInt@sign
  6778  07A1  3182  2251  3184   	fcall	_LCDWriteInt
  6779                           
  6780                           ;main.c: 240: { gotoXY(40,5); LCDWriteInt(!RB2,1, 0, 0);};
  6781  07A4  3005               	movlw	5
  6782  07A5  0020               	movlb	0	; select bank0
  6783  07A6  00C1               	movwf	??_main
  6784  07A7  0841               	movf	??_main,w
  6785  07A8  00F5               	movwf	gotoXY@y
  6786  07A9  3028               	movlw	40
  6787  07AA  318B  23C5  3184   	fcall	_gotoXY
  6788  07AD  1003               	clrc
  6789  07AE  0020               	movlb	0	; select bank0
  6790  07AF  1D0D               	btfss	13,2	;volatile
  6791  07B0  1403               	setc
  6792  07B1  3000               	movlw	0
  6793  07B2  3D09               	addwfc	9,w
  6794  07B3  00C1               	movwf	??_main
  6795  07B4  01C2               	clrf	??_main+1
  6796  07B5  0841               	movf	??_main,w
  6797  07B6  00A8               	movwf	LCDWriteInt@value
  6798  07B7  0842               	movf	??_main+1,w
  6799  07B8  00A9               	movwf	LCDWriteInt@value+1
  6800  07B9  01AA               	clrf	LCDWriteInt@fieldLength
  6801  07BA  0AAA               	incf	LCDWriteInt@fieldLength,f
  6802  07BB  01AB               	clrf	LCDWriteInt@numPlaces
  6803  07BC  01AC               	clrf	LCDWriteInt@sign
  6804  07BD  3182  2251  3184   	fcall	_LCDWriteInt
  6805                           
  6806                           ;main.c: 242: if(battery_state > FINISHED)
  6807  07C0  3003               	movlw	3
  6808  07C1  0020               	movlb	0	; select bank0
  6809  07C2  026E               	subwf	_battery_state,w
  6810  07C3  1C03               	skipc
  6811  07C4  2FC8               	goto	l2540
  6812                           
  6813                           ;main.c: 243: {
  6814                           ;main.c: 244: cc_cv_mode();
  6815  07C5  318D  2547  3184   	fcall	_cc_cv_mode
  6816  07C8                     l2540:	
  6817                           
  6818                           ;main.c: 245: }
  6819                           ;main.c: 246: slowLoop=0;
  6820  07C8  0020               	movlb	0	; select bank0
  6821  07C9  01CA               	clrf	main@slowLoop
  6822  07CA  2C61               	goto	l2376
  6823  07CB                     __end_of_main:	
  6824                           
  6825                           	psect	text1
  6826  009F                     __ptext1:	
  6827 ;; *************** function _readButton *****************
  6828 ;; Defined at:
  6829 ;;		line 9 in file "buttons.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;		None
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;		None
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  1    wreg      unsigned char 
  6836 ;; Registers used:
  6837 ;;		wreg, status,2, status,0, pclath, cstack
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6847 ;;Total ram usage:        2 bytes
  6848 ;; Hardware stack levels used:    1
  6849 ;; Hardware stack levels required when called:    1
  6850 ;; This function calls:
  6851 ;;		_ADCRead
  6852 ;; This function is called by:
  6853 ;;		_main
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           
  6858                           ;psect for function _readButton
  6859  009F                     _readButton:	
  6860                           
  6861                           ;buttons.c: 11: readButtons = ADCRead(11);
  6862                           
  6863                           ;incstack = 0
  6864                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  6865  009F  300B               	movlw	11
  6866  00A0  318B  23ED  3180   	fcall	_ADCRead
  6867  00A3  0871               	movf	?_ADCRead+1,w
  6868  00A4  0020               	movlb	0	; select bank0
  6869  00A5  00E0               	movwf	_readButtons+1
  6870  00A6  0870               	movf	?_ADCRead,w
  6871  00A7  00DF               	movwf	_readButtons
  6872                           
  6873                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  6874  00A8  0860               	movf	_readButtons+1,w
  6875  00A9  3A80               	xorlw	128
  6876  00AA  00F4               	movwf	??_readButton
  6877  00AB  3081               	movlw	129
  6878  00AC  0274               	subwf	??_readButton,w
  6879  00AD  1D03               	skipz
  6880  00AE  28B1               	goto	u2455
  6881  00AF  306D               	movlw	109
  6882  00B0  025F               	subwf	_readButtons,w
  6883  00B1                     u2455:	
  6884  00B1  1C03               	skipc
  6885  00B2  28C3               	goto	l2294
  6886  00B3  0020               	movlb	0	; select bank0
  6887  00B4  0860               	movf	_readButtons+1,w
  6888  00B5  3A80               	xorlw	128
  6889  00B6  00F4               	movwf	??_readButton
  6890  00B7  3081               	movlw	129
  6891  00B8  0274               	subwf	??_readButton,w
  6892  00B9  1D03               	skipz
  6893  00BA  28BD               	goto	u2465
  6894  00BB  3095               	movlw	149
  6895  00BC  025F               	subwf	_readButtons,w
  6896  00BD                     u2465:	
  6897  00BD  1803               	skipnc
  6898  00BE  28C3               	goto	l2294
  6899                           
  6900                           ;buttons.c: 14: {
  6901                           ;buttons.c: 15: button = 1;
  6902  00BF  0020               	movlb	0	; select bank0
  6903  00C0  01E9               	clrf	_button
  6904  00C1  0AE9               	incf	_button,f
  6905                           
  6906                           ;buttons.c: 16: }
  6907  00C2  28F1               	goto	l2306
  6908  00C3                     l2294:	
  6909                           
  6910                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  6911  00C3  0020               	movlb	0	; select bank0
  6912  00C4  0860               	movf	_readButtons+1,w
  6913  00C5  3A80               	xorlw	128
  6914  00C6  00F4               	movwf	??_readButton
  6915  00C7  3082               	movlw	130
  6916  00C8  0274               	subwf	??_readButton,w
  6917  00C9  1D03               	skipz
  6918  00CA  28CD               	goto	u2475
  6919  00CB  3017               	movlw	23
  6920  00CC  025F               	subwf	_readButtons,w
  6921  00CD                     u2475:	
  6922  00CD  1C03               	skipc
  6923  00CE  28DD               	goto	l2300
  6924  00CF  0020               	movlb	0	; select bank0
  6925  00D0  0860               	movf	_readButtons+1,w
  6926  00D1  3A80               	xorlw	128
  6927  00D2  00F4               	movwf	??_readButton
  6928  00D3  3082               	movlw	130
  6929  00D4  0274               	subwf	??_readButton,w
  6930  00D5  1D03               	skipz
  6931  00D6  28D9               	goto	u2485
  6932  00D7  304E               	movlw	78
  6933  00D8  025F               	subwf	_readButtons,w
  6934  00D9                     u2485:	
  6935  00D9  1803               	skipnc
  6936  00DA  28DD               	goto	l2300
  6937                           
  6938                           ;buttons.c: 19: {
  6939                           ;buttons.c: 20: button = 2;
  6940  00DB  3002               	movlw	2
  6941  00DC  28EA               	goto	L1
  6942  00DD                     l2300:	
  6943                           ;buttons.c: 21: }
  6944                           
  6945                           
  6946                           ;buttons.c: 23: else if(readButtons > 745)
  6947  00DD  0020               	movlb	0	; select bank0
  6948  00DE  0860               	movf	_readButtons+1,w
  6949  00DF  3A80               	xorlw	128
  6950  00E0  00F4               	movwf	??_readButton
  6951  00E1  3082               	movlw	130
  6952  00E2  0274               	subwf	??_readButton,w
  6953  00E3  1D03               	skipz
  6954  00E4  28E7               	goto	u2495
  6955  00E5  30EA               	movlw	234
  6956  00E6  025F               	subwf	_readButtons,w
  6957  00E7                     u2495:	
  6958  00E7  1C03               	skipc
  6959  00E8  28EF               	goto	l2304
  6960                           
  6961                           ;buttons.c: 24: {
  6962                           ;buttons.c: 25: button = 3;
  6963  00E9  3003               	movlw	3
  6964  00EA                     L1:	
  6965  00EA  00F4               	movwf	??_readButton
  6966  00EB  0874               	movf	??_readButton,w
  6967  00EC  0020               	movlb	0	; select bank0
  6968  00ED  00E9               	movwf	_button
  6969                           
  6970                           ;buttons.c: 26: }
  6971  00EE  28F1               	goto	l2306
  6972  00EF                     l2304:	
  6973                           
  6974                           ;buttons.c: 28: else
  6975                           ;buttons.c: 29: {
  6976                           ;buttons.c: 30: button = 0;
  6977  00EF  0020               	movlb	0	; select bank0
  6978  00F0  01E9               	clrf	_button
  6979  00F1                     l2306:	
  6980                           
  6981                           ;buttons.c: 31: }
  6982                           ;buttons.c: 33: if (button != 0)
  6983  00F1  0869               	movf	_button,w
  6984  00F2  1903               	btfsc	3,2
  6985  00F3  291E               	goto	l2326
  6986                           
  6987                           ;buttons.c: 34: {
  6988                           ;buttons.c: 35: if (button != lastButton)
  6989  00F4  0869               	movf	_button,w
  6990  00F5  0668               	xorwf	_lastButton,w
  6991  00F6  1903               	skipnz
  6992  00F7  28FD               	goto	l2314
  6993                           
  6994                           ;buttons.c: 36: {
  6995                           ;buttons.c: 37: lastButton = button;
  6996  00F8  0869               	movf	_button,w
  6997  00F9  00F4               	movwf	??_readButton
  6998  00FA  0874               	movf	??_readButton,w
  6999  00FB  00E8               	movwf	_lastButton
  7000  00FC  291E               	goto	l2326
  7001  00FD                     l2314:	
  7002                           ;buttons.c: 39: }
  7003                           
  7004                           ;buttons.c: 38: j = 0;
  7005                           
  7006                           
  7007                           ;buttons.c: 40: else
  7008                           ;buttons.c: 41: {
  7009                           ;buttons.c: 42: j += 1;
  7010  00FD  3001               	movlw	1
  7011  00FE  00F4               	movwf	??_readButton
  7012  00FF  0874               	movf	??_readButton,w
  7013  0100  07E7               	addwf	_j,f
  7014                           
  7015                           ;buttons.c: 44: if(j == 1)
  7016  0101  0367               	decf	_j,w
  7017  0102  1D03               	btfss	3,2
  7018  0103  2906               	goto	l2320
  7019                           
  7020                           ;buttons.c: 45: {
  7021                           ;buttons.c: 46: return (lastButton);
  7022  0104  0868               	movf	_lastButton,w
  7023  0105  0008               	return
  7024  0106                     l2320:	
  7025                           
  7026                           ;buttons.c: 47: }
  7027                           ;buttons.c: 49: if (j >10)
  7028  0106  0867               	movf	_j,w
  7029  0107  3A80               	xorlw	128
  7030  0108  3E75               	addlw	-139
  7031  0109  1C03               	skipc
  7032  010A  291F               	goto	l2328
  7033                           
  7034                           ;buttons.c: 50: {
  7035                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  7036  010B  3002               	movlw	2
  7037  010C  00F5               	movwf	??_readButton+1
  7038  010D  3004               	movlw	4
  7039  010E  00F4               	movwf	??_readButton
  7040  010F  30BA               	movlw	186
  7041  0110                     u2817:	
  7042  0110  0B89               	decfsz	9,f
  7043  0111  2910               	goto	u2817
  7044  0112  0BF4               	decfsz	??_readButton,f
  7045  0113  2910               	goto	u2817
  7046  0114  0BF5               	decfsz	??_readButton+1,f
  7047  0115  2910               	goto	u2817
  7048  0116  3200               	nop2
  7049                           
  7050                           ;buttons.c: 52: j = 10;
  7051  0117  300A               	movlw	10
  7052  0118  00F4               	movwf	??_readButton
  7053  0119  0874               	movf	??_readButton,w
  7054  011A  0020               	movlb	0	; select bank0
  7055  011B  00E7               	movwf	_j
  7056                           
  7057                           ;buttons.c: 53: return (lastButton);
  7058  011C  0868               	movf	_lastButton,w
  7059  011D  0008               	return
  7060  011E                     l2326:	
  7061                           ;buttons.c: 54: }
  7062                           ;buttons.c: 55: }
  7063                           ;buttons.c: 56: goto end;
  7064                           
  7065                           
  7066                           ;buttons.c: 57: }
  7067                           ;buttons.c: 59: j = 0;
  7068  011E  01E7               	clrf	_j
  7069  011F                     l2328:	
  7070                           ;buttons.c: 61: end:
  7071                           
  7072                           
  7073                           ;buttons.c: 63: return (0);
  7074  011F  3000               	movlw	0
  7075  0120  0008               	return
  7076  0121                     __end_of_readButton:	
  7077                           
  7078                           	psect	text2
  7079  030A                     __ptext2:	
  7080 ;; *************** function _readAnalog *****************
  7081 ;; Defined at:
  7082 ;;		line 49 in file "adc.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  channel         2    6[BANK0 ] unsigned int 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  value           2   28[BANK0 ] int 
  7087 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  2    6[BANK0 ] int 
  7090 ;; Registers used:
  7091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7098 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7099 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7100 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7101 ;;Total ram usage:       24 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    1
  7104 ;; This function calls:
  7105 ;;		_ADCRead
  7106 ;;		___aldiv
  7107 ;;		___wmul
  7108 ;; This function is called by:
  7109 ;;		_main
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           
  7114                           ;psect for function _readAnalog
  7115  030A                     _readAnalog:	
  7116                           
  7117                           ;adc.c: 51: int16_t value;
  7118                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  7119                           
  7120                           ;incstack = 0
  7121                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7122  030A  0020               	movlb	0	; select bank0
  7123  030B  3526               	lslf	readAnalog@channel,w
  7124  030C  3E20               	addlw	(low (_channels| (0+256)))& (0+255)
  7125  030D  0086               	movwf	6
  7126  030E  3001               	movlw	1	; select bank2/3
  7127  030F  0087               	movwf	7
  7128  0310  3F40               	moviw [0]fsr1
  7129  0311  00BA               	movwf	readAnalog@analog_channel
  7130  0312  3F41               	moviw [1]fsr1
  7131  0313  00BB               	movwf	readAnalog@analog_channel+1
  7132                           
  7133                           ;adc.c: 55: value = ADCRead(analog_channel);
  7134  0314  083A               	movf	readAnalog@analog_channel,w
  7135  0315  318B  23ED  3183   	fcall	_ADCRead
  7136  0318  0871               	movf	?_ADCRead+1,w
  7137  0319  0020               	movlb	0	; select bank0
  7138  031A  00BD               	movwf	readAnalog@value+1
  7139  031B  0870               	movf	?_ADCRead,w
  7140  031C  00BC               	movwf	readAnalog@value
  7141                           
  7142                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  7143  031D  0826               	movf	readAnalog@channel,w
  7144  031E  00A8               	movwf	??_readAnalog
  7145  031F  3001               	movlw	1
  7146  0320                     u2125:	
  7147  0320  35A8               	lslf	??_readAnalog,f
  7148  0321  3EFF               	addlw	-1
  7149  0322  1D03               	skipz
  7150  0323  2B20               	goto	u2125
  7151  0324  3528               	lslf	??_readAnalog,w
  7152  0325  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7153  0326  0086               	movwf	6
  7154  0327  0187               	clrf	7
  7155  0328  3F40               	moviw [0]fsr1
  7156  0329  00A9               	movwf	??_readAnalog+1
  7157  032A  3F41               	moviw [1]fsr1
  7158  032B  00AA               	movwf	??_readAnalog+2
  7159  032C  3F42               	moviw [2]fsr1
  7160  032D  00AB               	movwf	??_readAnalog+3
  7161  032E  3F43               	moviw [3]fsr1
  7162  032F  00AC               	movwf	??_readAnalog+4
  7163  0330  0866               	movf	_sampleIndex+1,w
  7164  0331  00AE               	movwf	??_readAnalog+6
  7165  0332  0865               	movf	_sampleIndex,w
  7166  0333  00AD               	movwf	??_readAnalog+5
  7167  0334  35AD               	lslf	??_readAnalog+5,f
  7168  0335  0DAE               	rlf	??_readAnalog+6,f
  7169  0336  0827               	movf	readAnalog@channel+1,w
  7170  0337  00FA               	movwf	___wmul@multiplier+1
  7171  0338  0826               	movf	readAnalog@channel,w
  7172  0339  00F9               	movwf	___wmul@multiplier
  7173  033A  3064               	movlw	100
  7174  033B  00FB               	movwf	___wmul@multiplicand
  7175  033C  3000               	movlw	0
  7176  033D  00FC               	movwf	___wmul@multiplicand+1
  7177  033E  318C  2418  3183   	fcall	___wmul
  7178  0341  30D0               	movlw	208
  7179  0342  0020               	movlb	0	; select bank0
  7180  0343  00AF               	movwf	??_readAnalog+7
  7181  0344  3020               	movlw	32
  7182  0345  00B0               	movwf	??_readAnalog+8
  7183  0346  0879               	movf	?___wmul,w
  7184  0347  072F               	addwf	??_readAnalog+7,w
  7185  0348  00B1               	movwf	??_readAnalog+9
  7186  0349  087A               	movf	?___wmul+1,w
  7187  034A  3D30               	addwfc	??_readAnalog+8,w
  7188  034B  00B2               	movwf	??_readAnalog+10
  7189  034C  082D               	movf	??_readAnalog+5,w
  7190  034D  0731               	addwf	??_readAnalog+9,w
  7191  034E  0086               	movwf	6
  7192  034F  082E               	movf	??_readAnalog+6,w
  7193  0350  3D32               	addwfc	??_readAnalog+10,w
  7194  0351  0087               	movwf	7
  7195  0352  3F40               	moviw [0]fsr1
  7196  0353  00B3               	movwf	??_readAnalog+11
  7197  0354  3F41               	moviw [1]fsr1
  7198  0355  00B4               	movwf	??_readAnalog+12
  7199  0356  0833               	movf	??_readAnalog+11,w
  7200  0357  00B5               	movwf	??_readAnalog+13
  7201  0358  0834               	movf	??_readAnalog+12,w
  7202  0359  00B6               	movwf	??_readAnalog+14
  7203  035A  3000               	movlw	0
  7204  035B  1BB6               	btfsc	??_readAnalog+14,7
  7205  035C  30FF               	movlw	255
  7206  035D  00B7               	movwf	??_readAnalog+15
  7207  035E  00B8               	movwf	??_readAnalog+16
  7208  035F  09B5               	comf	??_readAnalog+13,f
  7209  0360  09B6               	comf	??_readAnalog+14,f
  7210  0361  09B7               	comf	??_readAnalog+15,f
  7211  0362  09B8               	comf	??_readAnalog+16,f
  7212  0363  0AB5               	incf	??_readAnalog+13,f
  7213  0364  1903               	skipnz
  7214  0365  0AB6               	incf	??_readAnalog+14,f
  7215  0366  1903               	skipnz
  7216  0367  0AB7               	incf	??_readAnalog+15,f
  7217  0368  1903               	skipnz
  7218  0369  0AB8               	incf	??_readAnalog+16,f
  7219  036A  0835               	movf	??_readAnalog+13,w
  7220  036B  07A9               	addwf	??_readAnalog+1,f
  7221  036C  0836               	movf	??_readAnalog+14,w
  7222  036D  3DAA               	addwfc	??_readAnalog+2,f
  7223  036E  0837               	movf	??_readAnalog+15,w
  7224  036F  3DAB               	addwfc	??_readAnalog+3,f
  7225  0370  0838               	movf	??_readAnalog+16,w
  7226  0371  3DAC               	addwfc	??_readAnalog+4,f
  7227  0372  0826               	movf	readAnalog@channel,w
  7228  0373  00B9               	movwf	??_readAnalog+17
  7229  0374  3001               	movlw	1
  7230  0375                     u2135:	
  7231  0375  35B9               	lslf	??_readAnalog+17,f
  7232  0376  3EFF               	addlw	-1
  7233  0377  1D03               	skipz
  7234  0378  2B75               	goto	u2135
  7235  0379  3539               	lslf	??_readAnalog+17,w
  7236  037A  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7237  037B  0086               	movwf	6
  7238  037C  0187               	clrf	7
  7239  037D  0829               	movf	??_readAnalog+1,w
  7240  037E  3FC0               	movwi [0]fsr1
  7241  037F  082A               	movf	??_readAnalog+2,w
  7242  0380  3FC1               	movwi [1]fsr1
  7243  0381  082B               	movf	??_readAnalog+3,w
  7244  0382  3FC2               	movwi [2]fsr1
  7245  0383  082C               	movf	??_readAnalog+4,w
  7246  0384  3FC3               	movwi [3]fsr1
  7247                           
  7248                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  7249  0385  0866               	movf	_sampleIndex+1,w
  7250  0386  00A9               	movwf	??_readAnalog+1
  7251  0387  0865               	movf	_sampleIndex,w
  7252  0388  00A8               	movwf	??_readAnalog
  7253  0389  35A8               	lslf	??_readAnalog,f
  7254  038A  0DA9               	rlf	??_readAnalog+1,f
  7255  038B  0827               	movf	readAnalog@channel+1,w
  7256  038C  00FA               	movwf	___wmul@multiplier+1
  7257  038D  0826               	movf	readAnalog@channel,w
  7258  038E  00F9               	movwf	___wmul@multiplier
  7259  038F  3064               	movlw	100
  7260  0390  00FB               	movwf	___wmul@multiplicand
  7261  0391  3000               	movlw	0
  7262  0392  00FC               	movwf	___wmul@multiplicand+1
  7263  0393  318C  2418  3183   	fcall	___wmul
  7264  0396  30D0               	movlw	208
  7265  0397  0020               	movlb	0	; select bank0
  7266  0398  00AA               	movwf	??_readAnalog+2
  7267  0399  3020               	movlw	32
  7268  039A  00AB               	movwf	??_readAnalog+3
  7269  039B  0879               	movf	?___wmul,w
  7270  039C  072A               	addwf	??_readAnalog+2,w
  7271  039D  00AC               	movwf	??_readAnalog+4
  7272  039E  087A               	movf	?___wmul+1,w
  7273  039F  3D2B               	addwfc	??_readAnalog+3,w
  7274  03A0  00AD               	movwf	??_readAnalog+5
  7275  03A1  0828               	movf	??_readAnalog,w
  7276  03A2  072C               	addwf	??_readAnalog+4,w
  7277  03A3  0086               	movwf	6
  7278  03A4  0829               	movf	??_readAnalog+1,w
  7279  03A5  3D2D               	addwfc	??_readAnalog+5,w
  7280  03A6  0087               	movwf	7
  7281  03A7  083C               	movf	readAnalog@value,w
  7282  03A8  3FC0               	movwi [0]fsr1
  7283  03A9  083D               	movf	readAnalog@value+1,w
  7284  03AA  3FC1               	movwi [1]fsr1
  7285                           
  7286                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  7287  03AB  0826               	movf	readAnalog@channel,w
  7288  03AC  00A8               	movwf	??_readAnalog
  7289  03AD  3001               	movlw	1
  7290  03AE                     u2145:	
  7291  03AE  35A8               	lslf	??_readAnalog,f
  7292  03AF  3EFF               	addlw	-1
  7293  03B0  1D03               	skipz
  7294  03B1  2BAE               	goto	u2145
  7295  03B2  3528               	lslf	??_readAnalog,w
  7296  03B3  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7297  03B4  0086               	movwf	6
  7298  03B5  0187               	clrf	7
  7299  03B6  3F40               	moviw [0]fsr1
  7300  03B7  00A9               	movwf	??_readAnalog+1
  7301  03B8  3F41               	moviw [1]fsr1
  7302  03B9  00AA               	movwf	??_readAnalog+2
  7303  03BA  3F42               	moviw [2]fsr1
  7304  03BB  00AB               	movwf	??_readAnalog+3
  7305  03BC  3F43               	moviw [3]fsr1
  7306  03BD  00AC               	movwf	??_readAnalog+4
  7307  03BE  0866               	movf	_sampleIndex+1,w
  7308  03BF  00AE               	movwf	??_readAnalog+6
  7309  03C0  0865               	movf	_sampleIndex,w
  7310  03C1  00AD               	movwf	??_readAnalog+5
  7311  03C2  35AD               	lslf	??_readAnalog+5,f
  7312  03C3  0DAE               	rlf	??_readAnalog+6,f
  7313  03C4  0827               	movf	readAnalog@channel+1,w
  7314  03C5  00FA               	movwf	___wmul@multiplier+1
  7315  03C6  0826               	movf	readAnalog@channel,w
  7316  03C7  00F9               	movwf	___wmul@multiplier
  7317  03C8  3064               	movlw	100
  7318  03C9  00FB               	movwf	___wmul@multiplicand
  7319  03CA  3000               	movlw	0
  7320  03CB  00FC               	movwf	___wmul@multiplicand+1
  7321  03CC  318C  2418  3183   	fcall	___wmul
  7322  03CF  30D0               	movlw	208
  7323  03D0  0020               	movlb	0	; select bank0
  7324  03D1  00AF               	movwf	??_readAnalog+7
  7325  03D2  3020               	movlw	32
  7326  03D3  00B0               	movwf	??_readAnalog+8
  7327  03D4  0879               	movf	?___wmul,w
  7328  03D5  072F               	addwf	??_readAnalog+7,w
  7329  03D6  00B1               	movwf	??_readAnalog+9
  7330  03D7  087A               	movf	?___wmul+1,w
  7331  03D8  3D30               	addwfc	??_readAnalog+8,w
  7332  03D9  00B2               	movwf	??_readAnalog+10
  7333  03DA  082D               	movf	??_readAnalog+5,w
  7334  03DB  0731               	addwf	??_readAnalog+9,w
  7335  03DC  0086               	movwf	6
  7336  03DD  082E               	movf	??_readAnalog+6,w
  7337  03DE  3D32               	addwfc	??_readAnalog+10,w
  7338  03DF  0087               	movwf	7
  7339  03E0  3F40               	moviw [0]fsr1
  7340  03E1  00B3               	movwf	??_readAnalog+11
  7341  03E2  3F41               	moviw [1]fsr1
  7342  03E3  00B4               	movwf	??_readAnalog+12
  7343  03E4  0833               	movf	??_readAnalog+11,w
  7344  03E5  00B5               	movwf	??_readAnalog+13
  7345  03E6  0834               	movf	??_readAnalog+12,w
  7346  03E7  00B6               	movwf	??_readAnalog+14
  7347  03E8  3000               	movlw	0
  7348  03E9  1BB6               	btfsc	??_readAnalog+14,7
  7349  03EA  30FF               	movlw	255
  7350  03EB  00B7               	movwf	??_readAnalog+15
  7351  03EC  00B8               	movwf	??_readAnalog+16
  7352  03ED  0835               	movf	??_readAnalog+13,w
  7353  03EE  07A9               	addwf	??_readAnalog+1,f
  7354  03EF  0836               	movf	??_readAnalog+14,w
  7355  03F0  3DAA               	addwfc	??_readAnalog+2,f
  7356  03F1  0837               	movf	??_readAnalog+15,w
  7357  03F2  3DAB               	addwfc	??_readAnalog+3,f
  7358  03F3  0838               	movf	??_readAnalog+16,w
  7359  03F4  3DAC               	addwfc	??_readAnalog+4,f
  7360  03F5  0826               	movf	readAnalog@channel,w
  7361  03F6  00B9               	movwf	??_readAnalog+17
  7362  03F7  3001               	movlw	1
  7363  03F8                     u2155:	
  7364  03F8  35B9               	lslf	??_readAnalog+17,f
  7365  03F9  3EFF               	addlw	-1
  7366  03FA  1D03               	skipz
  7367  03FB  2BF8               	goto	u2155
  7368  03FC  3539               	lslf	??_readAnalog+17,w
  7369  03FD  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7370  03FE  0086               	movwf	6
  7371  03FF  0187               	clrf	7
  7372  0400  0829               	movf	??_readAnalog+1,w
  7373  0401  3FC0               	movwi [0]fsr1
  7374  0402  082A               	movf	??_readAnalog+2,w
  7375  0403  3FC1               	movwi [1]fsr1
  7376  0404  082B               	movf	??_readAnalog+3,w
  7377  0405  3FC2               	movwi [2]fsr1
  7378  0406  082C               	movf	??_readAnalog+4,w
  7379  0407  3FC3               	movwi [3]fsr1
  7380                           
  7381                           ;adc.c: 63: if(channel>=(8-1))
  7382  0408  3000               	movlw	0
  7383  0409  0227               	subwf	readAnalog@channel+1,w
  7384  040A  3007               	movlw	7
  7385  040B  1903               	skipnz
  7386  040C  0226               	subwf	readAnalog@channel,w
  7387  040D  1C03               	skipc
  7388  040E  2C1C               	goto	l2160
  7389                           
  7390                           ;adc.c: 64: {
  7391                           ;adc.c: 65: sampleIndex+=1;
  7392  040F  3001               	movlw	1
  7393  0410  07E5               	addwf	_sampleIndex,f
  7394  0411  3000               	movlw	0
  7395  0412  3DE6               	addwfc	_sampleIndex+1,f
  7396                           
  7397                           ;adc.c: 66: if(sampleIndex >= 50)sampleIndex = 0;
  7398  0413  3000               	movlw	0
  7399  0414  0266               	subwf	_sampleIndex+1,w
  7400  0415  3032               	movlw	50
  7401  0416  1903               	skipnz
  7402  0417  0265               	subwf	_sampleIndex,w
  7403  0418  1C03               	skipc
  7404  0419  2C1C               	goto	l2160
  7405  041A  01E5               	clrf	_sampleIndex
  7406  041B  01E6               	clrf	_sampleIndex+1
  7407  041C                     l2160:	
  7408                           
  7409                           ;adc.c: 67: }
  7410                           ;adc.c: 69: value = totals[channel]/50;
  7411  041C  3000               	movlw	0
  7412  041D  00F3               	movwf	___aldiv@divisor+3
  7413  041E  3000               	movlw	0
  7414  041F  00F2               	movwf	___aldiv@divisor+2
  7415  0420  3000               	movlw	0
  7416  0421  00F1               	movwf	___aldiv@divisor+1
  7417  0422  3032               	movlw	50
  7418  0423  00F0               	movwf	___aldiv@divisor
  7419  0424  0826               	movf	readAnalog@channel,w
  7420  0425  00A8               	movwf	??_readAnalog
  7421  0426  3001               	movlw	1
  7422  0427                     u2185:	
  7423  0427  35A8               	lslf	??_readAnalog,f
  7424  0428  3EFF               	addlw	-1
  7425  0429  1D03               	skipz
  7426  042A  2C27               	goto	u2185
  7427  042B  3528               	lslf	??_readAnalog,w
  7428  042C  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7429  042D  0086               	movwf	6
  7430  042E  0187               	clrf	7
  7431  042F  3F40               	moviw [0]fsr1
  7432  0430  00F4               	movwf	___aldiv@dividend
  7433  0431  3F41               	moviw [1]fsr1
  7434  0432  00F5               	movwf	___aldiv@dividend+1
  7435  0433  3F42               	moviw [2]fsr1
  7436  0434  00F6               	movwf	___aldiv@dividend+2
  7437  0435  3F43               	moviw [3]fsr1
  7438  0436  00F7               	movwf	___aldiv@dividend+3
  7439  0437  3180  201D         	fcall	___aldiv
  7440  0439  0871               	movf	?___aldiv+1,w
  7441  043A  0020               	movlb	0	; select bank0
  7442  043B  00BD               	movwf	readAnalog@value+1
  7443  043C  0870               	movf	?___aldiv,w
  7444  043D  00BC               	movwf	readAnalog@value
  7445                           
  7446                           ;adc.c: 71: return value;
  7447  043E  083D               	movf	readAnalog@value+1,w
  7448  043F  00A7               	movwf	?_readAnalog+1
  7449  0440  083C               	movf	readAnalog@value,w
  7450  0441  00A6               	movwf	?_readAnalog
  7451  0442  0008               	return
  7452  0443                     __end_of_readAnalog:	
  7453                           
  7454                           	psect	text3
  7455  001D                     __ptext3:	
  7456 ;; *************** function ___aldiv *****************
  7457 ;; Defined at:
  7458 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;  divisor         4    0[COMMON] long 
  7461 ;;  dividend        4    4[COMMON] long 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  quotient        4    2[BANK0 ] long 
  7464 ;;  sign            1    1[BANK0 ] unsigned char 
  7465 ;;  counter         1    0[BANK0 ] unsigned char 
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  4    0[COMMON] long 
  7468 ;; Registers used:
  7469 ;;		wreg, status,2, status,0
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7475 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;Total ram usage:       15 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; This function calls:
  7482 ;;		Nothing
  7483 ;; This function is called by:
  7484 ;;		_readAnalog
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           
  7489                           ;psect for function ___aldiv
  7490  001D                     ___aldiv:	
  7491                           
  7492                           ;incstack = 0
  7493                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7494  001D  0020               	movlb	0	; select bank0
  7495  001E  01A1               	clrf	___aldiv@sign
  7496  001F  1FF3               	btfss	___aldiv@divisor+3,7
  7497  0020  282E               	goto	l573
  7498  0021  09F0               	comf	___aldiv@divisor,f
  7499  0022  09F1               	comf	___aldiv@divisor+1,f
  7500  0023  09F2               	comf	___aldiv@divisor+2,f
  7501  0024  09F3               	comf	___aldiv@divisor+3,f
  7502  0025  0AF0               	incf	___aldiv@divisor,f
  7503  0026  1903               	skipnz
  7504  0027  0AF1               	incf	___aldiv@divisor+1,f
  7505  0028  1903               	skipnz
  7506  0029  0AF2               	incf	___aldiv@divisor+2,f
  7507  002A  1903               	skipnz
  7508  002B  0AF3               	incf	___aldiv@divisor+3,f
  7509  002C  01A1               	clrf	___aldiv@sign
  7510  002D  0AA1               	incf	___aldiv@sign,f
  7511  002E                     l573:	
  7512  002E  1FF7               	btfss	___aldiv@dividend+3,7
  7513  002F  283F               	goto	l1954
  7514  0030  09F4               	comf	___aldiv@dividend,f
  7515  0031  09F5               	comf	___aldiv@dividend+1,f
  7516  0032  09F6               	comf	___aldiv@dividend+2,f
  7517  0033  09F7               	comf	___aldiv@dividend+3,f
  7518  0034  0AF4               	incf	___aldiv@dividend,f
  7519  0035  1903               	skipnz
  7520  0036  0AF5               	incf	___aldiv@dividend+1,f
  7521  0037  1903               	skipnz
  7522  0038  0AF6               	incf	___aldiv@dividend+2,f
  7523  0039  1903               	skipnz
  7524  003A  0AF7               	incf	___aldiv@dividend+3,f
  7525  003B  3001               	movlw	1
  7526  003C  00F8               	movwf	??___aldiv
  7527  003D  0878               	movf	??___aldiv,w
  7528  003E  06A1               	xorwf	___aldiv@sign,f
  7529  003F                     l1954:	
  7530  003F  3000               	movlw	0
  7531  0040  00A5               	movwf	___aldiv@quotient+3
  7532  0041  3000               	movlw	0
  7533  0042  00A4               	movwf	___aldiv@quotient+2
  7534  0043  3000               	movlw	0
  7535  0044  00A3               	movwf	___aldiv@quotient+1
  7536  0045  3000               	movlw	0
  7537  0046  00A2               	movwf	___aldiv@quotient
  7538  0047  0873               	movf	___aldiv@divisor+3,w
  7539  0048  0472               	iorwf	___aldiv@divisor+2,w
  7540  0049  0471               	iorwf	___aldiv@divisor+1,w
  7541  004A  0470               	iorwf	___aldiv@divisor,w
  7542  004B  1903               	skipnz
  7543  004C  2888               	goto	l1976
  7544  004D  01A0               	clrf	___aldiv@counter
  7545  004E  0AA0               	incf	___aldiv@counter,f
  7546  004F                     l1962:	
  7547  004F  1BF3               	btfsc	___aldiv@divisor+3,7
  7548  0050  285D               	goto	l1964
  7549  0051  3001               	movlw	1
  7550  0052                     u1705:	
  7551  0052  35F0               	lslf	___aldiv@divisor,f
  7552  0053  0DF1               	rlf	___aldiv@divisor+1,f
  7553  0054  0DF2               	rlf	___aldiv@divisor+2,f
  7554  0055  0DF3               	rlf	___aldiv@divisor+3,f
  7555  0056  0B89               	decfsz	9,f
  7556  0057  2852               	goto	u1705
  7557  0058  3001               	movlw	1
  7558  0059  00F8               	movwf	??___aldiv
  7559  005A  0878               	movf	??___aldiv,w
  7560  005B  07A0               	addwf	___aldiv@counter,f
  7561  005C  284F               	goto	l1962
  7562  005D                     l1964:	
  7563  005D  3001               	movlw	1
  7564  005E                     u1725:	
  7565  005E  35A2               	lslf	___aldiv@quotient,f
  7566  005F  0DA3               	rlf	___aldiv@quotient+1,f
  7567  0060  0DA4               	rlf	___aldiv@quotient+2,f
  7568  0061  0DA5               	rlf	___aldiv@quotient+3,f
  7569  0062  0B89               	decfsz	9,f
  7570  0063  285E               	goto	u1725
  7571  0064  0873               	movf	___aldiv@divisor+3,w
  7572  0065  0277               	subwf	___aldiv@dividend+3,w
  7573  0066  1D03               	skipz
  7574  0067  2872               	goto	u1735
  7575  0068  0872               	movf	___aldiv@divisor+2,w
  7576  0069  0276               	subwf	___aldiv@dividend+2,w
  7577  006A  1D03               	skipz
  7578  006B  2872               	goto	u1735
  7579  006C  0871               	movf	___aldiv@divisor+1,w
  7580  006D  0275               	subwf	___aldiv@dividend+1,w
  7581  006E  1D03               	skipz
  7582  006F  2872               	goto	u1735
  7583  0070  0870               	movf	___aldiv@divisor,w
  7584  0071  0274               	subwf	___aldiv@dividend,w
  7585  0072                     u1735:	
  7586  0072  1C03               	skipc
  7587  0073  287D               	goto	l1972
  7588  0074  0870               	movf	___aldiv@divisor,w
  7589  0075  02F4               	subwf	___aldiv@dividend,f
  7590  0076  0871               	movf	___aldiv@divisor+1,w
  7591  0077  3BF5               	subwfb	___aldiv@dividend+1,f
  7592  0078  0872               	movf	___aldiv@divisor+2,w
  7593  0079  3BF6               	subwfb	___aldiv@dividend+2,f
  7594  007A  0873               	movf	___aldiv@divisor+3,w
  7595  007B  3BF7               	subwfb	___aldiv@dividend+3,f
  7596  007C  1422               	bsf	___aldiv@quotient,0
  7597  007D                     l1972:	
  7598  007D  3001               	movlw	1
  7599  007E                     u1745:	
  7600  007E  36F3               	lsrf	___aldiv@divisor+3,f
  7601  007F  0CF2               	rrf	___aldiv@divisor+2,f
  7602  0080  0CF1               	rrf	___aldiv@divisor+1,f
  7603  0081  0CF0               	rrf	___aldiv@divisor,f
  7604  0082  0B89               	decfsz	9,f
  7605  0083  287E               	goto	u1745
  7606  0084  3001               	movlw	1
  7607  0085  02A0               	subwf	___aldiv@counter,f
  7608  0086  1D03               	btfss	3,2
  7609  0087  285D               	goto	l1964
  7610  0088                     l1976:	
  7611  0088  0821               	movf	___aldiv@sign,w
  7612  0089  1903               	btfsc	3,2
  7613  008A  2896               	goto	l1980
  7614  008B  09A2               	comf	___aldiv@quotient,f
  7615  008C  09A3               	comf	___aldiv@quotient+1,f
  7616  008D  09A4               	comf	___aldiv@quotient+2,f
  7617  008E  09A5               	comf	___aldiv@quotient+3,f
  7618  008F  0AA2               	incf	___aldiv@quotient,f
  7619  0090  1903               	skipnz
  7620  0091  0AA3               	incf	___aldiv@quotient+1,f
  7621  0092  1903               	skipnz
  7622  0093  0AA4               	incf	___aldiv@quotient+2,f
  7623  0094  1903               	skipnz
  7624  0095  0AA5               	incf	___aldiv@quotient+3,f
  7625  0096                     l1980:	
  7626  0096  0825               	movf	___aldiv@quotient+3,w
  7627  0097  00F3               	movwf	?___aldiv+3
  7628  0098  0824               	movf	___aldiv@quotient+2,w
  7629  0099  00F2               	movwf	?___aldiv+2
  7630  009A  0823               	movf	___aldiv@quotient+1,w
  7631  009B  00F1               	movwf	?___aldiv+1
  7632  009C  0822               	movf	___aldiv@quotient,w
  7633  009D  00F0               	movwf	?___aldiv
  7634  009E  0008               	return
  7635  009F                     __end_of___aldiv:	
  7636                           
  7637                           	psect	text4
  7638  0BED                     __ptext4:	
  7639 ;; *************** function _ADCRead *****************
  7640 ;; Defined at:
  7641 ;;		line 19 in file "adc.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;  channel         1    wreg     enum E14259
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  channel         1    3[COMMON] enum E14259
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  2    0[COMMON] int 
  7648 ;; Registers used:
  7649 ;;		wreg
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7655 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;Total ram usage:        4 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; This function calls:
  7662 ;;		Nothing
  7663 ;; This function is called by:
  7664 ;;		_readAnalog
  7665 ;;		_readButton
  7666 ;;		_main
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           
  7671                           ;psect for function _ADCRead
  7672  0BED                     _ADCRead:	
  7673                           
  7674                           ;incstack = 0
  7675                           ; Regs used in _ADCRead: [wreg]
  7676                           ;ADCRead@channel stored from wreg
  7677  0BED  00F3               	movwf	ADCRead@channel
  7678                           
  7679                           ;adc.c: 21: ADPCH = channel_VSS;
  7680  0BEE  303C               	movlw	60
  7681  0BEF  0021               	movlb	1	; select bank1
  7682  0BF0  009E               	movwf	30	;volatile
  7683                           
  7684                           ;adc.c: 23: ADCON0bits.ADON = 1;
  7685  0BF1  1793               	bsf	19,7	;volatile
  7686                           
  7687                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
  7688  0BF2  1313               	bcf	19,6	;volatile
  7689                           
  7690                           ;adc.c: 27: ADCON0bits.ADGO = 1;
  7691  0BF3  1413               	bsf	19,0	;volatile
  7692  0BF4                     l57:	
  7693                           ;adc.c: 30: {
  7694                           
  7695                           ;adc.c: 29: while(ADCON0bits.ADGO)
  7696                           
  7697  0BF4  1813               	btfsc	19,0	;volatile
  7698  0BF5  2BF4               	goto	l57
  7699                           
  7700                           ;adc.c: 31: }
  7701                           ;adc.c: 33: ADPCH = channel;
  7702  0BF6  0873               	movf	ADCRead@channel,w
  7703  0BF7  009E               	movwf	30	;volatile
  7704                           
  7705                           ;adc.c: 35: ADCON0bits.ADON = 1;
  7706  0BF8  1793               	bsf	19,7	;volatile
  7707                           
  7708                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
  7709  0BF9  1313               	bcf	19,6	;volatile
  7710                           
  7711                           ;adc.c: 39: ADCON0bits.ADGO = 1;
  7712  0BFA  1413               	bsf	19,0	;volatile
  7713  0BFB                     l60:	
  7714                           ;adc.c: 42: {
  7715                           
  7716                           ;adc.c: 41: while(ADCON0bits.ADGO)
  7717                           
  7718  0BFB  1813               	btfsc	19,0	;volatile
  7719  0BFC  2BFB               	goto	l60
  7720                           
  7721                           ;adc.c: 43: }
  7722                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
  7723  0BFD  080D               	movf	13,w	;volatile
  7724  0BFE  00F1               	movwf	?_ADCRead+1
  7725  0BFF  080C               	movf	12,w	;volatile
  7726  0C00  00F0               	movwf	?_ADCRead
  7727  0C01  0008               	return
  7728  0C02                     __end_of_ADCRead:	
  7729                           
  7730                           	psect	text5
  7731  0D47                     __ptext5:	
  7732 ;; *************** function _cc_cv_mode *****************
  7733 ;; Defined at:
  7734 ;;		line 129 in file "battery_charger.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;		None
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg, status,2, status,0
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;Total ram usage:        1 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_main
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           
  7762                           ;psect for function _cc_cv_mode
  7763  0D47                     _cc_cv_mode:	
  7764                           
  7765                           ;battery_charger.c: 131: if(voltage[1] > Vref)
  7766                           
  7767                           ;incstack = 0
  7768                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
  7769  0D47  0020               	movlb	0	; select bank0
  7770  0D48  086C               	movf	_Vref+1,w
  7771  0D49  3A80               	xorlw	128
  7772  0D4A  00F0               	movwf	??_cc_cv_mode
  7773  0D4B  085A               	movf	_voltage+3,w
  7774  0D4C  3A80               	xorlw	128
  7775  0D4D  0270               	subwf	??_cc_cv_mode,w
  7776  0D4E  1D03               	skipz
  7777  0D4F  2D52               	goto	u2295
  7778  0D50  0859               	movf	_voltage+2,w
  7779  0D51  026B               	subwf	_Vref,w
  7780  0D52                     u2295:	
  7781  0D52  1803               	skipnc
  7782  0D53  2D60               	goto	l2218
  7783                           
  7784                           ;battery_charger.c: 132: {
  7785                           ;battery_charger.c: 133: if(cc_cv)
  7786  0D54  0020               	movlb	0	; select bank0
  7787  0D55  086A               	movf	_cc_cv,w
  7788  0D56  1903               	btfsc	3,2
  7789  0D57  2D5B               	goto	l2214
  7790                           
  7791                           ;battery_charger.c: 134: {
  7792                           ;battery_charger.c: 135: cc_cv-=1;
  7793  0D58  3001               	movlw	1
  7794  0D59  02EA               	subwf	_cc_cv,f
  7795                           
  7796                           ;battery_charger.c: 136: }
  7797  0D5A  0008               	return
  7798  0D5B                     l2214:	
  7799                           
  7800                           ;battery_charger.c: 137: else
  7801                           ;battery_charger.c: 138: {
  7802                           ;battery_charger.c: 139: if(Imode0)
  7803  0D5B  086F               	movf	_Imode0,w
  7804  0D5C  1903               	btfsc	3,2
  7805  0D5D  0008               	return
  7806                           
  7807                           ;battery_charger.c: 140: {
  7808                           ;battery_charger.c: 141: Imode0 = 0;
  7809  0D5E  01EF               	clrf	_Imode0
  7810                           
  7811                           ;battery_charger.c: 142: }
  7812                           ;battery_charger.c: 143: }
  7813                           ;battery_charger.c: 144: }
  7814  0D5F  0008               	return
  7815  0D60                     l2218:	
  7816                           
  7817                           ;battery_charger.c: 145: else
  7818                           ;battery_charger.c: 146: if(current[1] > Iref)
  7819  0D60  0021               	movlb	1	; select bank1
  7820  0D61  0860               	movf	(_Iref+1)^(0+128),w
  7821  0D62  3A80               	xorlw	128
  7822  0D63  00F0               	movwf	??_cc_cv_mode
  7823  0D64  0853               	movf	((_current+1)^(0+128)+2),w
  7824  0D65  3A80               	xorlw	128
  7825  0D66  0270               	subwf	??_cc_cv_mode,w
  7826  0D67  1D03               	skipz
  7827  0D68  2D6B               	goto	u2325
  7828  0D69  0852               	movf	(_current^(0+128)+2),w
  7829  0D6A  025F               	subwf	_Iref^(0+128),w
  7830  0D6B                     u2325:	
  7831  0D6B  1803               	skipnc
  7832  0D6C  0008               	return
  7833                           
  7834                           ;battery_charger.c: 147: {
  7835                           ;battery_charger.c: 148: if(!Imode0)
  7836  0D6D  0020               	movlb	0	; select bank0
  7837  0D6E  086F               	movf	_Imode0,w
  7838  0D6F  1D03               	btfss	3,2
  7839  0D70  0008               	return
  7840                           
  7841                           ;battery_charger.c: 149: {
  7842                           ;battery_charger.c: 150: Imode0 = 1;
  7843  0D71  01EF               	clrf	_Imode0
  7844  0D72  0AEF               	incf	_Imode0,f
  7845                           
  7846                           ;battery_charger.c: 151: cc_cv = 10;
  7847  0D73  300A               	movlw	10
  7848  0D74  00F0               	movwf	??_cc_cv_mode
  7849  0D75  0870               	movf	??_cc_cv_mode,w
  7850  0D76  00EA               	movwf	_cc_cv
  7851  0D77  0008               	return
  7852  0D78                     __end_of_cc_cv_mode:	
  7853                           
  7854                           	psect	text6
  7855  0E2D                     __ptext6:	
  7856 ;; *************** function _calculateCurrent1 *****************
  7857 ;; Defined at:
  7858 ;;		line 263 in file "main.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;		None
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		wreg, status,2, status,0, pclath, cstack
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;Total ram usage:        3 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; Hardware stack levels required when called:    2
  7879 ;; This function calls:
  7880 ;;		___awtoft
  7881 ;;		___ftdiv
  7882 ;;		___fttol
  7883 ;; This function is called by:
  7884 ;;		_main
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           
  7889                           ;psect for function _calculateCurrent1
  7890  0E2D                     _calculateCurrent1:	
  7891                           
  7892                           ;main.c: 265: if(analogs[5]-578<=0)
  7893                           
  7894                           ;incstack = 0
  7895                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
  7896  0E2D  0021               	movlb	1	; select bank1
  7897  0E2E  084A               	movf	(_analogs^(0+128)+10),w
  7898  0E2F  3EBE               	addlw	190
  7899  0E30  0020               	movlb	0	; select bank0
  7900  0E31  00BE               	movwf	??_calculateCurrent1
  7901  0E32  30FD               	movlw	253
  7902  0E33  0021               	movlb	1	; select bank1
  7903  0E34  3D4B               	addwfc	((_analogs+1)^(0+128)+10),w
  7904  0E35  0020               	movlb	0	; select bank0
  7905  0E36  00BF               	movwf	??_calculateCurrent1+1
  7906  0E37  083F               	movf	??_calculateCurrent1+1,w
  7907  0E38  3A80               	xorlw	128
  7908  0E39  00C0               	movwf	??_calculateCurrent1+2
  7909  0E3A  3080               	movlw	128
  7910  0E3B  0240               	subwf	??_calculateCurrent1+2,w
  7911  0E3C  1D03               	skipz
  7912  0E3D  2E40               	goto	u2555
  7913  0E3E  3001               	movlw	1
  7914  0E3F  023E               	subwf	??_calculateCurrent1,w
  7915  0E40                     u2555:	
  7916  0E40  1803               	skipnc
  7917  0E41  2E46               	goto	l2342
  7918                           
  7919                           ;main.c: 266: {
  7920                           ;main.c: 267: current[1]=0;
  7921  0E42  0021               	movlb	1	; select bank1
  7922  0E43  01D2               	clrf	(_current^(0+128)+2)
  7923  0E44  01D3               	clrf	((_current+1)^(0+128)+2)
  7924                           
  7925                           ;main.c: 268: }
  7926  0E45  0008               	return
  7927  0E46                     l2342:	
  7928                           
  7929                           ;main.c: 269: else
  7930                           ;main.c: 270: {
  7931                           ;main.c: 271: current[1]=(analogs[5]-578)/3.232;
  7932  0E46  0021               	movlb	1	; select bank1
  7933  0E47  084A               	movf	(_analogs^(0+128)+10),w
  7934  0E48  3EBE               	addlw	190
  7935  0E49  00F8               	movwf	___awtoft@c
  7936  0E4A  30FD               	movlw	253
  7937  0E4B  3D4B               	addwfc	((_analogs+1)^(0+128)+10),w
  7938  0E4C  00F9               	movwf	___awtoft@c+1
  7939  0E4D  318C  2455  318E   	fcall	___awtoft
  7940  0E50  0878               	movf	?___awtoft,w
  7941  0E51  0020               	movlb	0	; select bank0
  7942  0E52  00A3               	movwf	___ftdiv@f1
  7943  0E53  0879               	movf	?___awtoft+1,w
  7944  0E54  00A4               	movwf	___ftdiv@f1+1
  7945  0E55  087A               	movf	?___awtoft+2,w
  7946  0E56  00A5               	movwf	___ftdiv@f1+2
  7947  0E57  30D9               	movlw	217
  7948  0E58  00A0               	movwf	___ftdiv@f2
  7949  0E59  304E               	movlw	78
  7950  0E5A  00A1               	movwf	___ftdiv@f2+1
  7951  0E5B  3040               	movlw	64
  7952  0E5C  00A2               	movwf	___ftdiv@f2+2
  7953  0E5D  3181  21A8  318E   	fcall	___ftdiv
  7954  0E60  0020               	movlb	0	; select bank0
  7955  0E61  0820               	movf	?___ftdiv,w
  7956  0E62  00B0               	movwf	___fttol@f1
  7957  0E63  0821               	movf	?___ftdiv+1,w
  7958  0E64  00B1               	movwf	___fttol@f1+1
  7959  0E65  0822               	movf	?___ftdiv+2,w
  7960  0E66  00B2               	movwf	___fttol@f1+2
  7961  0E67  3181  2121         	fcall	___fttol
  7962  0E69  0020               	movlb	0	; select bank0
  7963  0E6A  0831               	movf	?___fttol+1,w
  7964  0E6B  0021               	movlb	1	; select bank1
  7965  0E6C  00D3               	movwf	((_current+1)^(0+128)+2)
  7966  0E6D  0020               	movlb	0	; select bank0
  7967  0E6E  0830               	movf	?___fttol,w
  7968  0E6F  0021               	movlb	1	; select bank1
  7969  0E70  00D2               	movwf	(_current^(0+128)+2)
  7970  0E71  0008               	return
  7971  0E72                     __end_of_calculateCurrent1:	
  7972                           
  7973                           	psect	text7
  7974  0DE8                     __ptext7:	
  7975 ;; *************** function _calculateCurrent0 *****************
  7976 ;; Defined at:
  7977 ;;		line 251 in file "main.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;		None
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;		None
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, status,2, status,0, pclath, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7995 ;;Total ram usage:        3 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:    2
  7998 ;; This function calls:
  7999 ;;		___awtoft
  8000 ;;		___ftdiv
  8001 ;;		___fttol
  8002 ;; This function is called by:
  8003 ;;		_main
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           
  8008                           ;psect for function _calculateCurrent0
  8009  0DE8                     _calculateCurrent0:	
  8010                           
  8011                           ;main.c: 253: if(analogs[4]-589<=0)
  8012                           
  8013                           ;incstack = 0
  8014                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
  8015  0DE8  0021               	movlb	1	; select bank1
  8016  0DE9  0848               	movf	(_analogs^(0+128)+8),w
  8017  0DEA  3EB3               	addlw	179
  8018  0DEB  0020               	movlb	0	; select bank0
  8019  0DEC  00BE               	movwf	??_calculateCurrent0
  8020  0DED  30FD               	movlw	253
  8021  0DEE  0021               	movlb	1	; select bank1
  8022  0DEF  3D49               	addwfc	((_analogs+1)^(0+128)+8),w
  8023  0DF0  0020               	movlb	0	; select bank0
  8024  0DF1  00BF               	movwf	??_calculateCurrent0+1
  8025  0DF2  083F               	movf	??_calculateCurrent0+1,w
  8026  0DF3  3A80               	xorlw	128
  8027  0DF4  00C0               	movwf	??_calculateCurrent0+2
  8028  0DF5  3080               	movlw	128
  8029  0DF6  0240               	subwf	??_calculateCurrent0+2,w
  8030  0DF7  1D03               	skipz
  8031  0DF8  2DFB               	goto	u2545
  8032  0DF9  3001               	movlw	1
  8033  0DFA  023E               	subwf	??_calculateCurrent0,w
  8034  0DFB                     u2545:	
  8035  0DFB  1803               	skipnc
  8036  0DFC  2E01               	goto	l2336
  8037                           
  8038                           ;main.c: 254: {
  8039                           ;main.c: 255: current[0]=0;
  8040  0DFD  0021               	movlb	1	; select bank1
  8041  0DFE  01D0               	clrf	_current^(0+128)
  8042  0DFF  01D1               	clrf	(_current+1)^(0+128)
  8043                           
  8044                           ;main.c: 256: }
  8045  0E00  0008               	return
  8046  0E01                     l2336:	
  8047                           
  8048                           ;main.c: 257: else
  8049                           ;main.c: 258: {
  8050                           ;main.c: 259: current[0]=(analogs[4]-589)/1.3165;
  8051  0E01  0021               	movlb	1	; select bank1
  8052  0E02  0848               	movf	(_analogs^(0+128)+8),w
  8053  0E03  3EB3               	addlw	179
  8054  0E04  00F8               	movwf	___awtoft@c
  8055  0E05  30FD               	movlw	253
  8056  0E06  3D49               	addwfc	((_analogs+1)^(0+128)+8),w
  8057  0E07  00F9               	movwf	___awtoft@c+1
  8058  0E08  318C  2455  318D   	fcall	___awtoft
  8059  0E0B  0878               	movf	?___awtoft,w
  8060  0E0C  0020               	movlb	0	; select bank0
  8061  0E0D  00A3               	movwf	___ftdiv@f1
  8062  0E0E  0879               	movf	?___awtoft+1,w
  8063  0E0F  00A4               	movwf	___ftdiv@f1+1
  8064  0E10  087A               	movf	?___awtoft+2,w
  8065  0E11  00A5               	movwf	___ftdiv@f1+2
  8066  0E12  3083               	movlw	131
  8067  0E13  00A0               	movwf	___ftdiv@f2
  8068  0E14  30A8               	movlw	168
  8069  0E15  00A1               	movwf	___ftdiv@f2+1
  8070  0E16  303F               	movlw	63
  8071  0E17  00A2               	movwf	___ftdiv@f2+2
  8072  0E18  3181  21A8  318D   	fcall	___ftdiv
  8073  0E1B  0020               	movlb	0	; select bank0
  8074  0E1C  0820               	movf	?___ftdiv,w
  8075  0E1D  00B0               	movwf	___fttol@f1
  8076  0E1E  0821               	movf	?___ftdiv+1,w
  8077  0E1F  00B1               	movwf	___fttol@f1+1
  8078  0E20  0822               	movf	?___ftdiv+2,w
  8079  0E21  00B2               	movwf	___fttol@f1+2
  8080  0E22  3181  2121         	fcall	___fttol
  8081  0E24  0020               	movlb	0	; select bank0
  8082  0E25  0831               	movf	?___fttol+1,w
  8083  0E26  0021               	movlb	1	; select bank1
  8084  0E27  00D1               	movwf	(_current+1)^(0+128)
  8085  0E28  0020               	movlb	0	; select bank0
  8086  0E29  0830               	movf	?___fttol,w
  8087  0E2A  0021               	movlb	1	; select bank1
  8088  0E2B  00D0               	movwf	_current^(0+128)
  8089  0E2C  0008               	return
  8090  0E2D                     __end_of_calculateCurrent0:	
  8091                           
  8092                           	psect	text8
  8093  0121                     __ptext8:	
  8094 ;; *************** function ___fttol *****************
  8095 ;; Defined at:
  8096 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  f1              3   16[BANK0 ] float 
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;  lval            4   25[BANK0 ] unsigned long 
  8101 ;;  exp1            1   29[BANK0 ] unsigned char 
  8102 ;;  sign1           1   24[BANK0 ] unsigned char 
  8103 ;; Return value:  Size  Location     Type
  8104 ;;                  4   16[BANK0 ] long 
  8105 ;; Registers used:
  8106 ;;		wreg, status,2, status,0
  8107 ;; Tracked objects:
  8108 ;;		On entry : 0/0
  8109 ;;		On exit  : 0/0
  8110 ;;		Unchanged: 0/0
  8111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8112 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;Total ram usage:       14 bytes
  8117 ;; Hardware stack levels used:    1
  8118 ;; This function calls:
  8119 ;;		Nothing
  8120 ;; This function is called by:
  8121 ;;		_main
  8122 ;;		_calculateCurrent0
  8123 ;;		_calculateCurrent1
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function ___fttol
  8129  0121                     ___fttol:	
  8130                           
  8131                           ;incstack = 0
  8132                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8133  0121  0020               	movlb	0	; select bank0
  8134  0122  0830               	movf	___fttol@f1,w
  8135  0123  00B4               	movwf	??___fttol
  8136  0124  0831               	movf	___fttol@f1+1,w
  8137  0125  00B5               	movwf	??___fttol+1
  8138  0126  0832               	movf	___fttol@f1+2,w
  8139  0127  00B6               	movwf	??___fttol+2
  8140  0128  1003               	clrc
  8141  0129  0D35               	rlf	??___fttol+1,w
  8142  012A  0D36               	rlf	??___fttol+2,w
  8143  012B  00B7               	movwf	??___fttol+3
  8144  012C  0837               	movf	??___fttol+3,w
  8145  012D  00BD               	movwf	___fttol@exp1
  8146  012E  083D               	movf	___fttol@exp1,w
  8147  012F  1D03               	btfss	3,2
  8148  0130  293A               	goto	l2088
  8149  0131  3000               	movlw	0
  8150  0132  00B3               	movwf	?___fttol+3
  8151  0133  3000               	movlw	0
  8152  0134  00B2               	movwf	?___fttol+2
  8153  0135  3000               	movlw	0
  8154  0136  00B1               	movwf	?___fttol+1
  8155  0137  3000               	movlw	0
  8156  0138  00B0               	movwf	?___fttol
  8157  0139  0008               	return
  8158  013A                     l2088:	
  8159  013A  0830               	movf	___fttol@f1,w
  8160  013B  00B4               	movwf	??___fttol
  8161  013C  0831               	movf	___fttol@f1+1,w
  8162  013D  00B5               	movwf	??___fttol+1
  8163  013E  0832               	movf	___fttol@f1+2,w
  8164  013F  00B6               	movwf	??___fttol+2
  8165  0140  3017               	movlw	23
  8166  0141                     u1975:	
  8167  0141  36B6               	lsrf	??___fttol+2,f
  8168  0142  0CB5               	rrf	??___fttol+1,f
  8169  0143  0CB4               	rrf	??___fttol,f
  8170  0144  0B89               	decfsz	9,f
  8171  0145  2941               	goto	u1975
  8172  0146  0834               	movf	??___fttol,w
  8173  0147  00B7               	movwf	??___fttol+3
  8174  0148  0837               	movf	??___fttol+3,w
  8175  0149  00B8               	movwf	___fttol@sign1
  8176  014A  17B1               	bsf	___fttol@f1+1,7
  8177  014B  30FF               	movlw	255
  8178  014C  05B0               	andwf	___fttol@f1,f
  8179  014D  30FF               	movlw	255
  8180  014E  05B1               	andwf	___fttol@f1+1,f
  8181  014F  3000               	movlw	0
  8182  0150  05B2               	andwf	___fttol@f1+2,f
  8183  0151  0830               	movf	___fttol@f1,w
  8184  0152  00B9               	movwf	___fttol@lval
  8185  0153  0831               	movf	___fttol@f1+1,w
  8186  0154  00BA               	movwf	___fttol@lval+1
  8187  0155  0832               	movf	___fttol@f1+2,w
  8188  0156  00BB               	movwf	___fttol@lval+2
  8189  0157  01BC               	clrf	___fttol@lval+3
  8190  0158  308E               	movlw	142
  8191  0159  02BD               	subwf	___fttol@exp1,f
  8192  015A  1FBD               	btfss	___fttol@exp1,7
  8193  015B  2978               	goto	l2108
  8194  015C  083D               	movf	___fttol@exp1,w
  8195  015D  3A80               	xorlw	128
  8196  015E  3E8F               	addlw	143
  8197  015F  1803               	skipnc
  8198  0160  296A               	goto	l2106
  8199  0161  3000               	movlw	0
  8200  0162  00B3               	movwf	?___fttol+3
  8201  0163  3000               	movlw	0
  8202  0164  00B2               	movwf	?___fttol+2
  8203  0165  3000               	movlw	0
  8204  0166  00B1               	movwf	?___fttol+1
  8205  0167  3000               	movlw	0
  8206  0168  00B0               	movwf	?___fttol
  8207  0169  0008               	return
  8208  016A                     l2106:	
  8209  016A  3001               	movlw	1
  8210  016B                     u2005:	
  8211  016B  36BC               	lsrf	___fttol@lval+3,f
  8212  016C  0CBB               	rrf	___fttol@lval+2,f
  8213  016D  0CBA               	rrf	___fttol@lval+1,f
  8214  016E  0CB9               	rrf	___fttol@lval,f
  8215  016F  0B89               	decfsz	9,f
  8216  0170  296B               	goto	u2005
  8217  0171  3001               	movlw	1
  8218  0172  00B4               	movwf	??___fttol
  8219  0173  0834               	movf	??___fttol,w
  8220  0174  07BD               	addwf	___fttol@exp1,f
  8221  0175  1903               	btfsc	3,2
  8222  0176  2991               	goto	l2116
  8223  0177  296A               	goto	l2106
  8224  0178                     l2108:	
  8225  0178  3018               	movlw	24
  8226  0179  023D               	subwf	___fttol@exp1,w
  8227  017A  1C03               	skipc
  8228  017B  298E               	goto	l770
  8229  017C  3000               	movlw	0
  8230  017D  00B3               	movwf	?___fttol+3
  8231  017E  3000               	movlw	0
  8232  017F  00B2               	movwf	?___fttol+2
  8233  0180  3000               	movlw	0
  8234  0181  00B1               	movwf	?___fttol+1
  8235  0182  3000               	movlw	0
  8236  0183  00B0               	movwf	?___fttol
  8237  0184  0008               	return
  8238  0185                     l2114:	
  8239  0185  3001               	movlw	1
  8240  0186                     u2035:	
  8241  0186  35B9               	lslf	___fttol@lval,f
  8242  0187  0DBA               	rlf	___fttol@lval+1,f
  8243  0188  0DBB               	rlf	___fttol@lval+2,f
  8244  0189  0DBC               	rlf	___fttol@lval+3,f
  8245  018A  0B89               	decfsz	9,f
  8246  018B  2986               	goto	u2035
  8247  018C  3001               	movlw	1
  8248  018D  02BD               	subwf	___fttol@exp1,f
  8249  018E                     l770:	
  8250  018E  083D               	movf	___fttol@exp1,w
  8251  018F  1D03               	btfss	3,2
  8252  0190  2985               	goto	l2114
  8253  0191                     l2116:	
  8254  0191  0838               	movf	___fttol@sign1,w
  8255  0192  1903               	btfsc	3,2
  8256  0193  299F               	goto	l2120
  8257  0194  09B9               	comf	___fttol@lval,f
  8258  0195  09BA               	comf	___fttol@lval+1,f
  8259  0196  09BB               	comf	___fttol@lval+2,f
  8260  0197  09BC               	comf	___fttol@lval+3,f
  8261  0198  0AB9               	incf	___fttol@lval,f
  8262  0199  1903               	skipnz
  8263  019A  0ABA               	incf	___fttol@lval+1,f
  8264  019B  1903               	skipnz
  8265  019C  0ABB               	incf	___fttol@lval+2,f
  8266  019D  1903               	skipnz
  8267  019E  0ABC               	incf	___fttol@lval+3,f
  8268  019F                     l2120:	
  8269  019F  083C               	movf	___fttol@lval+3,w
  8270  01A0  00B3               	movwf	?___fttol+3
  8271  01A1  083B               	movf	___fttol@lval+2,w
  8272  01A2  00B2               	movwf	?___fttol+2
  8273  01A3  083A               	movf	___fttol@lval+1,w
  8274  01A4  00B1               	movwf	?___fttol+1
  8275  01A5  0839               	movf	___fttol@lval,w
  8276  01A6  00B0               	movwf	?___fttol
  8277  01A7  0008               	return
  8278  01A8                     __end_of___fttol:	
  8279                           
  8280                           	psect	text9
  8281  01A8                     __ptext9:	
  8282 ;; *************** function ___ftdiv *****************
  8283 ;; Defined at:
  8284 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;  f2              3    0[BANK0 ] float 
  8287 ;;  f1              3    3[BANK0 ] float 
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;  f3              3   11[BANK0 ] float 
  8290 ;;  sign            1   15[BANK0 ] unsigned char 
  8291 ;;  exp             1   14[BANK0 ] unsigned char 
  8292 ;;  cntr            1   10[BANK0 ] unsigned char 
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  3    0[BANK0 ] float 
  8295 ;; Registers used:
  8296 ;;		wreg, status,2, status,0, pclath, cstack
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8302 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8303 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8304 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8306 ;;Total ram usage:       16 bytes
  8307 ;; Hardware stack levels used:    1
  8308 ;; Hardware stack levels required when called:    1
  8309 ;; This function calls:
  8310 ;;		___ftpack
  8311 ;; This function is called by:
  8312 ;;		_main
  8313 ;;		_calculateCurrent0
  8314 ;;		_calculateCurrent1
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           
  8319                           ;psect for function ___ftdiv
  8320  01A8                     ___ftdiv:	
  8321                           
  8322                           ;incstack = 0
  8323                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8324  01A8  0020               	movlb	0	; select bank0
  8325  01A9  0823               	movf	___ftdiv@f1,w
  8326  01AA  00A6               	movwf	??___ftdiv
  8327  01AB  0824               	movf	___ftdiv@f1+1,w
  8328  01AC  00A7               	movwf	??___ftdiv+1
  8329  01AD  0825               	movf	___ftdiv@f1+2,w
  8330  01AE  00A8               	movwf	??___ftdiv+2
  8331  01AF  1003               	clrc
  8332  01B0  0D27               	rlf	??___ftdiv+1,w
  8333  01B1  0D28               	rlf	??___ftdiv+2,w
  8334  01B2  00A9               	movwf	??___ftdiv+3
  8335  01B3  0829               	movf	??___ftdiv+3,w
  8336  01B4  00AE               	movwf	___ftdiv@exp
  8337  01B5  082E               	movf	___ftdiv@exp,w
  8338  01B6  1D03               	btfss	3,2
  8339  01B7  29BF               	goto	l2046
  8340  01B8  3000               	movlw	0
  8341  01B9  00A0               	movwf	?___ftdiv
  8342  01BA  3000               	movlw	0
  8343  01BB  00A1               	movwf	?___ftdiv+1
  8344  01BC  3000               	movlw	0
  8345  01BD  00A2               	movwf	?___ftdiv+2
  8346  01BE  0008               	return
  8347  01BF                     l2046:	
  8348  01BF  0820               	movf	___ftdiv@f2,w
  8349  01C0  00A6               	movwf	??___ftdiv
  8350  01C1  0821               	movf	___ftdiv@f2+1,w
  8351  01C2  00A7               	movwf	??___ftdiv+1
  8352  01C3  0822               	movf	___ftdiv@f2+2,w
  8353  01C4  00A8               	movwf	??___ftdiv+2
  8354  01C5  1003               	clrc
  8355  01C6  0D27               	rlf	??___ftdiv+1,w
  8356  01C7  0D28               	rlf	??___ftdiv+2,w
  8357  01C8  00A9               	movwf	??___ftdiv+3
  8358  01C9  0829               	movf	??___ftdiv+3,w
  8359  01CA  00AF               	movwf	___ftdiv@sign
  8360  01CB  082F               	movf	___ftdiv@sign,w
  8361  01CC  1D03               	btfss	3,2
  8362  01CD  29D5               	goto	l2052
  8363  01CE  3000               	movlw	0
  8364  01CF  00A0               	movwf	?___ftdiv
  8365  01D0  3000               	movlw	0
  8366  01D1  00A1               	movwf	?___ftdiv+1
  8367  01D2  3000               	movlw	0
  8368  01D3  00A2               	movwf	?___ftdiv+2
  8369  01D4  0008               	return
  8370  01D5                     l2052:	
  8371  01D5  3000               	movlw	0
  8372  01D6  00AB               	movwf	___ftdiv@f3
  8373  01D7  3000               	movlw	0
  8374  01D8  00AC               	movwf	___ftdiv@f3+1
  8375  01D9  3000               	movlw	0
  8376  01DA  00AD               	movwf	___ftdiv@f3+2
  8377  01DB  3089               	movlw	137
  8378  01DC  072F               	addwf	___ftdiv@sign,w
  8379  01DD  00A6               	movwf	??___ftdiv
  8380  01DE  0826               	movf	??___ftdiv,w
  8381  01DF  02AE               	subwf	___ftdiv@exp,f
  8382  01E0  0823               	movf	___ftdiv@f1,w
  8383  01E1  00A6               	movwf	??___ftdiv
  8384  01E2  0824               	movf	___ftdiv@f1+1,w
  8385  01E3  00A7               	movwf	??___ftdiv+1
  8386  01E4  0825               	movf	___ftdiv@f1+2,w
  8387  01E5  00A8               	movwf	??___ftdiv+2
  8388  01E6  3010               	movlw	16
  8389  01E7                     u1905:	
  8390  01E7  36A8               	lsrf	??___ftdiv+2,f
  8391  01E8  0CA7               	rrf	??___ftdiv+1,f
  8392  01E9  0CA6               	rrf	??___ftdiv,f
  8393  01EA  0B89               	decfsz	9,f
  8394  01EB  29E7               	goto	u1905
  8395  01EC  0826               	movf	??___ftdiv,w
  8396  01ED  00A9               	movwf	??___ftdiv+3
  8397  01EE  0829               	movf	??___ftdiv+3,w
  8398  01EF  00AF               	movwf	___ftdiv@sign
  8399  01F0  0820               	movf	___ftdiv@f2,w
  8400  01F1  00A6               	movwf	??___ftdiv
  8401  01F2  0821               	movf	___ftdiv@f2+1,w
  8402  01F3  00A7               	movwf	??___ftdiv+1
  8403  01F4  0822               	movf	___ftdiv@f2+2,w
  8404  01F5  00A8               	movwf	??___ftdiv+2
  8405  01F6  3010               	movlw	16
  8406  01F7                     u1915:	
  8407  01F7  36A8               	lsrf	??___ftdiv+2,f
  8408  01F8  0CA7               	rrf	??___ftdiv+1,f
  8409  01F9  0CA6               	rrf	??___ftdiv,f
  8410  01FA  0B89               	decfsz	9,f
  8411  01FB  29F7               	goto	u1915
  8412  01FC  0826               	movf	??___ftdiv,w
  8413  01FD  00A9               	movwf	??___ftdiv+3
  8414  01FE  0829               	movf	??___ftdiv+3,w
  8415  01FF  06AF               	xorwf	___ftdiv@sign,f
  8416  0200  3080               	movlw	128
  8417  0201  00A6               	movwf	??___ftdiv
  8418  0202  0826               	movf	??___ftdiv,w
  8419  0203  05AF               	andwf	___ftdiv@sign,f
  8420  0204  17A4               	bsf	___ftdiv@f1+1,7
  8421  0205  30FF               	movlw	255
  8422  0206  05A3               	andwf	___ftdiv@f1,f
  8423  0207  30FF               	movlw	255
  8424  0208  05A4               	andwf	___ftdiv@f1+1,f
  8425  0209  3000               	movlw	0
  8426  020A  05A5               	andwf	___ftdiv@f1+2,f
  8427  020B  17A1               	bsf	___ftdiv@f2+1,7
  8428  020C  30FF               	movlw	255
  8429  020D  05A0               	andwf	___ftdiv@f2,f
  8430  020E  30FF               	movlw	255
  8431  020F  05A1               	andwf	___ftdiv@f2+1,f
  8432  0210  3000               	movlw	0
  8433  0211  05A2               	andwf	___ftdiv@f2+2,f
  8434  0212  3018               	movlw	24
  8435  0213  00A6               	movwf	??___ftdiv
  8436  0214  0826               	movf	??___ftdiv,w
  8437  0215  00AA               	movwf	___ftdiv@cntr
  8438  0216                     l2066:	
  8439  0216  3001               	movlw	1
  8440  0217                     u1925:	
  8441  0217  35AB               	lslf	___ftdiv@f3,f
  8442  0218  0DAC               	rlf	___ftdiv@f3+1,f
  8443  0219  0DAD               	rlf	___ftdiv@f3+2,f
  8444  021A  0B89               	decfsz	9,f
  8445  021B  2A17               	goto	u1925
  8446  021C  0822               	movf	___ftdiv@f2+2,w
  8447  021D  0225               	subwf	___ftdiv@f1+2,w
  8448  021E  1D03               	skipz
  8449  021F  2A26               	goto	u1935
  8450  0220  0821               	movf	___ftdiv@f2+1,w
  8451  0221  0224               	subwf	___ftdiv@f1+1,w
  8452  0222  1D03               	skipz
  8453  0223  2A26               	goto	u1935
  8454  0224  0820               	movf	___ftdiv@f2,w
  8455  0225  0223               	subwf	___ftdiv@f1,w
  8456  0226                     u1935:	
  8457  0226  1C03               	skipc
  8458  0227  2A2F               	goto	l2074
  8459  0228  0820               	movf	___ftdiv@f2,w
  8460  0229  02A3               	subwf	___ftdiv@f1,f
  8461  022A  0821               	movf	___ftdiv@f2+1,w
  8462  022B  3BA4               	subwfb	___ftdiv@f1+1,f
  8463  022C  0822               	movf	___ftdiv@f2+2,w
  8464  022D  3BA5               	subwfb	___ftdiv@f1+2,f
  8465  022E  142B               	bsf	___ftdiv@f3,0
  8466  022F                     l2074:	
  8467  022F  3001               	movlw	1
  8468  0230                     u1945:	
  8469  0230  35A3               	lslf	___ftdiv@f1,f
  8470  0231  0DA4               	rlf	___ftdiv@f1+1,f
  8471  0232  0DA5               	rlf	___ftdiv@f1+2,f
  8472  0233  0B89               	decfsz	9,f
  8473  0234  2A30               	goto	u1945
  8474  0235  3001               	movlw	1
  8475  0236  02AA               	subwf	___ftdiv@cntr,f
  8476  0237  1D03               	btfss	3,2
  8477  0238  2A16               	goto	l2066
  8478  0239  082B               	movf	___ftdiv@f3,w
  8479  023A  00F0               	movwf	___ftpack@arg
  8480  023B  082C               	movf	___ftdiv@f3+1,w
  8481  023C  00F1               	movwf	___ftpack@arg+1
  8482  023D  082D               	movf	___ftdiv@f3+2,w
  8483  023E  00F2               	movwf	___ftpack@arg+2
  8484  023F  082E               	movf	___ftdiv@exp,w
  8485  0240  00A6               	movwf	??___ftdiv
  8486  0241  0826               	movf	??___ftdiv,w
  8487  0242  00F3               	movwf	___ftpack@exp
  8488  0243  082F               	movf	___ftdiv@sign,w
  8489  0244  00A7               	movwf	??___ftdiv+1
  8490  0245  0827               	movf	??___ftdiv+1,w
  8491  0246  00F4               	movwf	___ftpack@sign
  8492  0247  318F  271B         	fcall	___ftpack
  8493  0249  0870               	movf	?___ftpack,w
  8494  024A  0020               	movlb	0	; select bank0
  8495  024B  00A0               	movwf	?___ftdiv
  8496  024C  0871               	movf	?___ftpack+1,w
  8497  024D  00A1               	movwf	?___ftdiv+1
  8498  024E  0872               	movf	?___ftpack+2,w
  8499  024F  00A2               	movwf	?___ftdiv+2
  8500  0250  0008               	return
  8501  0251                     __end_of___ftdiv:	
  8502                           
  8503                           	psect	text10
  8504  0C55                     __ptext10:	
  8505 ;; *************** function ___awtoft *****************
  8506 ;; Defined at:
  8507 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;  c               2    8[COMMON] int 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  sign            1   13[COMMON] unsigned char 
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  3    8[COMMON] float 
  8514 ;; Registers used:
  8515 ;;		wreg, status,2, status,0, pclath, cstack
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8521 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8524 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8525 ;;Total ram usage:        6 bytes
  8526 ;; Hardware stack levels used:    1
  8527 ;; Hardware stack levels required when called:    1
  8528 ;; This function calls:
  8529 ;;		___ftpack
  8530 ;; This function is called by:
  8531 ;;		_main
  8532 ;;		_calculateCurrent0
  8533 ;;		_calculateCurrent1
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           
  8538                           ;psect for function ___awtoft
  8539  0C55                     ___awtoft:	
  8540                           
  8541                           ;incstack = 0
  8542                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8543  0C55  01FD               	clrf	___awtoft@sign
  8544  0C56  1FF9               	btfss	___awtoft@c+1,7
  8545  0C57  2C5F               	goto	l2036
  8546  0C58  09F8               	comf	___awtoft@c,f
  8547  0C59  09F9               	comf	___awtoft@c+1,f
  8548  0C5A  0AF8               	incf	___awtoft@c,f
  8549  0C5B  1903               	skipnz
  8550  0C5C  0AF9               	incf	___awtoft@c+1,f
  8551  0C5D  01FD               	clrf	___awtoft@sign
  8552  0C5E  0AFD               	incf	___awtoft@sign,f
  8553  0C5F                     l2036:	
  8554  0C5F  0878               	movf	___awtoft@c,w
  8555  0C60  00F0               	movwf	___ftpack@arg
  8556  0C61  0879               	movf	___awtoft@c+1,w
  8557  0C62  00F1               	movwf	___ftpack@arg+1
  8558  0C63  01F2               	clrf	___ftpack@arg+2
  8559  0C64  308E               	movlw	142
  8560  0C65  00FB               	movwf	??___awtoft
  8561  0C66  087B               	movf	??___awtoft,w
  8562  0C67  00F3               	movwf	___ftpack@exp
  8563  0C68  087D               	movf	___awtoft@sign,w
  8564  0C69  00FC               	movwf	??___awtoft+1
  8565  0C6A  087C               	movf	??___awtoft+1,w
  8566  0C6B  00F4               	movwf	___ftpack@sign
  8567  0C6C  318F  271B         	fcall	___ftpack
  8568  0C6E  0870               	movf	?___ftpack,w
  8569  0C6F  00F8               	movwf	?___awtoft
  8570  0C70  0871               	movf	?___ftpack+1,w
  8571  0C71  00F9               	movwf	?___awtoft+1
  8572  0C72  0872               	movf	?___ftpack+2,w
  8573  0C73  00FA               	movwf	?___awtoft+2
  8574  0C74  0008               	return
  8575  0C75                     __end_of___awtoft:	
  8576                           
  8577                           	psect	text11
  8578  0F1B                     __ptext11:	
  8579 ;; *************** function ___ftpack *****************
  8580 ;; Defined at:
  8581 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  arg             3    0[COMMON] unsigned um
  8584 ;;  exp             1    3[COMMON] unsigned char 
  8585 ;;  sign            1    4[COMMON] unsigned char 
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;		None
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  3    0[COMMON] float 
  8590 ;; Registers used:
  8591 ;;		wreg, status,2, status,0
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8597 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8601 ;;Total ram usage:        8 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; This function calls:
  8604 ;;		Nothing
  8605 ;; This function is called by:
  8606 ;;		___awtoft
  8607 ;;		___ftdiv
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           
  8612                           ;psect for function ___ftpack
  8613  0F1B                     ___ftpack:	
  8614                           
  8615                           ;incstack = 0
  8616                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8617  0F1B  0873               	movf	___ftpack@exp,w
  8618  0F1C  1903               	btfsc	3,2
  8619  0F1D  2F23               	goto	l1760
  8620  0F1E  0872               	movf	___ftpack@arg+2,w
  8621  0F1F  0471               	iorwf	___ftpack@arg+1,w
  8622  0F20  0470               	iorwf	___ftpack@arg,w
  8623  0F21  1D03               	skipz
  8624  0F22  2F34               	goto	l1766
  8625  0F23                     l1760:	
  8626  0F23  3000               	movlw	0
  8627  0F24  00F0               	movwf	?___ftpack
  8628  0F25  3000               	movlw	0
  8629  0F26  00F1               	movwf	?___ftpack+1
  8630  0F27  3000               	movlw	0
  8631  0F28  00F2               	movwf	?___ftpack+2
  8632  0F29  0008               	return
  8633  0F2A                     l1764:	
  8634  0F2A  3001               	movlw	1
  8635  0F2B  00F5               	movwf	??___ftpack
  8636  0F2C  0875               	movf	??___ftpack,w
  8637  0F2D  07F3               	addwf	___ftpack@exp,f
  8638  0F2E  3001               	movlw	1
  8639  0F2F                     u1515:	
  8640  0F2F  36F2               	lsrf	___ftpack@arg+2,f
  8641  0F30  0CF1               	rrf	___ftpack@arg+1,f
  8642  0F31  0CF0               	rrf	___ftpack@arg,f
  8643  0F32  0B89               	decfsz	9,f
  8644  0F33  2F2F               	goto	u1515
  8645  0F34                     l1766:	
  8646  0F34  30FE               	movlw	254
  8647  0F35  0572               	andwf	___ftpack@arg+2,w
  8648  0F36  1903               	btfsc	3,2
  8649  0F37  2F4D               	goto	l679
  8650  0F38  2F2A               	goto	l1764
  8651  0F39                     l1768:	
  8652  0F39  3001               	movlw	1
  8653  0F3A  00F5               	movwf	??___ftpack
  8654  0F3B  0875               	movf	??___ftpack,w
  8655  0F3C  07F3               	addwf	___ftpack@exp,f
  8656  0F3D  3001               	movlw	1
  8657  0F3E  07F0               	addwf	___ftpack@arg,f
  8658  0F3F  3000               	movlw	0
  8659  0F40  1803               	skipnc
  8660  0F41  3001               	movlw	1
  8661  0F42  07F1               	addwf	___ftpack@arg+1,f
  8662  0F43  3000               	movlw	0
  8663  0F44  1803               	skipnc
  8664  0F45  3001               	movlw	1
  8665  0F46  07F2               	addwf	___ftpack@arg+2,f
  8666  0F47  3001               	movlw	1
  8667  0F48                     u1535:	
  8668  0F48  36F2               	lsrf	___ftpack@arg+2,f
  8669  0F49  0CF1               	rrf	___ftpack@arg+1,f
  8670  0F4A  0CF0               	rrf	___ftpack@arg,f
  8671  0F4B  0B89               	decfsz	9,f
  8672  0F4C  2F48               	goto	u1535
  8673  0F4D                     l679:	
  8674  0F4D  30FF               	movlw	255
  8675  0F4E  0572               	andwf	___ftpack@arg+2,w
  8676  0F4F  1903               	btfsc	3,2
  8677  0F50  2F5A               	goto	l1776
  8678  0F51  2F39               	goto	l1768
  8679  0F52                     l1774:	
  8680  0F52  3001               	movlw	1
  8681  0F53  02F3               	subwf	___ftpack@exp,f
  8682  0F54  3001               	movlw	1
  8683  0F55                     u1555:	
  8684  0F55  35F0               	lslf	___ftpack@arg,f
  8685  0F56  0DF1               	rlf	___ftpack@arg+1,f
  8686  0F57  0DF2               	rlf	___ftpack@arg+2,f
  8687  0F58  0B89               	decfsz	9,f
  8688  0F59  2F55               	goto	u1555
  8689  0F5A                     l1776:	
  8690  0F5A  1BF1               	btfsc	___ftpack@arg+1,7
  8691  0F5B  2F60               	goto	l686
  8692  0F5C  3002               	movlw	2
  8693  0F5D  0273               	subwf	___ftpack@exp,w
  8694  0F5E  1803               	skipnc
  8695  0F5F  2F52               	goto	l1774
  8696  0F60                     l686:	
  8697  0F60  1873               	btfsc	___ftpack@exp,0
  8698  0F61  2F68               	goto	l687
  8699  0F62  30FF               	movlw	255
  8700  0F63  05F0               	andwf	___ftpack@arg,f
  8701  0F64  307F               	movlw	127
  8702  0F65  05F1               	andwf	___ftpack@arg+1,f
  8703  0F66  30FF               	movlw	255
  8704  0F67  05F2               	andwf	___ftpack@arg+2,f
  8705  0F68                     l687:	
  8706  0F68  1003               	clrc
  8707  0F69  0CF3               	rrf	___ftpack@exp,f
  8708  0F6A  0873               	movf	___ftpack@exp,w
  8709  0F6B  00F5               	movwf	??___ftpack
  8710  0F6C  01F6               	clrf	??___ftpack+1
  8711  0F6D  01F7               	clrf	??___ftpack+2
  8712  0F6E  3010               	movlw	16
  8713  0F6F                     u1595:	
  8714  0F6F  35F5               	lslf	??___ftpack,f
  8715  0F70  0DF6               	rlf	??___ftpack+1,f
  8716  0F71  0DF7               	rlf	??___ftpack+2,f
  8717  0F72  0B89               	decfsz	9,f
  8718  0F73  2F6F               	goto	u1595
  8719  0F74  0875               	movf	??___ftpack,w
  8720  0F75  04F0               	iorwf	___ftpack@arg,f
  8721  0F76  0876               	movf	??___ftpack+1,w
  8722  0F77  04F1               	iorwf	___ftpack@arg+1,f
  8723  0F78  0877               	movf	??___ftpack+2,w
  8724  0F79  04F2               	iorwf	___ftpack@arg+2,f
  8725  0F7A  0874               	movf	___ftpack@sign,w
  8726  0F7B  1903               	btfsc	3,2
  8727  0F7C  0008               	return
  8728  0F7D  17F2               	bsf	___ftpack@arg+2,7
  8729  0F7E  0008               	return
  8730  0F7F                     __end_of___ftpack:	
  8731                           
  8732                           	psect	text12
  8733  0D16                     __ptext12:	
  8734 ;; *************** function _SYSTEM_Initialize *****************
  8735 ;; Defined at:
  8736 ;;		line 71 in file "system.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;		None
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      void 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2, status,0, pclath, cstack
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;Total ram usage:        2 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:    3
  8757 ;; This function calls:
  8758 ;;		_ADC_Initialize
  8759 ;;		_Init_Battery_State_Machine
  8760 ;;		_LCDClear
  8761 ;;		_LCDInit
  8762 ;;		_OSCILLATOR_Initialize
  8763 ;;		_PIN_MANAGER_Initialize
  8764 ;;		_PWM_Initialize
  8765 ;;		_TMR2_Initialize
  8766 ;; This function is called by:
  8767 ;;		_main
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           
  8772                           ;psect for function _SYSTEM_Initialize
  8773  0D16                     _SYSTEM_Initialize:	
  8774                           
  8775                           ;system.c: 73: PIN_MANAGER_Initialize();
  8776                           
  8777                           ;incstack = 0
  8778                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8779  0D16  318D  2578  318D   	fcall	_PIN_MANAGER_Initialize
  8780                           
  8781                           ;system.c: 74: OSCILLATOR_Initialize();
  8782  0D19  318B  2386  318D   	fcall	_OSCILLATOR_Initialize
  8783                           
  8784                           ;system.c: 76: ADC_Initialize();
  8785  0D1C  318C  2436  318D   	fcall	_ADC_Initialize
  8786                           
  8787                           ;system.c: 77: PWM_Initialize();
  8788  0D1F  318B  23D8  318D   	fcall	_PWM_Initialize
  8789                           
  8790                           ;system.c: 79: TMR2_Initialize();
  8791  0D22  318B  23A7  318D   	fcall	_TMR2_Initialize
  8792                           
  8793                           ;system.c: 80: Init_Battery_State_Machine();
  8794  0D25  318C  24C0  318D   	fcall	_Init_Battery_State_Machine
  8795                           
  8796                           ;system.c: 81: LCDInit();
  8797  0D28  318D  25AD  318D   	fcall	_LCDInit
  8798                           
  8799                           ;system.c: 82: _delay((unsigned long)((200)*(32000000/4000.0)));
  8800  0D2B  3009               	movlw	9
  8801  0D2C  00FC               	movwf	??_SYSTEM_Initialize+1
  8802  0D2D  301E               	movlw	30
  8803  0D2E  00FB               	movwf	??_SYSTEM_Initialize
  8804  0D2F  30E4               	movlw	228
  8805  0D30                     u2827:	
  8806  0D30  0B89               	decfsz	9,f
  8807  0D31  2D30               	goto	u2827
  8808  0D32  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8809  0D33  2D30               	goto	u2827
  8810  0D34  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8811  0D35  2D30               	goto	u2827
  8812  0D36  3200               	nop2
  8813                           
  8814                           ;system.c: 83: LCDClear();
  8815  0D37  318C  249A  318D   	fcall	_LCDClear
  8816                           
  8817                           ;system.c: 84: _delay((unsigned long)((200)*(32000000/4000.0)));
  8818  0D3A  3009               	movlw	9
  8819  0D3B  00FC               	movwf	??_SYSTEM_Initialize+1
  8820  0D3C  301E               	movlw	30
  8821  0D3D  00FB               	movwf	??_SYSTEM_Initialize
  8822  0D3E  30E4               	movlw	228
  8823  0D3F                     u2837:	
  8824  0D3F  0B89               	decfsz	9,f
  8825  0D40  2D3F               	goto	u2837
  8826  0D41  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8827  0D42  2D3F               	goto	u2837
  8828  0D43  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8829  0D44  2D3F               	goto	u2837
  8830  0D45  3200               	nop2
  8831  0D46  0008               	return
  8832  0D47                     __end_of_SYSTEM_Initialize:	
  8833                           
  8834                           	psect	text13
  8835  0BA7                     __ptext13:	
  8836 ;; *************** function _TMR2_Initialize *****************
  8837 ;; Defined at:
  8838 ;;		line 3 in file "tmr2.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;		None
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;		None
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      void 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8856 ;;Total ram usage:        0 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; This function calls:
  8859 ;;		Nothing
  8860 ;; This function is called by:
  8861 ;;		_SYSTEM_Initialize
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           
  8866                           ;psect for function _TMR2_Initialize
  8867  0BA7                     _TMR2_Initialize:	
  8868                           
  8869                           ;tmr2.c: 5: T2CON = 0x00;
  8870                           
  8871                           ;incstack = 0
  8872                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8873  0BA7  0025               	movlb	5	; select bank5
  8874  0BA8  018E               	clrf	14	;volatile
  8875                           
  8876                           ;tmr2.c: 7: T2CLKCON = 0x01;
  8877  0BA9  3001               	movlw	1
  8878  0BAA  0090               	movwf	16	;volatile
  8879                           
  8880                           ;tmr2.c: 9: T2HLT = 0x00;
  8881  0BAB  018F               	clrf	15	;volatile
  8882                           
  8883                           ;tmr2.c: 11: T2RST = 0x00;
  8884  0BAC  0191               	clrf	17	;volatile
  8885                           
  8886                           ;tmr2.c: 13: T2PR = 0x3E;
  8887  0BAD  303E               	movlw	62
  8888  0BAE  008D               	movwf	13	;volatile
  8889                           
  8890                           ;tmr2.c: 17: T2TMR = 0x00;
  8891  0BAF  018C               	clrf	12	;volatile
  8892                           
  8893                           ;tmr2.c: 19: PIR4bits.TMR2IF = 0;
  8894  0BB0  002E               	movlb	14	; select bank14
  8895  0BB1  1090               	bcf	16,1	;volatile
  8896                           
  8897                           ;tmr2.c: 21: T2CONbits.TMR2ON = 1;
  8898  0BB2  0025               	movlb	5	; select bank5
  8899  0BB3  178E               	bsf	14,7	;volatile
  8900  0BB4  0008               	return
  8901  0BB5                     __end_of_TMR2_Initialize:	
  8902                           
  8903                           	psect	text14
  8904  0BD8                     __ptext14:	
  8905 ;; *************** function _PWM_Initialize *****************
  8906 ;; Defined at:
  8907 ;;		line 3 in file "pwm.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;		None
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;		None
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg, status,2, status,0
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;Total ram usage:        0 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; This function calls:
  8928 ;;		Nothing
  8929 ;; This function is called by:
  8930 ;;		_SYSTEM_Initialize
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           
  8935                           ;psect for function _PWM_Initialize
  8936  0BD8                     _PWM_Initialize:	
  8937                           
  8938                           ;pwm.c: 5: PWM6CON = 0x80;
  8939                           
  8940                           ;incstack = 0
  8941                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
  8942  0BD8  3080               	movlw	128
  8943  0BD9  0027               	movlb	7	; select bank7
  8944  0BDA  008E               	movwf	14	;volatile
  8945                           
  8946                           ;pwm.c: 7: PWM6DCH = 0x00;
  8947  0BDB  018D               	clrf	13	;volatile
  8948                           
  8949                           ;pwm.c: 9: PWM6DCL = 0x00;
  8950  0BDC  018C               	clrf	12	;volatile
  8951                           
  8952                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  8953  0BDD  0024               	movlb	4	; select bank4
  8954  0BDE  081F               	movf	31,w	;volatile
  8955  0BDF  39F3               	andlw	-13
  8956  0BE0  3804               	iorlw	4
  8957  0BE1  009F               	movwf	31	;volatile
  8958                           
  8959                           ;pwm.c: 14: PWM7CON = 0x80;
  8960  0BE2  3080               	movlw	128
  8961  0BE3  0027               	movlb	7	; select bank7
  8962  0BE4  0092               	movwf	18	;volatile
  8963                           
  8964                           ;pwm.c: 16: PWM7DCH = 0x00;
  8965  0BE5  0191               	clrf	17	;volatile
  8966                           
  8967                           ;pwm.c: 18: PWM7DCL = 0x00;
  8968  0BE6  0190               	clrf	16	;volatile
  8969                           
  8970                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x1;
  8971  0BE7  0024               	movlb	4	; select bank4
  8972  0BE8  081F               	movf	31,w	;volatile
  8973  0BE9  39CF               	andlw	-49
  8974  0BEA  3810               	iorlw	16
  8975  0BEB  009F               	movwf	31	;volatile
  8976  0BEC  0008               	return
  8977  0BED                     __end_of_PWM_Initialize:	
  8978                           
  8979                           	psect	text15
  8980  0D78                     __ptext15:	
  8981 ;; *************** function _PIN_MANAGER_Initialize *****************
  8982 ;; Defined at:
  8983 ;;		line 5 in file "pin_manager.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;		None
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;  state           1    0[COMMON] char 
  8988 ;; Return value:  Size  Location     Type
  8989 ;;                  1    wreg      void 
  8990 ;; Registers used:
  8991 ;;		wreg, status,2
  8992 ;; Tracked objects:
  8993 ;;		On entry : 0/0
  8994 ;;		On exit  : 0/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9001 ;;Total ram usage:        1 bytes
  9002 ;; Hardware stack levels used:    1
  9003 ;; This function calls:
  9004 ;;		Nothing
  9005 ;; This function is called by:
  9006 ;;		_SYSTEM_Initialize
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           
  9011                           ;psect for function _PIN_MANAGER_Initialize
  9012  0D78                     _PIN_MANAGER_Initialize:	
  9013                           
  9014                           ;pin_manager.c: 7: LATA = 0x20;
  9015                           
  9016                           ;incstack = 0
  9017                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9018  0D78  3020               	movlw	32
  9019  0D79  0020               	movlb	0	; select bank0
  9020  0D7A  0096               	movwf	22	;volatile
  9021                           
  9022                           ;pin_manager.c: 8: LATB = 0x00;
  9023  0D7B  0197               	clrf	23	;volatile
  9024                           
  9025                           ;pin_manager.c: 9: LATC = 0x00;
  9026  0D7C  0198               	clrf	24	;volatile
  9027                           
  9028                           ;pin_manager.c: 11: WPUA = 0x00;
  9029  0D7D  003E               	movlb	30	; select bank30
  9030  0D7E  01B9               	clrf	57	;volatile
  9031                           
  9032                           ;pin_manager.c: 12: WPUB = 0x00;
  9033  0D7F  01C4               	clrf	68	;volatile
  9034                           
  9035                           ;pin_manager.c: 13: WPUC = 0x00;
  9036  0D80  01CF               	clrf	79	;volatile
  9037                           
  9038                           ;pin_manager.c: 14: WPUE = 0x8;
  9039  0D81  3008               	movlw	8
  9040  0D82  00E5               	movwf	101	;volatile
  9041                           
  9042                           ;pin_manager.c: 16: TRISA = 0x00;
  9043  0D83  0020               	movlb	0	; select bank0
  9044  0D84  0191               	clrf	17	;volatile
  9045                           
  9046                           ;pin_manager.c: 17: TRISB = 0x0F;
  9047  0D85  300F               	movlw	15
  9048  0D86  0092               	movwf	18	;volatile
  9049                           
  9050                           ;pin_manager.c: 18: TRISC = 0xFF;
  9051  0D87  30FF               	movlw	255
  9052  0D88  0093               	movwf	19	;volatile
  9053                           
  9054                           ;pin_manager.c: 20: ANSELA = 0x00;
  9055  0D89  003E               	movlb	30	; select bank30
  9056  0D8A  01B8               	clrf	56	;volatile
  9057                           
  9058                           ;pin_manager.c: 21: ANSELB = 0x0B;
  9059  0D8B  300B               	movlw	11
  9060  0D8C  00C3               	movwf	67	;volatile
  9061                           
  9062                           ;pin_manager.c: 22: ANSELC = 0xFF;
  9063  0D8D  30FF               	movlw	255
  9064  0D8E  00CE               	movwf	78	;volatile
  9065                           
  9066                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
  9067  0D8F  002E               	movlb	14	; select bank14
  9068  0D90  1216               	bcf	22,4	;volatile
  9069                           
  9070                           ;pin_manager.c: 26: int8_t state = GIE;
  9071  0D91  3000               	movlw	0
  9072  0D92  1B8B               	btfsc	11,7	;volatile
  9073  0D93  3001               	movlw	1
  9074  0D94  00F0               	movwf	PIN_MANAGER_Initialize@state
  9075                           
  9076                           ;pin_manager.c: 27: GIE = 0;
  9077  0D95  138B               	bcf	11,7	;volatile
  9078                           
  9079                           ;pin_manager.c: 28: PPSLOCK = 0x55;
  9080  0D96  3055               	movlw	85
  9081  0D97  003D               	movlb	29	; select bank29
  9082  0D98  008F               	movwf	15	;volsfr
  9083                           
  9084                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
  9085  0D99  30AA               	movlw	170
  9086  0D9A  008F               	movwf	15	;volsfr
  9087                           
  9088                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
  9089  0D9B  100F               	bcf	15,0	;volsfr
  9090                           
  9091                           ;pin_manager.c: 32: RA6PPS = 0x000E;
  9092  0D9C  300E               	movlw	14
  9093  0D9D  003E               	movlb	30	; select bank30
  9094  0D9E  0096               	movwf	22	;volatile
  9095                           
  9096                           ;pin_manager.c: 33: RA7PPS = 0x000F;
  9097  0D9F  300F               	movlw	15
  9098  0DA0  0097               	movwf	23	;volatile
  9099                           
  9100                           ;pin_manager.c: 35: PPSLOCK = 0x55;
  9101  0DA1  3055               	movlw	85
  9102  0DA2  003D               	movlb	29	; select bank29
  9103  0DA3  008F               	movwf	15	;volsfr
  9104                           
  9105                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
  9106  0DA4  30AA               	movlw	170
  9107  0DA5  008F               	movwf	15	;volsfr
  9108                           
  9109                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
  9110  0DA6  140F               	bsf	15,0	;volsfr
  9111                           
  9112                           ;pin_manager.c: 38: GIE = state;
  9113  0DA7  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9114  0DA8  2DAB               	goto	u1650
  9115  0DA9  178B               	bsf	11,7	;volatile
  9116  0DAA  0008               	return
  9117  0DAB                     u1650:	
  9118  0DAB  138B               	bcf	11,7	;volatile
  9119  0DAC  0008               	return
  9120  0DAD                     __end_of_PIN_MANAGER_Initialize:	
  9121                           
  9122                           	psect	text16
  9123  0B86                     __ptext16:	
  9124 ;; *************** function _OSCILLATOR_Initialize *****************
  9125 ;; Defined at:
  9126 ;;		line 87 in file "system.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;		None
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		wreg, status,2
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;Total ram usage:        0 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; This function calls:
  9147 ;;		Nothing
  9148 ;; This function is called by:
  9149 ;;		_SYSTEM_Initialize
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153                           
  9154                           ;psect for function _OSCILLATOR_Initialize
  9155  0B86                     _OSCILLATOR_Initialize:	
  9156                           
  9157                           ;system.c: 89: OSCCON1 = 0x60;
  9158                           
  9159                           ;incstack = 0
  9160                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9161  0B86  3060               	movlw	96
  9162  0B87  0031               	movlb	17	; select bank17
  9163  0B88  008D               	movwf	13	;volatile
  9164                           
  9165                           ;system.c: 90: OSCCON3 = 0x00;
  9166  0B89  018F               	clrf	15	;volatile
  9167                           
  9168                           ;system.c: 91: OSCEN = 0x00;
  9169  0B8A  0191               	clrf	17	;volatile
  9170                           
  9171                           ;system.c: 92: OSCFRQ = 0x06;
  9172  0B8B  3006               	movlw	6
  9173  0B8C  0093               	movwf	19	;volatile
  9174                           
  9175                           ;system.c: 93: OSCTUNE = 0x00;
  9176  0B8D  0192               	clrf	18	;volatile
  9177  0B8E  0008               	return
  9178  0B8F                     __end_of_OSCILLATOR_Initialize:	
  9179                           
  9180                           	psect	text17
  9181  0DAD                     __ptext17:	
  9182 ;; *************** function _LCDInit *****************
  9183 ;; Defined at:
  9184 ;;		line 247 in file "lcd.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;		None
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;		None
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  1    wreg      void 
  9191 ;; Registers used:
  9192 ;;		wreg, status,2, status,0, pclath, cstack
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9202 ;;Total ram usage:        1 bytes
  9203 ;; Hardware stack levels used:    1
  9204 ;; Hardware stack levels required when called:    1
  9205 ;; This function calls:
  9206 ;;		_LCDWrite
  9207 ;; This function is called by:
  9208 ;;		_SYSTEM_Initialize
  9209 ;;		_main
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           
  9214                           ;psect for function _LCDInit
  9215  0DAD                     _LCDInit:	
  9216                           
  9217                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
  9218                           
  9219                           ;incstack = 0
  9220                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  9221  0DAD  0020               	movlb	0	; select bank0
  9222  0DAE  1011               	bcf	17,0	;volatile
  9223                           
  9224                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
  9225  0DAF  1091               	bcf	17,1	;volatile
  9226                           
  9227                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
  9228  0DB0  1111               	bcf	17,2	;volatile
  9229                           
  9230                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
  9231  0DB1  1191               	bcf	17,3	;volatile
  9232                           
  9233                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
  9234  0DB2  1211               	bcf	17,4	;volatile
  9235                           
  9236                           ;lcd.c: 254: LATAbits.LATA3 = 0;
  9237  0DB3  1196               	bcf	22,3	;volatile
  9238                           
  9239                           ;lcd.c: 255: LATAbits.LATA4 = 0;
  9240  0DB4  1216               	bcf	22,4	;volatile
  9241                           
  9242                           ;lcd.c: 256: LATAbits.LATA2 = 0;
  9243  0DB5  1116               	bcf	22,2	;volatile
  9244                           
  9245                           ;lcd.c: 257: LATAbits.LATA0 = 0;
  9246  0DB6  1016               	bcf	22,0	;volatile
  9247                           
  9248                           ;lcd.c: 259: LATAbits.LATA0 = 1;
  9249  0DB7  1416               	bsf	22,0	;volatile
  9250                           
  9251                           ;lcd.c: 261: LCDWrite(0, 0x21);
  9252  0DB8  3021               	movlw	33
  9253  0DB9  00F5               	movwf	??_LCDInit
  9254  0DBA  0875               	movf	??_LCDInit,w
  9255  0DBB  00F0               	movwf	LCDWrite@data
  9256  0DBC  3000               	movlw	0
  9257  0DBD  318C  2475  318D   	fcall	_LCDWrite
  9258                           
  9259                           ;lcd.c: 268: LCDWrite(0, 0XB7);
  9260  0DC0  30B7               	movlw	183
  9261  0DC1  00F5               	movwf	??_LCDInit
  9262  0DC2  0875               	movf	??_LCDInit,w
  9263  0DC3  00F0               	movwf	LCDWrite@data
  9264  0DC4  3000               	movlw	0
  9265  0DC5  318C  2475  318D   	fcall	_LCDWrite
  9266                           
  9267                           ;lcd.c: 270: LCDWrite(0, 0x04);
  9268  0DC8  3004               	movlw	4
  9269  0DC9  00F5               	movwf	??_LCDInit
  9270  0DCA  0875               	movf	??_LCDInit,w
  9271  0DCB  00F0               	movwf	LCDWrite@data
  9272  0DCC  3000               	movlw	0
  9273  0DCD  318C  2475  318D   	fcall	_LCDWrite
  9274                           
  9275                           ;lcd.c: 272: LCDWrite(0, 0x14);
  9276  0DD0  3014               	movlw	20
  9277  0DD1  00F5               	movwf	??_LCDInit
  9278  0DD2  0875               	movf	??_LCDInit,w
  9279  0DD3  00F0               	movwf	LCDWrite@data
  9280  0DD4  3000               	movlw	0
  9281  0DD5  318C  2475  318D   	fcall	_LCDWrite
  9282                           
  9283                           ;lcd.c: 274: LCDWrite(0, 0x20);
  9284  0DD8  3020               	movlw	32
  9285  0DD9  00F5               	movwf	??_LCDInit
  9286  0DDA  0875               	movf	??_LCDInit,w
  9287  0DDB  00F0               	movwf	LCDWrite@data
  9288  0DDC  3000               	movlw	0
  9289  0DDD  318C  2475  318D   	fcall	_LCDWrite
  9290                           
  9291                           ;lcd.c: 276: LCDWrite(0, 0x0C);
  9292  0DE0  300C               	movlw	12
  9293  0DE1  00F5               	movwf	??_LCDInit
  9294  0DE2  0875               	movf	??_LCDInit,w
  9295  0DE3  00F0               	movwf	LCDWrite@data
  9296  0DE4  3000               	movlw	0
  9297  0DE5  318C  2475         	fcall	_LCDWrite
  9298  0DE7  0008               	return
  9299  0DE8                     __end_of_LCDInit:	
  9300                           
  9301                           	psect	text18
  9302  0C9A                     __ptext18:	
  9303 ;; *************** function _LCDClear *****************
  9304 ;; Defined at:
  9305 ;;		line 182 in file "lcd.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;		None
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;  index           2    9[COMMON] int 
  9310 ;; Return value:  Size  Location     Type
  9311 ;;                  1    wreg      void 
  9312 ;; Registers used:
  9313 ;;		wreg, status,2, status,0, pclath, cstack
  9314 ;; Tracked objects:
  9315 ;;		On entry : 0/0
  9316 ;;		On exit  : 0/0
  9317 ;;		Unchanged: 0/0
  9318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9322 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9323 ;;Total ram usage:        3 bytes
  9324 ;; Hardware stack levels used:    1
  9325 ;; Hardware stack levels required when called:    2
  9326 ;; This function calls:
  9327 ;;		_LCDWrite
  9328 ;;		_gotoXY
  9329 ;; This function is called by:
  9330 ;;		_SYSTEM_Initialize
  9331 ;;		_main
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           
  9336                           ;psect for function _LCDClear
  9337  0C9A                     _LCDClear:	
  9338                           
  9339                           ;lcd.c: 184: int index;
  9340                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
  9341                           
  9342                           ;incstack = 0
  9343                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  9344  0C9A  01F9               	clrf	LCDClear@index
  9345  0C9B  01FA               	clrf	LCDClear@index+1
  9346  0C9C  087A               	movf	LCDClear@index+1,w
  9347  0C9D  3A80               	xorlw	128
  9348  0C9E  00F8               	movwf	??_LCDClear
  9349  0C9F  3081               	movlw	129
  9350  0CA0  0278               	subwf	??_LCDClear,w
  9351  0CA1  1D03               	skipz
  9352  0CA2  2CA5               	goto	u1635
  9353  0CA3  30F8               	movlw	248
  9354  0CA4  0279               	subwf	LCDClear@index,w
  9355  0CA5                     u1635:	
  9356  0CA5  1803               	btfsc	3,0
  9357  0CA6  2CBB               	goto	l1868
  9358  0CA7                     l1862:	
  9359                           
  9360                           ;lcd.c: 186: LCDWrite(1, 0x00);
  9361  0CA7  01F0               	clrf	LCDWrite@data
  9362  0CA8  3001               	movlw	1
  9363  0CA9  318C  2475  318C   	fcall	_LCDWrite
  9364  0CAC  3001               	movlw	1
  9365  0CAD  07F9               	addwf	LCDClear@index,f
  9366  0CAE  3000               	movlw	0
  9367  0CAF  3DFA               	addwfc	LCDClear@index+1,f
  9368  0CB0  087A               	movf	LCDClear@index+1,w
  9369  0CB1  3A80               	xorlw	128
  9370  0CB2  00F8               	movwf	??_LCDClear
  9371  0CB3  3081               	movlw	129
  9372  0CB4  0278               	subwf	??_LCDClear,w
  9373  0CB5  1D03               	skipz
  9374  0CB6  2CB9               	goto	u1645
  9375  0CB7  30F8               	movlw	248
  9376  0CB8  0279               	subwf	LCDClear@index,w
  9377  0CB9                     u1645:	
  9378  0CB9  1C03               	skipc
  9379  0CBA  2CA7               	goto	l1862
  9380  0CBB                     l1868:	
  9381                           
  9382                           ;lcd.c: 187: gotoXY(0, 0);
  9383  0CBB  01F5               	clrf	gotoXY@y
  9384  0CBC  3000               	movlw	0
  9385  0CBD  318B  23C5         	fcall	_gotoXY
  9386  0CBF  0008               	return
  9387  0CC0                     __end_of_LCDClear:	
  9388                           
  9389                           	psect	text19
  9390  0BC5                     __ptext19:	
  9391 ;; *************** function _gotoXY *****************
  9392 ;; Defined at:
  9393 ;;		line 124 in file "lcd.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;  x               1    wreg     unsigned char 
  9396 ;;  y               1    5[COMMON] unsigned char 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  x               1    7[COMMON] unsigned char 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  1    wreg      void 
  9401 ;; Registers used:
  9402 ;;		wreg, status,2, status,0, pclath, cstack
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9408 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9411 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9412 ;;Total ram usage:        3 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; Hardware stack levels required when called:    1
  9415 ;; This function calls:
  9416 ;;		_LCDWrite
  9417 ;; This function is called by:
  9418 ;;		_LCDClear
  9419 ;;		_main
  9420 ;;		_LCDBitmap
  9421 ;; This function uses a non-reentrant model
  9422 ;;
  9423                           
  9424                           
  9425                           ;psect for function _gotoXY
  9426  0BC5                     _gotoXY:	
  9427                           
  9428                           ;incstack = 0
  9429                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
  9430                           ;gotoXY@x stored from wreg
  9431  0BC5  00F7               	movwf	gotoXY@x
  9432                           
  9433                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
  9434  0BC6  0877               	movf	gotoXY@x,w
  9435  0BC7  3880               	iorlw	128
  9436  0BC8  00F6               	movwf	??_gotoXY
  9437  0BC9  0876               	movf	??_gotoXY,w
  9438  0BCA  00F0               	movwf	LCDWrite@data
  9439  0BCB  3000               	movlw	0
  9440  0BCC  318C  2475  318B   	fcall	_LCDWrite
  9441                           
  9442                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
  9443  0BCF  0875               	movf	gotoXY@y,w
  9444  0BD0  3840               	iorlw	64
  9445  0BD1  00F6               	movwf	??_gotoXY
  9446  0BD2  0876               	movf	??_gotoXY,w
  9447  0BD3  00F0               	movwf	LCDWrite@data
  9448  0BD4  3000               	movlw	0
  9449  0BD5  318C  2475         	fcall	_LCDWrite
  9450  0BD7  0008               	return
  9451  0BD8                     __end_of_gotoXY:	
  9452                           
  9453                           	psect	text20
  9454  0CC0                     __ptext20:	
  9455 ;; *************** function _Init_Battery_State_Machine *****************
  9456 ;; Defined at:
  9457 ;;		line 23 in file "battery_charger.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;		None
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;		None
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  1    wreg      void 
  9464 ;; Registers used:
  9465 ;;		wreg
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9475 ;;Total ram usage:        1 bytes
  9476 ;; Hardware stack levels used:    1
  9477 ;; This function calls:
  9478 ;;		Nothing
  9479 ;; This function is called by:
  9480 ;;		_SYSTEM_Initialize
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484                           
  9485                           ;psect for function _Init_Battery_State_Machine
  9486  0CC0                     _Init_Battery_State_Machine:	
  9487                           
  9488                           ;battery_charger.c: 25: battery_state = PRECHARGE;
  9489                           
  9490                           ;incstack = 0
  9491                           ; Regs used in _Init_Battery_State_Machine: [wreg]
  9492  0CC0  3003               	movlw	3
  9493  0CC1  00F0               	movwf	??_Init_Battery_State_Machine
  9494  0CC2  0870               	movf	??_Init_Battery_State_Machine,w
  9495  0CC3  0020               	movlb	0	; select bank0
  9496  0CC4  00EE               	movwf	_battery_state
  9497                           
  9498                           ;battery_charger.c: 26: state_counter = 600;
  9499  0CC5  3058               	movlw	88
  9500  0CC6  0021               	movlb	1	; select bank1
  9501  0CC7  00E3               	movwf	_state_counter^(0+128)
  9502  0CC8  3002               	movlw	2
  9503  0CC9  00E4               	movwf	(_state_counter^(0+128)+1)
  9504                           
  9505                           ;battery_charger.c: 28: { Iref = 10; };
  9506  0CCA  300A               	movlw	10
  9507  0CCB  00DF               	movwf	_Iref^(0+128)
  9508  0CCC  3000               	movlw	0
  9509  0CCD  00E0               	movwf	(_Iref^(0+128)+1)
  9510                           
  9511                           ;battery_charger.c: 29: { Vref = 1440; };
  9512  0CCE  30A0               	movlw	160
  9513  0CCF  0020               	movlb	0	; select bank0
  9514  0CD0  00EB               	movwf	_Vref
  9515  0CD1  3005               	movlw	5
  9516  0CD2  00EC               	movwf	_Vref+1
  9517                           
  9518                           ;battery_charger.c: 31: Imin = 100;
  9519  0CD3  3064               	movlw	100
  9520  0CD4  0021               	movlb	1	; select bank1
  9521  0CD5  00E1               	movwf	_Imin^(0+128)
  9522  0CD6  3000               	movlw	0
  9523  0CD7  00E2               	movwf	(_Imin^(0+128)+1)
  9524                           
  9525                           ;battery_charger.c: 32: IminCount = 5;
  9526  0CD8  3005               	movlw	5
  9527  0CD9  00F0               	movwf	??_Init_Battery_State_Machine
  9528  0CDA  0870               	movf	??_Init_Battery_State_Machine,w
  9529  0CDB  0020               	movlb	0	; select bank0
  9530  0CDC  00ED               	movwf	_IminCount
  9531                           
  9532                           ;battery_charger.c: 33: Iflat_db = 600;
  9533  0CDD  3058               	movlw	88
  9534  0CDE  0021               	movlb	1	; select bank1
  9535  0CDF  00E5               	movwf	_Iflat_db^(0+128)
  9536  0CE0  3002               	movlw	2
  9537  0CE1  00E6               	movwf	(_Iflat_db^(0+128)+1)
  9538                           
  9539                           ;battery_charger.c: 35: { warmup = 64; TRISA6 = 0; TRISA7 = 0; };
  9540  0CE2  3040               	movlw	64
  9541  0CE3  00DD               	movwf	_warmup^(0+128)
  9542  0CE4  3000               	movlw	0
  9543  0CE5  00DE               	movwf	(_warmup^(0+128)+1)
  9544  0CE6  0020               	movlb	0	; select bank0
  9545  0CE7  1311               	bcf	17,6	;volatile
  9546  0CE8  1391               	bcf	17,7	;volatile
  9547  0CE9  0008               	return
  9548  0CEA                     __end_of_Init_Battery_State_Machine:	
  9549                           
  9550                           	psect	text21
  9551  0C36                     __ptext21:	
  9552 ;; *************** function _ADC_Initialize *****************
  9553 ;; Defined at:
  9554 ;;		line 83 in file "adc.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;Total ram usage:        0 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		_SYSTEM_Initialize
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           
  9582                           ;psect for function _ADC_Initialize
  9583  0C36                     _ADC_Initialize:	
  9584                           
  9585                           ;adc.c: 85: ADCON1 = 0x00;
  9586                           
  9587                           ;incstack = 0
  9588                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9589  0C36  0021               	movlb	1	; select bank1
  9590  0C37  0194               	clrf	20	;volatile
  9591                           
  9592                           ;adc.c: 87: ADCON2 = 0x00;
  9593  0C38  0195               	clrf	21	;volatile
  9594                           
  9595                           ;adc.c: 89: ADCON3 = 0x00;
  9596  0C39  0196               	clrf	22	;volatile
  9597                           
  9598                           ;adc.c: 91: ADACT = 0x00;
  9599  0C3A  0199               	clrf	25	;volatile
  9600                           
  9601                           ;adc.c: 93: ADSTAT = 0x00;
  9602  0C3B  0197               	clrf	23	;volatile
  9603                           
  9604                           ;adc.c: 95: FVRCON = 0b11000011;
  9605  0C3C  30C3               	movlw	195
  9606  0C3D  0032               	movlb	18	; select bank18
  9607  0C3E  008C               	movwf	12	;volatile
  9608                           
  9609                           ;adc.c: 96: ADCLK = 0x3F;
  9610  0C3F  303F               	movlw	63
  9611  0C40  0021               	movlb	1	; select bank1
  9612  0C41  0098               	movwf	24	;volatile
  9613                           
  9614                           ;adc.c: 103: ADREF = 0x03;
  9615  0C42  3003               	movlw	3
  9616  0C43  009A               	movwf	26	;volatile
  9617                           
  9618                           ;adc.c: 106: ADCAP = 0x00;
  9619  0C44  019B               	clrf	27	;volatile
  9620                           
  9621                           ;adc.c: 109: ADPRE = 0x07;
  9622  0C45  3007               	movlw	7
  9623  0C46  009C               	movwf	28	;volatile
  9624                           
  9625                           ;adc.c: 111: ADACQ = 0x00;
  9626  0C47  019D               	clrf	29	;volatile
  9627                           
  9628                           ;adc.c: 113: ADPCH = 0x00;
  9629  0C48  019E               	clrf	30	;volatile
  9630                           
  9631                           ;adc.c: 115: ADRPT = 0x00;
  9632  0C49  0022               	movlb	2	; select bank2
  9633  0C4A  018D               	clrf	13	;volatile
  9634                           
  9635                           ;adc.c: 117: ADLTHL = 0x00;
  9636  0C4B  018E               	clrf	14	;volatile
  9637                           
  9638                           ;adc.c: 119: ADLTHH = 0x00;
  9639  0C4C  018F               	clrf	15	;volatile
  9640                           
  9641                           ;adc.c: 121: ADUTHL = 0x00;
  9642  0C4D  0190               	clrf	16	;volatile
  9643                           
  9644                           ;adc.c: 123: ADUTHH = 0x00;
  9645  0C4E  0191               	clrf	17	;volatile
  9646                           
  9647                           ;adc.c: 125: ADSTPTL = 0x00;
  9648  0C4F  0192               	clrf	18	;volatile
  9649                           
  9650                           ;adc.c: 127: ADSTPTH = 0x00;
  9651  0C50  0193               	clrf	19	;volatile
  9652                           
  9653                           ;adc.c: 129: ADCON0 = 0x84;
  9654  0C51  3084               	movlw	132
  9655  0C52  0021               	movlb	1	; select bank1
  9656  0C53  0093               	movwf	19	;volatile
  9657  0C54  0008               	return
  9658  0C55                     __end_of_ADC_Initialize:	
  9659                           
  9660                           	psect	text22
  9661  0007                     __ptext22:	
  9662 ;; *************** function _PWM7_LoadDutyValue *****************
  9663 ;; Defined at:
  9664 ;;		line 32 in file "pwm.c"
  9665 ;; Parameters:    Size  Location     Type
  9666 ;;  dutyCycle7      2    0[COMMON] unsigned int 
  9667 ;; Auto vars:     Size  Location     Type
  9668 ;;		None
  9669 ;; Return value:  Size  Location     Type
  9670 ;;                  1    wreg      void 
  9671 ;; Registers used:
  9672 ;;		wreg, status,2, status,0
  9673 ;; Tracked objects:
  9674 ;;		On entry : 0/0
  9675 ;;		On exit  : 0/0
  9676 ;;		Unchanged: 0/0
  9677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9681 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9682 ;;Total ram usage:        4 bytes
  9683 ;; Hardware stack levels used:    1
  9684 ;; This function calls:
  9685 ;;		Nothing
  9686 ;; This function is called by:
  9687 ;;		_main
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691                           
  9692                           ;psect for function _PWM7_LoadDutyValue
  9693  0007                     _PWM7_LoadDutyValue:	
  9694                           
  9695                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
  9696                           
  9697                           ;incstack = 0
  9698                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
  9699  0007  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
  9700  0008  00F3               	movwf	??_PWM7_LoadDutyValue+1
  9701  0009  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9702  000A  00F2               	movwf	??_PWM7_LoadDutyValue
  9703  000B  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9704  000C  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9705  000D  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9706  000E  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9707  000F  0872               	movf	??_PWM7_LoadDutyValue,w
  9708  0010  0027               	movlb	7	; select bank7
  9709  0011  0091               	movwf	17	;volatile
  9710                           
  9711                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
  9712  0012  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9713  0013  3903               	andlw	3
  9714  0014  00F2               	movwf	??_PWM7_LoadDutyValue
  9715  0015  3005               	movlw	5
  9716  0016                     u2445:	
  9717  0016  35F2               	lslf	??_PWM7_LoadDutyValue,f
  9718  0017  3EFF               	addlw	-1
  9719  0018  1D03               	skipz
  9720  0019  2816               	goto	u2445
  9721  001A  3572               	lslf	??_PWM7_LoadDutyValue,w
  9722  001B  0090               	movwf	16	;volatile
  9723  001C  0008               	return
  9724  001D                     __end_of_PWM7_LoadDutyValue:	
  9725                           
  9726                           	psect	text23
  9727  0C02                     __ptext23:	
  9728 ;; *************** function _PWM6_LoadDutyValue *****************
  9729 ;; Defined at:
  9730 ;;		line 25 in file "pwm.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  dutyCycle6      2    0[COMMON] unsigned int 
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;		None
  9735 ;; Return value:  Size  Location     Type
  9736 ;;                  1    wreg      void 
  9737 ;; Registers used:
  9738 ;;		wreg, status,2, status,0
  9739 ;; Tracked objects:
  9740 ;;		On entry : 0/0
  9741 ;;		On exit  : 0/0
  9742 ;;		Unchanged: 0/0
  9743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9747 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9748 ;;Total ram usage:        4 bytes
  9749 ;; Hardware stack levels used:    1
  9750 ;; This function calls:
  9751 ;;		Nothing
  9752 ;; This function is called by:
  9753 ;;		_main
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           
  9758                           ;psect for function _PWM6_LoadDutyValue
  9759  0C02                     _PWM6_LoadDutyValue:	
  9760                           
  9761                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
  9762                           
  9763                           ;incstack = 0
  9764                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9765  0C02  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
  9766  0C03  00F3               	movwf	??_PWM6_LoadDutyValue+1
  9767  0C04  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9768  0C05  00F2               	movwf	??_PWM6_LoadDutyValue
  9769  0C06  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9770  0C07  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9771  0C08  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9772  0C09  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9773  0C0A  0872               	movf	??_PWM6_LoadDutyValue,w
  9774  0C0B  0027               	movlb	7	; select bank7
  9775  0C0C  008D               	movwf	13	;volatile
  9776                           
  9777                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
  9778  0C0D  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9779  0C0E  3903               	andlw	3
  9780  0C0F  00F2               	movwf	??_PWM6_LoadDutyValue
  9781  0C10  3005               	movlw	5
  9782  0C11                     u2435:	
  9783  0C11  35F2               	lslf	??_PWM6_LoadDutyValue,f
  9784  0C12  3EFF               	addlw	-1
  9785  0C13  1D03               	skipz
  9786  0C14  2C11               	goto	u2435
  9787  0C15  3572               	lslf	??_PWM6_LoadDutyValue,w
  9788  0C16  008C               	movwf	12	;volatile
  9789  0C17  0008               	return
  9790  0C18                     __end_of_PWM6_LoadDutyValue:	
  9791                           
  9792                           	psect	text24
  9793  0251                     __ptext24:	
  9794 ;; *************** function _LCDWriteInt *****************
  9795 ;; Defined at:
  9796 ;;		line 190 in file "lcd.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;  value           2    8[BANK0 ] int 
  9799 ;;  fieldLength     1   10[BANK0 ] char 
  9800 ;;  numPlaces       1   11[BANK0 ] unsigned char 
  9801 ;;  sign            1   12[BANK0 ] unsigned char 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;  str             5   17[BANK0 ] unsigned char [5]
  9804 ;;  i               1   23[BANK0 ] unsigned char 
  9805 ;;  j               1   22[BANK0 ] unsigned char 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1    wreg      void 
  9808 ;; Registers used:
  9809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9815 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;Total ram usage:       16 bytes
  9820 ;; Hardware stack levels used:    1
  9821 ;; Hardware stack levels required when called:    2
  9822 ;; This function calls:
  9823 ;;		_LCDWriteCharacter
  9824 ;;		___awdiv
  9825 ;;		___lwmod
  9826 ;; This function is called by:
  9827 ;;		_main
  9828 ;; This function uses a non-reentrant model
  9829 ;;
  9830                           
  9831                           
  9832                           ;psect for function _LCDWriteInt
  9833  0251                     _LCDWriteInt:	
  9834                           
  9835                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
  9836                           
  9837                           ;incstack = 0
  9838                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9839  0251  30D8               	movlw	low LCDWriteInt@F14393
  9840  0252  0086               	movwf	6
  9841  0253  3000               	movlw	high LCDWriteInt@F14393
  9842  0254  0087               	movwf	7
  9843  0255  3031               	movlw	low LCDWriteInt@str
  9844  0256  0084               	movwf	4
  9845  0257  3000               	movlw	high LCDWriteInt@str
  9846  0258  0085               	movwf	5
  9847  0259  3005               	movlw	5
  9848  025A  0020               	movlb	0	; select bank0
  9849  025B  00AD               	movwf	??_LCDWriteInt
  9850  025C                     u2340:	
  9851  025C  0016               	moviw fsr1++
  9852  025D  001A               	movwi fsr0++
  9853  025E  0BAD               	decfsz	??_LCDWriteInt,f
  9854  025F  2A5C               	goto	u2340
  9855                           
  9856                           ;lcd.c: 193: uint8_t i=4,j=0;
  9857  0260  3004               	movlw	4
  9858  0261  00AD               	movwf	??_LCDWriteInt
  9859  0262  082D               	movf	??_LCDWriteInt,w
  9860  0263  00B7               	movwf	LCDWriteInt@i
  9861  0264  01B6               	clrf	LCDWriteInt@j
  9862                           
  9863                           ;lcd.c: 195: if(value<0)
  9864  0265  1FA9               	btfss	LCDWriteInt@value+1,7
  9865  0266  2A72               	goto	l2238
  9866                           
  9867                           ;lcd.c: 196: {
  9868                           ;lcd.c: 197: LCDWriteCharacter('-');
  9869  0267  302D               	movlw	45
  9870  0268  318E  26C3  3182   	fcall	_LCDWriteCharacter
  9871                           
  9872                           ;lcd.c: 198: value=value*-1;
  9873  026B  0020               	movlb	0	; select bank0
  9874  026C  09A8               	comf	LCDWriteInt@value,f
  9875  026D  09A9               	comf	LCDWriteInt@value+1,f
  9876  026E  0AA8               	incf	LCDWriteInt@value,f
  9877  026F  1903               	skipnz
  9878  0270  0AA9               	incf	LCDWriteInt@value+1,f
  9879                           
  9880                           ;lcd.c: 199: }
  9881  0271  2A79               	goto	l2248
  9882  0272                     l2238:	
  9883                           
  9884                           ;lcd.c: 201: else
  9885                           ;lcd.c: 202: {
  9886                           ;lcd.c: 203: if(sign == 1)
  9887  0272  032C               	decf	LCDWriteInt@sign,w
  9888  0273  1D03               	btfss	3,2
  9889  0274  2A79               	goto	l2248
  9890                           
  9891                           ;lcd.c: 204: {
  9892                           ;lcd.c: 205: LCDWriteCharacter('+');
  9893  0275  302B               	movlw	43
  9894  0276  318E  26C3  3182   	fcall	_LCDWriteCharacter
  9895  0279                     l2248:	
  9896                           ;lcd.c: 206: }
  9897                           ;lcd.c: 207: }
  9898                           ;lcd.c: 209: while(value)
  9899                           
  9900  0279  0020               	movlb	0	; select bank0
  9901  027A  0828               	movf	LCDWriteInt@value,w
  9902  027B  0429               	iorwf	LCDWriteInt@value+1,w
  9903  027C  1903               	btfsc	3,2
  9904  027D  2AA6               	goto	l2250
  9905                           
  9906                           ;lcd.c: 210: {
  9907                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
  9908  027E  300A               	movlw	10
  9909  027F  00F0               	movwf	___lwmod@divisor
  9910  0280  3000               	movlw	0
  9911  0281  00F1               	movwf	___lwmod@divisor+1
  9912  0282  0020               	movlb	0	; select bank0
  9913  0283  0829               	movf	LCDWriteInt@value+1,w
  9914  0284  00F3               	movwf	___lwmod@dividend+1
  9915  0285  0828               	movf	LCDWriteInt@value,w
  9916  0286  00F2               	movwf	___lwmod@dividend
  9917  0287  318C  24EA  3182   	fcall	___lwmod
  9918  028A  0870               	movf	?___lwmod,w
  9919  028B  0020               	movlb	0	; select bank0
  9920  028C  00AD               	movwf	??_LCDWriteInt
  9921  028D  0837               	movf	LCDWriteInt@i,w
  9922  028E  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  9923  028F  0086               	movwf	6
  9924  0290  0187               	clrf	7
  9925  0291  082D               	movf	??_LCDWriteInt,w
  9926  0292  0081               	movwf	1
  9927                           
  9928                           ;lcd.c: 212: value=value/10;
  9929  0293  300A               	movlw	10
  9930  0294  00F0               	movwf	___awdiv@divisor
  9931  0295  3000               	movlw	0
  9932  0296  00F1               	movwf	___awdiv@divisor+1
  9933  0297  0829               	movf	LCDWriteInt@value+1,w
  9934  0298  00F3               	movwf	___awdiv@dividend+1
  9935  0299  0828               	movf	LCDWriteInt@value,w
  9936  029A  00F2               	movwf	___awdiv@dividend
  9937  029B  318E  2672  3182   	fcall	___awdiv
  9938  029E  0871               	movf	?___awdiv+1,w
  9939  029F  0020               	movlb	0	; select bank0
  9940  02A0  00A9               	movwf	LCDWriteInt@value+1
  9941  02A1  0870               	movf	?___awdiv,w
  9942  02A2  00A8               	movwf	LCDWriteInt@value
  9943                           
  9944                           ;lcd.c: 213: i--;
  9945  02A3  3001               	movlw	1
  9946  02A4  02B7               	subwf	LCDWriteInt@i,f
  9947  02A5  2A79               	goto	l2248
  9948  02A6                     l2250:	
  9949                           
  9950                           ;lcd.c: 214: }
  9951                           ;lcd.c: 215: if(fieldLength==-1)
  9952  02A6  0A2A               	incf	LCDWriteInt@fieldLength,w
  9953  02A7  1903               	btfsc	3,2
  9954  02A8  2AAE               	goto	l2256
  9955  02A9  2AB6               	goto	l2258
  9956  02AA                     l2254:	
  9957                           ;lcd.c: 216: {
  9958                           ;lcd.c: 217: while(str[j]==0)
  9959                           
  9960                           
  9961                           ;lcd.c: 218: {
  9962                           ;lcd.c: 219: j++;
  9963  02AA  3001               	movlw	1
  9964  02AB  00AD               	movwf	??_LCDWriteInt
  9965  02AC  082D               	movf	??_LCDWriteInt,w
  9966  02AD  07B6               	addwf	LCDWriteInt@j,f
  9967  02AE                     l2256:	
  9968  02AE  0836               	movf	LCDWriteInt@j,w
  9969  02AF  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  9970  02B0  0086               	movwf	6
  9971  02B1  0187               	clrf	7
  9972  02B2  0801               	movf	1,w
  9973  02B3  1D03               	btfss	3,2
  9974  02B4  2ABC               	goto	l2260
  9975  02B5  2AAA               	goto	l2254
  9976  02B6                     l2258:	
  9977                           ;lcd.c: 220: }
  9978                           ;lcd.c: 221: }
  9979                           
  9980                           
  9981                           ;lcd.c: 222: else
  9982                           ;lcd.c: 223: {
  9983                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
  9984  02B6  032A               	decf	LCDWriteInt@fieldLength,w
  9985  02B7  3AFF               	xorlw	255
  9986  02B8  3E05               	addlw	5
  9987  02B9  00AD               	movwf	??_LCDWriteInt
  9988  02BA  082D               	movf	??_LCDWriteInt,w
  9989  02BB  00B6               	movwf	LCDWriteInt@j
  9990  02BC                     l2260:	
  9991                           
  9992                           ;lcd.c: 225: }
  9993                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
  9994  02BC  0836               	movf	LCDWriteInt@j,w
  9995  02BD  00AD               	movwf	??_LCDWriteInt
  9996  02BE  082D               	movf	??_LCDWriteInt,w
  9997  02BF  00B7               	movwf	LCDWriteInt@i
  9998  02C0                     l2266:	
  9999  02C0  082B               	movf	LCDWriteInt@numPlaces,w
 10000  02C1  00AD               	movwf	??_LCDWriteInt
 10001  02C2  01AE               	clrf	??_LCDWriteInt+1
 10002  02C3  09AD               	comf	??_LCDWriteInt,f
 10003  02C4  09AE               	comf	??_LCDWriteInt+1,f
 10004  02C5  0AAD               	incf	??_LCDWriteInt,f
 10005  02C6  1903               	skipnz
 10006  02C7  0AAE               	incf	??_LCDWriteInt+1,f
 10007  02C8  082D               	movf	??_LCDWriteInt,w
 10008  02C9  3E05               	addlw	5
 10009  02CA  00AF               	movwf	??_LCDWriteInt+2
 10010  02CB  3000               	movlw	0
 10011  02CC  3D2E               	addwfc	??_LCDWriteInt+1,w
 10012  02CD  00B0               	movwf	??_LCDWriteInt+3
 10013  02CE  0830               	movf	??_LCDWriteInt+3,w
 10014  02CF  3A80               	xorlw	128
 10015  02D0  3C80               	sublw	128
 10016  02D1  1D03               	skipz
 10017  02D2  2AD5               	goto	u2405
 10018  02D3  082F               	movf	??_LCDWriteInt+2,w
 10019  02D4  0237               	subwf	LCDWriteInt@i,w
 10020  02D5                     u2405:	
 10021  02D5  1803               	btfsc	3,0
 10022  02D6  2AE7               	goto	l2268
 10023                           
 10024                           ;lcd.c: 228: {
 10025                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 10026  02D7  0020               	movlb	0	; select bank0
 10027  02D8  0837               	movf	LCDWriteInt@i,w
 10028  02D9  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 10029  02DA  0086               	movwf	6
 10030  02DB  0187               	clrf	7
 10031  02DC  0801               	movf	1,w
 10032  02DD  3E30               	addlw	48
 10033  02DE  318E  26C3  3182   	fcall	_LCDWriteCharacter
 10034  02E1  3001               	movlw	1
 10035  02E2  0020               	movlb	0	; select bank0
 10036  02E3  00AD               	movwf	??_LCDWriteInt
 10037  02E4  082D               	movf	??_LCDWriteInt,w
 10038  02E5  07B7               	addwf	LCDWriteInt@i,f
 10039  02E6  2AC0               	goto	l2266
 10040  02E7                     l2268:	
 10041                           
 10042                           ;lcd.c: 230: }
 10043                           ;lcd.c: 232: if(numPlaces == 1)
 10044  02E7  0020               	movlb	0	; select bank0
 10045  02E8  032B               	decf	LCDWriteInt@numPlaces,w
 10046  02E9  1D03               	btfss	3,2
 10047  02EA  2AF5               	goto	l2272
 10048                           
 10049                           ;lcd.c: 233: {
 10050                           ;lcd.c: 234: LCDWriteCharacter(46);
 10051  02EB  302E               	movlw	46
 10052  02EC  318E  26C3  3182   	fcall	_LCDWriteCharacter
 10053                           
 10054                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 10055  02EF  0020               	movlb	0	; select bank0
 10056  02F0  0835               	movf	LCDWriteInt@str+4,w
 10057  02F1  3E30               	addlw	48
 10058  02F2  318E  26C3  3182   	fcall	_LCDWriteCharacter
 10059  02F5                     l2272:	
 10060                           
 10061                           ;lcd.c: 236: }
 10062                           ;lcd.c: 238: if(numPlaces == 2)
 10063  02F5  3002               	movlw	2
 10064  02F6  0020               	movlb	0	; select bank0
 10065  02F7  062B               	xorwf	LCDWriteInt@numPlaces,w
 10066  02F8  1D03               	btfss	3,2
 10067  02F9  0008               	return
 10068                           
 10069                           ;lcd.c: 239: {
 10070                           ;lcd.c: 240: LCDWriteCharacter(46);
 10071  02FA  302E               	movlw	46
 10072  02FB  318E  26C3  3182   	fcall	_LCDWriteCharacter
 10073                           
 10074                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 10075  02FE  0020               	movlb	0	; select bank0
 10076  02FF  0834               	movf	LCDWriteInt@str+3,w
 10077  0300  3E30               	addlw	48
 10078  0301  318E  26C3  3182   	fcall	_LCDWriteCharacter
 10079                           
 10080                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 10081  0304  0020               	movlb	0	; select bank0
 10082  0305  0835               	movf	LCDWriteInt@str+4,w
 10083  0306  3E30               	addlw	48
 10084  0307  318E  26C3         	fcall	_LCDWriteCharacter
 10085  0309  0008               	return
 10086  030A                     __end_of_LCDWriteInt:	
 10087                           
 10088                           	psect	text25
 10089  0CEA                     __ptext25:	
 10090 ;; *************** function ___lwmod *****************
 10091 ;; Defined at:
 10092 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 10093 ;; Parameters:    Size  Location     Type
 10094 ;;  divisor         2    0[COMMON] unsigned int 
 10095 ;;  dividend        2    2[COMMON] unsigned int 
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;  counter         1    5[COMMON] unsigned char 
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  2    0[COMMON] unsigned int 
 10100 ;; Registers used:
 10101 ;;		wreg, status,2, status,0
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10108 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10110 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10111 ;;Total ram usage:        6 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; This function calls:
 10114 ;;		Nothing
 10115 ;; This function is called by:
 10116 ;;		_LCDWriteInt
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           
 10121                           ;psect for function ___lwmod
 10122  0CEA                     ___lwmod:	
 10123                           
 10124                           ;incstack = 0
 10125                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10126  0CEA  0870               	movf	___lwmod@divisor,w
 10127  0CEB  0471               	iorwf	___lwmod@divisor+1,w
 10128  0CEC  1903               	btfsc	3,2
 10129  0CED  2D11               	goto	l2142
 10130  0CEE  01F5               	clrf	___lwmod@counter
 10131  0CEF  0AF5               	incf	___lwmod@counter,f
 10132  0CF0                     l2132:	
 10133  0CF0  1BF1               	btfsc	___lwmod@divisor+1,7
 10134  0CF1  2CFC               	goto	l2134
 10135  0CF2  3001               	movlw	1
 10136  0CF3                     u2075:	
 10137  0CF3  35F0               	lslf	___lwmod@divisor,f
 10138  0CF4  0DF1               	rlf	___lwmod@divisor+1,f
 10139  0CF5  0B89               	decfsz	9,f
 10140  0CF6  2CF3               	goto	u2075
 10141  0CF7  3001               	movlw	1
 10142  0CF8  00F4               	movwf	??___lwmod
 10143  0CF9  0874               	movf	??___lwmod,w
 10144  0CFA  07F5               	addwf	___lwmod@counter,f
 10145  0CFB  2CF0               	goto	l2132
 10146  0CFC                     l2134:	
 10147  0CFC  0871               	movf	___lwmod@divisor+1,w
 10148  0CFD  0273               	subwf	___lwmod@dividend+1,w
 10149  0CFE  1D03               	skipz
 10150  0CFF  2D02               	goto	u2095
 10151  0D00  0870               	movf	___lwmod@divisor,w
 10152  0D01  0272               	subwf	___lwmod@dividend,w
 10153  0D02                     u2095:	
 10154  0D02  1C03               	skipc
 10155  0D03  2D08               	goto	l2138
 10156  0D04  0870               	movf	___lwmod@divisor,w
 10157  0D05  02F2               	subwf	___lwmod@dividend,f
 10158  0D06  0871               	movf	___lwmod@divisor+1,w
 10159  0D07  3BF3               	subwfb	___lwmod@dividend+1,f
 10160  0D08                     l2138:	
 10161  0D08  3001               	movlw	1
 10162  0D09                     u2105:	
 10163  0D09  36F1               	lsrf	___lwmod@divisor+1,f
 10164  0D0A  0CF0               	rrf	___lwmod@divisor,f
 10165  0D0B  0B89               	decfsz	9,f
 10166  0D0C  2D09               	goto	u2105
 10167  0D0D  3001               	movlw	1
 10168  0D0E  02F5               	subwf	___lwmod@counter,f
 10169  0D0F  1D03               	btfss	3,2
 10170  0D10  2CFC               	goto	l2134
 10171  0D11                     l2142:	
 10172  0D11  0873               	movf	___lwmod@dividend+1,w
 10173  0D12  00F1               	movwf	?___lwmod+1
 10174  0D13  0872               	movf	___lwmod@dividend,w
 10175  0D14  00F0               	movwf	?___lwmod
 10176  0D15  0008               	return
 10177  0D16                     __end_of___lwmod:	
 10178                           
 10179                           	psect	text26
 10180  0E72                     __ptext26:	
 10181 ;; *************** function ___awdiv *****************
 10182 ;; Defined at:
 10183 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;  divisor         2    0[COMMON] int 
 10186 ;;  dividend        2    2[COMMON] int 
 10187 ;; Auto vars:     Size  Location     Type
 10188 ;;  quotient        2    7[COMMON] int 
 10189 ;;  sign            1    6[COMMON] unsigned char 
 10190 ;;  counter         1    5[COMMON] unsigned char 
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  2    0[COMMON] int 
 10193 ;; Registers used:
 10194 ;;		wreg, status,2, status,0
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10201 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10203 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10204 ;;Total ram usage:        9 bytes
 10205 ;; Hardware stack levels used:    1
 10206 ;; This function calls:
 10207 ;;		Nothing
 10208 ;; This function is called by:
 10209 ;;		_LCDWriteInt
 10210 ;;		_main
 10211 ;; This function uses a non-reentrant model
 10212 ;;
 10213                           
 10214                           
 10215                           ;psect for function ___awdiv
 10216  0E72                     ___awdiv:	
 10217                           
 10218                           ;incstack = 0
 10219                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10220  0E72  01F6               	clrf	___awdiv@sign
 10221  0E73  1FF1               	btfss	___awdiv@divisor+1,7
 10222  0E74  2E7C               	goto	l1992
 10223  0E75  09F0               	comf	___awdiv@divisor,f
 10224  0E76  09F1               	comf	___awdiv@divisor+1,f
 10225  0E77  0AF0               	incf	___awdiv@divisor,f
 10226  0E78  1903               	skipnz
 10227  0E79  0AF1               	incf	___awdiv@divisor+1,f
 10228  0E7A  01F6               	clrf	___awdiv@sign
 10229  0E7B  0AF6               	incf	___awdiv@sign,f
 10230  0E7C                     l1992:	
 10231  0E7C  1FF3               	btfss	___awdiv@dividend+1,7
 10232  0E7D  2E87               	goto	l1998
 10233  0E7E  09F2               	comf	___awdiv@dividend,f
 10234  0E7F  09F3               	comf	___awdiv@dividend+1,f
 10235  0E80  0AF2               	incf	___awdiv@dividend,f
 10236  0E81  1903               	skipnz
 10237  0E82  0AF3               	incf	___awdiv@dividend+1,f
 10238  0E83  3001               	movlw	1
 10239  0E84  00F4               	movwf	??___awdiv
 10240  0E85  0874               	movf	??___awdiv,w
 10241  0E86  06F6               	xorwf	___awdiv@sign,f
 10242  0E87                     l1998:	
 10243  0E87  01F7               	clrf	___awdiv@quotient
 10244  0E88  01F8               	clrf	___awdiv@quotient+1
 10245  0E89  0870               	movf	___awdiv@divisor,w
 10246  0E8A  0471               	iorwf	___awdiv@divisor+1,w
 10247  0E8B  1903               	btfsc	3,2
 10248  0E8C  2EB6               	goto	l2020
 10249  0E8D  01F5               	clrf	___awdiv@counter
 10250  0E8E  0AF5               	incf	___awdiv@counter,f
 10251  0E8F                     l2008:	
 10252  0E8F  1BF1               	btfsc	___awdiv@divisor+1,7
 10253  0E90  2E9B               	goto	l2010
 10254  0E91  3001               	movlw	1
 10255  0E92                     u1805:	
 10256  0E92  35F0               	lslf	___awdiv@divisor,f
 10257  0E93  0DF1               	rlf	___awdiv@divisor+1,f
 10258  0E94  0B89               	decfsz	9,f
 10259  0E95  2E92               	goto	u1805
 10260  0E96  3001               	movlw	1
 10261  0E97  00F4               	movwf	??___awdiv
 10262  0E98  0874               	movf	??___awdiv,w
 10263  0E99  07F5               	addwf	___awdiv@counter,f
 10264  0E9A  2E8F               	goto	l2008
 10265  0E9B                     l2010:	
 10266  0E9B  3001               	movlw	1
 10267  0E9C                     u1825:	
 10268  0E9C  35F7               	lslf	___awdiv@quotient,f
 10269  0E9D  0DF8               	rlf	___awdiv@quotient+1,f
 10270  0E9E  0B89               	decfsz	9,f
 10271  0E9F  2E9C               	goto	u1825
 10272  0EA0  0871               	movf	___awdiv@divisor+1,w
 10273  0EA1  0273               	subwf	___awdiv@dividend+1,w
 10274  0EA2  1D03               	skipz
 10275  0EA3  2EA6               	goto	u1835
 10276  0EA4  0870               	movf	___awdiv@divisor,w
 10277  0EA5  0272               	subwf	___awdiv@dividend,w
 10278  0EA6                     u1835:	
 10279  0EA6  1C03               	skipc
 10280  0EA7  2EAD               	goto	l2016
 10281  0EA8  0870               	movf	___awdiv@divisor,w
 10282  0EA9  02F2               	subwf	___awdiv@dividend,f
 10283  0EAA  0871               	movf	___awdiv@divisor+1,w
 10284  0EAB  3BF3               	subwfb	___awdiv@dividend+1,f
 10285  0EAC  1477               	bsf	___awdiv@quotient,0
 10286  0EAD                     l2016:	
 10287  0EAD  3001               	movlw	1
 10288  0EAE                     u1845:	
 10289  0EAE  36F1               	lsrf	___awdiv@divisor+1,f
 10290  0EAF  0CF0               	rrf	___awdiv@divisor,f
 10291  0EB0  0B89               	decfsz	9,f
 10292  0EB1  2EAE               	goto	u1845
 10293  0EB2  3001               	movlw	1
 10294  0EB3  02F5               	subwf	___awdiv@counter,f
 10295  0EB4  1D03               	btfss	3,2
 10296  0EB5  2E9B               	goto	l2010
 10297  0EB6                     l2020:	
 10298  0EB6  0876               	movf	___awdiv@sign,w
 10299  0EB7  1903               	btfsc	3,2
 10300  0EB8  2EBE               	goto	l2024
 10301  0EB9  09F7               	comf	___awdiv@quotient,f
 10302  0EBA  09F8               	comf	___awdiv@quotient+1,f
 10303  0EBB  0AF7               	incf	___awdiv@quotient,f
 10304  0EBC  1903               	skipnz
 10305  0EBD  0AF8               	incf	___awdiv@quotient+1,f
 10306  0EBE                     l2024:	
 10307  0EBE  0878               	movf	___awdiv@quotient+1,w
 10308  0EBF  00F1               	movwf	?___awdiv+1
 10309  0EC0  0877               	movf	___awdiv@quotient,w
 10310  0EC1  00F0               	movwf	?___awdiv
 10311  0EC2  0008               	return
 10312  0EC3                     __end_of___awdiv:	
 10313                           
 10314                           	psect	text27
 10315  0EC3                     __ptext27:	
 10316 ;; *************** function _LCDWriteCharacter *****************
 10317 ;; Defined at:
 10318 ;;		line 140 in file "lcd.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;  character       1    wreg     const unsigned char 
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;  character       1    5[BANK0 ] const unsigned char 
 10323 ;;  base            2    6[BANK0 ] unsigned int 
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1    wreg      void 
 10326 ;; Registers used:
 10327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;Total ram usage:        6 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; Hardware stack levels required when called:    1
 10340 ;; This function calls:
 10341 ;;		_LCDWrite
 10342 ;;		___wmul
 10343 ;; This function is called by:
 10344 ;;		_LCDWriteInt
 10345 ;;		_main
 10346 ;;		_LCDWriteString
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           
 10351                           ;psect for function _LCDWriteCharacter
 10352  0EC3                     _LCDWriteCharacter:	
 10353                           
 10354                           ;incstack = 0
 10355                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10356                           ;LCDWriteCharacter@character stored from wreg
 10357  0EC3  0020               	movlb	0	; select bank0
 10358  0EC4  00A5               	movwf	LCDWriteCharacter@character
 10359                           
 10360                           ;lcd.c: 142: uint16_t base;
 10361                           ;lcd.c: 143: base = character - 0x20;
 10362  0EC5  0825               	movf	LCDWriteCharacter@character,w
 10363  0EC6  3EE0               	addlw	224
 10364  0EC7  00A6               	movwf	LCDWriteCharacter@base
 10365  0EC8  30FF               	movlw	255
 10366  0EC9  1803               	skipnc
 10367  0ECA  3000               	movlw	0
 10368  0ECB  00A7               	movwf	LCDWriteCharacter@base+1
 10369                           
 10370                           ;lcd.c: 144: base *= 3;
 10371  0ECC  3003               	movlw	3
 10372  0ECD  00F9               	movwf	___wmul@multiplier
 10373  0ECE  3000               	movlw	0
 10374  0ECF  00FA               	movwf	___wmul@multiplier+1
 10375  0ED0  0827               	movf	LCDWriteCharacter@base+1,w
 10376  0ED1  00FC               	movwf	___wmul@multiplicand+1
 10377  0ED2  0826               	movf	LCDWriteCharacter@base,w
 10378  0ED3  00FB               	movwf	___wmul@multiplicand
 10379  0ED4  318C  2418  318E   	fcall	___wmul
 10380  0ED7  087A               	movf	?___wmul+1,w
 10381  0ED8  0020               	movlb	0	; select bank0
 10382  0ED9  00A7               	movwf	LCDWriteCharacter@base+1
 10383  0EDA  0879               	movf	?___wmul,w
 10384  0EDB  00A6               	movwf	LCDWriteCharacter@base
 10385                           
 10386                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 10387  0EDC  0827               	movf	LCDWriteCharacter@base+1,w
 10388  0EDD  0085               	movwf	5
 10389  0EDE  0826               	movf	LCDWriteCharacter@base,w
 10390  0EDF  0084               	movwf	4
 10391  0EE0  3000               	movlw	low (_fonts| (0+32768))
 10392  0EE1  0784               	addwf	4,f
 10393  0EE2  3088               	movlw	high (_fonts| (0+32768))
 10394  0EE3  3D85               	addwfc	5,f
 10395  0EE4  0800               	movf	0,w	;code access
 10396  0EE5  00A2               	movwf	??_LCDWriteCharacter
 10397  0EE6  0822               	movf	??_LCDWriteCharacter,w
 10398  0EE7  00F0               	movwf	LCDWrite@data
 10399  0EE8  3001               	movlw	1
 10400  0EE9  318C  2475  318E   	fcall	_LCDWrite
 10401                           
 10402                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 10403  0EEC  0020               	movlb	0	; select bank0
 10404  0EED  0826               	movf	LCDWriteCharacter@base,w
 10405  0EEE  3E01               	addlw	1
 10406  0EEF  00A2               	movwf	??_LCDWriteCharacter
 10407  0EF0  3000               	movlw	0
 10408  0EF1  3D27               	addwfc	LCDWriteCharacter@base+1,w
 10409  0EF2  00A3               	movwf	??_LCDWriteCharacter+1
 10410  0EF3  3000               	movlw	low (_fonts| (0+32768))
 10411  0EF4  0722               	addwf	??_LCDWriteCharacter,w
 10412  0EF5  0084               	movwf	4
 10413  0EF6  3088               	movlw	high (_fonts| (0+32768))
 10414  0EF7  3D23               	addwfc	??_LCDWriteCharacter+1,w
 10415  0EF8  0085               	movwf	5
 10416  0EF9  0800               	movf	0,w	;code access
 10417  0EFA  00A4               	movwf	??_LCDWriteCharacter+2
 10418  0EFB  0824               	movf	??_LCDWriteCharacter+2,w
 10419  0EFC  00F0               	movwf	LCDWrite@data
 10420  0EFD  3001               	movlw	1
 10421  0EFE  318C  2475  318E   	fcall	_LCDWrite
 10422                           
 10423                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 10424  0F01  0020               	movlb	0	; select bank0
 10425  0F02  0826               	movf	LCDWriteCharacter@base,w
 10426  0F03  3E02               	addlw	2
 10427  0F04  00A2               	movwf	??_LCDWriteCharacter
 10428  0F05  3000               	movlw	0
 10429  0F06  3D27               	addwfc	LCDWriteCharacter@base+1,w
 10430  0F07  00A3               	movwf	??_LCDWriteCharacter+1
 10431  0F08  3000               	movlw	low (_fonts| (0+32768))
 10432  0F09  0722               	addwf	??_LCDWriteCharacter,w
 10433  0F0A  0084               	movwf	4
 10434  0F0B  3088               	movlw	high (_fonts| (0+32768))
 10435  0F0C  3D23               	addwfc	??_LCDWriteCharacter+1,w
 10436  0F0D  0085               	movwf	5
 10437  0F0E  0800               	movf	0,w	;code access
 10438  0F0F  00A4               	movwf	??_LCDWriteCharacter+2
 10439  0F10  0824               	movf	??_LCDWriteCharacter+2,w
 10440  0F11  00F0               	movwf	LCDWrite@data
 10441  0F12  3001               	movlw	1
 10442  0F13  318C  2475  318E   	fcall	_LCDWrite
 10443                           
 10444                           ;lcd.c: 148: LCDWrite(1, 0x00);
 10445  0F16  01F0               	clrf	LCDWrite@data
 10446  0F17  3001               	movlw	1
 10447  0F18  318C  2475         	fcall	_LCDWrite
 10448  0F1A  0008               	return
 10449  0F1B                     __end_of_LCDWriteCharacter:	
 10450                           
 10451                           	psect	text28
 10452  0C18                     __ptext28:	
 10453 ;; *************** function ___wmul *****************
 10454 ;; Defined at:
 10455 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;  multiplier      2    9[COMMON] unsigned int 
 10458 ;;  multiplicand    2   11[COMMON] unsigned int 
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;  product         2    0[BANK0 ] unsigned int 
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  2    9[COMMON] unsigned int 
 10463 ;; Registers used:
 10464 ;;		wreg, status,2, status,0
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10471 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;Total ram usage:        6 bytes
 10475 ;; Hardware stack levels used:    1
 10476 ;; This function calls:
 10477 ;;		Nothing
 10478 ;; This function is called by:
 10479 ;;		_readAnalog
 10480 ;;		_LCDWriteCharacter
 10481 ;;		_main
 10482 ;; This function uses a non-reentrant model
 10483 ;;
 10484                           
 10485                           
 10486                           ;psect for function ___wmul
 10487  0C18                     ___wmul:	
 10488                           
 10489                           ;incstack = 0
 10490                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10491  0C18  0020               	movlb	0	; select bank0
 10492  0C19  01A0               	clrf	___wmul@product
 10493  0C1A  01A1               	clrf	___wmul@product+1
 10494  0C1B                     l1744:	
 10495  0C1B  1C79               	btfss	___wmul@multiplier,0
 10496  0C1C  2C22               	goto	l518
 10497  0C1D  087B               	movf	___wmul@multiplicand,w
 10498  0C1E  0020               	movlb	0	; select bank0
 10499  0C1F  07A0               	addwf	___wmul@product,f
 10500  0C20  087C               	movf	___wmul@multiplicand+1,w
 10501  0C21  3DA1               	addwfc	___wmul@product+1,f
 10502  0C22                     l518:	
 10503  0C22  3001               	movlw	1
 10504  0C23                     u1465:	
 10505  0C23  35FB               	lslf	___wmul@multiplicand,f
 10506  0C24  0DFC               	rlf	___wmul@multiplicand+1,f
 10507  0C25  0B89               	decfsz	9,f
 10508  0C26  2C23               	goto	u1465
 10509  0C27  3001               	movlw	1
 10510  0C28                     u1475:	
 10511  0C28  36FA               	lsrf	___wmul@multiplier+1,f
 10512  0C29  0CF9               	rrf	___wmul@multiplier,f
 10513  0C2A  0B89               	decfsz	9,f
 10514  0C2B  2C28               	goto	u1475
 10515  0C2C  0879               	movf	___wmul@multiplier,w
 10516  0C2D  047A               	iorwf	___wmul@multiplier+1,w
 10517  0C2E  1D03               	btfss	3,2
 10518  0C2F  2C1B               	goto	l1744
 10519  0C30  0020               	movlb	0	; select bank0
 10520  0C31  0821               	movf	___wmul@product+1,w
 10521  0C32  00FA               	movwf	?___wmul+1
 10522  0C33  0820               	movf	___wmul@product,w
 10523  0C34  00F9               	movwf	?___wmul
 10524  0C35  0008               	return
 10525  0C36                     __end_of___wmul:	
 10526                           
 10527                           	psect	text29
 10528  0C75                     __ptext29:	
 10529 ;; *************** function _LCDWrite *****************
 10530 ;; Defined at:
 10531 ;;		line 280 in file "lcd.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  data_or_comm    1    wreg     unsigned char 
 10534 ;;  data            1    0[COMMON] unsigned char 
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;  data_or_comm    1    2[COMMON] unsigned char 
 10537 ;;  i               1    4[COMMON] unsigned char 
 10538 ;;  d               1    3[COMMON] unsigned char 
 10539 ;; Return value:  Size  Location     Type
 10540 ;;                  1    wreg      void 
 10541 ;; Registers used:
 10542 ;;		wreg, status,2, status,0
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10548 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;Total ram usage:        5 bytes
 10553 ;; Hardware stack levels used:    1
 10554 ;; This function calls:
 10555 ;;		Nothing
 10556 ;; This function is called by:
 10557 ;;		_gotoXY
 10558 ;;		_LCDWriteCharacter
 10559 ;;		_LCDClear
 10560 ;;		_LCDInit
 10561 ;;		_LCDBitmap
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           
 10566                           ;psect for function _LCDWrite
 10567  0C75                     _LCDWrite:	
 10568                           
 10569                           ;incstack = 0
 10570                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 10571                           ;LCDWrite@data_or_command stored from wreg
 10572  0C75  00F2               	movwf	LCDWrite@data_or_command
 10573                           
 10574                           ;lcd.c: 282: uint8_t i,d;
 10575                           ;lcd.c: 284: d=data;
 10576  0C76  0870               	movf	LCDWrite@data,w
 10577  0C77  00F1               	movwf	??_LCDWrite
 10578  0C78  0871               	movf	??_LCDWrite,w
 10579  0C79  00F3               	movwf	LCDWrite@d
 10580                           
 10581                           ;lcd.c: 286: if(data_or_command == 0)
 10582  0C7A  0872               	movf	LCDWrite@data_or_command,w
 10583  0C7B  1D03               	btfss	3,2
 10584  0C7C  2C80               	goto	l195
 10585                           
 10586                           ;lcd.c: 287: {
 10587                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 10588  0C7D  0020               	movlb	0	; select bank0
 10589  0C7E  1116               	bcf	22,2	;volatile
 10590                           
 10591                           ;lcd.c: 289: }
 10592  0C7F  2C82               	goto	l196
 10593  0C80                     l195:	
 10594                           
 10595                           ;lcd.c: 290: else
 10596                           ;lcd.c: 291: {
 10597                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 10598  0C80  0020               	movlb	0	; select bank0
 10599  0C81  1516               	bsf	22,2	;volatile
 10600  0C82                     l196:	
 10601                           
 10602                           ;lcd.c: 293: }
 10603                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 10604  0C82  1096               	bcf	22,1	;volatile
 10605                           
 10606                           ;lcd.c: 297: for(i=0;i<8;i++)
 10607  0C83  01F4               	clrf	LCDWrite@i
 10608  0C84  3008               	movlw	8
 10609  0C85  0274               	subwf	LCDWrite@i,w
 10610  0C86  1803               	btfsc	3,0
 10611  0C87  2C98               	goto	l198
 10612  0C88                     l197:	
 10613                           
 10614                           ;lcd.c: 298: {
 10615                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 10616  0C88  1196               	bcf	22,3	;volatile
 10617                           
 10618                           ;lcd.c: 301: if(d&0x80)
 10619  0C89  1FF3               	btfss	LCDWrite@d,7
 10620  0C8A  2C8C               	goto	l199
 10621                           
 10622                           ;lcd.c: 302: {
 10623                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 10624  0C8B  1596               	bsf	22,3	;volatile
 10625  0C8C                     l199:	
 10626                           
 10627                           ;lcd.c: 304: }
 10628                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 10629  0C8C  1616               	bsf	22,4	;volatile
 10630                           
 10631                           ;lcd.c: 308: d<<=1;
 10632  0C8D  1003               	clrc
 10633  0C8E  0DF3               	rlf	LCDWrite@d,f
 10634                           
 10635                           ;lcd.c: 310: LATAbits.LATA4=0;
 10636  0C8F  1216               	bcf	22,4	;volatile
 10637  0C90  3001               	movlw	1
 10638  0C91  00F1               	movwf	??_LCDWrite
 10639  0C92  0871               	movf	??_LCDWrite,w
 10640  0C93  07F4               	addwf	LCDWrite@i,f
 10641  0C94  3008               	movlw	8
 10642  0C95  0274               	subwf	LCDWrite@i,w
 10643  0C96  1C03               	skipc
 10644  0C97  2C88               	goto	l197
 10645  0C98                     l198:	
 10646                           
 10647                           ;lcd.c: 311: }
 10648                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 10649  0C98  1496               	bsf	22,1	;volatile
 10650  0C99  0008               	return
 10651  0C9A                     __end_of_LCDWrite:	
 10652                           
 10653                           	psect	text30
 10654  0F7F                     __ptext30:	
 10655 ;; *************** function _Battery_State_Machine *****************
 10656 ;; Defined at:
 10657 ;;		line 38 in file "battery_charger.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;		None
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;		None
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  1    wreg      void 
 10664 ;; Registers used:
 10665 ;;		wreg, status,2, status,0
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;Total ram usage:        1 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; This function calls:
 10678 ;;		Nothing
 10679 ;; This function is called by:
 10680 ;;		_main
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           
 10685                           ;psect for function _Battery_State_Machine
 10686  0F7F                     _Battery_State_Machine:	
 10687                           
 10688                           ;battery_charger.c: 40: if(battery_state == PRECHARGE)
 10689                           
 10690                           ;incstack = 0
 10691                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 10692  0F7F  3003               	movlw	3
 10693  0F80  0020               	movlb	0	; select bank0
 10694  0F81  066E               	xorwf	_battery_state,w
 10695  0F82  1D03               	btfss	3,2
 10696  0F83  2FA8               	goto	l2176
 10697                           
 10698                           ;battery_charger.c: 41: {
 10699                           ;battery_charger.c: 42: if(voltage[1] < 1075)
 10700  0F84  085A               	movf	_voltage+3,w
 10701  0F85  3A80               	xorlw	128
 10702  0F86  00F0               	movwf	??_Battery_State_Machine
 10703  0F87  3084               	movlw	132
 10704  0F88  0270               	subwf	??_Battery_State_Machine,w
 10705  0F89  1D03               	skipz
 10706  0F8A  2F8D               	goto	u2205
 10707  0F8B  3033               	movlw	51
 10708  0F8C  0259               	subwf	_voltage+2,w
 10709  0F8D                     u2205:	
 10710  0F8D  1803               	skipnc
 10711  0F8E  2F9D               	goto	l2174
 10712                           
 10713                           ;battery_charger.c: 43: {
 10714                           ;battery_charger.c: 44: if(state_counter)
 10715  0F8F  0021               	movlb	1	; select bank1
 10716  0F90  0863               	movf	_state_counter^(0+128),w
 10717  0F91  0464               	iorwf	(_state_counter+1)^(0+128),w
 10718  0F92  1903               	btfsc	3,2
 10719  0F93  2F99               	goto	l111
 10720                           
 10721                           ;battery_charger.c: 45: {
 10722                           ;battery_charger.c: 46: state_counter-=1;
 10723  0F94  3001               	movlw	1
 10724  0F95  02E3               	subwf	_state_counter^(0+128),f
 10725  0F96  3000               	movlw	0
 10726  0F97  3BE4               	subwfb	(_state_counter+1)^(0+128),f
 10727                           
 10728                           ;battery_charger.c: 47: }
 10729  0F98  0008               	return
 10730  0F99                     l111:	
 10731                           
 10732                           ;battery_charger.c: 48: else
 10733                           ;battery_charger.c: 49: {
 10734                           ;battery_charger.c: 50: battery_state = FAULT;
 10735  0F99  0020               	movlb	0	; select bank0
 10736  0F9A  01EE               	clrf	_battery_state
 10737  0F9B  0AEE               	incf	_battery_state,f
 10738                           
 10739                           ;battery_charger.c: 51: }
 10740                           ;battery_charger.c: 52: }
 10741  0F9C  0008               	return
 10742  0F9D                     l2174:	
 10743                           
 10744                           ;battery_charger.c: 53: else
 10745                           ;battery_charger.c: 54: {
 10746                           ;battery_charger.c: 55: battery_state = CHARGE;
 10747  0F9D  3004               	movlw	4
 10748  0F9E  00F0               	movwf	??_Battery_State_Machine
 10749  0F9F  0870               	movf	??_Battery_State_Machine,w
 10750  0FA0  0020               	movlb	0	; select bank0
 10751  0FA1  00EE               	movwf	_battery_state
 10752                           
 10753                           ;battery_charger.c: 56: { Iref = 100; };
 10754  0FA2  3064               	movlw	100
 10755  0FA3  0021               	movlb	1	; select bank1
 10756  0FA4  00DF               	movwf	_Iref^(0+128)
 10757  0FA5  3000               	movlw	0
 10758  0FA6  00E0               	movwf	(_Iref^(0+128)+1)
 10759                           
 10760                           ;battery_charger.c: 57: }
 10761                           ;battery_charger.c: 58: }
 10762  0FA7  0008               	return
 10763  0FA8                     l2176:	
 10764                           
 10765                           ;battery_charger.c: 59: else if(battery_state == CHARGE)
 10766  0FA8  3004               	movlw	4
 10767  0FA9  0020               	movlb	0	; select bank0
 10768  0FAA  066E               	xorwf	_battery_state,w
 10769  0FAB  1D03               	btfss	3,2
 10770  0FAC  2FEF               	goto	l2196
 10771                           
 10772                           ;battery_charger.c: 60: {
 10773                           ;battery_charger.c: 61: if((!Imode0))
 10774  0FAD  086F               	movf	_Imode0,w
 10775  0FAE  1D03               	btfss	3,2
 10776  0FAF  0008               	return
 10777                           
 10778                           ;battery_charger.c: 62: {
 10779                           ;battery_charger.c: 63: if(current[1] < Imin)
 10780  0FB0  0021               	movlb	1	; select bank1
 10781  0FB1  0853               	movf	((_current+1)^(0+128)+2),w
 10782  0FB2  3A80               	xorlw	128
 10783  0FB3  00F0               	movwf	??_Battery_State_Machine
 10784  0FB4  0862               	movf	(_Imin+1)^(0+128),w
 10785  0FB5  3A80               	xorlw	128
 10786  0FB6  0270               	subwf	??_Battery_State_Machine,w
 10787  0FB7  1D03               	skipz
 10788  0FB8  2FBB               	goto	u2245
 10789  0FB9  0861               	movf	_Imin^(0+128),w
 10790  0FBA  0252               	subwf	(_current^(0+128)+2),w
 10791  0FBB                     u2245:	
 10792  0FBB  1803               	skipnc
 10793  0FBC  2FE0               	goto	l2190
 10794                           
 10795                           ;battery_charger.c: 64: {
 10796                           ;battery_charger.c: 65: count+=1;
 10797  0FBD  3001               	movlw	1
 10798  0FBE  0020               	movlb	0	; select bank0
 10799  0FBF  07E1               	addwf	_count,f
 10800  0FC0  3000               	movlw	0
 10801  0FC1  3DE2               	addwfc	_count+1,f
 10802                           
 10803                           ;battery_charger.c: 66: if(count>3600)
 10804  0FC2  300E               	movlw	14
 10805  0FC3  0262               	subwf	_count+1,w
 10806  0FC4  3011               	movlw	17
 10807  0FC5  1903               	skipnz
 10808  0FC6  0261               	subwf	_count,w
 10809  0FC7  1C03               	skipc
 10810  0FC8  2FD0               	goto	l2188
 10811                           
 10812                           ;battery_charger.c: 67: {
 10813                           ;battery_charger.c: 68: battery_state = FLOAT;
 10814  0FC9  3005               	movlw	5
 10815  0FCA  00F0               	movwf	??_Battery_State_Machine
 10816  0FCB  0870               	movf	??_Battery_State_Machine,w
 10817  0FCC  00EE               	movwf	_battery_state
 10818                           
 10819                           ;battery_charger.c: 69: count = 0;
 10820  0FCD  01E1               	clrf	_count
 10821  0FCE  01E2               	clrf	_count+1
 10822                           
 10823                           ;battery_charger.c: 70: }
 10824  0FCF  0008               	return
 10825  0FD0                     l2188:	
 10826                           
 10827                           ;battery_charger.c: 71: else
 10828                           ;battery_charger.c: 72: {
 10829                           ;battery_charger.c: 73: Imin = current[1];
 10830  0FD0  0021               	movlb	1	; select bank1
 10831  0FD1  0853               	movf	((_current+1)^(0+128)+2),w
 10832  0FD2  00E2               	movwf	(_Imin+1)^(0+128)
 10833  0FD3  0852               	movf	(_current^(0+128)+2),w
 10834  0FD4  00E1               	movwf	_Imin^(0+128)
 10835                           
 10836                           ;battery_charger.c: 74: IminCount = 5;
 10837  0FD5  3005               	movlw	5
 10838  0FD6  00F0               	movwf	??_Battery_State_Machine
 10839  0FD7  0870               	movf	??_Battery_State_Machine,w
 10840  0FD8  0020               	movlb	0	; select bank0
 10841  0FD9  00ED               	movwf	_IminCount
 10842                           
 10843                           ;battery_charger.c: 75: Iflat_db = 600;
 10844  0FDA  3058               	movlw	88
 10845  0FDB  0021               	movlb	1	; select bank1
 10846  0FDC  00E5               	movwf	_Iflat_db^(0+128)
 10847  0FDD  3002               	movlw	2
 10848  0FDE  00E6               	movwf	(_Iflat_db^(0+128)+1)
 10849                           
 10850                           ;battery_charger.c: 76: }
 10851                           ;battery_charger.c: 77: }
 10852  0FDF  0008               	return
 10853  0FE0                     l2190:	
 10854                           
 10855                           ;battery_charger.c: 78: else
 10856                           ;battery_charger.c: 79: {
 10857                           ;battery_charger.c: 80: IminCount = 5;
 10858  0FE0  3005               	movlw	5
 10859  0FE1  00F0               	movwf	??_Battery_State_Machine
 10860  0FE2  0870               	movf	??_Battery_State_Machine,w
 10861  0FE3  0020               	movlb	0	; select bank0
 10862  0FE4  00ED               	movwf	_IminCount
 10863                           
 10864                           ;battery_charger.c: 81: if(Iflat_db) Iflat_db--;
 10865  0FE5  0021               	movlb	1	; select bank1
 10866  0FE6  0865               	movf	_Iflat_db^(0+128),w
 10867  0FE7  0466               	iorwf	(_Iflat_db+1)^(0+128),w
 10868  0FE8  1903               	btfsc	3,2
 10869  0FE9  0008               	return
 10870  0FEA  3001               	movlw	1
 10871  0FEB  02E5               	subwf	_Iflat_db^(0+128),f
 10872  0FEC  3000               	movlw	0
 10873  0FED  3BE6               	subwfb	(_Iflat_db+1)^(0+128),f
 10874                           
 10875                           ;battery_charger.c: 86: }
 10876                           ;battery_charger.c: 99: }
 10877                           
 10878                           ;battery_charger.c: 84: else
 10879                           ;battery_charger.c: 85: {
 10880                           
 10881                           ;battery_charger.c: 82: }
 10882                           ;battery_charger.c: 83: }
 10883  0FEE  0008               	return
 10884  0FEF                     l2196:	
 10885                           
 10886                           ;battery_charger.c: 100: else if(battery_state == FLOAT)
 10887  0FEF  3005               	movlw	5
 10888  0FF0  0020               	movlb	0	; select bank0
 10889  0FF1  066E               	xorwf	_battery_state,w
 10890  0FF2  1903               	btfsc	3,2
 10891  0FF3  0008               	return
 10892                           
 10893                           ;battery_charger.c: 121: if(battery_state == FAULT)
 10894                           
 10895                           ;battery_charger.c: 101: {
 10896                           ;battery_charger.c: 120: } else
 10897  0FF4  036E               	decf	_battery_state,w
 10898  0FF5  1D03               	btfss	3,2
 10899  0FF6  0008               	return
 10900                           
 10901                           ;battery_charger.c: 122: {
 10902                           ;battery_charger.c: 123: { Vref = 0; };
 10903  0FF7  01EB               	clrf	_Vref
 10904  0FF8  01EC               	clrf	_Vref+1
 10905                           
 10906                           ;battery_charger.c: 124: { Iref = 0; };
 10907  0FF9  0021               	movlb	1	; select bank1
 10908  0FFA  01DF               	clrf	_Iref^(0+128)
 10909  0FFB  01E0               	clrf	(_Iref+1)^(0+128)
 10910                           
 10911                           ;battery_charger.c: 125: { TRISA6 = 1; TRISA7 = 1; };
 10912  0FFC  0020               	movlb	0	; select bank0
 10913  0FFD  1711               	bsf	17,6	;volatile
 10914  0FFE  1791               	bsf	17,7	;volatile
 10915  0FFF  0008               	return
 10916  1000                     __end_of_Battery_State_Machine:	
 10917  007E                     btemp	set	126	;btemp
 10918  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    303
    Data        17
    BSS         81
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      80
    BANK1            80      0      71
    BANK2            48      0      16
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_calculateCurrent0
    _main->_calculateCurrent1
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   36592
                                             33 BANK0     22    22      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1816
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    4729
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    4729
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     464
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2333
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1932
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3529
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2650
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1748
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    6790
                                              8 BANK0     16    11      5
                            _ADCRead (ARG)
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1042
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    2014
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1046
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _ADCRead (ARG)
     _LCDWriteCharacter (ARG)
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv (ARG)
     ___lwmod (ARG)
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               30      0      10       9       33.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jun 23 19:16:14 2018

                                  _j 0067               LCDWriteInt@fieldLength 002A  
            __size_of_PWM_Initialize 0015                          __CFG_CP$OFF 0000  
                                 l60 0BFB                                   l57 0BF4  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                          __CFG_LVP$ON 0000  
                                l111 0F99                                  l411 05A6  
                                l195 0C80                                  l196 0C82  
                                l197 0C88                                  l198 0C98  
                                l518 0C22                        LCDClear@index 0079  
                                l199 0C8C                                  l573 002E  
                                l770 018E                                  l686 0F60  
                                l687 0F68                                  l679 0F4D  
                                _GIE 005F                                  _RB2 006A  
                       __CFG_CPD$OFF 0000                      __end_of_ADCRead 0C02  
                    _TMR2_Initialize 0BA7                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_LCDInit 0DE8  
                       ?_LCDWriteInt 0028                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 002A                         ___ftdiv@sign 002F  
                               l2010 0E9B                                 l2020 0EB6  
                               l2024 0EBE                                 l2016 0EAD  
                               l2008 0E8F                                 l2120 019F  
                               l2114 0185                                 l2106 016A  
                               l2132 0CF0                                 l2036 0C5F  
                               l2052 01D5                                 l2116 0191  
                               l2108 0178                                 l2300 00DD  
                               l2134 0CFC                                 l2142 0D11  
                               l2046 01BF                                 l2214 0D5B  
                               l2160 041C                                 l2320 0106  
                               l2304 00EF                                 l2400 04F6  
                               l2138 0D08                                 l2250 02A6  
                               l2074 022F                                 l2066 0216  
                               l2218 0D60                                 l2314 00FD  
                               l2306 00F1                                 l2260 02BC  
                               l2420 0569                                 l2404 04FF  
                               l2190 0FE0                                 l2174 0F9D  
                               l2254 02AA                                 l2238 0272  
                               l2342 0E46                                 l2326 011E  
                               l2422 056E                                 l2176 0FA8  
                               l2272 02F5                                 l2256 02AE  
                               l2248 0279                                 l2088 013A  
                               l2336 0E01                                 l2328 011F  
                               l2440 05BF                                 l2432 059D  
                               l2416 0556                                 l2266 02C0  
                               l2258 02B6                                 l2418 0563  
                               l2426 0584                                 l2188 0FD0  
                               l2196 0FEF                                 l2268 02E7  
                               l2540 07C8                                 l2460 05F2  
                               l2444 05C8                                 l2294 00C3  
                               l2470 0604                                 l2382 0467  
                               l1744 0C1B                                 l1760 0F23  
                               l2376 0461                                 l2466 05FE  
                               l1764 0F2A                                 l2388 0482  
                               l1862 0CA7                                 l1774 0F52  
                               l1766 0F34                                 l1776 0F5A  
                               l1768 0F39                                 l1962 004F  
                               l1954 003F                                 l1868 0CBB  
                               l1980 0096                                 l1972 007D  
                               l1964 005D                                 l1992 0E7C  
                               l1976 0088                                 l1998 0E87  
                               u2005 016B                                 u2105 0D09  
                               u2035 0186                                 u2205 0F8D  
                               u2125 0320                                 _LATA 0016  
                               _LATB 0017                                 u2135 0375  
                               _LATC 0018                                 u2145 03AE  
                               u2075 0CF3                                 u1515 0F2F  
                               u2155 03F8                                 u2340 025C  
                               u2245 0FBB                                 u2405 02D5  
                               u2325 0D6B                                 u2095 0D02  
                               u1535 0F48                                 u1465 0C23  
                               u1705 0052                                 u2185 0427  
                               u1650 0DAB                                 _T2PR 028D  
                               u1475 0C28                                 u2435 0C11  
                               u1635 0CA5                                 u1555 0F55  
                               u1805 0E92                                 u2445 0016  
                               u1645 0CB9                                 u1725 005E  
                               u2295 0D52                                 u1735 0072  
                               u2455 00B1                                 u1825 0E9C  
                               u1905 01E7                                 u2545 0DFB  
                               u1745 007E                                 u2465 00BD  
                               u2625 04E7                                 u1835 0EA6  
                               u1595 0F6F                                 u1915 01F7  
                               u2555 0E40                                 u2475 00CD  
                               u2715 05B0                                 u1845 0EAE  
                               u1925 0217                                 u2485 00D9  
                               u1935 0226                                 u2495 00E7  
                               u2655 0546                                 u1945 0230  
                               u2817 0110                                 u2665 0553  
                               u2827 0D30                                 u2675 0561  
                               u2837 0D3F                                 u2685 058E  
                               u1975 0141                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 00E1  
                               _Iref 00DF                                 _Iout 0063  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Vref 006B                                 _main 0443  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                      _state_counter 00E3                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 start 0002  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                   __end_of_LCDClear 0CC0                         ___fttol@exp1 003D  
                       ___fttol@lval 0039                         main@fastLoop 0049  
__size_of_Init_Battery_State_Machine 002A       __size_of_OSCILLATOR_Initialize 0009  
                   __end_of_LCDWrite 0C9A        __end_of_OSCILLATOR_Initialize 0B8F  
                    __end_of___aldiv 009F                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADPCH 009E                                _ADREF 009A  
                    __end_of___awdiv 0EC3                                _ADPRE 009C  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___ftdiv 0251                      ___awdiv@divisor 0070  
                    __end_of___fttol 01A8                                _T2CON 028E  
                              _T2HLT 028F                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 0D16  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013               ?_Battery_State_Machine 0070  
                              _cc_cv 006A                        ___awtoft@sign 007D  
                              _count 0061                                _fonts 0800  
                      ___ftpack@sign 0074                                main@j 0054  
                       main@slowLoop 004A                                status 0003  
                              wtemp0 007E                      __initialization 07CB  
                       __end_of_main 07CB                    readAnalog@channel 0026  
            __end_of_TMR2_Initialize 0BB5                            ??_ADCRead 0073  
                             ??_main 0041                        ___fttol@sign1 0038  
                          ??_LCDInit 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                   __end_of___awtoft 0C75                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                   __end_of___ftpack 0F7F                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                             _TRISA6 008E                               _TRISA7 008F  
                     __CFG_PWRTE$OFF 0000                               _Imode0 006F  
                       _CCPTMRS1bits 021F                            ??___aldiv 0078  
                             ___wmul 0C18                            ??___awdiv 0074  
                     __CFG_STVREN$ON 0000                       _PWM_Initialize 0BD8  
                          ??___ftdiv 0026                            ??___fttol 0034  
                          ??___lwmod 0074                               _gotoXY 0BC5  
                             _button 0069                     ___awdiv@quotient 0077  
                             _warmup 00DD                               _totals 00A0  
                       LCDWrite@data 0070                         LCDWriteInt@i 0037  
                       LCDWriteInt@j 0036             readAnalog@analog_channel 003A  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 0D16  
               __size_of_LCDWriteInt 00B9              __end_of__initialization 07FD  
                          ?_LCDWrite 0070                   ?_SYSTEM_Initialize 0070  
                         ___ftdiv@f1 0023                           ___ftdiv@f2 0020  
                         ___ftdiv@f3 002B                           ___awtoft@c 0078  
             __end_of_PWM_Initialize 0BED                           ___fttol@f1 0030  
                     __pcstackCOMMON 0070                         __pidataBANK0 0006  
                       __pidataBANK2 0BB5                  ??_SYSTEM_Initialize 007B  
                      __end_of_fonts 092F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 0D47          __size_of_PWM7_LoadDutyValue 0016  
                  LCDWriteInt@F14393 00D8                    _calculateCurrent0 0DE8  
                  _calculateCurrent1 0E2D            __end_of_SYSTEM_Initialize 0D47  
                         __pbssBANK0 0057                           __pbssBANK1 00A0  
                 ?_calculateCurrent0 0070                   ?_calculateCurrent1 0070  
                         ??_LCDClear 0078                           ??_LCDWrite 0071  
                ??_calculateCurrent0 003E                  ??_calculateCurrent1 003E  
                    ?_PWM_Initialize 0070                           __pmaintext 0443  
                            ?___wmul 0079                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 0C18                              ?_gotoXY 0075  
                            _ADCRead 0BED                            ?___awtoft 0078  
                          ?___ftpack 0070                              _ADSTPTH 0113  
                            _ADSTPTL 0112             __CFG_SCANE$not_available 0000  
                __CFG_RSTOSC$HFINT32 0000              __size_of_ADC_Initialize 001F  
            ??_Battery_State_Machine 0070                              _LCDInit 0DAD  
          __end_of_calculateCurrent0 0E2D            __end_of_calculateCurrent1 0E72  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _PWM6DCH 038D  
                            _PWM6DCL 038C                              _PWM7DCH 0391  
                            _PWM7DCL 0390                              _PWM6CON 038E  
                            _PWM7CON 0392                              _PPSLOCK 0E8F  
                     main@menuButton 0051                       main@dutyCycle6 0055  
                     main@dutyCycle7 0052                           _lastButton 0068  
                         _readAnalog 030A                              ___aldiv 001D  
                            ___awdiv 0E72                           _readButton 009F  
                            ___ftdiv 01A8                      __size_of___wmul 001E  
                            ___fttol 0121                              ___lwmod 0CEA  
                    __size_of_gotoXY 0013                           ??___awtoft 007B  
                         ??___ftpack 0075                              _analogs 00C0  
                            __ptext1 009F                              __ptext2 030A  
                            __ptext3 001D                              __ptext4 0BED  
                            __ptext5 0D47                              __ptext6 0E2D  
                            __ptext7 0DE8                              __ptext8 0121  
                            __ptext9 01A8                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 0B86                            _T2CONbits 028E  
                            _current 00D0                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074             ??_PIN_MANAGER_Initialize 0070  
                            _samples 20D0           __size_of_SYSTEM_Initialize 0031  
                            clrloop0 0B90                              _voltage 0057  
       ??_Init_Battery_State_Machine 0070                 end_of_initialization 07FD  
              LCDWriteCharacter@base 0026                              gotoXY@x 0077  
                            gotoXY@y 0075                              init_ram 0B9B  
                            initloop 0B9C                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 0EC3                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070           __size_of_calculateCurrent0 0045  
         __size_of_calculateCurrent1 0045                            _TRISAbits 0011  
                ??_LCDWriteCharacter 0022                     __CFG_FEXTOSC$OFF 0000  
                        ___ftdiv@exp 002E                  __size_of_cc_cv_mode 0031  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0025  
                  __size_of_LCDWrite 0025                          ?_readAnalog 0026  
          __end_of_LCDWriteCharacter 0F1B                          ?_readButton 0070  
                     __end_of___wmul 0C36                       _ADC_Initialize 0C36  
                     __end_of_gotoXY 0BD8               ?_OSCILLATOR_Initialize 0070  
                          _IminCount 006D                  start_initialization 07CB  
    __size_of_PIN_MANAGER_Initialize 0035                        ??_LCDWriteInt 002D  
                   ??_PWM_Initialize 0070                     __CFG_LPBOREN$OFF 0000  
                           ??___wmul 007D               __end_of_ADC_Initialize 0C55  
                        __pdataBANK0 006F                          __pdataBANK2 0120  
         __end_of_PWM7_LoadDutyValue 001D                             ??_gotoXY 0076  
                           ?_ADCRead 0070         PWM7_LoadDutyValue@dutyCycle7 0070  
                  __size_of___awtoft 0020                             ?_LCDInit 0070  
                  __size_of___ftpack 0064                          __pbssBIGRAM 20D0  
     __size_of_Battery_State_Machine 0081        __end_of_Battery_State_Machine 1000  
                          ___latbits 0002                        __pcstackBANK0 0020  
                 _PWM6_LoadDutyValue 0C02             __size_of_TMR2_Initialize 000E  
                      _battery_state 006E   __end_of_Init_Battery_State_Machine 0CEA  
         _Init_Battery_State_Machine 0CC0                  __size_of_readAnalog 0139  
                __size_of_readButton 0082                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 030A                            __pnvBANK0 006B  
                          __pnvBANK1 00DD                            _main$1022 004F  
                          _main$1023 004D               _PIN_MANAGER_Initialize 0D78  
         __size_of_LCDWriteCharacter 0058                             ?___aldiv 0070  
                           ?___awdiv 0070                             ?___ftdiv 0020  
                           ?___fttol 0030                     LCDWriteInt@value 0028  
                           ?___lwmod 0070                      ?_ADC_Initialize 0070  
               ??_PWM6_LoadDutyValue 0072                         ??_cc_cv_mode 0070  
                           _T2CLKCON 0290                             _LCDClear 0C9A  
                    ___aldiv@divisor 0070                      ___aldiv@counter 0020  
                     ___wmul@product 0020                             _LATAbits 0016  
                           _LCDWrite 0C75                            clear_ram0 0B8F  
                           _PIE0bits 0716                   __end_of_cc_cv_mode 0D78  
                           _PIR4bits 0710                     __size_of_ADCRead 0015  
                         _ADCON0bits 0093                    ___wmul@multiplier 0079  
                   __size_of_LCDInit 003B                          _LCDWriteInt 0251  
                           _Iflat_db 00E5                    ??_TMR2_Initialize 0070  
                    readAnalog@value 003C                     main@power0OutOld 0045  
                   main@power1OutOld 0047                         ??_readAnalog 0028  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 002B                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftdiv 00A9  
                   __size_of___fttol 0087                     __size_of___lwmod 002C  
                        _readButtons 005F                             ___awtoft 0C55  
                           ___ftpack 0F1B                             _channels 0120  
                           __ptext10 0C55                             __ptext11 0F1B  
                           __ptext20 0CC0                             __ptext12 0D16  
                           __ptext21 0C36                             __ptext13 0BA7  
                           __ptext30 0F7F                             __ptext22 0007  
                           __ptext14 0BD8                             __ptext23 0C02  
                           __ptext15 0D78                             __ptext24 0251  
                           __ptext16 0B86                             __ptext25 0CEA  
                           __ptext17 0DAD                             __ptext26 0E72  
                           __ptext18 0C9A                             __ptext27 0EC3  
                           __ptext19 0BC5                             __ptext28 0C18  
                           __ptext29 0C75                      LCDWriteInt@sign 002C  
                 __end_of_readAnalog 0443                   __end_of_readButton 0121  
                      __size_of_main 0388                 __CFG_WDTCWS$WDTCWS_7 0000  
        PIN_MANAGER_Initialize@state 0070                          _sampleIndex 0065  
                 _PWM7_LoadDutyValue 0007          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0031  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                 ??_PWM7_LoadDutyValue 0072  
                    ___lwmod@divisor 0070                      ___lwmod@counter 0075  
                       ___aldiv@sign 0021                _Battery_State_Machine 0F7F  
     __end_of_PIN_MANAGER_Initialize 0DAD                         main@VIn0_Old 0043  
                       main@VIn1_Old 004B  
