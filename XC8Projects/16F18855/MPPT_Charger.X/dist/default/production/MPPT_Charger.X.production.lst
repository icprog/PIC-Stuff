

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jun 24 02:36:53 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x620,48
    50                           	dabs	1,0x5A0,80
    51                           	dabs	1,0x520,80
    52                           	dabs	1,0x4A0,80
    53                           	dabs	1,0x420,80
    54                           	dabs	1,0x3A0,80
    55                           	dabs	1,0x320,80
    56                           	dabs	1,0x2A0,80
    57                           	dabs	1,0x220,80
    58                           	dabs	1,0x1A0,80
    59                           	dabs	1,0x150,32
    60                           	dabs	1,0x20D0,0,_samples
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 1.45
    64                           ; Generated 16/11/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F18855 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  001C                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0110                     	;# 
   152  0110                     	;# 
   153  0111                     	;# 
   154  0112                     	;# 
   155  0112                     	;# 
   156  0113                     	;# 
   157  0114                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0119                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  011A                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011B                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011C                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011D                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011E                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011F                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  018E                     	;# 
   191  018F                     	;# 
   192  0190                     	;# 
   193  0191                     	;# 
   194  0192                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0198                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019C                     	;# 
   202  020C                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  020E                     	;# 
   206  020F                     	;# 
   207  020F                     	;# 
   208  0210                     	;# 
   209  0210                     	;# 
   210  0211                     	;# 
   211  0211                     	;# 
   212  0212                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  0218                     	;# 
   223  0218                     	;# 
   224  0219                     	;# 
   225  021A                     	;# 
   226  021B                     	;# 
   227  021B                     	;# 
   228  021C                     	;# 
   229  021C                     	;# 
   230  021D                     	;# 
   231  021D                     	;# 
   232  021E                     	;# 
   233  021F                     	;# 
   234  028C                     	;# 
   235  028C                     	;# 
   236  028D                     	;# 
   237  028D                     	;# 
   238  028E                     	;# 
   239  028F                     	;# 
   240  0290                     	;# 
   241  0290                     	;# 
   242  0291                     	;# 
   243  0292                     	;# 
   244  0292                     	;# 
   245  0293                     	;# 
   246  0293                     	;# 
   247  0294                     	;# 
   248  0295                     	;# 
   249  0296                     	;# 
   250  0296                     	;# 
   251  0297                     	;# 
   252  0298                     	;# 
   253  0298                     	;# 
   254  0299                     	;# 
   255  0299                     	;# 
   256  029A                     	;# 
   257  029B                     	;# 
   258  029C                     	;# 
   259  029C                     	;# 
   260  029D                     	;# 
   261  030C                     	;# 
   262  030C                     	;# 
   263  030D                     	;# 
   264  030E                     	;# 
   265  030F                     	;# 
   266  0310                     	;# 
   267  0310                     	;# 
   268  0311                     	;# 
   269  0312                     	;# 
   270  0313                     	;# 
   271  0314                     	;# 
   272  0314                     	;# 
   273  0315                     	;# 
   274  0316                     	;# 
   275  0317                     	;# 
   276  0318                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031A                     	;# 
   280  031B                     	;# 
   281  031C                     	;# 
   282  031C                     	;# 
   283  031D                     	;# 
   284  031E                     	;# 
   285  031F                     	;# 
   286  038C                     	;# 
   287  038D                     	;# 
   288  038E                     	;# 
   289  0390                     	;# 
   290  0391                     	;# 
   291  0392                     	;# 
   292  040C                     	;# 
   293  040D                     	;# 
   294  040E                     	;# 
   295  040F                     	;# 
   296  0410                     	;# 
   297  0411                     	;# 
   298  0416                     	;# 
   299  0416                     	;# 
   300  0417                     	;# 
   301  0418                     	;# 
   302  0418                     	;# 
   303  0419                     	;# 
   304  041A                     	;# 
   305  041A                     	;# 
   306  041B                     	;# 
   307  041C                     	;# 
   308  041C                     	;# 
   309  041D                     	;# 
   310  041E                     	;# 
   311  041F                     	;# 
   312  048C                     	;# 
   313  048C                     	;# 
   314  048D                     	;# 
   315  048E                     	;# 
   316  048F                     	;# 
   317  048F                     	;# 
   318  0490                     	;# 
   319  0491                     	;# 
   320  0492                     	;# 
   321  0492                     	;# 
   322  0493                     	;# 
   323  0494                     	;# 
   324  0495                     	;# 
   325  0495                     	;# 
   326  0496                     	;# 
   327  0497                     	;# 
   328  0498                     	;# 
   329  0499                     	;# 
   330  049A                     	;# 
   331  049B                     	;# 
   332  049C                     	;# 
   333  049D                     	;# 
   334  050C                     	;# 
   335  050C                     	;# 
   336  050D                     	;# 
   337  050E                     	;# 
   338  050F                     	;# 
   339  050F                     	;# 
   340  0510                     	;# 
   341  0511                     	;# 
   342  0512                     	;# 
   343  0512                     	;# 
   344  0513                     	;# 
   345  0514                     	;# 
   346  0515                     	;# 
   347  0515                     	;# 
   348  0516                     	;# 
   349  0517                     	;# 
   350  0518                     	;# 
   351  0519                     	;# 
   352  051A                     	;# 
   353  051B                     	;# 
   354  051C                     	;# 
   355  051D                     	;# 
   356  058C                     	;# 
   357  058C                     	;# 
   358  058D                     	;# 
   359  058E                     	;# 
   360  058F                     	;# 
   361  058F                     	;# 
   362  0590                     	;# 
   363  0591                     	;# 
   364  0592                     	;# 
   365  0593                     	;# 
   366  060C                     	;# 
   367  060D                     	;# 
   368  060E                     	;# 
   369  060F                     	;# 
   370  0610                     	;# 
   371  0611                     	;# 
   372  0612                     	;# 
   373  0613                     	;# 
   374  0614                     	;# 
   375  0616                     	;# 
   376  0617                     	;# 
   377  0618                     	;# 
   378  0619                     	;# 
   379  061A                     	;# 
   380  061B                     	;# 
   381  061C                     	;# 
   382  061D                     	;# 
   383  061E                     	;# 
   384  068C                     	;# 
   385  068D                     	;# 
   386  068E                     	;# 
   387  068F                     	;# 
   388  0690                     	;# 
   389  0691                     	;# 
   390  0692                     	;# 
   391  0693                     	;# 
   392  0694                     	;# 
   393  070C                     	;# 
   394  070D                     	;# 
   395  070E                     	;# 
   396  070F                     	;# 
   397  0710                     	;# 
   398  0711                     	;# 
   399  0712                     	;# 
   400  0713                     	;# 
   401  0714                     	;# 
   402  0716                     	;# 
   403  0717                     	;# 
   404  0718                     	;# 
   405  0719                     	;# 
   406  071A                     	;# 
   407  071B                     	;# 
   408  071C                     	;# 
   409  071D                     	;# 
   410  071E                     	;# 
   411  0796                     	;# 
   412  0797                     	;# 
   413  0798                     	;# 
   414  0799                     	;# 
   415  079A                     	;# 
   416  079B                     	;# 
   417  080C                     	;# 
   418  080D                     	;# 
   419  080E                     	;# 
   420  080F                     	;# 
   421  0810                     	;# 
   422  0811                     	;# 
   423  0812                     	;# 
   424  0813                     	;# 
   425  0814                     	;# 
   426  081A                     	;# 
   427  081B                     	;# 
   428  081C                     	;# 
   429  081D                     	;# 
   430  081E                     	;# 
   431  081F                     	;# 
   432  088C                     	;# 
   433  088D                     	;# 
   434  088E                     	;# 
   435  088F                     	;# 
   436  0890                     	;# 
   437  0891                     	;# 
   438  0892                     	;# 
   439  0893                     	;# 
   440  0895                     	;# 
   441  0896                     	;# 
   442  0897                     	;# 
   443  0898                     	;# 
   444  0899                     	;# 
   445  089A                     	;# 
   446  089B                     	;# 
   447  090C                     	;# 
   448  090E                     	;# 
   449  090F                     	;# 
   450  091F                     	;# 
   451  091F                     	;# 
   452  098F                     	;# 
   453  098F                     	;# 
   454  0990                     	;# 
   455  0991                     	;# 
   456  0992                     	;# 
   457  0993                     	;# 
   458  0994                     	;# 
   459  0995                     	;# 
   460  0996                     	;# 
   461  0997                     	;# 
   462  0E0F                     	;# 
   463  0E10                     	;# 
   464  0E11                     	;# 
   465  0E12                     	;# 
   466  0E13                     	;# 
   467  0E14                     	;# 
   468  0E15                     	;# 
   469  0E16                     	;# 
   470  0E17                     	;# 
   471  0E18                     	;# 
   472  0E19                     	;# 
   473  0E1A                     	;# 
   474  0E1B                     	;# 
   475  0E1C                     	;# 
   476  0E1D                     	;# 
   477  0E1E                     	;# 
   478  0E1F                     	;# 
   479  0E20                     	;# 
   480  0E21                     	;# 
   481  0E22                     	;# 
   482  0E23                     	;# 
   483  0E24                     	;# 
   484  0E25                     	;# 
   485  0E26                     	;# 
   486  0E27                     	;# 
   487  0E28                     	;# 
   488  0E29                     	;# 
   489  0E2A                     	;# 
   490  0E2B                     	;# 
   491  0E2C                     	;# 
   492  0E2D                     	;# 
   493  0E2E                     	;# 
   494  0E2F                     	;# 
   495  0E30                     	;# 
   496  0E31                     	;# 
   497  0E32                     	;# 
   498  0E33                     	;# 
   499  0E34                     	;# 
   500  0E35                     	;# 
   501  0E36                     	;# 
   502  0E37                     	;# 
   503  0E8F                     	;# 
   504  0E90                     	;# 
   505  0E91                     	;# 
   506  0E92                     	;# 
   507  0E93                     	;# 
   508  0E94                     	;# 
   509  0E95                     	;# 
   510  0E96                     	;# 
   511  0E97                     	;# 
   512  0E9C                     	;# 
   513  0E9D                     	;# 
   514  0E9E                     	;# 
   515  0EA1                     	;# 
   516  0EA2                     	;# 
   517  0EA3                     	;# 
   518  0EA4                     	;# 
   519  0EA5                     	;# 
   520  0EA9                     	;# 
   521  0EAA                     	;# 
   522  0EAB                     	;# 
   523  0EAC                     	;# 
   524  0EB1                     	;# 
   525  0EB2                     	;# 
   526  0EB3                     	;# 
   527  0EB8                     	;# 
   528  0EB9                     	;# 
   529  0EBA                     	;# 
   530  0EBB                     	;# 
   531  0EBC                     	;# 
   532  0EBD                     	;# 
   533  0EBE                     	;# 
   534  0EC3                     	;# 
   535  0EC5                     	;# 
   536  0EC6                     	;# 
   537  0EC7                     	;# 
   538  0EC8                     	;# 
   539  0EC9                     	;# 
   540  0ECA                     	;# 
   541  0ECB                     	;# 
   542  0ECC                     	;# 
   543  0F10                     	;# 
   544  0F11                     	;# 
   545  0F12                     	;# 
   546  0F13                     	;# 
   547  0F14                     	;# 
   548  0F15                     	;# 
   549  0F16                     	;# 
   550  0F17                     	;# 
   551  0F18                     	;# 
   552  0F19                     	;# 
   553  0F1A                     	;# 
   554  0F1B                     	;# 
   555  0F1C                     	;# 
   556  0F1D                     	;# 
   557  0F1E                     	;# 
   558  0F1F                     	;# 
   559  0F20                     	;# 
   560  0F21                     	;# 
   561  0F22                     	;# 
   562  0F23                     	;# 
   563  0F24                     	;# 
   564  0F25                     	;# 
   565  0F26                     	;# 
   566  0F27                     	;# 
   567  0F38                     	;# 
   568  0F39                     	;# 
   569  0F3A                     	;# 
   570  0F3B                     	;# 
   571  0F3C                     	;# 
   572  0F3D                     	;# 
   573  0F3E                     	;# 
   574  0F3F                     	;# 
   575  0F40                     	;# 
   576  0F41                     	;# 
   577  0F43                     	;# 
   578  0F44                     	;# 
   579  0F45                     	;# 
   580  0F46                     	;# 
   581  0F47                     	;# 
   582  0F48                     	;# 
   583  0F49                     	;# 
   584  0F4A                     	;# 
   585  0F4B                     	;# 
   586  0F4C                     	;# 
   587  0F4E                     	;# 
   588  0F4F                     	;# 
   589  0F50                     	;# 
   590  0F51                     	;# 
   591  0F52                     	;# 
   592  0F53                     	;# 
   593  0F54                     	;# 
   594  0F55                     	;# 
   595  0F56                     	;# 
   596  0F57                     	;# 
   597  0F65                     	;# 
   598  0F68                     	;# 
   599  0F69                     	;# 
   600  0F6A                     	;# 
   601  0F6B                     	;# 
   602  0FE4                     	;# 
   603  0FE5                     	;# 
   604  0FE6                     	;# 
   605  0FE7                     	;# 
   606  0FE8                     	;# 
   607  0FE9                     	;# 
   608  0FEA                     	;# 
   609  0FEB                     	;# 
   610  0FED                     	;# 
   611  0FEE                     	;# 
   612  0FEF                     	;# 
   613  0000                     	;# 
   614  0001                     	;# 
   615  0002                     	;# 
   616  0003                     	;# 
   617  0004                     	;# 
   618  0005                     	;# 
   619  0006                     	;# 
   620  0007                     	;# 
   621  0008                     	;# 
   622  0009                     	;# 
   623  000A                     	;# 
   624  000B                     	;# 
   625  000C                     	;# 
   626  000D                     	;# 
   627  000E                     	;# 
   628  0010                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0013                     	;# 
   632  0016                     	;# 
   633  0017                     	;# 
   634  0018                     	;# 
   635  001C                     	;# 
   636  001C                     	;# 
   637  001D                     	;# 
   638  001D                     	;# 
   639  001E                     	;# 
   640  001F                     	;# 
   641  008C                     	;# 
   642  008C                     	;# 
   643  008D                     	;# 
   644  008E                     	;# 
   645  008E                     	;# 
   646  008F                     	;# 
   647  0090                     	;# 
   648  0090                     	;# 
   649  0091                     	;# 
   650  0093                     	;# 
   651  0094                     	;# 
   652  0095                     	;# 
   653  0096                     	;# 
   654  0097                     	;# 
   655  0098                     	;# 
   656  0099                     	;# 
   657  009A                     	;# 
   658  009B                     	;# 
   659  009C                     	;# 
   660  009D                     	;# 
   661  009E                     	;# 
   662  010C                     	;# 
   663  010D                     	;# 
   664  010E                     	;# 
   665  010E                     	;# 
   666  010F                     	;# 
   667  0110                     	;# 
   668  0110                     	;# 
   669  0111                     	;# 
   670  0112                     	;# 
   671  0112                     	;# 
   672  0113                     	;# 
   673  0114                     	;# 
   674  0114                     	;# 
   675  0115                     	;# 
   676  0116                     	;# 
   677  0116                     	;# 
   678  0117                     	;# 
   679  0119                     	;# 
   680  0119                     	;# 
   681  0119                     	;# 
   682  011A                     	;# 
   683  011A                     	;# 
   684  011A                     	;# 
   685  011B                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011C                     	;# 
   691  011C                     	;# 
   692  011C                     	;# 
   693  011D                     	;# 
   694  011D                     	;# 
   695  011D                     	;# 
   696  011E                     	;# 
   697  011E                     	;# 
   698  011E                     	;# 
   699  011F                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  018C                     	;# 
   705  018D                     	;# 
   706  018E                     	;# 
   707  018F                     	;# 
   708  0190                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0196                     	;# 
   712  0197                     	;# 
   713  0198                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019B                     	;# 
   717  019C                     	;# 
   718  020C                     	;# 
   719  020C                     	;# 
   720  020D                     	;# 
   721  020E                     	;# 
   722  020F                     	;# 
   723  020F                     	;# 
   724  0210                     	;# 
   725  0210                     	;# 
   726  0211                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0216                     	;# 
   735  0216                     	;# 
   736  0217                     	;# 
   737  0217                     	;# 
   738  0218                     	;# 
   739  0218                     	;# 
   740  0219                     	;# 
   741  021A                     	;# 
   742  021B                     	;# 
   743  021B                     	;# 
   744  021C                     	;# 
   745  021C                     	;# 
   746  021D                     	;# 
   747  021D                     	;# 
   748  021E                     	;# 
   749  021F                     	;# 
   750  028C                     	;# 
   751  028C                     	;# 
   752  028D                     	;# 
   753  028D                     	;# 
   754  028E                     	;# 
   755  028F                     	;# 
   756  0290                     	;# 
   757  0290                     	;# 
   758  0291                     	;# 
   759  0292                     	;# 
   760  0292                     	;# 
   761  0293                     	;# 
   762  0293                     	;# 
   763  0294                     	;# 
   764  0295                     	;# 
   765  0296                     	;# 
   766  0296                     	;# 
   767  0297                     	;# 
   768  0298                     	;# 
   769  0298                     	;# 
   770  0299                     	;# 
   771  0299                     	;# 
   772  029A                     	;# 
   773  029B                     	;# 
   774  029C                     	;# 
   775  029C                     	;# 
   776  029D                     	;# 
   777  030C                     	;# 
   778  030C                     	;# 
   779  030D                     	;# 
   780  030E                     	;# 
   781  030F                     	;# 
   782  0310                     	;# 
   783  0310                     	;# 
   784  0311                     	;# 
   785  0312                     	;# 
   786  0313                     	;# 
   787  0314                     	;# 
   788  0314                     	;# 
   789  0315                     	;# 
   790  0316                     	;# 
   791  0317                     	;# 
   792  0318                     	;# 
   793  0318                     	;# 
   794  0319                     	;# 
   795  031A                     	;# 
   796  031B                     	;# 
   797  031C                     	;# 
   798  031C                     	;# 
   799  031D                     	;# 
   800  031E                     	;# 
   801  031F                     	;# 
   802  038C                     	;# 
   803  038D                     	;# 
   804  038E                     	;# 
   805  0390                     	;# 
   806  0391                     	;# 
   807  0392                     	;# 
   808  040C                     	;# 
   809  040D                     	;# 
   810  040E                     	;# 
   811  040F                     	;# 
   812  0410                     	;# 
   813  0411                     	;# 
   814  0416                     	;# 
   815  0416                     	;# 
   816  0417                     	;# 
   817  0418                     	;# 
   818  0418                     	;# 
   819  0419                     	;# 
   820  041A                     	;# 
   821  041A                     	;# 
   822  041B                     	;# 
   823  041C                     	;# 
   824  041C                     	;# 
   825  041D                     	;# 
   826  041E                     	;# 
   827  041F                     	;# 
   828  048C                     	;# 
   829  048C                     	;# 
   830  048D                     	;# 
   831  048E                     	;# 
   832  048F                     	;# 
   833  048F                     	;# 
   834  0490                     	;# 
   835  0491                     	;# 
   836  0492                     	;# 
   837  0492                     	;# 
   838  0493                     	;# 
   839  0494                     	;# 
   840  0495                     	;# 
   841  0495                     	;# 
   842  0496                     	;# 
   843  0497                     	;# 
   844  0498                     	;# 
   845  0499                     	;# 
   846  049A                     	;# 
   847  049B                     	;# 
   848  049C                     	;# 
   849  049D                     	;# 
   850  050C                     	;# 
   851  050C                     	;# 
   852  050D                     	;# 
   853  050E                     	;# 
   854  050F                     	;# 
   855  050F                     	;# 
   856  0510                     	;# 
   857  0511                     	;# 
   858  0512                     	;# 
   859  0512                     	;# 
   860  0513                     	;# 
   861  0514                     	;# 
   862  0515                     	;# 
   863  0515                     	;# 
   864  0516                     	;# 
   865  0517                     	;# 
   866  0518                     	;# 
   867  0519                     	;# 
   868  051A                     	;# 
   869  051B                     	;# 
   870  051C                     	;# 
   871  051D                     	;# 
   872  058C                     	;# 
   873  058C                     	;# 
   874  058D                     	;# 
   875  058E                     	;# 
   876  058F                     	;# 
   877  058F                     	;# 
   878  0590                     	;# 
   879  0591                     	;# 
   880  0592                     	;# 
   881  0593                     	;# 
   882  060C                     	;# 
   883  060D                     	;# 
   884  060E                     	;# 
   885  060F                     	;# 
   886  0610                     	;# 
   887  0611                     	;# 
   888  0612                     	;# 
   889  0613                     	;# 
   890  0614                     	;# 
   891  0616                     	;# 
   892  0617                     	;# 
   893  0618                     	;# 
   894  0619                     	;# 
   895  061A                     	;# 
   896  061B                     	;# 
   897  061C                     	;# 
   898  061D                     	;# 
   899  061E                     	;# 
   900  068C                     	;# 
   901  068D                     	;# 
   902  068E                     	;# 
   903  068F                     	;# 
   904  0690                     	;# 
   905  0691                     	;# 
   906  0692                     	;# 
   907  0693                     	;# 
   908  0694                     	;# 
   909  070C                     	;# 
   910  070D                     	;# 
   911  070E                     	;# 
   912  070F                     	;# 
   913  0710                     	;# 
   914  0711                     	;# 
   915  0712                     	;# 
   916  0713                     	;# 
   917  0714                     	;# 
   918  0716                     	;# 
   919  0717                     	;# 
   920  0718                     	;# 
   921  0719                     	;# 
   922  071A                     	;# 
   923  071B                     	;# 
   924  071C                     	;# 
   925  071D                     	;# 
   926  071E                     	;# 
   927  0796                     	;# 
   928  0797                     	;# 
   929  0798                     	;# 
   930  0799                     	;# 
   931  079A                     	;# 
   932  079B                     	;# 
   933  080C                     	;# 
   934  080D                     	;# 
   935  080E                     	;# 
   936  080F                     	;# 
   937  0810                     	;# 
   938  0811                     	;# 
   939  0812                     	;# 
   940  0813                     	;# 
   941  0814                     	;# 
   942  081A                     	;# 
   943  081B                     	;# 
   944  081C                     	;# 
   945  081D                     	;# 
   946  081E                     	;# 
   947  081F                     	;# 
   948  088C                     	;# 
   949  088D                     	;# 
   950  088E                     	;# 
   951  088F                     	;# 
   952  0890                     	;# 
   953  0891                     	;# 
   954  0892                     	;# 
   955  0893                     	;# 
   956  0895                     	;# 
   957  0896                     	;# 
   958  0897                     	;# 
   959  0898                     	;# 
   960  0899                     	;# 
   961  089A                     	;# 
   962  089B                     	;# 
   963  090C                     	;# 
   964  090E                     	;# 
   965  090F                     	;# 
   966  091F                     	;# 
   967  091F                     	;# 
   968  098F                     	;# 
   969  098F                     	;# 
   970  0990                     	;# 
   971  0991                     	;# 
   972  0992                     	;# 
   973  0993                     	;# 
   974  0994                     	;# 
   975  0995                     	;# 
   976  0996                     	;# 
   977  0997                     	;# 
   978  0E0F                     	;# 
   979  0E10                     	;# 
   980  0E11                     	;# 
   981  0E12                     	;# 
   982  0E13                     	;# 
   983  0E14                     	;# 
   984  0E15                     	;# 
   985  0E16                     	;# 
   986  0E17                     	;# 
   987  0E18                     	;# 
   988  0E19                     	;# 
   989  0E1A                     	;# 
   990  0E1B                     	;# 
   991  0E1C                     	;# 
   992  0E1D                     	;# 
   993  0E1E                     	;# 
   994  0E1F                     	;# 
   995  0E20                     	;# 
   996  0E21                     	;# 
   997  0E22                     	;# 
   998  0E23                     	;# 
   999  0E24                     	;# 
  1000  0E25                     	;# 
  1001  0E26                     	;# 
  1002  0E27                     	;# 
  1003  0E28                     	;# 
  1004  0E29                     	;# 
  1005  0E2A                     	;# 
  1006  0E2B                     	;# 
  1007  0E2C                     	;# 
  1008  0E2D                     	;# 
  1009  0E2E                     	;# 
  1010  0E2F                     	;# 
  1011  0E30                     	;# 
  1012  0E31                     	;# 
  1013  0E32                     	;# 
  1014  0E33                     	;# 
  1015  0E34                     	;# 
  1016  0E35                     	;# 
  1017  0E36                     	;# 
  1018  0E37                     	;# 
  1019  0E8F                     	;# 
  1020  0E90                     	;# 
  1021  0E91                     	;# 
  1022  0E92                     	;# 
  1023  0E93                     	;# 
  1024  0E94                     	;# 
  1025  0E95                     	;# 
  1026  0E96                     	;# 
  1027  0E97                     	;# 
  1028  0E9C                     	;# 
  1029  0E9D                     	;# 
  1030  0E9E                     	;# 
  1031  0EA1                     	;# 
  1032  0EA2                     	;# 
  1033  0EA3                     	;# 
  1034  0EA4                     	;# 
  1035  0EA5                     	;# 
  1036  0EA9                     	;# 
  1037  0EAA                     	;# 
  1038  0EAB                     	;# 
  1039  0EAC                     	;# 
  1040  0EB1                     	;# 
  1041  0EB2                     	;# 
  1042  0EB3                     	;# 
  1043  0EB8                     	;# 
  1044  0EB9                     	;# 
  1045  0EBA                     	;# 
  1046  0EBB                     	;# 
  1047  0EBC                     	;# 
  1048  0EBD                     	;# 
  1049  0EBE                     	;# 
  1050  0EC3                     	;# 
  1051  0EC5                     	;# 
  1052  0EC6                     	;# 
  1053  0EC7                     	;# 
  1054  0EC8                     	;# 
  1055  0EC9                     	;# 
  1056  0ECA                     	;# 
  1057  0ECB                     	;# 
  1058  0ECC                     	;# 
  1059  0F10                     	;# 
  1060  0F11                     	;# 
  1061  0F12                     	;# 
  1062  0F13                     	;# 
  1063  0F14                     	;# 
  1064  0F15                     	;# 
  1065  0F16                     	;# 
  1066  0F17                     	;# 
  1067  0F18                     	;# 
  1068  0F19                     	;# 
  1069  0F1A                     	;# 
  1070  0F1B                     	;# 
  1071  0F1C                     	;# 
  1072  0F1D                     	;# 
  1073  0F1E                     	;# 
  1074  0F1F                     	;# 
  1075  0F20                     	;# 
  1076  0F21                     	;# 
  1077  0F22                     	;# 
  1078  0F23                     	;# 
  1079  0F24                     	;# 
  1080  0F25                     	;# 
  1081  0F26                     	;# 
  1082  0F27                     	;# 
  1083  0F38                     	;# 
  1084  0F39                     	;# 
  1085  0F3A                     	;# 
  1086  0F3B                     	;# 
  1087  0F3C                     	;# 
  1088  0F3D                     	;# 
  1089  0F3E                     	;# 
  1090  0F3F                     	;# 
  1091  0F40                     	;# 
  1092  0F41                     	;# 
  1093  0F43                     	;# 
  1094  0F44                     	;# 
  1095  0F45                     	;# 
  1096  0F46                     	;# 
  1097  0F47                     	;# 
  1098  0F48                     	;# 
  1099  0F49                     	;# 
  1100  0F4A                     	;# 
  1101  0F4B                     	;# 
  1102  0F4C                     	;# 
  1103  0F4E                     	;# 
  1104  0F4F                     	;# 
  1105  0F50                     	;# 
  1106  0F51                     	;# 
  1107  0F52                     	;# 
  1108  0F53                     	;# 
  1109  0F54                     	;# 
  1110  0F55                     	;# 
  1111  0F56                     	;# 
  1112  0F57                     	;# 
  1113  0F65                     	;# 
  1114  0F68                     	;# 
  1115  0F69                     	;# 
  1116  0F6A                     	;# 
  1117  0F6B                     	;# 
  1118  0FE4                     	;# 
  1119  0FE5                     	;# 
  1120  0FE6                     	;# 
  1121  0FE7                     	;# 
  1122  0FE8                     	;# 
  1123  0FE9                     	;# 
  1124  0FEA                     	;# 
  1125  0FEB                     	;# 
  1126  0FED                     	;# 
  1127  0FEE                     	;# 
  1128  0FEF                     	;# 
  1129  0000                     	;# 
  1130  0001                     	;# 
  1131  0002                     	;# 
  1132  0003                     	;# 
  1133  0004                     	;# 
  1134  0005                     	;# 
  1135  0006                     	;# 
  1136  0007                     	;# 
  1137  0008                     	;# 
  1138  0009                     	;# 
  1139  000A                     	;# 
  1140  000B                     	;# 
  1141  000C                     	;# 
  1142  000D                     	;# 
  1143  000E                     	;# 
  1144  0010                     	;# 
  1145  0011                     	;# 
  1146  0012                     	;# 
  1147  0013                     	;# 
  1148  0016                     	;# 
  1149  0017                     	;# 
  1150  0018                     	;# 
  1151  001C                     	;# 
  1152  001C                     	;# 
  1153  001D                     	;# 
  1154  001D                     	;# 
  1155  001E                     	;# 
  1156  001F                     	;# 
  1157  008C                     	;# 
  1158  008C                     	;# 
  1159  008D                     	;# 
  1160  008E                     	;# 
  1161  008E                     	;# 
  1162  008F                     	;# 
  1163  0090                     	;# 
  1164  0090                     	;# 
  1165  0091                     	;# 
  1166  0093                     	;# 
  1167  0094                     	;# 
  1168  0095                     	;# 
  1169  0096                     	;# 
  1170  0097                     	;# 
  1171  0098                     	;# 
  1172  0099                     	;# 
  1173  009A                     	;# 
  1174  009B                     	;# 
  1175  009C                     	;# 
  1176  009D                     	;# 
  1177  009E                     	;# 
  1178  010C                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  010E                     	;# 
  1182  010F                     	;# 
  1183  0110                     	;# 
  1184  0110                     	;# 
  1185  0111                     	;# 
  1186  0112                     	;# 
  1187  0112                     	;# 
  1188  0113                     	;# 
  1189  0114                     	;# 
  1190  0114                     	;# 
  1191  0115                     	;# 
  1192  0116                     	;# 
  1193  0116                     	;# 
  1194  0117                     	;# 
  1195  0119                     	;# 
  1196  0119                     	;# 
  1197  0119                     	;# 
  1198  011A                     	;# 
  1199  011A                     	;# 
  1200  011A                     	;# 
  1201  011B                     	;# 
  1202  011B                     	;# 
  1203  011B                     	;# 
  1204  011B                     	;# 
  1205  011B                     	;# 
  1206  011C                     	;# 
  1207  011C                     	;# 
  1208  011C                     	;# 
  1209  011D                     	;# 
  1210  011D                     	;# 
  1211  011D                     	;# 
  1212  011E                     	;# 
  1213  011E                     	;# 
  1214  011E                     	;# 
  1215  011F                     	;# 
  1216  011F                     	;# 
  1217  011F                     	;# 
  1218  011F                     	;# 
  1219  011F                     	;# 
  1220  018C                     	;# 
  1221  018D                     	;# 
  1222  018E                     	;# 
  1223  018F                     	;# 
  1224  0190                     	;# 
  1225  0191                     	;# 
  1226  0192                     	;# 
  1227  0196                     	;# 
  1228  0197                     	;# 
  1229  0198                     	;# 
  1230  0199                     	;# 
  1231  019A                     	;# 
  1232  019B                     	;# 
  1233  019C                     	;# 
  1234  020C                     	;# 
  1235  020C                     	;# 
  1236  020D                     	;# 
  1237  020E                     	;# 
  1238  020F                     	;# 
  1239  020F                     	;# 
  1240  0210                     	;# 
  1241  0210                     	;# 
  1242  0211                     	;# 
  1243  0211                     	;# 
  1244  0212                     	;# 
  1245  0212                     	;# 
  1246  0213                     	;# 
  1247  0214                     	;# 
  1248  0215                     	;# 
  1249  0215                     	;# 
  1250  0216                     	;# 
  1251  0216                     	;# 
  1252  0217                     	;# 
  1253  0217                     	;# 
  1254  0218                     	;# 
  1255  0218                     	;# 
  1256  0219                     	;# 
  1257  021A                     	;# 
  1258  021B                     	;# 
  1259  021B                     	;# 
  1260  021C                     	;# 
  1261  021C                     	;# 
  1262  021D                     	;# 
  1263  021D                     	;# 
  1264  021E                     	;# 
  1265  021F                     	;# 
  1266  028C                     	;# 
  1267  028C                     	;# 
  1268  028D                     	;# 
  1269  028D                     	;# 
  1270  028E                     	;# 
  1271  028F                     	;# 
  1272  0290                     	;# 
  1273  0290                     	;# 
  1274  0291                     	;# 
  1275  0292                     	;# 
  1276  0292                     	;# 
  1277  0293                     	;# 
  1278  0293                     	;# 
  1279  0294                     	;# 
  1280  0295                     	;# 
  1281  0296                     	;# 
  1282  0296                     	;# 
  1283  0297                     	;# 
  1284  0298                     	;# 
  1285  0298                     	;# 
  1286  0299                     	;# 
  1287  0299                     	;# 
  1288  029A                     	;# 
  1289  029B                     	;# 
  1290  029C                     	;# 
  1291  029C                     	;# 
  1292  029D                     	;# 
  1293  030C                     	;# 
  1294  030C                     	;# 
  1295  030D                     	;# 
  1296  030E                     	;# 
  1297  030F                     	;# 
  1298  0310                     	;# 
  1299  0310                     	;# 
  1300  0311                     	;# 
  1301  0312                     	;# 
  1302  0313                     	;# 
  1303  0314                     	;# 
  1304  0314                     	;# 
  1305  0315                     	;# 
  1306  0316                     	;# 
  1307  0317                     	;# 
  1308  0318                     	;# 
  1309  0318                     	;# 
  1310  0319                     	;# 
  1311  031A                     	;# 
  1312  031B                     	;# 
  1313  031C                     	;# 
  1314  031C                     	;# 
  1315  031D                     	;# 
  1316  031E                     	;# 
  1317  031F                     	;# 
  1318  038C                     	;# 
  1319  038D                     	;# 
  1320  038E                     	;# 
  1321  0390                     	;# 
  1322  0391                     	;# 
  1323  0392                     	;# 
  1324  040C                     	;# 
  1325  040D                     	;# 
  1326  040E                     	;# 
  1327  040F                     	;# 
  1328  0410                     	;# 
  1329  0411                     	;# 
  1330  0416                     	;# 
  1331  0416                     	;# 
  1332  0417                     	;# 
  1333  0418                     	;# 
  1334  0418                     	;# 
  1335  0419                     	;# 
  1336  041A                     	;# 
  1337  041A                     	;# 
  1338  041B                     	;# 
  1339  041C                     	;# 
  1340  041C                     	;# 
  1341  041D                     	;# 
  1342  041E                     	;# 
  1343  041F                     	;# 
  1344  048C                     	;# 
  1345  048C                     	;# 
  1346  048D                     	;# 
  1347  048E                     	;# 
  1348  048F                     	;# 
  1349  048F                     	;# 
  1350  0490                     	;# 
  1351  0491                     	;# 
  1352  0492                     	;# 
  1353  0492                     	;# 
  1354  0493                     	;# 
  1355  0494                     	;# 
  1356  0495                     	;# 
  1357  0495                     	;# 
  1358  0496                     	;# 
  1359  0497                     	;# 
  1360  0498                     	;# 
  1361  0499                     	;# 
  1362  049A                     	;# 
  1363  049B                     	;# 
  1364  049C                     	;# 
  1365  049D                     	;# 
  1366  050C                     	;# 
  1367  050C                     	;# 
  1368  050D                     	;# 
  1369  050E                     	;# 
  1370  050F                     	;# 
  1371  050F                     	;# 
  1372  0510                     	;# 
  1373  0511                     	;# 
  1374  0512                     	;# 
  1375  0512                     	;# 
  1376  0513                     	;# 
  1377  0514                     	;# 
  1378  0515                     	;# 
  1379  0515                     	;# 
  1380  0516                     	;# 
  1381  0517                     	;# 
  1382  0518                     	;# 
  1383  0519                     	;# 
  1384  051A                     	;# 
  1385  051B                     	;# 
  1386  051C                     	;# 
  1387  051D                     	;# 
  1388  058C                     	;# 
  1389  058C                     	;# 
  1390  058D                     	;# 
  1391  058E                     	;# 
  1392  058F                     	;# 
  1393  058F                     	;# 
  1394  0590                     	;# 
  1395  0591                     	;# 
  1396  0592                     	;# 
  1397  0593                     	;# 
  1398  060C                     	;# 
  1399  060D                     	;# 
  1400  060E                     	;# 
  1401  060F                     	;# 
  1402  0610                     	;# 
  1403  0611                     	;# 
  1404  0612                     	;# 
  1405  0613                     	;# 
  1406  0614                     	;# 
  1407  0616                     	;# 
  1408  0617                     	;# 
  1409  0618                     	;# 
  1410  0619                     	;# 
  1411  061A                     	;# 
  1412  061B                     	;# 
  1413  061C                     	;# 
  1414  061D                     	;# 
  1415  061E                     	;# 
  1416  068C                     	;# 
  1417  068D                     	;# 
  1418  068E                     	;# 
  1419  068F                     	;# 
  1420  0690                     	;# 
  1421  0691                     	;# 
  1422  0692                     	;# 
  1423  0693                     	;# 
  1424  0694                     	;# 
  1425  070C                     	;# 
  1426  070D                     	;# 
  1427  070E                     	;# 
  1428  070F                     	;# 
  1429  0710                     	;# 
  1430  0711                     	;# 
  1431  0712                     	;# 
  1432  0713                     	;# 
  1433  0714                     	;# 
  1434  0716                     	;# 
  1435  0717                     	;# 
  1436  0718                     	;# 
  1437  0719                     	;# 
  1438  071A                     	;# 
  1439  071B                     	;# 
  1440  071C                     	;# 
  1441  071D                     	;# 
  1442  071E                     	;# 
  1443  0796                     	;# 
  1444  0797                     	;# 
  1445  0798                     	;# 
  1446  0799                     	;# 
  1447  079A                     	;# 
  1448  079B                     	;# 
  1449  080C                     	;# 
  1450  080D                     	;# 
  1451  080E                     	;# 
  1452  080F                     	;# 
  1453  0810                     	;# 
  1454  0811                     	;# 
  1455  0812                     	;# 
  1456  0813                     	;# 
  1457  0814                     	;# 
  1458  081A                     	;# 
  1459  081B                     	;# 
  1460  081C                     	;# 
  1461  081D                     	;# 
  1462  081E                     	;# 
  1463  081F                     	;# 
  1464  088C                     	;# 
  1465  088D                     	;# 
  1466  088E                     	;# 
  1467  088F                     	;# 
  1468  0890                     	;# 
  1469  0891                     	;# 
  1470  0892                     	;# 
  1471  0893                     	;# 
  1472  0895                     	;# 
  1473  0896                     	;# 
  1474  0897                     	;# 
  1475  0898                     	;# 
  1476  0899                     	;# 
  1477  089A                     	;# 
  1478  089B                     	;# 
  1479  090C                     	;# 
  1480  090E                     	;# 
  1481  090F                     	;# 
  1482  091F                     	;# 
  1483  091F                     	;# 
  1484  098F                     	;# 
  1485  098F                     	;# 
  1486  0990                     	;# 
  1487  0991                     	;# 
  1488  0992                     	;# 
  1489  0993                     	;# 
  1490  0994                     	;# 
  1491  0995                     	;# 
  1492  0996                     	;# 
  1493  0997                     	;# 
  1494  0E0F                     	;# 
  1495  0E10                     	;# 
  1496  0E11                     	;# 
  1497  0E12                     	;# 
  1498  0E13                     	;# 
  1499  0E14                     	;# 
  1500  0E15                     	;# 
  1501  0E16                     	;# 
  1502  0E17                     	;# 
  1503  0E18                     	;# 
  1504  0E19                     	;# 
  1505  0E1A                     	;# 
  1506  0E1B                     	;# 
  1507  0E1C                     	;# 
  1508  0E1D                     	;# 
  1509  0E1E                     	;# 
  1510  0E1F                     	;# 
  1511  0E20                     	;# 
  1512  0E21                     	;# 
  1513  0E22                     	;# 
  1514  0E23                     	;# 
  1515  0E24                     	;# 
  1516  0E25                     	;# 
  1517  0E26                     	;# 
  1518  0E27                     	;# 
  1519  0E28                     	;# 
  1520  0E29                     	;# 
  1521  0E2A                     	;# 
  1522  0E2B                     	;# 
  1523  0E2C                     	;# 
  1524  0E2D                     	;# 
  1525  0E2E                     	;# 
  1526  0E2F                     	;# 
  1527  0E30                     	;# 
  1528  0E31                     	;# 
  1529  0E32                     	;# 
  1530  0E33                     	;# 
  1531  0E34                     	;# 
  1532  0E35                     	;# 
  1533  0E36                     	;# 
  1534  0E37                     	;# 
  1535  0E8F                     	;# 
  1536  0E90                     	;# 
  1537  0E91                     	;# 
  1538  0E92                     	;# 
  1539  0E93                     	;# 
  1540  0E94                     	;# 
  1541  0E95                     	;# 
  1542  0E96                     	;# 
  1543  0E97                     	;# 
  1544  0E9C                     	;# 
  1545  0E9D                     	;# 
  1546  0E9E                     	;# 
  1547  0EA1                     	;# 
  1548  0EA2                     	;# 
  1549  0EA3                     	;# 
  1550  0EA4                     	;# 
  1551  0EA5                     	;# 
  1552  0EA9                     	;# 
  1553  0EAA                     	;# 
  1554  0EAB                     	;# 
  1555  0EAC                     	;# 
  1556  0EB1                     	;# 
  1557  0EB2                     	;# 
  1558  0EB3                     	;# 
  1559  0EB8                     	;# 
  1560  0EB9                     	;# 
  1561  0EBA                     	;# 
  1562  0EBB                     	;# 
  1563  0EBC                     	;# 
  1564  0EBD                     	;# 
  1565  0EBE                     	;# 
  1566  0EC3                     	;# 
  1567  0EC5                     	;# 
  1568  0EC6                     	;# 
  1569  0EC7                     	;# 
  1570  0EC8                     	;# 
  1571  0EC9                     	;# 
  1572  0ECA                     	;# 
  1573  0ECB                     	;# 
  1574  0ECC                     	;# 
  1575  0F10                     	;# 
  1576  0F11                     	;# 
  1577  0F12                     	;# 
  1578  0F13                     	;# 
  1579  0F14                     	;# 
  1580  0F15                     	;# 
  1581  0F16                     	;# 
  1582  0F17                     	;# 
  1583  0F18                     	;# 
  1584  0F19                     	;# 
  1585  0F1A                     	;# 
  1586  0F1B                     	;# 
  1587  0F1C                     	;# 
  1588  0F1D                     	;# 
  1589  0F1E                     	;# 
  1590  0F1F                     	;# 
  1591  0F20                     	;# 
  1592  0F21                     	;# 
  1593  0F22                     	;# 
  1594  0F23                     	;# 
  1595  0F24                     	;# 
  1596  0F25                     	;# 
  1597  0F26                     	;# 
  1598  0F27                     	;# 
  1599  0F38                     	;# 
  1600  0F39                     	;# 
  1601  0F3A                     	;# 
  1602  0F3B                     	;# 
  1603  0F3C                     	;# 
  1604  0F3D                     	;# 
  1605  0F3E                     	;# 
  1606  0F3F                     	;# 
  1607  0F40                     	;# 
  1608  0F41                     	;# 
  1609  0F43                     	;# 
  1610  0F44                     	;# 
  1611  0F45                     	;# 
  1612  0F46                     	;# 
  1613  0F47                     	;# 
  1614  0F48                     	;# 
  1615  0F49                     	;# 
  1616  0F4A                     	;# 
  1617  0F4B                     	;# 
  1618  0F4C                     	;# 
  1619  0F4E                     	;# 
  1620  0F4F                     	;# 
  1621  0F50                     	;# 
  1622  0F51                     	;# 
  1623  0F52                     	;# 
  1624  0F53                     	;# 
  1625  0F54                     	;# 
  1626  0F55                     	;# 
  1627  0F56                     	;# 
  1628  0F57                     	;# 
  1629  0F65                     	;# 
  1630  0F68                     	;# 
  1631  0F69                     	;# 
  1632  0F6A                     	;# 
  1633  0F6B                     	;# 
  1634  0FE4                     	;# 
  1635  0FE5                     	;# 
  1636  0FE6                     	;# 
  1637  0FE7                     	;# 
  1638  0FE8                     	;# 
  1639  0FE9                     	;# 
  1640  0FEA                     	;# 
  1641  0FEB                     	;# 
  1642  0FED                     	;# 
  1643  0FEE                     	;# 
  1644  0FEF                     	;# 
  1645  0000                     	;# 
  1646  0001                     	;# 
  1647  0002                     	;# 
  1648  0003                     	;# 
  1649  0004                     	;# 
  1650  0005                     	;# 
  1651  0006                     	;# 
  1652  0007                     	;# 
  1653  0008                     	;# 
  1654  0009                     	;# 
  1655  000A                     	;# 
  1656  000B                     	;# 
  1657  000C                     	;# 
  1658  000D                     	;# 
  1659  000E                     	;# 
  1660  0010                     	;# 
  1661  0011                     	;# 
  1662  0012                     	;# 
  1663  0013                     	;# 
  1664  0016                     	;# 
  1665  0017                     	;# 
  1666  0018                     	;# 
  1667  001C                     	;# 
  1668  001C                     	;# 
  1669  001D                     	;# 
  1670  001D                     	;# 
  1671  001E                     	;# 
  1672  001F                     	;# 
  1673  008C                     	;# 
  1674  008C                     	;# 
  1675  008D                     	;# 
  1676  008E                     	;# 
  1677  008E                     	;# 
  1678  008F                     	;# 
  1679  0090                     	;# 
  1680  0090                     	;# 
  1681  0091                     	;# 
  1682  0093                     	;# 
  1683  0094                     	;# 
  1684  0095                     	;# 
  1685  0096                     	;# 
  1686  0097                     	;# 
  1687  0098                     	;# 
  1688  0099                     	;# 
  1689  009A                     	;# 
  1690  009B                     	;# 
  1691  009C                     	;# 
  1692  009D                     	;# 
  1693  009E                     	;# 
  1694  010C                     	;# 
  1695  010D                     	;# 
  1696  010E                     	;# 
  1697  010E                     	;# 
  1698  010F                     	;# 
  1699  0110                     	;# 
  1700  0110                     	;# 
  1701  0111                     	;# 
  1702  0112                     	;# 
  1703  0112                     	;# 
  1704  0113                     	;# 
  1705  0114                     	;# 
  1706  0114                     	;# 
  1707  0115                     	;# 
  1708  0116                     	;# 
  1709  0116                     	;# 
  1710  0117                     	;# 
  1711  0119                     	;# 
  1712  0119                     	;# 
  1713  0119                     	;# 
  1714  011A                     	;# 
  1715  011A                     	;# 
  1716  011A                     	;# 
  1717  011B                     	;# 
  1718  011B                     	;# 
  1719  011B                     	;# 
  1720  011B                     	;# 
  1721  011B                     	;# 
  1722  011C                     	;# 
  1723  011C                     	;# 
  1724  011C                     	;# 
  1725  011D                     	;# 
  1726  011D                     	;# 
  1727  011D                     	;# 
  1728  011E                     	;# 
  1729  011E                     	;# 
  1730  011E                     	;# 
  1731  011F                     	;# 
  1732  011F                     	;# 
  1733  011F                     	;# 
  1734  011F                     	;# 
  1735  011F                     	;# 
  1736  018C                     	;# 
  1737  018D                     	;# 
  1738  018E                     	;# 
  1739  018F                     	;# 
  1740  0190                     	;# 
  1741  0191                     	;# 
  1742  0192                     	;# 
  1743  0196                     	;# 
  1744  0197                     	;# 
  1745  0198                     	;# 
  1746  0199                     	;# 
  1747  019A                     	;# 
  1748  019B                     	;# 
  1749  019C                     	;# 
  1750  020C                     	;# 
  1751  020C                     	;# 
  1752  020D                     	;# 
  1753  020E                     	;# 
  1754  020F                     	;# 
  1755  020F                     	;# 
  1756  0210                     	;# 
  1757  0210                     	;# 
  1758  0211                     	;# 
  1759  0211                     	;# 
  1760  0212                     	;# 
  1761  0212                     	;# 
  1762  0213                     	;# 
  1763  0214                     	;# 
  1764  0215                     	;# 
  1765  0215                     	;# 
  1766  0216                     	;# 
  1767  0216                     	;# 
  1768  0217                     	;# 
  1769  0217                     	;# 
  1770  0218                     	;# 
  1771  0218                     	;# 
  1772  0219                     	;# 
  1773  021A                     	;# 
  1774  021B                     	;# 
  1775  021B                     	;# 
  1776  021C                     	;# 
  1777  021C                     	;# 
  1778  021D                     	;# 
  1779  021D                     	;# 
  1780  021E                     	;# 
  1781  021F                     	;# 
  1782  028C                     	;# 
  1783  028C                     	;# 
  1784  028D                     	;# 
  1785  028D                     	;# 
  1786  028E                     	;# 
  1787  028F                     	;# 
  1788  0290                     	;# 
  1789  0290                     	;# 
  1790  0291                     	;# 
  1791  0292                     	;# 
  1792  0292                     	;# 
  1793  0293                     	;# 
  1794  0293                     	;# 
  1795  0294                     	;# 
  1796  0295                     	;# 
  1797  0296                     	;# 
  1798  0296                     	;# 
  1799  0297                     	;# 
  1800  0298                     	;# 
  1801  0298                     	;# 
  1802  0299                     	;# 
  1803  0299                     	;# 
  1804  029A                     	;# 
  1805  029B                     	;# 
  1806  029C                     	;# 
  1807  029C                     	;# 
  1808  029D                     	;# 
  1809  030C                     	;# 
  1810  030C                     	;# 
  1811  030D                     	;# 
  1812  030E                     	;# 
  1813  030F                     	;# 
  1814  0310                     	;# 
  1815  0310                     	;# 
  1816  0311                     	;# 
  1817  0312                     	;# 
  1818  0313                     	;# 
  1819  0314                     	;# 
  1820  0314                     	;# 
  1821  0315                     	;# 
  1822  0316                     	;# 
  1823  0317                     	;# 
  1824  0318                     	;# 
  1825  0318                     	;# 
  1826  0319                     	;# 
  1827  031A                     	;# 
  1828  031B                     	;# 
  1829  031C                     	;# 
  1830  031C                     	;# 
  1831  031D                     	;# 
  1832  031E                     	;# 
  1833  031F                     	;# 
  1834  038C                     	;# 
  1835  038D                     	;# 
  1836  038E                     	;# 
  1837  0390                     	;# 
  1838  0391                     	;# 
  1839  0392                     	;# 
  1840  040C                     	;# 
  1841  040D                     	;# 
  1842  040E                     	;# 
  1843  040F                     	;# 
  1844  0410                     	;# 
  1845  0411                     	;# 
  1846  0416                     	;# 
  1847  0416                     	;# 
  1848  0417                     	;# 
  1849  0418                     	;# 
  1850  0418                     	;# 
  1851  0419                     	;# 
  1852  041A                     	;# 
  1853  041A                     	;# 
  1854  041B                     	;# 
  1855  041C                     	;# 
  1856  041C                     	;# 
  1857  041D                     	;# 
  1858  041E                     	;# 
  1859  041F                     	;# 
  1860  048C                     	;# 
  1861  048C                     	;# 
  1862  048D                     	;# 
  1863  048E                     	;# 
  1864  048F                     	;# 
  1865  048F                     	;# 
  1866  0490                     	;# 
  1867  0491                     	;# 
  1868  0492                     	;# 
  1869  0492                     	;# 
  1870  0493                     	;# 
  1871  0494                     	;# 
  1872  0495                     	;# 
  1873  0495                     	;# 
  1874  0496                     	;# 
  1875  0497                     	;# 
  1876  0498                     	;# 
  1877  0499                     	;# 
  1878  049A                     	;# 
  1879  049B                     	;# 
  1880  049C                     	;# 
  1881  049D                     	;# 
  1882  050C                     	;# 
  1883  050C                     	;# 
  1884  050D                     	;# 
  1885  050E                     	;# 
  1886  050F                     	;# 
  1887  050F                     	;# 
  1888  0510                     	;# 
  1889  0511                     	;# 
  1890  0512                     	;# 
  1891  0512                     	;# 
  1892  0513                     	;# 
  1893  0514                     	;# 
  1894  0515                     	;# 
  1895  0515                     	;# 
  1896  0516                     	;# 
  1897  0517                     	;# 
  1898  0518                     	;# 
  1899  0519                     	;# 
  1900  051A                     	;# 
  1901  051B                     	;# 
  1902  051C                     	;# 
  1903  051D                     	;# 
  1904  058C                     	;# 
  1905  058C                     	;# 
  1906  058D                     	;# 
  1907  058E                     	;# 
  1908  058F                     	;# 
  1909  058F                     	;# 
  1910  0590                     	;# 
  1911  0591                     	;# 
  1912  0592                     	;# 
  1913  0593                     	;# 
  1914  060C                     	;# 
  1915  060D                     	;# 
  1916  060E                     	;# 
  1917  060F                     	;# 
  1918  0610                     	;# 
  1919  0611                     	;# 
  1920  0612                     	;# 
  1921  0613                     	;# 
  1922  0614                     	;# 
  1923  0616                     	;# 
  1924  0617                     	;# 
  1925  0618                     	;# 
  1926  0619                     	;# 
  1927  061A                     	;# 
  1928  061B                     	;# 
  1929  061C                     	;# 
  1930  061D                     	;# 
  1931  061E                     	;# 
  1932  068C                     	;# 
  1933  068D                     	;# 
  1934  068E                     	;# 
  1935  068F                     	;# 
  1936  0690                     	;# 
  1937  0691                     	;# 
  1938  0692                     	;# 
  1939  0693                     	;# 
  1940  0694                     	;# 
  1941  070C                     	;# 
  1942  070D                     	;# 
  1943  070E                     	;# 
  1944  070F                     	;# 
  1945  0710                     	;# 
  1946  0711                     	;# 
  1947  0712                     	;# 
  1948  0713                     	;# 
  1949  0714                     	;# 
  1950  0716                     	;# 
  1951  0717                     	;# 
  1952  0718                     	;# 
  1953  0719                     	;# 
  1954  071A                     	;# 
  1955  071B                     	;# 
  1956  071C                     	;# 
  1957  071D                     	;# 
  1958  071E                     	;# 
  1959  0796                     	;# 
  1960  0797                     	;# 
  1961  0798                     	;# 
  1962  0799                     	;# 
  1963  079A                     	;# 
  1964  079B                     	;# 
  1965  080C                     	;# 
  1966  080D                     	;# 
  1967  080E                     	;# 
  1968  080F                     	;# 
  1969  0810                     	;# 
  1970  0811                     	;# 
  1971  0812                     	;# 
  1972  0813                     	;# 
  1973  0814                     	;# 
  1974  081A                     	;# 
  1975  081B                     	;# 
  1976  081C                     	;# 
  1977  081D                     	;# 
  1978  081E                     	;# 
  1979  081F                     	;# 
  1980  088C                     	;# 
  1981  088D                     	;# 
  1982  088E                     	;# 
  1983  088F                     	;# 
  1984  0890                     	;# 
  1985  0891                     	;# 
  1986  0892                     	;# 
  1987  0893                     	;# 
  1988  0895                     	;# 
  1989  0896                     	;# 
  1990  0897                     	;# 
  1991  0898                     	;# 
  1992  0899                     	;# 
  1993  089A                     	;# 
  1994  089B                     	;# 
  1995  090C                     	;# 
  1996  090E                     	;# 
  1997  090F                     	;# 
  1998  091F                     	;# 
  1999  091F                     	;# 
  2000  098F                     	;# 
  2001  098F                     	;# 
  2002  0990                     	;# 
  2003  0991                     	;# 
  2004  0992                     	;# 
  2005  0993                     	;# 
  2006  0994                     	;# 
  2007  0995                     	;# 
  2008  0996                     	;# 
  2009  0997                     	;# 
  2010  0E0F                     	;# 
  2011  0E10                     	;# 
  2012  0E11                     	;# 
  2013  0E12                     	;# 
  2014  0E13                     	;# 
  2015  0E14                     	;# 
  2016  0E15                     	;# 
  2017  0E16                     	;# 
  2018  0E17                     	;# 
  2019  0E18                     	;# 
  2020  0E19                     	;# 
  2021  0E1A                     	;# 
  2022  0E1B                     	;# 
  2023  0E1C                     	;# 
  2024  0E1D                     	;# 
  2025  0E1E                     	;# 
  2026  0E1F                     	;# 
  2027  0E20                     	;# 
  2028  0E21                     	;# 
  2029  0E22                     	;# 
  2030  0E23                     	;# 
  2031  0E24                     	;# 
  2032  0E25                     	;# 
  2033  0E26                     	;# 
  2034  0E27                     	;# 
  2035  0E28                     	;# 
  2036  0E29                     	;# 
  2037  0E2A                     	;# 
  2038  0E2B                     	;# 
  2039  0E2C                     	;# 
  2040  0E2D                     	;# 
  2041  0E2E                     	;# 
  2042  0E2F                     	;# 
  2043  0E30                     	;# 
  2044  0E31                     	;# 
  2045  0E32                     	;# 
  2046  0E33                     	;# 
  2047  0E34                     	;# 
  2048  0E35                     	;# 
  2049  0E36                     	;# 
  2050  0E37                     	;# 
  2051  0E8F                     	;# 
  2052  0E90                     	;# 
  2053  0E91                     	;# 
  2054  0E92                     	;# 
  2055  0E93                     	;# 
  2056  0E94                     	;# 
  2057  0E95                     	;# 
  2058  0E96                     	;# 
  2059  0E97                     	;# 
  2060  0E9C                     	;# 
  2061  0E9D                     	;# 
  2062  0E9E                     	;# 
  2063  0EA1                     	;# 
  2064  0EA2                     	;# 
  2065  0EA3                     	;# 
  2066  0EA4                     	;# 
  2067  0EA5                     	;# 
  2068  0EA9                     	;# 
  2069  0EAA                     	;# 
  2070  0EAB                     	;# 
  2071  0EAC                     	;# 
  2072  0EB1                     	;# 
  2073  0EB2                     	;# 
  2074  0EB3                     	;# 
  2075  0EB8                     	;# 
  2076  0EB9                     	;# 
  2077  0EBA                     	;# 
  2078  0EBB                     	;# 
  2079  0EBC                     	;# 
  2080  0EBD                     	;# 
  2081  0EBE                     	;# 
  2082  0EC3                     	;# 
  2083  0EC5                     	;# 
  2084  0EC6                     	;# 
  2085  0EC7                     	;# 
  2086  0EC8                     	;# 
  2087  0EC9                     	;# 
  2088  0ECA                     	;# 
  2089  0ECB                     	;# 
  2090  0ECC                     	;# 
  2091  0F10                     	;# 
  2092  0F11                     	;# 
  2093  0F12                     	;# 
  2094  0F13                     	;# 
  2095  0F14                     	;# 
  2096  0F15                     	;# 
  2097  0F16                     	;# 
  2098  0F17                     	;# 
  2099  0F18                     	;# 
  2100  0F19                     	;# 
  2101  0F1A                     	;# 
  2102  0F1B                     	;# 
  2103  0F1C                     	;# 
  2104  0F1D                     	;# 
  2105  0F1E                     	;# 
  2106  0F1F                     	;# 
  2107  0F20                     	;# 
  2108  0F21                     	;# 
  2109  0F22                     	;# 
  2110  0F23                     	;# 
  2111  0F24                     	;# 
  2112  0F25                     	;# 
  2113  0F26                     	;# 
  2114  0F27                     	;# 
  2115  0F38                     	;# 
  2116  0F39                     	;# 
  2117  0F3A                     	;# 
  2118  0F3B                     	;# 
  2119  0F3C                     	;# 
  2120  0F3D                     	;# 
  2121  0F3E                     	;# 
  2122  0F3F                     	;# 
  2123  0F40                     	;# 
  2124  0F41                     	;# 
  2125  0F43                     	;# 
  2126  0F44                     	;# 
  2127  0F45                     	;# 
  2128  0F46                     	;# 
  2129  0F47                     	;# 
  2130  0F48                     	;# 
  2131  0F49                     	;# 
  2132  0F4A                     	;# 
  2133  0F4B                     	;# 
  2134  0F4C                     	;# 
  2135  0F4E                     	;# 
  2136  0F4F                     	;# 
  2137  0F50                     	;# 
  2138  0F51                     	;# 
  2139  0F52                     	;# 
  2140  0F53                     	;# 
  2141  0F54                     	;# 
  2142  0F55                     	;# 
  2143  0F56                     	;# 
  2144  0F57                     	;# 
  2145  0F65                     	;# 
  2146  0F68                     	;# 
  2147  0F69                     	;# 
  2148  0F6A                     	;# 
  2149  0F6B                     	;# 
  2150  0FE4                     	;# 
  2151  0FE5                     	;# 
  2152  0FE6                     	;# 
  2153  0FE7                     	;# 
  2154  0FE8                     	;# 
  2155  0FE9                     	;# 
  2156  0FEA                     	;# 
  2157  0FEB                     	;# 
  2158  0FED                     	;# 
  2159  0FEE                     	;# 
  2160  0FEF                     	;# 
  2161  0000                     	;# 
  2162  0001                     	;# 
  2163  0002                     	;# 
  2164  0003                     	;# 
  2165  0004                     	;# 
  2166  0005                     	;# 
  2167  0006                     	;# 
  2168  0007                     	;# 
  2169  0008                     	;# 
  2170  0009                     	;# 
  2171  000A                     	;# 
  2172  000B                     	;# 
  2173  000C                     	;# 
  2174  000D                     	;# 
  2175  000E                     	;# 
  2176  0010                     	;# 
  2177  0011                     	;# 
  2178  0012                     	;# 
  2179  0013                     	;# 
  2180  0016                     	;# 
  2181  0017                     	;# 
  2182  0018                     	;# 
  2183  001C                     	;# 
  2184  001C                     	;# 
  2185  001D                     	;# 
  2186  001D                     	;# 
  2187  001E                     	;# 
  2188  001F                     	;# 
  2189  008C                     	;# 
  2190  008C                     	;# 
  2191  008D                     	;# 
  2192  008E                     	;# 
  2193  008E                     	;# 
  2194  008F                     	;# 
  2195  0090                     	;# 
  2196  0090                     	;# 
  2197  0091                     	;# 
  2198  0093                     	;# 
  2199  0094                     	;# 
  2200  0095                     	;# 
  2201  0096                     	;# 
  2202  0097                     	;# 
  2203  0098                     	;# 
  2204  0099                     	;# 
  2205  009A                     	;# 
  2206  009B                     	;# 
  2207  009C                     	;# 
  2208  009D                     	;# 
  2209  009E                     	;# 
  2210  010C                     	;# 
  2211  010D                     	;# 
  2212  010E                     	;# 
  2213  010E                     	;# 
  2214  010F                     	;# 
  2215  0110                     	;# 
  2216  0110                     	;# 
  2217  0111                     	;# 
  2218  0112                     	;# 
  2219  0112                     	;# 
  2220  0113                     	;# 
  2221  0114                     	;# 
  2222  0114                     	;# 
  2223  0115                     	;# 
  2224  0116                     	;# 
  2225  0116                     	;# 
  2226  0117                     	;# 
  2227  0119                     	;# 
  2228  0119                     	;# 
  2229  0119                     	;# 
  2230  011A                     	;# 
  2231  011A                     	;# 
  2232  011A                     	;# 
  2233  011B                     	;# 
  2234  011B                     	;# 
  2235  011B                     	;# 
  2236  011B                     	;# 
  2237  011B                     	;# 
  2238  011C                     	;# 
  2239  011C                     	;# 
  2240  011C                     	;# 
  2241  011D                     	;# 
  2242  011D                     	;# 
  2243  011D                     	;# 
  2244  011E                     	;# 
  2245  011E                     	;# 
  2246  011E                     	;# 
  2247  011F                     	;# 
  2248  011F                     	;# 
  2249  011F                     	;# 
  2250  011F                     	;# 
  2251  011F                     	;# 
  2252  018C                     	;# 
  2253  018D                     	;# 
  2254  018E                     	;# 
  2255  018F                     	;# 
  2256  0190                     	;# 
  2257  0191                     	;# 
  2258  0192                     	;# 
  2259  0196                     	;# 
  2260  0197                     	;# 
  2261  0198                     	;# 
  2262  0199                     	;# 
  2263  019A                     	;# 
  2264  019B                     	;# 
  2265  019C                     	;# 
  2266  020C                     	;# 
  2267  020C                     	;# 
  2268  020D                     	;# 
  2269  020E                     	;# 
  2270  020F                     	;# 
  2271  020F                     	;# 
  2272  0210                     	;# 
  2273  0210                     	;# 
  2274  0211                     	;# 
  2275  0211                     	;# 
  2276  0212                     	;# 
  2277  0212                     	;# 
  2278  0213                     	;# 
  2279  0214                     	;# 
  2280  0215                     	;# 
  2281  0215                     	;# 
  2282  0216                     	;# 
  2283  0216                     	;# 
  2284  0217                     	;# 
  2285  0217                     	;# 
  2286  0218                     	;# 
  2287  0218                     	;# 
  2288  0219                     	;# 
  2289  021A                     	;# 
  2290  021B                     	;# 
  2291  021B                     	;# 
  2292  021C                     	;# 
  2293  021C                     	;# 
  2294  021D                     	;# 
  2295  021D                     	;# 
  2296  021E                     	;# 
  2297  021F                     	;# 
  2298  028C                     	;# 
  2299  028C                     	;# 
  2300  028D                     	;# 
  2301  028D                     	;# 
  2302  028E                     	;# 
  2303  028F                     	;# 
  2304  0290                     	;# 
  2305  0290                     	;# 
  2306  0291                     	;# 
  2307  0292                     	;# 
  2308  0292                     	;# 
  2309  0293                     	;# 
  2310  0293                     	;# 
  2311  0294                     	;# 
  2312  0295                     	;# 
  2313  0296                     	;# 
  2314  0296                     	;# 
  2315  0297                     	;# 
  2316  0298                     	;# 
  2317  0298                     	;# 
  2318  0299                     	;# 
  2319  0299                     	;# 
  2320  029A                     	;# 
  2321  029B                     	;# 
  2322  029C                     	;# 
  2323  029C                     	;# 
  2324  029D                     	;# 
  2325  030C                     	;# 
  2326  030C                     	;# 
  2327  030D                     	;# 
  2328  030E                     	;# 
  2329  030F                     	;# 
  2330  0310                     	;# 
  2331  0310                     	;# 
  2332  0311                     	;# 
  2333  0312                     	;# 
  2334  0313                     	;# 
  2335  0314                     	;# 
  2336  0314                     	;# 
  2337  0315                     	;# 
  2338  0316                     	;# 
  2339  0317                     	;# 
  2340  0318                     	;# 
  2341  0318                     	;# 
  2342  0319                     	;# 
  2343  031A                     	;# 
  2344  031B                     	;# 
  2345  031C                     	;# 
  2346  031C                     	;# 
  2347  031D                     	;# 
  2348  031E                     	;# 
  2349  031F                     	;# 
  2350  038C                     	;# 
  2351  038D                     	;# 
  2352  038E                     	;# 
  2353  0390                     	;# 
  2354  0391                     	;# 
  2355  0392                     	;# 
  2356  040C                     	;# 
  2357  040D                     	;# 
  2358  040E                     	;# 
  2359  040F                     	;# 
  2360  0410                     	;# 
  2361  0411                     	;# 
  2362  0416                     	;# 
  2363  0416                     	;# 
  2364  0417                     	;# 
  2365  0418                     	;# 
  2366  0418                     	;# 
  2367  0419                     	;# 
  2368  041A                     	;# 
  2369  041A                     	;# 
  2370  041B                     	;# 
  2371  041C                     	;# 
  2372  041C                     	;# 
  2373  041D                     	;# 
  2374  041E                     	;# 
  2375  041F                     	;# 
  2376  048C                     	;# 
  2377  048C                     	;# 
  2378  048D                     	;# 
  2379  048E                     	;# 
  2380  048F                     	;# 
  2381  048F                     	;# 
  2382  0490                     	;# 
  2383  0491                     	;# 
  2384  0492                     	;# 
  2385  0492                     	;# 
  2386  0493                     	;# 
  2387  0494                     	;# 
  2388  0495                     	;# 
  2389  0495                     	;# 
  2390  0496                     	;# 
  2391  0497                     	;# 
  2392  0498                     	;# 
  2393  0499                     	;# 
  2394  049A                     	;# 
  2395  049B                     	;# 
  2396  049C                     	;# 
  2397  049D                     	;# 
  2398  050C                     	;# 
  2399  050C                     	;# 
  2400  050D                     	;# 
  2401  050E                     	;# 
  2402  050F                     	;# 
  2403  050F                     	;# 
  2404  0510                     	;# 
  2405  0511                     	;# 
  2406  0512                     	;# 
  2407  0512                     	;# 
  2408  0513                     	;# 
  2409  0514                     	;# 
  2410  0515                     	;# 
  2411  0515                     	;# 
  2412  0516                     	;# 
  2413  0517                     	;# 
  2414  0518                     	;# 
  2415  0519                     	;# 
  2416  051A                     	;# 
  2417  051B                     	;# 
  2418  051C                     	;# 
  2419  051D                     	;# 
  2420  058C                     	;# 
  2421  058C                     	;# 
  2422  058D                     	;# 
  2423  058E                     	;# 
  2424  058F                     	;# 
  2425  058F                     	;# 
  2426  0590                     	;# 
  2427  0591                     	;# 
  2428  0592                     	;# 
  2429  0593                     	;# 
  2430  060C                     	;# 
  2431  060D                     	;# 
  2432  060E                     	;# 
  2433  060F                     	;# 
  2434  0610                     	;# 
  2435  0611                     	;# 
  2436  0612                     	;# 
  2437  0613                     	;# 
  2438  0614                     	;# 
  2439  0616                     	;# 
  2440  0617                     	;# 
  2441  0618                     	;# 
  2442  0619                     	;# 
  2443  061A                     	;# 
  2444  061B                     	;# 
  2445  061C                     	;# 
  2446  061D                     	;# 
  2447  061E                     	;# 
  2448  068C                     	;# 
  2449  068D                     	;# 
  2450  068E                     	;# 
  2451  068F                     	;# 
  2452  0690                     	;# 
  2453  0691                     	;# 
  2454  0692                     	;# 
  2455  0693                     	;# 
  2456  0694                     	;# 
  2457  070C                     	;# 
  2458  070D                     	;# 
  2459  070E                     	;# 
  2460  070F                     	;# 
  2461  0710                     	;# 
  2462  0711                     	;# 
  2463  0712                     	;# 
  2464  0713                     	;# 
  2465  0714                     	;# 
  2466  0716                     	;# 
  2467  0717                     	;# 
  2468  0718                     	;# 
  2469  0719                     	;# 
  2470  071A                     	;# 
  2471  071B                     	;# 
  2472  071C                     	;# 
  2473  071D                     	;# 
  2474  071E                     	;# 
  2475  0796                     	;# 
  2476  0797                     	;# 
  2477  0798                     	;# 
  2478  0799                     	;# 
  2479  079A                     	;# 
  2480  079B                     	;# 
  2481  080C                     	;# 
  2482  080D                     	;# 
  2483  080E                     	;# 
  2484  080F                     	;# 
  2485  0810                     	;# 
  2486  0811                     	;# 
  2487  0812                     	;# 
  2488  0813                     	;# 
  2489  0814                     	;# 
  2490  081A                     	;# 
  2491  081B                     	;# 
  2492  081C                     	;# 
  2493  081D                     	;# 
  2494  081E                     	;# 
  2495  081F                     	;# 
  2496  088C                     	;# 
  2497  088D                     	;# 
  2498  088E                     	;# 
  2499  088F                     	;# 
  2500  0890                     	;# 
  2501  0891                     	;# 
  2502  0892                     	;# 
  2503  0893                     	;# 
  2504  0895                     	;# 
  2505  0896                     	;# 
  2506  0897                     	;# 
  2507  0898                     	;# 
  2508  0899                     	;# 
  2509  089A                     	;# 
  2510  089B                     	;# 
  2511  090C                     	;# 
  2512  090E                     	;# 
  2513  090F                     	;# 
  2514  091F                     	;# 
  2515  091F                     	;# 
  2516  098F                     	;# 
  2517  098F                     	;# 
  2518  0990                     	;# 
  2519  0991                     	;# 
  2520  0992                     	;# 
  2521  0993                     	;# 
  2522  0994                     	;# 
  2523  0995                     	;# 
  2524  0996                     	;# 
  2525  0997                     	;# 
  2526  0E0F                     	;# 
  2527  0E10                     	;# 
  2528  0E11                     	;# 
  2529  0E12                     	;# 
  2530  0E13                     	;# 
  2531  0E14                     	;# 
  2532  0E15                     	;# 
  2533  0E16                     	;# 
  2534  0E17                     	;# 
  2535  0E18                     	;# 
  2536  0E19                     	;# 
  2537  0E1A                     	;# 
  2538  0E1B                     	;# 
  2539  0E1C                     	;# 
  2540  0E1D                     	;# 
  2541  0E1E                     	;# 
  2542  0E1F                     	;# 
  2543  0E20                     	;# 
  2544  0E21                     	;# 
  2545  0E22                     	;# 
  2546  0E23                     	;# 
  2547  0E24                     	;# 
  2548  0E25                     	;# 
  2549  0E26                     	;# 
  2550  0E27                     	;# 
  2551  0E28                     	;# 
  2552  0E29                     	;# 
  2553  0E2A                     	;# 
  2554  0E2B                     	;# 
  2555  0E2C                     	;# 
  2556  0E2D                     	;# 
  2557  0E2E                     	;# 
  2558  0E2F                     	;# 
  2559  0E30                     	;# 
  2560  0E31                     	;# 
  2561  0E32                     	;# 
  2562  0E33                     	;# 
  2563  0E34                     	;# 
  2564  0E35                     	;# 
  2565  0E36                     	;# 
  2566  0E37                     	;# 
  2567  0E8F                     	;# 
  2568  0E90                     	;# 
  2569  0E91                     	;# 
  2570  0E92                     	;# 
  2571  0E93                     	;# 
  2572  0E94                     	;# 
  2573  0E95                     	;# 
  2574  0E96                     	;# 
  2575  0E97                     	;# 
  2576  0E9C                     	;# 
  2577  0E9D                     	;# 
  2578  0E9E                     	;# 
  2579  0EA1                     	;# 
  2580  0EA2                     	;# 
  2581  0EA3                     	;# 
  2582  0EA4                     	;# 
  2583  0EA5                     	;# 
  2584  0EA9                     	;# 
  2585  0EAA                     	;# 
  2586  0EAB                     	;# 
  2587  0EAC                     	;# 
  2588  0EB1                     	;# 
  2589  0EB2                     	;# 
  2590  0EB3                     	;# 
  2591  0EB8                     	;# 
  2592  0EB9                     	;# 
  2593  0EBA                     	;# 
  2594  0EBB                     	;# 
  2595  0EBC                     	;# 
  2596  0EBD                     	;# 
  2597  0EBE                     	;# 
  2598  0EC3                     	;# 
  2599  0EC5                     	;# 
  2600  0EC6                     	;# 
  2601  0EC7                     	;# 
  2602  0EC8                     	;# 
  2603  0EC9                     	;# 
  2604  0ECA                     	;# 
  2605  0ECB                     	;# 
  2606  0ECC                     	;# 
  2607  0F10                     	;# 
  2608  0F11                     	;# 
  2609  0F12                     	;# 
  2610  0F13                     	;# 
  2611  0F14                     	;# 
  2612  0F15                     	;# 
  2613  0F16                     	;# 
  2614  0F17                     	;# 
  2615  0F18                     	;# 
  2616  0F19                     	;# 
  2617  0F1A                     	;# 
  2618  0F1B                     	;# 
  2619  0F1C                     	;# 
  2620  0F1D                     	;# 
  2621  0F1E                     	;# 
  2622  0F1F                     	;# 
  2623  0F20                     	;# 
  2624  0F21                     	;# 
  2625  0F22                     	;# 
  2626  0F23                     	;# 
  2627  0F24                     	;# 
  2628  0F25                     	;# 
  2629  0F26                     	;# 
  2630  0F27                     	;# 
  2631  0F38                     	;# 
  2632  0F39                     	;# 
  2633  0F3A                     	;# 
  2634  0F3B                     	;# 
  2635  0F3C                     	;# 
  2636  0F3D                     	;# 
  2637  0F3E                     	;# 
  2638  0F3F                     	;# 
  2639  0F40                     	;# 
  2640  0F41                     	;# 
  2641  0F43                     	;# 
  2642  0F44                     	;# 
  2643  0F45                     	;# 
  2644  0F46                     	;# 
  2645  0F47                     	;# 
  2646  0F48                     	;# 
  2647  0F49                     	;# 
  2648  0F4A                     	;# 
  2649  0F4B                     	;# 
  2650  0F4C                     	;# 
  2651  0F4E                     	;# 
  2652  0F4F                     	;# 
  2653  0F50                     	;# 
  2654  0F51                     	;# 
  2655  0F52                     	;# 
  2656  0F53                     	;# 
  2657  0F54                     	;# 
  2658  0F55                     	;# 
  2659  0F56                     	;# 
  2660  0F57                     	;# 
  2661  0F65                     	;# 
  2662  0F68                     	;# 
  2663  0F69                     	;# 
  2664  0F6A                     	;# 
  2665  0F6B                     	;# 
  2666  0FE4                     	;# 
  2667  0FE5                     	;# 
  2668  0FE6                     	;# 
  2669  0FE7                     	;# 
  2670  0FE8                     	;# 
  2671  0FE9                     	;# 
  2672  0FEA                     	;# 
  2673  0FEB                     	;# 
  2674  0FED                     	;# 
  2675  0FEE                     	;# 
  2676  0FEF                     	;# 
  2677  0000                     	;# 
  2678  0001                     	;# 
  2679  0002                     	;# 
  2680  0003                     	;# 
  2681  0004                     	;# 
  2682  0005                     	;# 
  2683  0006                     	;# 
  2684  0007                     	;# 
  2685  0008                     	;# 
  2686  0009                     	;# 
  2687  000A                     	;# 
  2688  000B                     	;# 
  2689  000C                     	;# 
  2690  000D                     	;# 
  2691  000E                     	;# 
  2692  0010                     	;# 
  2693  0011                     	;# 
  2694  0012                     	;# 
  2695  0013                     	;# 
  2696  0016                     	;# 
  2697  0017                     	;# 
  2698  0018                     	;# 
  2699  001C                     	;# 
  2700  001C                     	;# 
  2701  001D                     	;# 
  2702  001D                     	;# 
  2703  001E                     	;# 
  2704  001F                     	;# 
  2705  008C                     	;# 
  2706  008C                     	;# 
  2707  008D                     	;# 
  2708  008E                     	;# 
  2709  008E                     	;# 
  2710  008F                     	;# 
  2711  0090                     	;# 
  2712  0090                     	;# 
  2713  0091                     	;# 
  2714  0093                     	;# 
  2715  0094                     	;# 
  2716  0095                     	;# 
  2717  0096                     	;# 
  2718  0097                     	;# 
  2719  0098                     	;# 
  2720  0099                     	;# 
  2721  009A                     	;# 
  2722  009B                     	;# 
  2723  009C                     	;# 
  2724  009D                     	;# 
  2725  009E                     	;# 
  2726  010C                     	;# 
  2727  010D                     	;# 
  2728  010E                     	;# 
  2729  010E                     	;# 
  2730  010F                     	;# 
  2731  0110                     	;# 
  2732  0110                     	;# 
  2733  0111                     	;# 
  2734  0112                     	;# 
  2735  0112                     	;# 
  2736  0113                     	;# 
  2737  0114                     	;# 
  2738  0114                     	;# 
  2739  0115                     	;# 
  2740  0116                     	;# 
  2741  0116                     	;# 
  2742  0117                     	;# 
  2743  0119                     	;# 
  2744  0119                     	;# 
  2745  0119                     	;# 
  2746  011A                     	;# 
  2747  011A                     	;# 
  2748  011A                     	;# 
  2749  011B                     	;# 
  2750  011B                     	;# 
  2751  011B                     	;# 
  2752  011B                     	;# 
  2753  011B                     	;# 
  2754  011C                     	;# 
  2755  011C                     	;# 
  2756  011C                     	;# 
  2757  011D                     	;# 
  2758  011D                     	;# 
  2759  011D                     	;# 
  2760  011E                     	;# 
  2761  011E                     	;# 
  2762  011E                     	;# 
  2763  011F                     	;# 
  2764  011F                     	;# 
  2765  011F                     	;# 
  2766  011F                     	;# 
  2767  011F                     	;# 
  2768  018C                     	;# 
  2769  018D                     	;# 
  2770  018E                     	;# 
  2771  018F                     	;# 
  2772  0190                     	;# 
  2773  0191                     	;# 
  2774  0192                     	;# 
  2775  0196                     	;# 
  2776  0197                     	;# 
  2777  0198                     	;# 
  2778  0199                     	;# 
  2779  019A                     	;# 
  2780  019B                     	;# 
  2781  019C                     	;# 
  2782  020C                     	;# 
  2783  020C                     	;# 
  2784  020D                     	;# 
  2785  020E                     	;# 
  2786  020F                     	;# 
  2787  020F                     	;# 
  2788  0210                     	;# 
  2789  0210                     	;# 
  2790  0211                     	;# 
  2791  0211                     	;# 
  2792  0212                     	;# 
  2793  0212                     	;# 
  2794  0213                     	;# 
  2795  0214                     	;# 
  2796  0215                     	;# 
  2797  0215                     	;# 
  2798  0216                     	;# 
  2799  0216                     	;# 
  2800  0217                     	;# 
  2801  0217                     	;# 
  2802  0218                     	;# 
  2803  0218                     	;# 
  2804  0219                     	;# 
  2805  021A                     	;# 
  2806  021B                     	;# 
  2807  021B                     	;# 
  2808  021C                     	;# 
  2809  021C                     	;# 
  2810  021D                     	;# 
  2811  021D                     	;# 
  2812  021E                     	;# 
  2813  021F                     	;# 
  2814  028C                     	;# 
  2815  028C                     	;# 
  2816  028D                     	;# 
  2817  028D                     	;# 
  2818  028E                     	;# 
  2819  028F                     	;# 
  2820  0290                     	;# 
  2821  0290                     	;# 
  2822  0291                     	;# 
  2823  0292                     	;# 
  2824  0292                     	;# 
  2825  0293                     	;# 
  2826  0293                     	;# 
  2827  0294                     	;# 
  2828  0295                     	;# 
  2829  0296                     	;# 
  2830  0296                     	;# 
  2831  0297                     	;# 
  2832  0298                     	;# 
  2833  0298                     	;# 
  2834  0299                     	;# 
  2835  0299                     	;# 
  2836  029A                     	;# 
  2837  029B                     	;# 
  2838  029C                     	;# 
  2839  029C                     	;# 
  2840  029D                     	;# 
  2841  030C                     	;# 
  2842  030C                     	;# 
  2843  030D                     	;# 
  2844  030E                     	;# 
  2845  030F                     	;# 
  2846  0310                     	;# 
  2847  0310                     	;# 
  2848  0311                     	;# 
  2849  0312                     	;# 
  2850  0313                     	;# 
  2851  0314                     	;# 
  2852  0314                     	;# 
  2853  0315                     	;# 
  2854  0316                     	;# 
  2855  0317                     	;# 
  2856  0318                     	;# 
  2857  0318                     	;# 
  2858  0319                     	;# 
  2859  031A                     	;# 
  2860  031B                     	;# 
  2861  031C                     	;# 
  2862  031C                     	;# 
  2863  031D                     	;# 
  2864  031E                     	;# 
  2865  031F                     	;# 
  2866  038C                     	;# 
  2867  038D                     	;# 
  2868  038E                     	;# 
  2869  0390                     	;# 
  2870  0391                     	;# 
  2871  0392                     	;# 
  2872  040C                     	;# 
  2873  040D                     	;# 
  2874  040E                     	;# 
  2875  040F                     	;# 
  2876  0410                     	;# 
  2877  0411                     	;# 
  2878  0416                     	;# 
  2879  0416                     	;# 
  2880  0417                     	;# 
  2881  0418                     	;# 
  2882  0418                     	;# 
  2883  0419                     	;# 
  2884  041A                     	;# 
  2885  041A                     	;# 
  2886  041B                     	;# 
  2887  041C                     	;# 
  2888  041C                     	;# 
  2889  041D                     	;# 
  2890  041E                     	;# 
  2891  041F                     	;# 
  2892  048C                     	;# 
  2893  048C                     	;# 
  2894  048D                     	;# 
  2895  048E                     	;# 
  2896  048F                     	;# 
  2897  048F                     	;# 
  2898  0490                     	;# 
  2899  0491                     	;# 
  2900  0492                     	;# 
  2901  0492                     	;# 
  2902  0493                     	;# 
  2903  0494                     	;# 
  2904  0495                     	;# 
  2905  0495                     	;# 
  2906  0496                     	;# 
  2907  0497                     	;# 
  2908  0498                     	;# 
  2909  0499                     	;# 
  2910  049A                     	;# 
  2911  049B                     	;# 
  2912  049C                     	;# 
  2913  049D                     	;# 
  2914  050C                     	;# 
  2915  050C                     	;# 
  2916  050D                     	;# 
  2917  050E                     	;# 
  2918  050F                     	;# 
  2919  050F                     	;# 
  2920  0510                     	;# 
  2921  0511                     	;# 
  2922  0512                     	;# 
  2923  0512                     	;# 
  2924  0513                     	;# 
  2925  0514                     	;# 
  2926  0515                     	;# 
  2927  0515                     	;# 
  2928  0516                     	;# 
  2929  0517                     	;# 
  2930  0518                     	;# 
  2931  0519                     	;# 
  2932  051A                     	;# 
  2933  051B                     	;# 
  2934  051C                     	;# 
  2935  051D                     	;# 
  2936  058C                     	;# 
  2937  058C                     	;# 
  2938  058D                     	;# 
  2939  058E                     	;# 
  2940  058F                     	;# 
  2941  058F                     	;# 
  2942  0590                     	;# 
  2943  0591                     	;# 
  2944  0592                     	;# 
  2945  0593                     	;# 
  2946  060C                     	;# 
  2947  060D                     	;# 
  2948  060E                     	;# 
  2949  060F                     	;# 
  2950  0610                     	;# 
  2951  0611                     	;# 
  2952  0612                     	;# 
  2953  0613                     	;# 
  2954  0614                     	;# 
  2955  0616                     	;# 
  2956  0617                     	;# 
  2957  0618                     	;# 
  2958  0619                     	;# 
  2959  061A                     	;# 
  2960  061B                     	;# 
  2961  061C                     	;# 
  2962  061D                     	;# 
  2963  061E                     	;# 
  2964  068C                     	;# 
  2965  068D                     	;# 
  2966  068E                     	;# 
  2967  068F                     	;# 
  2968  0690                     	;# 
  2969  0691                     	;# 
  2970  0692                     	;# 
  2971  0693                     	;# 
  2972  0694                     	;# 
  2973  070C                     	;# 
  2974  070D                     	;# 
  2975  070E                     	;# 
  2976  070F                     	;# 
  2977  0710                     	;# 
  2978  0711                     	;# 
  2979  0712                     	;# 
  2980  0713                     	;# 
  2981  0714                     	;# 
  2982  0716                     	;# 
  2983  0717                     	;# 
  2984  0718                     	;# 
  2985  0719                     	;# 
  2986  071A                     	;# 
  2987  071B                     	;# 
  2988  071C                     	;# 
  2989  071D                     	;# 
  2990  071E                     	;# 
  2991  0796                     	;# 
  2992  0797                     	;# 
  2993  0798                     	;# 
  2994  0799                     	;# 
  2995  079A                     	;# 
  2996  079B                     	;# 
  2997  080C                     	;# 
  2998  080D                     	;# 
  2999  080E                     	;# 
  3000  080F                     	;# 
  3001  0810                     	;# 
  3002  0811                     	;# 
  3003  0812                     	;# 
  3004  0813                     	;# 
  3005  0814                     	;# 
  3006  081A                     	;# 
  3007  081B                     	;# 
  3008  081C                     	;# 
  3009  081D                     	;# 
  3010  081E                     	;# 
  3011  081F                     	;# 
  3012  088C                     	;# 
  3013  088D                     	;# 
  3014  088E                     	;# 
  3015  088F                     	;# 
  3016  0890                     	;# 
  3017  0891                     	;# 
  3018  0892                     	;# 
  3019  0893                     	;# 
  3020  0895                     	;# 
  3021  0896                     	;# 
  3022  0897                     	;# 
  3023  0898                     	;# 
  3024  0899                     	;# 
  3025  089A                     	;# 
  3026  089B                     	;# 
  3027  090C                     	;# 
  3028  090E                     	;# 
  3029  090F                     	;# 
  3030  091F                     	;# 
  3031  091F                     	;# 
  3032  098F                     	;# 
  3033  098F                     	;# 
  3034  0990                     	;# 
  3035  0991                     	;# 
  3036  0992                     	;# 
  3037  0993                     	;# 
  3038  0994                     	;# 
  3039  0995                     	;# 
  3040  0996                     	;# 
  3041  0997                     	;# 
  3042  0E0F                     	;# 
  3043  0E10                     	;# 
  3044  0E11                     	;# 
  3045  0E12                     	;# 
  3046  0E13                     	;# 
  3047  0E14                     	;# 
  3048  0E15                     	;# 
  3049  0E16                     	;# 
  3050  0E17                     	;# 
  3051  0E18                     	;# 
  3052  0E19                     	;# 
  3053  0E1A                     	;# 
  3054  0E1B                     	;# 
  3055  0E1C                     	;# 
  3056  0E1D                     	;# 
  3057  0E1E                     	;# 
  3058  0E1F                     	;# 
  3059  0E20                     	;# 
  3060  0E21                     	;# 
  3061  0E22                     	;# 
  3062  0E23                     	;# 
  3063  0E24                     	;# 
  3064  0E25                     	;# 
  3065  0E26                     	;# 
  3066  0E27                     	;# 
  3067  0E28                     	;# 
  3068  0E29                     	;# 
  3069  0E2A                     	;# 
  3070  0E2B                     	;# 
  3071  0E2C                     	;# 
  3072  0E2D                     	;# 
  3073  0E2E                     	;# 
  3074  0E2F                     	;# 
  3075  0E30                     	;# 
  3076  0E31                     	;# 
  3077  0E32                     	;# 
  3078  0E33                     	;# 
  3079  0E34                     	;# 
  3080  0E35                     	;# 
  3081  0E36                     	;# 
  3082  0E37                     	;# 
  3083  0E8F                     	;# 
  3084  0E90                     	;# 
  3085  0E91                     	;# 
  3086  0E92                     	;# 
  3087  0E93                     	;# 
  3088  0E94                     	;# 
  3089  0E95                     	;# 
  3090  0E96                     	;# 
  3091  0E97                     	;# 
  3092  0E9C                     	;# 
  3093  0E9D                     	;# 
  3094  0E9E                     	;# 
  3095  0EA1                     	;# 
  3096  0EA2                     	;# 
  3097  0EA3                     	;# 
  3098  0EA4                     	;# 
  3099  0EA5                     	;# 
  3100  0EA9                     	;# 
  3101  0EAA                     	;# 
  3102  0EAB                     	;# 
  3103  0EAC                     	;# 
  3104  0EB1                     	;# 
  3105  0EB2                     	;# 
  3106  0EB3                     	;# 
  3107  0EB8                     	;# 
  3108  0EB9                     	;# 
  3109  0EBA                     	;# 
  3110  0EBB                     	;# 
  3111  0EBC                     	;# 
  3112  0EBD                     	;# 
  3113  0EBE                     	;# 
  3114  0EC3                     	;# 
  3115  0EC5                     	;# 
  3116  0EC6                     	;# 
  3117  0EC7                     	;# 
  3118  0EC8                     	;# 
  3119  0EC9                     	;# 
  3120  0ECA                     	;# 
  3121  0ECB                     	;# 
  3122  0ECC                     	;# 
  3123  0F10                     	;# 
  3124  0F11                     	;# 
  3125  0F12                     	;# 
  3126  0F13                     	;# 
  3127  0F14                     	;# 
  3128  0F15                     	;# 
  3129  0F16                     	;# 
  3130  0F17                     	;# 
  3131  0F18                     	;# 
  3132  0F19                     	;# 
  3133  0F1A                     	;# 
  3134  0F1B                     	;# 
  3135  0F1C                     	;# 
  3136  0F1D                     	;# 
  3137  0F1E                     	;# 
  3138  0F1F                     	;# 
  3139  0F20                     	;# 
  3140  0F21                     	;# 
  3141  0F22                     	;# 
  3142  0F23                     	;# 
  3143  0F24                     	;# 
  3144  0F25                     	;# 
  3145  0F26                     	;# 
  3146  0F27                     	;# 
  3147  0F38                     	;# 
  3148  0F39                     	;# 
  3149  0F3A                     	;# 
  3150  0F3B                     	;# 
  3151  0F3C                     	;# 
  3152  0F3D                     	;# 
  3153  0F3E                     	;# 
  3154  0F3F                     	;# 
  3155  0F40                     	;# 
  3156  0F41                     	;# 
  3157  0F43                     	;# 
  3158  0F44                     	;# 
  3159  0F45                     	;# 
  3160  0F46                     	;# 
  3161  0F47                     	;# 
  3162  0F48                     	;# 
  3163  0F49                     	;# 
  3164  0F4A                     	;# 
  3165  0F4B                     	;# 
  3166  0F4C                     	;# 
  3167  0F4E                     	;# 
  3168  0F4F                     	;# 
  3169  0F50                     	;# 
  3170  0F51                     	;# 
  3171  0F52                     	;# 
  3172  0F53                     	;# 
  3173  0F54                     	;# 
  3174  0F55                     	;# 
  3175  0F56                     	;# 
  3176  0F57                     	;# 
  3177  0F65                     	;# 
  3178  0F68                     	;# 
  3179  0F69                     	;# 
  3180  0F6A                     	;# 
  3181  0F6B                     	;# 
  3182  0FE4                     	;# 
  3183  0FE5                     	;# 
  3184  0FE6                     	;# 
  3185  0FE7                     	;# 
  3186  0FE8                     	;# 
  3187  0FE9                     	;# 
  3188  0FEA                     	;# 
  3189  0FEB                     	;# 
  3190  0FED                     	;# 
  3191  0FEE                     	;# 
  3192  0FEF                     	;# 
  3193  0000                     	;# 
  3194  0001                     	;# 
  3195  0002                     	;# 
  3196  0003                     	;# 
  3197  0004                     	;# 
  3198  0005                     	;# 
  3199  0006                     	;# 
  3200  0007                     	;# 
  3201  0008                     	;# 
  3202  0009                     	;# 
  3203  000A                     	;# 
  3204  000B                     	;# 
  3205  000C                     	;# 
  3206  000D                     	;# 
  3207  000E                     	;# 
  3208  0010                     	;# 
  3209  0011                     	;# 
  3210  0012                     	;# 
  3211  0013                     	;# 
  3212  0016                     	;# 
  3213  0017                     	;# 
  3214  0018                     	;# 
  3215  001C                     	;# 
  3216  001C                     	;# 
  3217  001D                     	;# 
  3218  001D                     	;# 
  3219  001E                     	;# 
  3220  001F                     	;# 
  3221  008C                     	;# 
  3222  008C                     	;# 
  3223  008D                     	;# 
  3224  008E                     	;# 
  3225  008E                     	;# 
  3226  008F                     	;# 
  3227  0090                     	;# 
  3228  0090                     	;# 
  3229  0091                     	;# 
  3230  0093                     	;# 
  3231  0094                     	;# 
  3232  0095                     	;# 
  3233  0096                     	;# 
  3234  0097                     	;# 
  3235  0098                     	;# 
  3236  0099                     	;# 
  3237  009A                     	;# 
  3238  009B                     	;# 
  3239  009C                     	;# 
  3240  009D                     	;# 
  3241  009E                     	;# 
  3242  010C                     	;# 
  3243  010D                     	;# 
  3244  010E                     	;# 
  3245  010E                     	;# 
  3246  010F                     	;# 
  3247  0110                     	;# 
  3248  0110                     	;# 
  3249  0111                     	;# 
  3250  0112                     	;# 
  3251  0112                     	;# 
  3252  0113                     	;# 
  3253  0114                     	;# 
  3254  0114                     	;# 
  3255  0115                     	;# 
  3256  0116                     	;# 
  3257  0116                     	;# 
  3258  0117                     	;# 
  3259  0119                     	;# 
  3260  0119                     	;# 
  3261  0119                     	;# 
  3262  011A                     	;# 
  3263  011A                     	;# 
  3264  011A                     	;# 
  3265  011B                     	;# 
  3266  011B                     	;# 
  3267  011B                     	;# 
  3268  011B                     	;# 
  3269  011B                     	;# 
  3270  011C                     	;# 
  3271  011C                     	;# 
  3272  011C                     	;# 
  3273  011D                     	;# 
  3274  011D                     	;# 
  3275  011D                     	;# 
  3276  011E                     	;# 
  3277  011E                     	;# 
  3278  011E                     	;# 
  3279  011F                     	;# 
  3280  011F                     	;# 
  3281  011F                     	;# 
  3282  011F                     	;# 
  3283  011F                     	;# 
  3284  018C                     	;# 
  3285  018D                     	;# 
  3286  018E                     	;# 
  3287  018F                     	;# 
  3288  0190                     	;# 
  3289  0191                     	;# 
  3290  0192                     	;# 
  3291  0196                     	;# 
  3292  0197                     	;# 
  3293  0198                     	;# 
  3294  0199                     	;# 
  3295  019A                     	;# 
  3296  019B                     	;# 
  3297  019C                     	;# 
  3298  020C                     	;# 
  3299  020C                     	;# 
  3300  020D                     	;# 
  3301  020E                     	;# 
  3302  020F                     	;# 
  3303  020F                     	;# 
  3304  0210                     	;# 
  3305  0210                     	;# 
  3306  0211                     	;# 
  3307  0211                     	;# 
  3308  0212                     	;# 
  3309  0212                     	;# 
  3310  0213                     	;# 
  3311  0214                     	;# 
  3312  0215                     	;# 
  3313  0215                     	;# 
  3314  0216                     	;# 
  3315  0216                     	;# 
  3316  0217                     	;# 
  3317  0217                     	;# 
  3318  0218                     	;# 
  3319  0218                     	;# 
  3320  0219                     	;# 
  3321  021A                     	;# 
  3322  021B                     	;# 
  3323  021B                     	;# 
  3324  021C                     	;# 
  3325  021C                     	;# 
  3326  021D                     	;# 
  3327  021D                     	;# 
  3328  021E                     	;# 
  3329  021F                     	;# 
  3330  028C                     	;# 
  3331  028C                     	;# 
  3332  028D                     	;# 
  3333  028D                     	;# 
  3334  028E                     	;# 
  3335  028F                     	;# 
  3336  0290                     	;# 
  3337  0290                     	;# 
  3338  0291                     	;# 
  3339  0292                     	;# 
  3340  0292                     	;# 
  3341  0293                     	;# 
  3342  0293                     	;# 
  3343  0294                     	;# 
  3344  0295                     	;# 
  3345  0296                     	;# 
  3346  0296                     	;# 
  3347  0297                     	;# 
  3348  0298                     	;# 
  3349  0298                     	;# 
  3350  0299                     	;# 
  3351  0299                     	;# 
  3352  029A                     	;# 
  3353  029B                     	;# 
  3354  029C                     	;# 
  3355  029C                     	;# 
  3356  029D                     	;# 
  3357  030C                     	;# 
  3358  030C                     	;# 
  3359  030D                     	;# 
  3360  030E                     	;# 
  3361  030F                     	;# 
  3362  0310                     	;# 
  3363  0310                     	;# 
  3364  0311                     	;# 
  3365  0312                     	;# 
  3366  0313                     	;# 
  3367  0314                     	;# 
  3368  0314                     	;# 
  3369  0315                     	;# 
  3370  0316                     	;# 
  3371  0317                     	;# 
  3372  0318                     	;# 
  3373  0318                     	;# 
  3374  0319                     	;# 
  3375  031A                     	;# 
  3376  031B                     	;# 
  3377  031C                     	;# 
  3378  031C                     	;# 
  3379  031D                     	;# 
  3380  031E                     	;# 
  3381  031F                     	;# 
  3382  038C                     	;# 
  3383  038D                     	;# 
  3384  038E                     	;# 
  3385  0390                     	;# 
  3386  0391                     	;# 
  3387  0392                     	;# 
  3388  040C                     	;# 
  3389  040D                     	;# 
  3390  040E                     	;# 
  3391  040F                     	;# 
  3392  0410                     	;# 
  3393  0411                     	;# 
  3394  0416                     	;# 
  3395  0416                     	;# 
  3396  0417                     	;# 
  3397  0418                     	;# 
  3398  0418                     	;# 
  3399  0419                     	;# 
  3400  041A                     	;# 
  3401  041A                     	;# 
  3402  041B                     	;# 
  3403  041C                     	;# 
  3404  041C                     	;# 
  3405  041D                     	;# 
  3406  041E                     	;# 
  3407  041F                     	;# 
  3408  048C                     	;# 
  3409  048C                     	;# 
  3410  048D                     	;# 
  3411  048E                     	;# 
  3412  048F                     	;# 
  3413  048F                     	;# 
  3414  0490                     	;# 
  3415  0491                     	;# 
  3416  0492                     	;# 
  3417  0492                     	;# 
  3418  0493                     	;# 
  3419  0494                     	;# 
  3420  0495                     	;# 
  3421  0495                     	;# 
  3422  0496                     	;# 
  3423  0497                     	;# 
  3424  0498                     	;# 
  3425  0499                     	;# 
  3426  049A                     	;# 
  3427  049B                     	;# 
  3428  049C                     	;# 
  3429  049D                     	;# 
  3430  050C                     	;# 
  3431  050C                     	;# 
  3432  050D                     	;# 
  3433  050E                     	;# 
  3434  050F                     	;# 
  3435  050F                     	;# 
  3436  0510                     	;# 
  3437  0511                     	;# 
  3438  0512                     	;# 
  3439  0512                     	;# 
  3440  0513                     	;# 
  3441  0514                     	;# 
  3442  0515                     	;# 
  3443  0515                     	;# 
  3444  0516                     	;# 
  3445  0517                     	;# 
  3446  0518                     	;# 
  3447  0519                     	;# 
  3448  051A                     	;# 
  3449  051B                     	;# 
  3450  051C                     	;# 
  3451  051D                     	;# 
  3452  058C                     	;# 
  3453  058C                     	;# 
  3454  058D                     	;# 
  3455  058E                     	;# 
  3456  058F                     	;# 
  3457  058F                     	;# 
  3458  0590                     	;# 
  3459  0591                     	;# 
  3460  0592                     	;# 
  3461  0593                     	;# 
  3462  060C                     	;# 
  3463  060D                     	;# 
  3464  060E                     	;# 
  3465  060F                     	;# 
  3466  0610                     	;# 
  3467  0611                     	;# 
  3468  0612                     	;# 
  3469  0613                     	;# 
  3470  0614                     	;# 
  3471  0616                     	;# 
  3472  0617                     	;# 
  3473  0618                     	;# 
  3474  0619                     	;# 
  3475  061A                     	;# 
  3476  061B                     	;# 
  3477  061C                     	;# 
  3478  061D                     	;# 
  3479  061E                     	;# 
  3480  068C                     	;# 
  3481  068D                     	;# 
  3482  068E                     	;# 
  3483  068F                     	;# 
  3484  0690                     	;# 
  3485  0691                     	;# 
  3486  0692                     	;# 
  3487  0693                     	;# 
  3488  0694                     	;# 
  3489  070C                     	;# 
  3490  070D                     	;# 
  3491  070E                     	;# 
  3492  070F                     	;# 
  3493  0710                     	;# 
  3494  0711                     	;# 
  3495  0712                     	;# 
  3496  0713                     	;# 
  3497  0714                     	;# 
  3498  0716                     	;# 
  3499  0717                     	;# 
  3500  0718                     	;# 
  3501  0719                     	;# 
  3502  071A                     	;# 
  3503  071B                     	;# 
  3504  071C                     	;# 
  3505  071D                     	;# 
  3506  071E                     	;# 
  3507  0796                     	;# 
  3508  0797                     	;# 
  3509  0798                     	;# 
  3510  0799                     	;# 
  3511  079A                     	;# 
  3512  079B                     	;# 
  3513  080C                     	;# 
  3514  080D                     	;# 
  3515  080E                     	;# 
  3516  080F                     	;# 
  3517  0810                     	;# 
  3518  0811                     	;# 
  3519  0812                     	;# 
  3520  0813                     	;# 
  3521  0814                     	;# 
  3522  081A                     	;# 
  3523  081B                     	;# 
  3524  081C                     	;# 
  3525  081D                     	;# 
  3526  081E                     	;# 
  3527  081F                     	;# 
  3528  088C                     	;# 
  3529  088D                     	;# 
  3530  088E                     	;# 
  3531  088F                     	;# 
  3532  0890                     	;# 
  3533  0891                     	;# 
  3534  0892                     	;# 
  3535  0893                     	;# 
  3536  0895                     	;# 
  3537  0896                     	;# 
  3538  0897                     	;# 
  3539  0898                     	;# 
  3540  0899                     	;# 
  3541  089A                     	;# 
  3542  089B                     	;# 
  3543  090C                     	;# 
  3544  090E                     	;# 
  3545  090F                     	;# 
  3546  091F                     	;# 
  3547  091F                     	;# 
  3548  098F                     	;# 
  3549  098F                     	;# 
  3550  0990                     	;# 
  3551  0991                     	;# 
  3552  0992                     	;# 
  3553  0993                     	;# 
  3554  0994                     	;# 
  3555  0995                     	;# 
  3556  0996                     	;# 
  3557  0997                     	;# 
  3558  0E0F                     	;# 
  3559  0E10                     	;# 
  3560  0E11                     	;# 
  3561  0E12                     	;# 
  3562  0E13                     	;# 
  3563  0E14                     	;# 
  3564  0E15                     	;# 
  3565  0E16                     	;# 
  3566  0E17                     	;# 
  3567  0E18                     	;# 
  3568  0E19                     	;# 
  3569  0E1A                     	;# 
  3570  0E1B                     	;# 
  3571  0E1C                     	;# 
  3572  0E1D                     	;# 
  3573  0E1E                     	;# 
  3574  0E1F                     	;# 
  3575  0E20                     	;# 
  3576  0E21                     	;# 
  3577  0E22                     	;# 
  3578  0E23                     	;# 
  3579  0E24                     	;# 
  3580  0E25                     	;# 
  3581  0E26                     	;# 
  3582  0E27                     	;# 
  3583  0E28                     	;# 
  3584  0E29                     	;# 
  3585  0E2A                     	;# 
  3586  0E2B                     	;# 
  3587  0E2C                     	;# 
  3588  0E2D                     	;# 
  3589  0E2E                     	;# 
  3590  0E2F                     	;# 
  3591  0E30                     	;# 
  3592  0E31                     	;# 
  3593  0E32                     	;# 
  3594  0E33                     	;# 
  3595  0E34                     	;# 
  3596  0E35                     	;# 
  3597  0E36                     	;# 
  3598  0E37                     	;# 
  3599  0E8F                     	;# 
  3600  0E90                     	;# 
  3601  0E91                     	;# 
  3602  0E92                     	;# 
  3603  0E93                     	;# 
  3604  0E94                     	;# 
  3605  0E95                     	;# 
  3606  0E96                     	;# 
  3607  0E97                     	;# 
  3608  0E9C                     	;# 
  3609  0E9D                     	;# 
  3610  0E9E                     	;# 
  3611  0EA1                     	;# 
  3612  0EA2                     	;# 
  3613  0EA3                     	;# 
  3614  0EA4                     	;# 
  3615  0EA5                     	;# 
  3616  0EA9                     	;# 
  3617  0EAA                     	;# 
  3618  0EAB                     	;# 
  3619  0EAC                     	;# 
  3620  0EB1                     	;# 
  3621  0EB2                     	;# 
  3622  0EB3                     	;# 
  3623  0EB8                     	;# 
  3624  0EB9                     	;# 
  3625  0EBA                     	;# 
  3626  0EBB                     	;# 
  3627  0EBC                     	;# 
  3628  0EBD                     	;# 
  3629  0EBE                     	;# 
  3630  0EC3                     	;# 
  3631  0EC5                     	;# 
  3632  0EC6                     	;# 
  3633  0EC7                     	;# 
  3634  0EC8                     	;# 
  3635  0EC9                     	;# 
  3636  0ECA                     	;# 
  3637  0ECB                     	;# 
  3638  0ECC                     	;# 
  3639  0F10                     	;# 
  3640  0F11                     	;# 
  3641  0F12                     	;# 
  3642  0F13                     	;# 
  3643  0F14                     	;# 
  3644  0F15                     	;# 
  3645  0F16                     	;# 
  3646  0F17                     	;# 
  3647  0F18                     	;# 
  3648  0F19                     	;# 
  3649  0F1A                     	;# 
  3650  0F1B                     	;# 
  3651  0F1C                     	;# 
  3652  0F1D                     	;# 
  3653  0F1E                     	;# 
  3654  0F1F                     	;# 
  3655  0F20                     	;# 
  3656  0F21                     	;# 
  3657  0F22                     	;# 
  3658  0F23                     	;# 
  3659  0F24                     	;# 
  3660  0F25                     	;# 
  3661  0F26                     	;# 
  3662  0F27                     	;# 
  3663  0F38                     	;# 
  3664  0F39                     	;# 
  3665  0F3A                     	;# 
  3666  0F3B                     	;# 
  3667  0F3C                     	;# 
  3668  0F3D                     	;# 
  3669  0F3E                     	;# 
  3670  0F3F                     	;# 
  3671  0F40                     	;# 
  3672  0F41                     	;# 
  3673  0F43                     	;# 
  3674  0F44                     	;# 
  3675  0F45                     	;# 
  3676  0F46                     	;# 
  3677  0F47                     	;# 
  3678  0F48                     	;# 
  3679  0F49                     	;# 
  3680  0F4A                     	;# 
  3681  0F4B                     	;# 
  3682  0F4C                     	;# 
  3683  0F4E                     	;# 
  3684  0F4F                     	;# 
  3685  0F50                     	;# 
  3686  0F51                     	;# 
  3687  0F52                     	;# 
  3688  0F53                     	;# 
  3689  0F54                     	;# 
  3690  0F55                     	;# 
  3691  0F56                     	;# 
  3692  0F57                     	;# 
  3693  0F65                     	;# 
  3694  0F68                     	;# 
  3695  0F69                     	;# 
  3696  0F6A                     	;# 
  3697  0F6B                     	;# 
  3698  0FE4                     	;# 
  3699  0FE5                     	;# 
  3700  0FE6                     	;# 
  3701  0FE7                     	;# 
  3702  0FE8                     	;# 
  3703  0FE9                     	;# 
  3704  0FEA                     	;# 
  3705  0FEB                     	;# 
  3706  0FED                     	;# 
  3707  0FEE                     	;# 
  3708  0FEF                     	;# 
  3709  0000                     	;# 
  3710  0001                     	;# 
  3711  0002                     	;# 
  3712  0003                     	;# 
  3713  0004                     	;# 
  3714  0005                     	;# 
  3715  0006                     	;# 
  3716  0007                     	;# 
  3717  0008                     	;# 
  3718  0009                     	;# 
  3719  000A                     	;# 
  3720  000B                     	;# 
  3721  000C                     	;# 
  3722  000D                     	;# 
  3723  000E                     	;# 
  3724  0010                     	;# 
  3725  0011                     	;# 
  3726  0012                     	;# 
  3727  0013                     	;# 
  3728  0016                     	;# 
  3729  0017                     	;# 
  3730  0018                     	;# 
  3731  001C                     	;# 
  3732  001C                     	;# 
  3733  001D                     	;# 
  3734  001D                     	;# 
  3735  001E                     	;# 
  3736  001F                     	;# 
  3737  008C                     	;# 
  3738  008C                     	;# 
  3739  008D                     	;# 
  3740  008E                     	;# 
  3741  008E                     	;# 
  3742  008F                     	;# 
  3743  0090                     	;# 
  3744  0090                     	;# 
  3745  0091                     	;# 
  3746  0093                     	;# 
  3747  0094                     	;# 
  3748  0095                     	;# 
  3749  0096                     	;# 
  3750  0097                     	;# 
  3751  0098                     	;# 
  3752  0099                     	;# 
  3753  009A                     	;# 
  3754  009B                     	;# 
  3755  009C                     	;# 
  3756  009D                     	;# 
  3757  009E                     	;# 
  3758  010C                     	;# 
  3759  010D                     	;# 
  3760  010E                     	;# 
  3761  010E                     	;# 
  3762  010F                     	;# 
  3763  0110                     	;# 
  3764  0110                     	;# 
  3765  0111                     	;# 
  3766  0112                     	;# 
  3767  0112                     	;# 
  3768  0113                     	;# 
  3769  0114                     	;# 
  3770  0114                     	;# 
  3771  0115                     	;# 
  3772  0116                     	;# 
  3773  0116                     	;# 
  3774  0117                     	;# 
  3775  0119                     	;# 
  3776  0119                     	;# 
  3777  0119                     	;# 
  3778  011A                     	;# 
  3779  011A                     	;# 
  3780  011A                     	;# 
  3781  011B                     	;# 
  3782  011B                     	;# 
  3783  011B                     	;# 
  3784  011B                     	;# 
  3785  011B                     	;# 
  3786  011C                     	;# 
  3787  011C                     	;# 
  3788  011C                     	;# 
  3789  011D                     	;# 
  3790  011D                     	;# 
  3791  011D                     	;# 
  3792  011E                     	;# 
  3793  011E                     	;# 
  3794  011E                     	;# 
  3795  011F                     	;# 
  3796  011F                     	;# 
  3797  011F                     	;# 
  3798  011F                     	;# 
  3799  011F                     	;# 
  3800  018C                     	;# 
  3801  018D                     	;# 
  3802  018E                     	;# 
  3803  018F                     	;# 
  3804  0190                     	;# 
  3805  0191                     	;# 
  3806  0192                     	;# 
  3807  0196                     	;# 
  3808  0197                     	;# 
  3809  0198                     	;# 
  3810  0199                     	;# 
  3811  019A                     	;# 
  3812  019B                     	;# 
  3813  019C                     	;# 
  3814  020C                     	;# 
  3815  020C                     	;# 
  3816  020D                     	;# 
  3817  020E                     	;# 
  3818  020F                     	;# 
  3819  020F                     	;# 
  3820  0210                     	;# 
  3821  0210                     	;# 
  3822  0211                     	;# 
  3823  0211                     	;# 
  3824  0212                     	;# 
  3825  0212                     	;# 
  3826  0213                     	;# 
  3827  0214                     	;# 
  3828  0215                     	;# 
  3829  0215                     	;# 
  3830  0216                     	;# 
  3831  0216                     	;# 
  3832  0217                     	;# 
  3833  0217                     	;# 
  3834  0218                     	;# 
  3835  0218                     	;# 
  3836  0219                     	;# 
  3837  021A                     	;# 
  3838  021B                     	;# 
  3839  021B                     	;# 
  3840  021C                     	;# 
  3841  021C                     	;# 
  3842  021D                     	;# 
  3843  021D                     	;# 
  3844  021E                     	;# 
  3845  021F                     	;# 
  3846  028C                     	;# 
  3847  028C                     	;# 
  3848  028D                     	;# 
  3849  028D                     	;# 
  3850  028E                     	;# 
  3851  028F                     	;# 
  3852  0290                     	;# 
  3853  0290                     	;# 
  3854  0291                     	;# 
  3855  0292                     	;# 
  3856  0292                     	;# 
  3857  0293                     	;# 
  3858  0293                     	;# 
  3859  0294                     	;# 
  3860  0295                     	;# 
  3861  0296                     	;# 
  3862  0296                     	;# 
  3863  0297                     	;# 
  3864  0298                     	;# 
  3865  0298                     	;# 
  3866  0299                     	;# 
  3867  0299                     	;# 
  3868  029A                     	;# 
  3869  029B                     	;# 
  3870  029C                     	;# 
  3871  029C                     	;# 
  3872  029D                     	;# 
  3873  030C                     	;# 
  3874  030C                     	;# 
  3875  030D                     	;# 
  3876  030E                     	;# 
  3877  030F                     	;# 
  3878  0310                     	;# 
  3879  0310                     	;# 
  3880  0311                     	;# 
  3881  0312                     	;# 
  3882  0313                     	;# 
  3883  0314                     	;# 
  3884  0314                     	;# 
  3885  0315                     	;# 
  3886  0316                     	;# 
  3887  0317                     	;# 
  3888  0318                     	;# 
  3889  0318                     	;# 
  3890  0319                     	;# 
  3891  031A                     	;# 
  3892  031B                     	;# 
  3893  031C                     	;# 
  3894  031C                     	;# 
  3895  031D                     	;# 
  3896  031E                     	;# 
  3897  031F                     	;# 
  3898  038C                     	;# 
  3899  038D                     	;# 
  3900  038E                     	;# 
  3901  0390                     	;# 
  3902  0391                     	;# 
  3903  0392                     	;# 
  3904  040C                     	;# 
  3905  040D                     	;# 
  3906  040E                     	;# 
  3907  040F                     	;# 
  3908  0410                     	;# 
  3909  0411                     	;# 
  3910  0416                     	;# 
  3911  0416                     	;# 
  3912  0417                     	;# 
  3913  0418                     	;# 
  3914  0418                     	;# 
  3915  0419                     	;# 
  3916  041A                     	;# 
  3917  041A                     	;# 
  3918  041B                     	;# 
  3919  041C                     	;# 
  3920  041C                     	;# 
  3921  041D                     	;# 
  3922  041E                     	;# 
  3923  041F                     	;# 
  3924  048C                     	;# 
  3925  048C                     	;# 
  3926  048D                     	;# 
  3927  048E                     	;# 
  3928  048F                     	;# 
  3929  048F                     	;# 
  3930  0490                     	;# 
  3931  0491                     	;# 
  3932  0492                     	;# 
  3933  0492                     	;# 
  3934  0493                     	;# 
  3935  0494                     	;# 
  3936  0495                     	;# 
  3937  0495                     	;# 
  3938  0496                     	;# 
  3939  0497                     	;# 
  3940  0498                     	;# 
  3941  0499                     	;# 
  3942  049A                     	;# 
  3943  049B                     	;# 
  3944  049C                     	;# 
  3945  049D                     	;# 
  3946  050C                     	;# 
  3947  050C                     	;# 
  3948  050D                     	;# 
  3949  050E                     	;# 
  3950  050F                     	;# 
  3951  050F                     	;# 
  3952  0510                     	;# 
  3953  0511                     	;# 
  3954  0512                     	;# 
  3955  0512                     	;# 
  3956  0513                     	;# 
  3957  0514                     	;# 
  3958  0515                     	;# 
  3959  0515                     	;# 
  3960  0516                     	;# 
  3961  0517                     	;# 
  3962  0518                     	;# 
  3963  0519                     	;# 
  3964  051A                     	;# 
  3965  051B                     	;# 
  3966  051C                     	;# 
  3967  051D                     	;# 
  3968  058C                     	;# 
  3969  058C                     	;# 
  3970  058D                     	;# 
  3971  058E                     	;# 
  3972  058F                     	;# 
  3973  058F                     	;# 
  3974  0590                     	;# 
  3975  0591                     	;# 
  3976  0592                     	;# 
  3977  0593                     	;# 
  3978  060C                     	;# 
  3979  060D                     	;# 
  3980  060E                     	;# 
  3981  060F                     	;# 
  3982  0610                     	;# 
  3983  0611                     	;# 
  3984  0612                     	;# 
  3985  0613                     	;# 
  3986  0614                     	;# 
  3987  0616                     	;# 
  3988  0617                     	;# 
  3989  0618                     	;# 
  3990  0619                     	;# 
  3991  061A                     	;# 
  3992  061B                     	;# 
  3993  061C                     	;# 
  3994  061D                     	;# 
  3995  061E                     	;# 
  3996  068C                     	;# 
  3997  068D                     	;# 
  3998  068E                     	;# 
  3999  068F                     	;# 
  4000  0690                     	;# 
  4001  0691                     	;# 
  4002  0692                     	;# 
  4003  0693                     	;# 
  4004  0694                     	;# 
  4005  070C                     	;# 
  4006  070D                     	;# 
  4007  070E                     	;# 
  4008  070F                     	;# 
  4009  0710                     	;# 
  4010  0711                     	;# 
  4011  0712                     	;# 
  4012  0713                     	;# 
  4013  0714                     	;# 
  4014  0716                     	;# 
  4015  0717                     	;# 
  4016  0718                     	;# 
  4017  0719                     	;# 
  4018  071A                     	;# 
  4019  071B                     	;# 
  4020  071C                     	;# 
  4021  071D                     	;# 
  4022  071E                     	;# 
  4023  0796                     	;# 
  4024  0797                     	;# 
  4025  0798                     	;# 
  4026  0799                     	;# 
  4027  079A                     	;# 
  4028  079B                     	;# 
  4029  080C                     	;# 
  4030  080D                     	;# 
  4031  080E                     	;# 
  4032  080F                     	;# 
  4033  0810                     	;# 
  4034  0811                     	;# 
  4035  0812                     	;# 
  4036  0813                     	;# 
  4037  0814                     	;# 
  4038  081A                     	;# 
  4039  081B                     	;# 
  4040  081C                     	;# 
  4041  081D                     	;# 
  4042  081E                     	;# 
  4043  081F                     	;# 
  4044  088C                     	;# 
  4045  088D                     	;# 
  4046  088E                     	;# 
  4047  088F                     	;# 
  4048  0890                     	;# 
  4049  0891                     	;# 
  4050  0892                     	;# 
  4051  0893                     	;# 
  4052  0895                     	;# 
  4053  0896                     	;# 
  4054  0897                     	;# 
  4055  0898                     	;# 
  4056  0899                     	;# 
  4057  089A                     	;# 
  4058  089B                     	;# 
  4059  090C                     	;# 
  4060  090E                     	;# 
  4061  090F                     	;# 
  4062  091F                     	;# 
  4063  091F                     	;# 
  4064  098F                     	;# 
  4065  098F                     	;# 
  4066  0990                     	;# 
  4067  0991                     	;# 
  4068  0992                     	;# 
  4069  0993                     	;# 
  4070  0994                     	;# 
  4071  0995                     	;# 
  4072  0996                     	;# 
  4073  0997                     	;# 
  4074  0E0F                     	;# 
  4075  0E10                     	;# 
  4076  0E11                     	;# 
  4077  0E12                     	;# 
  4078  0E13                     	;# 
  4079  0E14                     	;# 
  4080  0E15                     	;# 
  4081  0E16                     	;# 
  4082  0E17                     	;# 
  4083  0E18                     	;# 
  4084  0E19                     	;# 
  4085  0E1A                     	;# 
  4086  0E1B                     	;# 
  4087  0E1C                     	;# 
  4088  0E1D                     	;# 
  4089  0E1E                     	;# 
  4090  0E1F                     	;# 
  4091  0E20                     	;# 
  4092  0E21                     	;# 
  4093  0E22                     	;# 
  4094  0E23                     	;# 
  4095  0E24                     	;# 
  4096  0E25                     	;# 
  4097  0E26                     	;# 
  4098  0E27                     	;# 
  4099  0E28                     	;# 
  4100  0E29                     	;# 
  4101  0E2A                     	;# 
  4102  0E2B                     	;# 
  4103  0E2C                     	;# 
  4104  0E2D                     	;# 
  4105  0E2E                     	;# 
  4106  0E2F                     	;# 
  4107  0E30                     	;# 
  4108  0E31                     	;# 
  4109  0E32                     	;# 
  4110  0E33                     	;# 
  4111  0E34                     	;# 
  4112  0E35                     	;# 
  4113  0E36                     	;# 
  4114  0E37                     	;# 
  4115  0E8F                     	;# 
  4116  0E90                     	;# 
  4117  0E91                     	;# 
  4118  0E92                     	;# 
  4119  0E93                     	;# 
  4120  0E94                     	;# 
  4121  0E95                     	;# 
  4122  0E96                     	;# 
  4123  0E97                     	;# 
  4124  0E9C                     	;# 
  4125  0E9D                     	;# 
  4126  0E9E                     	;# 
  4127  0EA1                     	;# 
  4128  0EA2                     	;# 
  4129  0EA3                     	;# 
  4130  0EA4                     	;# 
  4131  0EA5                     	;# 
  4132  0EA9                     	;# 
  4133  0EAA                     	;# 
  4134  0EAB                     	;# 
  4135  0EAC                     	;# 
  4136  0EB1                     	;# 
  4137  0EB2                     	;# 
  4138  0EB3                     	;# 
  4139  0EB8                     	;# 
  4140  0EB9                     	;# 
  4141  0EBA                     	;# 
  4142  0EBB                     	;# 
  4143  0EBC                     	;# 
  4144  0EBD                     	;# 
  4145  0EBE                     	;# 
  4146  0EC3                     	;# 
  4147  0EC5                     	;# 
  4148  0EC6                     	;# 
  4149  0EC7                     	;# 
  4150  0EC8                     	;# 
  4151  0EC9                     	;# 
  4152  0ECA                     	;# 
  4153  0ECB                     	;# 
  4154  0ECC                     	;# 
  4155  0F10                     	;# 
  4156  0F11                     	;# 
  4157  0F12                     	;# 
  4158  0F13                     	;# 
  4159  0F14                     	;# 
  4160  0F15                     	;# 
  4161  0F16                     	;# 
  4162  0F17                     	;# 
  4163  0F18                     	;# 
  4164  0F19                     	;# 
  4165  0F1A                     	;# 
  4166  0F1B                     	;# 
  4167  0F1C                     	;# 
  4168  0F1D                     	;# 
  4169  0F1E                     	;# 
  4170  0F1F                     	;# 
  4171  0F20                     	;# 
  4172  0F21                     	;# 
  4173  0F22                     	;# 
  4174  0F23                     	;# 
  4175  0F24                     	;# 
  4176  0F25                     	;# 
  4177  0F26                     	;# 
  4178  0F27                     	;# 
  4179  0F38                     	;# 
  4180  0F39                     	;# 
  4181  0F3A                     	;# 
  4182  0F3B                     	;# 
  4183  0F3C                     	;# 
  4184  0F3D                     	;# 
  4185  0F3E                     	;# 
  4186  0F3F                     	;# 
  4187  0F40                     	;# 
  4188  0F41                     	;# 
  4189  0F43                     	;# 
  4190  0F44                     	;# 
  4191  0F45                     	;# 
  4192  0F46                     	;# 
  4193  0F47                     	;# 
  4194  0F48                     	;# 
  4195  0F49                     	;# 
  4196  0F4A                     	;# 
  4197  0F4B                     	;# 
  4198  0F4C                     	;# 
  4199  0F4E                     	;# 
  4200  0F4F                     	;# 
  4201  0F50                     	;# 
  4202  0F51                     	;# 
  4203  0F52                     	;# 
  4204  0F53                     	;# 
  4205  0F54                     	;# 
  4206  0F55                     	;# 
  4207  0F56                     	;# 
  4208  0F57                     	;# 
  4209  0F65                     	;# 
  4210  0F68                     	;# 
  4211  0F69                     	;# 
  4212  0F6A                     	;# 
  4213  0F6B                     	;# 
  4214  0FE4                     	;# 
  4215  0FE5                     	;# 
  4216  0FE6                     	;# 
  4217  0FE7                     	;# 
  4218  0FE8                     	;# 
  4219  0FE9                     	;# 
  4220  0FEA                     	;# 
  4221  0FEB                     	;# 
  4222  0FED                     	;# 
  4223  0FEE                     	;# 
  4224  0FEF                     	;# 
  4225  0000                     	;# 
  4226  0001                     	;# 
  4227  0002                     	;# 
  4228  0003                     	;# 
  4229  0004                     	;# 
  4230  0005                     	;# 
  4231  0006                     	;# 
  4232  0007                     	;# 
  4233  0008                     	;# 
  4234  0009                     	;# 
  4235  000A                     	;# 
  4236  000B                     	;# 
  4237  000C                     	;# 
  4238  000D                     	;# 
  4239  000E                     	;# 
  4240  0010                     	;# 
  4241  0011                     	;# 
  4242  0012                     	;# 
  4243  0013                     	;# 
  4244  0016                     	;# 
  4245  0017                     	;# 
  4246  0018                     	;# 
  4247  001C                     	;# 
  4248  001C                     	;# 
  4249  001D                     	;# 
  4250  001D                     	;# 
  4251  001E                     	;# 
  4252  001F                     	;# 
  4253  008C                     	;# 
  4254  008C                     	;# 
  4255  008D                     	;# 
  4256  008E                     	;# 
  4257  008E                     	;# 
  4258  008F                     	;# 
  4259  0090                     	;# 
  4260  0090                     	;# 
  4261  0091                     	;# 
  4262  0093                     	;# 
  4263  0094                     	;# 
  4264  0095                     	;# 
  4265  0096                     	;# 
  4266  0097                     	;# 
  4267  0098                     	;# 
  4268  0099                     	;# 
  4269  009A                     	;# 
  4270  009B                     	;# 
  4271  009C                     	;# 
  4272  009D                     	;# 
  4273  009E                     	;# 
  4274  010C                     	;# 
  4275  010D                     	;# 
  4276  010E                     	;# 
  4277  010E                     	;# 
  4278  010F                     	;# 
  4279  0110                     	;# 
  4280  0110                     	;# 
  4281  0111                     	;# 
  4282  0112                     	;# 
  4283  0112                     	;# 
  4284  0113                     	;# 
  4285  0114                     	;# 
  4286  0114                     	;# 
  4287  0115                     	;# 
  4288  0116                     	;# 
  4289  0116                     	;# 
  4290  0117                     	;# 
  4291  0119                     	;# 
  4292  0119                     	;# 
  4293  0119                     	;# 
  4294  011A                     	;# 
  4295  011A                     	;# 
  4296  011A                     	;# 
  4297  011B                     	;# 
  4298  011B                     	;# 
  4299  011B                     	;# 
  4300  011B                     	;# 
  4301  011B                     	;# 
  4302  011C                     	;# 
  4303  011C                     	;# 
  4304  011C                     	;# 
  4305  011D                     	;# 
  4306  011D                     	;# 
  4307  011D                     	;# 
  4308  011E                     	;# 
  4309  011E                     	;# 
  4310  011E                     	;# 
  4311  011F                     	;# 
  4312  011F                     	;# 
  4313  011F                     	;# 
  4314  011F                     	;# 
  4315  011F                     	;# 
  4316  018C                     	;# 
  4317  018D                     	;# 
  4318  018E                     	;# 
  4319  018F                     	;# 
  4320  0190                     	;# 
  4321  0191                     	;# 
  4322  0192                     	;# 
  4323  0196                     	;# 
  4324  0197                     	;# 
  4325  0198                     	;# 
  4326  0199                     	;# 
  4327  019A                     	;# 
  4328  019B                     	;# 
  4329  019C                     	;# 
  4330  020C                     	;# 
  4331  020C                     	;# 
  4332  020D                     	;# 
  4333  020E                     	;# 
  4334  020F                     	;# 
  4335  020F                     	;# 
  4336  0210                     	;# 
  4337  0210                     	;# 
  4338  0211                     	;# 
  4339  0211                     	;# 
  4340  0212                     	;# 
  4341  0212                     	;# 
  4342  0213                     	;# 
  4343  0214                     	;# 
  4344  0215                     	;# 
  4345  0215                     	;# 
  4346  0216                     	;# 
  4347  0216                     	;# 
  4348  0217                     	;# 
  4349  0217                     	;# 
  4350  0218                     	;# 
  4351  0218                     	;# 
  4352  0219                     	;# 
  4353  021A                     	;# 
  4354  021B                     	;# 
  4355  021B                     	;# 
  4356  021C                     	;# 
  4357  021C                     	;# 
  4358  021D                     	;# 
  4359  021D                     	;# 
  4360  021E                     	;# 
  4361  021F                     	;# 
  4362  028C                     	;# 
  4363  028C                     	;# 
  4364  028D                     	;# 
  4365  028D                     	;# 
  4366  028E                     	;# 
  4367  028F                     	;# 
  4368  0290                     	;# 
  4369  0290                     	;# 
  4370  0291                     	;# 
  4371  0292                     	;# 
  4372  0292                     	;# 
  4373  0293                     	;# 
  4374  0293                     	;# 
  4375  0294                     	;# 
  4376  0295                     	;# 
  4377  0296                     	;# 
  4378  0296                     	;# 
  4379  0297                     	;# 
  4380  0298                     	;# 
  4381  0298                     	;# 
  4382  0299                     	;# 
  4383  0299                     	;# 
  4384  029A                     	;# 
  4385  029B                     	;# 
  4386  029C                     	;# 
  4387  029C                     	;# 
  4388  029D                     	;# 
  4389  030C                     	;# 
  4390  030C                     	;# 
  4391  030D                     	;# 
  4392  030E                     	;# 
  4393  030F                     	;# 
  4394  0310                     	;# 
  4395  0310                     	;# 
  4396  0311                     	;# 
  4397  0312                     	;# 
  4398  0313                     	;# 
  4399  0314                     	;# 
  4400  0314                     	;# 
  4401  0315                     	;# 
  4402  0316                     	;# 
  4403  0317                     	;# 
  4404  0318                     	;# 
  4405  0318                     	;# 
  4406  0319                     	;# 
  4407  031A                     	;# 
  4408  031B                     	;# 
  4409  031C                     	;# 
  4410  031C                     	;# 
  4411  031D                     	;# 
  4412  031E                     	;# 
  4413  031F                     	;# 
  4414  038C                     	;# 
  4415  038D                     	;# 
  4416  038E                     	;# 
  4417  0390                     	;# 
  4418  0391                     	;# 
  4419  0392                     	;# 
  4420  040C                     	;# 
  4421  040D                     	;# 
  4422  040E                     	;# 
  4423  040F                     	;# 
  4424  0410                     	;# 
  4425  0411                     	;# 
  4426  0416                     	;# 
  4427  0416                     	;# 
  4428  0417                     	;# 
  4429  0418                     	;# 
  4430  0418                     	;# 
  4431  0419                     	;# 
  4432  041A                     	;# 
  4433  041A                     	;# 
  4434  041B                     	;# 
  4435  041C                     	;# 
  4436  041C                     	;# 
  4437  041D                     	;# 
  4438  041E                     	;# 
  4439  041F                     	;# 
  4440  048C                     	;# 
  4441  048C                     	;# 
  4442  048D                     	;# 
  4443  048E                     	;# 
  4444  048F                     	;# 
  4445  048F                     	;# 
  4446  0490                     	;# 
  4447  0491                     	;# 
  4448  0492                     	;# 
  4449  0492                     	;# 
  4450  0493                     	;# 
  4451  0494                     	;# 
  4452  0495                     	;# 
  4453  0495                     	;# 
  4454  0496                     	;# 
  4455  0497                     	;# 
  4456  0498                     	;# 
  4457  0499                     	;# 
  4458  049A                     	;# 
  4459  049B                     	;# 
  4460  049C                     	;# 
  4461  049D                     	;# 
  4462  050C                     	;# 
  4463  050C                     	;# 
  4464  050D                     	;# 
  4465  050E                     	;# 
  4466  050F                     	;# 
  4467  050F                     	;# 
  4468  0510                     	;# 
  4469  0511                     	;# 
  4470  0512                     	;# 
  4471  0512                     	;# 
  4472  0513                     	;# 
  4473  0514                     	;# 
  4474  0515                     	;# 
  4475  0515                     	;# 
  4476  0516                     	;# 
  4477  0517                     	;# 
  4478  0518                     	;# 
  4479  0519                     	;# 
  4480  051A                     	;# 
  4481  051B                     	;# 
  4482  051C                     	;# 
  4483  051D                     	;# 
  4484  058C                     	;# 
  4485  058C                     	;# 
  4486  058D                     	;# 
  4487  058E                     	;# 
  4488  058F                     	;# 
  4489  058F                     	;# 
  4490  0590                     	;# 
  4491  0591                     	;# 
  4492  0592                     	;# 
  4493  0593                     	;# 
  4494  060C                     	;# 
  4495  060D                     	;# 
  4496  060E                     	;# 
  4497  060F                     	;# 
  4498  0610                     	;# 
  4499  0611                     	;# 
  4500  0612                     	;# 
  4501  0613                     	;# 
  4502  0614                     	;# 
  4503  0616                     	;# 
  4504  0617                     	;# 
  4505  0618                     	;# 
  4506  0619                     	;# 
  4507  061A                     	;# 
  4508  061B                     	;# 
  4509  061C                     	;# 
  4510  061D                     	;# 
  4511  061E                     	;# 
  4512  068C                     	;# 
  4513  068D                     	;# 
  4514  068E                     	;# 
  4515  068F                     	;# 
  4516  0690                     	;# 
  4517  0691                     	;# 
  4518  0692                     	;# 
  4519  0693                     	;# 
  4520  0694                     	;# 
  4521  070C                     	;# 
  4522  070D                     	;# 
  4523  070E                     	;# 
  4524  070F                     	;# 
  4525  0710                     	;# 
  4526  0711                     	;# 
  4527  0712                     	;# 
  4528  0713                     	;# 
  4529  0714                     	;# 
  4530  0716                     	;# 
  4531  0717                     	;# 
  4532  0718                     	;# 
  4533  0719                     	;# 
  4534  071A                     	;# 
  4535  071B                     	;# 
  4536  071C                     	;# 
  4537  071D                     	;# 
  4538  071E                     	;# 
  4539  0796                     	;# 
  4540  0797                     	;# 
  4541  0798                     	;# 
  4542  0799                     	;# 
  4543  079A                     	;# 
  4544  079B                     	;# 
  4545  080C                     	;# 
  4546  080D                     	;# 
  4547  080E                     	;# 
  4548  080F                     	;# 
  4549  0810                     	;# 
  4550  0811                     	;# 
  4551  0812                     	;# 
  4552  0813                     	;# 
  4553  0814                     	;# 
  4554  081A                     	;# 
  4555  081B                     	;# 
  4556  081C                     	;# 
  4557  081D                     	;# 
  4558  081E                     	;# 
  4559  081F                     	;# 
  4560  088C                     	;# 
  4561  088D                     	;# 
  4562  088E                     	;# 
  4563  088F                     	;# 
  4564  0890                     	;# 
  4565  0891                     	;# 
  4566  0892                     	;# 
  4567  0893                     	;# 
  4568  0895                     	;# 
  4569  0896                     	;# 
  4570  0897                     	;# 
  4571  0898                     	;# 
  4572  0899                     	;# 
  4573  089A                     	;# 
  4574  089B                     	;# 
  4575  090C                     	;# 
  4576  090E                     	;# 
  4577  090F                     	;# 
  4578  091F                     	;# 
  4579  091F                     	;# 
  4580  098F                     	;# 
  4581  098F                     	;# 
  4582  0990                     	;# 
  4583  0991                     	;# 
  4584  0992                     	;# 
  4585  0993                     	;# 
  4586  0994                     	;# 
  4587  0995                     	;# 
  4588  0996                     	;# 
  4589  0997                     	;# 
  4590  0E0F                     	;# 
  4591  0E10                     	;# 
  4592  0E11                     	;# 
  4593  0E12                     	;# 
  4594  0E13                     	;# 
  4595  0E14                     	;# 
  4596  0E15                     	;# 
  4597  0E16                     	;# 
  4598  0E17                     	;# 
  4599  0E18                     	;# 
  4600  0E19                     	;# 
  4601  0E1A                     	;# 
  4602  0E1B                     	;# 
  4603  0E1C                     	;# 
  4604  0E1D                     	;# 
  4605  0E1E                     	;# 
  4606  0E1F                     	;# 
  4607  0E20                     	;# 
  4608  0E21                     	;# 
  4609  0E22                     	;# 
  4610  0E23                     	;# 
  4611  0E24                     	;# 
  4612  0E25                     	;# 
  4613  0E26                     	;# 
  4614  0E27                     	;# 
  4615  0E28                     	;# 
  4616  0E29                     	;# 
  4617  0E2A                     	;# 
  4618  0E2B                     	;# 
  4619  0E2C                     	;# 
  4620  0E2D                     	;# 
  4621  0E2E                     	;# 
  4622  0E2F                     	;# 
  4623  0E30                     	;# 
  4624  0E31                     	;# 
  4625  0E32                     	;# 
  4626  0E33                     	;# 
  4627  0E34                     	;# 
  4628  0E35                     	;# 
  4629  0E36                     	;# 
  4630  0E37                     	;# 
  4631  0E8F                     	;# 
  4632  0E90                     	;# 
  4633  0E91                     	;# 
  4634  0E92                     	;# 
  4635  0E93                     	;# 
  4636  0E94                     	;# 
  4637  0E95                     	;# 
  4638  0E96                     	;# 
  4639  0E97                     	;# 
  4640  0E9C                     	;# 
  4641  0E9D                     	;# 
  4642  0E9E                     	;# 
  4643  0EA1                     	;# 
  4644  0EA2                     	;# 
  4645  0EA3                     	;# 
  4646  0EA4                     	;# 
  4647  0EA5                     	;# 
  4648  0EA9                     	;# 
  4649  0EAA                     	;# 
  4650  0EAB                     	;# 
  4651  0EAC                     	;# 
  4652  0EB1                     	;# 
  4653  0EB2                     	;# 
  4654  0EB3                     	;# 
  4655  0EB8                     	;# 
  4656  0EB9                     	;# 
  4657  0EBA                     	;# 
  4658  0EBB                     	;# 
  4659  0EBC                     	;# 
  4660  0EBD                     	;# 
  4661  0EBE                     	;# 
  4662  0EC3                     	;# 
  4663  0EC5                     	;# 
  4664  0EC6                     	;# 
  4665  0EC7                     	;# 
  4666  0EC8                     	;# 
  4667  0EC9                     	;# 
  4668  0ECA                     	;# 
  4669  0ECB                     	;# 
  4670  0ECC                     	;# 
  4671  0F10                     	;# 
  4672  0F11                     	;# 
  4673  0F12                     	;# 
  4674  0F13                     	;# 
  4675  0F14                     	;# 
  4676  0F15                     	;# 
  4677  0F16                     	;# 
  4678  0F17                     	;# 
  4679  0F18                     	;# 
  4680  0F19                     	;# 
  4681  0F1A                     	;# 
  4682  0F1B                     	;# 
  4683  0F1C                     	;# 
  4684  0F1D                     	;# 
  4685  0F1E                     	;# 
  4686  0F1F                     	;# 
  4687  0F20                     	;# 
  4688  0F21                     	;# 
  4689  0F22                     	;# 
  4690  0F23                     	;# 
  4691  0F24                     	;# 
  4692  0F25                     	;# 
  4693  0F26                     	;# 
  4694  0F27                     	;# 
  4695  0F38                     	;# 
  4696  0F39                     	;# 
  4697  0F3A                     	;# 
  4698  0F3B                     	;# 
  4699  0F3C                     	;# 
  4700  0F3D                     	;# 
  4701  0F3E                     	;# 
  4702  0F3F                     	;# 
  4703  0F40                     	;# 
  4704  0F41                     	;# 
  4705  0F43                     	;# 
  4706  0F44                     	;# 
  4707  0F45                     	;# 
  4708  0F46                     	;# 
  4709  0F47                     	;# 
  4710  0F48                     	;# 
  4711  0F49                     	;# 
  4712  0F4A                     	;# 
  4713  0F4B                     	;# 
  4714  0F4C                     	;# 
  4715  0F4E                     	;# 
  4716  0F4F                     	;# 
  4717  0F50                     	;# 
  4718  0F51                     	;# 
  4719  0F52                     	;# 
  4720  0F53                     	;# 
  4721  0F54                     	;# 
  4722  0F55                     	;# 
  4723  0F56                     	;# 
  4724  0F57                     	;# 
  4725  0F65                     	;# 
  4726  0F68                     	;# 
  4727  0F69                     	;# 
  4728  0F6A                     	;# 
  4729  0F6B                     	;# 
  4730  0FE4                     	;# 
  4731  0FE5                     	;# 
  4732  0FE6                     	;# 
  4733  0FE7                     	;# 
  4734  0FE8                     	;# 
  4735  0FE9                     	;# 
  4736  0FEA                     	;# 
  4737  0FEB                     	;# 
  4738  0FED                     	;# 
  4739  0FEE                     	;# 
  4740  0FEF                     	;_samples
  4741                           
  4742                           	psect	idataBANK0
  4743  0B51                     __pidataBANK0:	
  4744                           
  4745                           ;initializer for _Imode0
  4746  0B51  3401               	retlw	1
  4747                           
  4748                           	psect	idataBANK2
  4749  0B81                     __pidataBANK2:	
  4750                           
  4751                           ;initializer for _channels
  4752  0B81  3417               	retlw	23
  4753  0B82  3400               	retlw	0
  4754  0B83  3415               	retlw	21
  4755  0B84  3400               	retlw	0
  4756  0B85  3413               	retlw	19
  4757  0B86  3400               	retlw	0
  4758  0B87  3411               	retlw	17
  4759  0B88  3400               	retlw	0
  4760  0B89  3416               	retlw	22
  4761  0B8A  3400               	retlw	0
  4762  0B8B  3414               	retlw	20
  4763  0B8C  3400               	retlw	0
  4764  0B8D  3412               	retlw	18
  4765  0B8E  3400               	retlw	0
  4766  0B8F  3410               	retlw	16
  4767  0B90  3400               	retlw	0
  4768                           
  4769                           	psect	stringtext1
  4770  0800                     __pstringtext1:	
  4771  0800                     _fonts:	
  4772  0800  3400               	retlw	0
  4773  0801  3400               	retlw	0
  4774  0802  3400               	retlw	0
  4775  0803  3400               	retlw	0
  4776  0804  344E               	retlw	78
  4777  0805  3400               	retlw	0
  4778  0806  3406               	retlw	6
  4779  0807  3400               	retlw	0
  4780  0808  3406               	retlw	6
  4781  0809  34FF               	retlw	255
  4782  080A  34FF               	retlw	255
  4783  080B  34FF               	retlw	255
  4784  080C  3448               	retlw	72
  4785  080D  34D6               	retlw	214
  4786  080E  3424               	retlw	36
  4787  080F  3412               	retlw	18
  4788  0810  3408               	retlw	8
  4789  0811  3424               	retlw	36
  4790  0812  34FF               	retlw	255
  4791  0813  34FF               	retlw	255
  4792  0814  34FF               	retlw	255
  4793  0815  3400               	retlw	0
  4794  0816  3406               	retlw	6
  4795  0817  3400               	retlw	0
  4796  0818  3438               	retlw	56
  4797  0819  3444               	retlw	68
  4798  081A  3482               	retlw	130
  4799  081B  3482               	retlw	130
  4800  081C  3444               	retlw	68
  4801  081D  3438               	retlw	56
  4802  081E  3414               	retlw	20
  4803  081F  3408               	retlw	8
  4804  0820  343E               	retlw	62
  4805  0821  3410               	retlw	16
  4806  0822  3438               	retlw	56
  4807  0823  3410               	retlw	16
  4808  0824  34A0               	retlw	160
  4809  0825  3460               	retlw	96
  4810  0826  3400               	retlw	0
  4811  0827  3410               	retlw	16
  4812  0828  3410               	retlw	16
  4813  0829  3410               	retlw	16
  4814  082A  3460               	retlw	96
  4815  082B  3460               	retlw	96
  4816  082C  3400               	retlw	0
  4817  082D  3460               	retlw	96
  4818  082E  3418               	retlw	24
  4819  082F  3406               	retlw	6
  4820  0830  347C               	retlw	124
  4821  0831  3442               	retlw	66
  4822  0832  347C               	retlw	124
  4823  0833  3444               	retlw	68
  4824  0834  347E               	retlw	126
  4825  0835  3440               	retlw	64
  4826  0836  3464               	retlw	100
  4827  0837  3452               	retlw	82
  4828  0838  344C               	retlw	76
  4829  0839  344A               	retlw	74
  4830  083A  344A               	retlw	74
  4831  083B  3434               	retlw	52
  4832  083C  3438               	retlw	56
  4833  083D  3424               	retlw	36
  4834  083E  347E               	retlw	126
  4835  083F  344E               	retlw	78
  4836  0840  344A               	retlw	74
  4837  0841  3432               	retlw	50
  4838  0842  343C               	retlw	60
  4839  0843  344A               	retlw	74
  4840  0844  3432               	retlw	50
  4841  0845  3462               	retlw	98
  4842  0846  341A               	retlw	26
  4843  0847  3406               	retlw	6
  4844  0848  3476               	retlw	118
  4845  0849  344A               	retlw	74
  4846  084A  3476               	retlw	118
  4847  084B  344C               	retlw	76
  4848  084C  3452               	retlw	82
  4849  084D  343C               	retlw	60
  4850  084E  346C               	retlw	108
  4851  084F  346C               	retlw	108
  4852  0850  3400               	retlw	0
  4853  0851  34AC               	retlw	172
  4854  0852  346C               	retlw	108
  4855  0853  3400               	retlw	0
  4856  0854  3410               	retlw	16
  4857  0855  3428               	retlw	40
  4858  0856  3444               	retlw	68
  4859  0857  3428               	retlw	40
  4860  0858  3428               	retlw	40
  4861  0859  3428               	retlw	40
  4862  085A  3444               	retlw	68
  4863  085B  3428               	retlw	40
  4864  085C  3410               	retlw	16
  4865  085D  3402               	retlw	2
  4866  085E  3459               	retlw	89
  4867  085F  3406               	retlw	6
  4868  0860  34FF               	retlw	255
  4869  0861  34FF               	retlw	255
  4870  0862  34FF               	retlw	255
  4871  0863  347C               	retlw	124
  4872  0864  3412               	retlw	18
  4873  0865  347C               	retlw	124
  4874  0866  347E               	retlw	126
  4875  0867  345A               	retlw	90
  4876  0868  3434               	retlw	52
  4877  0869  343C               	retlw	60
  4878  086A  3442               	retlw	66
  4879  086B  3442               	retlw	66
  4880  086C  347E               	retlw	126
  4881  086D  3442               	retlw	66
  4882  086E  343C               	retlw	60
  4883  086F  347E               	retlw	126
  4884  0870  344A               	retlw	74
  4885  0871  3442               	retlw	66
  4886  0872  347E               	retlw	126
  4887  0873  340A               	retlw	10
  4888  0874  340A               	retlw	10
  4889  0875  343C               	retlw	60
  4890  0876  3452               	retlw	82
  4891  0877  3434               	retlw	52
  4892  0878  347E               	retlw	126
  4893  0879  3408               	retlw	8
  4894  087A  347E               	retlw	126
  4895  087B  3442               	retlw	66
  4896  087C  347E               	retlw	126
  4897  087D  3442               	retlw	66
  4898  087E  3430               	retlw	48
  4899  087F  3440               	retlw	64
  4900  0880  343E               	retlw	62
  4901  0881  347E               	retlw	126
  4902  0882  3418               	retlw	24
  4903  0883  3466               	retlw	102
  4904  0884  347E               	retlw	126
  4905  0885  3440               	retlw	64
  4906  0886  3440               	retlw	64
  4907  0887  347E               	retlw	126
  4908  0888  341C               	retlw	28
  4909  0889  347E               	retlw	126
  4910  088A  347E               	retlw	126
  4911  088B  3402               	retlw	2
  4912  088C  347E               	retlw	126
  4913  088D  343C               	retlw	60
  4914  088E  3442               	retlw	66
  4915  088F  343C               	retlw	60
  4916  0890  347E               	retlw	126
  4917  0891  3412               	retlw	18
  4918  0892  340C               	retlw	12
  4919  0893  347E               	retlw	126
  4920  0894  3462               	retlw	98
  4921  0895  34FE               	retlw	254
  4922  0896  347E               	retlw	126
  4923  0897  3432               	retlw	50
  4924  0898  344E               	retlw	78
  4925  0899  3444               	retlw	68
  4926  089A  344A               	retlw	74
  4927  089B  3432               	retlw	50
  4928  089C  3402               	retlw	2
  4929  089D  347E               	retlw	126
  4930  089E  3402               	retlw	2
  4931  089F  347E               	retlw	126
  4932  08A0  3440               	retlw	64
  4933  08A1  347E               	retlw	126
  4934  08A2  343E               	retlw	62
  4935  08A3  3440               	retlw	64
  4936  08A4  343E               	retlw	62
  4937  08A5  347E               	retlw	126
  4938  08A6  3438               	retlw	56
  4939  08A7  347E               	retlw	126
  4940  08A8  3466               	retlw	102
  4941  08A9  3418               	retlw	24
  4942  08AA  3466               	retlw	102
  4943  08AB  340E               	retlw	14
  4944  08AC  3470               	retlw	112
  4945  08AD  340E               	retlw	14
  4946  08AE  3462               	retlw	98
  4947  08AF  345A               	retlw	90
  4948  08B0  3446               	retlw	70
  4949  08B1  3400               	retlw	0
  4950  08B2  347E               	retlw	126
  4951  08B3  3442               	retlw	66
  4952  08B4  3406               	retlw	6
  4953  08B5  3418               	retlw	24
  4954  08B6  3460               	retlw	96
  4955  08B7  3442               	retlw	66
  4956  08B8  347E               	retlw	126
  4957  08B9  3400               	retlw	0
  4958  08BA  3404               	retlw	4
  4959  08BB  3402               	retlw	2
  4960  08BC  3404               	retlw	4
  4961  08BD  3440               	retlw	64
  4962  08BE  3440               	retlw	64
  4963  08BF  3440               	retlw	64
  4964  08C0  3400               	retlw	0
  4965  08C1  3402               	retlw	2
  4966  08C2  3404               	retlw	4
  4967  08C3  3474               	retlw	116
  4968  08C4  3454               	retlw	84
  4969  08C5  3478               	retlw	120
  4970  08C6  347E               	retlw	126
  4971  08C7  3448               	retlw	72
  4972  08C8  3430               	retlw	48
  4973  08C9  3430               	retlw	48
  4974  08CA  3448               	retlw	72
  4975  08CB  3448               	retlw	72
  4976  08CC  3430               	retlw	48
  4977  08CD  3448               	retlw	72
  4978  08CE  347E               	retlw	126
  4979  08CF  3438               	retlw	56
  4980  08D0  3454               	retlw	84
  4981  08D1  3458               	retlw	88
  4982  08D2  347C               	retlw	124
  4983  08D3  340A               	retlw	10
  4984  08D4  3402               	retlw	2
  4985  08D5  3498               	retlw	152
  4986  08D6  34A4               	retlw	164
  4987  08D7  347C               	retlw	124
  4988  08D8  347E               	retlw	126
  4989  08D9  3408               	retlw	8
  4990  08DA  3470               	retlw	112
  4991  08DB  3448               	retlw	72
  4992  08DC  347A               	retlw	122
  4993  08DD  3440               	retlw	64
  4994  08DE  3488               	retlw	136
  4995  08DF  34FA               	retlw	250
  4996  08E0  3400               	retlw	0
  4997  08E1  347E               	retlw	126
  4998  08E2  3418               	retlw	24
  4999  08E3  3464               	retlw	100
  5000  08E4  3442               	retlw	66
  5001  08E5  347E               	retlw	126
  5002  08E6  3440               	retlw	64
  5003  08E7  347C               	retlw	124
  5004  08E8  3438               	retlw	56
  5005  08E9  347C               	retlw	124
  5006  08EA  347C               	retlw	124
  5007  08EB  3404               	retlw	4
  5008  08EC  3478               	retlw	120
  5009  08ED  3438               	retlw	56
  5010  08EE  3444               	retlw	68
  5011  08EF  3438               	retlw	56
  5012  08F0  34FC               	retlw	252
  5013  08F1  3424               	retlw	36
  5014  08F2  3418               	retlw	24
  5015  08F3  3418               	retlw	24
  5016  08F4  3424               	retlw	36
  5017  08F5  34FC               	retlw	252
  5018  08F6  3478               	retlw	120
  5019  08F7  3404               	retlw	4
  5020  08F8  3404               	retlw	4
  5021  08F9  3448               	retlw	72
  5022  08FA  3454               	retlw	84
  5023  08FB  3424               	retlw	36
  5024  08FC  3404               	retlw	4
  5025  08FD  343E               	retlw	62
  5026  08FE  3444               	retlw	68
  5027  08FF  347C               	retlw	124
  5028  0900  3440               	retlw	64
  5029  0901  347C               	retlw	124
  5030  0902  343C               	retlw	60
  5031  0903  3440               	retlw	64
  5032  0904  343C               	retlw	60
  5033  0905  347C               	retlw	124
  5034  0906  3430               	retlw	48
  5035  0907  347C               	retlw	124
  5036  0908  346C               	retlw	108
  5037  0909  3410               	retlw	16
  5038  090A  346C               	retlw	108
  5039  090B  349C               	retlw	156
  5040  090C  34A0               	retlw	160
  5041  090D  347C               	retlw	124
  5042  090E  3464               	retlw	100
  5043  090F  3454               	retlw	84
  5044  0910  344C               	retlw	76
  5045  0911  340C               	retlw	12
  5046  0912  3412               	retlw	18
  5047  0913  340C               	retlw	12
  5048  0914  34FF               	retlw	255
  5049  0915  34FF               	retlw	255
  5050  0916  34FF               	retlw	255
  5051  0917  34FF               	retlw	255
  5052  0918  34FF               	retlw	255
  5053  0919  34FF               	retlw	255
  5054  091A  34FF               	retlw	255
  5055  091B  34FF               	retlw	255
  5056  091C  34FF               	retlw	255
  5057  091D  34FF               	retlw	255
  5058  091E  34FF               	retlw	255
  5059  091F  34FF               	retlw	255
  5060  0920  34FF               	retlw	255
  5061  0921  34FF               	retlw	255
  5062  0922  34FF               	retlw	255
  5063  0923  34FF               	retlw	255
  5064  0924  34FF               	retlw	255
  5065  0925  34FF               	retlw	255
  5066  0926  34FC               	retlw	252
  5067  0927  3440               	retlw	64
  5068  0928  347C               	retlw	124
  5069  0929  34FF               	retlw	255
  5070  092A  34FF               	retlw	255
  5071  092B  34FF               	retlw	255
  5072  092C  34FF               	retlw	255
  5073  092D  34FF               	retlw	255
  5074  092E  34FF               	retlw	255
  5075  092F                     __end_of_fonts:	
  5076                           
  5077                           	psect	nvBANK0
  5078  006B                     __pnvBANK0:	
  5079  006B                     _Vref:	
  5080  006B                     	ds	2
  5081  006D                     _battery_state:	
  5082  006D                     	ds	1
  5083                           
  5084                           	psect	nvBANK1
  5085  00DF                     __pnvBANK1:	
  5086  00DF                     _Iref:	
  5087  00DF                     	ds	2
  5088  00E1                     _Imin:	
  5089  00E1                     	ds	2
  5090  00E3                     _state_counter:	
  5091  00E3                     	ds	2
  5092  00E5                     _IminCount:	
  5093  00E5                     	ds	2
  5094  0013                     _TRISC	set	19
  5095  0012                     _TRISB	set	18
  5096  0011                     _TRISA	set	17
  5097  0018                     _LATC	set	24
  5098  0017                     _LATB	set	23
  5099  0016                     _LATA	set	22
  5100  0016                     _LATAbits	set	22
  5101  0011                     _TRISAbits	set	17
  5102  006A                     _RB2	set	106
  5103  00B8                     _LATB0	set	184
  5104  005F                     _GIE	set	95
  5105  0093                     _ADCON0	set	147
  5106  009D                     _ADACQ	set	157
  5107  009C                     _ADPRE	set	156
  5108  009B                     _ADCAP	set	155
  5109  009A                     _ADREF	set	154
  5110  0098                     _ADCLK	set	152
  5111  0097                     _ADSTAT	set	151
  5112  0099                     _ADACT	set	153
  5113  0096                     _ADCON3	set	150
  5114  0095                     _ADCON2	set	149
  5115  0094                     _ADCON1	set	148
  5116  008C                     _ADRESL	set	140
  5117  008D                     _ADRESH	set	141
  5118  0093                     _ADCON0bits	set	147
  5119  009E                     _ADPCH	set	158
  5120  0113                     _ADSTPTH	set	275
  5121  0112                     _ADSTPTL	set	274
  5122  0111                     _ADUTHH	set	273
  5123  0110                     _ADUTHL	set	272
  5124  010F                     _ADLTHH	set	271
  5125  010E                     _ADLTHL	set	270
  5126  010D                     _ADRPT	set	269
  5127  021F                     _CCPTMRS1bits	set	543
  5128  028E                     _T2CONbits	set	654
  5129  028C                     _T2TMR	set	652
  5130  028D                     _T2PR	set	653
  5131  0291                     _T2RST	set	657
  5132  028F                     _T2HLT	set	655
  5133  0290                     _T2CLKCON	set	656
  5134  028E                     _T2CON	set	654
  5135  0390                     _PWM7DCL	set	912
  5136  0391                     _PWM7DCH	set	913
  5137  0392                     _PWM7CON	set	914
  5138  038C                     _PWM6DCL	set	908
  5139  038D                     _PWM6DCH	set	909
  5140  038E                     _PWM6CON	set	910
  5141  0710                     _PIR4bits	set	1808
  5142  0716                     _PIE0bits	set	1814
  5143  0892                     _OSCTUNE	set	2194
  5144  0893                     _OSCFRQ	set	2195
  5145  0891                     _OSCEN	set	2193
  5146  088F                     _OSCCON3	set	2191
  5147  088D                     _OSCCON1	set	2189
  5148  090C                     _FVRCON	set	2316
  5149  0E8F                     _PPSLOCKbits	set	3727
  5150  0E8F                     _PPSLOCK	set	3727
  5151  0F17                     _RA7PPS	set	3863
  5152  0F16                     _RA6PPS	set	3862
  5153  0F4E                     _ANSELC	set	3918
  5154  0F43                     _ANSELB	set	3907
  5155  0F38                     _ANSELA	set	3896
  5156  0F65                     _WPUE	set	3941
  5157  0F4F                     _WPUC	set	3919
  5158  0F44                     _WPUB	set	3908
  5159  0F39                     _WPUA	set	3897
  5160                           
  5161                           ; #config settings
  5162  0000                     
  5163                           	psect	cinit
  5164  07CB                     start_initialization:	
  5165  07CB                     __initialization:		;BIGRAM
  5166                           
  5167                           ; Initialize objects allocated to BANK0
  5168  07CB  318B  2351  3187   	fcall	__pidataBANK0	;fetch initializer
  5169  07CE  00EE               	movwf	__pdataBANK0& (0+127)
  5170                           
  5171                           ; Initialize objects allocated to BANK2
  5172  07CF  3081               	movlw	low __pidataBANK2
  5173  07D0  0084               	movwf	4
  5174  07D1  308B               	movlw	(high __pidataBANK2)| (0+128)
  5175  07D2  0085               	movwf	5
  5176  07D3  3020               	movlw	low __pdataBANK2
  5177  07D4  0086               	movwf	6
  5178  07D5  3001               	movlw	high __pdataBANK2
  5179  07D6  0087               	movwf	7
  5180  07D7  3000               	movlw	0
  5181  07D8  00FF               	movwf	btemp+1
  5182  07D9  3010               	movlw	16
  5183  07DA  318B  2367  3187   	fcall	init_ram
  5184                           
  5185                           ; Clear objects allocated to BIGRAM
  5186  07DD  30D0               	movlw	low (0+8400)
  5187  07DE  0084               	movwf	4
  5188  07DF  3020               	movlw	high (0+8400)
  5189  07E0  0085               	movwf	5
  5190  07E1  3020               	movlw	32
  5191  07E2  00FE               	movwf	btemp
  5192  07E3  3003               	movlw	3
  5193  07E4  00FF               	movwf	btemp+1
  5194  07E5  318B  235B  3187   	fcall	clear_ram0
  5195                           
  5196                           ; Clear objects allocated to BANK0
  5197  07E8  3057               	movlw	low __pbssBANK0
  5198  07E9  0084               	movwf	4
  5199  07EA  3000               	movlw	high __pbssBANK0
  5200  07EB  0085               	movwf	5
  5201  07EC  3014               	movlw	20
  5202  07ED  00FE               	movwf	btemp
  5203  07EE  3000               	movlw	0
  5204  07EF  00FF               	movwf	btemp+1
  5205  07F0  318B  235B  3187   	fcall	clear_ram0
  5206                           
  5207                           ; Clear objects allocated to BANK1
  5208  07F3  30A0               	movlw	low __pbssBANK1
  5209  07F4  0084               	movwf	4
  5210  07F5  3000               	movlw	high __pbssBANK1
  5211  07F6  0085               	movwf	5
  5212  07F7  303F               	movlw	63
  5213  07F8  00FE               	movwf	btemp
  5214  07F9  3000               	movlw	0
  5215  07FA  00FF               	movwf	btemp+1
  5216  07FB  318B  235B         	fcall	clear_ram0
  5217  07FD                     end_of_initialization:	
  5218                           ;End of C runtime variable initialization code
  5219                           
  5220  07FD                     __end_of__initialization:	
  5221  07FD  0020               	movlb	0
  5222  07FE  3183  2BF9         	ljmp	_main	;jump to C main() function
  5223                           
  5224                           	psect	bssBANK0
  5225  0057                     __pbssBANK0:	
  5226  0057                     _voltage:	
  5227  0057                     	ds	8
  5228  005F                     _readButtons:	
  5229  005F                     	ds	2
  5230  0061                     _warmup:	
  5231  0061                     	ds	2
  5232  0063                     _Iflat_db:	
  5233  0063                     	ds	2
  5234  0065                     _sampleIndex:	
  5235  0065                     	ds	2
  5236  0067                     _j:	
  5237  0067                     	ds	1
  5238  0068                     _lastButton:	
  5239  0068                     	ds	1
  5240  0069                     _button:	
  5241  0069                     	ds	1
  5242  006A                     _cc_cv:	
  5243  006A                     	ds	1
  5244                           
  5245                           	psect	dataBANK0
  5246  006E                     __pdataBANK0:	
  5247  006E                     _Imode0:	
  5248  006E                     	ds	1
  5249                           
  5250                           	psect	bssBANK1
  5251  00A0                     __pbssBANK1:	
  5252  00A0                     _totals:	
  5253  00A0                     	ds	32
  5254  00C0                     _analogs:	
  5255  00C0                     	ds	16
  5256  00D0                     _current:	
  5257  00D0                     	ds	8
  5258  00D8                     LCDWriteInt@F14393:	
  5259  00D8                     	ds	5
  5260  00DD                     _Iout:	
  5261  00DD                     	ds	2
  5262                           
  5263                           	psect	dataBANK2
  5264  0120                     __pdataBANK2:	
  5265  0120                     _channels:	
  5266  0120                     	ds	16
  5267                           
  5268                           	psect	inittext
  5269  0B67                     init_ram:	
  5270  0B67  00FE               	movwf	126
  5271  0B68                     initloop:	
  5272  0B68  0012               	moviw fsr0++
  5273  0B69  001E               	movwi fsr1++
  5274  0B6A  3001               	movlw	1
  5275  0B6B  02FE               	subwf	126,f
  5276  0B6C  3000               	movlw	0
  5277  0B6D  3BFF               	subwfb	127,f
  5278  0B6E  087F               	movf	127,w
  5279  0B6F  047E               	iorwf	126,w
  5280  0B70  1903               	btfsc	3,2
  5281  0B71  3400               	retlw	0
  5282  0B72  2B68               	goto	initloop
  5283                           
  5284                           	psect	clrtext
  5285  0B5B                     clear_ram0:	
  5286                           ;	Called with FSR0 containing the base address, and
  5287                           ;	btemp/btemp+1 has the size to clear
  5288                           
  5289  0B5B  0064               	clrwdt	;clear the watchdog before getting into this loop
  5290  0B5C                     clrloop0:	
  5291  0B5C  0180               	clrf	0	;clear RAM location pointed to by FSR
  5292  0B5D  3101               	addfsr 0,1
  5293  0B5E  3001               	movlw	1
  5294  0B5F  02FE               	subwf	126,f
  5295  0B60  3000               	movlw	0
  5296  0B61  3BFF               	subwfb	127,f
  5297  0B62  087F               	movf	127,w
  5298  0B63  047E               	iorwf	126,w
  5299  0B64  1903               	btfsc	3,2
  5300  0B65  3400               	retlw	0	;all done for this memory range, return
  5301  0B66  2B5C               	goto	clrloop0	;have we reached the end yet?
  5302                           
  5303                           	psect	cstackCOMMON
  5304  0070                     __pcstackCOMMON:	
  5305  0070                     ?_LCDWrite:	
  5306  0070                     ?_OSCILLATOR_Initialize:	
  5307                           ; 1 bytes @ 0x0
  5308                           
  5309  0070                     ??_OSCILLATOR_Initialize:	
  5310                           ; 1 bytes @ 0x0
  5311                           
  5312  0070                     ?_calculateCurrent0:	
  5313                           ; 1 bytes @ 0x0
  5314                           
  5315  0070                     ?_calculateCurrent1:	
  5316                           ; 1 bytes @ 0x0
  5317                           
  5318  0070                     ?_ADC_Initialize:	
  5319                           ; 1 bytes @ 0x0
  5320                           
  5321  0070                     ??_ADC_Initialize:	
  5322                           ; 1 bytes @ 0x0
  5323                           
  5324  0070                     ?_Init_Battery_State_Machine:	
  5325                           ; 1 bytes @ 0x0
  5326                           
  5327  0070                     ??_Init_Battery_State_Machine:	
  5328                           ; 1 bytes @ 0x0
  5329                           
  5330  0070                     ?_Battery_State_Machine:	
  5331                           ; 1 bytes @ 0x0
  5332                           
  5333  0070                     ??_Battery_State_Machine:	
  5334                           ; 1 bytes @ 0x0
  5335                           
  5336  0070                     ?_cc_cv_mode:	
  5337                           ; 1 bytes @ 0x0
  5338                           
  5339  0070                     ??_cc_cv_mode:	
  5340                           ; 1 bytes @ 0x0
  5341                           
  5342  0070                     ?_LCDWriteCharacter:	
  5343                           ; 1 bytes @ 0x0
  5344                           
  5345  0070                     ?_LCDClear:	
  5346                           ; 1 bytes @ 0x0
  5347                           
  5348  0070                     ?_LCDInit:	
  5349                           ; 1 bytes @ 0x0
  5350                           
  5351  0070                     ?_PIN_MANAGER_Initialize:	
  5352                           ; 1 bytes @ 0x0
  5353                           
  5354  0070                     ??_PIN_MANAGER_Initialize:	
  5355                           ; 1 bytes @ 0x0
  5356                           
  5357  0070                     ?_PWM_Initialize:	
  5358                           ; 1 bytes @ 0x0
  5359                           
  5360  0070                     ??_PWM_Initialize:	
  5361                           ; 1 bytes @ 0x0
  5362                           
  5363  0070                     ?_PWM6_LoadDutyValue:	
  5364                           ; 1 bytes @ 0x0
  5365                           
  5366  0070                     ?_PWM7_LoadDutyValue:	
  5367                           ; 1 bytes @ 0x0
  5368                           
  5369  0070                     ?_TMR2_Initialize:	
  5370                           ; 1 bytes @ 0x0
  5371                           
  5372  0070                     ??_TMR2_Initialize:	
  5373                           ; 1 bytes @ 0x0
  5374                           
  5375  0070                     ?_SYSTEM_Initialize:	
  5376                           ; 1 bytes @ 0x0
  5377                           
  5378  0070                     ?_readButton:	
  5379                           ; 1 bytes @ 0x0
  5380                           
  5381  0070                     ?_main:	
  5382                           ; 1 bytes @ 0x0
  5383                           
  5384  0070                     ?_ADCRead:	
  5385                           ; 1 bytes @ 0x0
  5386                           
  5387  0070                     ?___awdiv:	
  5388                           ; 2 bytes @ 0x0
  5389                           
  5390  0070                     ?___lwmod:	
  5391                           ; 2 bytes @ 0x0
  5392                           
  5393  0070                     ?___ftpack:	
  5394                           ; 2 bytes @ 0x0
  5395                           
  5396  0070                     ?___aldiv:	
  5397                           ; 3 bytes @ 0x0
  5398                           
  5399  0070                     LCDWrite@data:	
  5400                           ; 4 bytes @ 0x0
  5401                           
  5402  0070                     PIN_MANAGER_Initialize@state:	
  5403                           ; 1 bytes @ 0x0
  5404                           
  5405  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  5406                           ; 1 bytes @ 0x0
  5407                           
  5408  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  5409                           ; 2 bytes @ 0x0
  5410                           
  5411  0070                     ___awdiv@divisor:	
  5412                           ; 2 bytes @ 0x0
  5413                           
  5414  0070                     ___lwmod@divisor:	
  5415                           ; 2 bytes @ 0x0
  5416                           
  5417  0070                     ___ftpack@arg:	
  5418                           ; 2 bytes @ 0x0
  5419                           
  5420  0070                     ___aldiv@divisor:	
  5421                           ; 3 bytes @ 0x0
  5422                           
  5423                           
  5424                           ; 4 bytes @ 0x0
  5425  0070                     	ds	1
  5426  0071                     ??_LCDWrite:	
  5427                           
  5428                           ; 1 bytes @ 0x1
  5429  0071                     	ds	1
  5430  0072                     ??_PWM6_LoadDutyValue:	
  5431  0072                     ??_PWM7_LoadDutyValue:	
  5432                           ; 1 bytes @ 0x2
  5433                           
  5434  0072                     LCDWrite@data_or_command:	
  5435                           ; 1 bytes @ 0x2
  5436                           
  5437  0072                     ___awdiv@dividend:	
  5438                           ; 1 bytes @ 0x2
  5439                           
  5440  0072                     ___lwmod@dividend:	
  5441                           ; 2 bytes @ 0x2
  5442                           
  5443                           
  5444                           ; 2 bytes @ 0x2
  5445  0072                     	ds	1
  5446  0073                     ??_ADCRead:	
  5447  0073                     ADCRead@channel:	
  5448                           ; 1 bytes @ 0x3
  5449                           
  5450  0073                     LCDWrite@d:	
  5451                           ; 1 bytes @ 0x3
  5452                           
  5453  0073                     ___ftpack@exp:	
  5454                           ; 1 bytes @ 0x3
  5455                           
  5456                           
  5457                           ; 1 bytes @ 0x3
  5458  0073                     	ds	1
  5459  0074                     ??_readButton:	
  5460  0074                     ??___awdiv:	
  5461                           ; 1 bytes @ 0x4
  5462                           
  5463  0074                     ??___lwmod:	
  5464                           ; 1 bytes @ 0x4
  5465                           
  5466  0074                     LCDWrite@i:	
  5467                           ; 1 bytes @ 0x4
  5468                           
  5469  0074                     ___ftpack@sign:	
  5470                           ; 1 bytes @ 0x4
  5471                           
  5472  0074                     ___aldiv@dividend:	
  5473                           ; 1 bytes @ 0x4
  5474                           
  5475                           
  5476                           ; 4 bytes @ 0x4
  5477  0074                     	ds	1
  5478  0075                     ??___ftpack:	
  5479  0075                     ?_gotoXY:	
  5480                           ; 1 bytes @ 0x5
  5481                           
  5482  0075                     ??_LCDInit:	
  5483                           ; 1 bytes @ 0x5
  5484                           
  5485  0075                     gotoXY@y:	
  5486                           ; 1 bytes @ 0x5
  5487                           
  5488  0075                     ___awdiv@counter:	
  5489                           ; 1 bytes @ 0x5
  5490                           
  5491  0075                     ___lwmod@counter:	
  5492                           ; 1 bytes @ 0x5
  5493                           
  5494                           
  5495                           ; 1 bytes @ 0x5
  5496  0075                     	ds	1
  5497  0076                     ??_gotoXY:	
  5498  0076                     ___awdiv@sign:	
  5499                           ; 1 bytes @ 0x6
  5500                           
  5501                           
  5502                           ; 1 bytes @ 0x6
  5503  0076                     	ds	1
  5504  0077                     gotoXY@x:	
  5505  0077                     ___awdiv@quotient:	
  5506                           ; 1 bytes @ 0x7
  5507                           
  5508                           
  5509                           ; 2 bytes @ 0x7
  5510  0077                     	ds	1
  5511  0078                     ??_LCDClear:	
  5512  0078                     ??___aldiv:	
  5513                           ; 1 bytes @ 0x8
  5514                           
  5515  0078                     ?___awtoft:	
  5516                           ; 1 bytes @ 0x8
  5517                           
  5518  0078                     ___awtoft@c:	
  5519                           ; 3 bytes @ 0x8
  5520                           
  5521                           
  5522                           ; 2 bytes @ 0x8
  5523  0078                     	ds	1
  5524  0079                     ?___wmul:	
  5525  0079                     LCDClear@index:	
  5526                           ; 2 bytes @ 0x9
  5527                           
  5528  0079                     ___wmul@multiplier:	
  5529                           ; 2 bytes @ 0x9
  5530                           
  5531                           
  5532                           ; 2 bytes @ 0x9
  5533  0079                     	ds	2
  5534  007B                     ??_SYSTEM_Initialize:	
  5535  007B                     ??___awtoft:	
  5536                           ; 1 bytes @ 0xB
  5537                           
  5538  007B                     ___wmul@multiplicand:	
  5539                           ; 1 bytes @ 0xB
  5540                           
  5541                           
  5542                           ; 2 bytes @ 0xB
  5543  007B                     	ds	2
  5544  007D                     ??___wmul:	
  5545  007D                     ___awtoft@sign:	
  5546                           ; 1 bytes @ 0xD
  5547                           
  5548                           
  5549                           ; 1 bytes @ 0xD
  5550  007D                     	ds	1
  5551                           
  5552                           	psect	cstackBANK0
  5553  0020                     __pcstackBANK0:	
  5554  0020                     ?___ftdiv:	
  5555  0020                     ___aldiv@counter:	
  5556                           ; 3 bytes @ 0x0
  5557                           
  5558  0020                     ___wmul@product:	
  5559                           ; 1 bytes @ 0x0
  5560                           
  5561  0020                     ___ftdiv@f2:	
  5562                           ; 2 bytes @ 0x0
  5563                           
  5564                           
  5565                           ; 3 bytes @ 0x0
  5566  0020                     	ds	1
  5567  0021                     ___aldiv@sign:	
  5568                           
  5569                           ; 1 bytes @ 0x1
  5570  0021                     	ds	1
  5571  0022                     ??_LCDWriteCharacter:	
  5572  0022                     ___aldiv@quotient:	
  5573                           ; 1 bytes @ 0x2
  5574                           
  5575                           
  5576                           ; 4 bytes @ 0x2
  5577  0022                     	ds	1
  5578  0023                     ___ftdiv@f1:	
  5579                           
  5580                           ; 3 bytes @ 0x3
  5581  0023                     	ds	2
  5582  0025                     LCDWriteCharacter@character:	
  5583                           
  5584                           ; 1 bytes @ 0x5
  5585  0025                     	ds	1
  5586  0026                     ??___ftdiv:	
  5587  0026                     ?_readAnalog:	
  5588                           ; 1 bytes @ 0x6
  5589                           
  5590  0026                     readAnalog@channel:	
  5591                           ; 2 bytes @ 0x6
  5592                           
  5593  0026                     LCDWriteCharacter@base:	
  5594                           ; 2 bytes @ 0x6
  5595                           
  5596                           
  5597                           ; 2 bytes @ 0x6
  5598  0026                     	ds	2
  5599  0028                     ??_readAnalog:	
  5600  0028                     ?_LCDWriteInt:	
  5601                           ; 1 bytes @ 0x8
  5602                           
  5603  0028                     LCDWriteInt@value:	
  5604                           ; 1 bytes @ 0x8
  5605                           
  5606                           
  5607                           ; 2 bytes @ 0x8
  5608  0028                     	ds	2
  5609  002A                     LCDWriteInt@fieldLength:	
  5610  002A                     ___ftdiv@cntr:	
  5611                           ; 1 bytes @ 0xA
  5612                           
  5613                           
  5614                           ; 1 bytes @ 0xA
  5615  002A                     	ds	1
  5616  002B                     LCDWriteInt@numPlaces:	
  5617  002B                     ___ftdiv@f3:	
  5618                           ; 1 bytes @ 0xB
  5619                           
  5620                           
  5621                           ; 3 bytes @ 0xB
  5622  002B                     	ds	1
  5623  002C                     LCDWriteInt@sign:	
  5624                           
  5625                           ; 1 bytes @ 0xC
  5626  002C                     	ds	1
  5627  002D                     ??_LCDWriteInt:	
  5628                           
  5629                           ; 1 bytes @ 0xD
  5630  002D                     	ds	1
  5631  002E                     ___ftdiv@exp:	
  5632                           
  5633                           ; 1 bytes @ 0xE
  5634  002E                     	ds	1
  5635  002F                     ___ftdiv@sign:	
  5636                           
  5637                           ; 1 bytes @ 0xF
  5638  002F                     	ds	1
  5639  0030                     ?___fttol:	
  5640  0030                     ___fttol@f1:	
  5641                           ; 4 bytes @ 0x10
  5642                           
  5643                           
  5644                           ; 3 bytes @ 0x10
  5645  0030                     	ds	1
  5646  0031                     LCDWriteInt@str:	
  5647                           
  5648                           ; 5 bytes @ 0x11
  5649  0031                     	ds	3
  5650  0034                     ??___fttol:	
  5651                           
  5652                           ; 1 bytes @ 0x14
  5653  0034                     	ds	2
  5654  0036                     LCDWriteInt@j:	
  5655                           
  5656                           ; 1 bytes @ 0x16
  5657  0036                     	ds	1
  5658  0037                     LCDWriteInt@i:	
  5659                           
  5660                           ; 1 bytes @ 0x17
  5661  0037                     	ds	1
  5662  0038                     ___fttol@sign1:	
  5663                           
  5664                           ; 1 bytes @ 0x18
  5665  0038                     	ds	1
  5666  0039                     ___fttol@lval:	
  5667                           
  5668                           ; 4 bytes @ 0x19
  5669  0039                     	ds	1
  5670  003A                     readAnalog@analog_channel:	
  5671                           
  5672                           ; 2 bytes @ 0x1A
  5673  003A                     	ds	2
  5674  003C                     readAnalog@value:	
  5675                           
  5676                           ; 2 bytes @ 0x1C
  5677  003C                     	ds	1
  5678  003D                     ___fttol@exp1:	
  5679                           
  5680                           ; 1 bytes @ 0x1D
  5681  003D                     	ds	1
  5682  003E                     ??_calculateCurrent0:	
  5683  003E                     ??_calculateCurrent1:	
  5684                           ; 1 bytes @ 0x1E
  5685                           
  5686                           
  5687                           ; 1 bytes @ 0x1E
  5688  003E                     	ds	3
  5689  0041                     ??_main:	
  5690                           
  5691                           ; 1 bytes @ 0x21
  5692  0041                     	ds	2
  5693  0043                     main@VIn0_Old:	
  5694                           
  5695                           ; 2 bytes @ 0x23
  5696  0043                     	ds	2
  5697  0045                     main@power0OutOld:	
  5698                           
  5699                           ; 2 bytes @ 0x25
  5700  0045                     	ds	2
  5701  0047                     main@power1OutOld:	
  5702                           
  5703                           ; 2 bytes @ 0x27
  5704  0047                     	ds	2
  5705  0049                     main@fastLoop:	
  5706                           
  5707                           ; 1 bytes @ 0x29
  5708  0049                     	ds	1
  5709  004A                     main@slowLoop:	
  5710                           
  5711                           ; 1 bytes @ 0x2A
  5712  004A                     	ds	1
  5713  004B                     main@VIn1_Old:	
  5714                           
  5715                           ; 2 bytes @ 0x2B
  5716  004B                     	ds	2
  5717  004D                     _main$1022:	
  5718                           
  5719                           ; 2 bytes @ 0x2D
  5720  004D                     	ds	2
  5721  004F                     _main$1021:	
  5722                           
  5723                           ; 2 bytes @ 0x2F
  5724  004F                     	ds	2
  5725  0051                     main@menuButton:	
  5726                           
  5727                           ; 1 bytes @ 0x31
  5728  0051                     	ds	1
  5729  0052                     main@dutyCycle7:	
  5730                           
  5731                           ; 2 bytes @ 0x32
  5732  0052                     	ds	2
  5733  0054                     main@j:	
  5734                           
  5735                           ; 1 bytes @ 0x34
  5736  0054                     	ds	1
  5737  0055                     main@dutyCycle6:	
  5738                           
  5739                           ; 2 bytes @ 0x35
  5740  0055                     	ds	2
  5741                           
  5742                           	psect	maintext
  5743  03F9                     __pmaintext:	
  5744 ;;
  5745 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5746 ;;
  5747 ;; *************** function _main *****************
  5748 ;; Defined at:
  5749 ;;		line 39 in file "main.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;		None
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  dutyCycle6      2   53[BANK0 ] unsigned int 
  5754 ;;  dutyCycle7      2   50[BANK0 ] unsigned int 
  5755 ;;  VIn1_Old        2   43[BANK0 ] int 
  5756 ;;  power1OutOld    2   39[BANK0 ] int 
  5757 ;;  power0OutOld    2   37[BANK0 ] int 
  5758 ;;  VIn0_Old        2   35[BANK0 ] int 
  5759 ;;  j               1   52[BANK0 ] unsigned char 
  5760 ;;  menuButton      1   49[BANK0 ] unsigned char 
  5761 ;;  slowLoop        1   42[BANK0 ] unsigned char 
  5762 ;;  fastLoop        1   41[BANK0 ] unsigned char 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      void 
  5765 ;; Registers used:
  5766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : B1F/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;Total ram usage:       22 bytes
  5777 ;; Hardware stack levels required when called:    4
  5778 ;; This function calls:
  5779 ;;		_ADCRead
  5780 ;;		_Battery_State_Machine
  5781 ;;		_LCDClear
  5782 ;;		_LCDInit
  5783 ;;		_LCDWriteCharacter
  5784 ;;		_LCDWriteInt
  5785 ;;		_PWM6_LoadDutyValue
  5786 ;;		_PWM7_LoadDutyValue
  5787 ;;		_SYSTEM_Initialize
  5788 ;;		___awdiv
  5789 ;;		___awtoft
  5790 ;;		___ftdiv
  5791 ;;		___fttol
  5792 ;;		___wmul
  5793 ;;		_calculateCurrent0
  5794 ;;		_calculateCurrent1
  5795 ;;		_cc_cv_mode
  5796 ;;		_gotoXY
  5797 ;;		_readAnalog
  5798 ;;		_readButton
  5799 ;; This function is called by:
  5800 ;;		Startup code after reset
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           
  5805                           ;psect for function _main
  5806  03F9                     _main:	
  5807                           
  5808                           ;main.c: 41: int16_t VIn0_Old = 0;
  5809                           
  5810                           ;incstack = 0
  5811                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5812  03F9  0020               	movlb	0	; select bank0
  5813  03FA  01C3               	clrf	main@VIn0_Old
  5814  03FB  01C4               	clrf	main@VIn0_Old+1
  5815                           
  5816                           ;main.c: 42: int16_t VIn1_Old = 0;
  5817  03FC  01CB               	clrf	main@VIn1_Old
  5818  03FD  01CC               	clrf	main@VIn1_Old+1
  5819                           
  5820                           ;main.c: 43: int16_t power0OutOld = 0;
  5821  03FE  01C5               	clrf	main@power0OutOld
  5822  03FF  01C6               	clrf	main@power0OutOld+1
  5823                           
  5824                           ;main.c: 44: int16_t power1OutOld = 0;
  5825  0400  01C7               	clrf	main@power1OutOld
  5826  0401  01C8               	clrf	main@power1OutOld+1
  5827                           
  5828                           ;main.c: 46: uint16_t dutyCycle6 = 252;
  5829  0402  30FC               	movlw	252
  5830  0403  00D5               	movwf	main@dutyCycle6
  5831  0404  3000               	movlw	0
  5832  0405  00D6               	movwf	main@dutyCycle6+1
  5833                           
  5834                           ;main.c: 47: uint16_t dutyCycle7 = 126;
  5835  0406  307E               	movlw	126
  5836  0407  00D2               	movwf	main@dutyCycle7
  5837  0408  3000               	movlw	0
  5838  0409  00D3               	movwf	main@dutyCycle7+1
  5839                           
  5840                           ;main.c: 49: uint8_t j = 0;
  5841  040A  01D4               	clrf	main@j
  5842                           
  5843                           ;main.c: 51: uint8_t fastLoop = 0;
  5844  040B  01C9               	clrf	main@fastLoop
  5845                           
  5846                           ;main.c: 52: uint8_t slowLoop = 200;
  5847  040C  30C8               	movlw	200
  5848  040D  00C1               	movwf	??_main
  5849  040E  0841               	movf	??_main,w
  5850  040F  00CA               	movwf	main@slowLoop
  5851                           
  5852                           ;main.c: 53: extern int8_t Imode0;
  5853                           ;main.c: 54: extern int16_t Vref;
  5854                           ;main.c: 55: extern int16_t Iref;
  5855                           ;main.c: 56: uint8_t menuButton = 0;
  5856  0410  01D1               	clrf	main@menuButton
  5857                           
  5858                           ;main.c: 58: SYSTEM_Initialize();
  5859  0411  318C  24EB  3183   	fcall	_SYSTEM_Initialize
  5860                           
  5861                           ;main.c: 60: LCDClear();
  5862  0414  318C  2499  3183   	fcall	_LCDClear
  5863  0417                     l2363:	
  5864                           ;main.c: 62: void calculateCurrent0(void);
  5865                           ;main.c: 63: void calculateCurrent1(void);
  5866                           ;main.c: 77: while (1)
  5867                           
  5868                           
  5869                           ;main.c: 78: {
  5870                           ;main.c: 79: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  5871  0417  0020               	movlb	0	; select bank0
  5872  0418  01D4               	clrf	main@j
  5873  0419  3008               	movlw	8
  5874  041A  0254               	subwf	main@j,w
  5875  041B  1803               	btfsc	3,0
  5876  041C  2C38               	goto	l2375
  5877  041D                     l2369:	
  5878  041D  0854               	movf	main@j,w
  5879  041E  00C1               	movwf	??_main
  5880  041F  01C2               	clrf	??_main+1
  5881  0420  0841               	movf	??_main,w
  5882  0421  00A6               	movwf	readAnalog@channel
  5883  0422  0842               	movf	??_main+1,w
  5884  0423  00A7               	movwf	readAnalog@channel+1
  5885  0424  3182  22C0  3183   	fcall	_readAnalog
  5886  0427  0020               	movlb	0	; select bank0
  5887  0428  3554               	lslf	main@j,w
  5888  0429  3EC0               	addlw	(low (_analogs| 0))& (0+255)
  5889  042A  0086               	movwf	6
  5890  042B  0187               	clrf	7
  5891  042C  0826               	movf	?_readAnalog,w
  5892  042D  3FC0               	movwi [0]fsr1
  5893  042E  0827               	movf	?_readAnalog+1,w
  5894  042F  3FC1               	movwi [1]fsr1
  5895  0430  3001               	movlw	1
  5896  0431  00C1               	movwf	??_main
  5897  0432  0841               	movf	??_main,w
  5898  0433  07D4               	addwf	main@j,f
  5899  0434  3008               	movlw	8
  5900  0435  0254               	subwf	main@j,w
  5901  0436  1C03               	skipc
  5902  0437  2C1D               	goto	l2369
  5903  0438                     l2375:	
  5904                           
  5905                           ;main.c: 82: voltage[0]=analogs[0]/.20885;
  5906  0438  0021               	movlb	1	; select bank1
  5907  0439  0841               	movf	(_analogs+1)^(0+128),w
  5908  043A  00F9               	movwf	___awtoft@c+1
  5909  043B  0840               	movf	_analogs^(0+128),w
  5910  043C  00F8               	movwf	___awtoft@c
  5911  043D  318C  2454  3183   	fcall	___awtoft
  5912  0440  0878               	movf	?___awtoft,w
  5913  0441  0020               	movlb	0	; select bank0
  5914  0442  00A3               	movwf	___ftdiv@f1
  5915  0443  0879               	movf	?___awtoft+1,w
  5916  0444  00A4               	movwf	___ftdiv@f1+1
  5917  0445  087A               	movf	?___awtoft+2,w
  5918  0446  00A5               	movwf	___ftdiv@f1+2
  5919  0447  30DD               	movlw	221
  5920  0448  00A0               	movwf	___ftdiv@f2
  5921  0449  3055               	movlw	85
  5922  044A  00A1               	movwf	___ftdiv@f2+1
  5923  044B  303E               	movlw	62
  5924  044C  00A2               	movwf	___ftdiv@f2+2
  5925  044D  3181  215E  3183   	fcall	___ftdiv
  5926  0450  0020               	movlb	0	; select bank0
  5927  0451  0820               	movf	?___ftdiv,w
  5928  0452  00B0               	movwf	___fttol@f1
  5929  0453  0821               	movf	?___ftdiv+1,w
  5930  0454  00B1               	movwf	___fttol@f1+1
  5931  0455  0822               	movf	?___ftdiv+2,w
  5932  0456  00B2               	movwf	___fttol@f1+2
  5933  0457  3180  20D7  3183   	fcall	___fttol
  5934  045A  0020               	movlb	0	; select bank0
  5935  045B  0831               	movf	?___fttol+1,w
  5936  045C  00D8               	movwf	_voltage+1
  5937  045D  0830               	movf	?___fttol,w
  5938  045E  00D7               	movwf	_voltage
  5939                           
  5940                           ;main.c: 84: voltage[1]=analogs[1]/.54503;
  5941  045F  0021               	movlb	1	; select bank1
  5942  0460  0843               	movf	((_analogs+1)^(0+128)+2),w
  5943  0461  00F9               	movwf	___awtoft@c+1
  5944  0462  0842               	movf	(_analogs^(0+128)+2),w
  5945  0463  00F8               	movwf	___awtoft@c
  5946  0464  318C  2454  3183   	fcall	___awtoft
  5947  0467  0878               	movf	?___awtoft,w
  5948  0468  0020               	movlb	0	; select bank0
  5949  0469  00A3               	movwf	___ftdiv@f1
  5950  046A  0879               	movf	?___awtoft+1,w
  5951  046B  00A4               	movwf	___ftdiv@f1+1
  5952  046C  087A               	movf	?___awtoft+2,w
  5953  046D  00A5               	movwf	___ftdiv@f1+2
  5954  046E  3087               	movlw	135
  5955  046F  00A0               	movwf	___ftdiv@f2
  5956  0470  300B               	movlw	11
  5957  0471  00A1               	movwf	___ftdiv@f2+1
  5958  0472  303F               	movlw	63
  5959  0473  00A2               	movwf	___ftdiv@f2+2
  5960  0474  3181  215E  3183   	fcall	___ftdiv
  5961  0477  0020               	movlb	0	; select bank0
  5962  0478  0820               	movf	?___ftdiv,w
  5963  0479  00B0               	movwf	___fttol@f1
  5964  047A  0821               	movf	?___ftdiv+1,w
  5965  047B  00B1               	movwf	___fttol@f1+1
  5966  047C  0822               	movf	?___ftdiv+2,w
  5967  047D  00B2               	movwf	___fttol@f1+2
  5968  047E  3180  20D7  3183   	fcall	___fttol
  5969  0481  0020               	movlb	0	; select bank0
  5970  0482  0831               	movf	?___fttol+1,w
  5971  0483  00DA               	movwf	_voltage+3
  5972  0484  0830               	movf	?___fttol,w
  5973  0485  00D9               	movwf	_voltage+2
  5974                           
  5975                           ;main.c: 90: calculateCurrent0();
  5976  0486  318D  25CF  3183   	fcall	_calculateCurrent0
  5977                           
  5978                           ;main.c: 93: calculateCurrent1();
  5979  0489  318E  2614  3183   	fcall	_calculateCurrent1
  5980                           
  5981                           ;main.c: 96: if(fastLoop>25)
  5982  048C  301A               	movlw	26
  5983  048D  0020               	movlb	0	; select bank0
  5984  048E  0249               	subwf	main@fastLoop,w
  5985  048F  1C03               	skipc
  5986  0490  2DBD               	goto	l2459
  5987                           
  5988                           ;main.c: 97: {
  5989                           ;main.c: 98: if(Imode0)
  5990  0491  086E               	movf	_Imode0,w
  5991  0492  1903               	btfsc	3,2
  5992  0493  2D3A               	goto	l2413
  5993                           
  5994                           ;main.c: 99: {
  5995                           ;main.c: 101: if(voltage[0]<2300)
  5996  0494  0858               	movf	_voltage+1,w
  5997  0495  3A80               	xorlw	128
  5998  0496  00C1               	movwf	??_main
  5999  0497  3088               	movlw	136
  6000  0498  0241               	subwf	??_main,w
  6001  0499  1D03               	skipz
  6002  049A  2C9D               	goto	u2625
  6003  049B  30FC               	movlw	252
  6004  049C  0257               	subwf	_voltage,w
  6005  049D                     u2625:	
  6006  049D  1803               	skipnc
  6007  049E  2CAC               	goto	l2387
  6008                           
  6009                           ;main.c: 102: {
  6010                           ;main.c: 103: if(dutyCycle6<252)
  6011  049F  3000               	movlw	0
  6012  04A0  0020               	movlb	0	; select bank0
  6013  04A1  0256               	subwf	main@dutyCycle6+1,w
  6014  04A2  30FC               	movlw	252
  6015  04A3  1903               	skipnz
  6016  04A4  0255               	subwf	main@dutyCycle6,w
  6017  04A5  1803               	skipnc
  6018  04A6  2CB5               	goto	l2391
  6019                           
  6020                           ;main.c: 104: {
  6021                           ;main.c: 105: dutyCycle6+=1;
  6022  04A7  3001               	movlw	1
  6023  04A8  07D5               	addwf	main@dutyCycle6,f
  6024  04A9  3000               	movlw	0
  6025  04AA  3DD6               	addwfc	main@dutyCycle6+1,f
  6026                           
  6027                           ;main.c: 106: }
  6028                           ;main.c: 107: }
  6029  04AB  2CB5               	goto	l2391
  6030  04AC                     l2387:	
  6031                           
  6032                           ;main.c: 108: else if(dutyCycle6>0)
  6033  04AC  0020               	movlb	0	; select bank0
  6034  04AD  0855               	movf	main@dutyCycle6,w
  6035  04AE  0456               	iorwf	main@dutyCycle6+1,w
  6036  04AF  1903               	btfsc	3,2
  6037  04B0  2CB5               	goto	l2391
  6038                           
  6039                           ;main.c: 109: {
  6040                           ;main.c: 110: dutyCycle6-=1;
  6041  04B1  3001               	movlw	1
  6042  04B2  02D5               	subwf	main@dutyCycle6,f
  6043  04B3  3000               	movlw	0
  6044  04B4  3BD6               	subwfb	main@dutyCycle6+1,f
  6045  04B5                     l2391:	
  6046                           
  6047                           ;main.c: 111: }
  6048                           ;main.c: 142: power0OutOld=voltage[1]/100*current[1]/10;
  6049  04B5  3064               	movlw	100
  6050  04B6  00F0               	movwf	___awdiv@divisor
  6051  04B7  3000               	movlw	0
  6052  04B8  00F1               	movwf	___awdiv@divisor+1
  6053  04B9  085A               	movf	_voltage+3,w
  6054  04BA  00F3               	movwf	___awdiv@dividend+1
  6055  04BB  0859               	movf	_voltage+2,w
  6056  04BC  00F2               	movwf	___awdiv@dividend
  6057  04BD  3180  2004  3183   	fcall	___awdiv
  6058  04C0  0871               	movf	?___awdiv+1,w
  6059  04C1  00FA               	movwf	___wmul@multiplier+1
  6060  04C2  0870               	movf	?___awdiv,w
  6061  04C3  00F9               	movwf	___wmul@multiplier
  6062  04C4  0021               	movlb	1	; select bank1
  6063  04C5  0853               	movf	((_current+1)^(0+128)+2),w
  6064  04C6  00FC               	movwf	___wmul@multiplicand+1
  6065  04C7  0852               	movf	(_current^(0+128)+2),w
  6066  04C8  00FB               	movwf	___wmul@multiplicand
  6067  04C9  318C  2417  3183   	fcall	___wmul
  6068  04CC  087A               	movf	?___wmul+1,w
  6069  04CD  0020               	movlb	0	; select bank0
  6070  04CE  00D0               	movwf	_main$1021+1
  6071  04CF  0879               	movf	?___wmul,w
  6072  04D0  00CF               	movwf	_main$1021
  6073                           
  6074                           ;main.c: 111: }
  6075                           ;main.c: 142: power0OutOld=voltage[1]/100*current[1]/10;
  6076  04D1  300A               	movlw	10
  6077  04D2  00F0               	movwf	___awdiv@divisor
  6078  04D3  3000               	movlw	0
  6079  04D4  00F1               	movwf	___awdiv@divisor+1
  6080  04D5  0850               	movf	_main$1021+1,w
  6081  04D6  00F3               	movwf	___awdiv@dividend+1
  6082  04D7  084F               	movf	_main$1021,w
  6083  04D8  00F2               	movwf	___awdiv@dividend
  6084  04D9  3180  2004  3183   	fcall	___awdiv
  6085  04DC  0871               	movf	?___awdiv+1,w
  6086  04DD  0020               	movlb	0	; select bank0
  6087  04DE  00C6               	movwf	main@power0OutOld+1
  6088  04DF  0870               	movf	?___awdiv,w
  6089  04E0  00C5               	movwf	main@power0OutOld
  6090                           
  6091                           ;main.c: 143: VIn0_Old=voltage[0];
  6092  04E1  0858               	movf	_voltage+1,w
  6093  04E2  00C4               	movwf	main@VIn0_Old+1
  6094  04E3  0857               	movf	_voltage,w
  6095  04E4  00C3               	movwf	main@VIn0_Old
  6096                           
  6097                           ;main.c: 145: if(voltage[3]*analogs[7]>power1OutOld)
  6098  04E5  085E               	movf	_voltage+7,w
  6099  04E6  00FA               	movwf	___wmul@multiplier+1
  6100  04E7  085D               	movf	_voltage+6,w
  6101  04E8  00F9               	movwf	___wmul@multiplier
  6102  04E9  0021               	movlb	1	; select bank1
  6103  04EA  084F               	movf	((_analogs+1)^(0+128)+14),w
  6104  04EB  00FC               	movwf	___wmul@multiplicand+1
  6105  04EC  084E               	movf	(_analogs^(0+128)+14),w
  6106  04ED  00FB               	movwf	___wmul@multiplicand
  6107  04EE  318C  2417  3183   	fcall	___wmul
  6108  04F1  0020               	movlb	0	; select bank0
  6109  04F2  0848               	movf	main@power1OutOld+1,w
  6110  04F3  3A80               	xorlw	128
  6111  04F4  00C1               	movwf	??_main
  6112  04F5  087A               	movf	?___wmul+1,w
  6113  04F6  3A80               	xorlw	128
  6114  04F7  0241               	subwf	??_main,w
  6115  04F8  1D03               	skipz
  6116  04F9  2CFC               	goto	u2655
  6117  04FA  0879               	movf	?___wmul,w
  6118  04FB  0247               	subwf	main@power1OutOld,w
  6119  04FC                     u2655:	
  6120  04FC  1803               	skipnc
  6121  04FD  2D0C               	goto	l2403
  6122                           
  6123                           ;main.c: 146: {
  6124                           ;main.c: 147: if(voltage[2]>VIn1_Old)
  6125  04FE  0020               	movlb	0	; select bank0
  6126  04FF  084C               	movf	main@VIn1_Old+1,w
  6127  0500  3A80               	xorlw	128
  6128  0501  00C1               	movwf	??_main
  6129  0502  085C               	movf	_voltage+5,w
  6130  0503  3A80               	xorlw	128
  6131  0504  0241               	subwf	??_main,w
  6132  0505  1D03               	skipz
  6133  0506  2D09               	goto	u2665
  6134  0507  085B               	movf	_voltage+4,w
  6135  0508  024B               	subwf	main@VIn1_Old,w
  6136  0509                     u2665:	
  6137  0509  1803               	skipnc
  6138  050A  2D19               	goto	l2405
  6139  050B  2D1F               	goto	l2407
  6140  050C                     l2403:	
  6141                           ;main.c: 154: }
  6142                           ;main.c: 155: }
  6143                           
  6144                           ;main.c: 151: else
  6145                           ;main.c: 152: {
  6146                           ;main.c: 153: dutyCycle7-=1;
  6147                           
  6148                           ;main.c: 150: }
  6149                           
  6150                           ;main.c: 148: {
  6151                           ;main.c: 149: dutyCycle7+=1;
  6152                           
  6153                           
  6154                           ;main.c: 156: else
  6155                           ;main.c: 157: {
  6156                           ;main.c: 158: if(voltage[2]>VIn1_Old)
  6157  050C  0020               	movlb	0	; select bank0
  6158  050D  084C               	movf	main@VIn1_Old+1,w
  6159  050E  3A80               	xorlw	128
  6160  050F  00C1               	movwf	??_main
  6161  0510  085C               	movf	_voltage+5,w
  6162  0511  3A80               	xorlw	128
  6163  0512  0241               	subwf	??_main,w
  6164  0513  1D03               	skipz
  6165  0514  2D17               	goto	u2675
  6166  0515  085B               	movf	_voltage+4,w
  6167  0516  024B               	subwf	main@VIn1_Old,w
  6168  0517                     u2675:	
  6169  0517  1803               	skipnc
  6170  0518  2D1F               	goto	l2407
  6171  0519                     l2405:	
  6172                           
  6173                           ;main.c: 159: {
  6174                           ;main.c: 160: dutyCycle7-=1;
  6175  0519  3001               	movlw	1
  6176  051A  0020               	movlb	0	; select bank0
  6177  051B  02D2               	subwf	main@dutyCycle7,f
  6178  051C  3000               	movlw	0
  6179  051D  3BD3               	subwfb	main@dutyCycle7+1,f
  6180                           
  6181                           ;main.c: 161: }
  6182  051E  2D24               	goto	l2409
  6183  051F                     l2407:	
  6184                           
  6185                           ;main.c: 162: else
  6186                           ;main.c: 163: {
  6187                           ;main.c: 164: dutyCycle7+=1;
  6188  051F  3001               	movlw	1
  6189  0520  0020               	movlb	0	; select bank0
  6190  0521  07D2               	addwf	main@dutyCycle7,f
  6191  0522  3000               	movlw	0
  6192  0523  3DD3               	addwfc	main@dutyCycle7+1,f
  6193  0524                     l2409:	
  6194                           
  6195                           ;main.c: 165: }
  6196                           ;main.c: 166: }
  6197                           ;main.c: 167: power1OutOld=voltage[3]*analogs[7];
  6198  0524  085E               	movf	_voltage+7,w
  6199  0525  00FA               	movwf	___wmul@multiplier+1
  6200  0526  085D               	movf	_voltage+6,w
  6201  0527  00F9               	movwf	___wmul@multiplier
  6202  0528  0021               	movlb	1	; select bank1
  6203  0529  084F               	movf	((_analogs+1)^(0+128)+14),w
  6204  052A  00FC               	movwf	___wmul@multiplicand+1
  6205  052B  084E               	movf	(_analogs^(0+128)+14),w
  6206  052C  00FB               	movwf	___wmul@multiplicand
  6207  052D  318C  2417  3183   	fcall	___wmul
  6208  0530  087A               	movf	?___wmul+1,w
  6209  0531  0020               	movlb	0	; select bank0
  6210  0532  00C8               	movwf	main@power1OutOld+1
  6211  0533  0879               	movf	?___wmul,w
  6212  0534  00C7               	movwf	main@power1OutOld
  6213                           
  6214                           ;main.c: 168: VIn1_Old=voltage[2];
  6215  0535  085C               	movf	_voltage+5,w
  6216  0536  00CC               	movwf	main@VIn1_Old+1
  6217  0537  085B               	movf	_voltage+4,w
  6218  0538  00CB               	movwf	main@VIn1_Old
  6219                           
  6220                           ;main.c: 169: }
  6221  0539  2D7E               	goto	l2431
  6222  053A                     l2413:	
  6223                           
  6224                           ;main.c: 170: else
  6225                           ;main.c: 171: {
  6226                           ;main.c: 172: if(voltage[1]>(int16_t)Vref)
  6227  053A  086C               	movf	_Vref+1,w
  6228  053B  3A80               	xorlw	128
  6229  053C  00C1               	movwf	??_main
  6230  053D  085A               	movf	_voltage+3,w
  6231  053E  3A80               	xorlw	128
  6232  053F  0241               	subwf	??_main,w
  6233  0540  1D03               	skipz
  6234  0541  2D44               	goto	u2685
  6235  0542  0859               	movf	_voltage+2,w
  6236  0543  026B               	subwf	_Vref,w
  6237  0544                     u2685:	
  6238  0544  1803               	skipnc
  6239  0545  2D53               	goto	l2419
  6240                           
  6241                           ;main.c: 173: {
  6242                           ;main.c: 174: if(dutyCycle6<252) dutyCycle6+=1;
  6243  0546  3000               	movlw	0
  6244  0547  0020               	movlb	0	; select bank0
  6245  0548  0256               	subwf	main@dutyCycle6+1,w
  6246  0549  30FC               	movlw	252
  6247  054A  1903               	skipnz
  6248  054B  0255               	subwf	main@dutyCycle6,w
  6249  054C  1803               	skipnc
  6250  054D  2D5C               	goto	l408
  6251  054E  3001               	movlw	1
  6252  054F  07D5               	addwf	main@dutyCycle6,f
  6253  0550  3000               	movlw	0
  6254  0551  3DD6               	addwfc	main@dutyCycle6+1,f
  6255                           
  6256                           ;main.c: 175: }
  6257  0552  2D5C               	goto	l408
  6258  0553                     l2419:	
  6259                           
  6260                           ;main.c: 176: else
  6261                           ;main.c: 177: {
  6262                           ;main.c: 178: if(dutyCycle6>0) dutyCycle6-=1;;
  6263  0553  0020               	movlb	0	; select bank0
  6264  0554  0855               	movf	main@dutyCycle6,w
  6265  0555  0456               	iorwf	main@dutyCycle6+1,w
  6266  0556  1903               	btfsc	3,2
  6267  0557  2D5C               	goto	l408
  6268  0558  3001               	movlw	1
  6269  0559  02D5               	subwf	main@dutyCycle6,f
  6270  055A  3000               	movlw	0
  6271  055B  3BD6               	subwfb	main@dutyCycle6+1,f
  6272  055C                     l408:	
  6273                           
  6274                           ;main.c: 179: }
  6275                           ;main.c: 181: if(voltage[3]>(int16_t)Vref)
  6276  055C  086C               	movf	_Vref+1,w
  6277  055D  3A80               	xorlw	128
  6278  055E  00C1               	movwf	??_main
  6279  055F  085E               	movf	_voltage+7,w
  6280  0560  3A80               	xorlw	128
  6281  0561  0241               	subwf	??_main,w
  6282  0562  1D03               	skipz
  6283  0563  2D66               	goto	u2715
  6284  0564  085D               	movf	_voltage+6,w
  6285  0565  026B               	subwf	_Vref,w
  6286  0566                     u2715:	
  6287  0566  1803               	skipnc
  6288  0567  2D75               	goto	l2427
  6289                           
  6290                           ;main.c: 182: {
  6291                           ;main.c: 183: if(dutyCycle7<252) dutyCycle7+=1;
  6292  0568  3000               	movlw	0
  6293  0569  0020               	movlb	0	; select bank0
  6294  056A  0253               	subwf	main@dutyCycle7+1,w
  6295  056B  30FC               	movlw	252
  6296  056C  1903               	skipnz
  6297  056D  0252               	subwf	main@dutyCycle7,w
  6298  056E  1803               	skipnc
  6299  056F  2D7E               	goto	l2431
  6300  0570  3001               	movlw	1
  6301  0571  07D2               	addwf	main@dutyCycle7,f
  6302  0572  3000               	movlw	0
  6303  0573  3DD3               	addwfc	main@dutyCycle7+1,f
  6304                           
  6305                           ;main.c: 184: }
  6306  0574  2D7E               	goto	l2431
  6307  0575                     l2427:	
  6308                           
  6309                           ;main.c: 185: else
  6310                           ;main.c: 186: {
  6311                           ;main.c: 187: if(dutyCycle7>0) dutyCycle7-=1;;
  6312  0575  0020               	movlb	0	; select bank0
  6313  0576  0852               	movf	main@dutyCycle7,w
  6314  0577  0453               	iorwf	main@dutyCycle7+1,w
  6315  0578  1903               	btfsc	3,2
  6316  0579  2D7E               	goto	l2431
  6317  057A  3001               	movlw	1
  6318  057B  02D2               	subwf	main@dutyCycle7,f
  6319  057C  3000               	movlw	0
  6320  057D  3BD3               	subwfb	main@dutyCycle7+1,f
  6321  057E                     l2431:	
  6322                           
  6323                           ;main.c: 188: }
  6324                           ;main.c: 189: }
  6325                           ;main.c: 190: fastLoop=0;
  6326  057E  01C9               	clrf	main@fastLoop
  6327                           
  6328                           ;main.c: 191: slowLoop+=1;
  6329  057F  3001               	movlw	1
  6330  0580  00C1               	movwf	??_main
  6331  0581  0841               	movf	??_main,w
  6332  0582  07CA               	addwf	main@slowLoop,f
  6333                           
  6334                           ;main.c: 192: PWM6_LoadDutyValue(dutyCycle6);
  6335  0583  0856               	movf	main@dutyCycle6+1,w
  6336  0584  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  6337  0585  0855               	movf	main@dutyCycle6,w
  6338  0586  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  6339  0587  318B  23CE  3183   	fcall	_PWM6_LoadDutyValue
  6340                           
  6341                           ;main.c: 193: PWM7_LoadDutyValue(dutyCycle7);
  6342  058A  0020               	movlb	0	; select bank0
  6343  058B  0853               	movf	main@dutyCycle7+1,w
  6344  058C  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  6345  058D  0852               	movf	main@dutyCycle7,w
  6346  058E  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  6347  058F  318B  23E4  3183   	fcall	_PWM7_LoadDutyValue
  6348                           
  6349                           ;main.c: 194: menuButton = readButton();
  6350  0592  3180  2055  3183   	fcall	_readButton
  6351  0595  0020               	movlb	0	; select bank0
  6352  0596  00C1               	movwf	??_main
  6353  0597  0841               	movf	??_main,w
  6354  0598  00D1               	movwf	main@menuButton
  6355                           
  6356                           ;main.c: 195: if(menuButton == 2) if(dutyCycle6<252) dutyCycle6+=1;
  6357  0599  3002               	movlw	2
  6358  059A  0651               	xorwf	main@menuButton,w
  6359  059B  1D03               	btfss	3,2
  6360  059C  2DA8               	goto	l2447
  6361  059D  3000               	movlw	0
  6362  059E  0256               	subwf	main@dutyCycle6+1,w
  6363  059F  30FC               	movlw	252
  6364  05A0  1903               	skipnz
  6365  05A1  0255               	subwf	main@dutyCycle6,w
  6366  05A2  1803               	skipnc
  6367  05A3  2DA8               	goto	l2447
  6368  05A4  3001               	movlw	1
  6369  05A5  07D5               	addwf	main@dutyCycle6,f
  6370  05A6  3000               	movlw	0
  6371  05A7  3DD6               	addwfc	main@dutyCycle6+1,f
  6372  05A8                     l2447:	
  6373                           
  6374                           ;main.c: 196: if(menuButton == 3) if(dutyCycle6>0) dutyCycle6-=1;;
  6375  05A8  3003               	movlw	3
  6376  05A9  0651               	xorwf	main@menuButton,w
  6377  05AA  1D03               	btfss	3,2
  6378  05AB  2DB4               	goto	l2453
  6379  05AC  0855               	movf	main@dutyCycle6,w
  6380  05AD  0456               	iorwf	main@dutyCycle6+1,w
  6381  05AE  1903               	btfsc	3,2
  6382  05AF  2DB4               	goto	l2453
  6383  05B0  3001               	movlw	1
  6384  05B1  02D5               	subwf	main@dutyCycle6,f
  6385  05B2  3000               	movlw	0
  6386  05B3  3BD6               	subwfb	main@dutyCycle6+1,f
  6387  05B4                     l2453:	
  6388                           
  6389                           ;main.c: 197: if(menuButton == 1)LCDInit();
  6390  05B4  0351               	decf	main@menuButton,w
  6391  05B5  1D03               	btfss	3,2
  6392  05B6  2DBA               	goto	l2457
  6393  05B7  318D  2551  3183   	fcall	_LCDInit
  6394  05BA                     l2457:	
  6395                           
  6396                           ;main.c: 198: LATB0=1-LATB0;
  6397  05BA  3001               	movlw	1
  6398  05BB  0020               	movlb	0	; select bank0
  6399  05BC  0697               	xorwf	23,f
  6400  05BD                     l2459:	
  6401                           
  6402                           ;main.c: 199: }
  6403                           ;main.c: 200: fastLoop+=1;
  6404  05BD  3001               	movlw	1
  6405  05BE  00C1               	movwf	??_main
  6406  05BF  0841               	movf	??_main,w
  6407  05C0  07C9               	addwf	main@fastLoop,f
  6408                           
  6409                           ;main.c: 202: if(slowLoop>4)
  6410  05C1  3005               	movlw	5
  6411  05C2  024A               	subwf	main@slowLoop,w
  6412  05C3  1C03               	skipc
  6413  05C4  2C17               	goto	l2363
  6414                           
  6415                           ;main.c: 203: {
  6416                           ;main.c: 204: LCDClear();
  6417  05C5  318C  2499  3183   	fcall	_LCDClear
  6418                           
  6419                           ;main.c: 205: Battery_State_Machine();
  6420  05C8  318F  2715  3183   	fcall	_Battery_State_Machine
  6421                           
  6422                           ;main.c: 218: { gotoXY(0,0); LCDWriteInt(analogs[1],4, 0, 0);};
  6423  05CB  01F5               	clrf	gotoXY@y
  6424  05CC  3000               	movlw	0
  6425  05CD  318B  2391  3183   	fcall	_gotoXY
  6426  05D0  0021               	movlb	1	; select bank1
  6427  05D1  0843               	movf	((_analogs+1)^(0+128)+2),w
  6428  05D2  0020               	movlb	0	; select bank0
  6429  05D3  00A9               	movwf	LCDWriteInt@value+1
  6430  05D4  0021               	movlb	1	; select bank1
  6431  05D5  0842               	movf	(_analogs^(0+128)+2),w
  6432  05D6  0020               	movlb	0	; select bank0
  6433  05D7  00A8               	movwf	LCDWriteInt@value
  6434  05D8  3004               	movlw	4
  6435  05D9  00C1               	movwf	??_main
  6436  05DA  0841               	movf	??_main,w
  6437  05DB  00AA               	movwf	LCDWriteInt@fieldLength
  6438  05DC  01AB               	clrf	LCDWriteInt@numPlaces
  6439  05DD  01AC               	clrf	LCDWriteInt@sign
  6440  05DE  3182  2207  3183   	fcall	_LCDWriteInt
  6441                           
  6442                           ;main.c: 219: { gotoXY(28,0); LCDWriteInt(analogs[4],4, 0, 0);};
  6443  05E1  01F5               	clrf	gotoXY@y
  6444  05E2  301C               	movlw	28
  6445  05E3  318B  2391  3183   	fcall	_gotoXY
  6446  05E6  0021               	movlb	1	; select bank1
  6447  05E7  0849               	movf	((_analogs+1)^(0+128)+8),w
  6448  05E8  0020               	movlb	0	; select bank0
  6449  05E9  00A9               	movwf	LCDWriteInt@value+1
  6450  05EA  0021               	movlb	1	; select bank1
  6451  05EB  0848               	movf	(_analogs^(0+128)+8),w
  6452  05EC  0020               	movlb	0	; select bank0
  6453  05ED  00A8               	movwf	LCDWriteInt@value
  6454  05EE  3004               	movlw	4
  6455  05EF  00C1               	movwf	??_main
  6456  05F0  0841               	movf	??_main,w
  6457  05F1  00AA               	movwf	LCDWriteInt@fieldLength
  6458  05F2  01AB               	clrf	LCDWriteInt@numPlaces
  6459  05F3  01AC               	clrf	LCDWriteInt@sign
  6460  05F4  3182  2207  3183   	fcall	_LCDWriteInt
  6461                           
  6462                           ;main.c: 220: { gotoXY(48,0); LCDWriteInt(analogs[5],4, 0, 0);};
  6463  05F7  01F5               	clrf	gotoXY@y
  6464  05F8  3030               	movlw	48
  6465  05F9  318B  2391  3183   	fcall	_gotoXY
  6466  05FC  0021               	movlb	1	; select bank1
  6467  05FD  084B               	movf	((_analogs+1)^(0+128)+10),w
  6468  05FE  0020               	movlb	0	; select bank0
  6469  05FF  00A9               	movwf	LCDWriteInt@value+1
  6470  0600  0021               	movlb	1	; select bank1
  6471  0601  084A               	movf	(_analogs^(0+128)+10),w
  6472  0602  0020               	movlb	0	; select bank0
  6473  0603  00A8               	movwf	LCDWriteInt@value
  6474  0604  3004               	movlw	4
  6475  0605  00C1               	movwf	??_main
  6476  0606  0841               	movf	??_main,w
  6477  0607  00AA               	movwf	LCDWriteInt@fieldLength
  6478  0608  01AB               	clrf	LCDWriteInt@numPlaces
  6479  0609  01AC               	clrf	LCDWriteInt@sign
  6480  060A  3182  2207  3183   	fcall	_LCDWriteInt
  6481                           
  6482                           ;main.c: 221: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  6483  060D  01F5               	clrf	gotoXY@y
  6484  060E  0AF5               	incf	gotoXY@y,f
  6485  060F  3000               	movlw	0
  6486  0610  318B  2391  3183   	fcall	_gotoXY
  6487  0613  0020               	movlb	0	; select bank0
  6488  0614  0858               	movf	_voltage+1,w
  6489  0615  00A9               	movwf	LCDWriteInt@value+1
  6490  0616  0857               	movf	_voltage,w
  6491  0617  00A8               	movwf	LCDWriteInt@value
  6492  0618  3004               	movlw	4
  6493  0619  00C1               	movwf	??_main
  6494  061A  0841               	movf	??_main,w
  6495  061B  00AA               	movwf	LCDWriteInt@fieldLength
  6496  061C  3002               	movlw	2
  6497  061D  00C2               	movwf	??_main+1
  6498  061E  0842               	movf	??_main+1,w
  6499  061F  00AB               	movwf	LCDWriteInt@numPlaces
  6500  0620  01AC               	clrf	LCDWriteInt@sign
  6501  0621  3182  2207  3183   	fcall	_LCDWriteInt
  6502                           
  6503                           ;main.c: 222: LCDWriteCharacter('V');
  6504  0624  3056               	movlw	86
  6505  0625  318E  2659  3183   	fcall	_LCDWriteCharacter
  6506                           
  6507                           ;main.c: 223: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  6508  0628  01F5               	clrf	gotoXY@y
  6509  0629  0AF5               	incf	gotoXY@y,f
  6510  062A  301C               	movlw	28
  6511  062B  318B  2391  3183   	fcall	_gotoXY
  6512  062E  0021               	movlb	1	; select bank1
  6513  062F  0851               	movf	(_current+1)^(0+128),w
  6514  0630  0020               	movlb	0	; select bank0
  6515  0631  00A9               	movwf	LCDWriteInt@value+1
  6516  0632  0021               	movlb	1	; select bank1
  6517  0633  0850               	movf	_current^(0+128),w
  6518  0634  0020               	movlb	0	; select bank0
  6519  0635  00A8               	movwf	LCDWriteInt@value
  6520  0636  3003               	movlw	3
  6521  0637  00C1               	movwf	??_main
  6522  0638  0841               	movf	??_main,w
  6523  0639  00AA               	movwf	LCDWriteInt@fieldLength
  6524  063A  01AB               	clrf	LCDWriteInt@numPlaces
  6525  063B  0AAB               	incf	LCDWriteInt@numPlaces,f
  6526  063C  01AC               	clrf	LCDWriteInt@sign
  6527  063D  3182  2207  3183   	fcall	_LCDWriteInt
  6528                           
  6529                           ;main.c: 224: { gotoXY(48,1); LCDWriteInt(ADCRead(11),4, 0, 0);};
  6530  0640  01F5               	clrf	gotoXY@y
  6531  0641  0AF5               	incf	gotoXY@y,f
  6532  0642  3030               	movlw	48
  6533  0643  318B  2391  3183   	fcall	_gotoXY
  6534  0646  300B               	movlw	11
  6535  0647  318B  23B9  3183   	fcall	_ADCRead
  6536  064A  0871               	movf	?_ADCRead+1,w
  6537  064B  0020               	movlb	0	; select bank0
  6538  064C  00A9               	movwf	LCDWriteInt@value+1
  6539  064D  0870               	movf	?_ADCRead,w
  6540  064E  00A8               	movwf	LCDWriteInt@value
  6541  064F  3004               	movlw	4
  6542  0650  00C1               	movwf	??_main
  6543  0651  0841               	movf	??_main,w
  6544  0652  00AA               	movwf	LCDWriteInt@fieldLength
  6545  0653  01AB               	clrf	LCDWriteInt@numPlaces
  6546  0654  01AC               	clrf	LCDWriteInt@sign
  6547  0655  3182  2207  3183   	fcall	_LCDWriteInt
  6548                           
  6549                           ;main.c: 225: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  6550  0658  3002               	movlw	2
  6551  0659  0020               	movlb	0	; select bank0
  6552  065A  00C1               	movwf	??_main
  6553  065B  0841               	movf	??_main,w
  6554  065C  00F5               	movwf	gotoXY@y
  6555  065D  3000               	movlw	0
  6556  065E  318B  2391  3183   	fcall	_gotoXY
  6557  0661  0020               	movlb	0	; select bank0
  6558  0662  085A               	movf	_voltage+3,w
  6559  0663  00A9               	movwf	LCDWriteInt@value+1
  6560  0664  0859               	movf	_voltage+2,w
  6561  0665  00A8               	movwf	LCDWriteInt@value
  6562  0666  3004               	movlw	4
  6563  0667  00C1               	movwf	??_main
  6564  0668  0841               	movf	??_main,w
  6565  0669  00AA               	movwf	LCDWriteInt@fieldLength
  6566  066A  3002               	movlw	2
  6567  066B  00C2               	movwf	??_main+1
  6568  066C  0842               	movf	??_main+1,w
  6569  066D  00AB               	movwf	LCDWriteInt@numPlaces
  6570  066E  01AC               	clrf	LCDWriteInt@sign
  6571  066F  3182  2207  3183   	fcall	_LCDWriteInt
  6572                           
  6573                           ;main.c: 226: LCDWriteCharacter('V');
  6574  0672  3056               	movlw	86
  6575  0673  318E  2659  3183   	fcall	_LCDWriteCharacter
  6576                           
  6577                           ;main.c: 227: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  6578  0676  3002               	movlw	2
  6579  0677  0020               	movlb	0	; select bank0
  6580  0678  00C1               	movwf	??_main
  6581  0679  0841               	movf	??_main,w
  6582  067A  00F5               	movwf	gotoXY@y
  6583  067B  301C               	movlw	28
  6584  067C  318B  2391  3183   	fcall	_gotoXY
  6585  067F  0021               	movlb	1	; select bank1
  6586  0680  0853               	movf	((_current+1)^(0+128)+2),w
  6587  0681  0020               	movlb	0	; select bank0
  6588  0682  00A9               	movwf	LCDWriteInt@value+1
  6589  0683  0021               	movlb	1	; select bank1
  6590  0684  0852               	movf	(_current^(0+128)+2),w
  6591  0685  0020               	movlb	0	; select bank0
  6592  0686  00A8               	movwf	LCDWriteInt@value
  6593  0687  3003               	movlw	3
  6594  0688  00C1               	movwf	??_main
  6595  0689  0841               	movf	??_main,w
  6596  068A  00AA               	movwf	LCDWriteInt@fieldLength
  6597  068B  01AB               	clrf	LCDWriteInt@numPlaces
  6598  068C  0AAB               	incf	LCDWriteInt@numPlaces,f
  6599  068D  01AC               	clrf	LCDWriteInt@sign
  6600  068E  3182  2207  3183   	fcall	_LCDWriteInt
  6601                           
  6602                           ;main.c: 228: { gotoXY(48,2); LCDWriteInt(Vref,4, 0, 0);};
  6603  0691  3002               	movlw	2
  6604  0692  0020               	movlb	0	; select bank0
  6605  0693  00C1               	movwf	??_main
  6606  0694  0841               	movf	??_main,w
  6607  0695  00F5               	movwf	gotoXY@y
  6608  0696  3030               	movlw	48
  6609  0697  318B  2391  3183   	fcall	_gotoXY
  6610  069A  0020               	movlb	0	; select bank0
  6611  069B  086C               	movf	_Vref+1,w
  6612  069C  00A9               	movwf	LCDWriteInt@value+1
  6613  069D  086B               	movf	_Vref,w
  6614  069E  00A8               	movwf	LCDWriteInt@value
  6615  069F  3004               	movlw	4
  6616  06A0  00C1               	movwf	??_main
  6617  06A1  0841               	movf	??_main,w
  6618  06A2  00AA               	movwf	LCDWriteInt@fieldLength
  6619  06A3  01AB               	clrf	LCDWriteInt@numPlaces
  6620  06A4  01AC               	clrf	LCDWriteInt@sign
  6621  06A5  3182  2207  3183   	fcall	_LCDWriteInt
  6622                           
  6623                           ;main.c: 230: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,5, 0, 0);};
  6624  06A8  3003               	movlw	3
  6625  06A9  0020               	movlb	0	; select bank0
  6626  06AA  00C1               	movwf	??_main
  6627  06AB  0841               	movf	??_main,w
  6628  06AC  00F5               	movwf	gotoXY@y
  6629  06AD  3000               	movlw	0
  6630  06AE  318B  2391  3183   	fcall	_gotoXY
  6631  06B1  3064               	movlw	100
  6632  06B2  00F0               	movwf	___awdiv@divisor
  6633  06B3  3000               	movlw	0
  6634  06B4  00F1               	movwf	___awdiv@divisor+1
  6635  06B5  0020               	movlb	0	; select bank0
  6636  06B6  0858               	movf	_voltage+1,w
  6637  06B7  00F3               	movwf	___awdiv@dividend+1
  6638  06B8  0857               	movf	_voltage,w
  6639  06B9  00F2               	movwf	___awdiv@dividend
  6640  06BA  3180  2004  3183   	fcall	___awdiv
  6641  06BD  0871               	movf	?___awdiv+1,w
  6642  06BE  00FA               	movwf	___wmul@multiplier+1
  6643  06BF  0870               	movf	?___awdiv,w
  6644  06C0  00F9               	movwf	___wmul@multiplier
  6645  06C1  0021               	movlb	1	; select bank1
  6646  06C2  0851               	movf	(_current+1)^(0+128),w
  6647  06C3  00FC               	movwf	___wmul@multiplicand+1
  6648  06C4  0850               	movf	_current^(0+128),w
  6649  06C5  00FB               	movwf	___wmul@multiplicand
  6650  06C6  318C  2417  3183   	fcall	___wmul
  6651  06C9  087A               	movf	?___wmul+1,w
  6652  06CA  0020               	movlb	0	; select bank0
  6653  06CB  00D0               	movwf	_main$1021+1
  6654  06CC  0879               	movf	?___wmul,w
  6655  06CD  00CF               	movwf	_main$1021
  6656  06CE  300A               	movlw	10
  6657  06CF  00F0               	movwf	___awdiv@divisor
  6658  06D0  3000               	movlw	0
  6659  06D1  00F1               	movwf	___awdiv@divisor+1
  6660  06D2  0850               	movf	_main$1021+1,w
  6661  06D3  00F3               	movwf	___awdiv@dividend+1
  6662  06D4  084F               	movf	_main$1021,w
  6663  06D5  00F2               	movwf	___awdiv@dividend
  6664  06D6  3180  2004  3183   	fcall	___awdiv
  6665  06D9  0871               	movf	?___awdiv+1,w
  6666  06DA  0020               	movlb	0	; select bank0
  6667  06DB  00CE               	movwf	_main$1022+1
  6668  06DC  0870               	movf	?___awdiv,w
  6669  06DD  00CD               	movwf	_main$1022
  6670  06DE  084E               	movf	_main$1022+1,w
  6671  06DF  00A9               	movwf	LCDWriteInt@value+1
  6672  06E0  084D               	movf	_main$1022,w
  6673  06E1  00A8               	movwf	LCDWriteInt@value
  6674  06E2  3005               	movlw	5
  6675  06E3  00C1               	movwf	??_main
  6676  06E4  0841               	movf	??_main,w
  6677  06E5  00AA               	movwf	LCDWriteInt@fieldLength
  6678  06E6  01AB               	clrf	LCDWriteInt@numPlaces
  6679  06E7  01AC               	clrf	LCDWriteInt@sign
  6680  06E8  3182  2207  3183   	fcall	_LCDWriteInt
  6681                           
  6682                           ;main.c: 231: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  6683  06EB  3003               	movlw	3
  6684  06EC  0020               	movlb	0	; select bank0
  6685  06ED  00C1               	movwf	??_main
  6686  06EE  0841               	movf	??_main,w
  6687  06EF  00F5               	movwf	gotoXY@y
  6688  06F0  301C               	movlw	28
  6689  06F1  318B  2391  3183   	fcall	_gotoXY
  6690  06F4  0020               	movlb	0	; select bank0
  6691  06F5  086D               	movf	_battery_state,w
  6692  06F6  00C1               	movwf	??_main
  6693  06F7  01C2               	clrf	??_main+1
  6694  06F8  0841               	movf	??_main,w
  6695  06F9  00A8               	movwf	LCDWriteInt@value
  6696  06FA  0842               	movf	??_main+1,w
  6697  06FB  00A9               	movwf	LCDWriteInt@value+1
  6698  06FC  01AA               	clrf	LCDWriteInt@fieldLength
  6699  06FD  0AAA               	incf	LCDWriteInt@fieldLength,f
  6700  06FE  01AB               	clrf	LCDWriteInt@numPlaces
  6701  06FF  01AC               	clrf	LCDWriteInt@sign
  6702  0700  3182  2207  3183   	fcall	_LCDWriteInt
  6703                           
  6704                           ;main.c: 232: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  6705  0703  3003               	movlw	3
  6706  0704  0020               	movlb	0	; select bank0
  6707  0705  00C1               	movwf	??_main
  6708  0706  0841               	movf	??_main,w
  6709  0707  00F5               	movwf	gotoXY@y
  6710  0708  3024               	movlw	36
  6711  0709  318B  2391  3183   	fcall	_gotoXY
  6712  070C  0020               	movlb	0	; select bank0
  6713  070D  086E               	movf	_Imode0,w
  6714  070E  00A8               	movwf	LCDWriteInt@value
  6715  070F  01A9               	clrf	LCDWriteInt@value+1
  6716  0710  1BA8               	btfsc	LCDWriteInt@value,7
  6717  0711  03A9               	decf	LCDWriteInt@value+1,f
  6718  0712  01AA               	clrf	LCDWriteInt@fieldLength
  6719  0713  0AAA               	incf	LCDWriteInt@fieldLength,f
  6720  0714  01AB               	clrf	LCDWriteInt@numPlaces
  6721  0715  01AC               	clrf	LCDWriteInt@sign
  6722  0716  3182  2207  3183   	fcall	_LCDWriteInt
  6723                           
  6724                           ;main.c: 233: { gotoXY(48,3); LCDWriteInt(Iref,4, 0, 0);};
  6725  0719  3003               	movlw	3
  6726  071A  0020               	movlb	0	; select bank0
  6727  071B  00C1               	movwf	??_main
  6728  071C  0841               	movf	??_main,w
  6729  071D  00F5               	movwf	gotoXY@y
  6730  071E  3030               	movlw	48
  6731  071F  318B  2391  3183   	fcall	_gotoXY
  6732  0722  0021               	movlb	1	; select bank1
  6733  0723  0860               	movf	(_Iref+1)^(0+128),w
  6734  0724  0020               	movlb	0	; select bank0
  6735  0725  00A9               	movwf	LCDWriteInt@value+1
  6736  0726  0021               	movlb	1	; select bank1
  6737  0727  085F               	movf	_Iref^(0+128),w
  6738  0728  0020               	movlb	0	; select bank0
  6739  0729  00A8               	movwf	LCDWriteInt@value
  6740  072A  3004               	movlw	4
  6741  072B  00C1               	movwf	??_main
  6742  072C  0841               	movf	??_main,w
  6743  072D  00AA               	movwf	LCDWriteInt@fieldLength
  6744  072E  01AB               	clrf	LCDWriteInt@numPlaces
  6745  072F  01AC               	clrf	LCDWriteInt@sign
  6746  0730  3182  2207  3183   	fcall	_LCDWriteInt
  6747                           
  6748                           ;main.c: 236: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,5, 0, 0);};
  6749  0733  3004               	movlw	4
  6750  0734  0020               	movlb	0	; select bank0
  6751  0735  00C1               	movwf	??_main
  6752  0736  0841               	movf	??_main,w
  6753  0737  00F5               	movwf	gotoXY@y
  6754  0738  3000               	movlw	0
  6755  0739  318B  2391  3183   	fcall	_gotoXY
  6756  073C  3064               	movlw	100
  6757  073D  00F0               	movwf	___awdiv@divisor
  6758  073E  3000               	movlw	0
  6759  073F  00F1               	movwf	___awdiv@divisor+1
  6760  0740  0020               	movlb	0	; select bank0
  6761  0741  085A               	movf	_voltage+3,w
  6762  0742  00F3               	movwf	___awdiv@dividend+1
  6763  0743  0859               	movf	_voltage+2,w
  6764  0744  00F2               	movwf	___awdiv@dividend
  6765  0745  3180  2004  3183   	fcall	___awdiv
  6766  0748  0871               	movf	?___awdiv+1,w
  6767  0749  00FA               	movwf	___wmul@multiplier+1
  6768  074A  0870               	movf	?___awdiv,w
  6769  074B  00F9               	movwf	___wmul@multiplier
  6770  074C  0021               	movlb	1	; select bank1
  6771  074D  0853               	movf	((_current+1)^(0+128)+2),w
  6772  074E  00FC               	movwf	___wmul@multiplicand+1
  6773  074F  0852               	movf	(_current^(0+128)+2),w
  6774  0750  00FB               	movwf	___wmul@multiplicand
  6775  0751  318C  2417  3183   	fcall	___wmul
  6776  0754  087A               	movf	?___wmul+1,w
  6777  0755  0020               	movlb	0	; select bank0
  6778  0756  00D0               	movwf	_main$1021+1
  6779  0757  0879               	movf	?___wmul,w
  6780  0758  00CF               	movwf	_main$1021
  6781  0759  300A               	movlw	10
  6782  075A  00F0               	movwf	___awdiv@divisor
  6783  075B  3000               	movlw	0
  6784  075C  00F1               	movwf	___awdiv@divisor+1
  6785  075D  0850               	movf	_main$1021+1,w
  6786  075E  00F3               	movwf	___awdiv@dividend+1
  6787  075F  084F               	movf	_main$1021,w
  6788  0760  00F2               	movwf	___awdiv@dividend
  6789  0761  3180  2004  3183   	fcall	___awdiv
  6790  0764  0871               	movf	?___awdiv+1,w
  6791  0765  0020               	movlb	0	; select bank0
  6792  0766  00CE               	movwf	_main$1022+1
  6793  0767  0870               	movf	?___awdiv,w
  6794  0768  00CD               	movwf	_main$1022
  6795  0769  084E               	movf	_main$1022+1,w
  6796  076A  00A9               	movwf	LCDWriteInt@value+1
  6797  076B  084D               	movf	_main$1022,w
  6798  076C  00A8               	movwf	LCDWriteInt@value
  6799  076D  3005               	movlw	5
  6800  076E  00C1               	movwf	??_main
  6801  076F  0841               	movf	??_main,w
  6802  0770  00AA               	movwf	LCDWriteInt@fieldLength
  6803  0771  01AB               	clrf	LCDWriteInt@numPlaces
  6804  0772  01AC               	clrf	LCDWriteInt@sign
  6805  0773  3182  2207  3183   	fcall	_LCDWriteInt
  6806                           
  6807                           ;main.c: 237: { gotoXY(28,4); LCDWriteInt(power0OutOld,5, 0, 0);};
  6808  0776  3004               	movlw	4
  6809  0777  0020               	movlb	0	; select bank0
  6810  0778  00C1               	movwf	??_main
  6811  0779  0841               	movf	??_main,w
  6812  077A  00F5               	movwf	gotoXY@y
  6813  077B  301C               	movlw	28
  6814  077C  318B  2391  3183   	fcall	_gotoXY
  6815  077F  0020               	movlb	0	; select bank0
  6816  0780  0846               	movf	main@power0OutOld+1,w
  6817  0781  00A9               	movwf	LCDWriteInt@value+1
  6818  0782  0845               	movf	main@power0OutOld,w
  6819  0783  00A8               	movwf	LCDWriteInt@value
  6820  0784  3005               	movlw	5
  6821  0785  00C1               	movwf	??_main
  6822  0786  0841               	movf	??_main,w
  6823  0787  00AA               	movwf	LCDWriteInt@fieldLength
  6824  0788  01AB               	clrf	LCDWriteInt@numPlaces
  6825  0789  01AC               	clrf	LCDWriteInt@sign
  6826  078A  3182  2207  3183   	fcall	_LCDWriteInt
  6827                           
  6828                           ;main.c: 245: { gotoXY(0,5); LCDWriteInt(dutyCycle6,3, 0, 0);};
  6829  078D  3005               	movlw	5
  6830  078E  0020               	movlb	0	; select bank0
  6831  078F  00C1               	movwf	??_main
  6832  0790  0841               	movf	??_main,w
  6833  0791  00F5               	movwf	gotoXY@y
  6834  0792  3000               	movlw	0
  6835  0793  318B  2391  3183   	fcall	_gotoXY
  6836  0796  0020               	movlb	0	; select bank0
  6837  0797  0856               	movf	main@dutyCycle6+1,w
  6838  0798  00A9               	movwf	LCDWriteInt@value+1
  6839  0799  0855               	movf	main@dutyCycle6,w
  6840  079A  00A8               	movwf	LCDWriteInt@value
  6841  079B  3003               	movlw	3
  6842  079C  00C1               	movwf	??_main
  6843  079D  0841               	movf	??_main,w
  6844  079E  00AA               	movwf	LCDWriteInt@fieldLength
  6845  079F  01AB               	clrf	LCDWriteInt@numPlaces
  6846  07A0  01AC               	clrf	LCDWriteInt@sign
  6847  07A1  3182  2207  3183   	fcall	_LCDWriteInt
  6848                           
  6849                           ;main.c: 248: { gotoXY(40,5); LCDWriteInt(!RB2,1, 0, 0);};
  6850  07A4  3005               	movlw	5
  6851  07A5  0020               	movlb	0	; select bank0
  6852  07A6  00C1               	movwf	??_main
  6853  07A7  0841               	movf	??_main,w
  6854  07A8  00F5               	movwf	gotoXY@y
  6855  07A9  3028               	movlw	40
  6856  07AA  318B  2391  3183   	fcall	_gotoXY
  6857  07AD  1003               	clrc
  6858  07AE  0020               	movlb	0	; select bank0
  6859  07AF  1D0D               	btfss	13,2	;volatile
  6860  07B0  1403               	setc
  6861  07B1  3000               	movlw	0
  6862  07B2  3D09               	addwfc	9,w
  6863  07B3  00C1               	movwf	??_main
  6864  07B4  01C2               	clrf	??_main+1
  6865  07B5  0841               	movf	??_main,w
  6866  07B6  00A8               	movwf	LCDWriteInt@value
  6867  07B7  0842               	movf	??_main+1,w
  6868  07B8  00A9               	movwf	LCDWriteInt@value+1
  6869  07B9  01AA               	clrf	LCDWriteInt@fieldLength
  6870  07BA  0AAA               	incf	LCDWriteInt@fieldLength,f
  6871  07BB  01AB               	clrf	LCDWriteInt@numPlaces
  6872  07BC  01AC               	clrf	LCDWriteInt@sign
  6873  07BD  3182  2207  3183   	fcall	_LCDWriteInt
  6874                           
  6875                           ;main.c: 250: if(battery_state > FINISHED)
  6876  07C0  3003               	movlw	3
  6877  07C1  0020               	movlb	0	; select bank0
  6878  07C2  026D               	subwf	_battery_state,w
  6879  07C3  1C03               	skipc
  6880  07C4  2FC8               	goto	l2541
  6881                           
  6882                           ;main.c: 251: {
  6883                           ;main.c: 252: cc_cv_mode();
  6884  07C5  318D  258C  3183   	fcall	_cc_cv_mode
  6885  07C8                     l2541:	
  6886                           
  6887                           ;main.c: 253: }
  6888                           ;main.c: 254: slowLoop=0;
  6889  07C8  0020               	movlb	0	; select bank0
  6890  07C9  01CA               	clrf	main@slowLoop
  6891  07CA  2C17               	goto	l2363
  6892  07CB                     __end_of_main:	
  6893                           
  6894                           	psect	text1
  6895  0055                     __ptext1:	
  6896 ;; *************** function _readButton *****************
  6897 ;; Defined at:
  6898 ;;		line 9 in file "buttons.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;		None
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;		None
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  1    wreg      unsigned char 
  6905 ;; Registers used:
  6906 ;;		wreg, status,2, status,0, pclath, cstack
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;Total ram usage:        2 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:    1
  6919 ;; This function calls:
  6920 ;;		_ADCRead
  6921 ;; This function is called by:
  6922 ;;		_main
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           
  6927                           ;psect for function _readButton
  6928  0055                     _readButton:	
  6929                           
  6930                           ;buttons.c: 11: readButtons = ADCRead(11);
  6931                           
  6932                           ;incstack = 0
  6933                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  6934  0055  300B               	movlw	11
  6935  0056  318B  23B9  3180   	fcall	_ADCRead
  6936  0059  0871               	movf	?_ADCRead+1,w
  6937  005A  0020               	movlb	0	; select bank0
  6938  005B  00E0               	movwf	_readButtons+1
  6939  005C  0870               	movf	?_ADCRead,w
  6940  005D  00DF               	movwf	_readButtons
  6941                           
  6942                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  6943  005E  0860               	movf	_readButtons+1,w
  6944  005F  3A80               	xorlw	128
  6945  0060  00F4               	movwf	??_readButton
  6946  0061  3081               	movlw	129
  6947  0062  0274               	subwf	??_readButton,w
  6948  0063  1D03               	skipz
  6949  0064  2867               	goto	u2455
  6950  0065  306D               	movlw	109
  6951  0066  025F               	subwf	_readButtons,w
  6952  0067                     u2455:	
  6953  0067  1C03               	skipc
  6954  0068  2879               	goto	l2281
  6955  0069  0020               	movlb	0	; select bank0
  6956  006A  0860               	movf	_readButtons+1,w
  6957  006B  3A80               	xorlw	128
  6958  006C  00F4               	movwf	??_readButton
  6959  006D  3081               	movlw	129
  6960  006E  0274               	subwf	??_readButton,w
  6961  006F  1D03               	skipz
  6962  0070  2873               	goto	u2465
  6963  0071  3095               	movlw	149
  6964  0072  025F               	subwf	_readButtons,w
  6965  0073                     u2465:	
  6966  0073  1803               	skipnc
  6967  0074  2879               	goto	l2281
  6968                           
  6969                           ;buttons.c: 14: {
  6970                           ;buttons.c: 15: button = 1;
  6971  0075  0020               	movlb	0	; select bank0
  6972  0076  01E9               	clrf	_button
  6973  0077  0AE9               	incf	_button,f
  6974                           
  6975                           ;buttons.c: 16: }
  6976  0078  28A7               	goto	l2293
  6977  0079                     l2281:	
  6978                           
  6979                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  6980  0079  0020               	movlb	0	; select bank0
  6981  007A  0860               	movf	_readButtons+1,w
  6982  007B  3A80               	xorlw	128
  6983  007C  00F4               	movwf	??_readButton
  6984  007D  3082               	movlw	130
  6985  007E  0274               	subwf	??_readButton,w
  6986  007F  1D03               	skipz
  6987  0080  2883               	goto	u2475
  6988  0081  3017               	movlw	23
  6989  0082  025F               	subwf	_readButtons,w
  6990  0083                     u2475:	
  6991  0083  1C03               	skipc
  6992  0084  2893               	goto	l2287
  6993  0085  0020               	movlb	0	; select bank0
  6994  0086  0860               	movf	_readButtons+1,w
  6995  0087  3A80               	xorlw	128
  6996  0088  00F4               	movwf	??_readButton
  6997  0089  3082               	movlw	130
  6998  008A  0274               	subwf	??_readButton,w
  6999  008B  1D03               	skipz
  7000  008C  288F               	goto	u2485
  7001  008D  304E               	movlw	78
  7002  008E  025F               	subwf	_readButtons,w
  7003  008F                     u2485:	
  7004  008F  1803               	skipnc
  7005  0090  2893               	goto	l2287
  7006                           
  7007                           ;buttons.c: 19: {
  7008                           ;buttons.c: 20: button = 2;
  7009  0091  3002               	movlw	2
  7010  0092  28A0               	goto	L1
  7011  0093                     l2287:	
  7012                           ;buttons.c: 21: }
  7013                           
  7014                           
  7015                           ;buttons.c: 23: else if(readButtons > 745)
  7016  0093  0020               	movlb	0	; select bank0
  7017  0094  0860               	movf	_readButtons+1,w
  7018  0095  3A80               	xorlw	128
  7019  0096  00F4               	movwf	??_readButton
  7020  0097  3082               	movlw	130
  7021  0098  0274               	subwf	??_readButton,w
  7022  0099  1D03               	skipz
  7023  009A  289D               	goto	u2495
  7024  009B  30EA               	movlw	234
  7025  009C  025F               	subwf	_readButtons,w
  7026  009D                     u2495:	
  7027  009D  1C03               	skipc
  7028  009E  28A5               	goto	l2291
  7029                           
  7030                           ;buttons.c: 24: {
  7031                           ;buttons.c: 25: button = 3;
  7032  009F  3003               	movlw	3
  7033  00A0                     L1:	
  7034  00A0  00F4               	movwf	??_readButton
  7035  00A1  0874               	movf	??_readButton,w
  7036  00A2  0020               	movlb	0	; select bank0
  7037  00A3  00E9               	movwf	_button
  7038                           
  7039                           ;buttons.c: 26: }
  7040  00A4  28A7               	goto	l2293
  7041  00A5                     l2291:	
  7042                           
  7043                           ;buttons.c: 28: else
  7044                           ;buttons.c: 29: {
  7045                           ;buttons.c: 30: button = 0;
  7046  00A5  0020               	movlb	0	; select bank0
  7047  00A6  01E9               	clrf	_button
  7048  00A7                     l2293:	
  7049                           
  7050                           ;buttons.c: 31: }
  7051                           ;buttons.c: 33: if (button != 0)
  7052  00A7  0869               	movf	_button,w
  7053  00A8  1903               	btfsc	3,2
  7054  00A9  28D4               	goto	l2313
  7055                           
  7056                           ;buttons.c: 34: {
  7057                           ;buttons.c: 35: if (button != lastButton)
  7058  00AA  0869               	movf	_button,w
  7059  00AB  0668               	xorwf	_lastButton,w
  7060  00AC  1903               	skipnz
  7061  00AD  28B3               	goto	l2301
  7062                           
  7063                           ;buttons.c: 36: {
  7064                           ;buttons.c: 37: lastButton = button;
  7065  00AE  0869               	movf	_button,w
  7066  00AF  00F4               	movwf	??_readButton
  7067  00B0  0874               	movf	??_readButton,w
  7068  00B1  00E8               	movwf	_lastButton
  7069  00B2  28D4               	goto	l2313
  7070  00B3                     l2301:	
  7071                           ;buttons.c: 39: }
  7072                           
  7073                           ;buttons.c: 38: j = 0;
  7074                           
  7075                           
  7076                           ;buttons.c: 40: else
  7077                           ;buttons.c: 41: {
  7078                           ;buttons.c: 42: j += 1;
  7079  00B3  3001               	movlw	1
  7080  00B4  00F4               	movwf	??_readButton
  7081  00B5  0874               	movf	??_readButton,w
  7082  00B6  07E7               	addwf	_j,f
  7083                           
  7084                           ;buttons.c: 44: if(j == 1)
  7085  00B7  0367               	decf	_j,w
  7086  00B8  1D03               	btfss	3,2
  7087  00B9  28BC               	goto	l2307
  7088                           
  7089                           ;buttons.c: 45: {
  7090                           ;buttons.c: 46: return (lastButton);
  7091  00BA  0868               	movf	_lastButton,w
  7092  00BB  0008               	return
  7093  00BC                     l2307:	
  7094                           
  7095                           ;buttons.c: 47: }
  7096                           ;buttons.c: 49: if (j >10)
  7097  00BC  0867               	movf	_j,w
  7098  00BD  3A80               	xorlw	128
  7099  00BE  3E75               	addlw	-139
  7100  00BF  1C03               	skipc
  7101  00C0  28D5               	goto	l2315
  7102                           
  7103                           ;buttons.c: 50: {
  7104                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  7105  00C1  3002               	movlw	2
  7106  00C2  00F5               	movwf	??_readButton+1
  7107  00C3  3004               	movlw	4
  7108  00C4  00F4               	movwf	??_readButton
  7109  00C5  30BA               	movlw	186
  7110  00C6                     u2817:	
  7111  00C6  0B89               	decfsz	9,f
  7112  00C7  28C6               	goto	u2817
  7113  00C8  0BF4               	decfsz	??_readButton,f
  7114  00C9  28C6               	goto	u2817
  7115  00CA  0BF5               	decfsz	??_readButton+1,f
  7116  00CB  28C6               	goto	u2817
  7117  00CC  3200               	nop2
  7118                           
  7119                           ;buttons.c: 52: j = 10;
  7120  00CD  300A               	movlw	10
  7121  00CE  00F4               	movwf	??_readButton
  7122  00CF  0874               	movf	??_readButton,w
  7123  00D0  0020               	movlb	0	; select bank0
  7124  00D1  00E7               	movwf	_j
  7125                           
  7126                           ;buttons.c: 53: return (lastButton);
  7127  00D2  0868               	movf	_lastButton,w
  7128  00D3  0008               	return
  7129  00D4                     l2313:	
  7130                           ;buttons.c: 54: }
  7131                           ;buttons.c: 55: }
  7132                           ;buttons.c: 56: goto end;
  7133                           
  7134                           
  7135                           ;buttons.c: 57: }
  7136                           ;buttons.c: 59: j = 0;
  7137  00D4  01E7               	clrf	_j
  7138  00D5                     l2315:	
  7139                           ;buttons.c: 61: end:
  7140                           
  7141                           
  7142                           ;buttons.c: 63: return (0);
  7143  00D5  3000               	movlw	0
  7144  00D6  0008               	return
  7145  00D7                     __end_of_readButton:	
  7146                           
  7147                           	psect	text2
  7148  02C0                     __ptext2:	
  7149 ;; *************** function _readAnalog *****************
  7150 ;; Defined at:
  7151 ;;		line 49 in file "adc.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  channel         2    6[BANK0 ] unsigned int 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  value           2   28[BANK0 ] int 
  7156 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  2    6[BANK0 ] int 
  7159 ;; Registers used:
  7160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7169 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;Total ram usage:       24 bytes
  7171 ;; Hardware stack levels used:    1
  7172 ;; Hardware stack levels required when called:    1
  7173 ;; This function calls:
  7174 ;;		_ADCRead
  7175 ;;		___aldiv
  7176 ;;		___wmul
  7177 ;; This function is called by:
  7178 ;;		_main
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           
  7183                           ;psect for function _readAnalog
  7184  02C0                     _readAnalog:	
  7185                           
  7186                           ;adc.c: 51: int16_t value;
  7187                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  7188                           
  7189                           ;incstack = 0
  7190                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7191  02C0  0020               	movlb	0	; select bank0
  7192  02C1  3526               	lslf	readAnalog@channel,w
  7193  02C2  3E20               	addlw	(low (_channels| (0+256)))& (0+255)
  7194  02C3  0086               	movwf	6
  7195  02C4  3001               	movlw	1	; select bank2/3
  7196  02C5  0087               	movwf	7
  7197  02C6  3F40               	moviw [0]fsr1
  7198  02C7  00BA               	movwf	readAnalog@analog_channel
  7199  02C8  3F41               	moviw [1]fsr1
  7200  02C9  00BB               	movwf	readAnalog@analog_channel+1
  7201                           
  7202                           ;adc.c: 55: value = ADCRead(analog_channel);
  7203  02CA  083A               	movf	readAnalog@analog_channel,w
  7204  02CB  318B  23B9  3182   	fcall	_ADCRead
  7205  02CE  0871               	movf	?_ADCRead+1,w
  7206  02CF  0020               	movlb	0	; select bank0
  7207  02D0  00BD               	movwf	readAnalog@value+1
  7208  02D1  0870               	movf	?_ADCRead,w
  7209  02D2  00BC               	movwf	readAnalog@value
  7210                           
  7211                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  7212  02D3  0826               	movf	readAnalog@channel,w
  7213  02D4  00A8               	movwf	??_readAnalog
  7214  02D5  3001               	movlw	1
  7215  02D6                     u2125:	
  7216  02D6  35A8               	lslf	??_readAnalog,f
  7217  02D7  3EFF               	addlw	-1
  7218  02D8  1D03               	skipz
  7219  02D9  2AD6               	goto	u2125
  7220  02DA  3528               	lslf	??_readAnalog,w
  7221  02DB  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7222  02DC  0086               	movwf	6
  7223  02DD  0187               	clrf	7
  7224  02DE  3F40               	moviw [0]fsr1
  7225  02DF  00A9               	movwf	??_readAnalog+1
  7226  02E0  3F41               	moviw [1]fsr1
  7227  02E1  00AA               	movwf	??_readAnalog+2
  7228  02E2  3F42               	moviw [2]fsr1
  7229  02E3  00AB               	movwf	??_readAnalog+3
  7230  02E4  3F43               	moviw [3]fsr1
  7231  02E5  00AC               	movwf	??_readAnalog+4
  7232  02E6  0866               	movf	_sampleIndex+1,w
  7233  02E7  00AE               	movwf	??_readAnalog+6
  7234  02E8  0865               	movf	_sampleIndex,w
  7235  02E9  00AD               	movwf	??_readAnalog+5
  7236  02EA  35AD               	lslf	??_readAnalog+5,f
  7237  02EB  0DAE               	rlf	??_readAnalog+6,f
  7238  02EC  0827               	movf	readAnalog@channel+1,w
  7239  02ED  00FA               	movwf	___wmul@multiplier+1
  7240  02EE  0826               	movf	readAnalog@channel,w
  7241  02EF  00F9               	movwf	___wmul@multiplier
  7242  02F0  3064               	movlw	100
  7243  02F1  00FB               	movwf	___wmul@multiplicand
  7244  02F2  3000               	movlw	0
  7245  02F3  00FC               	movwf	___wmul@multiplicand+1
  7246  02F4  318C  2417  3182   	fcall	___wmul
  7247  02F7  30D0               	movlw	208
  7248  02F8  0020               	movlb	0	; select bank0
  7249  02F9  00AF               	movwf	??_readAnalog+7
  7250  02FA  3020               	movlw	32
  7251  02FB  00B0               	movwf	??_readAnalog+8
  7252  02FC  0879               	movf	?___wmul,w
  7253  02FD  072F               	addwf	??_readAnalog+7,w
  7254  02FE  00B1               	movwf	??_readAnalog+9
  7255  02FF  087A               	movf	?___wmul+1,w
  7256  0300  3D30               	addwfc	??_readAnalog+8,w
  7257  0301  00B2               	movwf	??_readAnalog+10
  7258  0302  082D               	movf	??_readAnalog+5,w
  7259  0303  0731               	addwf	??_readAnalog+9,w
  7260  0304  0086               	movwf	6
  7261  0305  082E               	movf	??_readAnalog+6,w
  7262  0306  3D32               	addwfc	??_readAnalog+10,w
  7263  0307  0087               	movwf	7
  7264  0308  3F40               	moviw [0]fsr1
  7265  0309  00B3               	movwf	??_readAnalog+11
  7266  030A  3F41               	moviw [1]fsr1
  7267  030B  00B4               	movwf	??_readAnalog+12
  7268  030C  0833               	movf	??_readAnalog+11,w
  7269  030D  00B5               	movwf	??_readAnalog+13
  7270  030E  0834               	movf	??_readAnalog+12,w
  7271  030F  00B6               	movwf	??_readAnalog+14
  7272  0310  3000               	movlw	0
  7273  0311  1BB6               	btfsc	??_readAnalog+14,7
  7274  0312  30FF               	movlw	255
  7275  0313  00B7               	movwf	??_readAnalog+15
  7276  0314  00B8               	movwf	??_readAnalog+16
  7277  0315  09B5               	comf	??_readAnalog+13,f
  7278  0316  09B6               	comf	??_readAnalog+14,f
  7279  0317  09B7               	comf	??_readAnalog+15,f
  7280  0318  09B8               	comf	??_readAnalog+16,f
  7281  0319  0AB5               	incf	??_readAnalog+13,f
  7282  031A  1903               	skipnz
  7283  031B  0AB6               	incf	??_readAnalog+14,f
  7284  031C  1903               	skipnz
  7285  031D  0AB7               	incf	??_readAnalog+15,f
  7286  031E  1903               	skipnz
  7287  031F  0AB8               	incf	??_readAnalog+16,f
  7288  0320  0835               	movf	??_readAnalog+13,w
  7289  0321  07A9               	addwf	??_readAnalog+1,f
  7290  0322  0836               	movf	??_readAnalog+14,w
  7291  0323  3DAA               	addwfc	??_readAnalog+2,f
  7292  0324  0837               	movf	??_readAnalog+15,w
  7293  0325  3DAB               	addwfc	??_readAnalog+3,f
  7294  0326  0838               	movf	??_readAnalog+16,w
  7295  0327  3DAC               	addwfc	??_readAnalog+4,f
  7296  0328  0826               	movf	readAnalog@channel,w
  7297  0329  00B9               	movwf	??_readAnalog+17
  7298  032A  3001               	movlw	1
  7299  032B                     u2135:	
  7300  032B  35B9               	lslf	??_readAnalog+17,f
  7301  032C  3EFF               	addlw	-1
  7302  032D  1D03               	skipz
  7303  032E  2B2B               	goto	u2135
  7304  032F  3539               	lslf	??_readAnalog+17,w
  7305  0330  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7306  0331  0086               	movwf	6
  7307  0332  0187               	clrf	7
  7308  0333  0829               	movf	??_readAnalog+1,w
  7309  0334  3FC0               	movwi [0]fsr1
  7310  0335  082A               	movf	??_readAnalog+2,w
  7311  0336  3FC1               	movwi [1]fsr1
  7312  0337  082B               	movf	??_readAnalog+3,w
  7313  0338  3FC2               	movwi [2]fsr1
  7314  0339  082C               	movf	??_readAnalog+4,w
  7315  033A  3FC3               	movwi [3]fsr1
  7316                           
  7317                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  7318  033B  0866               	movf	_sampleIndex+1,w
  7319  033C  00A9               	movwf	??_readAnalog+1
  7320  033D  0865               	movf	_sampleIndex,w
  7321  033E  00A8               	movwf	??_readAnalog
  7322  033F  35A8               	lslf	??_readAnalog,f
  7323  0340  0DA9               	rlf	??_readAnalog+1,f
  7324  0341  0827               	movf	readAnalog@channel+1,w
  7325  0342  00FA               	movwf	___wmul@multiplier+1
  7326  0343  0826               	movf	readAnalog@channel,w
  7327  0344  00F9               	movwf	___wmul@multiplier
  7328  0345  3064               	movlw	100
  7329  0346  00FB               	movwf	___wmul@multiplicand
  7330  0347  3000               	movlw	0
  7331  0348  00FC               	movwf	___wmul@multiplicand+1
  7332  0349  318C  2417  3182   	fcall	___wmul
  7333  034C  30D0               	movlw	208
  7334  034D  0020               	movlb	0	; select bank0
  7335  034E  00AA               	movwf	??_readAnalog+2
  7336  034F  3020               	movlw	32
  7337  0350  00AB               	movwf	??_readAnalog+3
  7338  0351  0879               	movf	?___wmul,w
  7339  0352  072A               	addwf	??_readAnalog+2,w
  7340  0353  00AC               	movwf	??_readAnalog+4
  7341  0354  087A               	movf	?___wmul+1,w
  7342  0355  3D2B               	addwfc	??_readAnalog+3,w
  7343  0356  00AD               	movwf	??_readAnalog+5
  7344  0357  0828               	movf	??_readAnalog,w
  7345  0358  072C               	addwf	??_readAnalog+4,w
  7346  0359  0086               	movwf	6
  7347  035A  0829               	movf	??_readAnalog+1,w
  7348  035B  3D2D               	addwfc	??_readAnalog+5,w
  7349  035C  0087               	movwf	7
  7350  035D  083C               	movf	readAnalog@value,w
  7351  035E  3FC0               	movwi [0]fsr1
  7352  035F  083D               	movf	readAnalog@value+1,w
  7353  0360  3FC1               	movwi [1]fsr1
  7354                           
  7355                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  7356  0361  0826               	movf	readAnalog@channel,w
  7357  0362  00A8               	movwf	??_readAnalog
  7358  0363  3001               	movlw	1
  7359  0364                     u2145:	
  7360  0364  35A8               	lslf	??_readAnalog,f
  7361  0365  3EFF               	addlw	-1
  7362  0366  1D03               	skipz
  7363  0367  2B64               	goto	u2145
  7364  0368  3528               	lslf	??_readAnalog,w
  7365  0369  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7366  036A  0086               	movwf	6
  7367  036B  0187               	clrf	7
  7368  036C  3F40               	moviw [0]fsr1
  7369  036D  00A9               	movwf	??_readAnalog+1
  7370  036E  3F41               	moviw [1]fsr1
  7371  036F  00AA               	movwf	??_readAnalog+2
  7372  0370  3F42               	moviw [2]fsr1
  7373  0371  00AB               	movwf	??_readAnalog+3
  7374  0372  3F43               	moviw [3]fsr1
  7375  0373  00AC               	movwf	??_readAnalog+4
  7376  0374  0866               	movf	_sampleIndex+1,w
  7377  0375  00AE               	movwf	??_readAnalog+6
  7378  0376  0865               	movf	_sampleIndex,w
  7379  0377  00AD               	movwf	??_readAnalog+5
  7380  0378  35AD               	lslf	??_readAnalog+5,f
  7381  0379  0DAE               	rlf	??_readAnalog+6,f
  7382  037A  0827               	movf	readAnalog@channel+1,w
  7383  037B  00FA               	movwf	___wmul@multiplier+1
  7384  037C  0826               	movf	readAnalog@channel,w
  7385  037D  00F9               	movwf	___wmul@multiplier
  7386  037E  3064               	movlw	100
  7387  037F  00FB               	movwf	___wmul@multiplicand
  7388  0380  3000               	movlw	0
  7389  0381  00FC               	movwf	___wmul@multiplicand+1
  7390  0382  318C  2417  3182   	fcall	___wmul
  7391  0385  30D0               	movlw	208
  7392  0386  0020               	movlb	0	; select bank0
  7393  0387  00AF               	movwf	??_readAnalog+7
  7394  0388  3020               	movlw	32
  7395  0389  00B0               	movwf	??_readAnalog+8
  7396  038A  0879               	movf	?___wmul,w
  7397  038B  072F               	addwf	??_readAnalog+7,w
  7398  038C  00B1               	movwf	??_readAnalog+9
  7399  038D  087A               	movf	?___wmul+1,w
  7400  038E  3D30               	addwfc	??_readAnalog+8,w
  7401  038F  00B2               	movwf	??_readAnalog+10
  7402  0390  082D               	movf	??_readAnalog+5,w
  7403  0391  0731               	addwf	??_readAnalog+9,w
  7404  0392  0086               	movwf	6
  7405  0393  082E               	movf	??_readAnalog+6,w
  7406  0394  3D32               	addwfc	??_readAnalog+10,w
  7407  0395  0087               	movwf	7
  7408  0396  3F40               	moviw [0]fsr1
  7409  0397  00B3               	movwf	??_readAnalog+11
  7410  0398  3F41               	moviw [1]fsr1
  7411  0399  00B4               	movwf	??_readAnalog+12
  7412  039A  0833               	movf	??_readAnalog+11,w
  7413  039B  00B5               	movwf	??_readAnalog+13
  7414  039C  0834               	movf	??_readAnalog+12,w
  7415  039D  00B6               	movwf	??_readAnalog+14
  7416  039E  3000               	movlw	0
  7417  039F  1BB6               	btfsc	??_readAnalog+14,7
  7418  03A0  30FF               	movlw	255
  7419  03A1  00B7               	movwf	??_readAnalog+15
  7420  03A2  00B8               	movwf	??_readAnalog+16
  7421  03A3  0835               	movf	??_readAnalog+13,w
  7422  03A4  07A9               	addwf	??_readAnalog+1,f
  7423  03A5  0836               	movf	??_readAnalog+14,w
  7424  03A6  3DAA               	addwfc	??_readAnalog+2,f
  7425  03A7  0837               	movf	??_readAnalog+15,w
  7426  03A8  3DAB               	addwfc	??_readAnalog+3,f
  7427  03A9  0838               	movf	??_readAnalog+16,w
  7428  03AA  3DAC               	addwfc	??_readAnalog+4,f
  7429  03AB  0826               	movf	readAnalog@channel,w
  7430  03AC  00B9               	movwf	??_readAnalog+17
  7431  03AD  3001               	movlw	1
  7432  03AE                     u2155:	
  7433  03AE  35B9               	lslf	??_readAnalog+17,f
  7434  03AF  3EFF               	addlw	-1
  7435  03B0  1D03               	skipz
  7436  03B1  2BAE               	goto	u2155
  7437  03B2  3539               	lslf	??_readAnalog+17,w
  7438  03B3  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7439  03B4  0086               	movwf	6
  7440  03B5  0187               	clrf	7
  7441  03B6  0829               	movf	??_readAnalog+1,w
  7442  03B7  3FC0               	movwi [0]fsr1
  7443  03B8  082A               	movf	??_readAnalog+2,w
  7444  03B9  3FC1               	movwi [1]fsr1
  7445  03BA  082B               	movf	??_readAnalog+3,w
  7446  03BB  3FC2               	movwi [2]fsr1
  7447  03BC  082C               	movf	??_readAnalog+4,w
  7448  03BD  3FC3               	movwi [3]fsr1
  7449                           
  7450                           ;adc.c: 63: if(channel>=(8-1))
  7451  03BE  3000               	movlw	0
  7452  03BF  0227               	subwf	readAnalog@channel+1,w
  7453  03C0  3007               	movlw	7
  7454  03C1  1903               	skipnz
  7455  03C2  0226               	subwf	readAnalog@channel,w
  7456  03C3  1C03               	skipc
  7457  03C4  2BD2               	goto	l2155
  7458                           
  7459                           ;adc.c: 64: {
  7460                           ;adc.c: 65: sampleIndex+=1;
  7461  03C5  3001               	movlw	1
  7462  03C6  07E5               	addwf	_sampleIndex,f
  7463  03C7  3000               	movlw	0
  7464  03C8  3DE6               	addwfc	_sampleIndex+1,f
  7465                           
  7466                           ;adc.c: 66: if(sampleIndex >= 50)sampleIndex = 0;
  7467  03C9  3000               	movlw	0
  7468  03CA  0266               	subwf	_sampleIndex+1,w
  7469  03CB  3032               	movlw	50
  7470  03CC  1903               	skipnz
  7471  03CD  0265               	subwf	_sampleIndex,w
  7472  03CE  1C03               	skipc
  7473  03CF  2BD2               	goto	l2155
  7474  03D0  01E5               	clrf	_sampleIndex
  7475  03D1  01E6               	clrf	_sampleIndex+1
  7476  03D2                     l2155:	
  7477                           
  7478                           ;adc.c: 67: }
  7479                           ;adc.c: 69: value = totals[channel]/50;
  7480  03D2  3000               	movlw	0
  7481  03D3  00F3               	movwf	___aldiv@divisor+3
  7482  03D4  3000               	movlw	0
  7483  03D5  00F2               	movwf	___aldiv@divisor+2
  7484  03D6  3000               	movlw	0
  7485  03D7  00F1               	movwf	___aldiv@divisor+1
  7486  03D8  3032               	movlw	50
  7487  03D9  00F0               	movwf	___aldiv@divisor
  7488  03DA  0826               	movf	readAnalog@channel,w
  7489  03DB  00A8               	movwf	??_readAnalog
  7490  03DC  3001               	movlw	1
  7491  03DD                     u2185:	
  7492  03DD  35A8               	lslf	??_readAnalog,f
  7493  03DE  3EFF               	addlw	-1
  7494  03DF  1D03               	skipz
  7495  03E0  2BDD               	goto	u2185
  7496  03E1  3528               	lslf	??_readAnalog,w
  7497  03E2  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7498  03E3  0086               	movwf	6
  7499  03E4  0187               	clrf	7
  7500  03E5  3F40               	moviw [0]fsr1
  7501  03E6  00F4               	movwf	___aldiv@dividend
  7502  03E7  3F41               	moviw [1]fsr1
  7503  03E8  00F5               	movwf	___aldiv@dividend+1
  7504  03E9  3F42               	moviw [2]fsr1
  7505  03EA  00F6               	movwf	___aldiv@dividend+2
  7506  03EB  3F43               	moviw [3]fsr1
  7507  03EC  00F7               	movwf	___aldiv@dividend+3
  7508  03ED  318F  277E         	fcall	___aldiv
  7509  03EF  0871               	movf	?___aldiv+1,w
  7510  03F0  0020               	movlb	0	; select bank0
  7511  03F1  00BD               	movwf	readAnalog@value+1
  7512  03F2  0870               	movf	?___aldiv,w
  7513  03F3  00BC               	movwf	readAnalog@value
  7514                           
  7515                           ;adc.c: 71: return value;
  7516  03F4  083D               	movf	readAnalog@value+1,w
  7517  03F5  00A7               	movwf	?_readAnalog+1
  7518  03F6  083C               	movf	readAnalog@value,w
  7519  03F7  00A6               	movwf	?_readAnalog
  7520  03F8  0008               	return
  7521  03F9                     __end_of_readAnalog:	
  7522                           
  7523                           	psect	text3
  7524  0F7E                     __ptext3:	
  7525 ;; *************** function ___aldiv *****************
  7526 ;; Defined at:
  7527 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;  divisor         4    0[COMMON] long 
  7530 ;;  dividend        4    4[COMMON] long 
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;  quotient        4    2[BANK0 ] long 
  7533 ;;  sign            1    1[BANK0 ] unsigned char 
  7534 ;;  counter         1    0[BANK0 ] unsigned char 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  4    0[COMMON] long 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7544 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7545 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7547 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;Total ram usage:       15 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; This function calls:
  7551 ;;		Nothing
  7552 ;; This function is called by:
  7553 ;;		_readAnalog
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           
  7558                           ;psect for function ___aldiv
  7559  0F7E                     ___aldiv:	
  7560                           
  7561                           ;incstack = 0
  7562                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7563  0F7E  0020               	movlb	0	; select bank0
  7564  0F7F  01A1               	clrf	___aldiv@sign
  7565  0F80  1FF3               	btfss	___aldiv@divisor+3,7
  7566  0F81  2F8F               	goto	l570
  7567  0F82  09F0               	comf	___aldiv@divisor,f
  7568  0F83  09F1               	comf	___aldiv@divisor+1,f
  7569  0F84  09F2               	comf	___aldiv@divisor+2,f
  7570  0F85  09F3               	comf	___aldiv@divisor+3,f
  7571  0F86  0AF0               	incf	___aldiv@divisor,f
  7572  0F87  1903               	skipnz
  7573  0F88  0AF1               	incf	___aldiv@divisor+1,f
  7574  0F89  1903               	skipnz
  7575  0F8A  0AF2               	incf	___aldiv@divisor+2,f
  7576  0F8B  1903               	skipnz
  7577  0F8C  0AF3               	incf	___aldiv@divisor+3,f
  7578  0F8D  01A1               	clrf	___aldiv@sign
  7579  0F8E  0AA1               	incf	___aldiv@sign,f
  7580  0F8F                     l570:	
  7581  0F8F  1FF7               	btfss	___aldiv@dividend+3,7
  7582  0F90  2FA0               	goto	l1949
  7583  0F91  09F4               	comf	___aldiv@dividend,f
  7584  0F92  09F5               	comf	___aldiv@dividend+1,f
  7585  0F93  09F6               	comf	___aldiv@dividend+2,f
  7586  0F94  09F7               	comf	___aldiv@dividend+3,f
  7587  0F95  0AF4               	incf	___aldiv@dividend,f
  7588  0F96  1903               	skipnz
  7589  0F97  0AF5               	incf	___aldiv@dividend+1,f
  7590  0F98  1903               	skipnz
  7591  0F99  0AF6               	incf	___aldiv@dividend+2,f
  7592  0F9A  1903               	skipnz
  7593  0F9B  0AF7               	incf	___aldiv@dividend+3,f
  7594  0F9C  3001               	movlw	1
  7595  0F9D  00F8               	movwf	??___aldiv
  7596  0F9E  0878               	movf	??___aldiv,w
  7597  0F9F  06A1               	xorwf	___aldiv@sign,f
  7598  0FA0                     l1949:	
  7599  0FA0  3000               	movlw	0
  7600  0FA1  00A5               	movwf	___aldiv@quotient+3
  7601  0FA2  3000               	movlw	0
  7602  0FA3  00A4               	movwf	___aldiv@quotient+2
  7603  0FA4  3000               	movlw	0
  7604  0FA5  00A3               	movwf	___aldiv@quotient+1
  7605  0FA6  3000               	movlw	0
  7606  0FA7  00A2               	movwf	___aldiv@quotient
  7607  0FA8  0873               	movf	___aldiv@divisor+3,w
  7608  0FA9  0472               	iorwf	___aldiv@divisor+2,w
  7609  0FAA  0471               	iorwf	___aldiv@divisor+1,w
  7610  0FAB  0470               	iorwf	___aldiv@divisor,w
  7611  0FAC  1903               	skipnz
  7612  0FAD  2FE9               	goto	l1971
  7613  0FAE  01A0               	clrf	___aldiv@counter
  7614  0FAF  0AA0               	incf	___aldiv@counter,f
  7615  0FB0                     l1957:	
  7616  0FB0  1BF3               	btfsc	___aldiv@divisor+3,7
  7617  0FB1  2FBE               	goto	l1959
  7618  0FB2  3001               	movlw	1
  7619  0FB3                     u1705:	
  7620  0FB3  35F0               	lslf	___aldiv@divisor,f
  7621  0FB4  0DF1               	rlf	___aldiv@divisor+1,f
  7622  0FB5  0DF2               	rlf	___aldiv@divisor+2,f
  7623  0FB6  0DF3               	rlf	___aldiv@divisor+3,f
  7624  0FB7  0B89               	decfsz	9,f
  7625  0FB8  2FB3               	goto	u1705
  7626  0FB9  3001               	movlw	1
  7627  0FBA  00F8               	movwf	??___aldiv
  7628  0FBB  0878               	movf	??___aldiv,w
  7629  0FBC  07A0               	addwf	___aldiv@counter,f
  7630  0FBD  2FB0               	goto	l1957
  7631  0FBE                     l1959:	
  7632  0FBE  3001               	movlw	1
  7633  0FBF                     u1725:	
  7634  0FBF  35A2               	lslf	___aldiv@quotient,f
  7635  0FC0  0DA3               	rlf	___aldiv@quotient+1,f
  7636  0FC1  0DA4               	rlf	___aldiv@quotient+2,f
  7637  0FC2  0DA5               	rlf	___aldiv@quotient+3,f
  7638  0FC3  0B89               	decfsz	9,f
  7639  0FC4  2FBF               	goto	u1725
  7640  0FC5  0873               	movf	___aldiv@divisor+3,w
  7641  0FC6  0277               	subwf	___aldiv@dividend+3,w
  7642  0FC7  1D03               	skipz
  7643  0FC8  2FD3               	goto	u1735
  7644  0FC9  0872               	movf	___aldiv@divisor+2,w
  7645  0FCA  0276               	subwf	___aldiv@dividend+2,w
  7646  0FCB  1D03               	skipz
  7647  0FCC  2FD3               	goto	u1735
  7648  0FCD  0871               	movf	___aldiv@divisor+1,w
  7649  0FCE  0275               	subwf	___aldiv@dividend+1,w
  7650  0FCF  1D03               	skipz
  7651  0FD0  2FD3               	goto	u1735
  7652  0FD1  0870               	movf	___aldiv@divisor,w
  7653  0FD2  0274               	subwf	___aldiv@dividend,w
  7654  0FD3                     u1735:	
  7655  0FD3  1C03               	skipc
  7656  0FD4  2FDE               	goto	l1967
  7657  0FD5  0870               	movf	___aldiv@divisor,w
  7658  0FD6  02F4               	subwf	___aldiv@dividend,f
  7659  0FD7  0871               	movf	___aldiv@divisor+1,w
  7660  0FD8  3BF5               	subwfb	___aldiv@dividend+1,f
  7661  0FD9  0872               	movf	___aldiv@divisor+2,w
  7662  0FDA  3BF6               	subwfb	___aldiv@dividend+2,f
  7663  0FDB  0873               	movf	___aldiv@divisor+3,w
  7664  0FDC  3BF7               	subwfb	___aldiv@dividend+3,f
  7665  0FDD  1422               	bsf	___aldiv@quotient,0
  7666  0FDE                     l1967:	
  7667  0FDE  3001               	movlw	1
  7668  0FDF                     u1745:	
  7669  0FDF  36F3               	lsrf	___aldiv@divisor+3,f
  7670  0FE0  0CF2               	rrf	___aldiv@divisor+2,f
  7671  0FE1  0CF1               	rrf	___aldiv@divisor+1,f
  7672  0FE2  0CF0               	rrf	___aldiv@divisor,f
  7673  0FE3  0B89               	decfsz	9,f
  7674  0FE4  2FDF               	goto	u1745
  7675  0FE5  3001               	movlw	1
  7676  0FE6  02A0               	subwf	___aldiv@counter,f
  7677  0FE7  1D03               	btfss	3,2
  7678  0FE8  2FBE               	goto	l1959
  7679  0FE9                     l1971:	
  7680  0FE9  0821               	movf	___aldiv@sign,w
  7681  0FEA  1903               	btfsc	3,2
  7682  0FEB  2FF7               	goto	l1975
  7683  0FEC  09A2               	comf	___aldiv@quotient,f
  7684  0FED  09A3               	comf	___aldiv@quotient+1,f
  7685  0FEE  09A4               	comf	___aldiv@quotient+2,f
  7686  0FEF  09A5               	comf	___aldiv@quotient+3,f
  7687  0FF0  0AA2               	incf	___aldiv@quotient,f
  7688  0FF1  1903               	skipnz
  7689  0FF2  0AA3               	incf	___aldiv@quotient+1,f
  7690  0FF3  1903               	skipnz
  7691  0FF4  0AA4               	incf	___aldiv@quotient+2,f
  7692  0FF5  1903               	skipnz
  7693  0FF6  0AA5               	incf	___aldiv@quotient+3,f
  7694  0FF7                     l1975:	
  7695  0FF7  0825               	movf	___aldiv@quotient+3,w
  7696  0FF8  00F3               	movwf	?___aldiv+3
  7697  0FF9  0824               	movf	___aldiv@quotient+2,w
  7698  0FFA  00F2               	movwf	?___aldiv+2
  7699  0FFB  0823               	movf	___aldiv@quotient+1,w
  7700  0FFC  00F1               	movwf	?___aldiv+1
  7701  0FFD  0822               	movf	___aldiv@quotient,w
  7702  0FFE  00F0               	movwf	?___aldiv
  7703  0FFF  0008               	return
  7704  1000                     __end_of___aldiv:	
  7705                           
  7706                           	psect	text4
  7707  0BB9                     __ptext4:	
  7708 ;; *************** function _ADCRead *****************
  7709 ;; Defined at:
  7710 ;;		line 19 in file "adc.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;  channel         1    wreg     enum E14259
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;  channel         1    3[COMMON] enum E14259
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  2    0[COMMON] int 
  7717 ;; Registers used:
  7718 ;;		wreg
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7724 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7728 ;;Total ram usage:        4 bytes
  7729 ;; Hardware stack levels used:    1
  7730 ;; This function calls:
  7731 ;;		Nothing
  7732 ;; This function is called by:
  7733 ;;		_readAnalog
  7734 ;;		_readButton
  7735 ;;		_main
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           
  7740                           ;psect for function _ADCRead
  7741  0BB9                     _ADCRead:	
  7742                           
  7743                           ;incstack = 0
  7744                           ; Regs used in _ADCRead: [wreg]
  7745                           ;ADCRead@channel stored from wreg
  7746  0BB9  00F3               	movwf	ADCRead@channel
  7747                           
  7748                           ;adc.c: 21: ADPCH = channel_VSS;
  7749  0BBA  303C               	movlw	60
  7750  0BBB  0021               	movlb	1	; select bank1
  7751  0BBC  009E               	movwf	30	;volatile
  7752                           
  7753                           ;adc.c: 23: ADCON0bits.ADON = 1;
  7754  0BBD  1793               	bsf	19,7	;volatile
  7755                           
  7756                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
  7757  0BBE  1313               	bcf	19,6	;volatile
  7758                           
  7759                           ;adc.c: 27: ADCON0bits.ADGO = 1;
  7760  0BBF  1413               	bsf	19,0	;volatile
  7761  0BC0                     l57:	
  7762                           ;adc.c: 30: {
  7763                           
  7764                           ;adc.c: 29: while(ADCON0bits.ADGO)
  7765                           
  7766  0BC0  1813               	btfsc	19,0	;volatile
  7767  0BC1  2BC0               	goto	l57
  7768                           
  7769                           ;adc.c: 31: }
  7770                           ;adc.c: 33: ADPCH = channel;
  7771  0BC2  0873               	movf	ADCRead@channel,w
  7772  0BC3  009E               	movwf	30	;volatile
  7773                           
  7774                           ;adc.c: 35: ADCON0bits.ADON = 1;
  7775  0BC4  1793               	bsf	19,7	;volatile
  7776                           
  7777                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
  7778  0BC5  1313               	bcf	19,6	;volatile
  7779                           
  7780                           ;adc.c: 39: ADCON0bits.ADGO = 1;
  7781  0BC6  1413               	bsf	19,0	;volatile
  7782  0BC7                     l60:	
  7783                           ;adc.c: 42: {
  7784                           
  7785                           ;adc.c: 41: while(ADCON0bits.ADGO)
  7786                           
  7787  0BC7  1813               	btfsc	19,0	;volatile
  7788  0BC8  2BC7               	goto	l60
  7789                           
  7790                           ;adc.c: 43: }
  7791                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
  7792  0BC9  080D               	movf	13,w	;volatile
  7793  0BCA  00F1               	movwf	?_ADCRead+1
  7794  0BCB  080C               	movf	12,w	;volatile
  7795  0BCC  00F0               	movwf	?_ADCRead
  7796  0BCD  0008               	return
  7797  0BCE                     __end_of_ADCRead:	
  7798                           
  7799                           	psect	text5
  7800  0D8C                     __ptext5:	
  7801 ;; *************** function _cc_cv_mode *****************
  7802 ;; Defined at:
  7803 ;;		line 87 in file "battery_charger.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;		None
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;		None
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		wreg, status,2, status,0
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7820 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;Total ram usage:        1 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; This function calls:
  7824 ;;		Nothing
  7825 ;; This function is called by:
  7826 ;;		_main
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           
  7831                           ;psect for function _cc_cv_mode
  7832  0D8C                     _cc_cv_mode:	
  7833                           
  7834                           ;battery_charger.c: 89: if(voltage[1] > Vref)
  7835                           
  7836                           ;incstack = 0
  7837                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
  7838  0D8C  0020               	movlb	0	; select bank0
  7839  0D8D  086C               	movf	_Vref+1,w
  7840  0D8E  3A80               	xorlw	128
  7841  0D8F  00F0               	movwf	??_cc_cv_mode
  7842  0D90  085A               	movf	_voltage+3,w
  7843  0D91  3A80               	xorlw	128
  7844  0D92  0270               	subwf	??_cc_cv_mode,w
  7845  0D93  1D03               	skipz
  7846  0D94  2D97               	goto	u2285
  7847  0D95  0859               	movf	_voltage+2,w
  7848  0D96  026B               	subwf	_Vref,w
  7849  0D97                     u2285:	
  7850  0D97  1803               	skipnc
  7851  0D98  2DA5               	goto	l2203
  7852                           
  7853                           ;battery_charger.c: 90: {
  7854                           ;battery_charger.c: 91: if(cc_cv)
  7855  0D99  0020               	movlb	0	; select bank0
  7856  0D9A  086A               	movf	_cc_cv,w
  7857  0D9B  1903               	btfsc	3,2
  7858  0D9C  2DA0               	goto	l2199
  7859                           
  7860                           ;battery_charger.c: 92: {
  7861                           ;battery_charger.c: 93: cc_cv-=1;
  7862  0D9D  3001               	movlw	1
  7863  0D9E  02EA               	subwf	_cc_cv,f
  7864                           
  7865                           ;battery_charger.c: 94: }
  7866  0D9F  0008               	return
  7867  0DA0                     l2199:	
  7868                           
  7869                           ;battery_charger.c: 95: else
  7870                           ;battery_charger.c: 96: {
  7871                           ;battery_charger.c: 97: if(Imode0)
  7872  0DA0  086E               	movf	_Imode0,w
  7873  0DA1  1903               	btfsc	3,2
  7874  0DA2  0008               	return
  7875                           
  7876                           ;battery_charger.c: 98: {
  7877                           ;battery_charger.c: 99: Imode0 = 0;
  7878  0DA3  01EE               	clrf	_Imode0
  7879                           
  7880                           ;battery_charger.c: 100: }
  7881                           ;battery_charger.c: 101: }
  7882                           ;battery_charger.c: 102: }
  7883  0DA4  0008               	return
  7884  0DA5                     l2203:	
  7885                           
  7886                           ;battery_charger.c: 103: else if(current[1] > Iref)
  7887  0DA5  0021               	movlb	1	; select bank1
  7888  0DA6  0860               	movf	(_Iref+1)^(0+128),w
  7889  0DA7  3A80               	xorlw	128
  7890  0DA8  00F0               	movwf	??_cc_cv_mode
  7891  0DA9  0853               	movf	((_current+1)^(0+128)+2),w
  7892  0DAA  3A80               	xorlw	128
  7893  0DAB  0270               	subwf	??_cc_cv_mode,w
  7894  0DAC  1D03               	skipz
  7895  0DAD  2DB0               	goto	u2315
  7896  0DAE  0852               	movf	(_current^(0+128)+2),w
  7897  0DAF  025F               	subwf	_Iref^(0+128),w
  7898  0DB0                     u2315:	
  7899  0DB0  1803               	skipnc
  7900  0DB1  0008               	return
  7901                           
  7902                           ;battery_charger.c: 104: {
  7903                           ;battery_charger.c: 105: if(!Imode0)
  7904  0DB2  0020               	movlb	0	; select bank0
  7905  0DB3  086E               	movf	_Imode0,w
  7906  0DB4  1D03               	btfss	3,2
  7907  0DB5  0008               	return
  7908                           
  7909                           ;battery_charger.c: 106: {
  7910                           ;battery_charger.c: 107: if(battery_state == FLOAT)
  7911  0DB6  3005               	movlw	5
  7912  0DB7  066D               	xorwf	_battery_state,w
  7913  0DB8  1D03               	btfss	3,2
  7914  0DB9  2DC7               	goto	l2211
  7915                           
  7916                           ;battery_charger.c: 108: {
  7917                           ;battery_charger.c: 109: battery_state=CHARGE;
  7918  0DBA  3004               	movlw	4
  7919  0DBB  00F0               	movwf	??_cc_cv_mode
  7920  0DBC  0870               	movf	??_cc_cv_mode,w
  7921  0DBD  00ED               	movwf	_battery_state
  7922                           
  7923                           ;battery_charger.c: 110: { Vref = 1400; };
  7924  0DBE  3078               	movlw	120
  7925  0DBF  00EB               	movwf	_Vref
  7926  0DC0  3005               	movlw	5
  7927  0DC1  00EC               	movwf	_Vref+1
  7928                           
  7929                           ;battery_charger.c: 111: { Iref = 35; };
  7930  0DC2  3023               	movlw	35
  7931  0DC3  0021               	movlb	1	; select bank1
  7932  0DC4  00DF               	movwf	_Iref^(0+128)
  7933  0DC5  3000               	movlw	0
  7934  0DC6  00E0               	movwf	(_Iref^(0+128)+1)
  7935  0DC7                     l2211:	
  7936                           
  7937                           ;battery_charger.c: 112: }
  7938                           ;battery_charger.c: 113: Imode0 = 1;
  7939  0DC7  0020               	movlb	0	; select bank0
  7940  0DC8  01EE               	clrf	_Imode0
  7941  0DC9  0AEE               	incf	_Imode0,f
  7942                           
  7943                           ;battery_charger.c: 114: cc_cv = 3;
  7944  0DCA  3003               	movlw	3
  7945  0DCB  00F0               	movwf	??_cc_cv_mode
  7946  0DCC  0870               	movf	??_cc_cv_mode,w
  7947  0DCD  00EA               	movwf	_cc_cv
  7948  0DCE  0008               	return
  7949  0DCF                     __end_of_cc_cv_mode:	
  7950                           
  7951                           	psect	text6
  7952  0E14                     __ptext6:	
  7953 ;; *************** function _calculateCurrent1 *****************
  7954 ;; Defined at:
  7955 ;;		line 271 in file "main.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;		None
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;		None
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  1    wreg      void 
  7962 ;; Registers used:
  7963 ;;		wreg, status,2, status,0, pclath, cstack
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7971 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7972 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7973 ;;Total ram usage:        3 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:    2
  7976 ;; This function calls:
  7977 ;;		___awtoft
  7978 ;;		___ftdiv
  7979 ;;		___fttol
  7980 ;; This function is called by:
  7981 ;;		_main
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           
  7986                           ;psect for function _calculateCurrent1
  7987  0E14                     _calculateCurrent1:	
  7988                           
  7989                           ;main.c: 273: if(analogs[5]-578<=0)
  7990                           
  7991                           ;incstack = 0
  7992                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
  7993  0E14  0021               	movlb	1	; select bank1
  7994  0E15  084A               	movf	(_analogs^(0+128)+10),w
  7995  0E16  3EBE               	addlw	190
  7996  0E17  0020               	movlb	0	; select bank0
  7997  0E18  00BE               	movwf	??_calculateCurrent1
  7998  0E19  30FD               	movlw	253
  7999  0E1A  0021               	movlb	1	; select bank1
  8000  0E1B  3D4B               	addwfc	((_analogs+1)^(0+128)+10),w
  8001  0E1C  0020               	movlb	0	; select bank0
  8002  0E1D  00BF               	movwf	??_calculateCurrent1+1
  8003  0E1E  083F               	movf	??_calculateCurrent1+1,w
  8004  0E1F  3A80               	xorlw	128
  8005  0E20  00C0               	movwf	??_calculateCurrent1+2
  8006  0E21  3080               	movlw	128
  8007  0E22  0240               	subwf	??_calculateCurrent1+2,w
  8008  0E23  1D03               	skipz
  8009  0E24  2E27               	goto	u2555
  8010  0E25  3001               	movlw	1
  8011  0E26  023E               	subwf	??_calculateCurrent1,w
  8012  0E27                     u2555:	
  8013  0E27  1803               	skipnc
  8014  0E28  2E2D               	goto	l2329
  8015                           
  8016                           ;main.c: 274: {
  8017                           ;main.c: 275: current[1]=0;
  8018  0E29  0021               	movlb	1	; select bank1
  8019  0E2A  01D2               	clrf	(_current^(0+128)+2)
  8020  0E2B  01D3               	clrf	((_current+1)^(0+128)+2)
  8021                           
  8022                           ;main.c: 276: }
  8023  0E2C  0008               	return
  8024  0E2D                     l2329:	
  8025                           
  8026                           ;main.c: 277: else
  8027                           ;main.c: 278: {
  8028                           ;main.c: 279: current[1]=(analogs[5]-578)/3.232;
  8029  0E2D  0021               	movlb	1	; select bank1
  8030  0E2E  084A               	movf	(_analogs^(0+128)+10),w
  8031  0E2F  3EBE               	addlw	190
  8032  0E30  00F8               	movwf	___awtoft@c
  8033  0E31  30FD               	movlw	253
  8034  0E32  3D4B               	addwfc	((_analogs+1)^(0+128)+10),w
  8035  0E33  00F9               	movwf	___awtoft@c+1
  8036  0E34  318C  2454  318E   	fcall	___awtoft
  8037  0E37  0878               	movf	?___awtoft,w
  8038  0E38  0020               	movlb	0	; select bank0
  8039  0E39  00A3               	movwf	___ftdiv@f1
  8040  0E3A  0879               	movf	?___awtoft+1,w
  8041  0E3B  00A4               	movwf	___ftdiv@f1+1
  8042  0E3C  087A               	movf	?___awtoft+2,w
  8043  0E3D  00A5               	movwf	___ftdiv@f1+2
  8044  0E3E  30D9               	movlw	217
  8045  0E3F  00A0               	movwf	___ftdiv@f2
  8046  0E40  304E               	movlw	78
  8047  0E41  00A1               	movwf	___ftdiv@f2+1
  8048  0E42  3040               	movlw	64
  8049  0E43  00A2               	movwf	___ftdiv@f2+2
  8050  0E44  3181  215E  318E   	fcall	___ftdiv
  8051  0E47  0020               	movlb	0	; select bank0
  8052  0E48  0820               	movf	?___ftdiv,w
  8053  0E49  00B0               	movwf	___fttol@f1
  8054  0E4A  0821               	movf	?___ftdiv+1,w
  8055  0E4B  00B1               	movwf	___fttol@f1+1
  8056  0E4C  0822               	movf	?___ftdiv+2,w
  8057  0E4D  00B2               	movwf	___fttol@f1+2
  8058  0E4E  3180  20D7         	fcall	___fttol
  8059  0E50  0020               	movlb	0	; select bank0
  8060  0E51  0831               	movf	?___fttol+1,w
  8061  0E52  0021               	movlb	1	; select bank1
  8062  0E53  00D3               	movwf	((_current+1)^(0+128)+2)
  8063  0E54  0020               	movlb	0	; select bank0
  8064  0E55  0830               	movf	?___fttol,w
  8065  0E56  0021               	movlb	1	; select bank1
  8066  0E57  00D2               	movwf	(_current^(0+128)+2)
  8067  0E58  0008               	return
  8068  0E59                     __end_of_calculateCurrent1:	
  8069                           
  8070                           	psect	text7
  8071  0DCF                     __ptext7:	
  8072 ;; *************** function _calculateCurrent0 *****************
  8073 ;; Defined at:
  8074 ;;		line 259 in file "main.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8091 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8092 ;;Total ram usage:        3 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    2
  8095 ;; This function calls:
  8096 ;;		___awtoft
  8097 ;;		___ftdiv
  8098 ;;		___fttol
  8099 ;; This function is called by:
  8100 ;;		_main
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           
  8105                           ;psect for function _calculateCurrent0
  8106  0DCF                     _calculateCurrent0:	
  8107                           
  8108                           ;main.c: 261: if(analogs[4]-589<=0)
  8109                           
  8110                           ;incstack = 0
  8111                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
  8112  0DCF  0021               	movlb	1	; select bank1
  8113  0DD0  0848               	movf	(_analogs^(0+128)+8),w
  8114  0DD1  3EB3               	addlw	179
  8115  0DD2  0020               	movlb	0	; select bank0
  8116  0DD3  00BE               	movwf	??_calculateCurrent0
  8117  0DD4  30FD               	movlw	253
  8118  0DD5  0021               	movlb	1	; select bank1
  8119  0DD6  3D49               	addwfc	((_analogs+1)^(0+128)+8),w
  8120  0DD7  0020               	movlb	0	; select bank0
  8121  0DD8  00BF               	movwf	??_calculateCurrent0+1
  8122  0DD9  083F               	movf	??_calculateCurrent0+1,w
  8123  0DDA  3A80               	xorlw	128
  8124  0DDB  00C0               	movwf	??_calculateCurrent0+2
  8125  0DDC  3080               	movlw	128
  8126  0DDD  0240               	subwf	??_calculateCurrent0+2,w
  8127  0DDE  1D03               	skipz
  8128  0DDF  2DE2               	goto	u2545
  8129  0DE0  3001               	movlw	1
  8130  0DE1  023E               	subwf	??_calculateCurrent0,w
  8131  0DE2                     u2545:	
  8132  0DE2  1803               	skipnc
  8133  0DE3  2DE8               	goto	l2323
  8134                           
  8135                           ;main.c: 262: {
  8136                           ;main.c: 263: current[0]=0;
  8137  0DE4  0021               	movlb	1	; select bank1
  8138  0DE5  01D0               	clrf	_current^(0+128)
  8139  0DE6  01D1               	clrf	(_current+1)^(0+128)
  8140                           
  8141                           ;main.c: 264: }
  8142  0DE7  0008               	return
  8143  0DE8                     l2323:	
  8144                           
  8145                           ;main.c: 265: else
  8146                           ;main.c: 266: {
  8147                           ;main.c: 267: current[0]=(analogs[4]-589)/1.3165;
  8148  0DE8  0021               	movlb	1	; select bank1
  8149  0DE9  0848               	movf	(_analogs^(0+128)+8),w
  8150  0DEA  3EB3               	addlw	179
  8151  0DEB  00F8               	movwf	___awtoft@c
  8152  0DEC  30FD               	movlw	253
  8153  0DED  3D49               	addwfc	((_analogs+1)^(0+128)+8),w
  8154  0DEE  00F9               	movwf	___awtoft@c+1
  8155  0DEF  318C  2454  318D   	fcall	___awtoft
  8156  0DF2  0878               	movf	?___awtoft,w
  8157  0DF3  0020               	movlb	0	; select bank0
  8158  0DF4  00A3               	movwf	___ftdiv@f1
  8159  0DF5  0879               	movf	?___awtoft+1,w
  8160  0DF6  00A4               	movwf	___ftdiv@f1+1
  8161  0DF7  087A               	movf	?___awtoft+2,w
  8162  0DF8  00A5               	movwf	___ftdiv@f1+2
  8163  0DF9  3083               	movlw	131
  8164  0DFA  00A0               	movwf	___ftdiv@f2
  8165  0DFB  30A8               	movlw	168
  8166  0DFC  00A1               	movwf	___ftdiv@f2+1
  8167  0DFD  303F               	movlw	63
  8168  0DFE  00A2               	movwf	___ftdiv@f2+2
  8169  0DFF  3181  215E  318D   	fcall	___ftdiv
  8170  0E02  0020               	movlb	0	; select bank0
  8171  0E03  0820               	movf	?___ftdiv,w
  8172  0E04  00B0               	movwf	___fttol@f1
  8173  0E05  0821               	movf	?___ftdiv+1,w
  8174  0E06  00B1               	movwf	___fttol@f1+1
  8175  0E07  0822               	movf	?___ftdiv+2,w
  8176  0E08  00B2               	movwf	___fttol@f1+2
  8177  0E09  3180  20D7         	fcall	___fttol
  8178  0E0B  0020               	movlb	0	; select bank0
  8179  0E0C  0831               	movf	?___fttol+1,w
  8180  0E0D  0021               	movlb	1	; select bank1
  8181  0E0E  00D1               	movwf	(_current+1)^(0+128)
  8182  0E0F  0020               	movlb	0	; select bank0
  8183  0E10  0830               	movf	?___fttol,w
  8184  0E11  0021               	movlb	1	; select bank1
  8185  0E12  00D0               	movwf	_current^(0+128)
  8186  0E13  0008               	return
  8187  0E14                     __end_of_calculateCurrent0:	
  8188                           
  8189                           	psect	text8
  8190  00D7                     __ptext8:	
  8191 ;; *************** function ___fttol *****************
  8192 ;; Defined at:
  8193 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;  f1              3   16[BANK0 ] float 
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;  lval            4   25[BANK0 ] unsigned long 
  8198 ;;  exp1            1   29[BANK0 ] unsigned char 
  8199 ;;  sign1           1   24[BANK0 ] unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  4   16[BANK0 ] long 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8209 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;Total ram usage:       14 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_main
  8219 ;;		_calculateCurrent0
  8220 ;;		_calculateCurrent1
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           
  8225                           ;psect for function ___fttol
  8226  00D7                     ___fttol:	
  8227                           
  8228                           ;incstack = 0
  8229                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8230  00D7  0020               	movlb	0	; select bank0
  8231  00D8  0830               	movf	___fttol@f1,w
  8232  00D9  00B4               	movwf	??___fttol
  8233  00DA  0831               	movf	___fttol@f1+1,w
  8234  00DB  00B5               	movwf	??___fttol+1
  8235  00DC  0832               	movf	___fttol@f1+2,w
  8236  00DD  00B6               	movwf	??___fttol+2
  8237  00DE  1003               	clrc
  8238  00DF  0D35               	rlf	??___fttol+1,w
  8239  00E0  0D36               	rlf	??___fttol+2,w
  8240  00E1  00B7               	movwf	??___fttol+3
  8241  00E2  0837               	movf	??___fttol+3,w
  8242  00E3  00BD               	movwf	___fttol@exp1
  8243  00E4  083D               	movf	___fttol@exp1,w
  8244  00E5  1D03               	btfss	3,2
  8245  00E6  28F0               	goto	l2083
  8246  00E7  3000               	movlw	0
  8247  00E8  00B3               	movwf	?___fttol+3
  8248  00E9  3000               	movlw	0
  8249  00EA  00B2               	movwf	?___fttol+2
  8250  00EB  3000               	movlw	0
  8251  00EC  00B1               	movwf	?___fttol+1
  8252  00ED  3000               	movlw	0
  8253  00EE  00B0               	movwf	?___fttol
  8254  00EF  0008               	return
  8255  00F0                     l2083:	
  8256  00F0  0830               	movf	___fttol@f1,w
  8257  00F1  00B4               	movwf	??___fttol
  8258  00F2  0831               	movf	___fttol@f1+1,w
  8259  00F3  00B5               	movwf	??___fttol+1
  8260  00F4  0832               	movf	___fttol@f1+2,w
  8261  00F5  00B6               	movwf	??___fttol+2
  8262  00F6  3017               	movlw	23
  8263  00F7                     u1975:	
  8264  00F7  36B6               	lsrf	??___fttol+2,f
  8265  00F8  0CB5               	rrf	??___fttol+1,f
  8266  00F9  0CB4               	rrf	??___fttol,f
  8267  00FA  0B89               	decfsz	9,f
  8268  00FB  28F7               	goto	u1975
  8269  00FC  0834               	movf	??___fttol,w
  8270  00FD  00B7               	movwf	??___fttol+3
  8271  00FE  0837               	movf	??___fttol+3,w
  8272  00FF  00B8               	movwf	___fttol@sign1
  8273  0100  17B1               	bsf	___fttol@f1+1,7
  8274  0101  30FF               	movlw	255
  8275  0102  05B0               	andwf	___fttol@f1,f
  8276  0103  30FF               	movlw	255
  8277  0104  05B1               	andwf	___fttol@f1+1,f
  8278  0105  3000               	movlw	0
  8279  0106  05B2               	andwf	___fttol@f1+2,f
  8280  0107  0830               	movf	___fttol@f1,w
  8281  0108  00B9               	movwf	___fttol@lval
  8282  0109  0831               	movf	___fttol@f1+1,w
  8283  010A  00BA               	movwf	___fttol@lval+1
  8284  010B  0832               	movf	___fttol@f1+2,w
  8285  010C  00BB               	movwf	___fttol@lval+2
  8286  010D  01BC               	clrf	___fttol@lval+3
  8287  010E  308E               	movlw	142
  8288  010F  02BD               	subwf	___fttol@exp1,f
  8289  0110  1FBD               	btfss	___fttol@exp1,7
  8290  0111  292E               	goto	l2103
  8291  0112  083D               	movf	___fttol@exp1,w
  8292  0113  3A80               	xorlw	128
  8293  0114  3E8F               	addlw	143
  8294  0115  1803               	skipnc
  8295  0116  2920               	goto	l2101
  8296  0117  3000               	movlw	0
  8297  0118  00B3               	movwf	?___fttol+3
  8298  0119  3000               	movlw	0
  8299  011A  00B2               	movwf	?___fttol+2
  8300  011B  3000               	movlw	0
  8301  011C  00B1               	movwf	?___fttol+1
  8302  011D  3000               	movlw	0
  8303  011E  00B0               	movwf	?___fttol
  8304  011F  0008               	return
  8305  0120                     l2101:	
  8306  0120  3001               	movlw	1
  8307  0121                     u2005:	
  8308  0121  36BC               	lsrf	___fttol@lval+3,f
  8309  0122  0CBB               	rrf	___fttol@lval+2,f
  8310  0123  0CBA               	rrf	___fttol@lval+1,f
  8311  0124  0CB9               	rrf	___fttol@lval,f
  8312  0125  0B89               	decfsz	9,f
  8313  0126  2921               	goto	u2005
  8314  0127  3001               	movlw	1
  8315  0128  00B4               	movwf	??___fttol
  8316  0129  0834               	movf	??___fttol,w
  8317  012A  07BD               	addwf	___fttol@exp1,f
  8318  012B  1903               	btfsc	3,2
  8319  012C  2947               	goto	l2111
  8320  012D  2920               	goto	l2101
  8321  012E                     l2103:	
  8322  012E  3018               	movlw	24
  8323  012F  023D               	subwf	___fttol@exp1,w
  8324  0130  1C03               	skipc
  8325  0131  2944               	goto	l767
  8326  0132  3000               	movlw	0
  8327  0133  00B3               	movwf	?___fttol+3
  8328  0134  3000               	movlw	0
  8329  0135  00B2               	movwf	?___fttol+2
  8330  0136  3000               	movlw	0
  8331  0137  00B1               	movwf	?___fttol+1
  8332  0138  3000               	movlw	0
  8333  0139  00B0               	movwf	?___fttol
  8334  013A  0008               	return
  8335  013B                     l2109:	
  8336  013B  3001               	movlw	1
  8337  013C                     u2035:	
  8338  013C  35B9               	lslf	___fttol@lval,f
  8339  013D  0DBA               	rlf	___fttol@lval+1,f
  8340  013E  0DBB               	rlf	___fttol@lval+2,f
  8341  013F  0DBC               	rlf	___fttol@lval+3,f
  8342  0140  0B89               	decfsz	9,f
  8343  0141  293C               	goto	u2035
  8344  0142  3001               	movlw	1
  8345  0143  02BD               	subwf	___fttol@exp1,f
  8346  0144                     l767:	
  8347  0144  083D               	movf	___fttol@exp1,w
  8348  0145  1D03               	btfss	3,2
  8349  0146  293B               	goto	l2109
  8350  0147                     l2111:	
  8351  0147  0838               	movf	___fttol@sign1,w
  8352  0148  1903               	btfsc	3,2
  8353  0149  2955               	goto	l2115
  8354  014A  09B9               	comf	___fttol@lval,f
  8355  014B  09BA               	comf	___fttol@lval+1,f
  8356  014C  09BB               	comf	___fttol@lval+2,f
  8357  014D  09BC               	comf	___fttol@lval+3,f
  8358  014E  0AB9               	incf	___fttol@lval,f
  8359  014F  1903               	skipnz
  8360  0150  0ABA               	incf	___fttol@lval+1,f
  8361  0151  1903               	skipnz
  8362  0152  0ABB               	incf	___fttol@lval+2,f
  8363  0153  1903               	skipnz
  8364  0154  0ABC               	incf	___fttol@lval+3,f
  8365  0155                     l2115:	
  8366  0155  083C               	movf	___fttol@lval+3,w
  8367  0156  00B3               	movwf	?___fttol+3
  8368  0157  083B               	movf	___fttol@lval+2,w
  8369  0158  00B2               	movwf	?___fttol+2
  8370  0159  083A               	movf	___fttol@lval+1,w
  8371  015A  00B1               	movwf	?___fttol+1
  8372  015B  0839               	movf	___fttol@lval,w
  8373  015C  00B0               	movwf	?___fttol
  8374  015D  0008               	return
  8375  015E                     __end_of___fttol:	
  8376                           
  8377                           	psect	text9
  8378  015E                     __ptext9:	
  8379 ;; *************** function ___ftdiv *****************
  8380 ;; Defined at:
  8381 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  f2              3    0[BANK0 ] float 
  8384 ;;  f1              3    3[BANK0 ] float 
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  f3              3   11[BANK0 ] float 
  8387 ;;  sign            1   15[BANK0 ] unsigned char 
  8388 ;;  exp             1   14[BANK0 ] unsigned char 
  8389 ;;  cntr            1   10[BANK0 ] unsigned char 
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  3    0[BANK0 ] float 
  8392 ;; Registers used:
  8393 ;;		wreg, status,2, status,0, pclath, cstack
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8399 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8402 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8403 ;;Total ram usage:       16 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; Hardware stack levels required when called:    1
  8406 ;; This function calls:
  8407 ;;		___ftpack
  8408 ;; This function is called by:
  8409 ;;		_main
  8410 ;;		_calculateCurrent0
  8411 ;;		_calculateCurrent1
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           
  8416                           ;psect for function ___ftdiv
  8417  015E                     ___ftdiv:	
  8418                           
  8419                           ;incstack = 0
  8420                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8421  015E  0020               	movlb	0	; select bank0
  8422  015F  0823               	movf	___ftdiv@f1,w
  8423  0160  00A6               	movwf	??___ftdiv
  8424  0161  0824               	movf	___ftdiv@f1+1,w
  8425  0162  00A7               	movwf	??___ftdiv+1
  8426  0163  0825               	movf	___ftdiv@f1+2,w
  8427  0164  00A8               	movwf	??___ftdiv+2
  8428  0165  1003               	clrc
  8429  0166  0D27               	rlf	??___ftdiv+1,w
  8430  0167  0D28               	rlf	??___ftdiv+2,w
  8431  0168  00A9               	movwf	??___ftdiv+3
  8432  0169  0829               	movf	??___ftdiv+3,w
  8433  016A  00AE               	movwf	___ftdiv@exp
  8434  016B  082E               	movf	___ftdiv@exp,w
  8435  016C  1D03               	btfss	3,2
  8436  016D  2975               	goto	l2041
  8437  016E  3000               	movlw	0
  8438  016F  00A0               	movwf	?___ftdiv
  8439  0170  3000               	movlw	0
  8440  0171  00A1               	movwf	?___ftdiv+1
  8441  0172  3000               	movlw	0
  8442  0173  00A2               	movwf	?___ftdiv+2
  8443  0174  0008               	return
  8444  0175                     l2041:	
  8445  0175  0820               	movf	___ftdiv@f2,w
  8446  0176  00A6               	movwf	??___ftdiv
  8447  0177  0821               	movf	___ftdiv@f2+1,w
  8448  0178  00A7               	movwf	??___ftdiv+1
  8449  0179  0822               	movf	___ftdiv@f2+2,w
  8450  017A  00A8               	movwf	??___ftdiv+2
  8451  017B  1003               	clrc
  8452  017C  0D27               	rlf	??___ftdiv+1,w
  8453  017D  0D28               	rlf	??___ftdiv+2,w
  8454  017E  00A9               	movwf	??___ftdiv+3
  8455  017F  0829               	movf	??___ftdiv+3,w
  8456  0180  00AF               	movwf	___ftdiv@sign
  8457  0181  082F               	movf	___ftdiv@sign,w
  8458  0182  1D03               	btfss	3,2
  8459  0183  298B               	goto	l2047
  8460  0184  3000               	movlw	0
  8461  0185  00A0               	movwf	?___ftdiv
  8462  0186  3000               	movlw	0
  8463  0187  00A1               	movwf	?___ftdiv+1
  8464  0188  3000               	movlw	0
  8465  0189  00A2               	movwf	?___ftdiv+2
  8466  018A  0008               	return
  8467  018B                     l2047:	
  8468  018B  3000               	movlw	0
  8469  018C  00AB               	movwf	___ftdiv@f3
  8470  018D  3000               	movlw	0
  8471  018E  00AC               	movwf	___ftdiv@f3+1
  8472  018F  3000               	movlw	0
  8473  0190  00AD               	movwf	___ftdiv@f3+2
  8474  0191  3089               	movlw	137
  8475  0192  072F               	addwf	___ftdiv@sign,w
  8476  0193  00A6               	movwf	??___ftdiv
  8477  0194  0826               	movf	??___ftdiv,w
  8478  0195  02AE               	subwf	___ftdiv@exp,f
  8479  0196  0823               	movf	___ftdiv@f1,w
  8480  0197  00A6               	movwf	??___ftdiv
  8481  0198  0824               	movf	___ftdiv@f1+1,w
  8482  0199  00A7               	movwf	??___ftdiv+1
  8483  019A  0825               	movf	___ftdiv@f1+2,w
  8484  019B  00A8               	movwf	??___ftdiv+2
  8485  019C  3010               	movlw	16
  8486  019D                     u1905:	
  8487  019D  36A8               	lsrf	??___ftdiv+2,f
  8488  019E  0CA7               	rrf	??___ftdiv+1,f
  8489  019F  0CA6               	rrf	??___ftdiv,f
  8490  01A0  0B89               	decfsz	9,f
  8491  01A1  299D               	goto	u1905
  8492  01A2  0826               	movf	??___ftdiv,w
  8493  01A3  00A9               	movwf	??___ftdiv+3
  8494  01A4  0829               	movf	??___ftdiv+3,w
  8495  01A5  00AF               	movwf	___ftdiv@sign
  8496  01A6  0820               	movf	___ftdiv@f2,w
  8497  01A7  00A6               	movwf	??___ftdiv
  8498  01A8  0821               	movf	___ftdiv@f2+1,w
  8499  01A9  00A7               	movwf	??___ftdiv+1
  8500  01AA  0822               	movf	___ftdiv@f2+2,w
  8501  01AB  00A8               	movwf	??___ftdiv+2
  8502  01AC  3010               	movlw	16
  8503  01AD                     u1915:	
  8504  01AD  36A8               	lsrf	??___ftdiv+2,f
  8505  01AE  0CA7               	rrf	??___ftdiv+1,f
  8506  01AF  0CA6               	rrf	??___ftdiv,f
  8507  01B0  0B89               	decfsz	9,f
  8508  01B1  29AD               	goto	u1915
  8509  01B2  0826               	movf	??___ftdiv,w
  8510  01B3  00A9               	movwf	??___ftdiv+3
  8511  01B4  0829               	movf	??___ftdiv+3,w
  8512  01B5  06AF               	xorwf	___ftdiv@sign,f
  8513  01B6  3080               	movlw	128
  8514  01B7  00A6               	movwf	??___ftdiv
  8515  01B8  0826               	movf	??___ftdiv,w
  8516  01B9  05AF               	andwf	___ftdiv@sign,f
  8517  01BA  17A4               	bsf	___ftdiv@f1+1,7
  8518  01BB  30FF               	movlw	255
  8519  01BC  05A3               	andwf	___ftdiv@f1,f
  8520  01BD  30FF               	movlw	255
  8521  01BE  05A4               	andwf	___ftdiv@f1+1,f
  8522  01BF  3000               	movlw	0
  8523  01C0  05A5               	andwf	___ftdiv@f1+2,f
  8524  01C1  17A1               	bsf	___ftdiv@f2+1,7
  8525  01C2  30FF               	movlw	255
  8526  01C3  05A0               	andwf	___ftdiv@f2,f
  8527  01C4  30FF               	movlw	255
  8528  01C5  05A1               	andwf	___ftdiv@f2+1,f
  8529  01C6  3000               	movlw	0
  8530  01C7  05A2               	andwf	___ftdiv@f2+2,f
  8531  01C8  3018               	movlw	24
  8532  01C9  00A6               	movwf	??___ftdiv
  8533  01CA  0826               	movf	??___ftdiv,w
  8534  01CB  00AA               	movwf	___ftdiv@cntr
  8535  01CC                     l2061:	
  8536  01CC  3001               	movlw	1
  8537  01CD                     u1925:	
  8538  01CD  35AB               	lslf	___ftdiv@f3,f
  8539  01CE  0DAC               	rlf	___ftdiv@f3+1,f
  8540  01CF  0DAD               	rlf	___ftdiv@f3+2,f
  8541  01D0  0B89               	decfsz	9,f
  8542  01D1  29CD               	goto	u1925
  8543  01D2  0822               	movf	___ftdiv@f2+2,w
  8544  01D3  0225               	subwf	___ftdiv@f1+2,w
  8545  01D4  1D03               	skipz
  8546  01D5  29DC               	goto	u1935
  8547  01D6  0821               	movf	___ftdiv@f2+1,w
  8548  01D7  0224               	subwf	___ftdiv@f1+1,w
  8549  01D8  1D03               	skipz
  8550  01D9  29DC               	goto	u1935
  8551  01DA  0820               	movf	___ftdiv@f2,w
  8552  01DB  0223               	subwf	___ftdiv@f1,w
  8553  01DC                     u1935:	
  8554  01DC  1C03               	skipc
  8555  01DD  29E5               	goto	l2069
  8556  01DE  0820               	movf	___ftdiv@f2,w
  8557  01DF  02A3               	subwf	___ftdiv@f1,f
  8558  01E0  0821               	movf	___ftdiv@f2+1,w
  8559  01E1  3BA4               	subwfb	___ftdiv@f1+1,f
  8560  01E2  0822               	movf	___ftdiv@f2+2,w
  8561  01E3  3BA5               	subwfb	___ftdiv@f1+2,f
  8562  01E4  142B               	bsf	___ftdiv@f3,0
  8563  01E5                     l2069:	
  8564  01E5  3001               	movlw	1
  8565  01E6                     u1945:	
  8566  01E6  35A3               	lslf	___ftdiv@f1,f
  8567  01E7  0DA4               	rlf	___ftdiv@f1+1,f
  8568  01E8  0DA5               	rlf	___ftdiv@f1+2,f
  8569  01E9  0B89               	decfsz	9,f
  8570  01EA  29E6               	goto	u1945
  8571  01EB  3001               	movlw	1
  8572  01EC  02AA               	subwf	___ftdiv@cntr,f
  8573  01ED  1D03               	btfss	3,2
  8574  01EE  29CC               	goto	l2061
  8575  01EF  082B               	movf	___ftdiv@f3,w
  8576  01F0  00F0               	movwf	___ftpack@arg
  8577  01F1  082C               	movf	___ftdiv@f3+1,w
  8578  01F2  00F1               	movwf	___ftpack@arg+1
  8579  01F3  082D               	movf	___ftdiv@f3+2,w
  8580  01F4  00F2               	movwf	___ftpack@arg+2
  8581  01F5  082E               	movf	___ftdiv@exp,w
  8582  01F6  00A6               	movwf	??___ftdiv
  8583  01F7  0826               	movf	??___ftdiv,w
  8584  01F8  00F3               	movwf	___ftpack@exp
  8585  01F9  082F               	movf	___ftdiv@sign,w
  8586  01FA  00A7               	movwf	??___ftdiv+1
  8587  01FB  0827               	movf	??___ftdiv+1,w
  8588  01FC  00F4               	movwf	___ftpack@sign
  8589  01FD  318E  26B1         	fcall	___ftpack
  8590  01FF  0870               	movf	?___ftpack,w
  8591  0200  0020               	movlb	0	; select bank0
  8592  0201  00A0               	movwf	?___ftdiv
  8593  0202  0871               	movf	?___ftpack+1,w
  8594  0203  00A1               	movwf	?___ftdiv+1
  8595  0204  0872               	movf	?___ftpack+2,w
  8596  0205  00A2               	movwf	?___ftdiv+2
  8597  0206  0008               	return
  8598  0207                     __end_of___ftdiv:	
  8599                           
  8600                           	psect	text10
  8601  0C54                     __ptext10:	
  8602 ;; *************** function ___awtoft *****************
  8603 ;; Defined at:
  8604 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  c               2    8[COMMON] int 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;  sign            1   13[COMMON] unsigned char 
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  3    8[COMMON] float 
  8611 ;; Registers used:
  8612 ;;		wreg, status,2, status,0, pclath, cstack
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8618 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8621 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8622 ;;Total ram usage:        6 bytes
  8623 ;; Hardware stack levels used:    1
  8624 ;; Hardware stack levels required when called:    1
  8625 ;; This function calls:
  8626 ;;		___ftpack
  8627 ;; This function is called by:
  8628 ;;		_main
  8629 ;;		_calculateCurrent0
  8630 ;;		_calculateCurrent1
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           
  8635                           ;psect for function ___awtoft
  8636  0C54                     ___awtoft:	
  8637                           
  8638                           ;incstack = 0
  8639                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8640  0C54  01FD               	clrf	___awtoft@sign
  8641  0C55  1FF9               	btfss	___awtoft@c+1,7
  8642  0C56  2C5E               	goto	l2031
  8643  0C57  09F8               	comf	___awtoft@c,f
  8644  0C58  09F9               	comf	___awtoft@c+1,f
  8645  0C59  0AF8               	incf	___awtoft@c,f
  8646  0C5A  1903               	skipnz
  8647  0C5B  0AF9               	incf	___awtoft@c+1,f
  8648  0C5C  01FD               	clrf	___awtoft@sign
  8649  0C5D  0AFD               	incf	___awtoft@sign,f
  8650  0C5E                     l2031:	
  8651  0C5E  0878               	movf	___awtoft@c,w
  8652  0C5F  00F0               	movwf	___ftpack@arg
  8653  0C60  0879               	movf	___awtoft@c+1,w
  8654  0C61  00F1               	movwf	___ftpack@arg+1
  8655  0C62  01F2               	clrf	___ftpack@arg+2
  8656  0C63  308E               	movlw	142
  8657  0C64  00FB               	movwf	??___awtoft
  8658  0C65  087B               	movf	??___awtoft,w
  8659  0C66  00F3               	movwf	___ftpack@exp
  8660  0C67  087D               	movf	___awtoft@sign,w
  8661  0C68  00FC               	movwf	??___awtoft+1
  8662  0C69  087C               	movf	??___awtoft+1,w
  8663  0C6A  00F4               	movwf	___ftpack@sign
  8664  0C6B  318E  26B1         	fcall	___ftpack
  8665  0C6D  0870               	movf	?___ftpack,w
  8666  0C6E  00F8               	movwf	?___awtoft
  8667  0C6F  0871               	movf	?___ftpack+1,w
  8668  0C70  00F9               	movwf	?___awtoft+1
  8669  0C71  0872               	movf	?___ftpack+2,w
  8670  0C72  00FA               	movwf	?___awtoft+2
  8671  0C73  0008               	return
  8672  0C74                     __end_of___awtoft:	
  8673                           
  8674                           	psect	text11
  8675  0EB1                     __ptext11:	
  8676 ;; *************** function ___ftpack *****************
  8677 ;; Defined at:
  8678 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  8679 ;; Parameters:    Size  Location     Type
  8680 ;;  arg             3    0[COMMON] unsigned um
  8681 ;;  exp             1    3[COMMON] unsigned char 
  8682 ;;  sign            1    4[COMMON] unsigned char 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;		None
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  3    0[COMMON] float 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2, status,0
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8694 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8696 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8697 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8698 ;;Total ram usage:        8 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		___awtoft
  8704 ;;		___ftdiv
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           
  8709                           ;psect for function ___ftpack
  8710  0EB1                     ___ftpack:	
  8711                           
  8712                           ;incstack = 0
  8713                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8714  0EB1  0873               	movf	___ftpack@exp,w
  8715  0EB2  1903               	btfsc	3,2
  8716  0EB3  2EB9               	goto	l1759
  8717  0EB4  0872               	movf	___ftpack@arg+2,w
  8718  0EB5  0471               	iorwf	___ftpack@arg+1,w
  8719  0EB6  0470               	iorwf	___ftpack@arg,w
  8720  0EB7  1D03               	skipz
  8721  0EB8  2ECA               	goto	l1765
  8722  0EB9                     l1759:	
  8723  0EB9  3000               	movlw	0
  8724  0EBA  00F0               	movwf	?___ftpack
  8725  0EBB  3000               	movlw	0
  8726  0EBC  00F1               	movwf	?___ftpack+1
  8727  0EBD  3000               	movlw	0
  8728  0EBE  00F2               	movwf	?___ftpack+2
  8729  0EBF  0008               	return
  8730  0EC0                     l1763:	
  8731  0EC0  3001               	movlw	1
  8732  0EC1  00F5               	movwf	??___ftpack
  8733  0EC2  0875               	movf	??___ftpack,w
  8734  0EC3  07F3               	addwf	___ftpack@exp,f
  8735  0EC4  3001               	movlw	1
  8736  0EC5                     u1515:	
  8737  0EC5  36F2               	lsrf	___ftpack@arg+2,f
  8738  0EC6  0CF1               	rrf	___ftpack@arg+1,f
  8739  0EC7  0CF0               	rrf	___ftpack@arg,f
  8740  0EC8  0B89               	decfsz	9,f
  8741  0EC9  2EC5               	goto	u1515
  8742  0ECA                     l1765:	
  8743  0ECA  30FE               	movlw	254
  8744  0ECB  0572               	andwf	___ftpack@arg+2,w
  8745  0ECC  1903               	btfsc	3,2
  8746  0ECD  2EE3               	goto	l676
  8747  0ECE  2EC0               	goto	l1763
  8748  0ECF                     l1767:	
  8749  0ECF  3001               	movlw	1
  8750  0ED0  00F5               	movwf	??___ftpack
  8751  0ED1  0875               	movf	??___ftpack,w
  8752  0ED2  07F3               	addwf	___ftpack@exp,f
  8753  0ED3  3001               	movlw	1
  8754  0ED4  07F0               	addwf	___ftpack@arg,f
  8755  0ED5  3000               	movlw	0
  8756  0ED6  1803               	skipnc
  8757  0ED7  3001               	movlw	1
  8758  0ED8  07F1               	addwf	___ftpack@arg+1,f
  8759  0ED9  3000               	movlw	0
  8760  0EDA  1803               	skipnc
  8761  0EDB  3001               	movlw	1
  8762  0EDC  07F2               	addwf	___ftpack@arg+2,f
  8763  0EDD  3001               	movlw	1
  8764  0EDE                     u1535:	
  8765  0EDE  36F2               	lsrf	___ftpack@arg+2,f
  8766  0EDF  0CF1               	rrf	___ftpack@arg+1,f
  8767  0EE0  0CF0               	rrf	___ftpack@arg,f
  8768  0EE1  0B89               	decfsz	9,f
  8769  0EE2  2EDE               	goto	u1535
  8770  0EE3                     l676:	
  8771  0EE3  30FF               	movlw	255
  8772  0EE4  0572               	andwf	___ftpack@arg+2,w
  8773  0EE5  1903               	btfsc	3,2
  8774  0EE6  2EF0               	goto	l1775
  8775  0EE7  2ECF               	goto	l1767
  8776  0EE8                     l1773:	
  8777  0EE8  3001               	movlw	1
  8778  0EE9  02F3               	subwf	___ftpack@exp,f
  8779  0EEA  3001               	movlw	1
  8780  0EEB                     u1555:	
  8781  0EEB  35F0               	lslf	___ftpack@arg,f
  8782  0EEC  0DF1               	rlf	___ftpack@arg+1,f
  8783  0EED  0DF2               	rlf	___ftpack@arg+2,f
  8784  0EEE  0B89               	decfsz	9,f
  8785  0EEF  2EEB               	goto	u1555
  8786  0EF0                     l1775:	
  8787  0EF0  1BF1               	btfsc	___ftpack@arg+1,7
  8788  0EF1  2EF6               	goto	l683
  8789  0EF2  3002               	movlw	2
  8790  0EF3  0273               	subwf	___ftpack@exp,w
  8791  0EF4  1803               	skipnc
  8792  0EF5  2EE8               	goto	l1773
  8793  0EF6                     l683:	
  8794  0EF6  1873               	btfsc	___ftpack@exp,0
  8795  0EF7  2EFE               	goto	l684
  8796  0EF8  30FF               	movlw	255
  8797  0EF9  05F0               	andwf	___ftpack@arg,f
  8798  0EFA  307F               	movlw	127
  8799  0EFB  05F1               	andwf	___ftpack@arg+1,f
  8800  0EFC  30FF               	movlw	255
  8801  0EFD  05F2               	andwf	___ftpack@arg+2,f
  8802  0EFE                     l684:	
  8803  0EFE  1003               	clrc
  8804  0EFF  0CF3               	rrf	___ftpack@exp,f
  8805  0F00  0873               	movf	___ftpack@exp,w
  8806  0F01  00F5               	movwf	??___ftpack
  8807  0F02  01F6               	clrf	??___ftpack+1
  8808  0F03  01F7               	clrf	??___ftpack+2
  8809  0F04  3010               	movlw	16
  8810  0F05                     u1595:	
  8811  0F05  35F5               	lslf	??___ftpack,f
  8812  0F06  0DF6               	rlf	??___ftpack+1,f
  8813  0F07  0DF7               	rlf	??___ftpack+2,f
  8814  0F08  0B89               	decfsz	9,f
  8815  0F09  2F05               	goto	u1595
  8816  0F0A  0875               	movf	??___ftpack,w
  8817  0F0B  04F0               	iorwf	___ftpack@arg,f
  8818  0F0C  0876               	movf	??___ftpack+1,w
  8819  0F0D  04F1               	iorwf	___ftpack@arg+1,f
  8820  0F0E  0877               	movf	??___ftpack+2,w
  8821  0F0F  04F2               	iorwf	___ftpack@arg+2,f
  8822  0F10  0874               	movf	___ftpack@sign,w
  8823  0F11  1903               	btfsc	3,2
  8824  0F12  0008               	return
  8825  0F13  17F2               	bsf	___ftpack@arg+2,7
  8826  0F14  0008               	return
  8827  0F15                     __end_of___ftpack:	
  8828                           
  8829                           	psect	text12
  8830  0CEB                     __ptext12:	
  8831 ;; *************** function _SYSTEM_Initialize *****************
  8832 ;; Defined at:
  8833 ;;		line 71 in file "system.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;		None
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;		None
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  1    wreg      void 
  8840 ;; Registers used:
  8841 ;;		wreg, status,2, status,0, pclath, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;Total ram usage:        2 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:    3
  8854 ;; This function calls:
  8855 ;;		_ADC_Initialize
  8856 ;;		_Init_Battery_State_Machine
  8857 ;;		_LCDClear
  8858 ;;		_LCDInit
  8859 ;;		_OSCILLATOR_Initialize
  8860 ;;		_PIN_MANAGER_Initialize
  8861 ;;		_PWM_Initialize
  8862 ;;		_TMR2_Initialize
  8863 ;; This function is called by:
  8864 ;;		_main
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           
  8869                           ;psect for function _SYSTEM_Initialize
  8870  0CEB                     _SYSTEM_Initialize:	
  8871                           
  8872                           ;system.c: 73: PIN_MANAGER_Initialize();
  8873                           
  8874                           ;incstack = 0
  8875                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8876  0CEB  318D  251C  318C   	fcall	_PIN_MANAGER_Initialize
  8877                           
  8878                           ;system.c: 74: OSCILLATOR_Initialize();
  8879  0CEE  318B  2352  318C   	fcall	_OSCILLATOR_Initialize
  8880                           
  8881                           ;system.c: 76: ADC_Initialize();
  8882  0CF1  318C  2435  318C   	fcall	_ADC_Initialize
  8883                           
  8884                           ;system.c: 77: PWM_Initialize();
  8885  0CF4  318B  23A4  318C   	fcall	_PWM_Initialize
  8886                           
  8887                           ;system.c: 79: TMR2_Initialize();
  8888  0CF7  318B  2373  318C   	fcall	_TMR2_Initialize
  8889                           
  8890                           ;system.c: 80: Init_Battery_State_Machine();
  8891  0CFA  318B  23FA  318C   	fcall	_Init_Battery_State_Machine
  8892                           
  8893                           ;system.c: 81: LCDInit();
  8894  0CFD  318D  2551  318C   	fcall	_LCDInit
  8895                           
  8896                           ;system.c: 82: _delay((unsigned long)((200)*(32000000/4000.0)));
  8897  0D00  3009               	movlw	9
  8898  0D01  00FC               	movwf	??_SYSTEM_Initialize+1
  8899  0D02  301E               	movlw	30
  8900  0D03  00FB               	movwf	??_SYSTEM_Initialize
  8901  0D04  30E4               	movlw	228
  8902  0D05                     u2827:	
  8903  0D05  0B89               	decfsz	9,f
  8904  0D06  2D05               	goto	u2827
  8905  0D07  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8906  0D08  2D05               	goto	u2827
  8907  0D09  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8908  0D0A  2D05               	goto	u2827
  8909  0D0B  3200               	nop2
  8910                           
  8911                           ;system.c: 83: LCDClear();
  8912  0D0C  318C  2499  318C   	fcall	_LCDClear
  8913                           
  8914                           ;system.c: 84: _delay((unsigned long)((200)*(32000000/4000.0)));
  8915  0D0F  3009               	movlw	9
  8916  0D10  00FC               	movwf	??_SYSTEM_Initialize+1
  8917  0D11  301E               	movlw	30
  8918  0D12  00FB               	movwf	??_SYSTEM_Initialize
  8919  0D13  30E4               	movlw	228
  8920  0D14                     u2837:	
  8921  0D14  0B89               	decfsz	9,f
  8922  0D15  2D14               	goto	u2837
  8923  0D16  0BFB               	decfsz	??_SYSTEM_Initialize,f
  8924  0D17  2D14               	goto	u2837
  8925  0D18  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  8926  0D19  2D14               	goto	u2837
  8927  0D1A  3200               	nop2
  8928  0D1B  0008               	return
  8929  0D1C                     __end_of_SYSTEM_Initialize:	
  8930                           
  8931                           	psect	text13
  8932  0B73                     __ptext13:	
  8933 ;; *************** function _TMR2_Initialize *****************
  8934 ;; Defined at:
  8935 ;;		line 3 in file "tmr2.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;		None
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;		None
  8940 ;; Return value:  Size  Location     Type
  8941 ;;                  1    wreg      void 
  8942 ;; Registers used:
  8943 ;;		wreg, status,2
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8953 ;;Total ram usage:        0 bytes
  8954 ;; Hardware stack levels used:    1
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_SYSTEM_Initialize
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           
  8963                           ;psect for function _TMR2_Initialize
  8964  0B73                     _TMR2_Initialize:	
  8965                           
  8966                           ;tmr2.c: 5: T2CON = 0x00;
  8967                           
  8968                           ;incstack = 0
  8969                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8970  0B73  0025               	movlb	5	; select bank5
  8971  0B74  018E               	clrf	14	;volatile
  8972                           
  8973                           ;tmr2.c: 7: T2CLKCON = 0x01;
  8974  0B75  3001               	movlw	1
  8975  0B76  0090               	movwf	16	;volatile
  8976                           
  8977                           ;tmr2.c: 9: T2HLT = 0x00;
  8978  0B77  018F               	clrf	15	;volatile
  8979                           
  8980                           ;tmr2.c: 11: T2RST = 0x00;
  8981  0B78  0191               	clrf	17	;volatile
  8982                           
  8983                           ;tmr2.c: 13: T2PR = 0x3E;
  8984  0B79  303E               	movlw	62
  8985  0B7A  008D               	movwf	13	;volatile
  8986                           
  8987                           ;tmr2.c: 17: T2TMR = 0x00;
  8988  0B7B  018C               	clrf	12	;volatile
  8989                           
  8990                           ;tmr2.c: 19: PIR4bits.TMR2IF = 0;
  8991  0B7C  002E               	movlb	14	; select bank14
  8992  0B7D  1090               	bcf	16,1	;volatile
  8993                           
  8994                           ;tmr2.c: 21: T2CONbits.TMR2ON = 1;
  8995  0B7E  0025               	movlb	5	; select bank5
  8996  0B7F  178E               	bsf	14,7	;volatile
  8997  0B80  0008               	return
  8998  0B81                     __end_of_TMR2_Initialize:	
  8999                           
  9000                           	psect	text14
  9001  0BA4                     __ptext14:	
  9002 ;; *************** function _PWM_Initialize *****************
  9003 ;; Defined at:
  9004 ;;		line 3 in file "pwm.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;		None
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;		None
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  1    wreg      void 
  9011 ;; Registers used:
  9012 ;;		wreg, status,2, status,0
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;Total ram usage:        0 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; This function calls:
  9025 ;;		Nothing
  9026 ;; This function is called by:
  9027 ;;		_SYSTEM_Initialize
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           
  9032                           ;psect for function _PWM_Initialize
  9033  0BA4                     _PWM_Initialize:	
  9034                           
  9035                           ;pwm.c: 5: PWM6CON = 0x80;
  9036                           
  9037                           ;incstack = 0
  9038                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
  9039  0BA4  3080               	movlw	128
  9040  0BA5  0027               	movlb	7	; select bank7
  9041  0BA6  008E               	movwf	14	;volatile
  9042                           
  9043                           ;pwm.c: 7: PWM6DCH = 0x00;
  9044  0BA7  018D               	clrf	13	;volatile
  9045                           
  9046                           ;pwm.c: 9: PWM6DCL = 0x00;
  9047  0BA8  018C               	clrf	12	;volatile
  9048                           
  9049                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  9050  0BA9  0024               	movlb	4	; select bank4
  9051  0BAA  081F               	movf	31,w	;volatile
  9052  0BAB  39F3               	andlw	-13
  9053  0BAC  3804               	iorlw	4
  9054  0BAD  009F               	movwf	31	;volatile
  9055                           
  9056                           ;pwm.c: 14: PWM7CON = 0x80;
  9057  0BAE  3080               	movlw	128
  9058  0BAF  0027               	movlb	7	; select bank7
  9059  0BB0  0092               	movwf	18	;volatile
  9060                           
  9061                           ;pwm.c: 16: PWM7DCH = 0x00;
  9062  0BB1  0191               	clrf	17	;volatile
  9063                           
  9064                           ;pwm.c: 18: PWM7DCL = 0x00;
  9065  0BB2  0190               	clrf	16	;volatile
  9066                           
  9067                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x1;
  9068  0BB3  0024               	movlb	4	; select bank4
  9069  0BB4  081F               	movf	31,w	;volatile
  9070  0BB5  39CF               	andlw	-49
  9071  0BB6  3810               	iorlw	16
  9072  0BB7  009F               	movwf	31	;volatile
  9073  0BB8  0008               	return
  9074  0BB9                     __end_of_PWM_Initialize:	
  9075                           
  9076                           	psect	text15
  9077  0D1C                     __ptext15:	
  9078 ;; *************** function _PIN_MANAGER_Initialize *****************
  9079 ;; Defined at:
  9080 ;;		line 5 in file "pin_manager.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;		None
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;  state           1    0[COMMON] char 
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1    wreg      void 
  9087 ;; Registers used:
  9088 ;;		wreg, status,2
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;Total ram usage:        1 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; This function calls:
  9101 ;;		Nothing
  9102 ;; This function is called by:
  9103 ;;		_SYSTEM_Initialize
  9104 ;; This function uses a non-reentrant model
  9105 ;;
  9106                           
  9107                           
  9108                           ;psect for function _PIN_MANAGER_Initialize
  9109  0D1C                     _PIN_MANAGER_Initialize:	
  9110                           
  9111                           ;pin_manager.c: 7: LATA = 0x20;
  9112                           
  9113                           ;incstack = 0
  9114                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9115  0D1C  3020               	movlw	32
  9116  0D1D  0020               	movlb	0	; select bank0
  9117  0D1E  0096               	movwf	22	;volatile
  9118                           
  9119                           ;pin_manager.c: 8: LATB = 0x00;
  9120  0D1F  0197               	clrf	23	;volatile
  9121                           
  9122                           ;pin_manager.c: 9: LATC = 0x00;
  9123  0D20  0198               	clrf	24	;volatile
  9124                           
  9125                           ;pin_manager.c: 11: WPUA = 0x00;
  9126  0D21  003E               	movlb	30	; select bank30
  9127  0D22  01B9               	clrf	57	;volatile
  9128                           
  9129                           ;pin_manager.c: 12: WPUB = 0x00;
  9130  0D23  01C4               	clrf	68	;volatile
  9131                           
  9132                           ;pin_manager.c: 13: WPUC = 0x00;
  9133  0D24  01CF               	clrf	79	;volatile
  9134                           
  9135                           ;pin_manager.c: 14: WPUE = 0x8;
  9136  0D25  3008               	movlw	8
  9137  0D26  00E5               	movwf	101	;volatile
  9138                           
  9139                           ;pin_manager.c: 16: TRISA = 0x00;
  9140  0D27  0020               	movlb	0	; select bank0
  9141  0D28  0191               	clrf	17	;volatile
  9142                           
  9143                           ;pin_manager.c: 17: TRISB = 0x0E;
  9144  0D29  300E               	movlw	14
  9145  0D2A  0092               	movwf	18	;volatile
  9146                           
  9147                           ;pin_manager.c: 18: TRISC = 0xFF;
  9148  0D2B  30FF               	movlw	255
  9149  0D2C  0093               	movwf	19	;volatile
  9150                           
  9151                           ;pin_manager.c: 20: ANSELA = 0x00;
  9152  0D2D  003E               	movlb	30	; select bank30
  9153  0D2E  01B8               	clrf	56	;volatile
  9154                           
  9155                           ;pin_manager.c: 21: ANSELB = 0x0A;
  9156  0D2F  300A               	movlw	10
  9157  0D30  00C3               	movwf	67	;volatile
  9158                           
  9159                           ;pin_manager.c: 22: ANSELC = 0xFF;
  9160  0D31  30FF               	movlw	255
  9161  0D32  00CE               	movwf	78	;volatile
  9162                           
  9163                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
  9164  0D33  002E               	movlb	14	; select bank14
  9165  0D34  1216               	bcf	22,4	;volatile
  9166                           
  9167                           ;pin_manager.c: 26: int8_t state = GIE;
  9168  0D35  3000               	movlw	0
  9169  0D36  1B8B               	btfsc	11,7	;volatile
  9170  0D37  3001               	movlw	1
  9171  0D38  00F0               	movwf	PIN_MANAGER_Initialize@state
  9172                           
  9173                           ;pin_manager.c: 27: GIE = 0;
  9174  0D39  138B               	bcf	11,7	;volatile
  9175                           
  9176                           ;pin_manager.c: 28: PPSLOCK = 0x55;
  9177  0D3A  3055               	movlw	85
  9178  0D3B  003D               	movlb	29	; select bank29
  9179  0D3C  008F               	movwf	15	;volsfr
  9180                           
  9181                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
  9182  0D3D  30AA               	movlw	170
  9183  0D3E  008F               	movwf	15	;volsfr
  9184                           
  9185                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
  9186  0D3F  100F               	bcf	15,0	;volsfr
  9187                           
  9188                           ;pin_manager.c: 32: RA6PPS = 0x000E;
  9189  0D40  300E               	movlw	14
  9190  0D41  003E               	movlb	30	; select bank30
  9191  0D42  0096               	movwf	22	;volatile
  9192                           
  9193                           ;pin_manager.c: 33: RA7PPS = 0x000F;
  9194  0D43  300F               	movlw	15
  9195  0D44  0097               	movwf	23	;volatile
  9196                           
  9197                           ;pin_manager.c: 35: PPSLOCK = 0x55;
  9198  0D45  3055               	movlw	85
  9199  0D46  003D               	movlb	29	; select bank29
  9200  0D47  008F               	movwf	15	;volsfr
  9201                           
  9202                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
  9203  0D48  30AA               	movlw	170
  9204  0D49  008F               	movwf	15	;volsfr
  9205                           
  9206                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
  9207  0D4A  140F               	bsf	15,0	;volsfr
  9208                           
  9209                           ;pin_manager.c: 38: GIE = state;
  9210  0D4B  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9211  0D4C  2D4F               	goto	u1650
  9212  0D4D  178B               	bsf	11,7	;volatile
  9213  0D4E  0008               	return
  9214  0D4F                     u1650:	
  9215  0D4F  138B               	bcf	11,7	;volatile
  9216  0D50  0008               	return
  9217  0D51                     __end_of_PIN_MANAGER_Initialize:	
  9218                           
  9219                           	psect	text16
  9220  0B52                     __ptext16:	
  9221 ;; *************** function _OSCILLATOR_Initialize *****************
  9222 ;; Defined at:
  9223 ;;		line 87 in file "system.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;		None
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;		None
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  1    wreg      void 
  9230 ;; Registers used:
  9231 ;;		wreg, status,2
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;Total ram usage:        0 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; This function calls:
  9244 ;;		Nothing
  9245 ;; This function is called by:
  9246 ;;		_SYSTEM_Initialize
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           
  9250                           
  9251                           ;psect for function _OSCILLATOR_Initialize
  9252  0B52                     _OSCILLATOR_Initialize:	
  9253                           
  9254                           ;system.c: 89: OSCCON1 = 0x60;
  9255                           
  9256                           ;incstack = 0
  9257                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9258  0B52  3060               	movlw	96
  9259  0B53  0031               	movlb	17	; select bank17
  9260  0B54  008D               	movwf	13	;volatile
  9261                           
  9262                           ;system.c: 90: OSCCON3 = 0x00;
  9263  0B55  018F               	clrf	15	;volatile
  9264                           
  9265                           ;system.c: 91: OSCEN = 0x00;
  9266  0B56  0191               	clrf	17	;volatile
  9267                           
  9268                           ;system.c: 92: OSCFRQ = 0x06;
  9269  0B57  3006               	movlw	6
  9270  0B58  0093               	movwf	19	;volatile
  9271                           
  9272                           ;system.c: 93: OSCTUNE = 0x00;
  9273  0B59  0192               	clrf	18	;volatile
  9274  0B5A  0008               	return
  9275  0B5B                     __end_of_OSCILLATOR_Initialize:	
  9276                           
  9277                           	psect	text17
  9278  0D51                     __ptext17:	
  9279 ;; *************** function _LCDInit *****************
  9280 ;; Defined at:
  9281 ;;		line 247 in file "lcd.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;		None
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;		None
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  1    wreg      void 
  9288 ;; Registers used:
  9289 ;;		wreg, status,2, status,0, pclath, cstack
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9297 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9298 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9299 ;;Total ram usage:        1 bytes
  9300 ;; Hardware stack levels used:    1
  9301 ;; Hardware stack levels required when called:    1
  9302 ;; This function calls:
  9303 ;;		_LCDWrite
  9304 ;; This function is called by:
  9305 ;;		_SYSTEM_Initialize
  9306 ;;		_main
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function _LCDInit
  9312  0D51                     _LCDInit:	
  9313                           
  9314                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
  9315                           
  9316                           ;incstack = 0
  9317                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  9318  0D51  0020               	movlb	0	; select bank0
  9319  0D52  1011               	bcf	17,0	;volatile
  9320                           
  9321                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
  9322  0D53  1091               	bcf	17,1	;volatile
  9323                           
  9324                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
  9325  0D54  1111               	bcf	17,2	;volatile
  9326                           
  9327                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
  9328  0D55  1191               	bcf	17,3	;volatile
  9329                           
  9330                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
  9331  0D56  1211               	bcf	17,4	;volatile
  9332                           
  9333                           ;lcd.c: 254: LATAbits.LATA3 = 0;
  9334  0D57  1196               	bcf	22,3	;volatile
  9335                           
  9336                           ;lcd.c: 255: LATAbits.LATA4 = 0;
  9337  0D58  1216               	bcf	22,4	;volatile
  9338                           
  9339                           ;lcd.c: 256: LATAbits.LATA2 = 0;
  9340  0D59  1116               	bcf	22,2	;volatile
  9341                           
  9342                           ;lcd.c: 257: LATAbits.LATA0 = 0;
  9343  0D5A  1016               	bcf	22,0	;volatile
  9344                           
  9345                           ;lcd.c: 259: LATAbits.LATA0 = 1;
  9346  0D5B  1416               	bsf	22,0	;volatile
  9347                           
  9348                           ;lcd.c: 261: LCDWrite(0, 0x21);
  9349  0D5C  3021               	movlw	33
  9350  0D5D  00F5               	movwf	??_LCDInit
  9351  0D5E  0875               	movf	??_LCDInit,w
  9352  0D5F  00F0               	movwf	LCDWrite@data
  9353  0D60  3000               	movlw	0
  9354  0D61  318C  2474  318D   	fcall	_LCDWrite
  9355                           
  9356                           ;lcd.c: 268: LCDWrite(0, 0XB7);
  9357  0D64  30B7               	movlw	183
  9358  0D65  00F5               	movwf	??_LCDInit
  9359  0D66  0875               	movf	??_LCDInit,w
  9360  0D67  00F0               	movwf	LCDWrite@data
  9361  0D68  3000               	movlw	0
  9362  0D69  318C  2474  318D   	fcall	_LCDWrite
  9363                           
  9364                           ;lcd.c: 270: LCDWrite(0, 0x04);
  9365  0D6C  3004               	movlw	4
  9366  0D6D  00F5               	movwf	??_LCDInit
  9367  0D6E  0875               	movf	??_LCDInit,w
  9368  0D6F  00F0               	movwf	LCDWrite@data
  9369  0D70  3000               	movlw	0
  9370  0D71  318C  2474  318D   	fcall	_LCDWrite
  9371                           
  9372                           ;lcd.c: 272: LCDWrite(0, 0x14);
  9373  0D74  3014               	movlw	20
  9374  0D75  00F5               	movwf	??_LCDInit
  9375  0D76  0875               	movf	??_LCDInit,w
  9376  0D77  00F0               	movwf	LCDWrite@data
  9377  0D78  3000               	movlw	0
  9378  0D79  318C  2474  318D   	fcall	_LCDWrite
  9379                           
  9380                           ;lcd.c: 274: LCDWrite(0, 0x20);
  9381  0D7C  3020               	movlw	32
  9382  0D7D  00F5               	movwf	??_LCDInit
  9383  0D7E  0875               	movf	??_LCDInit,w
  9384  0D7F  00F0               	movwf	LCDWrite@data
  9385  0D80  3000               	movlw	0
  9386  0D81  318C  2474  318D   	fcall	_LCDWrite
  9387                           
  9388                           ;lcd.c: 276: LCDWrite(0, 0x0C);
  9389  0D84  300C               	movlw	12
  9390  0D85  00F5               	movwf	??_LCDInit
  9391  0D86  0875               	movf	??_LCDInit,w
  9392  0D87  00F0               	movwf	LCDWrite@data
  9393  0D88  3000               	movlw	0
  9394  0D89  318C  2474         	fcall	_LCDWrite
  9395  0D8B  0008               	return
  9396  0D8C                     __end_of_LCDInit:	
  9397                           
  9398                           	psect	text18
  9399  0C99                     __ptext18:	
  9400 ;; *************** function _LCDClear *****************
  9401 ;; Defined at:
  9402 ;;		line 182 in file "lcd.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;		None
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;  index           2    9[COMMON] int 
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1    wreg      void 
  9409 ;; Registers used:
  9410 ;;		wreg, status,2, status,0, pclath, cstack
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;Total ram usage:        3 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; Hardware stack levels required when called:    2
  9423 ;; This function calls:
  9424 ;;		_LCDWrite
  9425 ;;		_gotoXY
  9426 ;; This function is called by:
  9427 ;;		_SYSTEM_Initialize
  9428 ;;		_main
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           
  9433                           ;psect for function _LCDClear
  9434  0C99                     _LCDClear:	
  9435                           
  9436                           ;lcd.c: 184: int index;
  9437                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
  9438                           
  9439                           ;incstack = 0
  9440                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  9441  0C99  01F9               	clrf	LCDClear@index
  9442  0C9A  01FA               	clrf	LCDClear@index+1
  9443  0C9B  087A               	movf	LCDClear@index+1,w
  9444  0C9C  3A80               	xorlw	128
  9445  0C9D  00F8               	movwf	??_LCDClear
  9446  0C9E  3081               	movlw	129
  9447  0C9F  0278               	subwf	??_LCDClear,w
  9448  0CA0  1D03               	skipz
  9449  0CA1  2CA4               	goto	u1635
  9450  0CA2  30F8               	movlw	248
  9451  0CA3  0279               	subwf	LCDClear@index,w
  9452  0CA4                     u1635:	
  9453  0CA4  1803               	btfsc	3,0
  9454  0CA5  2CBA               	goto	l1863
  9455  0CA6                     l1857:	
  9456                           
  9457                           ;lcd.c: 186: LCDWrite(1, 0x00);
  9458  0CA6  01F0               	clrf	LCDWrite@data
  9459  0CA7  3001               	movlw	1
  9460  0CA8  318C  2474  318C   	fcall	_LCDWrite
  9461  0CAB  3001               	movlw	1
  9462  0CAC  07F9               	addwf	LCDClear@index,f
  9463  0CAD  3000               	movlw	0
  9464  0CAE  3DFA               	addwfc	LCDClear@index+1,f
  9465  0CAF  087A               	movf	LCDClear@index+1,w
  9466  0CB0  3A80               	xorlw	128
  9467  0CB1  00F8               	movwf	??_LCDClear
  9468  0CB2  3081               	movlw	129
  9469  0CB3  0278               	subwf	??_LCDClear,w
  9470  0CB4  1D03               	skipz
  9471  0CB5  2CB8               	goto	u1645
  9472  0CB6  30F8               	movlw	248
  9473  0CB7  0279               	subwf	LCDClear@index,w
  9474  0CB8                     u1645:	
  9475  0CB8  1C03               	skipc
  9476  0CB9  2CA6               	goto	l1857
  9477  0CBA                     l1863:	
  9478                           
  9479                           ;lcd.c: 187: gotoXY(0, 0);
  9480  0CBA  01F5               	clrf	gotoXY@y
  9481  0CBB  3000               	movlw	0
  9482  0CBC  318B  2391         	fcall	_gotoXY
  9483  0CBE  0008               	return
  9484  0CBF                     __end_of_LCDClear:	
  9485                           
  9486                           	psect	text19
  9487  0B91                     __ptext19:	
  9488 ;; *************** function _gotoXY *****************
  9489 ;; Defined at:
  9490 ;;		line 124 in file "lcd.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  x               1    wreg     unsigned char 
  9493 ;;  y               1    5[COMMON] unsigned char 
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;  x               1    7[COMMON] unsigned char 
  9496 ;; Return value:  Size  Location     Type
  9497 ;;                  1    wreg      void 
  9498 ;; Registers used:
  9499 ;;		wreg, status,2, status,0, pclath, cstack
  9500 ;; Tracked objects:
  9501 ;;		On entry : 0/0
  9502 ;;		On exit  : 0/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9505 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;Total ram usage:        3 bytes
  9510 ;; Hardware stack levels used:    1
  9511 ;; Hardware stack levels required when called:    1
  9512 ;; This function calls:
  9513 ;;		_LCDWrite
  9514 ;; This function is called by:
  9515 ;;		_LCDClear
  9516 ;;		_main
  9517 ;;		_LCDBitmap
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           
  9522                           ;psect for function _gotoXY
  9523  0B91                     _gotoXY:	
  9524                           
  9525                           ;incstack = 0
  9526                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
  9527                           ;gotoXY@x stored from wreg
  9528  0B91  00F7               	movwf	gotoXY@x
  9529                           
  9530                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
  9531  0B92  0877               	movf	gotoXY@x,w
  9532  0B93  3880               	iorlw	128
  9533  0B94  00F6               	movwf	??_gotoXY
  9534  0B95  0876               	movf	??_gotoXY,w
  9535  0B96  00F0               	movwf	LCDWrite@data
  9536  0B97  3000               	movlw	0
  9537  0B98  318C  2474  318B   	fcall	_LCDWrite
  9538                           
  9539                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
  9540  0B9B  0875               	movf	gotoXY@y,w
  9541  0B9C  3840               	iorlw	64
  9542  0B9D  00F6               	movwf	??_gotoXY
  9543  0B9E  0876               	movf	??_gotoXY,w
  9544  0B9F  00F0               	movwf	LCDWrite@data
  9545  0BA0  3000               	movlw	0
  9546  0BA1  318C  2474         	fcall	_LCDWrite
  9547  0BA3  0008               	return
  9548  0BA4                     __end_of_gotoXY:	
  9549                           
  9550                           	psect	text20
  9551  0BFA                     __ptext20:	
  9552 ;; *************** function _Init_Battery_State_Machine *****************
  9553 ;; Defined at:
  9554 ;;		line 22 in file "battery_charger.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;Total ram usage:        1 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		_SYSTEM_Initialize
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           
  9582                           ;psect for function _Init_Battery_State_Machine
  9583  0BFA                     _Init_Battery_State_Machine:	
  9584                           
  9585                           ;battery_charger.c: 24: battery_state = PRECHARGE;
  9586                           
  9587                           ;incstack = 0
  9588                           ; Regs used in _Init_Battery_State_Machine: [wreg]
  9589  0BFA  3003               	movlw	3
  9590  0BFB  00F0               	movwf	??_Init_Battery_State_Machine
  9591  0BFC  0870               	movf	??_Init_Battery_State_Machine,w
  9592  0BFD  0020               	movlb	0	; select bank0
  9593  0BFE  00ED               	movwf	_battery_state
  9594                           
  9595                           ;battery_charger.c: 25: state_counter = 600;
  9596  0BFF  3058               	movlw	88
  9597  0C00  0021               	movlb	1	; select bank1
  9598  0C01  00E3               	movwf	_state_counter^(0+128)
  9599  0C02  3002               	movlw	2
  9600  0C03  00E4               	movwf	(_state_counter^(0+128)+1)
  9601                           
  9602                           ;battery_charger.c: 27: { Iref = 10; };
  9603  0C04  300A               	movlw	10
  9604  0C05  00DF               	movwf	_Iref^(0+128)
  9605  0C06  3000               	movlw	0
  9606  0C07  00E0               	movwf	(_Iref^(0+128)+1)
  9607                           
  9608                           ;battery_charger.c: 28: { Vref = 1400; };
  9609  0C08  3078               	movlw	120
  9610  0C09  0020               	movlb	0	; select bank0
  9611  0C0A  00EB               	movwf	_Vref
  9612  0C0B  3005               	movlw	5
  9613  0C0C  00EC               	movwf	_Vref+1
  9614                           
  9615                           ;battery_charger.c: 30: Imin = 15;
  9616  0C0D  300F               	movlw	15
  9617  0C0E  0021               	movlb	1	; select bank1
  9618  0C0F  00E1               	movwf	_Imin^(0+128)
  9619  0C10  3000               	movlw	0
  9620  0C11  00E2               	movwf	(_Imin^(0+128)+1)
  9621                           
  9622                           ;battery_charger.c: 31: IminCount = 10;
  9623  0C12  300A               	movlw	10
  9624  0C13  00E5               	movwf	_IminCount^(0+128)
  9625  0C14  3000               	movlw	0
  9626  0C15  00E6               	movwf	(_IminCount^(0+128)+1)
  9627  0C16  0008               	return
  9628  0C17                     __end_of_Init_Battery_State_Machine:	
  9629                           
  9630                           	psect	text21
  9631  0C35                     __ptext21:	
  9632 ;; *************** function _ADC_Initialize *****************
  9633 ;; Defined at:
  9634 ;;		line 83 in file "adc.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;		None
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;		None
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  1    wreg      void 
  9641 ;; Registers used:
  9642 ;;		wreg, status,2
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/0
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9652 ;;Total ram usage:        0 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; This function calls:
  9655 ;;		Nothing
  9656 ;; This function is called by:
  9657 ;;		_SYSTEM_Initialize
  9658 ;; This function uses a non-reentrant model
  9659 ;;
  9660                           
  9661                           
  9662                           ;psect for function _ADC_Initialize
  9663  0C35                     _ADC_Initialize:	
  9664                           
  9665                           ;adc.c: 85: ADCON1 = 0x00;
  9666                           
  9667                           ;incstack = 0
  9668                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9669  0C35  0021               	movlb	1	; select bank1
  9670  0C36  0194               	clrf	20	;volatile
  9671                           
  9672                           ;adc.c: 87: ADCON2 = 0x00;
  9673  0C37  0195               	clrf	21	;volatile
  9674                           
  9675                           ;adc.c: 89: ADCON3 = 0x00;
  9676  0C38  0196               	clrf	22	;volatile
  9677                           
  9678                           ;adc.c: 91: ADACT = 0x00;
  9679  0C39  0199               	clrf	25	;volatile
  9680                           
  9681                           ;adc.c: 93: ADSTAT = 0x00;
  9682  0C3A  0197               	clrf	23	;volatile
  9683                           
  9684                           ;adc.c: 95: FVRCON = 0b11000011;
  9685  0C3B  30C3               	movlw	195
  9686  0C3C  0032               	movlb	18	; select bank18
  9687  0C3D  008C               	movwf	12	;volatile
  9688                           
  9689                           ;adc.c: 96: ADCLK = 0x3F;
  9690  0C3E  303F               	movlw	63
  9691  0C3F  0021               	movlb	1	; select bank1
  9692  0C40  0098               	movwf	24	;volatile
  9693                           
  9694                           ;adc.c: 103: ADREF = 0x03;
  9695  0C41  3003               	movlw	3
  9696  0C42  009A               	movwf	26	;volatile
  9697                           
  9698                           ;adc.c: 106: ADCAP = 0x00;
  9699  0C43  019B               	clrf	27	;volatile
  9700                           
  9701                           ;adc.c: 109: ADPRE = 0x07;
  9702  0C44  3007               	movlw	7
  9703  0C45  009C               	movwf	28	;volatile
  9704                           
  9705                           ;adc.c: 111: ADACQ = 0x00;
  9706  0C46  019D               	clrf	29	;volatile
  9707                           
  9708                           ;adc.c: 113: ADPCH = 0x00;
  9709  0C47  019E               	clrf	30	;volatile
  9710                           
  9711                           ;adc.c: 115: ADRPT = 0x00;
  9712  0C48  0022               	movlb	2	; select bank2
  9713  0C49  018D               	clrf	13	;volatile
  9714                           
  9715                           ;adc.c: 117: ADLTHL = 0x00;
  9716  0C4A  018E               	clrf	14	;volatile
  9717                           
  9718                           ;adc.c: 119: ADLTHH = 0x00;
  9719  0C4B  018F               	clrf	15	;volatile
  9720                           
  9721                           ;adc.c: 121: ADUTHL = 0x00;
  9722  0C4C  0190               	clrf	16	;volatile
  9723                           
  9724                           ;adc.c: 123: ADUTHH = 0x00;
  9725  0C4D  0191               	clrf	17	;volatile
  9726                           
  9727                           ;adc.c: 125: ADSTPTL = 0x00;
  9728  0C4E  0192               	clrf	18	;volatile
  9729                           
  9730                           ;adc.c: 127: ADSTPTH = 0x00;
  9731  0C4F  0193               	clrf	19	;volatile
  9732                           
  9733                           ;adc.c: 129: ADCON0 = 0x84;
  9734  0C50  3084               	movlw	132
  9735  0C51  0021               	movlb	1	; select bank1
  9736  0C52  0093               	movwf	19	;volatile
  9737  0C53  0008               	return
  9738  0C54                     __end_of_ADC_Initialize:	
  9739                           
  9740                           	psect	text22
  9741  0BE4                     __ptext22:	
  9742 ;; *************** function _PWM7_LoadDutyValue *****************
  9743 ;; Defined at:
  9744 ;;		line 32 in file "pwm.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;  dutyCycle7      2    0[COMMON] unsigned int 
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;		None
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  1    wreg      void 
  9751 ;; Registers used:
  9752 ;;		wreg, status,2, status,0
  9753 ;; Tracked objects:
  9754 ;;		On entry : 0/0
  9755 ;;		On exit  : 0/0
  9756 ;;		Unchanged: 0/0
  9757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;Total ram usage:        4 bytes
  9763 ;; Hardware stack levels used:    1
  9764 ;; This function calls:
  9765 ;;		Nothing
  9766 ;; This function is called by:
  9767 ;;		_main
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           
  9772                           ;psect for function _PWM7_LoadDutyValue
  9773  0BE4                     _PWM7_LoadDutyValue:	
  9774                           
  9775                           ;pwm.c: 34: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
  9776                           
  9777                           ;incstack = 0
  9778                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
  9779  0BE4  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
  9780  0BE5  00F3               	movwf	??_PWM7_LoadDutyValue+1
  9781  0BE6  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9782  0BE7  00F2               	movwf	??_PWM7_LoadDutyValue
  9783  0BE8  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9784  0BE9  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9785  0BEA  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
  9786  0BEB  0CF2               	rrf	??_PWM7_LoadDutyValue,f
  9787  0BEC  0872               	movf	??_PWM7_LoadDutyValue,w
  9788  0BED  0027               	movlb	7	; select bank7
  9789  0BEE  0091               	movwf	17	;volatile
  9790                           
  9791                           ;pwm.c: 36: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
  9792  0BEF  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
  9793  0BF0  3903               	andlw	3
  9794  0BF1  00F2               	movwf	??_PWM7_LoadDutyValue
  9795  0BF2  3005               	movlw	5
  9796  0BF3                     u2445:	
  9797  0BF3  35F2               	lslf	??_PWM7_LoadDutyValue,f
  9798  0BF4  3EFF               	addlw	-1
  9799  0BF5  1D03               	skipz
  9800  0BF6  2BF3               	goto	u2445
  9801  0BF7  3572               	lslf	??_PWM7_LoadDutyValue,w
  9802  0BF8  0090               	movwf	16	;volatile
  9803  0BF9  0008               	return
  9804  0BFA                     __end_of_PWM7_LoadDutyValue:	
  9805                           
  9806                           	psect	text23
  9807  0BCE                     __ptext23:	
  9808 ;; *************** function _PWM6_LoadDutyValue *****************
  9809 ;; Defined at:
  9810 ;;		line 25 in file "pwm.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;  dutyCycle6      2    0[COMMON] unsigned int 
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  1    wreg      void 
  9817 ;; Registers used:
  9818 ;;		wreg, status,2, status,0
  9819 ;; Tracked objects:
  9820 ;;		On entry : 0/0
  9821 ;;		On exit  : 0/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9828 ;;Total ram usage:        4 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; This function calls:
  9831 ;;		Nothing
  9832 ;; This function is called by:
  9833 ;;		_main
  9834 ;; This function uses a non-reentrant model
  9835 ;;
  9836                           
  9837                           
  9838                           ;psect for function _PWM6_LoadDutyValue
  9839  0BCE                     _PWM6_LoadDutyValue:	
  9840                           
  9841                           ;pwm.c: 27: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
  9842                           
  9843                           ;incstack = 0
  9844                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9845  0BCE  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
  9846  0BCF  00F3               	movwf	??_PWM6_LoadDutyValue+1
  9847  0BD0  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9848  0BD1  00F2               	movwf	??_PWM6_LoadDutyValue
  9849  0BD2  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9850  0BD3  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9851  0BD4  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9852  0BD5  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9853  0BD6  0872               	movf	??_PWM6_LoadDutyValue,w
  9854  0BD7  0027               	movlb	7	; select bank7
  9855  0BD8  008D               	movwf	13	;volatile
  9856                           
  9857                           ;pwm.c: 29: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
  9858  0BD9  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
  9859  0BDA  3903               	andlw	3
  9860  0BDB  00F2               	movwf	??_PWM6_LoadDutyValue
  9861  0BDC  3005               	movlw	5
  9862  0BDD                     u2435:	
  9863  0BDD  35F2               	lslf	??_PWM6_LoadDutyValue,f
  9864  0BDE  3EFF               	addlw	-1
  9865  0BDF  1D03               	skipz
  9866  0BE0  2BDD               	goto	u2435
  9867  0BE1  3572               	lslf	??_PWM6_LoadDutyValue,w
  9868  0BE2  008C               	movwf	12	;volatile
  9869  0BE3  0008               	return
  9870  0BE4                     __end_of_PWM6_LoadDutyValue:	
  9871                           
  9872                           	psect	text24
  9873  0207                     __ptext24:	
  9874 ;; *************** function _LCDWriteInt *****************
  9875 ;; Defined at:
  9876 ;;		line 190 in file "lcd.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  value           2    8[BANK0 ] int 
  9879 ;;  fieldLength     1   10[BANK0 ] char 
  9880 ;;  numPlaces       1   11[BANK0 ] unsigned char 
  9881 ;;  sign            1   12[BANK0 ] unsigned char 
  9882 ;; Auto vars:     Size  Location     Type
  9883 ;;  str             5   17[BANK0 ] unsigned char [5]
  9884 ;;  i               1   23[BANK0 ] unsigned char 
  9885 ;;  j               1   22[BANK0 ] unsigned char 
  9886 ;; Return value:  Size  Location     Type
  9887 ;;                  1    wreg      void 
  9888 ;; Registers used:
  9889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9895 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9896 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;Total ram usage:       16 bytes
  9900 ;; Hardware stack levels used:    1
  9901 ;; Hardware stack levels required when called:    2
  9902 ;; This function calls:
  9903 ;;		_LCDWriteCharacter
  9904 ;;		___awdiv
  9905 ;;		___lwmod
  9906 ;; This function is called by:
  9907 ;;		_main
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           
  9912                           ;psect for function _LCDWriteInt
  9913  0207                     _LCDWriteInt:	
  9914                           
  9915                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
  9916                           
  9917                           ;incstack = 0
  9918                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9919  0207  30D8               	movlw	low LCDWriteInt@F14393
  9920  0208  0086               	movwf	6
  9921  0209  3000               	movlw	high LCDWriteInt@F14393
  9922  020A  0087               	movwf	7
  9923  020B  3031               	movlw	low LCDWriteInt@str
  9924  020C  0084               	movwf	4
  9925  020D  3000               	movlw	high LCDWriteInt@str
  9926  020E  0085               	movwf	5
  9927  020F  3005               	movlw	5
  9928  0210  0020               	movlb	0	; select bank0
  9929  0211  00AD               	movwf	??_LCDWriteInt
  9930  0212                     u2340:	
  9931  0212  0016               	moviw fsr1++
  9932  0213  001A               	movwi fsr0++
  9933  0214  0BAD               	decfsz	??_LCDWriteInt,f
  9934  0215  2A12               	goto	u2340
  9935                           
  9936                           ;lcd.c: 193: uint8_t i=4,j=0;
  9937  0216  3004               	movlw	4
  9938  0217  00AD               	movwf	??_LCDWriteInt
  9939  0218  082D               	movf	??_LCDWriteInt,w
  9940  0219  00B7               	movwf	LCDWriteInt@i
  9941  021A  01B6               	clrf	LCDWriteInt@j
  9942                           
  9943                           ;lcd.c: 195: if(value<0)
  9944  021B  1FA9               	btfss	LCDWriteInt@value+1,7
  9945  021C  2A28               	goto	l2225
  9946                           
  9947                           ;lcd.c: 196: {
  9948                           ;lcd.c: 197: LCDWriteCharacter('-');
  9949  021D  302D               	movlw	45
  9950  021E  318E  2659  3182   	fcall	_LCDWriteCharacter
  9951                           
  9952                           ;lcd.c: 198: value=value*-1;
  9953  0221  0020               	movlb	0	; select bank0
  9954  0222  09A8               	comf	LCDWriteInt@value,f
  9955  0223  09A9               	comf	LCDWriteInt@value+1,f
  9956  0224  0AA8               	incf	LCDWriteInt@value,f
  9957  0225  1903               	skipnz
  9958  0226  0AA9               	incf	LCDWriteInt@value+1,f
  9959                           
  9960                           ;lcd.c: 199: }
  9961  0227  2A2F               	goto	l2235
  9962  0228                     l2225:	
  9963                           
  9964                           ;lcd.c: 201: else
  9965                           ;lcd.c: 202: {
  9966                           ;lcd.c: 203: if(sign == 1)
  9967  0228  032C               	decf	LCDWriteInt@sign,w
  9968  0229  1D03               	btfss	3,2
  9969  022A  2A2F               	goto	l2235
  9970                           
  9971                           ;lcd.c: 204: {
  9972                           ;lcd.c: 205: LCDWriteCharacter('+');
  9973  022B  302B               	movlw	43
  9974  022C  318E  2659  3182   	fcall	_LCDWriteCharacter
  9975  022F                     l2235:	
  9976                           ;lcd.c: 206: }
  9977                           ;lcd.c: 207: }
  9978                           ;lcd.c: 209: while(value)
  9979                           
  9980  022F  0020               	movlb	0	; select bank0
  9981  0230  0828               	movf	LCDWriteInt@value,w
  9982  0231  0429               	iorwf	LCDWriteInt@value+1,w
  9983  0232  1903               	btfsc	3,2
  9984  0233  2A5C               	goto	l2237
  9985                           
  9986                           ;lcd.c: 210: {
  9987                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
  9988  0234  300A               	movlw	10
  9989  0235  00F0               	movwf	___lwmod@divisor
  9990  0236  3000               	movlw	0
  9991  0237  00F1               	movwf	___lwmod@divisor+1
  9992  0238  0020               	movlb	0	; select bank0
  9993  0239  0829               	movf	LCDWriteInt@value+1,w
  9994  023A  00F3               	movwf	___lwmod@dividend+1
  9995  023B  0828               	movf	LCDWriteInt@value,w
  9996  023C  00F2               	movwf	___lwmod@dividend
  9997  023D  318C  24BF  3182   	fcall	___lwmod
  9998  0240  0870               	movf	?___lwmod,w
  9999  0241  0020               	movlb	0	; select bank0
 10000  0242  00AD               	movwf	??_LCDWriteInt
 10001  0243  0837               	movf	LCDWriteInt@i,w
 10002  0244  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 10003  0245  0086               	movwf	6
 10004  0246  0187               	clrf	7
 10005  0247  082D               	movf	??_LCDWriteInt,w
 10006  0248  0081               	movwf	1
 10007                           
 10008                           ;lcd.c: 212: value=value/10;
 10009  0249  300A               	movlw	10
 10010  024A  00F0               	movwf	___awdiv@divisor
 10011  024B  3000               	movlw	0
 10012  024C  00F1               	movwf	___awdiv@divisor+1
 10013  024D  0829               	movf	LCDWriteInt@value+1,w
 10014  024E  00F3               	movwf	___awdiv@dividend+1
 10015  024F  0828               	movf	LCDWriteInt@value,w
 10016  0250  00F2               	movwf	___awdiv@dividend
 10017  0251  3180  2004  3182   	fcall	___awdiv
 10018  0254  0871               	movf	?___awdiv+1,w
 10019  0255  0020               	movlb	0	; select bank0
 10020  0256  00A9               	movwf	LCDWriteInt@value+1
 10021  0257  0870               	movf	?___awdiv,w
 10022  0258  00A8               	movwf	LCDWriteInt@value
 10023                           
 10024                           ;lcd.c: 213: i--;
 10025  0259  3001               	movlw	1
 10026  025A  02B7               	subwf	LCDWriteInt@i,f
 10027  025B  2A2F               	goto	l2235
 10028  025C                     l2237:	
 10029                           
 10030                           ;lcd.c: 214: }
 10031                           ;lcd.c: 215: if(fieldLength==-1)
 10032  025C  0A2A               	incf	LCDWriteInt@fieldLength,w
 10033  025D  1903               	btfsc	3,2
 10034  025E  2A64               	goto	l2243
 10035  025F  2A6C               	goto	l2245
 10036  0260                     l2241:	
 10037                           ;lcd.c: 216: {
 10038                           ;lcd.c: 217: while(str[j]==0)
 10039                           
 10040                           
 10041                           ;lcd.c: 218: {
 10042                           ;lcd.c: 219: j++;
 10043  0260  3001               	movlw	1
 10044  0261  00AD               	movwf	??_LCDWriteInt
 10045  0262  082D               	movf	??_LCDWriteInt,w
 10046  0263  07B6               	addwf	LCDWriteInt@j,f
 10047  0264                     l2243:	
 10048  0264  0836               	movf	LCDWriteInt@j,w
 10049  0265  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 10050  0266  0086               	movwf	6
 10051  0267  0187               	clrf	7
 10052  0268  0801               	movf	1,w
 10053  0269  1D03               	btfss	3,2
 10054  026A  2A72               	goto	l2247
 10055  026B  2A60               	goto	l2241
 10056  026C                     l2245:	
 10057                           ;lcd.c: 220: }
 10058                           ;lcd.c: 221: }
 10059                           
 10060                           
 10061                           ;lcd.c: 222: else
 10062                           ;lcd.c: 223: {
 10063                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 10064  026C  032A               	decf	LCDWriteInt@fieldLength,w
 10065  026D  3AFF               	xorlw	255
 10066  026E  3E05               	addlw	5
 10067  026F  00AD               	movwf	??_LCDWriteInt
 10068  0270  082D               	movf	??_LCDWriteInt,w
 10069  0271  00B6               	movwf	LCDWriteInt@j
 10070  0272                     l2247:	
 10071                           
 10072                           ;lcd.c: 225: }
 10073                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 10074  0272  0836               	movf	LCDWriteInt@j,w
 10075  0273  00AD               	movwf	??_LCDWriteInt
 10076  0274  082D               	movf	??_LCDWriteInt,w
 10077  0275  00B7               	movwf	LCDWriteInt@i
 10078  0276                     l2253:	
 10079  0276  082B               	movf	LCDWriteInt@numPlaces,w
 10080  0277  00AD               	movwf	??_LCDWriteInt
 10081  0278  01AE               	clrf	??_LCDWriteInt+1
 10082  0279  09AD               	comf	??_LCDWriteInt,f
 10083  027A  09AE               	comf	??_LCDWriteInt+1,f
 10084  027B  0AAD               	incf	??_LCDWriteInt,f
 10085  027C  1903               	skipnz
 10086  027D  0AAE               	incf	??_LCDWriteInt+1,f
 10087  027E  082D               	movf	??_LCDWriteInt,w
 10088  027F  3E05               	addlw	5
 10089  0280  00AF               	movwf	??_LCDWriteInt+2
 10090  0281  3000               	movlw	0
 10091  0282  3D2E               	addwfc	??_LCDWriteInt+1,w
 10092  0283  00B0               	movwf	??_LCDWriteInt+3
 10093  0284  0830               	movf	??_LCDWriteInt+3,w
 10094  0285  3A80               	xorlw	128
 10095  0286  3C80               	sublw	128
 10096  0287  1D03               	skipz
 10097  0288  2A8B               	goto	u2405
 10098  0289  082F               	movf	??_LCDWriteInt+2,w
 10099  028A  0237               	subwf	LCDWriteInt@i,w
 10100  028B                     u2405:	
 10101  028B  1803               	btfsc	3,0
 10102  028C  2A9D               	goto	l2255
 10103                           
 10104                           ;lcd.c: 228: {
 10105                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 10106  028D  0020               	movlb	0	; select bank0
 10107  028E  0837               	movf	LCDWriteInt@i,w
 10108  028F  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 10109  0290  0086               	movwf	6
 10110  0291  0187               	clrf	7
 10111  0292  0801               	movf	1,w
 10112  0293  3E30               	addlw	48
 10113  0294  318E  2659  3182   	fcall	_LCDWriteCharacter
 10114  0297  3001               	movlw	1
 10115  0298  0020               	movlb	0	; select bank0
 10116  0299  00AD               	movwf	??_LCDWriteInt
 10117  029A  082D               	movf	??_LCDWriteInt,w
 10118  029B  07B7               	addwf	LCDWriteInt@i,f
 10119  029C  2A76               	goto	l2253
 10120  029D                     l2255:	
 10121                           
 10122                           ;lcd.c: 230: }
 10123                           ;lcd.c: 232: if(numPlaces == 1)
 10124  029D  0020               	movlb	0	; select bank0
 10125  029E  032B               	decf	LCDWriteInt@numPlaces,w
 10126  029F  1D03               	btfss	3,2
 10127  02A0  2AAB               	goto	l2259
 10128                           
 10129                           ;lcd.c: 233: {
 10130                           ;lcd.c: 234: LCDWriteCharacter(46);
 10131  02A1  302E               	movlw	46
 10132  02A2  318E  2659  3182   	fcall	_LCDWriteCharacter
 10133                           
 10134                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 10135  02A5  0020               	movlb	0	; select bank0
 10136  02A6  0835               	movf	LCDWriteInt@str+4,w
 10137  02A7  3E30               	addlw	48
 10138  02A8  318E  2659  3182   	fcall	_LCDWriteCharacter
 10139  02AB                     l2259:	
 10140                           
 10141                           ;lcd.c: 236: }
 10142                           ;lcd.c: 238: if(numPlaces == 2)
 10143  02AB  3002               	movlw	2
 10144  02AC  0020               	movlb	0	; select bank0
 10145  02AD  062B               	xorwf	LCDWriteInt@numPlaces,w
 10146  02AE  1D03               	btfss	3,2
 10147  02AF  0008               	return
 10148                           
 10149                           ;lcd.c: 239: {
 10150                           ;lcd.c: 240: LCDWriteCharacter(46);
 10151  02B0  302E               	movlw	46
 10152  02B1  318E  2659  3182   	fcall	_LCDWriteCharacter
 10153                           
 10154                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 10155  02B4  0020               	movlb	0	; select bank0
 10156  02B5  0834               	movf	LCDWriteInt@str+3,w
 10157  02B6  3E30               	addlw	48
 10158  02B7  318E  2659  3182   	fcall	_LCDWriteCharacter
 10159                           
 10160                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 10161  02BA  0020               	movlb	0	; select bank0
 10162  02BB  0835               	movf	LCDWriteInt@str+4,w
 10163  02BC  3E30               	addlw	48
 10164  02BD  318E  2659         	fcall	_LCDWriteCharacter
 10165  02BF  0008               	return
 10166  02C0                     __end_of_LCDWriteInt:	
 10167                           
 10168                           	psect	text25
 10169  0CBF                     __ptext25:	
 10170 ;; *************** function ___lwmod *****************
 10171 ;; Defined at:
 10172 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  divisor         2    0[COMMON] unsigned int 
 10175 ;;  dividend        2    2[COMMON] unsigned int 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;  counter         1    5[COMMON] unsigned char 
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  2    0[COMMON] unsigned int 
 10180 ;; Registers used:
 10181 ;;		wreg, status,2, status,0
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10189 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10190 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10191 ;;Total ram usage:        6 bytes
 10192 ;; Hardware stack levels used:    1
 10193 ;; This function calls:
 10194 ;;		Nothing
 10195 ;; This function is called by:
 10196 ;;		_LCDWriteInt
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           
 10201                           ;psect for function ___lwmod
 10202  0CBF                     ___lwmod:	
 10203                           
 10204                           ;incstack = 0
 10205                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10206  0CBF  0870               	movf	___lwmod@divisor,w
 10207  0CC0  0471               	iorwf	___lwmod@divisor+1,w
 10208  0CC1  1903               	btfsc	3,2
 10209  0CC2  2CE6               	goto	l2137
 10210  0CC3  01F5               	clrf	___lwmod@counter
 10211  0CC4  0AF5               	incf	___lwmod@counter,f
 10212  0CC5                     l2127:	
 10213  0CC5  1BF1               	btfsc	___lwmod@divisor+1,7
 10214  0CC6  2CD1               	goto	l2129
 10215  0CC7  3001               	movlw	1
 10216  0CC8                     u2075:	
 10217  0CC8  35F0               	lslf	___lwmod@divisor,f
 10218  0CC9  0DF1               	rlf	___lwmod@divisor+1,f
 10219  0CCA  0B89               	decfsz	9,f
 10220  0CCB  2CC8               	goto	u2075
 10221  0CCC  3001               	movlw	1
 10222  0CCD  00F4               	movwf	??___lwmod
 10223  0CCE  0874               	movf	??___lwmod,w
 10224  0CCF  07F5               	addwf	___lwmod@counter,f
 10225  0CD0  2CC5               	goto	l2127
 10226  0CD1                     l2129:	
 10227  0CD1  0871               	movf	___lwmod@divisor+1,w
 10228  0CD2  0273               	subwf	___lwmod@dividend+1,w
 10229  0CD3  1D03               	skipz
 10230  0CD4  2CD7               	goto	u2095
 10231  0CD5  0870               	movf	___lwmod@divisor,w
 10232  0CD6  0272               	subwf	___lwmod@dividend,w
 10233  0CD7                     u2095:	
 10234  0CD7  1C03               	skipc
 10235  0CD8  2CDD               	goto	l2133
 10236  0CD9  0870               	movf	___lwmod@divisor,w
 10237  0CDA  02F2               	subwf	___lwmod@dividend,f
 10238  0CDB  0871               	movf	___lwmod@divisor+1,w
 10239  0CDC  3BF3               	subwfb	___lwmod@dividend+1,f
 10240  0CDD                     l2133:	
 10241  0CDD  3001               	movlw	1
 10242  0CDE                     u2105:	
 10243  0CDE  36F1               	lsrf	___lwmod@divisor+1,f
 10244  0CDF  0CF0               	rrf	___lwmod@divisor,f
 10245  0CE0  0B89               	decfsz	9,f
 10246  0CE1  2CDE               	goto	u2105
 10247  0CE2  3001               	movlw	1
 10248  0CE3  02F5               	subwf	___lwmod@counter,f
 10249  0CE4  1D03               	btfss	3,2
 10250  0CE5  2CD1               	goto	l2129
 10251  0CE6                     l2137:	
 10252  0CE6  0873               	movf	___lwmod@dividend+1,w
 10253  0CE7  00F1               	movwf	?___lwmod+1
 10254  0CE8  0872               	movf	___lwmod@dividend,w
 10255  0CE9  00F0               	movwf	?___lwmod
 10256  0CEA  0008               	return
 10257  0CEB                     __end_of___lwmod:	
 10258                           
 10259                           	psect	text26
 10260  0004                     __ptext26:	
 10261 ;; *************** function ___awdiv *****************
 10262 ;; Defined at:
 10263 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 10264 ;; Parameters:    Size  Location     Type
 10265 ;;  divisor         2    0[COMMON] int 
 10266 ;;  dividend        2    2[COMMON] int 
 10267 ;; Auto vars:     Size  Location     Type
 10268 ;;  quotient        2    7[COMMON] int 
 10269 ;;  sign            1    6[COMMON] unsigned char 
 10270 ;;  counter         1    5[COMMON] unsigned char 
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  2    0[COMMON] int 
 10273 ;; Registers used:
 10274 ;;		wreg, status,2, status,0
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10280 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10281 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10283 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;Total ram usage:        9 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; This function calls:
 10287 ;;		Nothing
 10288 ;; This function is called by:
 10289 ;;		_LCDWriteInt
 10290 ;;		_main
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           
 10295                           ;psect for function ___awdiv
 10296  0004                     ___awdiv:	
 10297                           
 10298                           ;incstack = 0
 10299                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10300  0004  01F6               	clrf	___awdiv@sign
 10301  0005  1FF1               	btfss	___awdiv@divisor+1,7
 10302  0006  280E               	goto	l1987
 10303  0007  09F0               	comf	___awdiv@divisor,f
 10304  0008  09F1               	comf	___awdiv@divisor+1,f
 10305  0009  0AF0               	incf	___awdiv@divisor,f
 10306  000A  1903               	skipnz
 10307  000B  0AF1               	incf	___awdiv@divisor+1,f
 10308  000C  01F6               	clrf	___awdiv@sign
 10309  000D  0AF6               	incf	___awdiv@sign,f
 10310  000E                     l1987:	
 10311  000E  1FF3               	btfss	___awdiv@dividend+1,7
 10312  000F  2819               	goto	l1993
 10313  0010  09F2               	comf	___awdiv@dividend,f
 10314  0011  09F3               	comf	___awdiv@dividend+1,f
 10315  0012  0AF2               	incf	___awdiv@dividend,f
 10316  0013  1903               	skipnz
 10317  0014  0AF3               	incf	___awdiv@dividend+1,f
 10318  0015  3001               	movlw	1
 10319  0016  00F4               	movwf	??___awdiv
 10320  0017  0874               	movf	??___awdiv,w
 10321  0018  06F6               	xorwf	___awdiv@sign,f
 10322  0019                     l1993:	
 10323  0019  01F7               	clrf	___awdiv@quotient
 10324  001A  01F8               	clrf	___awdiv@quotient+1
 10325  001B  0870               	movf	___awdiv@divisor,w
 10326  001C  0471               	iorwf	___awdiv@divisor+1,w
 10327  001D  1903               	btfsc	3,2
 10328  001E  2848               	goto	l2015
 10329  001F  01F5               	clrf	___awdiv@counter
 10330  0020  0AF5               	incf	___awdiv@counter,f
 10331  0021                     l2003:	
 10332  0021  1BF1               	btfsc	___awdiv@divisor+1,7
 10333  0022  282D               	goto	l2005
 10334  0023  3001               	movlw	1
 10335  0024                     u1805:	
 10336  0024  35F0               	lslf	___awdiv@divisor,f
 10337  0025  0DF1               	rlf	___awdiv@divisor+1,f
 10338  0026  0B89               	decfsz	9,f
 10339  0027  2824               	goto	u1805
 10340  0028  3001               	movlw	1
 10341  0029  00F4               	movwf	??___awdiv
 10342  002A  0874               	movf	??___awdiv,w
 10343  002B  07F5               	addwf	___awdiv@counter,f
 10344  002C  2821               	goto	l2003
 10345  002D                     l2005:	
 10346  002D  3001               	movlw	1
 10347  002E                     u1825:	
 10348  002E  35F7               	lslf	___awdiv@quotient,f
 10349  002F  0DF8               	rlf	___awdiv@quotient+1,f
 10350  0030  0B89               	decfsz	9,f
 10351  0031  282E               	goto	u1825
 10352  0032  0871               	movf	___awdiv@divisor+1,w
 10353  0033  0273               	subwf	___awdiv@dividend+1,w
 10354  0034  1D03               	skipz
 10355  0035  2838               	goto	u1835
 10356  0036  0870               	movf	___awdiv@divisor,w
 10357  0037  0272               	subwf	___awdiv@dividend,w
 10358  0038                     u1835:	
 10359  0038  1C03               	skipc
 10360  0039  283F               	goto	l2011
 10361  003A  0870               	movf	___awdiv@divisor,w
 10362  003B  02F2               	subwf	___awdiv@dividend,f
 10363  003C  0871               	movf	___awdiv@divisor+1,w
 10364  003D  3BF3               	subwfb	___awdiv@dividend+1,f
 10365  003E  1477               	bsf	___awdiv@quotient,0
 10366  003F                     l2011:	
 10367  003F  3001               	movlw	1
 10368  0040                     u1845:	
 10369  0040  36F1               	lsrf	___awdiv@divisor+1,f
 10370  0041  0CF0               	rrf	___awdiv@divisor,f
 10371  0042  0B89               	decfsz	9,f
 10372  0043  2840               	goto	u1845
 10373  0044  3001               	movlw	1
 10374  0045  02F5               	subwf	___awdiv@counter,f
 10375  0046  1D03               	btfss	3,2
 10376  0047  282D               	goto	l2005
 10377  0048                     l2015:	
 10378  0048  0876               	movf	___awdiv@sign,w
 10379  0049  1903               	btfsc	3,2
 10380  004A  2850               	goto	l2019
 10381  004B  09F7               	comf	___awdiv@quotient,f
 10382  004C  09F8               	comf	___awdiv@quotient+1,f
 10383  004D  0AF7               	incf	___awdiv@quotient,f
 10384  004E  1903               	skipnz
 10385  004F  0AF8               	incf	___awdiv@quotient+1,f
 10386  0050                     l2019:	
 10387  0050  0878               	movf	___awdiv@quotient+1,w
 10388  0051  00F1               	movwf	?___awdiv+1
 10389  0052  0877               	movf	___awdiv@quotient,w
 10390  0053  00F0               	movwf	?___awdiv
 10391  0054  0008               	return
 10392  0055                     __end_of___awdiv:	
 10393                           
 10394                           	psect	text27
 10395  0E59                     __ptext27:	
 10396 ;; *************** function _LCDWriteCharacter *****************
 10397 ;; Defined at:
 10398 ;;		line 140 in file "lcd.c"
 10399 ;; Parameters:    Size  Location     Type
 10400 ;;  character       1    wreg     const unsigned char 
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;  character       1    5[BANK0 ] const unsigned char 
 10403 ;;  base            2    6[BANK0 ] unsigned int 
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  1    wreg      void 
 10406 ;; Registers used:
 10407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10414 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10415 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10416 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;Total ram usage:        6 bytes
 10418 ;; Hardware stack levels used:    1
 10419 ;; Hardware stack levels required when called:    1
 10420 ;; This function calls:
 10421 ;;		_LCDWrite
 10422 ;;		___wmul
 10423 ;; This function is called by:
 10424 ;;		_LCDWriteInt
 10425 ;;		_main
 10426 ;;		_LCDWriteString
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           
 10430                           
 10431                           ;psect for function _LCDWriteCharacter
 10432  0E59                     _LCDWriteCharacter:	
 10433                           
 10434                           ;incstack = 0
 10435                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10436                           ;LCDWriteCharacter@character stored from wreg
 10437  0E59  0020               	movlb	0	; select bank0
 10438  0E5A  00A5               	movwf	LCDWriteCharacter@character
 10439                           
 10440                           ;lcd.c: 142: uint16_t base;
 10441                           ;lcd.c: 143: base = character - 0x20;
 10442  0E5B  0825               	movf	LCDWriteCharacter@character,w
 10443  0E5C  3EE0               	addlw	224
 10444  0E5D  00A6               	movwf	LCDWriteCharacter@base
 10445  0E5E  30FF               	movlw	255
 10446  0E5F  1803               	skipnc
 10447  0E60  3000               	movlw	0
 10448  0E61  00A7               	movwf	LCDWriteCharacter@base+1
 10449                           
 10450                           ;lcd.c: 144: base *= 3;
 10451  0E62  3003               	movlw	3
 10452  0E63  00F9               	movwf	___wmul@multiplier
 10453  0E64  3000               	movlw	0
 10454  0E65  00FA               	movwf	___wmul@multiplier+1
 10455  0E66  0827               	movf	LCDWriteCharacter@base+1,w
 10456  0E67  00FC               	movwf	___wmul@multiplicand+1
 10457  0E68  0826               	movf	LCDWriteCharacter@base,w
 10458  0E69  00FB               	movwf	___wmul@multiplicand
 10459  0E6A  318C  2417  318E   	fcall	___wmul
 10460  0E6D  087A               	movf	?___wmul+1,w
 10461  0E6E  0020               	movlb	0	; select bank0
 10462  0E6F  00A7               	movwf	LCDWriteCharacter@base+1
 10463  0E70  0879               	movf	?___wmul,w
 10464  0E71  00A6               	movwf	LCDWriteCharacter@base
 10465                           
 10466                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 10467  0E72  0827               	movf	LCDWriteCharacter@base+1,w
 10468  0E73  0085               	movwf	5
 10469  0E74  0826               	movf	LCDWriteCharacter@base,w
 10470  0E75  0084               	movwf	4
 10471  0E76  3000               	movlw	low (_fonts| (0+32768))
 10472  0E77  0784               	addwf	4,f
 10473  0E78  3088               	movlw	high (_fonts| (0+32768))
 10474  0E79  3D85               	addwfc	5,f
 10475  0E7A  0800               	movf	0,w	;code access
 10476  0E7B  00A2               	movwf	??_LCDWriteCharacter
 10477  0E7C  0822               	movf	??_LCDWriteCharacter,w
 10478  0E7D  00F0               	movwf	LCDWrite@data
 10479  0E7E  3001               	movlw	1
 10480  0E7F  318C  2474  318E   	fcall	_LCDWrite
 10481                           
 10482                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 10483  0E82  0020               	movlb	0	; select bank0
 10484  0E83  0826               	movf	LCDWriteCharacter@base,w
 10485  0E84  3E01               	addlw	1
 10486  0E85  00A2               	movwf	??_LCDWriteCharacter
 10487  0E86  3000               	movlw	0
 10488  0E87  3D27               	addwfc	LCDWriteCharacter@base+1,w
 10489  0E88  00A3               	movwf	??_LCDWriteCharacter+1
 10490  0E89  3000               	movlw	low (_fonts| (0+32768))
 10491  0E8A  0722               	addwf	??_LCDWriteCharacter,w
 10492  0E8B  0084               	movwf	4
 10493  0E8C  3088               	movlw	high (_fonts| (0+32768))
 10494  0E8D  3D23               	addwfc	??_LCDWriteCharacter+1,w
 10495  0E8E  0085               	movwf	5
 10496  0E8F  0800               	movf	0,w	;code access
 10497  0E90  00A4               	movwf	??_LCDWriteCharacter+2
 10498  0E91  0824               	movf	??_LCDWriteCharacter+2,w
 10499  0E92  00F0               	movwf	LCDWrite@data
 10500  0E93  3001               	movlw	1
 10501  0E94  318C  2474  318E   	fcall	_LCDWrite
 10502                           
 10503                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 10504  0E97  0020               	movlb	0	; select bank0
 10505  0E98  0826               	movf	LCDWriteCharacter@base,w
 10506  0E99  3E02               	addlw	2
 10507  0E9A  00A2               	movwf	??_LCDWriteCharacter
 10508  0E9B  3000               	movlw	0
 10509  0E9C  3D27               	addwfc	LCDWriteCharacter@base+1,w
 10510  0E9D  00A3               	movwf	??_LCDWriteCharacter+1
 10511  0E9E  3000               	movlw	low (_fonts| (0+32768))
 10512  0E9F  0722               	addwf	??_LCDWriteCharacter,w
 10513  0EA0  0084               	movwf	4
 10514  0EA1  3088               	movlw	high (_fonts| (0+32768))
 10515  0EA2  3D23               	addwfc	??_LCDWriteCharacter+1,w
 10516  0EA3  0085               	movwf	5
 10517  0EA4  0800               	movf	0,w	;code access
 10518  0EA5  00A4               	movwf	??_LCDWriteCharacter+2
 10519  0EA6  0824               	movf	??_LCDWriteCharacter+2,w
 10520  0EA7  00F0               	movwf	LCDWrite@data
 10521  0EA8  3001               	movlw	1
 10522  0EA9  318C  2474  318E   	fcall	_LCDWrite
 10523                           
 10524                           ;lcd.c: 148: LCDWrite(1, 0x00);
 10525  0EAC  01F0               	clrf	LCDWrite@data
 10526  0EAD  3001               	movlw	1
 10527  0EAE  318C  2474         	fcall	_LCDWrite
 10528  0EB0  0008               	return
 10529  0EB1                     __end_of_LCDWriteCharacter:	
 10530                           
 10531                           	psect	text28
 10532  0C17                     __ptext28:	
 10533 ;; *************** function ___wmul *****************
 10534 ;; Defined at:
 10535 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;  multiplier      2    9[COMMON] unsigned int 
 10538 ;;  multiplicand    2   11[COMMON] unsigned int 
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;  product         2    0[BANK0 ] unsigned int 
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  2    9[COMMON] unsigned int 
 10543 ;; Registers used:
 10544 ;;		wreg, status,2, status,0
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;Total ram usage:        6 bytes
 10555 ;; Hardware stack levels used:    1
 10556 ;; This function calls:
 10557 ;;		Nothing
 10558 ;; This function is called by:
 10559 ;;		_readAnalog
 10560 ;;		_LCDWriteCharacter
 10561 ;;		_main
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           
 10566                           ;psect for function ___wmul
 10567  0C17                     ___wmul:	
 10568                           
 10569                           ;incstack = 0
 10570                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10571  0C17  0020               	movlb	0	; select bank0
 10572  0C18  01A0               	clrf	___wmul@product
 10573  0C19  01A1               	clrf	___wmul@product+1
 10574  0C1A                     l1743:	
 10575  0C1A  1C79               	btfss	___wmul@multiplier,0
 10576  0C1B  2C21               	goto	l515
 10577  0C1C  087B               	movf	___wmul@multiplicand,w
 10578  0C1D  0020               	movlb	0	; select bank0
 10579  0C1E  07A0               	addwf	___wmul@product,f
 10580  0C1F  087C               	movf	___wmul@multiplicand+1,w
 10581  0C20  3DA1               	addwfc	___wmul@product+1,f
 10582  0C21                     l515:	
 10583  0C21  3001               	movlw	1
 10584  0C22                     u1465:	
 10585  0C22  35FB               	lslf	___wmul@multiplicand,f
 10586  0C23  0DFC               	rlf	___wmul@multiplicand+1,f
 10587  0C24  0B89               	decfsz	9,f
 10588  0C25  2C22               	goto	u1465
 10589  0C26  3001               	movlw	1
 10590  0C27                     u1475:	
 10591  0C27  36FA               	lsrf	___wmul@multiplier+1,f
 10592  0C28  0CF9               	rrf	___wmul@multiplier,f
 10593  0C29  0B89               	decfsz	9,f
 10594  0C2A  2C27               	goto	u1475
 10595  0C2B  0879               	movf	___wmul@multiplier,w
 10596  0C2C  047A               	iorwf	___wmul@multiplier+1,w
 10597  0C2D  1D03               	btfss	3,2
 10598  0C2E  2C1A               	goto	l1743
 10599  0C2F  0020               	movlb	0	; select bank0
 10600  0C30  0821               	movf	___wmul@product+1,w
 10601  0C31  00FA               	movwf	?___wmul+1
 10602  0C32  0820               	movf	___wmul@product,w
 10603  0C33  00F9               	movwf	?___wmul
 10604  0C34  0008               	return
 10605  0C35                     __end_of___wmul:	
 10606                           
 10607                           	psect	text29
 10608  0C74                     __ptext29:	
 10609 ;; *************** function _LCDWrite *****************
 10610 ;; Defined at:
 10611 ;;		line 280 in file "lcd.c"
 10612 ;; Parameters:    Size  Location     Type
 10613 ;;  data_or_comm    1    wreg     unsigned char 
 10614 ;;  data            1    0[COMMON] unsigned char 
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;  data_or_comm    1    2[COMMON] unsigned char 
 10617 ;;  i               1    4[COMMON] unsigned char 
 10618 ;;  d               1    3[COMMON] unsigned char 
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  1    wreg      void 
 10621 ;; Registers used:
 10622 ;;		wreg, status,2, status,0
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10628 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10631 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10632 ;;Total ram usage:        5 bytes
 10633 ;; Hardware stack levels used:    1
 10634 ;; This function calls:
 10635 ;;		Nothing
 10636 ;; This function is called by:
 10637 ;;		_gotoXY
 10638 ;;		_LCDWriteCharacter
 10639 ;;		_LCDClear
 10640 ;;		_LCDInit
 10641 ;;		_LCDBitmap
 10642 ;; This function uses a non-reentrant model
 10643 ;;
 10644                           
 10645                           
 10646                           ;psect for function _LCDWrite
 10647  0C74                     _LCDWrite:	
 10648                           
 10649                           ;incstack = 0
 10650                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 10651                           ;LCDWrite@data_or_command stored from wreg
 10652  0C74  00F2               	movwf	LCDWrite@data_or_command
 10653                           
 10654                           ;lcd.c: 282: uint8_t i,d;
 10655                           ;lcd.c: 284: d=data;
 10656  0C75  0870               	movf	LCDWrite@data,w
 10657  0C76  00F1               	movwf	??_LCDWrite
 10658  0C77  0871               	movf	??_LCDWrite,w
 10659  0C78  00F3               	movwf	LCDWrite@d
 10660                           
 10661                           ;lcd.c: 286: if(data_or_command == 0)
 10662  0C79  0872               	movf	LCDWrite@data_or_command,w
 10663  0C7A  1D03               	btfss	3,2
 10664  0C7B  2C7F               	goto	l188
 10665                           
 10666                           ;lcd.c: 287: {
 10667                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 10668  0C7C  0020               	movlb	0	; select bank0
 10669  0C7D  1116               	bcf	22,2	;volatile
 10670                           
 10671                           ;lcd.c: 289: }
 10672  0C7E  2C81               	goto	l189
 10673  0C7F                     l188:	
 10674                           
 10675                           ;lcd.c: 290: else
 10676                           ;lcd.c: 291: {
 10677                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 10678  0C7F  0020               	movlb	0	; select bank0
 10679  0C80  1516               	bsf	22,2	;volatile
 10680  0C81                     l189:	
 10681                           
 10682                           ;lcd.c: 293: }
 10683                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 10684  0C81  1096               	bcf	22,1	;volatile
 10685                           
 10686                           ;lcd.c: 297: for(i=0;i<8;i++)
 10687  0C82  01F4               	clrf	LCDWrite@i
 10688  0C83  3008               	movlw	8
 10689  0C84  0274               	subwf	LCDWrite@i,w
 10690  0C85  1803               	btfsc	3,0
 10691  0C86  2C97               	goto	l191
 10692  0C87                     l190:	
 10693                           
 10694                           ;lcd.c: 298: {
 10695                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 10696  0C87  1196               	bcf	22,3	;volatile
 10697                           
 10698                           ;lcd.c: 301: if(d&0x80)
 10699  0C88  1FF3               	btfss	LCDWrite@d,7
 10700  0C89  2C8B               	goto	l192
 10701                           
 10702                           ;lcd.c: 302: {
 10703                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 10704  0C8A  1596               	bsf	22,3	;volatile
 10705  0C8B                     l192:	
 10706                           
 10707                           ;lcd.c: 304: }
 10708                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 10709  0C8B  1616               	bsf	22,4	;volatile
 10710                           
 10711                           ;lcd.c: 308: d<<=1;
 10712  0C8C  1003               	clrc
 10713  0C8D  0DF3               	rlf	LCDWrite@d,f
 10714                           
 10715                           ;lcd.c: 310: LATAbits.LATA4=0;
 10716  0C8E  1216               	bcf	22,4	;volatile
 10717  0C8F  3001               	movlw	1
 10718  0C90  00F1               	movwf	??_LCDWrite
 10719  0C91  0871               	movf	??_LCDWrite,w
 10720  0C92  07F4               	addwf	LCDWrite@i,f
 10721  0C93  3008               	movlw	8
 10722  0C94  0274               	subwf	LCDWrite@i,w
 10723  0C95  1C03               	skipc
 10724  0C96  2C87               	goto	l190
 10725  0C97                     l191:	
 10726                           
 10727                           ;lcd.c: 311: }
 10728                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 10729  0C97  1496               	bsf	22,1	;volatile
 10730  0C98  0008               	return
 10731  0C99                     __end_of_LCDWrite:	
 10732                           
 10733                           	psect	text30
 10734  0F15                     __ptext30:	
 10735 ;; *************** function _Battery_State_Machine *****************
 10736 ;; Defined at:
 10737 ;;		line 34 in file "battery_charger.c"
 10738 ;; Parameters:    Size  Location     Type
 10739 ;;		None
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;		None
 10742 ;; Return value:  Size  Location     Type
 10743 ;;                  1    wreg      void 
 10744 ;; Registers used:
 10745 ;;		wreg, status,2, status,0
 10746 ;; Tracked objects:
 10747 ;;		On entry : 0/0
 10748 ;;		On exit  : 0/0
 10749 ;;		Unchanged: 0/0
 10750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;Total ram usage:        1 bytes
 10756 ;; Hardware stack levels used:    1
 10757 ;; This function calls:
 10758 ;;		Nothing
 10759 ;; This function is called by:
 10760 ;;		_main
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764                           
 10765                           ;psect for function _Battery_State_Machine
 10766  0F15                     _Battery_State_Machine:	
 10767                           
 10768                           ;battery_charger.c: 36: if(battery_state == PRECHARGE)
 10769                           
 10770                           ;incstack = 0
 10771                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 10772  0F15  3003               	movlw	3
 10773  0F16  0020               	movlb	0	; select bank0
 10774  0F17  066D               	xorwf	_battery_state,w
 10775  0F18  1D03               	btfss	3,2
 10776  0F19  2F3E               	goto	l2171
 10777                           
 10778                           ;battery_charger.c: 37: {
 10779                           ;battery_charger.c: 38: if(voltage[1] < 1075)
 10780  0F1A  085A               	movf	_voltage+3,w
 10781  0F1B  3A80               	xorlw	128
 10782  0F1C  00F0               	movwf	??_Battery_State_Machine
 10783  0F1D  3084               	movlw	132
 10784  0F1E  0270               	subwf	??_Battery_State_Machine,w
 10785  0F1F  1D03               	skipz
 10786  0F20  2F23               	goto	u2205
 10787  0F21  3033               	movlw	51
 10788  0F22  0259               	subwf	_voltage+2,w
 10789  0F23                     u2205:	
 10790  0F23  1803               	skipnc
 10791  0F24  2F33               	goto	l2169
 10792                           
 10793                           ;battery_charger.c: 39: {
 10794                           ;battery_charger.c: 40: if(state_counter)
 10795  0F25  0021               	movlb	1	; select bank1
 10796  0F26  0863               	movf	_state_counter^(0+128),w
 10797  0F27  0464               	iorwf	(_state_counter+1)^(0+128),w
 10798  0F28  1903               	btfsc	3,2
 10799  0F29  2F2F               	goto	l105
 10800                           
 10801                           ;battery_charger.c: 41: {
 10802                           ;battery_charger.c: 42: state_counter-=1;
 10803  0F2A  3001               	movlw	1
 10804  0F2B  02E3               	subwf	_state_counter^(0+128),f
 10805  0F2C  3000               	movlw	0
 10806  0F2D  3BE4               	subwfb	(_state_counter+1)^(0+128),f
 10807                           
 10808                           ;battery_charger.c: 43: }
 10809  0F2E  0008               	return
 10810  0F2F                     l105:	
 10811                           
 10812                           ;battery_charger.c: 44: else
 10813                           ;battery_charger.c: 45: {
 10814                           ;battery_charger.c: 46: battery_state = FAULT;
 10815  0F2F  0020               	movlb	0	; select bank0
 10816  0F30  01ED               	clrf	_battery_state
 10817  0F31  0AED               	incf	_battery_state,f
 10818                           
 10819                           ;battery_charger.c: 47: }
 10820                           ;battery_charger.c: 48: }
 10821  0F32  0008               	return
 10822  0F33                     l2169:	
 10823                           
 10824                           ;battery_charger.c: 49: else
 10825                           ;battery_charger.c: 50: {
 10826                           ;battery_charger.c: 51: battery_state = CHARGE;
 10827  0F33  3004               	movlw	4
 10828  0F34  00F0               	movwf	??_Battery_State_Machine
 10829  0F35  0870               	movf	??_Battery_State_Machine,w
 10830  0F36  0020               	movlb	0	; select bank0
 10831  0F37  00ED               	movwf	_battery_state
 10832                           
 10833                           ;battery_charger.c: 52: { Iref = 35; };
 10834  0F38  3023               	movlw	35
 10835  0F39  0021               	movlb	1	; select bank1
 10836  0F3A  00DF               	movwf	_Iref^(0+128)
 10837  0F3B  3000               	movlw	0
 10838  0F3C  00E0               	movwf	(_Iref^(0+128)+1)
 10839                           
 10840                           ;battery_charger.c: 53: }
 10841                           ;battery_charger.c: 54: }
 10842  0F3D  0008               	return
 10843  0F3E                     l2171:	
 10844                           
 10845                           ;battery_charger.c: 55: else if(battery_state == CHARGE)
 10846  0F3E  3004               	movlw	4
 10847  0F3F  0020               	movlb	0	; select bank0
 10848  0F40  066D               	xorwf	_battery_state,w
 10849  0F41  1D03               	btfss	3,2
 10850  0F42  2F6F               	goto	l2187
 10851                           
 10852                           ;battery_charger.c: 56: {
 10853                           ;battery_charger.c: 57: if((!Imode0))
 10854  0F43  086E               	movf	_Imode0,w
 10855  0F44  1D03               	btfss	3,2
 10856  0F45  0008               	return
 10857                           
 10858                           ;battery_charger.c: 58: {
 10859                           ;battery_charger.c: 59: if(current[1] < Imin)
 10860  0F46  0021               	movlb	1	; select bank1
 10861  0F47  0853               	movf	((_current+1)^(0+128)+2),w
 10862  0F48  3A80               	xorlw	128
 10863  0F49  00F0               	movwf	??_Battery_State_Machine
 10864  0F4A  0862               	movf	(_Imin+1)^(0+128),w
 10865  0F4B  3A80               	xorlw	128
 10866  0F4C  0270               	subwf	??_Battery_State_Machine,w
 10867  0F4D  1D03               	skipz
 10868  0F4E  2F51               	goto	u2245
 10869  0F4F  0861               	movf	_Imin^(0+128),w
 10870  0F50  0252               	subwf	(_current^(0+128)+2),w
 10871  0F51                     u2245:	
 10872  0F51  1803               	skipnc
 10873  0F52  2F62               	goto	l2183
 10874                           
 10875                           ;battery_charger.c: 60: {
 10876                           ;battery_charger.c: 61: IminCount-=1;
 10877  0F53  3001               	movlw	1
 10878  0F54  0021               	movlb	1	; select bank1
 10879  0F55  02E5               	subwf	_IminCount^(0+128),f
 10880  0F56  3000               	movlw	0
 10881  0F57  3BE6               	subwfb	(_IminCount+1)^(0+128),f
 10882                           
 10883                           ;battery_charger.c: 62: if(!IminCount)
 10884  0F58  0865               	movf	_IminCount^(0+128),w
 10885  0F59  0466               	iorwf	(_IminCount+1)^(0+128),w
 10886  0F5A  1D03               	btfss	3,2
 10887  0F5B  0008               	return
 10888                           
 10889                           ;battery_charger.c: 63: {
 10890                           ;battery_charger.c: 64: battery_state = FLOAT;
 10891  0F5C  3005               	movlw	5
 10892  0F5D  00F0               	movwf	??_Battery_State_Machine
 10893  0F5E  0870               	movf	??_Battery_State_Machine,w
 10894  0F5F  0020               	movlb	0	; select bank0
 10895  0F60  00ED               	movwf	_battery_state
 10896                           
 10897                           ;battery_charger.c: 65: }
 10898                           ;battery_charger.c: 66: }
 10899  0F61  0008               	return
 10900  0F62                     l2183:	
 10901                           
 10902                           ;battery_charger.c: 67: else
 10903                           ;battery_charger.c: 68: {
 10904                           ;battery_charger.c: 69: if(IminCount<10)IminCount += 2;
 10905  0F62  3000               	movlw	0
 10906  0F63  0021               	movlb	1	; select bank1
 10907  0F64  0266               	subwf	(_IminCount+1)^(0+128),w
 10908  0F65  300A               	movlw	10
 10909  0F66  1903               	skipnz
 10910  0F67  0265               	subwf	_IminCount^(0+128),w
 10911  0F68  1803               	skipnc
 10912  0F69  0008               	return
 10913  0F6A  3002               	movlw	2
 10914  0F6B  07E5               	addwf	_IminCount^(0+128),f
 10915  0F6C  3000               	movlw	0
 10916  0F6D  3DE6               	addwfc	(_IminCount+1)^(0+128),f
 10917                           
 10918                           ;battery_charger.c: 70: }
 10919                           ;battery_charger.c: 71: }
 10920                           ;battery_charger.c: 72: }
 10921  0F6E  0008               	return
 10922  0F6F                     l2187:	
 10923                           
 10924                           ;battery_charger.c: 73: else if(battery_state == FLOAT)
 10925  0F6F  3005               	movlw	5
 10926  0F70  0020               	movlb	0	; select bank0
 10927  0F71  066D               	xorwf	_battery_state,w
 10928  0F72  1D03               	btfss	3,2
 10929  0F73  0008               	return
 10930                           
 10931                           ;battery_charger.c: 74: {
 10932                           ;battery_charger.c: 75: { Vref = 1340; };
 10933  0F74  303C               	movlw	60
 10934  0F75  00EB               	movwf	_Vref
 10935  0F76  3005               	movlw	5
 10936  0F77  00EC               	movwf	_Vref+1
 10937                           
 10938                           ;battery_charger.c: 76: { Iref = 15; };
 10939  0F78  300F               	movlw	15
 10940  0F79  0021               	movlb	1	; select bank1
 10941  0F7A  00DF               	movwf	_Iref^(0+128)
 10942  0F7B  3000               	movlw	0
 10943  0F7C  00E0               	movwf	(_Iref^(0+128)+1)
 10944                           
 10945                           ;battery_charger.c: 80: {
 10946                           
 10947                           ;battery_charger.c: 77: }
 10948  0F7D  0008               	return
 10949  0F7E                     __end_of_Battery_State_Machine:	
 10950  007E                     btemp	set	126	;btemp
 10951  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    303
    Data        17
    BSS         83
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      79
    BANK1            80      0      71
    BANK2            48      0      16
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_calculateCurrent0
    _main->_calculateCurrent1
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   37705
                                             33 BANK0     22    22      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1816
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    4729
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    4729
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     464
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2333
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1932
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3688
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2809
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1907
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7426
                                              8 BANK0     16    11      5
                            _ADCRead (ARG)
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1042
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    2014
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1046
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _ADCRead (ARG)
     _LCDWriteCharacter (ARG)
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv (ARG)
     ___lwmod (ARG)
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               30      0      10       9       33.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jun 24 02:36:53 2018

                                  _j 0067               LCDWriteInt@fieldLength 002A  
            __size_of_PWM_Initialize 0015                          __CFG_CP$OFF 0000  
                                 l60 0BC7                                   l57 0BC0  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                          __CFG_LVP$ON 0000  
                                l105 0F2F                                  l190 0C87  
                                l191 0C97                                  l192 0C8B  
                                l408 055C                                  l515 0C21  
                                l188 0C7F                                  l189 0C81  
                      LCDClear@index 0079                                  l570 0F8F  
                                l683 0EF6                                  l684 0EFE  
                                l676 0EE3                                  l767 0144  
                                _GIE 005F                                  _RB2 006A  
                       __CFG_CPD$OFF 0000                      __end_of_ADCRead 0BCE  
                    _TMR2_Initialize 0B73                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_LCDInit 0D8C  
                       ?_LCDWriteInt 0028                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 002A                         ___ftdiv@sign 002F  
                               l2011 003F                                 l2003 0021  
                               l2005 002D                                 l2101 0120  
                               l2015 0048                                 l2031 0C5E  
                               l2111 0147                                 l2103 012E  
                               l2041 0175                                 l2019 0050  
                               l2115 0155                                 l2211 0DC7  
                               l2203 0DA5                                 l2133 0CDD  
                               l2061 01CC                                 l2109 013B  
                               l2301 00B3                                 l2127 0CC5  
                               l2047 018B                                 l2129 0CD1  
                               l2137 0CE6                                 l2241 0260  
                               l2225 0228                                 l2313 00D4  
                               l2171 0F3E                                 l2243 0264  
                               l2235 022F                                 l2083 00F0  
                               l2323 0DE8                                 l2155 03D2  
                               l2307 00BC                                 l2315 00D5  
                               l2403 050C                                 l2253 0276  
                               l2245 026C                                 l2237 025C  
                               l2069 01E5                                 l2405 0519  
                               l2413 053A                                 l2183 0F62  
                               l2255 029D                                 l2247 0272  
                               l2431 057E                                 l2407 051F  
                               l2169 0F33                                 l2329 0E2D  
                               l2281 0079                                 l2409 0524  
                               l2187 0F6F                                 l2259 02AB  
                               l2291 00A5                                 l2427 0575  
                               l2419 0553                                 l2363 0417  
                               l2293 00A7                                 l2541 07C8  
                               l2453 05B4                                 l1743 0C1A  
                               l2199 0DA0                                 l2287 0093  
                               l2447 05A8                                 l2391 04B5  
                               l2375 0438                                 l2457 05BA  
                               l2369 041D                                 l1763 0EC0  
                               l2387 04AC                                 l2459 05BD  
                               l1773 0EE8                                 l1765 0ECA  
                               l1863 0CBA                                 l1775 0EF0  
                               l1767 0ECF                                 l1759 0EB9  
                               l1857 0CA6                                 l1971 0FE9  
                               l1957 0FB0                                 l1949 0FA0  
                               l1975 0FF7                                 l1967 0FDE  
                               l1959 0FBE                                 l1993 0019  
                               l1987 000E                                 u2005 0121  
                               u2105 0CDE                                 u2035 013C  
                               u2205 0F23                                 u2125 02D6  
                               _LATA 0016                                 _LATB 0017  
                               u2135 032B                                 _LATC 0018  
                               u2145 0364                                 u2075 0CC8  
                               u1515 0EC5                                 u2315 0DB0  
                               u2155 03AE                                 u2340 0212  
                               u2245 0F51                                 u2405 028B  
                               u2095 0CD7                                 u1535 0EDE  
                               u1465 0C22                                 u1705 0FB3  
                               u2185 03DD                                 u1650 0D4F  
                               _T2PR 028D                                 u1475 0C27  
                               u2435 0BDD                                 u1635 0CA4  
                               u1555 0EEB                                 u1805 0024  
                               u2445 0BF3                                 u1645 0CB8  
                               u2285 0D97                                 u1725 0FBF  
                               u1735 0FD3                                 u2455 0067  
                               u1825 002E                                 u1905 019D  
                               u2545 0DE2                                 u1745 0FDF  
                               u2465 0073                                 u2625 049D  
                               u1835 0038                                 u1595 0F05  
                               u1915 01AD                                 u2555 0E27  
                               u2475 0083                                 u2715 0566  
                               u1845 0040                                 u1925 01CD  
                               u2485 008F                                 u1935 01DC  
                               u2495 009D                                 u2655 04FC  
                               u1945 01E6                                 u2817 00C6  
                               u2665 0509                                 u2827 0D05  
                               u2675 0517                                 u2837 0D14  
                               u2685 0544                                 u1975 00F7  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Imin 00E1                                 _Iref 00DF  
                               _Iout 00DD                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Vref 006B  
                               _main 03F9                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                        _state_counter 00E3  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                     __end_of_LCDClear 0CBF  
                       ___fttol@exp1 003D                         ___fttol@lval 0039  
                       main@fastLoop 0049  __size_of_Init_Battery_State_Machine 001D  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 0C99  
      __end_of_OSCILLATOR_Initialize 0B5B                      __end_of___aldiv 1000  
                              _ADACQ 009D                                _ADACT 0099  
                              _ADCAP 009B                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___awdiv 0055  
                              _ADPRE 009C                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      __end_of___ftdiv 0207  
                    ___awdiv@divisor 0070                      __end_of___fttol 015E  
                              _T2CON 028E                                _LATB0 00B8  
                              _T2HLT 028F                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 0CEB  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013               ?_Battery_State_Machine 0070  
                              _cc_cv 006A                        ___awtoft@sign 007D  
                              _fonts 0800                        ___ftpack@sign 0074  
                              main@j 0054                         main@slowLoop 004A  
                              status 0003                                wtemp0 007E  
                    __initialization 07CB                         __end_of_main 07CB  
                  readAnalog@channel 0026              __end_of_TMR2_Initialize 0B81  
                          ??_ADCRead 0073                               ??_main 0041  
                      ___fttol@sign1 0038                            ??_LCDInit 0075  
            LCDWrite@data_or_command 0072                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             _ADCON3 0096                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                     __end_of___awtoft 0C74  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                     __end_of___ftpack 0F15  
                             _RA6PPS 0F16                               _RA7PPS 0F17  
                     __CFG_WDTCCS$SC 0000                               _FVRCON 090C  
                             _OSCFRQ 0893                       __CFG_PWRTE$OFF 0000  
                             _Imode0 006E                         _CCPTMRS1bits 021F  
                          ??___aldiv 0078                               ___wmul 0C17  
                          ??___awdiv 0074                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 0BA4                            ??___ftdiv 0026  
                          ??___fttol 0034                            ??___lwmod 0074  
                             _gotoXY 0B91                               _button 0069  
                   ___awdiv@quotient 0077                               _warmup 0061  
                             _totals 00A0                         LCDWrite@data 0070  
                       LCDWriteInt@i 0037                         LCDWriteInt@j 0036  
           readAnalog@analog_channel 003A                            ?_LCDClear 0070  
                  _SYSTEM_Initialize 0CEB                 __size_of_LCDWriteInt 00B9  
            __end_of__initialization 07FD                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070                           ___ftdiv@f1 0023  
                         ___ftdiv@f2 0020                           ___ftdiv@f3 002B  
                         ___awtoft@c 0078               __end_of_PWM_Initialize 0BB9  
                         ___fttol@f1 0030                       __pcstackCOMMON 0070  
                       __pidataBANK0 0B51                         __pidataBANK2 0B81  
                ??_SYSTEM_Initialize 007B                        __end_of_fonts 092F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
                   ?_TMR2_Initialize 0070                           _cc_cv_mode 0D8C  
        __size_of_PWM7_LoadDutyValue 0016                    LCDWriteInt@F14393 00D8  
                  _calculateCurrent0 0DCF                    _calculateCurrent1 0E14  
          __end_of_SYSTEM_Initialize 0D1C                           __pbssBANK0 0057  
                         __pbssBANK1 00A0                   ?_calculateCurrent0 0070  
                 ?_calculateCurrent1 0070                           ??_LCDClear 0078  
                         ??_LCDWrite 0071                  ??_calculateCurrent0 003E  
                ??_calculateCurrent1 003E                      ?_PWM_Initialize 0070  
                         __pmaintext 03F9                              ?___wmul 0079  
                    __CFG_PPS1WAY$ON 0000           __end_of_PWM6_LoadDutyValue 0BE4  
                            ?_gotoXY 0075                              _ADCRead 0BB9  
                          ?___awtoft 0078                            ?___ftpack 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 0070  
                            _LCDInit 0D51            __end_of_calculateCurrent0 0E14  
          __end_of_calculateCurrent1 0E59                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 0051  
                     main@dutyCycle6 0055                       main@dutyCycle7 0052  
                         _lastButton 0068                           _readAnalog 02C0  
                            ___aldiv 0F7E                              ___awdiv 0004  
                         _readButton 0055                              ___ftdiv 015E  
                    __size_of___wmul 001E                              ___fttol 00D7  
                            ___lwmod 0CBF                      __size_of_gotoXY 0013  
                         ??___awtoft 007B                           ??___ftpack 0075  
                            _analogs 00C0                              __ptext1 0055  
                            __ptext2 02C0                              __ptext3 0F7E  
                            __ptext4 0BB9                              __ptext5 0D8C  
                            __ptext6 0E14                              __ptext7 0DCF  
                            __ptext8 00D7                              __ptext9 015E  
                        ?_cc_cv_mode 0070                _OSCILLATOR_Initialize 0B52  
                          _T2CONbits 028E                              _current 00D0  
                     ADCRead@channel 0073                     ___aldiv@dividend 0074  
           ??_PIN_MANAGER_Initialize 0070                              _samples 20D0  
         __size_of_SYSTEM_Initialize 0031                              clrloop0 0B5C  
                            _voltage 0057         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 0026  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 0B67                              initloop 0B68  
                   ___aldiv@quotient 0022                    _LCDWriteCharacter 0E59  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
         __size_of_calculateCurrent0 0045           __size_of_calculateCurrent1 0045  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0022  
                   __CFG_FEXTOSC$OFF 0000                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 0043                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0025                    __size_of_LCDWrite 0025  
                        ?_readAnalog 0026            __end_of_LCDWriteCharacter 0EB1  
                        ?_readButton 0070                       __end_of___wmul 0C35  
                     _ADC_Initialize 0C35                       __end_of_gotoXY 0BA4  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 00E5  
                start_initialization 07CB      __size_of_PIN_MANAGER_Initialize 0035  
                      ??_LCDWriteInt 002D                     ??_PWM_Initialize 0070  
                   __CFG_LPBOREN$OFF 0000                             ??___wmul 007D  
             __end_of_ADC_Initialize 0C54                          __pdataBANK0 006E  
                        __pdataBANK2 0120           __end_of_PWM7_LoadDutyValue 0BFA  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 20D0       __size_of_Battery_State_Machine 0069  
      __end_of_Battery_State_Machine 0F7E                            ___latbits 0002  
                      __pcstackBANK0 0020                   _PWM6_LoadDutyValue 0BCE  
           __size_of_TMR2_Initialize 000E                        _battery_state 006D  
 __end_of_Init_Battery_State_Machine 0C17           _Init_Battery_State_Machine 0BFA  
                __size_of_readAnalog 0139                  __size_of_readButton 0082  
                ?_PWM6_LoadDutyValue 0070                  __end_of_LCDWriteInt 02C0  
                          __pnvBANK0 006B                            __pnvBANK1 00DF  
                          _main$1021 004F                            _main$1022 004D  
             _PIN_MANAGER_Initialize 0D1C           __size_of_LCDWriteCharacter 0058  
                           ?___aldiv 0070                             ?___awdiv 0070  
                           ?___ftdiv 0020                             ?___fttol 0030  
                   LCDWriteInt@value 0028                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                             _T2CLKCON 0290  
                           _LCDClear 0C99                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 0C74  
                          clear_ram0 0B5B                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 0DCF                             _PIR4bits 0710  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0079                     __size_of_LCDInit 003B  
                        _LCDWriteInt 0207                             _Iflat_db 0063  
                  ??_TMR2_Initialize 0070                      readAnalog@value 003C  
                   main@power0OutOld 0045                     main@power1OutOld 0047  
                       ??_readAnalog 0028                         ??_readButton 0074  
            ??_OSCILLATOR_Initialize 0070                 LCDWriteInt@numPlaces 002B  
                   __size_of___aldiv 0082                     __size_of___awdiv 0051  
                   __size_of___ftdiv 00A9                     __size_of___fttol 0087  
                   __size_of___lwmod 002C                          _readButtons 005F  
                           ___awtoft 0C54                             ___ftpack 0EB1  
                           _channels 0120                             __ptext10 0C54  
                           __ptext11 0EB1                             __ptext20 0BFA  
                           __ptext12 0CEB                             __ptext21 0C35  
                           __ptext13 0B73                             __ptext30 0F15  
                           __ptext22 0BE4                             __ptext14 0BA4  
                           __ptext23 0BCE                             __ptext15 0D1C  
                           __ptext24 0207                             __ptext16 0B52  
                           __ptext25 0CBF                             __ptext17 0D51  
                           __ptext26 0004                             __ptext18 0C99  
                           __ptext27 0E59                             __ptext19 0B91  
                           __ptext28 0C17                             __ptext29 0C74  
                    LCDWriteInt@sign 002C                   __end_of_readAnalog 03F9  
                 __end_of_readButton 00D7                        __size_of_main 03D2  
               __CFG_WDTCWS$WDTCWS_7 0000          PIN_MANAGER_Initialize@state 0070  
                        _sampleIndex 0065                   _PWM7_LoadDutyValue 0BE4  
        ?_Init_Battery_State_Machine 0070                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0031              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                     ??_ADC_Initialize 0070  
       PWM6_LoadDutyValue@dutyCycle6 0070                        __pstringtext1 0800  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075                         ___aldiv@sign 0021  
              _Battery_State_Machine 0F15       __end_of_PIN_MANAGER_Initialize 0D51  
                       main@VIn0_Old 0043                         main@VIn1_Old 004B  
