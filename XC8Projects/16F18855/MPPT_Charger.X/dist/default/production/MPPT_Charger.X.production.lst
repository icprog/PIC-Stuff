

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 26 03:26:32 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	dabs	1,0x620,48
    66                           	dabs	1,0x5A0,80
    67                           	dabs	1,0x520,80
    68                           	dabs	1,0x4A0,80
    69                           	dabs	1,0x420,80
    70                           	dabs	1,0x3A0,80
    71                           	dabs	1,0x320,80
    72                           	dabs	1,0x2A0,80
    73                           	dabs	1,0x220,80
    74                           	dabs	1,0x1D0,32
    75                           	dabs	1,0x2120,0,_samples
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 1.45
    79                           ; Generated 16/11/2017 GMT
    80                           ; 
    81                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F18855 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  001C                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  008E                     	;# 
   145  008F                     	;# 
   146  0090                     	;# 
   147  0090                     	;# 
   148  0091                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0095                     	;# 
   152  0096                     	;# 
   153  0097                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009A                     	;# 
   157  009B                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0110                     	;# 
   167  0110                     	;# 
   168  0111                     	;# 
   169  0112                     	;# 
   170  0112                     	;# 
   171  0113                     	;# 
   172  0114                     	;# 
   173  0114                     	;# 
   174  0115                     	;# 
   175  0116                     	;# 
   176  0116                     	;# 
   177  0117                     	;# 
   178  0119                     	;# 
   179  0119                     	;# 
   180  0119                     	;# 
   181  011A                     	;# 
   182  011A                     	;# 
   183  011A                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011B                     	;# 
   187  011B                     	;# 
   188  011B                     	;# 
   189  011C                     	;# 
   190  011C                     	;# 
   191  011C                     	;# 
   192  011D                     	;# 
   193  011D                     	;# 
   194  011D                     	;# 
   195  011E                     	;# 
   196  011E                     	;# 
   197  011E                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  011F                     	;# 
   201  011F                     	;# 
   202  011F                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  018E                     	;# 
   206  018F                     	;# 
   207  0190                     	;# 
   208  0191                     	;# 
   209  0192                     	;# 
   210  0196                     	;# 
   211  0197                     	;# 
   212  0198                     	;# 
   213  0199                     	;# 
   214  019A                     	;# 
   215  019B                     	;# 
   216  019C                     	;# 
   217  020C                     	;# 
   218  020C                     	;# 
   219  020D                     	;# 
   220  020E                     	;# 
   221  020F                     	;# 
   222  020F                     	;# 
   223  0210                     	;# 
   224  0210                     	;# 
   225  0211                     	;# 
   226  0211                     	;# 
   227  0212                     	;# 
   228  0212                     	;# 
   229  0213                     	;# 
   230  0214                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  0218                     	;# 
   238  0218                     	;# 
   239  0219                     	;# 
   240  021A                     	;# 
   241  021B                     	;# 
   242  021B                     	;# 
   243  021C                     	;# 
   244  021C                     	;# 
   245  021D                     	;# 
   246  021D                     	;# 
   247  021E                     	;# 
   248  021F                     	;# 
   249  028C                     	;# 
   250  028C                     	;# 
   251  028D                     	;# 
   252  028D                     	;# 
   253  028E                     	;# 
   254  028F                     	;# 
   255  0290                     	;# 
   256  0290                     	;# 
   257  0291                     	;# 
   258  0292                     	;# 
   259  0292                     	;# 
   260  0293                     	;# 
   261  0293                     	;# 
   262  0294                     	;# 
   263  0295                     	;# 
   264  0296                     	;# 
   265  0296                     	;# 
   266  0297                     	;# 
   267  0298                     	;# 
   268  0298                     	;# 
   269  0299                     	;# 
   270  0299                     	;# 
   271  029A                     	;# 
   272  029B                     	;# 
   273  029C                     	;# 
   274  029C                     	;# 
   275  029D                     	;# 
   276  030C                     	;# 
   277  030C                     	;# 
   278  030D                     	;# 
   279  030E                     	;# 
   280  030F                     	;# 
   281  0310                     	;# 
   282  0310                     	;# 
   283  0311                     	;# 
   284  0312                     	;# 
   285  0313                     	;# 
   286  0314                     	;# 
   287  0314                     	;# 
   288  0315                     	;# 
   289  0316                     	;# 
   290  0317                     	;# 
   291  0318                     	;# 
   292  0318                     	;# 
   293  0319                     	;# 
   294  031A                     	;# 
   295  031B                     	;# 
   296  031C                     	;# 
   297  031C                     	;# 
   298  031D                     	;# 
   299  031E                     	;# 
   300  031F                     	;# 
   301  038C                     	;# 
   302  038D                     	;# 
   303  038E                     	;# 
   304  0390                     	;# 
   305  0391                     	;# 
   306  0392                     	;# 
   307  040C                     	;# 
   308  040D                     	;# 
   309  040E                     	;# 
   310  040F                     	;# 
   311  0410                     	;# 
   312  0411                     	;# 
   313  0416                     	;# 
   314  0416                     	;# 
   315  0417                     	;# 
   316  0418                     	;# 
   317  0418                     	;# 
   318  0419                     	;# 
   319  041A                     	;# 
   320  041A                     	;# 
   321  041B                     	;# 
   322  041C                     	;# 
   323  041C                     	;# 
   324  041D                     	;# 
   325  041E                     	;# 
   326  041F                     	;# 
   327  048C                     	;# 
   328  048C                     	;# 
   329  048D                     	;# 
   330  048E                     	;# 
   331  048F                     	;# 
   332  048F                     	;# 
   333  0490                     	;# 
   334  0491                     	;# 
   335  0492                     	;# 
   336  0492                     	;# 
   337  0493                     	;# 
   338  0494                     	;# 
   339  0495                     	;# 
   340  0495                     	;# 
   341  0496                     	;# 
   342  0497                     	;# 
   343  0498                     	;# 
   344  0499                     	;# 
   345  049A                     	;# 
   346  049B                     	;# 
   347  049C                     	;# 
   348  049D                     	;# 
   349  050C                     	;# 
   350  050C                     	;# 
   351  050D                     	;# 
   352  050E                     	;# 
   353  050F                     	;# 
   354  050F                     	;# 
   355  0510                     	;# 
   356  0511                     	;# 
   357  0512                     	;# 
   358  0512                     	;# 
   359  0513                     	;# 
   360  0514                     	;# 
   361  0515                     	;# 
   362  0515                     	;# 
   363  0516                     	;# 
   364  0517                     	;# 
   365  0518                     	;# 
   366  0519                     	;# 
   367  051A                     	;# 
   368  051B                     	;# 
   369  051C                     	;# 
   370  051D                     	;# 
   371  058C                     	;# 
   372  058C                     	;# 
   373  058D                     	;# 
   374  058E                     	;# 
   375  058F                     	;# 
   376  058F                     	;# 
   377  0590                     	;# 
   378  0591                     	;# 
   379  0592                     	;# 
   380  0593                     	;# 
   381  060C                     	;# 
   382  060D                     	;# 
   383  060E                     	;# 
   384  060F                     	;# 
   385  0610                     	;# 
   386  0611                     	;# 
   387  0612                     	;# 
   388  0613                     	;# 
   389  0614                     	;# 
   390  0616                     	;# 
   391  0617                     	;# 
   392  0618                     	;# 
   393  0619                     	;# 
   394  061A                     	;# 
   395  061B                     	;# 
   396  061C                     	;# 
   397  061D                     	;# 
   398  061E                     	;# 
   399  068C                     	;# 
   400  068D                     	;# 
   401  068E                     	;# 
   402  068F                     	;# 
   403  0690                     	;# 
   404  0691                     	;# 
   405  0692                     	;# 
   406  0693                     	;# 
   407  0694                     	;# 
   408  070C                     	;# 
   409  070D                     	;# 
   410  070E                     	;# 
   411  070F                     	;# 
   412  0710                     	;# 
   413  0711                     	;# 
   414  0712                     	;# 
   415  0713                     	;# 
   416  0714                     	;# 
   417  0716                     	;# 
   418  0717                     	;# 
   419  0718                     	;# 
   420  0719                     	;# 
   421  071A                     	;# 
   422  071B                     	;# 
   423  071C                     	;# 
   424  071D                     	;# 
   425  071E                     	;# 
   426  0796                     	;# 
   427  0797                     	;# 
   428  0798                     	;# 
   429  0799                     	;# 
   430  079A                     	;# 
   431  079B                     	;# 
   432  080C                     	;# 
   433  080D                     	;# 
   434  080E                     	;# 
   435  080F                     	;# 
   436  0810                     	;# 
   437  0811                     	;# 
   438  0812                     	;# 
   439  0813                     	;# 
   440  0814                     	;# 
   441  081A                     	;# 
   442  081B                     	;# 
   443  081C                     	;# 
   444  081D                     	;# 
   445  081E                     	;# 
   446  081F                     	;# 
   447  088C                     	;# 
   448  088D                     	;# 
   449  088E                     	;# 
   450  088F                     	;# 
   451  0890                     	;# 
   452  0891                     	;# 
   453  0892                     	;# 
   454  0893                     	;# 
   455  0895                     	;# 
   456  0896                     	;# 
   457  0897                     	;# 
   458  0898                     	;# 
   459  0899                     	;# 
   460  089A                     	;# 
   461  089B                     	;# 
   462  090C                     	;# 
   463  090E                     	;# 
   464  090F                     	;# 
   465  091F                     	;# 
   466  091F                     	;# 
   467  098F                     	;# 
   468  098F                     	;# 
   469  0990                     	;# 
   470  0991                     	;# 
   471  0992                     	;# 
   472  0993                     	;# 
   473  0994                     	;# 
   474  0995                     	;# 
   475  0996                     	;# 
   476  0997                     	;# 
   477  0E0F                     	;# 
   478  0E10                     	;# 
   479  0E11                     	;# 
   480  0E12                     	;# 
   481  0E13                     	;# 
   482  0E14                     	;# 
   483  0E15                     	;# 
   484  0E16                     	;# 
   485  0E17                     	;# 
   486  0E18                     	;# 
   487  0E19                     	;# 
   488  0E1A                     	;# 
   489  0E1B                     	;# 
   490  0E1C                     	;# 
   491  0E1D                     	;# 
   492  0E1E                     	;# 
   493  0E1F                     	;# 
   494  0E20                     	;# 
   495  0E21                     	;# 
   496  0E22                     	;# 
   497  0E23                     	;# 
   498  0E24                     	;# 
   499  0E25                     	;# 
   500  0E26                     	;# 
   501  0E27                     	;# 
   502  0E28                     	;# 
   503  0E29                     	;# 
   504  0E2A                     	;# 
   505  0E2B                     	;# 
   506  0E2C                     	;# 
   507  0E2D                     	;# 
   508  0E2E                     	;# 
   509  0E2F                     	;# 
   510  0E30                     	;# 
   511  0E31                     	;# 
   512  0E32                     	;# 
   513  0E33                     	;# 
   514  0E34                     	;# 
   515  0E35                     	;# 
   516  0E36                     	;# 
   517  0E37                     	;# 
   518  0E8F                     	;# 
   519  0E90                     	;# 
   520  0E91                     	;# 
   521  0E92                     	;# 
   522  0E93                     	;# 
   523  0E94                     	;# 
   524  0E95                     	;# 
   525  0E96                     	;# 
   526  0E97                     	;# 
   527  0E9C                     	;# 
   528  0E9D                     	;# 
   529  0E9E                     	;# 
   530  0EA1                     	;# 
   531  0EA2                     	;# 
   532  0EA3                     	;# 
   533  0EA4                     	;# 
   534  0EA5                     	;# 
   535  0EA9                     	;# 
   536  0EAA                     	;# 
   537  0EAB                     	;# 
   538  0EAC                     	;# 
   539  0EB1                     	;# 
   540  0EB2                     	;# 
   541  0EB3                     	;# 
   542  0EB8                     	;# 
   543  0EB9                     	;# 
   544  0EBA                     	;# 
   545  0EBB                     	;# 
   546  0EBC                     	;# 
   547  0EBD                     	;# 
   548  0EBE                     	;# 
   549  0EC3                     	;# 
   550  0EC5                     	;# 
   551  0EC6                     	;# 
   552  0EC7                     	;# 
   553  0EC8                     	;# 
   554  0EC9                     	;# 
   555  0ECA                     	;# 
   556  0ECB                     	;# 
   557  0ECC                     	;# 
   558  0F10                     	;# 
   559  0F11                     	;# 
   560  0F12                     	;# 
   561  0F13                     	;# 
   562  0F14                     	;# 
   563  0F15                     	;# 
   564  0F16                     	;# 
   565  0F17                     	;# 
   566  0F18                     	;# 
   567  0F19                     	;# 
   568  0F1A                     	;# 
   569  0F1B                     	;# 
   570  0F1C                     	;# 
   571  0F1D                     	;# 
   572  0F1E                     	;# 
   573  0F1F                     	;# 
   574  0F20                     	;# 
   575  0F21                     	;# 
   576  0F22                     	;# 
   577  0F23                     	;# 
   578  0F24                     	;# 
   579  0F25                     	;# 
   580  0F26                     	;# 
   581  0F27                     	;# 
   582  0F38                     	;# 
   583  0F39                     	;# 
   584  0F3A                     	;# 
   585  0F3B                     	;# 
   586  0F3C                     	;# 
   587  0F3D                     	;# 
   588  0F3E                     	;# 
   589  0F3F                     	;# 
   590  0F40                     	;# 
   591  0F41                     	;# 
   592  0F43                     	;# 
   593  0F44                     	;# 
   594  0F45                     	;# 
   595  0F46                     	;# 
   596  0F47                     	;# 
   597  0F48                     	;# 
   598  0F49                     	;# 
   599  0F4A                     	;# 
   600  0F4B                     	;# 
   601  0F4C                     	;# 
   602  0F4E                     	;# 
   603  0F4F                     	;# 
   604  0F50                     	;# 
   605  0F51                     	;# 
   606  0F52                     	;# 
   607  0F53                     	;# 
   608  0F54                     	;# 
   609  0F55                     	;# 
   610  0F56                     	;# 
   611  0F57                     	;# 
   612  0F65                     	;# 
   613  0F68                     	;# 
   614  0F69                     	;# 
   615  0F6A                     	;# 
   616  0F6B                     	;# 
   617  0FE4                     	;# 
   618  0FE5                     	;# 
   619  0FE6                     	;# 
   620  0FE7                     	;# 
   621  0FE8                     	;# 
   622  0FE9                     	;# 
   623  0FEA                     	;# 
   624  0FEB                     	;# 
   625  0FED                     	;# 
   626  0FEE                     	;# 
   627  0FEF                     	;# 
   628  0000                     	;# 
   629  0001                     	;# 
   630  0002                     	;# 
   631  0003                     	;# 
   632  0004                     	;# 
   633  0005                     	;# 
   634  0006                     	;# 
   635  0007                     	;# 
   636  0008                     	;# 
   637  0009                     	;# 
   638  000A                     	;# 
   639  000B                     	;# 
   640  000C                     	;# 
   641  000D                     	;# 
   642  000E                     	;# 
   643  0010                     	;# 
   644  0011                     	;# 
   645  0012                     	;# 
   646  0013                     	;# 
   647  0016                     	;# 
   648  0017                     	;# 
   649  0018                     	;# 
   650  001C                     	;# 
   651  001C                     	;# 
   652  001D                     	;# 
   653  001D                     	;# 
   654  001E                     	;# 
   655  001F                     	;# 
   656  008C                     	;# 
   657  008C                     	;# 
   658  008D                     	;# 
   659  008E                     	;# 
   660  008E                     	;# 
   661  008F                     	;# 
   662  0090                     	;# 
   663  0090                     	;# 
   664  0091                     	;# 
   665  0093                     	;# 
   666  0094                     	;# 
   667  0095                     	;# 
   668  0096                     	;# 
   669  0097                     	;# 
   670  0098                     	;# 
   671  0099                     	;# 
   672  009A                     	;# 
   673  009B                     	;# 
   674  009C                     	;# 
   675  009D                     	;# 
   676  009E                     	;# 
   677  010C                     	;# 
   678  010D                     	;# 
   679  010E                     	;# 
   680  010E                     	;# 
   681  010F                     	;# 
   682  0110                     	;# 
   683  0110                     	;# 
   684  0111                     	;# 
   685  0112                     	;# 
   686  0112                     	;# 
   687  0113                     	;# 
   688  0114                     	;# 
   689  0114                     	;# 
   690  0115                     	;# 
   691  0116                     	;# 
   692  0116                     	;# 
   693  0117                     	;# 
   694  0119                     	;# 
   695  0119                     	;# 
   696  0119                     	;# 
   697  011A                     	;# 
   698  011A                     	;# 
   699  011A                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011B                     	;# 
   703  011B                     	;# 
   704  011B                     	;# 
   705  011C                     	;# 
   706  011C                     	;# 
   707  011C                     	;# 
   708  011D                     	;# 
   709  011D                     	;# 
   710  011D                     	;# 
   711  011E                     	;# 
   712  011E                     	;# 
   713  011E                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  011F                     	;# 
   717  011F                     	;# 
   718  011F                     	;# 
   719  018C                     	;# 
   720  018D                     	;# 
   721  018E                     	;# 
   722  018F                     	;# 
   723  0190                     	;# 
   724  0191                     	;# 
   725  0192                     	;# 
   726  0196                     	;# 
   727  0197                     	;# 
   728  0198                     	;# 
   729  0199                     	;# 
   730  019A                     	;# 
   731  019B                     	;# 
   732  019C                     	;# 
   733  020C                     	;# 
   734  020C                     	;# 
   735  020D                     	;# 
   736  020E                     	;# 
   737  020F                     	;# 
   738  020F                     	;# 
   739  0210                     	;# 
   740  0210                     	;# 
   741  0211                     	;# 
   742  0211                     	;# 
   743  0212                     	;# 
   744  0212                     	;# 
   745  0213                     	;# 
   746  0214                     	;# 
   747  0215                     	;# 
   748  0215                     	;# 
   749  0216                     	;# 
   750  0216                     	;# 
   751  0217                     	;# 
   752  0217                     	;# 
   753  0218                     	;# 
   754  0218                     	;# 
   755  0219                     	;# 
   756  021A                     	;# 
   757  021B                     	;# 
   758  021B                     	;# 
   759  021C                     	;# 
   760  021C                     	;# 
   761  021D                     	;# 
   762  021D                     	;# 
   763  021E                     	;# 
   764  021F                     	;# 
   765  028C                     	;# 
   766  028C                     	;# 
   767  028D                     	;# 
   768  028D                     	;# 
   769  028E                     	;# 
   770  028F                     	;# 
   771  0290                     	;# 
   772  0290                     	;# 
   773  0291                     	;# 
   774  0292                     	;# 
   775  0292                     	;# 
   776  0293                     	;# 
   777  0293                     	;# 
   778  0294                     	;# 
   779  0295                     	;# 
   780  0296                     	;# 
   781  0296                     	;# 
   782  0297                     	;# 
   783  0298                     	;# 
   784  0298                     	;# 
   785  0299                     	;# 
   786  0299                     	;# 
   787  029A                     	;# 
   788  029B                     	;# 
   789  029C                     	;# 
   790  029C                     	;# 
   791  029D                     	;# 
   792  030C                     	;# 
   793  030C                     	;# 
   794  030D                     	;# 
   795  030E                     	;# 
   796  030F                     	;# 
   797  0310                     	;# 
   798  0310                     	;# 
   799  0311                     	;# 
   800  0312                     	;# 
   801  0313                     	;# 
   802  0314                     	;# 
   803  0314                     	;# 
   804  0315                     	;# 
   805  0316                     	;# 
   806  0317                     	;# 
   807  0318                     	;# 
   808  0318                     	;# 
   809  0319                     	;# 
   810  031A                     	;# 
   811  031B                     	;# 
   812  031C                     	;# 
   813  031C                     	;# 
   814  031D                     	;# 
   815  031E                     	;# 
   816  031F                     	;# 
   817  038C                     	;# 
   818  038D                     	;# 
   819  038E                     	;# 
   820  0390                     	;# 
   821  0391                     	;# 
   822  0392                     	;# 
   823  040C                     	;# 
   824  040D                     	;# 
   825  040E                     	;# 
   826  040F                     	;# 
   827  0410                     	;# 
   828  0411                     	;# 
   829  0416                     	;# 
   830  0416                     	;# 
   831  0417                     	;# 
   832  0418                     	;# 
   833  0418                     	;# 
   834  0419                     	;# 
   835  041A                     	;# 
   836  041A                     	;# 
   837  041B                     	;# 
   838  041C                     	;# 
   839  041C                     	;# 
   840  041D                     	;# 
   841  041E                     	;# 
   842  041F                     	;# 
   843  048C                     	;# 
   844  048C                     	;# 
   845  048D                     	;# 
   846  048E                     	;# 
   847  048F                     	;# 
   848  048F                     	;# 
   849  0490                     	;# 
   850  0491                     	;# 
   851  0492                     	;# 
   852  0492                     	;# 
   853  0493                     	;# 
   854  0494                     	;# 
   855  0495                     	;# 
   856  0495                     	;# 
   857  0496                     	;# 
   858  0497                     	;# 
   859  0498                     	;# 
   860  0499                     	;# 
   861  049A                     	;# 
   862  049B                     	;# 
   863  049C                     	;# 
   864  049D                     	;# 
   865  050C                     	;# 
   866  050C                     	;# 
   867  050D                     	;# 
   868  050E                     	;# 
   869  050F                     	;# 
   870  050F                     	;# 
   871  0510                     	;# 
   872  0511                     	;# 
   873  0512                     	;# 
   874  0512                     	;# 
   875  0513                     	;# 
   876  0514                     	;# 
   877  0515                     	;# 
   878  0515                     	;# 
   879  0516                     	;# 
   880  0517                     	;# 
   881  0518                     	;# 
   882  0519                     	;# 
   883  051A                     	;# 
   884  051B                     	;# 
   885  051C                     	;# 
   886  051D                     	;# 
   887  058C                     	;# 
   888  058C                     	;# 
   889  058D                     	;# 
   890  058E                     	;# 
   891  058F                     	;# 
   892  058F                     	;# 
   893  0590                     	;# 
   894  0591                     	;# 
   895  0592                     	;# 
   896  0593                     	;# 
   897  060C                     	;# 
   898  060D                     	;# 
   899  060E                     	;# 
   900  060F                     	;# 
   901  0610                     	;# 
   902  0611                     	;# 
   903  0612                     	;# 
   904  0613                     	;# 
   905  0614                     	;# 
   906  0616                     	;# 
   907  0617                     	;# 
   908  0618                     	;# 
   909  0619                     	;# 
   910  061A                     	;# 
   911  061B                     	;# 
   912  061C                     	;# 
   913  061D                     	;# 
   914  061E                     	;# 
   915  068C                     	;# 
   916  068D                     	;# 
   917  068E                     	;# 
   918  068F                     	;# 
   919  0690                     	;# 
   920  0691                     	;# 
   921  0692                     	;# 
   922  0693                     	;# 
   923  0694                     	;# 
   924  070C                     	;# 
   925  070D                     	;# 
   926  070E                     	;# 
   927  070F                     	;# 
   928  0710                     	;# 
   929  0711                     	;# 
   930  0712                     	;# 
   931  0713                     	;# 
   932  0714                     	;# 
   933  0716                     	;# 
   934  0717                     	;# 
   935  0718                     	;# 
   936  0719                     	;# 
   937  071A                     	;# 
   938  071B                     	;# 
   939  071C                     	;# 
   940  071D                     	;# 
   941  071E                     	;# 
   942  0796                     	;# 
   943  0797                     	;# 
   944  0798                     	;# 
   945  0799                     	;# 
   946  079A                     	;# 
   947  079B                     	;# 
   948  080C                     	;# 
   949  080D                     	;# 
   950  080E                     	;# 
   951  080F                     	;# 
   952  0810                     	;# 
   953  0811                     	;# 
   954  0812                     	;# 
   955  0813                     	;# 
   956  0814                     	;# 
   957  081A                     	;# 
   958  081B                     	;# 
   959  081C                     	;# 
   960  081D                     	;# 
   961  081E                     	;# 
   962  081F                     	;# 
   963  088C                     	;# 
   964  088D                     	;# 
   965  088E                     	;# 
   966  088F                     	;# 
   967  0890                     	;# 
   968  0891                     	;# 
   969  0892                     	;# 
   970  0893                     	;# 
   971  0895                     	;# 
   972  0896                     	;# 
   973  0897                     	;# 
   974  0898                     	;# 
   975  0899                     	;# 
   976  089A                     	;# 
   977  089B                     	;# 
   978  090C                     	;# 
   979  090E                     	;# 
   980  090F                     	;# 
   981  091F                     	;# 
   982  091F                     	;# 
   983  098F                     	;# 
   984  098F                     	;# 
   985  0990                     	;# 
   986  0991                     	;# 
   987  0992                     	;# 
   988  0993                     	;# 
   989  0994                     	;# 
   990  0995                     	;# 
   991  0996                     	;# 
   992  0997                     	;# 
   993  0E0F                     	;# 
   994  0E10                     	;# 
   995  0E11                     	;# 
   996  0E12                     	;# 
   997  0E13                     	;# 
   998  0E14                     	;# 
   999  0E15                     	;# 
  1000  0E16                     	;# 
  1001  0E17                     	;# 
  1002  0E18                     	;# 
  1003  0E19                     	;# 
  1004  0E1A                     	;# 
  1005  0E1B                     	;# 
  1006  0E1C                     	;# 
  1007  0E1D                     	;# 
  1008  0E1E                     	;# 
  1009  0E1F                     	;# 
  1010  0E20                     	;# 
  1011  0E21                     	;# 
  1012  0E22                     	;# 
  1013  0E23                     	;# 
  1014  0E24                     	;# 
  1015  0E25                     	;# 
  1016  0E26                     	;# 
  1017  0E27                     	;# 
  1018  0E28                     	;# 
  1019  0E29                     	;# 
  1020  0E2A                     	;# 
  1021  0E2B                     	;# 
  1022  0E2C                     	;# 
  1023  0E2D                     	;# 
  1024  0E2E                     	;# 
  1025  0E2F                     	;# 
  1026  0E30                     	;# 
  1027  0E31                     	;# 
  1028  0E32                     	;# 
  1029  0E33                     	;# 
  1030  0E34                     	;# 
  1031  0E35                     	;# 
  1032  0E36                     	;# 
  1033  0E37                     	;# 
  1034  0E8F                     	;# 
  1035  0E90                     	;# 
  1036  0E91                     	;# 
  1037  0E92                     	;# 
  1038  0E93                     	;# 
  1039  0E94                     	;# 
  1040  0E95                     	;# 
  1041  0E96                     	;# 
  1042  0E97                     	;# 
  1043  0E9C                     	;# 
  1044  0E9D                     	;# 
  1045  0E9E                     	;# 
  1046  0EA1                     	;# 
  1047  0EA2                     	;# 
  1048  0EA3                     	;# 
  1049  0EA4                     	;# 
  1050  0EA5                     	;# 
  1051  0EA9                     	;# 
  1052  0EAA                     	;# 
  1053  0EAB                     	;# 
  1054  0EAC                     	;# 
  1055  0EB1                     	;# 
  1056  0EB2                     	;# 
  1057  0EB3                     	;# 
  1058  0EB8                     	;# 
  1059  0EB9                     	;# 
  1060  0EBA                     	;# 
  1061  0EBB                     	;# 
  1062  0EBC                     	;# 
  1063  0EBD                     	;# 
  1064  0EBE                     	;# 
  1065  0EC3                     	;# 
  1066  0EC5                     	;# 
  1067  0EC6                     	;# 
  1068  0EC7                     	;# 
  1069  0EC8                     	;# 
  1070  0EC9                     	;# 
  1071  0ECA                     	;# 
  1072  0ECB                     	;# 
  1073  0ECC                     	;# 
  1074  0F10                     	;# 
  1075  0F11                     	;# 
  1076  0F12                     	;# 
  1077  0F13                     	;# 
  1078  0F14                     	;# 
  1079  0F15                     	;# 
  1080  0F16                     	;# 
  1081  0F17                     	;# 
  1082  0F18                     	;# 
  1083  0F19                     	;# 
  1084  0F1A                     	;# 
  1085  0F1B                     	;# 
  1086  0F1C                     	;# 
  1087  0F1D                     	;# 
  1088  0F1E                     	;# 
  1089  0F1F                     	;# 
  1090  0F20                     	;# 
  1091  0F21                     	;# 
  1092  0F22                     	;# 
  1093  0F23                     	;# 
  1094  0F24                     	;# 
  1095  0F25                     	;# 
  1096  0F26                     	;# 
  1097  0F27                     	;# 
  1098  0F38                     	;# 
  1099  0F39                     	;# 
  1100  0F3A                     	;# 
  1101  0F3B                     	;# 
  1102  0F3C                     	;# 
  1103  0F3D                     	;# 
  1104  0F3E                     	;# 
  1105  0F3F                     	;# 
  1106  0F40                     	;# 
  1107  0F41                     	;# 
  1108  0F43                     	;# 
  1109  0F44                     	;# 
  1110  0F45                     	;# 
  1111  0F46                     	;# 
  1112  0F47                     	;# 
  1113  0F48                     	;# 
  1114  0F49                     	;# 
  1115  0F4A                     	;# 
  1116  0F4B                     	;# 
  1117  0F4C                     	;# 
  1118  0F4E                     	;# 
  1119  0F4F                     	;# 
  1120  0F50                     	;# 
  1121  0F51                     	;# 
  1122  0F52                     	;# 
  1123  0F53                     	;# 
  1124  0F54                     	;# 
  1125  0F55                     	;# 
  1126  0F56                     	;# 
  1127  0F57                     	;# 
  1128  0F65                     	;# 
  1129  0F68                     	;# 
  1130  0F69                     	;# 
  1131  0F6A                     	;# 
  1132  0F6B                     	;# 
  1133  0FE4                     	;# 
  1134  0FE5                     	;# 
  1135  0FE6                     	;# 
  1136  0FE7                     	;# 
  1137  0FE8                     	;# 
  1138  0FE9                     	;# 
  1139  0FEA                     	;# 
  1140  0FEB                     	;# 
  1141  0FED                     	;# 
  1142  0FEE                     	;# 
  1143  0FEF                     	;# 
  1144  0000                     	;# 
  1145  0001                     	;# 
  1146  0002                     	;# 
  1147  0003                     	;# 
  1148  0004                     	;# 
  1149  0005                     	;# 
  1150  0006                     	;# 
  1151  0007                     	;# 
  1152  0008                     	;# 
  1153  0009                     	;# 
  1154  000A                     	;# 
  1155  000B                     	;# 
  1156  000C                     	;# 
  1157  000D                     	;# 
  1158  000E                     	;# 
  1159  0010                     	;# 
  1160  0011                     	;# 
  1161  0012                     	;# 
  1162  0013                     	;# 
  1163  0016                     	;# 
  1164  0017                     	;# 
  1165  0018                     	;# 
  1166  001C                     	;# 
  1167  001C                     	;# 
  1168  001D                     	;# 
  1169  001D                     	;# 
  1170  001E                     	;# 
  1171  001F                     	;# 
  1172  008C                     	;# 
  1173  008C                     	;# 
  1174  008D                     	;# 
  1175  008E                     	;# 
  1176  008E                     	;# 
  1177  008F                     	;# 
  1178  0090                     	;# 
  1179  0090                     	;# 
  1180  0091                     	;# 
  1181  0093                     	;# 
  1182  0094                     	;# 
  1183  0095                     	;# 
  1184  0096                     	;# 
  1185  0097                     	;# 
  1186  0098                     	;# 
  1187  0099                     	;# 
  1188  009A                     	;# 
  1189  009B                     	;# 
  1190  009C                     	;# 
  1191  009D                     	;# 
  1192  009E                     	;# 
  1193  010C                     	;# 
  1194  010D                     	;# 
  1195  010E                     	;# 
  1196  010E                     	;# 
  1197  010F                     	;# 
  1198  0110                     	;# 
  1199  0110                     	;# 
  1200  0111                     	;# 
  1201  0112                     	;# 
  1202  0112                     	;# 
  1203  0113                     	;# 
  1204  0114                     	;# 
  1205  0114                     	;# 
  1206  0115                     	;# 
  1207  0116                     	;# 
  1208  0116                     	;# 
  1209  0117                     	;# 
  1210  0119                     	;# 
  1211  0119                     	;# 
  1212  0119                     	;# 
  1213  011A                     	;# 
  1214  011A                     	;# 
  1215  011A                     	;# 
  1216  011B                     	;# 
  1217  011B                     	;# 
  1218  011B                     	;# 
  1219  011B                     	;# 
  1220  011B                     	;# 
  1221  011C                     	;# 
  1222  011C                     	;# 
  1223  011C                     	;# 
  1224  011D                     	;# 
  1225  011D                     	;# 
  1226  011D                     	;# 
  1227  011E                     	;# 
  1228  011E                     	;# 
  1229  011E                     	;# 
  1230  011F                     	;# 
  1231  011F                     	;# 
  1232  011F                     	;# 
  1233  011F                     	;# 
  1234  011F                     	;# 
  1235  018C                     	;# 
  1236  018D                     	;# 
  1237  018E                     	;# 
  1238  018F                     	;# 
  1239  0190                     	;# 
  1240  0191                     	;# 
  1241  0192                     	;# 
  1242  0196                     	;# 
  1243  0197                     	;# 
  1244  0198                     	;# 
  1245  0199                     	;# 
  1246  019A                     	;# 
  1247  019B                     	;# 
  1248  019C                     	;# 
  1249  020C                     	;# 
  1250  020C                     	;# 
  1251  020D                     	;# 
  1252  020E                     	;# 
  1253  020F                     	;# 
  1254  020F                     	;# 
  1255  0210                     	;# 
  1256  0210                     	;# 
  1257  0211                     	;# 
  1258  0211                     	;# 
  1259  0212                     	;# 
  1260  0212                     	;# 
  1261  0213                     	;# 
  1262  0214                     	;# 
  1263  0215                     	;# 
  1264  0215                     	;# 
  1265  0216                     	;# 
  1266  0216                     	;# 
  1267  0217                     	;# 
  1268  0217                     	;# 
  1269  0218                     	;# 
  1270  0218                     	;# 
  1271  0219                     	;# 
  1272  021A                     	;# 
  1273  021B                     	;# 
  1274  021B                     	;# 
  1275  021C                     	;# 
  1276  021C                     	;# 
  1277  021D                     	;# 
  1278  021D                     	;# 
  1279  021E                     	;# 
  1280  021F                     	;# 
  1281  028C                     	;# 
  1282  028C                     	;# 
  1283  028D                     	;# 
  1284  028D                     	;# 
  1285  028E                     	;# 
  1286  028F                     	;# 
  1287  0290                     	;# 
  1288  0290                     	;# 
  1289  0291                     	;# 
  1290  0292                     	;# 
  1291  0292                     	;# 
  1292  0293                     	;# 
  1293  0293                     	;# 
  1294  0294                     	;# 
  1295  0295                     	;# 
  1296  0296                     	;# 
  1297  0296                     	;# 
  1298  0297                     	;# 
  1299  0298                     	;# 
  1300  0298                     	;# 
  1301  0299                     	;# 
  1302  0299                     	;# 
  1303  029A                     	;# 
  1304  029B                     	;# 
  1305  029C                     	;# 
  1306  029C                     	;# 
  1307  029D                     	;# 
  1308  030C                     	;# 
  1309  030C                     	;# 
  1310  030D                     	;# 
  1311  030E                     	;# 
  1312  030F                     	;# 
  1313  0310                     	;# 
  1314  0310                     	;# 
  1315  0311                     	;# 
  1316  0312                     	;# 
  1317  0313                     	;# 
  1318  0314                     	;# 
  1319  0314                     	;# 
  1320  0315                     	;# 
  1321  0316                     	;# 
  1322  0317                     	;# 
  1323  0318                     	;# 
  1324  0318                     	;# 
  1325  0319                     	;# 
  1326  031A                     	;# 
  1327  031B                     	;# 
  1328  031C                     	;# 
  1329  031C                     	;# 
  1330  031D                     	;# 
  1331  031E                     	;# 
  1332  031F                     	;# 
  1333  038C                     	;# 
  1334  038D                     	;# 
  1335  038E                     	;# 
  1336  0390                     	;# 
  1337  0391                     	;# 
  1338  0392                     	;# 
  1339  040C                     	;# 
  1340  040D                     	;# 
  1341  040E                     	;# 
  1342  040F                     	;# 
  1343  0410                     	;# 
  1344  0411                     	;# 
  1345  0416                     	;# 
  1346  0416                     	;# 
  1347  0417                     	;# 
  1348  0418                     	;# 
  1349  0418                     	;# 
  1350  0419                     	;# 
  1351  041A                     	;# 
  1352  041A                     	;# 
  1353  041B                     	;# 
  1354  041C                     	;# 
  1355  041C                     	;# 
  1356  041D                     	;# 
  1357  041E                     	;# 
  1358  041F                     	;# 
  1359  048C                     	;# 
  1360  048C                     	;# 
  1361  048D                     	;# 
  1362  048E                     	;# 
  1363  048F                     	;# 
  1364  048F                     	;# 
  1365  0490                     	;# 
  1366  0491                     	;# 
  1367  0492                     	;# 
  1368  0492                     	;# 
  1369  0493                     	;# 
  1370  0494                     	;# 
  1371  0495                     	;# 
  1372  0495                     	;# 
  1373  0496                     	;# 
  1374  0497                     	;# 
  1375  0498                     	;# 
  1376  0499                     	;# 
  1377  049A                     	;# 
  1378  049B                     	;# 
  1379  049C                     	;# 
  1380  049D                     	;# 
  1381  050C                     	;# 
  1382  050C                     	;# 
  1383  050D                     	;# 
  1384  050E                     	;# 
  1385  050F                     	;# 
  1386  050F                     	;# 
  1387  0510                     	;# 
  1388  0511                     	;# 
  1389  0512                     	;# 
  1390  0512                     	;# 
  1391  0513                     	;# 
  1392  0514                     	;# 
  1393  0515                     	;# 
  1394  0515                     	;# 
  1395  0516                     	;# 
  1396  0517                     	;# 
  1397  0518                     	;# 
  1398  0519                     	;# 
  1399  051A                     	;# 
  1400  051B                     	;# 
  1401  051C                     	;# 
  1402  051D                     	;# 
  1403  058C                     	;# 
  1404  058C                     	;# 
  1405  058D                     	;# 
  1406  058E                     	;# 
  1407  058F                     	;# 
  1408  058F                     	;# 
  1409  0590                     	;# 
  1410  0591                     	;# 
  1411  0592                     	;# 
  1412  0593                     	;# 
  1413  060C                     	;# 
  1414  060D                     	;# 
  1415  060E                     	;# 
  1416  060F                     	;# 
  1417  0610                     	;# 
  1418  0611                     	;# 
  1419  0612                     	;# 
  1420  0613                     	;# 
  1421  0614                     	;# 
  1422  0616                     	;# 
  1423  0617                     	;# 
  1424  0618                     	;# 
  1425  0619                     	;# 
  1426  061A                     	;# 
  1427  061B                     	;# 
  1428  061C                     	;# 
  1429  061D                     	;# 
  1430  061E                     	;# 
  1431  068C                     	;# 
  1432  068D                     	;# 
  1433  068E                     	;# 
  1434  068F                     	;# 
  1435  0690                     	;# 
  1436  0691                     	;# 
  1437  0692                     	;# 
  1438  0693                     	;# 
  1439  0694                     	;# 
  1440  070C                     	;# 
  1441  070D                     	;# 
  1442  070E                     	;# 
  1443  070F                     	;# 
  1444  0710                     	;# 
  1445  0711                     	;# 
  1446  0712                     	;# 
  1447  0713                     	;# 
  1448  0714                     	;# 
  1449  0716                     	;# 
  1450  0717                     	;# 
  1451  0718                     	;# 
  1452  0719                     	;# 
  1453  071A                     	;# 
  1454  071B                     	;# 
  1455  071C                     	;# 
  1456  071D                     	;# 
  1457  071E                     	;# 
  1458  0796                     	;# 
  1459  0797                     	;# 
  1460  0798                     	;# 
  1461  0799                     	;# 
  1462  079A                     	;# 
  1463  079B                     	;# 
  1464  080C                     	;# 
  1465  080D                     	;# 
  1466  080E                     	;# 
  1467  080F                     	;# 
  1468  0810                     	;# 
  1469  0811                     	;# 
  1470  0812                     	;# 
  1471  0813                     	;# 
  1472  0814                     	;# 
  1473  081A                     	;# 
  1474  081B                     	;# 
  1475  081C                     	;# 
  1476  081D                     	;# 
  1477  081E                     	;# 
  1478  081F                     	;# 
  1479  088C                     	;# 
  1480  088D                     	;# 
  1481  088E                     	;# 
  1482  088F                     	;# 
  1483  0890                     	;# 
  1484  0891                     	;# 
  1485  0892                     	;# 
  1486  0893                     	;# 
  1487  0895                     	;# 
  1488  0896                     	;# 
  1489  0897                     	;# 
  1490  0898                     	;# 
  1491  0899                     	;# 
  1492  089A                     	;# 
  1493  089B                     	;# 
  1494  090C                     	;# 
  1495  090E                     	;# 
  1496  090F                     	;# 
  1497  091F                     	;# 
  1498  091F                     	;# 
  1499  098F                     	;# 
  1500  098F                     	;# 
  1501  0990                     	;# 
  1502  0991                     	;# 
  1503  0992                     	;# 
  1504  0993                     	;# 
  1505  0994                     	;# 
  1506  0995                     	;# 
  1507  0996                     	;# 
  1508  0997                     	;# 
  1509  0E0F                     	;# 
  1510  0E10                     	;# 
  1511  0E11                     	;# 
  1512  0E12                     	;# 
  1513  0E13                     	;# 
  1514  0E14                     	;# 
  1515  0E15                     	;# 
  1516  0E16                     	;# 
  1517  0E17                     	;# 
  1518  0E18                     	;# 
  1519  0E19                     	;# 
  1520  0E1A                     	;# 
  1521  0E1B                     	;# 
  1522  0E1C                     	;# 
  1523  0E1D                     	;# 
  1524  0E1E                     	;# 
  1525  0E1F                     	;# 
  1526  0E20                     	;# 
  1527  0E21                     	;# 
  1528  0E22                     	;# 
  1529  0E23                     	;# 
  1530  0E24                     	;# 
  1531  0E25                     	;# 
  1532  0E26                     	;# 
  1533  0E27                     	;# 
  1534  0E28                     	;# 
  1535  0E29                     	;# 
  1536  0E2A                     	;# 
  1537  0E2B                     	;# 
  1538  0E2C                     	;# 
  1539  0E2D                     	;# 
  1540  0E2E                     	;# 
  1541  0E2F                     	;# 
  1542  0E30                     	;# 
  1543  0E31                     	;# 
  1544  0E32                     	;# 
  1545  0E33                     	;# 
  1546  0E34                     	;# 
  1547  0E35                     	;# 
  1548  0E36                     	;# 
  1549  0E37                     	;# 
  1550  0E8F                     	;# 
  1551  0E90                     	;# 
  1552  0E91                     	;# 
  1553  0E92                     	;# 
  1554  0E93                     	;# 
  1555  0E94                     	;# 
  1556  0E95                     	;# 
  1557  0E96                     	;# 
  1558  0E97                     	;# 
  1559  0E9C                     	;# 
  1560  0E9D                     	;# 
  1561  0E9E                     	;# 
  1562  0EA1                     	;# 
  1563  0EA2                     	;# 
  1564  0EA3                     	;# 
  1565  0EA4                     	;# 
  1566  0EA5                     	;# 
  1567  0EA9                     	;# 
  1568  0EAA                     	;# 
  1569  0EAB                     	;# 
  1570  0EAC                     	;# 
  1571  0EB1                     	;# 
  1572  0EB2                     	;# 
  1573  0EB3                     	;# 
  1574  0EB8                     	;# 
  1575  0EB9                     	;# 
  1576  0EBA                     	;# 
  1577  0EBB                     	;# 
  1578  0EBC                     	;# 
  1579  0EBD                     	;# 
  1580  0EBE                     	;# 
  1581  0EC3                     	;# 
  1582  0EC5                     	;# 
  1583  0EC6                     	;# 
  1584  0EC7                     	;# 
  1585  0EC8                     	;# 
  1586  0EC9                     	;# 
  1587  0ECA                     	;# 
  1588  0ECB                     	;# 
  1589  0ECC                     	;# 
  1590  0F10                     	;# 
  1591  0F11                     	;# 
  1592  0F12                     	;# 
  1593  0F13                     	;# 
  1594  0F14                     	;# 
  1595  0F15                     	;# 
  1596  0F16                     	;# 
  1597  0F17                     	;# 
  1598  0F18                     	;# 
  1599  0F19                     	;# 
  1600  0F1A                     	;# 
  1601  0F1B                     	;# 
  1602  0F1C                     	;# 
  1603  0F1D                     	;# 
  1604  0F1E                     	;# 
  1605  0F1F                     	;# 
  1606  0F20                     	;# 
  1607  0F21                     	;# 
  1608  0F22                     	;# 
  1609  0F23                     	;# 
  1610  0F24                     	;# 
  1611  0F25                     	;# 
  1612  0F26                     	;# 
  1613  0F27                     	;# 
  1614  0F38                     	;# 
  1615  0F39                     	;# 
  1616  0F3A                     	;# 
  1617  0F3B                     	;# 
  1618  0F3C                     	;# 
  1619  0F3D                     	;# 
  1620  0F3E                     	;# 
  1621  0F3F                     	;# 
  1622  0F40                     	;# 
  1623  0F41                     	;# 
  1624  0F43                     	;# 
  1625  0F44                     	;# 
  1626  0F45                     	;# 
  1627  0F46                     	;# 
  1628  0F47                     	;# 
  1629  0F48                     	;# 
  1630  0F49                     	;# 
  1631  0F4A                     	;# 
  1632  0F4B                     	;# 
  1633  0F4C                     	;# 
  1634  0F4E                     	;# 
  1635  0F4F                     	;# 
  1636  0F50                     	;# 
  1637  0F51                     	;# 
  1638  0F52                     	;# 
  1639  0F53                     	;# 
  1640  0F54                     	;# 
  1641  0F55                     	;# 
  1642  0F56                     	;# 
  1643  0F57                     	;# 
  1644  0F65                     	;# 
  1645  0F68                     	;# 
  1646  0F69                     	;# 
  1647  0F6A                     	;# 
  1648  0F6B                     	;# 
  1649  0FE4                     	;# 
  1650  0FE5                     	;# 
  1651  0FE6                     	;# 
  1652  0FE7                     	;# 
  1653  0FE8                     	;# 
  1654  0FE9                     	;# 
  1655  0FEA                     	;# 
  1656  0FEB                     	;# 
  1657  0FED                     	;# 
  1658  0FEE                     	;# 
  1659  0FEF                     	;# 
  1660  0000                     	;# 
  1661  0001                     	;# 
  1662  0002                     	;# 
  1663  0003                     	;# 
  1664  0004                     	;# 
  1665  0005                     	;# 
  1666  0006                     	;# 
  1667  0007                     	;# 
  1668  0008                     	;# 
  1669  0009                     	;# 
  1670  000A                     	;# 
  1671  000B                     	;# 
  1672  000C                     	;# 
  1673  000D                     	;# 
  1674  000E                     	;# 
  1675  0010                     	;# 
  1676  0011                     	;# 
  1677  0012                     	;# 
  1678  0013                     	;# 
  1679  0016                     	;# 
  1680  0017                     	;# 
  1681  0018                     	;# 
  1682  001C                     	;# 
  1683  001C                     	;# 
  1684  001D                     	;# 
  1685  001D                     	;# 
  1686  001E                     	;# 
  1687  001F                     	;# 
  1688  008C                     	;# 
  1689  008C                     	;# 
  1690  008D                     	;# 
  1691  008E                     	;# 
  1692  008E                     	;# 
  1693  008F                     	;# 
  1694  0090                     	;# 
  1695  0090                     	;# 
  1696  0091                     	;# 
  1697  0093                     	;# 
  1698  0094                     	;# 
  1699  0095                     	;# 
  1700  0096                     	;# 
  1701  0097                     	;# 
  1702  0098                     	;# 
  1703  0099                     	;# 
  1704  009A                     	;# 
  1705  009B                     	;# 
  1706  009C                     	;# 
  1707  009D                     	;# 
  1708  009E                     	;# 
  1709  010C                     	;# 
  1710  010D                     	;# 
  1711  010E                     	;# 
  1712  010E                     	;# 
  1713  010F                     	;# 
  1714  0110                     	;# 
  1715  0110                     	;# 
  1716  0111                     	;# 
  1717  0112                     	;# 
  1718  0112                     	;# 
  1719  0113                     	;# 
  1720  0114                     	;# 
  1721  0114                     	;# 
  1722  0115                     	;# 
  1723  0116                     	;# 
  1724  0116                     	;# 
  1725  0117                     	;# 
  1726  0119                     	;# 
  1727  0119                     	;# 
  1728  0119                     	;# 
  1729  011A                     	;# 
  1730  011A                     	;# 
  1731  011A                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011B                     	;# 
  1736  011B                     	;# 
  1737  011C                     	;# 
  1738  011C                     	;# 
  1739  011C                     	;# 
  1740  011D                     	;# 
  1741  011D                     	;# 
  1742  011D                     	;# 
  1743  011E                     	;# 
  1744  011E                     	;# 
  1745  011E                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  011F                     	;# 
  1750  011F                     	;# 
  1751  018C                     	;# 
  1752  018D                     	;# 
  1753  018E                     	;# 
  1754  018F                     	;# 
  1755  0190                     	;# 
  1756  0191                     	;# 
  1757  0192                     	;# 
  1758  0196                     	;# 
  1759  0197                     	;# 
  1760  0198                     	;# 
  1761  0199                     	;# 
  1762  019A                     	;# 
  1763  019B                     	;# 
  1764  019C                     	;# 
  1765  020C                     	;# 
  1766  020C                     	;# 
  1767  020D                     	;# 
  1768  020E                     	;# 
  1769  020F                     	;# 
  1770  020F                     	;# 
  1771  0210                     	;# 
  1772  0210                     	;# 
  1773  0211                     	;# 
  1774  0211                     	;# 
  1775  0212                     	;# 
  1776  0212                     	;# 
  1777  0213                     	;# 
  1778  0214                     	;# 
  1779  0215                     	;# 
  1780  0215                     	;# 
  1781  0216                     	;# 
  1782  0216                     	;# 
  1783  0217                     	;# 
  1784  0217                     	;# 
  1785  0218                     	;# 
  1786  0218                     	;# 
  1787  0219                     	;# 
  1788  021A                     	;# 
  1789  021B                     	;# 
  1790  021B                     	;# 
  1791  021C                     	;# 
  1792  021C                     	;# 
  1793  021D                     	;# 
  1794  021D                     	;# 
  1795  021E                     	;# 
  1796  021F                     	;# 
  1797  028C                     	;# 
  1798  028C                     	;# 
  1799  028D                     	;# 
  1800  028D                     	;# 
  1801  028E                     	;# 
  1802  028F                     	;# 
  1803  0290                     	;# 
  1804  0290                     	;# 
  1805  0291                     	;# 
  1806  0292                     	;# 
  1807  0292                     	;# 
  1808  0293                     	;# 
  1809  0293                     	;# 
  1810  0294                     	;# 
  1811  0295                     	;# 
  1812  0296                     	;# 
  1813  0296                     	;# 
  1814  0297                     	;# 
  1815  0298                     	;# 
  1816  0298                     	;# 
  1817  0299                     	;# 
  1818  0299                     	;# 
  1819  029A                     	;# 
  1820  029B                     	;# 
  1821  029C                     	;# 
  1822  029C                     	;# 
  1823  029D                     	;# 
  1824  030C                     	;# 
  1825  030C                     	;# 
  1826  030D                     	;# 
  1827  030E                     	;# 
  1828  030F                     	;# 
  1829  0310                     	;# 
  1830  0310                     	;# 
  1831  0311                     	;# 
  1832  0312                     	;# 
  1833  0313                     	;# 
  1834  0314                     	;# 
  1835  0314                     	;# 
  1836  0315                     	;# 
  1837  0316                     	;# 
  1838  0317                     	;# 
  1839  0318                     	;# 
  1840  0318                     	;# 
  1841  0319                     	;# 
  1842  031A                     	;# 
  1843  031B                     	;# 
  1844  031C                     	;# 
  1845  031C                     	;# 
  1846  031D                     	;# 
  1847  031E                     	;# 
  1848  031F                     	;# 
  1849  038C                     	;# 
  1850  038D                     	;# 
  1851  038E                     	;# 
  1852  0390                     	;# 
  1853  0391                     	;# 
  1854  0392                     	;# 
  1855  040C                     	;# 
  1856  040D                     	;# 
  1857  040E                     	;# 
  1858  040F                     	;# 
  1859  0410                     	;# 
  1860  0411                     	;# 
  1861  0416                     	;# 
  1862  0416                     	;# 
  1863  0417                     	;# 
  1864  0418                     	;# 
  1865  0418                     	;# 
  1866  0419                     	;# 
  1867  041A                     	;# 
  1868  041A                     	;# 
  1869  041B                     	;# 
  1870  041C                     	;# 
  1871  041C                     	;# 
  1872  041D                     	;# 
  1873  041E                     	;# 
  1874  041F                     	;# 
  1875  048C                     	;# 
  1876  048C                     	;# 
  1877  048D                     	;# 
  1878  048E                     	;# 
  1879  048F                     	;# 
  1880  048F                     	;# 
  1881  0490                     	;# 
  1882  0491                     	;# 
  1883  0492                     	;# 
  1884  0492                     	;# 
  1885  0493                     	;# 
  1886  0494                     	;# 
  1887  0495                     	;# 
  1888  0495                     	;# 
  1889  0496                     	;# 
  1890  0497                     	;# 
  1891  0498                     	;# 
  1892  0499                     	;# 
  1893  049A                     	;# 
  1894  049B                     	;# 
  1895  049C                     	;# 
  1896  049D                     	;# 
  1897  050C                     	;# 
  1898  050C                     	;# 
  1899  050D                     	;# 
  1900  050E                     	;# 
  1901  050F                     	;# 
  1902  050F                     	;# 
  1903  0510                     	;# 
  1904  0511                     	;# 
  1905  0512                     	;# 
  1906  0512                     	;# 
  1907  0513                     	;# 
  1908  0514                     	;# 
  1909  0515                     	;# 
  1910  0515                     	;# 
  1911  0516                     	;# 
  1912  0517                     	;# 
  1913  0518                     	;# 
  1914  0519                     	;# 
  1915  051A                     	;# 
  1916  051B                     	;# 
  1917  051C                     	;# 
  1918  051D                     	;# 
  1919  058C                     	;# 
  1920  058C                     	;# 
  1921  058D                     	;# 
  1922  058E                     	;# 
  1923  058F                     	;# 
  1924  058F                     	;# 
  1925  0590                     	;# 
  1926  0591                     	;# 
  1927  0592                     	;# 
  1928  0593                     	;# 
  1929  060C                     	;# 
  1930  060D                     	;# 
  1931  060E                     	;# 
  1932  060F                     	;# 
  1933  0610                     	;# 
  1934  0611                     	;# 
  1935  0612                     	;# 
  1936  0613                     	;# 
  1937  0614                     	;# 
  1938  0616                     	;# 
  1939  0617                     	;# 
  1940  0618                     	;# 
  1941  0619                     	;# 
  1942  061A                     	;# 
  1943  061B                     	;# 
  1944  061C                     	;# 
  1945  061D                     	;# 
  1946  061E                     	;# 
  1947  068C                     	;# 
  1948  068D                     	;# 
  1949  068E                     	;# 
  1950  068F                     	;# 
  1951  0690                     	;# 
  1952  0691                     	;# 
  1953  0692                     	;# 
  1954  0693                     	;# 
  1955  0694                     	;# 
  1956  070C                     	;# 
  1957  070D                     	;# 
  1958  070E                     	;# 
  1959  070F                     	;# 
  1960  0710                     	;# 
  1961  0711                     	;# 
  1962  0712                     	;# 
  1963  0713                     	;# 
  1964  0714                     	;# 
  1965  0716                     	;# 
  1966  0717                     	;# 
  1967  0718                     	;# 
  1968  0719                     	;# 
  1969  071A                     	;# 
  1970  071B                     	;# 
  1971  071C                     	;# 
  1972  071D                     	;# 
  1973  071E                     	;# 
  1974  0796                     	;# 
  1975  0797                     	;# 
  1976  0798                     	;# 
  1977  0799                     	;# 
  1978  079A                     	;# 
  1979  079B                     	;# 
  1980  080C                     	;# 
  1981  080D                     	;# 
  1982  080E                     	;# 
  1983  080F                     	;# 
  1984  0810                     	;# 
  1985  0811                     	;# 
  1986  0812                     	;# 
  1987  0813                     	;# 
  1988  0814                     	;# 
  1989  081A                     	;# 
  1990  081B                     	;# 
  1991  081C                     	;# 
  1992  081D                     	;# 
  1993  081E                     	;# 
  1994  081F                     	;# 
  1995  088C                     	;# 
  1996  088D                     	;# 
  1997  088E                     	;# 
  1998  088F                     	;# 
  1999  0890                     	;# 
  2000  0891                     	;# 
  2001  0892                     	;# 
  2002  0893                     	;# 
  2003  0895                     	;# 
  2004  0896                     	;# 
  2005  0897                     	;# 
  2006  0898                     	;# 
  2007  0899                     	;# 
  2008  089A                     	;# 
  2009  089B                     	;# 
  2010  090C                     	;# 
  2011  090E                     	;# 
  2012  090F                     	;# 
  2013  091F                     	;# 
  2014  091F                     	;# 
  2015  098F                     	;# 
  2016  098F                     	;# 
  2017  0990                     	;# 
  2018  0991                     	;# 
  2019  0992                     	;# 
  2020  0993                     	;# 
  2021  0994                     	;# 
  2022  0995                     	;# 
  2023  0996                     	;# 
  2024  0997                     	;# 
  2025  0E0F                     	;# 
  2026  0E10                     	;# 
  2027  0E11                     	;# 
  2028  0E12                     	;# 
  2029  0E13                     	;# 
  2030  0E14                     	;# 
  2031  0E15                     	;# 
  2032  0E16                     	;# 
  2033  0E17                     	;# 
  2034  0E18                     	;# 
  2035  0E19                     	;# 
  2036  0E1A                     	;# 
  2037  0E1B                     	;# 
  2038  0E1C                     	;# 
  2039  0E1D                     	;# 
  2040  0E1E                     	;# 
  2041  0E1F                     	;# 
  2042  0E20                     	;# 
  2043  0E21                     	;# 
  2044  0E22                     	;# 
  2045  0E23                     	;# 
  2046  0E24                     	;# 
  2047  0E25                     	;# 
  2048  0E26                     	;# 
  2049  0E27                     	;# 
  2050  0E28                     	;# 
  2051  0E29                     	;# 
  2052  0E2A                     	;# 
  2053  0E2B                     	;# 
  2054  0E2C                     	;# 
  2055  0E2D                     	;# 
  2056  0E2E                     	;# 
  2057  0E2F                     	;# 
  2058  0E30                     	;# 
  2059  0E31                     	;# 
  2060  0E32                     	;# 
  2061  0E33                     	;# 
  2062  0E34                     	;# 
  2063  0E35                     	;# 
  2064  0E36                     	;# 
  2065  0E37                     	;# 
  2066  0E8F                     	;# 
  2067  0E90                     	;# 
  2068  0E91                     	;# 
  2069  0E92                     	;# 
  2070  0E93                     	;# 
  2071  0E94                     	;# 
  2072  0E95                     	;# 
  2073  0E96                     	;# 
  2074  0E97                     	;# 
  2075  0E9C                     	;# 
  2076  0E9D                     	;# 
  2077  0E9E                     	;# 
  2078  0EA1                     	;# 
  2079  0EA2                     	;# 
  2080  0EA3                     	;# 
  2081  0EA4                     	;# 
  2082  0EA5                     	;# 
  2083  0EA9                     	;# 
  2084  0EAA                     	;# 
  2085  0EAB                     	;# 
  2086  0EAC                     	;# 
  2087  0EB1                     	;# 
  2088  0EB2                     	;# 
  2089  0EB3                     	;# 
  2090  0EB8                     	;# 
  2091  0EB9                     	;# 
  2092  0EBA                     	;# 
  2093  0EBB                     	;# 
  2094  0EBC                     	;# 
  2095  0EBD                     	;# 
  2096  0EBE                     	;# 
  2097  0EC3                     	;# 
  2098  0EC5                     	;# 
  2099  0EC6                     	;# 
  2100  0EC7                     	;# 
  2101  0EC8                     	;# 
  2102  0EC9                     	;# 
  2103  0ECA                     	;# 
  2104  0ECB                     	;# 
  2105  0ECC                     	;# 
  2106  0F10                     	;# 
  2107  0F11                     	;# 
  2108  0F12                     	;# 
  2109  0F13                     	;# 
  2110  0F14                     	;# 
  2111  0F15                     	;# 
  2112  0F16                     	;# 
  2113  0F17                     	;# 
  2114  0F18                     	;# 
  2115  0F19                     	;# 
  2116  0F1A                     	;# 
  2117  0F1B                     	;# 
  2118  0F1C                     	;# 
  2119  0F1D                     	;# 
  2120  0F1E                     	;# 
  2121  0F1F                     	;# 
  2122  0F20                     	;# 
  2123  0F21                     	;# 
  2124  0F22                     	;# 
  2125  0F23                     	;# 
  2126  0F24                     	;# 
  2127  0F25                     	;# 
  2128  0F26                     	;# 
  2129  0F27                     	;# 
  2130  0F38                     	;# 
  2131  0F39                     	;# 
  2132  0F3A                     	;# 
  2133  0F3B                     	;# 
  2134  0F3C                     	;# 
  2135  0F3D                     	;# 
  2136  0F3E                     	;# 
  2137  0F3F                     	;# 
  2138  0F40                     	;# 
  2139  0F41                     	;# 
  2140  0F43                     	;# 
  2141  0F44                     	;# 
  2142  0F45                     	;# 
  2143  0F46                     	;# 
  2144  0F47                     	;# 
  2145  0F48                     	;# 
  2146  0F49                     	;# 
  2147  0F4A                     	;# 
  2148  0F4B                     	;# 
  2149  0F4C                     	;# 
  2150  0F4E                     	;# 
  2151  0F4F                     	;# 
  2152  0F50                     	;# 
  2153  0F51                     	;# 
  2154  0F52                     	;# 
  2155  0F53                     	;# 
  2156  0F54                     	;# 
  2157  0F55                     	;# 
  2158  0F56                     	;# 
  2159  0F57                     	;# 
  2160  0F65                     	;# 
  2161  0F68                     	;# 
  2162  0F69                     	;# 
  2163  0F6A                     	;# 
  2164  0F6B                     	;# 
  2165  0FE4                     	;# 
  2166  0FE5                     	;# 
  2167  0FE6                     	;# 
  2168  0FE7                     	;# 
  2169  0FE8                     	;# 
  2170  0FE9                     	;# 
  2171  0FEA                     	;# 
  2172  0FEB                     	;# 
  2173  0FED                     	;# 
  2174  0FEE                     	;# 
  2175  0FEF                     	;# 
  2176  0000                     	;# 
  2177  0001                     	;# 
  2178  0002                     	;# 
  2179  0003                     	;# 
  2180  0004                     	;# 
  2181  0005                     	;# 
  2182  0006                     	;# 
  2183  0007                     	;# 
  2184  0008                     	;# 
  2185  0009                     	;# 
  2186  000A                     	;# 
  2187  000B                     	;# 
  2188  000C                     	;# 
  2189  000D                     	;# 
  2190  000E                     	;# 
  2191  0010                     	;# 
  2192  0011                     	;# 
  2193  0012                     	;# 
  2194  0013                     	;# 
  2195  0016                     	;# 
  2196  0017                     	;# 
  2197  0018                     	;# 
  2198  001C                     	;# 
  2199  001C                     	;# 
  2200  001D                     	;# 
  2201  001D                     	;# 
  2202  001E                     	;# 
  2203  001F                     	;# 
  2204  008C                     	;# 
  2205  008C                     	;# 
  2206  008D                     	;# 
  2207  008E                     	;# 
  2208  008E                     	;# 
  2209  008F                     	;# 
  2210  0090                     	;# 
  2211  0090                     	;# 
  2212  0091                     	;# 
  2213  0093                     	;# 
  2214  0094                     	;# 
  2215  0095                     	;# 
  2216  0096                     	;# 
  2217  0097                     	;# 
  2218  0098                     	;# 
  2219  0099                     	;# 
  2220  009A                     	;# 
  2221  009B                     	;# 
  2222  009C                     	;# 
  2223  009D                     	;# 
  2224  009E                     	;# 
  2225  010C                     	;# 
  2226  010D                     	;# 
  2227  010E                     	;# 
  2228  010E                     	;# 
  2229  010F                     	;# 
  2230  0110                     	;# 
  2231  0110                     	;# 
  2232  0111                     	;# 
  2233  0112                     	;# 
  2234  0112                     	;# 
  2235  0113                     	;# 
  2236  0114                     	;# 
  2237  0114                     	;# 
  2238  0115                     	;# 
  2239  0116                     	;# 
  2240  0116                     	;# 
  2241  0117                     	;# 
  2242  0119                     	;# 
  2243  0119                     	;# 
  2244  0119                     	;# 
  2245  011A                     	;# 
  2246  011A                     	;# 
  2247  011A                     	;# 
  2248  011B                     	;# 
  2249  011B                     	;# 
  2250  011B                     	;# 
  2251  011B                     	;# 
  2252  011B                     	;# 
  2253  011C                     	;# 
  2254  011C                     	;# 
  2255  011C                     	;# 
  2256  011D                     	;# 
  2257  011D                     	;# 
  2258  011D                     	;# 
  2259  011E                     	;# 
  2260  011E                     	;# 
  2261  011E                     	;# 
  2262  011F                     	;# 
  2263  011F                     	;# 
  2264  011F                     	;# 
  2265  011F                     	;# 
  2266  011F                     	;# 
  2267  018C                     	;# 
  2268  018D                     	;# 
  2269  018E                     	;# 
  2270  018F                     	;# 
  2271  0190                     	;# 
  2272  0191                     	;# 
  2273  0192                     	;# 
  2274  0196                     	;# 
  2275  0197                     	;# 
  2276  0198                     	;# 
  2277  0199                     	;# 
  2278  019A                     	;# 
  2279  019B                     	;# 
  2280  019C                     	;# 
  2281  020C                     	;# 
  2282  020C                     	;# 
  2283  020D                     	;# 
  2284  020E                     	;# 
  2285  020F                     	;# 
  2286  020F                     	;# 
  2287  0210                     	;# 
  2288  0210                     	;# 
  2289  0211                     	;# 
  2290  0211                     	;# 
  2291  0212                     	;# 
  2292  0212                     	;# 
  2293  0213                     	;# 
  2294  0214                     	;# 
  2295  0215                     	;# 
  2296  0215                     	;# 
  2297  0216                     	;# 
  2298  0216                     	;# 
  2299  0217                     	;# 
  2300  0217                     	;# 
  2301  0218                     	;# 
  2302  0218                     	;# 
  2303  0219                     	;# 
  2304  021A                     	;# 
  2305  021B                     	;# 
  2306  021B                     	;# 
  2307  021C                     	;# 
  2308  021C                     	;# 
  2309  021D                     	;# 
  2310  021D                     	;# 
  2311  021E                     	;# 
  2312  021F                     	;# 
  2313  028C                     	;# 
  2314  028C                     	;# 
  2315  028D                     	;# 
  2316  028D                     	;# 
  2317  028E                     	;# 
  2318  028F                     	;# 
  2319  0290                     	;# 
  2320  0290                     	;# 
  2321  0291                     	;# 
  2322  0292                     	;# 
  2323  0292                     	;# 
  2324  0293                     	;# 
  2325  0293                     	;# 
  2326  0294                     	;# 
  2327  0295                     	;# 
  2328  0296                     	;# 
  2329  0296                     	;# 
  2330  0297                     	;# 
  2331  0298                     	;# 
  2332  0298                     	;# 
  2333  0299                     	;# 
  2334  0299                     	;# 
  2335  029A                     	;# 
  2336  029B                     	;# 
  2337  029C                     	;# 
  2338  029C                     	;# 
  2339  029D                     	;# 
  2340  030C                     	;# 
  2341  030C                     	;# 
  2342  030D                     	;# 
  2343  030E                     	;# 
  2344  030F                     	;# 
  2345  0310                     	;# 
  2346  0310                     	;# 
  2347  0311                     	;# 
  2348  0312                     	;# 
  2349  0313                     	;# 
  2350  0314                     	;# 
  2351  0314                     	;# 
  2352  0315                     	;# 
  2353  0316                     	;# 
  2354  0317                     	;# 
  2355  0318                     	;# 
  2356  0318                     	;# 
  2357  0319                     	;# 
  2358  031A                     	;# 
  2359  031B                     	;# 
  2360  031C                     	;# 
  2361  031C                     	;# 
  2362  031D                     	;# 
  2363  031E                     	;# 
  2364  031F                     	;# 
  2365  038C                     	;# 
  2366  038D                     	;# 
  2367  038E                     	;# 
  2368  0390                     	;# 
  2369  0391                     	;# 
  2370  0392                     	;# 
  2371  040C                     	;# 
  2372  040D                     	;# 
  2373  040E                     	;# 
  2374  040F                     	;# 
  2375  0410                     	;# 
  2376  0411                     	;# 
  2377  0416                     	;# 
  2378  0416                     	;# 
  2379  0417                     	;# 
  2380  0418                     	;# 
  2381  0418                     	;# 
  2382  0419                     	;# 
  2383  041A                     	;# 
  2384  041A                     	;# 
  2385  041B                     	;# 
  2386  041C                     	;# 
  2387  041C                     	;# 
  2388  041D                     	;# 
  2389  041E                     	;# 
  2390  041F                     	;# 
  2391  048C                     	;# 
  2392  048C                     	;# 
  2393  048D                     	;# 
  2394  048E                     	;# 
  2395  048F                     	;# 
  2396  048F                     	;# 
  2397  0490                     	;# 
  2398  0491                     	;# 
  2399  0492                     	;# 
  2400  0492                     	;# 
  2401  0493                     	;# 
  2402  0494                     	;# 
  2403  0495                     	;# 
  2404  0495                     	;# 
  2405  0496                     	;# 
  2406  0497                     	;# 
  2407  0498                     	;# 
  2408  0499                     	;# 
  2409  049A                     	;# 
  2410  049B                     	;# 
  2411  049C                     	;# 
  2412  049D                     	;# 
  2413  050C                     	;# 
  2414  050C                     	;# 
  2415  050D                     	;# 
  2416  050E                     	;# 
  2417  050F                     	;# 
  2418  050F                     	;# 
  2419  0510                     	;# 
  2420  0511                     	;# 
  2421  0512                     	;# 
  2422  0512                     	;# 
  2423  0513                     	;# 
  2424  0514                     	;# 
  2425  0515                     	;# 
  2426  0515                     	;# 
  2427  0516                     	;# 
  2428  0517                     	;# 
  2429  0518                     	;# 
  2430  0519                     	;# 
  2431  051A                     	;# 
  2432  051B                     	;# 
  2433  051C                     	;# 
  2434  051D                     	;# 
  2435  058C                     	;# 
  2436  058C                     	;# 
  2437  058D                     	;# 
  2438  058E                     	;# 
  2439  058F                     	;# 
  2440  058F                     	;# 
  2441  0590                     	;# 
  2442  0591                     	;# 
  2443  0592                     	;# 
  2444  0593                     	;# 
  2445  060C                     	;# 
  2446  060D                     	;# 
  2447  060E                     	;# 
  2448  060F                     	;# 
  2449  0610                     	;# 
  2450  0611                     	;# 
  2451  0612                     	;# 
  2452  0613                     	;# 
  2453  0614                     	;# 
  2454  0616                     	;# 
  2455  0617                     	;# 
  2456  0618                     	;# 
  2457  0619                     	;# 
  2458  061A                     	;# 
  2459  061B                     	;# 
  2460  061C                     	;# 
  2461  061D                     	;# 
  2462  061E                     	;# 
  2463  068C                     	;# 
  2464  068D                     	;# 
  2465  068E                     	;# 
  2466  068F                     	;# 
  2467  0690                     	;# 
  2468  0691                     	;# 
  2469  0692                     	;# 
  2470  0693                     	;# 
  2471  0694                     	;# 
  2472  070C                     	;# 
  2473  070D                     	;# 
  2474  070E                     	;# 
  2475  070F                     	;# 
  2476  0710                     	;# 
  2477  0711                     	;# 
  2478  0712                     	;# 
  2479  0713                     	;# 
  2480  0714                     	;# 
  2481  0716                     	;# 
  2482  0717                     	;# 
  2483  0718                     	;# 
  2484  0719                     	;# 
  2485  071A                     	;# 
  2486  071B                     	;# 
  2487  071C                     	;# 
  2488  071D                     	;# 
  2489  071E                     	;# 
  2490  0796                     	;# 
  2491  0797                     	;# 
  2492  0798                     	;# 
  2493  0799                     	;# 
  2494  079A                     	;# 
  2495  079B                     	;# 
  2496  080C                     	;# 
  2497  080D                     	;# 
  2498  080E                     	;# 
  2499  080F                     	;# 
  2500  0810                     	;# 
  2501  0811                     	;# 
  2502  0812                     	;# 
  2503  0813                     	;# 
  2504  0814                     	;# 
  2505  081A                     	;# 
  2506  081B                     	;# 
  2507  081C                     	;# 
  2508  081D                     	;# 
  2509  081E                     	;# 
  2510  081F                     	;# 
  2511  088C                     	;# 
  2512  088D                     	;# 
  2513  088E                     	;# 
  2514  088F                     	;# 
  2515  0890                     	;# 
  2516  0891                     	;# 
  2517  0892                     	;# 
  2518  0893                     	;# 
  2519  0895                     	;# 
  2520  0896                     	;# 
  2521  0897                     	;# 
  2522  0898                     	;# 
  2523  0899                     	;# 
  2524  089A                     	;# 
  2525  089B                     	;# 
  2526  090C                     	;# 
  2527  090E                     	;# 
  2528  090F                     	;# 
  2529  091F                     	;# 
  2530  091F                     	;# 
  2531  098F                     	;# 
  2532  098F                     	;# 
  2533  0990                     	;# 
  2534  0991                     	;# 
  2535  0992                     	;# 
  2536  0993                     	;# 
  2537  0994                     	;# 
  2538  0995                     	;# 
  2539  0996                     	;# 
  2540  0997                     	;# 
  2541  0E0F                     	;# 
  2542  0E10                     	;# 
  2543  0E11                     	;# 
  2544  0E12                     	;# 
  2545  0E13                     	;# 
  2546  0E14                     	;# 
  2547  0E15                     	;# 
  2548  0E16                     	;# 
  2549  0E17                     	;# 
  2550  0E18                     	;# 
  2551  0E19                     	;# 
  2552  0E1A                     	;# 
  2553  0E1B                     	;# 
  2554  0E1C                     	;# 
  2555  0E1D                     	;# 
  2556  0E1E                     	;# 
  2557  0E1F                     	;# 
  2558  0E20                     	;# 
  2559  0E21                     	;# 
  2560  0E22                     	;# 
  2561  0E23                     	;# 
  2562  0E24                     	;# 
  2563  0E25                     	;# 
  2564  0E26                     	;# 
  2565  0E27                     	;# 
  2566  0E28                     	;# 
  2567  0E29                     	;# 
  2568  0E2A                     	;# 
  2569  0E2B                     	;# 
  2570  0E2C                     	;# 
  2571  0E2D                     	;# 
  2572  0E2E                     	;# 
  2573  0E2F                     	;# 
  2574  0E30                     	;# 
  2575  0E31                     	;# 
  2576  0E32                     	;# 
  2577  0E33                     	;# 
  2578  0E34                     	;# 
  2579  0E35                     	;# 
  2580  0E36                     	;# 
  2581  0E37                     	;# 
  2582  0E8F                     	;# 
  2583  0E90                     	;# 
  2584  0E91                     	;# 
  2585  0E92                     	;# 
  2586  0E93                     	;# 
  2587  0E94                     	;# 
  2588  0E95                     	;# 
  2589  0E96                     	;# 
  2590  0E97                     	;# 
  2591  0E9C                     	;# 
  2592  0E9D                     	;# 
  2593  0E9E                     	;# 
  2594  0EA1                     	;# 
  2595  0EA2                     	;# 
  2596  0EA3                     	;# 
  2597  0EA4                     	;# 
  2598  0EA5                     	;# 
  2599  0EA9                     	;# 
  2600  0EAA                     	;# 
  2601  0EAB                     	;# 
  2602  0EAC                     	;# 
  2603  0EB1                     	;# 
  2604  0EB2                     	;# 
  2605  0EB3                     	;# 
  2606  0EB8                     	;# 
  2607  0EB9                     	;# 
  2608  0EBA                     	;# 
  2609  0EBB                     	;# 
  2610  0EBC                     	;# 
  2611  0EBD                     	;# 
  2612  0EBE                     	;# 
  2613  0EC3                     	;# 
  2614  0EC5                     	;# 
  2615  0EC6                     	;# 
  2616  0EC7                     	;# 
  2617  0EC8                     	;# 
  2618  0EC9                     	;# 
  2619  0ECA                     	;# 
  2620  0ECB                     	;# 
  2621  0ECC                     	;# 
  2622  0F10                     	;# 
  2623  0F11                     	;# 
  2624  0F12                     	;# 
  2625  0F13                     	;# 
  2626  0F14                     	;# 
  2627  0F15                     	;# 
  2628  0F16                     	;# 
  2629  0F17                     	;# 
  2630  0F18                     	;# 
  2631  0F19                     	;# 
  2632  0F1A                     	;# 
  2633  0F1B                     	;# 
  2634  0F1C                     	;# 
  2635  0F1D                     	;# 
  2636  0F1E                     	;# 
  2637  0F1F                     	;# 
  2638  0F20                     	;# 
  2639  0F21                     	;# 
  2640  0F22                     	;# 
  2641  0F23                     	;# 
  2642  0F24                     	;# 
  2643  0F25                     	;# 
  2644  0F26                     	;# 
  2645  0F27                     	;# 
  2646  0F38                     	;# 
  2647  0F39                     	;# 
  2648  0F3A                     	;# 
  2649  0F3B                     	;# 
  2650  0F3C                     	;# 
  2651  0F3D                     	;# 
  2652  0F3E                     	;# 
  2653  0F3F                     	;# 
  2654  0F40                     	;# 
  2655  0F41                     	;# 
  2656  0F43                     	;# 
  2657  0F44                     	;# 
  2658  0F45                     	;# 
  2659  0F46                     	;# 
  2660  0F47                     	;# 
  2661  0F48                     	;# 
  2662  0F49                     	;# 
  2663  0F4A                     	;# 
  2664  0F4B                     	;# 
  2665  0F4C                     	;# 
  2666  0F4E                     	;# 
  2667  0F4F                     	;# 
  2668  0F50                     	;# 
  2669  0F51                     	;# 
  2670  0F52                     	;# 
  2671  0F53                     	;# 
  2672  0F54                     	;# 
  2673  0F55                     	;# 
  2674  0F56                     	;# 
  2675  0F57                     	;# 
  2676  0F65                     	;# 
  2677  0F68                     	;# 
  2678  0F69                     	;# 
  2679  0F6A                     	;# 
  2680  0F6B                     	;# 
  2681  0FE4                     	;# 
  2682  0FE5                     	;# 
  2683  0FE6                     	;# 
  2684  0FE7                     	;# 
  2685  0FE8                     	;# 
  2686  0FE9                     	;# 
  2687  0FEA                     	;# 
  2688  0FEB                     	;# 
  2689  0FED                     	;# 
  2690  0FEE                     	;# 
  2691  0FEF                     	;# 
  2692  0000                     	;# 
  2693  0001                     	;# 
  2694  0002                     	;# 
  2695  0003                     	;# 
  2696  0004                     	;# 
  2697  0005                     	;# 
  2698  0006                     	;# 
  2699  0007                     	;# 
  2700  0008                     	;# 
  2701  0009                     	;# 
  2702  000A                     	;# 
  2703  000B                     	;# 
  2704  000C                     	;# 
  2705  000D                     	;# 
  2706  000E                     	;# 
  2707  0010                     	;# 
  2708  0011                     	;# 
  2709  0012                     	;# 
  2710  0013                     	;# 
  2711  0016                     	;# 
  2712  0017                     	;# 
  2713  0018                     	;# 
  2714  001C                     	;# 
  2715  001C                     	;# 
  2716  001D                     	;# 
  2717  001D                     	;# 
  2718  001E                     	;# 
  2719  001F                     	;# 
  2720  008C                     	;# 
  2721  008C                     	;# 
  2722  008D                     	;# 
  2723  008E                     	;# 
  2724  008E                     	;# 
  2725  008F                     	;# 
  2726  0090                     	;# 
  2727  0090                     	;# 
  2728  0091                     	;# 
  2729  0093                     	;# 
  2730  0094                     	;# 
  2731  0095                     	;# 
  2732  0096                     	;# 
  2733  0097                     	;# 
  2734  0098                     	;# 
  2735  0099                     	;# 
  2736  009A                     	;# 
  2737  009B                     	;# 
  2738  009C                     	;# 
  2739  009D                     	;# 
  2740  009E                     	;# 
  2741  010C                     	;# 
  2742  010D                     	;# 
  2743  010E                     	;# 
  2744  010E                     	;# 
  2745  010F                     	;# 
  2746  0110                     	;# 
  2747  0110                     	;# 
  2748  0111                     	;# 
  2749  0112                     	;# 
  2750  0112                     	;# 
  2751  0113                     	;# 
  2752  0114                     	;# 
  2753  0114                     	;# 
  2754  0115                     	;# 
  2755  0116                     	;# 
  2756  0116                     	;# 
  2757  0117                     	;# 
  2758  0119                     	;# 
  2759  0119                     	;# 
  2760  0119                     	;# 
  2761  011A                     	;# 
  2762  011A                     	;# 
  2763  011A                     	;# 
  2764  011B                     	;# 
  2765  011B                     	;# 
  2766  011B                     	;# 
  2767  011B                     	;# 
  2768  011B                     	;# 
  2769  011C                     	;# 
  2770  011C                     	;# 
  2771  011C                     	;# 
  2772  011D                     	;# 
  2773  011D                     	;# 
  2774  011D                     	;# 
  2775  011E                     	;# 
  2776  011E                     	;# 
  2777  011E                     	;# 
  2778  011F                     	;# 
  2779  011F                     	;# 
  2780  011F                     	;# 
  2781  011F                     	;# 
  2782  011F                     	;# 
  2783  018C                     	;# 
  2784  018D                     	;# 
  2785  018E                     	;# 
  2786  018F                     	;# 
  2787  0190                     	;# 
  2788  0191                     	;# 
  2789  0192                     	;# 
  2790  0196                     	;# 
  2791  0197                     	;# 
  2792  0198                     	;# 
  2793  0199                     	;# 
  2794  019A                     	;# 
  2795  019B                     	;# 
  2796  019C                     	;# 
  2797  020C                     	;# 
  2798  020C                     	;# 
  2799  020D                     	;# 
  2800  020E                     	;# 
  2801  020F                     	;# 
  2802  020F                     	;# 
  2803  0210                     	;# 
  2804  0210                     	;# 
  2805  0211                     	;# 
  2806  0211                     	;# 
  2807  0212                     	;# 
  2808  0212                     	;# 
  2809  0213                     	;# 
  2810  0214                     	;# 
  2811  0215                     	;# 
  2812  0215                     	;# 
  2813  0216                     	;# 
  2814  0216                     	;# 
  2815  0217                     	;# 
  2816  0217                     	;# 
  2817  0218                     	;# 
  2818  0218                     	;# 
  2819  0219                     	;# 
  2820  021A                     	;# 
  2821  021B                     	;# 
  2822  021B                     	;# 
  2823  021C                     	;# 
  2824  021C                     	;# 
  2825  021D                     	;# 
  2826  021D                     	;# 
  2827  021E                     	;# 
  2828  021F                     	;# 
  2829  028C                     	;# 
  2830  028C                     	;# 
  2831  028D                     	;# 
  2832  028D                     	;# 
  2833  028E                     	;# 
  2834  028F                     	;# 
  2835  0290                     	;# 
  2836  0290                     	;# 
  2837  0291                     	;# 
  2838  0292                     	;# 
  2839  0292                     	;# 
  2840  0293                     	;# 
  2841  0293                     	;# 
  2842  0294                     	;# 
  2843  0295                     	;# 
  2844  0296                     	;# 
  2845  0296                     	;# 
  2846  0297                     	;# 
  2847  0298                     	;# 
  2848  0298                     	;# 
  2849  0299                     	;# 
  2850  0299                     	;# 
  2851  029A                     	;# 
  2852  029B                     	;# 
  2853  029C                     	;# 
  2854  029C                     	;# 
  2855  029D                     	;# 
  2856  030C                     	;# 
  2857  030C                     	;# 
  2858  030D                     	;# 
  2859  030E                     	;# 
  2860  030F                     	;# 
  2861  0310                     	;# 
  2862  0310                     	;# 
  2863  0311                     	;# 
  2864  0312                     	;# 
  2865  0313                     	;# 
  2866  0314                     	;# 
  2867  0314                     	;# 
  2868  0315                     	;# 
  2869  0316                     	;# 
  2870  0317                     	;# 
  2871  0318                     	;# 
  2872  0318                     	;# 
  2873  0319                     	;# 
  2874  031A                     	;# 
  2875  031B                     	;# 
  2876  031C                     	;# 
  2877  031C                     	;# 
  2878  031D                     	;# 
  2879  031E                     	;# 
  2880  031F                     	;# 
  2881  038C                     	;# 
  2882  038D                     	;# 
  2883  038E                     	;# 
  2884  0390                     	;# 
  2885  0391                     	;# 
  2886  0392                     	;# 
  2887  040C                     	;# 
  2888  040D                     	;# 
  2889  040E                     	;# 
  2890  040F                     	;# 
  2891  0410                     	;# 
  2892  0411                     	;# 
  2893  0416                     	;# 
  2894  0416                     	;# 
  2895  0417                     	;# 
  2896  0418                     	;# 
  2897  0418                     	;# 
  2898  0419                     	;# 
  2899  041A                     	;# 
  2900  041A                     	;# 
  2901  041B                     	;# 
  2902  041C                     	;# 
  2903  041C                     	;# 
  2904  041D                     	;# 
  2905  041E                     	;# 
  2906  041F                     	;# 
  2907  048C                     	;# 
  2908  048C                     	;# 
  2909  048D                     	;# 
  2910  048E                     	;# 
  2911  048F                     	;# 
  2912  048F                     	;# 
  2913  0490                     	;# 
  2914  0491                     	;# 
  2915  0492                     	;# 
  2916  0492                     	;# 
  2917  0493                     	;# 
  2918  0494                     	;# 
  2919  0495                     	;# 
  2920  0495                     	;# 
  2921  0496                     	;# 
  2922  0497                     	;# 
  2923  0498                     	;# 
  2924  0499                     	;# 
  2925  049A                     	;# 
  2926  049B                     	;# 
  2927  049C                     	;# 
  2928  049D                     	;# 
  2929  050C                     	;# 
  2930  050C                     	;# 
  2931  050D                     	;# 
  2932  050E                     	;# 
  2933  050F                     	;# 
  2934  050F                     	;# 
  2935  0510                     	;# 
  2936  0511                     	;# 
  2937  0512                     	;# 
  2938  0512                     	;# 
  2939  0513                     	;# 
  2940  0514                     	;# 
  2941  0515                     	;# 
  2942  0515                     	;# 
  2943  0516                     	;# 
  2944  0517                     	;# 
  2945  0518                     	;# 
  2946  0519                     	;# 
  2947  051A                     	;# 
  2948  051B                     	;# 
  2949  051C                     	;# 
  2950  051D                     	;# 
  2951  058C                     	;# 
  2952  058C                     	;# 
  2953  058D                     	;# 
  2954  058E                     	;# 
  2955  058F                     	;# 
  2956  058F                     	;# 
  2957  0590                     	;# 
  2958  0591                     	;# 
  2959  0592                     	;# 
  2960  0593                     	;# 
  2961  060C                     	;# 
  2962  060D                     	;# 
  2963  060E                     	;# 
  2964  060F                     	;# 
  2965  0610                     	;# 
  2966  0611                     	;# 
  2967  0612                     	;# 
  2968  0613                     	;# 
  2969  0614                     	;# 
  2970  0616                     	;# 
  2971  0617                     	;# 
  2972  0618                     	;# 
  2973  0619                     	;# 
  2974  061A                     	;# 
  2975  061B                     	;# 
  2976  061C                     	;# 
  2977  061D                     	;# 
  2978  061E                     	;# 
  2979  068C                     	;# 
  2980  068D                     	;# 
  2981  068E                     	;# 
  2982  068F                     	;# 
  2983  0690                     	;# 
  2984  0691                     	;# 
  2985  0692                     	;# 
  2986  0693                     	;# 
  2987  0694                     	;# 
  2988  070C                     	;# 
  2989  070D                     	;# 
  2990  070E                     	;# 
  2991  070F                     	;# 
  2992  0710                     	;# 
  2993  0711                     	;# 
  2994  0712                     	;# 
  2995  0713                     	;# 
  2996  0714                     	;# 
  2997  0716                     	;# 
  2998  0717                     	;# 
  2999  0718                     	;# 
  3000  0719                     	;# 
  3001  071A                     	;# 
  3002  071B                     	;# 
  3003  071C                     	;# 
  3004  071D                     	;# 
  3005  071E                     	;# 
  3006  0796                     	;# 
  3007  0797                     	;# 
  3008  0798                     	;# 
  3009  0799                     	;# 
  3010  079A                     	;# 
  3011  079B                     	;# 
  3012  080C                     	;# 
  3013  080D                     	;# 
  3014  080E                     	;# 
  3015  080F                     	;# 
  3016  0810                     	;# 
  3017  0811                     	;# 
  3018  0812                     	;# 
  3019  0813                     	;# 
  3020  0814                     	;# 
  3021  081A                     	;# 
  3022  081B                     	;# 
  3023  081C                     	;# 
  3024  081D                     	;# 
  3025  081E                     	;# 
  3026  081F                     	;# 
  3027  088C                     	;# 
  3028  088D                     	;# 
  3029  088E                     	;# 
  3030  088F                     	;# 
  3031  0890                     	;# 
  3032  0891                     	;# 
  3033  0892                     	;# 
  3034  0893                     	;# 
  3035  0895                     	;# 
  3036  0896                     	;# 
  3037  0897                     	;# 
  3038  0898                     	;# 
  3039  0899                     	;# 
  3040  089A                     	;# 
  3041  089B                     	;# 
  3042  090C                     	;# 
  3043  090E                     	;# 
  3044  090F                     	;# 
  3045  091F                     	;# 
  3046  091F                     	;# 
  3047  098F                     	;# 
  3048  098F                     	;# 
  3049  0990                     	;# 
  3050  0991                     	;# 
  3051  0992                     	;# 
  3052  0993                     	;# 
  3053  0994                     	;# 
  3054  0995                     	;# 
  3055  0996                     	;# 
  3056  0997                     	;# 
  3057  0E0F                     	;# 
  3058  0E10                     	;# 
  3059  0E11                     	;# 
  3060  0E12                     	;# 
  3061  0E13                     	;# 
  3062  0E14                     	;# 
  3063  0E15                     	;# 
  3064  0E16                     	;# 
  3065  0E17                     	;# 
  3066  0E18                     	;# 
  3067  0E19                     	;# 
  3068  0E1A                     	;# 
  3069  0E1B                     	;# 
  3070  0E1C                     	;# 
  3071  0E1D                     	;# 
  3072  0E1E                     	;# 
  3073  0E1F                     	;# 
  3074  0E20                     	;# 
  3075  0E21                     	;# 
  3076  0E22                     	;# 
  3077  0E23                     	;# 
  3078  0E24                     	;# 
  3079  0E25                     	;# 
  3080  0E26                     	;# 
  3081  0E27                     	;# 
  3082  0E28                     	;# 
  3083  0E29                     	;# 
  3084  0E2A                     	;# 
  3085  0E2B                     	;# 
  3086  0E2C                     	;# 
  3087  0E2D                     	;# 
  3088  0E2E                     	;# 
  3089  0E2F                     	;# 
  3090  0E30                     	;# 
  3091  0E31                     	;# 
  3092  0E32                     	;# 
  3093  0E33                     	;# 
  3094  0E34                     	;# 
  3095  0E35                     	;# 
  3096  0E36                     	;# 
  3097  0E37                     	;# 
  3098  0E8F                     	;# 
  3099  0E90                     	;# 
  3100  0E91                     	;# 
  3101  0E92                     	;# 
  3102  0E93                     	;# 
  3103  0E94                     	;# 
  3104  0E95                     	;# 
  3105  0E96                     	;# 
  3106  0E97                     	;# 
  3107  0E9C                     	;# 
  3108  0E9D                     	;# 
  3109  0E9E                     	;# 
  3110  0EA1                     	;# 
  3111  0EA2                     	;# 
  3112  0EA3                     	;# 
  3113  0EA4                     	;# 
  3114  0EA5                     	;# 
  3115  0EA9                     	;# 
  3116  0EAA                     	;# 
  3117  0EAB                     	;# 
  3118  0EAC                     	;# 
  3119  0EB1                     	;# 
  3120  0EB2                     	;# 
  3121  0EB3                     	;# 
  3122  0EB8                     	;# 
  3123  0EB9                     	;# 
  3124  0EBA                     	;# 
  3125  0EBB                     	;# 
  3126  0EBC                     	;# 
  3127  0EBD                     	;# 
  3128  0EBE                     	;# 
  3129  0EC3                     	;# 
  3130  0EC5                     	;# 
  3131  0EC6                     	;# 
  3132  0EC7                     	;# 
  3133  0EC8                     	;# 
  3134  0EC9                     	;# 
  3135  0ECA                     	;# 
  3136  0ECB                     	;# 
  3137  0ECC                     	;# 
  3138  0F10                     	;# 
  3139  0F11                     	;# 
  3140  0F12                     	;# 
  3141  0F13                     	;# 
  3142  0F14                     	;# 
  3143  0F15                     	;# 
  3144  0F16                     	;# 
  3145  0F17                     	;# 
  3146  0F18                     	;# 
  3147  0F19                     	;# 
  3148  0F1A                     	;# 
  3149  0F1B                     	;# 
  3150  0F1C                     	;# 
  3151  0F1D                     	;# 
  3152  0F1E                     	;# 
  3153  0F1F                     	;# 
  3154  0F20                     	;# 
  3155  0F21                     	;# 
  3156  0F22                     	;# 
  3157  0F23                     	;# 
  3158  0F24                     	;# 
  3159  0F25                     	;# 
  3160  0F26                     	;# 
  3161  0F27                     	;# 
  3162  0F38                     	;# 
  3163  0F39                     	;# 
  3164  0F3A                     	;# 
  3165  0F3B                     	;# 
  3166  0F3C                     	;# 
  3167  0F3D                     	;# 
  3168  0F3E                     	;# 
  3169  0F3F                     	;# 
  3170  0F40                     	;# 
  3171  0F41                     	;# 
  3172  0F43                     	;# 
  3173  0F44                     	;# 
  3174  0F45                     	;# 
  3175  0F46                     	;# 
  3176  0F47                     	;# 
  3177  0F48                     	;# 
  3178  0F49                     	;# 
  3179  0F4A                     	;# 
  3180  0F4B                     	;# 
  3181  0F4C                     	;# 
  3182  0F4E                     	;# 
  3183  0F4F                     	;# 
  3184  0F50                     	;# 
  3185  0F51                     	;# 
  3186  0F52                     	;# 
  3187  0F53                     	;# 
  3188  0F54                     	;# 
  3189  0F55                     	;# 
  3190  0F56                     	;# 
  3191  0F57                     	;# 
  3192  0F65                     	;# 
  3193  0F68                     	;# 
  3194  0F69                     	;# 
  3195  0F6A                     	;# 
  3196  0F6B                     	;# 
  3197  0FE4                     	;# 
  3198  0FE5                     	;# 
  3199  0FE6                     	;# 
  3200  0FE7                     	;# 
  3201  0FE8                     	;# 
  3202  0FE9                     	;# 
  3203  0FEA                     	;# 
  3204  0FEB                     	;# 
  3205  0FED                     	;# 
  3206  0FEE                     	;# 
  3207  0FEF                     	;# 
  3208  0000                     	;# 
  3209  0001                     	;# 
  3210  0002                     	;# 
  3211  0003                     	;# 
  3212  0004                     	;# 
  3213  0005                     	;# 
  3214  0006                     	;# 
  3215  0007                     	;# 
  3216  0008                     	;# 
  3217  0009                     	;# 
  3218  000A                     	;# 
  3219  000B                     	;# 
  3220  000C                     	;# 
  3221  000D                     	;# 
  3222  000E                     	;# 
  3223  0010                     	;# 
  3224  0011                     	;# 
  3225  0012                     	;# 
  3226  0013                     	;# 
  3227  0016                     	;# 
  3228  0017                     	;# 
  3229  0018                     	;# 
  3230  001C                     	;# 
  3231  001C                     	;# 
  3232  001D                     	;# 
  3233  001D                     	;# 
  3234  001E                     	;# 
  3235  001F                     	;# 
  3236  008C                     	;# 
  3237  008C                     	;# 
  3238  008D                     	;# 
  3239  008E                     	;# 
  3240  008E                     	;# 
  3241  008F                     	;# 
  3242  0090                     	;# 
  3243  0090                     	;# 
  3244  0091                     	;# 
  3245  0093                     	;# 
  3246  0094                     	;# 
  3247  0095                     	;# 
  3248  0096                     	;# 
  3249  0097                     	;# 
  3250  0098                     	;# 
  3251  0099                     	;# 
  3252  009A                     	;# 
  3253  009B                     	;# 
  3254  009C                     	;# 
  3255  009D                     	;# 
  3256  009E                     	;# 
  3257  010C                     	;# 
  3258  010D                     	;# 
  3259  010E                     	;# 
  3260  010E                     	;# 
  3261  010F                     	;# 
  3262  0110                     	;# 
  3263  0110                     	;# 
  3264  0111                     	;# 
  3265  0112                     	;# 
  3266  0112                     	;# 
  3267  0113                     	;# 
  3268  0114                     	;# 
  3269  0114                     	;# 
  3270  0115                     	;# 
  3271  0116                     	;# 
  3272  0116                     	;# 
  3273  0117                     	;# 
  3274  0119                     	;# 
  3275  0119                     	;# 
  3276  0119                     	;# 
  3277  011A                     	;# 
  3278  011A                     	;# 
  3279  011A                     	;# 
  3280  011B                     	;# 
  3281  011B                     	;# 
  3282  011B                     	;# 
  3283  011B                     	;# 
  3284  011B                     	;# 
  3285  011C                     	;# 
  3286  011C                     	;# 
  3287  011C                     	;# 
  3288  011D                     	;# 
  3289  011D                     	;# 
  3290  011D                     	;# 
  3291  011E                     	;# 
  3292  011E                     	;# 
  3293  011E                     	;# 
  3294  011F                     	;# 
  3295  011F                     	;# 
  3296  011F                     	;# 
  3297  011F                     	;# 
  3298  011F                     	;# 
  3299  018C                     	;# 
  3300  018D                     	;# 
  3301  018E                     	;# 
  3302  018F                     	;# 
  3303  0190                     	;# 
  3304  0191                     	;# 
  3305  0192                     	;# 
  3306  0196                     	;# 
  3307  0197                     	;# 
  3308  0198                     	;# 
  3309  0199                     	;# 
  3310  019A                     	;# 
  3311  019B                     	;# 
  3312  019C                     	;# 
  3313  020C                     	;# 
  3314  020C                     	;# 
  3315  020D                     	;# 
  3316  020E                     	;# 
  3317  020F                     	;# 
  3318  020F                     	;# 
  3319  0210                     	;# 
  3320  0210                     	;# 
  3321  0211                     	;# 
  3322  0211                     	;# 
  3323  0212                     	;# 
  3324  0212                     	;# 
  3325  0213                     	;# 
  3326  0214                     	;# 
  3327  0215                     	;# 
  3328  0215                     	;# 
  3329  0216                     	;# 
  3330  0216                     	;# 
  3331  0217                     	;# 
  3332  0217                     	;# 
  3333  0218                     	;# 
  3334  0218                     	;# 
  3335  0219                     	;# 
  3336  021A                     	;# 
  3337  021B                     	;# 
  3338  021B                     	;# 
  3339  021C                     	;# 
  3340  021C                     	;# 
  3341  021D                     	;# 
  3342  021D                     	;# 
  3343  021E                     	;# 
  3344  021F                     	;# 
  3345  028C                     	;# 
  3346  028C                     	;# 
  3347  028D                     	;# 
  3348  028D                     	;# 
  3349  028E                     	;# 
  3350  028F                     	;# 
  3351  0290                     	;# 
  3352  0290                     	;# 
  3353  0291                     	;# 
  3354  0292                     	;# 
  3355  0292                     	;# 
  3356  0293                     	;# 
  3357  0293                     	;# 
  3358  0294                     	;# 
  3359  0295                     	;# 
  3360  0296                     	;# 
  3361  0296                     	;# 
  3362  0297                     	;# 
  3363  0298                     	;# 
  3364  0298                     	;# 
  3365  0299                     	;# 
  3366  0299                     	;# 
  3367  029A                     	;# 
  3368  029B                     	;# 
  3369  029C                     	;# 
  3370  029C                     	;# 
  3371  029D                     	;# 
  3372  030C                     	;# 
  3373  030C                     	;# 
  3374  030D                     	;# 
  3375  030E                     	;# 
  3376  030F                     	;# 
  3377  0310                     	;# 
  3378  0310                     	;# 
  3379  0311                     	;# 
  3380  0312                     	;# 
  3381  0313                     	;# 
  3382  0314                     	;# 
  3383  0314                     	;# 
  3384  0315                     	;# 
  3385  0316                     	;# 
  3386  0317                     	;# 
  3387  0318                     	;# 
  3388  0318                     	;# 
  3389  0319                     	;# 
  3390  031A                     	;# 
  3391  031B                     	;# 
  3392  031C                     	;# 
  3393  031C                     	;# 
  3394  031D                     	;# 
  3395  031E                     	;# 
  3396  031F                     	;# 
  3397  038C                     	;# 
  3398  038D                     	;# 
  3399  038E                     	;# 
  3400  0390                     	;# 
  3401  0391                     	;# 
  3402  0392                     	;# 
  3403  040C                     	;# 
  3404  040D                     	;# 
  3405  040E                     	;# 
  3406  040F                     	;# 
  3407  0410                     	;# 
  3408  0411                     	;# 
  3409  0416                     	;# 
  3410  0416                     	;# 
  3411  0417                     	;# 
  3412  0418                     	;# 
  3413  0418                     	;# 
  3414  0419                     	;# 
  3415  041A                     	;# 
  3416  041A                     	;# 
  3417  041B                     	;# 
  3418  041C                     	;# 
  3419  041C                     	;# 
  3420  041D                     	;# 
  3421  041E                     	;# 
  3422  041F                     	;# 
  3423  048C                     	;# 
  3424  048C                     	;# 
  3425  048D                     	;# 
  3426  048E                     	;# 
  3427  048F                     	;# 
  3428  048F                     	;# 
  3429  0490                     	;# 
  3430  0491                     	;# 
  3431  0492                     	;# 
  3432  0492                     	;# 
  3433  0493                     	;# 
  3434  0494                     	;# 
  3435  0495                     	;# 
  3436  0495                     	;# 
  3437  0496                     	;# 
  3438  0497                     	;# 
  3439  0498                     	;# 
  3440  0499                     	;# 
  3441  049A                     	;# 
  3442  049B                     	;# 
  3443  049C                     	;# 
  3444  049D                     	;# 
  3445  050C                     	;# 
  3446  050C                     	;# 
  3447  050D                     	;# 
  3448  050E                     	;# 
  3449  050F                     	;# 
  3450  050F                     	;# 
  3451  0510                     	;# 
  3452  0511                     	;# 
  3453  0512                     	;# 
  3454  0512                     	;# 
  3455  0513                     	;# 
  3456  0514                     	;# 
  3457  0515                     	;# 
  3458  0515                     	;# 
  3459  0516                     	;# 
  3460  0517                     	;# 
  3461  0518                     	;# 
  3462  0519                     	;# 
  3463  051A                     	;# 
  3464  051B                     	;# 
  3465  051C                     	;# 
  3466  051D                     	;# 
  3467  058C                     	;# 
  3468  058C                     	;# 
  3469  058D                     	;# 
  3470  058E                     	;# 
  3471  058F                     	;# 
  3472  058F                     	;# 
  3473  0590                     	;# 
  3474  0591                     	;# 
  3475  0592                     	;# 
  3476  0593                     	;# 
  3477  060C                     	;# 
  3478  060D                     	;# 
  3479  060E                     	;# 
  3480  060F                     	;# 
  3481  0610                     	;# 
  3482  0611                     	;# 
  3483  0612                     	;# 
  3484  0613                     	;# 
  3485  0614                     	;# 
  3486  0616                     	;# 
  3487  0617                     	;# 
  3488  0618                     	;# 
  3489  0619                     	;# 
  3490  061A                     	;# 
  3491  061B                     	;# 
  3492  061C                     	;# 
  3493  061D                     	;# 
  3494  061E                     	;# 
  3495  068C                     	;# 
  3496  068D                     	;# 
  3497  068E                     	;# 
  3498  068F                     	;# 
  3499  0690                     	;# 
  3500  0691                     	;# 
  3501  0692                     	;# 
  3502  0693                     	;# 
  3503  0694                     	;# 
  3504  070C                     	;# 
  3505  070D                     	;# 
  3506  070E                     	;# 
  3507  070F                     	;# 
  3508  0710                     	;# 
  3509  0711                     	;# 
  3510  0712                     	;# 
  3511  0713                     	;# 
  3512  0714                     	;# 
  3513  0716                     	;# 
  3514  0717                     	;# 
  3515  0718                     	;# 
  3516  0719                     	;# 
  3517  071A                     	;# 
  3518  071B                     	;# 
  3519  071C                     	;# 
  3520  071D                     	;# 
  3521  071E                     	;# 
  3522  0796                     	;# 
  3523  0797                     	;# 
  3524  0798                     	;# 
  3525  0799                     	;# 
  3526  079A                     	;# 
  3527  079B                     	;# 
  3528  080C                     	;# 
  3529  080D                     	;# 
  3530  080E                     	;# 
  3531  080F                     	;# 
  3532  0810                     	;# 
  3533  0811                     	;# 
  3534  0812                     	;# 
  3535  0813                     	;# 
  3536  0814                     	;# 
  3537  081A                     	;# 
  3538  081B                     	;# 
  3539  081C                     	;# 
  3540  081D                     	;# 
  3541  081E                     	;# 
  3542  081F                     	;# 
  3543  088C                     	;# 
  3544  088D                     	;# 
  3545  088E                     	;# 
  3546  088F                     	;# 
  3547  0890                     	;# 
  3548  0891                     	;# 
  3549  0892                     	;# 
  3550  0893                     	;# 
  3551  0895                     	;# 
  3552  0896                     	;# 
  3553  0897                     	;# 
  3554  0898                     	;# 
  3555  0899                     	;# 
  3556  089A                     	;# 
  3557  089B                     	;# 
  3558  090C                     	;# 
  3559  090E                     	;# 
  3560  090F                     	;# 
  3561  091F                     	;# 
  3562  091F                     	;# 
  3563  098F                     	;# 
  3564  098F                     	;# 
  3565  0990                     	;# 
  3566  0991                     	;# 
  3567  0992                     	;# 
  3568  0993                     	;# 
  3569  0994                     	;# 
  3570  0995                     	;# 
  3571  0996                     	;# 
  3572  0997                     	;# 
  3573  0E0F                     	;# 
  3574  0E10                     	;# 
  3575  0E11                     	;# 
  3576  0E12                     	;# 
  3577  0E13                     	;# 
  3578  0E14                     	;# 
  3579  0E15                     	;# 
  3580  0E16                     	;# 
  3581  0E17                     	;# 
  3582  0E18                     	;# 
  3583  0E19                     	;# 
  3584  0E1A                     	;# 
  3585  0E1B                     	;# 
  3586  0E1C                     	;# 
  3587  0E1D                     	;# 
  3588  0E1E                     	;# 
  3589  0E1F                     	;# 
  3590  0E20                     	;# 
  3591  0E21                     	;# 
  3592  0E22                     	;# 
  3593  0E23                     	;# 
  3594  0E24                     	;# 
  3595  0E25                     	;# 
  3596  0E26                     	;# 
  3597  0E27                     	;# 
  3598  0E28                     	;# 
  3599  0E29                     	;# 
  3600  0E2A                     	;# 
  3601  0E2B                     	;# 
  3602  0E2C                     	;# 
  3603  0E2D                     	;# 
  3604  0E2E                     	;# 
  3605  0E2F                     	;# 
  3606  0E30                     	;# 
  3607  0E31                     	;# 
  3608  0E32                     	;# 
  3609  0E33                     	;# 
  3610  0E34                     	;# 
  3611  0E35                     	;# 
  3612  0E36                     	;# 
  3613  0E37                     	;# 
  3614  0E8F                     	;# 
  3615  0E90                     	;# 
  3616  0E91                     	;# 
  3617  0E92                     	;# 
  3618  0E93                     	;# 
  3619  0E94                     	;# 
  3620  0E95                     	;# 
  3621  0E96                     	;# 
  3622  0E97                     	;# 
  3623  0E9C                     	;# 
  3624  0E9D                     	;# 
  3625  0E9E                     	;# 
  3626  0EA1                     	;# 
  3627  0EA2                     	;# 
  3628  0EA3                     	;# 
  3629  0EA4                     	;# 
  3630  0EA5                     	;# 
  3631  0EA9                     	;# 
  3632  0EAA                     	;# 
  3633  0EAB                     	;# 
  3634  0EAC                     	;# 
  3635  0EB1                     	;# 
  3636  0EB2                     	;# 
  3637  0EB3                     	;# 
  3638  0EB8                     	;# 
  3639  0EB9                     	;# 
  3640  0EBA                     	;# 
  3641  0EBB                     	;# 
  3642  0EBC                     	;# 
  3643  0EBD                     	;# 
  3644  0EBE                     	;# 
  3645  0EC3                     	;# 
  3646  0EC5                     	;# 
  3647  0EC6                     	;# 
  3648  0EC7                     	;# 
  3649  0EC8                     	;# 
  3650  0EC9                     	;# 
  3651  0ECA                     	;# 
  3652  0ECB                     	;# 
  3653  0ECC                     	;# 
  3654  0F10                     	;# 
  3655  0F11                     	;# 
  3656  0F12                     	;# 
  3657  0F13                     	;# 
  3658  0F14                     	;# 
  3659  0F15                     	;# 
  3660  0F16                     	;# 
  3661  0F17                     	;# 
  3662  0F18                     	;# 
  3663  0F19                     	;# 
  3664  0F1A                     	;# 
  3665  0F1B                     	;# 
  3666  0F1C                     	;# 
  3667  0F1D                     	;# 
  3668  0F1E                     	;# 
  3669  0F1F                     	;# 
  3670  0F20                     	;# 
  3671  0F21                     	;# 
  3672  0F22                     	;# 
  3673  0F23                     	;# 
  3674  0F24                     	;# 
  3675  0F25                     	;# 
  3676  0F26                     	;# 
  3677  0F27                     	;# 
  3678  0F38                     	;# 
  3679  0F39                     	;# 
  3680  0F3A                     	;# 
  3681  0F3B                     	;# 
  3682  0F3C                     	;# 
  3683  0F3D                     	;# 
  3684  0F3E                     	;# 
  3685  0F3F                     	;# 
  3686  0F40                     	;# 
  3687  0F41                     	;# 
  3688  0F43                     	;# 
  3689  0F44                     	;# 
  3690  0F45                     	;# 
  3691  0F46                     	;# 
  3692  0F47                     	;# 
  3693  0F48                     	;# 
  3694  0F49                     	;# 
  3695  0F4A                     	;# 
  3696  0F4B                     	;# 
  3697  0F4C                     	;# 
  3698  0F4E                     	;# 
  3699  0F4F                     	;# 
  3700  0F50                     	;# 
  3701  0F51                     	;# 
  3702  0F52                     	;# 
  3703  0F53                     	;# 
  3704  0F54                     	;# 
  3705  0F55                     	;# 
  3706  0F56                     	;# 
  3707  0F57                     	;# 
  3708  0F65                     	;# 
  3709  0F68                     	;# 
  3710  0F69                     	;# 
  3711  0F6A                     	;# 
  3712  0F6B                     	;# 
  3713  0FE4                     	;# 
  3714  0FE5                     	;# 
  3715  0FE6                     	;# 
  3716  0FE7                     	;# 
  3717  0FE8                     	;# 
  3718  0FE9                     	;# 
  3719  0FEA                     	;# 
  3720  0FEB                     	;# 
  3721  0FED                     	;# 
  3722  0FEE                     	;# 
  3723  0FEF                     	;# 
  3724  0000                     	;# 
  3725  0001                     	;# 
  3726  0002                     	;# 
  3727  0003                     	;# 
  3728  0004                     	;# 
  3729  0005                     	;# 
  3730  0006                     	;# 
  3731  0007                     	;# 
  3732  0008                     	;# 
  3733  0009                     	;# 
  3734  000A                     	;# 
  3735  000B                     	;# 
  3736  000C                     	;# 
  3737  000D                     	;# 
  3738  000E                     	;# 
  3739  0010                     	;# 
  3740  0011                     	;# 
  3741  0012                     	;# 
  3742  0013                     	;# 
  3743  0016                     	;# 
  3744  0017                     	;# 
  3745  0018                     	;# 
  3746  001C                     	;# 
  3747  001C                     	;# 
  3748  001D                     	;# 
  3749  001D                     	;# 
  3750  001E                     	;# 
  3751  001F                     	;# 
  3752  008C                     	;# 
  3753  008C                     	;# 
  3754  008D                     	;# 
  3755  008E                     	;# 
  3756  008E                     	;# 
  3757  008F                     	;# 
  3758  0090                     	;# 
  3759  0090                     	;# 
  3760  0091                     	;# 
  3761  0093                     	;# 
  3762  0094                     	;# 
  3763  0095                     	;# 
  3764  0096                     	;# 
  3765  0097                     	;# 
  3766  0098                     	;# 
  3767  0099                     	;# 
  3768  009A                     	;# 
  3769  009B                     	;# 
  3770  009C                     	;# 
  3771  009D                     	;# 
  3772  009E                     	;# 
  3773  010C                     	;# 
  3774  010D                     	;# 
  3775  010E                     	;# 
  3776  010E                     	;# 
  3777  010F                     	;# 
  3778  0110                     	;# 
  3779  0110                     	;# 
  3780  0111                     	;# 
  3781  0112                     	;# 
  3782  0112                     	;# 
  3783  0113                     	;# 
  3784  0114                     	;# 
  3785  0114                     	;# 
  3786  0115                     	;# 
  3787  0116                     	;# 
  3788  0116                     	;# 
  3789  0117                     	;# 
  3790  0119                     	;# 
  3791  0119                     	;# 
  3792  0119                     	;# 
  3793  011A                     	;# 
  3794  011A                     	;# 
  3795  011A                     	;# 
  3796  011B                     	;# 
  3797  011B                     	;# 
  3798  011B                     	;# 
  3799  011B                     	;# 
  3800  011B                     	;# 
  3801  011C                     	;# 
  3802  011C                     	;# 
  3803  011C                     	;# 
  3804  011D                     	;# 
  3805  011D                     	;# 
  3806  011D                     	;# 
  3807  011E                     	;# 
  3808  011E                     	;# 
  3809  011E                     	;# 
  3810  011F                     	;# 
  3811  011F                     	;# 
  3812  011F                     	;# 
  3813  011F                     	;# 
  3814  011F                     	;# 
  3815  018C                     	;# 
  3816  018D                     	;# 
  3817  018E                     	;# 
  3818  018F                     	;# 
  3819  0190                     	;# 
  3820  0191                     	;# 
  3821  0192                     	;# 
  3822  0196                     	;# 
  3823  0197                     	;# 
  3824  0198                     	;# 
  3825  0199                     	;# 
  3826  019A                     	;# 
  3827  019B                     	;# 
  3828  019C                     	;# 
  3829  020C                     	;# 
  3830  020C                     	;# 
  3831  020D                     	;# 
  3832  020E                     	;# 
  3833  020F                     	;# 
  3834  020F                     	;# 
  3835  0210                     	;# 
  3836  0210                     	;# 
  3837  0211                     	;# 
  3838  0211                     	;# 
  3839  0212                     	;# 
  3840  0212                     	;# 
  3841  0213                     	;# 
  3842  0214                     	;# 
  3843  0215                     	;# 
  3844  0215                     	;# 
  3845  0216                     	;# 
  3846  0216                     	;# 
  3847  0217                     	;# 
  3848  0217                     	;# 
  3849  0218                     	;# 
  3850  0218                     	;# 
  3851  0219                     	;# 
  3852  021A                     	;# 
  3853  021B                     	;# 
  3854  021B                     	;# 
  3855  021C                     	;# 
  3856  021C                     	;# 
  3857  021D                     	;# 
  3858  021D                     	;# 
  3859  021E                     	;# 
  3860  021F                     	;# 
  3861  028C                     	;# 
  3862  028C                     	;# 
  3863  028D                     	;# 
  3864  028D                     	;# 
  3865  028E                     	;# 
  3866  028F                     	;# 
  3867  0290                     	;# 
  3868  0290                     	;# 
  3869  0291                     	;# 
  3870  0292                     	;# 
  3871  0292                     	;# 
  3872  0293                     	;# 
  3873  0293                     	;# 
  3874  0294                     	;# 
  3875  0295                     	;# 
  3876  0296                     	;# 
  3877  0296                     	;# 
  3878  0297                     	;# 
  3879  0298                     	;# 
  3880  0298                     	;# 
  3881  0299                     	;# 
  3882  0299                     	;# 
  3883  029A                     	;# 
  3884  029B                     	;# 
  3885  029C                     	;# 
  3886  029C                     	;# 
  3887  029D                     	;# 
  3888  030C                     	;# 
  3889  030C                     	;# 
  3890  030D                     	;# 
  3891  030E                     	;# 
  3892  030F                     	;# 
  3893  0310                     	;# 
  3894  0310                     	;# 
  3895  0311                     	;# 
  3896  0312                     	;# 
  3897  0313                     	;# 
  3898  0314                     	;# 
  3899  0314                     	;# 
  3900  0315                     	;# 
  3901  0316                     	;# 
  3902  0317                     	;# 
  3903  0318                     	;# 
  3904  0318                     	;# 
  3905  0319                     	;# 
  3906  031A                     	;# 
  3907  031B                     	;# 
  3908  031C                     	;# 
  3909  031C                     	;# 
  3910  031D                     	;# 
  3911  031E                     	;# 
  3912  031F                     	;# 
  3913  038C                     	;# 
  3914  038D                     	;# 
  3915  038E                     	;# 
  3916  0390                     	;# 
  3917  0391                     	;# 
  3918  0392                     	;# 
  3919  040C                     	;# 
  3920  040D                     	;# 
  3921  040E                     	;# 
  3922  040F                     	;# 
  3923  0410                     	;# 
  3924  0411                     	;# 
  3925  0416                     	;# 
  3926  0416                     	;# 
  3927  0417                     	;# 
  3928  0418                     	;# 
  3929  0418                     	;# 
  3930  0419                     	;# 
  3931  041A                     	;# 
  3932  041A                     	;# 
  3933  041B                     	;# 
  3934  041C                     	;# 
  3935  041C                     	;# 
  3936  041D                     	;# 
  3937  041E                     	;# 
  3938  041F                     	;# 
  3939  048C                     	;# 
  3940  048C                     	;# 
  3941  048D                     	;# 
  3942  048E                     	;# 
  3943  048F                     	;# 
  3944  048F                     	;# 
  3945  0490                     	;# 
  3946  0491                     	;# 
  3947  0492                     	;# 
  3948  0492                     	;# 
  3949  0493                     	;# 
  3950  0494                     	;# 
  3951  0495                     	;# 
  3952  0495                     	;# 
  3953  0496                     	;# 
  3954  0497                     	;# 
  3955  0498                     	;# 
  3956  0499                     	;# 
  3957  049A                     	;# 
  3958  049B                     	;# 
  3959  049C                     	;# 
  3960  049D                     	;# 
  3961  050C                     	;# 
  3962  050C                     	;# 
  3963  050D                     	;# 
  3964  050E                     	;# 
  3965  050F                     	;# 
  3966  050F                     	;# 
  3967  0510                     	;# 
  3968  0511                     	;# 
  3969  0512                     	;# 
  3970  0512                     	;# 
  3971  0513                     	;# 
  3972  0514                     	;# 
  3973  0515                     	;# 
  3974  0515                     	;# 
  3975  0516                     	;# 
  3976  0517                     	;# 
  3977  0518                     	;# 
  3978  0519                     	;# 
  3979  051A                     	;# 
  3980  051B                     	;# 
  3981  051C                     	;# 
  3982  051D                     	;# 
  3983  058C                     	;# 
  3984  058C                     	;# 
  3985  058D                     	;# 
  3986  058E                     	;# 
  3987  058F                     	;# 
  3988  058F                     	;# 
  3989  0590                     	;# 
  3990  0591                     	;# 
  3991  0592                     	;# 
  3992  0593                     	;# 
  3993  060C                     	;# 
  3994  060D                     	;# 
  3995  060E                     	;# 
  3996  060F                     	;# 
  3997  0610                     	;# 
  3998  0611                     	;# 
  3999  0612                     	;# 
  4000  0613                     	;# 
  4001  0614                     	;# 
  4002  0616                     	;# 
  4003  0617                     	;# 
  4004  0618                     	;# 
  4005  0619                     	;# 
  4006  061A                     	;# 
  4007  061B                     	;# 
  4008  061C                     	;# 
  4009  061D                     	;# 
  4010  061E                     	;# 
  4011  068C                     	;# 
  4012  068D                     	;# 
  4013  068E                     	;# 
  4014  068F                     	;# 
  4015  0690                     	;# 
  4016  0691                     	;# 
  4017  0692                     	;# 
  4018  0693                     	;# 
  4019  0694                     	;# 
  4020  070C                     	;# 
  4021  070D                     	;# 
  4022  070E                     	;# 
  4023  070F                     	;# 
  4024  0710                     	;# 
  4025  0711                     	;# 
  4026  0712                     	;# 
  4027  0713                     	;# 
  4028  0714                     	;# 
  4029  0716                     	;# 
  4030  0717                     	;# 
  4031  0718                     	;# 
  4032  0719                     	;# 
  4033  071A                     	;# 
  4034  071B                     	;# 
  4035  071C                     	;# 
  4036  071D                     	;# 
  4037  071E                     	;# 
  4038  0796                     	;# 
  4039  0797                     	;# 
  4040  0798                     	;# 
  4041  0799                     	;# 
  4042  079A                     	;# 
  4043  079B                     	;# 
  4044  080C                     	;# 
  4045  080D                     	;# 
  4046  080E                     	;# 
  4047  080F                     	;# 
  4048  0810                     	;# 
  4049  0811                     	;# 
  4050  0812                     	;# 
  4051  0813                     	;# 
  4052  0814                     	;# 
  4053  081A                     	;# 
  4054  081B                     	;# 
  4055  081C                     	;# 
  4056  081D                     	;# 
  4057  081E                     	;# 
  4058  081F                     	;# 
  4059  088C                     	;# 
  4060  088D                     	;# 
  4061  088E                     	;# 
  4062  088F                     	;# 
  4063  0890                     	;# 
  4064  0891                     	;# 
  4065  0892                     	;# 
  4066  0893                     	;# 
  4067  0895                     	;# 
  4068  0896                     	;# 
  4069  0897                     	;# 
  4070  0898                     	;# 
  4071  0899                     	;# 
  4072  089A                     	;# 
  4073  089B                     	;# 
  4074  090C                     	;# 
  4075  090E                     	;# 
  4076  090F                     	;# 
  4077  091F                     	;# 
  4078  091F                     	;# 
  4079  098F                     	;# 
  4080  098F                     	;# 
  4081  0990                     	;# 
  4082  0991                     	;# 
  4083  0992                     	;# 
  4084  0993                     	;# 
  4085  0994                     	;# 
  4086  0995                     	;# 
  4087  0996                     	;# 
  4088  0997                     	;# 
  4089  0E0F                     	;# 
  4090  0E10                     	;# 
  4091  0E11                     	;# 
  4092  0E12                     	;# 
  4093  0E13                     	;# 
  4094  0E14                     	;# 
  4095  0E15                     	;# 
  4096  0E16                     	;# 
  4097  0E17                     	;# 
  4098  0E18                     	;# 
  4099  0E19                     	;# 
  4100  0E1A                     	;# 
  4101  0E1B                     	;# 
  4102  0E1C                     	;# 
  4103  0E1D                     	;# 
  4104  0E1E                     	;# 
  4105  0E1F                     	;# 
  4106  0E20                     	;# 
  4107  0E21                     	;# 
  4108  0E22                     	;# 
  4109  0E23                     	;# 
  4110  0E24                     	;# 
  4111  0E25                     	;# 
  4112  0E26                     	;# 
  4113  0E27                     	;# 
  4114  0E28                     	;# 
  4115  0E29                     	;# 
  4116  0E2A                     	;# 
  4117  0E2B                     	;# 
  4118  0E2C                     	;# 
  4119  0E2D                     	;# 
  4120  0E2E                     	;# 
  4121  0E2F                     	;# 
  4122  0E30                     	;# 
  4123  0E31                     	;# 
  4124  0E32                     	;# 
  4125  0E33                     	;# 
  4126  0E34                     	;# 
  4127  0E35                     	;# 
  4128  0E36                     	;# 
  4129  0E37                     	;# 
  4130  0E8F                     	;# 
  4131  0E90                     	;# 
  4132  0E91                     	;# 
  4133  0E92                     	;# 
  4134  0E93                     	;# 
  4135  0E94                     	;# 
  4136  0E95                     	;# 
  4137  0E96                     	;# 
  4138  0E97                     	;# 
  4139  0E9C                     	;# 
  4140  0E9D                     	;# 
  4141  0E9E                     	;# 
  4142  0EA1                     	;# 
  4143  0EA2                     	;# 
  4144  0EA3                     	;# 
  4145  0EA4                     	;# 
  4146  0EA5                     	;# 
  4147  0EA9                     	;# 
  4148  0EAA                     	;# 
  4149  0EAB                     	;# 
  4150  0EAC                     	;# 
  4151  0EB1                     	;# 
  4152  0EB2                     	;# 
  4153  0EB3                     	;# 
  4154  0EB8                     	;# 
  4155  0EB9                     	;# 
  4156  0EBA                     	;# 
  4157  0EBB                     	;# 
  4158  0EBC                     	;# 
  4159  0EBD                     	;# 
  4160  0EBE                     	;# 
  4161  0EC3                     	;# 
  4162  0EC5                     	;# 
  4163  0EC6                     	;# 
  4164  0EC7                     	;# 
  4165  0EC8                     	;# 
  4166  0EC9                     	;# 
  4167  0ECA                     	;# 
  4168  0ECB                     	;# 
  4169  0ECC                     	;# 
  4170  0F10                     	;# 
  4171  0F11                     	;# 
  4172  0F12                     	;# 
  4173  0F13                     	;# 
  4174  0F14                     	;# 
  4175  0F15                     	;# 
  4176  0F16                     	;# 
  4177  0F17                     	;# 
  4178  0F18                     	;# 
  4179  0F19                     	;# 
  4180  0F1A                     	;# 
  4181  0F1B                     	;# 
  4182  0F1C                     	;# 
  4183  0F1D                     	;# 
  4184  0F1E                     	;# 
  4185  0F1F                     	;# 
  4186  0F20                     	;# 
  4187  0F21                     	;# 
  4188  0F22                     	;# 
  4189  0F23                     	;# 
  4190  0F24                     	;# 
  4191  0F25                     	;# 
  4192  0F26                     	;# 
  4193  0F27                     	;# 
  4194  0F38                     	;# 
  4195  0F39                     	;# 
  4196  0F3A                     	;# 
  4197  0F3B                     	;# 
  4198  0F3C                     	;# 
  4199  0F3D                     	;# 
  4200  0F3E                     	;# 
  4201  0F3F                     	;# 
  4202  0F40                     	;# 
  4203  0F41                     	;# 
  4204  0F43                     	;# 
  4205  0F44                     	;# 
  4206  0F45                     	;# 
  4207  0F46                     	;# 
  4208  0F47                     	;# 
  4209  0F48                     	;# 
  4210  0F49                     	;# 
  4211  0F4A                     	;# 
  4212  0F4B                     	;# 
  4213  0F4C                     	;# 
  4214  0F4E                     	;# 
  4215  0F4F                     	;# 
  4216  0F50                     	;# 
  4217  0F51                     	;# 
  4218  0F52                     	;# 
  4219  0F53                     	;# 
  4220  0F54                     	;# 
  4221  0F55                     	;# 
  4222  0F56                     	;# 
  4223  0F57                     	;# 
  4224  0F65                     	;# 
  4225  0F68                     	;# 
  4226  0F69                     	;# 
  4227  0F6A                     	;# 
  4228  0F6B                     	;# 
  4229  0FE4                     	;# 
  4230  0FE5                     	;# 
  4231  0FE6                     	;# 
  4232  0FE7                     	;# 
  4233  0FE8                     	;# 
  4234  0FE9                     	;# 
  4235  0FEA                     	;# 
  4236  0FEB                     	;# 
  4237  0FED                     	;# 
  4238  0FEE                     	;# 
  4239  0FEF                     	;# 
  4240  0000                     	;# 
  4241  0001                     	;# 
  4242  0002                     	;# 
  4243  0003                     	;# 
  4244  0004                     	;# 
  4245  0005                     	;# 
  4246  0006                     	;# 
  4247  0007                     	;# 
  4248  0008                     	;# 
  4249  0009                     	;# 
  4250  000A                     	;# 
  4251  000B                     	;# 
  4252  000C                     	;# 
  4253  000D                     	;# 
  4254  000E                     	;# 
  4255  0010                     	;# 
  4256  0011                     	;# 
  4257  0012                     	;# 
  4258  0013                     	;# 
  4259  0016                     	;# 
  4260  0017                     	;# 
  4261  0018                     	;# 
  4262  001C                     	;# 
  4263  001C                     	;# 
  4264  001D                     	;# 
  4265  001D                     	;# 
  4266  001E                     	;# 
  4267  001F                     	;# 
  4268  008C                     	;# 
  4269  008C                     	;# 
  4270  008D                     	;# 
  4271  008E                     	;# 
  4272  008E                     	;# 
  4273  008F                     	;# 
  4274  0090                     	;# 
  4275  0090                     	;# 
  4276  0091                     	;# 
  4277  0093                     	;# 
  4278  0094                     	;# 
  4279  0095                     	;# 
  4280  0096                     	;# 
  4281  0097                     	;# 
  4282  0098                     	;# 
  4283  0099                     	;# 
  4284  009A                     	;# 
  4285  009B                     	;# 
  4286  009C                     	;# 
  4287  009D                     	;# 
  4288  009E                     	;# 
  4289  010C                     	;# 
  4290  010D                     	;# 
  4291  010E                     	;# 
  4292  010E                     	;# 
  4293  010F                     	;# 
  4294  0110                     	;# 
  4295  0110                     	;# 
  4296  0111                     	;# 
  4297  0112                     	;# 
  4298  0112                     	;# 
  4299  0113                     	;# 
  4300  0114                     	;# 
  4301  0114                     	;# 
  4302  0115                     	;# 
  4303  0116                     	;# 
  4304  0116                     	;# 
  4305  0117                     	;# 
  4306  0119                     	;# 
  4307  0119                     	;# 
  4308  0119                     	;# 
  4309  011A                     	;# 
  4310  011A                     	;# 
  4311  011A                     	;# 
  4312  011B                     	;# 
  4313  011B                     	;# 
  4314  011B                     	;# 
  4315  011B                     	;# 
  4316  011B                     	;# 
  4317  011C                     	;# 
  4318  011C                     	;# 
  4319  011C                     	;# 
  4320  011D                     	;# 
  4321  011D                     	;# 
  4322  011D                     	;# 
  4323  011E                     	;# 
  4324  011E                     	;# 
  4325  011E                     	;# 
  4326  011F                     	;# 
  4327  011F                     	;# 
  4328  011F                     	;# 
  4329  011F                     	;# 
  4330  011F                     	;# 
  4331  018C                     	;# 
  4332  018D                     	;# 
  4333  018E                     	;# 
  4334  018F                     	;# 
  4335  0190                     	;# 
  4336  0191                     	;# 
  4337  0192                     	;# 
  4338  0196                     	;# 
  4339  0197                     	;# 
  4340  0198                     	;# 
  4341  0199                     	;# 
  4342  019A                     	;# 
  4343  019B                     	;# 
  4344  019C                     	;# 
  4345  020C                     	;# 
  4346  020C                     	;# 
  4347  020D                     	;# 
  4348  020E                     	;# 
  4349  020F                     	;# 
  4350  020F                     	;# 
  4351  0210                     	;# 
  4352  0210                     	;# 
  4353  0211                     	;# 
  4354  0211                     	;# 
  4355  0212                     	;# 
  4356  0212                     	;# 
  4357  0213                     	;# 
  4358  0214                     	;# 
  4359  0215                     	;# 
  4360  0215                     	;# 
  4361  0216                     	;# 
  4362  0216                     	;# 
  4363  0217                     	;# 
  4364  0217                     	;# 
  4365  0218                     	;# 
  4366  0218                     	;# 
  4367  0219                     	;# 
  4368  021A                     	;# 
  4369  021B                     	;# 
  4370  021B                     	;# 
  4371  021C                     	;# 
  4372  021C                     	;# 
  4373  021D                     	;# 
  4374  021D                     	;# 
  4375  021E                     	;# 
  4376  021F                     	;# 
  4377  028C                     	;# 
  4378  028C                     	;# 
  4379  028D                     	;# 
  4380  028D                     	;# 
  4381  028E                     	;# 
  4382  028F                     	;# 
  4383  0290                     	;# 
  4384  0290                     	;# 
  4385  0291                     	;# 
  4386  0292                     	;# 
  4387  0292                     	;# 
  4388  0293                     	;# 
  4389  0293                     	;# 
  4390  0294                     	;# 
  4391  0295                     	;# 
  4392  0296                     	;# 
  4393  0296                     	;# 
  4394  0297                     	;# 
  4395  0298                     	;# 
  4396  0298                     	;# 
  4397  0299                     	;# 
  4398  0299                     	;# 
  4399  029A                     	;# 
  4400  029B                     	;# 
  4401  029C                     	;# 
  4402  029C                     	;# 
  4403  029D                     	;# 
  4404  030C                     	;# 
  4405  030C                     	;# 
  4406  030D                     	;# 
  4407  030E                     	;# 
  4408  030F                     	;# 
  4409  0310                     	;# 
  4410  0310                     	;# 
  4411  0311                     	;# 
  4412  0312                     	;# 
  4413  0313                     	;# 
  4414  0314                     	;# 
  4415  0314                     	;# 
  4416  0315                     	;# 
  4417  0316                     	;# 
  4418  0317                     	;# 
  4419  0318                     	;# 
  4420  0318                     	;# 
  4421  0319                     	;# 
  4422  031A                     	;# 
  4423  031B                     	;# 
  4424  031C                     	;# 
  4425  031C                     	;# 
  4426  031D                     	;# 
  4427  031E                     	;# 
  4428  031F                     	;# 
  4429  038C                     	;# 
  4430  038D                     	;# 
  4431  038E                     	;# 
  4432  0390                     	;# 
  4433  0391                     	;# 
  4434  0392                     	;# 
  4435  040C                     	;# 
  4436  040D                     	;# 
  4437  040E                     	;# 
  4438  040F                     	;# 
  4439  0410                     	;# 
  4440  0411                     	;# 
  4441  0416                     	;# 
  4442  0416                     	;# 
  4443  0417                     	;# 
  4444  0418                     	;# 
  4445  0418                     	;# 
  4446  0419                     	;# 
  4447  041A                     	;# 
  4448  041A                     	;# 
  4449  041B                     	;# 
  4450  041C                     	;# 
  4451  041C                     	;# 
  4452  041D                     	;# 
  4453  041E                     	;# 
  4454  041F                     	;# 
  4455  048C                     	;# 
  4456  048C                     	;# 
  4457  048D                     	;# 
  4458  048E                     	;# 
  4459  048F                     	;# 
  4460  048F                     	;# 
  4461  0490                     	;# 
  4462  0491                     	;# 
  4463  0492                     	;# 
  4464  0492                     	;# 
  4465  0493                     	;# 
  4466  0494                     	;# 
  4467  0495                     	;# 
  4468  0495                     	;# 
  4469  0496                     	;# 
  4470  0497                     	;# 
  4471  0498                     	;# 
  4472  0499                     	;# 
  4473  049A                     	;# 
  4474  049B                     	;# 
  4475  049C                     	;# 
  4476  049D                     	;# 
  4477  050C                     	;# 
  4478  050C                     	;# 
  4479  050D                     	;# 
  4480  050E                     	;# 
  4481  050F                     	;# 
  4482  050F                     	;# 
  4483  0510                     	;# 
  4484  0511                     	;# 
  4485  0512                     	;# 
  4486  0512                     	;# 
  4487  0513                     	;# 
  4488  0514                     	;# 
  4489  0515                     	;# 
  4490  0515                     	;# 
  4491  0516                     	;# 
  4492  0517                     	;# 
  4493  0518                     	;# 
  4494  0519                     	;# 
  4495  051A                     	;# 
  4496  051B                     	;# 
  4497  051C                     	;# 
  4498  051D                     	;# 
  4499  058C                     	;# 
  4500  058C                     	;# 
  4501  058D                     	;# 
  4502  058E                     	;# 
  4503  058F                     	;# 
  4504  058F                     	;# 
  4505  0590                     	;# 
  4506  0591                     	;# 
  4507  0592                     	;# 
  4508  0593                     	;# 
  4509  060C                     	;# 
  4510  060D                     	;# 
  4511  060E                     	;# 
  4512  060F                     	;# 
  4513  0610                     	;# 
  4514  0611                     	;# 
  4515  0612                     	;# 
  4516  0613                     	;# 
  4517  0614                     	;# 
  4518  0616                     	;# 
  4519  0617                     	;# 
  4520  0618                     	;# 
  4521  0619                     	;# 
  4522  061A                     	;# 
  4523  061B                     	;# 
  4524  061C                     	;# 
  4525  061D                     	;# 
  4526  061E                     	;# 
  4527  068C                     	;# 
  4528  068D                     	;# 
  4529  068E                     	;# 
  4530  068F                     	;# 
  4531  0690                     	;# 
  4532  0691                     	;# 
  4533  0692                     	;# 
  4534  0693                     	;# 
  4535  0694                     	;# 
  4536  070C                     	;# 
  4537  070D                     	;# 
  4538  070E                     	;# 
  4539  070F                     	;# 
  4540  0710                     	;# 
  4541  0711                     	;# 
  4542  0712                     	;# 
  4543  0713                     	;# 
  4544  0714                     	;# 
  4545  0716                     	;# 
  4546  0717                     	;# 
  4547  0718                     	;# 
  4548  0719                     	;# 
  4549  071A                     	;# 
  4550  071B                     	;# 
  4551  071C                     	;# 
  4552  071D                     	;# 
  4553  071E                     	;# 
  4554  0796                     	;# 
  4555  0797                     	;# 
  4556  0798                     	;# 
  4557  0799                     	;# 
  4558  079A                     	;# 
  4559  079B                     	;# 
  4560  080C                     	;# 
  4561  080D                     	;# 
  4562  080E                     	;# 
  4563  080F                     	;# 
  4564  0810                     	;# 
  4565  0811                     	;# 
  4566  0812                     	;# 
  4567  0813                     	;# 
  4568  0814                     	;# 
  4569  081A                     	;# 
  4570  081B                     	;# 
  4571  081C                     	;# 
  4572  081D                     	;# 
  4573  081E                     	;# 
  4574  081F                     	;# 
  4575  088C                     	;# 
  4576  088D                     	;# 
  4577  088E                     	;# 
  4578  088F                     	;# 
  4579  0890                     	;# 
  4580  0891                     	;# 
  4581  0892                     	;# 
  4582  0893                     	;# 
  4583  0895                     	;# 
  4584  0896                     	;# 
  4585  0897                     	;# 
  4586  0898                     	;# 
  4587  0899                     	;# 
  4588  089A                     	;# 
  4589  089B                     	;# 
  4590  090C                     	;# 
  4591  090E                     	;# 
  4592  090F                     	;# 
  4593  091F                     	;# 
  4594  091F                     	;# 
  4595  098F                     	;# 
  4596  098F                     	;# 
  4597  0990                     	;# 
  4598  0991                     	;# 
  4599  0992                     	;# 
  4600  0993                     	;# 
  4601  0994                     	;# 
  4602  0995                     	;# 
  4603  0996                     	;# 
  4604  0997                     	;# 
  4605  0E0F                     	;# 
  4606  0E10                     	;# 
  4607  0E11                     	;# 
  4608  0E12                     	;# 
  4609  0E13                     	;# 
  4610  0E14                     	;# 
  4611  0E15                     	;# 
  4612  0E16                     	;# 
  4613  0E17                     	;# 
  4614  0E18                     	;# 
  4615  0E19                     	;# 
  4616  0E1A                     	;# 
  4617  0E1B                     	;# 
  4618  0E1C                     	;# 
  4619  0E1D                     	;# 
  4620  0E1E                     	;# 
  4621  0E1F                     	;# 
  4622  0E20                     	;# 
  4623  0E21                     	;# 
  4624  0E22                     	;# 
  4625  0E23                     	;# 
  4626  0E24                     	;# 
  4627  0E25                     	;# 
  4628  0E26                     	;# 
  4629  0E27                     	;# 
  4630  0E28                     	;# 
  4631  0E29                     	;# 
  4632  0E2A                     	;# 
  4633  0E2B                     	;# 
  4634  0E2C                     	;# 
  4635  0E2D                     	;# 
  4636  0E2E                     	;# 
  4637  0E2F                     	;# 
  4638  0E30                     	;# 
  4639  0E31                     	;# 
  4640  0E32                     	;# 
  4641  0E33                     	;# 
  4642  0E34                     	;# 
  4643  0E35                     	;# 
  4644  0E36                     	;# 
  4645  0E37                     	;# 
  4646  0E8F                     	;# 
  4647  0E90                     	;# 
  4648  0E91                     	;# 
  4649  0E92                     	;# 
  4650  0E93                     	;# 
  4651  0E94                     	;# 
  4652  0E95                     	;# 
  4653  0E96                     	;# 
  4654  0E97                     	;# 
  4655  0E9C                     	;# 
  4656  0E9D                     	;# 
  4657  0E9E                     	;# 
  4658  0EA1                     	;# 
  4659  0EA2                     	;# 
  4660  0EA3                     	;# 
  4661  0EA4                     	;# 
  4662  0EA5                     	;# 
  4663  0EA9                     	;# 
  4664  0EAA                     	;# 
  4665  0EAB                     	;# 
  4666  0EAC                     	;# 
  4667  0EB1                     	;# 
  4668  0EB2                     	;# 
  4669  0EB3                     	;# 
  4670  0EB8                     	;# 
  4671  0EB9                     	;# 
  4672  0EBA                     	;# 
  4673  0EBB                     	;# 
  4674  0EBC                     	;# 
  4675  0EBD                     	;# 
  4676  0EBE                     	;# 
  4677  0EC3                     	;# 
  4678  0EC5                     	;# 
  4679  0EC6                     	;# 
  4680  0EC7                     	;# 
  4681  0EC8                     	;# 
  4682  0EC9                     	;# 
  4683  0ECA                     	;# 
  4684  0ECB                     	;# 
  4685  0ECC                     	;# 
  4686  0F10                     	;# 
  4687  0F11                     	;# 
  4688  0F12                     	;# 
  4689  0F13                     	;# 
  4690  0F14                     	;# 
  4691  0F15                     	;# 
  4692  0F16                     	;# 
  4693  0F17                     	;# 
  4694  0F18                     	;# 
  4695  0F19                     	;# 
  4696  0F1A                     	;# 
  4697  0F1B                     	;# 
  4698  0F1C                     	;# 
  4699  0F1D                     	;# 
  4700  0F1E                     	;# 
  4701  0F1F                     	;# 
  4702  0F20                     	;# 
  4703  0F21                     	;# 
  4704  0F22                     	;# 
  4705  0F23                     	;# 
  4706  0F24                     	;# 
  4707  0F25                     	;# 
  4708  0F26                     	;# 
  4709  0F27                     	;# 
  4710  0F38                     	;# 
  4711  0F39                     	;# 
  4712  0F3A                     	;# 
  4713  0F3B                     	;# 
  4714  0F3C                     	;# 
  4715  0F3D                     	;# 
  4716  0F3E                     	;# 
  4717  0F3F                     	;# 
  4718  0F40                     	;# 
  4719  0F41                     	;# 
  4720  0F43                     	;# 
  4721  0F44                     	;# 
  4722  0F45                     	;# 
  4723  0F46                     	;# 
  4724  0F47                     	;# 
  4725  0F48                     	;# 
  4726  0F49                     	;# 
  4727  0F4A                     	;# 
  4728  0F4B                     	;# 
  4729  0F4C                     	;# 
  4730  0F4E                     	;# 
  4731  0F4F                     	;# 
  4732  0F50                     	;# 
  4733  0F51                     	;# 
  4734  0F52                     	;# 
  4735  0F53                     	;# 
  4736  0F54                     	;# 
  4737  0F55                     	;# 
  4738  0F56                     	;# 
  4739  0F57                     	;# 
  4740  0F65                     	;# 
  4741  0F68                     	;# 
  4742  0F69                     	;# 
  4743  0F6A                     	;# 
  4744  0F6B                     	;# 
  4745  0FE4                     	;# 
  4746  0FE5                     	;# 
  4747  0FE6                     	;# 
  4748  0FE7                     	;# 
  4749  0FE8                     	;# 
  4750  0FE9                     	;# 
  4751  0FEA                     	;# 
  4752  0FEB                     	;# 
  4753  0FED                     	;# 
  4754  0FEE                     	;# 
  4755  0FEF                     	;# 
  4756  0000                     	;# 
  4757  0001                     	;# 
  4758  0002                     	;# 
  4759  0003                     	;# 
  4760  0004                     	;# 
  4761  0005                     	;# 
  4762  0006                     	;# 
  4763  0007                     	;# 
  4764  0008                     	;# 
  4765  0009                     	;# 
  4766  000A                     	;# 
  4767  000B                     	;# 
  4768  000C                     	;# 
  4769  000D                     	;# 
  4770  000E                     	;# 
  4771  0010                     	;# 
  4772  0011                     	;# 
  4773  0012                     	;# 
  4774  0013                     	;# 
  4775  0016                     	;# 
  4776  0017                     	;# 
  4777  0018                     	;# 
  4778  001C                     	;# 
  4779  001C                     	;# 
  4780  001D                     	;# 
  4781  001D                     	;# 
  4782  001E                     	;# 
  4783  001F                     	;# 
  4784  008C                     	;# 
  4785  008C                     	;# 
  4786  008D                     	;# 
  4787  008E                     	;# 
  4788  008E                     	;# 
  4789  008F                     	;# 
  4790  0090                     	;# 
  4791  0090                     	;# 
  4792  0091                     	;# 
  4793  0093                     	;# 
  4794  0094                     	;# 
  4795  0095                     	;# 
  4796  0096                     	;# 
  4797  0097                     	;# 
  4798  0098                     	;# 
  4799  0099                     	;# 
  4800  009A                     	;# 
  4801  009B                     	;# 
  4802  009C                     	;# 
  4803  009D                     	;# 
  4804  009E                     	;# 
  4805  010C                     	;# 
  4806  010D                     	;# 
  4807  010E                     	;# 
  4808  010E                     	;# 
  4809  010F                     	;# 
  4810  0110                     	;# 
  4811  0110                     	;# 
  4812  0111                     	;# 
  4813  0112                     	;# 
  4814  0112                     	;# 
  4815  0113                     	;# 
  4816  0114                     	;# 
  4817  0114                     	;# 
  4818  0115                     	;# 
  4819  0116                     	;# 
  4820  0116                     	;# 
  4821  0117                     	;# 
  4822  0119                     	;# 
  4823  0119                     	;# 
  4824  0119                     	;# 
  4825  011A                     	;# 
  4826  011A                     	;# 
  4827  011A                     	;# 
  4828  011B                     	;# 
  4829  011B                     	;# 
  4830  011B                     	;# 
  4831  011B                     	;# 
  4832  011B                     	;# 
  4833  011C                     	;# 
  4834  011C                     	;# 
  4835  011C                     	;# 
  4836  011D                     	;# 
  4837  011D                     	;# 
  4838  011D                     	;# 
  4839  011E                     	;# 
  4840  011E                     	;# 
  4841  011E                     	;# 
  4842  011F                     	;# 
  4843  011F                     	;# 
  4844  011F                     	;# 
  4845  011F                     	;# 
  4846  011F                     	;# 
  4847  018C                     	;# 
  4848  018D                     	;# 
  4849  018E                     	;# 
  4850  018F                     	;# 
  4851  0190                     	;# 
  4852  0191                     	;# 
  4853  0192                     	;# 
  4854  0196                     	;# 
  4855  0197                     	;# 
  4856  0198                     	;# 
  4857  0199                     	;# 
  4858  019A                     	;# 
  4859  019B                     	;# 
  4860  019C                     	;# 
  4861  020C                     	;# 
  4862  020C                     	;# 
  4863  020D                     	;# 
  4864  020E                     	;# 
  4865  020F                     	;# 
  4866  020F                     	;# 
  4867  0210                     	;# 
  4868  0210                     	;# 
  4869  0211                     	;# 
  4870  0211                     	;# 
  4871  0212                     	;# 
  4872  0212                     	;# 
  4873  0213                     	;# 
  4874  0214                     	;# 
  4875  0215                     	;# 
  4876  0215                     	;# 
  4877  0216                     	;# 
  4878  0216                     	;# 
  4879  0217                     	;# 
  4880  0217                     	;# 
  4881  0218                     	;# 
  4882  0218                     	;# 
  4883  0219                     	;# 
  4884  021A                     	;# 
  4885  021B                     	;# 
  4886  021B                     	;# 
  4887  021C                     	;# 
  4888  021C                     	;# 
  4889  021D                     	;# 
  4890  021D                     	;# 
  4891  021E                     	;# 
  4892  021F                     	;# 
  4893  028C                     	;# 
  4894  028C                     	;# 
  4895  028D                     	;# 
  4896  028D                     	;# 
  4897  028E                     	;# 
  4898  028F                     	;# 
  4899  0290                     	;# 
  4900  0290                     	;# 
  4901  0291                     	;# 
  4902  0292                     	;# 
  4903  0292                     	;# 
  4904  0293                     	;# 
  4905  0293                     	;# 
  4906  0294                     	;# 
  4907  0295                     	;# 
  4908  0296                     	;# 
  4909  0296                     	;# 
  4910  0297                     	;# 
  4911  0298                     	;# 
  4912  0298                     	;# 
  4913  0299                     	;# 
  4914  0299                     	;# 
  4915  029A                     	;# 
  4916  029B                     	;# 
  4917  029C                     	;# 
  4918  029C                     	;# 
  4919  029D                     	;# 
  4920  030C                     	;# 
  4921  030C                     	;# 
  4922  030D                     	;# 
  4923  030E                     	;# 
  4924  030F                     	;# 
  4925  0310                     	;# 
  4926  0310                     	;# 
  4927  0311                     	;# 
  4928  0312                     	;# 
  4929  0313                     	;# 
  4930  0314                     	;# 
  4931  0314                     	;# 
  4932  0315                     	;# 
  4933  0316                     	;# 
  4934  0317                     	;# 
  4935  0318                     	;# 
  4936  0318                     	;# 
  4937  0319                     	;# 
  4938  031A                     	;# 
  4939  031B                     	;# 
  4940  031C                     	;# 
  4941  031C                     	;# 
  4942  031D                     	;# 
  4943  031E                     	;# 
  4944  031F                     	;# 
  4945  038C                     	;# 
  4946  038D                     	;# 
  4947  038E                     	;# 
  4948  0390                     	;# 
  4949  0391                     	;# 
  4950  0392                     	;# 
  4951  040C                     	;# 
  4952  040D                     	;# 
  4953  040E                     	;# 
  4954  040F                     	;# 
  4955  0410                     	;# 
  4956  0411                     	;# 
  4957  0416                     	;# 
  4958  0416                     	;# 
  4959  0417                     	;# 
  4960  0418                     	;# 
  4961  0418                     	;# 
  4962  0419                     	;# 
  4963  041A                     	;# 
  4964  041A                     	;# 
  4965  041B                     	;# 
  4966  041C                     	;# 
  4967  041C                     	;# 
  4968  041D                     	;# 
  4969  041E                     	;# 
  4970  041F                     	;# 
  4971  048C                     	;# 
  4972  048C                     	;# 
  4973  048D                     	;# 
  4974  048E                     	;# 
  4975  048F                     	;# 
  4976  048F                     	;# 
  4977  0490                     	;# 
  4978  0491                     	;# 
  4979  0492                     	;# 
  4980  0492                     	;# 
  4981  0493                     	;# 
  4982  0494                     	;# 
  4983  0495                     	;# 
  4984  0495                     	;# 
  4985  0496                     	;# 
  4986  0497                     	;# 
  4987  0498                     	;# 
  4988  0499                     	;# 
  4989  049A                     	;# 
  4990  049B                     	;# 
  4991  049C                     	;# 
  4992  049D                     	;# 
  4993  050C                     	;# 
  4994  050C                     	;# 
  4995  050D                     	;# 
  4996  050E                     	;# 
  4997  050F                     	;# 
  4998  050F                     	;# 
  4999  0510                     	;# 
  5000  0511                     	;# 
  5001  0512                     	;# 
  5002  0512                     	;# 
  5003  0513                     	;# 
  5004  0514                     	;# 
  5005  0515                     	;# 
  5006  0515                     	;# 
  5007  0516                     	;# 
  5008  0517                     	;# 
  5009  0518                     	;# 
  5010  0519                     	;# 
  5011  051A                     	;# 
  5012  051B                     	;# 
  5013  051C                     	;# 
  5014  051D                     	;# 
  5015  058C                     	;# 
  5016  058C                     	;# 
  5017  058D                     	;# 
  5018  058E                     	;# 
  5019  058F                     	;# 
  5020  058F                     	;# 
  5021  0590                     	;# 
  5022  0591                     	;# 
  5023  0592                     	;# 
  5024  0593                     	;# 
  5025  060C                     	;# 
  5026  060D                     	;# 
  5027  060E                     	;# 
  5028  060F                     	;# 
  5029  0610                     	;# 
  5030  0611                     	;# 
  5031  0612                     	;# 
  5032  0613                     	;# 
  5033  0614                     	;# 
  5034  0616                     	;# 
  5035  0617                     	;# 
  5036  0618                     	;# 
  5037  0619                     	;# 
  5038  061A                     	;# 
  5039  061B                     	;# 
  5040  061C                     	;# 
  5041  061D                     	;# 
  5042  061E                     	;# 
  5043  068C                     	;# 
  5044  068D                     	;# 
  5045  068E                     	;# 
  5046  068F                     	;# 
  5047  0690                     	;# 
  5048  0691                     	;# 
  5049  0692                     	;# 
  5050  0693                     	;# 
  5051  0694                     	;# 
  5052  070C                     	;# 
  5053  070D                     	;# 
  5054  070E                     	;# 
  5055  070F                     	;# 
  5056  0710                     	;# 
  5057  0711                     	;# 
  5058  0712                     	;# 
  5059  0713                     	;# 
  5060  0714                     	;# 
  5061  0716                     	;# 
  5062  0717                     	;# 
  5063  0718                     	;# 
  5064  0719                     	;# 
  5065  071A                     	;# 
  5066  071B                     	;# 
  5067  071C                     	;# 
  5068  071D                     	;# 
  5069  071E                     	;# 
  5070  0796                     	;# 
  5071  0797                     	;# 
  5072  0798                     	;# 
  5073  0799                     	;# 
  5074  079A                     	;# 
  5075  079B                     	;# 
  5076  080C                     	;# 
  5077  080D                     	;# 
  5078  080E                     	;# 
  5079  080F                     	;# 
  5080  0810                     	;# 
  5081  0811                     	;# 
  5082  0812                     	;# 
  5083  0813                     	;# 
  5084  0814                     	;# 
  5085  081A                     	;# 
  5086  081B                     	;# 
  5087  081C                     	;# 
  5088  081D                     	;# 
  5089  081E                     	;# 
  5090  081F                     	;# 
  5091  088C                     	;# 
  5092  088D                     	;# 
  5093  088E                     	;# 
  5094  088F                     	;# 
  5095  0890                     	;# 
  5096  0891                     	;# 
  5097  0892                     	;# 
  5098  0893                     	;# 
  5099  0895                     	;# 
  5100  0896                     	;# 
  5101  0897                     	;# 
  5102  0898                     	;# 
  5103  0899                     	;# 
  5104  089A                     	;# 
  5105  089B                     	;# 
  5106  090C                     	;# 
  5107  090E                     	;# 
  5108  090F                     	;# 
  5109  091F                     	;# 
  5110  091F                     	;# 
  5111  098F                     	;# 
  5112  098F                     	;# 
  5113  0990                     	;# 
  5114  0991                     	;# 
  5115  0992                     	;# 
  5116  0993                     	;# 
  5117  0994                     	;# 
  5118  0995                     	;# 
  5119  0996                     	;# 
  5120  0997                     	;# 
  5121  0E0F                     	;# 
  5122  0E10                     	;# 
  5123  0E11                     	;# 
  5124  0E12                     	;# 
  5125  0E13                     	;# 
  5126  0E14                     	;# 
  5127  0E15                     	;# 
  5128  0E16                     	;# 
  5129  0E17                     	;# 
  5130  0E18                     	;# 
  5131  0E19                     	;# 
  5132  0E1A                     	;# 
  5133  0E1B                     	;# 
  5134  0E1C                     	;# 
  5135  0E1D                     	;# 
  5136  0E1E                     	;# 
  5137  0E1F                     	;# 
  5138  0E20                     	;# 
  5139  0E21                     	;# 
  5140  0E22                     	;# 
  5141  0E23                     	;# 
  5142  0E24                     	;# 
  5143  0E25                     	;# 
  5144  0E26                     	;# 
  5145  0E27                     	;# 
  5146  0E28                     	;# 
  5147  0E29                     	;# 
  5148  0E2A                     	;# 
  5149  0E2B                     	;# 
  5150  0E2C                     	;# 
  5151  0E2D                     	;# 
  5152  0E2E                     	;# 
  5153  0E2F                     	;# 
  5154  0E30                     	;# 
  5155  0E31                     	;# 
  5156  0E32                     	;# 
  5157  0E33                     	;# 
  5158  0E34                     	;# 
  5159  0E35                     	;# 
  5160  0E36                     	;# 
  5161  0E37                     	;# 
  5162  0E8F                     	;# 
  5163  0E90                     	;# 
  5164  0E91                     	;# 
  5165  0E92                     	;# 
  5166  0E93                     	;# 
  5167  0E94                     	;# 
  5168  0E95                     	;# 
  5169  0E96                     	;# 
  5170  0E97                     	;# 
  5171  0E9C                     	;# 
  5172  0E9D                     	;# 
  5173  0E9E                     	;# 
  5174  0EA1                     	;# 
  5175  0EA2                     	;# 
  5176  0EA3                     	;# 
  5177  0EA4                     	;# 
  5178  0EA5                     	;# 
  5179  0EA9                     	;# 
  5180  0EAA                     	;# 
  5181  0EAB                     	;# 
  5182  0EAC                     	;# 
  5183  0EB1                     	;# 
  5184  0EB2                     	;# 
  5185  0EB3                     	;# 
  5186  0EB8                     	;# 
  5187  0EB9                     	;# 
  5188  0EBA                     	;# 
  5189  0EBB                     	;# 
  5190  0EBC                     	;# 
  5191  0EBD                     	;# 
  5192  0EBE                     	;# 
  5193  0EC3                     	;# 
  5194  0EC5                     	;# 
  5195  0EC6                     	;# 
  5196  0EC7                     	;# 
  5197  0EC8                     	;# 
  5198  0EC9                     	;# 
  5199  0ECA                     	;# 
  5200  0ECB                     	;# 
  5201  0ECC                     	;# 
  5202  0F10                     	;# 
  5203  0F11                     	;# 
  5204  0F12                     	;# 
  5205  0F13                     	;# 
  5206  0F14                     	;# 
  5207  0F15                     	;# 
  5208  0F16                     	;# 
  5209  0F17                     	;# 
  5210  0F18                     	;# 
  5211  0F19                     	;# 
  5212  0F1A                     	;# 
  5213  0F1B                     	;# 
  5214  0F1C                     	;# 
  5215  0F1D                     	;# 
  5216  0F1E                     	;# 
  5217  0F1F                     	;# 
  5218  0F20                     	;# 
  5219  0F21                     	;# 
  5220  0F22                     	;# 
  5221  0F23                     	;# 
  5222  0F24                     	;# 
  5223  0F25                     	;# 
  5224  0F26                     	;# 
  5225  0F27                     	;# 
  5226  0F38                     	;# 
  5227  0F39                     	;# 
  5228  0F3A                     	;# 
  5229  0F3B                     	;# 
  5230  0F3C                     	;# 
  5231  0F3D                     	;# 
  5232  0F3E                     	;# 
  5233  0F3F                     	;# 
  5234  0F40                     	;# 
  5235  0F41                     	;# 
  5236  0F43                     	;# 
  5237  0F44                     	;# 
  5238  0F45                     	;# 
  5239  0F46                     	;# 
  5240  0F47                     	;# 
  5241  0F48                     	;# 
  5242  0F49                     	;# 
  5243  0F4A                     	;# 
  5244  0F4B                     	;# 
  5245  0F4C                     	;# 
  5246  0F4E                     	;# 
  5247  0F4F                     	;# 
  5248  0F50                     	;# 
  5249  0F51                     	;# 
  5250  0F52                     	;# 
  5251  0F53                     	;# 
  5252  0F54                     	;# 
  5253  0F55                     	;# 
  5254  0F56                     	;# 
  5255  0F57                     	;# 
  5256  0F65                     	;# 
  5257  0F68                     	;# 
  5258  0F69                     	;# 
  5259  0F6A                     	;# 
  5260  0F6B                     	;# 
  5261  0FE4                     	;# 
  5262  0FE5                     	;# 
  5263  0FE6                     	;# 
  5264  0FE7                     	;# 
  5265  0FE8                     	;# 
  5266  0FE9                     	;# 
  5267  0FEA                     	;# 
  5268  0FEB                     	;# 
  5269  0FED                     	;# 
  5270  0FEE                     	;# 
  5271  0FEF                     	;_samples
  5272                           
  5273                           	psect	idataBANK1
  5274  0009                     __pidataBANK1:	
  5275                           
  5276                           ;initializer for _Imode1
  5277  0009  3401               	retlw	1
  5278                           
  5279                           ;initializer for _Imode0
  5280  000A  3401               	retlw	1
  5281                           
  5282                           	psect	idataBANK2
  5283  13A1                     __pidataBANK2:	
  5284                           
  5285                           ;initializer for _channels
  5286  13A1  3417               	retlw	23
  5287  13A2  3400               	retlw	0
  5288  13A3  3415               	retlw	21
  5289  13A4  3400               	retlw	0
  5290  13A5  3413               	retlw	19
  5291  13A6  3400               	retlw	0
  5292  13A7  3411               	retlw	17
  5293  13A8  3400               	retlw	0
  5294  13A9  3416               	retlw	22
  5295  13AA  3400               	retlw	0
  5296  13AB  3414               	retlw	20
  5297  13AC  3400               	retlw	0
  5298  13AD  3412               	retlw	18
  5299  13AE  3400               	retlw	0
  5300  13AF  3410               	retlw	16
  5301  13B0  3400               	retlw	0
  5302                           
  5303                           	psect	stringtext1
  5304  0800                     __pstringtext1:	
  5305  0800                     _fonts:	
  5306  0800  3400               	retlw	0
  5307  0801  3400               	retlw	0
  5308  0802  3400               	retlw	0
  5309  0803  3400               	retlw	0
  5310  0804  344E               	retlw	78
  5311  0805  3400               	retlw	0
  5312  0806  3406               	retlw	6
  5313  0807  3400               	retlw	0
  5314  0808  3406               	retlw	6
  5315  0809  34FF               	retlw	255
  5316  080A  34FF               	retlw	255
  5317  080B  34FF               	retlw	255
  5318  080C  3448               	retlw	72
  5319  080D  34D6               	retlw	214
  5320  080E  3424               	retlw	36
  5321  080F  3412               	retlw	18
  5322  0810  3408               	retlw	8
  5323  0811  3424               	retlw	36
  5324  0812  34FF               	retlw	255
  5325  0813  34FF               	retlw	255
  5326  0814  34FF               	retlw	255
  5327  0815  3400               	retlw	0
  5328  0816  3406               	retlw	6
  5329  0817  3400               	retlw	0
  5330  0818  3438               	retlw	56
  5331  0819  3444               	retlw	68
  5332  081A  3482               	retlw	130
  5333  081B  3482               	retlw	130
  5334  081C  3444               	retlw	68
  5335  081D  3438               	retlw	56
  5336  081E  3414               	retlw	20
  5337  081F  3408               	retlw	8
  5338  0820  343E               	retlw	62
  5339  0821  3410               	retlw	16
  5340  0822  3438               	retlw	56
  5341  0823  3410               	retlw	16
  5342  0824  34A0               	retlw	160
  5343  0825  3460               	retlw	96
  5344  0826  3400               	retlw	0
  5345  0827  3410               	retlw	16
  5346  0828  3410               	retlw	16
  5347  0829  3410               	retlw	16
  5348  082A  3460               	retlw	96
  5349  082B  3460               	retlw	96
  5350  082C  3400               	retlw	0
  5351  082D  3460               	retlw	96
  5352  082E  3418               	retlw	24
  5353  082F  3406               	retlw	6
  5354  0830  347C               	retlw	124
  5355  0831  3442               	retlw	66
  5356  0832  347C               	retlw	124
  5357  0833  3444               	retlw	68
  5358  0834  347E               	retlw	126
  5359  0835  3440               	retlw	64
  5360  0836  3464               	retlw	100
  5361  0837  3452               	retlw	82
  5362  0838  344C               	retlw	76
  5363  0839  344A               	retlw	74
  5364  083A  344A               	retlw	74
  5365  083B  3434               	retlw	52
  5366  083C  3438               	retlw	56
  5367  083D  3424               	retlw	36
  5368  083E  347E               	retlw	126
  5369  083F  344E               	retlw	78
  5370  0840  344A               	retlw	74
  5371  0841  3432               	retlw	50
  5372  0842  343C               	retlw	60
  5373  0843  344A               	retlw	74
  5374  0844  3432               	retlw	50
  5375  0845  3462               	retlw	98
  5376  0846  341A               	retlw	26
  5377  0847  3406               	retlw	6
  5378  0848  3476               	retlw	118
  5379  0849  344A               	retlw	74
  5380  084A  3476               	retlw	118
  5381  084B  344C               	retlw	76
  5382  084C  3452               	retlw	82
  5383  084D  343C               	retlw	60
  5384  084E  346C               	retlw	108
  5385  084F  346C               	retlw	108
  5386  0850  3400               	retlw	0
  5387  0851  34AC               	retlw	172
  5388  0852  346C               	retlw	108
  5389  0853  3400               	retlw	0
  5390  0854  3410               	retlw	16
  5391  0855  3428               	retlw	40
  5392  0856  3444               	retlw	68
  5393  0857  3428               	retlw	40
  5394  0858  3428               	retlw	40
  5395  0859  3428               	retlw	40
  5396  085A  3444               	retlw	68
  5397  085B  3428               	retlw	40
  5398  085C  3410               	retlw	16
  5399  085D  3402               	retlw	2
  5400  085E  3459               	retlw	89
  5401  085F  3406               	retlw	6
  5402  0860  34FF               	retlw	255
  5403  0861  34FF               	retlw	255
  5404  0862  34FF               	retlw	255
  5405  0863  347C               	retlw	124
  5406  0864  3412               	retlw	18
  5407  0865  347C               	retlw	124
  5408  0866  347E               	retlw	126
  5409  0867  345A               	retlw	90
  5410  0868  3434               	retlw	52
  5411  0869  343C               	retlw	60
  5412  086A  3442               	retlw	66
  5413  086B  3442               	retlw	66
  5414  086C  347E               	retlw	126
  5415  086D  3442               	retlw	66
  5416  086E  343C               	retlw	60
  5417  086F  347E               	retlw	126
  5418  0870  344A               	retlw	74
  5419  0871  3442               	retlw	66
  5420  0872  347E               	retlw	126
  5421  0873  340A               	retlw	10
  5422  0874  340A               	retlw	10
  5423  0875  343C               	retlw	60
  5424  0876  3452               	retlw	82
  5425  0877  3434               	retlw	52
  5426  0878  347E               	retlw	126
  5427  0879  3408               	retlw	8
  5428  087A  347E               	retlw	126
  5429  087B  3442               	retlw	66
  5430  087C  347E               	retlw	126
  5431  087D  3442               	retlw	66
  5432  087E  3430               	retlw	48
  5433  087F  3440               	retlw	64
  5434  0880  343E               	retlw	62
  5435  0881  347E               	retlw	126
  5436  0882  3418               	retlw	24
  5437  0883  3466               	retlw	102
  5438  0884  347E               	retlw	126
  5439  0885  3440               	retlw	64
  5440  0886  3440               	retlw	64
  5441  0887  347E               	retlw	126
  5442  0888  341C               	retlw	28
  5443  0889  347E               	retlw	126
  5444  088A  347E               	retlw	126
  5445  088B  3402               	retlw	2
  5446  088C  347E               	retlw	126
  5447  088D  343C               	retlw	60
  5448  088E  3442               	retlw	66
  5449  088F  343C               	retlw	60
  5450  0890  347E               	retlw	126
  5451  0891  3412               	retlw	18
  5452  0892  340C               	retlw	12
  5453  0893  347E               	retlw	126
  5454  0894  3462               	retlw	98
  5455  0895  34FE               	retlw	254
  5456  0896  347E               	retlw	126
  5457  0897  3432               	retlw	50
  5458  0898  344E               	retlw	78
  5459  0899  3444               	retlw	68
  5460  089A  344A               	retlw	74
  5461  089B  3432               	retlw	50
  5462  089C  3402               	retlw	2
  5463  089D  347E               	retlw	126
  5464  089E  3402               	retlw	2
  5465  089F  347E               	retlw	126
  5466  08A0  3440               	retlw	64
  5467  08A1  347E               	retlw	126
  5468  08A2  343E               	retlw	62
  5469  08A3  3440               	retlw	64
  5470  08A4  343E               	retlw	62
  5471  08A5  347E               	retlw	126
  5472  08A6  3438               	retlw	56
  5473  08A7  347E               	retlw	126
  5474  08A8  3466               	retlw	102
  5475  08A9  3418               	retlw	24
  5476  08AA  3466               	retlw	102
  5477  08AB  340E               	retlw	14
  5478  08AC  3470               	retlw	112
  5479  08AD  340E               	retlw	14
  5480  08AE  3462               	retlw	98
  5481  08AF  345A               	retlw	90
  5482  08B0  3446               	retlw	70
  5483  08B1  3400               	retlw	0
  5484  08B2  347E               	retlw	126
  5485  08B3  3442               	retlw	66
  5486  08B4  3406               	retlw	6
  5487  08B5  3418               	retlw	24
  5488  08B6  3460               	retlw	96
  5489  08B7  3442               	retlw	66
  5490  08B8  347E               	retlw	126
  5491  08B9  3400               	retlw	0
  5492  08BA  3404               	retlw	4
  5493  08BB  3402               	retlw	2
  5494  08BC  3404               	retlw	4
  5495  08BD  3440               	retlw	64
  5496  08BE  3440               	retlw	64
  5497  08BF  3440               	retlw	64
  5498  08C0  3400               	retlw	0
  5499  08C1  3402               	retlw	2
  5500  08C2  3404               	retlw	4
  5501  08C3  3474               	retlw	116
  5502  08C4  3454               	retlw	84
  5503  08C5  3478               	retlw	120
  5504  08C6  347E               	retlw	126
  5505  08C7  3448               	retlw	72
  5506  08C8  3430               	retlw	48
  5507  08C9  3430               	retlw	48
  5508  08CA  3448               	retlw	72
  5509  08CB  3448               	retlw	72
  5510  08CC  3430               	retlw	48
  5511  08CD  3448               	retlw	72
  5512  08CE  347E               	retlw	126
  5513  08CF  3438               	retlw	56
  5514  08D0  3454               	retlw	84
  5515  08D1  3458               	retlw	88
  5516  08D2  347C               	retlw	124
  5517  08D3  340A               	retlw	10
  5518  08D4  3402               	retlw	2
  5519  08D5  3498               	retlw	152
  5520  08D6  34A4               	retlw	164
  5521  08D7  347C               	retlw	124
  5522  08D8  347E               	retlw	126
  5523  08D9  3408               	retlw	8
  5524  08DA  3470               	retlw	112
  5525  08DB  3448               	retlw	72
  5526  08DC  347A               	retlw	122
  5527  08DD  3440               	retlw	64
  5528  08DE  3488               	retlw	136
  5529  08DF  34FA               	retlw	250
  5530  08E0  3400               	retlw	0
  5531  08E1  347E               	retlw	126
  5532  08E2  3418               	retlw	24
  5533  08E3  3464               	retlw	100
  5534  08E4  3442               	retlw	66
  5535  08E5  347E               	retlw	126
  5536  08E6  3440               	retlw	64
  5537  08E7  347C               	retlw	124
  5538  08E8  3438               	retlw	56
  5539  08E9  347C               	retlw	124
  5540  08EA  347C               	retlw	124
  5541  08EB  3404               	retlw	4
  5542  08EC  3478               	retlw	120
  5543  08ED  3438               	retlw	56
  5544  08EE  3444               	retlw	68
  5545  08EF  3438               	retlw	56
  5546  08F0  34FC               	retlw	252
  5547  08F1  3424               	retlw	36
  5548  08F2  3418               	retlw	24
  5549  08F3  3418               	retlw	24
  5550  08F4  3424               	retlw	36
  5551  08F5  34FC               	retlw	252
  5552  08F6  3478               	retlw	120
  5553  08F7  3404               	retlw	4
  5554  08F8  3404               	retlw	4
  5555  08F9  3448               	retlw	72
  5556  08FA  3454               	retlw	84
  5557  08FB  3424               	retlw	36
  5558  08FC  3404               	retlw	4
  5559  08FD  343E               	retlw	62
  5560  08FE  3444               	retlw	68
  5561  08FF  347C               	retlw	124
  5562  0900  3440               	retlw	64
  5563  0901  347C               	retlw	124
  5564  0902  343C               	retlw	60
  5565  0903  3440               	retlw	64
  5566  0904  343C               	retlw	60
  5567  0905  347C               	retlw	124
  5568  0906  3430               	retlw	48
  5569  0907  347C               	retlw	124
  5570  0908  346C               	retlw	108
  5571  0909  3410               	retlw	16
  5572  090A  346C               	retlw	108
  5573  090B  349C               	retlw	156
  5574  090C  34A0               	retlw	160
  5575  090D  347C               	retlw	124
  5576  090E  3464               	retlw	100
  5577  090F  3454               	retlw	84
  5578  0910  344C               	retlw	76
  5579  0911  340C               	retlw	12
  5580  0912  3412               	retlw	18
  5581  0913  340C               	retlw	12
  5582  0914  34FF               	retlw	255
  5583  0915  34FF               	retlw	255
  5584  0916  34FF               	retlw	255
  5585  0917  34FF               	retlw	255
  5586  0918  34FF               	retlw	255
  5587  0919  34FF               	retlw	255
  5588  091A  34FF               	retlw	255
  5589  091B  34FF               	retlw	255
  5590  091C  34FF               	retlw	255
  5591  091D  34FF               	retlw	255
  5592  091E  34FF               	retlw	255
  5593  091F  34FF               	retlw	255
  5594  0920  34FF               	retlw	255
  5595  0921  34FF               	retlw	255
  5596  0922  34FF               	retlw	255
  5597  0923  34FF               	retlw	255
  5598  0924  34FF               	retlw	255
  5599  0925  34FF               	retlw	255
  5600  0926  34FC               	retlw	252
  5601  0927  3440               	retlw	64
  5602  0928  347C               	retlw	124
  5603  0929  34FF               	retlw	255
  5604  092A  34FF               	retlw	255
  5605  092B  34FF               	retlw	255
  5606  092C  34FF               	retlw	255
  5607  092D  34FF               	retlw	255
  5608  092E  34FF               	retlw	255
  5609  092F                     __end_of_fonts:	
  5610                           
  5611                           	psect	stringtext2
  5612  1800                     __pstringtext2:	
  5613  1800                     log@coeff:	
  5614  1800  3400               	retlw	0
  5615  1801  3400               	retlw	0
  5616  1802  3400               	retlw	0
  5617  1803  3400               	retlw	0
  5618  1804  3480               	retlw	128
  5619  1805  343F               	retlw	63
  5620  1806  34F0               	retlw	240
  5621  1807  34FF               	retlw	255
  5622  1808  34BE               	retlw	190
  5623  1809  34E2               	retlw	226
  5624  180A  34A9               	retlw	169
  5625  180B  343E               	retlw	62
  5626  180C  3483               	retlw	131
  5627  180D  3476               	retlw	118
  5628  180E  34BE               	retlw	190
  5629  180F  34AE               	retlw	174
  5630  1810  342B               	retlw	43
  5631  1811  343E               	retlw	62
  5632  1812  343C               	retlw	60
  5633  1813  34C3               	retlw	195
  5634  1814  34BD               	retlw	189
  5635  1815  34D2               	retlw	210
  5636  1816  3413               	retlw	19
  5637  1817  343D               	retlw	61
  5638  1818  3478               	retlw	120
  5639  1819  34D3               	retlw	211
  5640  181A  34BB               	retlw	187
  5641  181B                     __end_oflog@coeff:	
  5642                           
  5643                           	psect	nvBANK1
  5644  00E7                     __pnvBANK1:	
  5645  00E7                     _Vref:	
  5646  00E7                     	ds	2
  5647  00E9                     _Iref:	
  5648  00E9                     	ds	2
  5649  00EB                     _IminCount:	
  5650  00EB                     	ds	2
  5651  00ED                     _battery_state:	
  5652  00ED                     	ds	1
  5653                           
  5654                           	psect	nvBANK2
  5655  0160                     __pnvBANK2:	
  5656  0160                     _Imin:	
  5657  0160                     	ds	2
  5658  0162                     _state_counter:	
  5659  0162                     	ds	2
  5660  0013                     _TRISC	set	19
  5661  0012                     _TRISB	set	18
  5662  0011                     _TRISA	set	17
  5663  0018                     _LATC	set	24
  5664  0017                     _LATB	set	23
  5665  0016                     _LATA	set	22
  5666  0016                     _LATAbits	set	22
  5667  0011                     _TRISAbits	set	17
  5668  006A                     _RB2	set	106
  5669  005F                     _GIE	set	95
  5670  0093                     _ADCON0	set	147
  5671  009D                     _ADACQ	set	157
  5672  009C                     _ADPRE	set	156
  5673  009B                     _ADCAP	set	155
  5674  009A                     _ADREF	set	154
  5675  0098                     _ADCLK	set	152
  5676  0097                     _ADSTAT	set	151
  5677  0099                     _ADACT	set	153
  5678  0096                     _ADCON3	set	150
  5679  0095                     _ADCON2	set	149
  5680  0094                     _ADCON1	set	148
  5681  008C                     _ADRESL	set	140
  5682  008D                     _ADRESH	set	141
  5683  0093                     _ADCON0bits	set	147
  5684  009E                     _ADPCH	set	158
  5685  0113                     _ADSTPTH	set	275
  5686  0112                     _ADSTPTL	set	274
  5687  0111                     _ADUTHH	set	273
  5688  0110                     _ADUTHL	set	272
  5689  010F                     _ADLTHH	set	271
  5690  010E                     _ADLTHL	set	270
  5691  010D                     _ADRPT	set	269
  5692  021E                     _CCPTMRS0bits	set	542
  5693  021F                     _CCPTMRS1bits	set	543
  5694  0294                     _T4CONbits	set	660
  5695  0292                     _T4TMR	set	658
  5696  0293                     _T4PR	set	659
  5697  0297                     _T4RST	set	663
  5698  0295                     _T4HLT	set	661
  5699  0296                     _T4CLKCON	set	662
  5700  0294                     _T4CON	set	660
  5701  028E                     _T2CONbits	set	654
  5702  028C                     _T2TMR	set	652
  5703  028D                     _T2PR	set	653
  5704  0291                     _T2RST	set	657
  5705  028F                     _T2HLT	set	655
  5706  0290                     _T2CLKCON	set	656
  5707  028E                     _T2CON	set	654
  5708  030C                     _CCPR1L	set	780
  5709  030D                     _CCPR1H	set	781
  5710  030E                     _CCP1CONbits	set	782
  5711  0390                     _PWM7DCL	set	912
  5712  0391                     _PWM7DCH	set	913
  5713  0392                     _PWM7CON	set	914
  5714  038C                     _PWM6DCL	set	908
  5715  038D                     _PWM6DCH	set	909
  5716  038E                     _PWM6CON	set	910
  5717  0710                     _PIR4bits	set	1808
  5718  0716                     _PIE0bits	set	1814
  5719  0892                     _OSCTUNE	set	2194
  5720  0893                     _OSCFRQ	set	2195
  5721  0891                     _OSCEN	set	2193
  5722  088F                     _OSCCON3	set	2191
  5723  088D                     _OSCCON1	set	2189
  5724  090C                     _FVRCON	set	2316
  5725  0E8F                     _PPSLOCKbits	set	3727
  5726  0E8F                     _PPSLOCK	set	3727
  5727  0F18                     _RB0PPS	set	3864
  5728  0F17                     _RA7PPS	set	3863
  5729  0F16                     _RA6PPS	set	3862
  5730  0F4E                     _ANSELC	set	3918
  5731  0F43                     _ANSELB	set	3907
  5732  0F38                     _ANSELA	set	3896
  5733  0F65                     _WPUE	set	3941
  5734  0F4F                     _WPUC	set	3919
  5735  0F44                     _WPUB	set	3908
  5736  0F39                     _WPUA	set	3897
  5737                           
  5738                           	psect	stringtext3
  5739  181B                     __pstringtext3:	
  5740  181B                     STR_1:	
  5741  181B  3445               	retlw	69	;'E'
  5742  181C  3466               	retlw	102	;'f'
  5743  181D  3466               	retlw	102	;'f'
  5744  181E  343A               	retlw	58	;':'
  5745  181F  3400               	retlw	0
  5746                           
  5747                           	psect	stringtext4
  5748  0000                     __pstringtext4:	
  5749                           
  5750                           ; #config settings
  5751  0000                     
  5752                           	psect	cinit
  5753  07C1                     start_initialization:	
  5754  07C1                     __initialization:		;BIGRAM
  5755                           
  5756                           ; Initialize objects allocated to BANK1
  5757  07C1  0021               	movlb	1	; select bank1
  5758  07C2  3180  2009  3187   	fcall	__pidataBANK1	;fetch initializer
  5759  07C5  00EE               	movwf	__pdataBANK1& (0+127)
  5760  07C6  3180  200A  3187   	fcall	__pidataBANK1+1	;fetch initializer
  5761  07C9  00EF               	movwf	(__pdataBANK1+1)& (0+127)
  5762                           
  5763                           ; Initialize objects allocated to BANK2
  5764  07CA  30A1               	movlw	low __pidataBANK2
  5765  07CB  0084               	movwf	4
  5766  07CC  3093               	movlw	(high __pidataBANK2)| (0+128)
  5767  07CD  0085               	movwf	5
  5768  07CE  3050               	movlw	low __pdataBANK2
  5769  07CF  0086               	movwf	6
  5770  07D0  3001               	movlw	high __pdataBANK2
  5771  07D1  0087               	movwf	7
  5772  07D2  3000               	movlw	0
  5773  07D3  00FF               	movwf	btemp+1
  5774  07D4  3010               	movlw	16
  5775  07D5  3193  2379  3187   	fcall	init_ram
  5776                           
  5777                           ; Clear objects allocated to BIGRAM
  5778  07D8  3020               	movlw	low (0+8480)
  5779  07D9  0084               	movwf	4
  5780  07DA  3021               	movlw	high (0+8480)
  5781  07DB  0085               	movwf	5
  5782  07DC  30D0               	movlw	208
  5783  07DD  00FE               	movwf	btemp
  5784  07DE  3002               	movlw	2
  5785  07DF  00FF               	movwf	btemp+1
  5786  07E0  3193  236D  3187   	fcall	clear_ram0
  5787                           
  5788                           ; Clear objects allocated to BANK0
  5789  07E3  0020               	movlb	0	; select bank0
  5790  07E4  01EB               	clrf	__pbssBANK0& (0+127)
  5791  07E5  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  5792  07E6  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  5793  07E7  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  5794                           
  5795                           ; Clear objects allocated to BANK1
  5796  07E8  30C6               	movlw	low __pbssBANK1
  5797  07E9  0084               	movwf	4
  5798  07EA  3000               	movlw	high __pbssBANK1
  5799  07EB  0085               	movwf	5
  5800  07EC  3021               	movlw	33
  5801  07ED  00FE               	movwf	btemp
  5802  07EE  3000               	movlw	0
  5803  07EF  00FF               	movwf	btemp+1
  5804  07F0  3193  236D  3187   	fcall	clear_ram0
  5805                           
  5806                           ; Clear objects allocated to BANK2
  5807  07F3  3020               	movlw	low __pbssBANK2
  5808  07F4  0084               	movwf	4
  5809  07F5  3001               	movlw	high __pbssBANK2
  5810  07F6  0085               	movwf	5
  5811  07F7  3030               	movlw	48
  5812  07F8  00FE               	movwf	btemp
  5813  07F9  3000               	movlw	0
  5814  07FA  00FF               	movwf	btemp+1
  5815  07FB  3193  236D         	fcall	clear_ram0
  5816  07FD                     end_of_initialization:	
  5817                           ;End of C runtime variable initialization code
  5818                           
  5819  07FD                     __end_of__initialization:	
  5820  07FD  0020               	movlb	0
  5821  07FE  3182  2A10         	ljmp	_main	;jump to C main() function
  5822                           
  5823                           	psect	bssBANK0
  5824  006B                     __pbssBANK0:	
  5825  006B                     _readButtons:	
  5826  006B                     	ds	2
  5827  006D                     _lastButton:	
  5828  006D                     	ds	1
  5829  006E                     _button:	
  5830  006E                     	ds	1
  5831                           
  5832                           	psect	bssBANK1
  5833  00C6                     __pbssBANK1:	
  5834  00C6                     _current:	
  5835  00C6                     	ds	8
  5836  00CE                     _voltage:	
  5837  00CE                     	ds	8
  5838  00D6                     LCDWriteInt@F14396:	
  5839  00D6                     	ds	5
  5840  00DB                     _errno:	
  5841  00DB                     	ds	2
  5842  00DD                     _Iout:	
  5843  00DD                     	ds	2
  5844  00DF                     _warmup:	
  5845  00DF                     	ds	2
  5846  00E1                     _Iflat_db:	
  5847  00E1                     	ds	2
  5848  00E3                     _sampleIndex:	
  5849  00E3                     	ds	2
  5850  00E5                     _j:	
  5851  00E5                     	ds	1
  5852  00E6                     _cc_cv:	
  5853  00E6                     	ds	1
  5854                           
  5855                           	psect	dataBANK1
  5856  00EE                     __pdataBANK1:	
  5857  00EE                     _Imode1:	
  5858  00EE                     	ds	1
  5859  00EF                     _Imode0:	
  5860  00EF                     	ds	1
  5861                           
  5862                           	psect	bssBANK2
  5863  0120                     __pbssBANK2:	
  5864  0120                     _totals:	
  5865  0120                     	ds	32
  5866  0140                     _analogs:	
  5867  0140                     	ds	16
  5868                           
  5869                           	psect	dataBANK2
  5870  0150                     __pdataBANK2:	
  5871  0150                     _channels:	
  5872  0150                     	ds	16
  5873                           
  5874                           	psect	inittext
  5875  1379                     init_ram:	
  5876  1379  00FE               	movwf	126
  5877  137A                     initloop:	
  5878  137A  0012               	moviw fsr0++
  5879  137B  001E               	movwi fsr1++
  5880  137C  3001               	movlw	1
  5881  137D  02FE               	subwf	126,f
  5882  137E  3000               	movlw	0
  5883  137F  3BFF               	subwfb	127,f
  5884  1380  087F               	movf	127,w
  5885  1381  047E               	iorwf	126,w
  5886  1382  1903               	btfsc	3,2
  5887  1383  3400               	retlw	0
  5888  1384  2B7A               	goto	initloop
  5889                           
  5890                           	psect	clrtext
  5891  136D                     clear_ram0:	
  5892                           ;	Called with FSR0 containing the base address, and
  5893                           ;	btemp/btemp+1 has the size to clear
  5894                           
  5895  136D  0064               	clrwdt	;clear the watchdog before getting into this loop
  5896  136E                     clrloop0:	
  5897  136E  0180               	clrf	0	;clear RAM location pointed to by FSR
  5898  136F  3101               	addfsr 0,1
  5899  1370  3001               	movlw	1
  5900  1371  02FE               	subwf	126,f
  5901  1372  3000               	movlw	0
  5902  1373  3BFF               	subwfb	127,f
  5903  1374  087F               	movf	127,w
  5904  1375  047E               	iorwf	126,w
  5905  1376  1903               	btfsc	3,2
  5906  1377  3400               	retlw	0	;all done for this memory range, return
  5907  1378  2B6E               	goto	clrloop0	;have we reached the end yet?
  5908                           
  5909                           	psect	cstackBANK1
  5910  00A0                     __pcstackBANK1:	
  5911  00A0                     main@VIn0_Old:	
  5912                           
  5913                           ; 2 bytes @ 0x0
  5914  00A0                     	ds	2
  5915  00A2                     main@VIn1_Old:	
  5916                           
  5917                           ; 2 bytes @ 0x2
  5918  00A2                     	ds	2
  5919  00A4                     main@power1OutOld:	
  5920                           
  5921                           ; 2 bytes @ 0x4
  5922  00A4                     	ds	2
  5923  00A6                     _main$1297:	
  5924                           
  5925                           ; 3 bytes @ 0x6
  5926  00A6                     	ds	3
  5927  00A9                     main@MPPT1:	
  5928                           
  5929                           ; 2 bytes @ 0x9
  5930  00A9                     	ds	2
  5931  00AB                     main@power0OutOld:	
  5932                           
  5933                           ; 2 bytes @ 0xB
  5934  00AB                     	ds	2
  5935  00AD                     main@batteryTemp:	
  5936                           
  5937                           ; 2 bytes @ 0xD
  5938  00AD                     	ds	2
  5939  00AF                     main@fastLoop:	
  5940                           
  5941                           ; 1 bytes @ 0xF
  5942  00AF                     	ds	1
  5943  00B0                     main@slowLoop:	
  5944                           
  5945                           ; 1 bytes @ 0x10
  5946  00B0                     	ds	1
  5947  00B1                     main@displayRefresh:	
  5948                           
  5949                           ; 1 bytes @ 0x11
  5950  00B1                     	ds	1
  5951  00B2                     _main$1296:	
  5952                           
  5953                           ; 3 bytes @ 0x12
  5954  00B2                     	ds	3
  5955  00B5                     _main$1298:	
  5956                           
  5957                           ; 2 bytes @ 0x15
  5958  00B5                     	ds	2
  5959  00B7                     _main$1295:	
  5960                           
  5961                           ; 2 bytes @ 0x17
  5962  00B7                     	ds	2
  5963  00B9                     main@menuButton:	
  5964                           
  5965                           ; 1 bytes @ 0x19
  5966  00B9                     	ds	1
  5967  00BA                     main@efficiency:	
  5968                           
  5969                           ; 3 bytes @ 0x1A
  5970  00BA                     	ds	3
  5971  00BD                     main@dutyCycle7:	
  5972                           
  5973                           ; 2 bytes @ 0x1D
  5974  00BD                     	ds	2
  5975  00BF                     main@dutyCycle1:	
  5976                           
  5977                           ; 2 bytes @ 0x1F
  5978  00BF                     	ds	2
  5979  00C1                     main@MPPT0:	
  5980                           
  5981                           ; 2 bytes @ 0x21
  5982  00C1                     	ds	2
  5983  00C3                     main@j:	
  5984                           
  5985                           ; 1 bytes @ 0x23
  5986  00C3                     	ds	1
  5987  00C4                     main@dutyCycle6:	
  5988                           
  5989                           ; 2 bytes @ 0x24
  5990  00C4                     	ds	2
  5991                           
  5992                           	psect	cstackCOMMON
  5993  0070                     __pcstackCOMMON:	
  5994  0070                     ?___ftge:	
  5995  0070                     ?_LCDWrite:	
  5996                           ; 1 bit 
  5997                           
  5998  0070                     ?_OSCILLATOR_Initialize:	
  5999                           ; 1 bytes @ 0x0
  6000                           
  6001  0070                     ??_OSCILLATOR_Initialize:	
  6002                           ; 1 bytes @ 0x0
  6003                           
  6004  0070                     ?_TMR2_Initialize:	
  6005                           ; 1 bytes @ 0x0
  6006                           
  6007  0070                     ??_TMR2_Initialize:	
  6008                           ; 1 bytes @ 0x0
  6009                           
  6010  0070                     ?_TMR4_Initialize:	
  6011                           ; 1 bytes @ 0x0
  6012                           
  6013  0070                     ??_TMR4_Initialize:	
  6014                           ; 1 bytes @ 0x0
  6015                           
  6016  0070                     ?_calculateCurrent0:	
  6017                           ; 1 bytes @ 0x0
  6018                           
  6019  0070                     ?_calculateCurrent1:	
  6020                           ; 1 bytes @ 0x0
  6021                           
  6022  0070                     ?_ADC_Initialize:	
  6023                           ; 1 bytes @ 0x0
  6024                           
  6025  0070                     ??_ADC_Initialize:	
  6026                           ; 1 bytes @ 0x0
  6027                           
  6028  0070                     ?_Init_Battery_State_Machine:	
  6029                           ; 1 bytes @ 0x0
  6030                           
  6031  0070                     ??_Init_Battery_State_Machine:	
  6032                           ; 1 bytes @ 0x0
  6033                           
  6034  0070                     ?_Battery_State_Machine:	
  6035                           ; 1 bytes @ 0x0
  6036                           
  6037  0070                     ??_Battery_State_Machine:	
  6038                           ; 1 bytes @ 0x0
  6039                           
  6040  0070                     ?_cc_cv_mode:	
  6041                           ; 1 bytes @ 0x0
  6042                           
  6043  0070                     ??_cc_cv_mode:	
  6044                           ; 1 bytes @ 0x0
  6045                           
  6046  0070                     ?_LCDWriteCharacter:	
  6047                           ; 1 bytes @ 0x0
  6048                           
  6049  0070                     ?_LCDClear:	
  6050                           ; 1 bytes @ 0x0
  6051                           
  6052  0070                     ?_LCDInit:	
  6053                           ; 1 bytes @ 0x0
  6054                           
  6055  0070                     ?_PIN_MANAGER_Initialize:	
  6056                           ; 1 bytes @ 0x0
  6057                           
  6058  0070                     ??_PIN_MANAGER_Initialize:	
  6059                           ; 1 bytes @ 0x0
  6060                           
  6061  0070                     ?_PWM_Initialize:	
  6062                           ; 1 bytes @ 0x0
  6063                           
  6064  0070                     ??_PWM_Initialize:	
  6065                           ; 1 bytes @ 0x0
  6066                           
  6067  0070                     ?_PWM6_LoadDutyValue:	
  6068                           ; 1 bytes @ 0x0
  6069                           
  6070  0070                     ?_PWM7_LoadDutyValue:	
  6071                           ; 1 bytes @ 0x0
  6072                           
  6073  0070                     ?_PWM1_LoadDutyValue:	
  6074                           ; 1 bytes @ 0x0
  6075                           
  6076  0070                     ?_SYSTEM_Initialize:	
  6077                           ; 1 bytes @ 0x0
  6078                           
  6079  0070                     ?_readButton:	
  6080                           ; 1 bytes @ 0x0
  6081                           
  6082  0070                     ?_main:	
  6083                           ; 1 bytes @ 0x0
  6084                           
  6085  0070                     ?_ADCRead:	
  6086                           ; 1 bytes @ 0x0
  6087                           
  6088  0070                     ?___awdiv:	
  6089                           ; 2 bytes @ 0x0
  6090                           
  6091  0070                     ?___lwmod:	
  6092                           ; 2 bytes @ 0x0
  6093                           
  6094  0070                     ?___ftpack:	
  6095                           ; 2 bytes @ 0x0
  6096                           
  6097  0070                     ?_frexp:	
  6098                           ; 3 bytes @ 0x0
  6099                           
  6100  0070                     ?___aldiv:	
  6101                           ; 3 bytes @ 0x0
  6102                           
  6103  0070                     LCDWrite@data:	
  6104                           ; 4 bytes @ 0x0
  6105                           
  6106  0070                     PIN_MANAGER_Initialize@state:	
  6107                           ; 1 bytes @ 0x0
  6108                           
  6109  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6110                           ; 1 bytes @ 0x0
  6111                           
  6112  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6113                           ; 2 bytes @ 0x0
  6114                           
  6115  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6116                           ; 2 bytes @ 0x0
  6117                           
  6118  0070                     ___awdiv@divisor:	
  6119                           ; 2 bytes @ 0x0
  6120                           
  6121  0070                     ___lwmod@divisor:	
  6122                           ; 2 bytes @ 0x0
  6123                           
  6124  0070                     ___ftpack@arg:	
  6125                           ; 2 bytes @ 0x0
  6126                           
  6127  0070                     ___ftge@ff1:	
  6128                           ; 3 bytes @ 0x0
  6129                           
  6130  0070                     frexp@value:	
  6131                           ; 3 bytes @ 0x0
  6132                           
  6133  0070                     ___aldiv@divisor:	
  6134                           ; 3 bytes @ 0x0
  6135                           
  6136                           
  6137                           ; 4 bytes @ 0x0
  6138  0070                     	ds	1
  6139  0071                     ??_LCDWrite:	
  6140                           
  6141                           ; 1 bytes @ 0x1
  6142  0071                     	ds	1
  6143  0072                     ??_PWM6_LoadDutyValue:	
  6144  0072                     ??_PWM7_LoadDutyValue:	
  6145                           ; 1 bytes @ 0x2
  6146                           
  6147  0072                     ??_PWM1_LoadDutyValue:	
  6148                           ; 1 bytes @ 0x2
  6149                           
  6150  0072                     LCDWrite@data_or_command:	
  6151                           ; 1 bytes @ 0x2
  6152                           
  6153  0072                     ___awdiv@dividend:	
  6154                           ; 1 bytes @ 0x2
  6155                           
  6156  0072                     ___lwmod@dividend:	
  6157                           ; 2 bytes @ 0x2
  6158                           
  6159                           
  6160                           ; 2 bytes @ 0x2
  6161  0072                     	ds	1
  6162  0073                     ??_ADCRead:	
  6163  0073                     ADCRead@channel:	
  6164                           ; 1 bytes @ 0x3
  6165                           
  6166  0073                     LCDWrite@d:	
  6167                           ; 1 bytes @ 0x3
  6168                           
  6169  0073                     ___ftpack@exp:	
  6170                           ; 1 bytes @ 0x3
  6171                           
  6172  0073                     frexp@eptr:	
  6173                           ; 1 bytes @ 0x3
  6174                           
  6175  0073                     ___ftge@ff2:	
  6176                           ; 1 bytes @ 0x3
  6177                           
  6178                           
  6179                           ; 3 bytes @ 0x3
  6180  0073                     	ds	1
  6181  0074                     ??_frexp:	
  6182  0074                     ??_readButton:	
  6183                           ; 1 bytes @ 0x4
  6184                           
  6185  0074                     ??___awdiv:	
  6186                           ; 1 bytes @ 0x4
  6187                           
  6188  0074                     ??___lwmod:	
  6189                           ; 1 bytes @ 0x4
  6190                           
  6191  0074                     LCDWrite@i:	
  6192                           ; 1 bytes @ 0x4
  6193                           
  6194  0074                     ___ftpack@sign:	
  6195                           ; 1 bytes @ 0x4
  6196                           
  6197  0074                     ___aldiv@dividend:	
  6198                           ; 1 bytes @ 0x4
  6199                           
  6200                           
  6201                           ; 4 bytes @ 0x4
  6202  0074                     	ds	1
  6203  0075                     ??___ftpack:	
  6204  0075                     ?_gotoXY:	
  6205                           ; 1 bytes @ 0x5
  6206                           
  6207  0075                     ??_LCDInit:	
  6208                           ; 1 bytes @ 0x5
  6209                           
  6210  0075                     gotoXY@y:	
  6211                           ; 1 bytes @ 0x5
  6212                           
  6213  0075                     ___awdiv@counter:	
  6214                           ; 1 bytes @ 0x5
  6215                           
  6216  0075                     ___lwmod@counter:	
  6217                           ; 1 bytes @ 0x5
  6218                           
  6219                           
  6220                           ; 1 bytes @ 0x5
  6221  0075                     	ds	1
  6222  0076                     ??_gotoXY:	
  6223  0076                     ??___ftge:	
  6224                           ; 1 bytes @ 0x6
  6225                           
  6226  0076                     ___awdiv@sign:	
  6227                           ; 1 bytes @ 0x6
  6228                           
  6229                           
  6230                           ; 1 bytes @ 0x6
  6231  0076                     	ds	1
  6232  0077                     gotoXY@x:	
  6233  0077                     ___awdiv@quotient:	
  6234                           ; 1 bytes @ 0x7
  6235                           
  6236                           
  6237                           ; 2 bytes @ 0x7
  6238  0077                     	ds	1
  6239  0078                     ??_LCDClear:	
  6240  0078                     ??___aldiv:	
  6241                           ; 1 bytes @ 0x8
  6242                           
  6243  0078                     ?___awtoft:	
  6244                           ; 1 bytes @ 0x8
  6245                           
  6246  0078                     ___awtoft@c:	
  6247                           ; 3 bytes @ 0x8
  6248                           
  6249                           
  6250                           ; 2 bytes @ 0x8
  6251  0078                     	ds	1
  6252  0079                     ?___wmul:	
  6253  0079                     LCDClear@index:	
  6254                           ; 2 bytes @ 0x9
  6255                           
  6256  0079                     ___wmul@multiplier:	
  6257                           ; 2 bytes @ 0x9
  6258                           
  6259                           
  6260                           ; 2 bytes @ 0x9
  6261  0079                     	ds	2
  6262  007B                     ??_SYSTEM_Initialize:	
  6263  007B                     ??___awtoft:	
  6264                           ; 1 bytes @ 0xB
  6265                           
  6266  007B                     ___wmul@multiplicand:	
  6267                           ; 1 bytes @ 0xB
  6268                           
  6269                           
  6270                           ; 2 bytes @ 0xB
  6271  007B                     	ds	2
  6272  007D                     ??_LCDWriteString:	
  6273  007D                     ??___wmul:	
  6274                           ; 1 bytes @ 0xD
  6275                           
  6276  007D                     ___awtoft@sign:	
  6277                           ; 1 bytes @ 0xD
  6278                           
  6279                           
  6280                           ; 1 bytes @ 0xD
  6281  007D                     	ds	1
  6282  007E                     ??_eval_poly:	
  6283  007E                     ??_tempCalc:	
  6284                           ; 1 bytes @ 0xE
  6285                           
  6286  007E                     ??___ftsub:	
  6287                           ; 1 bytes @ 0xE
  6288                           
  6289                           
  6290                           	psect	cstackBANK0
  6291  0020                     __pcstackBANK0:	
  6292                           ; 1 bytes @ 0xE
  6293                           
  6294  0020                     ?___ftdiv:	
  6295  0020                     ___aldiv@counter:	
  6296                           ; 3 bytes @ 0x0
  6297                           
  6298  0020                     ___wmul@product:	
  6299                           ; 1 bytes @ 0x0
  6300                           
  6301  0020                     ___ftdiv@f2:	
  6302                           ; 2 bytes @ 0x0
  6303                           
  6304                           
  6305                           ; 3 bytes @ 0x0
  6306  0020                     	ds	1
  6307  0021                     ___aldiv@sign:	
  6308                           
  6309                           ; 1 bytes @ 0x1
  6310  0021                     	ds	1
  6311  0022                     ??_LCDWriteCharacter:	
  6312  0022                     ___aldiv@quotient:	
  6313                           ; 1 bytes @ 0x2
  6314                           
  6315                           
  6316                           ; 4 bytes @ 0x2
  6317  0022                     	ds	1
  6318  0023                     ___ftdiv@f1:	
  6319                           
  6320                           ; 3 bytes @ 0x3
  6321  0023                     	ds	2
  6322  0025                     LCDWriteCharacter@character:	
  6323                           
  6324                           ; 1 bytes @ 0x5
  6325  0025                     	ds	1
  6326  0026                     ??___ftdiv:	
  6327  0026                     ?_readAnalog:	
  6328                           ; 1 bytes @ 0x6
  6329                           
  6330  0026                     readAnalog@channel:	
  6331                           ; 2 bytes @ 0x6
  6332                           
  6333  0026                     LCDWriteCharacter@base:	
  6334                           ; 2 bytes @ 0x6
  6335                           
  6336                           
  6337                           ; 2 bytes @ 0x6
  6338  0026                     	ds	2
  6339  0028                     ??_readAnalog:	
  6340  0028                     ?_LCDWriteString:	
  6341                           ; 1 bytes @ 0x8
  6342                           
  6343  0028                     LCDWriteString@characters:	
  6344                           ; 1 bytes @ 0x8
  6345                           
  6346                           
  6347                           ; 2 bytes @ 0x8
  6348  0028                     	ds	2
  6349  002A                     ___ftdiv@cntr:	
  6350                           
  6351                           ; 1 bytes @ 0xA
  6352  002A                     	ds	1
  6353  002B                     ___ftdiv@f3:	
  6354                           
  6355                           ; 3 bytes @ 0xB
  6356  002B                     	ds	3
  6357  002E                     ___ftdiv@exp:	
  6358                           
  6359                           ; 1 bytes @ 0xE
  6360  002E                     	ds	1
  6361  002F                     ___ftdiv@sign:	
  6362                           
  6363                           ; 1 bytes @ 0xF
  6364  002F                     	ds	1
  6365  0030                     ?___ftmul:	
  6366  0030                     ?___fttol:	
  6367                           ; 3 bytes @ 0x10
  6368                           
  6369  0030                     ___ftmul@f1:	
  6370                           ; 4 bytes @ 0x10
  6371                           
  6372  0030                     ___fttol@f1:	
  6373                           ; 3 bytes @ 0x10
  6374                           
  6375                           
  6376                           ; 3 bytes @ 0x10
  6377  0030                     	ds	3
  6378  0033                     ___ftmul@f2:	
  6379                           
  6380                           ; 3 bytes @ 0x13
  6381  0033                     	ds	1
  6382  0034                     ??___fttol:	
  6383                           
  6384                           ; 1 bytes @ 0x14
  6385  0034                     	ds	2
  6386  0036                     ??___ftmul:	
  6387                           
  6388                           ; 1 bytes @ 0x16
  6389  0036                     	ds	2
  6390  0038                     ___fttol@sign1:	
  6391                           
  6392                           ; 1 bytes @ 0x18
  6393  0038                     	ds	1
  6394  0039                     ___fttol@lval:	
  6395                           
  6396                           ; 4 bytes @ 0x19
  6397  0039                     	ds	1
  6398  003A                     ___ftmul@exp:	
  6399  003A                     readAnalog@analog_channel:	
  6400                           ; 1 bytes @ 0x1A
  6401                           
  6402                           
  6403                           ; 2 bytes @ 0x1A
  6404  003A                     	ds	1
  6405  003B                     ___ftmul@f3_as_product:	
  6406                           
  6407                           ; 3 bytes @ 0x1B
  6408  003B                     	ds	1
  6409  003C                     readAnalog@value:	
  6410                           
  6411                           ; 2 bytes @ 0x1C
  6412  003C                     	ds	1
  6413  003D                     ___fttol@exp1:	
  6414                           
  6415                           ; 1 bytes @ 0x1D
  6416  003D                     	ds	1
  6417  003E                     ??_calculateCurrent0:	
  6418  003E                     ??_calculateCurrent1:	
  6419                           ; 1 bytes @ 0x1E
  6420                           
  6421  003E                     ?_LCDWriteInt:	
  6422                           ; 1 bytes @ 0x1E
  6423                           
  6424  003E                     ___ftmul@cntr:	
  6425                           ; 1 bytes @ 0x1E
  6426                           
  6427  003E                     LCDWriteInt@value:	
  6428                           ; 1 bytes @ 0x1E
  6429                           
  6430                           
  6431                           ; 2 bytes @ 0x1E
  6432  003E                     	ds	1
  6433  003F                     ___ftmul@sign:	
  6434                           
  6435                           ; 1 bytes @ 0x1F
  6436  003F                     	ds	1
  6437  0040                     ?___ftadd:	
  6438  0040                     LCDWriteInt@fieldLength:	
  6439                           ; 3 bytes @ 0x20
  6440                           
  6441  0040                     ___ftadd@f1:	
  6442                           ; 1 bytes @ 0x20
  6443                           
  6444                           
  6445                           ; 3 bytes @ 0x20
  6446  0040                     	ds	1
  6447  0041                     LCDWriteInt@numPlaces:	
  6448                           
  6449                           ; 1 bytes @ 0x21
  6450  0041                     	ds	1
  6451  0042                     LCDWriteInt@sign:	
  6452                           
  6453                           ; 1 bytes @ 0x22
  6454  0042                     	ds	1
  6455  0043                     ??_LCDWriteInt:	
  6456  0043                     ___ftadd@f2:	
  6457                           ; 1 bytes @ 0x23
  6458                           
  6459                           
  6460                           ; 3 bytes @ 0x23
  6461  0043                     	ds	3
  6462  0046                     ??___ftadd:	
  6463                           
  6464                           ; 1 bytes @ 0x26
  6465  0046                     	ds	1
  6466  0047                     LCDWriteInt@str:	
  6467                           
  6468                           ; 5 bytes @ 0x27
  6469  0047                     	ds	3
  6470  004A                     ___ftadd@sign:	
  6471                           
  6472                           ; 1 bytes @ 0x2A
  6473  004A                     	ds	1
  6474  004B                     ___ftadd@exp2:	
  6475                           
  6476                           ; 1 bytes @ 0x2B
  6477  004B                     	ds	1
  6478  004C                     LCDWriteInt@j:	
  6479  004C                     ___ftadd@exp1:	
  6480                           ; 1 bytes @ 0x2C
  6481                           
  6482                           
  6483                           ; 1 bytes @ 0x2C
  6484  004C                     	ds	1
  6485  004D                     ?_eval_poly:	
  6486  004D                     ?___ftsub:	
  6487                           ; 3 bytes @ 0x2D
  6488                           
  6489  004D                     LCDWriteInt@i:	
  6490                           ; 3 bytes @ 0x2D
  6491                           
  6492  004D                     ___ftsub@f2:	
  6493                           ; 1 bytes @ 0x2D
  6494                           
  6495  004D                     eval_poly@x:	
  6496                           ; 3 bytes @ 0x2D
  6497                           
  6498                           
  6499                           ; 3 bytes @ 0x2D
  6500  004D                     	ds	3
  6501  0050                     eval_poly@d:	
  6502  0050                     ___ftsub@f1:	
  6503                           ; 2 bytes @ 0x30
  6504                           
  6505                           
  6506                           ; 3 bytes @ 0x30
  6507  0050                     	ds	2
  6508  0052                     eval_poly@n:	
  6509                           
  6510                           ; 2 bytes @ 0x32
  6511  0052                     	ds	2
  6512  0054                     eval_poly@res:	
  6513                           
  6514                           ; 3 bytes @ 0x34
  6515  0054                     	ds	3
  6516  0057                     ?_log:	
  6517  0057                     log@x:	
  6518                           ; 3 bytes @ 0x37
  6519                           
  6520                           
  6521                           ; 3 bytes @ 0x37
  6522  0057                     	ds	3
  6523  005A                     ??_log:	
  6524                           
  6525                           ; 1 bytes @ 0x3A
  6526  005A                     	ds	1
  6527  005B                     log@exponent:	
  6528                           
  6529                           ; 2 bytes @ 0x3B
  6530  005B                     	ds	2
  6531  005D                     ?_tempCalc:	
  6532  005D                     tempCalc@analogValue:	
  6533                           ; 2 bytes @ 0x3D
  6534                           
  6535                           
  6536                           ; 2 bytes @ 0x3D
  6537  005D                     	ds	2
  6538  005F                     tempCalc@R:	
  6539                           
  6540                           ; 3 bytes @ 0x3F
  6541  005F                     	ds	3
  6542  0062                     _tempCalc$1294:	
  6543                           
  6544                           ; 3 bytes @ 0x42
  6545  0062                     	ds	3
  6546  0065                     tempCalc@steinhart:	
  6547                           
  6548                           ; 3 bytes @ 0x45
  6549  0065                     	ds	3
  6550  0068                     ??_main:	
  6551                           
  6552                           ; 1 bytes @ 0x48
  6553  0068                     	ds	3
  6554                           
  6555                           	psect	maintext
  6556  0210                     __pmaintext:	
  6557 ;;
  6558 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  6559 ;;
  6560 ;; *************** function _main *****************
  6561 ;; Defined at:
  6562 ;;		line 42 in file "main.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;		None
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  efficiency      3   26[BANK1 ] float 
  6567 ;;  dutyCycle6      2   36[BANK1 ] unsigned int 
  6568 ;;  MPPT0           2   33[BANK1 ] int 
  6569 ;;  dutyCycle1      2   31[BANK1 ] unsigned int 
  6570 ;;  dutyCycle7      2   29[BANK1 ] unsigned int 
  6571 ;;  batteryTemp     2   13[BANK1 ] int 
  6572 ;;  power0OutOld    2   11[BANK1 ] int 
  6573 ;;  MPPT1           2    9[BANK1 ] int 
  6574 ;;  power1OutOld    2    4[BANK1 ] int 
  6575 ;;  VIn1_Old        2    2[BANK1 ] int 
  6576 ;;  VIn0_Old        2    0[BANK1 ] int 
  6577 ;;  j               1   35[BANK1 ] unsigned char 
  6578 ;;  menuButton      1   25[BANK1 ] unsigned char 
  6579 ;;  displayRefre    1   17[BANK1 ] unsigned char 
  6580 ;;  slowLoop        1   16[BANK1 ] unsigned char 
  6581 ;;  fastLoop        1   15[BANK1 ] unsigned char 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : B1F/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Totals:         0       3      38       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;Total ram usage:       41 bytes
  6596 ;; Hardware stack levels required when called:    5
  6597 ;; This function calls:
  6598 ;;		_ADCRead
  6599 ;;		_Battery_State_Machine
  6600 ;;		_LCDClear
  6601 ;;		_LCDInit
  6602 ;;		_LCDWriteCharacter
  6603 ;;		_LCDWriteInt
  6604 ;;		_LCDWriteString
  6605 ;;		_PWM1_LoadDutyValue
  6606 ;;		_PWM6_LoadDutyValue
  6607 ;;		_PWM7_LoadDutyValue
  6608 ;;		_SYSTEM_Initialize
  6609 ;;		___awdiv
  6610 ;;		___awtoft
  6611 ;;		___ftdiv
  6612 ;;		___ftmul
  6613 ;;		___fttol
  6614 ;;		___wmul
  6615 ;;		_calculateCurrent0
  6616 ;;		_calculateCurrent1
  6617 ;;		_cc_cv_mode
  6618 ;;		_gotoXY
  6619 ;;		_readAnalog
  6620 ;;		_readButton
  6621 ;;		_tempCalc
  6622 ;; This function is called by:
  6623 ;;		Startup code after reset
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           
  6628                           ;psect for function _main
  6629  0210                     _main:	
  6630                           
  6631                           ;main.c: 44: int16_t MPPT0 = 3164;
  6632                           
  6633                           ;incstack = 0
  6634                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6635  0210  305C               	movlw	92
  6636  0211  0021               	movlb	1	; select bank1
  6637  0212  00C1               	movwf	main@MPPT0^(0+128)
  6638  0213  300C               	movlw	12
  6639  0214  00C2               	movwf	(main@MPPT0^(0+128)+1)
  6640                           
  6641                           ;main.c: 45: int16_t MPPT1 = 3164;
  6642  0215  305C               	movlw	92
  6643  0216  00A9               	movwf	main@MPPT1^(0+128)
  6644  0217  300C               	movlw	12
  6645  0218  00AA               	movwf	(main@MPPT1^(0+128)+1)
  6646                           
  6647                           ;main.c: 46: int16_t VIn0_Old = 0;
  6648  0219  01A0               	clrf	main@VIn0_Old^(0+128)
  6649  021A  01A1               	clrf	(main@VIn0_Old+1)^(0+128)
  6650                           
  6651                           ;main.c: 47: int16_t VIn1_Old = 0;
  6652  021B  01A2               	clrf	main@VIn1_Old^(0+128)
  6653  021C  01A3               	clrf	(main@VIn1_Old+1)^(0+128)
  6654                           
  6655                           ;main.c: 48: int16_t power0OutOld = 0;
  6656  021D  01AB               	clrf	main@power0OutOld^(0+128)
  6657  021E  01AC               	clrf	(main@power0OutOld+1)^(0+128)
  6658                           
  6659                           ;main.c: 49: int16_t power1OutOld = 0;
  6660  021F  01A4               	clrf	main@power1OutOld^(0+128)
  6661  0220  01A5               	clrf	(main@power1OutOld+1)^(0+128)
  6662                           
  6663                           ;main.c: 51: uint16_t dutyCycle6 = 1023;
  6664  0221  30FF               	movlw	255
  6665  0222  00C4               	movwf	main@dutyCycle6^(0+128)
  6666  0223  3003               	movlw	3
  6667  0224  00C5               	movwf	(main@dutyCycle6^(0+128)+1)
  6668                           
  6669                           ;main.c: 52: uint16_t dutyCycle7 = 256;
  6670  0225  3000               	movlw	0
  6671  0226  00BD               	movwf	main@dutyCycle7^(0+128)
  6672  0227  3001               	movlw	1
  6673  0228  00BE               	movwf	(main@dutyCycle7^(0+128)+1)
  6674                           
  6675                           ;main.c: 53: uint16_t dutyCycle1 = 60;
  6676  0229  303C               	movlw	60
  6677  022A  00BF               	movwf	main@dutyCycle1^(0+128)
  6678  022B  3000               	movlw	0
  6679  022C  00C0               	movwf	(main@dutyCycle1^(0+128)+1)
  6680                           
  6681                           ;main.c: 55: uint8_t j = 0;
  6682  022D  01C3               	clrf	main@j^(0+128)
  6683                           
  6684                           ;main.c: 57: uint8_t fastLoop = 0;
  6685  022E  01AF               	clrf	main@fastLoop^(0+128)
  6686                           
  6687                           ;main.c: 58: uint8_t slowLoop = 200;
  6688  022F  30C8               	movlw	200
  6689  0230  0020               	movlb	0	; select bank0
  6690  0231  00E8               	movwf	??_main
  6691  0232  0868               	movf	??_main,w
  6692  0233  0021               	movlb	1	; select bank1
  6693  0234  00B0               	movwf	main@slowLoop^(0+128)
  6694                           
  6695                           ;main.c: 59: uint8_t displayRefresh = 0;
  6696  0235  01B1               	clrf	main@displayRefresh^(0+128)
  6697                           
  6698                           ;main.c: 60: int16_t batteryTemp = 250;
  6699  0236  30FA               	movlw	250
  6700  0237  00AD               	movwf	main@batteryTemp^(0+128)
  6701  0238  3000               	movlw	0
  6702  0239  00AE               	movwf	(main@batteryTemp^(0+128)+1)
  6703                           
  6704                           ;main.c: 61: float efficiency = 0;
  6705  023A  3000               	movlw	0
  6706  023B  00BA               	movwf	main@efficiency^(0+128)
  6707  023C  3000               	movlw	0
  6708  023D  00BB               	movwf	(main@efficiency+1)^(0+128)
  6709  023E  3000               	movlw	0
  6710  023F  00BC               	movwf	(main@efficiency+2)^(0+128)
  6711                           
  6712                           ;main.c: 62: extern int8_t Imode0;
  6713                           ;main.c: 63: extern int16_t Vref;
  6714                           ;main.c: 64: extern int16_t Iref;
  6715                           ;main.c: 65: uint8_t menuButton = 0;
  6716  0240  01B9               	clrf	main@menuButton^(0+128)
  6717                           
  6718                           ;main.c: 67: SYSTEM_Initialize();
  6719  0241  3195  2561  3182   	fcall	_SYSTEM_Initialize
  6720                           
  6721                           ;main.c: 69: LCDClear();
  6722  0244  3195  250F  3182   	fcall	_LCDClear
  6723  0247                     l3049:	
  6724                           ;main.c: 71: void calculateCurrent0(void);
  6725                           ;main.c: 72: void calculateCurrent1(void);
  6726                           ;main.c: 73: void calculateCurrent2(void);
  6727                           ;main.c: 74: void calculateCurrent3(void);
  6728                           ;main.c: 88: while (1)
  6729                           
  6730                           
  6731                           ;main.c: 89: {
  6732                           ;main.c: 90: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  6733  0247  0021               	movlb	1	; select bank1
  6734  0248  01C3               	clrf	main@j^(0+128)
  6735  0249  3008               	movlw	8
  6736  024A  0243               	subwf	main@j^(0+128),w
  6737  024B  1803               	btfsc	3,0
  6738  024C  2A6C               	goto	l3061
  6739  024D                     l3055:	
  6740  024D  0843               	movf	main@j^(0+128),w
  6741  024E  0020               	movlb	0	; select bank0
  6742  024F  00E8               	movwf	??_main
  6743  0250  01E9               	clrf	??_main+1
  6744  0251  0868               	movf	??_main,w
  6745  0252  00A6               	movwf	readAnalog@channel
  6746  0253  0869               	movf	??_main+1,w
  6747  0254  00A7               	movwf	readAnalog@channel+1
  6748  0255  3180  20C4  3182   	fcall	_readAnalog
  6749  0258  0021               	movlb	1	; select bank1
  6750  0259  3543               	lslf	main@j^(0+128),w
  6751  025A  3E40               	addlw	(low (_analogs| (0+256)))& (0+255)
  6752  025B  0086               	movwf	6
  6753  025C  3001               	movlw	1	; select bank2/3
  6754  025D  0087               	movwf	7
  6755  025E  0020               	movlb	0	; select bank0
  6756  025F  0826               	movf	?_readAnalog,w
  6757  0260  3FC0               	movwi [0]fsr1
  6758  0261  0827               	movf	?_readAnalog+1,w
  6759  0262  3FC1               	movwi [1]fsr1
  6760  0263  3001               	movlw	1
  6761  0264  00E8               	movwf	??_main
  6762  0265  0868               	movf	??_main,w
  6763  0266  0021               	movlb	1	; select bank1
  6764  0267  07C3               	addwf	main@j^(0+128),f
  6765  0268  3008               	movlw	8
  6766  0269  0243               	subwf	main@j^(0+128),w
  6767  026A  1C03               	skipc
  6768  026B  2A4D               	goto	l3055
  6769  026C                     l3061:	
  6770                           
  6771                           ;main.c: 93: voltage[0]=(int16_t)(analogs[0]/.20885);
  6772  026C  0022               	movlb	2	; select bank2
  6773  026D  0841               	movf	(_analogs+1)^(0+256),w
  6774  026E  00F9               	movwf	___awtoft@c+1
  6775  026F  0840               	movf	_analogs^(0+256),w
  6776  0270  00F8               	movwf	___awtoft@c
  6777  0271  3194  24CA  3182   	fcall	___awtoft
  6778  0274  0878               	movf	?___awtoft,w
  6779  0275  0020               	movlb	0	; select bank0
  6780  0276  00A3               	movwf	___ftdiv@f1
  6781  0277  0879               	movf	?___awtoft+1,w
  6782  0278  00A4               	movwf	___ftdiv@f1+1
  6783  0279  087A               	movf	?___awtoft+2,w
  6784  027A  00A5               	movwf	___ftdiv@f1+2
  6785  027B  30DD               	movlw	221
  6786  027C  00A0               	movwf	___ftdiv@f2
  6787  027D  3055               	movlw	85
  6788  027E  00A1               	movwf	___ftdiv@f2+1
  6789  027F  303E               	movlw	62
  6790  0280  00A2               	movwf	___ftdiv@f2+2
  6791  0281  318B  23E0  3182   	fcall	___ftdiv
  6792  0284  0020               	movlb	0	; select bank0
  6793  0285  0820               	movf	?___ftdiv,w
  6794  0286  00B0               	movwf	___fttol@f1
  6795  0287  0821               	movf	?___ftdiv+1,w
  6796  0288  00B1               	movwf	___fttol@f1+1
  6797  0289  0822               	movf	?___ftdiv+2,w
  6798  028A  00B2               	movwf	___fttol@f1+2
  6799  028B  318A  22D2  3182   	fcall	___fttol
  6800  028E  0020               	movlb	0	; select bank0
  6801  028F  0831               	movf	?___fttol+1,w
  6802  0290  0021               	movlb	1	; select bank1
  6803  0291  00CF               	movwf	(_voltage+1)^(0+128)
  6804  0292  0020               	movlb	0	; select bank0
  6805  0293  0830               	movf	?___fttol,w
  6806  0294  0021               	movlb	1	; select bank1
  6807  0295  00CE               	movwf	_voltage^(0+128)
  6808                           
  6809                           ;main.c: 95: voltage[1]=(int16_t)(analogs[1]/.54503);
  6810  0296  0022               	movlb	2	; select bank2
  6811  0297  0843               	movf	((_analogs+1)^(0+256)+2),w
  6812  0298  00F9               	movwf	___awtoft@c+1
  6813  0299  0842               	movf	(_analogs^(0+256)+2),w
  6814  029A  00F8               	movwf	___awtoft@c
  6815  029B  3194  24CA  3182   	fcall	___awtoft
  6816  029E  0878               	movf	?___awtoft,w
  6817  029F  0020               	movlb	0	; select bank0
  6818  02A0  00A3               	movwf	___ftdiv@f1
  6819  02A1  0879               	movf	?___awtoft+1,w
  6820  02A2  00A4               	movwf	___ftdiv@f1+1
  6821  02A3  087A               	movf	?___awtoft+2,w
  6822  02A4  00A5               	movwf	___ftdiv@f1+2
  6823  02A5  3087               	movlw	135
  6824  02A6  00A0               	movwf	___ftdiv@f2
  6825  02A7  300B               	movlw	11
  6826  02A8  00A1               	movwf	___ftdiv@f2+1
  6827  02A9  303F               	movlw	63
  6828  02AA  00A2               	movwf	___ftdiv@f2+2
  6829  02AB  318B  23E0  3182   	fcall	___ftdiv
  6830  02AE  0020               	movlb	0	; select bank0
  6831  02AF  0820               	movf	?___ftdiv,w
  6832  02B0  00B0               	movwf	___fttol@f1
  6833  02B1  0821               	movf	?___ftdiv+1,w
  6834  02B2  00B1               	movwf	___fttol@f1+1
  6835  02B3  0822               	movf	?___ftdiv+2,w
  6836  02B4  00B2               	movwf	___fttol@f1+2
  6837  02B5  318A  22D2  3182   	fcall	___fttol
  6838  02B8  0020               	movlb	0	; select bank0
  6839  02B9  0831               	movf	?___fttol+1,w
  6840  02BA  0021               	movlb	1	; select bank1
  6841  02BB  00D1               	movwf	((_voltage+1)^(0+128)+2)
  6842  02BC  0020               	movlb	0	; select bank0
  6843  02BD  0830               	movf	?___fttol,w
  6844  02BE  0021               	movlb	1	; select bank1
  6845  02BF  00D0               	movwf	(_voltage^(0+128)+2)
  6846                           
  6847                           ;main.c: 101: calculateCurrent0();
  6848  02C0  3196  26BE  3182   	fcall	_calculateCurrent0
  6849                           
  6850                           ;main.c: 104: calculateCurrent1();
  6851  02C3  3197  2703  3182   	fcall	_calculateCurrent1
  6852                           
  6853                           ;main.c: 107: if(fastLoop>2)
  6854  02C6  3003               	movlw	3
  6855  02C7  0021               	movlb	1	; select bank1
  6856  02C8  022F               	subwf	main@fastLoop^(0+128),w
  6857  02C9  1C03               	skipc
  6858  02CA  2BB9               	goto	l3127
  6859                           
  6860                           ;main.c: 108: {
  6861                           ;main.c: 109: if(Imode0)
  6862  02CB  086F               	movf	_Imode0^(0+128),w
  6863  02CC  1903               	btfsc	3,2
  6864  02CD  2B39               	goto	l3087
  6865                           
  6866                           ;main.c: 110: {
  6867                           ;main.c: 111: if(voltage[0]<MPPT0)
  6868  02CE  084F               	movf	(_voltage+1)^(0+128),w
  6869  02CF  3A80               	xorlw	128
  6870  02D0  0020               	movlb	0	; select bank0
  6871  02D1  00E8               	movwf	??_main
  6872  02D2  0021               	movlb	1	; select bank1
  6873  02D3  0842               	movf	(main@MPPT0+1)^(0+128),w
  6874  02D4  3A80               	xorlw	128
  6875  02D5  0020               	movlb	0	; select bank0
  6876  02D6  0268               	subwf	??_main,w
  6877  02D7  1D03               	skipz
  6878  02D8  2ADC               	goto	u3505
  6879  02D9  0021               	movlb	1	; select bank1
  6880  02DA  0841               	movf	main@MPPT0^(0+128),w
  6881  02DB  024E               	subwf	_voltage^(0+128),w
  6882  02DC                     u3505:	
  6883  02DC  1803               	skipnc
  6884  02DD  2AEB               	goto	l3073
  6885                           
  6886                           ;main.c: 112: {
  6887                           ;main.c: 113: if(dutyCycle6<1023)
  6888  02DE  3003               	movlw	3
  6889  02DF  0021               	movlb	1	; select bank1
  6890  02E0  0245               	subwf	(main@dutyCycle6+1)^(0+128),w
  6891  02E1  30FF               	movlw	255
  6892  02E2  1903               	skipnz
  6893  02E3  0244               	subwf	main@dutyCycle6^(0+128),w
  6894  02E4  1803               	skipnc
  6895  02E5  2AF4               	goto	l3081
  6896                           
  6897                           ;main.c: 114: {
  6898                           ;main.c: 115: dutyCycle6+=1;
  6899  02E6  3001               	movlw	1
  6900  02E7  07C4               	addwf	main@dutyCycle6^(0+128),f
  6901  02E8  3000               	movlw	0
  6902  02E9  3DC5               	addwfc	(main@dutyCycle6+1)^(0+128),f
  6903                           
  6904                           ;main.c: 116: }
  6905                           ;main.c: 117: }
  6906  02EA  2AF4               	goto	l3081
  6907  02EB                     l3073:	
  6908                           
  6909                           ;main.c: 118: else if(dutyCycle6>0)
  6910  02EB  0021               	movlb	1	; select bank1
  6911  02EC  0844               	movf	main@dutyCycle6^(0+128),w
  6912  02ED  0445               	iorwf	(main@dutyCycle6+1)^(0+128),w
  6913  02EE  1903               	btfsc	3,2
  6914  02EF  2AF4               	goto	l3081
  6915                           
  6916                           ;main.c: 119: {
  6917                           ;main.c: 120: dutyCycle6-=1;
  6918  02F0  3001               	movlw	1
  6919  02F1  02C4               	subwf	main@dutyCycle6^(0+128),f
  6920  02F2  3000               	movlw	0
  6921  02F3  3BC5               	subwfb	(main@dutyCycle6+1)^(0+128),f
  6922  02F4                     l3081:	
  6923                           ;main.c: 131: {
  6924                           
  6925                           ;main.c: 128: }
  6926                           ;main.c: 129: }
  6927                           
  6928                           ;main.c: 126: {
  6929                           
  6930                           
  6931                           ;main.c: 133: }
  6932                           ;main.c: 166: power0OutOld=voltage[1]/100*current[1]/10;
  6933  02F4  3064               	movlw	100
  6934  02F5  00F0               	movwf	___awdiv@divisor
  6935  02F6  3000               	movlw	0
  6936  02F7  00F1               	movwf	___awdiv@divisor+1
  6937  02F8  0851               	movf	((_voltage+1)^(0+128)+2),w
  6938  02F9  00F3               	movwf	___awdiv@dividend+1
  6939  02FA  0850               	movf	(_voltage^(0+128)+2),w
  6940  02FB  00F2               	movwf	___awdiv@dividend
  6941  02FC  3189  2133  3182   	fcall	___awdiv
  6942  02FF  0871               	movf	?___awdiv+1,w
  6943  0300  00FA               	movwf	___wmul@multiplier+1
  6944  0301  0870               	movf	?___awdiv,w
  6945  0302  00F9               	movwf	___wmul@multiplier
  6946  0303  0021               	movlb	1	; select bank1
  6947  0304  0849               	movf	((_current+1)^(0+128)+2),w
  6948  0305  00FC               	movwf	___wmul@multiplicand+1
  6949  0306  0848               	movf	(_current^(0+128)+2),w
  6950  0307  00FB               	movwf	___wmul@multiplicand
  6951  0308  3194  2432  3182   	fcall	___wmul
  6952  030B  087A               	movf	?___wmul+1,w
  6953  030C  0021               	movlb	1	; select bank1
  6954  030D  00B8               	movwf	(_main$1295+1)^(0+128)
  6955  030E  0879               	movf	?___wmul,w
  6956  030F  00B7               	movwf	_main$1295^(0+128)
  6957                           
  6958                           ;main.c: 133: }
  6959                           ;main.c: 166: power0OutOld=voltage[1]/100*current[1]/10;
  6960  0310  300A               	movlw	10
  6961  0311  00F0               	movwf	___awdiv@divisor
  6962  0312  3000               	movlw	0
  6963  0313  00F1               	movwf	___awdiv@divisor+1
  6964  0314  0838               	movf	(_main$1295+1)^(0+128),w
  6965  0315  00F3               	movwf	___awdiv@dividend+1
  6966  0316  0837               	movf	_main$1295^(0+128),w
  6967  0317  00F2               	movwf	___awdiv@dividend
  6968  0318  3189  2133  3182   	fcall	___awdiv
  6969  031B  0871               	movf	?___awdiv+1,w
  6970  031C  0021               	movlb	1	; select bank1
  6971  031D  00AC               	movwf	(main@power0OutOld+1)^(0+128)
  6972  031E  0870               	movf	?___awdiv,w
  6973  031F  00AB               	movwf	main@power0OutOld^(0+128)
  6974                           
  6975                           ;main.c: 167: VIn0_Old=voltage[0];
  6976  0320  084F               	movf	(_voltage+1)^(0+128),w
  6977  0321  00A1               	movwf	(main@VIn0_Old+1)^(0+128)
  6978  0322  084E               	movf	_voltage^(0+128),w
  6979  0323  00A0               	movwf	main@VIn0_Old^(0+128)
  6980                           
  6981                           ;main.c: 192: power1OutOld=voltage[3]*current[3];
  6982  0324  0855               	movf	((_voltage+1)^(0+128)+6),w
  6983  0325  00FA               	movwf	___wmul@multiplier+1
  6984  0326  0854               	movf	(_voltage^(0+128)+6),w
  6985  0327  00F9               	movwf	___wmul@multiplier
  6986  0328  084D               	movf	((_current+1)^(0+128)+6),w
  6987  0329  00FC               	movwf	___wmul@multiplicand+1
  6988  032A  084C               	movf	(_current^(0+128)+6),w
  6989  032B  00FB               	movwf	___wmul@multiplicand
  6990  032C  3194  2432  3182   	fcall	___wmul
  6991  032F  087A               	movf	?___wmul+1,w
  6992  0330  0021               	movlb	1	; select bank1
  6993  0331  00A5               	movwf	(main@power1OutOld+1)^(0+128)
  6994  0332  0879               	movf	?___wmul,w
  6995  0333  00A4               	movwf	main@power1OutOld^(0+128)
  6996                           
  6997                           ;main.c: 193: VIn1_Old=voltage[2];
  6998  0334  0853               	movf	((_voltage+1)^(0+128)+4),w
  6999  0335  00A3               	movwf	(main@VIn1_Old+1)^(0+128)
  7000  0336  0852               	movf	(_voltage^(0+128)+4),w
  7001  0337  00A2               	movwf	main@VIn1_Old^(0+128)
  7002                           
  7003                           ;main.c: 194: }
  7004  0338  2B5F               	goto	l3099
  7005  0339                     l3087:	
  7006                           
  7007                           ;main.c: 195: else
  7008                           ;main.c: 196: {
  7009                           ;main.c: 197: if(voltage[1]>(int16_t)Vref)
  7010  0339  0868               	movf	(_Vref+1)^(0+128),w
  7011  033A  3A80               	xorlw	128
  7012  033B  0020               	movlb	0	; select bank0
  7013  033C  00E8               	movwf	??_main
  7014  033D  0021               	movlb	1	; select bank1
  7015  033E  0851               	movf	((_voltage+1)^(0+128)+2),w
  7016  033F  3A80               	xorlw	128
  7017  0340  0020               	movlb	0	; select bank0
  7018  0341  0268               	subwf	??_main,w
  7019  0342  1D03               	skipz
  7020  0343  2B47               	goto	u3535
  7021  0344  0021               	movlb	1	; select bank1
  7022  0345  0850               	movf	(_voltage^(0+128)+2),w
  7023  0346  0267               	subwf	_Vref^(0+128),w
  7024  0347                     u3535:	
  7025  0347  1803               	skipnc
  7026  0348  2B56               	goto	l3093
  7027                           
  7028                           ;main.c: 198: {
  7029                           ;main.c: 199: if(dutyCycle6<1023) dutyCycle6+=1;
  7030  0349  3003               	movlw	3
  7031  034A  0021               	movlb	1	; select bank1
  7032  034B  0245               	subwf	(main@dutyCycle6+1)^(0+128),w
  7033  034C  30FF               	movlw	255
  7034  034D  1903               	skipnz
  7035  034E  0244               	subwf	main@dutyCycle6^(0+128),w
  7036  034F  1803               	skipnc
  7037  0350  2B5F               	goto	l3099
  7038  0351  3001               	movlw	1
  7039  0352  07C4               	addwf	main@dutyCycle6^(0+128),f
  7040  0353  3000               	movlw	0
  7041  0354  3DC5               	addwfc	(main@dutyCycle6+1)^(0+128),f
  7042                           
  7043                           ;main.c: 200: }
  7044  0355  2B5F               	goto	l3099
  7045  0356                     l3093:	
  7046                           
  7047                           ;main.c: 201: else
  7048                           ;main.c: 202: {
  7049                           ;main.c: 203: if(dutyCycle6>0) dutyCycle6-=1;;
  7050  0356  0021               	movlb	1	; select bank1
  7051  0357  0844               	movf	main@dutyCycle6^(0+128),w
  7052  0358  0445               	iorwf	(main@dutyCycle6+1)^(0+128),w
  7053  0359  1903               	btfsc	3,2
  7054  035A  2B5F               	goto	l3099
  7055  035B  3001               	movlw	1
  7056  035C  02C4               	subwf	main@dutyCycle6^(0+128),f
  7057  035D  3000               	movlw	0
  7058  035E  3BC5               	subwfb	(main@dutyCycle6+1)^(0+128),f
  7059  035F                     l3099:	
  7060                           ;main.c: 210: else
  7061                           ;main.c: 211: {
  7062                           
  7063                           ;main.c: 207: {
  7064                           ;main.c: 209: }
  7065                           
  7066                           
  7067                           ;main.c: 213: }
  7068                           ;main.c: 215: }
  7069                           ;main.c: 216: fastLoop=0;
  7070  035F  01AF               	clrf	main@fastLoop^(0+128)
  7071                           
  7072                           ;main.c: 217: slowLoop+=1;
  7073  0360  3001               	movlw	1
  7074  0361  0020               	movlb	0	; select bank0
  7075  0362  00E8               	movwf	??_main
  7076  0363  0868               	movf	??_main,w
  7077  0364  0021               	movlb	1	; select bank1
  7078  0365  07B0               	addwf	main@slowLoop^(0+128),f
  7079                           
  7080                           ;main.c: 219: PWM1_LoadDutyValue(dutyCycle1);
  7081  0366  0840               	movf	(main@dutyCycle1+1)^(0+128),w
  7082  0367  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  7083  0368  083F               	movf	main@dutyCycle1^(0+128),w
  7084  0369  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  7085  036A  3193  23D9  3182   	fcall	_PWM1_LoadDutyValue
  7086                           
  7087                           ;main.c: 220: PWM6_LoadDutyValue(dutyCycle6);
  7088  036D  0021               	movlb	1	; select bank1
  7089  036E  0845               	movf	(main@dutyCycle6+1)^(0+128),w
  7090  036F  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7091  0370  0844               	movf	main@dutyCycle6^(0+128),w
  7092  0371  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7093  0372  3193  23EF  3182   	fcall	_PWM6_LoadDutyValue
  7094                           
  7095                           ;main.c: 221: PWM7_LoadDutyValue(dutyCycle7);
  7096  0375  0021               	movlb	1	; select bank1
  7097  0376  083E               	movf	(main@dutyCycle7+1)^(0+128),w
  7098  0377  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7099  0378  083D               	movf	main@dutyCycle7^(0+128),w
  7100  0379  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7101  037A  3194  2405  3182   	fcall	_PWM7_LoadDutyValue
  7102                           
  7103                           ;main.c: 223: menuButton = readButton();
  7104  037D  318B  2359  3182   	fcall	_readButton
  7105  0380  0020               	movlb	0	; select bank0
  7106  0381  00E8               	movwf	??_main
  7107  0382  0868               	movf	??_main,w
  7108  0383  0021               	movlb	1	; select bank1
  7109  0384  00B9               	movwf	main@menuButton^(0+128)
  7110                           
  7111                           ;main.c: 224: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  7112  0385  3002               	movlw	2
  7113  0386  0639               	xorwf	main@menuButton^(0+128),w
  7114  0387  1D03               	btfss	3,2
  7115  0388  2B9B               	goto	l3117
  7116  0389  0842               	movf	(main@MPPT0+1)^(0+128),w
  7117  038A  3A80               	xorlw	128
  7118  038B  0020               	movlb	0	; select bank0
  7119  038C  00E8               	movwf	??_main
  7120  038D  308A               	movlw	138
  7121  038E  0268               	subwf	??_main,w
  7122  038F  1D03               	skipz
  7123  0390  2B94               	goto	u3575
  7124  0391  30F1               	movlw	241
  7125  0392  0021               	movlb	1	; select bank1
  7126  0393  0241               	subwf	main@MPPT0^(0+128),w
  7127  0394                     u3575:	
  7128  0394  1C03               	skipc
  7129  0395  2B9B               	goto	l3117
  7130  0396  30F6               	movlw	246
  7131  0397  0021               	movlb	1	; select bank1
  7132  0398  07C1               	addwf	main@MPPT0^(0+128),f
  7133  0399  30FF               	movlw	255
  7134  039A  3DC2               	addwfc	(main@MPPT0+1)^(0+128),f
  7135  039B                     l3117:	
  7136                           
  7137                           ;main.c: 225: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  7138  039B  3003               	movlw	3
  7139  039C  0021               	movlb	1	; select bank1
  7140  039D  0639               	xorwf	main@menuButton^(0+128),w
  7141  039E  1D03               	btfss	3,2
  7142  039F  2BB2               	goto	l3123
  7143  03A0  0842               	movf	(main@MPPT0+1)^(0+128),w
  7144  03A1  3A80               	xorlw	128
  7145  03A2  0020               	movlb	0	; select bank0
  7146  03A3  00E8               	movwf	??_main
  7147  03A4  308D               	movlw	141
  7148  03A5  0268               	subwf	??_main,w
  7149  03A6  1D03               	skipz
  7150  03A7  2BAB               	goto	u3595
  7151  03A8  3048               	movlw	72
  7152  03A9  0021               	movlb	1	; select bank1
  7153  03AA  0241               	subwf	main@MPPT0^(0+128),w
  7154  03AB                     u3595:	
  7155  03AB  1803               	skipnc
  7156  03AC  2BB2               	goto	l3123
  7157  03AD  300A               	movlw	10
  7158  03AE  0021               	movlb	1	; select bank1
  7159  03AF  07C1               	addwf	main@MPPT0^(0+128),f
  7160  03B0  3000               	movlw	0
  7161  03B1  3DC2               	addwfc	(main@MPPT0+1)^(0+128),f
  7162  03B2                     l3123:	
  7163                           
  7164                           ;main.c: 226: if(menuButton == 1)LCDInit();
  7165  03B2  0021               	movlb	1	; select bank1
  7166  03B3  0339               	decf	main@menuButton^(0+128),w
  7167  03B4  1D03               	btfss	3,2
  7168  03B5  2BB9               	goto	l3127
  7169  03B6  3195  25CC  3182   	fcall	_LCDInit
  7170  03B9                     l3127:	
  7171                           
  7172                           ;main.c: 227: }
  7173                           ;main.c: 228: fastLoop+=1;
  7174  03B9  3001               	movlw	1
  7175  03BA  0020               	movlb	0	; select bank0
  7176  03BB  00E8               	movwf	??_main
  7177  03BC  0868               	movf	??_main,w
  7178  03BD  0021               	movlb	1	; select bank1
  7179  03BE  07AF               	addwf	main@fastLoop^(0+128),f
  7180                           
  7181                           ;main.c: 230: if(slowLoop>50)
  7182  03BF  3033               	movlw	51
  7183  03C0  0230               	subwf	main@slowLoop^(0+128),w
  7184  03C1  1C03               	skipc
  7185  03C2  2A47               	goto	l3049
  7186                           
  7187                           ;main.c: 231: {
  7188                           ;main.c: 232: if(current[1]+current[3]>70)
  7189  03C3  3006               	movlw	6
  7190  03C4  3EC6               	addlw	(low (_current| 0))& (0+255)
  7191  03C5  0086               	movwf	6
  7192  03C6  0187               	clrf	7
  7193  03C7  3002               	movlw	2
  7194  03C8  3EC6               	addlw	(low (_current| 0))& (0+255)
  7195  03C9  0084               	movwf	4
  7196  03CA  0185               	clrf	5
  7197  03CB  3F40               	moviw [0]fsr1
  7198  03CC  0700               	addwf	0,w
  7199  03CD  0020               	movlb	0	; select bank0
  7200  03CE  00E8               	movwf	??_main
  7201  03CF  3101               	addfsr 0,1
  7202  03D0  3F41               	moviw [1]fsr1
  7203  03D1  3D00               	addwfc	0,w
  7204  03D2  00E9               	movwf	??_main+1
  7205  03D3  0869               	movf	??_main+1,w
  7206  03D4  3A80               	xorlw	128
  7207  03D5  00EA               	movwf	??_main+2
  7208  03D6  3080               	movlw	128
  7209  03D7  026A               	subwf	??_main+2,w
  7210  03D8  1D03               	skipz
  7211  03D9  2BDC               	goto	u3625
  7212  03DA  3047               	movlw	71
  7213  03DB  0268               	subwf	??_main,w
  7214  03DC                     u3625:	
  7215  03DC  1C03               	skipc
  7216  03DD  2BE1               	goto	l3135
  7217                           
  7218                           ;main.c: 233: {
  7219                           ;main.c: 234: dutyCycle1=40;
  7220  03DE  3028               	movlw	40
  7221  03DF  0021               	movlb	1	; select bank1
  7222  03E0  2C04               	goto	L2
  7223  03E1                     l3135:	
  7224                           ;main.c: 235: }
  7225                           
  7226                           
  7227                           ;main.c: 236: else if(current[1]+current[3]>30)
  7228  03E1  3006               	movlw	6
  7229  03E2  3EC6               	addlw	(low (_current| 0))& (0+255)
  7230  03E3  0086               	movwf	6
  7231  03E4  0187               	clrf	7
  7232  03E5  3002               	movlw	2
  7233  03E6  3EC6               	addlw	(low (_current| 0))& (0+255)
  7234  03E7  0084               	movwf	4
  7235  03E8  0185               	clrf	5
  7236  03E9  3F40               	moviw [0]fsr1
  7237  03EA  0700               	addwf	0,w
  7238  03EB  0020               	movlb	0	; select bank0
  7239  03EC  00E8               	movwf	??_main
  7240  03ED  3101               	addfsr 0,1
  7241  03EE  3F41               	moviw [1]fsr1
  7242  03EF  3D00               	addwfc	0,w
  7243  03F0  00E9               	movwf	??_main+1
  7244  03F1  0869               	movf	??_main+1,w
  7245  03F2  3A80               	xorlw	128
  7246  03F3  00EA               	movwf	??_main+2
  7247  03F4  3080               	movlw	128
  7248  03F5  026A               	subwf	??_main+2,w
  7249  03F6  1D03               	skipz
  7250  03F7  2BFA               	goto	u3635
  7251  03F8  301F               	movlw	31
  7252  03F9  0268               	subwf	??_main,w
  7253  03FA                     u3635:	
  7254  03FA  1C03               	skipc
  7255  03FB  2C08               	goto	l3143
  7256                           
  7257                           ;main.c: 237: {
  7258                           ;main.c: 238: if(dutyCycle1==0)
  7259  03FC  0021               	movlb	1	; select bank1
  7260  03FD  083F               	movf	main@dutyCycle1^(0+128),w
  7261  03FE  0440               	iorwf	(main@dutyCycle1+1)^(0+128),w
  7262  03FF  1D03               	btfss	3,2
  7263  0400  2C03               	goto	l3141
  7264                           
  7265                           ;main.c: 239: {
  7266                           ;main.c: 240: dutyCycle1=35;
  7267  0401  3023               	movlw	35
  7268  0402  2C04               	goto	L2
  7269  0403                     l3141:	
  7270                           ;main.c: 241: }
  7271                           
  7272                           
  7273                           ;main.c: 242: else
  7274                           ;main.c: 243: {
  7275                           ;main.c: 244: dutyCycle1=25;
  7276  0403  3019               	movlw	25
  7277  0404                     L2:	
  7278  0404  00BF               	movwf	main@dutyCycle1^(0+128)
  7279  0405  3000               	movlw	0
  7280  0406  00C0               	movwf	(main@dutyCycle1^(0+128)+1)
  7281                           
  7282                           ;main.c: 245: }
  7283                           ;main.c: 246: }
  7284  0407  2C0B               	goto	l3145
  7285  0408                     l3143:	
  7286                           
  7287                           ;main.c: 247: else dutyCycle1 = 0;
  7288  0408  0021               	movlb	1	; select bank1
  7289  0409  01BF               	clrf	main@dutyCycle1^(0+128)
  7290  040A  01C0               	clrf	(main@dutyCycle1+1)^(0+128)
  7291  040B                     l3145:	
  7292                           
  7293                           ;main.c: 249: displayRefresh+=1;
  7294  040B  3001               	movlw	1
  7295  040C  0020               	movlb	0	; select bank0
  7296  040D  00E8               	movwf	??_main
  7297  040E  0868               	movf	??_main,w
  7298  040F  0021               	movlb	1	; select bank1
  7299  0410  07B1               	addwf	main@displayRefresh^(0+128),f
  7300                           
  7301                           ;main.c: 250: if(displayRefresh>80)
  7302  0411  3051               	movlw	81
  7303  0412  0231               	subwf	main@displayRefresh^(0+128),w
  7304  0413  1C03               	skipc
  7305  0414  2C2E               	goto	l3155
  7306                           
  7307                           ;main.c: 251: {
  7308                           ;main.c: 252: LCDClear();
  7309  0415  3195  250F  3182   	fcall	_LCDClear
  7310                           
  7311                           ;main.c: 253: displayRefresh=0;
  7312  0418  0021               	movlb	1	; select bank1
  7313  0419  01B1               	clrf	main@displayRefresh^(0+128)
  7314                           
  7315                           ;main.c: 254: batteryTemp=tempCalc(ADCRead(9));
  7316  041A  3009               	movlw	9
  7317  041B  3193  23C4  3182   	fcall	_ADCRead
  7318  041E  0871               	movf	?_ADCRead+1,w
  7319  041F  0020               	movlb	0	; select bank0
  7320  0420  00DE               	movwf	tempCalc@analogValue+1
  7321  0421  0870               	movf	?_ADCRead,w
  7322  0422  00DD               	movwf	tempCalc@analogValue
  7323  0423  318E  26E3  3182   	fcall	_tempCalc
  7324  0426  0020               	movlb	0	; select bank0
  7325  0427  085E               	movf	?_tempCalc+1,w
  7326  0428  0021               	movlb	1	; select bank1
  7327  0429  00AE               	movwf	(main@batteryTemp+1)^(0+128)
  7328  042A  0020               	movlb	0	; select bank0
  7329  042B  085D               	movf	?_tempCalc,w
  7330  042C  0021               	movlb	1	; select bank1
  7331  042D  00AD               	movwf	main@batteryTemp^(0+128)
  7332  042E                     l3155:	
  7333                           
  7334                           ;main.c: 255: }
  7335                           ;main.c: 256: Battery_State_Machine();
  7336  042E  3189  21E8  3182   	fcall	_Battery_State_Machine
  7337                           
  7338                           ;main.c: 257: efficiency=(float)voltage[1]/100*current[1]/10;
  7339  0431  0021               	movlb	1	; select bank1
  7340  0432  0849               	movf	((_current+1)^(0+128)+2),w
  7341  0433  00F9               	movwf	___awtoft@c+1
  7342  0434  0848               	movf	(_current^(0+128)+2),w
  7343  0435  00F8               	movwf	___awtoft@c
  7344  0436  3194  24CA  3182   	fcall	___awtoft
  7345  0439  0878               	movf	?___awtoft,w
  7346  043A  0020               	movlb	0	; select bank0
  7347  043B  00B0               	movwf	___ftmul@f1
  7348  043C  0879               	movf	?___awtoft+1,w
  7349  043D  00B1               	movwf	___ftmul@f1+1
  7350  043E  087A               	movf	?___awtoft+2,w
  7351  043F  00B2               	movwf	___ftmul@f1+2
  7352  0440  3000               	movlw	0
  7353  0441  00A0               	movwf	___ftdiv@f2
  7354  0442  30C8               	movlw	200
  7355  0443  00A1               	movwf	___ftdiv@f2+1
  7356  0444  3042               	movlw	66
  7357  0445  00A2               	movwf	___ftdiv@f2+2
  7358  0446  0021               	movlb	1	; select bank1
  7359  0447  0851               	movf	((_voltage+1)^(0+128)+2),w
  7360  0448  00F9               	movwf	___awtoft@c+1
  7361  0449  0850               	movf	(_voltage^(0+128)+2),w
  7362  044A  00F8               	movwf	___awtoft@c
  7363  044B  3194  24CA  3182   	fcall	___awtoft
  7364  044E  0878               	movf	?___awtoft,w
  7365  044F  0020               	movlb	0	; select bank0
  7366  0450  00A3               	movwf	___ftdiv@f1
  7367  0451  0879               	movf	?___awtoft+1,w
  7368  0452  00A4               	movwf	___ftdiv@f1+1
  7369  0453  087A               	movf	?___awtoft+2,w
  7370  0454  00A5               	movwf	___ftdiv@f1+2
  7371  0455  318B  23E0  3182   	fcall	___ftdiv
  7372  0458  0020               	movlb	0	; select bank0
  7373  0459  0820               	movf	?___ftdiv,w
  7374  045A  00B3               	movwf	___ftmul@f2
  7375  045B  0821               	movf	?___ftdiv+1,w
  7376  045C  00B4               	movwf	___ftmul@f2+1
  7377  045D  0822               	movf	?___ftdiv+2,w
  7378  045E  00B5               	movwf	___ftmul@f2+2
  7379  045F  318D  2539  3182   	fcall	___ftmul
  7380  0462  0020               	movlb	0	; select bank0
  7381  0463  0830               	movf	?___ftmul,w
  7382  0464  0021               	movlb	1	; select bank1
  7383  0465  00B2               	movwf	_main$1296^(0+128)
  7384  0466  0020               	movlb	0	; select bank0
  7385  0467  0831               	movf	?___ftmul+1,w
  7386  0468  0021               	movlb	1	; select bank1
  7387  0469  00B3               	movwf	(_main$1296+1)^(0+128)
  7388  046A  0020               	movlb	0	; select bank0
  7389  046B  0832               	movf	?___ftmul+2,w
  7390  046C  0021               	movlb	1	; select bank1
  7391  046D  00B4               	movwf	(_main$1296+2)^(0+128)
  7392                           
  7393                           ;main.c: 257: efficiency=(float)voltage[1]/100*current[1]/10;
  7394  046E  3000               	movlw	0
  7395  046F  0020               	movlb	0	; select bank0
  7396  0470  00A0               	movwf	___ftdiv@f2
  7397  0471  3020               	movlw	32
  7398  0472  00A1               	movwf	___ftdiv@f2+1
  7399  0473  3041               	movlw	65
  7400  0474  00A2               	movwf	___ftdiv@f2+2
  7401  0475  0021               	movlb	1	; select bank1
  7402  0476  0832               	movf	_main$1296^(0+128),w
  7403  0477  0020               	movlb	0	; select bank0
  7404  0478  00A3               	movwf	___ftdiv@f1
  7405  0479  0021               	movlb	1	; select bank1
  7406  047A  0833               	movf	(_main$1296+1)^(0+128),w
  7407  047B  0020               	movlb	0	; select bank0
  7408  047C  00A4               	movwf	___ftdiv@f1+1
  7409  047D  0021               	movlb	1	; select bank1
  7410  047E  0834               	movf	(_main$1296+2)^(0+128),w
  7411  047F  0020               	movlb	0	; select bank0
  7412  0480  00A5               	movwf	___ftdiv@f1+2
  7413  0481  318B  23E0  3182   	fcall	___ftdiv
  7414  0484  0020               	movlb	0	; select bank0
  7415  0485  0820               	movf	?___ftdiv,w
  7416  0486  0021               	movlb	1	; select bank1
  7417  0487  00BA               	movwf	main@efficiency^(0+128)
  7418  0488  0020               	movlb	0	; select bank0
  7419  0489  0821               	movf	?___ftdiv+1,w
  7420  048A  0021               	movlb	1	; select bank1
  7421  048B  00BB               	movwf	(main@efficiency+1)^(0+128)
  7422  048C  0020               	movlb	0	; select bank0
  7423  048D  0822               	movf	?___ftdiv+2,w
  7424  048E  0021               	movlb	1	; select bank1
  7425  048F  00BC               	movwf	(main@efficiency+2)^(0+128)
  7426                           
  7427                           ;main.c: 258: efficiency/=(float)voltage[0]/100*current[0]/10;
  7428  0490  084F               	movf	(_voltage+1)^(0+128),w
  7429  0491  00F9               	movwf	___awtoft@c+1
  7430  0492  084E               	movf	_voltage^(0+128),w
  7431  0493  00F8               	movwf	___awtoft@c
  7432  0494  3194  24CA  3182   	fcall	___awtoft
  7433  0497  0878               	movf	?___awtoft,w
  7434  0498  0020               	movlb	0	; select bank0
  7435  0499  00A3               	movwf	___ftdiv@f1
  7436  049A  0879               	movf	?___awtoft+1,w
  7437  049B  00A4               	movwf	___ftdiv@f1+1
  7438  049C  087A               	movf	?___awtoft+2,w
  7439  049D  00A5               	movwf	___ftdiv@f1+2
  7440  049E  3000               	movlw	0
  7441  049F  00A0               	movwf	___ftdiv@f2
  7442  04A0  30C8               	movlw	200
  7443  04A1  00A1               	movwf	___ftdiv@f2+1
  7444  04A2  3042               	movlw	66
  7445  04A3  00A2               	movwf	___ftdiv@f2+2
  7446  04A4  318B  23E0  3182   	fcall	___ftdiv
  7447  04A7  0020               	movlb	0	; select bank0
  7448  04A8  0820               	movf	?___ftdiv,w
  7449  04A9  00B3               	movwf	___ftmul@f2
  7450  04AA  0821               	movf	?___ftdiv+1,w
  7451  04AB  00B4               	movwf	___ftmul@f2+1
  7452  04AC  0822               	movf	?___ftdiv+2,w
  7453  04AD  00B5               	movwf	___ftmul@f2+2
  7454  04AE  0021               	movlb	1	; select bank1
  7455  04AF  0847               	movf	(_current+1)^(0+128),w
  7456  04B0  00F9               	movwf	___awtoft@c+1
  7457  04B1  0846               	movf	_current^(0+128),w
  7458  04B2  00F8               	movwf	___awtoft@c
  7459  04B3  3194  24CA  3182   	fcall	___awtoft
  7460  04B6  0878               	movf	?___awtoft,w
  7461  04B7  0020               	movlb	0	; select bank0
  7462  04B8  00B0               	movwf	___ftmul@f1
  7463  04B9  0879               	movf	?___awtoft+1,w
  7464  04BA  00B1               	movwf	___ftmul@f1+1
  7465  04BB  087A               	movf	?___awtoft+2,w
  7466  04BC  00B2               	movwf	___ftmul@f1+2
  7467  04BD  318D  2539  3182   	fcall	___ftmul
  7468  04C0  0020               	movlb	0	; select bank0
  7469  04C1  0830               	movf	?___ftmul,w
  7470  04C2  0021               	movlb	1	; select bank1
  7471  04C3  00B2               	movwf	_main$1296^(0+128)
  7472  04C4  0020               	movlb	0	; select bank0
  7473  04C5  0831               	movf	?___ftmul+1,w
  7474  04C6  0021               	movlb	1	; select bank1
  7475  04C7  00B3               	movwf	(_main$1296+1)^(0+128)
  7476  04C8  0020               	movlb	0	; select bank0
  7477  04C9  0832               	movf	?___ftmul+2,w
  7478  04CA  0021               	movlb	1	; select bank1
  7479  04CB  00B4               	movwf	(_main$1296+2)^(0+128)
  7480                           
  7481                           ;main.c: 258: efficiency/=(float)voltage[0]/100*current[0]/10;
  7482  04CC  0832               	movf	_main$1296^(0+128),w
  7483  04CD  0020               	movlb	0	; select bank0
  7484  04CE  00A3               	movwf	___ftdiv@f1
  7485  04CF  0021               	movlb	1	; select bank1
  7486  04D0  0833               	movf	(_main$1296+1)^(0+128),w
  7487  04D1  0020               	movlb	0	; select bank0
  7488  04D2  00A4               	movwf	___ftdiv@f1+1
  7489  04D3  0021               	movlb	1	; select bank1
  7490  04D4  0834               	movf	(_main$1296+2)^(0+128),w
  7491  04D5  0020               	movlb	0	; select bank0
  7492  04D6  00A5               	movwf	___ftdiv@f1+2
  7493  04D7  3000               	movlw	0
  7494  04D8  00A0               	movwf	___ftdiv@f2
  7495  04D9  3020               	movlw	32
  7496  04DA  00A1               	movwf	___ftdiv@f2+1
  7497  04DB  3041               	movlw	65
  7498  04DC  00A2               	movwf	___ftdiv@f2+2
  7499  04DD  318B  23E0  3182   	fcall	___ftdiv
  7500  04E0  0020               	movlb	0	; select bank0
  7501  04E1  0820               	movf	?___ftdiv,w
  7502  04E2  0021               	movlb	1	; select bank1
  7503  04E3  00A6               	movwf	_main$1297^(0+128)
  7504  04E4  0020               	movlb	0	; select bank0
  7505  04E5  0821               	movf	?___ftdiv+1,w
  7506  04E6  0021               	movlb	1	; select bank1
  7507  04E7  00A7               	movwf	(_main$1297+1)^(0+128)
  7508  04E8  0020               	movlb	0	; select bank0
  7509  04E9  0822               	movf	?___ftdiv+2,w
  7510  04EA  0021               	movlb	1	; select bank1
  7511  04EB  00A8               	movwf	(_main$1297+2)^(0+128)
  7512                           
  7513                           ;main.c: 258: efficiency/=(float)voltage[0]/100*current[0]/10;
  7514  04EC  0826               	movf	_main$1297^(0+128),w
  7515  04ED  0020               	movlb	0	; select bank0
  7516  04EE  00A0               	movwf	___ftdiv@f2
  7517  04EF  0021               	movlb	1	; select bank1
  7518  04F0  0827               	movf	(_main$1297+1)^(0+128),w
  7519  04F1  0020               	movlb	0	; select bank0
  7520  04F2  00A1               	movwf	___ftdiv@f2+1
  7521  04F3  0021               	movlb	1	; select bank1
  7522  04F4  0828               	movf	(_main$1297+2)^(0+128),w
  7523  04F5  0020               	movlb	0	; select bank0
  7524  04F6  00A2               	movwf	___ftdiv@f2+2
  7525  04F7  0021               	movlb	1	; select bank1
  7526  04F8  083A               	movf	main@efficiency^(0+128),w
  7527  04F9  0020               	movlb	0	; select bank0
  7528  04FA  00A3               	movwf	___ftdiv@f1
  7529  04FB  0021               	movlb	1	; select bank1
  7530  04FC  083B               	movf	(main@efficiency+1)^(0+128),w
  7531  04FD  0020               	movlb	0	; select bank0
  7532  04FE  00A4               	movwf	___ftdiv@f1+1
  7533  04FF  0021               	movlb	1	; select bank1
  7534  0500  083C               	movf	(main@efficiency+2)^(0+128),w
  7535  0501  0020               	movlb	0	; select bank0
  7536  0502  00A5               	movwf	___ftdiv@f1+2
  7537  0503  318B  23E0  3182   	fcall	___ftdiv
  7538  0506  0020               	movlb	0	; select bank0
  7539  0507  0820               	movf	?___ftdiv,w
  7540  0508  0021               	movlb	1	; select bank1
  7541  0509  00BA               	movwf	main@efficiency^(0+128)
  7542  050A  0020               	movlb	0	; select bank0
  7543  050B  0821               	movf	?___ftdiv+1,w
  7544  050C  0021               	movlb	1	; select bank1
  7545  050D  00BB               	movwf	(main@efficiency+1)^(0+128)
  7546  050E  0020               	movlb	0	; select bank0
  7547  050F  0822               	movf	?___ftdiv+2,w
  7548  0510  0021               	movlb	1	; select bank1
  7549  0511  00BC               	movwf	(main@efficiency+2)^(0+128)
  7550                           
  7551                           ;main.c: 259: efficiency*=100;
  7552  0512  3000               	movlw	0
  7553  0513  0020               	movlb	0	; select bank0
  7554  0514  00B0               	movwf	___ftmul@f1
  7555  0515  30C8               	movlw	200
  7556  0516  00B1               	movwf	___ftmul@f1+1
  7557  0517  3042               	movlw	66
  7558  0518  00B2               	movwf	___ftmul@f1+2
  7559  0519  0021               	movlb	1	; select bank1
  7560  051A  083A               	movf	main@efficiency^(0+128),w
  7561  051B  0020               	movlb	0	; select bank0
  7562  051C  00B3               	movwf	___ftmul@f2
  7563  051D  0021               	movlb	1	; select bank1
  7564  051E  083B               	movf	(main@efficiency+1)^(0+128),w
  7565  051F  0020               	movlb	0	; select bank0
  7566  0520  00B4               	movwf	___ftmul@f2+1
  7567  0521  0021               	movlb	1	; select bank1
  7568  0522  083C               	movf	(main@efficiency+2)^(0+128),w
  7569  0523  0020               	movlb	0	; select bank0
  7570  0524  00B5               	movwf	___ftmul@f2+2
  7571  0525  318D  2539  3182   	fcall	___ftmul
  7572  0528  0020               	movlb	0	; select bank0
  7573  0529  0830               	movf	?___ftmul,w
  7574  052A  0021               	movlb	1	; select bank1
  7575  052B  00BA               	movwf	main@efficiency^(0+128)
  7576  052C  0020               	movlb	0	; select bank0
  7577  052D  0831               	movf	?___ftmul+1,w
  7578  052E  0021               	movlb	1	; select bank1
  7579  052F  00BB               	movwf	(main@efficiency+1)^(0+128)
  7580  0530  0020               	movlb	0	; select bank0
  7581  0531  0832               	movf	?___ftmul+2,w
  7582  0532  0021               	movlb	1	; select bank1
  7583  0533  00BC               	movwf	(main@efficiency+2)^(0+128)
  7584                           
  7585                           ;main.c: 260: LCDWriteCharacter(' ');
  7586  0534  3020               	movlw	32
  7587  0535  3197  2748  3182   	fcall	_LCDWriteCharacter
  7588                           
  7589                           ;main.c: 273: { gotoXY(0,0); LCDWriteInt(batteryTemp,4, 1, 0);};
  7590  0538  01F5               	clrf	gotoXY@y
  7591  0539  3000               	movlw	0
  7592  053A  3193  23B1  3182   	fcall	_gotoXY
  7593  053D  0021               	movlb	1	; select bank1
  7594  053E  082E               	movf	(main@batteryTemp+1)^(0+128),w
  7595  053F  0020               	movlb	0	; select bank0
  7596  0540  00BF               	movwf	LCDWriteInt@value+1
  7597  0541  0021               	movlb	1	; select bank1
  7598  0542  082D               	movf	main@batteryTemp^(0+128),w
  7599  0543  0020               	movlb	0	; select bank0
  7600  0544  00BE               	movwf	LCDWriteInt@value
  7601  0545  3004               	movlw	4
  7602  0546  00E8               	movwf	??_main
  7603  0547  0868               	movf	??_main,w
  7604  0548  00C0               	movwf	LCDWriteInt@fieldLength
  7605  0549  01C1               	clrf	LCDWriteInt@numPlaces
  7606  054A  0AC1               	incf	LCDWriteInt@numPlaces,f
  7607  054B  01C2               	clrf	LCDWriteInt@sign
  7608  054C  3180  200B  3182   	fcall	_LCDWriteInt
  7609                           
  7610                           ;main.c: 274: { gotoXY(24,0); LCDWriteString("Eff:");};
  7611  054F  01F5               	clrf	gotoXY@y
  7612  0550  3018               	movlw	24
  7613  0551  3193  23B1  3182   	fcall	_gotoXY
  7614  0554  301B               	movlw	low (STR_1| (0+32768))
  7615  0555  0020               	movlb	0	; select bank0
  7616  0556  00A8               	movwf	LCDWriteString@characters
  7617  0557  3098               	movlw	high (STR_1| (0+32768))
  7618  0558  00A9               	movwf	LCDWriteString@characters+1
  7619  0559  3194  241B  3182   	fcall	_LCDWriteString
  7620                           
  7621                           ;main.c: 275: { gotoXY(60,0); LCDWriteInt((int16_t)efficiency,5, 0, 0);};
  7622  055C  01F5               	clrf	gotoXY@y
  7623  055D  303C               	movlw	60
  7624  055E  3193  23B1  3182   	fcall	_gotoXY
  7625  0561  0021               	movlb	1	; select bank1
  7626  0562  083A               	movf	main@efficiency^(0+128),w
  7627  0563  0020               	movlb	0	; select bank0
  7628  0564  00B0               	movwf	___fttol@f1
  7629  0565  0021               	movlb	1	; select bank1
  7630  0566  083B               	movf	(main@efficiency+1)^(0+128),w
  7631  0567  0020               	movlb	0	; select bank0
  7632  0568  00B1               	movwf	___fttol@f1+1
  7633  0569  0021               	movlb	1	; select bank1
  7634  056A  083C               	movf	(main@efficiency+2)^(0+128),w
  7635  056B  0020               	movlb	0	; select bank0
  7636  056C  00B2               	movwf	___fttol@f1+2
  7637  056D  318A  22D2  3182   	fcall	___fttol
  7638  0570  0020               	movlb	0	; select bank0
  7639  0571  0831               	movf	?___fttol+1,w
  7640  0572  00BF               	movwf	LCDWriteInt@value+1
  7641  0573  0830               	movf	?___fttol,w
  7642  0574  00BE               	movwf	LCDWriteInt@value
  7643  0575  3005               	movlw	5
  7644  0576  00E8               	movwf	??_main
  7645  0577  0868               	movf	??_main,w
  7646  0578  00C0               	movwf	LCDWriteInt@fieldLength
  7647  0579  01C1               	clrf	LCDWriteInt@numPlaces
  7648  057A  01C2               	clrf	LCDWriteInt@sign
  7649  057B  3180  200B  3182   	fcall	_LCDWriteInt
  7650                           
  7651                           ;main.c: 278: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7652  057E  01F5               	clrf	gotoXY@y
  7653  057F  0AF5               	incf	gotoXY@y,f
  7654  0580  3000               	movlw	0
  7655  0581  3193  23B1  3182   	fcall	_gotoXY
  7656  0584  0021               	movlb	1	; select bank1
  7657  0585  084F               	movf	(_voltage+1)^(0+128),w
  7658  0586  0020               	movlb	0	; select bank0
  7659  0587  00BF               	movwf	LCDWriteInt@value+1
  7660  0588  0021               	movlb	1	; select bank1
  7661  0589  084E               	movf	_voltage^(0+128),w
  7662  058A  0020               	movlb	0	; select bank0
  7663  058B  00BE               	movwf	LCDWriteInt@value
  7664  058C  3004               	movlw	4
  7665  058D  00E8               	movwf	??_main
  7666  058E  0868               	movf	??_main,w
  7667  058F  00C0               	movwf	LCDWriteInt@fieldLength
  7668  0590  3002               	movlw	2
  7669  0591  00E9               	movwf	??_main+1
  7670  0592  0869               	movf	??_main+1,w
  7671  0593  00C1               	movwf	LCDWriteInt@numPlaces
  7672  0594  01C2               	clrf	LCDWriteInt@sign
  7673  0595  3180  200B  3182   	fcall	_LCDWriteInt
  7674                           
  7675                           ;main.c: 279: LCDWriteCharacter('V');
  7676  0598  3056               	movlw	86
  7677  0599  3197  2748  3182   	fcall	_LCDWriteCharacter
  7678                           
  7679                           ;main.c: 280: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7680  059C  01F5               	clrf	gotoXY@y
  7681  059D  0AF5               	incf	gotoXY@y,f
  7682  059E  301C               	movlw	28
  7683  059F  3193  23B1  3182   	fcall	_gotoXY
  7684  05A2  0021               	movlb	1	; select bank1
  7685  05A3  0847               	movf	(_current+1)^(0+128),w
  7686  05A4  0020               	movlb	0	; select bank0
  7687  05A5  00BF               	movwf	LCDWriteInt@value+1
  7688  05A6  0021               	movlb	1	; select bank1
  7689  05A7  0846               	movf	_current^(0+128),w
  7690  05A8  0020               	movlb	0	; select bank0
  7691  05A9  00BE               	movwf	LCDWriteInt@value
  7692  05AA  3003               	movlw	3
  7693  05AB  00E8               	movwf	??_main
  7694  05AC  0868               	movf	??_main,w
  7695  05AD  00C0               	movwf	LCDWriteInt@fieldLength
  7696  05AE  01C1               	clrf	LCDWriteInt@numPlaces
  7697  05AF  0AC1               	incf	LCDWriteInt@numPlaces,f
  7698  05B0  01C2               	clrf	LCDWriteInt@sign
  7699  05B1  3180  200B  3182   	fcall	_LCDWriteInt
  7700                           
  7701                           ;main.c: 281: LCDWriteCharacter('A');
  7702  05B4  3041               	movlw	65
  7703  05B5  3197  2748  3182   	fcall	_LCDWriteCharacter
  7704                           
  7705                           ;main.c: 282: { gotoXY(56,1); LCDWriteInt(ADCRead(11),4, 0, 0);};
  7706  05B8  01F5               	clrf	gotoXY@y
  7707  05B9  0AF5               	incf	gotoXY@y,f
  7708  05BA  3038               	movlw	56
  7709  05BB  3193  23B1  3182   	fcall	_gotoXY
  7710  05BE  300B               	movlw	11
  7711  05BF  3193  23C4  3182   	fcall	_ADCRead
  7712  05C2  0871               	movf	?_ADCRead+1,w
  7713  05C3  0020               	movlb	0	; select bank0
  7714  05C4  00BF               	movwf	LCDWriteInt@value+1
  7715  05C5  0870               	movf	?_ADCRead,w
  7716  05C6  00BE               	movwf	LCDWriteInt@value
  7717  05C7  3004               	movlw	4
  7718  05C8  00E8               	movwf	??_main
  7719  05C9  0868               	movf	??_main,w
  7720  05CA  00C0               	movwf	LCDWriteInt@fieldLength
  7721  05CB  01C1               	clrf	LCDWriteInt@numPlaces
  7722  05CC  01C2               	clrf	LCDWriteInt@sign
  7723  05CD  3180  200B  3182   	fcall	_LCDWriteInt
  7724                           
  7725                           ;main.c: 283: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7726  05D0  3002               	movlw	2
  7727  05D1  0020               	movlb	0	; select bank0
  7728  05D2  00E8               	movwf	??_main
  7729  05D3  0868               	movf	??_main,w
  7730  05D4  00F5               	movwf	gotoXY@y
  7731  05D5  3000               	movlw	0
  7732  05D6  3193  23B1  3182   	fcall	_gotoXY
  7733  05D9  0021               	movlb	1	; select bank1
  7734  05DA  0851               	movf	((_voltage+1)^(0+128)+2),w
  7735  05DB  0020               	movlb	0	; select bank0
  7736  05DC  00BF               	movwf	LCDWriteInt@value+1
  7737  05DD  0021               	movlb	1	; select bank1
  7738  05DE  0850               	movf	(_voltage^(0+128)+2),w
  7739  05DF  0020               	movlb	0	; select bank0
  7740  05E0  00BE               	movwf	LCDWriteInt@value
  7741  05E1  3004               	movlw	4
  7742  05E2  00E8               	movwf	??_main
  7743  05E3  0868               	movf	??_main,w
  7744  05E4  00C0               	movwf	LCDWriteInt@fieldLength
  7745  05E5  3002               	movlw	2
  7746  05E6  00E9               	movwf	??_main+1
  7747  05E7  0869               	movf	??_main+1,w
  7748  05E8  00C1               	movwf	LCDWriteInt@numPlaces
  7749  05E9  01C2               	clrf	LCDWriteInt@sign
  7750  05EA  3180  200B  3182   	fcall	_LCDWriteInt
  7751                           
  7752                           ;main.c: 284: LCDWriteCharacter('V');
  7753  05ED  3056               	movlw	86
  7754  05EE  3197  2748  3182   	fcall	_LCDWriteCharacter
  7755                           
  7756                           ;main.c: 285: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7757  05F1  3002               	movlw	2
  7758  05F2  0020               	movlb	0	; select bank0
  7759  05F3  00E8               	movwf	??_main
  7760  05F4  0868               	movf	??_main,w
  7761  05F5  00F5               	movwf	gotoXY@y
  7762  05F6  301C               	movlw	28
  7763  05F7  3193  23B1  3182   	fcall	_gotoXY
  7764  05FA  0021               	movlb	1	; select bank1
  7765  05FB  0849               	movf	((_current+1)^(0+128)+2),w
  7766  05FC  0020               	movlb	0	; select bank0
  7767  05FD  00BF               	movwf	LCDWriteInt@value+1
  7768  05FE  0021               	movlb	1	; select bank1
  7769  05FF  0848               	movf	(_current^(0+128)+2),w
  7770  0600  0020               	movlb	0	; select bank0
  7771  0601  00BE               	movwf	LCDWriteInt@value
  7772  0602  3003               	movlw	3
  7773  0603  00E8               	movwf	??_main
  7774  0604  0868               	movf	??_main,w
  7775  0605  00C0               	movwf	LCDWriteInt@fieldLength
  7776  0606  01C1               	clrf	LCDWriteInt@numPlaces
  7777  0607  0AC1               	incf	LCDWriteInt@numPlaces,f
  7778  0608  01C2               	clrf	LCDWriteInt@sign
  7779  0609  3180  200B  3182   	fcall	_LCDWriteInt
  7780                           
  7781                           ;main.c: 286: LCDWriteCharacter('A');
  7782  060C  3041               	movlw	65
  7783  060D  3197  2748  3182   	fcall	_LCDWriteCharacter
  7784                           
  7785                           ;main.c: 287: { gotoXY(56,2); LCDWriteInt(Vref,4, 2, 0);};
  7786  0610  3002               	movlw	2
  7787  0611  0020               	movlb	0	; select bank0
  7788  0612  00E8               	movwf	??_main
  7789  0613  0868               	movf	??_main,w
  7790  0614  00F5               	movwf	gotoXY@y
  7791  0615  3038               	movlw	56
  7792  0616  3193  23B1  3182   	fcall	_gotoXY
  7793  0619  0021               	movlb	1	; select bank1
  7794  061A  0868               	movf	(_Vref+1)^(0+128),w
  7795  061B  0020               	movlb	0	; select bank0
  7796  061C  00BF               	movwf	LCDWriteInt@value+1
  7797  061D  0021               	movlb	1	; select bank1
  7798  061E  0867               	movf	_Vref^(0+128),w
  7799  061F  0020               	movlb	0	; select bank0
  7800  0620  00BE               	movwf	LCDWriteInt@value
  7801  0621  3004               	movlw	4
  7802  0622  00E8               	movwf	??_main
  7803  0623  0868               	movf	??_main,w
  7804  0624  00C0               	movwf	LCDWriteInt@fieldLength
  7805  0625  3002               	movlw	2
  7806  0626  00E9               	movwf	??_main+1
  7807  0627  0869               	movf	??_main+1,w
  7808  0628  00C1               	movwf	LCDWriteInt@numPlaces
  7809  0629  01C2               	clrf	LCDWriteInt@sign
  7810  062A  3180  200B  3182   	fcall	_LCDWriteInt
  7811                           
  7812                           ;main.c: 288: LCDWriteCharacter('V');
  7813  062D  3056               	movlw	86
  7814  062E  3197  2748  3182   	fcall	_LCDWriteCharacter
  7815                           
  7816                           ;main.c: 290: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7817  0631  3003               	movlw	3
  7818  0632  0020               	movlb	0	; select bank0
  7819  0633  00E8               	movwf	??_main
  7820  0634  0868               	movf	??_main,w
  7821  0635  00F5               	movwf	gotoXY@y
  7822  0636  3000               	movlw	0
  7823  0637  3193  23B1  3182   	fcall	_gotoXY
  7824  063A  3064               	movlw	100
  7825  063B  00F0               	movwf	___awdiv@divisor
  7826  063C  3000               	movlw	0
  7827  063D  00F1               	movwf	___awdiv@divisor+1
  7828  063E  0021               	movlb	1	; select bank1
  7829  063F  084F               	movf	(_voltage+1)^(0+128),w
  7830  0640  00F3               	movwf	___awdiv@dividend+1
  7831  0641  084E               	movf	_voltage^(0+128),w
  7832  0642  00F2               	movwf	___awdiv@dividend
  7833  0643  3189  2133  3182   	fcall	___awdiv
  7834  0646  0871               	movf	?___awdiv+1,w
  7835  0647  00FA               	movwf	___wmul@multiplier+1
  7836  0648  0870               	movf	?___awdiv,w
  7837  0649  00F9               	movwf	___wmul@multiplier
  7838  064A  0021               	movlb	1	; select bank1
  7839  064B  0847               	movf	(_current+1)^(0+128),w
  7840  064C  00FC               	movwf	___wmul@multiplicand+1
  7841  064D  0846               	movf	_current^(0+128),w
  7842  064E  00FB               	movwf	___wmul@multiplicand
  7843  064F  3194  2432  3182   	fcall	___wmul
  7844  0652  087A               	movf	?___wmul+1,w
  7845  0653  0021               	movlb	1	; select bank1
  7846  0654  00B8               	movwf	(_main$1295+1)^(0+128)
  7847  0655  0879               	movf	?___wmul,w
  7848  0656  00B7               	movwf	_main$1295^(0+128)
  7849  0657  300A               	movlw	10
  7850  0658  00F0               	movwf	___awdiv@divisor
  7851  0659  3000               	movlw	0
  7852  065A  00F1               	movwf	___awdiv@divisor+1
  7853  065B  0838               	movf	(_main$1295+1)^(0+128),w
  7854  065C  00F3               	movwf	___awdiv@dividend+1
  7855  065D  0837               	movf	_main$1295^(0+128),w
  7856  065E  00F2               	movwf	___awdiv@dividend
  7857  065F  3189  2133  3182   	fcall	___awdiv
  7858  0662  0871               	movf	?___awdiv+1,w
  7859  0663  0021               	movlb	1	; select bank1
  7860  0664  00B6               	movwf	(_main$1298+1)^(0+128)
  7861  0665  0870               	movf	?___awdiv,w
  7862  0666  00B5               	movwf	_main$1298^(0+128)
  7863  0667  0836               	movf	(_main$1298+1)^(0+128),w
  7864  0668  0020               	movlb	0	; select bank0
  7865  0669  00BF               	movwf	LCDWriteInt@value+1
  7866  066A  0021               	movlb	1	; select bank1
  7867  066B  0835               	movf	_main$1298^(0+128),w
  7868  066C  0020               	movlb	0	; select bank0
  7869  066D  00BE               	movwf	LCDWriteInt@value
  7870  066E  3003               	movlw	3
  7871  066F  00E8               	movwf	??_main
  7872  0670  0868               	movf	??_main,w
  7873  0671  00C0               	movwf	LCDWriteInt@fieldLength
  7874  0672  01C1               	clrf	LCDWriteInt@numPlaces
  7875  0673  01C2               	clrf	LCDWriteInt@sign
  7876  0674  3180  200B  3182   	fcall	_LCDWriteInt
  7877                           
  7878                           ;main.c: 291: LCDWriteCharacter('W');
  7879  0677  3057               	movlw	87
  7880  0678  3197  2748  3182   	fcall	_LCDWriteCharacter
  7881                           
  7882                           ;main.c: 292: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7883  067B  3003               	movlw	3
  7884  067C  0020               	movlb	0	; select bank0
  7885  067D  00E8               	movwf	??_main
  7886  067E  0868               	movf	??_main,w
  7887  067F  00F5               	movwf	gotoXY@y
  7888  0680  301C               	movlw	28
  7889  0681  3193  23B1  3182   	fcall	_gotoXY
  7890  0684  0021               	movlb	1	; select bank1
  7891  0685  086D               	movf	_battery_state^(0+128),w
  7892  0686  0020               	movlb	0	; select bank0
  7893  0687  00E8               	movwf	??_main
  7894  0688  01E9               	clrf	??_main+1
  7895  0689  0868               	movf	??_main,w
  7896  068A  00BE               	movwf	LCDWriteInt@value
  7897  068B  0869               	movf	??_main+1,w
  7898  068C  00BF               	movwf	LCDWriteInt@value+1
  7899  068D  01C0               	clrf	LCDWriteInt@fieldLength
  7900  068E  0AC0               	incf	LCDWriteInt@fieldLength,f
  7901  068F  01C1               	clrf	LCDWriteInt@numPlaces
  7902  0690  01C2               	clrf	LCDWriteInt@sign
  7903  0691  3180  200B  3182   	fcall	_LCDWriteInt
  7904                           
  7905                           ;main.c: 293: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7906  0694  3003               	movlw	3
  7907  0695  0020               	movlb	0	; select bank0
  7908  0696  00E8               	movwf	??_main
  7909  0697  0868               	movf	??_main,w
  7910  0698  00F5               	movwf	gotoXY@y
  7911  0699  3024               	movlw	36
  7912  069A  3193  23B1  3182   	fcall	_gotoXY
  7913  069D  0021               	movlb	1	; select bank1
  7914  069E  086F               	movf	_Imode0^(0+128),w
  7915  069F  0020               	movlb	0	; select bank0
  7916  06A0  00BE               	movwf	LCDWriteInt@value
  7917  06A1  01BF               	clrf	LCDWriteInt@value+1
  7918  06A2  1BBE               	btfsc	LCDWriteInt@value,7
  7919  06A3  03BF               	decf	LCDWriteInt@value+1,f
  7920  06A4  01C0               	clrf	LCDWriteInt@fieldLength
  7921  06A5  0AC0               	incf	LCDWriteInt@fieldLength,f
  7922  06A6  01C1               	clrf	LCDWriteInt@numPlaces
  7923  06A7  01C2               	clrf	LCDWriteInt@sign
  7924  06A8  3180  200B  3182   	fcall	_LCDWriteInt
  7925                           
  7926                           ;main.c: 294: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7927  06AB  3003               	movlw	3
  7928  06AC  0020               	movlb	0	; select bank0
  7929  06AD  00E8               	movwf	??_main
  7930  06AE  0868               	movf	??_main,w
  7931  06AF  00F5               	movwf	gotoXY@y
  7932  06B0  3030               	movlw	48
  7933  06B1  3193  23B1  3182   	fcall	_gotoXY
  7934  06B4  0021               	movlb	1	; select bank1
  7935  06B5  086A               	movf	(_Iref+1)^(0+128),w
  7936  06B6  0020               	movlb	0	; select bank0
  7937  06B7  00BF               	movwf	LCDWriteInt@value+1
  7938  06B8  0021               	movlb	1	; select bank1
  7939  06B9  0869               	movf	_Iref^(0+128),w
  7940  06BA  0020               	movlb	0	; select bank0
  7941  06BB  00BE               	movwf	LCDWriteInt@value
  7942  06BC  3003               	movlw	3
  7943  06BD  00E8               	movwf	??_main
  7944  06BE  0868               	movf	??_main,w
  7945  06BF  00C0               	movwf	LCDWriteInt@fieldLength
  7946  06C0  01C1               	clrf	LCDWriteInt@numPlaces
  7947  06C1  0AC1               	incf	LCDWriteInt@numPlaces,f
  7948  06C2  01C2               	clrf	LCDWriteInt@sign
  7949  06C3  3180  200B  3182   	fcall	_LCDWriteInt
  7950                           
  7951                           ;main.c: 295: LCDWriteCharacter('A');
  7952  06C6  3041               	movlw	65
  7953  06C7  3197  2748  3182   	fcall	_LCDWriteCharacter
  7954                           
  7955                           ;main.c: 297: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7956  06CA  3004               	movlw	4
  7957  06CB  0020               	movlb	0	; select bank0
  7958  06CC  00E8               	movwf	??_main
  7959  06CD  0868               	movf	??_main,w
  7960  06CE  00F5               	movwf	gotoXY@y
  7961  06CF  3000               	movlw	0
  7962  06D0  3193  23B1  3182   	fcall	_gotoXY
  7963  06D3  3064               	movlw	100
  7964  06D4  00F0               	movwf	___awdiv@divisor
  7965  06D5  3000               	movlw	0
  7966  06D6  00F1               	movwf	___awdiv@divisor+1
  7967  06D7  0021               	movlb	1	; select bank1
  7968  06D8  0851               	movf	((_voltage+1)^(0+128)+2),w
  7969  06D9  00F3               	movwf	___awdiv@dividend+1
  7970  06DA  0850               	movf	(_voltage^(0+128)+2),w
  7971  06DB  00F2               	movwf	___awdiv@dividend
  7972  06DC  3189  2133  3182   	fcall	___awdiv
  7973  06DF  0871               	movf	?___awdiv+1,w
  7974  06E0  00FA               	movwf	___wmul@multiplier+1
  7975  06E1  0870               	movf	?___awdiv,w
  7976  06E2  00F9               	movwf	___wmul@multiplier
  7977  06E3  0021               	movlb	1	; select bank1
  7978  06E4  0849               	movf	((_current+1)^(0+128)+2),w
  7979  06E5  00FC               	movwf	___wmul@multiplicand+1
  7980  06E6  0848               	movf	(_current^(0+128)+2),w
  7981  06E7  00FB               	movwf	___wmul@multiplicand
  7982  06E8  3194  2432  3182   	fcall	___wmul
  7983  06EB  087A               	movf	?___wmul+1,w
  7984  06EC  0021               	movlb	1	; select bank1
  7985  06ED  00B8               	movwf	(_main$1295+1)^(0+128)
  7986  06EE  0879               	movf	?___wmul,w
  7987  06EF  00B7               	movwf	_main$1295^(0+128)
  7988  06F0  300A               	movlw	10
  7989  06F1  00F0               	movwf	___awdiv@divisor
  7990  06F2  3000               	movlw	0
  7991  06F3  00F1               	movwf	___awdiv@divisor+1
  7992  06F4  0838               	movf	(_main$1295+1)^(0+128),w
  7993  06F5  00F3               	movwf	___awdiv@dividend+1
  7994  06F6  0837               	movf	_main$1295^(0+128),w
  7995  06F7  00F2               	movwf	___awdiv@dividend
  7996  06F8  3189  2133  3182   	fcall	___awdiv
  7997  06FB  0871               	movf	?___awdiv+1,w
  7998  06FC  0021               	movlb	1	; select bank1
  7999  06FD  00B6               	movwf	(_main$1298+1)^(0+128)
  8000  06FE  0870               	movf	?___awdiv,w
  8001  06FF  00B5               	movwf	_main$1298^(0+128)
  8002  0700  0836               	movf	(_main$1298+1)^(0+128),w
  8003  0701  0020               	movlb	0	; select bank0
  8004  0702  00BF               	movwf	LCDWriteInt@value+1
  8005  0703  0021               	movlb	1	; select bank1
  8006  0704  0835               	movf	_main$1298^(0+128),w
  8007  0705  0020               	movlb	0	; select bank0
  8008  0706  00BE               	movwf	LCDWriteInt@value
  8009  0707  3003               	movlw	3
  8010  0708  00E8               	movwf	??_main
  8011  0709  0868               	movf	??_main,w
  8012  070A  00C0               	movwf	LCDWriteInt@fieldLength
  8013  070B  01C1               	clrf	LCDWriteInt@numPlaces
  8014  070C  01C2               	clrf	LCDWriteInt@sign
  8015  070D  3180  200B  3182   	fcall	_LCDWriteInt
  8016                           
  8017                           ;main.c: 298: LCDWriteCharacter('W');
  8018  0710  3057               	movlw	87
  8019  0711  3197  2748  3182   	fcall	_LCDWriteCharacter
  8020                           
  8021                           ;main.c: 299: { gotoXY(24,4); LCDWriteInt(power0OutOld,3, 0, 0);};
  8022  0714  3004               	movlw	4
  8023  0715  0020               	movlb	0	; select bank0
  8024  0716  00E8               	movwf	??_main
  8025  0717  0868               	movf	??_main,w
  8026  0718  00F5               	movwf	gotoXY@y
  8027  0719  3018               	movlw	24
  8028  071A  3193  23B1  3182   	fcall	_gotoXY
  8029  071D  0021               	movlb	1	; select bank1
  8030  071E  082C               	movf	(main@power0OutOld+1)^(0+128),w
  8031  071F  0020               	movlb	0	; select bank0
  8032  0720  00BF               	movwf	LCDWriteInt@value+1
  8033  0721  0021               	movlb	1	; select bank1
  8034  0722  082B               	movf	main@power0OutOld^(0+128),w
  8035  0723  0020               	movlb	0	; select bank0
  8036  0724  00BE               	movwf	LCDWriteInt@value
  8037  0725  3003               	movlw	3
  8038  0726  00E8               	movwf	??_main
  8039  0727  0868               	movf	??_main,w
  8040  0728  00C0               	movwf	LCDWriteInt@fieldLength
  8041  0729  01C1               	clrf	LCDWriteInt@numPlaces
  8042  072A  01C2               	clrf	LCDWriteInt@sign
  8043  072B  3180  200B  3182   	fcall	_LCDWriteInt
  8044                           
  8045                           ;main.c: 300: LCDWriteCharacter('W');
  8046  072E  3057               	movlw	87
  8047  072F  3197  2748  3182   	fcall	_LCDWriteCharacter
  8048                           
  8049                           ;main.c: 301: { gotoXY(48,5); LCDWriteInt(MPPT0,4, 0, 0);};
  8050  0732  3005               	movlw	5
  8051  0733  0020               	movlb	0	; select bank0
  8052  0734  00E8               	movwf	??_main
  8053  0735  0868               	movf	??_main,w
  8054  0736  00F5               	movwf	gotoXY@y
  8055  0737  3030               	movlw	48
  8056  0738  3193  23B1  3182   	fcall	_gotoXY
  8057  073B  0021               	movlb	1	; select bank1
  8058  073C  0842               	movf	(main@MPPT0+1)^(0+128),w
  8059  073D  0020               	movlb	0	; select bank0
  8060  073E  00BF               	movwf	LCDWriteInt@value+1
  8061  073F  0021               	movlb	1	; select bank1
  8062  0740  0841               	movf	main@MPPT0^(0+128),w
  8063  0741  0020               	movlb	0	; select bank0
  8064  0742  00BE               	movwf	LCDWriteInt@value
  8065  0743  3004               	movlw	4
  8066  0744  00E8               	movwf	??_main
  8067  0745  0868               	movf	??_main,w
  8068  0746  00C0               	movwf	LCDWriteInt@fieldLength
  8069  0747  01C1               	clrf	LCDWriteInt@numPlaces
  8070  0748  01C2               	clrf	LCDWriteInt@sign
  8071  0749  3180  200B  3182   	fcall	_LCDWriteInt
  8072                           
  8073                           ;main.c: 309: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  8074  074C  3005               	movlw	5
  8075  074D  0020               	movlb	0	; select bank0
  8076  074E  00E8               	movwf	??_main
  8077  074F  0868               	movf	??_main,w
  8078  0750  00F5               	movwf	gotoXY@y
  8079  0751  3000               	movlw	0
  8080  0752  3193  23B1  3182   	fcall	_gotoXY
  8081  0755  0021               	movlb	1	; select bank1
  8082  0756  0845               	movf	(main@dutyCycle6+1)^(0+128),w
  8083  0757  0020               	movlb	0	; select bank0
  8084  0758  00BF               	movwf	LCDWriteInt@value+1
  8085  0759  0021               	movlb	1	; select bank1
  8086  075A  0844               	movf	main@dutyCycle6^(0+128),w
  8087  075B  0020               	movlb	0	; select bank0
  8088  075C  00BE               	movwf	LCDWriteInt@value
  8089  075D  3004               	movlw	4
  8090  075E  00E8               	movwf	??_main
  8091  075F  0868               	movf	??_main,w
  8092  0760  00C0               	movwf	LCDWriteInt@fieldLength
  8093  0761  01C1               	clrf	LCDWriteInt@numPlaces
  8094  0762  01C2               	clrf	LCDWriteInt@sign
  8095  0763  3180  200B  3182   	fcall	_LCDWriteInt
  8096                           
  8097                           ;main.c: 310: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  8098  0766  3005               	movlw	5
  8099  0767  0020               	movlb	0	; select bank0
  8100  0768  00E8               	movwf	??_main
  8101  0769  0868               	movf	??_main,w
  8102  076A  00F5               	movwf	gotoXY@y
  8103  076B  3018               	movlw	24
  8104  076C  3193  23B1  3182   	fcall	_gotoXY
  8105  076F  0021               	movlb	1	; select bank1
  8106  0770  083E               	movf	(main@dutyCycle7+1)^(0+128),w
  8107  0771  0020               	movlb	0	; select bank0
  8108  0772  00BF               	movwf	LCDWriteInt@value+1
  8109  0773  0021               	movlb	1	; select bank1
  8110  0774  083D               	movf	main@dutyCycle7^(0+128),w
  8111  0775  0020               	movlb	0	; select bank0
  8112  0776  00BE               	movwf	LCDWriteInt@value
  8113  0777  3004               	movlw	4
  8114  0778  00E8               	movwf	??_main
  8115  0779  0868               	movf	??_main,w
  8116  077A  00C0               	movwf	LCDWriteInt@fieldLength
  8117  077B  01C1               	clrf	LCDWriteInt@numPlaces
  8118  077C  01C2               	clrf	LCDWriteInt@sign
  8119  077D  3180  200B  3182   	fcall	_LCDWriteInt
  8120                           
  8121                           ;main.c: 311: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  8122  0780  3005               	movlw	5
  8123  0781  0020               	movlb	0	; select bank0
  8124  0782  00E8               	movwf	??_main
  8125  0783  0868               	movf	??_main,w
  8126  0784  00F5               	movwf	gotoXY@y
  8127  0785  3030               	movlw	48
  8128  0786  3193  23B1  3182   	fcall	_gotoXY
  8129  0789  0021               	movlb	1	; select bank1
  8130  078A  0840               	movf	(main@dutyCycle1+1)^(0+128),w
  8131  078B  0020               	movlb	0	; select bank0
  8132  078C  00BF               	movwf	LCDWriteInt@value+1
  8133  078D  0021               	movlb	1	; select bank1
  8134  078E  083F               	movf	main@dutyCycle1^(0+128),w
  8135  078F  0020               	movlb	0	; select bank0
  8136  0790  00BE               	movwf	LCDWriteInt@value
  8137  0791  3004               	movlw	4
  8138  0792  00E8               	movwf	??_main
  8139  0793  0868               	movf	??_main,w
  8140  0794  00C0               	movwf	LCDWriteInt@fieldLength
  8141  0795  01C1               	clrf	LCDWriteInt@numPlaces
  8142  0796  01C2               	clrf	LCDWriteInt@sign
  8143  0797  3180  200B  3182   	fcall	_LCDWriteInt
  8144                           
  8145                           ;main.c: 312: { gotoXY(74,5); LCDWriteInt(!RB2,1, 0, 0);};
  8146  079A  3005               	movlw	5
  8147  079B  0020               	movlb	0	; select bank0
  8148  079C  00E8               	movwf	??_main
  8149  079D  0868               	movf	??_main,w
  8150  079E  00F5               	movwf	gotoXY@y
  8151  079F  304A               	movlw	74
  8152  07A0  3193  23B1  3182   	fcall	_gotoXY
  8153  07A3  1003               	clrc
  8154  07A4  0020               	movlb	0	; select bank0
  8155  07A5  1D0D               	btfss	13,2	;volatile
  8156  07A6  1403               	setc
  8157  07A7  3000               	movlw	0
  8158  07A8  3D09               	addwfc	9,w
  8159  07A9  00E8               	movwf	??_main
  8160  07AA  01E9               	clrf	??_main+1
  8161  07AB  0868               	movf	??_main,w
  8162  07AC  00BE               	movwf	LCDWriteInt@value
  8163  07AD  0869               	movf	??_main+1,w
  8164  07AE  00BF               	movwf	LCDWriteInt@value+1
  8165  07AF  01C0               	clrf	LCDWriteInt@fieldLength
  8166  07B0  0AC0               	incf	LCDWriteInt@fieldLength,f
  8167  07B1  01C1               	clrf	LCDWriteInt@numPlaces
  8168  07B2  01C2               	clrf	LCDWriteInt@sign
  8169  07B3  3180  200B  3182   	fcall	_LCDWriteInt
  8170                           
  8171                           ;main.c: 314: if(battery_state > FINISHED)
  8172  07B6  3003               	movlw	3
  8173  07B7  0021               	movlb	1	; select bank1
  8174  07B8  026D               	subwf	_battery_state^(0+128),w
  8175  07B9  1C03               	skipc
  8176  07BA  2FBE               	goto	l3281
  8177                           
  8178                           ;main.c: 315: {
  8179                           ;main.c: 316: cc_cv_mode();
  8180  07BB  3196  267D  3182   	fcall	_cc_cv_mode
  8181  07BE                     l3281:	
  8182                           
  8183                           ;main.c: 317: }
  8184                           ;main.c: 318: slowLoop=0;
  8185  07BE  0021               	movlb	1	; select bank1
  8186  07BF  01B0               	clrf	main@slowLoop^(0+128)
  8187  07C0  2A47               	goto	l3049
  8188  07C1                     __end_of_main:	
  8189                           
  8190                           	psect	text1
  8191  0EE3                     __ptext1:	
  8192 ;; *************** function _tempCalc *****************
  8193 ;; Defined at:
  8194 ;;		line 4 in file "tempCalc.c"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;  analogValue     2   61[BANK0 ] int 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;  steinhart       3   69[BANK0 ] float 
  8199 ;;  R               3   63[BANK0 ] float 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  2   61[BANK0 ] int 
  8202 ;; Registers used:
  8203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8209 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;Total ram usage:       11 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; Hardware stack levels required when called:    4
  8216 ;; This function calls:
  8217 ;;		___awtoft
  8218 ;;		___ftadd
  8219 ;;		___ftdiv
  8220 ;;		___ftmul
  8221 ;;		___ftsub
  8222 ;;		___fttol
  8223 ;;		_log
  8224 ;; This function is called by:
  8225 ;;		_main
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           
  8230                           ;psect for function _tempCalc
  8231  0EE3                     _tempCalc:	
  8232                           
  8233                           ;tempCalc.c: 6: float R, steinhart;
  8234                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8235                           
  8236                           ;incstack = 0
  8237                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8238  0EE3  3000               	movlw	0
  8239  0EE4  0020               	movlb	0	; select bank0
  8240  0EE5  00C0               	movwf	___ftadd@f1
  8241  0EE6  3080               	movlw	128
  8242  0EE7  00C1               	movwf	___ftadd@f1+1
  8243  0EE8  30BF               	movlw	191
  8244  0EE9  00C2               	movwf	___ftadd@f1+2
  8245  0EEA  085E               	movf	tempCalc@analogValue+1,w
  8246  0EEB  00F9               	movwf	___awtoft@c+1
  8247  0EEC  085D               	movf	tempCalc@analogValue,w
  8248  0EED  00F8               	movwf	___awtoft@c
  8249  0EEE  3194  24CA  318E   	fcall	___awtoft
  8250  0EF1  0878               	movf	?___awtoft,w
  8251  0EF2  0020               	movlb	0	; select bank0
  8252  0EF3  00A0               	movwf	___ftdiv@f2
  8253  0EF4  0879               	movf	?___awtoft+1,w
  8254  0EF5  00A1               	movwf	___ftdiv@f2+1
  8255  0EF6  087A               	movf	?___awtoft+2,w
  8256  0EF7  00A2               	movwf	___ftdiv@f2+2
  8257  0EF8  30C0               	movlw	192
  8258  0EF9  00A3               	movwf	___ftdiv@f1
  8259  0EFA  307F               	movlw	127
  8260  0EFB  00A4               	movwf	___ftdiv@f1+1
  8261  0EFC  3044               	movlw	68
  8262  0EFD  00A5               	movwf	___ftdiv@f1+2
  8263  0EFE  318B  23E0  318E   	fcall	___ftdiv
  8264  0F01  0020               	movlb	0	; select bank0
  8265  0F02  0820               	movf	?___ftdiv,w
  8266  0F03  00C3               	movwf	___ftadd@f2
  8267  0F04  0821               	movf	?___ftdiv+1,w
  8268  0F05  00C4               	movwf	___ftadd@f2+1
  8269  0F06  0822               	movf	?___ftdiv+2,w
  8270  0F07  00C5               	movwf	___ftadd@f2+2
  8271  0F08  318D  25ED  318E   	fcall	___ftadd
  8272  0F0B  0020               	movlb	0	; select bank0
  8273  0F0C  0840               	movf	?___ftadd,w
  8274  0F0D  00E2               	movwf	_tempCalc$1294
  8275  0F0E  0841               	movf	?___ftadd+1,w
  8276  0F0F  00E3               	movwf	_tempCalc$1294+1
  8277  0F10  0842               	movf	?___ftadd+2,w
  8278  0F11  00E4               	movwf	_tempCalc$1294+2
  8279                           
  8280                           ;tempCalc.c: 6: float R, steinhart;
  8281                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8282  0F12  0862               	movf	_tempCalc$1294,w
  8283  0F13  00A0               	movwf	___ftdiv@f2
  8284  0F14  0863               	movf	_tempCalc$1294+1,w
  8285  0F15  00A1               	movwf	___ftdiv@f2+1
  8286  0F16  0864               	movf	_tempCalc$1294+2,w
  8287  0F17  00A2               	movwf	___ftdiv@f2+2
  8288  0F18  3088               	movlw	136
  8289  0F19  00A3               	movwf	___ftdiv@f1
  8290  0F1A  301A               	movlw	26
  8291  0F1B  00A4               	movwf	___ftdiv@f1+1
  8292  0F1C  3046               	movlw	70
  8293  0F1D  00A5               	movwf	___ftdiv@f1+2
  8294  0F1E  318B  23E0  318E   	fcall	___ftdiv
  8295  0F21  0020               	movlb	0	; select bank0
  8296  0F22  0820               	movf	?___ftdiv,w
  8297  0F23  00DF               	movwf	tempCalc@R
  8298  0F24  0821               	movf	?___ftdiv+1,w
  8299  0F25  00E0               	movwf	tempCalc@R+1
  8300  0F26  0822               	movf	?___ftdiv+2,w
  8301  0F27  00E1               	movwf	tempCalc@R+2
  8302                           
  8303                           ;tempCalc.c: 10: steinhart = R /9990;
  8304  0F28  3018               	movlw	24
  8305  0F29  00A0               	movwf	___ftdiv@f2
  8306  0F2A  301C               	movlw	28
  8307  0F2B  00A1               	movwf	___ftdiv@f2+1
  8308  0F2C  3046               	movlw	70
  8309  0F2D  00A2               	movwf	___ftdiv@f2+2
  8310  0F2E  085F               	movf	tempCalc@R,w
  8311  0F2F  00A3               	movwf	___ftdiv@f1
  8312  0F30  0860               	movf	tempCalc@R+1,w
  8313  0F31  00A4               	movwf	___ftdiv@f1+1
  8314  0F32  0861               	movf	tempCalc@R+2,w
  8315  0F33  00A5               	movwf	___ftdiv@f1+2
  8316  0F34  318B  23E0  318E   	fcall	___ftdiv
  8317  0F37  0020               	movlb	0	; select bank0
  8318  0F38  0820               	movf	?___ftdiv,w
  8319  0F39  00E5               	movwf	tempCalc@steinhart
  8320  0F3A  0821               	movf	?___ftdiv+1,w
  8321  0F3B  00E6               	movwf	tempCalc@steinhart+1
  8322  0F3C  0822               	movf	?___ftdiv+2,w
  8323  0F3D  00E7               	movwf	tempCalc@steinhart+2
  8324                           
  8325                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8326  0F3E  0865               	movf	tempCalc@steinhart,w
  8327  0F3F  00D7               	movwf	log@x
  8328  0F40  0866               	movf	tempCalc@steinhart+1,w
  8329  0F41  00D8               	movwf	log@x+1
  8330  0F42  0867               	movf	tempCalc@steinhart+2,w
  8331  0F43  00D9               	movwf	log@x+2
  8332  0F44  318C  2489  318E   	fcall	_log
  8333  0F47  0020               	movlb	0	; select bank0
  8334  0F48  0857               	movf	?_log,w
  8335  0F49  00E5               	movwf	tempCalc@steinhart
  8336  0F4A  0858               	movf	?_log+1,w
  8337  0F4B  00E6               	movwf	tempCalc@steinhart+1
  8338  0F4C  0859               	movf	?_log+2,w
  8339  0F4D  00E7               	movwf	tempCalc@steinhart+2
  8340                           
  8341                           ;tempCalc.c: 12: steinhart /= 4030;
  8342  0F4E  30E0               	movlw	224
  8343  0F4F  00A0               	movwf	___ftdiv@f2
  8344  0F50  307B               	movlw	123
  8345  0F51  00A1               	movwf	___ftdiv@f2+1
  8346  0F52  3045               	movlw	69
  8347  0F53  00A2               	movwf	___ftdiv@f2+2
  8348  0F54  0865               	movf	tempCalc@steinhart,w
  8349  0F55  00A3               	movwf	___ftdiv@f1
  8350  0F56  0866               	movf	tempCalc@steinhart+1,w
  8351  0F57  00A4               	movwf	___ftdiv@f1+1
  8352  0F58  0867               	movf	tempCalc@steinhart+2,w
  8353  0F59  00A5               	movwf	___ftdiv@f1+2
  8354  0F5A  318B  23E0  318E   	fcall	___ftdiv
  8355  0F5D  0020               	movlb	0	; select bank0
  8356  0F5E  0820               	movf	?___ftdiv,w
  8357  0F5F  00E5               	movwf	tempCalc@steinhart
  8358  0F60  0821               	movf	?___ftdiv+1,w
  8359  0F61  00E6               	movwf	tempCalc@steinhart+1
  8360  0F62  0822               	movf	?___ftdiv+2,w
  8361  0F63  00E7               	movwf	tempCalc@steinhart+2
  8362                           
  8363                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8364  0F64  30CF               	movlw	207
  8365  0F65  00C0               	movwf	___ftadd@f1
  8366  0F66  305B               	movlw	91
  8367  0F67  00C1               	movwf	___ftadd@f1+1
  8368  0F68  303B               	movlw	59
  8369  0F69  00C2               	movwf	___ftadd@f1+2
  8370  0F6A  0865               	movf	tempCalc@steinhart,w
  8371  0F6B  00C3               	movwf	___ftadd@f2
  8372  0F6C  0866               	movf	tempCalc@steinhart+1,w
  8373  0F6D  00C4               	movwf	___ftadd@f2+1
  8374  0F6E  0867               	movf	tempCalc@steinhart+2,w
  8375  0F6F  00C5               	movwf	___ftadd@f2+2
  8376  0F70  318D  25ED  318E   	fcall	___ftadd
  8377  0F73  0020               	movlb	0	; select bank0
  8378  0F74  0840               	movf	?___ftadd,w
  8379  0F75  00E5               	movwf	tempCalc@steinhart
  8380  0F76  0841               	movf	?___ftadd+1,w
  8381  0F77  00E6               	movwf	tempCalc@steinhart+1
  8382  0F78  0842               	movf	?___ftadd+2,w
  8383  0F79  00E7               	movwf	tempCalc@steinhart+2
  8384                           
  8385                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8386  0F7A  0865               	movf	tempCalc@steinhart,w
  8387  0F7B  00A0               	movwf	___ftdiv@f2
  8388  0F7C  0866               	movf	tempCalc@steinhart+1,w
  8389  0F7D  00A1               	movwf	___ftdiv@f2+1
  8390  0F7E  0867               	movf	tempCalc@steinhart+2,w
  8391  0F7F  00A2               	movwf	___ftdiv@f2+2
  8392  0F80  3000               	movlw	0
  8393  0F81  00A3               	movwf	___ftdiv@f1
  8394  0F82  3080               	movlw	128
  8395  0F83  00A4               	movwf	___ftdiv@f1+1
  8396  0F84  303F               	movlw	63
  8397  0F85  00A5               	movwf	___ftdiv@f1+2
  8398  0F86  318B  23E0  318E   	fcall	___ftdiv
  8399  0F89  0020               	movlb	0	; select bank0
  8400  0F8A  0820               	movf	?___ftdiv,w
  8401  0F8B  00E5               	movwf	tempCalc@steinhart
  8402  0F8C  0821               	movf	?___ftdiv+1,w
  8403  0F8D  00E6               	movwf	tempCalc@steinhart+1
  8404  0F8E  0822               	movf	?___ftdiv+2,w
  8405  0F8F  00E7               	movwf	tempCalc@steinhart+2
  8406                           
  8407                           ;tempCalc.c: 17: steinhart -= 273.15;
  8408  0F90  3093               	movlw	147
  8409  0F91  00CD               	movwf	___ftsub@f2
  8410  0F92  3088               	movlw	136
  8411  0F93  00CE               	movwf	___ftsub@f2+1
  8412  0F94  3043               	movlw	67
  8413  0F95  00CF               	movwf	___ftsub@f2+2
  8414  0F96  0865               	movf	tempCalc@steinhart,w
  8415  0F97  00D0               	movwf	___ftsub@f1
  8416  0F98  0866               	movf	tempCalc@steinhart+1,w
  8417  0F99  00D1               	movwf	___ftsub@f1+1
  8418  0F9A  0867               	movf	tempCalc@steinhart+2,w
  8419  0F9B  00D2               	movwf	___ftsub@f1+2
  8420  0F9C  3194  246E  318E   	fcall	___ftsub
  8421  0F9F  0020               	movlb	0	; select bank0
  8422  0FA0  084D               	movf	?___ftsub,w
  8423  0FA1  00E5               	movwf	tempCalc@steinhart
  8424  0FA2  084E               	movf	?___ftsub+1,w
  8425  0FA3  00E6               	movwf	tempCalc@steinhart+1
  8426  0FA4  084F               	movf	?___ftsub+2,w
  8427  0FA5  00E7               	movwf	tempCalc@steinhart+2
  8428                           
  8429                           ;tempCalc.c: 19: steinhart*=10;
  8430  0FA6  3000               	movlw	0
  8431  0FA7  00B0               	movwf	___ftmul@f1
  8432  0FA8  3020               	movlw	32
  8433  0FA9  00B1               	movwf	___ftmul@f1+1
  8434  0FAA  3041               	movlw	65
  8435  0FAB  00B2               	movwf	___ftmul@f1+2
  8436  0FAC  0865               	movf	tempCalc@steinhart,w
  8437  0FAD  00B3               	movwf	___ftmul@f2
  8438  0FAE  0866               	movf	tempCalc@steinhart+1,w
  8439  0FAF  00B4               	movwf	___ftmul@f2+1
  8440  0FB0  0867               	movf	tempCalc@steinhart+2,w
  8441  0FB1  00B5               	movwf	___ftmul@f2+2
  8442  0FB2  318D  2539  318E   	fcall	___ftmul
  8443  0FB5  0020               	movlb	0	; select bank0
  8444  0FB6  0830               	movf	?___ftmul,w
  8445  0FB7  00E5               	movwf	tempCalc@steinhart
  8446  0FB8  0831               	movf	?___ftmul+1,w
  8447  0FB9  00E6               	movwf	tempCalc@steinhart+1
  8448  0FBA  0832               	movf	?___ftmul+2,w
  8449  0FBB  00E7               	movwf	tempCalc@steinhart+2
  8450                           
  8451                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8452  0FBC  3000               	movlw	0
  8453  0FBD  00C0               	movwf	___ftadd@f1
  8454  0FBE  30A0               	movlw	160
  8455  0FBF  00C1               	movwf	___ftadd@f1+1
  8456  0FC0  3043               	movlw	67
  8457  0FC1  00C2               	movwf	___ftadd@f1+2
  8458  0FC2  3000               	movlw	0
  8459  0FC3  00A0               	movwf	___ftdiv@f2
  8460  0FC4  30A0               	movlw	160
  8461  0FC5  00A1               	movwf	___ftdiv@f2+1
  8462  0FC6  3040               	movlw	64
  8463  0FC7  00A2               	movwf	___ftdiv@f2+2
  8464  0FC8  3000               	movlw	0
  8465  0FC9  00B0               	movwf	___ftmul@f1
  8466  0FCA  3010               	movlw	16
  8467  0FCB  00B1               	movwf	___ftmul@f1+1
  8468  0FCC  3041               	movlw	65
  8469  0FCD  00B2               	movwf	___ftmul@f1+2
  8470  0FCE  0865               	movf	tempCalc@steinhart,w
  8471  0FCF  00B3               	movwf	___ftmul@f2
  8472  0FD0  0866               	movf	tempCalc@steinhart+1,w
  8473  0FD1  00B4               	movwf	___ftmul@f2+1
  8474  0FD2  0867               	movf	tempCalc@steinhart+2,w
  8475  0FD3  00B5               	movwf	___ftmul@f2+2
  8476  0FD4  318D  2539  318E   	fcall	___ftmul
  8477  0FD7  0020               	movlb	0	; select bank0
  8478  0FD8  0830               	movf	?___ftmul,w
  8479  0FD9  00A3               	movwf	___ftdiv@f1
  8480  0FDA  0831               	movf	?___ftmul+1,w
  8481  0FDB  00A4               	movwf	___ftdiv@f1+1
  8482  0FDC  0832               	movf	?___ftmul+2,w
  8483  0FDD  00A5               	movwf	___ftdiv@f1+2
  8484  0FDE  318B  23E0  318E   	fcall	___ftdiv
  8485  0FE1  0020               	movlb	0	; select bank0
  8486  0FE2  0820               	movf	?___ftdiv,w
  8487  0FE3  00C3               	movwf	___ftadd@f2
  8488  0FE4  0821               	movf	?___ftdiv+1,w
  8489  0FE5  00C4               	movwf	___ftadd@f2+1
  8490  0FE6  0822               	movf	?___ftdiv+2,w
  8491  0FE7  00C5               	movwf	___ftadd@f2+2
  8492  0FE8  318D  25ED  318E   	fcall	___ftadd
  8493  0FEB  0020               	movlb	0	; select bank0
  8494  0FEC  0840               	movf	?___ftadd,w
  8495  0FED  00E5               	movwf	tempCalc@steinhart
  8496  0FEE  0841               	movf	?___ftadd+1,w
  8497  0FEF  00E6               	movwf	tempCalc@steinhart+1
  8498  0FF0  0842               	movf	?___ftadd+2,w
  8499  0FF1  00E7               	movwf	tempCalc@steinhart+2
  8500                           
  8501                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8502  0FF2  0865               	movf	tempCalc@steinhart,w
  8503  0FF3  00B0               	movwf	___fttol@f1
  8504  0FF4  0866               	movf	tempCalc@steinhart+1,w
  8505  0FF5  00B1               	movwf	___fttol@f1+1
  8506  0FF6  0867               	movf	tempCalc@steinhart+2,w
  8507  0FF7  00B2               	movwf	___fttol@f1+2
  8508  0FF8  318A  22D2         	fcall	___fttol
  8509  0FFA  0020               	movlb	0	; select bank0
  8510  0FFB  0831               	movf	?___fttol+1,w
  8511  0FFC  00DE               	movwf	?_tempCalc+1
  8512  0FFD  0830               	movf	?___fttol,w
  8513  0FFE  00DD               	movwf	?_tempCalc
  8514  0FFF  0008               	return
  8515  1000                     __end_of_tempCalc:	
  8516                           
  8517                           	psect	text2
  8518  0C89                     __ptext2:	
  8519 ;; *************** function _log *****************
  8520 ;; Defined at:
  8521 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  x               3   55[BANK0 ] int 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;  exponent        2   59[BANK0 ] int 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  3   55[BANK0 ] int 
  8528 ;; Registers used:
  8529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8535 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8536 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8537 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8538 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;Total ram usage:        6 bytes
  8540 ;; Hardware stack levels used:    1
  8541 ;; Hardware stack levels required when called:    3
  8542 ;; This function calls:
  8543 ;;		___awtoft
  8544 ;;		___ftadd
  8545 ;;		___ftge
  8546 ;;		___ftmul
  8547 ;;		_eval_poly
  8548 ;;		_frexp
  8549 ;; This function is called by:
  8550 ;;		_tempCalc
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           
  8555                           ;psect for function _log
  8556  0C89                     _log:	
  8557                           
  8558                           ;incstack = 0
  8559                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8560  0C89  0020               	movlb	0	; select bank0
  8561  0C8A  0857               	movf	log@x,w
  8562  0C8B  00F0               	movwf	___ftge@ff1
  8563  0C8C  0858               	movf	log@x+1,w
  8564  0C8D  00F1               	movwf	___ftge@ff1+1
  8565  0C8E  0859               	movf	log@x+2,w
  8566  0C8F  00F2               	movwf	___ftge@ff1+2
  8567  0C90  3000               	movlw	0
  8568  0C91  00F3               	movwf	___ftge@ff2
  8569  0C92  3000               	movlw	0
  8570  0C93  00F4               	movwf	___ftge@ff2+1
  8571  0C94  3000               	movlw	0
  8572  0C95  00F5               	movwf	___ftge@ff2+2
  8573  0C96  3196  2607  318C   	fcall	___ftge
  8574  0C99  1803               	btfsc	3,0
  8575  0C9A  2CA8               	goto	l2581
  8576  0C9B  3021               	movlw	33
  8577  0C9C  0021               	movlb	1	; select bank1
  8578  0C9D  00DB               	movwf	_errno^(0+128)
  8579  0C9E  3000               	movlw	0
  8580  0C9F  00DC               	movwf	(_errno^(0+128)+1)
  8581  0CA0  3000               	movlw	0
  8582  0CA1  0020               	movlb	0	; select bank0
  8583  0CA2  00D7               	movwf	?_log
  8584  0CA3  3000               	movlw	0
  8585  0CA4  00D8               	movwf	?_log+1
  8586  0CA5  3000               	movlw	0
  8587  0CA6  00D9               	movwf	?_log+2
  8588  0CA7  0008               	return
  8589  0CA8                     l2581:	
  8590  0CA8  0020               	movlb	0	; select bank0
  8591  0CA9  0859               	movf	log@x+2,w
  8592  0CAA  0458               	iorwf	log@x+1,w
  8593  0CAB  0457               	iorwf	log@x,w
  8594  0CAC  1D03               	skipz
  8595  0CAD  2CBB               	goto	l2587
  8596  0CAE  3022               	movlw	34
  8597  0CAF  0021               	movlb	1	; select bank1
  8598  0CB0  00DB               	movwf	_errno^(0+128)
  8599  0CB1  3000               	movlw	0
  8600  0CB2  00DC               	movwf	(_errno^(0+128)+1)
  8601  0CB3  3000               	movlw	0
  8602  0CB4  0020               	movlb	0	; select bank0
  8603  0CB5  00D7               	movwf	?_log
  8604  0CB6  3000               	movlw	0
  8605  0CB7  00D8               	movwf	?_log+1
  8606  0CB8  3000               	movlw	0
  8607  0CB9  00D9               	movwf	?_log+2
  8608  0CBA  0008               	return
  8609  0CBB                     l2587:	
  8610  0CBB  3000               	movlw	0
  8611  0CBC  00C0               	movwf	___ftadd@f1
  8612  0CBD  3080               	movlw	128
  8613  0CBE  00C1               	movwf	___ftadd@f1+1
  8614  0CBF  30BF               	movlw	191
  8615  0CC0  00C2               	movwf	___ftadd@f1+2
  8616  0CC1  3000               	movlw	0
  8617  0CC2  00B0               	movwf	___ftmul@f1
  8618  0CC3  3000               	movlw	0
  8619  0CC4  00B1               	movwf	___ftmul@f1+1
  8620  0CC5  3040               	movlw	64
  8621  0CC6  00B2               	movwf	___ftmul@f1+2
  8622  0CC7  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8623  0CC8  00DA               	movwf	??_log
  8624  0CC9  085A               	movf	??_log,w
  8625  0CCA  00F3               	movwf	frexp@eptr
  8626  0CCB  0857               	movf	log@x,w
  8627  0CCC  00F0               	movwf	frexp@value
  8628  0CCD  0858               	movf	log@x+1,w
  8629  0CCE  00F1               	movwf	frexp@value+1
  8630  0CCF  0859               	movf	log@x+2,w
  8631  0CD0  00F2               	movwf	frexp@value+2
  8632  0CD1  3196  2642  318C   	fcall	_frexp
  8633  0CD4  0870               	movf	?_frexp,w
  8634  0CD5  0020               	movlb	0	; select bank0
  8635  0CD6  00B3               	movwf	___ftmul@f2
  8636  0CD7  0871               	movf	?_frexp+1,w
  8637  0CD8  00B4               	movwf	___ftmul@f2+1
  8638  0CD9  0872               	movf	?_frexp+2,w
  8639  0CDA  00B5               	movwf	___ftmul@f2+2
  8640  0CDB  318D  2539  318C   	fcall	___ftmul
  8641  0CDE  0020               	movlb	0	; select bank0
  8642  0CDF  0830               	movf	?___ftmul,w
  8643  0CE0  00C3               	movwf	___ftadd@f2
  8644  0CE1  0831               	movf	?___ftmul+1,w
  8645  0CE2  00C4               	movwf	___ftadd@f2+1
  8646  0CE3  0832               	movf	?___ftmul+2,w
  8647  0CE4  00C5               	movwf	___ftadd@f2+2
  8648  0CE5  318D  25ED  318C   	fcall	___ftadd
  8649  0CE8  0020               	movlb	0	; select bank0
  8650  0CE9  0840               	movf	?___ftadd,w
  8651  0CEA  00D7               	movwf	log@x
  8652  0CEB  0841               	movf	?___ftadd+1,w
  8653  0CEC  00D8               	movwf	log@x+1
  8654  0CED  0842               	movf	?___ftadd+2,w
  8655  0CEE  00D9               	movwf	log@x+2
  8656  0CEF  30FF               	movlw	255
  8657  0CF0  07DB               	addwf	log@exponent,f
  8658  0CF1  30FF               	movlw	255
  8659  0CF2  3DDC               	addwfc	log@exponent+1,f
  8660  0CF3  0857               	movf	log@x,w
  8661  0CF4  00CD               	movwf	eval_poly@x
  8662  0CF5  0858               	movf	log@x+1,w
  8663  0CF6  00CE               	movwf	eval_poly@x+1
  8664  0CF7  0859               	movf	log@x+2,w
  8665  0CF8  00CF               	movwf	eval_poly@x+2
  8666  0CF9  3000               	movlw	low (log@coeff| (0+32768))
  8667  0CFA  00D0               	movwf	eval_poly@d
  8668  0CFB  3098               	movlw	high (log@coeff| (0+32768))
  8669  0CFC  00D1               	movwf	eval_poly@d+1
  8670  0CFD  3008               	movlw	8
  8671  0CFE  00D2               	movwf	eval_poly@n
  8672  0CFF  3000               	movlw	0
  8673  0D00  00D3               	movwf	eval_poly@n+1
  8674  0D01  3197  27A0  318C   	fcall	_eval_poly
  8675  0D04  0020               	movlb	0	; select bank0
  8676  0D05  084D               	movf	?_eval_poly,w
  8677  0D06  00D7               	movwf	log@x
  8678  0D07  084E               	movf	?_eval_poly+1,w
  8679  0D08  00D8               	movwf	log@x+1
  8680  0D09  084F               	movf	?_eval_poly+2,w
  8681  0D0A  00D9               	movwf	log@x+2
  8682  0D0B  0857               	movf	log@x,w
  8683  0D0C  00C0               	movwf	___ftadd@f1
  8684  0D0D  0858               	movf	log@x+1,w
  8685  0D0E  00C1               	movwf	___ftadd@f1+1
  8686  0D0F  0859               	movf	log@x+2,w
  8687  0D10  00C2               	movwf	___ftadd@f1+2
  8688  0D11  3072               	movlw	114
  8689  0D12  00B0               	movwf	___ftmul@f1
  8690  0D13  3031               	movlw	49
  8691  0D14  00B1               	movwf	___ftmul@f1+1
  8692  0D15  303F               	movlw	63
  8693  0D16  00B2               	movwf	___ftmul@f1+2
  8694  0D17  085C               	movf	log@exponent+1,w
  8695  0D18  00F9               	movwf	___awtoft@c+1
  8696  0D19  085B               	movf	log@exponent,w
  8697  0D1A  00F8               	movwf	___awtoft@c
  8698  0D1B  3194  24CA  318C   	fcall	___awtoft
  8699  0D1E  0878               	movf	?___awtoft,w
  8700  0D1F  0020               	movlb	0	; select bank0
  8701  0D20  00B3               	movwf	___ftmul@f2
  8702  0D21  0879               	movf	?___awtoft+1,w
  8703  0D22  00B4               	movwf	___ftmul@f2+1
  8704  0D23  087A               	movf	?___awtoft+2,w
  8705  0D24  00B5               	movwf	___ftmul@f2+2
  8706  0D25  318D  2539  318C   	fcall	___ftmul
  8707  0D28  0020               	movlb	0	; select bank0
  8708  0D29  0830               	movf	?___ftmul,w
  8709  0D2A  00C3               	movwf	___ftadd@f2
  8710  0D2B  0831               	movf	?___ftmul+1,w
  8711  0D2C  00C4               	movwf	___ftadd@f2+1
  8712  0D2D  0832               	movf	?___ftmul+2,w
  8713  0D2E  00C5               	movwf	___ftadd@f2+2
  8714  0D2F  318D  25ED         	fcall	___ftadd
  8715  0D31  0020               	movlb	0	; select bank0
  8716  0D32  0840               	movf	?___ftadd,w
  8717  0D33  00D7               	movwf	?_log
  8718  0D34  0841               	movf	?___ftadd+1,w
  8719  0D35  00D8               	movwf	?_log+1
  8720  0D36  0842               	movf	?___ftadd+2,w
  8721  0D37  00D9               	movwf	?_log+2
  8722  0D38  0008               	return
  8723  0D39                     __end_of_log:	
  8724                           
  8725                           	psect	text3
  8726  1642                     __ptext3:	
  8727 ;; *************** function _frexp *****************
  8728 ;; Defined at:
  8729 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;  value           3    0[COMMON] int 
  8732 ;;  eptr            1    3[COMMON] PTR int 
  8733 ;;		 -> log@exponent(2), 
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;		None
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  3    0[COMMON] PTR int 
  8738 ;; Registers used:
  8739 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8745 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8749 ;;Total ram usage:        6 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; This function calls:
  8752 ;;		Nothing
  8753 ;; This function is called by:
  8754 ;;		_log
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           
  8759                           ;psect for function _frexp
  8760  1642                     _frexp:	
  8761                           
  8762                           ;incstack = 0
  8763                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8764  1642  0872               	movf	frexp@value+2,w
  8765  1643  0471               	iorwf	frexp@value+1,w
  8766  1644  0470               	iorwf	frexp@value,w
  8767  1645  1D03               	skipz
  8768  1646  2E54               	goto	l2383
  8769  1647  0873               	movf	frexp@eptr,w
  8770  1648  0086               	movwf	6
  8771  1649  0187               	clrf	7
  8772  164A  3000               	movlw	0
  8773  164B  3FC0               	movwi [0]fsr1
  8774  164C  3FC1               	movwi [1]fsr1
  8775  164D  3000               	movlw	0
  8776  164E  00F0               	movwf	?_frexp
  8777  164F  3000               	movlw	0
  8778  1650  00F1               	movwf	?_frexp+1
  8779  1651  3000               	movlw	0
  8780  1652  00F2               	movwf	?_frexp+2
  8781  1653  0008               	return
  8782  1654                     l2383:	
  8783  1654  0872               	movf	frexp@value+2,w
  8784  1655  397F               	andlw	127
  8785  1656  00F4               	movwf	??_frexp
  8786  1657  01F5               	clrf	??_frexp+1
  8787  1658  35F4               	lslf	??_frexp,f
  8788  1659  0DF5               	rlf	??_frexp+1,f
  8789  165A  0873               	movf	frexp@eptr,w
  8790  165B  0086               	movwf	6
  8791  165C  0187               	clrf	7
  8792  165D  0874               	movf	??_frexp,w
  8793  165E  3FC0               	movwi [0]fsr1
  8794  165F  0875               	movf	??_frexp+1,w
  8795  1660  3FC1               	movwi [1]fsr1
  8796  1661  0D71               	rlf	frexp@value+1,w
  8797  1662  0D71               	rlf	frexp@value+1,w
  8798  1663  3901               	andlw	1
  8799  1664  00F4               	movwf	??_frexp
  8800  1665  01F5               	clrf	??_frexp+1
  8801  1666  0873               	movf	frexp@eptr,w
  8802  1667  0086               	movwf	6
  8803  1668  0187               	clrf	7
  8804  1669  0874               	movf	??_frexp,w
  8805  166A  0481               	iorwf	1,f
  8806  166B  3141               	addfsr 1,1
  8807  166C  0875               	movf	??_frexp+1,w
  8808  166D  0481               	iorwf	1,f
  8809  166E  0873               	movf	frexp@eptr,w
  8810  166F  0086               	movwf	6
  8811  1670  0187               	clrf	7
  8812  1671  3082               	movlw	130
  8813  1672  0781               	addwf	1,f
  8814  1673  3141               	addfsr 1,1
  8815  1674  30FF               	movlw	255
  8816  1675  3D81               	addwfc	1,f
  8817  1676  317F               	addfsr 1,-1
  8818  1677  0872               	movf	frexp@value+2,w
  8819  1678  3980               	andlw	-128
  8820  1679  383F               	iorlw	63
  8821  167A  00F2               	movwf	frexp@value+2
  8822  167B  13F1               	bcf	frexp@value+1,7
  8823  167C  0008               	return
  8824  167D                     __end_of_frexp:	
  8825                           
  8826                           	psect	text4
  8827  17A0                     __ptext4:	
  8828 ;; *************** function _eval_poly *****************
  8829 ;; Defined at:
  8830 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;  x               3   45[BANK0 ] PTR int 
  8833 ;;  d               2   48[BANK0 ] PTR const 
  8834 ;;		 -> log@coeff(27), 
  8835 ;;  n               2   50[BANK0 ] int 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  res             3   52[BANK0 ] int 
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  3   45[BANK0 ] int 
  8840 ;; Registers used:
  8841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8847 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;Total ram usage:       10 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:    2
  8854 ;; This function calls:
  8855 ;;		___ftadd
  8856 ;;		___ftmul
  8857 ;;		___wmul
  8858 ;; This function is called by:
  8859 ;;		_log
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           
  8864                           ;psect for function _eval_poly
  8865  17A0                     _eval_poly:	
  8866                           
  8867                           ;incstack = 0
  8868                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8869  17A0  0020               	movlb	0	; select bank0
  8870  17A1  0853               	movf	eval_poly@n+1,w
  8871  17A2  00FA               	movwf	___wmul@multiplier+1
  8872  17A3  0852               	movf	eval_poly@n,w
  8873  17A4  00F9               	movwf	___wmul@multiplier
  8874  17A5  3003               	movlw	3
  8875  17A6  00FB               	movwf	___wmul@multiplicand
  8876  17A7  3000               	movlw	0
  8877  17A8  00FC               	movwf	___wmul@multiplicand+1
  8878  17A9  3194  2432  3197   	fcall	___wmul
  8879  17AC  0020               	movlb	0	; select bank0
  8880  17AD  0850               	movf	eval_poly@d,w
  8881  17AE  0779               	addwf	?___wmul,w
  8882  17AF  0084               	movwf	4
  8883  17B0  0851               	movf	eval_poly@d+1,w
  8884  17B1  3D7A               	addwfc	?___wmul+1,w
  8885  17B2  0085               	movwf	5
  8886  17B3  3F00               	moviw [0]fsr0
  8887  17B4  00D4               	movwf	eval_poly@res
  8888  17B5  3F01               	moviw [1]fsr0
  8889  17B6  00D5               	movwf	eval_poly@res+1
  8890  17B7  3F02               	moviw [2]fsr0
  8891  17B8                     L3:	
  8892  17B8  00D6               	movwf	eval_poly@res+2
  8893  17B9  0852               	movf	eval_poly@n,w
  8894  17BA  0453               	iorwf	eval_poly@n+1,w
  8895  17BB  1903               	btfsc	3,2
  8896  17BC  2FF9               	goto	l2401
  8897  17BD  30FF               	movlw	255
  8898  17BE  07D2               	addwf	eval_poly@n,f
  8899  17BF  30FF               	movlw	255
  8900  17C0  3DD3               	addwfc	eval_poly@n+1,f
  8901  17C1  0853               	movf	eval_poly@n+1,w
  8902  17C2  00FA               	movwf	___wmul@multiplier+1
  8903  17C3  0852               	movf	eval_poly@n,w
  8904  17C4  00F9               	movwf	___wmul@multiplier
  8905  17C5  3003               	movlw	3
  8906  17C6  00FB               	movwf	___wmul@multiplicand
  8907  17C7  3000               	movlw	0
  8908  17C8  00FC               	movwf	___wmul@multiplicand+1
  8909  17C9  3194  2432  3197   	fcall	___wmul
  8910  17CC  0020               	movlb	0	; select bank0
  8911  17CD  0850               	movf	eval_poly@d,w
  8912  17CE  0779               	addwf	?___wmul,w
  8913  17CF  0084               	movwf	4
  8914  17D0  0851               	movf	eval_poly@d+1,w
  8915  17D1  3D7A               	addwfc	?___wmul+1,w
  8916  17D2  0085               	movwf	5
  8917  17D3  3F00               	moviw [0]fsr0
  8918  17D4  00C0               	movwf	___ftadd@f1
  8919  17D5  3F01               	moviw [1]fsr0
  8920  17D6  00C1               	movwf	___ftadd@f1+1
  8921  17D7  3F02               	moviw [2]fsr0
  8922  17D8  00C2               	movwf	___ftadd@f1+2
  8923  17D9  0854               	movf	eval_poly@res,w
  8924  17DA  00B0               	movwf	___ftmul@f1
  8925  17DB  0855               	movf	eval_poly@res+1,w
  8926  17DC  00B1               	movwf	___ftmul@f1+1
  8927  17DD  0856               	movf	eval_poly@res+2,w
  8928  17DE  00B2               	movwf	___ftmul@f1+2
  8929  17DF  084D               	movf	eval_poly@x,w
  8930  17E0  00B3               	movwf	___ftmul@f2
  8931  17E1  084E               	movf	eval_poly@x+1,w
  8932  17E2  00B4               	movwf	___ftmul@f2+1
  8933  17E3  084F               	movf	eval_poly@x+2,w
  8934  17E4  00B5               	movwf	___ftmul@f2+2
  8935  17E5  318D  2539  3197   	fcall	___ftmul
  8936  17E8  0020               	movlb	0	; select bank0
  8937  17E9  0830               	movf	?___ftmul,w
  8938  17EA  00C3               	movwf	___ftadd@f2
  8939  17EB  0831               	movf	?___ftmul+1,w
  8940  17EC  00C4               	movwf	___ftadd@f2+1
  8941  17ED  0832               	movf	?___ftmul+2,w
  8942  17EE  00C5               	movwf	___ftadd@f2+2
  8943  17EF  318D  25ED  3197   	fcall	___ftadd
  8944  17F2  0020               	movlb	0	; select bank0
  8945  17F3  0840               	movf	?___ftadd,w
  8946  17F4  00D4               	movwf	eval_poly@res
  8947  17F5  0841               	movf	?___ftadd+1,w
  8948  17F6  00D5               	movwf	eval_poly@res+1
  8949  17F7  0842               	movf	?___ftadd+2,w
  8950  17F8  2FB8               	goto	L3
  8951  17F9                     l2401:	
  8952  17F9  0854               	movf	eval_poly@res,w
  8953  17FA  00CD               	movwf	?_eval_poly
  8954  17FB  0855               	movf	eval_poly@res+1,w
  8955  17FC  00CE               	movwf	?_eval_poly+1
  8956  17FD  0856               	movf	eval_poly@res+2,w
  8957  17FE  00CF               	movwf	?_eval_poly+2
  8958  17FF  0008               	return
  8959  1800                     __end_of_eval_poly:	
  8960                           
  8961                           	psect	text5
  8962  0D39                     __ptext5:	
  8963 ;; *************** function ___ftmul *****************
  8964 ;; Defined at:
  8965 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;  f1              3   16[BANK0 ] float 
  8968 ;;  f2              3   19[BANK0 ] float 
  8969 ;; Auto vars:     Size  Location     Type
  8970 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  8971 ;;  sign            1   31[BANK0 ] unsigned char 
  8972 ;;  cntr            1   30[BANK0 ] unsigned char 
  8973 ;;  exp             1   26[BANK0 ] unsigned char 
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  3   16[BANK0 ] float 
  8976 ;; Registers used:
  8977 ;;		wreg, status,2, status,0, pclath, cstack
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8983 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8984 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;Total ram usage:       16 bytes
  8988 ;; Hardware stack levels used:    1
  8989 ;; Hardware stack levels required when called:    1
  8990 ;; This function calls:
  8991 ;;		___ftpack
  8992 ;; This function is called by:
  8993 ;;		_tempCalc
  8994 ;;		_main
  8995 ;;		_log
  8996 ;;		_eval_poly
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           
  9001                           ;psect for function ___ftmul
  9002  0D39                     ___ftmul:	
  9003                           
  9004                           ;incstack = 0
  9005                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9006  0D39  0020               	movlb	0	; select bank0
  9007  0D3A  0830               	movf	___ftmul@f1,w
  9008  0D3B  00B6               	movwf	??___ftmul
  9009  0D3C  0831               	movf	___ftmul@f1+1,w
  9010  0D3D  00B7               	movwf	??___ftmul+1
  9011  0D3E  0832               	movf	___ftmul@f1+2,w
  9012  0D3F  00B8               	movwf	??___ftmul+2
  9013  0D40  1003               	clrc
  9014  0D41  0D37               	rlf	??___ftmul+1,w
  9015  0D42  0D38               	rlf	??___ftmul+2,w
  9016  0D43  00B9               	movwf	??___ftmul+3
  9017  0D44  0839               	movf	??___ftmul+3,w
  9018  0D45  00BA               	movwf	___ftmul@exp
  9019  0D46  083A               	movf	___ftmul@exp,w
  9020  0D47  1D03               	btfss	3,2
  9021  0D48  2D50               	goto	l2297
  9022  0D49  3000               	movlw	0
  9023  0D4A  00B0               	movwf	?___ftmul
  9024  0D4B  3000               	movlw	0
  9025  0D4C  00B1               	movwf	?___ftmul+1
  9026  0D4D  3000               	movlw	0
  9027  0D4E  00B2               	movwf	?___ftmul+2
  9028  0D4F  0008               	return
  9029  0D50                     l2297:	
  9030  0D50  0833               	movf	___ftmul@f2,w
  9031  0D51  00B6               	movwf	??___ftmul
  9032  0D52  0834               	movf	___ftmul@f2+1,w
  9033  0D53  00B7               	movwf	??___ftmul+1
  9034  0D54  0835               	movf	___ftmul@f2+2,w
  9035  0D55  00B8               	movwf	??___ftmul+2
  9036  0D56  1003               	clrc
  9037  0D57  0D37               	rlf	??___ftmul+1,w
  9038  0D58  0D38               	rlf	??___ftmul+2,w
  9039  0D59  00B9               	movwf	??___ftmul+3
  9040  0D5A  0839               	movf	??___ftmul+3,w
  9041  0D5B  00BF               	movwf	___ftmul@sign
  9042  0D5C  083F               	movf	___ftmul@sign,w
  9043  0D5D  1D03               	btfss	3,2
  9044  0D5E  2D66               	goto	l2303
  9045  0D5F  3000               	movlw	0
  9046  0D60  00B0               	movwf	?___ftmul
  9047  0D61  3000               	movlw	0
  9048  0D62  00B1               	movwf	?___ftmul+1
  9049  0D63  3000               	movlw	0
  9050  0D64  00B2               	movwf	?___ftmul+2
  9051  0D65  0008               	return
  9052  0D66                     l2303:	
  9053  0D66  083F               	movf	___ftmul@sign,w
  9054  0D67  3E7B               	addlw	123
  9055  0D68  00B6               	movwf	??___ftmul
  9056  0D69  0836               	movf	??___ftmul,w
  9057  0D6A  07BA               	addwf	___ftmul@exp,f
  9058  0D6B  0830               	movf	___ftmul@f1,w
  9059  0D6C  00B6               	movwf	??___ftmul
  9060  0D6D  0831               	movf	___ftmul@f1+1,w
  9061  0D6E  00B7               	movwf	??___ftmul+1
  9062  0D6F  0832               	movf	___ftmul@f1+2,w
  9063  0D70  00B8               	movwf	??___ftmul+2
  9064  0D71  3010               	movlw	16
  9065  0D72                     u2305:	
  9066  0D72  36B8               	lsrf	??___ftmul+2,f
  9067  0D73  0CB7               	rrf	??___ftmul+1,f
  9068  0D74  0CB6               	rrf	??___ftmul,f
  9069  0D75  0B89               	decfsz	9,f
  9070  0D76  2D72               	goto	u2305
  9071  0D77  0836               	movf	??___ftmul,w
  9072  0D78  00B9               	movwf	??___ftmul+3
  9073  0D79  0839               	movf	??___ftmul+3,w
  9074  0D7A  00BF               	movwf	___ftmul@sign
  9075  0D7B  0833               	movf	___ftmul@f2,w
  9076  0D7C  00B6               	movwf	??___ftmul
  9077  0D7D  0834               	movf	___ftmul@f2+1,w
  9078  0D7E  00B7               	movwf	??___ftmul+1
  9079  0D7F  0835               	movf	___ftmul@f2+2,w
  9080  0D80  00B8               	movwf	??___ftmul+2
  9081  0D81  3010               	movlw	16
  9082  0D82                     u2315:	
  9083  0D82  36B8               	lsrf	??___ftmul+2,f
  9084  0D83  0CB7               	rrf	??___ftmul+1,f
  9085  0D84  0CB6               	rrf	??___ftmul,f
  9086  0D85  0B89               	decfsz	9,f
  9087  0D86  2D82               	goto	u2315
  9088  0D87  0836               	movf	??___ftmul,w
  9089  0D88  00B9               	movwf	??___ftmul+3
  9090  0D89  0839               	movf	??___ftmul+3,w
  9091  0D8A  06BF               	xorwf	___ftmul@sign,f
  9092  0D8B  3080               	movlw	128
  9093  0D8C  00B6               	movwf	??___ftmul
  9094  0D8D  0836               	movf	??___ftmul,w
  9095  0D8E  05BF               	andwf	___ftmul@sign,f
  9096  0D8F  17B1               	bsf	___ftmul@f1+1,7
  9097  0D90  17B4               	bsf	___ftmul@f2+1,7
  9098  0D91  30FF               	movlw	255
  9099  0D92  05B3               	andwf	___ftmul@f2,f
  9100  0D93  30FF               	movlw	255
  9101  0D94  05B4               	andwf	___ftmul@f2+1,f
  9102  0D95  3000               	movlw	0
  9103  0D96  05B5               	andwf	___ftmul@f2+2,f
  9104  0D97  3000               	movlw	0
  9105  0D98  00BB               	movwf	___ftmul@f3_as_product
  9106  0D99  3000               	movlw	0
  9107  0D9A  00BC               	movwf	___ftmul@f3_as_product+1
  9108  0D9B  3000               	movlw	0
  9109  0D9C  00BD               	movwf	___ftmul@f3_as_product+2
  9110  0D9D  3007               	movlw	7
  9111  0D9E  00B6               	movwf	??___ftmul
  9112  0D9F  0836               	movf	??___ftmul,w
  9113  0DA0  00BE               	movwf	___ftmul@cntr
  9114  0DA1                     l2315:	
  9115  0DA1  1C30               	btfss	___ftmul@f1,0
  9116  0DA2  2DA9               	goto	l2319
  9117  0DA3  0833               	movf	___ftmul@f2,w
  9118  0DA4  07BB               	addwf	___ftmul@f3_as_product,f
  9119  0DA5  0834               	movf	___ftmul@f2+1,w
  9120  0DA6  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  9121  0DA7  0835               	movf	___ftmul@f2+2,w
  9122  0DA8  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  9123  0DA9                     l2319:	
  9124  0DA9  3001               	movlw	1
  9125  0DAA                     u2335:	
  9126  0DAA  36B2               	lsrf	___ftmul@f1+2,f
  9127  0DAB  0CB1               	rrf	___ftmul@f1+1,f
  9128  0DAC  0CB0               	rrf	___ftmul@f1,f
  9129  0DAD  0B89               	decfsz	9,f
  9130  0DAE  2DAA               	goto	u2335
  9131  0DAF  3001               	movlw	1
  9132  0DB0                     u2345:	
  9133  0DB0  35B3               	lslf	___ftmul@f2,f
  9134  0DB1  0DB4               	rlf	___ftmul@f2+1,f
  9135  0DB2  0DB5               	rlf	___ftmul@f2+2,f
  9136  0DB3  0B89               	decfsz	9,f
  9137  0DB4  2DB0               	goto	u2345
  9138  0DB5  3001               	movlw	1
  9139  0DB6  02BE               	subwf	___ftmul@cntr,f
  9140  0DB7  1D03               	btfss	3,2
  9141  0DB8  2DA1               	goto	l2315
  9142  0DB9  3009               	movlw	9
  9143  0DBA  00B6               	movwf	??___ftmul
  9144  0DBB  0836               	movf	??___ftmul,w
  9145  0DBC  00BE               	movwf	___ftmul@cntr
  9146  0DBD                     l2327:	
  9147  0DBD  1C30               	btfss	___ftmul@f1,0
  9148  0DBE  2DC5               	goto	l2331
  9149  0DBF  0833               	movf	___ftmul@f2,w
  9150  0DC0  07BB               	addwf	___ftmul@f3_as_product,f
  9151  0DC1  0834               	movf	___ftmul@f2+1,w
  9152  0DC2  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  9153  0DC3  0835               	movf	___ftmul@f2+2,w
  9154  0DC4  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  9155  0DC5                     l2331:	
  9156  0DC5  3001               	movlw	1
  9157  0DC6                     u2375:	
  9158  0DC6  36B2               	lsrf	___ftmul@f1+2,f
  9159  0DC7  0CB1               	rrf	___ftmul@f1+1,f
  9160  0DC8  0CB0               	rrf	___ftmul@f1,f
  9161  0DC9  0B89               	decfsz	9,f
  9162  0DCA  2DC6               	goto	u2375
  9163  0DCB  3001               	movlw	1
  9164  0DCC                     u2385:	
  9165  0DCC  36BD               	lsrf	___ftmul@f3_as_product+2,f
  9166  0DCD  0CBC               	rrf	___ftmul@f3_as_product+1,f
  9167  0DCE  0CBB               	rrf	___ftmul@f3_as_product,f
  9168  0DCF  0B89               	decfsz	9,f
  9169  0DD0  2DCC               	goto	u2385
  9170  0DD1  3001               	movlw	1
  9171  0DD2  02BE               	subwf	___ftmul@cntr,f
  9172  0DD3  1D03               	btfss	3,2
  9173  0DD4  2DBD               	goto	l2327
  9174  0DD5  083B               	movf	___ftmul@f3_as_product,w
  9175  0DD6  00F0               	movwf	___ftpack@arg
  9176  0DD7  083C               	movf	___ftmul@f3_as_product+1,w
  9177  0DD8  00F1               	movwf	___ftpack@arg+1
  9178  0DD9  083D               	movf	___ftmul@f3_as_product+2,w
  9179  0DDA  00F2               	movwf	___ftpack@arg+2
  9180  0DDB  083A               	movf	___ftmul@exp,w
  9181  0DDC  00B6               	movwf	??___ftmul
  9182  0DDD  0836               	movf	??___ftmul,w
  9183  0DDE  00F3               	movwf	___ftpack@exp
  9184  0DDF  083F               	movf	___ftmul@sign,w
  9185  0DE0  00B7               	movwf	??___ftmul+1
  9186  0DE1  0837               	movf	??___ftmul+1,w
  9187  0DE2  00F4               	movwf	___ftpack@sign
  9188  0DE3  3189  2184         	fcall	___ftpack
  9189  0DE5  0870               	movf	?___ftpack,w
  9190  0DE6  0020               	movlb	0	; select bank0
  9191  0DE7  00B0               	movwf	?___ftmul
  9192  0DE8  0871               	movf	?___ftpack+1,w
  9193  0DE9  00B1               	movwf	?___ftmul+1
  9194  0DEA  0872               	movf	?___ftpack+2,w
  9195  0DEB  00B2               	movwf	?___ftmul+2
  9196  0DEC  0008               	return
  9197  0DED                     __end_of___ftmul:	
  9198                           
  9199                           	psect	text6
  9200  1607                     __ptext6:	
  9201 ;; *************** function ___ftge *****************
  9202 ;; Defined at:
  9203 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;  ff1             3    0[COMMON] float 
  9206 ;;  ff2             3    3[COMMON] float 
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;		None
  9209 ;; Return value:  Size  Location     Type
  9210 ;;		None               void
  9211 ;; Registers used:
  9212 ;;		wreg, status,2, status,0
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9218 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;Total ram usage:        9 bytes
  9223 ;; Hardware stack levels used:    1
  9224 ;; This function calls:
  9225 ;;		Nothing
  9226 ;; This function is called by:
  9227 ;;		_log
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           
  9232                           ;psect for function ___ftge
  9233  1607                     ___ftge:	
  9234                           
  9235                           ;incstack = 0
  9236                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9237  1607  1FF2               	btfss	___ftge@ff1+2,7
  9238  1608  2E1D               	goto	l2359
  9239  1609  0970               	comf	___ftge@ff1,w
  9240  160A  00F6               	movwf	??___ftge
  9241  160B  0971               	comf	___ftge@ff1+1,w
  9242  160C  00F7               	movwf	??___ftge+1
  9243  160D  0972               	comf	___ftge@ff1+2,w
  9244  160E  00F8               	movwf	??___ftge+2
  9245  160F  0AF6               	incf	??___ftge,f
  9246  1610  1903               	skipnz
  9247  1611  0AF7               	incf	??___ftge+1,f
  9248  1612  1903               	skipnz
  9249  1613  0AF8               	incf	??___ftge+2,f
  9250  1614  3000               	movlw	0
  9251  1615  0776               	addwf	??___ftge,w
  9252  1616  00F0               	movwf	___ftge@ff1
  9253  1617  3000               	movlw	0
  9254  1618  3D77               	addwfc	??___ftge+1,w
  9255  1619  00F1               	movwf	___ftge@ff1+1
  9256  161A  3080               	movlw	128
  9257  161B  3D78               	addwfc	??___ftge+2,w
  9258  161C  00F2               	movwf	___ftge@ff1+2
  9259  161D                     l2359:	
  9260  161D  1FF5               	btfss	___ftge@ff2+2,7
  9261  161E  2E33               	goto	l2363
  9262  161F  0973               	comf	___ftge@ff2,w
  9263  1620  00F6               	movwf	??___ftge
  9264  1621  0974               	comf	___ftge@ff2+1,w
  9265  1622  00F7               	movwf	??___ftge+1
  9266  1623  0975               	comf	___ftge@ff2+2,w
  9267  1624  00F8               	movwf	??___ftge+2
  9268  1625  0AF6               	incf	??___ftge,f
  9269  1626  1903               	skipnz
  9270  1627  0AF7               	incf	??___ftge+1,f
  9271  1628  1903               	skipnz
  9272  1629  0AF8               	incf	??___ftge+2,f
  9273  162A  3000               	movlw	0
  9274  162B  0776               	addwf	??___ftge,w
  9275  162C  00F3               	movwf	___ftge@ff2
  9276  162D  3000               	movlw	0
  9277  162E  3D77               	addwfc	??___ftge+1,w
  9278  162F  00F4               	movwf	___ftge@ff2+1
  9279  1630  3080               	movlw	128
  9280  1631  3D78               	addwfc	??___ftge+2,w
  9281  1632  00F5               	movwf	___ftge@ff2+2
  9282  1633                     l2363:	
  9283  1633  3080               	movlw	128
  9284  1634  06F2               	xorwf	___ftge@ff1+2,f
  9285  1635  3080               	movlw	128
  9286  1636  06F5               	xorwf	___ftge@ff2+2,f
  9287  1637  0875               	movf	___ftge@ff2+2,w
  9288  1638  0272               	subwf	___ftge@ff1+2,w
  9289  1639  1D03               	skipz
  9290  163A  0008               	return
  9291  163B  0874               	movf	___ftge@ff2+1,w
  9292  163C  0271               	subwf	___ftge@ff1+1,w
  9293  163D  1D03               	skipz
  9294  163E  0008               	return
  9295  163F  0873               	movf	___ftge@ff2,w
  9296  1640  0270               	subwf	___ftge@ff1,w
  9297  1641  0008               	return
  9298  1642                     __end_of___ftge:	
  9299                           
  9300                           	psect	text7
  9301  146E                     __ptext7:	
  9302 ;; *************** function ___ftsub *****************
  9303 ;; Defined at:
  9304 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9305 ;; Parameters:    Size  Location     Type
  9306 ;;  f2              3   45[BANK0 ] float 
  9307 ;;  f1              3   48[BANK0 ] float 
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;		None
  9310 ;; Return value:  Size  Location     Type
  9311 ;;                  3   45[BANK0 ] float 
  9312 ;; Registers used:
  9313 ;;		wreg, status,2, status,0, pclath, cstack
  9314 ;; Tracked objects:
  9315 ;;		On entry : 0/0
  9316 ;;		On exit  : 0/0
  9317 ;;		Unchanged: 0/0
  9318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9319 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9322 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9323 ;;Total ram usage:        6 bytes
  9324 ;; Hardware stack levels used:    1
  9325 ;; Hardware stack levels required when called:    2
  9326 ;; This function calls:
  9327 ;;		___ftadd
  9328 ;; This function is called by:
  9329 ;;		_tempCalc
  9330 ;; This function uses a non-reentrant model
  9331 ;;
  9332                           
  9333                           
  9334                           ;psect for function ___ftsub
  9335  146E                     ___ftsub:	
  9336                           
  9337                           ;incstack = 0
  9338                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9339  146E  0020               	movlb	0	; select bank0
  9340  146F  084F               	movf	___ftsub@f2+2,w
  9341  1470  044E               	iorwf	___ftsub@f2+1,w
  9342  1471  044D               	iorwf	___ftsub@f2,w
  9343  1472  1903               	skipnz
  9344  1473  2C76               	goto	l2727
  9345  1474  3080               	movlw	128
  9346  1475  06CF               	xorwf	___ftsub@f2+2,f
  9347  1476                     l2727:	
  9348  1476  0850               	movf	___ftsub@f1,w
  9349  1477  00C0               	movwf	___ftadd@f1
  9350  1478  0851               	movf	___ftsub@f1+1,w
  9351  1479  00C1               	movwf	___ftadd@f1+1
  9352  147A  0852               	movf	___ftsub@f1+2,w
  9353  147B  00C2               	movwf	___ftadd@f1+2
  9354  147C  084D               	movf	___ftsub@f2,w
  9355  147D  00C3               	movwf	___ftadd@f2
  9356  147E  084E               	movf	___ftsub@f2+1,w
  9357  147F  00C4               	movwf	___ftadd@f2+1
  9358  1480  084F               	movf	___ftsub@f2+2,w
  9359  1481  00C5               	movwf	___ftadd@f2+2
  9360  1482  318D  25ED         	fcall	___ftadd
  9361  1484  0020               	movlb	0	; select bank0
  9362  1485  0840               	movf	?___ftadd,w
  9363  1486  00CD               	movwf	?___ftsub
  9364  1487  0841               	movf	?___ftadd+1,w
  9365  1488  00CE               	movwf	?___ftsub+1
  9366  1489  0842               	movf	?___ftadd+2,w
  9367  148A  00CF               	movwf	?___ftsub+2
  9368  148B  0008               	return
  9369  148C                     __end_of___ftsub:	
  9370                           
  9371                           	psect	text8
  9372  0DED                     __ptext8:	
  9373 ;; *************** function ___ftadd *****************
  9374 ;; Defined at:
  9375 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;  f1              3   32[BANK0 ] float 
  9378 ;;  f2              3   35[BANK0 ] float 
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;  exp1            1   44[BANK0 ] unsigned char 
  9381 ;;  exp2            1   43[BANK0 ] unsigned char 
  9382 ;;  sign            1   42[BANK0 ] unsigned char 
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  3   32[BANK0 ] float 
  9385 ;; Registers used:
  9386 ;;		wreg, status,2, status,0, pclath, cstack
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9392 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9393 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9395 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;Total ram usage:       13 bytes
  9397 ;; Hardware stack levels used:    1
  9398 ;; Hardware stack levels required when called:    1
  9399 ;; This function calls:
  9400 ;;		___ftpack
  9401 ;; This function is called by:
  9402 ;;		_tempCalc
  9403 ;;		___ftsub
  9404 ;;		_log
  9405 ;;		_eval_poly
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           
  9410                           ;psect for function ___ftadd
  9411  0DED                     ___ftadd:	
  9412                           
  9413                           ;incstack = 0
  9414                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9415  0DED  0020               	movlb	0	; select bank0
  9416  0DEE  0840               	movf	___ftadd@f1,w
  9417  0DEF  00C6               	movwf	??___ftadd
  9418  0DF0  0841               	movf	___ftadd@f1+1,w
  9419  0DF1  00C7               	movwf	??___ftadd+1
  9420  0DF2  0842               	movf	___ftadd@f1+2,w
  9421  0DF3  00C8               	movwf	??___ftadd+2
  9422  0DF4  1003               	clrc
  9423  0DF5  0D47               	rlf	??___ftadd+1,w
  9424  0DF6  0D48               	rlf	??___ftadd+2,w
  9425  0DF7  00C9               	movwf	??___ftadd+3
  9426  0DF8  0849               	movf	??___ftadd+3,w
  9427  0DF9  00CC               	movwf	___ftadd@exp1
  9428  0DFA  0843               	movf	___ftadd@f2,w
  9429  0DFB  00C6               	movwf	??___ftadd
  9430  0DFC  0844               	movf	___ftadd@f2+1,w
  9431  0DFD  00C7               	movwf	??___ftadd+1
  9432  0DFE  0845               	movf	___ftadd@f2+2,w
  9433  0DFF  00C8               	movwf	??___ftadd+2
  9434  0E00  1003               	clrc
  9435  0E01  0D47               	rlf	??___ftadd+1,w
  9436  0E02  0D48               	rlf	??___ftadd+2,w
  9437  0E03  00C9               	movwf	??___ftadd+3
  9438  0E04  0849               	movf	??___ftadd+3,w
  9439  0E05  00CB               	movwf	___ftadd@exp2
  9440  0E06  084C               	movf	___ftadd@exp1,w
  9441  0E07  1903               	btfsc	3,2
  9442  0E08  2E15               	goto	l2227
  9443  0E09  084B               	movf	___ftadd@exp2,w
  9444  0E0A  024C               	subwf	___ftadd@exp1,w
  9445  0E0B  1803               	skipnc
  9446  0E0C  2E1C               	goto	l2231
  9447  0E0D  034C               	decf	___ftadd@exp1,w
  9448  0E0E  3AFF               	xorlw	255
  9449  0E0F  074B               	addwf	___ftadd@exp2,w
  9450  0E10  00C6               	movwf	??___ftadd
  9451  0E11  3019               	movlw	25
  9452  0E12  0246               	subwf	??___ftadd,w
  9453  0E13  1C03               	skipc
  9454  0E14  2E1C               	goto	l2231
  9455  0E15                     l2227:	
  9456  0E15  0843               	movf	___ftadd@f2,w
  9457  0E16  00C0               	movwf	?___ftadd
  9458  0E17  0844               	movf	___ftadd@f2+1,w
  9459  0E18  00C1               	movwf	?___ftadd+1
  9460  0E19  0845               	movf	___ftadd@f2+2,w
  9461  0E1A  00C2               	movwf	?___ftadd+2
  9462  0E1B  0008               	return
  9463  0E1C                     l2231:	
  9464  0E1C  084B               	movf	___ftadd@exp2,w
  9465  0E1D  1903               	btfsc	3,2
  9466  0E1E  0008               	return
  9467  0E1F  084C               	movf	___ftadd@exp1,w
  9468  0E20  024B               	subwf	___ftadd@exp2,w
  9469  0E21  1803               	skipnc
  9470  0E22  2E2B               	goto	l2237
  9471  0E23  034B               	decf	___ftadd@exp2,w
  9472  0E24  3AFF               	xorlw	255
  9473  0E25  074C               	addwf	___ftadd@exp1,w
  9474  0E26  00C6               	movwf	??___ftadd
  9475  0E27  3019               	movlw	25
  9476  0E28  0246               	subwf	??___ftadd,w
  9477  0E29  1803               	btfsc	3,0
  9478  0E2A  0008               	return
  9479  0E2B                     l2237:	
  9480  0E2B  3006               	movlw	6
  9481  0E2C  00C6               	movwf	??___ftadd
  9482  0E2D  0846               	movf	??___ftadd,w
  9483  0E2E  00CA               	movwf	___ftadd@sign
  9484  0E2F  1BC2               	btfsc	___ftadd@f1+2,7
  9485  0E30  17CA               	bsf	___ftadd@sign,7
  9486  0E31  1BC5               	btfsc	___ftadd@f2+2,7
  9487  0E32  174A               	bsf	___ftadd@sign,6
  9488  0E33  17C1               	bsf	___ftadd@f1+1,7
  9489  0E34  30FF               	movlw	255
  9490  0E35  05C0               	andwf	___ftadd@f1,f
  9491  0E36  30FF               	movlw	255
  9492  0E37  05C1               	andwf	___ftadd@f1+1,f
  9493  0E38  3000               	movlw	0
  9494  0E39  05C2               	andwf	___ftadd@f1+2,f
  9495  0E3A  17C4               	bsf	___ftadd@f2+1,7
  9496  0E3B  30FF               	movlw	255
  9497  0E3C  05C3               	andwf	___ftadd@f2,f
  9498  0E3D  30FF               	movlw	255
  9499  0E3E  05C4               	andwf	___ftadd@f2+1,f
  9500  0E3F  3000               	movlw	0
  9501  0E40  05C5               	andwf	___ftadd@f2+2,f
  9502  0E41  084B               	movf	___ftadd@exp2,w
  9503  0E42  024C               	subwf	___ftadd@exp1,w
  9504  0E43  1803               	skipnc
  9505  0E44  2E67               	goto	l2259
  9506  0E45                     l2249:	
  9507  0E45  3001               	movlw	1
  9508  0E46                     u2145:	
  9509  0E46  35C3               	lslf	___ftadd@f2,f
  9510  0E47  0DC4               	rlf	___ftadd@f2+1,f
  9511  0E48  0DC5               	rlf	___ftadd@f2+2,f
  9512  0E49  0B89               	decfsz	9,f
  9513  0E4A  2E46               	goto	u2145
  9514  0E4B  3001               	movlw	1
  9515  0E4C  02CB               	subwf	___ftadd@exp2,f
  9516  0E4D  084B               	movf	___ftadd@exp2,w
  9517  0E4E  064C               	xorwf	___ftadd@exp1,w
  9518  0E4F  1903               	skipnz
  9519  0E50  2E62               	goto	l2257
  9520  0E51  3001               	movlw	1
  9521  0E52  02CA               	subwf	___ftadd@sign,f
  9522  0E53  084A               	movf	___ftadd@sign,w
  9523  0E54  3907               	andlw	7
  9524  0E55  1903               	btfsc	3,2
  9525  0E56  2E62               	goto	l2257
  9526  0E57  2E45               	goto	l2249
  9527  0E58                     l2255:	
  9528  0E58  3001               	movlw	1
  9529  0E59                     u2175:	
  9530  0E59  36C2               	lsrf	___ftadd@f1+2,f
  9531  0E5A  0CC1               	rrf	___ftadd@f1+1,f
  9532  0E5B  0CC0               	rrf	___ftadd@f1,f
  9533  0E5C  0B89               	decfsz	9,f
  9534  0E5D  2E59               	goto	u2175
  9535  0E5E  3001               	movlw	1
  9536  0E5F  00C6               	movwf	??___ftadd
  9537  0E60  0846               	movf	??___ftadd,w
  9538  0E61  07CC               	addwf	___ftadd@exp1,f
  9539  0E62                     l2257:	
  9540  0E62  084C               	movf	___ftadd@exp1,w
  9541  0E63  064B               	xorwf	___ftadd@exp2,w
  9542  0E64  1903               	btfsc	3,2
  9543  0E65  2E8C               	goto	l767
  9544  0E66  2E58               	goto	l2255
  9545  0E67                     l2259:	
  9546  0E67  084C               	movf	___ftadd@exp1,w
  9547  0E68  024B               	subwf	___ftadd@exp2,w
  9548  0E69  1803               	skipnc
  9549  0E6A  2E8C               	goto	l767
  9550  0E6B                     l2261:	
  9551  0E6B  3001               	movlw	1
  9552  0E6C                     u2205:	
  9553  0E6C  35C0               	lslf	___ftadd@f1,f
  9554  0E6D  0DC1               	rlf	___ftadd@f1+1,f
  9555  0E6E  0DC2               	rlf	___ftadd@f1+2,f
  9556  0E6F  0B89               	decfsz	9,f
  9557  0E70  2E6C               	goto	u2205
  9558  0E71  3001               	movlw	1
  9559  0E72  02CC               	subwf	___ftadd@exp1,f
  9560  0E73  084B               	movf	___ftadd@exp2,w
  9561  0E74  064C               	xorwf	___ftadd@exp1,w
  9562  0E75  1903               	skipnz
  9563  0E76  2E88               	goto	l2269
  9564  0E77  3001               	movlw	1
  9565  0E78  02CA               	subwf	___ftadd@sign,f
  9566  0E79  084A               	movf	___ftadd@sign,w
  9567  0E7A  3907               	andlw	7
  9568  0E7B  1903               	btfsc	3,2
  9569  0E7C  2E88               	goto	l2269
  9570  0E7D  2E6B               	goto	l2261
  9571  0E7E                     l2267:	
  9572  0E7E  3001               	movlw	1
  9573  0E7F                     u2235:	
  9574  0E7F  36C5               	lsrf	___ftadd@f2+2,f
  9575  0E80  0CC4               	rrf	___ftadd@f2+1,f
  9576  0E81  0CC3               	rrf	___ftadd@f2,f
  9577  0E82  0B89               	decfsz	9,f
  9578  0E83  2E7F               	goto	u2235
  9579  0E84  3001               	movlw	1
  9580  0E85  00C6               	movwf	??___ftadd
  9581  0E86  0846               	movf	??___ftadd,w
  9582  0E87  07CB               	addwf	___ftadd@exp2,f
  9583  0E88                     l2269:	
  9584  0E88  084C               	movf	___ftadd@exp1,w
  9585  0E89  064B               	xorwf	___ftadd@exp2,w
  9586  0E8A  1D03               	skipz
  9587  0E8B  2E7E               	goto	l2267
  9588  0E8C                     l767:	
  9589  0E8C  1FCA               	btfss	___ftadd@sign,7
  9590  0E8D  2E9E               	goto	l2273
  9591  0E8E  30FF               	movlw	255
  9592  0E8F  06C0               	xorwf	___ftadd@f1,f
  9593  0E90  30FF               	movlw	255
  9594  0E91  06C1               	xorwf	___ftadd@f1+1,f
  9595  0E92  30FF               	movlw	255
  9596  0E93  06C2               	xorwf	___ftadd@f1+2,f
  9597  0E94  3001               	movlw	1
  9598  0E95  07C0               	addwf	___ftadd@f1,f
  9599  0E96  3000               	movlw	0
  9600  0E97  1803               	skipnc
  9601  0E98  3001               	movlw	1
  9602  0E99  07C1               	addwf	___ftadd@f1+1,f
  9603  0E9A  3000               	movlw	0
  9604  0E9B  1803               	skipnc
  9605  0E9C  3001               	movlw	1
  9606  0E9D  07C2               	addwf	___ftadd@f1+2,f
  9607  0E9E                     l2273:	
  9608  0E9E  1F4A               	btfss	___ftadd@sign,6
  9609  0E9F  2EB0               	goto	l2277
  9610  0EA0  30FF               	movlw	255
  9611  0EA1  06C3               	xorwf	___ftadd@f2,f
  9612  0EA2  30FF               	movlw	255
  9613  0EA3  06C4               	xorwf	___ftadd@f2+1,f
  9614  0EA4  30FF               	movlw	255
  9615  0EA5  06C5               	xorwf	___ftadd@f2+2,f
  9616  0EA6  3001               	movlw	1
  9617  0EA7  07C3               	addwf	___ftadd@f2,f
  9618  0EA8  3000               	movlw	0
  9619  0EA9  1803               	skipnc
  9620  0EAA  3001               	movlw	1
  9621  0EAB  07C4               	addwf	___ftadd@f2+1,f
  9622  0EAC  3000               	movlw	0
  9623  0EAD  1803               	skipnc
  9624  0EAE  3001               	movlw	1
  9625  0EAF  07C5               	addwf	___ftadd@f2+2,f
  9626  0EB0                     l2277:	
  9627  0EB0  01CA               	clrf	___ftadd@sign
  9628  0EB1  0840               	movf	___ftadd@f1,w
  9629  0EB2  07C3               	addwf	___ftadd@f2,f
  9630  0EB3  0841               	movf	___ftadd@f1+1,w
  9631  0EB4  3DC4               	addwfc	___ftadd@f2+1,f
  9632  0EB5  0842               	movf	___ftadd@f1+2,w
  9633  0EB6  3DC5               	addwfc	___ftadd@f2+2,f
  9634  0EB7  1FC5               	btfss	___ftadd@f2+2,7
  9635  0EB8  2ECB               	goto	l2287
  9636  0EB9  30FF               	movlw	255
  9637  0EBA  06C3               	xorwf	___ftadd@f2,f
  9638  0EBB  30FF               	movlw	255
  9639  0EBC  06C4               	xorwf	___ftadd@f2+1,f
  9640  0EBD  30FF               	movlw	255
  9641  0EBE  06C5               	xorwf	___ftadd@f2+2,f
  9642  0EBF  3001               	movlw	1
  9643  0EC0  07C3               	addwf	___ftadd@f2,f
  9644  0EC1  3000               	movlw	0
  9645  0EC2  1803               	skipnc
  9646  0EC3  3001               	movlw	1
  9647  0EC4  07C4               	addwf	___ftadd@f2+1,f
  9648  0EC5  3000               	movlw	0
  9649  0EC6  1803               	skipnc
  9650  0EC7  3001               	movlw	1
  9651  0EC8  07C5               	addwf	___ftadd@f2+2,f
  9652  0EC9  01CA               	clrf	___ftadd@sign
  9653  0ECA  0ACA               	incf	___ftadd@sign,f
  9654  0ECB                     l2287:	
  9655  0ECB  0843               	movf	___ftadd@f2,w
  9656  0ECC  00F0               	movwf	___ftpack@arg
  9657  0ECD  0844               	movf	___ftadd@f2+1,w
  9658  0ECE  00F1               	movwf	___ftpack@arg+1
  9659  0ECF  0845               	movf	___ftadd@f2+2,w
  9660  0ED0  00F2               	movwf	___ftpack@arg+2
  9661  0ED1  084C               	movf	___ftadd@exp1,w
  9662  0ED2  00C6               	movwf	??___ftadd
  9663  0ED3  0846               	movf	??___ftadd,w
  9664  0ED4  00F3               	movwf	___ftpack@exp
  9665  0ED5  084A               	movf	___ftadd@sign,w
  9666  0ED6  00C7               	movwf	??___ftadd+1
  9667  0ED7  0847               	movf	??___ftadd+1,w
  9668  0ED8  00F4               	movwf	___ftpack@sign
  9669  0ED9  3189  2184         	fcall	___ftpack
  9670  0EDB  0870               	movf	?___ftpack,w
  9671  0EDC  0020               	movlb	0	; select bank0
  9672  0EDD  00C0               	movwf	?___ftadd
  9673  0EDE  0871               	movf	?___ftpack+1,w
  9674  0EDF  00C1               	movwf	?___ftadd+1
  9675  0EE0  0872               	movf	?___ftpack+2,w
  9676  0EE1  00C2               	movwf	?___ftadd+2
  9677  0EE2  0008               	return
  9678  0EE3                     __end_of___ftadd:	
  9679                           
  9680                           	psect	text9
  9681  0B59                     __ptext9:	
  9682 ;; *************** function _readButton *****************
  9683 ;; Defined at:
  9684 ;;		line 9 in file "buttons.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;		None
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;		None
  9689 ;; Return value:  Size  Location     Type
  9690 ;;                  1    wreg      unsigned char 
  9691 ;; Registers used:
  9692 ;;		wreg, status,2, status,0, pclath, cstack
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9702 ;;Total ram usage:        2 bytes
  9703 ;; Hardware stack levels used:    1
  9704 ;; Hardware stack levels required when called:    1
  9705 ;; This function calls:
  9706 ;;		_ADCRead
  9707 ;; This function is called by:
  9708 ;;		_main
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           
  9712                           
  9713                           ;psect for function _readButton
  9714  0B59                     _readButton:	
  9715                           
  9716                           ;buttons.c: 11: readButtons = ADCRead(11);
  9717                           
  9718                           ;incstack = 0
  9719                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  9720  0B59  300B               	movlw	11
  9721  0B5A  3193  23C4  318B   	fcall	_ADCRead
  9722  0B5D  0871               	movf	?_ADCRead+1,w
  9723  0B5E  0020               	movlb	0	; select bank0
  9724  0B5F  00EC               	movwf	_readButtons+1
  9725  0B60  0870               	movf	?_ADCRead,w
  9726  0B61  00EB               	movwf	_readButtons
  9727                           
  9728                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  9729  0B62  086C               	movf	_readButtons+1,w
  9730  0B63  3A80               	xorlw	128
  9731  0B64  00F4               	movwf	??_readButton
  9732  0B65  3081               	movlw	129
  9733  0B66  0274               	subwf	??_readButton,w
  9734  0B67  1D03               	skipz
  9735  0B68  2B6B               	goto	u3345
  9736  0B69  306D               	movlw	109
  9737  0B6A  026B               	subwf	_readButtons,w
  9738  0B6B                     u3345:	
  9739  0B6B  1C03               	skipc
  9740  0B6C  2B7D               	goto	l2943
  9741  0B6D  0020               	movlb	0	; select bank0
  9742  0B6E  086C               	movf	_readButtons+1,w
  9743  0B6F  3A80               	xorlw	128
  9744  0B70  00F4               	movwf	??_readButton
  9745  0B71  3081               	movlw	129
  9746  0B72  0274               	subwf	??_readButton,w
  9747  0B73  1D03               	skipz
  9748  0B74  2B77               	goto	u3355
  9749  0B75  3095               	movlw	149
  9750  0B76  026B               	subwf	_readButtons,w
  9751  0B77                     u3355:	
  9752  0B77  1803               	skipnc
  9753  0B78  2B7D               	goto	l2943
  9754                           
  9755                           ;buttons.c: 14: {
  9756                           ;buttons.c: 15: button = 1;
  9757  0B79  0020               	movlb	0	; select bank0
  9758  0B7A  01EE               	clrf	_button
  9759  0B7B  0AEE               	incf	_button,f
  9760                           
  9761                           ;buttons.c: 16: }
  9762  0B7C  2BAB               	goto	l2955
  9763  0B7D                     l2943:	
  9764                           
  9765                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  9766  0B7D  0020               	movlb	0	; select bank0
  9767  0B7E  086C               	movf	_readButtons+1,w
  9768  0B7F  3A80               	xorlw	128
  9769  0B80  00F4               	movwf	??_readButton
  9770  0B81  3082               	movlw	130
  9771  0B82  0274               	subwf	??_readButton,w
  9772  0B83  1D03               	skipz
  9773  0B84  2B87               	goto	u3365
  9774  0B85  3017               	movlw	23
  9775  0B86  026B               	subwf	_readButtons,w
  9776  0B87                     u3365:	
  9777  0B87  1C03               	skipc
  9778  0B88  2B97               	goto	l2949
  9779  0B89  0020               	movlb	0	; select bank0
  9780  0B8A  086C               	movf	_readButtons+1,w
  9781  0B8B  3A80               	xorlw	128
  9782  0B8C  00F4               	movwf	??_readButton
  9783  0B8D  3082               	movlw	130
  9784  0B8E  0274               	subwf	??_readButton,w
  9785  0B8F  1D03               	skipz
  9786  0B90  2B93               	goto	u3375
  9787  0B91  304E               	movlw	78
  9788  0B92  026B               	subwf	_readButtons,w
  9789  0B93                     u3375:	
  9790  0B93  1803               	skipnc
  9791  0B94  2B97               	goto	l2949
  9792                           
  9793                           ;buttons.c: 19: {
  9794                           ;buttons.c: 20: button = 2;
  9795  0B95  3002               	movlw	2
  9796  0B96  2BA4               	goto	L5
  9797  0B97                     l2949:	
  9798                           ;buttons.c: 21: }
  9799                           
  9800                           
  9801                           ;buttons.c: 23: else if(readButtons > 745)
  9802  0B97  0020               	movlb	0	; select bank0
  9803  0B98  086C               	movf	_readButtons+1,w
  9804  0B99  3A80               	xorlw	128
  9805  0B9A  00F4               	movwf	??_readButton
  9806  0B9B  3082               	movlw	130
  9807  0B9C  0274               	subwf	??_readButton,w
  9808  0B9D  1D03               	skipz
  9809  0B9E  2BA1               	goto	u3385
  9810  0B9F  30EA               	movlw	234
  9811  0BA0  026B               	subwf	_readButtons,w
  9812  0BA1                     u3385:	
  9813  0BA1  1C03               	skipc
  9814  0BA2  2BA9               	goto	l2953
  9815                           
  9816                           ;buttons.c: 24: {
  9817                           ;buttons.c: 25: button = 3;
  9818  0BA3  3003               	movlw	3
  9819  0BA4                     L5:	
  9820  0BA4  00F4               	movwf	??_readButton
  9821  0BA5  0874               	movf	??_readButton,w
  9822  0BA6  0020               	movlb	0	; select bank0
  9823  0BA7  00EE               	movwf	_button
  9824                           
  9825                           ;buttons.c: 26: }
  9826  0BA8  2BAB               	goto	l2955
  9827  0BA9                     l2953:	
  9828                           
  9829                           ;buttons.c: 28: else
  9830                           ;buttons.c: 29: {
  9831                           ;buttons.c: 30: button = 0;
  9832  0BA9  0020               	movlb	0	; select bank0
  9833  0BAA  01EE               	clrf	_button
  9834  0BAB                     l2955:	
  9835                           
  9836                           ;buttons.c: 31: }
  9837                           ;buttons.c: 33: if (button != 0)
  9838  0BAB  086E               	movf	_button,w
  9839  0BAC  1903               	btfsc	3,2
  9840  0BAD  2BDC               	goto	l2975
  9841                           
  9842                           ;buttons.c: 34: {
  9843                           ;buttons.c: 35: if (button != lastButton)
  9844  0BAE  086E               	movf	_button,w
  9845  0BAF  066D               	xorwf	_lastButton,w
  9846  0BB0  1903               	skipnz
  9847  0BB1  2BB7               	goto	l2963
  9848                           
  9849                           ;buttons.c: 36: {
  9850                           ;buttons.c: 37: lastButton = button;
  9851  0BB2  086E               	movf	_button,w
  9852  0BB3  00F4               	movwf	??_readButton
  9853  0BB4  0874               	movf	??_readButton,w
  9854  0BB5  00ED               	movwf	_lastButton
  9855  0BB6  2BDC               	goto	l2975
  9856  0BB7                     l2963:	
  9857                           ;buttons.c: 39: }
  9858                           
  9859                           ;buttons.c: 38: j = 0;
  9860                           
  9861                           
  9862                           ;buttons.c: 40: else
  9863                           ;buttons.c: 41: {
  9864                           ;buttons.c: 42: j += 1;
  9865  0BB7  3001               	movlw	1
  9866  0BB8  00F4               	movwf	??_readButton
  9867  0BB9  0874               	movf	??_readButton,w
  9868  0BBA  0021               	movlb	1	; select bank1
  9869  0BBB  07E5               	addwf	_j^(0+128),f
  9870                           
  9871                           ;buttons.c: 44: if(j == 1)
  9872  0BBC  0365               	decf	_j^(0+128),w
  9873  0BBD  1D03               	btfss	3,2
  9874  0BBE  2BC2               	goto	l2969
  9875                           
  9876                           ;buttons.c: 45: {
  9877                           ;buttons.c: 46: return (lastButton);
  9878  0BBF  0020               	movlb	0	; select bank0
  9879  0BC0  086D               	movf	_lastButton,w
  9880  0BC1  0008               	return
  9881  0BC2                     l2969:	
  9882                           
  9883                           ;buttons.c: 47: }
  9884                           ;buttons.c: 49: if (j >10)
  9885  0BC2  0021               	movlb	1	; select bank1
  9886  0BC3  0865               	movf	_j^(0+128),w
  9887  0BC4  3A80               	xorlw	128
  9888  0BC5  3E75               	addlw	-139
  9889  0BC6  1C03               	skipc
  9890  0BC7  2BDE               	goto	l2977
  9891                           
  9892                           ;buttons.c: 50: {
  9893                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  9894  0BC8  3002               	movlw	2
  9895  0BC9  00F5               	movwf	??_readButton+1
  9896  0BCA  3004               	movlw	4
  9897  0BCB  00F4               	movwf	??_readButton
  9898  0BCC  30BA               	movlw	186
  9899  0BCD                     u3697:	
  9900  0BCD  0B89               	decfsz	9,f
  9901  0BCE  2BCD               	goto	u3697
  9902  0BCF  0BF4               	decfsz	??_readButton,f
  9903  0BD0  2BCD               	goto	u3697
  9904  0BD1  0BF5               	decfsz	??_readButton+1,f
  9905  0BD2  2BCD               	goto	u3697
  9906  0BD3  3200               	nop2
  9907                           
  9908                           ;buttons.c: 52: j = 10;
  9909  0BD4  300A               	movlw	10
  9910  0BD5  00F4               	movwf	??_readButton
  9911  0BD6  0874               	movf	??_readButton,w
  9912  0BD7  0021               	movlb	1	; select bank1
  9913  0BD8  00E5               	movwf	_j^(0+128)
  9914                           
  9915                           ;buttons.c: 53: return (lastButton);
  9916  0BD9  0020               	movlb	0	; select bank0
  9917  0BDA  086D               	movf	_lastButton,w
  9918  0BDB  0008               	return
  9919  0BDC                     l2975:	
  9920                           ;buttons.c: 54: }
  9921                           ;buttons.c: 55: }
  9922                           ;buttons.c: 56: goto end;
  9923                           
  9924                           
  9925                           ;buttons.c: 57: }
  9926                           ;buttons.c: 59: j = 0;
  9927  0BDC  0021               	movlb	1	; select bank1
  9928  0BDD  01E5               	clrf	_j^(0+128)
  9929  0BDE                     l2977:	
  9930                           ;buttons.c: 61: end:
  9931                           
  9932                           
  9933                           ;buttons.c: 63: return (0);
  9934  0BDE  3000               	movlw	0
  9935  0BDF  0008               	return
  9936  0BE0                     __end_of_readButton:	
  9937                           
  9938                           	psect	text10
  9939  00C4                     __ptext10:	
  9940 ;; *************** function _readAnalog *****************
  9941 ;; Defined at:
  9942 ;;		line 49 in file "adc.c"
  9943 ;; Parameters:    Size  Location     Type
  9944 ;;  channel         2    6[BANK0 ] unsigned int 
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;  value           2   28[BANK0 ] int 
  9947 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  9948 ;; Return value:  Size  Location     Type
  9949 ;;                  2    6[BANK0 ] int 
  9950 ;; Registers used:
  9951 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9952 ;; Tracked objects:
  9953 ;;		On entry : 0/0
  9954 ;;		On exit  : 0/0
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9957 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9958 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9959 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9960 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9961 ;;Total ram usage:       24 bytes
  9962 ;; Hardware stack levels used:    1
  9963 ;; Hardware stack levels required when called:    1
  9964 ;; This function calls:
  9965 ;;		_ADCRead
  9966 ;;		___aldiv
  9967 ;;		___wmul
  9968 ;; This function is called by:
  9969 ;;		_main
  9970 ;; This function uses a non-reentrant model
  9971 ;;
  9972                           
  9973                           
  9974                           ;psect for function _readAnalog
  9975  00C4                     _readAnalog:	
  9976                           
  9977                           ;adc.c: 51: int16_t value;
  9978                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  9979                           
  9980                           ;incstack = 0
  9981                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9982  00C4  0020               	movlb	0	; select bank0
  9983  00C5  3526               	lslf	readAnalog@channel,w
  9984  00C6  3E50               	addlw	(low (_channels| (0+256)))& (0+255)
  9985  00C7  0086               	movwf	6
  9986  00C8  3001               	movlw	1	; select bank2/3
  9987  00C9  0087               	movwf	7
  9988  00CA  3F40               	moviw [0]fsr1
  9989  00CB  00BA               	movwf	readAnalog@analog_channel
  9990  00CC  3F41               	moviw [1]fsr1
  9991  00CD  00BB               	movwf	readAnalog@analog_channel+1
  9992                           
  9993                           ;adc.c: 55: value = ADCRead(analog_channel);
  9994  00CE  083A               	movf	readAnalog@analog_channel,w
  9995  00CF  3193  23C4  3180   	fcall	_ADCRead
  9996  00D2  0871               	movf	?_ADCRead+1,w
  9997  00D3  0020               	movlb	0	; select bank0
  9998  00D4  00BD               	movwf	readAnalog@value+1
  9999  00D5  0870               	movf	?_ADCRead,w
 10000  00D6  00BC               	movwf	readAnalog@value
 10001                           
 10002                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
 10003  00D7  0826               	movf	readAnalog@channel,w
 10004  00D8  00A8               	movwf	??_readAnalog
 10005  00D9  3001               	movlw	1
 10006  00DA                     u2995:	
 10007  00DA  35A8               	lslf	??_readAnalog,f
 10008  00DB  3EFF               	addlw	-1
 10009  00DC  1D03               	skipz
 10010  00DD  28DA               	goto	u2995
 10011  00DE  3528               	lslf	??_readAnalog,w
 10012  00DF  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10013  00E0  0086               	movwf	6
 10014  00E1  3001               	movlw	1	; select bank2/3
 10015  00E2  0087               	movwf	7
 10016  00E3  3F40               	moviw [0]fsr1
 10017  00E4  00A9               	movwf	??_readAnalog+1
 10018  00E5  3F41               	moviw [1]fsr1
 10019  00E6  00AA               	movwf	??_readAnalog+2
 10020  00E7  3F42               	moviw [2]fsr1
 10021  00E8  00AB               	movwf	??_readAnalog+3
 10022  00E9  3F43               	moviw [3]fsr1
 10023  00EA  00AC               	movwf	??_readAnalog+4
 10024  00EB  0021               	movlb	1	; select bank1
 10025  00EC  0864               	movf	(_sampleIndex+1)^(0+128),w
 10026  00ED  0020               	movlb	0	; select bank0
 10027  00EE  00AE               	movwf	??_readAnalog+6
 10028  00EF  0021               	movlb	1	; select bank1
 10029  00F0  0863               	movf	_sampleIndex^(0+128),w
 10030  00F1  0020               	movlb	0	; select bank0
 10031  00F2  00AD               	movwf	??_readAnalog+5
 10032  00F3  35AD               	lslf	??_readAnalog+5,f
 10033  00F4  0DAE               	rlf	??_readAnalog+6,f
 10034  00F5  0827               	movf	readAnalog@channel+1,w
 10035  00F6  00FA               	movwf	___wmul@multiplier+1
 10036  00F7  0826               	movf	readAnalog@channel,w
 10037  00F8  00F9               	movwf	___wmul@multiplier
 10038  00F9  305A               	movlw	90
 10039  00FA  00FB               	movwf	___wmul@multiplicand
 10040  00FB  3000               	movlw	0
 10041  00FC  00FC               	movwf	___wmul@multiplicand+1
 10042  00FD  3194  2432  3180   	fcall	___wmul
 10043  0100  3020               	movlw	32
 10044  0101  0020               	movlb	0	; select bank0
 10045  0102  00AF               	movwf	??_readAnalog+7
 10046  0103  3021               	movlw	33
 10047  0104  00B0               	movwf	??_readAnalog+8
 10048  0105  0879               	movf	?___wmul,w
 10049  0106  072F               	addwf	??_readAnalog+7,w
 10050  0107  00B1               	movwf	??_readAnalog+9
 10051  0108  087A               	movf	?___wmul+1,w
 10052  0109  3D30               	addwfc	??_readAnalog+8,w
 10053  010A  00B2               	movwf	??_readAnalog+10
 10054  010B  082D               	movf	??_readAnalog+5,w
 10055  010C  0731               	addwf	??_readAnalog+9,w
 10056  010D  0086               	movwf	6
 10057  010E  082E               	movf	??_readAnalog+6,w
 10058  010F  3D32               	addwfc	??_readAnalog+10,w
 10059  0110  0087               	movwf	7
 10060  0111  3F40               	moviw [0]fsr1
 10061  0112  00B3               	movwf	??_readAnalog+11
 10062  0113  3F41               	moviw [1]fsr1
 10063  0114  00B4               	movwf	??_readAnalog+12
 10064  0115  0833               	movf	??_readAnalog+11,w
 10065  0116  00B5               	movwf	??_readAnalog+13
 10066  0117  0834               	movf	??_readAnalog+12,w
 10067  0118  00B6               	movwf	??_readAnalog+14
 10068  0119  3000               	movlw	0
 10069  011A  1BB6               	btfsc	??_readAnalog+14,7
 10070  011B  30FF               	movlw	255
 10071  011C  00B7               	movwf	??_readAnalog+15
 10072  011D  00B8               	movwf	??_readAnalog+16
 10073  011E  09B5               	comf	??_readAnalog+13,f
 10074  011F  09B6               	comf	??_readAnalog+14,f
 10075  0120  09B7               	comf	??_readAnalog+15,f
 10076  0121  09B8               	comf	??_readAnalog+16,f
 10077  0122  0AB5               	incf	??_readAnalog+13,f
 10078  0123  1903               	skipnz
 10079  0124  0AB6               	incf	??_readAnalog+14,f
 10080  0125  1903               	skipnz
 10081  0126  0AB7               	incf	??_readAnalog+15,f
 10082  0127  1903               	skipnz
 10083  0128  0AB8               	incf	??_readAnalog+16,f
 10084  0129  0835               	movf	??_readAnalog+13,w
 10085  012A  07A9               	addwf	??_readAnalog+1,f
 10086  012B  0836               	movf	??_readAnalog+14,w
 10087  012C  3DAA               	addwfc	??_readAnalog+2,f
 10088  012D  0837               	movf	??_readAnalog+15,w
 10089  012E  3DAB               	addwfc	??_readAnalog+3,f
 10090  012F  0838               	movf	??_readAnalog+16,w
 10091  0130  3DAC               	addwfc	??_readAnalog+4,f
 10092  0131  0826               	movf	readAnalog@channel,w
 10093  0132  00B9               	movwf	??_readAnalog+17
 10094  0133  3001               	movlw	1
 10095  0134                     u3005:	
 10096  0134  35B9               	lslf	??_readAnalog+17,f
 10097  0135  3EFF               	addlw	-1
 10098  0136  1D03               	skipz
 10099  0137  2934               	goto	u3005
 10100  0138  3539               	lslf	??_readAnalog+17,w
 10101  0139  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10102  013A  0086               	movwf	6
 10103  013B  3001               	movlw	1	; select bank2/3
 10104  013C  0087               	movwf	7
 10105  013D  0829               	movf	??_readAnalog+1,w
 10106  013E  3FC0               	movwi [0]fsr1
 10107  013F  082A               	movf	??_readAnalog+2,w
 10108  0140  3FC1               	movwi [1]fsr1
 10109  0141  082B               	movf	??_readAnalog+3,w
 10110  0142  3FC2               	movwi [2]fsr1
 10111  0143  082C               	movf	??_readAnalog+4,w
 10112  0144  3FC3               	movwi [3]fsr1
 10113                           
 10114                           ;adc.c: 59: samples[channel][sampleIndex] = value;
 10115  0145  0021               	movlb	1	; select bank1
 10116  0146  0864               	movf	(_sampleIndex+1)^(0+128),w
 10117  0147  0020               	movlb	0	; select bank0
 10118  0148  00A9               	movwf	??_readAnalog+1
 10119  0149  0021               	movlb	1	; select bank1
 10120  014A  0863               	movf	_sampleIndex^(0+128),w
 10121  014B  0020               	movlb	0	; select bank0
 10122  014C  00A8               	movwf	??_readAnalog
 10123  014D  35A8               	lslf	??_readAnalog,f
 10124  014E  0DA9               	rlf	??_readAnalog+1,f
 10125  014F  0827               	movf	readAnalog@channel+1,w
 10126  0150  00FA               	movwf	___wmul@multiplier+1
 10127  0151  0826               	movf	readAnalog@channel,w
 10128  0152  00F9               	movwf	___wmul@multiplier
 10129  0153  305A               	movlw	90
 10130  0154  00FB               	movwf	___wmul@multiplicand
 10131  0155  3000               	movlw	0
 10132  0156  00FC               	movwf	___wmul@multiplicand+1
 10133  0157  3194  2432  3180   	fcall	___wmul
 10134  015A  3020               	movlw	32
 10135  015B  0020               	movlb	0	; select bank0
 10136  015C  00AA               	movwf	??_readAnalog+2
 10137  015D  3021               	movlw	33
 10138  015E  00AB               	movwf	??_readAnalog+3
 10139  015F  0879               	movf	?___wmul,w
 10140  0160  072A               	addwf	??_readAnalog+2,w
 10141  0161  00AC               	movwf	??_readAnalog+4
 10142  0162  087A               	movf	?___wmul+1,w
 10143  0163  3D2B               	addwfc	??_readAnalog+3,w
 10144  0164  00AD               	movwf	??_readAnalog+5
 10145  0165  0828               	movf	??_readAnalog,w
 10146  0166  072C               	addwf	??_readAnalog+4,w
 10147  0167  0086               	movwf	6
 10148  0168  0829               	movf	??_readAnalog+1,w
 10149  0169  3D2D               	addwfc	??_readAnalog+5,w
 10150  016A  0087               	movwf	7
 10151  016B  083C               	movf	readAnalog@value,w
 10152  016C  3FC0               	movwi [0]fsr1
 10153  016D  083D               	movf	readAnalog@value+1,w
 10154  016E  3FC1               	movwi [1]fsr1
 10155                           
 10156                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
 10157  016F  0826               	movf	readAnalog@channel,w
 10158  0170  00A8               	movwf	??_readAnalog
 10159  0171  3001               	movlw	1
 10160  0172                     u3015:	
 10161  0172  35A8               	lslf	??_readAnalog,f
 10162  0173  3EFF               	addlw	-1
 10163  0174  1D03               	skipz
 10164  0175  2972               	goto	u3015
 10165  0176  3528               	lslf	??_readAnalog,w
 10166  0177  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10167  0178  0086               	movwf	6
 10168  0179  3001               	movlw	1	; select bank2/3
 10169  017A  0087               	movwf	7
 10170  017B  3F40               	moviw [0]fsr1
 10171  017C  00A9               	movwf	??_readAnalog+1
 10172  017D  3F41               	moviw [1]fsr1
 10173  017E  00AA               	movwf	??_readAnalog+2
 10174  017F  3F42               	moviw [2]fsr1
 10175  0180  00AB               	movwf	??_readAnalog+3
 10176  0181  3F43               	moviw [3]fsr1
 10177  0182  00AC               	movwf	??_readAnalog+4
 10178  0183  0021               	movlb	1	; select bank1
 10179  0184  0864               	movf	(_sampleIndex+1)^(0+128),w
 10180  0185  0020               	movlb	0	; select bank0
 10181  0186  00AE               	movwf	??_readAnalog+6
 10182  0187  0021               	movlb	1	; select bank1
 10183  0188  0863               	movf	_sampleIndex^(0+128),w
 10184  0189  0020               	movlb	0	; select bank0
 10185  018A  00AD               	movwf	??_readAnalog+5
 10186  018B  35AD               	lslf	??_readAnalog+5,f
 10187  018C  0DAE               	rlf	??_readAnalog+6,f
 10188  018D  0827               	movf	readAnalog@channel+1,w
 10189  018E  00FA               	movwf	___wmul@multiplier+1
 10190  018F  0826               	movf	readAnalog@channel,w
 10191  0190  00F9               	movwf	___wmul@multiplier
 10192  0191  305A               	movlw	90
 10193  0192  00FB               	movwf	___wmul@multiplicand
 10194  0193  3000               	movlw	0
 10195  0194  00FC               	movwf	___wmul@multiplicand+1
 10196  0195  3194  2432  3180   	fcall	___wmul
 10197  0198  3020               	movlw	32
 10198  0199  0020               	movlb	0	; select bank0
 10199  019A  00AF               	movwf	??_readAnalog+7
 10200  019B  3021               	movlw	33
 10201  019C  00B0               	movwf	??_readAnalog+8
 10202  019D  0879               	movf	?___wmul,w
 10203  019E  072F               	addwf	??_readAnalog+7,w
 10204  019F  00B1               	movwf	??_readAnalog+9
 10205  01A0  087A               	movf	?___wmul+1,w
 10206  01A1  3D30               	addwfc	??_readAnalog+8,w
 10207  01A2  00B2               	movwf	??_readAnalog+10
 10208  01A3  082D               	movf	??_readAnalog+5,w
 10209  01A4  0731               	addwf	??_readAnalog+9,w
 10210  01A5  0086               	movwf	6
 10211  01A6  082E               	movf	??_readAnalog+6,w
 10212  01A7  3D32               	addwfc	??_readAnalog+10,w
 10213  01A8  0087               	movwf	7
 10214  01A9  3F40               	moviw [0]fsr1
 10215  01AA  00B3               	movwf	??_readAnalog+11
 10216  01AB  3F41               	moviw [1]fsr1
 10217  01AC  00B4               	movwf	??_readAnalog+12
 10218  01AD  0833               	movf	??_readAnalog+11,w
 10219  01AE  00B5               	movwf	??_readAnalog+13
 10220  01AF  0834               	movf	??_readAnalog+12,w
 10221  01B0  00B6               	movwf	??_readAnalog+14
 10222  01B1  3000               	movlw	0
 10223  01B2  1BB6               	btfsc	??_readAnalog+14,7
 10224  01B3  30FF               	movlw	255
 10225  01B4  00B7               	movwf	??_readAnalog+15
 10226  01B5  00B8               	movwf	??_readAnalog+16
 10227  01B6  0835               	movf	??_readAnalog+13,w
 10228  01B7  07A9               	addwf	??_readAnalog+1,f
 10229  01B8  0836               	movf	??_readAnalog+14,w
 10230  01B9  3DAA               	addwfc	??_readAnalog+2,f
 10231  01BA  0837               	movf	??_readAnalog+15,w
 10232  01BB  3DAB               	addwfc	??_readAnalog+3,f
 10233  01BC  0838               	movf	??_readAnalog+16,w
 10234  01BD  3DAC               	addwfc	??_readAnalog+4,f
 10235  01BE  0826               	movf	readAnalog@channel,w
 10236  01BF  00B9               	movwf	??_readAnalog+17
 10237  01C0  3001               	movlw	1
 10238  01C1                     u3025:	
 10239  01C1  35B9               	lslf	??_readAnalog+17,f
 10240  01C2  3EFF               	addlw	-1
 10241  01C3  1D03               	skipz
 10242  01C4  29C1               	goto	u3025
 10243  01C5  3539               	lslf	??_readAnalog+17,w
 10244  01C6  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10245  01C7  0086               	movwf	6
 10246  01C8  3001               	movlw	1	; select bank2/3
 10247  01C9  0087               	movwf	7
 10248  01CA  0829               	movf	??_readAnalog+1,w
 10249  01CB  3FC0               	movwi [0]fsr1
 10250  01CC  082A               	movf	??_readAnalog+2,w
 10251  01CD  3FC1               	movwi [1]fsr1
 10252  01CE  082B               	movf	??_readAnalog+3,w
 10253  01CF  3FC2               	movwi [2]fsr1
 10254  01D0  082C               	movf	??_readAnalog+4,w
 10255  01D1  3FC3               	movwi [3]fsr1
 10256                           
 10257                           ;adc.c: 63: if(channel>=(8-1))
 10258  01D2  3000               	movlw	0
 10259  01D3  0227               	subwf	readAnalog@channel+1,w
 10260  01D4  3007               	movlw	7
 10261  01D5  1903               	skipnz
 10262  01D6  0226               	subwf	readAnalog@channel,w
 10263  01D7  1C03               	skipc
 10264  01D8  29E7               	goto	l2809
 10265                           
 10266                           ;adc.c: 64: {
 10267                           ;adc.c: 65: sampleIndex+=1;
 10268  01D9  3001               	movlw	1
 10269  01DA  0021               	movlb	1	; select bank1
 10270  01DB  07E3               	addwf	_sampleIndex^(0+128),f
 10271  01DC  3000               	movlw	0
 10272  01DD  3DE4               	addwfc	(_sampleIndex+1)^(0+128),f
 10273                           
 10274                           ;adc.c: 66: if(sampleIndex >= 45)sampleIndex = 0;
 10275  01DE  3000               	movlw	0
 10276  01DF  0264               	subwf	(_sampleIndex+1)^(0+128),w
 10277  01E0  302D               	movlw	45
 10278  01E1  1903               	skipnz
 10279  01E2  0263               	subwf	_sampleIndex^(0+128),w
 10280  01E3  1C03               	skipc
 10281  01E4  29E7               	goto	l2809
 10282  01E5  01E3               	clrf	_sampleIndex^(0+128)
 10283  01E6  01E4               	clrf	(_sampleIndex+1)^(0+128)
 10284  01E7                     l2809:	
 10285                           
 10286                           ;adc.c: 67: }
 10287                           ;adc.c: 69: value = totals[channel]/45;
 10288  01E7  3000               	movlw	0
 10289  01E8  00F3               	movwf	___aldiv@divisor+3
 10290  01E9  3000               	movlw	0
 10291  01EA  00F2               	movwf	___aldiv@divisor+2
 10292  01EB  3000               	movlw	0
 10293  01EC  00F1               	movwf	___aldiv@divisor+1
 10294  01ED  302D               	movlw	45
 10295  01EE  00F0               	movwf	___aldiv@divisor
 10296  01EF  0020               	movlb	0	; select bank0
 10297  01F0  0826               	movf	readAnalog@channel,w
 10298  01F1  00A8               	movwf	??_readAnalog
 10299  01F2  3001               	movlw	1
 10300  01F3                     u3055:	
 10301  01F3  35A8               	lslf	??_readAnalog,f
 10302  01F4  3EFF               	addlw	-1
 10303  01F5  1D03               	skipz
 10304  01F6  29F3               	goto	u3055
 10305  01F7  3528               	lslf	??_readAnalog,w
 10306  01F8  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10307  01F9  0086               	movwf	6
 10308  01FA  3001               	movlw	1	; select bank2/3
 10309  01FB  0087               	movwf	7
 10310  01FC  3F40               	moviw [0]fsr1
 10311  01FD  00F4               	movwf	___aldiv@dividend
 10312  01FE  3F41               	moviw [1]fsr1
 10313  01FF  00F5               	movwf	___aldiv@dividend+1
 10314  0200  3F42               	moviw [2]fsr1
 10315  0201  00F6               	movwf	___aldiv@dividend+2
 10316  0202  3F43               	moviw [3]fsr1
 10317  0203  00F7               	movwf	___aldiv@dividend+3
 10318  0204  318A  2250         	fcall	___aldiv
 10319  0206  0871               	movf	?___aldiv+1,w
 10320  0207  0020               	movlb	0	; select bank0
 10321  0208  00BD               	movwf	readAnalog@value+1
 10322  0209  0870               	movf	?___aldiv,w
 10323  020A  00BC               	movwf	readAnalog@value
 10324                           
 10325                           ;adc.c: 71: return value;
 10326  020B  083D               	movf	readAnalog@value+1,w
 10327  020C  00A7               	movwf	?_readAnalog+1
 10328  020D  083C               	movf	readAnalog@value,w
 10329  020E  00A6               	movwf	?_readAnalog
 10330  020F  0008               	return
 10331  0210                     __end_of_readAnalog:	
 10332                           
 10333                           	psect	text11
 10334  0A50                     __ptext11:	
 10335 ;; *************** function ___aldiv *****************
 10336 ;; Defined at:
 10337 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;  divisor         4    0[COMMON] long 
 10340 ;;  dividend        4    4[COMMON] long 
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;  quotient        4    2[BANK0 ] long 
 10343 ;;  sign            1    1[BANK0 ] unsigned char 
 10344 ;;  counter         1    0[BANK0 ] unsigned char 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  4    0[COMMON] long 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10354 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;Total ram usage:       15 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		_readAnalog
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           
 10368                           ;psect for function ___aldiv
 10369  0A50                     ___aldiv:	
 10370                           
 10371                           ;incstack = 0
 10372                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10373  0A50  0020               	movlb	0	; select bank0
 10374  0A51  01A1               	clrf	___aldiv@sign
 10375  0A52  1FF3               	btfss	___aldiv@divisor+3,7
 10376  0A53  2A61               	goto	l630
 10377  0A54  09F0               	comf	___aldiv@divisor,f
 10378  0A55  09F1               	comf	___aldiv@divisor+1,f
 10379  0A56  09F2               	comf	___aldiv@divisor+2,f
 10380  0A57  09F3               	comf	___aldiv@divisor+3,f
 10381  0A58  0AF0               	incf	___aldiv@divisor,f
 10382  0A59  1903               	skipnz
 10383  0A5A  0AF1               	incf	___aldiv@divisor+1,f
 10384  0A5B  1903               	skipnz
 10385  0A5C  0AF2               	incf	___aldiv@divisor+2,f
 10386  0A5D  1903               	skipnz
 10387  0A5E  0AF3               	incf	___aldiv@divisor+3,f
 10388  0A5F  01A1               	clrf	___aldiv@sign
 10389  0A60  0AA1               	incf	___aldiv@sign,f
 10390  0A61                     l630:	
 10391  0A61  1FF7               	btfss	___aldiv@dividend+3,7
 10392  0A62  2A72               	goto	l2607
 10393  0A63  09F4               	comf	___aldiv@dividend,f
 10394  0A64  09F5               	comf	___aldiv@dividend+1,f
 10395  0A65  09F6               	comf	___aldiv@dividend+2,f
 10396  0A66  09F7               	comf	___aldiv@dividend+3,f
 10397  0A67  0AF4               	incf	___aldiv@dividend,f
 10398  0A68  1903               	skipnz
 10399  0A69  0AF5               	incf	___aldiv@dividend+1,f
 10400  0A6A  1903               	skipnz
 10401  0A6B  0AF6               	incf	___aldiv@dividend+2,f
 10402  0A6C  1903               	skipnz
 10403  0A6D  0AF7               	incf	___aldiv@dividend+3,f
 10404  0A6E  3001               	movlw	1
 10405  0A6F  00F8               	movwf	??___aldiv
 10406  0A70  0878               	movf	??___aldiv,w
 10407  0A71  06A1               	xorwf	___aldiv@sign,f
 10408  0A72                     l2607:	
 10409  0A72  3000               	movlw	0
 10410  0A73  00A5               	movwf	___aldiv@quotient+3
 10411  0A74  3000               	movlw	0
 10412  0A75  00A4               	movwf	___aldiv@quotient+2
 10413  0A76  3000               	movlw	0
 10414  0A77  00A3               	movwf	___aldiv@quotient+1
 10415  0A78  3000               	movlw	0
 10416  0A79  00A2               	movwf	___aldiv@quotient
 10417  0A7A  0873               	movf	___aldiv@divisor+3,w
 10418  0A7B  0472               	iorwf	___aldiv@divisor+2,w
 10419  0A7C  0471               	iorwf	___aldiv@divisor+1,w
 10420  0A7D  0470               	iorwf	___aldiv@divisor,w
 10421  0A7E  1903               	skipnz
 10422  0A7F  2ABB               	goto	l2629
 10423  0A80  01A0               	clrf	___aldiv@counter
 10424  0A81  0AA0               	incf	___aldiv@counter,f
 10425  0A82                     l2615:	
 10426  0A82  1BF3               	btfsc	___aldiv@divisor+3,7
 10427  0A83  2A90               	goto	l2617
 10428  0A84  3001               	movlw	1
 10429  0A85                     u2575:	
 10430  0A85  35F0               	lslf	___aldiv@divisor,f
 10431  0A86  0DF1               	rlf	___aldiv@divisor+1,f
 10432  0A87  0DF2               	rlf	___aldiv@divisor+2,f
 10433  0A88  0DF3               	rlf	___aldiv@divisor+3,f
 10434  0A89  0B89               	decfsz	9,f
 10435  0A8A  2A85               	goto	u2575
 10436  0A8B  3001               	movlw	1
 10437  0A8C  00F8               	movwf	??___aldiv
 10438  0A8D  0878               	movf	??___aldiv,w
 10439  0A8E  07A0               	addwf	___aldiv@counter,f
 10440  0A8F  2A82               	goto	l2615
 10441  0A90                     l2617:	
 10442  0A90  3001               	movlw	1
 10443  0A91                     u2595:	
 10444  0A91  35A2               	lslf	___aldiv@quotient,f
 10445  0A92  0DA3               	rlf	___aldiv@quotient+1,f
 10446  0A93  0DA4               	rlf	___aldiv@quotient+2,f
 10447  0A94  0DA5               	rlf	___aldiv@quotient+3,f
 10448  0A95  0B89               	decfsz	9,f
 10449  0A96  2A91               	goto	u2595
 10450  0A97  0873               	movf	___aldiv@divisor+3,w
 10451  0A98  0277               	subwf	___aldiv@dividend+3,w
 10452  0A99  1D03               	skipz
 10453  0A9A  2AA5               	goto	u2605
 10454  0A9B  0872               	movf	___aldiv@divisor+2,w
 10455  0A9C  0276               	subwf	___aldiv@dividend+2,w
 10456  0A9D  1D03               	skipz
 10457  0A9E  2AA5               	goto	u2605
 10458  0A9F  0871               	movf	___aldiv@divisor+1,w
 10459  0AA0  0275               	subwf	___aldiv@dividend+1,w
 10460  0AA1  1D03               	skipz
 10461  0AA2  2AA5               	goto	u2605
 10462  0AA3  0870               	movf	___aldiv@divisor,w
 10463  0AA4  0274               	subwf	___aldiv@dividend,w
 10464  0AA5                     u2605:	
 10465  0AA5  1C03               	skipc
 10466  0AA6  2AB0               	goto	l2625
 10467  0AA7  0870               	movf	___aldiv@divisor,w
 10468  0AA8  02F4               	subwf	___aldiv@dividend,f
 10469  0AA9  0871               	movf	___aldiv@divisor+1,w
 10470  0AAA  3BF5               	subwfb	___aldiv@dividend+1,f
 10471  0AAB  0872               	movf	___aldiv@divisor+2,w
 10472  0AAC  3BF6               	subwfb	___aldiv@dividend+2,f
 10473  0AAD  0873               	movf	___aldiv@divisor+3,w
 10474  0AAE  3BF7               	subwfb	___aldiv@dividend+3,f
 10475  0AAF  1422               	bsf	___aldiv@quotient,0
 10476  0AB0                     l2625:	
 10477  0AB0  3001               	movlw	1
 10478  0AB1                     u2615:	
 10479  0AB1  36F3               	lsrf	___aldiv@divisor+3,f
 10480  0AB2  0CF2               	rrf	___aldiv@divisor+2,f
 10481  0AB3  0CF1               	rrf	___aldiv@divisor+1,f
 10482  0AB4  0CF0               	rrf	___aldiv@divisor,f
 10483  0AB5  0B89               	decfsz	9,f
 10484  0AB6  2AB1               	goto	u2615
 10485  0AB7  3001               	movlw	1
 10486  0AB8  02A0               	subwf	___aldiv@counter,f
 10487  0AB9  1D03               	btfss	3,2
 10488  0ABA  2A90               	goto	l2617
 10489  0ABB                     l2629:	
 10490  0ABB  0821               	movf	___aldiv@sign,w
 10491  0ABC  1903               	btfsc	3,2
 10492  0ABD  2AC9               	goto	l2633
 10493  0ABE  09A2               	comf	___aldiv@quotient,f
 10494  0ABF  09A3               	comf	___aldiv@quotient+1,f
 10495  0AC0  09A4               	comf	___aldiv@quotient+2,f
 10496  0AC1  09A5               	comf	___aldiv@quotient+3,f
 10497  0AC2  0AA2               	incf	___aldiv@quotient,f
 10498  0AC3  1903               	skipnz
 10499  0AC4  0AA3               	incf	___aldiv@quotient+1,f
 10500  0AC5  1903               	skipnz
 10501  0AC6  0AA4               	incf	___aldiv@quotient+2,f
 10502  0AC7  1903               	skipnz
 10503  0AC8  0AA5               	incf	___aldiv@quotient+3,f
 10504  0AC9                     l2633:	
 10505  0AC9  0825               	movf	___aldiv@quotient+3,w
 10506  0ACA  00F3               	movwf	?___aldiv+3
 10507  0ACB  0824               	movf	___aldiv@quotient+2,w
 10508  0ACC  00F2               	movwf	?___aldiv+2
 10509  0ACD  0823               	movf	___aldiv@quotient+1,w
 10510  0ACE  00F1               	movwf	?___aldiv+1
 10511  0ACF  0822               	movf	___aldiv@quotient,w
 10512  0AD0  00F0               	movwf	?___aldiv
 10513  0AD1  0008               	return
 10514  0AD2                     __end_of___aldiv:	
 10515                           
 10516                           	psect	text12
 10517  13C4                     __ptext12:	
 10518 ;; *************** function _ADCRead *****************
 10519 ;; Defined at:
 10520 ;;		line 19 in file "adc.c"
 10521 ;; Parameters:    Size  Location     Type
 10522 ;;  channel         1    wreg     enum E14259
 10523 ;; Auto vars:     Size  Location     Type
 10524 ;;  channel         1    3[COMMON] enum E14259
 10525 ;; Return value:  Size  Location     Type
 10526 ;;                  2    0[COMMON] int 
 10527 ;; Registers used:
 10528 ;;		wreg
 10529 ;; Tracked objects:
 10530 ;;		On entry : 0/0
 10531 ;;		On exit  : 0/0
 10532 ;;		Unchanged: 0/0
 10533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10534 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;Total ram usage:        4 bytes
 10539 ;; Hardware stack levels used:    1
 10540 ;; This function calls:
 10541 ;;		Nothing
 10542 ;; This function is called by:
 10543 ;;		_readAnalog
 10544 ;;		_readButton
 10545 ;;		_main
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           
 10550                           ;psect for function _ADCRead
 10551  13C4                     _ADCRead:	
 10552                           
 10553                           ;incstack = 0
 10554                           ; Regs used in _ADCRead: [wreg]
 10555                           ;ADCRead@channel stored from wreg
 10556  13C4  00F3               	movwf	ADCRead@channel
 10557                           
 10558                           ;adc.c: 21: ADPCH = channel_VSS;
 10559  13C5  303C               	movlw	60
 10560  13C6  0021               	movlb	1	; select bank1
 10561  13C7  009E               	movwf	30	;volatile
 10562                           
 10563                           ;adc.c: 23: ADCON0bits.ADON = 1;
 10564  13C8  1793               	bsf	19,7	;volatile
 10565                           
 10566                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
 10567  13C9  1313               	bcf	19,6	;volatile
 10568                           
 10569                           ;adc.c: 27: ADCON0bits.ADGO = 1;
 10570  13CA  1413               	bsf	19,0	;volatile
 10571  13CB                     l57:	
 10572                           ;adc.c: 30: {
 10573                           
 10574                           ;adc.c: 29: while(ADCON0bits.ADGO)
 10575                           
 10576  13CB  1813               	btfsc	19,0	;volatile
 10577  13CC  2BCB               	goto	l57
 10578                           
 10579                           ;adc.c: 31: }
 10580                           ;adc.c: 33: ADPCH = channel;
 10581  13CD  0873               	movf	ADCRead@channel,w
 10582  13CE  009E               	movwf	30	;volatile
 10583                           
 10584                           ;adc.c: 35: ADCON0bits.ADON = 1;
 10585  13CF  1793               	bsf	19,7	;volatile
 10586                           
 10587                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
 10588  13D0  1313               	bcf	19,6	;volatile
 10589                           
 10590                           ;adc.c: 39: ADCON0bits.ADGO = 1;
 10591  13D1  1413               	bsf	19,0	;volatile
 10592  13D2                     l60:	
 10593                           ;adc.c: 42: {
 10594                           
 10595                           ;adc.c: 41: while(ADCON0bits.ADGO)
 10596                           
 10597  13D2  1813               	btfsc	19,0	;volatile
 10598  13D3  2BD2               	goto	l60
 10599                           
 10600                           ;adc.c: 43: }
 10601                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
 10602  13D4  080D               	movf	13,w	;volatile
 10603  13D5  00F1               	movwf	?_ADCRead+1
 10604  13D6  080C               	movf	12,w	;volatile
 10605  13D7  00F0               	movwf	?_ADCRead
 10606  13D8  0008               	return
 10607  13D9                     __end_of_ADCRead:	
 10608                           
 10609                           	psect	text13
 10610  167D                     __ptext13:	
 10611 ;; *************** function _cc_cv_mode *****************
 10612 ;; Defined at:
 10613 ;;		line 88 in file "battery_charger.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;		None
 10616 ;; Auto vars:     Size  Location     Type
 10617 ;;		None
 10618 ;; Return value:  Size  Location     Type
 10619 ;;                  1    wreg      void 
 10620 ;; Registers used:
 10621 ;;		wreg, status,2, status,0
 10622 ;; Tracked objects:
 10623 ;;		On entry : 0/0
 10624 ;;		On exit  : 0/0
 10625 ;;		Unchanged: 0/0
 10626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10631 ;;Total ram usage:        1 bytes
 10632 ;; Hardware stack levels used:    1
 10633 ;; This function calls:
 10634 ;;		Nothing
 10635 ;; This function is called by:
 10636 ;;		_main
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640                           
 10641                           ;psect for function _cc_cv_mode
 10642  167D                     _cc_cv_mode:	
 10643                           
 10644                           ;battery_charger.c: 90: if(voltage[1] > Vref)
 10645                           
 10646                           ;incstack = 0
 10647                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 10648  167D  0021               	movlb	1	; select bank1
 10649  167E  0868               	movf	(_Vref+1)^(0+128),w
 10650  167F  3A80               	xorlw	128
 10651  1680  00F0               	movwf	??_cc_cv_mode
 10652  1681  0851               	movf	((_voltage+1)^(0+128)+2),w
 10653  1682  3A80               	xorlw	128
 10654  1683  0270               	subwf	??_cc_cv_mode,w
 10655  1684  1D03               	skipz
 10656  1685  2E88               	goto	u3155
 10657  1686  0850               	movf	(_voltage^(0+128)+2),w
 10658  1687  0267               	subwf	_Vref^(0+128),w
 10659  1688                     u3155:	
 10660  1688  1803               	skipnc
 10661  1689  2E96               	goto	l2855
 10662                           
 10663                           ;battery_charger.c: 91: {
 10664                           ;battery_charger.c: 92: if(cc_cv)
 10665  168A  0021               	movlb	1	; select bank1
 10666  168B  0866               	movf	_cc_cv^(0+128),w
 10667  168C  1903               	btfsc	3,2
 10668  168D  2E91               	goto	l2851
 10669                           
 10670                           ;battery_charger.c: 93: {
 10671                           ;battery_charger.c: 94: cc_cv-=1;
 10672  168E  3001               	movlw	1
 10673  168F  02E6               	subwf	_cc_cv^(0+128),f
 10674                           
 10675                           ;battery_charger.c: 95: }
 10676  1690  0008               	return
 10677  1691                     l2851:	
 10678                           
 10679                           ;battery_charger.c: 96: else
 10680                           ;battery_charger.c: 97: {
 10681                           ;battery_charger.c: 98: if(Imode0)
 10682  1691  086F               	movf	_Imode0^(0+128),w
 10683  1692  1903               	btfsc	3,2
 10684  1693  0008               	return
 10685                           
 10686                           ;battery_charger.c: 99: {
 10687                           ;battery_charger.c: 100: Imode0 = 0;
 10688  1694  01EF               	clrf	_Imode0^(0+128)
 10689                           
 10690                           ;battery_charger.c: 101: }
 10691                           ;battery_charger.c: 102: }
 10692                           ;battery_charger.c: 103: }
 10693  1695  0008               	return
 10694  1696                     l2855:	
 10695                           
 10696                           ;battery_charger.c: 104: else if(current[1] > Iref)
 10697  1696  0021               	movlb	1	; select bank1
 10698  1697  086A               	movf	(_Iref+1)^(0+128),w
 10699  1698  3A80               	xorlw	128
 10700  1699  00F0               	movwf	??_cc_cv_mode
 10701  169A  0849               	movf	((_current+1)^(0+128)+2),w
 10702  169B  3A80               	xorlw	128
 10703  169C  0270               	subwf	??_cc_cv_mode,w
 10704  169D  1D03               	skipz
 10705  169E  2EA1               	goto	u3185
 10706  169F  0848               	movf	(_current^(0+128)+2),w
 10707  16A0  0269               	subwf	_Iref^(0+128),w
 10708  16A1                     u3185:	
 10709  16A1  1803               	skipnc
 10710  16A2  0008               	return
 10711                           
 10712                           ;battery_charger.c: 105: {
 10713                           ;battery_charger.c: 106: if(!Imode0)
 10714  16A3  0021               	movlb	1	; select bank1
 10715  16A4  086F               	movf	_Imode0^(0+128),w
 10716  16A5  1D03               	btfss	3,2
 10717  16A6  0008               	return
 10718                           
 10719                           ;battery_charger.c: 107: {
 10720                           ;battery_charger.c: 108: if(battery_state == FLOAT)
 10721  16A7  3005               	movlw	5
 10722  16A8  066D               	xorwf	_battery_state^(0+128),w
 10723  16A9  1D03               	btfss	3,2
 10724  16AA  2EB7               	goto	l2863
 10725                           
 10726                           ;battery_charger.c: 109: {
 10727                           ;battery_charger.c: 110: battery_state=CHARGE;
 10728  16AB  3004               	movlw	4
 10729  16AC  00F0               	movwf	??_cc_cv_mode
 10730  16AD  0870               	movf	??_cc_cv_mode,w
 10731  16AE  00ED               	movwf	_battery_state^(0+128)
 10732                           
 10733                           ;battery_charger.c: 111: { Vref = 1425; };
 10734  16AF  3091               	movlw	145
 10735  16B0  00E7               	movwf	_Vref^(0+128)
 10736  16B1  3005               	movlw	5
 10737  16B2  00E8               	movwf	(_Vref^(0+128)+1)
 10738                           
 10739                           ;battery_charger.c: 112: { Iref = 40; };
 10740  16B3  3028               	movlw	40
 10741  16B4  00E9               	movwf	_Iref^(0+128)
 10742  16B5  3000               	movlw	0
 10743  16B6  00EA               	movwf	(_Iref^(0+128)+1)
 10744  16B7                     l2863:	
 10745                           
 10746                           ;battery_charger.c: 113: }
 10747                           ;battery_charger.c: 114: Imode0 = 1;
 10748  16B7  01EF               	clrf	_Imode0^(0+128)
 10749  16B8  0AEF               	incf	_Imode0^(0+128),f
 10750                           
 10751                           ;battery_charger.c: 115: cc_cv = 30;
 10752  16B9  301E               	movlw	30
 10753  16BA  00F0               	movwf	??_cc_cv_mode
 10754  16BB  0870               	movf	??_cc_cv_mode,w
 10755  16BC  00E6               	movwf	_cc_cv^(0+128)
 10756  16BD  0008               	return
 10757  16BE                     __end_of_cc_cv_mode:	
 10758                           
 10759                           	psect	text14
 10760  1703                     __ptext14:	
 10761 ;; *************** function _calculateCurrent1 *****************
 10762 ;; Defined at:
 10763 ;;		line 335 in file "main.c"
 10764 ;; Parameters:    Size  Location     Type
 10765 ;;		None
 10766 ;; Auto vars:     Size  Location     Type
 10767 ;;		None
 10768 ;; Return value:  Size  Location     Type
 10769 ;;                  1    wreg      void 
 10770 ;; Registers used:
 10771 ;;		wreg, status,2, status,0, pclath, cstack
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/0
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10779 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10780 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10781 ;;Total ram usage:        3 bytes
 10782 ;; Hardware stack levels used:    1
 10783 ;; Hardware stack levels required when called:    2
 10784 ;; This function calls:
 10785 ;;		___awtoft
 10786 ;;		___ftdiv
 10787 ;;		___fttol
 10788 ;; This function is called by:
 10789 ;;		_main
 10790 ;; This function uses a non-reentrant model
 10791 ;;
 10792                           
 10793                           
 10794                           ;psect for function _calculateCurrent1
 10795  1703                     _calculateCurrent1:	
 10796                           
 10797                           ;main.c: 337: if(analogs[5]-578<=0)
 10798                           
 10799                           ;incstack = 0
 10800                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10801  1703  0022               	movlb	2	; select bank2
 10802  1704  084A               	movf	(_analogs^(0+256)+10),w
 10803  1705  3EBE               	addlw	190
 10804  1706  0020               	movlb	0	; select bank0
 10805  1707  00BE               	movwf	??_calculateCurrent1
 10806  1708  30FD               	movlw	253
 10807  1709  0022               	movlb	2	; select bank2
 10808  170A  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10809  170B  0020               	movlb	0	; select bank0
 10810  170C  00BF               	movwf	??_calculateCurrent1+1
 10811  170D  083F               	movf	??_calculateCurrent1+1,w
 10812  170E  3A80               	xorlw	128
 10813  170F  00C0               	movwf	??_calculateCurrent1+2
 10814  1710  3080               	movlw	128
 10815  1711  0240               	subwf	??_calculateCurrent1+2,w
 10816  1712  1D03               	skipz
 10817  1713  2F16               	goto	u3445
 10818  1714  3001               	movlw	1
 10819  1715  023E               	subwf	??_calculateCurrent1,w
 10820  1716                     u3445:	
 10821  1716  1803               	skipnc
 10822  1717  2F1C               	goto	l3011
 10823                           
 10824                           ;main.c: 338: {
 10825                           ;main.c: 339: current[1]=0;
 10826  1718  0021               	movlb	1	; select bank1
 10827  1719  01C8               	clrf	(_current^(0+128)+2)
 10828  171A  01C9               	clrf	((_current+1)^(0+128)+2)
 10829                           
 10830                           ;main.c: 340: }
 10831  171B  0008               	return
 10832  171C                     l3011:	
 10833                           
 10834                           ;main.c: 341: else
 10835                           ;main.c: 342: {
 10836                           ;main.c: 343: current[1]=(int16_t)((analogs[5]-578)/3.2323);
 10837  171C  0022               	movlb	2	; select bank2
 10838  171D  084A               	movf	(_analogs^(0+256)+10),w
 10839  171E  3EBE               	addlw	190
 10840  171F  00F8               	movwf	___awtoft@c
 10841  1720  30FD               	movlw	253
 10842  1721  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10843  1722  00F9               	movwf	___awtoft@c+1
 10844  1723  3194  24CA  3197   	fcall	___awtoft
 10845  1726  0878               	movf	?___awtoft,w
 10846  1727  0020               	movlb	0	; select bank0
 10847  1728  00A3               	movwf	___ftdiv@f1
 10848  1729  0879               	movf	?___awtoft+1,w
 10849  172A  00A4               	movwf	___ftdiv@f1+1
 10850  172B  087A               	movf	?___awtoft+2,w
 10851  172C  00A5               	movwf	___ftdiv@f1+2
 10852  172D  30DE               	movlw	222
 10853  172E  00A0               	movwf	___ftdiv@f2
 10854  172F  304E               	movlw	78
 10855  1730  00A1               	movwf	___ftdiv@f2+1
 10856  1731  3040               	movlw	64
 10857  1732  00A2               	movwf	___ftdiv@f2+2
 10858  1733  318B  23E0  3197   	fcall	___ftdiv
 10859  1736  0020               	movlb	0	; select bank0
 10860  1737  0820               	movf	?___ftdiv,w
 10861  1738  00B0               	movwf	___fttol@f1
 10862  1739  0821               	movf	?___ftdiv+1,w
 10863  173A  00B1               	movwf	___fttol@f1+1
 10864  173B  0822               	movf	?___ftdiv+2,w
 10865  173C  00B2               	movwf	___fttol@f1+2
 10866  173D  318A  22D2         	fcall	___fttol
 10867  173F  0020               	movlb	0	; select bank0
 10868  1740  0831               	movf	?___fttol+1,w
 10869  1741  0021               	movlb	1	; select bank1
 10870  1742  00C9               	movwf	((_current+1)^(0+128)+2)
 10871  1743  0020               	movlb	0	; select bank0
 10872  1744  0830               	movf	?___fttol,w
 10873  1745  0021               	movlb	1	; select bank1
 10874  1746  00C8               	movwf	(_current^(0+128)+2)
 10875  1747  0008               	return
 10876  1748                     __end_of_calculateCurrent1:	
 10877                           
 10878                           	psect	text15
 10879  16BE                     __ptext15:	
 10880 ;; *************** function _calculateCurrent0 *****************
 10881 ;; Defined at:
 10882 ;;		line 323 in file "main.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;		None
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;		None
 10887 ;; Return value:  Size  Location     Type
 10888 ;;                  1    wreg      void 
 10889 ;; Registers used:
 10890 ;;		wreg, status,2, status,0, pclath, cstack
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10899 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10900 ;;Total ram usage:        3 bytes
 10901 ;; Hardware stack levels used:    1
 10902 ;; Hardware stack levels required when called:    2
 10903 ;; This function calls:
 10904 ;;		___awtoft
 10905 ;;		___ftdiv
 10906 ;;		___fttol
 10907 ;; This function is called by:
 10908 ;;		_main
 10909 ;; This function uses a non-reentrant model
 10910 ;;
 10911                           
 10912                           
 10913                           ;psect for function _calculateCurrent0
 10914  16BE                     _calculateCurrent0:	
 10915                           
 10916                           ;main.c: 325: if(analogs[4]-589<=0)
 10917                           
 10918                           ;incstack = 0
 10919                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 10920  16BE  0022               	movlb	2	; select bank2
 10921  16BF  0848               	movf	(_analogs^(0+256)+8),w
 10922  16C0  3EB3               	addlw	179
 10923  16C1  0020               	movlb	0	; select bank0
 10924  16C2  00BE               	movwf	??_calculateCurrent0
 10925  16C3  30FD               	movlw	253
 10926  16C4  0022               	movlb	2	; select bank2
 10927  16C5  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10928  16C6  0020               	movlb	0	; select bank0
 10929  16C7  00BF               	movwf	??_calculateCurrent0+1
 10930  16C8  083F               	movf	??_calculateCurrent0+1,w
 10931  16C9  3A80               	xorlw	128
 10932  16CA  00C0               	movwf	??_calculateCurrent0+2
 10933  16CB  3080               	movlw	128
 10934  16CC  0240               	subwf	??_calculateCurrent0+2,w
 10935  16CD  1D03               	skipz
 10936  16CE  2ED1               	goto	u3435
 10937  16CF  3001               	movlw	1
 10938  16D0  023E               	subwf	??_calculateCurrent0,w
 10939  16D1                     u3435:	
 10940  16D1  1803               	skipnc
 10941  16D2  2ED7               	goto	l3005
 10942                           
 10943                           ;main.c: 326: {
 10944                           ;main.c: 327: current[0]=0;
 10945  16D3  0021               	movlb	1	; select bank1
 10946  16D4  01C6               	clrf	_current^(0+128)
 10947  16D5  01C7               	clrf	(_current+1)^(0+128)
 10948                           
 10949                           ;main.c: 328: }
 10950  16D6  0008               	return
 10951  16D7                     l3005:	
 10952                           
 10953                           ;main.c: 329: else
 10954                           ;main.c: 330: {
 10955                           ;main.c: 331: current[0]=(int16_t)((analogs[4]-589)/1.3165);
 10956  16D7  0022               	movlb	2	; select bank2
 10957  16D8  0848               	movf	(_analogs^(0+256)+8),w
 10958  16D9  3EB3               	addlw	179
 10959  16DA  00F8               	movwf	___awtoft@c
 10960  16DB  30FD               	movlw	253
 10961  16DC  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10962  16DD  00F9               	movwf	___awtoft@c+1
 10963  16DE  3194  24CA  3196   	fcall	___awtoft
 10964  16E1  0878               	movf	?___awtoft,w
 10965  16E2  0020               	movlb	0	; select bank0
 10966  16E3  00A3               	movwf	___ftdiv@f1
 10967  16E4  0879               	movf	?___awtoft+1,w
 10968  16E5  00A4               	movwf	___ftdiv@f1+1
 10969  16E6  087A               	movf	?___awtoft+2,w
 10970  16E7  00A5               	movwf	___ftdiv@f1+2
 10971  16E8  3083               	movlw	131
 10972  16E9  00A0               	movwf	___ftdiv@f2
 10973  16EA  30A8               	movlw	168
 10974  16EB  00A1               	movwf	___ftdiv@f2+1
 10975  16EC  303F               	movlw	63
 10976  16ED  00A2               	movwf	___ftdiv@f2+2
 10977  16EE  318B  23E0  3196   	fcall	___ftdiv
 10978  16F1  0020               	movlb	0	; select bank0
 10979  16F2  0820               	movf	?___ftdiv,w
 10980  16F3  00B0               	movwf	___fttol@f1
 10981  16F4  0821               	movf	?___ftdiv+1,w
 10982  16F5  00B1               	movwf	___fttol@f1+1
 10983  16F6  0822               	movf	?___ftdiv+2,w
 10984  16F7  00B2               	movwf	___fttol@f1+2
 10985  16F8  318A  22D2         	fcall	___fttol
 10986  16FA  0020               	movlb	0	; select bank0
 10987  16FB  0831               	movf	?___fttol+1,w
 10988  16FC  0021               	movlb	1	; select bank1
 10989  16FD  00C7               	movwf	(_current+1)^(0+128)
 10990  16FE  0020               	movlb	0	; select bank0
 10991  16FF  0830               	movf	?___fttol,w
 10992  1700  0021               	movlb	1	; select bank1
 10993  1701  00C6               	movwf	_current^(0+128)
 10994  1702  0008               	return
 10995  1703                     __end_of_calculateCurrent0:	
 10996                           
 10997                           	psect	text16
 10998  0AD2                     __ptext16:	
 10999 ;; *************** function ___fttol *****************
 11000 ;; Defined at:
 11001 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;  f1              3   16[BANK0 ] float 
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;  lval            4   25[BANK0 ] unsigned long 
 11006 ;;  exp1            1   29[BANK0 ] unsigned char 
 11007 ;;  sign1           1   24[BANK0 ] unsigned char 
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  4   16[BANK0 ] long 
 11010 ;; Registers used:
 11011 ;;		wreg, status,2, status,0
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11017 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;Total ram usage:       14 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; This function calls:
 11024 ;;		Nothing
 11025 ;; This function is called by:
 11026 ;;		_tempCalc
 11027 ;;		_main
 11028 ;;		_calculateCurrent0
 11029 ;;		_calculateCurrent1
 11030 ;;		_calculateCurrent2
 11031 ;;		_calculateCurrent3
 11032 ;; This function uses a non-reentrant model
 11033 ;;
 11034                           
 11035                           
 11036                           ;psect for function ___fttol
 11037  0AD2                     ___fttol:	
 11038                           
 11039                           ;incstack = 0
 11040                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 11041  0AD2  0020               	movlb	0	; select bank0
 11042  0AD3  0830               	movf	___fttol@f1,w
 11043  0AD4  00B4               	movwf	??___fttol
 11044  0AD5  0831               	movf	___fttol@f1+1,w
 11045  0AD6  00B5               	movwf	??___fttol+1
 11046  0AD7  0832               	movf	___fttol@f1+2,w
 11047  0AD8  00B6               	movwf	??___fttol+2
 11048  0AD9  1003               	clrc
 11049  0ADA  0D35               	rlf	??___fttol+1,w
 11050  0ADB  0D36               	rlf	??___fttol+2,w
 11051  0ADC  00B7               	movwf	??___fttol+3
 11052  0ADD  0837               	movf	??___fttol+3,w
 11053  0ADE  00BD               	movwf	___fttol@exp1
 11054  0ADF  083D               	movf	___fttol@exp1,w
 11055  0AE0  1D03               	btfss	3,2
 11056  0AE1  2AEB               	goto	l2737
 11057  0AE2  3000               	movlw	0
 11058  0AE3  00B3               	movwf	?___fttol+3
 11059  0AE4  3000               	movlw	0
 11060  0AE5  00B2               	movwf	?___fttol+2
 11061  0AE6  3000               	movlw	0
 11062  0AE7  00B1               	movwf	?___fttol+1
 11063  0AE8  3000               	movlw	0
 11064  0AE9  00B0               	movwf	?___fttol
 11065  0AEA  0008               	return
 11066  0AEB                     l2737:	
 11067  0AEB  0830               	movf	___fttol@f1,w
 11068  0AEC  00B4               	movwf	??___fttol
 11069  0AED  0831               	movf	___fttol@f1+1,w
 11070  0AEE  00B5               	movwf	??___fttol+1
 11071  0AEF  0832               	movf	___fttol@f1+2,w
 11072  0AF0  00B6               	movwf	??___fttol+2
 11073  0AF1  3017               	movlw	23
 11074  0AF2                     u2845:	
 11075  0AF2  36B6               	lsrf	??___fttol+2,f
 11076  0AF3  0CB5               	rrf	??___fttol+1,f
 11077  0AF4  0CB4               	rrf	??___fttol,f
 11078  0AF5  0B89               	decfsz	9,f
 11079  0AF6  2AF2               	goto	u2845
 11080  0AF7  0834               	movf	??___fttol,w
 11081  0AF8  00B7               	movwf	??___fttol+3
 11082  0AF9  0837               	movf	??___fttol+3,w
 11083  0AFA  00B8               	movwf	___fttol@sign1
 11084  0AFB  17B1               	bsf	___fttol@f1+1,7
 11085  0AFC  30FF               	movlw	255
 11086  0AFD  05B0               	andwf	___fttol@f1,f
 11087  0AFE  30FF               	movlw	255
 11088  0AFF  05B1               	andwf	___fttol@f1+1,f
 11089  0B00  3000               	movlw	0
 11090  0B01  05B2               	andwf	___fttol@f1+2,f
 11091  0B02  0830               	movf	___fttol@f1,w
 11092  0B03  00B9               	movwf	___fttol@lval
 11093  0B04  0831               	movf	___fttol@f1+1,w
 11094  0B05  00BA               	movwf	___fttol@lval+1
 11095  0B06  0832               	movf	___fttol@f1+2,w
 11096  0B07  00BB               	movwf	___fttol@lval+2
 11097  0B08  01BC               	clrf	___fttol@lval+3
 11098  0B09  308E               	movlw	142
 11099  0B0A  02BD               	subwf	___fttol@exp1,f
 11100  0B0B  1FBD               	btfss	___fttol@exp1,7
 11101  0B0C  2B29               	goto	l2757
 11102  0B0D  083D               	movf	___fttol@exp1,w
 11103  0B0E  3A80               	xorlw	128
 11104  0B0F  3E8F               	addlw	143
 11105  0B10  1803               	skipnc
 11106  0B11  2B1B               	goto	l2755
 11107  0B12  3000               	movlw	0
 11108  0B13  00B3               	movwf	?___fttol+3
 11109  0B14  3000               	movlw	0
 11110  0B15  00B2               	movwf	?___fttol+2
 11111  0B16  3000               	movlw	0
 11112  0B17  00B1               	movwf	?___fttol+1
 11113  0B18  3000               	movlw	0
 11114  0B19  00B0               	movwf	?___fttol
 11115  0B1A  0008               	return
 11116  0B1B                     l2755:	
 11117  0B1B  3001               	movlw	1
 11118  0B1C                     u2875:	
 11119  0B1C  36BC               	lsrf	___fttol@lval+3,f
 11120  0B1D  0CBB               	rrf	___fttol@lval+2,f
 11121  0B1E  0CBA               	rrf	___fttol@lval+1,f
 11122  0B1F  0CB9               	rrf	___fttol@lval,f
 11123  0B20  0B89               	decfsz	9,f
 11124  0B21  2B1C               	goto	u2875
 11125  0B22  3001               	movlw	1
 11126  0B23  00B4               	movwf	??___fttol
 11127  0B24  0834               	movf	??___fttol,w
 11128  0B25  07BD               	addwf	___fttol@exp1,f
 11129  0B26  1903               	btfsc	3,2
 11130  0B27  2B42               	goto	l2765
 11131  0B28  2B1B               	goto	l2755
 11132  0B29                     l2757:	
 11133  0B29  3018               	movlw	24
 11134  0B2A  023D               	subwf	___fttol@exp1,w
 11135  0B2B  1C03               	skipc
 11136  0B2C  2B3F               	goto	l827
 11137  0B2D  3000               	movlw	0
 11138  0B2E  00B3               	movwf	?___fttol+3
 11139  0B2F  3000               	movlw	0
 11140  0B30  00B2               	movwf	?___fttol+2
 11141  0B31  3000               	movlw	0
 11142  0B32  00B1               	movwf	?___fttol+1
 11143  0B33  3000               	movlw	0
 11144  0B34  00B0               	movwf	?___fttol
 11145  0B35  0008               	return
 11146  0B36                     l2763:	
 11147  0B36  3001               	movlw	1
 11148  0B37                     u2905:	
 11149  0B37  35B9               	lslf	___fttol@lval,f
 11150  0B38  0DBA               	rlf	___fttol@lval+1,f
 11151  0B39  0DBB               	rlf	___fttol@lval+2,f
 11152  0B3A  0DBC               	rlf	___fttol@lval+3,f
 11153  0B3B  0B89               	decfsz	9,f
 11154  0B3C  2B37               	goto	u2905
 11155  0B3D  3001               	movlw	1
 11156  0B3E  02BD               	subwf	___fttol@exp1,f
 11157  0B3F                     l827:	
 11158  0B3F  083D               	movf	___fttol@exp1,w
 11159  0B40  1D03               	btfss	3,2
 11160  0B41  2B36               	goto	l2763
 11161  0B42                     l2765:	
 11162  0B42  0838               	movf	___fttol@sign1,w
 11163  0B43  1903               	btfsc	3,2
 11164  0B44  2B50               	goto	l2769
 11165  0B45  09B9               	comf	___fttol@lval,f
 11166  0B46  09BA               	comf	___fttol@lval+1,f
 11167  0B47  09BB               	comf	___fttol@lval+2,f
 11168  0B48  09BC               	comf	___fttol@lval+3,f
 11169  0B49  0AB9               	incf	___fttol@lval,f
 11170  0B4A  1903               	skipnz
 11171  0B4B  0ABA               	incf	___fttol@lval+1,f
 11172  0B4C  1903               	skipnz
 11173  0B4D  0ABB               	incf	___fttol@lval+2,f
 11174  0B4E  1903               	skipnz
 11175  0B4F  0ABC               	incf	___fttol@lval+3,f
 11176  0B50                     l2769:	
 11177  0B50  083C               	movf	___fttol@lval+3,w
 11178  0B51  00B3               	movwf	?___fttol+3
 11179  0B52  083B               	movf	___fttol@lval+2,w
 11180  0B53  00B2               	movwf	?___fttol+2
 11181  0B54  083A               	movf	___fttol@lval+1,w
 11182  0B55  00B1               	movwf	?___fttol+1
 11183  0B56  0839               	movf	___fttol@lval,w
 11184  0B57  00B0               	movwf	?___fttol
 11185  0B58  0008               	return
 11186  0B59                     __end_of___fttol:	
 11187                           
 11188                           	psect	text17
 11189  0BE0                     __ptext17:	
 11190 ;; *************** function ___ftdiv *****************
 11191 ;; Defined at:
 11192 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;  f2              3    0[BANK0 ] float 
 11195 ;;  f1              3    3[BANK0 ] float 
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;  f3              3   11[BANK0 ] float 
 11198 ;;  sign            1   15[BANK0 ] unsigned char 
 11199 ;;  exp             1   14[BANK0 ] unsigned char 
 11200 ;;  cntr            1   10[BANK0 ] unsigned char 
 11201 ;; Return value:  Size  Location     Type
 11202 ;;                  3    0[BANK0 ] float 
 11203 ;; Registers used:
 11204 ;;		wreg, status,2, status,0, pclath, cstack
 11205 ;; Tracked objects:
 11206 ;;		On entry : 0/0
 11207 ;;		On exit  : 0/0
 11208 ;;		Unchanged: 0/0
 11209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11210 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11211 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11212 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11213 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11214 ;;Total ram usage:       16 bytes
 11215 ;; Hardware stack levels used:    1
 11216 ;; Hardware stack levels required when called:    1
 11217 ;; This function calls:
 11218 ;;		___ftpack
 11219 ;; This function is called by:
 11220 ;;		_tempCalc
 11221 ;;		_main
 11222 ;;		_calculateCurrent0
 11223 ;;		_calculateCurrent1
 11224 ;;		_calculateCurrent2
 11225 ;;		_calculateCurrent3
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229                           
 11230                           ;psect for function ___ftdiv
 11231  0BE0                     ___ftdiv:	
 11232                           
 11233                           ;incstack = 0
 11234                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11235  0BE0  0020               	movlb	0	; select bank0
 11236  0BE1  0823               	movf	___ftdiv@f1,w
 11237  0BE2  00A6               	movwf	??___ftdiv
 11238  0BE3  0824               	movf	___ftdiv@f1+1,w
 11239  0BE4  00A7               	movwf	??___ftdiv+1
 11240  0BE5  0825               	movf	___ftdiv@f1+2,w
 11241  0BE6  00A8               	movwf	??___ftdiv+2
 11242  0BE7  1003               	clrc
 11243  0BE8  0D27               	rlf	??___ftdiv+1,w
 11244  0BE9  0D28               	rlf	??___ftdiv+2,w
 11245  0BEA  00A9               	movwf	??___ftdiv+3
 11246  0BEB  0829               	movf	??___ftdiv+3,w
 11247  0BEC  00AE               	movwf	___ftdiv@exp
 11248  0BED  082E               	movf	___ftdiv@exp,w
 11249  0BEE  1D03               	btfss	3,2
 11250  0BEF  2BF7               	goto	l2687
 11251  0BF0  3000               	movlw	0
 11252  0BF1  00A0               	movwf	?___ftdiv
 11253  0BF2  3000               	movlw	0
 11254  0BF3  00A1               	movwf	?___ftdiv+1
 11255  0BF4  3000               	movlw	0
 11256  0BF5  00A2               	movwf	?___ftdiv+2
 11257  0BF6  0008               	return
 11258  0BF7                     l2687:	
 11259  0BF7  0820               	movf	___ftdiv@f2,w
 11260  0BF8  00A6               	movwf	??___ftdiv
 11261  0BF9  0821               	movf	___ftdiv@f2+1,w
 11262  0BFA  00A7               	movwf	??___ftdiv+1
 11263  0BFB  0822               	movf	___ftdiv@f2+2,w
 11264  0BFC  00A8               	movwf	??___ftdiv+2
 11265  0BFD  1003               	clrc
 11266  0BFE  0D27               	rlf	??___ftdiv+1,w
 11267  0BFF  0D28               	rlf	??___ftdiv+2,w
 11268  0C00  00A9               	movwf	??___ftdiv+3
 11269  0C01  0829               	movf	??___ftdiv+3,w
 11270  0C02  00AF               	movwf	___ftdiv@sign
 11271  0C03  082F               	movf	___ftdiv@sign,w
 11272  0C04  1D03               	btfss	3,2
 11273  0C05  2C0D               	goto	l2693
 11274  0C06  3000               	movlw	0
 11275  0C07  00A0               	movwf	?___ftdiv
 11276  0C08  3000               	movlw	0
 11277  0C09  00A1               	movwf	?___ftdiv+1
 11278  0C0A  3000               	movlw	0
 11279  0C0B  00A2               	movwf	?___ftdiv+2
 11280  0C0C  0008               	return
 11281  0C0D                     l2693:	
 11282  0C0D  3000               	movlw	0
 11283  0C0E  00AB               	movwf	___ftdiv@f3
 11284  0C0F  3000               	movlw	0
 11285  0C10  00AC               	movwf	___ftdiv@f3+1
 11286  0C11  3000               	movlw	0
 11287  0C12  00AD               	movwf	___ftdiv@f3+2
 11288  0C13  3089               	movlw	137
 11289  0C14  072F               	addwf	___ftdiv@sign,w
 11290  0C15  00A6               	movwf	??___ftdiv
 11291  0C16  0826               	movf	??___ftdiv,w
 11292  0C17  02AE               	subwf	___ftdiv@exp,f
 11293  0C18  0823               	movf	___ftdiv@f1,w
 11294  0C19  00A6               	movwf	??___ftdiv
 11295  0C1A  0824               	movf	___ftdiv@f1+1,w
 11296  0C1B  00A7               	movwf	??___ftdiv+1
 11297  0C1C  0825               	movf	___ftdiv@f1+2,w
 11298  0C1D  00A8               	movwf	??___ftdiv+2
 11299  0C1E  3010               	movlw	16
 11300  0C1F                     u2765:	
 11301  0C1F  36A8               	lsrf	??___ftdiv+2,f
 11302  0C20  0CA7               	rrf	??___ftdiv+1,f
 11303  0C21  0CA6               	rrf	??___ftdiv,f
 11304  0C22  0B89               	decfsz	9,f
 11305  0C23  2C1F               	goto	u2765
 11306  0C24  0826               	movf	??___ftdiv,w
 11307  0C25  00A9               	movwf	??___ftdiv+3
 11308  0C26  0829               	movf	??___ftdiv+3,w
 11309  0C27  00AF               	movwf	___ftdiv@sign
 11310  0C28  0820               	movf	___ftdiv@f2,w
 11311  0C29  00A6               	movwf	??___ftdiv
 11312  0C2A  0821               	movf	___ftdiv@f2+1,w
 11313  0C2B  00A7               	movwf	??___ftdiv+1
 11314  0C2C  0822               	movf	___ftdiv@f2+2,w
 11315  0C2D  00A8               	movwf	??___ftdiv+2
 11316  0C2E  3010               	movlw	16
 11317  0C2F                     u2775:	
 11318  0C2F  36A8               	lsrf	??___ftdiv+2,f
 11319  0C30  0CA7               	rrf	??___ftdiv+1,f
 11320  0C31  0CA6               	rrf	??___ftdiv,f
 11321  0C32  0B89               	decfsz	9,f
 11322  0C33  2C2F               	goto	u2775
 11323  0C34  0826               	movf	??___ftdiv,w
 11324  0C35  00A9               	movwf	??___ftdiv+3
 11325  0C36  0829               	movf	??___ftdiv+3,w
 11326  0C37  06AF               	xorwf	___ftdiv@sign,f
 11327  0C38  3080               	movlw	128
 11328  0C39  00A6               	movwf	??___ftdiv
 11329  0C3A  0826               	movf	??___ftdiv,w
 11330  0C3B  05AF               	andwf	___ftdiv@sign,f
 11331  0C3C  17A4               	bsf	___ftdiv@f1+1,7
 11332  0C3D  30FF               	movlw	255
 11333  0C3E  05A3               	andwf	___ftdiv@f1,f
 11334  0C3F  30FF               	movlw	255
 11335  0C40  05A4               	andwf	___ftdiv@f1+1,f
 11336  0C41  3000               	movlw	0
 11337  0C42  05A5               	andwf	___ftdiv@f1+2,f
 11338  0C43  17A1               	bsf	___ftdiv@f2+1,7
 11339  0C44  30FF               	movlw	255
 11340  0C45  05A0               	andwf	___ftdiv@f2,f
 11341  0C46  30FF               	movlw	255
 11342  0C47  05A1               	andwf	___ftdiv@f2+1,f
 11343  0C48  3000               	movlw	0
 11344  0C49  05A2               	andwf	___ftdiv@f2+2,f
 11345  0C4A  3018               	movlw	24
 11346  0C4B  00A6               	movwf	??___ftdiv
 11347  0C4C  0826               	movf	??___ftdiv,w
 11348  0C4D  00AA               	movwf	___ftdiv@cntr
 11349  0C4E                     l2707:	
 11350  0C4E  3001               	movlw	1
 11351  0C4F                     u2785:	
 11352  0C4F  35AB               	lslf	___ftdiv@f3,f
 11353  0C50  0DAC               	rlf	___ftdiv@f3+1,f
 11354  0C51  0DAD               	rlf	___ftdiv@f3+2,f
 11355  0C52  0B89               	decfsz	9,f
 11356  0C53  2C4F               	goto	u2785
 11357  0C54  0822               	movf	___ftdiv@f2+2,w
 11358  0C55  0225               	subwf	___ftdiv@f1+2,w
 11359  0C56  1D03               	skipz
 11360  0C57  2C5E               	goto	u2795
 11361  0C58  0821               	movf	___ftdiv@f2+1,w
 11362  0C59  0224               	subwf	___ftdiv@f1+1,w
 11363  0C5A  1D03               	skipz
 11364  0C5B  2C5E               	goto	u2795
 11365  0C5C  0820               	movf	___ftdiv@f2,w
 11366  0C5D  0223               	subwf	___ftdiv@f1,w
 11367  0C5E                     u2795:	
 11368  0C5E  1C03               	skipc
 11369  0C5F  2C67               	goto	l2715
 11370  0C60  0820               	movf	___ftdiv@f2,w
 11371  0C61  02A3               	subwf	___ftdiv@f1,f
 11372  0C62  0821               	movf	___ftdiv@f2+1,w
 11373  0C63  3BA4               	subwfb	___ftdiv@f1+1,f
 11374  0C64  0822               	movf	___ftdiv@f2+2,w
 11375  0C65  3BA5               	subwfb	___ftdiv@f1+2,f
 11376  0C66  142B               	bsf	___ftdiv@f3,0
 11377  0C67                     l2715:	
 11378  0C67  3001               	movlw	1
 11379  0C68                     u2805:	
 11380  0C68  35A3               	lslf	___ftdiv@f1,f
 11381  0C69  0DA4               	rlf	___ftdiv@f1+1,f
 11382  0C6A  0DA5               	rlf	___ftdiv@f1+2,f
 11383  0C6B  0B89               	decfsz	9,f
 11384  0C6C  2C68               	goto	u2805
 11385  0C6D  3001               	movlw	1
 11386  0C6E  02AA               	subwf	___ftdiv@cntr,f
 11387  0C6F  1D03               	btfss	3,2
 11388  0C70  2C4E               	goto	l2707
 11389  0C71  082B               	movf	___ftdiv@f3,w
 11390  0C72  00F0               	movwf	___ftpack@arg
 11391  0C73  082C               	movf	___ftdiv@f3+1,w
 11392  0C74  00F1               	movwf	___ftpack@arg+1
 11393  0C75  082D               	movf	___ftdiv@f3+2,w
 11394  0C76  00F2               	movwf	___ftpack@arg+2
 11395  0C77  082E               	movf	___ftdiv@exp,w
 11396  0C78  00A6               	movwf	??___ftdiv
 11397  0C79  0826               	movf	??___ftdiv,w
 11398  0C7A  00F3               	movwf	___ftpack@exp
 11399  0C7B  082F               	movf	___ftdiv@sign,w
 11400  0C7C  00A7               	movwf	??___ftdiv+1
 11401  0C7D  0827               	movf	??___ftdiv+1,w
 11402  0C7E  00F4               	movwf	___ftpack@sign
 11403  0C7F  3189  2184         	fcall	___ftpack
 11404  0C81  0870               	movf	?___ftpack,w
 11405  0C82  0020               	movlb	0	; select bank0
 11406  0C83  00A0               	movwf	?___ftdiv
 11407  0C84  0871               	movf	?___ftpack+1,w
 11408  0C85  00A1               	movwf	?___ftdiv+1
 11409  0C86  0872               	movf	?___ftpack+2,w
 11410  0C87  00A2               	movwf	?___ftdiv+2
 11411  0C88  0008               	return
 11412  0C89                     __end_of___ftdiv:	
 11413                           
 11414                           	psect	text18
 11415  14CA                     __ptext18:	
 11416 ;; *************** function ___awtoft *****************
 11417 ;; Defined at:
 11418 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11419 ;; Parameters:    Size  Location     Type
 11420 ;;  c               2    8[COMMON] int 
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;  sign            1   13[COMMON] unsigned char 
 11423 ;; Return value:  Size  Location     Type
 11424 ;;                  3    8[COMMON] float 
 11425 ;; Registers used:
 11426 ;;		wreg, status,2, status,0, pclath, cstack
 11427 ;; Tracked objects:
 11428 ;;		On entry : 0/0
 11429 ;;		On exit  : 0/0
 11430 ;;		Unchanged: 0/0
 11431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11432 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11435 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11436 ;;Total ram usage:        6 bytes
 11437 ;; Hardware stack levels used:    1
 11438 ;; Hardware stack levels required when called:    1
 11439 ;; This function calls:
 11440 ;;		___ftpack
 11441 ;; This function is called by:
 11442 ;;		_tempCalc
 11443 ;;		_main
 11444 ;;		_calculateCurrent0
 11445 ;;		_calculateCurrent1
 11446 ;;		_log
 11447 ;;		_calculateCurrent2
 11448 ;;		_calculateCurrent3
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           
 11453                           ;psect for function ___awtoft
 11454  14CA                     ___awtoft:	
 11455                           
 11456                           ;incstack = 0
 11457                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11458  14CA  01FD               	clrf	___awtoft@sign
 11459  14CB  1FF9               	btfss	___awtoft@c+1,7
 11460  14CC  2CD4               	goto	l2351
 11461  14CD  09F8               	comf	___awtoft@c,f
 11462  14CE  09F9               	comf	___awtoft@c+1,f
 11463  14CF  0AF8               	incf	___awtoft@c,f
 11464  14D0  1903               	skipnz
 11465  14D1  0AF9               	incf	___awtoft@c+1,f
 11466  14D2  01FD               	clrf	___awtoft@sign
 11467  14D3  0AFD               	incf	___awtoft@sign,f
 11468  14D4                     l2351:	
 11469  14D4  0878               	movf	___awtoft@c,w
 11470  14D5  00F0               	movwf	___ftpack@arg
 11471  14D6  0879               	movf	___awtoft@c+1,w
 11472  14D7  00F1               	movwf	___ftpack@arg+1
 11473  14D8  01F2               	clrf	___ftpack@arg+2
 11474  14D9  308E               	movlw	142
 11475  14DA  00FB               	movwf	??___awtoft
 11476  14DB  087B               	movf	??___awtoft,w
 11477  14DC  00F3               	movwf	___ftpack@exp
 11478  14DD  087D               	movf	___awtoft@sign,w
 11479  14DE  00FC               	movwf	??___awtoft+1
 11480  14DF  087C               	movf	??___awtoft+1,w
 11481  14E0  00F4               	movwf	___ftpack@sign
 11482  14E1  3189  2184         	fcall	___ftpack
 11483  14E3  0870               	movf	?___ftpack,w
 11484  14E4  00F8               	movwf	?___awtoft
 11485  14E5  0871               	movf	?___ftpack+1,w
 11486  14E6  00F9               	movwf	?___awtoft+1
 11487  14E7  0872               	movf	?___ftpack+2,w
 11488  14E8  00FA               	movwf	?___awtoft+2
 11489  14E9  0008               	return
 11490  14EA                     __end_of___awtoft:	
 11491                           
 11492                           	psect	text19
 11493  0984                     __ptext19:	
 11494 ;; *************** function ___ftpack *****************
 11495 ;; Defined at:
 11496 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;  arg             3    0[COMMON] unsigned um
 11499 ;;  exp             1    3[COMMON] unsigned char 
 11500 ;;  sign            1    4[COMMON] unsigned char 
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;		None
 11503 ;; Return value:  Size  Location     Type
 11504 ;;                  3    0[COMMON] float 
 11505 ;; Registers used:
 11506 ;;		wreg, status,2, status,0
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11512 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11514 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11515 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11516 ;;Total ram usage:        8 bytes
 11517 ;; Hardware stack levels used:    1
 11518 ;; This function calls:
 11519 ;;		Nothing
 11520 ;; This function is called by:
 11521 ;;		___awtoft
 11522 ;;		___ftadd
 11523 ;;		___ftdiv
 11524 ;;		___ftmul
 11525 ;; This function uses a non-reentrant model
 11526 ;;
 11527                           
 11528                           
 11529                           ;psect for function ___ftpack
 11530  0984                     ___ftpack:	
 11531                           
 11532                           ;incstack = 0
 11533                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11534  0984  0873               	movf	___ftpack@exp,w
 11535  0985  1903               	btfsc	3,2
 11536  0986  298C               	goto	l2157
 11537  0987  0872               	movf	___ftpack@arg+2,w
 11538  0988  0471               	iorwf	___ftpack@arg+1,w
 11539  0989  0470               	iorwf	___ftpack@arg,w
 11540  098A  1D03               	skipz
 11541  098B  299D               	goto	l2163
 11542  098C                     l2157:	
 11543  098C  3000               	movlw	0
 11544  098D  00F0               	movwf	?___ftpack
 11545  098E  3000               	movlw	0
 11546  098F  00F1               	movwf	?___ftpack+1
 11547  0990  3000               	movlw	0
 11548  0991  00F2               	movwf	?___ftpack+2
 11549  0992  0008               	return
 11550  0993                     l2161:	
 11551  0993  3001               	movlw	1
 11552  0994  00F5               	movwf	??___ftpack
 11553  0995  0875               	movf	??___ftpack,w
 11554  0996  07F3               	addwf	___ftpack@exp,f
 11555  0997  3001               	movlw	1
 11556  0998                     u1875:	
 11557  0998  36F2               	lsrf	___ftpack@arg+2,f
 11558  0999  0CF1               	rrf	___ftpack@arg+1,f
 11559  099A  0CF0               	rrf	___ftpack@arg,f
 11560  099B  0B89               	decfsz	9,f
 11561  099C  2998               	goto	u1875
 11562  099D                     l2163:	
 11563  099D  30FE               	movlw	254
 11564  099E  0572               	andwf	___ftpack@arg+2,w
 11565  099F  1903               	btfsc	3,2
 11566  09A0  29B6               	goto	l736
 11567  09A1  2993               	goto	l2161
 11568  09A2                     l2165:	
 11569  09A2  3001               	movlw	1
 11570  09A3  00F5               	movwf	??___ftpack
 11571  09A4  0875               	movf	??___ftpack,w
 11572  09A5  07F3               	addwf	___ftpack@exp,f
 11573  09A6  3001               	movlw	1
 11574  09A7  07F0               	addwf	___ftpack@arg,f
 11575  09A8  3000               	movlw	0
 11576  09A9  1803               	skipnc
 11577  09AA  3001               	movlw	1
 11578  09AB  07F1               	addwf	___ftpack@arg+1,f
 11579  09AC  3000               	movlw	0
 11580  09AD  1803               	skipnc
 11581  09AE  3001               	movlw	1
 11582  09AF  07F2               	addwf	___ftpack@arg+2,f
 11583  09B0  3001               	movlw	1
 11584  09B1                     u1895:	
 11585  09B1  36F2               	lsrf	___ftpack@arg+2,f
 11586  09B2  0CF1               	rrf	___ftpack@arg+1,f
 11587  09B3  0CF0               	rrf	___ftpack@arg,f
 11588  09B4  0B89               	decfsz	9,f
 11589  09B5  29B1               	goto	u1895
 11590  09B6                     l736:	
 11591  09B6  30FF               	movlw	255
 11592  09B7  0572               	andwf	___ftpack@arg+2,w
 11593  09B8  1903               	btfsc	3,2
 11594  09B9  29C3               	goto	l2173
 11595  09BA  29A2               	goto	l2165
 11596  09BB                     l2171:	
 11597  09BB  3001               	movlw	1
 11598  09BC  02F3               	subwf	___ftpack@exp,f
 11599  09BD  3001               	movlw	1
 11600  09BE                     u1915:	
 11601  09BE  35F0               	lslf	___ftpack@arg,f
 11602  09BF  0DF1               	rlf	___ftpack@arg+1,f
 11603  09C0  0DF2               	rlf	___ftpack@arg+2,f
 11604  09C1  0B89               	decfsz	9,f
 11605  09C2  29BE               	goto	u1915
 11606  09C3                     l2173:	
 11607  09C3  1BF1               	btfsc	___ftpack@arg+1,7
 11608  09C4  29C9               	goto	l743
 11609  09C5  3002               	movlw	2
 11610  09C6  0273               	subwf	___ftpack@exp,w
 11611  09C7  1803               	skipnc
 11612  09C8  29BB               	goto	l2171
 11613  09C9                     l743:	
 11614  09C9  1873               	btfsc	___ftpack@exp,0
 11615  09CA  29D1               	goto	l744
 11616  09CB  30FF               	movlw	255
 11617  09CC  05F0               	andwf	___ftpack@arg,f
 11618  09CD  307F               	movlw	127
 11619  09CE  05F1               	andwf	___ftpack@arg+1,f
 11620  09CF  30FF               	movlw	255
 11621  09D0  05F2               	andwf	___ftpack@arg+2,f
 11622  09D1                     l744:	
 11623  09D1  1003               	clrc
 11624  09D2  0CF3               	rrf	___ftpack@exp,f
 11625  09D3  0873               	movf	___ftpack@exp,w
 11626  09D4  00F5               	movwf	??___ftpack
 11627  09D5  01F6               	clrf	??___ftpack+1
 11628  09D6  01F7               	clrf	??___ftpack+2
 11629  09D7  3010               	movlw	16
 11630  09D8                     u1955:	
 11631  09D8  35F5               	lslf	??___ftpack,f
 11632  09D9  0DF6               	rlf	??___ftpack+1,f
 11633  09DA  0DF7               	rlf	??___ftpack+2,f
 11634  09DB  0B89               	decfsz	9,f
 11635  09DC  29D8               	goto	u1955
 11636  09DD  0875               	movf	??___ftpack,w
 11637  09DE  04F0               	iorwf	___ftpack@arg,f
 11638  09DF  0876               	movf	??___ftpack+1,w
 11639  09E0  04F1               	iorwf	___ftpack@arg+1,f
 11640  09E1  0877               	movf	??___ftpack+2,w
 11641  09E2  04F2               	iorwf	___ftpack@arg+2,f
 11642  09E3  0874               	movf	___ftpack@sign,w
 11643  09E4  1903               	btfsc	3,2
 11644  09E5  0008               	return
 11645  09E6  17F2               	bsf	___ftpack@arg+2,7
 11646  09E7  0008               	return
 11647  09E8                     __end_of___ftpack:	
 11648                           
 11649                           	psect	text20
 11650  1561                     __ptext20:	
 11651 ;; *************** function _SYSTEM_Initialize *****************
 11652 ;; Defined at:
 11653 ;;		line 71 in file "system.c"
 11654 ;; Parameters:    Size  Location     Type
 11655 ;;		None
 11656 ;; Auto vars:     Size  Location     Type
 11657 ;;		None
 11658 ;; Return value:  Size  Location     Type
 11659 ;;                  1    wreg      void 
 11660 ;; Registers used:
 11661 ;;		wreg, status,2, status,0, pclath, cstack
 11662 ;; Tracked objects:
 11663 ;;		On entry : 0/0
 11664 ;;		On exit  : 0/0
 11665 ;;		Unchanged: 0/0
 11666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11669 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11671 ;;Total ram usage:        2 bytes
 11672 ;; Hardware stack levels used:    1
 11673 ;; Hardware stack levels required when called:    3
 11674 ;; This function calls:
 11675 ;;		_ADC_Initialize
 11676 ;;		_Init_Battery_State_Machine
 11677 ;;		_LCDClear
 11678 ;;		_LCDInit
 11679 ;;		_OSCILLATOR_Initialize
 11680 ;;		_PIN_MANAGER_Initialize
 11681 ;;		_PWM_Initialize
 11682 ;;		_TMR2_Initialize
 11683 ;;		_TMR4_Initialize
 11684 ;; This function is called by:
 11685 ;;		_main
 11686 ;; This function uses a non-reentrant model
 11687 ;;
 11688                           
 11689                           
 11690                           ;psect for function _SYSTEM_Initialize
 11691  1561                     _SYSTEM_Initialize:	
 11692                           
 11693                           ;system.c: 73: PIN_MANAGER_Initialize();
 11694                           
 11695                           ;incstack = 0
 11696                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11697  1561  3195  2595  3195   	fcall	_PIN_MANAGER_Initialize
 11698                           
 11699                           ;system.c: 74: OSCILLATOR_Initialize();
 11700  1564  3193  2364  3195   	fcall	_OSCILLATOR_Initialize
 11701                           
 11702                           ;system.c: 76: ADC_Initialize();
 11703  1567  3194  248C  3195   	fcall	_ADC_Initialize
 11704                           
 11705                           ;system.c: 77: PWM_Initialize();
 11706  156A  3194  24AB  3195   	fcall	_PWM_Initialize
 11707                           
 11708                           ;system.c: 79: TMR2_Initialize();
 11709  156D  3193  2385  3195   	fcall	_TMR2_Initialize
 11710                           
 11711                           ;system.c: 80: TMR4_Initialize();
 11712  1570  3193  2393  3195   	fcall	_TMR4_Initialize
 11713                           
 11714                           ;system.c: 81: Init_Battery_State_Machine();
 11715  1573  3194  2450  3195   	fcall	_Init_Battery_State_Machine
 11716                           
 11717                           ;system.c: 82: LCDInit();
 11718  1576  3195  25CC  3195   	fcall	_LCDInit
 11719                           
 11720                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 11721  1579  3009               	movlw	9
 11722  157A  00FC               	movwf	??_SYSTEM_Initialize+1
 11723  157B  301E               	movlw	30
 11724  157C  00FB               	movwf	??_SYSTEM_Initialize
 11725  157D  30E4               	movlw	228
 11726  157E                     u3707:	
 11727  157E  0B89               	decfsz	9,f
 11728  157F  2D7E               	goto	u3707
 11729  1580  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11730  1581  2D7E               	goto	u3707
 11731  1582  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11732  1583  2D7E               	goto	u3707
 11733  1584  3200               	nop2
 11734                           
 11735                           ;system.c: 84: LCDClear();
 11736  1585  3195  250F  3195   	fcall	_LCDClear
 11737                           
 11738                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11739  1588  3009               	movlw	9
 11740  1589  00FC               	movwf	??_SYSTEM_Initialize+1
 11741  158A  301E               	movlw	30
 11742  158B  00FB               	movwf	??_SYSTEM_Initialize
 11743  158C  30E4               	movlw	228
 11744  158D                     u3717:	
 11745  158D  0B89               	decfsz	9,f
 11746  158E  2D8D               	goto	u3717
 11747  158F  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11748  1590  2D8D               	goto	u3717
 11749  1591  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11750  1592  2D8D               	goto	u3717
 11751  1593  3200               	nop2
 11752  1594  0008               	return
 11753  1595                     __end_of_SYSTEM_Initialize:	
 11754                           
 11755                           	psect	text21
 11756  1393                     __ptext21:	
 11757 ;; *************** function _TMR4_Initialize *****************
 11758 ;; Defined at:
 11759 ;;		line 25 in file "tmr.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;		None
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;		None
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      void 
 11766 ;; Registers used:
 11767 ;;		wreg, status,2
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11777 ;;Total ram usage:        0 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; This function calls:
 11780 ;;		Nothing
 11781 ;; This function is called by:
 11782 ;;		_SYSTEM_Initialize
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786                           
 11787                           ;psect for function _TMR4_Initialize
 11788  1393                     _TMR4_Initialize:	
 11789                           
 11790                           ;tmr.c: 27: T4CON = 0x00;
 11791                           
 11792                           ;incstack = 0
 11793                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11794  1393  0025               	movlb	5	; select bank5
 11795  1394  0194               	clrf	20	;volatile
 11796                           
 11797                           ;tmr.c: 29: T4CLKCON = 0x01;
 11798  1395  3001               	movlw	1
 11799  1396  0096               	movwf	22	;volatile
 11800                           
 11801                           ;tmr.c: 31: T4HLT = 0x00;
 11802  1397  0195               	clrf	21	;volatile
 11803                           
 11804                           ;tmr.c: 33: T4RST = 0x00;
 11805  1398  0197               	clrf	23	;volatile
 11806                           
 11807                           ;tmr.c: 35: T4PR = 0xFE;
 11808  1399  30FE               	movlw	254
 11809  139A  0093               	movwf	19	;volatile
 11810                           
 11811                           ;tmr.c: 39: T4TMR = 0x00;
 11812  139B  0192               	clrf	18	;volatile
 11813                           
 11814                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11815  139C  002E               	movlb	14	; select bank14
 11816  139D  1190               	bcf	16,3	;volatile
 11817                           
 11818                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 11819  139E  0025               	movlb	5	; select bank5
 11820  139F  1794               	bsf	20,7	;volatile
 11821  13A0  0008               	return
 11822  13A1                     __end_of_TMR4_Initialize:	
 11823                           
 11824                           	psect	text22
 11825  1385                     __ptext22:	
 11826 ;; *************** function _TMR2_Initialize *****************
 11827 ;; Defined at:
 11828 ;;		line 3 in file "tmr.c"
 11829 ;; Parameters:    Size  Location     Type
 11830 ;;		None
 11831 ;; Auto vars:     Size  Location     Type
 11832 ;;		None
 11833 ;; Return value:  Size  Location     Type
 11834 ;;                  1    wreg      void 
 11835 ;; Registers used:
 11836 ;;		wreg, status,2
 11837 ;; Tracked objects:
 11838 ;;		On entry : 0/0
 11839 ;;		On exit  : 0/0
 11840 ;;		Unchanged: 0/0
 11841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11846 ;;Total ram usage:        0 bytes
 11847 ;; Hardware stack levels used:    1
 11848 ;; This function calls:
 11849 ;;		Nothing
 11850 ;; This function is called by:
 11851 ;;		_SYSTEM_Initialize
 11852 ;; This function uses a non-reentrant model
 11853 ;;
 11854                           
 11855                           
 11856                           ;psect for function _TMR2_Initialize
 11857  1385                     _TMR2_Initialize:	
 11858                           
 11859                           ;tmr.c: 5: T2CON = 0x00;
 11860                           
 11861                           ;incstack = 0
 11862                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11863  1385  0025               	movlb	5	; select bank5
 11864  1386  018E               	clrf	14	;volatile
 11865                           
 11866                           ;tmr.c: 7: T2CLKCON = 0x01;
 11867  1387  3001               	movlw	1
 11868  1388  0090               	movwf	16	;volatile
 11869                           
 11870                           ;tmr.c: 9: T2HLT = 0x00;
 11871  1389  018F               	clrf	15	;volatile
 11872                           
 11873                           ;tmr.c: 11: T2RST = 0x00;
 11874  138A  0191               	clrf	17	;volatile
 11875                           
 11876                           ;tmr.c: 13: T2PR = 0xFE;
 11877  138B  30FE               	movlw	254
 11878  138C  008D               	movwf	13	;volatile
 11879                           
 11880                           ;tmr.c: 18: T2TMR = 0x00;
 11881  138D  018C               	clrf	12	;volatile
 11882                           
 11883                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 11884  138E  002E               	movlb	14	; select bank14
 11885  138F  1090               	bcf	16,1	;volatile
 11886                           
 11887                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 11888  1390  0025               	movlb	5	; select bank5
 11889  1391  178E               	bsf	14,7	;volatile
 11890  1392  0008               	return
 11891  1393                     __end_of_TMR2_Initialize:	
 11892                           
 11893                           	psect	text23
 11894  14AB                     __ptext23:	
 11895 ;; *************** function _PWM_Initialize *****************
 11896 ;; Defined at:
 11897 ;;		line 3 in file "pwm.c"
 11898 ;; Parameters:    Size  Location     Type
 11899 ;;		None
 11900 ;; Auto vars:     Size  Location     Type
 11901 ;;		None
 11902 ;; Return value:  Size  Location     Type
 11903 ;;                  1    wreg      void 
 11904 ;; Registers used:
 11905 ;;		wreg, status,2, status,0
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11915 ;;Total ram usage:        0 bytes
 11916 ;; Hardware stack levels used:    1
 11917 ;; This function calls:
 11918 ;;		Nothing
 11919 ;; This function is called by:
 11920 ;;		_SYSTEM_Initialize
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           
 11925                           ;psect for function _PWM_Initialize
 11926  14AB                     _PWM_Initialize:	
 11927                           
 11928                           ;pwm.c: 5: PWM6CON = 0x80;
 11929                           
 11930                           ;incstack = 0
 11931                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11932  14AB  3080               	movlw	128
 11933  14AC  0027               	movlb	7	; select bank7
 11934  14AD  008E               	movwf	14	;volatile
 11935                           
 11936                           ;pwm.c: 7: PWM6DCH = 0x00;
 11937  14AE  018D               	clrf	13	;volatile
 11938                           
 11939                           ;pwm.c: 9: PWM6DCL = 0x00;
 11940  14AF  018C               	clrf	12	;volatile
 11941                           
 11942                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 11943  14B0  0024               	movlb	4	; select bank4
 11944  14B1  081F               	movf	31,w	;volatile
 11945  14B2  39F3               	andlw	-13
 11946  14B3  3804               	iorlw	4
 11947  14B4  009F               	movwf	31	;volatile
 11948                           
 11949                           ;pwm.c: 14: PWM7CON = 0x80;
 11950  14B5  3080               	movlw	128
 11951  14B6  0027               	movlb	7	; select bank7
 11952  14B7  0092               	movwf	18	;volatile
 11953                           
 11954                           ;pwm.c: 16: PWM7DCH = 0x00;
 11955  14B8  0191               	clrf	17	;volatile
 11956                           
 11957                           ;pwm.c: 18: PWM7DCL = 0x00;
 11958  14B9  0190               	clrf	16	;volatile
 11959                           
 11960                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 11961  14BA  0024               	movlb	4	; select bank4
 11962  14BB  081F               	movf	31,w	;volatile
 11963  14BC  39CF               	andlw	-49
 11964  14BD  3820               	iorlw	32
 11965  14BE  009F               	movwf	31	;volatile
 11966                           
 11967                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 11968  14BF  0026               	movlb	6	; select bank6
 11969  14C0  178E               	bsf	14,7	;volatile
 11970                           
 11971                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 11972  14C1  160E               	bsf	14,4	;volatile
 11973                           
 11974                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 11975  14C2  300F               	movlw	15
 11976  14C3  048E               	iorwf	14,f	;volatile
 11977                           
 11978                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 11979  14C4  0024               	movlb	4	; select bank4
 11980  14C5  081E               	movf	30,w	;volatile
 11981  14C6  39FC               	andlw	-4
 11982  14C7  3801               	iorlw	1
 11983  14C8  009E               	movwf	30	;volatile
 11984  14C9  0008               	return
 11985  14CA                     __end_of_PWM_Initialize:	
 11986                           
 11987                           	psect	text24
 11988  1595                     __ptext24:	
 11989 ;; *************** function _PIN_MANAGER_Initialize *****************
 11990 ;; Defined at:
 11991 ;;		line 5 in file "pin_manager.c"
 11992 ;; Parameters:    Size  Location     Type
 11993 ;;		None
 11994 ;; Auto vars:     Size  Location     Type
 11995 ;;  state           1    0[COMMON] char 
 11996 ;; Return value:  Size  Location     Type
 11997 ;;                  1    wreg      void 
 11998 ;; Registers used:
 11999 ;;		wreg, status,2
 12000 ;; Tracked objects:
 12001 ;;		On entry : 0/0
 12002 ;;		On exit  : 0/0
 12003 ;;		Unchanged: 0/0
 12004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12009 ;;Total ram usage:        1 bytes
 12010 ;; Hardware stack levels used:    1
 12011 ;; This function calls:
 12012 ;;		Nothing
 12013 ;; This function is called by:
 12014 ;;		_SYSTEM_Initialize
 12015 ;; This function uses a non-reentrant model
 12016 ;;
 12017                           
 12018                           
 12019                           ;psect for function _PIN_MANAGER_Initialize
 12020  1595                     _PIN_MANAGER_Initialize:	
 12021                           
 12022                           ;pin_manager.c: 7: LATA = 0x20;
 12023                           
 12024                           ;incstack = 0
 12025                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12026  1595  3020               	movlw	32
 12027  1596  0020               	movlb	0	; select bank0
 12028  1597  0096               	movwf	22	;volatile
 12029                           
 12030                           ;pin_manager.c: 8: LATB = 0x00;
 12031  1598  0197               	clrf	23	;volatile
 12032                           
 12033                           ;pin_manager.c: 9: LATC = 0x00;
 12034  1599  0198               	clrf	24	;volatile
 12035                           
 12036                           ;pin_manager.c: 11: WPUA = 0x00;
 12037  159A  003E               	movlb	30	; select bank30
 12038  159B  01B9               	clrf	57	;volatile
 12039                           
 12040                           ;pin_manager.c: 12: WPUB = 0x00;
 12041  159C  01C4               	clrf	68	;volatile
 12042                           
 12043                           ;pin_manager.c: 13: WPUC = 0x00;
 12044  159D  01CF               	clrf	79	;volatile
 12045                           
 12046                           ;pin_manager.c: 14: WPUE = 0x8;
 12047  159E  3008               	movlw	8
 12048  159F  00E5               	movwf	101	;volatile
 12049                           
 12050                           ;pin_manager.c: 16: TRISA = 0x00;
 12051  15A0  0020               	movlb	0	; select bank0
 12052  15A1  0191               	clrf	17	;volatile
 12053                           
 12054                           ;pin_manager.c: 17: TRISB = 0x0E;
 12055  15A2  300E               	movlw	14
 12056  15A3  0092               	movwf	18	;volatile
 12057                           
 12058                           ;pin_manager.c: 18: TRISC = 0xFF;
 12059  15A4  30FF               	movlw	255
 12060  15A5  0093               	movwf	19	;volatile
 12061                           
 12062                           ;pin_manager.c: 20: ANSELA = 0x00;
 12063  15A6  003E               	movlb	30	; select bank30
 12064  15A7  01B8               	clrf	56	;volatile
 12065                           
 12066                           ;pin_manager.c: 21: ANSELB = 0x0A;
 12067  15A8  300A               	movlw	10
 12068  15A9  00C3               	movwf	67	;volatile
 12069                           
 12070                           ;pin_manager.c: 22: ANSELC = 0xFF;
 12071  15AA  30FF               	movlw	255
 12072  15AB  00CE               	movwf	78	;volatile
 12073                           
 12074                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 12075  15AC  002E               	movlb	14	; select bank14
 12076  15AD  1216               	bcf	22,4	;volatile
 12077                           
 12078                           ;pin_manager.c: 26: int8_t state = GIE;
 12079  15AE  3000               	movlw	0
 12080  15AF  1B8B               	btfsc	11,7	;volatile
 12081  15B0  3001               	movlw	1
 12082  15B1  00F0               	movwf	PIN_MANAGER_Initialize@state
 12083                           
 12084                           ;pin_manager.c: 27: GIE = 0;
 12085  15B2  138B               	bcf	11,7	;volatile
 12086                           
 12087                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 12088  15B3  3055               	movlw	85
 12089  15B4  003D               	movlb	29	; select bank29
 12090  15B5  008F               	movwf	15	;volsfr
 12091                           
 12092                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 12093  15B6  30AA               	movlw	170
 12094  15B7  008F               	movwf	15	;volsfr
 12095                           
 12096                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 12097  15B8  100F               	bcf	15,0	;volsfr
 12098                           
 12099                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 12100  15B9  300E               	movlw	14
 12101  15BA  003E               	movlb	30	; select bank30
 12102  15BB  0096               	movwf	22	;volatile
 12103                           
 12104                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 12105  15BC  300F               	movlw	15
 12106  15BD  0097               	movwf	23	;volatile
 12107                           
 12108                           ;pin_manager.c: 34: RB0PPS = 0x09;
 12109  15BE  3009               	movlw	9
 12110  15BF  0098               	movwf	24	;volatile
 12111                           
 12112                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 12113  15C0  3055               	movlw	85
 12114  15C1  003D               	movlb	29	; select bank29
 12115  15C2  008F               	movwf	15	;volsfr
 12116                           
 12117                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 12118  15C3  30AA               	movlw	170
 12119  15C4  008F               	movwf	15	;volsfr
 12120                           
 12121                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 12122  15C5  140F               	bsf	15,0	;volsfr
 12123                           
 12124                           ;pin_manager.c: 38: GIE = state;
 12125  15C6  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12126  15C7  2DCA               	goto	u2500
 12127  15C8  178B               	bsf	11,7	;volatile
 12128  15C9  0008               	return
 12129  15CA                     u2500:	
 12130  15CA  138B               	bcf	11,7	;volatile
 12131  15CB  0008               	return
 12132  15CC                     __end_of_PIN_MANAGER_Initialize:	
 12133                           
 12134                           	psect	text25
 12135  1364                     __ptext25:	
 12136 ;; *************** function _OSCILLATOR_Initialize *****************
 12137 ;; Defined at:
 12138 ;;		line 88 in file "system.c"
 12139 ;; Parameters:    Size  Location     Type
 12140 ;;		None
 12141 ;; Auto vars:     Size  Location     Type
 12142 ;;		None
 12143 ;; Return value:  Size  Location     Type
 12144 ;;                  1    wreg      void 
 12145 ;; Registers used:
 12146 ;;		wreg, status,2
 12147 ;; Tracked objects:
 12148 ;;		On entry : 0/0
 12149 ;;		On exit  : 0/0
 12150 ;;		Unchanged: 0/0
 12151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;Total ram usage:        0 bytes
 12157 ;; Hardware stack levels used:    1
 12158 ;; This function calls:
 12159 ;;		Nothing
 12160 ;; This function is called by:
 12161 ;;		_SYSTEM_Initialize
 12162 ;; This function uses a non-reentrant model
 12163 ;;
 12164                           
 12165                           
 12166                           ;psect for function _OSCILLATOR_Initialize
 12167  1364                     _OSCILLATOR_Initialize:	
 12168                           
 12169                           ;system.c: 90: OSCCON1 = 0x60;
 12170                           
 12171                           ;incstack = 0
 12172                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12173  1364  3060               	movlw	96
 12174  1365  0031               	movlb	17	; select bank17
 12175  1366  008D               	movwf	13	;volatile
 12176                           
 12177                           ;system.c: 91: OSCCON3 = 0x00;
 12178  1367  018F               	clrf	15	;volatile
 12179                           
 12180                           ;system.c: 92: OSCEN = 0x00;
 12181  1368  0191               	clrf	17	;volatile
 12182                           
 12183                           ;system.c: 93: OSCFRQ = 0x06;
 12184  1369  3006               	movlw	6
 12185  136A  0093               	movwf	19	;volatile
 12186                           
 12187                           ;system.c: 94: OSCTUNE = 0x00;
 12188  136B  0192               	clrf	18	;volatile
 12189  136C  0008               	return
 12190  136D                     __end_of_OSCILLATOR_Initialize:	
 12191                           
 12192                           	psect	text26
 12193  15CC                     __ptext26:	
 12194 ;; *************** function _LCDInit *****************
 12195 ;; Defined at:
 12196 ;;		line 247 in file "lcd.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;		None
 12199 ;; Auto vars:     Size  Location     Type
 12200 ;;		None
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  1    wreg      void 
 12203 ;; Registers used:
 12204 ;;		wreg, status,2, status,0, pclath, cstack
 12205 ;; Tracked objects:
 12206 ;;		On entry : 0/0
 12207 ;;		On exit  : 0/0
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12214 ;;Total ram usage:        1 bytes
 12215 ;; Hardware stack levels used:    1
 12216 ;; Hardware stack levels required when called:    1
 12217 ;; This function calls:
 12218 ;;		_LCDWrite
 12219 ;; This function is called by:
 12220 ;;		_SYSTEM_Initialize
 12221 ;;		_main
 12222 ;; This function uses a non-reentrant model
 12223 ;;
 12224                           
 12225                           
 12226                           ;psect for function _LCDInit
 12227  15CC                     _LCDInit:	
 12228                           
 12229                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12230                           
 12231                           ;incstack = 0
 12232                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12233  15CC  0020               	movlb	0	; select bank0
 12234  15CD  1011               	bcf	17,0	;volatile
 12235                           
 12236                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12237  15CE  1091               	bcf	17,1	;volatile
 12238                           
 12239                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12240  15CF  1111               	bcf	17,2	;volatile
 12241                           
 12242                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12243  15D0  1191               	bcf	17,3	;volatile
 12244                           
 12245                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12246  15D1  1211               	bcf	17,4	;volatile
 12247                           
 12248                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12249  15D2  1196               	bcf	22,3	;volatile
 12250                           
 12251                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12252  15D3  1216               	bcf	22,4	;volatile
 12253                           
 12254                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12255  15D4  1116               	bcf	22,2	;volatile
 12256                           
 12257                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12258  15D5  1016               	bcf	22,0	;volatile
 12259                           
 12260                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12261  15D6  1416               	bsf	22,0	;volatile
 12262                           
 12263                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12264  15D7  3021               	movlw	33
 12265  15D8  00F5               	movwf	??_LCDInit
 12266  15D9  0875               	movf	??_LCDInit,w
 12267  15DA  00F0               	movwf	LCDWrite@data
 12268  15DB  3000               	movlw	0
 12269  15DC  3194  24EA  3195   	fcall	_LCDWrite
 12270                           
 12271                           ;lcd.c: 268: LCDWrite(0, 0XB7);
 12272  15DF  30B7               	movlw	183
 12273  15E0  00F5               	movwf	??_LCDInit
 12274  15E1  0875               	movf	??_LCDInit,w
 12275  15E2  00F0               	movwf	LCDWrite@data
 12276  15E3  3000               	movlw	0
 12277  15E4  3194  24EA  3195   	fcall	_LCDWrite
 12278                           
 12279                           ;lcd.c: 270: LCDWrite(0, 0x04);
 12280  15E7  3004               	movlw	4
 12281  15E8  00F5               	movwf	??_LCDInit
 12282  15E9  0875               	movf	??_LCDInit,w
 12283  15EA  00F0               	movwf	LCDWrite@data
 12284  15EB  3000               	movlw	0
 12285  15EC  3194  24EA  3195   	fcall	_LCDWrite
 12286                           
 12287                           ;lcd.c: 272: LCDWrite(0, 0x14);
 12288  15EF  3014               	movlw	20
 12289  15F0  00F5               	movwf	??_LCDInit
 12290  15F1  0875               	movf	??_LCDInit,w
 12291  15F2  00F0               	movwf	LCDWrite@data
 12292  15F3  3000               	movlw	0
 12293  15F4  3194  24EA  3195   	fcall	_LCDWrite
 12294                           
 12295                           ;lcd.c: 274: LCDWrite(0, 0x20);
 12296  15F7  3020               	movlw	32
 12297  15F8  00F5               	movwf	??_LCDInit
 12298  15F9  0875               	movf	??_LCDInit,w
 12299  15FA  00F0               	movwf	LCDWrite@data
 12300  15FB  3000               	movlw	0
 12301  15FC  3194  24EA  3195   	fcall	_LCDWrite
 12302                           
 12303                           ;lcd.c: 276: LCDWrite(0, 0x0C);
 12304  15FF  300C               	movlw	12
 12305  1600  00F5               	movwf	??_LCDInit
 12306  1601  0875               	movf	??_LCDInit,w
 12307  1602  00F0               	movwf	LCDWrite@data
 12308  1603  3000               	movlw	0
 12309  1604  3194  24EA         	fcall	_LCDWrite
 12310  1606  0008               	return
 12311  1607                     __end_of_LCDInit:	
 12312                           
 12313                           	psect	text27
 12314  150F                     __ptext27:	
 12315 ;; *************** function _LCDClear *****************
 12316 ;; Defined at:
 12317 ;;		line 182 in file "lcd.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;		None
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;  index           2    9[COMMON] int 
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      void 
 12324 ;; Registers used:
 12325 ;;		wreg, status,2, status,0, pclath, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;Total ram usage:        3 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; Hardware stack levels required when called:    2
 12338 ;; This function calls:
 12339 ;;		_LCDWrite
 12340 ;;		_gotoXY
 12341 ;; This function is called by:
 12342 ;;		_SYSTEM_Initialize
 12343 ;;		_main
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347                           
 12348                           ;psect for function _LCDClear
 12349  150F                     _LCDClear:	
 12350                           
 12351                           ;lcd.c: 184: int index;
 12352                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12353                           
 12354                           ;incstack = 0
 12355                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12356  150F  01F9               	clrf	LCDClear@index
 12357  1510  01FA               	clrf	LCDClear@index+1
 12358  1511  087A               	movf	LCDClear@index+1,w
 12359  1512  3A80               	xorlw	128
 12360  1513  00F8               	movwf	??_LCDClear
 12361  1514  3081               	movlw	129
 12362  1515  0278               	subwf	??_LCDClear,w
 12363  1516  1D03               	skipz
 12364  1517  2D1A               	goto	u2485
 12365  1518  30F8               	movlw	248
 12366  1519  0279               	subwf	LCDClear@index,w
 12367  151A                     u2485:	
 12368  151A  1803               	btfsc	3,0
 12369  151B  2D30               	goto	l2481
 12370  151C                     l2475:	
 12371                           
 12372                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12373  151C  01F0               	clrf	LCDWrite@data
 12374  151D  3001               	movlw	1
 12375  151E  3194  24EA  3195   	fcall	_LCDWrite
 12376  1521  3001               	movlw	1
 12377  1522  07F9               	addwf	LCDClear@index,f
 12378  1523  3000               	movlw	0
 12379  1524  3DFA               	addwfc	LCDClear@index+1,f
 12380  1525  087A               	movf	LCDClear@index+1,w
 12381  1526  3A80               	xorlw	128
 12382  1527  00F8               	movwf	??_LCDClear
 12383  1528  3081               	movlw	129
 12384  1529  0278               	subwf	??_LCDClear,w
 12385  152A  1D03               	skipz
 12386  152B  2D2E               	goto	u2495
 12387  152C  30F8               	movlw	248
 12388  152D  0279               	subwf	LCDClear@index,w
 12389  152E                     u2495:	
 12390  152E  1C03               	skipc
 12391  152F  2D1C               	goto	l2475
 12392  1530                     l2481:	
 12393                           
 12394                           ;lcd.c: 187: gotoXY(0, 0);
 12395  1530  01F5               	clrf	gotoXY@y
 12396  1531  3000               	movlw	0
 12397  1532  3193  23B1         	fcall	_gotoXY
 12398  1534  0008               	return
 12399  1535                     __end_of_LCDClear:	
 12400                           
 12401                           	psect	text28
 12402  13B1                     __ptext28:	
 12403 ;; *************** function _gotoXY *****************
 12404 ;; Defined at:
 12405 ;;		line 124 in file "lcd.c"
 12406 ;; Parameters:    Size  Location     Type
 12407 ;;  x               1    wreg     unsigned char 
 12408 ;;  y               1    5[COMMON] unsigned char 
 12409 ;; Auto vars:     Size  Location     Type
 12410 ;;  x               1    7[COMMON] unsigned char 
 12411 ;; Return value:  Size  Location     Type
 12412 ;;                  1    wreg      void 
 12413 ;; Registers used:
 12414 ;;		wreg, status,2, status,0, pclath, cstack
 12415 ;; Tracked objects:
 12416 ;;		On entry : 0/0
 12417 ;;		On exit  : 0/0
 12418 ;;		Unchanged: 0/0
 12419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12420 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12423 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12424 ;;Total ram usage:        3 bytes
 12425 ;; Hardware stack levels used:    1
 12426 ;; Hardware stack levels required when called:    1
 12427 ;; This function calls:
 12428 ;;		_LCDWrite
 12429 ;; This function is called by:
 12430 ;;		_LCDClear
 12431 ;;		_main
 12432 ;;		_LCDBitmap
 12433 ;; This function uses a non-reentrant model
 12434 ;;
 12435                           
 12436                           
 12437                           ;psect for function _gotoXY
 12438  13B1                     _gotoXY:	
 12439                           
 12440                           ;incstack = 0
 12441                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 12442                           ;gotoXY@x stored from wreg
 12443  13B1  00F7               	movwf	gotoXY@x
 12444                           
 12445                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 12446  13B2  0877               	movf	gotoXY@x,w
 12447  13B3  3880               	iorlw	128
 12448  13B4  00F6               	movwf	??_gotoXY
 12449  13B5  0876               	movf	??_gotoXY,w
 12450  13B6  00F0               	movwf	LCDWrite@data
 12451  13B7  3000               	movlw	0
 12452  13B8  3194  24EA  3193   	fcall	_LCDWrite
 12453                           
 12454                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 12455  13BB  0875               	movf	gotoXY@y,w
 12456  13BC  3840               	iorlw	64
 12457  13BD  00F6               	movwf	??_gotoXY
 12458  13BE  0876               	movf	??_gotoXY,w
 12459  13BF  00F0               	movwf	LCDWrite@data
 12460  13C0  3000               	movlw	0
 12461  13C1  3194  24EA         	fcall	_LCDWrite
 12462  13C3  0008               	return
 12463  13C4                     __end_of_gotoXY:	
 12464                           
 12465                           	psect	text29
 12466  1450                     __ptext29:	
 12467 ;; *************** function _Init_Battery_State_Machine *****************
 12468 ;; Defined at:
 12469 ;;		line 23 in file "battery_charger.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;		None
 12472 ;; Auto vars:     Size  Location     Type
 12473 ;;		None
 12474 ;; Return value:  Size  Location     Type
 12475 ;;                  1    wreg      void 
 12476 ;; Registers used:
 12477 ;;		wreg
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12487 ;;Total ram usage:        1 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; This function calls:
 12490 ;;		Nothing
 12491 ;; This function is called by:
 12492 ;;		_SYSTEM_Initialize
 12493 ;; This function uses a non-reentrant model
 12494 ;;
 12495                           
 12496                           
 12497                           ;psect for function _Init_Battery_State_Machine
 12498  1450                     _Init_Battery_State_Machine:	
 12499                           
 12500                           ;battery_charger.c: 25: battery_state = PRECHARGE;
 12501                           
 12502                           ;incstack = 0
 12503                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 12504  1450  3003               	movlw	3
 12505  1451  00F0               	movwf	??_Init_Battery_State_Machine
 12506  1452  0870               	movf	??_Init_Battery_State_Machine,w
 12507  1453  0021               	movlb	1	; select bank1
 12508  1454  00ED               	movwf	_battery_state^(0+128)
 12509                           
 12510                           ;battery_charger.c: 26: state_counter = 600;
 12511  1455  3058               	movlw	88
 12512  1456  0022               	movlb	2	; select bank2
 12513  1457  00E2               	movwf	_state_counter^(0+256)
 12514  1458  3002               	movlw	2
 12515  1459  00E3               	movwf	(_state_counter^(0+256)+1)
 12516                           
 12517                           ;battery_charger.c: 28: { Iref = 10; };
 12518  145A  300A               	movlw	10
 12519  145B  0021               	movlb	1	; select bank1
 12520  145C  00E9               	movwf	_Iref^(0+128)
 12521  145D  3000               	movlw	0
 12522  145E  00EA               	movwf	(_Iref^(0+128)+1)
 12523                           
 12524                           ;battery_charger.c: 29: { Vref = 1425; };
 12525  145F  3091               	movlw	145
 12526  1460  00E7               	movwf	_Vref^(0+128)
 12527  1461  3005               	movlw	5
 12528  1462  00E8               	movwf	(_Vref^(0+128)+1)
 12529                           
 12530                           ;battery_charger.c: 31: Imin = 20;
 12531  1463  3014               	movlw	20
 12532  1464  0022               	movlb	2	; select bank2
 12533  1465  00E0               	movwf	_Imin^(0+256)
 12534  1466  3000               	movlw	0
 12535  1467  00E1               	movwf	(_Imin^(0+256)+1)
 12536                           
 12537                           ;battery_charger.c: 32: IminCount = 10;
 12538  1468  300A               	movlw	10
 12539  1469  0021               	movlb	1	; select bank1
 12540  146A  00EB               	movwf	_IminCount^(0+128)
 12541  146B  3000               	movlw	0
 12542  146C  00EC               	movwf	(_IminCount^(0+128)+1)
 12543  146D  0008               	return
 12544  146E                     __end_of_Init_Battery_State_Machine:	
 12545                           
 12546                           	psect	text30
 12547  148C                     __ptext30:	
 12548 ;; *************** function _ADC_Initialize *****************
 12549 ;; Defined at:
 12550 ;;		line 83 in file "adc.c"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;		None
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;		None
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  1    wreg      void 
 12557 ;; Registers used:
 12558 ;;		wreg, status,2
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;Total ram usage:        0 bytes
 12569 ;; Hardware stack levels used:    1
 12570 ;; This function calls:
 12571 ;;		Nothing
 12572 ;; This function is called by:
 12573 ;;		_SYSTEM_Initialize
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           
 12578                           ;psect for function _ADC_Initialize
 12579  148C                     _ADC_Initialize:	
 12580                           
 12581                           ;adc.c: 85: ADCON1 = 0x00;
 12582                           
 12583                           ;incstack = 0
 12584                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12585  148C  0021               	movlb	1	; select bank1
 12586  148D  0194               	clrf	20	;volatile
 12587                           
 12588                           ;adc.c: 87: ADCON2 = 0x00;
 12589  148E  0195               	clrf	21	;volatile
 12590                           
 12591                           ;adc.c: 89: ADCON3 = 0x00;
 12592  148F  0196               	clrf	22	;volatile
 12593                           
 12594                           ;adc.c: 91: ADACT = 0x00;
 12595  1490  0199               	clrf	25	;volatile
 12596                           
 12597                           ;adc.c: 93: ADSTAT = 0x00;
 12598  1491  0197               	clrf	23	;volatile
 12599                           
 12600                           ;adc.c: 95: FVRCON = 0b11000011;
 12601  1492  30C3               	movlw	195
 12602  1493  0032               	movlb	18	; select bank18
 12603  1494  008C               	movwf	12	;volatile
 12604                           
 12605                           ;adc.c: 96: ADCLK = 0x3F;
 12606  1495  303F               	movlw	63
 12607  1496  0021               	movlb	1	; select bank1
 12608  1497  0098               	movwf	24	;volatile
 12609                           
 12610                           ;adc.c: 103: ADREF = 0x03;
 12611  1498  3003               	movlw	3
 12612  1499  009A               	movwf	26	;volatile
 12613                           
 12614                           ;adc.c: 106: ADCAP = 0x00;
 12615  149A  019B               	clrf	27	;volatile
 12616                           
 12617                           ;adc.c: 109: ADPRE = 0x07;
 12618  149B  3007               	movlw	7
 12619  149C  009C               	movwf	28	;volatile
 12620                           
 12621                           ;adc.c: 111: ADACQ = 0x00;
 12622  149D  019D               	clrf	29	;volatile
 12623                           
 12624                           ;adc.c: 113: ADPCH = 0x00;
 12625  149E  019E               	clrf	30	;volatile
 12626                           
 12627                           ;adc.c: 115: ADRPT = 0x00;
 12628  149F  0022               	movlb	2	; select bank2
 12629  14A0  018D               	clrf	13	;volatile
 12630                           
 12631                           ;adc.c: 117: ADLTHL = 0x00;
 12632  14A1  018E               	clrf	14	;volatile
 12633                           
 12634                           ;adc.c: 119: ADLTHH = 0x00;
 12635  14A2  018F               	clrf	15	;volatile
 12636                           
 12637                           ;adc.c: 121: ADUTHL = 0x00;
 12638  14A3  0190               	clrf	16	;volatile
 12639                           
 12640                           ;adc.c: 123: ADUTHH = 0x00;
 12641  14A4  0191               	clrf	17	;volatile
 12642                           
 12643                           ;adc.c: 125: ADSTPTL = 0x00;
 12644  14A5  0192               	clrf	18	;volatile
 12645                           
 12646                           ;adc.c: 127: ADSTPTH = 0x00;
 12647  14A6  0193               	clrf	19	;volatile
 12648                           
 12649                           ;adc.c: 129: ADCON0 = 0x84;
 12650  14A7  3084               	movlw	132
 12651  14A8  0021               	movlb	1	; select bank1
 12652  14A9  0093               	movwf	19	;volatile
 12653  14AA  0008               	return
 12654  14AB                     __end_of_ADC_Initialize:	
 12655                           
 12656                           	psect	text31
 12657  1405                     __ptext31:	
 12658 ;; *************** function _PWM7_LoadDutyValue *****************
 12659 ;; Defined at:
 12660 ;;		line 37 in file "pwm.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12663 ;; Auto vars:     Size  Location     Type
 12664 ;;		None
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  1    wreg      void 
 12667 ;; Registers used:
 12668 ;;		wreg, status,2, status,0
 12669 ;; Tracked objects:
 12670 ;;		On entry : 0/0
 12671 ;;		On exit  : 0/0
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12677 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;Total ram usage:        4 bytes
 12679 ;; Hardware stack levels used:    1
 12680 ;; This function calls:
 12681 ;;		Nothing
 12682 ;; This function is called by:
 12683 ;;		_main
 12684 ;; This function uses a non-reentrant model
 12685 ;;
 12686                           
 12687                           
 12688                           ;psect for function _PWM7_LoadDutyValue
 12689  1405                     _PWM7_LoadDutyValue:	
 12690                           
 12691                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12692                           
 12693                           ;incstack = 0
 12694                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12695  1405  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12696  1406  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12697  1407  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12698  1408  00F2               	movwf	??_PWM7_LoadDutyValue
 12699  1409  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12700  140A  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12701  140B  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12702  140C  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12703  140D  0872               	movf	??_PWM7_LoadDutyValue,w
 12704  140E  0027               	movlb	7	; select bank7
 12705  140F  0091               	movwf	17	;volatile
 12706                           
 12707                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12708  1410  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12709  1411  3903               	andlw	3
 12710  1412  00F2               	movwf	??_PWM7_LoadDutyValue
 12711  1413  3005               	movlw	5
 12712  1414                     u3325:	
 12713  1414  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12714  1415  3EFF               	addlw	-1
 12715  1416  1D03               	skipz
 12716  1417  2C14               	goto	u3325
 12717  1418  3572               	lslf	??_PWM7_LoadDutyValue,w
 12718  1419  0090               	movwf	16	;volatile
 12719  141A  0008               	return
 12720  141B                     __end_of_PWM7_LoadDutyValue:	
 12721                           
 12722                           	psect	text32
 12723  13EF                     __ptext32:	
 12724 ;; *************** function _PWM6_LoadDutyValue *****************
 12725 ;; Defined at:
 12726 ;;		line 30 in file "pwm.c"
 12727 ;; Parameters:    Size  Location     Type
 12728 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12729 ;; Auto vars:     Size  Location     Type
 12730 ;;		None
 12731 ;; Return value:  Size  Location     Type
 12732 ;;                  1    wreg      void 
 12733 ;; Registers used:
 12734 ;;		wreg, status,2, status,0
 12735 ;; Tracked objects:
 12736 ;;		On entry : 0/0
 12737 ;;		On exit  : 0/0
 12738 ;;		Unchanged: 0/0
 12739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12744 ;;Total ram usage:        4 bytes
 12745 ;; Hardware stack levels used:    1
 12746 ;; This function calls:
 12747 ;;		Nothing
 12748 ;; This function is called by:
 12749 ;;		_main
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           
 12754                           ;psect for function _PWM6_LoadDutyValue
 12755  13EF                     _PWM6_LoadDutyValue:	
 12756                           
 12757                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12758                           
 12759                           ;incstack = 0
 12760                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12761  13EF  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12762  13F0  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12763  13F1  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12764  13F2  00F2               	movwf	??_PWM6_LoadDutyValue
 12765  13F3  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12766  13F4  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12767  13F5  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12768  13F6  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12769  13F7  0872               	movf	??_PWM6_LoadDutyValue,w
 12770  13F8  0027               	movlb	7	; select bank7
 12771  13F9  008D               	movwf	13	;volatile
 12772                           
 12773                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12774  13FA  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12775  13FB  3903               	andlw	3
 12776  13FC  00F2               	movwf	??_PWM6_LoadDutyValue
 12777  13FD  3005               	movlw	5
 12778  13FE                     u3315:	
 12779  13FE  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12780  13FF  3EFF               	addlw	-1
 12781  1400  1D03               	skipz
 12782  1401  2BFE               	goto	u3315
 12783  1402  3572               	lslf	??_PWM6_LoadDutyValue,w
 12784  1403  008C               	movwf	12	;volatile
 12785  1404  0008               	return
 12786  1405                     __end_of_PWM6_LoadDutyValue:	
 12787                           
 12788                           	psect	text33
 12789  13D9                     __ptext33:	
 12790 ;; *************** function _PWM1_LoadDutyValue *****************
 12791 ;; Defined at:
 12792 ;;		line 44 in file "pwm.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;		None
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  1    wreg      void 
 12799 ;; Registers used:
 12800 ;;		wreg, status,2, status,0
 12801 ;; Tracked objects:
 12802 ;;		On entry : 0/0
 12803 ;;		On exit  : 0/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12809 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12810 ;;Total ram usage:        4 bytes
 12811 ;; Hardware stack levels used:    1
 12812 ;; This function calls:
 12813 ;;		Nothing
 12814 ;; This function is called by:
 12815 ;;		_main
 12816 ;; This function uses a non-reentrant model
 12817 ;;
 12818                           
 12819                           
 12820                           ;psect for function _PWM1_LoadDutyValue
 12821  13D9                     _PWM1_LoadDutyValue:	
 12822                           
 12823                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 12824                           
 12825                           ;incstack = 0
 12826                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 12827  13D9  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 12828  13DA  00F3               	movwf	??_PWM1_LoadDutyValue+1
 12829  13DB  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12830  13DC  00F2               	movwf	??_PWM1_LoadDutyValue
 12831  13DD  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12832  13DE  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12833  13DF  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12834  13E0  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12835  13E1  0872               	movf	??_PWM1_LoadDutyValue,w
 12836  13E2  0026               	movlb	6	; select bank6
 12837  13E3  008D               	movwf	13	;volatile
 12838                           
 12839                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 12840  13E4  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12841  13E5  3903               	andlw	3
 12842  13E6  00F2               	movwf	??_PWM1_LoadDutyValue
 12843  13E7  3005               	movlw	5
 12844  13E8                     u3335:	
 12845  13E8  35F2               	lslf	??_PWM1_LoadDutyValue,f
 12846  13E9  3EFF               	addlw	-1
 12847  13EA  1D03               	skipz
 12848  13EB  2BE8               	goto	u3335
 12849  13EC  3572               	lslf	??_PWM1_LoadDutyValue,w
 12850  13ED  008C               	movwf	12	;volatile
 12851  13EE  0008               	return
 12852  13EF                     __end_of_PWM1_LoadDutyValue:	
 12853                           
 12854                           	psect	text34
 12855  141B                     __ptext34:	
 12856 ;; *************** function _LCDWriteString *****************
 12857 ;; Defined at:
 12858 ;;		line 176 in file "lcd.c"
 12859 ;; Parameters:    Size  Location     Type
 12860 ;;  characters      2    8[BANK0 ] PTR const unsigned char 
 12861 ;;		 -> STR_1(5), 
 12862 ;; Auto vars:     Size  Location     Type
 12863 ;;		None
 12864 ;; Return value:  Size  Location     Type
 12865 ;;                  1    wreg      void 
 12866 ;; Registers used:
 12867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12868 ;; Tracked objects:
 12869 ;;		On entry : 0/0
 12870 ;;		On exit  : 0/0
 12871 ;;		Unchanged: 0/0
 12872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12876 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12877 ;;Total ram usage:        3 bytes
 12878 ;; Hardware stack levels used:    1
 12879 ;; Hardware stack levels required when called:    2
 12880 ;; This function calls:
 12881 ;;		_LCDWriteCharacter
 12882 ;; This function is called by:
 12883 ;;		_main
 12884 ;; This function uses a non-reentrant model
 12885 ;;
 12886                           
 12887                           
 12888                           ;psect for function _LCDWriteString
 12889  141B                     _LCDWriteString:	
 12890  141B                     l2871:	
 12891                           ;lcd.c: 178: while (*characters)
 12892                           
 12893                           ;incstack = 0
 12894                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12895                           
 12896  141B  0020               	movlb	0	; select bank0
 12897  141C  0828               	movf	LCDWriteString@characters,w
 12898  141D  0084               	movwf	4
 12899  141E  0829               	movf	LCDWriteString@characters+1,w
 12900  141F  0085               	movwf	5
 12901  1420  0012               	moviw fsr0++
 12902  1421  1903               	btfsc	3,2
 12903  1422  0008               	return
 12904                           
 12905                           ;lcd.c: 179: LCDWriteCharacter(*characters++);
 12906  1423  0020               	movlb	0	; select bank0
 12907  1424  0828               	movf	LCDWriteString@characters,w
 12908  1425  0084               	movwf	4
 12909  1426  0829               	movf	LCDWriteString@characters+1,w
 12910  1427  0085               	movwf	5
 12911  1428  0800               	movf	0,w	;code access
 12912  1429  3197  2748  3194   	fcall	_LCDWriteCharacter
 12913  142C  3001               	movlw	1
 12914  142D  0020               	movlb	0	; select bank0
 12915  142E  07A8               	addwf	LCDWriteString@characters,f
 12916  142F  3000               	movlw	0
 12917  1430  3DA9               	addwfc	LCDWriteString@characters+1,f
 12918  1431  2C1B               	goto	l2871
 12919  1432                     __end_of_LCDWriteString:	
 12920                           
 12921                           	psect	text35
 12922  000B                     __ptext35:	
 12923 ;; *************** function _LCDWriteInt *****************
 12924 ;; Defined at:
 12925 ;;		line 190 in file "lcd.c"
 12926 ;; Parameters:    Size  Location     Type
 12927 ;;  value           2   30[BANK0 ] int 
 12928 ;;  fieldLength     1   32[BANK0 ] char 
 12929 ;;  numPlaces       1   33[BANK0 ] unsigned char 
 12930 ;;  sign            1   34[BANK0 ] unsigned char 
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;  str             5   39[BANK0 ] unsigned char [5]
 12933 ;;  i               1   45[BANK0 ] unsigned char 
 12934 ;;  j               1   44[BANK0 ] unsigned char 
 12935 ;; Return value:  Size  Location     Type
 12936 ;;                  1    wreg      void 
 12937 ;; Registers used:
 12938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12939 ;; Tracked objects:
 12940 ;;		On entry : 0/0
 12941 ;;		On exit  : 0/0
 12942 ;;		Unchanged: 0/0
 12943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12944 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;Total ram usage:       16 bytes
 12949 ;; Hardware stack levels used:    1
 12950 ;; Hardware stack levels required when called:    2
 12951 ;; This function calls:
 12952 ;;		_LCDWriteCharacter
 12953 ;;		___awdiv
 12954 ;;		___lwmod
 12955 ;; This function is called by:
 12956 ;;		_main
 12957 ;; This function uses a non-reentrant model
 12958 ;;
 12959                           
 12960                           
 12961                           ;psect for function _LCDWriteInt
 12962  000B                     _LCDWriteInt:	
 12963                           
 12964                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 12965                           
 12966                           ;incstack = 0
 12967                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12968  000B  30D6               	movlw	low LCDWriteInt@F14396
 12969  000C  0086               	movwf	6
 12970  000D  3000               	movlw	high LCDWriteInt@F14396
 12971  000E  0087               	movwf	7
 12972  000F  3047               	movlw	low LCDWriteInt@str
 12973  0010  0084               	movwf	4
 12974  0011  3000               	movlw	high LCDWriteInt@str
 12975  0012  0085               	movwf	5
 12976  0013  3005               	movlw	5
 12977  0014  0020               	movlb	0	; select bank0
 12978  0015  00C3               	movwf	??_LCDWriteInt
 12979  0016                     u3220:	
 12980  0016  0016               	moviw fsr1++
 12981  0017  001A               	movwi fsr0++
 12982  0018  0BC3               	decfsz	??_LCDWriteInt,f
 12983  0019  2816               	goto	u3220
 12984                           
 12985                           ;lcd.c: 193: uint8_t i=4,j=0;
 12986  001A  3004               	movlw	4
 12987  001B  00C3               	movwf	??_LCDWriteInt
 12988  001C  0843               	movf	??_LCDWriteInt,w
 12989  001D  00CD               	movwf	LCDWriteInt@i
 12990  001E  01CC               	clrf	LCDWriteInt@j
 12991                           
 12992                           ;lcd.c: 195: if(value<0)
 12993  001F  1FBF               	btfss	LCDWriteInt@value+1,7
 12994  0020  282C               	goto	l2885
 12995                           
 12996                           ;lcd.c: 196: {
 12997                           ;lcd.c: 197: LCDWriteCharacter('-');
 12998  0021  302D               	movlw	45
 12999  0022  3197  2748  3180   	fcall	_LCDWriteCharacter
 13000                           
 13001                           ;lcd.c: 198: value=value*-1;
 13002  0025  0020               	movlb	0	; select bank0
 13003  0026  09BE               	comf	LCDWriteInt@value,f
 13004  0027  09BF               	comf	LCDWriteInt@value+1,f
 13005  0028  0ABE               	incf	LCDWriteInt@value,f
 13006  0029  1903               	skipnz
 13007  002A  0ABF               	incf	LCDWriteInt@value+1,f
 13008                           
 13009                           ;lcd.c: 199: }
 13010  002B  2833               	goto	l2895
 13011  002C                     l2885:	
 13012                           
 13013                           ;lcd.c: 201: else
 13014                           ;lcd.c: 202: {
 13015                           ;lcd.c: 203: if(sign == 1)
 13016  002C  0342               	decf	LCDWriteInt@sign,w
 13017  002D  1D03               	btfss	3,2
 13018  002E  2833               	goto	l2895
 13019                           
 13020                           ;lcd.c: 204: {
 13021                           ;lcd.c: 205: LCDWriteCharacter('+');
 13022  002F  302B               	movlw	43
 13023  0030  3197  2748  3180   	fcall	_LCDWriteCharacter
 13024  0033                     l2895:	
 13025                           ;lcd.c: 206: }
 13026                           ;lcd.c: 207: }
 13027                           ;lcd.c: 209: while(value)
 13028                           
 13029  0033  0020               	movlb	0	; select bank0
 13030  0034  083E               	movf	LCDWriteInt@value,w
 13031  0035  043F               	iorwf	LCDWriteInt@value+1,w
 13032  0036  1903               	btfsc	3,2
 13033  0037  2860               	goto	l2897
 13034                           
 13035                           ;lcd.c: 210: {
 13036                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 13037  0038  300A               	movlw	10
 13038  0039  00F0               	movwf	___lwmod@divisor
 13039  003A  3000               	movlw	0
 13040  003B  00F1               	movwf	___lwmod@divisor+1
 13041  003C  0020               	movlb	0	; select bank0
 13042  003D  083F               	movf	LCDWriteInt@value+1,w
 13043  003E  00F3               	movwf	___lwmod@dividend+1
 13044  003F  083E               	movf	LCDWriteInt@value,w
 13045  0040  00F2               	movwf	___lwmod@dividend
 13046  0041  3195  2535  3180   	fcall	___lwmod
 13047  0044  0870               	movf	?___lwmod,w
 13048  0045  0020               	movlb	0	; select bank0
 13049  0046  00C3               	movwf	??_LCDWriteInt
 13050  0047  084D               	movf	LCDWriteInt@i,w
 13051  0048  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13052  0049  0086               	movwf	6
 13053  004A  0187               	clrf	7
 13054  004B  0843               	movf	??_LCDWriteInt,w
 13055  004C  0081               	movwf	1
 13056                           
 13057                           ;lcd.c: 212: value=value/10;
 13058  004D  300A               	movlw	10
 13059  004E  00F0               	movwf	___awdiv@divisor
 13060  004F  3000               	movlw	0
 13061  0050  00F1               	movwf	___awdiv@divisor+1
 13062  0051  083F               	movf	LCDWriteInt@value+1,w
 13063  0052  00F3               	movwf	___awdiv@dividend+1
 13064  0053  083E               	movf	LCDWriteInt@value,w
 13065  0054  00F2               	movwf	___awdiv@dividend
 13066  0055  3189  2133  3180   	fcall	___awdiv
 13067  0058  0871               	movf	?___awdiv+1,w
 13068  0059  0020               	movlb	0	; select bank0
 13069  005A  00BF               	movwf	LCDWriteInt@value+1
 13070  005B  0870               	movf	?___awdiv,w
 13071  005C  00BE               	movwf	LCDWriteInt@value
 13072                           
 13073                           ;lcd.c: 213: i--;
 13074  005D  3001               	movlw	1
 13075  005E  02CD               	subwf	LCDWriteInt@i,f
 13076  005F  2833               	goto	l2895
 13077  0060                     l2897:	
 13078                           
 13079                           ;lcd.c: 214: }
 13080                           ;lcd.c: 215: if(fieldLength==-1)
 13081  0060  0A40               	incf	LCDWriteInt@fieldLength,w
 13082  0061  1903               	btfsc	3,2
 13083  0062  2868               	goto	l2903
 13084  0063  2870               	goto	l2905
 13085  0064                     l2901:	
 13086                           ;lcd.c: 216: {
 13087                           ;lcd.c: 217: while(str[j]==0)
 13088                           
 13089                           
 13090                           ;lcd.c: 218: {
 13091                           ;lcd.c: 219: j++;
 13092  0064  3001               	movlw	1
 13093  0065  00C3               	movwf	??_LCDWriteInt
 13094  0066  0843               	movf	??_LCDWriteInt,w
 13095  0067  07CC               	addwf	LCDWriteInt@j,f
 13096  0068                     l2903:	
 13097  0068  084C               	movf	LCDWriteInt@j,w
 13098  0069  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13099  006A  0086               	movwf	6
 13100  006B  0187               	clrf	7
 13101  006C  0801               	movf	1,w
 13102  006D  1D03               	btfss	3,2
 13103  006E  2876               	goto	l2907
 13104  006F  2864               	goto	l2901
 13105  0070                     l2905:	
 13106                           ;lcd.c: 220: }
 13107                           ;lcd.c: 221: }
 13108                           
 13109                           
 13110                           ;lcd.c: 222: else
 13111                           ;lcd.c: 223: {
 13112                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 13113  0070  0340               	decf	LCDWriteInt@fieldLength,w
 13114  0071  3AFF               	xorlw	255
 13115  0072  3E05               	addlw	5
 13116  0073  00C3               	movwf	??_LCDWriteInt
 13117  0074  0843               	movf	??_LCDWriteInt,w
 13118  0075  00CC               	movwf	LCDWriteInt@j
 13119  0076                     l2907:	
 13120                           
 13121                           ;lcd.c: 225: }
 13122                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 13123  0076  084C               	movf	LCDWriteInt@j,w
 13124  0077  00C3               	movwf	??_LCDWriteInt
 13125  0078  0843               	movf	??_LCDWriteInt,w
 13126  0079  00CD               	movwf	LCDWriteInt@i
 13127  007A                     l2913:	
 13128  007A  0841               	movf	LCDWriteInt@numPlaces,w
 13129  007B  00C3               	movwf	??_LCDWriteInt
 13130  007C  01C4               	clrf	??_LCDWriteInt+1
 13131  007D  09C3               	comf	??_LCDWriteInt,f
 13132  007E  09C4               	comf	??_LCDWriteInt+1,f
 13133  007F  0AC3               	incf	??_LCDWriteInt,f
 13134  0080  1903               	skipnz
 13135  0081  0AC4               	incf	??_LCDWriteInt+1,f
 13136  0082  0843               	movf	??_LCDWriteInt,w
 13137  0083  3E05               	addlw	5
 13138  0084  00C5               	movwf	??_LCDWriteInt+2
 13139  0085  3000               	movlw	0
 13140  0086  3D44               	addwfc	??_LCDWriteInt+1,w
 13141  0087  00C6               	movwf	??_LCDWriteInt+3
 13142  0088  0846               	movf	??_LCDWriteInt+3,w
 13143  0089  3A80               	xorlw	128
 13144  008A  3C80               	sublw	128
 13145  008B  1D03               	skipz
 13146  008C  288F               	goto	u3285
 13147  008D  0845               	movf	??_LCDWriteInt+2,w
 13148  008E  024D               	subwf	LCDWriteInt@i,w
 13149  008F                     u3285:	
 13150  008F  1803               	btfsc	3,0
 13151  0090  28A1               	goto	l2915
 13152                           
 13153                           ;lcd.c: 228: {
 13154                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 13155  0091  0020               	movlb	0	; select bank0
 13156  0092  084D               	movf	LCDWriteInt@i,w
 13157  0093  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13158  0094  0086               	movwf	6
 13159  0095  0187               	clrf	7
 13160  0096  0801               	movf	1,w
 13161  0097  3E30               	addlw	48
 13162  0098  3197  2748  3180   	fcall	_LCDWriteCharacter
 13163  009B  3001               	movlw	1
 13164  009C  0020               	movlb	0	; select bank0
 13165  009D  00C3               	movwf	??_LCDWriteInt
 13166  009E  0843               	movf	??_LCDWriteInt,w
 13167  009F  07CD               	addwf	LCDWriteInt@i,f
 13168  00A0  287A               	goto	l2913
 13169  00A1                     l2915:	
 13170                           
 13171                           ;lcd.c: 230: }
 13172                           ;lcd.c: 232: if(numPlaces == 1)
 13173  00A1  0020               	movlb	0	; select bank0
 13174  00A2  0341               	decf	LCDWriteInt@numPlaces,w
 13175  00A3  1D03               	btfss	3,2
 13176  00A4  28AF               	goto	l2919
 13177                           
 13178                           ;lcd.c: 233: {
 13179                           ;lcd.c: 234: LCDWriteCharacter(46);
 13180  00A5  302E               	movlw	46
 13181  00A6  3197  2748  3180   	fcall	_LCDWriteCharacter
 13182                           
 13183                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 13184  00A9  0020               	movlb	0	; select bank0
 13185  00AA  084B               	movf	LCDWriteInt@str+4,w
 13186  00AB  3E30               	addlw	48
 13187  00AC  3197  2748  3180   	fcall	_LCDWriteCharacter
 13188  00AF                     l2919:	
 13189                           
 13190                           ;lcd.c: 236: }
 13191                           ;lcd.c: 238: if(numPlaces == 2)
 13192  00AF  3002               	movlw	2
 13193  00B0  0020               	movlb	0	; select bank0
 13194  00B1  0641               	xorwf	LCDWriteInt@numPlaces,w
 13195  00B2  1D03               	btfss	3,2
 13196  00B3  0008               	return
 13197                           
 13198                           ;lcd.c: 239: {
 13199                           ;lcd.c: 240: LCDWriteCharacter(46);
 13200  00B4  302E               	movlw	46
 13201  00B5  3197  2748  3180   	fcall	_LCDWriteCharacter
 13202                           
 13203                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 13204  00B8  0020               	movlb	0	; select bank0
 13205  00B9  084A               	movf	LCDWriteInt@str+3,w
 13206  00BA  3E30               	addlw	48
 13207  00BB  3197  2748  3180   	fcall	_LCDWriteCharacter
 13208                           
 13209                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 13210  00BE  0020               	movlb	0	; select bank0
 13211  00BF  084B               	movf	LCDWriteInt@str+4,w
 13212  00C0  3E30               	addlw	48
 13213  00C1  3197  2748         	fcall	_LCDWriteCharacter
 13214  00C3  0008               	return
 13215  00C4                     __end_of_LCDWriteInt:	
 13216                           
 13217                           	psect	text36
 13218  1535                     __ptext36:	
 13219 ;; *************** function ___lwmod *****************
 13220 ;; Defined at:
 13221 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 13222 ;; Parameters:    Size  Location     Type
 13223 ;;  divisor         2    0[COMMON] unsigned int 
 13224 ;;  dividend        2    2[COMMON] unsigned int 
 13225 ;; Auto vars:     Size  Location     Type
 13226 ;;  counter         1    5[COMMON] unsigned char 
 13227 ;; Return value:  Size  Location     Type
 13228 ;;                  2    0[COMMON] unsigned int 
 13229 ;; Registers used:
 13230 ;;		wreg, status,2, status,0
 13231 ;; Tracked objects:
 13232 ;;		On entry : 0/0
 13233 ;;		On exit  : 0/0
 13234 ;;		Unchanged: 0/0
 13235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13236 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13239 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13240 ;;Total ram usage:        6 bytes
 13241 ;; Hardware stack levels used:    1
 13242 ;; This function calls:
 13243 ;;		Nothing
 13244 ;; This function is called by:
 13245 ;;		_LCDWriteInt
 13246 ;; This function uses a non-reentrant model
 13247 ;;
 13248                           
 13249                           
 13250                           ;psect for function ___lwmod
 13251  1535                     ___lwmod:	
 13252                           
 13253                           ;incstack = 0
 13254                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13255  1535  0870               	movf	___lwmod@divisor,w
 13256  1536  0471               	iorwf	___lwmod@divisor+1,w
 13257  1537  1903               	btfsc	3,2
 13258  1538  2D5C               	goto	l2791
 13259  1539  01F5               	clrf	___lwmod@counter
 13260  153A  0AF5               	incf	___lwmod@counter,f
 13261  153B                     l2781:	
 13262  153B  1BF1               	btfsc	___lwmod@divisor+1,7
 13263  153C  2D47               	goto	l2783
 13264  153D  3001               	movlw	1
 13265  153E                     u2945:	
 13266  153E  35F0               	lslf	___lwmod@divisor,f
 13267  153F  0DF1               	rlf	___lwmod@divisor+1,f
 13268  1540  0B89               	decfsz	9,f
 13269  1541  2D3E               	goto	u2945
 13270  1542  3001               	movlw	1
 13271  1543  00F4               	movwf	??___lwmod
 13272  1544  0874               	movf	??___lwmod,w
 13273  1545  07F5               	addwf	___lwmod@counter,f
 13274  1546  2D3B               	goto	l2781
 13275  1547                     l2783:	
 13276  1547  0871               	movf	___lwmod@divisor+1,w
 13277  1548  0273               	subwf	___lwmod@dividend+1,w
 13278  1549  1D03               	skipz
 13279  154A  2D4D               	goto	u2965
 13280  154B  0870               	movf	___lwmod@divisor,w
 13281  154C  0272               	subwf	___lwmod@dividend,w
 13282  154D                     u2965:	
 13283  154D  1C03               	skipc
 13284  154E  2D53               	goto	l2787
 13285  154F  0870               	movf	___lwmod@divisor,w
 13286  1550  02F2               	subwf	___lwmod@dividend,f
 13287  1551  0871               	movf	___lwmod@divisor+1,w
 13288  1552  3BF3               	subwfb	___lwmod@dividend+1,f
 13289  1553                     l2787:	
 13290  1553  3001               	movlw	1
 13291  1554                     u2975:	
 13292  1554  36F1               	lsrf	___lwmod@divisor+1,f
 13293  1555  0CF0               	rrf	___lwmod@divisor,f
 13294  1556  0B89               	decfsz	9,f
 13295  1557  2D54               	goto	u2975
 13296  1558  3001               	movlw	1
 13297  1559  02F5               	subwf	___lwmod@counter,f
 13298  155A  1D03               	btfss	3,2
 13299  155B  2D47               	goto	l2783
 13300  155C                     l2791:	
 13301  155C  0873               	movf	___lwmod@dividend+1,w
 13302  155D  00F1               	movwf	?___lwmod+1
 13303  155E  0872               	movf	___lwmod@dividend,w
 13304  155F  00F0               	movwf	?___lwmod
 13305  1560  0008               	return
 13306  1561                     __end_of___lwmod:	
 13307                           
 13308                           	psect	text37
 13309  0933                     __ptext37:	
 13310 ;; *************** function ___awdiv *****************
 13311 ;; Defined at:
 13312 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;  divisor         2    0[COMMON] int 
 13315 ;;  dividend        2    2[COMMON] int 
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;  quotient        2    7[COMMON] int 
 13318 ;;  sign            1    6[COMMON] unsigned char 
 13319 ;;  counter         1    5[COMMON] unsigned char 
 13320 ;; Return value:  Size  Location     Type
 13321 ;;                  2    0[COMMON] int 
 13322 ;; Registers used:
 13323 ;;		wreg, status,2, status,0
 13324 ;; Tracked objects:
 13325 ;;		On entry : 0/0
 13326 ;;		On exit  : 0/0
 13327 ;;		Unchanged: 0/0
 13328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13330 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13332 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13333 ;;Total ram usage:        9 bytes
 13334 ;; Hardware stack levels used:    1
 13335 ;; This function calls:
 13336 ;;		Nothing
 13337 ;; This function is called by:
 13338 ;;		_LCDWriteInt
 13339 ;;		_main
 13340 ;; This function uses a non-reentrant model
 13341 ;;
 13342                           
 13343                           
 13344                           ;psect for function ___awdiv
 13345  0933                     ___awdiv:	
 13346                           
 13347                           ;incstack = 0
 13348                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13349  0933  01F6               	clrf	___awdiv@sign
 13350  0934  1FF1               	btfss	___awdiv@divisor+1,7
 13351  0935  293D               	goto	l2645
 13352  0936  09F0               	comf	___awdiv@divisor,f
 13353  0937  09F1               	comf	___awdiv@divisor+1,f
 13354  0938  0AF0               	incf	___awdiv@divisor,f
 13355  0939  1903               	skipnz
 13356  093A  0AF1               	incf	___awdiv@divisor+1,f
 13357  093B  01F6               	clrf	___awdiv@sign
 13358  093C  0AF6               	incf	___awdiv@sign,f
 13359  093D                     l2645:	
 13360  093D  1FF3               	btfss	___awdiv@dividend+1,7
 13361  093E  2948               	goto	l2651
 13362  093F  09F2               	comf	___awdiv@dividend,f
 13363  0940  09F3               	comf	___awdiv@dividend+1,f
 13364  0941  0AF2               	incf	___awdiv@dividend,f
 13365  0942  1903               	skipnz
 13366  0943  0AF3               	incf	___awdiv@dividend+1,f
 13367  0944  3001               	movlw	1
 13368  0945  00F4               	movwf	??___awdiv
 13369  0946  0874               	movf	??___awdiv,w
 13370  0947  06F6               	xorwf	___awdiv@sign,f
 13371  0948                     l2651:	
 13372  0948  01F7               	clrf	___awdiv@quotient
 13373  0949  01F8               	clrf	___awdiv@quotient+1
 13374  094A  0870               	movf	___awdiv@divisor,w
 13375  094B  0471               	iorwf	___awdiv@divisor+1,w
 13376  094C  1903               	btfsc	3,2
 13377  094D  2977               	goto	l2673
 13378  094E  01F5               	clrf	___awdiv@counter
 13379  094F  0AF5               	incf	___awdiv@counter,f
 13380  0950                     l2661:	
 13381  0950  1BF1               	btfsc	___awdiv@divisor+1,7
 13382  0951  295C               	goto	l2663
 13383  0952  3001               	movlw	1
 13384  0953                     u2675:	
 13385  0953  35F0               	lslf	___awdiv@divisor,f
 13386  0954  0DF1               	rlf	___awdiv@divisor+1,f
 13387  0955  0B89               	decfsz	9,f
 13388  0956  2953               	goto	u2675
 13389  0957  3001               	movlw	1
 13390  0958  00F4               	movwf	??___awdiv
 13391  0959  0874               	movf	??___awdiv,w
 13392  095A  07F5               	addwf	___awdiv@counter,f
 13393  095B  2950               	goto	l2661
 13394  095C                     l2663:	
 13395  095C  3001               	movlw	1
 13396  095D                     u2695:	
 13397  095D  35F7               	lslf	___awdiv@quotient,f
 13398  095E  0DF8               	rlf	___awdiv@quotient+1,f
 13399  095F  0B89               	decfsz	9,f
 13400  0960  295D               	goto	u2695
 13401  0961  0871               	movf	___awdiv@divisor+1,w
 13402  0962  0273               	subwf	___awdiv@dividend+1,w
 13403  0963  1D03               	skipz
 13404  0964  2967               	goto	u2705
 13405  0965  0870               	movf	___awdiv@divisor,w
 13406  0966  0272               	subwf	___awdiv@dividend,w
 13407  0967                     u2705:	
 13408  0967  1C03               	skipc
 13409  0968  296E               	goto	l2669
 13410  0969  0870               	movf	___awdiv@divisor,w
 13411  096A  02F2               	subwf	___awdiv@dividend,f
 13412  096B  0871               	movf	___awdiv@divisor+1,w
 13413  096C  3BF3               	subwfb	___awdiv@dividend+1,f
 13414  096D  1477               	bsf	___awdiv@quotient,0
 13415  096E                     l2669:	
 13416  096E  3001               	movlw	1
 13417  096F                     u2715:	
 13418  096F  36F1               	lsrf	___awdiv@divisor+1,f
 13419  0970  0CF0               	rrf	___awdiv@divisor,f
 13420  0971  0B89               	decfsz	9,f
 13421  0972  296F               	goto	u2715
 13422  0973  3001               	movlw	1
 13423  0974  02F5               	subwf	___awdiv@counter,f
 13424  0975  1D03               	btfss	3,2
 13425  0976  295C               	goto	l2663
 13426  0977                     l2673:	
 13427  0977  0876               	movf	___awdiv@sign,w
 13428  0978  1903               	btfsc	3,2
 13429  0979  297F               	goto	l2677
 13430  097A  09F7               	comf	___awdiv@quotient,f
 13431  097B  09F8               	comf	___awdiv@quotient+1,f
 13432  097C  0AF7               	incf	___awdiv@quotient,f
 13433  097D  1903               	skipnz
 13434  097E  0AF8               	incf	___awdiv@quotient+1,f
 13435  097F                     l2677:	
 13436  097F  0878               	movf	___awdiv@quotient+1,w
 13437  0980  00F1               	movwf	?___awdiv+1
 13438  0981  0877               	movf	___awdiv@quotient,w
 13439  0982  00F0               	movwf	?___awdiv
 13440  0983  0008               	return
 13441  0984                     __end_of___awdiv:	
 13442                           
 13443                           	psect	text38
 13444  1748                     __ptext38:	
 13445 ;; *************** function _LCDWriteCharacter *****************
 13446 ;; Defined at:
 13447 ;;		line 140 in file "lcd.c"
 13448 ;; Parameters:    Size  Location     Type
 13449 ;;  character       1    wreg     const unsigned char 
 13450 ;; Auto vars:     Size  Location     Type
 13451 ;;  character       1    5[BANK0 ] const unsigned char 
 13452 ;;  base            2    6[BANK0 ] unsigned int 
 13453 ;; Return value:  Size  Location     Type
 13454 ;;                  1    wreg      void 
 13455 ;; Registers used:
 13456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13457 ;; Tracked objects:
 13458 ;;		On entry : 0/0
 13459 ;;		On exit  : 0/0
 13460 ;;		Unchanged: 0/0
 13461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13463 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13464 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13465 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;Total ram usage:        6 bytes
 13467 ;; Hardware stack levels used:    1
 13468 ;; Hardware stack levels required when called:    1
 13469 ;; This function calls:
 13470 ;;		_LCDWrite
 13471 ;;		___wmul
 13472 ;; This function is called by:
 13473 ;;		_LCDWriteString
 13474 ;;		_LCDWriteInt
 13475 ;;		_main
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           
 13480                           ;psect for function _LCDWriteCharacter
 13481  1748                     _LCDWriteCharacter:	
 13482                           
 13483                           ;incstack = 0
 13484                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13485                           ;LCDWriteCharacter@character stored from wreg
 13486  1748  0020               	movlb	0	; select bank0
 13487  1749  00A5               	movwf	LCDWriteCharacter@character
 13488                           
 13489                           ;lcd.c: 142: uint16_t base;
 13490                           ;lcd.c: 143: base = character - 0x20;
 13491  174A  0825               	movf	LCDWriteCharacter@character,w
 13492  174B  3EE0               	addlw	224
 13493  174C  00A6               	movwf	LCDWriteCharacter@base
 13494  174D  30FF               	movlw	255
 13495  174E  1803               	skipnc
 13496  174F  3000               	movlw	0
 13497  1750  00A7               	movwf	LCDWriteCharacter@base+1
 13498                           
 13499                           ;lcd.c: 144: base *= 3;
 13500  1751  3003               	movlw	3
 13501  1752  00F9               	movwf	___wmul@multiplier
 13502  1753  3000               	movlw	0
 13503  1754  00FA               	movwf	___wmul@multiplier+1
 13504  1755  0827               	movf	LCDWriteCharacter@base+1,w
 13505  1756  00FC               	movwf	___wmul@multiplicand+1
 13506  1757  0826               	movf	LCDWriteCharacter@base,w
 13507  1758  00FB               	movwf	___wmul@multiplicand
 13508  1759  3194  2432  3197   	fcall	___wmul
 13509  175C  087A               	movf	?___wmul+1,w
 13510  175D  0020               	movlb	0	; select bank0
 13511  175E  00A7               	movwf	LCDWriteCharacter@base+1
 13512  175F  0879               	movf	?___wmul,w
 13513  1760  00A6               	movwf	LCDWriteCharacter@base
 13514                           
 13515                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13516  1761  0827               	movf	LCDWriteCharacter@base+1,w
 13517  1762  0085               	movwf	5
 13518  1763  0826               	movf	LCDWriteCharacter@base,w
 13519  1764  0084               	movwf	4
 13520  1765  3000               	movlw	low (_fonts| (0+32768))
 13521  1766  0784               	addwf	4,f
 13522  1767  3088               	movlw	high (_fonts| (0+32768))
 13523  1768  3D85               	addwfc	5,f
 13524  1769  0800               	movf	0,w	;code access
 13525  176A  00A2               	movwf	??_LCDWriteCharacter
 13526  176B  0822               	movf	??_LCDWriteCharacter,w
 13527  176C  00F0               	movwf	LCDWrite@data
 13528  176D  3001               	movlw	1
 13529  176E  3194  24EA  3197   	fcall	_LCDWrite
 13530                           
 13531                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13532  1771  0020               	movlb	0	; select bank0
 13533  1772  0826               	movf	LCDWriteCharacter@base,w
 13534  1773  3E01               	addlw	1
 13535  1774  00A2               	movwf	??_LCDWriteCharacter
 13536  1775  3000               	movlw	0
 13537  1776  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13538  1777  00A3               	movwf	??_LCDWriteCharacter+1
 13539  1778  3000               	movlw	low (_fonts| (0+32768))
 13540  1779  0722               	addwf	??_LCDWriteCharacter,w
 13541  177A  0084               	movwf	4
 13542  177B  3088               	movlw	high (_fonts| (0+32768))
 13543  177C  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13544  177D  0085               	movwf	5
 13545  177E  0800               	movf	0,w	;code access
 13546  177F  00A4               	movwf	??_LCDWriteCharacter+2
 13547  1780  0824               	movf	??_LCDWriteCharacter+2,w
 13548  1781  00F0               	movwf	LCDWrite@data
 13549  1782  3001               	movlw	1
 13550  1783  3194  24EA  3197   	fcall	_LCDWrite
 13551                           
 13552                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13553  1786  0020               	movlb	0	; select bank0
 13554  1787  0826               	movf	LCDWriteCharacter@base,w
 13555  1788  3E02               	addlw	2
 13556  1789  00A2               	movwf	??_LCDWriteCharacter
 13557  178A  3000               	movlw	0
 13558  178B  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13559  178C  00A3               	movwf	??_LCDWriteCharacter+1
 13560  178D  3000               	movlw	low (_fonts| (0+32768))
 13561  178E  0722               	addwf	??_LCDWriteCharacter,w
 13562  178F  0084               	movwf	4
 13563  1790  3088               	movlw	high (_fonts| (0+32768))
 13564  1791  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13565  1792  0085               	movwf	5
 13566  1793  0800               	movf	0,w	;code access
 13567  1794  00A4               	movwf	??_LCDWriteCharacter+2
 13568  1795  0824               	movf	??_LCDWriteCharacter+2,w
 13569  1796  00F0               	movwf	LCDWrite@data
 13570  1797  3001               	movlw	1
 13571  1798  3194  24EA  3197   	fcall	_LCDWrite
 13572                           
 13573                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13574  179B  01F0               	clrf	LCDWrite@data
 13575  179C  3001               	movlw	1
 13576  179D  3194  24EA         	fcall	_LCDWrite
 13577  179F  0008               	return
 13578  17A0                     __end_of_LCDWriteCharacter:	
 13579                           
 13580                           	psect	text39
 13581  1432                     __ptext39:	
 13582 ;; *************** function ___wmul *****************
 13583 ;; Defined at:
 13584 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13585 ;; Parameters:    Size  Location     Type
 13586 ;;  multiplier      2    9[COMMON] unsigned int 
 13587 ;;  multiplicand    2   11[COMMON] unsigned int 
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;  product         2    0[BANK0 ] unsigned int 
 13590 ;; Return value:  Size  Location     Type
 13591 ;;                  2    9[COMMON] unsigned int 
 13592 ;; Registers used:
 13593 ;;		wreg, status,2, status,0
 13594 ;; Tracked objects:
 13595 ;;		On entry : 0/0
 13596 ;;		On exit  : 0/0
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13602 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13603 ;;Total ram usage:        6 bytes
 13604 ;; Hardware stack levels used:    1
 13605 ;; This function calls:
 13606 ;;		Nothing
 13607 ;; This function is called by:
 13608 ;;		_readAnalog
 13609 ;;		_LCDWriteCharacter
 13610 ;;		_main
 13611 ;;		_eval_poly
 13612 ;; This function uses a non-reentrant model
 13613 ;;
 13614                           
 13615                           
 13616                           ;psect for function ___wmul
 13617  1432                     ___wmul:	
 13618                           
 13619                           ;incstack = 0
 13620                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13621  1432  0020               	movlb	0	; select bank0
 13622  1433  01A0               	clrf	___wmul@product
 13623  1434  01A1               	clrf	___wmul@product+1
 13624  1435                     l2209:	
 13625  1435  1C79               	btfss	___wmul@multiplier,0
 13626  1436  2C3C               	goto	l575
 13627  1437  087B               	movf	___wmul@multiplicand,w
 13628  1438  0020               	movlb	0	; select bank0
 13629  1439  07A0               	addwf	___wmul@product,f
 13630  143A  087C               	movf	___wmul@multiplicand+1,w
 13631  143B  3DA1               	addwfc	___wmul@product+1,f
 13632  143C                     l575:	
 13633  143C  3001               	movlw	1
 13634  143D                     u2025:	
 13635  143D  35FB               	lslf	___wmul@multiplicand,f
 13636  143E  0DFC               	rlf	___wmul@multiplicand+1,f
 13637  143F  0B89               	decfsz	9,f
 13638  1440  2C3D               	goto	u2025
 13639  1441  3001               	movlw	1
 13640  1442                     u2035:	
 13641  1442  36FA               	lsrf	___wmul@multiplier+1,f
 13642  1443  0CF9               	rrf	___wmul@multiplier,f
 13643  1444  0B89               	decfsz	9,f
 13644  1445  2C42               	goto	u2035
 13645  1446  0879               	movf	___wmul@multiplier,w
 13646  1447  047A               	iorwf	___wmul@multiplier+1,w
 13647  1448  1D03               	btfss	3,2
 13648  1449  2C35               	goto	l2209
 13649  144A  0020               	movlb	0	; select bank0
 13650  144B  0821               	movf	___wmul@product+1,w
 13651  144C  00FA               	movwf	?___wmul+1
 13652  144D  0820               	movf	___wmul@product,w
 13653  144E  00F9               	movwf	?___wmul
 13654  144F  0008               	return
 13655  1450                     __end_of___wmul:	
 13656                           
 13657                           	psect	text40
 13658  14EA                     __ptext40:	
 13659 ;; *************** function _LCDWrite *****************
 13660 ;; Defined at:
 13661 ;;		line 280 in file "lcd.c"
 13662 ;; Parameters:    Size  Location     Type
 13663 ;;  data_or_comm    1    wreg     unsigned char 
 13664 ;;  data            1    0[COMMON] unsigned char 
 13665 ;; Auto vars:     Size  Location     Type
 13666 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13667 ;;  i               1    4[COMMON] unsigned char 
 13668 ;;  d               1    3[COMMON] unsigned char 
 13669 ;; Return value:  Size  Location     Type
 13670 ;;                  1    wreg      void 
 13671 ;; Registers used:
 13672 ;;		wreg, status,2, status,0
 13673 ;; Tracked objects:
 13674 ;;		On entry : 0/0
 13675 ;;		On exit  : 0/0
 13676 ;;		Unchanged: 0/0
 13677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13678 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13679 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13681 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13682 ;;Total ram usage:        5 bytes
 13683 ;; Hardware stack levels used:    1
 13684 ;; This function calls:
 13685 ;;		Nothing
 13686 ;; This function is called by:
 13687 ;;		_gotoXY
 13688 ;;		_LCDWriteCharacter
 13689 ;;		_LCDClear
 13690 ;;		_LCDInit
 13691 ;;		_LCDBitmap
 13692 ;; This function uses a non-reentrant model
 13693 ;;
 13694                           
 13695                           
 13696                           ;psect for function _LCDWrite
 13697  14EA                     _LCDWrite:	
 13698                           
 13699                           ;incstack = 0
 13700                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13701                           ;LCDWrite@data_or_command stored from wreg
 13702  14EA  00F2               	movwf	LCDWrite@data_or_command
 13703                           
 13704                           ;lcd.c: 282: uint8_t i,d;
 13705                           ;lcd.c: 284: d=data;
 13706  14EB  0870               	movf	LCDWrite@data,w
 13707  14EC  00F1               	movwf	??_LCDWrite
 13708  14ED  0871               	movf	??_LCDWrite,w
 13709  14EE  00F3               	movwf	LCDWrite@d
 13710                           
 13711                           ;lcd.c: 286: if(data_or_command == 0)
 13712  14EF  0872               	movf	LCDWrite@data_or_command,w
 13713  14F0  1D03               	btfss	3,2
 13714  14F1  2CF5               	goto	l190
 13715                           
 13716                           ;lcd.c: 287: {
 13717                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 13718  14F2  0020               	movlb	0	; select bank0
 13719  14F3  1116               	bcf	22,2	;volatile
 13720                           
 13721                           ;lcd.c: 289: }
 13722  14F4  2CF7               	goto	l191
 13723  14F5                     l190:	
 13724                           
 13725                           ;lcd.c: 290: else
 13726                           ;lcd.c: 291: {
 13727                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 13728  14F5  0020               	movlb	0	; select bank0
 13729  14F6  1516               	bsf	22,2	;volatile
 13730  14F7                     l191:	
 13731                           
 13732                           ;lcd.c: 293: }
 13733                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 13734  14F7  1096               	bcf	22,1	;volatile
 13735                           
 13736                           ;lcd.c: 297: for(i=0;i<8;i++)
 13737  14F8  01F4               	clrf	LCDWrite@i
 13738  14F9  3008               	movlw	8
 13739  14FA  0274               	subwf	LCDWrite@i,w
 13740  14FB  1803               	btfsc	3,0
 13741  14FC  2D0D               	goto	l193
 13742  14FD                     l192:	
 13743                           
 13744                           ;lcd.c: 298: {
 13745                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 13746  14FD  1196               	bcf	22,3	;volatile
 13747                           
 13748                           ;lcd.c: 301: if(d&0x80)
 13749  14FE  1FF3               	btfss	LCDWrite@d,7
 13750  14FF  2D01               	goto	l194
 13751                           
 13752                           ;lcd.c: 302: {
 13753                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 13754  1500  1596               	bsf	22,3	;volatile
 13755  1501                     l194:	
 13756                           
 13757                           ;lcd.c: 304: }
 13758                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 13759  1501  1616               	bsf	22,4	;volatile
 13760                           
 13761                           ;lcd.c: 308: d<<=1;
 13762  1502  1003               	clrc
 13763  1503  0DF3               	rlf	LCDWrite@d,f
 13764                           
 13765                           ;lcd.c: 310: LATAbits.LATA4=0;
 13766  1504  1216               	bcf	22,4	;volatile
 13767  1505  3001               	movlw	1
 13768  1506  00F1               	movwf	??_LCDWrite
 13769  1507  0871               	movf	??_LCDWrite,w
 13770  1508  07F4               	addwf	LCDWrite@i,f
 13771  1509  3008               	movlw	8
 13772  150A  0274               	subwf	LCDWrite@i,w
 13773  150B  1C03               	skipc
 13774  150C  2CFD               	goto	l192
 13775  150D                     l193:	
 13776                           
 13777                           ;lcd.c: 311: }
 13778                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 13779  150D  1496               	bsf	22,1	;volatile
 13780  150E  0008               	return
 13781  150F                     __end_of_LCDWrite:	
 13782                           
 13783                           	psect	text41
 13784  09E8                     __ptext41:	
 13785 ;; *************** function _Battery_State_Machine *****************
 13786 ;; Defined at:
 13787 ;;		line 35 in file "battery_charger.c"
 13788 ;; Parameters:    Size  Location     Type
 13789 ;;		None
 13790 ;; Auto vars:     Size  Location     Type
 13791 ;;		None
 13792 ;; Return value:  Size  Location     Type
 13793 ;;                  1    wreg      void 
 13794 ;; Registers used:
 13795 ;;		wreg, status,2, status,0
 13796 ;; Tracked objects:
 13797 ;;		On entry : 0/0
 13798 ;;		On exit  : 0/0
 13799 ;;		Unchanged: 0/0
 13800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13805 ;;Total ram usage:        1 bytes
 13806 ;; Hardware stack levels used:    1
 13807 ;; This function calls:
 13808 ;;		Nothing
 13809 ;; This function is called by:
 13810 ;;		_main
 13811 ;; This function uses a non-reentrant model
 13812 ;;
 13813                           
 13814                           
 13815                           ;psect for function _Battery_State_Machine
 13816  09E8                     _Battery_State_Machine:	
 13817                           
 13818                           ;battery_charger.c: 37: if(battery_state == PRECHARGE)
 13819                           
 13820                           ;incstack = 0
 13821                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 13822  09E8  3003               	movlw	3
 13823  09E9  0021               	movlb	1	; select bank1
 13824  09EA  066D               	xorwf	_battery_state^(0+128),w
 13825  09EB  1D03               	btfss	3,2
 13826  09EC  2A10               	goto	l2825
 13827                           
 13828                           ;battery_charger.c: 38: {
 13829                           ;battery_charger.c: 39: if(voltage[1] < 1075)
 13830  09ED  0851               	movf	((_voltage+1)^(0+128)+2),w
 13831  09EE  3A80               	xorlw	128
 13832  09EF  00F0               	movwf	??_Battery_State_Machine
 13833  09F0  3084               	movlw	132
 13834  09F1  0270               	subwf	??_Battery_State_Machine,w
 13835  09F2  1D03               	skipz
 13836  09F3  29F6               	goto	u3075
 13837  09F4  3033               	movlw	51
 13838  09F5  0250               	subwf	(_voltage^(0+128)+2),w
 13839  09F6                     u3075:	
 13840  09F6  1803               	skipnc
 13841  09F7  2A06               	goto	l2823
 13842                           
 13843                           ;battery_charger.c: 40: {
 13844                           ;battery_charger.c: 41: if(state_counter)
 13845  09F8  0022               	movlb	2	; select bank2
 13846  09F9  0862               	movf	_state_counter^(0+256),w
 13847  09FA  0463               	iorwf	(_state_counter+1)^(0+256),w
 13848  09FB  1903               	btfsc	3,2
 13849  09FC  2A02               	goto	l107
 13850                           
 13851                           ;battery_charger.c: 42: {
 13852                           ;battery_charger.c: 43: state_counter-=1;
 13853  09FD  3001               	movlw	1
 13854  09FE  02E2               	subwf	_state_counter^(0+256),f
 13855  09FF  3000               	movlw	0
 13856  0A00  3BE3               	subwfb	(_state_counter+1)^(0+256),f
 13857                           
 13858                           ;battery_charger.c: 44: }
 13859  0A01  0008               	return
 13860  0A02                     l107:	
 13861                           
 13862                           ;battery_charger.c: 45: else
 13863                           ;battery_charger.c: 46: {
 13864                           ;battery_charger.c: 47: battery_state = FAULT;
 13865  0A02  0021               	movlb	1	; select bank1
 13866  0A03  01ED               	clrf	_battery_state^(0+128)
 13867  0A04  0AED               	incf	_battery_state^(0+128),f
 13868                           
 13869                           ;battery_charger.c: 48: }
 13870                           ;battery_charger.c: 49: }
 13871  0A05  0008               	return
 13872  0A06                     l2823:	
 13873                           
 13874                           ;battery_charger.c: 50: else
 13875                           ;battery_charger.c: 51: {
 13876                           ;battery_charger.c: 52: battery_state = CHARGE;
 13877  0A06  3004               	movlw	4
 13878  0A07  00F0               	movwf	??_Battery_State_Machine
 13879  0A08  0870               	movf	??_Battery_State_Machine,w
 13880  0A09  0021               	movlb	1	; select bank1
 13881  0A0A  00ED               	movwf	_battery_state^(0+128)
 13882                           
 13883                           ;battery_charger.c: 53: { Iref = 40; };
 13884  0A0B  3028               	movlw	40
 13885  0A0C  00E9               	movwf	_Iref^(0+128)
 13886  0A0D  3000               	movlw	0
 13887  0A0E  00EA               	movwf	(_Iref^(0+128)+1)
 13888                           
 13889                           ;battery_charger.c: 54: }
 13890                           ;battery_charger.c: 55: }
 13891  0A0F  0008               	return
 13892  0A10                     l2825:	
 13893                           
 13894                           ;battery_charger.c: 56: else if(battery_state == CHARGE)
 13895  0A10  3004               	movlw	4
 13896  0A11  066D               	xorwf	_battery_state^(0+128),w
 13897  0A12  1D03               	btfss	3,2
 13898  0A13  2A43               	goto	l2839
 13899                           
 13900                           ;battery_charger.c: 57: {
 13901                           ;battery_charger.c: 58: if((!Imode0))
 13902  0A14  086F               	movf	_Imode0^(0+128),w
 13903  0A15  1D03               	btfss	3,2
 13904  0A16  0008               	return
 13905                           
 13906                           ;battery_charger.c: 59: {
 13907                           ;battery_charger.c: 60: if(current[1] < Imin)
 13908  0A17  0849               	movf	((_current+1)^(0+128)+2),w
 13909  0A18  3A80               	xorlw	128
 13910  0A19  00F0               	movwf	??_Battery_State_Machine
 13911  0A1A  0022               	movlb	2	; select bank2
 13912  0A1B  0861               	movf	(_Imin+1)^(0+256),w
 13913  0A1C  3A80               	xorlw	128
 13914  0A1D  0270               	subwf	??_Battery_State_Machine,w
 13915  0A1E  1D03               	skipz
 13916  0A1F  2A23               	goto	u3115
 13917  0A20  0860               	movf	_Imin^(0+256),w
 13918  0A21  0021               	movlb	1	; select bank1
 13919  0A22  0248               	subwf	(_current^(0+128)+2),w
 13920  0A23                     u3115:	
 13921  0A23  1803               	skipnc
 13922  0A24  2A36               	goto	l2835
 13923                           
 13924                           ;battery_charger.c: 61: {
 13925                           ;battery_charger.c: 62: IminCount-=2;
 13926  0A25  3002               	movlw	2
 13927  0A26  0021               	movlb	1	; select bank1
 13928  0A27  02EB               	subwf	_IminCount^(0+128),f
 13929  0A28  3000               	movlw	0
 13930  0A29  3BEC               	subwfb	(_IminCount+1)^(0+128),f
 13931                           
 13932                           ;battery_charger.c: 63: if(IminCount<2)
 13933  0A2A  3000               	movlw	0
 13934  0A2B  026C               	subwf	(_IminCount+1)^(0+128),w
 13935  0A2C  3002               	movlw	2
 13936  0A2D  1903               	skipnz
 13937  0A2E  026B               	subwf	_IminCount^(0+128),w
 13938  0A2F  1803               	skipnc
 13939  0A30  0008               	return
 13940                           
 13941                           ;battery_charger.c: 64: {
 13942                           ;battery_charger.c: 65: battery_state = FLOAT;
 13943  0A31  3005               	movlw	5
 13944  0A32  00F0               	movwf	??_Battery_State_Machine
 13945  0A33  0870               	movf	??_Battery_State_Machine,w
 13946  0A34  00ED               	movwf	_battery_state^(0+128)
 13947                           
 13948                           ;battery_charger.c: 66: }
 13949                           ;battery_charger.c: 67: }
 13950  0A35  0008               	return
 13951  0A36                     l2835:	
 13952                           
 13953                           ;battery_charger.c: 68: else
 13954                           ;battery_charger.c: 69: {
 13955                           ;battery_charger.c: 70: if(IminCount<10)IminCount+=1;
 13956  0A36  3000               	movlw	0
 13957  0A37  0021               	movlb	1	; select bank1
 13958  0A38  026C               	subwf	(_IminCount+1)^(0+128),w
 13959  0A39  300A               	movlw	10
 13960  0A3A  1903               	skipnz
 13961  0A3B  026B               	subwf	_IminCount^(0+128),w
 13962  0A3C  1803               	skipnc
 13963  0A3D  0008               	return
 13964  0A3E  3001               	movlw	1
 13965  0A3F  07EB               	addwf	_IminCount^(0+128),f
 13966  0A40  3000               	movlw	0
 13967  0A41  3DEC               	addwfc	(_IminCount+1)^(0+128),f
 13968                           
 13969                           ;battery_charger.c: 71: }
 13970                           ;battery_charger.c: 72: }
 13971                           ;battery_charger.c: 73: }
 13972  0A42  0008               	return
 13973  0A43                     l2839:	
 13974                           
 13975                           ;battery_charger.c: 74: else if(battery_state == FLOAT)
 13976  0A43  3005               	movlw	5
 13977  0A44  066D               	xorwf	_battery_state^(0+128),w
 13978  0A45  1D03               	btfss	3,2
 13979  0A46  0008               	return
 13980                           
 13981                           ;battery_charger.c: 75: {
 13982                           ;battery_charger.c: 76: { Vref = 1380; };
 13983  0A47  3064               	movlw	100
 13984  0A48  00E7               	movwf	_Vref^(0+128)
 13985  0A49  3005               	movlw	5
 13986  0A4A  00E8               	movwf	(_Vref^(0+128)+1)
 13987                           
 13988                           ;battery_charger.c: 77: { Iref = 20; };
 13989  0A4B  3014               	movlw	20
 13990  0A4C  00E9               	movwf	_Iref^(0+128)
 13991  0A4D  3000               	movlw	0
 13992  0A4E  00EA               	movwf	(_Iref^(0+128)+1)
 13993                           
 13994                           ;battery_charger.c: 81: {
 13995                           
 13996                           ;battery_charger.c: 78: }
 13997  0A4F  0008               	return
 13998  0A50                     __end_of_Battery_State_Machine:	
 13999  007E                     btemp	set	126	;btemp
 14000  007E                     wtemp0	set	126


Data Sizes:
    Strings     5
    Constant    330
    Data        18
    BSS         85
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      79
    BANK1            80     38      80
    BANK2            80      0      68
    BANK3            48      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCDWriteString@characters	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCDWriteString
    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteString->_LCDWriteCharacter
    _LCDWriteInt->___fttol
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   85342
                                             72 BANK0      3     3      0
                                              0 BANK1     38    38      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                     _LCDWriteString
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   34249
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   17333
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7739
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2961
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1922
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6899
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6899
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     676
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3789
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2434
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3847
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     856
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2968
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    2066
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     1      2    2218
                                             13 COMMON     1     1      0
                                              8 BANK0      2     0      2
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7956
                                             30 BANK0     16    11      5
                            _ADCRead (ARG)
                  _LCDWriteCharacter
                            ___awdiv
                            ___fttol (ARG)
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1042
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    2120
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1152
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     856
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _ADCRead (ARG)
     _LCDWriteCharacter (ARG)
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     ___lwmod (ARG)
   _LCDWriteString
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     26      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      44       9       85.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               30      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 26 03:26:32 2018

                                  _j 00E5               LCDWriteInt@fieldLength 0040  
            __size_of_PWM_Initialize 001F                          __CFG_CP$OFF 0000  
                                 l60 13D2                                   l57 13CB  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 004C  
                       ___ftadd@exp2 004B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 004A                                  l107 0A02  
                                l190 14F5                                  l191 14F7  
                                l192 14FD                                  l193 150D  
                                l194 1501                                  l630 0A61  
                      LCDClear@index 0079                                  l575 143C  
                                l743 09C9                                  l744 09D1  
                                l736 09B6                                  l827 0B3F  
                                l767 0E8C                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                                _log 0C89                      __end_of_ADCRead 13D9  
                    _TMR2_Initialize 1385                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_LCDInit 1607  
                       ?_LCDWriteInt 003E                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 002A                         ___ftdiv@sign 002F  
                               l3011 171C                                 l3005 16D7  
                               l2231 0E1C                                 l2303 0D66  
                               l2209 1435                                 l2161 0993  
                               l2401 17F9                                 l2171 09BB  
                               l2163 099D                                 l2227 0E15  
                               l2331 0DC5                                 l2315 0DA1  
                               l3123 03B2                                 l2173 09C3  
                               l2165 09A2                                 l2157 098C  
                               l2261 0E6B                                 l2237 0E2B  
                               l3141 0403                                 l3117 039B  
                               l3061 026C                                 l2351 14D4  
                               l2255 0E58                                 l2327 0DBD  
                               l2319 0DA9                                 l3143 0408  
                               l3135 03E1                                 l3127 03B9  
                               l3055 024D                                 l2273 0E9E  
                               l2257 0E62                                 l2249 0E45  
                               l3145 040B                                 l3081 02F4  
                               l3073 02EB                                 l3049 0247  
                               l2267 0E7E                                 l2259 0E67  
                               l2363 1633                                 l3155 042E  
                               l2277 0EB0                                 l2269 0E88  
                               l3093 0356                                 l2615 0A82  
                               l2607 0A72                                 l2287 0ECB  
                               l2359 161D                                 l2383 1654  
                               l3087 0339                                 l2481 1530  
                               l2633 0AC9                                 l2625 0AB0  
                               l2617 0A90                                 l2297 0D50  
                               l3281 07BE                                 l2651 0948  
                               l2475 151C                                 l2715 0C67  
                               l2707 0C4E                                 l3099 035F  
                               l2661 0950                                 l2645 093D  
                               l2901 0064                                 l2629 0ABB  
                               l2581 0CA8                                 l2823 0A06  
                               l2663 095C                                 l2903 0068  
                               l2727 1476                                 l2825 0A10  
                               l2673 0977                                 l2913 007A  
                               l2905 0070                                 l2737 0AEB  
                               l2809 01E7                                 l2835 0A36  
                               l2915 00A1                                 l2907 0076  
                               l2763 0B36                                 l2755 0B1B  
                               l2851 1691                                 l2587 0CBB  
                               l2677 097F                                 l2669 096E  
                               l2781 153B                                 l2693 0C0D  
                               l2765 0B42                                 l2757 0B29  
                               l2839 0A43                                 l2783 1547  
                               l2791 155C                                 l2919 00AF  
                               l2871 141B                                 l2687 0BF7  
                               l2863 16B7                                 l2855 1696  
                               l2943 0B7D                                 l2769 0B50  
                               l2953 0BA9                                 l2787 1553  
                               l2963 0BB7                                 l2955 0BAB  
                               l2885 002C                                 l2949 0B97  
                               l2895 0033                                 l2975 0BDC  
                               l2897 0060                                 l2969 0BC2  
                               l2977 0BDE                                 ?_log 0057  
                               STR_1 181B                                 u2025 143D  
                               u2035 1442                                 u3005 0134  
                               u2205 0E6C                                 _LATA 0016  
                               _LATB 0017                                 u3015 0172  
                               _LATC 0018                                 u3025 01C1  
                               u2145 0E46                                 u2305 0D72  
                               u3115 0A23                                 u2235 0E7F  
                               u2315 0D82                                 u3220 0016  
                               u2500 15CA                                 u3055 01F3  
                               u2175 0E59                                 u2335 0DAA  
                               u2345 0DB0                                 _T2PR 028D  
                               u3075 09F6                                 u3315 13FE  
                               u3155 1688                                 u3325 1414  
                               u2605 0AA5                                 u3335 13E8  
                               u2615 0AB1                                 u2375 0DC6  
                               u2705 0967                                 u3185 16A1  
                               u3345 0B6B                                 u2385 0DCC  
                               u3505 02DC                                 _T4PR 0293  
                               u2715 096F                                 u1915 09BE  
                               u3435 16D1                                 u3355 0B77  
                               u3285 008F                                 u2485 151A  
                               u2805 0C68                                 u3445 1716  
                               u3365 0B87                                 u2495 152E  
                               u2575 0A85                                 u3375 0B93  
                               u3535 0347                                 u2905 0B37  
                               u3385 0BA1                                 u3625 03DC  
                               u2675 0953                                 u3707 157E  
                               u1955 09D8                                 u1875 0998  
                               u2595 0A91                                 u3635 03FA  
                               u3717 158D                                 u2765 0C1F  
                               u2845 0AF2                                 u2695 095D  
                               u1895 09B1                                 u2775 0C2F  
                               u3575 0394                                 u2945 153E  
                               u2785 0C4F                                 u2795 0C5E  
                               u2875 0B1C                                 u3595 03AB  
                               u2965 154D                                 u2975 1554  
                               u3697 0BCD                                 u2995 00DA  
                tempCalc@analogValue 005D                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 0160  
                               _Iref 00E9                                 _Iout 00DD  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Vref 00E7                                 _main 0210  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                      _state_counter 0162                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               log@x 0057                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 003E  
                       ___ftmul@sign 003F                     __end_of_LCDClear 1535  
                       ___fttol@exp1 003D                                ??_log 005A  
                       ___fttol@lval 0039                         main@fastLoop 00AF  
__size_of_Init_Battery_State_Machine 001E       __size_of_OSCILLATOR_Initialize 0009  
                   __end_of_LCDWrite 150F        __end_of_OSCILLATOR_Initialize 136D  
                    __end_of___aldiv 0AD2                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADPCH 009E                                _ADREF 009A  
                    __end_of___awdiv 0984                                _ADPRE 009C  
                    __end_of___ftadd 0EE3                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      __end_of___ftdiv 0C89  
                    __end_of___ftmul 0DED                      ___awdiv@divisor 0070  
                    __end_of___ftsub 148C                      __end_of___fttol 0B59  
                              _T2CON 028E                                _T4CON 0294  
                              _T2HLT 028F                                _T4HLT 0295  
                              _T2TMR 028C                                _T2RST 0291  
                    __end_of___lwmod 1561                                _T4TMR 0292  
                              _T4RST 0297                      ___awdiv@counter 0075  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    _TMR4_Initialize 1393               ?_Battery_State_Machine 0070  
                              _cc_cv 00E6                        ___awtoft@sign 007D  
                              _frexp 1642                                _fonts 0800  
                              _errno 00DB                        ___ftpack@sign 0074  
                              main@j 00C3                         main@slowLoop 00B0  
                              status 0003                                wtemp0 007E  
                    __initialization 07C1                          log@exponent 005B  
                       __end_of_main 07C1                    readAnalog@channel 0026  
            __end_of_TMR2_Initialize 1393                            ??_ADCRead 0073  
                             ??_main 0068                        ___fttol@sign1 0038  
                          ??_LCDInit 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             ?_frexp 0070                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _CCPR1H 030D  
                             _CCPR1L 030C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                     __end_of___awtoft 14EA  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                     __end_of___ftpack 09E8  
                             _RB0PPS 0F18                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                     __CFG_PWRTE$OFF 0000                               _Imode0 00EF  
                             _Imode1 00EE                       _LCDWriteString 141B  
                       _CCPTMRS0bits 021E                         _CCPTMRS1bits 021F  
                             ___ftge 1607                            ??___aldiv 0078  
                             ___wmul 1432                            ??___awdiv 0074  
                          ??___ftadd 0046                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 14AB                            ??___ftdiv 0026  
                          ??___ftmul 0036                            ??___ftsub 007E  
                          ??___fttol 0034                            ??___lwmod 0074  
                             _gotoXY 13B1                               _button 006E  
            __end_of_TMR4_Initialize 13A1                     ___awdiv@quotient 0077  
                             _warmup 00DF                               _totals 0120  
              ___ftmul@f3_as_product 003B                     __end_of_tempCalc 1000  
                       LCDWrite@data 0070                         LCDWriteInt@i 004D  
                       LCDWriteInt@j 004C             readAnalog@analog_channel 003A  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 1561  
               __size_of_LCDWriteInt 00B9                     __end_oflog@coeff 181B  
            __end_of__initialization 07FD                           ___ftadd@f1 0040  
                         ___ftadd@f2 0043                           ___ftge@ff1 0070  
                         ___ftge@ff2 0073                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070               __end_of_LCDWriteString 1432  
                       eval_poly@res 0054                           ___ftdiv@f1 0023  
                         ___ftdiv@f2 0020                           ___ftdiv@f3 002B  
                         ___awtoft@c 0078                           ___ftmul@f1 0030  
                         ___ftmul@f2 0033               __end_of_PWM_Initialize 14CA  
                         ___ftsub@f1 0050                           ___ftsub@f2 004D  
                         ___fttol@f1 0030                       __pcstackCOMMON 0070  
                       __pidataBANK1 0009                         __pidataBANK2 13A1  
                ??_SYSTEM_Initialize 007B                        __end_of_frexp 167D  
                      __end_of_fonts 092F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                   _PWM1_LoadDutyValue 13D9  
                   ?_TMR2_Initialize 0070                           _cc_cv_mode 167D  
        __size_of_PWM7_LoadDutyValue 0016                       main@efficiency 00BA  
                ?_PWM1_LoadDutyValue 0070                    LCDWriteInt@F14396 00D6  
                  _calculateCurrent0 16BE                    _calculateCurrent1 1703  
                            ??_frexp 0074            __end_of_SYSTEM_Initialize 1595  
                         __pbssBANK0 006B                           __pbssBANK1 00C6  
                         __pbssBANK2 0120                   ?_calculateCurrent0 0070  
                 ?_calculateCurrent1 0070                   __size_of_eval_poly 0060  
                         ??_LCDClear 0078                           ??_LCDWrite 0071  
                    ?_LCDWriteString 0028                 ??_PWM1_LoadDutyValue 0072  
                ??_calculateCurrent0 003E                  ??_calculateCurrent1 003E  
                    ?_PWM_Initialize 0070                           __pmaintext 0210  
                            ?___ftge 0070                              ?___wmul 0079  
                    __CFG_PPS1WAY$ON 0000           __end_of_PWM6_LoadDutyValue 1405  
                            ?_gotoXY 0075                              _ADCRead 13C4  
                   ?_TMR4_Initialize 0070                            ?___awtoft 0078  
                          ?___ftpack 0070                              _ADSTPTH 0113  
                            _ADSTPTL 0112             __CFG_SCANE$not_available 0000  
                __CFG_RSTOSC$HFINT32 0000              __size_of_ADC_Initialize 001F  
            ??_Battery_State_Machine 0070                              _LCDInit 15CC  
          __end_of_calculateCurrent0 1703            __end_of_calculateCurrent1 1748  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _PWM6DCH 038D  
                            _PWM6DCL 038C                              _PWM7DCH 0391  
                            _PWM7DCL 0390                              _PWM6CON 038E  
                            _PWM7CON 0392                              _PPSLOCK 0E8F  
                     main@menuButton 00B9                       main@dutyCycle1 00BF  
                     main@dutyCycle6 00C4                       main@dutyCycle7 00BD  
                         _lastButton 006D                            ?_tempCalc 005D  
                         _readAnalog 00C4                              ___aldiv 0A50  
                    __size_of___ftge 003B                              ___awdiv 0933  
                            ___ftadd 0DED                           _readButton 0B59  
                            ___ftdiv 0BE0                      __size_of___wmul 001E  
                            ___ftmul 0D39                              ___ftsub 146E  
                            ___fttol 0AD2                   main@displayRefresh 00B1  
                            ___lwmod 1535                      __size_of_gotoXY 0013  
                         ??___awtoft 007B                           ??___ftpack 0075  
                  __end_of_eval_poly 1800                              _analogs 0140  
                            __ptext1 0EE3                              __ptext2 0C89  
                            __ptext3 1642                              __ptext4 17A0  
                            __ptext5 0D39                              __ptext6 1607  
                            __ptext7 146E                              __ptext8 0DED  
                            __ptext9 0B59                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 1364                            _T2CONbits 028E  
                            _current 00C6                         __size_of_log 00B0  
                     ADCRead@channel 0073                     ___aldiv@dividend 0074  
                          _T4CONbits 0294             ??_PIN_MANAGER_Initialize 0070  
                            _samples 2120           __size_of_SYSTEM_Initialize 0034  
                            clrloop0 136E                              _voltage 00CE  
       ??_Init_Battery_State_Machine 0070                 end_of_initialization 07FD  
              LCDWriteCharacter@base 0026                              gotoXY@x 0077  
                            gotoXY@y 0075                              init_ram 1379  
                            initloop 137A                           ??_tempCalc 007E  
                   ___aldiv@quotient 0022                    _LCDWriteCharacter 1748  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
         __size_of_calculateCurrent0 0045           __size_of_calculateCurrent1 0045  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0022  
                   __CFG_FEXTOSC$OFF 0000         PWM1_LoadDutyValue@dutyCycle1 0070  
                        _CCP1CONbits 030E                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 0041                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0025                    __size_of_LCDWrite 0025  
                        ___ftmul@exp 003A                          ?_readAnalog 0026  
          __end_of_LCDWriteCharacter 17A0                          ?_readButton 0070  
                     __end_of___ftge 1642                       __end_of___wmul 1450  
                     _ADC_Initialize 148C                       __end_of_gotoXY 13C4  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 00EB  
                start_initialization 07C1                           eval_poly@d 0050  
                         eval_poly@n 0052                           eval_poly@x 004D  
    __size_of_PIN_MANAGER_Initialize 0037                          __end_of_log 0D39  
                      ??_LCDWriteInt 0043                     ??_LCDWriteString 007D  
                         frexp@value 0070                     ??_PWM_Initialize 0070  
                    main@batteryTemp 00AD                     __CFG_LPBOREN$OFF 0000  
                           ??___ftge 0076                    tempCalc@steinhart 0065  
                           ??___wmul 007D               __end_of_ADC_Initialize 14AB  
                      _tempCalc$1294 0062                          __pdataBANK1 00EE  
                        __pdataBANK2 0150           __end_of_PWM7_LoadDutyValue 141B  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 2120       __size_of_Battery_State_Machine 0068  
      __end_of_Battery_State_Machine 0A50                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
                 _PWM6_LoadDutyValue 13EF             __size_of_TMR2_Initialize 000E  
                      _battery_state 00ED   __end_of_Init_Battery_State_Machine 146E  
         _Init_Battery_State_Machine 1450                  __size_of_readAnalog 014C  
                __size_of_readButton 0087                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 00C4                            __pnvBANK1 00E7  
                          __pnvBANK2 0160          __size_of_PWM1_LoadDutyValue 0016  
                          _main$1295 00B7                            _main$1296 00B2  
                          _main$1297 00A6                            _main$1298 00B5  
             _PIN_MANAGER_Initialize 1595           __size_of_LCDWriteCharacter 0058  
                           ?___aldiv 0070                    __size_of_tempCalc 011D  
                           ?___awdiv 0070                             ?___ftadd 0040  
                           ?___ftdiv 0020                             ?___ftmul 0030  
                           ?___ftsub 004D                             ?___fttol 0030  
                   LCDWriteInt@value 003E                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                            _eval_poly 17A0  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003B  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                           _LCDClear 150F                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 14EA  
                          clear_ram0 136D                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 16BE                             _PIR4bits 0710  
                          main@MPPT0 00C1                            main@MPPT1 00A9  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0079                           ?_eval_poly 004D  
                   __size_of_LCDInit 003B                          _LCDWriteInt 000B  
                           _Iflat_db 00E1                    ??_TMR2_Initialize 0070  
                    readAnalog@value 003C                            frexp@eptr 0073  
                   main@power0OutOld 00AB                     main@power1OutOld 00A4  
                       ??_readAnalog 0028                         ??_readButton 0074  
            ??_OSCILLATOR_Initialize 0070                 LCDWriteInt@numPlaces 0041  
                   __size_of___aldiv 0082                     __size_of___awdiv 0051  
                   __size_of___ftadd 00F6                     __size_of___ftdiv 00A9  
                   __size_of___ftmul 00B4                     __size_of___ftsub 001E  
                   __size_of___fttol 0087                     __size_of___lwmod 002C  
                        _readButtons 006B                             ___awtoft 14CA  
                           ___ftpack 0984                             _channels 0150  
                           __ptext10 00C4                             __ptext11 0A50  
                           __ptext20 1561                             __ptext12 13C4  
                           __ptext21 1393                             __ptext13 167D  
                           __ptext30 148C                             __ptext22 1385  
                           __ptext14 1703                             __ptext31 1405  
                           __ptext23 14AB                             __ptext15 16BE  
                           __ptext40 14EA                             __ptext32 13EF  
                           __ptext24 1595                             __ptext16 0AD2  
                           __ptext41 09E8                             __ptext33 13D9  
                           __ptext25 1364                             __ptext17 0BE0  
                           __ptext34 141B                             __ptext26 15CC  
                           __ptext18 14CA                             __ptext35 000B  
                           __ptext27 150F                             __ptext19 0984  
                           __ptext36 1535                             __ptext28 13B1  
                           __ptext37 0933                             __ptext29 1450  
                           __ptext38 1748                             __ptext39 1432  
                    LCDWriteInt@sign 0042                   __end_of_readAnalog 0210  
                          tempCalc@R 005F                   __end_of_readButton 0BE0  
                  ??_TMR4_Initialize 0070                        __size_of_main 05B1  
               __CFG_WDTCWS$WDTCWS_7 0000                             _tempCalc 0EE3  
        PIN_MANAGER_Initialize@state 0070                             log@coeff 1800  
                        ??_eval_poly 007E                          _sampleIndex 00E3  
                 _PWM7_LoadDutyValue 1405          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0047  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                        __pstringtext2 1800  
                      __pstringtext3 181B                        __pstringtext4 0000  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075             LCDWriteString@characters 0028  
                       ___aldiv@sign 0021                _Battery_State_Machine 09E8  
     __end_of_PIN_MANAGER_Initialize 15CC           __end_of_PWM1_LoadDutyValue 13EF  
                       main@VIn0_Old 00A0                         main@VIn1_Old 00A2  
            __size_of_LCDWriteString 0017  
