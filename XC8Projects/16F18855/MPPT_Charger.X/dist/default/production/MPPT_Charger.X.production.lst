

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jun 30 01:04:51 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x620,48
    62                           	dabs	1,0x5A0,80
    63                           	dabs	1,0x520,80
    64                           	dabs	1,0x4A0,80
    65                           	dabs	1,0x420,80
    66                           	dabs	1,0x3A0,80
    67                           	dabs	1,0x320,80
    68                           	dabs	1,0x2A0,80
    69                           	dabs	1,0x220,80
    70                           	dabs	1,0x1D0,32
    71                           	dabs	1,0x2120,0,_samples
    72                           	dabs	1,0x7E,2
    73  0000                     
    74                           ; Version 1.45
    75                           ; Generated 16/11/2017 GMT
    76                           ; 
    77                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F18855 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  001C                     	;# 
   131  001C                     	;# 
   132  001D                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  008C                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0110                     	;# 
   163  0110                     	;# 
   164  0111                     	;# 
   165  0112                     	;# 
   166  0112                     	;# 
   167  0113                     	;# 
   168  0114                     	;# 
   169  0114                     	;# 
   170  0115                     	;# 
   171  0116                     	;# 
   172  0116                     	;# 
   173  0117                     	;# 
   174  0119                     	;# 
   175  0119                     	;# 
   176  0119                     	;# 
   177  011A                     	;# 
   178  011A                     	;# 
   179  011A                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011B                     	;# 
   185  011C                     	;# 
   186  011C                     	;# 
   187  011C                     	;# 
   188  011D                     	;# 
   189  011D                     	;# 
   190  011D                     	;# 
   191  011E                     	;# 
   192  011E                     	;# 
   193  011E                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  011F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  018E                     	;# 
   202  018F                     	;# 
   203  0190                     	;# 
   204  0191                     	;# 
   205  0192                     	;# 
   206  0196                     	;# 
   207  0197                     	;# 
   208  0198                     	;# 
   209  0199                     	;# 
   210  019A                     	;# 
   211  019B                     	;# 
   212  019C                     	;# 
   213  020C                     	;# 
   214  020C                     	;# 
   215  020D                     	;# 
   216  020E                     	;# 
   217  020F                     	;# 
   218  020F                     	;# 
   219  0210                     	;# 
   220  0210                     	;# 
   221  0211                     	;# 
   222  0211                     	;# 
   223  0212                     	;# 
   224  0212                     	;# 
   225  0213                     	;# 
   226  0214                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0216                     	;# 
   230  0216                     	;# 
   231  0217                     	;# 
   232  0217                     	;# 
   233  0218                     	;# 
   234  0218                     	;# 
   235  0219                     	;# 
   236  021A                     	;# 
   237  021B                     	;# 
   238  021B                     	;# 
   239  021C                     	;# 
   240  021C                     	;# 
   241  021D                     	;# 
   242  021D                     	;# 
   243  021E                     	;# 
   244  021F                     	;# 
   245  028C                     	;# 
   246  028C                     	;# 
   247  028D                     	;# 
   248  028D                     	;# 
   249  028E                     	;# 
   250  028F                     	;# 
   251  0290                     	;# 
   252  0290                     	;# 
   253  0291                     	;# 
   254  0292                     	;# 
   255  0292                     	;# 
   256  0293                     	;# 
   257  0293                     	;# 
   258  0294                     	;# 
   259  0295                     	;# 
   260  0296                     	;# 
   261  0296                     	;# 
   262  0297                     	;# 
   263  0298                     	;# 
   264  0298                     	;# 
   265  0299                     	;# 
   266  0299                     	;# 
   267  029A                     	;# 
   268  029B                     	;# 
   269  029C                     	;# 
   270  029C                     	;# 
   271  029D                     	;# 
   272  030C                     	;# 
   273  030C                     	;# 
   274  030D                     	;# 
   275  030E                     	;# 
   276  030F                     	;# 
   277  0310                     	;# 
   278  0310                     	;# 
   279  0311                     	;# 
   280  0312                     	;# 
   281  0313                     	;# 
   282  0314                     	;# 
   283  0314                     	;# 
   284  0315                     	;# 
   285  0316                     	;# 
   286  0317                     	;# 
   287  0318                     	;# 
   288  0318                     	;# 
   289  0319                     	;# 
   290  031A                     	;# 
   291  031B                     	;# 
   292  031C                     	;# 
   293  031C                     	;# 
   294  031D                     	;# 
   295  031E                     	;# 
   296  031F                     	;# 
   297  038C                     	;# 
   298  038D                     	;# 
   299  038E                     	;# 
   300  0390                     	;# 
   301  0391                     	;# 
   302  0392                     	;# 
   303  040C                     	;# 
   304  040D                     	;# 
   305  040E                     	;# 
   306  040F                     	;# 
   307  0410                     	;# 
   308  0411                     	;# 
   309  0416                     	;# 
   310  0416                     	;# 
   311  0417                     	;# 
   312  0418                     	;# 
   313  0418                     	;# 
   314  0419                     	;# 
   315  041A                     	;# 
   316  041A                     	;# 
   317  041B                     	;# 
   318  041C                     	;# 
   319  041C                     	;# 
   320  041D                     	;# 
   321  041E                     	;# 
   322  041F                     	;# 
   323  048C                     	;# 
   324  048C                     	;# 
   325  048D                     	;# 
   326  048E                     	;# 
   327  048F                     	;# 
   328  048F                     	;# 
   329  0490                     	;# 
   330  0491                     	;# 
   331  0492                     	;# 
   332  0492                     	;# 
   333  0493                     	;# 
   334  0494                     	;# 
   335  0495                     	;# 
   336  0495                     	;# 
   337  0496                     	;# 
   338  0497                     	;# 
   339  0498                     	;# 
   340  0499                     	;# 
   341  049A                     	;# 
   342  049B                     	;# 
   343  049C                     	;# 
   344  049D                     	;# 
   345  050C                     	;# 
   346  050C                     	;# 
   347  050D                     	;# 
   348  050E                     	;# 
   349  050F                     	;# 
   350  050F                     	;# 
   351  0510                     	;# 
   352  0511                     	;# 
   353  0512                     	;# 
   354  0512                     	;# 
   355  0513                     	;# 
   356  0514                     	;# 
   357  0515                     	;# 
   358  0515                     	;# 
   359  0516                     	;# 
   360  0517                     	;# 
   361  0518                     	;# 
   362  0519                     	;# 
   363  051A                     	;# 
   364  051B                     	;# 
   365  051C                     	;# 
   366  051D                     	;# 
   367  058C                     	;# 
   368  058C                     	;# 
   369  058D                     	;# 
   370  058E                     	;# 
   371  058F                     	;# 
   372  058F                     	;# 
   373  0590                     	;# 
   374  0591                     	;# 
   375  0592                     	;# 
   376  0593                     	;# 
   377  060C                     	;# 
   378  060D                     	;# 
   379  060E                     	;# 
   380  060F                     	;# 
   381  0610                     	;# 
   382  0611                     	;# 
   383  0612                     	;# 
   384  0613                     	;# 
   385  0614                     	;# 
   386  0616                     	;# 
   387  0617                     	;# 
   388  0618                     	;# 
   389  0619                     	;# 
   390  061A                     	;# 
   391  061B                     	;# 
   392  061C                     	;# 
   393  061D                     	;# 
   394  061E                     	;# 
   395  068C                     	;# 
   396  068D                     	;# 
   397  068E                     	;# 
   398  068F                     	;# 
   399  0690                     	;# 
   400  0691                     	;# 
   401  0692                     	;# 
   402  0693                     	;# 
   403  0694                     	;# 
   404  070C                     	;# 
   405  070D                     	;# 
   406  070E                     	;# 
   407  070F                     	;# 
   408  0710                     	;# 
   409  0711                     	;# 
   410  0712                     	;# 
   411  0713                     	;# 
   412  0714                     	;# 
   413  0716                     	;# 
   414  0717                     	;# 
   415  0718                     	;# 
   416  0719                     	;# 
   417  071A                     	;# 
   418  071B                     	;# 
   419  071C                     	;# 
   420  071D                     	;# 
   421  071E                     	;# 
   422  0796                     	;# 
   423  0797                     	;# 
   424  0798                     	;# 
   425  0799                     	;# 
   426  079A                     	;# 
   427  079B                     	;# 
   428  080C                     	;# 
   429  080D                     	;# 
   430  080E                     	;# 
   431  080F                     	;# 
   432  0810                     	;# 
   433  0811                     	;# 
   434  0812                     	;# 
   435  0813                     	;# 
   436  0814                     	;# 
   437  081A                     	;# 
   438  081B                     	;# 
   439  081C                     	;# 
   440  081D                     	;# 
   441  081E                     	;# 
   442  081F                     	;# 
   443  088C                     	;# 
   444  088D                     	;# 
   445  088E                     	;# 
   446  088F                     	;# 
   447  0890                     	;# 
   448  0891                     	;# 
   449  0892                     	;# 
   450  0893                     	;# 
   451  0895                     	;# 
   452  0896                     	;# 
   453  0897                     	;# 
   454  0898                     	;# 
   455  0899                     	;# 
   456  089A                     	;# 
   457  089B                     	;# 
   458  090C                     	;# 
   459  090E                     	;# 
   460  090F                     	;# 
   461  091F                     	;# 
   462  091F                     	;# 
   463  098F                     	;# 
   464  098F                     	;# 
   465  0990                     	;# 
   466  0991                     	;# 
   467  0992                     	;# 
   468  0993                     	;# 
   469  0994                     	;# 
   470  0995                     	;# 
   471  0996                     	;# 
   472  0997                     	;# 
   473  0E0F                     	;# 
   474  0E10                     	;# 
   475  0E11                     	;# 
   476  0E12                     	;# 
   477  0E13                     	;# 
   478  0E14                     	;# 
   479  0E15                     	;# 
   480  0E16                     	;# 
   481  0E17                     	;# 
   482  0E18                     	;# 
   483  0E19                     	;# 
   484  0E1A                     	;# 
   485  0E1B                     	;# 
   486  0E1C                     	;# 
   487  0E1D                     	;# 
   488  0E1E                     	;# 
   489  0E1F                     	;# 
   490  0E20                     	;# 
   491  0E21                     	;# 
   492  0E22                     	;# 
   493  0E23                     	;# 
   494  0E24                     	;# 
   495  0E25                     	;# 
   496  0E26                     	;# 
   497  0E27                     	;# 
   498  0E28                     	;# 
   499  0E29                     	;# 
   500  0E2A                     	;# 
   501  0E2B                     	;# 
   502  0E2C                     	;# 
   503  0E2D                     	;# 
   504  0E2E                     	;# 
   505  0E2F                     	;# 
   506  0E30                     	;# 
   507  0E31                     	;# 
   508  0E32                     	;# 
   509  0E33                     	;# 
   510  0E34                     	;# 
   511  0E35                     	;# 
   512  0E36                     	;# 
   513  0E37                     	;# 
   514  0E8F                     	;# 
   515  0E90                     	;# 
   516  0E91                     	;# 
   517  0E92                     	;# 
   518  0E93                     	;# 
   519  0E94                     	;# 
   520  0E95                     	;# 
   521  0E96                     	;# 
   522  0E97                     	;# 
   523  0E9C                     	;# 
   524  0E9D                     	;# 
   525  0E9E                     	;# 
   526  0EA1                     	;# 
   527  0EA2                     	;# 
   528  0EA3                     	;# 
   529  0EA4                     	;# 
   530  0EA5                     	;# 
   531  0EA9                     	;# 
   532  0EAA                     	;# 
   533  0EAB                     	;# 
   534  0EAC                     	;# 
   535  0EB1                     	;# 
   536  0EB2                     	;# 
   537  0EB3                     	;# 
   538  0EB8                     	;# 
   539  0EB9                     	;# 
   540  0EBA                     	;# 
   541  0EBB                     	;# 
   542  0EBC                     	;# 
   543  0EBD                     	;# 
   544  0EBE                     	;# 
   545  0EC3                     	;# 
   546  0EC5                     	;# 
   547  0EC6                     	;# 
   548  0EC7                     	;# 
   549  0EC8                     	;# 
   550  0EC9                     	;# 
   551  0ECA                     	;# 
   552  0ECB                     	;# 
   553  0ECC                     	;# 
   554  0F10                     	;# 
   555  0F11                     	;# 
   556  0F12                     	;# 
   557  0F13                     	;# 
   558  0F14                     	;# 
   559  0F15                     	;# 
   560  0F16                     	;# 
   561  0F17                     	;# 
   562  0F18                     	;# 
   563  0F19                     	;# 
   564  0F1A                     	;# 
   565  0F1B                     	;# 
   566  0F1C                     	;# 
   567  0F1D                     	;# 
   568  0F1E                     	;# 
   569  0F1F                     	;# 
   570  0F20                     	;# 
   571  0F21                     	;# 
   572  0F22                     	;# 
   573  0F23                     	;# 
   574  0F24                     	;# 
   575  0F25                     	;# 
   576  0F26                     	;# 
   577  0F27                     	;# 
   578  0F38                     	;# 
   579  0F39                     	;# 
   580  0F3A                     	;# 
   581  0F3B                     	;# 
   582  0F3C                     	;# 
   583  0F3D                     	;# 
   584  0F3E                     	;# 
   585  0F3F                     	;# 
   586  0F40                     	;# 
   587  0F41                     	;# 
   588  0F43                     	;# 
   589  0F44                     	;# 
   590  0F45                     	;# 
   591  0F46                     	;# 
   592  0F47                     	;# 
   593  0F48                     	;# 
   594  0F49                     	;# 
   595  0F4A                     	;# 
   596  0F4B                     	;# 
   597  0F4C                     	;# 
   598  0F4E                     	;# 
   599  0F4F                     	;# 
   600  0F50                     	;# 
   601  0F51                     	;# 
   602  0F52                     	;# 
   603  0F53                     	;# 
   604  0F54                     	;# 
   605  0F55                     	;# 
   606  0F56                     	;# 
   607  0F57                     	;# 
   608  0F65                     	;# 
   609  0F68                     	;# 
   610  0F69                     	;# 
   611  0F6A                     	;# 
   612  0F6B                     	;# 
   613  0FE4                     	;# 
   614  0FE5                     	;# 
   615  0FE6                     	;# 
   616  0FE7                     	;# 
   617  0FE8                     	;# 
   618  0FE9                     	;# 
   619  0FEA                     	;# 
   620  0FEB                     	;# 
   621  0FED                     	;# 
   622  0FEE                     	;# 
   623  0FEF                     	;# 
   624  0000                     	;# 
   625  0001                     	;# 
   626  0002                     	;# 
   627  0003                     	;# 
   628  0004                     	;# 
   629  0005                     	;# 
   630  0006                     	;# 
   631  0007                     	;# 
   632  0008                     	;# 
   633  0009                     	;# 
   634  000A                     	;# 
   635  000B                     	;# 
   636  000C                     	;# 
   637  000D                     	;# 
   638  000E                     	;# 
   639  0010                     	;# 
   640  0011                     	;# 
   641  0012                     	;# 
   642  0013                     	;# 
   643  0016                     	;# 
   644  0017                     	;# 
   645  0018                     	;# 
   646  001C                     	;# 
   647  001C                     	;# 
   648  001D                     	;# 
   649  001D                     	;# 
   650  001E                     	;# 
   651  001F                     	;# 
   652  008C                     	;# 
   653  008C                     	;# 
   654  008D                     	;# 
   655  008E                     	;# 
   656  008E                     	;# 
   657  008F                     	;# 
   658  0090                     	;# 
   659  0090                     	;# 
   660  0091                     	;# 
   661  0093                     	;# 
   662  0094                     	;# 
   663  0095                     	;# 
   664  0096                     	;# 
   665  0097                     	;# 
   666  0098                     	;# 
   667  0099                     	;# 
   668  009A                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  010C                     	;# 
   674  010D                     	;# 
   675  010E                     	;# 
   676  010E                     	;# 
   677  010F                     	;# 
   678  0110                     	;# 
   679  0110                     	;# 
   680  0111                     	;# 
   681  0112                     	;# 
   682  0112                     	;# 
   683  0113                     	;# 
   684  0114                     	;# 
   685  0114                     	;# 
   686  0115                     	;# 
   687  0116                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0119                     	;# 
   691  0119                     	;# 
   692  0119                     	;# 
   693  011A                     	;# 
   694  011A                     	;# 
   695  011A                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011C                     	;# 
   702  011C                     	;# 
   703  011C                     	;# 
   704  011D                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  011E                     	;# 
   708  011E                     	;# 
   709  011E                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  018C                     	;# 
   716  018D                     	;# 
   717  018E                     	;# 
   718  018F                     	;# 
   719  0190                     	;# 
   720  0191                     	;# 
   721  0192                     	;# 
   722  0196                     	;# 
   723  0197                     	;# 
   724  0198                     	;# 
   725  0199                     	;# 
   726  019A                     	;# 
   727  019B                     	;# 
   728  019C                     	;# 
   729  020C                     	;# 
   730  020C                     	;# 
   731  020D                     	;# 
   732  020E                     	;# 
   733  020F                     	;# 
   734  020F                     	;# 
   735  0210                     	;# 
   736  0210                     	;# 
   737  0211                     	;# 
   738  0211                     	;# 
   739  0212                     	;# 
   740  0212                     	;# 
   741  0213                     	;# 
   742  0214                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  0218                     	;# 
   750  0218                     	;# 
   751  0219                     	;# 
   752  021A                     	;# 
   753  021B                     	;# 
   754  021B                     	;# 
   755  021C                     	;# 
   756  021C                     	;# 
   757  021D                     	;# 
   758  021D                     	;# 
   759  021E                     	;# 
   760  021F                     	;# 
   761  028C                     	;# 
   762  028C                     	;# 
   763  028D                     	;# 
   764  028D                     	;# 
   765  028E                     	;# 
   766  028F                     	;# 
   767  0290                     	;# 
   768  0290                     	;# 
   769  0291                     	;# 
   770  0292                     	;# 
   771  0292                     	;# 
   772  0293                     	;# 
   773  0293                     	;# 
   774  0294                     	;# 
   775  0295                     	;# 
   776  0296                     	;# 
   777  0296                     	;# 
   778  0297                     	;# 
   779  0298                     	;# 
   780  0298                     	;# 
   781  0299                     	;# 
   782  0299                     	;# 
   783  029A                     	;# 
   784  029B                     	;# 
   785  029C                     	;# 
   786  029C                     	;# 
   787  029D                     	;# 
   788  030C                     	;# 
   789  030C                     	;# 
   790  030D                     	;# 
   791  030E                     	;# 
   792  030F                     	;# 
   793  0310                     	;# 
   794  0310                     	;# 
   795  0311                     	;# 
   796  0312                     	;# 
   797  0313                     	;# 
   798  0314                     	;# 
   799  0314                     	;# 
   800  0315                     	;# 
   801  0316                     	;# 
   802  0317                     	;# 
   803  0318                     	;# 
   804  0318                     	;# 
   805  0319                     	;# 
   806  031A                     	;# 
   807  031B                     	;# 
   808  031C                     	;# 
   809  031C                     	;# 
   810  031D                     	;# 
   811  031E                     	;# 
   812  031F                     	;# 
   813  038C                     	;# 
   814  038D                     	;# 
   815  038E                     	;# 
   816  0390                     	;# 
   817  0391                     	;# 
   818  0392                     	;# 
   819  040C                     	;# 
   820  040D                     	;# 
   821  040E                     	;# 
   822  040F                     	;# 
   823  0410                     	;# 
   824  0411                     	;# 
   825  0416                     	;# 
   826  0416                     	;# 
   827  0417                     	;# 
   828  0418                     	;# 
   829  0418                     	;# 
   830  0419                     	;# 
   831  041A                     	;# 
   832  041A                     	;# 
   833  041B                     	;# 
   834  041C                     	;# 
   835  041C                     	;# 
   836  041D                     	;# 
   837  041E                     	;# 
   838  041F                     	;# 
   839  048C                     	;# 
   840  048C                     	;# 
   841  048D                     	;# 
   842  048E                     	;# 
   843  048F                     	;# 
   844  048F                     	;# 
   845  0490                     	;# 
   846  0491                     	;# 
   847  0492                     	;# 
   848  0492                     	;# 
   849  0493                     	;# 
   850  0494                     	;# 
   851  0495                     	;# 
   852  0495                     	;# 
   853  0496                     	;# 
   854  0497                     	;# 
   855  0498                     	;# 
   856  0499                     	;# 
   857  049A                     	;# 
   858  049B                     	;# 
   859  049C                     	;# 
   860  049D                     	;# 
   861  050C                     	;# 
   862  050C                     	;# 
   863  050D                     	;# 
   864  050E                     	;# 
   865  050F                     	;# 
   866  050F                     	;# 
   867  0510                     	;# 
   868  0511                     	;# 
   869  0512                     	;# 
   870  0512                     	;# 
   871  0513                     	;# 
   872  0514                     	;# 
   873  0515                     	;# 
   874  0515                     	;# 
   875  0516                     	;# 
   876  0517                     	;# 
   877  0518                     	;# 
   878  0519                     	;# 
   879  051A                     	;# 
   880  051B                     	;# 
   881  051C                     	;# 
   882  051D                     	;# 
   883  058C                     	;# 
   884  058C                     	;# 
   885  058D                     	;# 
   886  058E                     	;# 
   887  058F                     	;# 
   888  058F                     	;# 
   889  0590                     	;# 
   890  0591                     	;# 
   891  0592                     	;# 
   892  0593                     	;# 
   893  060C                     	;# 
   894  060D                     	;# 
   895  060E                     	;# 
   896  060F                     	;# 
   897  0610                     	;# 
   898  0611                     	;# 
   899  0612                     	;# 
   900  0613                     	;# 
   901  0614                     	;# 
   902  0616                     	;# 
   903  0617                     	;# 
   904  0618                     	;# 
   905  0619                     	;# 
   906  061A                     	;# 
   907  061B                     	;# 
   908  061C                     	;# 
   909  061D                     	;# 
   910  061E                     	;# 
   911  068C                     	;# 
   912  068D                     	;# 
   913  068E                     	;# 
   914  068F                     	;# 
   915  0690                     	;# 
   916  0691                     	;# 
   917  0692                     	;# 
   918  0693                     	;# 
   919  0694                     	;# 
   920  070C                     	;# 
   921  070D                     	;# 
   922  070E                     	;# 
   923  070F                     	;# 
   924  0710                     	;# 
   925  0711                     	;# 
   926  0712                     	;# 
   927  0713                     	;# 
   928  0714                     	;# 
   929  0716                     	;# 
   930  0717                     	;# 
   931  0718                     	;# 
   932  0719                     	;# 
   933  071A                     	;# 
   934  071B                     	;# 
   935  071C                     	;# 
   936  071D                     	;# 
   937  071E                     	;# 
   938  0796                     	;# 
   939  0797                     	;# 
   940  0798                     	;# 
   941  0799                     	;# 
   942  079A                     	;# 
   943  079B                     	;# 
   944  080C                     	;# 
   945  080D                     	;# 
   946  080E                     	;# 
   947  080F                     	;# 
   948  0810                     	;# 
   949  0811                     	;# 
   950  0812                     	;# 
   951  0813                     	;# 
   952  0814                     	;# 
   953  081A                     	;# 
   954  081B                     	;# 
   955  081C                     	;# 
   956  081D                     	;# 
   957  081E                     	;# 
   958  081F                     	;# 
   959  088C                     	;# 
   960  088D                     	;# 
   961  088E                     	;# 
   962  088F                     	;# 
   963  0890                     	;# 
   964  0891                     	;# 
   965  0892                     	;# 
   966  0893                     	;# 
   967  0895                     	;# 
   968  0896                     	;# 
   969  0897                     	;# 
   970  0898                     	;# 
   971  0899                     	;# 
   972  089A                     	;# 
   973  089B                     	;# 
   974  090C                     	;# 
   975  090E                     	;# 
   976  090F                     	;# 
   977  091F                     	;# 
   978  091F                     	;# 
   979  098F                     	;# 
   980  098F                     	;# 
   981  0990                     	;# 
   982  0991                     	;# 
   983  0992                     	;# 
   984  0993                     	;# 
   985  0994                     	;# 
   986  0995                     	;# 
   987  0996                     	;# 
   988  0997                     	;# 
   989  0E0F                     	;# 
   990  0E10                     	;# 
   991  0E11                     	;# 
   992  0E12                     	;# 
   993  0E13                     	;# 
   994  0E14                     	;# 
   995  0E15                     	;# 
   996  0E16                     	;# 
   997  0E17                     	;# 
   998  0E18                     	;# 
   999  0E19                     	;# 
  1000  0E1A                     	;# 
  1001  0E1B                     	;# 
  1002  0E1C                     	;# 
  1003  0E1D                     	;# 
  1004  0E1E                     	;# 
  1005  0E1F                     	;# 
  1006  0E20                     	;# 
  1007  0E21                     	;# 
  1008  0E22                     	;# 
  1009  0E23                     	;# 
  1010  0E24                     	;# 
  1011  0E25                     	;# 
  1012  0E26                     	;# 
  1013  0E27                     	;# 
  1014  0E28                     	;# 
  1015  0E29                     	;# 
  1016  0E2A                     	;# 
  1017  0E2B                     	;# 
  1018  0E2C                     	;# 
  1019  0E2D                     	;# 
  1020  0E2E                     	;# 
  1021  0E2F                     	;# 
  1022  0E30                     	;# 
  1023  0E31                     	;# 
  1024  0E32                     	;# 
  1025  0E33                     	;# 
  1026  0E34                     	;# 
  1027  0E35                     	;# 
  1028  0E36                     	;# 
  1029  0E37                     	;# 
  1030  0E8F                     	;# 
  1031  0E90                     	;# 
  1032  0E91                     	;# 
  1033  0E92                     	;# 
  1034  0E93                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0E96                     	;# 
  1038  0E97                     	;# 
  1039  0E9C                     	;# 
  1040  0E9D                     	;# 
  1041  0E9E                     	;# 
  1042  0EA1                     	;# 
  1043  0EA2                     	;# 
  1044  0EA3                     	;# 
  1045  0EA4                     	;# 
  1046  0EA5                     	;# 
  1047  0EA9                     	;# 
  1048  0EAA                     	;# 
  1049  0EAB                     	;# 
  1050  0EAC                     	;# 
  1051  0EB1                     	;# 
  1052  0EB2                     	;# 
  1053  0EB3                     	;# 
  1054  0EB8                     	;# 
  1055  0EB9                     	;# 
  1056  0EBA                     	;# 
  1057  0EBB                     	;# 
  1058  0EBC                     	;# 
  1059  0EBD                     	;# 
  1060  0EBE                     	;# 
  1061  0EC3                     	;# 
  1062  0EC5                     	;# 
  1063  0EC6                     	;# 
  1064  0EC7                     	;# 
  1065  0EC8                     	;# 
  1066  0EC9                     	;# 
  1067  0ECA                     	;# 
  1068  0ECB                     	;# 
  1069  0ECC                     	;# 
  1070  0F10                     	;# 
  1071  0F11                     	;# 
  1072  0F12                     	;# 
  1073  0F13                     	;# 
  1074  0F14                     	;# 
  1075  0F15                     	;# 
  1076  0F16                     	;# 
  1077  0F17                     	;# 
  1078  0F18                     	;# 
  1079  0F19                     	;# 
  1080  0F1A                     	;# 
  1081  0F1B                     	;# 
  1082  0F1C                     	;# 
  1083  0F1D                     	;# 
  1084  0F1E                     	;# 
  1085  0F1F                     	;# 
  1086  0F20                     	;# 
  1087  0F21                     	;# 
  1088  0F22                     	;# 
  1089  0F23                     	;# 
  1090  0F24                     	;# 
  1091  0F25                     	;# 
  1092  0F26                     	;# 
  1093  0F27                     	;# 
  1094  0F38                     	;# 
  1095  0F39                     	;# 
  1096  0F3A                     	;# 
  1097  0F3B                     	;# 
  1098  0F3C                     	;# 
  1099  0F3D                     	;# 
  1100  0F3E                     	;# 
  1101  0F3F                     	;# 
  1102  0F40                     	;# 
  1103  0F41                     	;# 
  1104  0F43                     	;# 
  1105  0F44                     	;# 
  1106  0F45                     	;# 
  1107  0F46                     	;# 
  1108  0F47                     	;# 
  1109  0F48                     	;# 
  1110  0F49                     	;# 
  1111  0F4A                     	;# 
  1112  0F4B                     	;# 
  1113  0F4C                     	;# 
  1114  0F4E                     	;# 
  1115  0F4F                     	;# 
  1116  0F50                     	;# 
  1117  0F51                     	;# 
  1118  0F52                     	;# 
  1119  0F53                     	;# 
  1120  0F54                     	;# 
  1121  0F55                     	;# 
  1122  0F56                     	;# 
  1123  0F57                     	;# 
  1124  0F65                     	;# 
  1125  0F68                     	;# 
  1126  0F69                     	;# 
  1127  0F6A                     	;# 
  1128  0F6B                     	;# 
  1129  0FE4                     	;# 
  1130  0FE5                     	;# 
  1131  0FE6                     	;# 
  1132  0FE7                     	;# 
  1133  0FE8                     	;# 
  1134  0FE9                     	;# 
  1135  0FEA                     	;# 
  1136  0FEB                     	;# 
  1137  0FED                     	;# 
  1138  0FEE                     	;# 
  1139  0FEF                     	;# 
  1140  0000                     	;# 
  1141  0001                     	;# 
  1142  0002                     	;# 
  1143  0003                     	;# 
  1144  0004                     	;# 
  1145  0005                     	;# 
  1146  0006                     	;# 
  1147  0007                     	;# 
  1148  0008                     	;# 
  1149  0009                     	;# 
  1150  000A                     	;# 
  1151  000B                     	;# 
  1152  000C                     	;# 
  1153  000D                     	;# 
  1154  000E                     	;# 
  1155  0010                     	;# 
  1156  0011                     	;# 
  1157  0012                     	;# 
  1158  0013                     	;# 
  1159  0016                     	;# 
  1160  0017                     	;# 
  1161  0018                     	;# 
  1162  001C                     	;# 
  1163  001C                     	;# 
  1164  001D                     	;# 
  1165  001D                     	;# 
  1166  001E                     	;# 
  1167  001F                     	;# 
  1168  008C                     	;# 
  1169  008C                     	;# 
  1170  008D                     	;# 
  1171  008E                     	;# 
  1172  008E                     	;# 
  1173  008F                     	;# 
  1174  0090                     	;# 
  1175  0090                     	;# 
  1176  0091                     	;# 
  1177  0093                     	;# 
  1178  0094                     	;# 
  1179  0095                     	;# 
  1180  0096                     	;# 
  1181  0097                     	;# 
  1182  0098                     	;# 
  1183  0099                     	;# 
  1184  009A                     	;# 
  1185  009B                     	;# 
  1186  009C                     	;# 
  1187  009D                     	;# 
  1188  009E                     	;# 
  1189  010C                     	;# 
  1190  010D                     	;# 
  1191  010E                     	;# 
  1192  010E                     	;# 
  1193  010F                     	;# 
  1194  0110                     	;# 
  1195  0110                     	;# 
  1196  0111                     	;# 
  1197  0112                     	;# 
  1198  0112                     	;# 
  1199  0113                     	;# 
  1200  0114                     	;# 
  1201  0114                     	;# 
  1202  0115                     	;# 
  1203  0116                     	;# 
  1204  0116                     	;# 
  1205  0117                     	;# 
  1206  0119                     	;# 
  1207  0119                     	;# 
  1208  0119                     	;# 
  1209  011A                     	;# 
  1210  011A                     	;# 
  1211  011A                     	;# 
  1212  011B                     	;# 
  1213  011B                     	;# 
  1214  011B                     	;# 
  1215  011B                     	;# 
  1216  011B                     	;# 
  1217  011C                     	;# 
  1218  011C                     	;# 
  1219  011C                     	;# 
  1220  011D                     	;# 
  1221  011D                     	;# 
  1222  011D                     	;# 
  1223  011E                     	;# 
  1224  011E                     	;# 
  1225  011E                     	;# 
  1226  011F                     	;# 
  1227  011F                     	;# 
  1228  011F                     	;# 
  1229  011F                     	;# 
  1230  011F                     	;# 
  1231  018C                     	;# 
  1232  018D                     	;# 
  1233  018E                     	;# 
  1234  018F                     	;# 
  1235  0190                     	;# 
  1236  0191                     	;# 
  1237  0192                     	;# 
  1238  0196                     	;# 
  1239  0197                     	;# 
  1240  0198                     	;# 
  1241  0199                     	;# 
  1242  019A                     	;# 
  1243  019B                     	;# 
  1244  019C                     	;# 
  1245  020C                     	;# 
  1246  020C                     	;# 
  1247  020D                     	;# 
  1248  020E                     	;# 
  1249  020F                     	;# 
  1250  020F                     	;# 
  1251  0210                     	;# 
  1252  0210                     	;# 
  1253  0211                     	;# 
  1254  0211                     	;# 
  1255  0212                     	;# 
  1256  0212                     	;# 
  1257  0213                     	;# 
  1258  0214                     	;# 
  1259  0215                     	;# 
  1260  0215                     	;# 
  1261  0216                     	;# 
  1262  0216                     	;# 
  1263  0217                     	;# 
  1264  0217                     	;# 
  1265  0218                     	;# 
  1266  0218                     	;# 
  1267  0219                     	;# 
  1268  021A                     	;# 
  1269  021B                     	;# 
  1270  021B                     	;# 
  1271  021C                     	;# 
  1272  021C                     	;# 
  1273  021D                     	;# 
  1274  021D                     	;# 
  1275  021E                     	;# 
  1276  021F                     	;# 
  1277  028C                     	;# 
  1278  028C                     	;# 
  1279  028D                     	;# 
  1280  028D                     	;# 
  1281  028E                     	;# 
  1282  028F                     	;# 
  1283  0290                     	;# 
  1284  0290                     	;# 
  1285  0291                     	;# 
  1286  0292                     	;# 
  1287  0292                     	;# 
  1288  0293                     	;# 
  1289  0293                     	;# 
  1290  0294                     	;# 
  1291  0295                     	;# 
  1292  0296                     	;# 
  1293  0296                     	;# 
  1294  0297                     	;# 
  1295  0298                     	;# 
  1296  0298                     	;# 
  1297  0299                     	;# 
  1298  0299                     	;# 
  1299  029A                     	;# 
  1300  029B                     	;# 
  1301  029C                     	;# 
  1302  029C                     	;# 
  1303  029D                     	;# 
  1304  030C                     	;# 
  1305  030C                     	;# 
  1306  030D                     	;# 
  1307  030E                     	;# 
  1308  030F                     	;# 
  1309  0310                     	;# 
  1310  0310                     	;# 
  1311  0311                     	;# 
  1312  0312                     	;# 
  1313  0313                     	;# 
  1314  0314                     	;# 
  1315  0314                     	;# 
  1316  0315                     	;# 
  1317  0316                     	;# 
  1318  0317                     	;# 
  1319  0318                     	;# 
  1320  0318                     	;# 
  1321  0319                     	;# 
  1322  031A                     	;# 
  1323  031B                     	;# 
  1324  031C                     	;# 
  1325  031C                     	;# 
  1326  031D                     	;# 
  1327  031E                     	;# 
  1328  031F                     	;# 
  1329  038C                     	;# 
  1330  038D                     	;# 
  1331  038E                     	;# 
  1332  0390                     	;# 
  1333  0391                     	;# 
  1334  0392                     	;# 
  1335  040C                     	;# 
  1336  040D                     	;# 
  1337  040E                     	;# 
  1338  040F                     	;# 
  1339  0410                     	;# 
  1340  0411                     	;# 
  1341  0416                     	;# 
  1342  0416                     	;# 
  1343  0417                     	;# 
  1344  0418                     	;# 
  1345  0418                     	;# 
  1346  0419                     	;# 
  1347  041A                     	;# 
  1348  041A                     	;# 
  1349  041B                     	;# 
  1350  041C                     	;# 
  1351  041C                     	;# 
  1352  041D                     	;# 
  1353  041E                     	;# 
  1354  041F                     	;# 
  1355  048C                     	;# 
  1356  048C                     	;# 
  1357  048D                     	;# 
  1358  048E                     	;# 
  1359  048F                     	;# 
  1360  048F                     	;# 
  1361  0490                     	;# 
  1362  0491                     	;# 
  1363  0492                     	;# 
  1364  0492                     	;# 
  1365  0493                     	;# 
  1366  0494                     	;# 
  1367  0495                     	;# 
  1368  0495                     	;# 
  1369  0496                     	;# 
  1370  0497                     	;# 
  1371  0498                     	;# 
  1372  0499                     	;# 
  1373  049A                     	;# 
  1374  049B                     	;# 
  1375  049C                     	;# 
  1376  049D                     	;# 
  1377  050C                     	;# 
  1378  050C                     	;# 
  1379  050D                     	;# 
  1380  050E                     	;# 
  1381  050F                     	;# 
  1382  050F                     	;# 
  1383  0510                     	;# 
  1384  0511                     	;# 
  1385  0512                     	;# 
  1386  0512                     	;# 
  1387  0513                     	;# 
  1388  0514                     	;# 
  1389  0515                     	;# 
  1390  0515                     	;# 
  1391  0516                     	;# 
  1392  0517                     	;# 
  1393  0518                     	;# 
  1394  0519                     	;# 
  1395  051A                     	;# 
  1396  051B                     	;# 
  1397  051C                     	;# 
  1398  051D                     	;# 
  1399  058C                     	;# 
  1400  058C                     	;# 
  1401  058D                     	;# 
  1402  058E                     	;# 
  1403  058F                     	;# 
  1404  058F                     	;# 
  1405  0590                     	;# 
  1406  0591                     	;# 
  1407  0592                     	;# 
  1408  0593                     	;# 
  1409  060C                     	;# 
  1410  060D                     	;# 
  1411  060E                     	;# 
  1412  060F                     	;# 
  1413  0610                     	;# 
  1414  0611                     	;# 
  1415  0612                     	;# 
  1416  0613                     	;# 
  1417  0614                     	;# 
  1418  0616                     	;# 
  1419  0617                     	;# 
  1420  0618                     	;# 
  1421  0619                     	;# 
  1422  061A                     	;# 
  1423  061B                     	;# 
  1424  061C                     	;# 
  1425  061D                     	;# 
  1426  061E                     	;# 
  1427  068C                     	;# 
  1428  068D                     	;# 
  1429  068E                     	;# 
  1430  068F                     	;# 
  1431  0690                     	;# 
  1432  0691                     	;# 
  1433  0692                     	;# 
  1434  0693                     	;# 
  1435  0694                     	;# 
  1436  070C                     	;# 
  1437  070D                     	;# 
  1438  070E                     	;# 
  1439  070F                     	;# 
  1440  0710                     	;# 
  1441  0711                     	;# 
  1442  0712                     	;# 
  1443  0713                     	;# 
  1444  0714                     	;# 
  1445  0716                     	;# 
  1446  0717                     	;# 
  1447  0718                     	;# 
  1448  0719                     	;# 
  1449  071A                     	;# 
  1450  071B                     	;# 
  1451  071C                     	;# 
  1452  071D                     	;# 
  1453  071E                     	;# 
  1454  0796                     	;# 
  1455  0797                     	;# 
  1456  0798                     	;# 
  1457  0799                     	;# 
  1458  079A                     	;# 
  1459  079B                     	;# 
  1460  080C                     	;# 
  1461  080D                     	;# 
  1462  080E                     	;# 
  1463  080F                     	;# 
  1464  0810                     	;# 
  1465  0811                     	;# 
  1466  0812                     	;# 
  1467  0813                     	;# 
  1468  0814                     	;# 
  1469  081A                     	;# 
  1470  081B                     	;# 
  1471  081C                     	;# 
  1472  081D                     	;# 
  1473  081E                     	;# 
  1474  081F                     	;# 
  1475  088C                     	;# 
  1476  088D                     	;# 
  1477  088E                     	;# 
  1478  088F                     	;# 
  1479  0890                     	;# 
  1480  0891                     	;# 
  1481  0892                     	;# 
  1482  0893                     	;# 
  1483  0895                     	;# 
  1484  0896                     	;# 
  1485  0897                     	;# 
  1486  0898                     	;# 
  1487  0899                     	;# 
  1488  089A                     	;# 
  1489  089B                     	;# 
  1490  090C                     	;# 
  1491  090E                     	;# 
  1492  090F                     	;# 
  1493  091F                     	;# 
  1494  091F                     	;# 
  1495  098F                     	;# 
  1496  098F                     	;# 
  1497  0990                     	;# 
  1498  0991                     	;# 
  1499  0992                     	;# 
  1500  0993                     	;# 
  1501  0994                     	;# 
  1502  0995                     	;# 
  1503  0996                     	;# 
  1504  0997                     	;# 
  1505  0E0F                     	;# 
  1506  0E10                     	;# 
  1507  0E11                     	;# 
  1508  0E12                     	;# 
  1509  0E13                     	;# 
  1510  0E14                     	;# 
  1511  0E15                     	;# 
  1512  0E16                     	;# 
  1513  0E17                     	;# 
  1514  0E18                     	;# 
  1515  0E19                     	;# 
  1516  0E1A                     	;# 
  1517  0E1B                     	;# 
  1518  0E1C                     	;# 
  1519  0E1D                     	;# 
  1520  0E1E                     	;# 
  1521  0E1F                     	;# 
  1522  0E20                     	;# 
  1523  0E21                     	;# 
  1524  0E22                     	;# 
  1525  0E23                     	;# 
  1526  0E24                     	;# 
  1527  0E25                     	;# 
  1528  0E26                     	;# 
  1529  0E27                     	;# 
  1530  0E28                     	;# 
  1531  0E29                     	;# 
  1532  0E2A                     	;# 
  1533  0E2B                     	;# 
  1534  0E2C                     	;# 
  1535  0E2D                     	;# 
  1536  0E2E                     	;# 
  1537  0E2F                     	;# 
  1538  0E30                     	;# 
  1539  0E31                     	;# 
  1540  0E32                     	;# 
  1541  0E33                     	;# 
  1542  0E34                     	;# 
  1543  0E35                     	;# 
  1544  0E36                     	;# 
  1545  0E37                     	;# 
  1546  0E8F                     	;# 
  1547  0E90                     	;# 
  1548  0E91                     	;# 
  1549  0E92                     	;# 
  1550  0E93                     	;# 
  1551  0E94                     	;# 
  1552  0E95                     	;# 
  1553  0E96                     	;# 
  1554  0E97                     	;# 
  1555  0E9C                     	;# 
  1556  0E9D                     	;# 
  1557  0E9E                     	;# 
  1558  0EA1                     	;# 
  1559  0EA2                     	;# 
  1560  0EA3                     	;# 
  1561  0EA4                     	;# 
  1562  0EA5                     	;# 
  1563  0EA9                     	;# 
  1564  0EAA                     	;# 
  1565  0EAB                     	;# 
  1566  0EAC                     	;# 
  1567  0EB1                     	;# 
  1568  0EB2                     	;# 
  1569  0EB3                     	;# 
  1570  0EB8                     	;# 
  1571  0EB9                     	;# 
  1572  0EBA                     	;# 
  1573  0EBB                     	;# 
  1574  0EBC                     	;# 
  1575  0EBD                     	;# 
  1576  0EBE                     	;# 
  1577  0EC3                     	;# 
  1578  0EC5                     	;# 
  1579  0EC6                     	;# 
  1580  0EC7                     	;# 
  1581  0EC8                     	;# 
  1582  0EC9                     	;# 
  1583  0ECA                     	;# 
  1584  0ECB                     	;# 
  1585  0ECC                     	;# 
  1586  0F10                     	;# 
  1587  0F11                     	;# 
  1588  0F12                     	;# 
  1589  0F13                     	;# 
  1590  0F14                     	;# 
  1591  0F15                     	;# 
  1592  0F16                     	;# 
  1593  0F17                     	;# 
  1594  0F18                     	;# 
  1595  0F19                     	;# 
  1596  0F1A                     	;# 
  1597  0F1B                     	;# 
  1598  0F1C                     	;# 
  1599  0F1D                     	;# 
  1600  0F1E                     	;# 
  1601  0F1F                     	;# 
  1602  0F20                     	;# 
  1603  0F21                     	;# 
  1604  0F22                     	;# 
  1605  0F23                     	;# 
  1606  0F24                     	;# 
  1607  0F25                     	;# 
  1608  0F26                     	;# 
  1609  0F27                     	;# 
  1610  0F38                     	;# 
  1611  0F39                     	;# 
  1612  0F3A                     	;# 
  1613  0F3B                     	;# 
  1614  0F3C                     	;# 
  1615  0F3D                     	;# 
  1616  0F3E                     	;# 
  1617  0F3F                     	;# 
  1618  0F40                     	;# 
  1619  0F41                     	;# 
  1620  0F43                     	;# 
  1621  0F44                     	;# 
  1622  0F45                     	;# 
  1623  0F46                     	;# 
  1624  0F47                     	;# 
  1625  0F48                     	;# 
  1626  0F49                     	;# 
  1627  0F4A                     	;# 
  1628  0F4B                     	;# 
  1629  0F4C                     	;# 
  1630  0F4E                     	;# 
  1631  0F4F                     	;# 
  1632  0F50                     	;# 
  1633  0F51                     	;# 
  1634  0F52                     	;# 
  1635  0F53                     	;# 
  1636  0F54                     	;# 
  1637  0F55                     	;# 
  1638  0F56                     	;# 
  1639  0F57                     	;# 
  1640  0F65                     	;# 
  1641  0F68                     	;# 
  1642  0F69                     	;# 
  1643  0F6A                     	;# 
  1644  0F6B                     	;# 
  1645  0FE4                     	;# 
  1646  0FE5                     	;# 
  1647  0FE6                     	;# 
  1648  0FE7                     	;# 
  1649  0FE8                     	;# 
  1650  0FE9                     	;# 
  1651  0FEA                     	;# 
  1652  0FEB                     	;# 
  1653  0FED                     	;# 
  1654  0FEE                     	;# 
  1655  0FEF                     	;# 
  1656  0000                     	;# 
  1657  0001                     	;# 
  1658  0002                     	;# 
  1659  0003                     	;# 
  1660  0004                     	;# 
  1661  0005                     	;# 
  1662  0006                     	;# 
  1663  0007                     	;# 
  1664  0008                     	;# 
  1665  0009                     	;# 
  1666  000A                     	;# 
  1667  000B                     	;# 
  1668  000C                     	;# 
  1669  000D                     	;# 
  1670  000E                     	;# 
  1671  0010                     	;# 
  1672  0011                     	;# 
  1673  0012                     	;# 
  1674  0013                     	;# 
  1675  0016                     	;# 
  1676  0017                     	;# 
  1677  0018                     	;# 
  1678  001C                     	;# 
  1679  001C                     	;# 
  1680  001D                     	;# 
  1681  001D                     	;# 
  1682  001E                     	;# 
  1683  001F                     	;# 
  1684  008C                     	;# 
  1685  008C                     	;# 
  1686  008D                     	;# 
  1687  008E                     	;# 
  1688  008E                     	;# 
  1689  008F                     	;# 
  1690  0090                     	;# 
  1691  0090                     	;# 
  1692  0091                     	;# 
  1693  0093                     	;# 
  1694  0094                     	;# 
  1695  0095                     	;# 
  1696  0096                     	;# 
  1697  0097                     	;# 
  1698  0098                     	;# 
  1699  0099                     	;# 
  1700  009A                     	;# 
  1701  009B                     	;# 
  1702  009C                     	;# 
  1703  009D                     	;# 
  1704  009E                     	;# 
  1705  010C                     	;# 
  1706  010D                     	;# 
  1707  010E                     	;# 
  1708  010E                     	;# 
  1709  010F                     	;# 
  1710  0110                     	;# 
  1711  0110                     	;# 
  1712  0111                     	;# 
  1713  0112                     	;# 
  1714  0112                     	;# 
  1715  0113                     	;# 
  1716  0114                     	;# 
  1717  0114                     	;# 
  1718  0115                     	;# 
  1719  0116                     	;# 
  1720  0116                     	;# 
  1721  0117                     	;# 
  1722  0119                     	;# 
  1723  0119                     	;# 
  1724  0119                     	;# 
  1725  011A                     	;# 
  1726  011A                     	;# 
  1727  011A                     	;# 
  1728  011B                     	;# 
  1729  011B                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011C                     	;# 
  1734  011C                     	;# 
  1735  011C                     	;# 
  1736  011D                     	;# 
  1737  011D                     	;# 
  1738  011D                     	;# 
  1739  011E                     	;# 
  1740  011E                     	;# 
  1741  011E                     	;# 
  1742  011F                     	;# 
  1743  011F                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  018C                     	;# 
  1748  018D                     	;# 
  1749  018E                     	;# 
  1750  018F                     	;# 
  1751  0190                     	;# 
  1752  0191                     	;# 
  1753  0192                     	;# 
  1754  0196                     	;# 
  1755  0197                     	;# 
  1756  0198                     	;# 
  1757  0199                     	;# 
  1758  019A                     	;# 
  1759  019B                     	;# 
  1760  019C                     	;# 
  1761  020C                     	;# 
  1762  020C                     	;# 
  1763  020D                     	;# 
  1764  020E                     	;# 
  1765  020F                     	;# 
  1766  020F                     	;# 
  1767  0210                     	;# 
  1768  0210                     	;# 
  1769  0211                     	;# 
  1770  0211                     	;# 
  1771  0212                     	;# 
  1772  0212                     	;# 
  1773  0213                     	;# 
  1774  0214                     	;# 
  1775  0215                     	;# 
  1776  0215                     	;# 
  1777  0216                     	;# 
  1778  0216                     	;# 
  1779  0217                     	;# 
  1780  0217                     	;# 
  1781  0218                     	;# 
  1782  0218                     	;# 
  1783  0219                     	;# 
  1784  021A                     	;# 
  1785  021B                     	;# 
  1786  021B                     	;# 
  1787  021C                     	;# 
  1788  021C                     	;# 
  1789  021D                     	;# 
  1790  021D                     	;# 
  1791  021E                     	;# 
  1792  021F                     	;# 
  1793  028C                     	;# 
  1794  028C                     	;# 
  1795  028D                     	;# 
  1796  028D                     	;# 
  1797  028E                     	;# 
  1798  028F                     	;# 
  1799  0290                     	;# 
  1800  0290                     	;# 
  1801  0291                     	;# 
  1802  0292                     	;# 
  1803  0292                     	;# 
  1804  0293                     	;# 
  1805  0293                     	;# 
  1806  0294                     	;# 
  1807  0295                     	;# 
  1808  0296                     	;# 
  1809  0296                     	;# 
  1810  0297                     	;# 
  1811  0298                     	;# 
  1812  0298                     	;# 
  1813  0299                     	;# 
  1814  0299                     	;# 
  1815  029A                     	;# 
  1816  029B                     	;# 
  1817  029C                     	;# 
  1818  029C                     	;# 
  1819  029D                     	;# 
  1820  030C                     	;# 
  1821  030C                     	;# 
  1822  030D                     	;# 
  1823  030E                     	;# 
  1824  030F                     	;# 
  1825  0310                     	;# 
  1826  0310                     	;# 
  1827  0311                     	;# 
  1828  0312                     	;# 
  1829  0313                     	;# 
  1830  0314                     	;# 
  1831  0314                     	;# 
  1832  0315                     	;# 
  1833  0316                     	;# 
  1834  0317                     	;# 
  1835  0318                     	;# 
  1836  0318                     	;# 
  1837  0319                     	;# 
  1838  031A                     	;# 
  1839  031B                     	;# 
  1840  031C                     	;# 
  1841  031C                     	;# 
  1842  031D                     	;# 
  1843  031E                     	;# 
  1844  031F                     	;# 
  1845  038C                     	;# 
  1846  038D                     	;# 
  1847  038E                     	;# 
  1848  0390                     	;# 
  1849  0391                     	;# 
  1850  0392                     	;# 
  1851  040C                     	;# 
  1852  040D                     	;# 
  1853  040E                     	;# 
  1854  040F                     	;# 
  1855  0410                     	;# 
  1856  0411                     	;# 
  1857  0416                     	;# 
  1858  0416                     	;# 
  1859  0417                     	;# 
  1860  0418                     	;# 
  1861  0418                     	;# 
  1862  0419                     	;# 
  1863  041A                     	;# 
  1864  041A                     	;# 
  1865  041B                     	;# 
  1866  041C                     	;# 
  1867  041C                     	;# 
  1868  041D                     	;# 
  1869  041E                     	;# 
  1870  041F                     	;# 
  1871  048C                     	;# 
  1872  048C                     	;# 
  1873  048D                     	;# 
  1874  048E                     	;# 
  1875  048F                     	;# 
  1876  048F                     	;# 
  1877  0490                     	;# 
  1878  0491                     	;# 
  1879  0492                     	;# 
  1880  0492                     	;# 
  1881  0493                     	;# 
  1882  0494                     	;# 
  1883  0495                     	;# 
  1884  0495                     	;# 
  1885  0496                     	;# 
  1886  0497                     	;# 
  1887  0498                     	;# 
  1888  0499                     	;# 
  1889  049A                     	;# 
  1890  049B                     	;# 
  1891  049C                     	;# 
  1892  049D                     	;# 
  1893  050C                     	;# 
  1894  050C                     	;# 
  1895  050D                     	;# 
  1896  050E                     	;# 
  1897  050F                     	;# 
  1898  050F                     	;# 
  1899  0510                     	;# 
  1900  0511                     	;# 
  1901  0512                     	;# 
  1902  0512                     	;# 
  1903  0513                     	;# 
  1904  0514                     	;# 
  1905  0515                     	;# 
  1906  0515                     	;# 
  1907  0516                     	;# 
  1908  0517                     	;# 
  1909  0518                     	;# 
  1910  0519                     	;# 
  1911  051A                     	;# 
  1912  051B                     	;# 
  1913  051C                     	;# 
  1914  051D                     	;# 
  1915  058C                     	;# 
  1916  058C                     	;# 
  1917  058D                     	;# 
  1918  058E                     	;# 
  1919  058F                     	;# 
  1920  058F                     	;# 
  1921  0590                     	;# 
  1922  0591                     	;# 
  1923  0592                     	;# 
  1924  0593                     	;# 
  1925  060C                     	;# 
  1926  060D                     	;# 
  1927  060E                     	;# 
  1928  060F                     	;# 
  1929  0610                     	;# 
  1930  0611                     	;# 
  1931  0612                     	;# 
  1932  0613                     	;# 
  1933  0614                     	;# 
  1934  0616                     	;# 
  1935  0617                     	;# 
  1936  0618                     	;# 
  1937  0619                     	;# 
  1938  061A                     	;# 
  1939  061B                     	;# 
  1940  061C                     	;# 
  1941  061D                     	;# 
  1942  061E                     	;# 
  1943  068C                     	;# 
  1944  068D                     	;# 
  1945  068E                     	;# 
  1946  068F                     	;# 
  1947  0690                     	;# 
  1948  0691                     	;# 
  1949  0692                     	;# 
  1950  0693                     	;# 
  1951  0694                     	;# 
  1952  070C                     	;# 
  1953  070D                     	;# 
  1954  070E                     	;# 
  1955  070F                     	;# 
  1956  0710                     	;# 
  1957  0711                     	;# 
  1958  0712                     	;# 
  1959  0713                     	;# 
  1960  0714                     	;# 
  1961  0716                     	;# 
  1962  0717                     	;# 
  1963  0718                     	;# 
  1964  0719                     	;# 
  1965  071A                     	;# 
  1966  071B                     	;# 
  1967  071C                     	;# 
  1968  071D                     	;# 
  1969  071E                     	;# 
  1970  0796                     	;# 
  1971  0797                     	;# 
  1972  0798                     	;# 
  1973  0799                     	;# 
  1974  079A                     	;# 
  1975  079B                     	;# 
  1976  080C                     	;# 
  1977  080D                     	;# 
  1978  080E                     	;# 
  1979  080F                     	;# 
  1980  0810                     	;# 
  1981  0811                     	;# 
  1982  0812                     	;# 
  1983  0813                     	;# 
  1984  0814                     	;# 
  1985  081A                     	;# 
  1986  081B                     	;# 
  1987  081C                     	;# 
  1988  081D                     	;# 
  1989  081E                     	;# 
  1990  081F                     	;# 
  1991  088C                     	;# 
  1992  088D                     	;# 
  1993  088E                     	;# 
  1994  088F                     	;# 
  1995  0890                     	;# 
  1996  0891                     	;# 
  1997  0892                     	;# 
  1998  0893                     	;# 
  1999  0895                     	;# 
  2000  0896                     	;# 
  2001  0897                     	;# 
  2002  0898                     	;# 
  2003  0899                     	;# 
  2004  089A                     	;# 
  2005  089B                     	;# 
  2006  090C                     	;# 
  2007  090E                     	;# 
  2008  090F                     	;# 
  2009  091F                     	;# 
  2010  091F                     	;# 
  2011  098F                     	;# 
  2012  098F                     	;# 
  2013  0990                     	;# 
  2014  0991                     	;# 
  2015  0992                     	;# 
  2016  0993                     	;# 
  2017  0994                     	;# 
  2018  0995                     	;# 
  2019  0996                     	;# 
  2020  0997                     	;# 
  2021  0E0F                     	;# 
  2022  0E10                     	;# 
  2023  0E11                     	;# 
  2024  0E12                     	;# 
  2025  0E13                     	;# 
  2026  0E14                     	;# 
  2027  0E15                     	;# 
  2028  0E16                     	;# 
  2029  0E17                     	;# 
  2030  0E18                     	;# 
  2031  0E19                     	;# 
  2032  0E1A                     	;# 
  2033  0E1B                     	;# 
  2034  0E1C                     	;# 
  2035  0E1D                     	;# 
  2036  0E1E                     	;# 
  2037  0E1F                     	;# 
  2038  0E20                     	;# 
  2039  0E21                     	;# 
  2040  0E22                     	;# 
  2041  0E23                     	;# 
  2042  0E24                     	;# 
  2043  0E25                     	;# 
  2044  0E26                     	;# 
  2045  0E27                     	;# 
  2046  0E28                     	;# 
  2047  0E29                     	;# 
  2048  0E2A                     	;# 
  2049  0E2B                     	;# 
  2050  0E2C                     	;# 
  2051  0E2D                     	;# 
  2052  0E2E                     	;# 
  2053  0E2F                     	;# 
  2054  0E30                     	;# 
  2055  0E31                     	;# 
  2056  0E32                     	;# 
  2057  0E33                     	;# 
  2058  0E34                     	;# 
  2059  0E35                     	;# 
  2060  0E36                     	;# 
  2061  0E37                     	;# 
  2062  0E8F                     	;# 
  2063  0E90                     	;# 
  2064  0E91                     	;# 
  2065  0E92                     	;# 
  2066  0E93                     	;# 
  2067  0E94                     	;# 
  2068  0E95                     	;# 
  2069  0E96                     	;# 
  2070  0E97                     	;# 
  2071  0E9C                     	;# 
  2072  0E9D                     	;# 
  2073  0E9E                     	;# 
  2074  0EA1                     	;# 
  2075  0EA2                     	;# 
  2076  0EA3                     	;# 
  2077  0EA4                     	;# 
  2078  0EA5                     	;# 
  2079  0EA9                     	;# 
  2080  0EAA                     	;# 
  2081  0EAB                     	;# 
  2082  0EAC                     	;# 
  2083  0EB1                     	;# 
  2084  0EB2                     	;# 
  2085  0EB3                     	;# 
  2086  0EB8                     	;# 
  2087  0EB9                     	;# 
  2088  0EBA                     	;# 
  2089  0EBB                     	;# 
  2090  0EBC                     	;# 
  2091  0EBD                     	;# 
  2092  0EBE                     	;# 
  2093  0EC3                     	;# 
  2094  0EC5                     	;# 
  2095  0EC6                     	;# 
  2096  0EC7                     	;# 
  2097  0EC8                     	;# 
  2098  0EC9                     	;# 
  2099  0ECA                     	;# 
  2100  0ECB                     	;# 
  2101  0ECC                     	;# 
  2102  0F10                     	;# 
  2103  0F11                     	;# 
  2104  0F12                     	;# 
  2105  0F13                     	;# 
  2106  0F14                     	;# 
  2107  0F15                     	;# 
  2108  0F16                     	;# 
  2109  0F17                     	;# 
  2110  0F18                     	;# 
  2111  0F19                     	;# 
  2112  0F1A                     	;# 
  2113  0F1B                     	;# 
  2114  0F1C                     	;# 
  2115  0F1D                     	;# 
  2116  0F1E                     	;# 
  2117  0F1F                     	;# 
  2118  0F20                     	;# 
  2119  0F21                     	;# 
  2120  0F22                     	;# 
  2121  0F23                     	;# 
  2122  0F24                     	;# 
  2123  0F25                     	;# 
  2124  0F26                     	;# 
  2125  0F27                     	;# 
  2126  0F38                     	;# 
  2127  0F39                     	;# 
  2128  0F3A                     	;# 
  2129  0F3B                     	;# 
  2130  0F3C                     	;# 
  2131  0F3D                     	;# 
  2132  0F3E                     	;# 
  2133  0F3F                     	;# 
  2134  0F40                     	;# 
  2135  0F41                     	;# 
  2136  0F43                     	;# 
  2137  0F44                     	;# 
  2138  0F45                     	;# 
  2139  0F46                     	;# 
  2140  0F47                     	;# 
  2141  0F48                     	;# 
  2142  0F49                     	;# 
  2143  0F4A                     	;# 
  2144  0F4B                     	;# 
  2145  0F4C                     	;# 
  2146  0F4E                     	;# 
  2147  0F4F                     	;# 
  2148  0F50                     	;# 
  2149  0F51                     	;# 
  2150  0F52                     	;# 
  2151  0F53                     	;# 
  2152  0F54                     	;# 
  2153  0F55                     	;# 
  2154  0F56                     	;# 
  2155  0F57                     	;# 
  2156  0F65                     	;# 
  2157  0F68                     	;# 
  2158  0F69                     	;# 
  2159  0F6A                     	;# 
  2160  0F6B                     	;# 
  2161  0FE4                     	;# 
  2162  0FE5                     	;# 
  2163  0FE6                     	;# 
  2164  0FE7                     	;# 
  2165  0FE8                     	;# 
  2166  0FE9                     	;# 
  2167  0FEA                     	;# 
  2168  0FEB                     	;# 
  2169  0FED                     	;# 
  2170  0FEE                     	;# 
  2171  0FEF                     	;# 
  2172  0000                     	;# 
  2173  0001                     	;# 
  2174  0002                     	;# 
  2175  0003                     	;# 
  2176  0004                     	;# 
  2177  0005                     	;# 
  2178  0006                     	;# 
  2179  0007                     	;# 
  2180  0008                     	;# 
  2181  0009                     	;# 
  2182  000A                     	;# 
  2183  000B                     	;# 
  2184  000C                     	;# 
  2185  000D                     	;# 
  2186  000E                     	;# 
  2187  0010                     	;# 
  2188  0011                     	;# 
  2189  0012                     	;# 
  2190  0013                     	;# 
  2191  0016                     	;# 
  2192  0017                     	;# 
  2193  0018                     	;# 
  2194  001C                     	;# 
  2195  001C                     	;# 
  2196  001D                     	;# 
  2197  001D                     	;# 
  2198  001E                     	;# 
  2199  001F                     	;# 
  2200  008C                     	;# 
  2201  008C                     	;# 
  2202  008D                     	;# 
  2203  008E                     	;# 
  2204  008E                     	;# 
  2205  008F                     	;# 
  2206  0090                     	;# 
  2207  0090                     	;# 
  2208  0091                     	;# 
  2209  0093                     	;# 
  2210  0094                     	;# 
  2211  0095                     	;# 
  2212  0096                     	;# 
  2213  0097                     	;# 
  2214  0098                     	;# 
  2215  0099                     	;# 
  2216  009A                     	;# 
  2217  009B                     	;# 
  2218  009C                     	;# 
  2219  009D                     	;# 
  2220  009E                     	;# 
  2221  010C                     	;# 
  2222  010D                     	;# 
  2223  010E                     	;# 
  2224  010E                     	;# 
  2225  010F                     	;# 
  2226  0110                     	;# 
  2227  0110                     	;# 
  2228  0111                     	;# 
  2229  0112                     	;# 
  2230  0112                     	;# 
  2231  0113                     	;# 
  2232  0114                     	;# 
  2233  0114                     	;# 
  2234  0115                     	;# 
  2235  0116                     	;# 
  2236  0116                     	;# 
  2237  0117                     	;# 
  2238  0119                     	;# 
  2239  0119                     	;# 
  2240  0119                     	;# 
  2241  011A                     	;# 
  2242  011A                     	;# 
  2243  011A                     	;# 
  2244  011B                     	;# 
  2245  011B                     	;# 
  2246  011B                     	;# 
  2247  011B                     	;# 
  2248  011B                     	;# 
  2249  011C                     	;# 
  2250  011C                     	;# 
  2251  011C                     	;# 
  2252  011D                     	;# 
  2253  011D                     	;# 
  2254  011D                     	;# 
  2255  011E                     	;# 
  2256  011E                     	;# 
  2257  011E                     	;# 
  2258  011F                     	;# 
  2259  011F                     	;# 
  2260  011F                     	;# 
  2261  011F                     	;# 
  2262  011F                     	;# 
  2263  018C                     	;# 
  2264  018D                     	;# 
  2265  018E                     	;# 
  2266  018F                     	;# 
  2267  0190                     	;# 
  2268  0191                     	;# 
  2269  0192                     	;# 
  2270  0196                     	;# 
  2271  0197                     	;# 
  2272  0198                     	;# 
  2273  0199                     	;# 
  2274  019A                     	;# 
  2275  019B                     	;# 
  2276  019C                     	;# 
  2277  020C                     	;# 
  2278  020C                     	;# 
  2279  020D                     	;# 
  2280  020E                     	;# 
  2281  020F                     	;# 
  2282  020F                     	;# 
  2283  0210                     	;# 
  2284  0210                     	;# 
  2285  0211                     	;# 
  2286  0211                     	;# 
  2287  0212                     	;# 
  2288  0212                     	;# 
  2289  0213                     	;# 
  2290  0214                     	;# 
  2291  0215                     	;# 
  2292  0215                     	;# 
  2293  0216                     	;# 
  2294  0216                     	;# 
  2295  0217                     	;# 
  2296  0217                     	;# 
  2297  0218                     	;# 
  2298  0218                     	;# 
  2299  0219                     	;# 
  2300  021A                     	;# 
  2301  021B                     	;# 
  2302  021B                     	;# 
  2303  021C                     	;# 
  2304  021C                     	;# 
  2305  021D                     	;# 
  2306  021D                     	;# 
  2307  021E                     	;# 
  2308  021F                     	;# 
  2309  028C                     	;# 
  2310  028C                     	;# 
  2311  028D                     	;# 
  2312  028D                     	;# 
  2313  028E                     	;# 
  2314  028F                     	;# 
  2315  0290                     	;# 
  2316  0290                     	;# 
  2317  0291                     	;# 
  2318  0292                     	;# 
  2319  0292                     	;# 
  2320  0293                     	;# 
  2321  0293                     	;# 
  2322  0294                     	;# 
  2323  0295                     	;# 
  2324  0296                     	;# 
  2325  0296                     	;# 
  2326  0297                     	;# 
  2327  0298                     	;# 
  2328  0298                     	;# 
  2329  0299                     	;# 
  2330  0299                     	;# 
  2331  029A                     	;# 
  2332  029B                     	;# 
  2333  029C                     	;# 
  2334  029C                     	;# 
  2335  029D                     	;# 
  2336  030C                     	;# 
  2337  030C                     	;# 
  2338  030D                     	;# 
  2339  030E                     	;# 
  2340  030F                     	;# 
  2341  0310                     	;# 
  2342  0310                     	;# 
  2343  0311                     	;# 
  2344  0312                     	;# 
  2345  0313                     	;# 
  2346  0314                     	;# 
  2347  0314                     	;# 
  2348  0315                     	;# 
  2349  0316                     	;# 
  2350  0317                     	;# 
  2351  0318                     	;# 
  2352  0318                     	;# 
  2353  0319                     	;# 
  2354  031A                     	;# 
  2355  031B                     	;# 
  2356  031C                     	;# 
  2357  031C                     	;# 
  2358  031D                     	;# 
  2359  031E                     	;# 
  2360  031F                     	;# 
  2361  038C                     	;# 
  2362  038D                     	;# 
  2363  038E                     	;# 
  2364  0390                     	;# 
  2365  0391                     	;# 
  2366  0392                     	;# 
  2367  040C                     	;# 
  2368  040D                     	;# 
  2369  040E                     	;# 
  2370  040F                     	;# 
  2371  0410                     	;# 
  2372  0411                     	;# 
  2373  0416                     	;# 
  2374  0416                     	;# 
  2375  0417                     	;# 
  2376  0418                     	;# 
  2377  0418                     	;# 
  2378  0419                     	;# 
  2379  041A                     	;# 
  2380  041A                     	;# 
  2381  041B                     	;# 
  2382  041C                     	;# 
  2383  041C                     	;# 
  2384  041D                     	;# 
  2385  041E                     	;# 
  2386  041F                     	;# 
  2387  048C                     	;# 
  2388  048C                     	;# 
  2389  048D                     	;# 
  2390  048E                     	;# 
  2391  048F                     	;# 
  2392  048F                     	;# 
  2393  0490                     	;# 
  2394  0491                     	;# 
  2395  0492                     	;# 
  2396  0492                     	;# 
  2397  0493                     	;# 
  2398  0494                     	;# 
  2399  0495                     	;# 
  2400  0495                     	;# 
  2401  0496                     	;# 
  2402  0497                     	;# 
  2403  0498                     	;# 
  2404  0499                     	;# 
  2405  049A                     	;# 
  2406  049B                     	;# 
  2407  049C                     	;# 
  2408  049D                     	;# 
  2409  050C                     	;# 
  2410  050C                     	;# 
  2411  050D                     	;# 
  2412  050E                     	;# 
  2413  050F                     	;# 
  2414  050F                     	;# 
  2415  0510                     	;# 
  2416  0511                     	;# 
  2417  0512                     	;# 
  2418  0512                     	;# 
  2419  0513                     	;# 
  2420  0514                     	;# 
  2421  0515                     	;# 
  2422  0515                     	;# 
  2423  0516                     	;# 
  2424  0517                     	;# 
  2425  0518                     	;# 
  2426  0519                     	;# 
  2427  051A                     	;# 
  2428  051B                     	;# 
  2429  051C                     	;# 
  2430  051D                     	;# 
  2431  058C                     	;# 
  2432  058C                     	;# 
  2433  058D                     	;# 
  2434  058E                     	;# 
  2435  058F                     	;# 
  2436  058F                     	;# 
  2437  0590                     	;# 
  2438  0591                     	;# 
  2439  0592                     	;# 
  2440  0593                     	;# 
  2441  060C                     	;# 
  2442  060D                     	;# 
  2443  060E                     	;# 
  2444  060F                     	;# 
  2445  0610                     	;# 
  2446  0611                     	;# 
  2447  0612                     	;# 
  2448  0613                     	;# 
  2449  0614                     	;# 
  2450  0616                     	;# 
  2451  0617                     	;# 
  2452  0618                     	;# 
  2453  0619                     	;# 
  2454  061A                     	;# 
  2455  061B                     	;# 
  2456  061C                     	;# 
  2457  061D                     	;# 
  2458  061E                     	;# 
  2459  068C                     	;# 
  2460  068D                     	;# 
  2461  068E                     	;# 
  2462  068F                     	;# 
  2463  0690                     	;# 
  2464  0691                     	;# 
  2465  0692                     	;# 
  2466  0693                     	;# 
  2467  0694                     	;# 
  2468  070C                     	;# 
  2469  070D                     	;# 
  2470  070E                     	;# 
  2471  070F                     	;# 
  2472  0710                     	;# 
  2473  0711                     	;# 
  2474  0712                     	;# 
  2475  0713                     	;# 
  2476  0714                     	;# 
  2477  0716                     	;# 
  2478  0717                     	;# 
  2479  0718                     	;# 
  2480  0719                     	;# 
  2481  071A                     	;# 
  2482  071B                     	;# 
  2483  071C                     	;# 
  2484  071D                     	;# 
  2485  071E                     	;# 
  2486  0796                     	;# 
  2487  0797                     	;# 
  2488  0798                     	;# 
  2489  0799                     	;# 
  2490  079A                     	;# 
  2491  079B                     	;# 
  2492  080C                     	;# 
  2493  080D                     	;# 
  2494  080E                     	;# 
  2495  080F                     	;# 
  2496  0810                     	;# 
  2497  0811                     	;# 
  2498  0812                     	;# 
  2499  0813                     	;# 
  2500  0814                     	;# 
  2501  081A                     	;# 
  2502  081B                     	;# 
  2503  081C                     	;# 
  2504  081D                     	;# 
  2505  081E                     	;# 
  2506  081F                     	;# 
  2507  088C                     	;# 
  2508  088D                     	;# 
  2509  088E                     	;# 
  2510  088F                     	;# 
  2511  0890                     	;# 
  2512  0891                     	;# 
  2513  0892                     	;# 
  2514  0893                     	;# 
  2515  0895                     	;# 
  2516  0896                     	;# 
  2517  0897                     	;# 
  2518  0898                     	;# 
  2519  0899                     	;# 
  2520  089A                     	;# 
  2521  089B                     	;# 
  2522  090C                     	;# 
  2523  090E                     	;# 
  2524  090F                     	;# 
  2525  091F                     	;# 
  2526  091F                     	;# 
  2527  098F                     	;# 
  2528  098F                     	;# 
  2529  0990                     	;# 
  2530  0991                     	;# 
  2531  0992                     	;# 
  2532  0993                     	;# 
  2533  0994                     	;# 
  2534  0995                     	;# 
  2535  0996                     	;# 
  2536  0997                     	;# 
  2537  0E0F                     	;# 
  2538  0E10                     	;# 
  2539  0E11                     	;# 
  2540  0E12                     	;# 
  2541  0E13                     	;# 
  2542  0E14                     	;# 
  2543  0E15                     	;# 
  2544  0E16                     	;# 
  2545  0E17                     	;# 
  2546  0E18                     	;# 
  2547  0E19                     	;# 
  2548  0E1A                     	;# 
  2549  0E1B                     	;# 
  2550  0E1C                     	;# 
  2551  0E1D                     	;# 
  2552  0E1E                     	;# 
  2553  0E1F                     	;# 
  2554  0E20                     	;# 
  2555  0E21                     	;# 
  2556  0E22                     	;# 
  2557  0E23                     	;# 
  2558  0E24                     	;# 
  2559  0E25                     	;# 
  2560  0E26                     	;# 
  2561  0E27                     	;# 
  2562  0E28                     	;# 
  2563  0E29                     	;# 
  2564  0E2A                     	;# 
  2565  0E2B                     	;# 
  2566  0E2C                     	;# 
  2567  0E2D                     	;# 
  2568  0E2E                     	;# 
  2569  0E2F                     	;# 
  2570  0E30                     	;# 
  2571  0E31                     	;# 
  2572  0E32                     	;# 
  2573  0E33                     	;# 
  2574  0E34                     	;# 
  2575  0E35                     	;# 
  2576  0E36                     	;# 
  2577  0E37                     	;# 
  2578  0E8F                     	;# 
  2579  0E90                     	;# 
  2580  0E91                     	;# 
  2581  0E92                     	;# 
  2582  0E93                     	;# 
  2583  0E94                     	;# 
  2584  0E95                     	;# 
  2585  0E96                     	;# 
  2586  0E97                     	;# 
  2587  0E9C                     	;# 
  2588  0E9D                     	;# 
  2589  0E9E                     	;# 
  2590  0EA1                     	;# 
  2591  0EA2                     	;# 
  2592  0EA3                     	;# 
  2593  0EA4                     	;# 
  2594  0EA5                     	;# 
  2595  0EA9                     	;# 
  2596  0EAA                     	;# 
  2597  0EAB                     	;# 
  2598  0EAC                     	;# 
  2599  0EB1                     	;# 
  2600  0EB2                     	;# 
  2601  0EB3                     	;# 
  2602  0EB8                     	;# 
  2603  0EB9                     	;# 
  2604  0EBA                     	;# 
  2605  0EBB                     	;# 
  2606  0EBC                     	;# 
  2607  0EBD                     	;# 
  2608  0EBE                     	;# 
  2609  0EC3                     	;# 
  2610  0EC5                     	;# 
  2611  0EC6                     	;# 
  2612  0EC7                     	;# 
  2613  0EC8                     	;# 
  2614  0EC9                     	;# 
  2615  0ECA                     	;# 
  2616  0ECB                     	;# 
  2617  0ECC                     	;# 
  2618  0F10                     	;# 
  2619  0F11                     	;# 
  2620  0F12                     	;# 
  2621  0F13                     	;# 
  2622  0F14                     	;# 
  2623  0F15                     	;# 
  2624  0F16                     	;# 
  2625  0F17                     	;# 
  2626  0F18                     	;# 
  2627  0F19                     	;# 
  2628  0F1A                     	;# 
  2629  0F1B                     	;# 
  2630  0F1C                     	;# 
  2631  0F1D                     	;# 
  2632  0F1E                     	;# 
  2633  0F1F                     	;# 
  2634  0F20                     	;# 
  2635  0F21                     	;# 
  2636  0F22                     	;# 
  2637  0F23                     	;# 
  2638  0F24                     	;# 
  2639  0F25                     	;# 
  2640  0F26                     	;# 
  2641  0F27                     	;# 
  2642  0F38                     	;# 
  2643  0F39                     	;# 
  2644  0F3A                     	;# 
  2645  0F3B                     	;# 
  2646  0F3C                     	;# 
  2647  0F3D                     	;# 
  2648  0F3E                     	;# 
  2649  0F3F                     	;# 
  2650  0F40                     	;# 
  2651  0F41                     	;# 
  2652  0F43                     	;# 
  2653  0F44                     	;# 
  2654  0F45                     	;# 
  2655  0F46                     	;# 
  2656  0F47                     	;# 
  2657  0F48                     	;# 
  2658  0F49                     	;# 
  2659  0F4A                     	;# 
  2660  0F4B                     	;# 
  2661  0F4C                     	;# 
  2662  0F4E                     	;# 
  2663  0F4F                     	;# 
  2664  0F50                     	;# 
  2665  0F51                     	;# 
  2666  0F52                     	;# 
  2667  0F53                     	;# 
  2668  0F54                     	;# 
  2669  0F55                     	;# 
  2670  0F56                     	;# 
  2671  0F57                     	;# 
  2672  0F65                     	;# 
  2673  0F68                     	;# 
  2674  0F69                     	;# 
  2675  0F6A                     	;# 
  2676  0F6B                     	;# 
  2677  0FE4                     	;# 
  2678  0FE5                     	;# 
  2679  0FE6                     	;# 
  2680  0FE7                     	;# 
  2681  0FE8                     	;# 
  2682  0FE9                     	;# 
  2683  0FEA                     	;# 
  2684  0FEB                     	;# 
  2685  0FED                     	;# 
  2686  0FEE                     	;# 
  2687  0FEF                     	;# 
  2688  0000                     	;# 
  2689  0001                     	;# 
  2690  0002                     	;# 
  2691  0003                     	;# 
  2692  0004                     	;# 
  2693  0005                     	;# 
  2694  0006                     	;# 
  2695  0007                     	;# 
  2696  0008                     	;# 
  2697  0009                     	;# 
  2698  000A                     	;# 
  2699  000B                     	;# 
  2700  000C                     	;# 
  2701  000D                     	;# 
  2702  000E                     	;# 
  2703  0010                     	;# 
  2704  0011                     	;# 
  2705  0012                     	;# 
  2706  0013                     	;# 
  2707  0016                     	;# 
  2708  0017                     	;# 
  2709  0018                     	;# 
  2710  001C                     	;# 
  2711  001C                     	;# 
  2712  001D                     	;# 
  2713  001D                     	;# 
  2714  001E                     	;# 
  2715  001F                     	;# 
  2716  008C                     	;# 
  2717  008C                     	;# 
  2718  008D                     	;# 
  2719  008E                     	;# 
  2720  008E                     	;# 
  2721  008F                     	;# 
  2722  0090                     	;# 
  2723  0090                     	;# 
  2724  0091                     	;# 
  2725  0093                     	;# 
  2726  0094                     	;# 
  2727  0095                     	;# 
  2728  0096                     	;# 
  2729  0097                     	;# 
  2730  0098                     	;# 
  2731  0099                     	;# 
  2732  009A                     	;# 
  2733  009B                     	;# 
  2734  009C                     	;# 
  2735  009D                     	;# 
  2736  009E                     	;# 
  2737  010C                     	;# 
  2738  010D                     	;# 
  2739  010E                     	;# 
  2740  010E                     	;# 
  2741  010F                     	;# 
  2742  0110                     	;# 
  2743  0110                     	;# 
  2744  0111                     	;# 
  2745  0112                     	;# 
  2746  0112                     	;# 
  2747  0113                     	;# 
  2748  0114                     	;# 
  2749  0114                     	;# 
  2750  0115                     	;# 
  2751  0116                     	;# 
  2752  0116                     	;# 
  2753  0117                     	;# 
  2754  0119                     	;# 
  2755  0119                     	;# 
  2756  0119                     	;# 
  2757  011A                     	;# 
  2758  011A                     	;# 
  2759  011A                     	;# 
  2760  011B                     	;# 
  2761  011B                     	;# 
  2762  011B                     	;# 
  2763  011B                     	;# 
  2764  011B                     	;# 
  2765  011C                     	;# 
  2766  011C                     	;# 
  2767  011C                     	;# 
  2768  011D                     	;# 
  2769  011D                     	;# 
  2770  011D                     	;# 
  2771  011E                     	;# 
  2772  011E                     	;# 
  2773  011E                     	;# 
  2774  011F                     	;# 
  2775  011F                     	;# 
  2776  011F                     	;# 
  2777  011F                     	;# 
  2778  011F                     	;# 
  2779  018C                     	;# 
  2780  018D                     	;# 
  2781  018E                     	;# 
  2782  018F                     	;# 
  2783  0190                     	;# 
  2784  0191                     	;# 
  2785  0192                     	;# 
  2786  0196                     	;# 
  2787  0197                     	;# 
  2788  0198                     	;# 
  2789  0199                     	;# 
  2790  019A                     	;# 
  2791  019B                     	;# 
  2792  019C                     	;# 
  2793  020C                     	;# 
  2794  020C                     	;# 
  2795  020D                     	;# 
  2796  020E                     	;# 
  2797  020F                     	;# 
  2798  020F                     	;# 
  2799  0210                     	;# 
  2800  0210                     	;# 
  2801  0211                     	;# 
  2802  0211                     	;# 
  2803  0212                     	;# 
  2804  0212                     	;# 
  2805  0213                     	;# 
  2806  0214                     	;# 
  2807  0215                     	;# 
  2808  0215                     	;# 
  2809  0216                     	;# 
  2810  0216                     	;# 
  2811  0217                     	;# 
  2812  0217                     	;# 
  2813  0218                     	;# 
  2814  0218                     	;# 
  2815  0219                     	;# 
  2816  021A                     	;# 
  2817  021B                     	;# 
  2818  021B                     	;# 
  2819  021C                     	;# 
  2820  021C                     	;# 
  2821  021D                     	;# 
  2822  021D                     	;# 
  2823  021E                     	;# 
  2824  021F                     	;# 
  2825  028C                     	;# 
  2826  028C                     	;# 
  2827  028D                     	;# 
  2828  028D                     	;# 
  2829  028E                     	;# 
  2830  028F                     	;# 
  2831  0290                     	;# 
  2832  0290                     	;# 
  2833  0291                     	;# 
  2834  0292                     	;# 
  2835  0292                     	;# 
  2836  0293                     	;# 
  2837  0293                     	;# 
  2838  0294                     	;# 
  2839  0295                     	;# 
  2840  0296                     	;# 
  2841  0296                     	;# 
  2842  0297                     	;# 
  2843  0298                     	;# 
  2844  0298                     	;# 
  2845  0299                     	;# 
  2846  0299                     	;# 
  2847  029A                     	;# 
  2848  029B                     	;# 
  2849  029C                     	;# 
  2850  029C                     	;# 
  2851  029D                     	;# 
  2852  030C                     	;# 
  2853  030C                     	;# 
  2854  030D                     	;# 
  2855  030E                     	;# 
  2856  030F                     	;# 
  2857  0310                     	;# 
  2858  0310                     	;# 
  2859  0311                     	;# 
  2860  0312                     	;# 
  2861  0313                     	;# 
  2862  0314                     	;# 
  2863  0314                     	;# 
  2864  0315                     	;# 
  2865  0316                     	;# 
  2866  0317                     	;# 
  2867  0318                     	;# 
  2868  0318                     	;# 
  2869  0319                     	;# 
  2870  031A                     	;# 
  2871  031B                     	;# 
  2872  031C                     	;# 
  2873  031C                     	;# 
  2874  031D                     	;# 
  2875  031E                     	;# 
  2876  031F                     	;# 
  2877  038C                     	;# 
  2878  038D                     	;# 
  2879  038E                     	;# 
  2880  0390                     	;# 
  2881  0391                     	;# 
  2882  0392                     	;# 
  2883  040C                     	;# 
  2884  040D                     	;# 
  2885  040E                     	;# 
  2886  040F                     	;# 
  2887  0410                     	;# 
  2888  0411                     	;# 
  2889  0416                     	;# 
  2890  0416                     	;# 
  2891  0417                     	;# 
  2892  0418                     	;# 
  2893  0418                     	;# 
  2894  0419                     	;# 
  2895  041A                     	;# 
  2896  041A                     	;# 
  2897  041B                     	;# 
  2898  041C                     	;# 
  2899  041C                     	;# 
  2900  041D                     	;# 
  2901  041E                     	;# 
  2902  041F                     	;# 
  2903  048C                     	;# 
  2904  048C                     	;# 
  2905  048D                     	;# 
  2906  048E                     	;# 
  2907  048F                     	;# 
  2908  048F                     	;# 
  2909  0490                     	;# 
  2910  0491                     	;# 
  2911  0492                     	;# 
  2912  0492                     	;# 
  2913  0493                     	;# 
  2914  0494                     	;# 
  2915  0495                     	;# 
  2916  0495                     	;# 
  2917  0496                     	;# 
  2918  0497                     	;# 
  2919  0498                     	;# 
  2920  0499                     	;# 
  2921  049A                     	;# 
  2922  049B                     	;# 
  2923  049C                     	;# 
  2924  049D                     	;# 
  2925  050C                     	;# 
  2926  050C                     	;# 
  2927  050D                     	;# 
  2928  050E                     	;# 
  2929  050F                     	;# 
  2930  050F                     	;# 
  2931  0510                     	;# 
  2932  0511                     	;# 
  2933  0512                     	;# 
  2934  0512                     	;# 
  2935  0513                     	;# 
  2936  0514                     	;# 
  2937  0515                     	;# 
  2938  0515                     	;# 
  2939  0516                     	;# 
  2940  0517                     	;# 
  2941  0518                     	;# 
  2942  0519                     	;# 
  2943  051A                     	;# 
  2944  051B                     	;# 
  2945  051C                     	;# 
  2946  051D                     	;# 
  2947  058C                     	;# 
  2948  058C                     	;# 
  2949  058D                     	;# 
  2950  058E                     	;# 
  2951  058F                     	;# 
  2952  058F                     	;# 
  2953  0590                     	;# 
  2954  0591                     	;# 
  2955  0592                     	;# 
  2956  0593                     	;# 
  2957  060C                     	;# 
  2958  060D                     	;# 
  2959  060E                     	;# 
  2960  060F                     	;# 
  2961  0610                     	;# 
  2962  0611                     	;# 
  2963  0612                     	;# 
  2964  0613                     	;# 
  2965  0614                     	;# 
  2966  0616                     	;# 
  2967  0617                     	;# 
  2968  0618                     	;# 
  2969  0619                     	;# 
  2970  061A                     	;# 
  2971  061B                     	;# 
  2972  061C                     	;# 
  2973  061D                     	;# 
  2974  061E                     	;# 
  2975  068C                     	;# 
  2976  068D                     	;# 
  2977  068E                     	;# 
  2978  068F                     	;# 
  2979  0690                     	;# 
  2980  0691                     	;# 
  2981  0692                     	;# 
  2982  0693                     	;# 
  2983  0694                     	;# 
  2984  070C                     	;# 
  2985  070D                     	;# 
  2986  070E                     	;# 
  2987  070F                     	;# 
  2988  0710                     	;# 
  2989  0711                     	;# 
  2990  0712                     	;# 
  2991  0713                     	;# 
  2992  0714                     	;# 
  2993  0716                     	;# 
  2994  0717                     	;# 
  2995  0718                     	;# 
  2996  0719                     	;# 
  2997  071A                     	;# 
  2998  071B                     	;# 
  2999  071C                     	;# 
  3000  071D                     	;# 
  3001  071E                     	;# 
  3002  0796                     	;# 
  3003  0797                     	;# 
  3004  0798                     	;# 
  3005  0799                     	;# 
  3006  079A                     	;# 
  3007  079B                     	;# 
  3008  080C                     	;# 
  3009  080D                     	;# 
  3010  080E                     	;# 
  3011  080F                     	;# 
  3012  0810                     	;# 
  3013  0811                     	;# 
  3014  0812                     	;# 
  3015  0813                     	;# 
  3016  0814                     	;# 
  3017  081A                     	;# 
  3018  081B                     	;# 
  3019  081C                     	;# 
  3020  081D                     	;# 
  3021  081E                     	;# 
  3022  081F                     	;# 
  3023  088C                     	;# 
  3024  088D                     	;# 
  3025  088E                     	;# 
  3026  088F                     	;# 
  3027  0890                     	;# 
  3028  0891                     	;# 
  3029  0892                     	;# 
  3030  0893                     	;# 
  3031  0895                     	;# 
  3032  0896                     	;# 
  3033  0897                     	;# 
  3034  0898                     	;# 
  3035  0899                     	;# 
  3036  089A                     	;# 
  3037  089B                     	;# 
  3038  090C                     	;# 
  3039  090E                     	;# 
  3040  090F                     	;# 
  3041  091F                     	;# 
  3042  091F                     	;# 
  3043  098F                     	;# 
  3044  098F                     	;# 
  3045  0990                     	;# 
  3046  0991                     	;# 
  3047  0992                     	;# 
  3048  0993                     	;# 
  3049  0994                     	;# 
  3050  0995                     	;# 
  3051  0996                     	;# 
  3052  0997                     	;# 
  3053  0E0F                     	;# 
  3054  0E10                     	;# 
  3055  0E11                     	;# 
  3056  0E12                     	;# 
  3057  0E13                     	;# 
  3058  0E14                     	;# 
  3059  0E15                     	;# 
  3060  0E16                     	;# 
  3061  0E17                     	;# 
  3062  0E18                     	;# 
  3063  0E19                     	;# 
  3064  0E1A                     	;# 
  3065  0E1B                     	;# 
  3066  0E1C                     	;# 
  3067  0E1D                     	;# 
  3068  0E1E                     	;# 
  3069  0E1F                     	;# 
  3070  0E20                     	;# 
  3071  0E21                     	;# 
  3072  0E22                     	;# 
  3073  0E23                     	;# 
  3074  0E24                     	;# 
  3075  0E25                     	;# 
  3076  0E26                     	;# 
  3077  0E27                     	;# 
  3078  0E28                     	;# 
  3079  0E29                     	;# 
  3080  0E2A                     	;# 
  3081  0E2B                     	;# 
  3082  0E2C                     	;# 
  3083  0E2D                     	;# 
  3084  0E2E                     	;# 
  3085  0E2F                     	;# 
  3086  0E30                     	;# 
  3087  0E31                     	;# 
  3088  0E32                     	;# 
  3089  0E33                     	;# 
  3090  0E34                     	;# 
  3091  0E35                     	;# 
  3092  0E36                     	;# 
  3093  0E37                     	;# 
  3094  0E8F                     	;# 
  3095  0E90                     	;# 
  3096  0E91                     	;# 
  3097  0E92                     	;# 
  3098  0E93                     	;# 
  3099  0E94                     	;# 
  3100  0E95                     	;# 
  3101  0E96                     	;# 
  3102  0E97                     	;# 
  3103  0E9C                     	;# 
  3104  0E9D                     	;# 
  3105  0E9E                     	;# 
  3106  0EA1                     	;# 
  3107  0EA2                     	;# 
  3108  0EA3                     	;# 
  3109  0EA4                     	;# 
  3110  0EA5                     	;# 
  3111  0EA9                     	;# 
  3112  0EAA                     	;# 
  3113  0EAB                     	;# 
  3114  0EAC                     	;# 
  3115  0EB1                     	;# 
  3116  0EB2                     	;# 
  3117  0EB3                     	;# 
  3118  0EB8                     	;# 
  3119  0EB9                     	;# 
  3120  0EBA                     	;# 
  3121  0EBB                     	;# 
  3122  0EBC                     	;# 
  3123  0EBD                     	;# 
  3124  0EBE                     	;# 
  3125  0EC3                     	;# 
  3126  0EC5                     	;# 
  3127  0EC6                     	;# 
  3128  0EC7                     	;# 
  3129  0EC8                     	;# 
  3130  0EC9                     	;# 
  3131  0ECA                     	;# 
  3132  0ECB                     	;# 
  3133  0ECC                     	;# 
  3134  0F10                     	;# 
  3135  0F11                     	;# 
  3136  0F12                     	;# 
  3137  0F13                     	;# 
  3138  0F14                     	;# 
  3139  0F15                     	;# 
  3140  0F16                     	;# 
  3141  0F17                     	;# 
  3142  0F18                     	;# 
  3143  0F19                     	;# 
  3144  0F1A                     	;# 
  3145  0F1B                     	;# 
  3146  0F1C                     	;# 
  3147  0F1D                     	;# 
  3148  0F1E                     	;# 
  3149  0F1F                     	;# 
  3150  0F20                     	;# 
  3151  0F21                     	;# 
  3152  0F22                     	;# 
  3153  0F23                     	;# 
  3154  0F24                     	;# 
  3155  0F25                     	;# 
  3156  0F26                     	;# 
  3157  0F27                     	;# 
  3158  0F38                     	;# 
  3159  0F39                     	;# 
  3160  0F3A                     	;# 
  3161  0F3B                     	;# 
  3162  0F3C                     	;# 
  3163  0F3D                     	;# 
  3164  0F3E                     	;# 
  3165  0F3F                     	;# 
  3166  0F40                     	;# 
  3167  0F41                     	;# 
  3168  0F43                     	;# 
  3169  0F44                     	;# 
  3170  0F45                     	;# 
  3171  0F46                     	;# 
  3172  0F47                     	;# 
  3173  0F48                     	;# 
  3174  0F49                     	;# 
  3175  0F4A                     	;# 
  3176  0F4B                     	;# 
  3177  0F4C                     	;# 
  3178  0F4E                     	;# 
  3179  0F4F                     	;# 
  3180  0F50                     	;# 
  3181  0F51                     	;# 
  3182  0F52                     	;# 
  3183  0F53                     	;# 
  3184  0F54                     	;# 
  3185  0F55                     	;# 
  3186  0F56                     	;# 
  3187  0F57                     	;# 
  3188  0F65                     	;# 
  3189  0F68                     	;# 
  3190  0F69                     	;# 
  3191  0F6A                     	;# 
  3192  0F6B                     	;# 
  3193  0FE4                     	;# 
  3194  0FE5                     	;# 
  3195  0FE6                     	;# 
  3196  0FE7                     	;# 
  3197  0FE8                     	;# 
  3198  0FE9                     	;# 
  3199  0FEA                     	;# 
  3200  0FEB                     	;# 
  3201  0FED                     	;# 
  3202  0FEE                     	;# 
  3203  0FEF                     	;# 
  3204  0000                     	;# 
  3205  0001                     	;# 
  3206  0002                     	;# 
  3207  0003                     	;# 
  3208  0004                     	;# 
  3209  0005                     	;# 
  3210  0006                     	;# 
  3211  0007                     	;# 
  3212  0008                     	;# 
  3213  0009                     	;# 
  3214  000A                     	;# 
  3215  000B                     	;# 
  3216  000C                     	;# 
  3217  000D                     	;# 
  3218  000E                     	;# 
  3219  0010                     	;# 
  3220  0011                     	;# 
  3221  0012                     	;# 
  3222  0013                     	;# 
  3223  0016                     	;# 
  3224  0017                     	;# 
  3225  0018                     	;# 
  3226  001C                     	;# 
  3227  001C                     	;# 
  3228  001D                     	;# 
  3229  001D                     	;# 
  3230  001E                     	;# 
  3231  001F                     	;# 
  3232  008C                     	;# 
  3233  008C                     	;# 
  3234  008D                     	;# 
  3235  008E                     	;# 
  3236  008E                     	;# 
  3237  008F                     	;# 
  3238  0090                     	;# 
  3239  0090                     	;# 
  3240  0091                     	;# 
  3241  0093                     	;# 
  3242  0094                     	;# 
  3243  0095                     	;# 
  3244  0096                     	;# 
  3245  0097                     	;# 
  3246  0098                     	;# 
  3247  0099                     	;# 
  3248  009A                     	;# 
  3249  009B                     	;# 
  3250  009C                     	;# 
  3251  009D                     	;# 
  3252  009E                     	;# 
  3253  010C                     	;# 
  3254  010D                     	;# 
  3255  010E                     	;# 
  3256  010E                     	;# 
  3257  010F                     	;# 
  3258  0110                     	;# 
  3259  0110                     	;# 
  3260  0111                     	;# 
  3261  0112                     	;# 
  3262  0112                     	;# 
  3263  0113                     	;# 
  3264  0114                     	;# 
  3265  0114                     	;# 
  3266  0115                     	;# 
  3267  0116                     	;# 
  3268  0116                     	;# 
  3269  0117                     	;# 
  3270  0119                     	;# 
  3271  0119                     	;# 
  3272  0119                     	;# 
  3273  011A                     	;# 
  3274  011A                     	;# 
  3275  011A                     	;# 
  3276  011B                     	;# 
  3277  011B                     	;# 
  3278  011B                     	;# 
  3279  011B                     	;# 
  3280  011B                     	;# 
  3281  011C                     	;# 
  3282  011C                     	;# 
  3283  011C                     	;# 
  3284  011D                     	;# 
  3285  011D                     	;# 
  3286  011D                     	;# 
  3287  011E                     	;# 
  3288  011E                     	;# 
  3289  011E                     	;# 
  3290  011F                     	;# 
  3291  011F                     	;# 
  3292  011F                     	;# 
  3293  011F                     	;# 
  3294  011F                     	;# 
  3295  018C                     	;# 
  3296  018D                     	;# 
  3297  018E                     	;# 
  3298  018F                     	;# 
  3299  0190                     	;# 
  3300  0191                     	;# 
  3301  0192                     	;# 
  3302  0196                     	;# 
  3303  0197                     	;# 
  3304  0198                     	;# 
  3305  0199                     	;# 
  3306  019A                     	;# 
  3307  019B                     	;# 
  3308  019C                     	;# 
  3309  020C                     	;# 
  3310  020C                     	;# 
  3311  020D                     	;# 
  3312  020E                     	;# 
  3313  020F                     	;# 
  3314  020F                     	;# 
  3315  0210                     	;# 
  3316  0210                     	;# 
  3317  0211                     	;# 
  3318  0211                     	;# 
  3319  0212                     	;# 
  3320  0212                     	;# 
  3321  0213                     	;# 
  3322  0214                     	;# 
  3323  0215                     	;# 
  3324  0215                     	;# 
  3325  0216                     	;# 
  3326  0216                     	;# 
  3327  0217                     	;# 
  3328  0217                     	;# 
  3329  0218                     	;# 
  3330  0218                     	;# 
  3331  0219                     	;# 
  3332  021A                     	;# 
  3333  021B                     	;# 
  3334  021B                     	;# 
  3335  021C                     	;# 
  3336  021C                     	;# 
  3337  021D                     	;# 
  3338  021D                     	;# 
  3339  021E                     	;# 
  3340  021F                     	;# 
  3341  028C                     	;# 
  3342  028C                     	;# 
  3343  028D                     	;# 
  3344  028D                     	;# 
  3345  028E                     	;# 
  3346  028F                     	;# 
  3347  0290                     	;# 
  3348  0290                     	;# 
  3349  0291                     	;# 
  3350  0292                     	;# 
  3351  0292                     	;# 
  3352  0293                     	;# 
  3353  0293                     	;# 
  3354  0294                     	;# 
  3355  0295                     	;# 
  3356  0296                     	;# 
  3357  0296                     	;# 
  3358  0297                     	;# 
  3359  0298                     	;# 
  3360  0298                     	;# 
  3361  0299                     	;# 
  3362  0299                     	;# 
  3363  029A                     	;# 
  3364  029B                     	;# 
  3365  029C                     	;# 
  3366  029C                     	;# 
  3367  029D                     	;# 
  3368  030C                     	;# 
  3369  030C                     	;# 
  3370  030D                     	;# 
  3371  030E                     	;# 
  3372  030F                     	;# 
  3373  0310                     	;# 
  3374  0310                     	;# 
  3375  0311                     	;# 
  3376  0312                     	;# 
  3377  0313                     	;# 
  3378  0314                     	;# 
  3379  0314                     	;# 
  3380  0315                     	;# 
  3381  0316                     	;# 
  3382  0317                     	;# 
  3383  0318                     	;# 
  3384  0318                     	;# 
  3385  0319                     	;# 
  3386  031A                     	;# 
  3387  031B                     	;# 
  3388  031C                     	;# 
  3389  031C                     	;# 
  3390  031D                     	;# 
  3391  031E                     	;# 
  3392  031F                     	;# 
  3393  038C                     	;# 
  3394  038D                     	;# 
  3395  038E                     	;# 
  3396  0390                     	;# 
  3397  0391                     	;# 
  3398  0392                     	;# 
  3399  040C                     	;# 
  3400  040D                     	;# 
  3401  040E                     	;# 
  3402  040F                     	;# 
  3403  0410                     	;# 
  3404  0411                     	;# 
  3405  0416                     	;# 
  3406  0416                     	;# 
  3407  0417                     	;# 
  3408  0418                     	;# 
  3409  0418                     	;# 
  3410  0419                     	;# 
  3411  041A                     	;# 
  3412  041A                     	;# 
  3413  041B                     	;# 
  3414  041C                     	;# 
  3415  041C                     	;# 
  3416  041D                     	;# 
  3417  041E                     	;# 
  3418  041F                     	;# 
  3419  048C                     	;# 
  3420  048C                     	;# 
  3421  048D                     	;# 
  3422  048E                     	;# 
  3423  048F                     	;# 
  3424  048F                     	;# 
  3425  0490                     	;# 
  3426  0491                     	;# 
  3427  0492                     	;# 
  3428  0492                     	;# 
  3429  0493                     	;# 
  3430  0494                     	;# 
  3431  0495                     	;# 
  3432  0495                     	;# 
  3433  0496                     	;# 
  3434  0497                     	;# 
  3435  0498                     	;# 
  3436  0499                     	;# 
  3437  049A                     	;# 
  3438  049B                     	;# 
  3439  049C                     	;# 
  3440  049D                     	;# 
  3441  050C                     	;# 
  3442  050C                     	;# 
  3443  050D                     	;# 
  3444  050E                     	;# 
  3445  050F                     	;# 
  3446  050F                     	;# 
  3447  0510                     	;# 
  3448  0511                     	;# 
  3449  0512                     	;# 
  3450  0512                     	;# 
  3451  0513                     	;# 
  3452  0514                     	;# 
  3453  0515                     	;# 
  3454  0515                     	;# 
  3455  0516                     	;# 
  3456  0517                     	;# 
  3457  0518                     	;# 
  3458  0519                     	;# 
  3459  051A                     	;# 
  3460  051B                     	;# 
  3461  051C                     	;# 
  3462  051D                     	;# 
  3463  058C                     	;# 
  3464  058C                     	;# 
  3465  058D                     	;# 
  3466  058E                     	;# 
  3467  058F                     	;# 
  3468  058F                     	;# 
  3469  0590                     	;# 
  3470  0591                     	;# 
  3471  0592                     	;# 
  3472  0593                     	;# 
  3473  060C                     	;# 
  3474  060D                     	;# 
  3475  060E                     	;# 
  3476  060F                     	;# 
  3477  0610                     	;# 
  3478  0611                     	;# 
  3479  0612                     	;# 
  3480  0613                     	;# 
  3481  0614                     	;# 
  3482  0616                     	;# 
  3483  0617                     	;# 
  3484  0618                     	;# 
  3485  0619                     	;# 
  3486  061A                     	;# 
  3487  061B                     	;# 
  3488  061C                     	;# 
  3489  061D                     	;# 
  3490  061E                     	;# 
  3491  068C                     	;# 
  3492  068D                     	;# 
  3493  068E                     	;# 
  3494  068F                     	;# 
  3495  0690                     	;# 
  3496  0691                     	;# 
  3497  0692                     	;# 
  3498  0693                     	;# 
  3499  0694                     	;# 
  3500  070C                     	;# 
  3501  070D                     	;# 
  3502  070E                     	;# 
  3503  070F                     	;# 
  3504  0710                     	;# 
  3505  0711                     	;# 
  3506  0712                     	;# 
  3507  0713                     	;# 
  3508  0714                     	;# 
  3509  0716                     	;# 
  3510  0717                     	;# 
  3511  0718                     	;# 
  3512  0719                     	;# 
  3513  071A                     	;# 
  3514  071B                     	;# 
  3515  071C                     	;# 
  3516  071D                     	;# 
  3517  071E                     	;# 
  3518  0796                     	;# 
  3519  0797                     	;# 
  3520  0798                     	;# 
  3521  0799                     	;# 
  3522  079A                     	;# 
  3523  079B                     	;# 
  3524  080C                     	;# 
  3525  080D                     	;# 
  3526  080E                     	;# 
  3527  080F                     	;# 
  3528  0810                     	;# 
  3529  0811                     	;# 
  3530  0812                     	;# 
  3531  0813                     	;# 
  3532  0814                     	;# 
  3533  081A                     	;# 
  3534  081B                     	;# 
  3535  081C                     	;# 
  3536  081D                     	;# 
  3537  081E                     	;# 
  3538  081F                     	;# 
  3539  088C                     	;# 
  3540  088D                     	;# 
  3541  088E                     	;# 
  3542  088F                     	;# 
  3543  0890                     	;# 
  3544  0891                     	;# 
  3545  0892                     	;# 
  3546  0893                     	;# 
  3547  0895                     	;# 
  3548  0896                     	;# 
  3549  0897                     	;# 
  3550  0898                     	;# 
  3551  0899                     	;# 
  3552  089A                     	;# 
  3553  089B                     	;# 
  3554  090C                     	;# 
  3555  090E                     	;# 
  3556  090F                     	;# 
  3557  091F                     	;# 
  3558  091F                     	;# 
  3559  098F                     	;# 
  3560  098F                     	;# 
  3561  0990                     	;# 
  3562  0991                     	;# 
  3563  0992                     	;# 
  3564  0993                     	;# 
  3565  0994                     	;# 
  3566  0995                     	;# 
  3567  0996                     	;# 
  3568  0997                     	;# 
  3569  0E0F                     	;# 
  3570  0E10                     	;# 
  3571  0E11                     	;# 
  3572  0E12                     	;# 
  3573  0E13                     	;# 
  3574  0E14                     	;# 
  3575  0E15                     	;# 
  3576  0E16                     	;# 
  3577  0E17                     	;# 
  3578  0E18                     	;# 
  3579  0E19                     	;# 
  3580  0E1A                     	;# 
  3581  0E1B                     	;# 
  3582  0E1C                     	;# 
  3583  0E1D                     	;# 
  3584  0E1E                     	;# 
  3585  0E1F                     	;# 
  3586  0E20                     	;# 
  3587  0E21                     	;# 
  3588  0E22                     	;# 
  3589  0E23                     	;# 
  3590  0E24                     	;# 
  3591  0E25                     	;# 
  3592  0E26                     	;# 
  3593  0E27                     	;# 
  3594  0E28                     	;# 
  3595  0E29                     	;# 
  3596  0E2A                     	;# 
  3597  0E2B                     	;# 
  3598  0E2C                     	;# 
  3599  0E2D                     	;# 
  3600  0E2E                     	;# 
  3601  0E2F                     	;# 
  3602  0E30                     	;# 
  3603  0E31                     	;# 
  3604  0E32                     	;# 
  3605  0E33                     	;# 
  3606  0E34                     	;# 
  3607  0E35                     	;# 
  3608  0E36                     	;# 
  3609  0E37                     	;# 
  3610  0E8F                     	;# 
  3611  0E90                     	;# 
  3612  0E91                     	;# 
  3613  0E92                     	;# 
  3614  0E93                     	;# 
  3615  0E94                     	;# 
  3616  0E95                     	;# 
  3617  0E96                     	;# 
  3618  0E97                     	;# 
  3619  0E9C                     	;# 
  3620  0E9D                     	;# 
  3621  0E9E                     	;# 
  3622  0EA1                     	;# 
  3623  0EA2                     	;# 
  3624  0EA3                     	;# 
  3625  0EA4                     	;# 
  3626  0EA5                     	;# 
  3627  0EA9                     	;# 
  3628  0EAA                     	;# 
  3629  0EAB                     	;# 
  3630  0EAC                     	;# 
  3631  0EB1                     	;# 
  3632  0EB2                     	;# 
  3633  0EB3                     	;# 
  3634  0EB8                     	;# 
  3635  0EB9                     	;# 
  3636  0EBA                     	;# 
  3637  0EBB                     	;# 
  3638  0EBC                     	;# 
  3639  0EBD                     	;# 
  3640  0EBE                     	;# 
  3641  0EC3                     	;# 
  3642  0EC5                     	;# 
  3643  0EC6                     	;# 
  3644  0EC7                     	;# 
  3645  0EC8                     	;# 
  3646  0EC9                     	;# 
  3647  0ECA                     	;# 
  3648  0ECB                     	;# 
  3649  0ECC                     	;# 
  3650  0F10                     	;# 
  3651  0F11                     	;# 
  3652  0F12                     	;# 
  3653  0F13                     	;# 
  3654  0F14                     	;# 
  3655  0F15                     	;# 
  3656  0F16                     	;# 
  3657  0F17                     	;# 
  3658  0F18                     	;# 
  3659  0F19                     	;# 
  3660  0F1A                     	;# 
  3661  0F1B                     	;# 
  3662  0F1C                     	;# 
  3663  0F1D                     	;# 
  3664  0F1E                     	;# 
  3665  0F1F                     	;# 
  3666  0F20                     	;# 
  3667  0F21                     	;# 
  3668  0F22                     	;# 
  3669  0F23                     	;# 
  3670  0F24                     	;# 
  3671  0F25                     	;# 
  3672  0F26                     	;# 
  3673  0F27                     	;# 
  3674  0F38                     	;# 
  3675  0F39                     	;# 
  3676  0F3A                     	;# 
  3677  0F3B                     	;# 
  3678  0F3C                     	;# 
  3679  0F3D                     	;# 
  3680  0F3E                     	;# 
  3681  0F3F                     	;# 
  3682  0F40                     	;# 
  3683  0F41                     	;# 
  3684  0F43                     	;# 
  3685  0F44                     	;# 
  3686  0F45                     	;# 
  3687  0F46                     	;# 
  3688  0F47                     	;# 
  3689  0F48                     	;# 
  3690  0F49                     	;# 
  3691  0F4A                     	;# 
  3692  0F4B                     	;# 
  3693  0F4C                     	;# 
  3694  0F4E                     	;# 
  3695  0F4F                     	;# 
  3696  0F50                     	;# 
  3697  0F51                     	;# 
  3698  0F52                     	;# 
  3699  0F53                     	;# 
  3700  0F54                     	;# 
  3701  0F55                     	;# 
  3702  0F56                     	;# 
  3703  0F57                     	;# 
  3704  0F65                     	;# 
  3705  0F68                     	;# 
  3706  0F69                     	;# 
  3707  0F6A                     	;# 
  3708  0F6B                     	;# 
  3709  0FE4                     	;# 
  3710  0FE5                     	;# 
  3711  0FE6                     	;# 
  3712  0FE7                     	;# 
  3713  0FE8                     	;# 
  3714  0FE9                     	;# 
  3715  0FEA                     	;# 
  3716  0FEB                     	;# 
  3717  0FED                     	;# 
  3718  0FEE                     	;# 
  3719  0FEF                     	;# 
  3720  0000                     	;# 
  3721  0001                     	;# 
  3722  0002                     	;# 
  3723  0003                     	;# 
  3724  0004                     	;# 
  3725  0005                     	;# 
  3726  0006                     	;# 
  3727  0007                     	;# 
  3728  0008                     	;# 
  3729  0009                     	;# 
  3730  000A                     	;# 
  3731  000B                     	;# 
  3732  000C                     	;# 
  3733  000D                     	;# 
  3734  000E                     	;# 
  3735  0010                     	;# 
  3736  0011                     	;# 
  3737  0012                     	;# 
  3738  0013                     	;# 
  3739  0016                     	;# 
  3740  0017                     	;# 
  3741  0018                     	;# 
  3742  001C                     	;# 
  3743  001C                     	;# 
  3744  001D                     	;# 
  3745  001D                     	;# 
  3746  001E                     	;# 
  3747  001F                     	;# 
  3748  008C                     	;# 
  3749  008C                     	;# 
  3750  008D                     	;# 
  3751  008E                     	;# 
  3752  008E                     	;# 
  3753  008F                     	;# 
  3754  0090                     	;# 
  3755  0090                     	;# 
  3756  0091                     	;# 
  3757  0093                     	;# 
  3758  0094                     	;# 
  3759  0095                     	;# 
  3760  0096                     	;# 
  3761  0097                     	;# 
  3762  0098                     	;# 
  3763  0099                     	;# 
  3764  009A                     	;# 
  3765  009B                     	;# 
  3766  009C                     	;# 
  3767  009D                     	;# 
  3768  009E                     	;# 
  3769  010C                     	;# 
  3770  010D                     	;# 
  3771  010E                     	;# 
  3772  010E                     	;# 
  3773  010F                     	;# 
  3774  0110                     	;# 
  3775  0110                     	;# 
  3776  0111                     	;# 
  3777  0112                     	;# 
  3778  0112                     	;# 
  3779  0113                     	;# 
  3780  0114                     	;# 
  3781  0114                     	;# 
  3782  0115                     	;# 
  3783  0116                     	;# 
  3784  0116                     	;# 
  3785  0117                     	;# 
  3786  0119                     	;# 
  3787  0119                     	;# 
  3788  0119                     	;# 
  3789  011A                     	;# 
  3790  011A                     	;# 
  3791  011A                     	;# 
  3792  011B                     	;# 
  3793  011B                     	;# 
  3794  011B                     	;# 
  3795  011B                     	;# 
  3796  011B                     	;# 
  3797  011C                     	;# 
  3798  011C                     	;# 
  3799  011C                     	;# 
  3800  011D                     	;# 
  3801  011D                     	;# 
  3802  011D                     	;# 
  3803  011E                     	;# 
  3804  011E                     	;# 
  3805  011E                     	;# 
  3806  011F                     	;# 
  3807  011F                     	;# 
  3808  011F                     	;# 
  3809  011F                     	;# 
  3810  011F                     	;# 
  3811  018C                     	;# 
  3812  018D                     	;# 
  3813  018E                     	;# 
  3814  018F                     	;# 
  3815  0190                     	;# 
  3816  0191                     	;# 
  3817  0192                     	;# 
  3818  0196                     	;# 
  3819  0197                     	;# 
  3820  0198                     	;# 
  3821  0199                     	;# 
  3822  019A                     	;# 
  3823  019B                     	;# 
  3824  019C                     	;# 
  3825  020C                     	;# 
  3826  020C                     	;# 
  3827  020D                     	;# 
  3828  020E                     	;# 
  3829  020F                     	;# 
  3830  020F                     	;# 
  3831  0210                     	;# 
  3832  0210                     	;# 
  3833  0211                     	;# 
  3834  0211                     	;# 
  3835  0212                     	;# 
  3836  0212                     	;# 
  3837  0213                     	;# 
  3838  0214                     	;# 
  3839  0215                     	;# 
  3840  0215                     	;# 
  3841  0216                     	;# 
  3842  0216                     	;# 
  3843  0217                     	;# 
  3844  0217                     	;# 
  3845  0218                     	;# 
  3846  0218                     	;# 
  3847  0219                     	;# 
  3848  021A                     	;# 
  3849  021B                     	;# 
  3850  021B                     	;# 
  3851  021C                     	;# 
  3852  021C                     	;# 
  3853  021D                     	;# 
  3854  021D                     	;# 
  3855  021E                     	;# 
  3856  021F                     	;# 
  3857  028C                     	;# 
  3858  028C                     	;# 
  3859  028D                     	;# 
  3860  028D                     	;# 
  3861  028E                     	;# 
  3862  028F                     	;# 
  3863  0290                     	;# 
  3864  0290                     	;# 
  3865  0291                     	;# 
  3866  0292                     	;# 
  3867  0292                     	;# 
  3868  0293                     	;# 
  3869  0293                     	;# 
  3870  0294                     	;# 
  3871  0295                     	;# 
  3872  0296                     	;# 
  3873  0296                     	;# 
  3874  0297                     	;# 
  3875  0298                     	;# 
  3876  0298                     	;# 
  3877  0299                     	;# 
  3878  0299                     	;# 
  3879  029A                     	;# 
  3880  029B                     	;# 
  3881  029C                     	;# 
  3882  029C                     	;# 
  3883  029D                     	;# 
  3884  030C                     	;# 
  3885  030C                     	;# 
  3886  030D                     	;# 
  3887  030E                     	;# 
  3888  030F                     	;# 
  3889  0310                     	;# 
  3890  0310                     	;# 
  3891  0311                     	;# 
  3892  0312                     	;# 
  3893  0313                     	;# 
  3894  0314                     	;# 
  3895  0314                     	;# 
  3896  0315                     	;# 
  3897  0316                     	;# 
  3898  0317                     	;# 
  3899  0318                     	;# 
  3900  0318                     	;# 
  3901  0319                     	;# 
  3902  031A                     	;# 
  3903  031B                     	;# 
  3904  031C                     	;# 
  3905  031C                     	;# 
  3906  031D                     	;# 
  3907  031E                     	;# 
  3908  031F                     	;# 
  3909  038C                     	;# 
  3910  038D                     	;# 
  3911  038E                     	;# 
  3912  0390                     	;# 
  3913  0391                     	;# 
  3914  0392                     	;# 
  3915  040C                     	;# 
  3916  040D                     	;# 
  3917  040E                     	;# 
  3918  040F                     	;# 
  3919  0410                     	;# 
  3920  0411                     	;# 
  3921  0416                     	;# 
  3922  0416                     	;# 
  3923  0417                     	;# 
  3924  0418                     	;# 
  3925  0418                     	;# 
  3926  0419                     	;# 
  3927  041A                     	;# 
  3928  041A                     	;# 
  3929  041B                     	;# 
  3930  041C                     	;# 
  3931  041C                     	;# 
  3932  041D                     	;# 
  3933  041E                     	;# 
  3934  041F                     	;# 
  3935  048C                     	;# 
  3936  048C                     	;# 
  3937  048D                     	;# 
  3938  048E                     	;# 
  3939  048F                     	;# 
  3940  048F                     	;# 
  3941  0490                     	;# 
  3942  0491                     	;# 
  3943  0492                     	;# 
  3944  0492                     	;# 
  3945  0493                     	;# 
  3946  0494                     	;# 
  3947  0495                     	;# 
  3948  0495                     	;# 
  3949  0496                     	;# 
  3950  0497                     	;# 
  3951  0498                     	;# 
  3952  0499                     	;# 
  3953  049A                     	;# 
  3954  049B                     	;# 
  3955  049C                     	;# 
  3956  049D                     	;# 
  3957  050C                     	;# 
  3958  050C                     	;# 
  3959  050D                     	;# 
  3960  050E                     	;# 
  3961  050F                     	;# 
  3962  050F                     	;# 
  3963  0510                     	;# 
  3964  0511                     	;# 
  3965  0512                     	;# 
  3966  0512                     	;# 
  3967  0513                     	;# 
  3968  0514                     	;# 
  3969  0515                     	;# 
  3970  0515                     	;# 
  3971  0516                     	;# 
  3972  0517                     	;# 
  3973  0518                     	;# 
  3974  0519                     	;# 
  3975  051A                     	;# 
  3976  051B                     	;# 
  3977  051C                     	;# 
  3978  051D                     	;# 
  3979  058C                     	;# 
  3980  058C                     	;# 
  3981  058D                     	;# 
  3982  058E                     	;# 
  3983  058F                     	;# 
  3984  058F                     	;# 
  3985  0590                     	;# 
  3986  0591                     	;# 
  3987  0592                     	;# 
  3988  0593                     	;# 
  3989  060C                     	;# 
  3990  060D                     	;# 
  3991  060E                     	;# 
  3992  060F                     	;# 
  3993  0610                     	;# 
  3994  0611                     	;# 
  3995  0612                     	;# 
  3996  0613                     	;# 
  3997  0614                     	;# 
  3998  0616                     	;# 
  3999  0617                     	;# 
  4000  0618                     	;# 
  4001  0619                     	;# 
  4002  061A                     	;# 
  4003  061B                     	;# 
  4004  061C                     	;# 
  4005  061D                     	;# 
  4006  061E                     	;# 
  4007  068C                     	;# 
  4008  068D                     	;# 
  4009  068E                     	;# 
  4010  068F                     	;# 
  4011  0690                     	;# 
  4012  0691                     	;# 
  4013  0692                     	;# 
  4014  0693                     	;# 
  4015  0694                     	;# 
  4016  070C                     	;# 
  4017  070D                     	;# 
  4018  070E                     	;# 
  4019  070F                     	;# 
  4020  0710                     	;# 
  4021  0711                     	;# 
  4022  0712                     	;# 
  4023  0713                     	;# 
  4024  0714                     	;# 
  4025  0716                     	;# 
  4026  0717                     	;# 
  4027  0718                     	;# 
  4028  0719                     	;# 
  4029  071A                     	;# 
  4030  071B                     	;# 
  4031  071C                     	;# 
  4032  071D                     	;# 
  4033  071E                     	;# 
  4034  0796                     	;# 
  4035  0797                     	;# 
  4036  0798                     	;# 
  4037  0799                     	;# 
  4038  079A                     	;# 
  4039  079B                     	;# 
  4040  080C                     	;# 
  4041  080D                     	;# 
  4042  080E                     	;# 
  4043  080F                     	;# 
  4044  0810                     	;# 
  4045  0811                     	;# 
  4046  0812                     	;# 
  4047  0813                     	;# 
  4048  0814                     	;# 
  4049  081A                     	;# 
  4050  081B                     	;# 
  4051  081C                     	;# 
  4052  081D                     	;# 
  4053  081E                     	;# 
  4054  081F                     	;# 
  4055  088C                     	;# 
  4056  088D                     	;# 
  4057  088E                     	;# 
  4058  088F                     	;# 
  4059  0890                     	;# 
  4060  0891                     	;# 
  4061  0892                     	;# 
  4062  0893                     	;# 
  4063  0895                     	;# 
  4064  0896                     	;# 
  4065  0897                     	;# 
  4066  0898                     	;# 
  4067  0899                     	;# 
  4068  089A                     	;# 
  4069  089B                     	;# 
  4070  090C                     	;# 
  4071  090E                     	;# 
  4072  090F                     	;# 
  4073  091F                     	;# 
  4074  091F                     	;# 
  4075  098F                     	;# 
  4076  098F                     	;# 
  4077  0990                     	;# 
  4078  0991                     	;# 
  4079  0992                     	;# 
  4080  0993                     	;# 
  4081  0994                     	;# 
  4082  0995                     	;# 
  4083  0996                     	;# 
  4084  0997                     	;# 
  4085  0E0F                     	;# 
  4086  0E10                     	;# 
  4087  0E11                     	;# 
  4088  0E12                     	;# 
  4089  0E13                     	;# 
  4090  0E14                     	;# 
  4091  0E15                     	;# 
  4092  0E16                     	;# 
  4093  0E17                     	;# 
  4094  0E18                     	;# 
  4095  0E19                     	;# 
  4096  0E1A                     	;# 
  4097  0E1B                     	;# 
  4098  0E1C                     	;# 
  4099  0E1D                     	;# 
  4100  0E1E                     	;# 
  4101  0E1F                     	;# 
  4102  0E20                     	;# 
  4103  0E21                     	;# 
  4104  0E22                     	;# 
  4105  0E23                     	;# 
  4106  0E24                     	;# 
  4107  0E25                     	;# 
  4108  0E26                     	;# 
  4109  0E27                     	;# 
  4110  0E28                     	;# 
  4111  0E29                     	;# 
  4112  0E2A                     	;# 
  4113  0E2B                     	;# 
  4114  0E2C                     	;# 
  4115  0E2D                     	;# 
  4116  0E2E                     	;# 
  4117  0E2F                     	;# 
  4118  0E30                     	;# 
  4119  0E31                     	;# 
  4120  0E32                     	;# 
  4121  0E33                     	;# 
  4122  0E34                     	;# 
  4123  0E35                     	;# 
  4124  0E36                     	;# 
  4125  0E37                     	;# 
  4126  0E8F                     	;# 
  4127  0E90                     	;# 
  4128  0E91                     	;# 
  4129  0E92                     	;# 
  4130  0E93                     	;# 
  4131  0E94                     	;# 
  4132  0E95                     	;# 
  4133  0E96                     	;# 
  4134  0E97                     	;# 
  4135  0E9C                     	;# 
  4136  0E9D                     	;# 
  4137  0E9E                     	;# 
  4138  0EA1                     	;# 
  4139  0EA2                     	;# 
  4140  0EA3                     	;# 
  4141  0EA4                     	;# 
  4142  0EA5                     	;# 
  4143  0EA9                     	;# 
  4144  0EAA                     	;# 
  4145  0EAB                     	;# 
  4146  0EAC                     	;# 
  4147  0EB1                     	;# 
  4148  0EB2                     	;# 
  4149  0EB3                     	;# 
  4150  0EB8                     	;# 
  4151  0EB9                     	;# 
  4152  0EBA                     	;# 
  4153  0EBB                     	;# 
  4154  0EBC                     	;# 
  4155  0EBD                     	;# 
  4156  0EBE                     	;# 
  4157  0EC3                     	;# 
  4158  0EC5                     	;# 
  4159  0EC6                     	;# 
  4160  0EC7                     	;# 
  4161  0EC8                     	;# 
  4162  0EC9                     	;# 
  4163  0ECA                     	;# 
  4164  0ECB                     	;# 
  4165  0ECC                     	;# 
  4166  0F10                     	;# 
  4167  0F11                     	;# 
  4168  0F12                     	;# 
  4169  0F13                     	;# 
  4170  0F14                     	;# 
  4171  0F15                     	;# 
  4172  0F16                     	;# 
  4173  0F17                     	;# 
  4174  0F18                     	;# 
  4175  0F19                     	;# 
  4176  0F1A                     	;# 
  4177  0F1B                     	;# 
  4178  0F1C                     	;# 
  4179  0F1D                     	;# 
  4180  0F1E                     	;# 
  4181  0F1F                     	;# 
  4182  0F20                     	;# 
  4183  0F21                     	;# 
  4184  0F22                     	;# 
  4185  0F23                     	;# 
  4186  0F24                     	;# 
  4187  0F25                     	;# 
  4188  0F26                     	;# 
  4189  0F27                     	;# 
  4190  0F38                     	;# 
  4191  0F39                     	;# 
  4192  0F3A                     	;# 
  4193  0F3B                     	;# 
  4194  0F3C                     	;# 
  4195  0F3D                     	;# 
  4196  0F3E                     	;# 
  4197  0F3F                     	;# 
  4198  0F40                     	;# 
  4199  0F41                     	;# 
  4200  0F43                     	;# 
  4201  0F44                     	;# 
  4202  0F45                     	;# 
  4203  0F46                     	;# 
  4204  0F47                     	;# 
  4205  0F48                     	;# 
  4206  0F49                     	;# 
  4207  0F4A                     	;# 
  4208  0F4B                     	;# 
  4209  0F4C                     	;# 
  4210  0F4E                     	;# 
  4211  0F4F                     	;# 
  4212  0F50                     	;# 
  4213  0F51                     	;# 
  4214  0F52                     	;# 
  4215  0F53                     	;# 
  4216  0F54                     	;# 
  4217  0F55                     	;# 
  4218  0F56                     	;# 
  4219  0F57                     	;# 
  4220  0F65                     	;# 
  4221  0F68                     	;# 
  4222  0F69                     	;# 
  4223  0F6A                     	;# 
  4224  0F6B                     	;# 
  4225  0FE4                     	;# 
  4226  0FE5                     	;# 
  4227  0FE6                     	;# 
  4228  0FE7                     	;# 
  4229  0FE8                     	;# 
  4230  0FE9                     	;# 
  4231  0FEA                     	;# 
  4232  0FEB                     	;# 
  4233  0FED                     	;# 
  4234  0FEE                     	;# 
  4235  0FEF                     	;# 
  4236  0000                     	;# 
  4237  0001                     	;# 
  4238  0002                     	;# 
  4239  0003                     	;# 
  4240  0004                     	;# 
  4241  0005                     	;# 
  4242  0006                     	;# 
  4243  0007                     	;# 
  4244  0008                     	;# 
  4245  0009                     	;# 
  4246  000A                     	;# 
  4247  000B                     	;# 
  4248  000C                     	;# 
  4249  000D                     	;# 
  4250  000E                     	;# 
  4251  0010                     	;# 
  4252  0011                     	;# 
  4253  0012                     	;# 
  4254  0013                     	;# 
  4255  0016                     	;# 
  4256  0017                     	;# 
  4257  0018                     	;# 
  4258  001C                     	;# 
  4259  001C                     	;# 
  4260  001D                     	;# 
  4261  001D                     	;# 
  4262  001E                     	;# 
  4263  001F                     	;# 
  4264  008C                     	;# 
  4265  008C                     	;# 
  4266  008D                     	;# 
  4267  008E                     	;# 
  4268  008E                     	;# 
  4269  008F                     	;# 
  4270  0090                     	;# 
  4271  0090                     	;# 
  4272  0091                     	;# 
  4273  0093                     	;# 
  4274  0094                     	;# 
  4275  0095                     	;# 
  4276  0096                     	;# 
  4277  0097                     	;# 
  4278  0098                     	;# 
  4279  0099                     	;# 
  4280  009A                     	;# 
  4281  009B                     	;# 
  4282  009C                     	;# 
  4283  009D                     	;# 
  4284  009E                     	;# 
  4285  010C                     	;# 
  4286  010D                     	;# 
  4287  010E                     	;# 
  4288  010E                     	;# 
  4289  010F                     	;# 
  4290  0110                     	;# 
  4291  0110                     	;# 
  4292  0111                     	;# 
  4293  0112                     	;# 
  4294  0112                     	;# 
  4295  0113                     	;# 
  4296  0114                     	;# 
  4297  0114                     	;# 
  4298  0115                     	;# 
  4299  0116                     	;# 
  4300  0116                     	;# 
  4301  0117                     	;# 
  4302  0119                     	;# 
  4303  0119                     	;# 
  4304  0119                     	;# 
  4305  011A                     	;# 
  4306  011A                     	;# 
  4307  011A                     	;# 
  4308  011B                     	;# 
  4309  011B                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011C                     	;# 
  4314  011C                     	;# 
  4315  011C                     	;# 
  4316  011D                     	;# 
  4317  011D                     	;# 
  4318  011D                     	;# 
  4319  011E                     	;# 
  4320  011E                     	;# 
  4321  011E                     	;# 
  4322  011F                     	;# 
  4323  011F                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  018C                     	;# 
  4328  018D                     	;# 
  4329  018E                     	;# 
  4330  018F                     	;# 
  4331  0190                     	;# 
  4332  0191                     	;# 
  4333  0192                     	;# 
  4334  0196                     	;# 
  4335  0197                     	;# 
  4336  0198                     	;# 
  4337  0199                     	;# 
  4338  019A                     	;# 
  4339  019B                     	;# 
  4340  019C                     	;# 
  4341  020C                     	;# 
  4342  020C                     	;# 
  4343  020D                     	;# 
  4344  020E                     	;# 
  4345  020F                     	;# 
  4346  020F                     	;# 
  4347  0210                     	;# 
  4348  0210                     	;# 
  4349  0211                     	;# 
  4350  0211                     	;# 
  4351  0212                     	;# 
  4352  0212                     	;# 
  4353  0213                     	;# 
  4354  0214                     	;# 
  4355  0215                     	;# 
  4356  0215                     	;# 
  4357  0216                     	;# 
  4358  0216                     	;# 
  4359  0217                     	;# 
  4360  0217                     	;# 
  4361  0218                     	;# 
  4362  0218                     	;# 
  4363  0219                     	;# 
  4364  021A                     	;# 
  4365  021B                     	;# 
  4366  021B                     	;# 
  4367  021C                     	;# 
  4368  021C                     	;# 
  4369  021D                     	;# 
  4370  021D                     	;# 
  4371  021E                     	;# 
  4372  021F                     	;# 
  4373  028C                     	;# 
  4374  028C                     	;# 
  4375  028D                     	;# 
  4376  028D                     	;# 
  4377  028E                     	;# 
  4378  028F                     	;# 
  4379  0290                     	;# 
  4380  0290                     	;# 
  4381  0291                     	;# 
  4382  0292                     	;# 
  4383  0292                     	;# 
  4384  0293                     	;# 
  4385  0293                     	;# 
  4386  0294                     	;# 
  4387  0295                     	;# 
  4388  0296                     	;# 
  4389  0296                     	;# 
  4390  0297                     	;# 
  4391  0298                     	;# 
  4392  0298                     	;# 
  4393  0299                     	;# 
  4394  0299                     	;# 
  4395  029A                     	;# 
  4396  029B                     	;# 
  4397  029C                     	;# 
  4398  029C                     	;# 
  4399  029D                     	;# 
  4400  030C                     	;# 
  4401  030C                     	;# 
  4402  030D                     	;# 
  4403  030E                     	;# 
  4404  030F                     	;# 
  4405  0310                     	;# 
  4406  0310                     	;# 
  4407  0311                     	;# 
  4408  0312                     	;# 
  4409  0313                     	;# 
  4410  0314                     	;# 
  4411  0314                     	;# 
  4412  0315                     	;# 
  4413  0316                     	;# 
  4414  0317                     	;# 
  4415  0318                     	;# 
  4416  0318                     	;# 
  4417  0319                     	;# 
  4418  031A                     	;# 
  4419  031B                     	;# 
  4420  031C                     	;# 
  4421  031C                     	;# 
  4422  031D                     	;# 
  4423  031E                     	;# 
  4424  031F                     	;# 
  4425  038C                     	;# 
  4426  038D                     	;# 
  4427  038E                     	;# 
  4428  0390                     	;# 
  4429  0391                     	;# 
  4430  0392                     	;# 
  4431  040C                     	;# 
  4432  040D                     	;# 
  4433  040E                     	;# 
  4434  040F                     	;# 
  4435  0410                     	;# 
  4436  0411                     	;# 
  4437  0416                     	;# 
  4438  0416                     	;# 
  4439  0417                     	;# 
  4440  0418                     	;# 
  4441  0418                     	;# 
  4442  0419                     	;# 
  4443  041A                     	;# 
  4444  041A                     	;# 
  4445  041B                     	;# 
  4446  041C                     	;# 
  4447  041C                     	;# 
  4448  041D                     	;# 
  4449  041E                     	;# 
  4450  041F                     	;# 
  4451  048C                     	;# 
  4452  048C                     	;# 
  4453  048D                     	;# 
  4454  048E                     	;# 
  4455  048F                     	;# 
  4456  048F                     	;# 
  4457  0490                     	;# 
  4458  0491                     	;# 
  4459  0492                     	;# 
  4460  0492                     	;# 
  4461  0493                     	;# 
  4462  0494                     	;# 
  4463  0495                     	;# 
  4464  0495                     	;# 
  4465  0496                     	;# 
  4466  0497                     	;# 
  4467  0498                     	;# 
  4468  0499                     	;# 
  4469  049A                     	;# 
  4470  049B                     	;# 
  4471  049C                     	;# 
  4472  049D                     	;# 
  4473  050C                     	;# 
  4474  050C                     	;# 
  4475  050D                     	;# 
  4476  050E                     	;# 
  4477  050F                     	;# 
  4478  050F                     	;# 
  4479  0510                     	;# 
  4480  0511                     	;# 
  4481  0512                     	;# 
  4482  0512                     	;# 
  4483  0513                     	;# 
  4484  0514                     	;# 
  4485  0515                     	;# 
  4486  0515                     	;# 
  4487  0516                     	;# 
  4488  0517                     	;# 
  4489  0518                     	;# 
  4490  0519                     	;# 
  4491  051A                     	;# 
  4492  051B                     	;# 
  4493  051C                     	;# 
  4494  051D                     	;# 
  4495  058C                     	;# 
  4496  058C                     	;# 
  4497  058D                     	;# 
  4498  058E                     	;# 
  4499  058F                     	;# 
  4500  058F                     	;# 
  4501  0590                     	;# 
  4502  0591                     	;# 
  4503  0592                     	;# 
  4504  0593                     	;# 
  4505  060C                     	;# 
  4506  060D                     	;# 
  4507  060E                     	;# 
  4508  060F                     	;# 
  4509  0610                     	;# 
  4510  0611                     	;# 
  4511  0612                     	;# 
  4512  0613                     	;# 
  4513  0614                     	;# 
  4514  0616                     	;# 
  4515  0617                     	;# 
  4516  0618                     	;# 
  4517  0619                     	;# 
  4518  061A                     	;# 
  4519  061B                     	;# 
  4520  061C                     	;# 
  4521  061D                     	;# 
  4522  061E                     	;# 
  4523  068C                     	;# 
  4524  068D                     	;# 
  4525  068E                     	;# 
  4526  068F                     	;# 
  4527  0690                     	;# 
  4528  0691                     	;# 
  4529  0692                     	;# 
  4530  0693                     	;# 
  4531  0694                     	;# 
  4532  070C                     	;# 
  4533  070D                     	;# 
  4534  070E                     	;# 
  4535  070F                     	;# 
  4536  0710                     	;# 
  4537  0711                     	;# 
  4538  0712                     	;# 
  4539  0713                     	;# 
  4540  0714                     	;# 
  4541  0716                     	;# 
  4542  0717                     	;# 
  4543  0718                     	;# 
  4544  0719                     	;# 
  4545  071A                     	;# 
  4546  071B                     	;# 
  4547  071C                     	;# 
  4548  071D                     	;# 
  4549  071E                     	;# 
  4550  0796                     	;# 
  4551  0797                     	;# 
  4552  0798                     	;# 
  4553  0799                     	;# 
  4554  079A                     	;# 
  4555  079B                     	;# 
  4556  080C                     	;# 
  4557  080D                     	;# 
  4558  080E                     	;# 
  4559  080F                     	;# 
  4560  0810                     	;# 
  4561  0811                     	;# 
  4562  0812                     	;# 
  4563  0813                     	;# 
  4564  0814                     	;# 
  4565  081A                     	;# 
  4566  081B                     	;# 
  4567  081C                     	;# 
  4568  081D                     	;# 
  4569  081E                     	;# 
  4570  081F                     	;# 
  4571  088C                     	;# 
  4572  088D                     	;# 
  4573  088E                     	;# 
  4574  088F                     	;# 
  4575  0890                     	;# 
  4576  0891                     	;# 
  4577  0892                     	;# 
  4578  0893                     	;# 
  4579  0895                     	;# 
  4580  0896                     	;# 
  4581  0897                     	;# 
  4582  0898                     	;# 
  4583  0899                     	;# 
  4584  089A                     	;# 
  4585  089B                     	;# 
  4586  090C                     	;# 
  4587  090E                     	;# 
  4588  090F                     	;# 
  4589  091F                     	;# 
  4590  091F                     	;# 
  4591  098F                     	;# 
  4592  098F                     	;# 
  4593  0990                     	;# 
  4594  0991                     	;# 
  4595  0992                     	;# 
  4596  0993                     	;# 
  4597  0994                     	;# 
  4598  0995                     	;# 
  4599  0996                     	;# 
  4600  0997                     	;# 
  4601  0E0F                     	;# 
  4602  0E10                     	;# 
  4603  0E11                     	;# 
  4604  0E12                     	;# 
  4605  0E13                     	;# 
  4606  0E14                     	;# 
  4607  0E15                     	;# 
  4608  0E16                     	;# 
  4609  0E17                     	;# 
  4610  0E18                     	;# 
  4611  0E19                     	;# 
  4612  0E1A                     	;# 
  4613  0E1B                     	;# 
  4614  0E1C                     	;# 
  4615  0E1D                     	;# 
  4616  0E1E                     	;# 
  4617  0E1F                     	;# 
  4618  0E20                     	;# 
  4619  0E21                     	;# 
  4620  0E22                     	;# 
  4621  0E23                     	;# 
  4622  0E24                     	;# 
  4623  0E25                     	;# 
  4624  0E26                     	;# 
  4625  0E27                     	;# 
  4626  0E28                     	;# 
  4627  0E29                     	;# 
  4628  0E2A                     	;# 
  4629  0E2B                     	;# 
  4630  0E2C                     	;# 
  4631  0E2D                     	;# 
  4632  0E2E                     	;# 
  4633  0E2F                     	;# 
  4634  0E30                     	;# 
  4635  0E31                     	;# 
  4636  0E32                     	;# 
  4637  0E33                     	;# 
  4638  0E34                     	;# 
  4639  0E35                     	;# 
  4640  0E36                     	;# 
  4641  0E37                     	;# 
  4642  0E8F                     	;# 
  4643  0E90                     	;# 
  4644  0E91                     	;# 
  4645  0E92                     	;# 
  4646  0E93                     	;# 
  4647  0E94                     	;# 
  4648  0E95                     	;# 
  4649  0E96                     	;# 
  4650  0E97                     	;# 
  4651  0E9C                     	;# 
  4652  0E9D                     	;# 
  4653  0E9E                     	;# 
  4654  0EA1                     	;# 
  4655  0EA2                     	;# 
  4656  0EA3                     	;# 
  4657  0EA4                     	;# 
  4658  0EA5                     	;# 
  4659  0EA9                     	;# 
  4660  0EAA                     	;# 
  4661  0EAB                     	;# 
  4662  0EAC                     	;# 
  4663  0EB1                     	;# 
  4664  0EB2                     	;# 
  4665  0EB3                     	;# 
  4666  0EB8                     	;# 
  4667  0EB9                     	;# 
  4668  0EBA                     	;# 
  4669  0EBB                     	;# 
  4670  0EBC                     	;# 
  4671  0EBD                     	;# 
  4672  0EBE                     	;# 
  4673  0EC3                     	;# 
  4674  0EC5                     	;# 
  4675  0EC6                     	;# 
  4676  0EC7                     	;# 
  4677  0EC8                     	;# 
  4678  0EC9                     	;# 
  4679  0ECA                     	;# 
  4680  0ECB                     	;# 
  4681  0ECC                     	;# 
  4682  0F10                     	;# 
  4683  0F11                     	;# 
  4684  0F12                     	;# 
  4685  0F13                     	;# 
  4686  0F14                     	;# 
  4687  0F15                     	;# 
  4688  0F16                     	;# 
  4689  0F17                     	;# 
  4690  0F18                     	;# 
  4691  0F19                     	;# 
  4692  0F1A                     	;# 
  4693  0F1B                     	;# 
  4694  0F1C                     	;# 
  4695  0F1D                     	;# 
  4696  0F1E                     	;# 
  4697  0F1F                     	;# 
  4698  0F20                     	;# 
  4699  0F21                     	;# 
  4700  0F22                     	;# 
  4701  0F23                     	;# 
  4702  0F24                     	;# 
  4703  0F25                     	;# 
  4704  0F26                     	;# 
  4705  0F27                     	;# 
  4706  0F38                     	;# 
  4707  0F39                     	;# 
  4708  0F3A                     	;# 
  4709  0F3B                     	;# 
  4710  0F3C                     	;# 
  4711  0F3D                     	;# 
  4712  0F3E                     	;# 
  4713  0F3F                     	;# 
  4714  0F40                     	;# 
  4715  0F41                     	;# 
  4716  0F43                     	;# 
  4717  0F44                     	;# 
  4718  0F45                     	;# 
  4719  0F46                     	;# 
  4720  0F47                     	;# 
  4721  0F48                     	;# 
  4722  0F49                     	;# 
  4723  0F4A                     	;# 
  4724  0F4B                     	;# 
  4725  0F4C                     	;# 
  4726  0F4E                     	;# 
  4727  0F4F                     	;# 
  4728  0F50                     	;# 
  4729  0F51                     	;# 
  4730  0F52                     	;# 
  4731  0F53                     	;# 
  4732  0F54                     	;# 
  4733  0F55                     	;# 
  4734  0F56                     	;# 
  4735  0F57                     	;# 
  4736  0F65                     	;# 
  4737  0F68                     	;# 
  4738  0F69                     	;# 
  4739  0F6A                     	;# 
  4740  0F6B                     	;# 
  4741  0FE4                     	;# 
  4742  0FE5                     	;# 
  4743  0FE6                     	;# 
  4744  0FE7                     	;# 
  4745  0FE8                     	;# 
  4746  0FE9                     	;# 
  4747  0FEA                     	;# 
  4748  0FEB                     	;# 
  4749  0FED                     	;# 
  4750  0FEE                     	;# 
  4751  0FEF                     	;# 
  4752  0000                     	;# 
  4753  0001                     	;# 
  4754  0002                     	;# 
  4755  0003                     	;# 
  4756  0004                     	;# 
  4757  0005                     	;# 
  4758  0006                     	;# 
  4759  0007                     	;# 
  4760  0008                     	;# 
  4761  0009                     	;# 
  4762  000A                     	;# 
  4763  000B                     	;# 
  4764  000C                     	;# 
  4765  000D                     	;# 
  4766  000E                     	;# 
  4767  0010                     	;# 
  4768  0011                     	;# 
  4769  0012                     	;# 
  4770  0013                     	;# 
  4771  0016                     	;# 
  4772  0017                     	;# 
  4773  0018                     	;# 
  4774  001C                     	;# 
  4775  001C                     	;# 
  4776  001D                     	;# 
  4777  001D                     	;# 
  4778  001E                     	;# 
  4779  001F                     	;# 
  4780  008C                     	;# 
  4781  008C                     	;# 
  4782  008D                     	;# 
  4783  008E                     	;# 
  4784  008E                     	;# 
  4785  008F                     	;# 
  4786  0090                     	;# 
  4787  0090                     	;# 
  4788  0091                     	;# 
  4789  0093                     	;# 
  4790  0094                     	;# 
  4791  0095                     	;# 
  4792  0096                     	;# 
  4793  0097                     	;# 
  4794  0098                     	;# 
  4795  0099                     	;# 
  4796  009A                     	;# 
  4797  009B                     	;# 
  4798  009C                     	;# 
  4799  009D                     	;# 
  4800  009E                     	;# 
  4801  010C                     	;# 
  4802  010D                     	;# 
  4803  010E                     	;# 
  4804  010E                     	;# 
  4805  010F                     	;# 
  4806  0110                     	;# 
  4807  0110                     	;# 
  4808  0111                     	;# 
  4809  0112                     	;# 
  4810  0112                     	;# 
  4811  0113                     	;# 
  4812  0114                     	;# 
  4813  0114                     	;# 
  4814  0115                     	;# 
  4815  0116                     	;# 
  4816  0116                     	;# 
  4817  0117                     	;# 
  4818  0119                     	;# 
  4819  0119                     	;# 
  4820  0119                     	;# 
  4821  011A                     	;# 
  4822  011A                     	;# 
  4823  011A                     	;# 
  4824  011B                     	;# 
  4825  011B                     	;# 
  4826  011B                     	;# 
  4827  011B                     	;# 
  4828  011B                     	;# 
  4829  011C                     	;# 
  4830  011C                     	;# 
  4831  011C                     	;# 
  4832  011D                     	;# 
  4833  011D                     	;# 
  4834  011D                     	;# 
  4835  011E                     	;# 
  4836  011E                     	;# 
  4837  011E                     	;# 
  4838  011F                     	;# 
  4839  011F                     	;# 
  4840  011F                     	;# 
  4841  011F                     	;# 
  4842  011F                     	;# 
  4843  018C                     	;# 
  4844  018D                     	;# 
  4845  018E                     	;# 
  4846  018F                     	;# 
  4847  0190                     	;# 
  4848  0191                     	;# 
  4849  0192                     	;# 
  4850  0196                     	;# 
  4851  0197                     	;# 
  4852  0198                     	;# 
  4853  0199                     	;# 
  4854  019A                     	;# 
  4855  019B                     	;# 
  4856  019C                     	;# 
  4857  020C                     	;# 
  4858  020C                     	;# 
  4859  020D                     	;# 
  4860  020E                     	;# 
  4861  020F                     	;# 
  4862  020F                     	;# 
  4863  0210                     	;# 
  4864  0210                     	;# 
  4865  0211                     	;# 
  4866  0211                     	;# 
  4867  0212                     	;# 
  4868  0212                     	;# 
  4869  0213                     	;# 
  4870  0214                     	;# 
  4871  0215                     	;# 
  4872  0215                     	;# 
  4873  0216                     	;# 
  4874  0216                     	;# 
  4875  0217                     	;# 
  4876  0217                     	;# 
  4877  0218                     	;# 
  4878  0218                     	;# 
  4879  0219                     	;# 
  4880  021A                     	;# 
  4881  021B                     	;# 
  4882  021B                     	;# 
  4883  021C                     	;# 
  4884  021C                     	;# 
  4885  021D                     	;# 
  4886  021D                     	;# 
  4887  021E                     	;# 
  4888  021F                     	;# 
  4889  028C                     	;# 
  4890  028C                     	;# 
  4891  028D                     	;# 
  4892  028D                     	;# 
  4893  028E                     	;# 
  4894  028F                     	;# 
  4895  0290                     	;# 
  4896  0290                     	;# 
  4897  0291                     	;# 
  4898  0292                     	;# 
  4899  0292                     	;# 
  4900  0293                     	;# 
  4901  0293                     	;# 
  4902  0294                     	;# 
  4903  0295                     	;# 
  4904  0296                     	;# 
  4905  0296                     	;# 
  4906  0297                     	;# 
  4907  0298                     	;# 
  4908  0298                     	;# 
  4909  0299                     	;# 
  4910  0299                     	;# 
  4911  029A                     	;# 
  4912  029B                     	;# 
  4913  029C                     	;# 
  4914  029C                     	;# 
  4915  029D                     	;# 
  4916  030C                     	;# 
  4917  030C                     	;# 
  4918  030D                     	;# 
  4919  030E                     	;# 
  4920  030F                     	;# 
  4921  0310                     	;# 
  4922  0310                     	;# 
  4923  0311                     	;# 
  4924  0312                     	;# 
  4925  0313                     	;# 
  4926  0314                     	;# 
  4927  0314                     	;# 
  4928  0315                     	;# 
  4929  0316                     	;# 
  4930  0317                     	;# 
  4931  0318                     	;# 
  4932  0318                     	;# 
  4933  0319                     	;# 
  4934  031A                     	;# 
  4935  031B                     	;# 
  4936  031C                     	;# 
  4937  031C                     	;# 
  4938  031D                     	;# 
  4939  031E                     	;# 
  4940  031F                     	;# 
  4941  038C                     	;# 
  4942  038D                     	;# 
  4943  038E                     	;# 
  4944  0390                     	;# 
  4945  0391                     	;# 
  4946  0392                     	;# 
  4947  040C                     	;# 
  4948  040D                     	;# 
  4949  040E                     	;# 
  4950  040F                     	;# 
  4951  0410                     	;# 
  4952  0411                     	;# 
  4953  0416                     	;# 
  4954  0416                     	;# 
  4955  0417                     	;# 
  4956  0418                     	;# 
  4957  0418                     	;# 
  4958  0419                     	;# 
  4959  041A                     	;# 
  4960  041A                     	;# 
  4961  041B                     	;# 
  4962  041C                     	;# 
  4963  041C                     	;# 
  4964  041D                     	;# 
  4965  041E                     	;# 
  4966  041F                     	;# 
  4967  048C                     	;# 
  4968  048C                     	;# 
  4969  048D                     	;# 
  4970  048E                     	;# 
  4971  048F                     	;# 
  4972  048F                     	;# 
  4973  0490                     	;# 
  4974  0491                     	;# 
  4975  0492                     	;# 
  4976  0492                     	;# 
  4977  0493                     	;# 
  4978  0494                     	;# 
  4979  0495                     	;# 
  4980  0495                     	;# 
  4981  0496                     	;# 
  4982  0497                     	;# 
  4983  0498                     	;# 
  4984  0499                     	;# 
  4985  049A                     	;# 
  4986  049B                     	;# 
  4987  049C                     	;# 
  4988  049D                     	;# 
  4989  050C                     	;# 
  4990  050C                     	;# 
  4991  050D                     	;# 
  4992  050E                     	;# 
  4993  050F                     	;# 
  4994  050F                     	;# 
  4995  0510                     	;# 
  4996  0511                     	;# 
  4997  0512                     	;# 
  4998  0512                     	;# 
  4999  0513                     	;# 
  5000  0514                     	;# 
  5001  0515                     	;# 
  5002  0515                     	;# 
  5003  0516                     	;# 
  5004  0517                     	;# 
  5005  0518                     	;# 
  5006  0519                     	;# 
  5007  051A                     	;# 
  5008  051B                     	;# 
  5009  051C                     	;# 
  5010  051D                     	;# 
  5011  058C                     	;# 
  5012  058C                     	;# 
  5013  058D                     	;# 
  5014  058E                     	;# 
  5015  058F                     	;# 
  5016  058F                     	;# 
  5017  0590                     	;# 
  5018  0591                     	;# 
  5019  0592                     	;# 
  5020  0593                     	;# 
  5021  060C                     	;# 
  5022  060D                     	;# 
  5023  060E                     	;# 
  5024  060F                     	;# 
  5025  0610                     	;# 
  5026  0611                     	;# 
  5027  0612                     	;# 
  5028  0613                     	;# 
  5029  0614                     	;# 
  5030  0616                     	;# 
  5031  0617                     	;# 
  5032  0618                     	;# 
  5033  0619                     	;# 
  5034  061A                     	;# 
  5035  061B                     	;# 
  5036  061C                     	;# 
  5037  061D                     	;# 
  5038  061E                     	;# 
  5039  068C                     	;# 
  5040  068D                     	;# 
  5041  068E                     	;# 
  5042  068F                     	;# 
  5043  0690                     	;# 
  5044  0691                     	;# 
  5045  0692                     	;# 
  5046  0693                     	;# 
  5047  0694                     	;# 
  5048  070C                     	;# 
  5049  070D                     	;# 
  5050  070E                     	;# 
  5051  070F                     	;# 
  5052  0710                     	;# 
  5053  0711                     	;# 
  5054  0712                     	;# 
  5055  0713                     	;# 
  5056  0714                     	;# 
  5057  0716                     	;# 
  5058  0717                     	;# 
  5059  0718                     	;# 
  5060  0719                     	;# 
  5061  071A                     	;# 
  5062  071B                     	;# 
  5063  071C                     	;# 
  5064  071D                     	;# 
  5065  071E                     	;# 
  5066  0796                     	;# 
  5067  0797                     	;# 
  5068  0798                     	;# 
  5069  0799                     	;# 
  5070  079A                     	;# 
  5071  079B                     	;# 
  5072  080C                     	;# 
  5073  080D                     	;# 
  5074  080E                     	;# 
  5075  080F                     	;# 
  5076  0810                     	;# 
  5077  0811                     	;# 
  5078  0812                     	;# 
  5079  0813                     	;# 
  5080  0814                     	;# 
  5081  081A                     	;# 
  5082  081B                     	;# 
  5083  081C                     	;# 
  5084  081D                     	;# 
  5085  081E                     	;# 
  5086  081F                     	;# 
  5087  088C                     	;# 
  5088  088D                     	;# 
  5089  088E                     	;# 
  5090  088F                     	;# 
  5091  0890                     	;# 
  5092  0891                     	;# 
  5093  0892                     	;# 
  5094  0893                     	;# 
  5095  0895                     	;# 
  5096  0896                     	;# 
  5097  0897                     	;# 
  5098  0898                     	;# 
  5099  0899                     	;# 
  5100  089A                     	;# 
  5101  089B                     	;# 
  5102  090C                     	;# 
  5103  090E                     	;# 
  5104  090F                     	;# 
  5105  091F                     	;# 
  5106  091F                     	;# 
  5107  098F                     	;# 
  5108  098F                     	;# 
  5109  0990                     	;# 
  5110  0991                     	;# 
  5111  0992                     	;# 
  5112  0993                     	;# 
  5113  0994                     	;# 
  5114  0995                     	;# 
  5115  0996                     	;# 
  5116  0997                     	;# 
  5117  0E0F                     	;# 
  5118  0E10                     	;# 
  5119  0E11                     	;# 
  5120  0E12                     	;# 
  5121  0E13                     	;# 
  5122  0E14                     	;# 
  5123  0E15                     	;# 
  5124  0E16                     	;# 
  5125  0E17                     	;# 
  5126  0E18                     	;# 
  5127  0E19                     	;# 
  5128  0E1A                     	;# 
  5129  0E1B                     	;# 
  5130  0E1C                     	;# 
  5131  0E1D                     	;# 
  5132  0E1E                     	;# 
  5133  0E1F                     	;# 
  5134  0E20                     	;# 
  5135  0E21                     	;# 
  5136  0E22                     	;# 
  5137  0E23                     	;# 
  5138  0E24                     	;# 
  5139  0E25                     	;# 
  5140  0E26                     	;# 
  5141  0E27                     	;# 
  5142  0E28                     	;# 
  5143  0E29                     	;# 
  5144  0E2A                     	;# 
  5145  0E2B                     	;# 
  5146  0E2C                     	;# 
  5147  0E2D                     	;# 
  5148  0E2E                     	;# 
  5149  0E2F                     	;# 
  5150  0E30                     	;# 
  5151  0E31                     	;# 
  5152  0E32                     	;# 
  5153  0E33                     	;# 
  5154  0E34                     	;# 
  5155  0E35                     	;# 
  5156  0E36                     	;# 
  5157  0E37                     	;# 
  5158  0E8F                     	;# 
  5159  0E90                     	;# 
  5160  0E91                     	;# 
  5161  0E92                     	;# 
  5162  0E93                     	;# 
  5163  0E94                     	;# 
  5164  0E95                     	;# 
  5165  0E96                     	;# 
  5166  0E97                     	;# 
  5167  0E9C                     	;# 
  5168  0E9D                     	;# 
  5169  0E9E                     	;# 
  5170  0EA1                     	;# 
  5171  0EA2                     	;# 
  5172  0EA3                     	;# 
  5173  0EA4                     	;# 
  5174  0EA5                     	;# 
  5175  0EA9                     	;# 
  5176  0EAA                     	;# 
  5177  0EAB                     	;# 
  5178  0EAC                     	;# 
  5179  0EB1                     	;# 
  5180  0EB2                     	;# 
  5181  0EB3                     	;# 
  5182  0EB8                     	;# 
  5183  0EB9                     	;# 
  5184  0EBA                     	;# 
  5185  0EBB                     	;# 
  5186  0EBC                     	;# 
  5187  0EBD                     	;# 
  5188  0EBE                     	;# 
  5189  0EC3                     	;# 
  5190  0EC5                     	;# 
  5191  0EC6                     	;# 
  5192  0EC7                     	;# 
  5193  0EC8                     	;# 
  5194  0EC9                     	;# 
  5195  0ECA                     	;# 
  5196  0ECB                     	;# 
  5197  0ECC                     	;# 
  5198  0F10                     	;# 
  5199  0F11                     	;# 
  5200  0F12                     	;# 
  5201  0F13                     	;# 
  5202  0F14                     	;# 
  5203  0F15                     	;# 
  5204  0F16                     	;# 
  5205  0F17                     	;# 
  5206  0F18                     	;# 
  5207  0F19                     	;# 
  5208  0F1A                     	;# 
  5209  0F1B                     	;# 
  5210  0F1C                     	;# 
  5211  0F1D                     	;# 
  5212  0F1E                     	;# 
  5213  0F1F                     	;# 
  5214  0F20                     	;# 
  5215  0F21                     	;# 
  5216  0F22                     	;# 
  5217  0F23                     	;# 
  5218  0F24                     	;# 
  5219  0F25                     	;# 
  5220  0F26                     	;# 
  5221  0F27                     	;# 
  5222  0F38                     	;# 
  5223  0F39                     	;# 
  5224  0F3A                     	;# 
  5225  0F3B                     	;# 
  5226  0F3C                     	;# 
  5227  0F3D                     	;# 
  5228  0F3E                     	;# 
  5229  0F3F                     	;# 
  5230  0F40                     	;# 
  5231  0F41                     	;# 
  5232  0F43                     	;# 
  5233  0F44                     	;# 
  5234  0F45                     	;# 
  5235  0F46                     	;# 
  5236  0F47                     	;# 
  5237  0F48                     	;# 
  5238  0F49                     	;# 
  5239  0F4A                     	;# 
  5240  0F4B                     	;# 
  5241  0F4C                     	;# 
  5242  0F4E                     	;# 
  5243  0F4F                     	;# 
  5244  0F50                     	;# 
  5245  0F51                     	;# 
  5246  0F52                     	;# 
  5247  0F53                     	;# 
  5248  0F54                     	;# 
  5249  0F55                     	;# 
  5250  0F56                     	;# 
  5251  0F57                     	;# 
  5252  0F65                     	;# 
  5253  0F68                     	;# 
  5254  0F69                     	;# 
  5255  0F6A                     	;# 
  5256  0F6B                     	;# 
  5257  0FE4                     	;# 
  5258  0FE5                     	;# 
  5259  0FE6                     	;# 
  5260  0FE7                     	;# 
  5261  0FE8                     	;# 
  5262  0FE9                     	;# 
  5263  0FEA                     	;# 
  5264  0FEB                     	;# 
  5265  0FED                     	;# 
  5266  0FEE                     	;# 
  5267  0FEF                     	;_samples
  5268                           
  5269                           	psect	idataBANK1
  5270  0009                     __pidataBANK1:	
  5271                           
  5272                           ;initializer for _Imode0
  5273  0009  3401               	retlw	1
  5274                           
  5275                           	psect	idataBANK2
  5276  1E79                     __pidataBANK2:	
  5277                           
  5278                           ;initializer for _channels
  5279  1E79  3417               	retlw	23
  5280  1E7A  3400               	retlw	0
  5281  1E7B  3415               	retlw	21
  5282  1E7C  3400               	retlw	0
  5283  1E7D  3413               	retlw	19
  5284  1E7E  3400               	retlw	0
  5285  1E7F  3411               	retlw	17
  5286  1E80  3400               	retlw	0
  5287  1E81  3416               	retlw	22
  5288  1E82  3400               	retlw	0
  5289  1E83  3414               	retlw	20
  5290  1E84  3400               	retlw	0
  5291  1E85  3412               	retlw	18
  5292  1E86  3400               	retlw	0
  5293  1E87  3410               	retlw	16
  5294  1E88  3400               	retlw	0
  5295                           
  5296                           ;initializer for _Imode1
  5297  1E89  3401               	retlw	1
  5298                           
  5299                           	psect	stringtext1
  5300  1000                     __pstringtext1:	
  5301  1000                     _fonts:	
  5302  1000  3400               	retlw	0
  5303  1001  3400               	retlw	0
  5304  1002  3400               	retlw	0
  5305  1003  3400               	retlw	0
  5306  1004  344E               	retlw	78
  5307  1005  3400               	retlw	0
  5308  1006  3406               	retlw	6
  5309  1007  3400               	retlw	0
  5310  1008  3406               	retlw	6
  5311  1009  34FF               	retlw	255
  5312  100A  34FF               	retlw	255
  5313  100B  34FF               	retlw	255
  5314  100C  3448               	retlw	72
  5315  100D  34D6               	retlw	214
  5316  100E  3424               	retlw	36
  5317  100F  3412               	retlw	18
  5318  1010  3408               	retlw	8
  5319  1011  3424               	retlw	36
  5320  1012  34FF               	retlw	255
  5321  1013  34FF               	retlw	255
  5322  1014  34FF               	retlw	255
  5323  1015  3400               	retlw	0
  5324  1016  3406               	retlw	6
  5325  1017  3400               	retlw	0
  5326  1018  3438               	retlw	56
  5327  1019  3444               	retlw	68
  5328  101A  3482               	retlw	130
  5329  101B  3482               	retlw	130
  5330  101C  3444               	retlw	68
  5331  101D  3438               	retlw	56
  5332  101E  3414               	retlw	20
  5333  101F  3408               	retlw	8
  5334  1020  343E               	retlw	62
  5335  1021  3410               	retlw	16
  5336  1022  3438               	retlw	56
  5337  1023  3410               	retlw	16
  5338  1024  34A0               	retlw	160
  5339  1025  3460               	retlw	96
  5340  1026  3400               	retlw	0
  5341  1027  3410               	retlw	16
  5342  1028  3410               	retlw	16
  5343  1029  3410               	retlw	16
  5344  102A  3460               	retlw	96
  5345  102B  3460               	retlw	96
  5346  102C  3400               	retlw	0
  5347  102D  3460               	retlw	96
  5348  102E  3418               	retlw	24
  5349  102F  3406               	retlw	6
  5350  1030  347C               	retlw	124
  5351  1031  3442               	retlw	66
  5352  1032  347C               	retlw	124
  5353  1033  3444               	retlw	68
  5354  1034  347E               	retlw	126
  5355  1035  3440               	retlw	64
  5356  1036  3464               	retlw	100
  5357  1037  3452               	retlw	82
  5358  1038  344C               	retlw	76
  5359  1039  344A               	retlw	74
  5360  103A  344A               	retlw	74
  5361  103B  3434               	retlw	52
  5362  103C  3438               	retlw	56
  5363  103D  3424               	retlw	36
  5364  103E  347E               	retlw	126
  5365  103F  344E               	retlw	78
  5366  1040  344A               	retlw	74
  5367  1041  3432               	retlw	50
  5368  1042  343C               	retlw	60
  5369  1043  344A               	retlw	74
  5370  1044  3432               	retlw	50
  5371  1045  3462               	retlw	98
  5372  1046  341A               	retlw	26
  5373  1047  3406               	retlw	6
  5374  1048  3476               	retlw	118
  5375  1049  344A               	retlw	74
  5376  104A  3476               	retlw	118
  5377  104B  344C               	retlw	76
  5378  104C  3452               	retlw	82
  5379  104D  343C               	retlw	60
  5380  104E  346C               	retlw	108
  5381  104F  346C               	retlw	108
  5382  1050  3400               	retlw	0
  5383  1051  34AC               	retlw	172
  5384  1052  346C               	retlw	108
  5385  1053  3400               	retlw	0
  5386  1054  3410               	retlw	16
  5387  1055  3428               	retlw	40
  5388  1056  3444               	retlw	68
  5389  1057  3428               	retlw	40
  5390  1058  3428               	retlw	40
  5391  1059  3428               	retlw	40
  5392  105A  3444               	retlw	68
  5393  105B  3428               	retlw	40
  5394  105C  3410               	retlw	16
  5395  105D  3402               	retlw	2
  5396  105E  3459               	retlw	89
  5397  105F  3406               	retlw	6
  5398  1060  34FF               	retlw	255
  5399  1061  34FF               	retlw	255
  5400  1062  34FF               	retlw	255
  5401  1063  347C               	retlw	124
  5402  1064  3412               	retlw	18
  5403  1065  347C               	retlw	124
  5404  1066  347E               	retlw	126
  5405  1067  345A               	retlw	90
  5406  1068  3434               	retlw	52
  5407  1069  343C               	retlw	60
  5408  106A  3442               	retlw	66
  5409  106B  3442               	retlw	66
  5410  106C  347E               	retlw	126
  5411  106D  3442               	retlw	66
  5412  106E  343C               	retlw	60
  5413  106F  347E               	retlw	126
  5414  1070  344A               	retlw	74
  5415  1071  3442               	retlw	66
  5416  1072  347E               	retlw	126
  5417  1073  340A               	retlw	10
  5418  1074  340A               	retlw	10
  5419  1075  343C               	retlw	60
  5420  1076  3452               	retlw	82
  5421  1077  3434               	retlw	52
  5422  1078  347E               	retlw	126
  5423  1079  3408               	retlw	8
  5424  107A  347E               	retlw	126
  5425  107B  3442               	retlw	66
  5426  107C  347E               	retlw	126
  5427  107D  3442               	retlw	66
  5428  107E  3430               	retlw	48
  5429  107F  3440               	retlw	64
  5430  1080  343E               	retlw	62
  5431  1081  347E               	retlw	126
  5432  1082  3418               	retlw	24
  5433  1083  3466               	retlw	102
  5434  1084  347E               	retlw	126
  5435  1085  3440               	retlw	64
  5436  1086  3440               	retlw	64
  5437  1087  347E               	retlw	126
  5438  1088  341C               	retlw	28
  5439  1089  347E               	retlw	126
  5440  108A  347E               	retlw	126
  5441  108B  3402               	retlw	2
  5442  108C  347E               	retlw	126
  5443  108D  343C               	retlw	60
  5444  108E  3442               	retlw	66
  5445  108F  343C               	retlw	60
  5446  1090  347E               	retlw	126
  5447  1091  3412               	retlw	18
  5448  1092  340C               	retlw	12
  5449  1093  347E               	retlw	126
  5450  1094  3462               	retlw	98
  5451  1095  34FE               	retlw	254
  5452  1096  347E               	retlw	126
  5453  1097  3432               	retlw	50
  5454  1098  344E               	retlw	78
  5455  1099  3444               	retlw	68
  5456  109A  344A               	retlw	74
  5457  109B  3432               	retlw	50
  5458  109C  3402               	retlw	2
  5459  109D  347E               	retlw	126
  5460  109E  3402               	retlw	2
  5461  109F  347E               	retlw	126
  5462  10A0  3440               	retlw	64
  5463  10A1  347E               	retlw	126
  5464  10A2  343E               	retlw	62
  5465  10A3  3440               	retlw	64
  5466  10A4  343E               	retlw	62
  5467  10A5  347E               	retlw	126
  5468  10A6  3438               	retlw	56
  5469  10A7  347E               	retlw	126
  5470  10A8  3466               	retlw	102
  5471  10A9  3418               	retlw	24
  5472  10AA  3466               	retlw	102
  5473  10AB  340E               	retlw	14
  5474  10AC  3470               	retlw	112
  5475  10AD  340E               	retlw	14
  5476  10AE  3462               	retlw	98
  5477  10AF  345A               	retlw	90
  5478  10B0  3446               	retlw	70
  5479  10B1  3400               	retlw	0
  5480  10B2  347E               	retlw	126
  5481  10B3  3442               	retlw	66
  5482  10B4  3406               	retlw	6
  5483  10B5  3418               	retlw	24
  5484  10B6  3460               	retlw	96
  5485  10B7  3442               	retlw	66
  5486  10B8  347E               	retlw	126
  5487  10B9  3400               	retlw	0
  5488  10BA  3404               	retlw	4
  5489  10BB  3402               	retlw	2
  5490  10BC  3404               	retlw	4
  5491  10BD  3440               	retlw	64
  5492  10BE  3440               	retlw	64
  5493  10BF  3440               	retlw	64
  5494  10C0  3400               	retlw	0
  5495  10C1  3402               	retlw	2
  5496  10C2  3404               	retlw	4
  5497  10C3  3474               	retlw	116
  5498  10C4  3454               	retlw	84
  5499  10C5  3478               	retlw	120
  5500  10C6  347E               	retlw	126
  5501  10C7  3448               	retlw	72
  5502  10C8  3430               	retlw	48
  5503  10C9  3430               	retlw	48
  5504  10CA  3448               	retlw	72
  5505  10CB  3448               	retlw	72
  5506  10CC  3430               	retlw	48
  5507  10CD  3448               	retlw	72
  5508  10CE  347E               	retlw	126
  5509  10CF  3438               	retlw	56
  5510  10D0  3454               	retlw	84
  5511  10D1  3458               	retlw	88
  5512  10D2  347C               	retlw	124
  5513  10D3  340A               	retlw	10
  5514  10D4  3402               	retlw	2
  5515  10D5  3498               	retlw	152
  5516  10D6  34A4               	retlw	164
  5517  10D7  347C               	retlw	124
  5518  10D8  347E               	retlw	126
  5519  10D9  3408               	retlw	8
  5520  10DA  3470               	retlw	112
  5521  10DB  3448               	retlw	72
  5522  10DC  347A               	retlw	122
  5523  10DD  3440               	retlw	64
  5524  10DE  3488               	retlw	136
  5525  10DF  34FA               	retlw	250
  5526  10E0  3400               	retlw	0
  5527  10E1  347E               	retlw	126
  5528  10E2  3418               	retlw	24
  5529  10E3  3464               	retlw	100
  5530  10E4  3442               	retlw	66
  5531  10E5  347E               	retlw	126
  5532  10E6  3440               	retlw	64
  5533  10E7  347C               	retlw	124
  5534  10E8  3438               	retlw	56
  5535  10E9  347C               	retlw	124
  5536  10EA  347C               	retlw	124
  5537  10EB  3404               	retlw	4
  5538  10EC  3478               	retlw	120
  5539  10ED  3438               	retlw	56
  5540  10EE  3444               	retlw	68
  5541  10EF  3438               	retlw	56
  5542  10F0  34FC               	retlw	252
  5543  10F1  3424               	retlw	36
  5544  10F2  3418               	retlw	24
  5545  10F3  3418               	retlw	24
  5546  10F4  3424               	retlw	36
  5547  10F5  34FC               	retlw	252
  5548  10F6  3478               	retlw	120
  5549  10F7  3404               	retlw	4
  5550  10F8  3404               	retlw	4
  5551  10F9  3448               	retlw	72
  5552  10FA  3454               	retlw	84
  5553  10FB  3424               	retlw	36
  5554  10FC  3404               	retlw	4
  5555  10FD  343E               	retlw	62
  5556  10FE  3444               	retlw	68
  5557  10FF  347C               	retlw	124
  5558  1100  3440               	retlw	64
  5559  1101  347C               	retlw	124
  5560  1102  343C               	retlw	60
  5561  1103  3440               	retlw	64
  5562  1104  343C               	retlw	60
  5563  1105  347C               	retlw	124
  5564  1106  3430               	retlw	48
  5565  1107  347C               	retlw	124
  5566  1108  346C               	retlw	108
  5567  1109  3410               	retlw	16
  5568  110A  346C               	retlw	108
  5569  110B  349C               	retlw	156
  5570  110C  34A0               	retlw	160
  5571  110D  347C               	retlw	124
  5572  110E  3464               	retlw	100
  5573  110F  3454               	retlw	84
  5574  1110  344C               	retlw	76
  5575  1111  340C               	retlw	12
  5576  1112  3412               	retlw	18
  5577  1113  340C               	retlw	12
  5578  1114  34FF               	retlw	255
  5579  1115  34FF               	retlw	255
  5580  1116  34FF               	retlw	255
  5581  1117  34FF               	retlw	255
  5582  1118  34FF               	retlw	255
  5583  1119  34FF               	retlw	255
  5584  111A  34FF               	retlw	255
  5585  111B  34FF               	retlw	255
  5586  111C  34FF               	retlw	255
  5587  111D  34FF               	retlw	255
  5588  111E  34FF               	retlw	255
  5589  111F  34FF               	retlw	255
  5590  1120  34FF               	retlw	255
  5591  1121  34FF               	retlw	255
  5592  1122  34FF               	retlw	255
  5593  1123  34FF               	retlw	255
  5594  1124  34FF               	retlw	255
  5595  1125  34FF               	retlw	255
  5596  1126  34FC               	retlw	252
  5597  1127  3440               	retlw	64
  5598  1128  347C               	retlw	124
  5599  1129  34FF               	retlw	255
  5600  112A  34FF               	retlw	255
  5601  112B  34FF               	retlw	255
  5602  112C  34FF               	retlw	255
  5603  112D  34FF               	retlw	255
  5604  112E  34FF               	retlw	255
  5605  112F                     __end_of_fonts:	
  5606                           
  5607                           	psect	stringtext2
  5608  1800                     __pstringtext2:	
  5609  1800                     log@coeff:	
  5610  1800  3400               	retlw	0
  5611  1801  3400               	retlw	0
  5612  1802  3400               	retlw	0
  5613  1803  3400               	retlw	0
  5614  1804  34C4               	retlw	196
  5615  1805  34FF               	retlw	255
  5616  1806  347F               	retlw	127
  5617  1807  343F               	retlw	63
  5618  1808  3480               	retlw	128
  5619  1809  34EF               	retlw	239
  5620  180A  34FF               	retlw	255
  5621  180B  34BE               	retlw	190
  5622  180C  3490               	retlw	144
  5623  180D  34E1               	retlw	225
  5624  180E  34A9               	retlw	169
  5625  180F  343E               	retlw	62
  5626  1810  34EC               	retlw	236
  5627  1811  3482               	retlw	130
  5628  1812  3476               	retlw	118
  5629  1813  34BE               	retlw	190
  5630  1814  3482               	retlw	130
  5631  1815  34AD               	retlw	173
  5632  1816  342B               	retlw	43
  5633  1817  343E               	retlw	62
  5634  1818  340E               	retlw	14
  5635  1819  343C               	retlw	60
  5636  181A  34C3               	retlw	195
  5637  181B  34BD               	retlw	189
  5638  181C  3487               	retlw	135
  5639  181D  34D1               	retlw	209
  5640  181E  3413               	retlw	19
  5641  181F  343D               	retlw	61
  5642  1820  3441               	retlw	65
  5643  1821  3478               	retlw	120
  5644  1822  34D3               	retlw	211
  5645  1823  34BB               	retlw	187
  5646  1824                     __end_oflog@coeff:	
  5647                           
  5648                           	psect	nvBANK2
  5649  0164                     __pnvBANK2:	
  5650  0164                     _Vref:	
  5651  0164                     	ds	2
  5652  0166                     _Iref:	
  5653  0166                     	ds	2
  5654  0168                     _Imin:	
  5655  0168                     	ds	2
  5656  016A                     _state_counter:	
  5657  016A                     	ds	2
  5658  016C                     _IminCount:	
  5659  016C                     	ds	2
  5660  016E                     _battery_state:	
  5661  016E                     	ds	1
  5662  0013                     _TRISC	set	19
  5663  0012                     _TRISB	set	18
  5664  0011                     _TRISA	set	17
  5665  0018                     _LATC	set	24
  5666  0017                     _LATB	set	23
  5667  0016                     _LATA	set	22
  5668  0016                     _LATAbits	set	22
  5669  0011                     _TRISAbits	set	17
  5670  00B5                     _LATA5	set	181
  5671  006A                     _RB2	set	106
  5672  005F                     _GIE	set	95
  5673  0093                     _ADCON0	set	147
  5674  009D                     _ADACQ	set	157
  5675  009C                     _ADPRE	set	156
  5676  009B                     _ADCAP	set	155
  5677  009A                     _ADREF	set	154
  5678  0098                     _ADCLK	set	152
  5679  0097                     _ADSTAT	set	151
  5680  0099                     _ADACT	set	153
  5681  0096                     _ADCON3	set	150
  5682  0095                     _ADCON2	set	149
  5683  0094                     _ADCON1	set	148
  5684  008C                     _ADRESL	set	140
  5685  008D                     _ADRESH	set	141
  5686  0093                     _ADCON0bits	set	147
  5687  009E                     _ADPCH	set	158
  5688  0113                     _ADSTPTH	set	275
  5689  0112                     _ADSTPTL	set	274
  5690  0111                     _ADUTHH	set	273
  5691  0110                     _ADUTHL	set	272
  5692  010F                     _ADLTHH	set	271
  5693  010E                     _ADLTHL	set	270
  5694  010D                     _ADRPT	set	269
  5695  021E                     _CCPTMRS0bits	set	542
  5696  021F                     _CCPTMRS1bits	set	543
  5697  0294                     _T4CONbits	set	660
  5698  0292                     _T4TMR	set	658
  5699  0293                     _T4PR	set	659
  5700  0297                     _T4RST	set	663
  5701  0295                     _T4HLT	set	661
  5702  0296                     _T4CLKCON	set	662
  5703  0294                     _T4CON	set	660
  5704  028E                     _T2CONbits	set	654
  5705  028C                     _T2TMR	set	652
  5706  028D                     _T2PR	set	653
  5707  0291                     _T2RST	set	657
  5708  028F                     _T2HLT	set	655
  5709  0290                     _T2CLKCON	set	656
  5710  028E                     _T2CON	set	654
  5711  030C                     _CCPR1L	set	780
  5712  030D                     _CCPR1H	set	781
  5713  030E                     _CCP1CONbits	set	782
  5714  0390                     _PWM7DCL	set	912
  5715  0391                     _PWM7DCH	set	913
  5716  0392                     _PWM7CON	set	914
  5717  038C                     _PWM6DCL	set	908
  5718  038D                     _PWM6DCH	set	909
  5719  038E                     _PWM6CON	set	910
  5720  0710                     _PIR4bits	set	1808
  5721  0716                     _PIE0bits	set	1814
  5722  0892                     _OSCTUNE	set	2194
  5723  0893                     _OSCFRQ	set	2195
  5724  0891                     _OSCEN	set	2193
  5725  088F                     _OSCCON3	set	2191
  5726  088D                     _OSCCON1	set	2189
  5727  090C                     _FVRCON	set	2316
  5728  0E8F                     _PPSLOCKbits	set	3727
  5729  0E8F                     _PPSLOCK	set	3727
  5730  0F18                     _RB0PPS	set	3864
  5731  0F17                     _RA7PPS	set	3863
  5732  0F16                     _RA6PPS	set	3862
  5733  0F4E                     _ANSELC	set	3918
  5734  0F43                     _ANSELB	set	3907
  5735  0F38                     _ANSELA	set	3896
  5736  0F65                     _WPUE	set	3941
  5737  0F4F                     _WPUC	set	3919
  5738  0F44                     _WPUB	set	3908
  5739  0F39                     _WPUA	set	3897
  5740                           
  5741                           ; #config settings
  5742  0000                     
  5743                           	psect	cinit
  5744  07C8                     start_initialization:	
  5745  07C8                     __initialization:		;BIGRAM
  5746                           
  5747                           ; Initialize objects allocated to BANK1
  5748  07C8  0021               	movlb	1	; select bank1
  5749  07C9  3180  2009  3187   	fcall	__pidataBANK1	;fetch initializer
  5750  07CC  00EE               	movwf	__pdataBANK1& (0+127)
  5751                           
  5752                           ; Initialize objects allocated to BANK2
  5753  07CD  3079               	movlw	low __pidataBANK2
  5754  07CE  0084               	movwf	4
  5755  07CF  309E               	movlw	(high __pidataBANK2)| (0+128)
  5756  07D0  0085               	movwf	5
  5757  07D1  3053               	movlw	low __pdataBANK2
  5758  07D2  0086               	movwf	6
  5759  07D3  3001               	movlw	high __pdataBANK2
  5760  07D4  0087               	movwf	7
  5761  07D5  3000               	movlw	0
  5762  07D6  00FF               	movwf	btemp+1
  5763  07D7  3011               	movlw	17
  5764  07D8  319E  2651  3187   	fcall	init_ram
  5765                           
  5766                           ; Clear objects allocated to BIGRAM
  5767  07DB  3020               	movlw	low (0+8480)
  5768  07DC  0084               	movwf	4
  5769  07DD  3021               	movlw	high (0+8480)
  5770  07DE  0085               	movwf	5
  5771  07DF  30D0               	movlw	208
  5772  07E0  00FE               	movwf	btemp
  5773  07E1  3002               	movlw	2
  5774  07E2  00FF               	movwf	btemp+1
  5775  07E3  319E  2645  3187   	fcall	clear_ram0
  5776                           
  5777                           ; Clear objects allocated to BANK1
  5778  07E6  01EC               	clrf	__pbssBANK1& (0+127)
  5779  07E7  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  5780                           
  5781                           ; Clear objects allocated to BANK2
  5782  07E8  3020               	movlw	low __pbssBANK2
  5783  07E9  0084               	movwf	4
  5784  07EA  3001               	movlw	high __pbssBANK2
  5785  07EB  0085               	movwf	5
  5786  07EC  3033               	movlw	51
  5787  07ED  00FE               	movwf	btemp
  5788  07EE  3000               	movlw	0
  5789  07EF  00FF               	movwf	btemp+1
  5790  07F0  319E  2645  3187   	fcall	clear_ram0
  5791                           
  5792                           ; Clear objects allocated to BANK3
  5793  07F3  30A0               	movlw	low __pbssBANK3
  5794  07F4  0084               	movwf	4
  5795  07F5  3001               	movlw	high __pbssBANK3
  5796  07F6  0085               	movwf	5
  5797  07F7  3020               	movlw	32
  5798  07F8  00FE               	movwf	btemp
  5799  07F9  3000               	movlw	0
  5800  07FA  00FF               	movwf	btemp+1
  5801  07FB  319E  2645         	fcall	clear_ram0
  5802  07FD                     end_of_initialization:	
  5803                           ;End of C runtime variable initialization code
  5804                           
  5805  07FD                     __end_of__initialization:	
  5806  07FD  0020               	movlb	0
  5807  07FE  3182  2A36         	ljmp	_main	;jump to C main() function
  5808                           
  5809                           	psect	bssBANK1
  5810  00EC                     __pbssBANK1:	
  5811  00EC                     _lastButton:	
  5812  00EC                     	ds	1
  5813  00ED                     _button:	
  5814  00ED                     	ds	1
  5815                           
  5816                           	psect	dataBANK1
  5817  00EE                     __pdataBANK1:	
  5818  00EE                     _Imode0:	
  5819  00EE                     	ds	1
  5820                           
  5821                           	psect	bssBANK2
  5822  0120                     __pbssBANK2:	
  5823  0120                     _analogs:	
  5824  0120                     	ds	16
  5825  0130                     _current:	
  5826  0130                     	ds	8
  5827  0138                     _voltage:	
  5828  0138                     	ds	8
  5829  0140                     LCDWriteInt@F14396:	
  5830  0140                     	ds	5
  5831  0145                     _errno:	
  5832  0145                     	ds	2
  5833  0147                     _readButtons:	
  5834  0147                     	ds	2
  5835  0149                     _Iout:	
  5836  0149                     	ds	2
  5837  014B                     _warmup:	
  5838  014B                     	ds	2
  5839  014D                     _Iflat_db:	
  5840  014D                     	ds	2
  5841  014F                     _sampleIndex:	
  5842  014F                     	ds	2
  5843  0151                     _j:	
  5844  0151                     	ds	1
  5845  0152                     _cc_cv:	
  5846  0152                     	ds	1
  5847                           
  5848                           	psect	dataBANK2
  5849  0153                     __pdataBANK2:	
  5850  0153                     _channels:	
  5851  0153                     	ds	16
  5852  0163                     _Imode1:	
  5853  0163                     	ds	1
  5854                           
  5855                           	psect	bssBANK3
  5856  01A0                     __pbssBANK3:	
  5857  01A0                     _totals:	
  5858  01A0                     	ds	32
  5859                           
  5860                           	psect	inittext
  5861  1E51                     init_ram:	
  5862  1E51  00FE               	movwf	126
  5863  1E52                     initloop:	
  5864  1E52  0012               	moviw fsr0++
  5865  1E53  001E               	movwi fsr1++
  5866  1E54  3001               	movlw	1
  5867  1E55  02FE               	subwf	126,f
  5868  1E56  3000               	movlw	0
  5869  1E57  3BFF               	subwfb	127,f
  5870  1E58  087F               	movf	127,w
  5871  1E59  047E               	iorwf	126,w
  5872  1E5A  1903               	btfsc	3,2
  5873  1E5B  3400               	retlw	0
  5874  1E5C  2E52               	goto	initloop
  5875                           
  5876                           	psect	clrtext
  5877  1E45                     clear_ram0:	
  5878                           ;	Called with FSR0 containing the base address, and
  5879                           ;	btemp/btemp+1 has the size to clear
  5880                           
  5881  1E45  0064               	clrwdt	;clear the watchdog before getting into this loop
  5882  1E46                     clrloop0:	
  5883  1E46  0180               	clrf	0	;clear RAM location pointed to by FSR
  5884  1E47  3101               	addfsr 0,1
  5885  1E48  3001               	movlw	1
  5886  1E49  02FE               	subwf	126,f
  5887  1E4A  3000               	movlw	0
  5888  1E4B  3BFF               	subwfb	127,f
  5889  1E4C  087F               	movf	127,w
  5890  1E4D  047E               	iorwf	126,w
  5891  1E4E  1903               	btfsc	3,2
  5892  1E4F  3400               	retlw	0	;all done for this memory range, return
  5893  1E50  2E46               	goto	clrloop0	;have we reached the end yet?
  5894                           
  5895                           	psect	cstackBANK1
  5896  00A0                     __pcstackBANK1:	
  5897  00A0                     ?_eval_poly:	
  5898  00A0                     ?___flsub:	
  5899                           ; 4 bytes @ 0x0
  5900                           
  5901  00A0                     ___flsub@a:	
  5902                           ; 4 bytes @ 0x0
  5903                           
  5904  00A0                     eval_poly@x:	
  5905                           ; 4 bytes @ 0x0
  5906                           
  5907                           
  5908                           ; 4 bytes @ 0x0
  5909  00A0                     	ds	4
  5910  00A4                     eval_poly@d:	
  5911  00A4                     ___flsub@b:	
  5912                           ; 2 bytes @ 0x4
  5913                           
  5914                           
  5915                           ; 4 bytes @ 0x4
  5916  00A4                     	ds	2
  5917  00A6                     eval_poly@n:	
  5918                           
  5919                           ; 2 bytes @ 0x6
  5920  00A6                     	ds	2
  5921  00A8                     ??_eval_poly:	
  5922                           
  5923                           ; 1 bytes @ 0x8
  5924  00A8                     	ds	6
  5925  00AE                     ?_log:	
  5926  00AE                     log@x:	
  5927                           ; 4 bytes @ 0xE
  5928                           
  5929                           
  5930                           ; 4 bytes @ 0xE
  5931  00AE                     	ds	4
  5932  00B2                     ??_log:	
  5933                           
  5934                           ; 1 bytes @ 0x12
  5935  00B2                     	ds	1
  5936  00B3                     log@exponent:	
  5937                           
  5938                           ; 2 bytes @ 0x13
  5939  00B3                     	ds	2
  5940  00B5                     ?_tempCalc:	
  5941  00B5                     tempCalc@analogValue:	
  5942                           ; 2 bytes @ 0x15
  5943                           
  5944                           
  5945                           ; 2 bytes @ 0x15
  5946  00B5                     	ds	2
  5947  00B7                     tempCalc@R:	
  5948                           
  5949                           ; 4 bytes @ 0x17
  5950  00B7                     	ds	4
  5951  00BB                     _tempCalc$1351:	
  5952                           
  5953                           ; 4 bytes @ 0x1B
  5954  00BB                     	ds	4
  5955  00BF                     tempCalc@steinhart:	
  5956                           
  5957                           ; 4 bytes @ 0x1F
  5958  00BF                     	ds	4
  5959  00C3                     ??_main:	
  5960                           
  5961                           ; 1 bytes @ 0x23
  5962  00C3                     	ds	2
  5963  00C5                     main@batteryTemp:	
  5964                           
  5965                           ; 2 bytes @ 0x25
  5966  00C5                     	ds	2
  5967  00C7                     main@fastLoop:	
  5968                           
  5969                           ; 1 bytes @ 0x27
  5970  00C7                     	ds	1
  5971  00C8                     _main$1353:	
  5972                           
  5973                           ; 4 bytes @ 0x28
  5974  00C8                     	ds	4
  5975  00CC                     main@MPPT1:	
  5976                           
  5977                           ; 2 bytes @ 0x2C
  5978  00CC                     	ds	2
  5979  00CE                     main@faultCount:	
  5980                           
  5981                           ; 2 bytes @ 0x2E
  5982  00CE                     	ds	2
  5983  00D0                     main@faultNotReset:	
  5984                           
  5985                           ; 2 bytes @ 0x30
  5986  00D0                     	ds	2
  5987  00D2                     main@slowLoop:	
  5988                           
  5989                           ; 1 bytes @ 0x32
  5990  00D2                     	ds	1
  5991  00D3                     main@displayRefresh:	
  5992                           
  5993                           ; 1 bytes @ 0x33
  5994  00D3                     	ds	1
  5995  00D4                     _main$1352:	
  5996                           
  5997                           ; 4 bytes @ 0x34
  5998  00D4                     	ds	4
  5999  00D8                     main@IOutTotal:	
  6000                           
  6001                           ; 2 bytes @ 0x38
  6002  00D8                     	ds	2
  6003  00DA                     _main$1354:	
  6004                           
  6005                           ; 2 bytes @ 0x3A
  6006  00DA                     	ds	2
  6007  00DC                     _main$1355:	
  6008                           
  6009                           ; 2 bytes @ 0x3C
  6010  00DC                     	ds	2
  6011  00DE                     main@efficiency:	
  6012                           
  6013                           ; 4 bytes @ 0x3E
  6014  00DE                     	ds	4
  6015  00E2                     main@dutyCycle1:	
  6016                           
  6017                           ; 2 bytes @ 0x42
  6018  00E2                     	ds	2
  6019  00E4                     main@menuButton:	
  6020                           
  6021                           ; 1 bytes @ 0x44
  6022  00E4                     	ds	1
  6023  00E5                     main@dutyCycle7:	
  6024                           
  6025                           ; 2 bytes @ 0x45
  6026  00E5                     	ds	2
  6027  00E7                     main@MPPT0:	
  6028                           
  6029                           ; 2 bytes @ 0x47
  6030  00E7                     	ds	2
  6031  00E9                     main@j:	
  6032                           
  6033                           ; 1 bytes @ 0x49
  6034  00E9                     	ds	1
  6035  00EA                     main@dutyCycle6:	
  6036                           
  6037                           ; 2 bytes @ 0x4A
  6038  00EA                     	ds	2
  6039                           
  6040                           	psect	cstackCOMMON
  6041  0070                     __pcstackCOMMON:	
  6042  0070                     ?___flge:	
  6043  0070                     ?_LCDWrite:	
  6044                           ; 1 bit 
  6045                           
  6046  0070                     ?_OSCILLATOR_Initialize:	
  6047                           ; 1 bytes @ 0x0
  6048                           
  6049  0070                     ??_OSCILLATOR_Initialize:	
  6050                           ; 1 bytes @ 0x0
  6051                           
  6052  0070                     ?_TMR2_Initialize:	
  6053                           ; 1 bytes @ 0x0
  6054                           
  6055  0070                     ??_TMR2_Initialize:	
  6056                           ; 1 bytes @ 0x0
  6057                           
  6058  0070                     ?_TMR4_Initialize:	
  6059                           ; 1 bytes @ 0x0
  6060                           
  6061  0070                     ??_TMR4_Initialize:	
  6062                           ; 1 bytes @ 0x0
  6063                           
  6064  0070                     ?_calculateCurrent0:	
  6065                           ; 1 bytes @ 0x0
  6066                           
  6067  0070                     ?_calculateCurrent1:	
  6068                           ; 1 bytes @ 0x0
  6069                           
  6070  0070                     ?_ADC_Initialize:	
  6071                           ; 1 bytes @ 0x0
  6072                           
  6073  0070                     ??_ADC_Initialize:	
  6074                           ; 1 bytes @ 0x0
  6075                           
  6076  0070                     ?_Init_Battery_State_Machine:	
  6077                           ; 1 bytes @ 0x0
  6078                           
  6079  0070                     ??_Init_Battery_State_Machine:	
  6080                           ; 1 bytes @ 0x0
  6081                           
  6082  0070                     ?_Battery_State_Machine:	
  6083                           ; 1 bytes @ 0x0
  6084                           
  6085  0070                     ??_Battery_State_Machine:	
  6086                           ; 1 bytes @ 0x0
  6087                           
  6088  0070                     ?_cc_cv_mode:	
  6089                           ; 1 bytes @ 0x0
  6090                           
  6091  0070                     ??_cc_cv_mode:	
  6092                           ; 1 bytes @ 0x0
  6093                           
  6094  0070                     ?_readButton:	
  6095                           ; 1 bytes @ 0x0
  6096                           
  6097  0070                     ?_LCDWriteCharacter:	
  6098                           ; 1 bytes @ 0x0
  6099                           
  6100  0070                     ?_LCDClear:	
  6101                           ; 1 bytes @ 0x0
  6102                           
  6103  0070                     ?_LCDInit:	
  6104                           ; 1 bytes @ 0x0
  6105                           
  6106  0070                     ?_PIN_MANAGER_Initialize:	
  6107                           ; 1 bytes @ 0x0
  6108                           
  6109  0070                     ??_PIN_MANAGER_Initialize:	
  6110                           ; 1 bytes @ 0x0
  6111                           
  6112  0070                     ?_PWM_Initialize:	
  6113                           ; 1 bytes @ 0x0
  6114                           
  6115  0070                     ??_PWM_Initialize:	
  6116                           ; 1 bytes @ 0x0
  6117                           
  6118  0070                     ?_PWM6_LoadDutyValue:	
  6119                           ; 1 bytes @ 0x0
  6120                           
  6121  0070                     ?_PWM7_LoadDutyValue:	
  6122                           ; 1 bytes @ 0x0
  6123                           
  6124  0070                     ?_PWM1_LoadDutyValue:	
  6125                           ; 1 bytes @ 0x0
  6126                           
  6127  0070                     ?_SYSTEM_Initialize:	
  6128                           ; 1 bytes @ 0x0
  6129                           
  6130  0070                     ?_main:	
  6131                           ; 1 bytes @ 0x0
  6132                           
  6133  0070                     ?__Umul8_16:	
  6134                           ; 1 bytes @ 0x0
  6135                           
  6136  0070                     ?_ADCRead:	
  6137                           ; 2 bytes @ 0x0
  6138                           
  6139  0070                     ?___awdiv:	
  6140                           ; 2 bytes @ 0x0
  6141                           
  6142  0070                     ?___lwmod:	
  6143                           ; 2 bytes @ 0x0
  6144                           
  6145  0070                     ?_frexp:	
  6146                           ; 2 bytes @ 0x0
  6147                           
  6148  0070                     ?___aldiv:	
  6149                           ; 4 bytes @ 0x0
  6150                           
  6151  0070                     ?___xxtofl:	
  6152                           ; 4 bytes @ 0x0
  6153                           
  6154  0070                     LCDWrite@data:	
  6155                           ; 4 bytes @ 0x0
  6156                           
  6157  0070                     PIN_MANAGER_Initialize@state:	
  6158                           ; 1 bytes @ 0x0
  6159                           
  6160  0070                     __Umul8_16@multiplicand:	
  6161                           ; 1 bytes @ 0x0
  6162                           
  6163  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6164                           ; 1 bytes @ 0x0
  6165                           
  6166  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6167                           ; 2 bytes @ 0x0
  6168                           
  6169  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6170                           ; 2 bytes @ 0x0
  6171                           
  6172  0070                     ___awdiv@divisor:	
  6173                           ; 2 bytes @ 0x0
  6174                           
  6175  0070                     ___lwmod@divisor:	
  6176                           ; 2 bytes @ 0x0
  6177                           
  6178  0070                     ___aldiv@divisor:	
  6179                           ; 2 bytes @ 0x0
  6180                           
  6181  0070                     ___flge@ff1:	
  6182                           ; 4 bytes @ 0x0
  6183                           
  6184  0070                     ___xxtofl@val:	
  6185                           ; 4 bytes @ 0x0
  6186                           
  6187  0070                     frexp@value:	
  6188                           ; 4 bytes @ 0x0
  6189                           
  6190                           
  6191                           ; 4 bytes @ 0x0
  6192  0070                     	ds	1
  6193  0071                     ??_LCDWrite:	
  6194                           
  6195                           ; 1 bytes @ 0x1
  6196  0071                     	ds	1
  6197  0072                     ??__Umul8_16:	
  6198  0072                     ??_PWM6_LoadDutyValue:	
  6199                           ; 1 bytes @ 0x2
  6200                           
  6201  0072                     ??_PWM7_LoadDutyValue:	
  6202                           ; 1 bytes @ 0x2
  6203                           
  6204  0072                     ??_PWM1_LoadDutyValue:	
  6205                           ; 1 bytes @ 0x2
  6206                           
  6207  0072                     LCDWrite@data_or_command:	
  6208                           ; 1 bytes @ 0x2
  6209                           
  6210  0072                     ___awdiv@dividend:	
  6211                           ; 1 bytes @ 0x2
  6212                           
  6213  0072                     ___lwmod@dividend:	
  6214                           ; 2 bytes @ 0x2
  6215                           
  6216                           
  6217                           ; 2 bytes @ 0x2
  6218  0072                     	ds	1
  6219  0073                     ??_ADCRead:	
  6220  0073                     ADCRead@channel:	
  6221                           ; 1 bytes @ 0x3
  6222                           
  6223  0073                     LCDWrite@d:	
  6224                           ; 1 bytes @ 0x3
  6225                           
  6226                           
  6227                           ; 1 bytes @ 0x3
  6228  0073                     	ds	1
  6229  0074                     ??_readButton:	
  6230  0074                     ??___awdiv:	
  6231                           ; 1 bytes @ 0x4
  6232                           
  6233  0074                     ??___lwmod:	
  6234                           ; 1 bytes @ 0x4
  6235                           
  6236  0074                     ??___xxtofl:	
  6237                           ; 1 bytes @ 0x4
  6238                           
  6239  0074                     LCDWrite@i:	
  6240                           ; 1 bytes @ 0x4
  6241                           
  6242  0074                     frexp@eptr:	
  6243                           ; 1 bytes @ 0x4
  6244                           
  6245  0074                     __Umul8_16@product:	
  6246                           ; 1 bytes @ 0x4
  6247                           
  6248  0074                     ___aldiv@dividend:	
  6249                           ; 2 bytes @ 0x4
  6250                           
  6251  0074                     ___flge@ff2:	
  6252                           ; 4 bytes @ 0x4
  6253                           
  6254                           
  6255                           ; 4 bytes @ 0x4
  6256  0074                     	ds	1
  6257  0075                     ??_frexp:	
  6258  0075                     ?_gotoXY:	
  6259                           ; 1 bytes @ 0x5
  6260                           
  6261  0075                     ??_LCDInit:	
  6262                           ; 1 bytes @ 0x5
  6263                           
  6264  0075                     gotoXY@y:	
  6265                           ; 1 bytes @ 0x5
  6266                           
  6267  0075                     ___awdiv@counter:	
  6268                           ; 1 bytes @ 0x5
  6269                           
  6270  0075                     ___lwmod@counter:	
  6271                           ; 1 bytes @ 0x5
  6272                           
  6273                           
  6274                           ; 1 bytes @ 0x5
  6275  0075                     	ds	1
  6276  0076                     ??_gotoXY:	
  6277  0076                     ___awdiv@sign:	
  6278                           ; 1 bytes @ 0x6
  6279                           
  6280  0076                     __Umul8_16@word_mpld:	
  6281                           ; 1 bytes @ 0x6
  6282                           
  6283                           
  6284                           ; 2 bytes @ 0x6
  6285  0076                     	ds	1
  6286  0077                     gotoXY@x:	
  6287  0077                     ___awdiv@quotient:	
  6288                           ; 1 bytes @ 0x7
  6289                           
  6290                           
  6291                           ; 2 bytes @ 0x7
  6292  0077                     	ds	1
  6293  0078                     ??_LCDClear:	
  6294  0078                     ??___aldiv:	
  6295                           ; 1 bytes @ 0x8
  6296                           
  6297  0078                     ___xxtofl@sign:	
  6298                           ; 1 bytes @ 0x8
  6299                           
  6300  0078                     __Umul8_16@multiplier:	
  6301                           ; 1 bytes @ 0x8
  6302                           
  6303                           
  6304                           ; 1 bytes @ 0x8
  6305  0078                     	ds	1
  6306  0079                     ?___wmul:	
  6307  0079                     ___xxtofl@exp:	
  6308                           ; 2 bytes @ 0x9
  6309                           
  6310  0079                     LCDClear@index:	
  6311                           ; 1 bytes @ 0x9
  6312                           
  6313  0079                     ___wmul@multiplier:	
  6314                           ; 2 bytes @ 0x9
  6315                           
  6316                           
  6317                           ; 2 bytes @ 0x9
  6318  0079                     	ds	1
  6319  007A                     ___xxtofl@arg:	
  6320                           
  6321                           ; 4 bytes @ 0xA
  6322  007A                     	ds	1
  6323  007B                     ??_SYSTEM_Initialize:	
  6324  007B                     ___wmul@multiplicand:	
  6325                           ; 1 bytes @ 0xB
  6326                           
  6327                           
  6328                           ; 2 bytes @ 0xB
  6329  007B                     	ds	2
  6330  007D                     ??___wmul:	
  6331                           
  6332                           ; 1 bytes @ 0xD
  6333  007D                     	ds	1
  6334  007E                     ??_tempCalc:	
  6335  007E                     ??___flsub:	
  6336                           ; 1 bytes @ 0xE
  6337                           
  6338                           
  6339                           	psect	cstackBANK0
  6340  0020                     __pcstackBANK0:	
  6341                           ; 1 bytes @ 0xE
  6342                           
  6343  0020                     ??___flge:	
  6344  0020                     ?___fldiv:	
  6345                           ; 1 bytes @ 0x0
  6346                           
  6347  0020                     ___aldiv@counter:	
  6348                           ; 4 bytes @ 0x0
  6349                           
  6350  0020                     ___wmul@product:	
  6351                           ; 1 bytes @ 0x0
  6352                           
  6353  0020                     ___fldiv@a:	
  6354                           ; 2 bytes @ 0x0
  6355                           
  6356                           
  6357                           ; 4 bytes @ 0x0
  6358  0020                     	ds	1
  6359  0021                     ___aldiv@sign:	
  6360                           
  6361                           ; 1 bytes @ 0x1
  6362  0021                     	ds	1
  6363  0022                     ??_LCDWriteCharacter:	
  6364  0022                     ___aldiv@quotient:	
  6365                           ; 1 bytes @ 0x2
  6366                           
  6367                           
  6368                           ; 4 bytes @ 0x2
  6369  0022                     	ds	2
  6370  0024                     ___fldiv@b:	
  6371                           
  6372                           ; 4 bytes @ 0x4
  6373  0024                     	ds	1
  6374  0025                     LCDWriteCharacter@character:	
  6375                           
  6376                           ; 1 bytes @ 0x5
  6377  0025                     	ds	1
  6378  0026                     ?_readAnalog:	
  6379  0026                     readAnalog@channel:	
  6380                           ; 2 bytes @ 0x6
  6381                           
  6382  0026                     LCDWriteCharacter@base:	
  6383                           ; 2 bytes @ 0x6
  6384                           
  6385                           
  6386                           ; 2 bytes @ 0x6
  6387  0026                     	ds	2
  6388  0028                     ??_readAnalog:	
  6389  0028                     ?_LCDWriteInt:	
  6390                           ; 1 bytes @ 0x8
  6391                           
  6392  0028                     ??___fldiv:	
  6393                           ; 1 bytes @ 0x8
  6394                           
  6395  0028                     LCDWriteInt@value:	
  6396                           ; 1 bytes @ 0x8
  6397                           
  6398                           
  6399                           ; 2 bytes @ 0x8
  6400  0028                     	ds	2
  6401  002A                     LCDWriteInt@fieldLength:	
  6402                           
  6403                           ; 1 bytes @ 0xA
  6404  002A                     	ds	1
  6405  002B                     LCDWriteInt@numPlaces:	
  6406                           
  6407                           ; 1 bytes @ 0xB
  6408  002B                     	ds	1
  6409  002C                     LCDWriteInt@sign:	
  6410                           
  6411                           ; 1 bytes @ 0xC
  6412  002C                     	ds	1
  6413  002D                     ??_LCDWriteInt:	
  6414  002D                     ___fldiv@sign:	
  6415                           ; 1 bytes @ 0xD
  6416                           
  6417                           
  6418                           ; 1 bytes @ 0xD
  6419  002D                     	ds	1
  6420  002E                     ___fldiv@rem:	
  6421                           
  6422                           ; 4 bytes @ 0xE
  6423  002E                     	ds	3
  6424  0031                     LCDWriteInt@str:	
  6425                           
  6426                           ; 5 bytes @ 0x11
  6427  0031                     	ds	1
  6428  0032                     ___fldiv@new_exp:	
  6429                           
  6430                           ; 2 bytes @ 0x12
  6431  0032                     	ds	2
  6432  0034                     ___fldiv@grs:	
  6433                           
  6434                           ; 4 bytes @ 0x14
  6435  0034                     	ds	2
  6436  0036                     LCDWriteInt@j:	
  6437                           
  6438                           ; 1 bytes @ 0x16
  6439  0036                     	ds	1
  6440  0037                     LCDWriteInt@i:	
  6441                           
  6442                           ; 1 bytes @ 0x17
  6443  0037                     	ds	1
  6444  0038                     ___fldiv@bexp:	
  6445                           
  6446                           ; 1 bytes @ 0x18
  6447  0038                     	ds	1
  6448  0039                     ___fldiv@aexp:	
  6449                           
  6450                           ; 1 bytes @ 0x19
  6451  0039                     	ds	1
  6452  003A                     ?___fltol:	
  6453  003A                     ?___flmul:	
  6454                           ; 4 bytes @ 0x1A
  6455                           
  6456  003A                     readAnalog@analog_channel:	
  6457                           ; 4 bytes @ 0x1A
  6458                           
  6459  003A                     ___fltol@f1:	
  6460                           ; 2 bytes @ 0x1A
  6461                           
  6462  003A                     ___flmul@b:	
  6463                           ; 4 bytes @ 0x1A
  6464                           
  6465                           
  6466                           ; 4 bytes @ 0x1A
  6467  003A                     	ds	2
  6468  003C                     readAnalog@value:	
  6469                           
  6470                           ; 2 bytes @ 0x1C
  6471  003C                     	ds	2
  6472  003E                     ??___fltol:	
  6473  003E                     ___flmul@a:	
  6474                           ; 1 bytes @ 0x1E
  6475                           
  6476                           
  6477                           ; 4 bytes @ 0x1E
  6478  003E                     	ds	4
  6479  0042                     ??___flmul:	
  6480                           
  6481                           ; 1 bytes @ 0x22
  6482  0042                     	ds	1
  6483  0043                     ___fltol@sign1:	
  6484                           
  6485                           ; 1 bytes @ 0x23
  6486  0043                     	ds	1
  6487  0044                     ___fltol@exp1:	
  6488                           
  6489                           ; 1 bytes @ 0x24
  6490  0044                     	ds	1
  6491  0045                     ??_calculateCurrent0:	
  6492  0045                     ??_calculateCurrent1:	
  6493                           ; 1 bytes @ 0x25
  6494                           
  6495                           
  6496                           ; 1 bytes @ 0x25
  6497  0045                     	ds	2
  6498  0047                     ___flmul@sign:	
  6499                           
  6500                           ; 1 bytes @ 0x27
  6501  0047                     	ds	1
  6502  0048                     ___flmul@grs:	
  6503                           
  6504                           ; 4 bytes @ 0x28
  6505  0048                     	ds	4
  6506  004C                     ___flmul@aexp:	
  6507                           
  6508                           ; 1 bytes @ 0x2C
  6509  004C                     	ds	1
  6510  004D                     ___flmul@bexp:	
  6511                           
  6512                           ; 1 bytes @ 0x2D
  6513  004D                     	ds	1
  6514  004E                     ___flmul@prod:	
  6515                           
  6516                           ; 4 bytes @ 0x2E
  6517  004E                     	ds	4
  6518  0052                     ___flmul@temp:	
  6519                           
  6520                           ; 2 bytes @ 0x32
  6521  0052                     	ds	2
  6522  0054                     ?___fladd:	
  6523  0054                     ___fladd@b:	
  6524                           ; 4 bytes @ 0x34
  6525                           
  6526                           
  6527                           ; 4 bytes @ 0x34
  6528  0054                     	ds	4
  6529  0058                     ___fladd@a:	
  6530                           
  6531                           ; 4 bytes @ 0x38
  6532  0058                     	ds	4
  6533  005C                     ??___fladd:	
  6534                           
  6535                           ; 1 bytes @ 0x3C
  6536  005C                     	ds	12
  6537  0068                     ___fladd@signs:	
  6538                           
  6539                           ; 1 bytes @ 0x48
  6540  0068                     	ds	1
  6541  0069                     ___fladd@aexp:	
  6542                           
  6543                           ; 1 bytes @ 0x49
  6544  0069                     	ds	1
  6545  006A                     ___fladd@bexp:	
  6546                           
  6547                           ; 1 bytes @ 0x4A
  6548  006A                     	ds	1
  6549  006B                     ___fladd@grs:	
  6550                           
  6551                           ; 1 bytes @ 0x4B
  6552  006B                     	ds	1
  6553  006C                     eval_poly@res:	
  6554                           
  6555                           ; 4 bytes @ 0x4C
  6556  006C                     	ds	4
  6557                           
  6558                           	psect	maintext
  6559  0236                     __pmaintext:	
  6560 ;;
  6561 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6562 ;;
  6563 ;; *************** function _main *****************
  6564 ;; Defined at:
  6565 ;;		line 40 in file "main.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;		None
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;  efficiency      4   62[BANK1 ] float 
  6570 ;;  dutyCycle6      2   74[BANK1 ] unsigned int 
  6571 ;;  MPPT0           2   71[BANK1 ] int 
  6572 ;;  dutyCycle7      2   69[BANK1 ] unsigned int 
  6573 ;;  dutyCycle1      2   66[BANK1 ] unsigned int 
  6574 ;;  IOutTotal       2   56[BANK1 ] int 
  6575 ;;  faultNotRese    2   48[BANK1 ] unsigned int 
  6576 ;;  faultCount      2   46[BANK1 ] unsigned int 
  6577 ;;  MPPT1           2   44[BANK1 ] int 
  6578 ;;  batteryTemp     2   37[BANK1 ] int 
  6579 ;;  j               1   73[BANK1 ] unsigned char 
  6580 ;;  menuButton      1   68[BANK1 ] unsigned char 
  6581 ;;  displayRefre    1   51[BANK1 ] unsigned char 
  6582 ;;  slowLoop        1   50[BANK1 ] unsigned char 
  6583 ;;  fastLoop        1   39[BANK1 ] unsigned char 
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  1    wreg      void 
  6586 ;; Registers used:
  6587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6588 ;; Tracked objects:
  6589 ;;		On entry : B1F/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Locals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;      Totals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;Total ram usage:       41 bytes
  6598 ;; Hardware stack levels required when called:    5
  6599 ;; This function calls:
  6600 ;;		_ADCRead
  6601 ;;		_Battery_State_Machine
  6602 ;;		_LCDClear
  6603 ;;		_LCDInit
  6604 ;;		_LCDWriteCharacter
  6605 ;;		_LCDWriteInt
  6606 ;;		_PWM1_LoadDutyValue
  6607 ;;		_PWM6_LoadDutyValue
  6608 ;;		_PWM7_LoadDutyValue
  6609 ;;		_SYSTEM_Initialize
  6610 ;;		___awdiv
  6611 ;;		___fldiv
  6612 ;;		___flmul
  6613 ;;		___fltol
  6614 ;;		___wmul
  6615 ;;		___xxtofl
  6616 ;;		_calculateCurrent0
  6617 ;;		_calculateCurrent1
  6618 ;;		_cc_cv_mode
  6619 ;;		_gotoXY
  6620 ;;		_readAnalog
  6621 ;;		_readButton
  6622 ;;		_tempCalc
  6623 ;; This function is called by:
  6624 ;;		Startup code after reset
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           
  6629                           ;psect for function _main
  6630  0236                     _main:	
  6631                           
  6632                           ;main.c: 42: int16_t MPPT0 = 3144;
  6633                           
  6634                           ;incstack = 0
  6635                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6636  0236  3048               	movlw	72
  6637  0237  0021               	movlb	1	; select bank1
  6638  0238  00E7               	movwf	main@MPPT0^(0+128)
  6639  0239  300C               	movlw	12
  6640  023A  00E8               	movwf	(main@MPPT0^(0+128)+1)
  6641                           
  6642                           ;main.c: 43: int16_t MPPT1 = 3144;
  6643  023B  3048               	movlw	72
  6644  023C  00CC               	movwf	main@MPPT1^(0+128)
  6645  023D  300C               	movlw	12
  6646  023E  00CD               	movwf	(main@MPPT1^(0+128)+1)
  6647                           
  6648                           ;main.c: 45: uint16_t dutyCycle6 = 1023;
  6649  023F  30FF               	movlw	255
  6650  0240  00EA               	movwf	main@dutyCycle6^(0+128)
  6651  0241  3003               	movlw	3
  6652  0242  00EB               	movwf	(main@dutyCycle6^(0+128)+1)
  6653                           
  6654                           ;main.c: 46: uint16_t dutyCycle7 = 256;
  6655  0243  3000               	movlw	0
  6656  0244  00E5               	movwf	main@dutyCycle7^(0+128)
  6657  0245  3001               	movlw	1
  6658  0246  00E6               	movwf	(main@dutyCycle7^(0+128)+1)
  6659                           
  6660                           ;main.c: 47: uint16_t dutyCycle1 = 60;
  6661  0247  303C               	movlw	60
  6662  0248  00E2               	movwf	main@dutyCycle1^(0+128)
  6663  0249  3000               	movlw	0
  6664  024A  00E3               	movwf	(main@dutyCycle1^(0+128)+1)
  6665                           
  6666                           ;main.c: 48: int16_t IOutTotal = 0;
  6667  024B  01D8               	clrf	main@IOutTotal^(0+128)
  6668  024C  01D9               	clrf	(main@IOutTotal+1)^(0+128)
  6669                           
  6670                           ;main.c: 50: uint8_t j = 0;
  6671  024D  01E9               	clrf	main@j^(0+128)
  6672                           
  6673                           ;main.c: 52: uint8_t fastLoop = 0;
  6674  024E  01C7               	clrf	main@fastLoop^(0+128)
  6675                           
  6676                           ;main.c: 53: uint8_t slowLoop = 200;
  6677  024F  30C8               	movlw	200
  6678  0250  00C3               	movwf	??_main^(0+128)
  6679  0251  0843               	movf	??_main^(0+128),w
  6680  0252  00D2               	movwf	main@slowLoop^(0+128)
  6681                           
  6682                           ;main.c: 54: uint8_t displayRefresh = 0;
  6683  0253  01D3               	clrf	main@displayRefresh^(0+128)
  6684                           
  6685                           ;main.c: 55: int16_t batteryTemp = 250;
  6686  0254  30FA               	movlw	250
  6687  0255  00C5               	movwf	main@batteryTemp^(0+128)
  6688  0256  3000               	movlw	0
  6689  0257  00C6               	movwf	(main@batteryTemp^(0+128)+1)
  6690                           
  6691                           ;main.c: 56: float efficiency = 0;
  6692  0258  3000               	movlw	0
  6693  0259  00E1               	movwf	(main@efficiency+3)^(0+128)
  6694  025A  3000               	movlw	0
  6695  025B  00E0               	movwf	(main@efficiency+2)^(0+128)
  6696  025C  3000               	movlw	0
  6697  025D  00DF               	movwf	(main@efficiency+1)^(0+128)
  6698  025E  3000               	movlw	0
  6699  025F  00DE               	movwf	main@efficiency^(0+128)
  6700                           
  6701                           ;main.c: 57: extern int8_t Imode0;
  6702                           ;main.c: 58: extern int16_t Vref;
  6703                           ;main.c: 59: extern int16_t Iref;
  6704                           ;main.c: 60: uint8_t menuButton = 0;
  6705  0260  01E4               	clrf	main@menuButton^(0+128)
  6706                           
  6707                           ;main.c: 61: uint16_t faultCount = 0;
  6708  0261  01CE               	clrf	main@faultCount^(0+128)
  6709  0262  01CF               	clrf	(main@faultCount+1)^(0+128)
  6710                           
  6711                           ;main.c: 62: uint16_t faultNotReset = 0;
  6712  0263  01D0               	clrf	main@faultNotReset^(0+128)
  6713  0264  01D1               	clrf	(main@faultNotReset+1)^(0+128)
  6714                           
  6715                           ;main.c: 64: SYSTEM_Initialize();
  6716  0265  3191  212F  3182   	fcall	_SYSTEM_Initialize
  6717                           
  6718                           ;main.c: 66: LCDClear();
  6719  0268  319F  27AE  3182   	fcall	_LCDClear
  6720  026B                     l3681:	
  6721                           ;main.c: 68: void calculateCurrent0(void);
  6722                           ;main.c: 69: void calculateCurrent1(void);
  6723                           ;main.c: 70: void calculateCurrent2(void);
  6724                           ;main.c: 71: void calculateCurrent3(void);
  6725                           ;main.c: 85: while (1)
  6726                           
  6727                           
  6728                           ;main.c: 86: {
  6729                           ;main.c: 87: if(!RB2)
  6730  026B  0020               	movlb	0	; select bank0
  6731  026C  190D               	btfsc	13,2	;volatile
  6732  026D  2A85               	goto	l3693
  6733                           
  6734                           ;main.c: 88: {
  6735                           ;main.c: 89: LATA5=0;
  6736  026E  1296               	bcf	22,5	;volatile
  6737                           
  6738                           ;main.c: 90: _delay((unsigned long)((200)*(32000000/4000000.0)));
  6739  026F  30E4               	movlw	228
  6740  0270                     u4897:	
  6741  0270  3200               	nop2
  6742  0271  3200               	nop2
  6743  0272  0B89               	decfsz	9,f
  6744  0273  2A70               	goto	u4897
  6745  0274  3200               	nop2
  6746  0275  3200               	nop2
  6747                           
  6748                           ;main.c: 91: faultCount+=1;
  6749  0276  3001               	movlw	1
  6750  0277  0021               	movlb	1	; select bank1
  6751  0278  07CE               	addwf	main@faultCount^(0+128),f
  6752  0279  3000               	movlw	0
  6753  027A  3DCF               	addwfc	(main@faultCount+1)^(0+128),f
  6754                           
  6755                           ;main.c: 92: if(!RB2)
  6756  027B  0020               	movlb	0	; select bank0
  6757  027C  190D               	btfsc	13,2	;volatile
  6758  027D  2A83               	goto	l3691
  6759                           
  6760                           ;main.c: 93: {
  6761                           ;main.c: 94: faultNotReset+=1;
  6762  027E  3001               	movlw	1
  6763  027F  0021               	movlb	1	; select bank1
  6764  0280  07D0               	addwf	main@faultNotReset^(0+128),f
  6765  0281  3000               	movlw	0
  6766  0282  3DD1               	addwfc	(main@faultNotReset+1)^(0+128),f
  6767  0283                     l3691:	
  6768                           
  6769                           ;main.c: 95: }
  6770                           ;main.c: 96: LATA5=1;
  6771  0283  0020               	movlb	0	; select bank0
  6772  0284  1696               	bsf	22,5	;volatile
  6773  0285                     l3693:	
  6774                           
  6775                           ;main.c: 97: }
  6776                           ;main.c: 98: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  6777  0285  0021               	movlb	1	; select bank1
  6778  0286  01E9               	clrf	main@j^(0+128)
  6779  0287  3008               	movlw	8
  6780  0288  0269               	subwf	main@j^(0+128),w
  6781  0289  1803               	btfsc	3,0
  6782  028A  2AAC               	goto	l3705
  6783  028B                     l3699:	
  6784  028B  0869               	movf	main@j^(0+128),w
  6785  028C  00C3               	movwf	??_main^(0+128)
  6786  028D  01C4               	clrf	(??_main^(0+128)+1)
  6787  028E  0843               	movf	??_main^(0+128),w
  6788  028F  0020               	movlb	0	; select bank0
  6789  0290  00A6               	movwf	readAnalog@channel
  6790  0291  0021               	movlb	1	; select bank1
  6791  0292  0844               	movf	(??_main+1)^(0+128),w
  6792  0293  0020               	movlb	0	; select bank0
  6793  0294  00A7               	movwf	readAnalog@channel+1
  6794  0295  3189  2140  3182   	fcall	_readAnalog
  6795  0298  0021               	movlb	1	; select bank1
  6796  0299  3569               	lslf	main@j^(0+128),w
  6797  029A  3E20               	addlw	(low (_analogs| (0+256)))& (0+255)
  6798  029B  0086               	movwf	6
  6799  029C  3001               	movlw	1	; select bank2/3
  6800  029D  0087               	movwf	7
  6801  029E  0020               	movlb	0	; select bank0
  6802  029F  0826               	movf	?_readAnalog,w
  6803  02A0  3FC0               	movwi [0]fsr1
  6804  02A1  0827               	movf	?_readAnalog+1,w
  6805  02A2  3FC1               	movwi [1]fsr1
  6806  02A3  3001               	movlw	1
  6807  02A4  0021               	movlb	1	; select bank1
  6808  02A5  00C3               	movwf	??_main^(0+128)
  6809  02A6  0843               	movf	??_main^(0+128),w
  6810  02A7  07E9               	addwf	main@j^(0+128),f
  6811  02A8  3008               	movlw	8
  6812  02A9  0269               	subwf	main@j^(0+128),w
  6813  02AA  1C03               	skipc
  6814  02AB  2A8B               	goto	l3699
  6815  02AC                     l3705:	
  6816                           
  6817                           ;main.c: 101: voltage[0]=(int16_t)(analogs[0]/.20885);
  6818  02AC  0022               	movlb	2	; select bank2
  6819  02AD  0820               	movf	_analogs^(0+256),w
  6820  02AE  00F0               	movwf	___xxtofl@val
  6821  02AF  0821               	movf	(_analogs+1)^(0+256),w
  6822  02B0  00F1               	movwf	___xxtofl@val+1
  6823  02B1  0D89               	rlf	9,f
  6824  02B2  3B89               	subwfb	9,f
  6825  02B3  0989               	comf	9,f
  6826  02B4  00F2               	movwf	___xxtofl@val+2
  6827  02B5  00F3               	movwf	___xxtofl@val+3
  6828  02B6  3001               	movlw	1
  6829  02B7  3195  2582  3182   	fcall	___xxtofl
  6830  02BA  0873               	movf	?___xxtofl+3,w
  6831  02BB  0020               	movlb	0	; select bank0
  6832  02BC  00A7               	movwf	___fldiv@b+3
  6833  02BD  0872               	movf	?___xxtofl+2,w
  6834  02BE  00A6               	movwf	___fldiv@b+2
  6835  02BF  0871               	movf	?___xxtofl+1,w
  6836  02C0  00A5               	movwf	___fldiv@b+1
  6837  02C1  0870               	movf	?___xxtofl,w
  6838  02C2  00A4               	movwf	___fldiv@b
  6839  02C3  303E               	movlw	62
  6840  02C4  00A3               	movwf	___fldiv@a+3
  6841  02C5  3055               	movlw	85
  6842  02C6  00A2               	movwf	___fldiv@a+2
  6843  02C7  30DC               	movlw	220
  6844  02C8  00A1               	movwf	___fldiv@a+1
  6845  02C9  30C6               	movlw	198
  6846  02CA  00A0               	movwf	___fldiv@a
  6847  02CB  318A  228C  3182   	fcall	___fldiv
  6848  02CE  0020               	movlb	0	; select bank0
  6849  02CF  0823               	movf	?___fldiv+3,w
  6850  02D0  00BD               	movwf	___fltol@f1+3
  6851  02D1  0822               	movf	?___fldiv+2,w
  6852  02D2  00BC               	movwf	___fltol@f1+2
  6853  02D3  0821               	movf	?___fldiv+1,w
  6854  02D4  00BB               	movwf	___fltol@f1+1
  6855  02D5  0820               	movf	?___fldiv,w
  6856  02D6  00BA               	movwf	___fltol@f1
  6857  02D7  3193  23FA  3182   	fcall	___fltol
  6858  02DA  0020               	movlb	0	; select bank0
  6859  02DB  083B               	movf	?___fltol+1,w
  6860  02DC  0022               	movlb	2	; select bank2
  6861  02DD  00B9               	movwf	(_voltage+1)^(0+256)
  6862  02DE  0020               	movlb	0	; select bank0
  6863  02DF  083A               	movf	?___fltol,w
  6864  02E0  0022               	movlb	2	; select bank2
  6865  02E1  00B8               	movwf	_voltage^(0+256)
  6866                           
  6867                           ;main.c: 103: voltage[1]=(int16_t)(analogs[1]/.54503);
  6868  02E2  0822               	movf	(_analogs^(0+256)+2),w
  6869  02E3  00F0               	movwf	___xxtofl@val
  6870  02E4  0823               	movf	((_analogs+1)^(0+256)+2),w
  6871  02E5  00F1               	movwf	___xxtofl@val+1
  6872  02E6  0D89               	rlf	9,f
  6873  02E7  3B89               	subwfb	9,f
  6874  02E8  0989               	comf	9,f
  6875  02E9  00F2               	movwf	___xxtofl@val+2
  6876  02EA  00F3               	movwf	___xxtofl@val+3
  6877  02EB  3001               	movlw	1
  6878  02EC  3195  2582  3182   	fcall	___xxtofl
  6879  02EF  0873               	movf	?___xxtofl+3,w
  6880  02F0  0020               	movlb	0	; select bank0
  6881  02F1  00A7               	movwf	___fldiv@b+3
  6882  02F2  0872               	movf	?___xxtofl+2,w
  6883  02F3  00A6               	movwf	___fldiv@b+2
  6884  02F4  0871               	movf	?___xxtofl+1,w
  6885  02F5  00A5               	movwf	___fldiv@b+1
  6886  02F6  0870               	movf	?___xxtofl,w
  6887  02F7  00A4               	movwf	___fldiv@b
  6888  02F8  303F               	movlw	63
  6889  02F9  00A3               	movwf	___fldiv@a+3
  6890  02FA  300B               	movlw	11
  6891  02FB  00A2               	movwf	___fldiv@a+2
  6892  02FC  3087               	movlw	135
  6893  02FD  00A1               	movwf	___fldiv@a+1
  6894  02FE  3016               	movlw	22
  6895  02FF  00A0               	movwf	___fldiv@a
  6896  0300  318A  228C  3182   	fcall	___fldiv
  6897  0303  0020               	movlb	0	; select bank0
  6898  0304  0823               	movf	?___fldiv+3,w
  6899  0305  00BD               	movwf	___fltol@f1+3
  6900  0306  0822               	movf	?___fldiv+2,w
  6901  0307  00BC               	movwf	___fltol@f1+2
  6902  0308  0821               	movf	?___fldiv+1,w
  6903  0309  00BB               	movwf	___fltol@f1+1
  6904  030A  0820               	movf	?___fldiv,w
  6905  030B  00BA               	movwf	___fltol@f1
  6906  030C  3193  23FA  3182   	fcall	___fltol
  6907  030F  0020               	movlb	0	; select bank0
  6908  0310  083B               	movf	?___fltol+1,w
  6909  0311  0022               	movlb	2	; select bank2
  6910  0312  00BB               	movwf	((_voltage+1)^(0+256)+2)
  6911  0313  0020               	movlb	0	; select bank0
  6912  0314  083A               	movf	?___fltol,w
  6913  0315  0022               	movlb	2	; select bank2
  6914  0316  00BA               	movwf	(_voltage^(0+256)+2)
  6915                           
  6916                           ;main.c: 109: calculateCurrent0();
  6917  0317  3192  2299  3182   	fcall	_calculateCurrent0
  6918                           
  6919                           ;main.c: 112: calculateCurrent1();
  6920  031A  3192  22EA  3182   	fcall	_calculateCurrent1
  6921                           
  6922                           ;main.c: 117: if(Imode0)
  6923  031D  0021               	movlb	1	; select bank1
  6924  031E  086E               	movf	_Imode0^(0+128),w
  6925  031F  1903               	btfsc	3,2
  6926  0320  2B2F               	goto	l3723
  6927                           
  6928                           ;main.c: 118: {
  6929                           ;main.c: 119: if(voltage[0]<MPPT0)
  6930  0321  0022               	movlb	2	; select bank2
  6931  0322  0839               	movf	(_voltage+1)^(0+256),w
  6932  0323  3A80               	xorlw	128
  6933  0324  0021               	movlb	1	; select bank1
  6934  0325  00C3               	movwf	??_main^(0+128)
  6935  0326  0868               	movf	(main@MPPT0+1)^(0+128),w
  6936  0327  3A80               	xorlw	128
  6937  0328  0243               	subwf	??_main^(0+128),w
  6938  0329  1D03               	skipz
  6939  032A  2B3E               	goto	u4745
  6940  032B  0867               	movf	main@MPPT0^(0+128),w
  6941  032C  0022               	movlb	2	; select bank2
  6942  032D  0238               	subwf	_voltage^(0+256),w
  6943  032E  2B3E               	goto	u4745
  6944  032F                     l3723:	
  6945                           ;main.c: 141: }
  6946                           ;main.c: 142: }
  6947                           
  6948                           ;main.c: 139: {
  6949                           
  6950                           ;main.c: 136: }
  6951                           ;main.c: 137: }
  6952                           
  6953                           ;main.c: 134: {
  6954                           
  6955                           ;main.c: 127: {
  6956                           ;main.c: 128: dutyCycle6-=1;
  6957                           
  6958                           ;main.c: 126: else if(dutyCycle6>0)
  6959                           
  6960                           ;main.c: 124: }
  6961                           ;main.c: 125: }
  6962                           
  6963                           ;main.c: 122: {
  6964                           ;main.c: 123: dutyCycle6+=1;
  6965                           
  6966                           ;main.c: 120: {
  6967                           ;main.c: 121: if(dutyCycle6<1023)
  6968                           
  6969                           
  6970                           ;main.c: 143: else
  6971                           ;main.c: 144: {
  6972                           ;main.c: 145: if(voltage[1]>(int16_t)Vref)
  6973  032F  0022               	movlb	2	; select bank2
  6974  0330  0865               	movf	(_Vref+1)^(0+256),w
  6975  0331  3A80               	xorlw	128
  6976  0332  0021               	movlb	1	; select bank1
  6977  0333  00C3               	movwf	??_main^(0+128)
  6978  0334  0022               	movlb	2	; select bank2
  6979  0335  083B               	movf	((_voltage+1)^(0+256)+2),w
  6980  0336  3A80               	xorlw	128
  6981  0337  0021               	movlb	1	; select bank1
  6982  0338  0243               	subwf	??_main^(0+128),w
  6983  0339  1D03               	skipz
  6984  033A  2B3E               	goto	u4745
  6985  033B  0022               	movlb	2	; select bank2
  6986  033C  083A               	movf	(_voltage^(0+256)+2),w
  6987  033D  0264               	subwf	_Vref^(0+256),w
  6988  033E                     u4745:	
  6989  033E  1803               	skipnc
  6990  033F  2B4D               	goto	l3729
  6991                           
  6992                           ;main.c: 146: {
  6993                           ;main.c: 147: if(dutyCycle6<1023) dutyCycle6+=1;
  6994  0340  3003               	movlw	3
  6995  0341  0021               	movlb	1	; select bank1
  6996  0342  026B               	subwf	(main@dutyCycle6+1)^(0+128),w
  6997  0343  30FF               	movlw	255
  6998  0344  1903               	skipnz
  6999  0345  026A               	subwf	main@dutyCycle6^(0+128),w
  7000  0346  1803               	skipnc
  7001  0347  2B56               	goto	l3735
  7002  0348  3001               	movlw	1
  7003  0349  07EA               	addwf	main@dutyCycle6^(0+128),f
  7004  034A  3000               	movlw	0
  7005  034B  3DEB               	addwfc	(main@dutyCycle6+1)^(0+128),f
  7006                           
  7007                           ;main.c: 148: }
  7008  034C  2B56               	goto	l3735
  7009  034D                     l3729:	
  7010                           
  7011                           ;main.c: 149: else
  7012                           ;main.c: 150: {
  7013                           ;main.c: 151: if(dutyCycle6>0) dutyCycle6-=1;;
  7014  034D  0021               	movlb	1	; select bank1
  7015  034E  086A               	movf	main@dutyCycle6^(0+128),w
  7016  034F  046B               	iorwf	(main@dutyCycle6+1)^(0+128),w
  7017  0350  1903               	btfsc	3,2
  7018  0351  2B56               	goto	l3735
  7019  0352  3001               	movlw	1
  7020  0353  02EA               	subwf	main@dutyCycle6^(0+128),f
  7021  0354  3000               	movlw	0
  7022  0355  3BEB               	subwfb	(main@dutyCycle6+1)^(0+128),f
  7023  0356                     l3735:	
  7024                           ;main.c: 158: else
  7025                           ;main.c: 159: {
  7026                           
  7027                           ;main.c: 155: {
  7028                           ;main.c: 157: }
  7029                           
  7030                           
  7031                           ;main.c: 161: }
  7032                           ;main.c: 163: }
  7033                           ;main.c: 165: slowLoop+=1;
  7034  0356  3001               	movlw	1
  7035  0357  00C3               	movwf	??_main^(0+128)
  7036  0358  0843               	movf	??_main^(0+128),w
  7037  0359  07D2               	addwf	main@slowLoop^(0+128),f
  7038                           
  7039                           ;main.c: 167: PWM1_LoadDutyValue(dutyCycle1);
  7040  035A  0863               	movf	(main@dutyCycle1+1)^(0+128),w
  7041  035B  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  7042  035C  0862               	movf	main@dutyCycle1^(0+128),w
  7043  035D  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  7044  035E  319E  26B2  3182   	fcall	_PWM1_LoadDutyValue
  7045                           
  7046                           ;main.c: 168: PWM6_LoadDutyValue(dutyCycle6);
  7047  0361  0021               	movlb	1	; select bank1
  7048  0362  086B               	movf	(main@dutyCycle6+1)^(0+128),w
  7049  0363  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7050  0364  086A               	movf	main@dutyCycle6^(0+128),w
  7051  0365  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7052  0366  319E  26C8  3182   	fcall	_PWM6_LoadDutyValue
  7053                           
  7054                           ;main.c: 169: PWM7_LoadDutyValue(dutyCycle7);
  7055  0369  0021               	movlb	1	; select bank1
  7056  036A  0866               	movf	(main@dutyCycle7+1)^(0+128),w
  7057  036B  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7058  036C  0865               	movf	main@dutyCycle7^(0+128),w
  7059  036D  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7060  036E  319E  26DE  3182   	fcall	_PWM7_LoadDutyValue
  7061                           
  7062                           ;main.c: 171: menuButton = readButton();
  7063  0371  3194  24FB  3182   	fcall	_readButton
  7064  0374  0021               	movlb	1	; select bank1
  7065  0375  00C3               	movwf	??_main^(0+128)
  7066  0376  0843               	movf	??_main^(0+128),w
  7067  0377  00E4               	movwf	main@menuButton^(0+128)
  7068                           
  7069                           ;main.c: 172: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  7070  0378  3002               	movlw	2
  7071  0379  0664               	xorwf	main@menuButton^(0+128),w
  7072  037A  1D03               	btfss	3,2
  7073  037B  2B8C               	goto	l3749
  7074  037C  0868               	movf	(main@MPPT0+1)^(0+128),w
  7075  037D  3A80               	xorlw	128
  7076  037E  00C3               	movwf	??_main^(0+128)
  7077  037F  308A               	movlw	138
  7078  0380  0243               	subwf	??_main^(0+128),w
  7079  0381  1D03               	skipz
  7080  0382  2B85               	goto	u4785
  7081  0383  30F1               	movlw	241
  7082  0384  0267               	subwf	main@MPPT0^(0+128),w
  7083  0385                     u4785:	
  7084  0385  1C03               	skipc
  7085  0386  2B8C               	goto	l3749
  7086  0387  30F6               	movlw	246
  7087  0388  0021               	movlb	1	; select bank1
  7088  0389  07E7               	addwf	main@MPPT0^(0+128),f
  7089  038A  30FF               	movlw	255
  7090  038B  3DE8               	addwfc	(main@MPPT0+1)^(0+128),f
  7091  038C                     l3749:	
  7092                           
  7093                           ;main.c: 173: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  7094  038C  3003               	movlw	3
  7095  038D  0021               	movlb	1	; select bank1
  7096  038E  0664               	xorwf	main@menuButton^(0+128),w
  7097  038F  1D03               	btfss	3,2
  7098  0390  2BA1               	goto	l3755
  7099  0391  0868               	movf	(main@MPPT0+1)^(0+128),w
  7100  0392  3A80               	xorlw	128
  7101  0393  00C3               	movwf	??_main^(0+128)
  7102  0394  308D               	movlw	141
  7103  0395  0243               	subwf	??_main^(0+128),w
  7104  0396  1D03               	skipz
  7105  0397  2B9A               	goto	u4805
  7106  0398  3048               	movlw	72
  7107  0399  0267               	subwf	main@MPPT0^(0+128),w
  7108  039A                     u4805:	
  7109  039A  1803               	skipnc
  7110  039B  2BA1               	goto	l3755
  7111  039C  300A               	movlw	10
  7112  039D  0021               	movlb	1	; select bank1
  7113  039E  07E7               	addwf	main@MPPT0^(0+128),f
  7114  039F  3000               	movlw	0
  7115  03A0  3DE8               	addwfc	(main@MPPT0+1)^(0+128),f
  7116  03A1                     l3755:	
  7117                           
  7118                           ;main.c: 174: if(menuButton == 1)LCDInit();
  7119  03A1  0021               	movlb	1	; select bank1
  7120  03A2  0364               	decf	main@menuButton^(0+128),w
  7121  03A3  1D03               	btfss	3,2
  7122  03A4  2BA8               	goto	l3759
  7123  03A5  3191  21CF  3182   	fcall	_LCDInit
  7124  03A8                     l3759:	
  7125                           
  7126                           ;main.c: 178: if(slowLoop>50)
  7127  03A8  3033               	movlw	51
  7128  03A9  0021               	movlb	1	; select bank1
  7129  03AA  0252               	subwf	main@slowLoop^(0+128),w
  7130  03AB  1C03               	skipc
  7131  03AC  2A6B               	goto	l3681
  7132                           
  7133                           ;main.c: 179: {
  7134                           ;main.c: 181: IOutTotal=current[1]+current[3];
  7135  03AD  3006               	movlw	6
  7136  03AE  3E30               	addlw	(low (_current| (0+256)))& (0+255)
  7137  03AF  0086               	movwf	6
  7138  03B0  3001               	movlw	1	; select bank2/3
  7139  03B1  0087               	movwf	7
  7140  03B2  3002               	movlw	2
  7141  03B3  3E30               	addlw	(low (_current| (0+256)))& (0+255)
  7142  03B4  0084               	movwf	4
  7143  03B5  3001               	movlw	1	; select bank2/3
  7144  03B6  0085               	movwf	5
  7145  03B7  3F40               	moviw [0]fsr1
  7146  03B8  0700               	addwf	0,w
  7147  03B9  00D8               	movwf	main@IOutTotal^(0+128)
  7148  03BA  3101               	addfsr 0,1
  7149  03BB  3F41               	moviw [1]fsr1
  7150  03BC  3D00               	addwfc	0,w
  7151  03BD  00D9               	movwf	(main@IOutTotal^(0+128)+1)
  7152                           
  7153                           ;main.c: 183: if(IOutTotal>20)
  7154  03BE  0859               	movf	(main@IOutTotal+1)^(0+128),w
  7155  03BF  3A80               	xorlw	128
  7156  03C0  00C3               	movwf	??_main^(0+128)
  7157  03C1  3080               	movlw	128
  7158  03C2  0243               	subwf	??_main^(0+128),w
  7159  03C3  1D03               	skipz
  7160  03C4  2BC7               	goto	u4835
  7161  03C5  3015               	movlw	21
  7162  03C6  0258               	subwf	main@IOutTotal^(0+128),w
  7163  03C7                     u4835:	
  7164  03C7  1C03               	skipc
  7165  03C8  2BD7               	goto	l3767
  7166                           
  7167                           ;main.c: 184: {
  7168                           ;main.c: 185: dutyCycle1=(uint16_t)IOutTotal/2+10;
  7169  03C9  0021               	movlb	1	; select bank1
  7170  03CA  0859               	movf	(main@IOutTotal+1)^(0+128),w
  7171  03CB  00C4               	movwf	(??_main^(0+128)+1)
  7172  03CC  0858               	movf	main@IOutTotal^(0+128),w
  7173  03CD  00C3               	movwf	??_main^(0+128)
  7174  03CE  36C4               	lsrf	(??_main^(0+128)+1),f
  7175  03CF  0CC3               	rrf	??_main^(0+128),f
  7176  03D0  0843               	movf	??_main^(0+128),w
  7177  03D1  3E0A               	addlw	10
  7178  03D2  00E2               	movwf	main@dutyCycle1^(0+128)
  7179  03D3  3000               	movlw	0
  7180  03D4  3D44               	addwfc	(??_main+1)^(0+128),w
  7181  03D5  00E3               	movwf	(main@dutyCycle1+1)^(0+128)
  7182                           
  7183                           ;main.c: 186: }
  7184  03D6  2BDA               	goto	l3769
  7185  03D7                     l3767:	
  7186                           
  7187                           ;main.c: 187: else
  7188                           ;main.c: 188: {
  7189                           ;main.c: 189: dutyCycle1=0;
  7190  03D7  0021               	movlb	1	; select bank1
  7191  03D8  01E2               	clrf	main@dutyCycle1^(0+128)
  7192  03D9  01E3               	clrf	(main@dutyCycle1+1)^(0+128)
  7193  03DA                     l3769:	
  7194                           
  7195                           ;main.c: 190: }
  7196                           ;main.c: 191: if(!RB2==1)dutyCycle1=55;
  7197  03DA  0020               	movlb	0	; select bank0
  7198  03DB  190D               	btfsc	13,2	;volatile
  7199  03DC  2BE2               	goto	l3773
  7200  03DD  3037               	movlw	55
  7201  03DE  0021               	movlb	1	; select bank1
  7202  03DF  00E2               	movwf	main@dutyCycle1^(0+128)
  7203  03E0  3000               	movlw	0
  7204  03E1  00E3               	movwf	(main@dutyCycle1^(0+128)+1)
  7205  03E2                     l3773:	
  7206                           
  7207                           ;main.c: 194: displayRefresh+=1;
  7208  03E2  3001               	movlw	1
  7209  03E3  0021               	movlb	1	; select bank1
  7210  03E4  00C3               	movwf	??_main^(0+128)
  7211  03E5  0843               	movf	??_main^(0+128),w
  7212  03E6  07D3               	addwf	main@displayRefresh^(0+128),f
  7213                           
  7214                           ;main.c: 195: if(displayRefresh>80)
  7215  03E7  3051               	movlw	81
  7216  03E8  0253               	subwf	main@displayRefresh^(0+128),w
  7217  03E9  1C03               	skipc
  7218  03EA  2C01               	goto	l3783
  7219                           
  7220                           ;main.c: 196: {
  7221                           ;main.c: 197: LCDClear();
  7222  03EB  319F  27AE  3182   	fcall	_LCDClear
  7223                           
  7224                           ;main.c: 198: displayRefresh=0;
  7225  03EE  0021               	movlb	1	; select bank1
  7226  03EF  01D3               	clrf	main@displayRefresh^(0+128)
  7227                           
  7228                           ;main.c: 199: batteryTemp=tempCalc(ADCRead(9));
  7229  03F0  3009               	movlw	9
  7230  03F1  319E  269D  3182   	fcall	_ADCRead
  7231  03F4  0871               	movf	?_ADCRead+1,w
  7232  03F5  0021               	movlb	1	; select bank1
  7233  03F6  00B6               	movwf	(tempCalc@analogValue+1)^(0+128)
  7234  03F7  0870               	movf	?_ADCRead,w
  7235  03F8  00B5               	movwf	tempCalc@analogValue^(0+128)
  7236  03F9  318C  241B  3182   	fcall	_tempCalc
  7237  03FC  0021               	movlb	1	; select bank1
  7238  03FD  0836               	movf	(?_tempCalc+1)^(0+128),w
  7239  03FE  00C6               	movwf	(main@batteryTemp+1)^(0+128)
  7240  03FF  0835               	movf	?_tempCalc^(0+128),w
  7241  0400  00C5               	movwf	main@batteryTemp^(0+128)
  7242  0401                     l3783:	
  7243                           
  7244                           ;main.c: 206: }
  7245                           ;main.c: 207: Battery_State_Machine();
  7246  0401  3193  2393  3182   	fcall	_Battery_State_Machine
  7247                           
  7248                           ;main.c: 208: efficiency=(float)voltage[1]/100*current[1]/10;
  7249  0404  0022               	movlb	2	; select bank2
  7250  0405  0832               	movf	(_current^(0+256)+2),w
  7251  0406  00F0               	movwf	___xxtofl@val
  7252  0407  0833               	movf	((_current+1)^(0+256)+2),w
  7253  0408  00F1               	movwf	___xxtofl@val+1
  7254  0409  0D89               	rlf	9,f
  7255  040A  3B89               	subwfb	9,f
  7256  040B  0989               	comf	9,f
  7257  040C  00F2               	movwf	___xxtofl@val+2
  7258  040D  00F3               	movwf	___xxtofl@val+3
  7259  040E  3001               	movlw	1
  7260  040F  3195  2582  3182   	fcall	___xxtofl
  7261  0412  0873               	movf	?___xxtofl+3,w
  7262  0413  0020               	movlb	0	; select bank0
  7263  0414  00BD               	movwf	___flmul@b+3
  7264  0415  0872               	movf	?___xxtofl+2,w
  7265  0416  00BC               	movwf	___flmul@b+2
  7266  0417  0871               	movf	?___xxtofl+1,w
  7267  0418  00BB               	movwf	___flmul@b+1
  7268  0419  0870               	movf	?___xxtofl,w
  7269  041A  00BA               	movwf	___flmul@b
  7270  041B  3042               	movlw	66
  7271  041C  00A3               	movwf	___fldiv@a+3
  7272  041D  30C8               	movlw	200
  7273  041E  00A2               	movwf	___fldiv@a+2
  7274  041F  3000               	movlw	0
  7275  0420  00A1               	movwf	___fldiv@a+1
  7276  0421  3000               	movlw	0
  7277  0422  00A0               	movwf	___fldiv@a
  7278  0423  0022               	movlb	2	; select bank2
  7279  0424  083A               	movf	(_voltage^(0+256)+2),w
  7280  0425  00F0               	movwf	___xxtofl@val
  7281  0426  083B               	movf	((_voltage+1)^(0+256)+2),w
  7282  0427  00F1               	movwf	___xxtofl@val+1
  7283  0428  0D89               	rlf	9,f
  7284  0429  3B89               	subwfb	9,f
  7285  042A  0989               	comf	9,f
  7286  042B  00F2               	movwf	___xxtofl@val+2
  7287  042C  00F3               	movwf	___xxtofl@val+3
  7288  042D  3001               	movlw	1
  7289  042E  3195  2582  3182   	fcall	___xxtofl
  7290  0431  0873               	movf	?___xxtofl+3,w
  7291  0432  0020               	movlb	0	; select bank0
  7292  0433  00A7               	movwf	___fldiv@b+3
  7293  0434  0872               	movf	?___xxtofl+2,w
  7294  0435  00A6               	movwf	___fldiv@b+2
  7295  0436  0871               	movf	?___xxtofl+1,w
  7296  0437  00A5               	movwf	___fldiv@b+1
  7297  0438  0870               	movf	?___xxtofl,w
  7298  0439  00A4               	movwf	___fldiv@b
  7299  043A  318A  228C  3182   	fcall	___fldiv
  7300  043D  0020               	movlb	0	; select bank0
  7301  043E  0823               	movf	?___fldiv+3,w
  7302  043F  00C1               	movwf	___flmul@a+3
  7303  0440  0822               	movf	?___fldiv+2,w
  7304  0441  00C0               	movwf	___flmul@a+2
  7305  0442  0821               	movf	?___fldiv+1,w
  7306  0443  00BF               	movwf	___flmul@a+1
  7307  0444  0820               	movf	?___fldiv,w
  7308  0445  00BE               	movwf	___flmul@a
  7309  0446  3180  200A  3182   	fcall	___flmul
  7310  0449  0020               	movlb	0	; select bank0
  7311  044A  083D               	movf	?___flmul+3,w
  7312  044B  0021               	movlb	1	; select bank1
  7313  044C  00D7               	movwf	(_main$1352+3)^(0+128)
  7314  044D  0020               	movlb	0	; select bank0
  7315  044E  083C               	movf	?___flmul+2,w
  7316  044F  0021               	movlb	1	; select bank1
  7317  0450  00D6               	movwf	(_main$1352+2)^(0+128)
  7318  0451  0020               	movlb	0	; select bank0
  7319  0452  083B               	movf	?___flmul+1,w
  7320  0453  0021               	movlb	1	; select bank1
  7321  0454  00D5               	movwf	(_main$1352+1)^(0+128)
  7322  0455  0020               	movlb	0	; select bank0
  7323  0456  083A               	movf	?___flmul,w
  7324  0457  0021               	movlb	1	; select bank1
  7325  0458  00D4               	movwf	_main$1352^(0+128)
  7326                           
  7327                           ;main.c: 208: efficiency=(float)voltage[1]/100*current[1]/10;
  7328  0459  3041               	movlw	65
  7329  045A  0020               	movlb	0	; select bank0
  7330  045B  00A3               	movwf	___fldiv@a+3
  7331  045C  3020               	movlw	32
  7332  045D  00A2               	movwf	___fldiv@a+2
  7333  045E  3000               	movlw	0
  7334  045F  00A1               	movwf	___fldiv@a+1
  7335  0460  3000               	movlw	0
  7336  0461  00A0               	movwf	___fldiv@a
  7337  0462  0021               	movlb	1	; select bank1
  7338  0463  0857               	movf	(_main$1352+3)^(0+128),w
  7339  0464  0020               	movlb	0	; select bank0
  7340  0465  00A7               	movwf	___fldiv@b+3
  7341  0466  0021               	movlb	1	; select bank1
  7342  0467  0856               	movf	(_main$1352+2)^(0+128),w
  7343  0468  0020               	movlb	0	; select bank0
  7344  0469  00A6               	movwf	___fldiv@b+2
  7345  046A  0021               	movlb	1	; select bank1
  7346  046B  0855               	movf	(_main$1352+1)^(0+128),w
  7347  046C  0020               	movlb	0	; select bank0
  7348  046D  00A5               	movwf	___fldiv@b+1
  7349  046E  0021               	movlb	1	; select bank1
  7350  046F  0854               	movf	_main$1352^(0+128),w
  7351  0470  0020               	movlb	0	; select bank0
  7352  0471  00A4               	movwf	___fldiv@b
  7353  0472  318A  228C  3182   	fcall	___fldiv
  7354  0475  0020               	movlb	0	; select bank0
  7355  0476  0823               	movf	?___fldiv+3,w
  7356  0477  0021               	movlb	1	; select bank1
  7357  0478  00E1               	movwf	(main@efficiency+3)^(0+128)
  7358  0479  0020               	movlb	0	; select bank0
  7359  047A  0822               	movf	?___fldiv+2,w
  7360  047B  0021               	movlb	1	; select bank1
  7361  047C  00E0               	movwf	(main@efficiency+2)^(0+128)
  7362  047D  0020               	movlb	0	; select bank0
  7363  047E  0821               	movf	?___fldiv+1,w
  7364  047F  0021               	movlb	1	; select bank1
  7365  0480  00DF               	movwf	(main@efficiency+1)^(0+128)
  7366  0481  0020               	movlb	0	; select bank0
  7367  0482  0820               	movf	?___fldiv,w
  7368  0483  0021               	movlb	1	; select bank1
  7369  0484  00DE               	movwf	main@efficiency^(0+128)
  7370                           
  7371                           ;main.c: 209: efficiency/=(float)voltage[0]/100*current[0]/10;
  7372  0485  0022               	movlb	2	; select bank2
  7373  0486  0838               	movf	_voltage^(0+256),w
  7374  0487  00F0               	movwf	___xxtofl@val
  7375  0488  0839               	movf	(_voltage+1)^(0+256),w
  7376  0489  00F1               	movwf	___xxtofl@val+1
  7377  048A  0D89               	rlf	9,f
  7378  048B  3B89               	subwfb	9,f
  7379  048C  0989               	comf	9,f
  7380  048D  00F2               	movwf	___xxtofl@val+2
  7381  048E  00F3               	movwf	___xxtofl@val+3
  7382  048F  3001               	movlw	1
  7383  0490  3195  2582  3182   	fcall	___xxtofl
  7384  0493  0873               	movf	?___xxtofl+3,w
  7385  0494  0020               	movlb	0	; select bank0
  7386  0495  00A7               	movwf	___fldiv@b+3
  7387  0496  0872               	movf	?___xxtofl+2,w
  7388  0497  00A6               	movwf	___fldiv@b+2
  7389  0498  0871               	movf	?___xxtofl+1,w
  7390  0499  00A5               	movwf	___fldiv@b+1
  7391  049A  0870               	movf	?___xxtofl,w
  7392  049B  00A4               	movwf	___fldiv@b
  7393  049C  3042               	movlw	66
  7394  049D  00A3               	movwf	___fldiv@a+3
  7395  049E  30C8               	movlw	200
  7396  049F  00A2               	movwf	___fldiv@a+2
  7397  04A0  3000               	movlw	0
  7398  04A1  00A1               	movwf	___fldiv@a+1
  7399  04A2  3000               	movlw	0
  7400  04A3  00A0               	movwf	___fldiv@a
  7401  04A4  318A  228C  3182   	fcall	___fldiv
  7402  04A7  0020               	movlb	0	; select bank0
  7403  04A8  0823               	movf	?___fldiv+3,w
  7404  04A9  00C1               	movwf	___flmul@a+3
  7405  04AA  0822               	movf	?___fldiv+2,w
  7406  04AB  00C0               	movwf	___flmul@a+2
  7407  04AC  0821               	movf	?___fldiv+1,w
  7408  04AD  00BF               	movwf	___flmul@a+1
  7409  04AE  0820               	movf	?___fldiv,w
  7410  04AF  00BE               	movwf	___flmul@a
  7411  04B0  0022               	movlb	2	; select bank2
  7412  04B1  0830               	movf	_current^(0+256),w
  7413  04B2  00F0               	movwf	___xxtofl@val
  7414  04B3  0831               	movf	(_current+1)^(0+256),w
  7415  04B4  00F1               	movwf	___xxtofl@val+1
  7416  04B5  0D89               	rlf	9,f
  7417  04B6  3B89               	subwfb	9,f
  7418  04B7  0989               	comf	9,f
  7419  04B8  00F2               	movwf	___xxtofl@val+2
  7420  04B9  00F3               	movwf	___xxtofl@val+3
  7421  04BA  3001               	movlw	1
  7422  04BB  3195  2582  3182   	fcall	___xxtofl
  7423  04BE  0873               	movf	?___xxtofl+3,w
  7424  04BF  0020               	movlb	0	; select bank0
  7425  04C0  00BD               	movwf	___flmul@b+3
  7426  04C1  0872               	movf	?___xxtofl+2,w
  7427  04C2  00BC               	movwf	___flmul@b+2
  7428  04C3  0871               	movf	?___xxtofl+1,w
  7429  04C4  00BB               	movwf	___flmul@b+1
  7430  04C5  0870               	movf	?___xxtofl,w
  7431  04C6  00BA               	movwf	___flmul@b
  7432  04C7  3180  200A  3182   	fcall	___flmul
  7433  04CA  0020               	movlb	0	; select bank0
  7434  04CB  083D               	movf	?___flmul+3,w
  7435  04CC  0021               	movlb	1	; select bank1
  7436  04CD  00D7               	movwf	(_main$1352+3)^(0+128)
  7437  04CE  0020               	movlb	0	; select bank0
  7438  04CF  083C               	movf	?___flmul+2,w
  7439  04D0  0021               	movlb	1	; select bank1
  7440  04D1  00D6               	movwf	(_main$1352+2)^(0+128)
  7441  04D2  0020               	movlb	0	; select bank0
  7442  04D3  083B               	movf	?___flmul+1,w
  7443  04D4  0021               	movlb	1	; select bank1
  7444  04D5  00D5               	movwf	(_main$1352+1)^(0+128)
  7445  04D6  0020               	movlb	0	; select bank0
  7446  04D7  083A               	movf	?___flmul,w
  7447  04D8  0021               	movlb	1	; select bank1
  7448  04D9  00D4               	movwf	_main$1352^(0+128)
  7449                           
  7450                           ;main.c: 209: efficiency/=(float)voltage[0]/100*current[0]/10;
  7451  04DA  0857               	movf	(_main$1352+3)^(0+128),w
  7452  04DB  0020               	movlb	0	; select bank0
  7453  04DC  00A7               	movwf	___fldiv@b+3
  7454  04DD  0021               	movlb	1	; select bank1
  7455  04DE  0856               	movf	(_main$1352+2)^(0+128),w
  7456  04DF  0020               	movlb	0	; select bank0
  7457  04E0  00A6               	movwf	___fldiv@b+2
  7458  04E1  0021               	movlb	1	; select bank1
  7459  04E2  0855               	movf	(_main$1352+1)^(0+128),w
  7460  04E3  0020               	movlb	0	; select bank0
  7461  04E4  00A5               	movwf	___fldiv@b+1
  7462  04E5  0021               	movlb	1	; select bank1
  7463  04E6  0854               	movf	_main$1352^(0+128),w
  7464  04E7  0020               	movlb	0	; select bank0
  7465  04E8  00A4               	movwf	___fldiv@b
  7466  04E9  3041               	movlw	65
  7467  04EA  00A3               	movwf	___fldiv@a+3
  7468  04EB  3020               	movlw	32
  7469  04EC  00A2               	movwf	___fldiv@a+2
  7470  04ED  3000               	movlw	0
  7471  04EE  00A1               	movwf	___fldiv@a+1
  7472  04EF  3000               	movlw	0
  7473  04F0  00A0               	movwf	___fldiv@a
  7474  04F1  318A  228C  3182   	fcall	___fldiv
  7475  04F4  0020               	movlb	0	; select bank0
  7476  04F5  0823               	movf	?___fldiv+3,w
  7477  04F6  0021               	movlb	1	; select bank1
  7478  04F7  00CB               	movwf	(_main$1353+3)^(0+128)
  7479  04F8  0020               	movlb	0	; select bank0
  7480  04F9  0822               	movf	?___fldiv+2,w
  7481  04FA  0021               	movlb	1	; select bank1
  7482  04FB  00CA               	movwf	(_main$1353+2)^(0+128)
  7483  04FC  0020               	movlb	0	; select bank0
  7484  04FD  0821               	movf	?___fldiv+1,w
  7485  04FE  0021               	movlb	1	; select bank1
  7486  04FF  00C9               	movwf	(_main$1353+1)^(0+128)
  7487  0500  0020               	movlb	0	; select bank0
  7488  0501  0820               	movf	?___fldiv,w
  7489  0502  0021               	movlb	1	; select bank1
  7490  0503  00C8               	movwf	_main$1353^(0+128)
  7491                           
  7492                           ;main.c: 209: efficiency/=(float)voltage[0]/100*current[0]/10;
  7493  0504  084B               	movf	(_main$1353+3)^(0+128),w
  7494  0505  0020               	movlb	0	; select bank0
  7495  0506  00A3               	movwf	___fldiv@a+3
  7496  0507  0021               	movlb	1	; select bank1
  7497  0508  084A               	movf	(_main$1353+2)^(0+128),w
  7498  0509  0020               	movlb	0	; select bank0
  7499  050A  00A2               	movwf	___fldiv@a+2
  7500  050B  0021               	movlb	1	; select bank1
  7501  050C  0849               	movf	(_main$1353+1)^(0+128),w
  7502  050D  0020               	movlb	0	; select bank0
  7503  050E  00A1               	movwf	___fldiv@a+1
  7504  050F  0021               	movlb	1	; select bank1
  7505  0510  0848               	movf	_main$1353^(0+128),w
  7506  0511  0020               	movlb	0	; select bank0
  7507  0512  00A0               	movwf	___fldiv@a
  7508  0513  0021               	movlb	1	; select bank1
  7509  0514  0861               	movf	(main@efficiency+3)^(0+128),w
  7510  0515  0020               	movlb	0	; select bank0
  7511  0516  00A7               	movwf	___fldiv@b+3
  7512  0517  0021               	movlb	1	; select bank1
  7513  0518  0860               	movf	(main@efficiency+2)^(0+128),w
  7514  0519  0020               	movlb	0	; select bank0
  7515  051A  00A6               	movwf	___fldiv@b+2
  7516  051B  0021               	movlb	1	; select bank1
  7517  051C  085F               	movf	(main@efficiency+1)^(0+128),w
  7518  051D  0020               	movlb	0	; select bank0
  7519  051E  00A5               	movwf	___fldiv@b+1
  7520  051F  0021               	movlb	1	; select bank1
  7521  0520  085E               	movf	main@efficiency^(0+128),w
  7522  0521  0020               	movlb	0	; select bank0
  7523  0522  00A4               	movwf	___fldiv@b
  7524  0523  318A  228C  3182   	fcall	___fldiv
  7525  0526  0020               	movlb	0	; select bank0
  7526  0527  0823               	movf	?___fldiv+3,w
  7527  0528  0021               	movlb	1	; select bank1
  7528  0529  00E1               	movwf	(main@efficiency+3)^(0+128)
  7529  052A  0020               	movlb	0	; select bank0
  7530  052B  0822               	movf	?___fldiv+2,w
  7531  052C  0021               	movlb	1	; select bank1
  7532  052D  00E0               	movwf	(main@efficiency+2)^(0+128)
  7533  052E  0020               	movlb	0	; select bank0
  7534  052F  0821               	movf	?___fldiv+1,w
  7535  0530  0021               	movlb	1	; select bank1
  7536  0531  00DF               	movwf	(main@efficiency+1)^(0+128)
  7537  0532  0020               	movlb	0	; select bank0
  7538  0533  0820               	movf	?___fldiv,w
  7539  0534  0021               	movlb	1	; select bank1
  7540  0535  00DE               	movwf	main@efficiency^(0+128)
  7541                           
  7542                           ;main.c: 210: efficiency*=100;
  7543  0536  3042               	movlw	66
  7544  0537  0020               	movlb	0	; select bank0
  7545  0538  00BD               	movwf	___flmul@b+3
  7546  0539  30C8               	movlw	200
  7547  053A  00BC               	movwf	___flmul@b+2
  7548  053B  3000               	movlw	0
  7549  053C  00BB               	movwf	___flmul@b+1
  7550  053D  3000               	movlw	0
  7551  053E  00BA               	movwf	___flmul@b
  7552  053F  0021               	movlb	1	; select bank1
  7553  0540  0861               	movf	(main@efficiency+3)^(0+128),w
  7554  0541  0020               	movlb	0	; select bank0
  7555  0542  00C1               	movwf	___flmul@a+3
  7556  0543  0021               	movlb	1	; select bank1
  7557  0544  0860               	movf	(main@efficiency+2)^(0+128),w
  7558  0545  0020               	movlb	0	; select bank0
  7559  0546  00C0               	movwf	___flmul@a+2
  7560  0547  0021               	movlb	1	; select bank1
  7561  0548  085F               	movf	(main@efficiency+1)^(0+128),w
  7562  0549  0020               	movlb	0	; select bank0
  7563  054A  00BF               	movwf	___flmul@a+1
  7564  054B  0021               	movlb	1	; select bank1
  7565  054C  085E               	movf	main@efficiency^(0+128),w
  7566  054D  0020               	movlb	0	; select bank0
  7567  054E  00BE               	movwf	___flmul@a
  7568  054F  3180  200A  3182   	fcall	___flmul
  7569  0552  0020               	movlb	0	; select bank0
  7570  0553  083D               	movf	?___flmul+3,w
  7571  0554  0021               	movlb	1	; select bank1
  7572  0555  00E1               	movwf	(main@efficiency+3)^(0+128)
  7573  0556  0020               	movlb	0	; select bank0
  7574  0557  083C               	movf	?___flmul+2,w
  7575  0558  0021               	movlb	1	; select bank1
  7576  0559  00E0               	movwf	(main@efficiency+2)^(0+128)
  7577  055A  0020               	movlb	0	; select bank0
  7578  055B  083B               	movf	?___flmul+1,w
  7579  055C  0021               	movlb	1	; select bank1
  7580  055D  00DF               	movwf	(main@efficiency+1)^(0+128)
  7581  055E  0020               	movlb	0	; select bank0
  7582  055F  083A               	movf	?___flmul,w
  7583  0560  0021               	movlb	1	; select bank1
  7584  0561  00DE               	movwf	main@efficiency^(0+128)
  7585                           
  7586                           ;main.c: 211: LCDWriteCharacter(' ');
  7587  0562  3020               	movlw	32
  7588  0563  3193  233B  3182   	fcall	_LCDWriteCharacter
  7589                           
  7590                           ;main.c: 225: { gotoXY(0,0); LCDWriteInt(faultCount,5, 0, 0);};
  7591  0566  01F5               	clrf	gotoXY@y
  7592  0567  3000               	movlw	0
  7593  0568  319E  268A  3182   	fcall	_gotoXY
  7594  056B  0021               	movlb	1	; select bank1
  7595  056C  084F               	movf	(main@faultCount+1)^(0+128),w
  7596  056D  0020               	movlb	0	; select bank0
  7597  056E  00A9               	movwf	LCDWriteInt@value+1
  7598  056F  0021               	movlb	1	; select bank1
  7599  0570  084E               	movf	main@faultCount^(0+128),w
  7600  0571  0020               	movlb	0	; select bank0
  7601  0572  00A8               	movwf	LCDWriteInt@value
  7602  0573  3005               	movlw	5
  7603  0574  0021               	movlb	1	; select bank1
  7604  0575  00C3               	movwf	??_main^(0+128)
  7605  0576  0843               	movf	??_main^(0+128),w
  7606  0577  0020               	movlb	0	; select bank0
  7607  0578  00AA               	movwf	LCDWriteInt@fieldLength
  7608  0579  01AB               	clrf	LCDWriteInt@numPlaces
  7609  057A  01AC               	clrf	LCDWriteInt@sign
  7610  057B  3197  2747  3182   	fcall	_LCDWriteInt
  7611                           
  7612                           ;main.c: 228: { gotoXY(32,0); LCDWriteInt(faultNotReset,5, 0, 0);};
  7613  057E  01F5               	clrf	gotoXY@y
  7614  057F  3020               	movlw	32
  7615  0580  319E  268A  3182   	fcall	_gotoXY
  7616  0583  0021               	movlb	1	; select bank1
  7617  0584  0851               	movf	(main@faultNotReset+1)^(0+128),w
  7618  0585  0020               	movlb	0	; select bank0
  7619  0586  00A9               	movwf	LCDWriteInt@value+1
  7620  0587  0021               	movlb	1	; select bank1
  7621  0588  0850               	movf	main@faultNotReset^(0+128),w
  7622  0589  0020               	movlb	0	; select bank0
  7623  058A  00A8               	movwf	LCDWriteInt@value
  7624  058B  3005               	movlw	5
  7625  058C  0021               	movlb	1	; select bank1
  7626  058D  00C3               	movwf	??_main^(0+128)
  7627  058E  0843               	movf	??_main^(0+128),w
  7628  058F  0020               	movlb	0	; select bank0
  7629  0590  00AA               	movwf	LCDWriteInt@fieldLength
  7630  0591  01AB               	clrf	LCDWriteInt@numPlaces
  7631  0592  01AC               	clrf	LCDWriteInt@sign
  7632  0593  3197  2747  3182   	fcall	_LCDWriteInt
  7633                           
  7634                           ;main.c: 232: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7635  0596  01F5               	clrf	gotoXY@y
  7636  0597  0AF5               	incf	gotoXY@y,f
  7637  0598  3000               	movlw	0
  7638  0599  319E  268A  3182   	fcall	_gotoXY
  7639  059C  0022               	movlb	2	; select bank2
  7640  059D  0839               	movf	(_voltage+1)^(0+256),w
  7641  059E  0020               	movlb	0	; select bank0
  7642  059F  00A9               	movwf	LCDWriteInt@value+1
  7643  05A0  0022               	movlb	2	; select bank2
  7644  05A1  0838               	movf	_voltage^(0+256),w
  7645  05A2  0020               	movlb	0	; select bank0
  7646  05A3  00A8               	movwf	LCDWriteInt@value
  7647  05A4  3004               	movlw	4
  7648  05A5  0021               	movlb	1	; select bank1
  7649  05A6  00C3               	movwf	??_main^(0+128)
  7650  05A7  0843               	movf	??_main^(0+128),w
  7651  05A8  0020               	movlb	0	; select bank0
  7652  05A9  00AA               	movwf	LCDWriteInt@fieldLength
  7653  05AA  3002               	movlw	2
  7654  05AB  0021               	movlb	1	; select bank1
  7655  05AC  00C4               	movwf	(??_main+1)^(0+128)
  7656  05AD  0844               	movf	(??_main+1)^(0+128),w
  7657  05AE  0020               	movlb	0	; select bank0
  7658  05AF  00AB               	movwf	LCDWriteInt@numPlaces
  7659  05B0  01AC               	clrf	LCDWriteInt@sign
  7660  05B1  3197  2747  3182   	fcall	_LCDWriteInt
  7661                           
  7662                           ;main.c: 233: LCDWriteCharacter('V');
  7663  05B4  3056               	movlw	86
  7664  05B5  3193  233B  3182   	fcall	_LCDWriteCharacter
  7665                           
  7666                           ;main.c: 234: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7667  05B8  01F5               	clrf	gotoXY@y
  7668  05B9  0AF5               	incf	gotoXY@y,f
  7669  05BA  301C               	movlw	28
  7670  05BB  319E  268A  3182   	fcall	_gotoXY
  7671  05BE  0022               	movlb	2	; select bank2
  7672  05BF  0831               	movf	(_current+1)^(0+256),w
  7673  05C0  0020               	movlb	0	; select bank0
  7674  05C1  00A9               	movwf	LCDWriteInt@value+1
  7675  05C2  0022               	movlb	2	; select bank2
  7676  05C3  0830               	movf	_current^(0+256),w
  7677  05C4  0020               	movlb	0	; select bank0
  7678  05C5  00A8               	movwf	LCDWriteInt@value
  7679  05C6  3003               	movlw	3
  7680  05C7  0021               	movlb	1	; select bank1
  7681  05C8  00C3               	movwf	??_main^(0+128)
  7682  05C9  0843               	movf	??_main^(0+128),w
  7683  05CA  0020               	movlb	0	; select bank0
  7684  05CB  00AA               	movwf	LCDWriteInt@fieldLength
  7685  05CC  01AB               	clrf	LCDWriteInt@numPlaces
  7686  05CD  0AAB               	incf	LCDWriteInt@numPlaces,f
  7687  05CE  01AC               	clrf	LCDWriteInt@sign
  7688  05CF  3197  2747  3182   	fcall	_LCDWriteInt
  7689                           
  7690                           ;main.c: 235: LCDWriteCharacter('A');
  7691  05D2  3041               	movlw	65
  7692  05D3  3193  233B  3182   	fcall	_LCDWriteCharacter
  7693                           
  7694                           ;main.c: 237: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7695  05D6  3002               	movlw	2
  7696  05D7  0021               	movlb	1	; select bank1
  7697  05D8  00C3               	movwf	??_main^(0+128)
  7698  05D9  0843               	movf	??_main^(0+128),w
  7699  05DA  00F5               	movwf	gotoXY@y
  7700  05DB  3000               	movlw	0
  7701  05DC  319E  268A  3182   	fcall	_gotoXY
  7702  05DF  0022               	movlb	2	; select bank2
  7703  05E0  083B               	movf	((_voltage+1)^(0+256)+2),w
  7704  05E1  0020               	movlb	0	; select bank0
  7705  05E2  00A9               	movwf	LCDWriteInt@value+1
  7706  05E3  0022               	movlb	2	; select bank2
  7707  05E4  083A               	movf	(_voltage^(0+256)+2),w
  7708  05E5  0020               	movlb	0	; select bank0
  7709  05E6  00A8               	movwf	LCDWriteInt@value
  7710  05E7  3004               	movlw	4
  7711  05E8  0021               	movlb	1	; select bank1
  7712  05E9  00C3               	movwf	??_main^(0+128)
  7713  05EA  0843               	movf	??_main^(0+128),w
  7714  05EB  0020               	movlb	0	; select bank0
  7715  05EC  00AA               	movwf	LCDWriteInt@fieldLength
  7716  05ED  3002               	movlw	2
  7717  05EE  0021               	movlb	1	; select bank1
  7718  05EF  00C4               	movwf	(??_main+1)^(0+128)
  7719  05F0  0844               	movf	(??_main+1)^(0+128),w
  7720  05F1  0020               	movlb	0	; select bank0
  7721  05F2  00AB               	movwf	LCDWriteInt@numPlaces
  7722  05F3  01AC               	clrf	LCDWriteInt@sign
  7723  05F4  3197  2747  3182   	fcall	_LCDWriteInt
  7724                           
  7725                           ;main.c: 238: LCDWriteCharacter('V');
  7726  05F7  3056               	movlw	86
  7727  05F8  3193  233B  3182   	fcall	_LCDWriteCharacter
  7728                           
  7729                           ;main.c: 239: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7730  05FB  3002               	movlw	2
  7731  05FC  0021               	movlb	1	; select bank1
  7732  05FD  00C3               	movwf	??_main^(0+128)
  7733  05FE  0843               	movf	??_main^(0+128),w
  7734  05FF  00F5               	movwf	gotoXY@y
  7735  0600  301C               	movlw	28
  7736  0601  319E  268A  3182   	fcall	_gotoXY
  7737  0604  0022               	movlb	2	; select bank2
  7738  0605  0833               	movf	((_current+1)^(0+256)+2),w
  7739  0606  0020               	movlb	0	; select bank0
  7740  0607  00A9               	movwf	LCDWriteInt@value+1
  7741  0608  0022               	movlb	2	; select bank2
  7742  0609  0832               	movf	(_current^(0+256)+2),w
  7743  060A  0020               	movlb	0	; select bank0
  7744  060B  00A8               	movwf	LCDWriteInt@value
  7745  060C  3003               	movlw	3
  7746  060D  0021               	movlb	1	; select bank1
  7747  060E  00C3               	movwf	??_main^(0+128)
  7748  060F  0843               	movf	??_main^(0+128),w
  7749  0610  0020               	movlb	0	; select bank0
  7750  0611  00AA               	movwf	LCDWriteInt@fieldLength
  7751  0612  01AB               	clrf	LCDWriteInt@numPlaces
  7752  0613  0AAB               	incf	LCDWriteInt@numPlaces,f
  7753  0614  01AC               	clrf	LCDWriteInt@sign
  7754  0615  3197  2747  3182   	fcall	_LCDWriteInt
  7755                           
  7756                           ;main.c: 240: LCDWriteCharacter('A');
  7757  0618  3041               	movlw	65
  7758  0619  3193  233B  3182   	fcall	_LCDWriteCharacter
  7759                           
  7760                           ;main.c: 241: { gotoXY(56,2); LCDWriteInt(Vref,4, 2, 0);};
  7761  061C  3002               	movlw	2
  7762  061D  0021               	movlb	1	; select bank1
  7763  061E  00C3               	movwf	??_main^(0+128)
  7764  061F  0843               	movf	??_main^(0+128),w
  7765  0620  00F5               	movwf	gotoXY@y
  7766  0621  3038               	movlw	56
  7767  0622  319E  268A  3182   	fcall	_gotoXY
  7768  0625  0022               	movlb	2	; select bank2
  7769  0626  0865               	movf	(_Vref+1)^(0+256),w
  7770  0627  0020               	movlb	0	; select bank0
  7771  0628  00A9               	movwf	LCDWriteInt@value+1
  7772  0629  0022               	movlb	2	; select bank2
  7773  062A  0864               	movf	_Vref^(0+256),w
  7774  062B  0020               	movlb	0	; select bank0
  7775  062C  00A8               	movwf	LCDWriteInt@value
  7776  062D  3004               	movlw	4
  7777  062E  0021               	movlb	1	; select bank1
  7778  062F  00C3               	movwf	??_main^(0+128)
  7779  0630  0843               	movf	??_main^(0+128),w
  7780  0631  0020               	movlb	0	; select bank0
  7781  0632  00AA               	movwf	LCDWriteInt@fieldLength
  7782  0633  3002               	movlw	2
  7783  0634  0021               	movlb	1	; select bank1
  7784  0635  00C4               	movwf	(??_main+1)^(0+128)
  7785  0636  0844               	movf	(??_main+1)^(0+128),w
  7786  0637  0020               	movlb	0	; select bank0
  7787  0638  00AB               	movwf	LCDWriteInt@numPlaces
  7788  0639  01AC               	clrf	LCDWriteInt@sign
  7789  063A  3197  2747  3182   	fcall	_LCDWriteInt
  7790                           
  7791                           ;main.c: 242: LCDWriteCharacter('V');
  7792  063D  3056               	movlw	86
  7793  063E  3193  233B  3182   	fcall	_LCDWriteCharacter
  7794                           
  7795                           ;main.c: 244: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7796  0641  3003               	movlw	3
  7797  0642  0021               	movlb	1	; select bank1
  7798  0643  00C3               	movwf	??_main^(0+128)
  7799  0644  0843               	movf	??_main^(0+128),w
  7800  0645  00F5               	movwf	gotoXY@y
  7801  0646  3000               	movlw	0
  7802  0647  319E  268A  3182   	fcall	_gotoXY
  7803  064A  3064               	movlw	100
  7804  064B  00F0               	movwf	___awdiv@divisor
  7805  064C  3000               	movlw	0
  7806  064D  00F1               	movwf	___awdiv@divisor+1
  7807  064E  0022               	movlb	2	; select bank2
  7808  064F  0839               	movf	(_voltage+1)^(0+256),w
  7809  0650  00F3               	movwf	___awdiv@dividend+1
  7810  0651  0838               	movf	_voltage^(0+256),w
  7811  0652  00F2               	movwf	___awdiv@dividend
  7812  0653  3192  2248  3182   	fcall	___awdiv
  7813  0656  0871               	movf	?___awdiv+1,w
  7814  0657  00FA               	movwf	___wmul@multiplier+1
  7815  0658  0870               	movf	?___awdiv,w
  7816  0659  00F9               	movwf	___wmul@multiplier
  7817  065A  0022               	movlb	2	; select bank2
  7818  065B  0831               	movf	(_current+1)^(0+256),w
  7819  065C  00FC               	movwf	___wmul@multiplicand+1
  7820  065D  0830               	movf	_current^(0+256),w
  7821  065E  00FB               	movwf	___wmul@multiplicand
  7822  065F  319F  270E  3182   	fcall	___wmul
  7823  0662  087A               	movf	?___wmul+1,w
  7824  0663  0021               	movlb	1	; select bank1
  7825  0664  00DB               	movwf	(_main$1354+1)^(0+128)
  7826  0665  0879               	movf	?___wmul,w
  7827  0666  00DA               	movwf	_main$1354^(0+128)
  7828  0667  300A               	movlw	10
  7829  0668  00F0               	movwf	___awdiv@divisor
  7830  0669  3000               	movlw	0
  7831  066A  00F1               	movwf	___awdiv@divisor+1
  7832  066B  085B               	movf	(_main$1354+1)^(0+128),w
  7833  066C  00F3               	movwf	___awdiv@dividend+1
  7834  066D  085A               	movf	_main$1354^(0+128),w
  7835  066E  00F2               	movwf	___awdiv@dividend
  7836  066F  3192  2248  3182   	fcall	___awdiv
  7837  0672  0871               	movf	?___awdiv+1,w
  7838  0673  0021               	movlb	1	; select bank1
  7839  0674  00DD               	movwf	(_main$1355+1)^(0+128)
  7840  0675  0870               	movf	?___awdiv,w
  7841  0676  00DC               	movwf	_main$1355^(0+128)
  7842  0677  085D               	movf	(_main$1355+1)^(0+128),w
  7843  0678  0020               	movlb	0	; select bank0
  7844  0679  00A9               	movwf	LCDWriteInt@value+1
  7845  067A  0021               	movlb	1	; select bank1
  7846  067B  085C               	movf	_main$1355^(0+128),w
  7847  067C  0020               	movlb	0	; select bank0
  7848  067D  00A8               	movwf	LCDWriteInt@value
  7849  067E  3003               	movlw	3
  7850  067F  0021               	movlb	1	; select bank1
  7851  0680  00C3               	movwf	??_main^(0+128)
  7852  0681  0843               	movf	??_main^(0+128),w
  7853  0682  0020               	movlb	0	; select bank0
  7854  0683  00AA               	movwf	LCDWriteInt@fieldLength
  7855  0684  01AB               	clrf	LCDWriteInt@numPlaces
  7856  0685  01AC               	clrf	LCDWriteInt@sign
  7857  0686  3197  2747  3182   	fcall	_LCDWriteInt
  7858                           
  7859                           ;main.c: 245: LCDWriteCharacter('W');
  7860  0689  3057               	movlw	87
  7861  068A  3193  233B  3182   	fcall	_LCDWriteCharacter
  7862                           
  7863                           ;main.c: 246: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7864  068D  3003               	movlw	3
  7865  068E  0021               	movlb	1	; select bank1
  7866  068F  00C3               	movwf	??_main^(0+128)
  7867  0690  0843               	movf	??_main^(0+128),w
  7868  0691  00F5               	movwf	gotoXY@y
  7869  0692  301C               	movlw	28
  7870  0693  319E  268A  3182   	fcall	_gotoXY
  7871  0696  0022               	movlb	2	; select bank2
  7872  0697  086E               	movf	_battery_state^(0+256),w
  7873  0698  0021               	movlb	1	; select bank1
  7874  0699  00C3               	movwf	??_main^(0+128)
  7875  069A  01C4               	clrf	(??_main^(0+128)+1)
  7876  069B  0843               	movf	??_main^(0+128),w
  7877  069C  0020               	movlb	0	; select bank0
  7878  069D  00A8               	movwf	LCDWriteInt@value
  7879  069E  0021               	movlb	1	; select bank1
  7880  069F  0844               	movf	(??_main+1)^(0+128),w
  7881  06A0  0020               	movlb	0	; select bank0
  7882  06A1  00A9               	movwf	LCDWriteInt@value+1
  7883  06A2  01AA               	clrf	LCDWriteInt@fieldLength
  7884  06A3  0AAA               	incf	LCDWriteInt@fieldLength,f
  7885  06A4  01AB               	clrf	LCDWriteInt@numPlaces
  7886  06A5  01AC               	clrf	LCDWriteInt@sign
  7887  06A6  3197  2747  3182   	fcall	_LCDWriteInt
  7888                           
  7889                           ;main.c: 247: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7890  06A9  3003               	movlw	3
  7891  06AA  0021               	movlb	1	; select bank1
  7892  06AB  00C3               	movwf	??_main^(0+128)
  7893  06AC  0843               	movf	??_main^(0+128),w
  7894  06AD  00F5               	movwf	gotoXY@y
  7895  06AE  3024               	movlw	36
  7896  06AF  319E  268A  3182   	fcall	_gotoXY
  7897  06B2  0021               	movlb	1	; select bank1
  7898  06B3  086E               	movf	_Imode0^(0+128),w
  7899  06B4  0020               	movlb	0	; select bank0
  7900  06B5  00A8               	movwf	LCDWriteInt@value
  7901  06B6  01A9               	clrf	LCDWriteInt@value+1
  7902  06B7  1BA8               	btfsc	LCDWriteInt@value,7
  7903  06B8  03A9               	decf	LCDWriteInt@value+1,f
  7904  06B9  01AA               	clrf	LCDWriteInt@fieldLength
  7905  06BA  0AAA               	incf	LCDWriteInt@fieldLength,f
  7906  06BB  01AB               	clrf	LCDWriteInt@numPlaces
  7907  06BC  01AC               	clrf	LCDWriteInt@sign
  7908  06BD  3197  2747  3182   	fcall	_LCDWriteInt
  7909                           
  7910                           ;main.c: 248: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7911  06C0  3003               	movlw	3
  7912  06C1  0021               	movlb	1	; select bank1
  7913  06C2  00C3               	movwf	??_main^(0+128)
  7914  06C3  0843               	movf	??_main^(0+128),w
  7915  06C4  00F5               	movwf	gotoXY@y
  7916  06C5  3030               	movlw	48
  7917  06C6  319E  268A  3182   	fcall	_gotoXY
  7918  06C9  0022               	movlb	2	; select bank2
  7919  06CA  0867               	movf	(_Iref+1)^(0+256),w
  7920  06CB  0020               	movlb	0	; select bank0
  7921  06CC  00A9               	movwf	LCDWriteInt@value+1
  7922  06CD  0022               	movlb	2	; select bank2
  7923  06CE  0866               	movf	_Iref^(0+256),w
  7924  06CF  0020               	movlb	0	; select bank0
  7925  06D0  00A8               	movwf	LCDWriteInt@value
  7926  06D1  3003               	movlw	3
  7927  06D2  0021               	movlb	1	; select bank1
  7928  06D3  00C3               	movwf	??_main^(0+128)
  7929  06D4  0843               	movf	??_main^(0+128),w
  7930  06D5  0020               	movlb	0	; select bank0
  7931  06D6  00AA               	movwf	LCDWriteInt@fieldLength
  7932  06D7  01AB               	clrf	LCDWriteInt@numPlaces
  7933  06D8  0AAB               	incf	LCDWriteInt@numPlaces,f
  7934  06D9  01AC               	clrf	LCDWriteInt@sign
  7935  06DA  3197  2747  3182   	fcall	_LCDWriteInt
  7936                           
  7937                           ;main.c: 249: LCDWriteCharacter('A');
  7938  06DD  3041               	movlw	65
  7939  06DE  3193  233B  3182   	fcall	_LCDWriteCharacter
  7940                           
  7941                           ;main.c: 251: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7942  06E1  3004               	movlw	4
  7943  06E2  0021               	movlb	1	; select bank1
  7944  06E3  00C3               	movwf	??_main^(0+128)
  7945  06E4  0843               	movf	??_main^(0+128),w
  7946  06E5  00F5               	movwf	gotoXY@y
  7947  06E6  3000               	movlw	0
  7948  06E7  319E  268A  3182   	fcall	_gotoXY
  7949  06EA  3064               	movlw	100
  7950  06EB  00F0               	movwf	___awdiv@divisor
  7951  06EC  3000               	movlw	0
  7952  06ED  00F1               	movwf	___awdiv@divisor+1
  7953  06EE  0022               	movlb	2	; select bank2
  7954  06EF  083B               	movf	((_voltage+1)^(0+256)+2),w
  7955  06F0  00F3               	movwf	___awdiv@dividend+1
  7956  06F1  083A               	movf	(_voltage^(0+256)+2),w
  7957  06F2  00F2               	movwf	___awdiv@dividend
  7958  06F3  3192  2248  3182   	fcall	___awdiv
  7959  06F6  0871               	movf	?___awdiv+1,w
  7960  06F7  00FA               	movwf	___wmul@multiplier+1
  7961  06F8  0870               	movf	?___awdiv,w
  7962  06F9  00F9               	movwf	___wmul@multiplier
  7963  06FA  0022               	movlb	2	; select bank2
  7964  06FB  0833               	movf	((_current+1)^(0+256)+2),w
  7965  06FC  00FC               	movwf	___wmul@multiplicand+1
  7966  06FD  0832               	movf	(_current^(0+256)+2),w
  7967  06FE  00FB               	movwf	___wmul@multiplicand
  7968  06FF  319F  270E  3182   	fcall	___wmul
  7969  0702  087A               	movf	?___wmul+1,w
  7970  0703  0021               	movlb	1	; select bank1
  7971  0704  00DB               	movwf	(_main$1354+1)^(0+128)
  7972  0705  0879               	movf	?___wmul,w
  7973  0706  00DA               	movwf	_main$1354^(0+128)
  7974  0707  300A               	movlw	10
  7975  0708  00F0               	movwf	___awdiv@divisor
  7976  0709  3000               	movlw	0
  7977  070A  00F1               	movwf	___awdiv@divisor+1
  7978  070B  085B               	movf	(_main$1354+1)^(0+128),w
  7979  070C  00F3               	movwf	___awdiv@dividend+1
  7980  070D  085A               	movf	_main$1354^(0+128),w
  7981  070E  00F2               	movwf	___awdiv@dividend
  7982  070F  3192  2248  3182   	fcall	___awdiv
  7983  0712  0871               	movf	?___awdiv+1,w
  7984  0713  0021               	movlb	1	; select bank1
  7985  0714  00DD               	movwf	(_main$1355+1)^(0+128)
  7986  0715  0870               	movf	?___awdiv,w
  7987  0716  00DC               	movwf	_main$1355^(0+128)
  7988  0717  085D               	movf	(_main$1355+1)^(0+128),w
  7989  0718  0020               	movlb	0	; select bank0
  7990  0719  00A9               	movwf	LCDWriteInt@value+1
  7991  071A  0021               	movlb	1	; select bank1
  7992  071B  085C               	movf	_main$1355^(0+128),w
  7993  071C  0020               	movlb	0	; select bank0
  7994  071D  00A8               	movwf	LCDWriteInt@value
  7995  071E  3003               	movlw	3
  7996  071F  0021               	movlb	1	; select bank1
  7997  0720  00C3               	movwf	??_main^(0+128)
  7998  0721  0843               	movf	??_main^(0+128),w
  7999  0722  0020               	movlb	0	; select bank0
  8000  0723  00AA               	movwf	LCDWriteInt@fieldLength
  8001  0724  01AB               	clrf	LCDWriteInt@numPlaces
  8002  0725  01AC               	clrf	LCDWriteInt@sign
  8003  0726  3197  2747  3182   	fcall	_LCDWriteInt
  8004                           
  8005                           ;main.c: 252: LCDWriteCharacter('W');
  8006  0729  3057               	movlw	87
  8007  072A  3193  233B  3182   	fcall	_LCDWriteCharacter
  8008                           
  8009                           ;main.c: 255: { gotoXY(48,4); LCDWriteInt(MPPT0,4, 0, 0);};
  8010  072D  3004               	movlw	4
  8011  072E  0021               	movlb	1	; select bank1
  8012  072F  00C3               	movwf	??_main^(0+128)
  8013  0730  0843               	movf	??_main^(0+128),w
  8014  0731  00F5               	movwf	gotoXY@y
  8015  0732  3030               	movlw	48
  8016  0733  319E  268A  3182   	fcall	_gotoXY
  8017  0736  0021               	movlb	1	; select bank1
  8018  0737  0868               	movf	(main@MPPT0+1)^(0+128),w
  8019  0738  0020               	movlb	0	; select bank0
  8020  0739  00A9               	movwf	LCDWriteInt@value+1
  8021  073A  0021               	movlb	1	; select bank1
  8022  073B  0867               	movf	main@MPPT0^(0+128),w
  8023  073C  0020               	movlb	0	; select bank0
  8024  073D  00A8               	movwf	LCDWriteInt@value
  8025  073E  3004               	movlw	4
  8026  073F  0021               	movlb	1	; select bank1
  8027  0740  00C3               	movwf	??_main^(0+128)
  8028  0741  0843               	movf	??_main^(0+128),w
  8029  0742  0020               	movlb	0	; select bank0
  8030  0743  00AA               	movwf	LCDWriteInt@fieldLength
  8031  0744  01AB               	clrf	LCDWriteInt@numPlaces
  8032  0745  01AC               	clrf	LCDWriteInt@sign
  8033  0746  3197  2747  3182   	fcall	_LCDWriteInt
  8034                           
  8035                           ;main.c: 263: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  8036  0749  3005               	movlw	5
  8037  074A  0021               	movlb	1	; select bank1
  8038  074B  00C3               	movwf	??_main^(0+128)
  8039  074C  0843               	movf	??_main^(0+128),w
  8040  074D  00F5               	movwf	gotoXY@y
  8041  074E  3000               	movlw	0
  8042  074F  319E  268A  3182   	fcall	_gotoXY
  8043  0752  0021               	movlb	1	; select bank1
  8044  0753  086B               	movf	(main@dutyCycle6+1)^(0+128),w
  8045  0754  0020               	movlb	0	; select bank0
  8046  0755  00A9               	movwf	LCDWriteInt@value+1
  8047  0756  0021               	movlb	1	; select bank1
  8048  0757  086A               	movf	main@dutyCycle6^(0+128),w
  8049  0758  0020               	movlb	0	; select bank0
  8050  0759  00A8               	movwf	LCDWriteInt@value
  8051  075A  3004               	movlw	4
  8052  075B  0021               	movlb	1	; select bank1
  8053  075C  00C3               	movwf	??_main^(0+128)
  8054  075D  0843               	movf	??_main^(0+128),w
  8055  075E  0020               	movlb	0	; select bank0
  8056  075F  00AA               	movwf	LCDWriteInt@fieldLength
  8057  0760  01AB               	clrf	LCDWriteInt@numPlaces
  8058  0761  01AC               	clrf	LCDWriteInt@sign
  8059  0762  3197  2747  3182   	fcall	_LCDWriteInt
  8060                           
  8061                           ;main.c: 264: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  8062  0765  3005               	movlw	5
  8063  0766  0021               	movlb	1	; select bank1
  8064  0767  00C3               	movwf	??_main^(0+128)
  8065  0768  0843               	movf	??_main^(0+128),w
  8066  0769  00F5               	movwf	gotoXY@y
  8067  076A  3018               	movlw	24
  8068  076B  319E  268A  3182   	fcall	_gotoXY
  8069  076E  0021               	movlb	1	; select bank1
  8070  076F  0866               	movf	(main@dutyCycle7+1)^(0+128),w
  8071  0770  0020               	movlb	0	; select bank0
  8072  0771  00A9               	movwf	LCDWriteInt@value+1
  8073  0772  0021               	movlb	1	; select bank1
  8074  0773  0865               	movf	main@dutyCycle7^(0+128),w
  8075  0774  0020               	movlb	0	; select bank0
  8076  0775  00A8               	movwf	LCDWriteInt@value
  8077  0776  3004               	movlw	4
  8078  0777  0021               	movlb	1	; select bank1
  8079  0778  00C3               	movwf	??_main^(0+128)
  8080  0779  0843               	movf	??_main^(0+128),w
  8081  077A  0020               	movlb	0	; select bank0
  8082  077B  00AA               	movwf	LCDWriteInt@fieldLength
  8083  077C  01AB               	clrf	LCDWriteInt@numPlaces
  8084  077D  01AC               	clrf	LCDWriteInt@sign
  8085  077E  3197  2747  3182   	fcall	_LCDWriteInt
  8086                           
  8087                           ;main.c: 265: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  8088  0781  3005               	movlw	5
  8089  0782  0021               	movlb	1	; select bank1
  8090  0783  00C3               	movwf	??_main^(0+128)
  8091  0784  0843               	movf	??_main^(0+128),w
  8092  0785  00F5               	movwf	gotoXY@y
  8093  0786  3030               	movlw	48
  8094  0787  319E  268A  3182   	fcall	_gotoXY
  8095  078A  0021               	movlb	1	; select bank1
  8096  078B  0863               	movf	(main@dutyCycle1+1)^(0+128),w
  8097  078C  0020               	movlb	0	; select bank0
  8098  078D  00A9               	movwf	LCDWriteInt@value+1
  8099  078E  0021               	movlb	1	; select bank1
  8100  078F  0862               	movf	main@dutyCycle1^(0+128),w
  8101  0790  0020               	movlb	0	; select bank0
  8102  0791  00A8               	movwf	LCDWriteInt@value
  8103  0792  3004               	movlw	4
  8104  0793  0021               	movlb	1	; select bank1
  8105  0794  00C3               	movwf	??_main^(0+128)
  8106  0795  0843               	movf	??_main^(0+128),w
  8107  0796  0020               	movlb	0	; select bank0
  8108  0797  00AA               	movwf	LCDWriteInt@fieldLength
  8109  0798  01AB               	clrf	LCDWriteInt@numPlaces
  8110  0799  01AC               	clrf	LCDWriteInt@sign
  8111  079A  3197  2747  3182   	fcall	_LCDWriteInt
  8112                           
  8113                           ;main.c: 266: { gotoXY(74,5); LCDWriteInt(!RB2,1, 0, 0);};
  8114  079D  3005               	movlw	5
  8115  079E  0021               	movlb	1	; select bank1
  8116  079F  00C3               	movwf	??_main^(0+128)
  8117  07A0  0843               	movf	??_main^(0+128),w
  8118  07A1  00F5               	movwf	gotoXY@y
  8119  07A2  304A               	movlw	74
  8120  07A3  319E  268A  3182   	fcall	_gotoXY
  8121  07A6  1003               	clrc
  8122  07A7  0020               	movlb	0	; select bank0
  8123  07A8  1D0D               	btfss	13,2	;volatile
  8124  07A9  1403               	setc
  8125  07AA  3000               	movlw	0
  8126  07AB  3D09               	addwfc	9,w
  8127  07AC  0021               	movlb	1	; select bank1
  8128  07AD  00C3               	movwf	??_main^(0+128)
  8129  07AE  01C4               	clrf	(??_main^(0+128)+1)
  8130  07AF  0843               	movf	??_main^(0+128),w
  8131  07B0  0020               	movlb	0	; select bank0
  8132  07B1  00A8               	movwf	LCDWriteInt@value
  8133  07B2  0021               	movlb	1	; select bank1
  8134  07B3  0844               	movf	(??_main+1)^(0+128),w
  8135  07B4  0020               	movlb	0	; select bank0
  8136  07B5  00A9               	movwf	LCDWriteInt@value+1
  8137  07B6  01AA               	clrf	LCDWriteInt@fieldLength
  8138  07B7  0AAA               	incf	LCDWriteInt@fieldLength,f
  8139  07B8  01AB               	clrf	LCDWriteInt@numPlaces
  8140  07B9  01AC               	clrf	LCDWriteInt@sign
  8141  07BA  3197  2747  3182   	fcall	_LCDWriteInt
  8142                           
  8143                           ;main.c: 268: if(battery_state > FINISHED)
  8144  07BD  3003               	movlw	3
  8145  07BE  0022               	movlb	2	; select bank2
  8146  07BF  026E               	subwf	_battery_state^(0+256),w
  8147  07C0  1C03               	skipc
  8148  07C1  2FC5               	goto	l3895
  8149                           
  8150                           ;main.c: 269: {
  8151                           ;main.c: 270: cc_cv_mode();
  8152  07C2  3188  200A  3182   	fcall	_cc_cv_mode
  8153  07C5                     l3895:	
  8154                           
  8155                           ;main.c: 271: }
  8156                           ;main.c: 272: slowLoop=0;
  8157  07C5  0021               	movlb	1	; select bank1
  8158  07C6  01D2               	clrf	main@slowLoop^(0+128)
  8159  07C7  2A6B               	goto	l3681
  8160  07C8                     __end_of_main:	
  8161                           
  8162                           	psect	text1
  8163  0C1B                     __ptext1:	
  8164 ;; *************** function _tempCalc *****************
  8165 ;; Defined at:
  8166 ;;		line 4 in file "tempCalc.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  analogValue     2   21[BANK1 ] int 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;  steinhart       4   31[BANK1 ] float 
  8171 ;;  R               4   23[BANK1 ] float 
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  2   21[BANK1 ] int 
  8174 ;; Registers used:
  8175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8181 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8184 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8185 ;;Total ram usage:       14 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; Hardware stack levels required when called:    4
  8188 ;; This function calls:
  8189 ;;		___fladd
  8190 ;;		___fldiv
  8191 ;;		___flmul
  8192 ;;		___flsub
  8193 ;;		___fltol
  8194 ;;		___xxtofl
  8195 ;;		_log
  8196 ;; This function is called by:
  8197 ;;		_main
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           
  8202                           ;psect for function _tempCalc
  8203  0C1B                     _tempCalc:	
  8204                           
  8205                           ;tempCalc.c: 6: float R, steinhart;
  8206                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8207                           
  8208                           ;incstack = 0
  8209                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8210  0C1B  30BF               	movlw	191
  8211  0C1C  0020               	movlb	0	; select bank0
  8212  0C1D  00D7               	movwf	___fladd@b+3
  8213  0C1E  3080               	movlw	128
  8214  0C1F  00D6               	movwf	___fladd@b+2
  8215  0C20  3000               	movlw	0
  8216  0C21  00D5               	movwf	___fladd@b+1
  8217  0C22  3000               	movlw	0
  8218  0C23  00D4               	movwf	___fladd@b
  8219  0C24  0021               	movlb	1	; select bank1
  8220  0C25  0835               	movf	tempCalc@analogValue^(0+128),w
  8221  0C26  00F0               	movwf	___xxtofl@val
  8222  0C27  0836               	movf	(tempCalc@analogValue+1)^(0+128),w
  8223  0C28  00F1               	movwf	___xxtofl@val+1
  8224  0C29  0D89               	rlf	9,f
  8225  0C2A  3B89               	subwfb	9,f
  8226  0C2B  0989               	comf	9,f
  8227  0C2C  00F2               	movwf	___xxtofl@val+2
  8228  0C2D  00F3               	movwf	___xxtofl@val+3
  8229  0C2E  3001               	movlw	1
  8230  0C2F  3195  2582  318C   	fcall	___xxtofl
  8231  0C32  0873               	movf	?___xxtofl+3,w
  8232  0C33  0020               	movlb	0	; select bank0
  8233  0C34  00A3               	movwf	___fldiv@a+3
  8234  0C35  0872               	movf	?___xxtofl+2,w
  8235  0C36  00A2               	movwf	___fldiv@a+2
  8236  0C37  0871               	movf	?___xxtofl+1,w
  8237  0C38  00A1               	movwf	___fldiv@a+1
  8238  0C39  0870               	movf	?___xxtofl,w
  8239  0C3A  00A0               	movwf	___fldiv@a
  8240  0C3B  3044               	movlw	68
  8241  0C3C  00A7               	movwf	___fldiv@b+3
  8242  0C3D  307F               	movlw	127
  8243  0C3E  00A6               	movwf	___fldiv@b+2
  8244  0C3F  30C0               	movlw	192
  8245  0C40  00A5               	movwf	___fldiv@b+1
  8246  0C41  3000               	movlw	0
  8247  0C42  00A4               	movwf	___fldiv@b
  8248  0C43  318A  228C  318C   	fcall	___fldiv
  8249  0C46  0020               	movlb	0	; select bank0
  8250  0C47  0823               	movf	?___fldiv+3,w
  8251  0C48  00DB               	movwf	___fladd@a+3
  8252  0C49  0822               	movf	?___fldiv+2,w
  8253  0C4A  00DA               	movwf	___fladd@a+2
  8254  0C4B  0821               	movf	?___fldiv+1,w
  8255  0C4C  00D9               	movwf	___fladd@a+1
  8256  0C4D  0820               	movf	?___fldiv,w
  8257  0C4E  00D8               	movwf	___fladd@a
  8258  0C4F  318E  2604  318C   	fcall	___fladd
  8259  0C52  0020               	movlb	0	; select bank0
  8260  0C53  0857               	movf	?___fladd+3,w
  8261  0C54  0021               	movlb	1	; select bank1
  8262  0C55  00BE               	movwf	(_tempCalc$1351+3)^(0+128)
  8263  0C56  0020               	movlb	0	; select bank0
  8264  0C57  0856               	movf	?___fladd+2,w
  8265  0C58  0021               	movlb	1	; select bank1
  8266  0C59  00BD               	movwf	(_tempCalc$1351+2)^(0+128)
  8267  0C5A  0020               	movlb	0	; select bank0
  8268  0C5B  0855               	movf	?___fladd+1,w
  8269  0C5C  0021               	movlb	1	; select bank1
  8270  0C5D  00BC               	movwf	(_tempCalc$1351+1)^(0+128)
  8271  0C5E  0020               	movlb	0	; select bank0
  8272  0C5F  0854               	movf	?___fladd,w
  8273  0C60  0021               	movlb	1	; select bank1
  8274  0C61  00BB               	movwf	_tempCalc$1351^(0+128)
  8275                           
  8276                           ;tempCalc.c: 6: float R, steinhart;
  8277                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8278  0C62  083E               	movf	(_tempCalc$1351+3)^(0+128),w
  8279  0C63  0020               	movlb	0	; select bank0
  8280  0C64  00A3               	movwf	___fldiv@a+3
  8281  0C65  0021               	movlb	1	; select bank1
  8282  0C66  083D               	movf	(_tempCalc$1351+2)^(0+128),w
  8283  0C67  0020               	movlb	0	; select bank0
  8284  0C68  00A2               	movwf	___fldiv@a+2
  8285  0C69  0021               	movlb	1	; select bank1
  8286  0C6A  083C               	movf	(_tempCalc$1351+1)^(0+128),w
  8287  0C6B  0020               	movlb	0	; select bank0
  8288  0C6C  00A1               	movwf	___fldiv@a+1
  8289  0C6D  0021               	movlb	1	; select bank1
  8290  0C6E  083B               	movf	_tempCalc$1351^(0+128),w
  8291  0C6F  0020               	movlb	0	; select bank0
  8292  0C70  00A0               	movwf	___fldiv@a
  8293  0C71  3046               	movlw	70
  8294  0C72  00A7               	movwf	___fldiv@b+3
  8295  0C73  301A               	movlw	26
  8296  0C74  00A6               	movwf	___fldiv@b+2
  8297  0C75  3088               	movlw	136
  8298  0C76  00A5               	movwf	___fldiv@b+1
  8299  0C77  3000               	movlw	0
  8300  0C78  00A4               	movwf	___fldiv@b
  8301  0C79  318A  228C  318C   	fcall	___fldiv
  8302  0C7C  0020               	movlb	0	; select bank0
  8303  0C7D  0823               	movf	?___fldiv+3,w
  8304  0C7E  0021               	movlb	1	; select bank1
  8305  0C7F  00BA               	movwf	(tempCalc@R+3)^(0+128)
  8306  0C80  0020               	movlb	0	; select bank0
  8307  0C81  0822               	movf	?___fldiv+2,w
  8308  0C82  0021               	movlb	1	; select bank1
  8309  0C83  00B9               	movwf	(tempCalc@R+2)^(0+128)
  8310  0C84  0020               	movlb	0	; select bank0
  8311  0C85  0821               	movf	?___fldiv+1,w
  8312  0C86  0021               	movlb	1	; select bank1
  8313  0C87  00B8               	movwf	(tempCalc@R+1)^(0+128)
  8314  0C88  0020               	movlb	0	; select bank0
  8315  0C89  0820               	movf	?___fldiv,w
  8316  0C8A  0021               	movlb	1	; select bank1
  8317  0C8B  00B7               	movwf	tempCalc@R^(0+128)
  8318                           
  8319                           ;tempCalc.c: 10: steinhart = R /9990;
  8320  0C8C  3046               	movlw	70
  8321  0C8D  0020               	movlb	0	; select bank0
  8322  0C8E  00A3               	movwf	___fldiv@a+3
  8323  0C8F  301C               	movlw	28
  8324  0C90  00A2               	movwf	___fldiv@a+2
  8325  0C91  3018               	movlw	24
  8326  0C92  00A1               	movwf	___fldiv@a+1
  8327  0C93  3000               	movlw	0
  8328  0C94  00A0               	movwf	___fldiv@a
  8329  0C95  0021               	movlb	1	; select bank1
  8330  0C96  083A               	movf	(tempCalc@R+3)^(0+128),w
  8331  0C97  0020               	movlb	0	; select bank0
  8332  0C98  00A7               	movwf	___fldiv@b+3
  8333  0C99  0021               	movlb	1	; select bank1
  8334  0C9A  0839               	movf	(tempCalc@R+2)^(0+128),w
  8335  0C9B  0020               	movlb	0	; select bank0
  8336  0C9C  00A6               	movwf	___fldiv@b+2
  8337  0C9D  0021               	movlb	1	; select bank1
  8338  0C9E  0838               	movf	(tempCalc@R+1)^(0+128),w
  8339  0C9F  0020               	movlb	0	; select bank0
  8340  0CA0  00A5               	movwf	___fldiv@b+1
  8341  0CA1  0021               	movlb	1	; select bank1
  8342  0CA2  0837               	movf	tempCalc@R^(0+128),w
  8343  0CA3  0020               	movlb	0	; select bank0
  8344  0CA4  00A4               	movwf	___fldiv@b
  8345  0CA5  318A  228C  318C   	fcall	___fldiv
  8346  0CA8  0020               	movlb	0	; select bank0
  8347  0CA9  0823               	movf	?___fldiv+3,w
  8348  0CAA  0021               	movlb	1	; select bank1
  8349  0CAB  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8350  0CAC  0020               	movlb	0	; select bank0
  8351  0CAD  0822               	movf	?___fldiv+2,w
  8352  0CAE  0021               	movlb	1	; select bank1
  8353  0CAF  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8354  0CB0  0020               	movlb	0	; select bank0
  8355  0CB1  0821               	movf	?___fldiv+1,w
  8356  0CB2  0021               	movlb	1	; select bank1
  8357  0CB3  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8358  0CB4  0020               	movlb	0	; select bank0
  8359  0CB5  0820               	movf	?___fldiv,w
  8360  0CB6  0021               	movlb	1	; select bank1
  8361  0CB7  00BF               	movwf	tempCalc@steinhart^(0+128)
  8362                           
  8363                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8364  0CB8  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8365  0CB9  00B1               	movwf	(log@x+3)^(0+128)
  8366  0CBA  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8367  0CBB  00B0               	movwf	(log@x+2)^(0+128)
  8368  0CBC  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8369  0CBD  00AF               	movwf	(log@x+1)^(0+128)
  8370  0CBE  083F               	movf	tempCalc@steinhart^(0+128),w
  8371  0CBF  00AE               	movwf	log@x^(0+128)
  8372  0CC0  3188  204F  318C   	fcall	_log
  8373  0CC3  0021               	movlb	1	; select bank1
  8374  0CC4  0831               	movf	(?_log+3)^(0+128),w
  8375  0CC5  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8376  0CC6  0830               	movf	(?_log+2)^(0+128),w
  8377  0CC7  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8378  0CC8  082F               	movf	(?_log+1)^(0+128),w
  8379  0CC9  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8380  0CCA  082E               	movf	?_log^(0+128),w
  8381  0CCB  00BF               	movwf	tempCalc@steinhart^(0+128)
  8382                           
  8383                           ;tempCalc.c: 12: steinhart /= 4030;
  8384  0CCC  3045               	movlw	69
  8385  0CCD  0020               	movlb	0	; select bank0
  8386  0CCE  00A3               	movwf	___fldiv@a+3
  8387  0CCF  307B               	movlw	123
  8388  0CD0  00A2               	movwf	___fldiv@a+2
  8389  0CD1  30E0               	movlw	224
  8390  0CD2  00A1               	movwf	___fldiv@a+1
  8391  0CD3  3000               	movlw	0
  8392  0CD4  00A0               	movwf	___fldiv@a
  8393  0CD5  0021               	movlb	1	; select bank1
  8394  0CD6  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8395  0CD7  0020               	movlb	0	; select bank0
  8396  0CD8  00A7               	movwf	___fldiv@b+3
  8397  0CD9  0021               	movlb	1	; select bank1
  8398  0CDA  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8399  0CDB  0020               	movlb	0	; select bank0
  8400  0CDC  00A6               	movwf	___fldiv@b+2
  8401  0CDD  0021               	movlb	1	; select bank1
  8402  0CDE  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8403  0CDF  0020               	movlb	0	; select bank0
  8404  0CE0  00A5               	movwf	___fldiv@b+1
  8405  0CE1  0021               	movlb	1	; select bank1
  8406  0CE2  083F               	movf	tempCalc@steinhart^(0+128),w
  8407  0CE3  0020               	movlb	0	; select bank0
  8408  0CE4  00A4               	movwf	___fldiv@b
  8409  0CE5  318A  228C  318C   	fcall	___fldiv
  8410  0CE8  0020               	movlb	0	; select bank0
  8411  0CE9  0823               	movf	?___fldiv+3,w
  8412  0CEA  0021               	movlb	1	; select bank1
  8413  0CEB  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8414  0CEC  0020               	movlb	0	; select bank0
  8415  0CED  0822               	movf	?___fldiv+2,w
  8416  0CEE  0021               	movlb	1	; select bank1
  8417  0CEF  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8418  0CF0  0020               	movlb	0	; select bank0
  8419  0CF1  0821               	movf	?___fldiv+1,w
  8420  0CF2  0021               	movlb	1	; select bank1
  8421  0CF3  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8422  0CF4  0020               	movlb	0	; select bank0
  8423  0CF5  0820               	movf	?___fldiv,w
  8424  0CF6  0021               	movlb	1	; select bank1
  8425  0CF7  00BF               	movwf	tempCalc@steinhart^(0+128)
  8426                           
  8427                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8428  0CF8  303B               	movlw	59
  8429  0CF9  0020               	movlb	0	; select bank0
  8430  0CFA  00D7               	movwf	___fladd@b+3
  8431  0CFB  305B               	movlw	91
  8432  0CFC  00D6               	movwf	___fladd@b+2
  8433  0CFD  30CF               	movlw	207
  8434  0CFE  00D5               	movwf	___fladd@b+1
  8435  0CFF  300F               	movlw	15
  8436  0D00  00D4               	movwf	___fladd@b
  8437  0D01  0021               	movlb	1	; select bank1
  8438  0D02  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8439  0D03  0020               	movlb	0	; select bank0
  8440  0D04  00DB               	movwf	___fladd@a+3
  8441  0D05  0021               	movlb	1	; select bank1
  8442  0D06  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8443  0D07  0020               	movlb	0	; select bank0
  8444  0D08  00DA               	movwf	___fladd@a+2
  8445  0D09  0021               	movlb	1	; select bank1
  8446  0D0A  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8447  0D0B  0020               	movlb	0	; select bank0
  8448  0D0C  00D9               	movwf	___fladd@a+1
  8449  0D0D  0021               	movlb	1	; select bank1
  8450  0D0E  083F               	movf	tempCalc@steinhart^(0+128),w
  8451  0D0F  0020               	movlb	0	; select bank0
  8452  0D10  00D8               	movwf	___fladd@a
  8453  0D11  318E  2604  318C   	fcall	___fladd
  8454  0D14  0020               	movlb	0	; select bank0
  8455  0D15  0857               	movf	?___fladd+3,w
  8456  0D16  0021               	movlb	1	; select bank1
  8457  0D17  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8458  0D18  0020               	movlb	0	; select bank0
  8459  0D19  0856               	movf	?___fladd+2,w
  8460  0D1A  0021               	movlb	1	; select bank1
  8461  0D1B  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8462  0D1C  0020               	movlb	0	; select bank0
  8463  0D1D  0855               	movf	?___fladd+1,w
  8464  0D1E  0021               	movlb	1	; select bank1
  8465  0D1F  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8466  0D20  0020               	movlb	0	; select bank0
  8467  0D21  0854               	movf	?___fladd,w
  8468  0D22  0021               	movlb	1	; select bank1
  8469  0D23  00BF               	movwf	tempCalc@steinhart^(0+128)
  8470                           
  8471                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8472  0D24  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8473  0D25  0020               	movlb	0	; select bank0
  8474  0D26  00A3               	movwf	___fldiv@a+3
  8475  0D27  0021               	movlb	1	; select bank1
  8476  0D28  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8477  0D29  0020               	movlb	0	; select bank0
  8478  0D2A  00A2               	movwf	___fldiv@a+2
  8479  0D2B  0021               	movlb	1	; select bank1
  8480  0D2C  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8481  0D2D  0020               	movlb	0	; select bank0
  8482  0D2E  00A1               	movwf	___fldiv@a+1
  8483  0D2F  0021               	movlb	1	; select bank1
  8484  0D30  083F               	movf	tempCalc@steinhart^(0+128),w
  8485  0D31  0020               	movlb	0	; select bank0
  8486  0D32  00A0               	movwf	___fldiv@a
  8487  0D33  303F               	movlw	63
  8488  0D34  00A7               	movwf	___fldiv@b+3
  8489  0D35  3080               	movlw	128
  8490  0D36  00A6               	movwf	___fldiv@b+2
  8491  0D37  3000               	movlw	0
  8492  0D38  00A5               	movwf	___fldiv@b+1
  8493  0D39  3000               	movlw	0
  8494  0D3A  00A4               	movwf	___fldiv@b
  8495  0D3B  318A  228C  318C   	fcall	___fldiv
  8496  0D3E  0020               	movlb	0	; select bank0
  8497  0D3F  0823               	movf	?___fldiv+3,w
  8498  0D40  0021               	movlb	1	; select bank1
  8499  0D41  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8500  0D42  0020               	movlb	0	; select bank0
  8501  0D43  0822               	movf	?___fldiv+2,w
  8502  0D44  0021               	movlb	1	; select bank1
  8503  0D45  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8504  0D46  0020               	movlb	0	; select bank0
  8505  0D47  0821               	movf	?___fldiv+1,w
  8506  0D48  0021               	movlb	1	; select bank1
  8507  0D49  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8508  0D4A  0020               	movlb	0	; select bank0
  8509  0D4B  0820               	movf	?___fldiv,w
  8510  0D4C  0021               	movlb	1	; select bank1
  8511  0D4D  00BF               	movwf	tempCalc@steinhart^(0+128)
  8512                           
  8513                           ;tempCalc.c: 17: steinhart -= 273.15;
  8514  0D4E  3043               	movlw	67
  8515  0D4F  00A3               	movwf	(___flsub@a+3)^(0+128)
  8516  0D50  3088               	movlw	136
  8517  0D51  00A2               	movwf	(___flsub@a+2)^(0+128)
  8518  0D52  3093               	movlw	147
  8519  0D53  00A1               	movwf	(___flsub@a+1)^(0+128)
  8520  0D54  3033               	movlw	51
  8521  0D55  00A0               	movwf	___flsub@a^(0+128)
  8522  0D56  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8523  0D57  00A7               	movwf	(___flsub@b+3)^(0+128)
  8524  0D58  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8525  0D59  00A6               	movwf	(___flsub@b+2)^(0+128)
  8526  0D5A  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8527  0D5B  00A5               	movwf	(___flsub@b+1)^(0+128)
  8528  0D5C  083F               	movf	tempCalc@steinhart^(0+128),w
  8529  0D5D  00A4               	movwf	___flsub@b^(0+128)
  8530  0D5E  3191  2163  318C   	fcall	___flsub
  8531  0D61  0021               	movlb	1	; select bank1
  8532  0D62  0823               	movf	(?___flsub+3)^(0+128),w
  8533  0D63  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8534  0D64  0822               	movf	(?___flsub+2)^(0+128),w
  8535  0D65  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8536  0D66  0821               	movf	(?___flsub+1)^(0+128),w
  8537  0D67  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8538  0D68  0820               	movf	?___flsub^(0+128),w
  8539  0D69  00BF               	movwf	tempCalc@steinhart^(0+128)
  8540                           
  8541                           ;tempCalc.c: 19: steinhart*=10;
  8542  0D6A  3041               	movlw	65
  8543  0D6B  0020               	movlb	0	; select bank0
  8544  0D6C  00BD               	movwf	___flmul@b+3
  8545  0D6D  3020               	movlw	32
  8546  0D6E  00BC               	movwf	___flmul@b+2
  8547  0D6F  3000               	movlw	0
  8548  0D70  00BB               	movwf	___flmul@b+1
  8549  0D71  3000               	movlw	0
  8550  0D72  00BA               	movwf	___flmul@b
  8551  0D73  0021               	movlb	1	; select bank1
  8552  0D74  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8553  0D75  0020               	movlb	0	; select bank0
  8554  0D76  00C1               	movwf	___flmul@a+3
  8555  0D77  0021               	movlb	1	; select bank1
  8556  0D78  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8557  0D79  0020               	movlb	0	; select bank0
  8558  0D7A  00C0               	movwf	___flmul@a+2
  8559  0D7B  0021               	movlb	1	; select bank1
  8560  0D7C  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8561  0D7D  0020               	movlb	0	; select bank0
  8562  0D7E  00BF               	movwf	___flmul@a+1
  8563  0D7F  0021               	movlb	1	; select bank1
  8564  0D80  083F               	movf	tempCalc@steinhart^(0+128),w
  8565  0D81  0020               	movlb	0	; select bank0
  8566  0D82  00BE               	movwf	___flmul@a
  8567  0D83  3180  200A  318C   	fcall	___flmul
  8568  0D86  0020               	movlb	0	; select bank0
  8569  0D87  083D               	movf	?___flmul+3,w
  8570  0D88  0021               	movlb	1	; select bank1
  8571  0D89  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8572  0D8A  0020               	movlb	0	; select bank0
  8573  0D8B  083C               	movf	?___flmul+2,w
  8574  0D8C  0021               	movlb	1	; select bank1
  8575  0D8D  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8576  0D8E  0020               	movlb	0	; select bank0
  8577  0D8F  083B               	movf	?___flmul+1,w
  8578  0D90  0021               	movlb	1	; select bank1
  8579  0D91  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8580  0D92  0020               	movlb	0	; select bank0
  8581  0D93  083A               	movf	?___flmul,w
  8582  0D94  0021               	movlb	1	; select bank1
  8583  0D95  00BF               	movwf	tempCalc@steinhart^(0+128)
  8584                           
  8585                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8586  0D96  3043               	movlw	67
  8587  0D97  0020               	movlb	0	; select bank0
  8588  0D98  00D7               	movwf	___fladd@b+3
  8589  0D99  30A0               	movlw	160
  8590  0D9A  00D6               	movwf	___fladd@b+2
  8591  0D9B  3000               	movlw	0
  8592  0D9C  00D5               	movwf	___fladd@b+1
  8593  0D9D  3000               	movlw	0
  8594  0D9E  00D4               	movwf	___fladd@b
  8595  0D9F  3040               	movlw	64
  8596  0DA0  00A3               	movwf	___fldiv@a+3
  8597  0DA1  30A0               	movlw	160
  8598  0DA2  00A2               	movwf	___fldiv@a+2
  8599  0DA3  3000               	movlw	0
  8600  0DA4  00A1               	movwf	___fldiv@a+1
  8601  0DA5  3000               	movlw	0
  8602  0DA6  00A0               	movwf	___fldiv@a
  8603  0DA7  3041               	movlw	65
  8604  0DA8  00BD               	movwf	___flmul@b+3
  8605  0DA9  3010               	movlw	16
  8606  0DAA  00BC               	movwf	___flmul@b+2
  8607  0DAB  3000               	movlw	0
  8608  0DAC  00BB               	movwf	___flmul@b+1
  8609  0DAD  3000               	movlw	0
  8610  0DAE  00BA               	movwf	___flmul@b
  8611  0DAF  0021               	movlb	1	; select bank1
  8612  0DB0  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8613  0DB1  0020               	movlb	0	; select bank0
  8614  0DB2  00C1               	movwf	___flmul@a+3
  8615  0DB3  0021               	movlb	1	; select bank1
  8616  0DB4  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8617  0DB5  0020               	movlb	0	; select bank0
  8618  0DB6  00C0               	movwf	___flmul@a+2
  8619  0DB7  0021               	movlb	1	; select bank1
  8620  0DB8  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8621  0DB9  0020               	movlb	0	; select bank0
  8622  0DBA  00BF               	movwf	___flmul@a+1
  8623  0DBB  0021               	movlb	1	; select bank1
  8624  0DBC  083F               	movf	tempCalc@steinhart^(0+128),w
  8625  0DBD  0020               	movlb	0	; select bank0
  8626  0DBE  00BE               	movwf	___flmul@a
  8627  0DBF  3180  200A  318C   	fcall	___flmul
  8628  0DC2  0020               	movlb	0	; select bank0
  8629  0DC3  083D               	movf	?___flmul+3,w
  8630  0DC4  00A7               	movwf	___fldiv@b+3
  8631  0DC5  083C               	movf	?___flmul+2,w
  8632  0DC6  00A6               	movwf	___fldiv@b+2
  8633  0DC7  083B               	movf	?___flmul+1,w
  8634  0DC8  00A5               	movwf	___fldiv@b+1
  8635  0DC9  083A               	movf	?___flmul,w
  8636  0DCA  00A4               	movwf	___fldiv@b
  8637  0DCB  318A  228C  318C   	fcall	___fldiv
  8638  0DCE  0020               	movlb	0	; select bank0
  8639  0DCF  0823               	movf	?___fldiv+3,w
  8640  0DD0  00DB               	movwf	___fladd@a+3
  8641  0DD1  0822               	movf	?___fldiv+2,w
  8642  0DD2  00DA               	movwf	___fladd@a+2
  8643  0DD3  0821               	movf	?___fldiv+1,w
  8644  0DD4  00D9               	movwf	___fladd@a+1
  8645  0DD5  0820               	movf	?___fldiv,w
  8646  0DD6  00D8               	movwf	___fladd@a
  8647  0DD7  318E  2604  318C   	fcall	___fladd
  8648  0DDA  0020               	movlb	0	; select bank0
  8649  0DDB  0857               	movf	?___fladd+3,w
  8650  0DDC  0021               	movlb	1	; select bank1
  8651  0DDD  00C2               	movwf	(tempCalc@steinhart+3)^(0+128)
  8652  0DDE  0020               	movlb	0	; select bank0
  8653  0DDF  0856               	movf	?___fladd+2,w
  8654  0DE0  0021               	movlb	1	; select bank1
  8655  0DE1  00C1               	movwf	(tempCalc@steinhart+2)^(0+128)
  8656  0DE2  0020               	movlb	0	; select bank0
  8657  0DE3  0855               	movf	?___fladd+1,w
  8658  0DE4  0021               	movlb	1	; select bank1
  8659  0DE5  00C0               	movwf	(tempCalc@steinhart+1)^(0+128)
  8660  0DE6  0020               	movlb	0	; select bank0
  8661  0DE7  0854               	movf	?___fladd,w
  8662  0DE8  0021               	movlb	1	; select bank1
  8663  0DE9  00BF               	movwf	tempCalc@steinhart^(0+128)
  8664                           
  8665                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8666  0DEA  0842               	movf	(tempCalc@steinhart+3)^(0+128),w
  8667  0DEB  0020               	movlb	0	; select bank0
  8668  0DEC  00BD               	movwf	___fltol@f1+3
  8669  0DED  0021               	movlb	1	; select bank1
  8670  0DEE  0841               	movf	(tempCalc@steinhart+2)^(0+128),w
  8671  0DEF  0020               	movlb	0	; select bank0
  8672  0DF0  00BC               	movwf	___fltol@f1+2
  8673  0DF1  0021               	movlb	1	; select bank1
  8674  0DF2  0840               	movf	(tempCalc@steinhart+1)^(0+128),w
  8675  0DF3  0020               	movlb	0	; select bank0
  8676  0DF4  00BB               	movwf	___fltol@f1+1
  8677  0DF5  0021               	movlb	1	; select bank1
  8678  0DF6  083F               	movf	tempCalc@steinhart^(0+128),w
  8679  0DF7  0020               	movlb	0	; select bank0
  8680  0DF8  00BA               	movwf	___fltol@f1
  8681  0DF9  3193  23FA         	fcall	___fltol
  8682  0DFB  0020               	movlb	0	; select bank0
  8683  0DFC  083B               	movf	?___fltol+1,w
  8684  0DFD  0021               	movlb	1	; select bank1
  8685  0DFE  00B6               	movwf	(?_tempCalc+1)^(0+128)
  8686  0DFF  0020               	movlb	0	; select bank0
  8687  0E00  083A               	movf	?___fltol,w
  8688  0E01  0021               	movlb	1	; select bank1
  8689  0E02  00B5               	movwf	?_tempCalc^(0+128)
  8690  0E03  0008               	return
  8691  0E04                     __end_of_tempCalc:	
  8692                           
  8693                           	psect	text2
  8694  084F                     __ptext2:	
  8695 ;; *************** function _log *****************
  8696 ;; Defined at:
  8697 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  x               4   14[BANK1 ] int 
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;  exponent        2   19[BANK1 ] int 
  8702 ;; Return value:  Size  Location     Type
  8703 ;;                  4   14[BANK1 ] int 
  8704 ;; Registers used:
  8705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8711 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8712 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8713 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8714 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  8715 ;;Total ram usage:        7 bytes
  8716 ;; Hardware stack levels used:    1
  8717 ;; Hardware stack levels required when called:    3
  8718 ;; This function calls:
  8719 ;;		___fladd
  8720 ;;		___flge
  8721 ;;		___flmul
  8722 ;;		___xxtofl
  8723 ;;		_eval_poly
  8724 ;;		_frexp
  8725 ;; This function is called by:
  8726 ;;		_tempCalc
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           
  8731                           ;psect for function _log
  8732  084F                     _log:	
  8733                           
  8734                           ;incstack = 0
  8735                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8736  084F  0021               	movlb	1	; select bank1
  8737  0850  0831               	movf	(log@x+3)^(0+128),w
  8738  0851  00F3               	movwf	___flge@ff1+3
  8739  0852  0830               	movf	(log@x+2)^(0+128),w
  8740  0853  00F2               	movwf	___flge@ff1+2
  8741  0854  082F               	movf	(log@x+1)^(0+128),w
  8742  0855  00F1               	movwf	___flge@ff1+1
  8743  0856  082E               	movf	log@x^(0+128),w
  8744  0857  00F0               	movwf	___flge@ff1
  8745  0858  3000               	movlw	0
  8746  0859  00F7               	movwf	___flge@ff2+3
  8747  085A  3000               	movlw	0
  8748  085B  00F6               	movwf	___flge@ff2+2
  8749  085C  3000               	movlw	0
  8750  085D  00F5               	movwf	___flge@ff2+1
  8751  085E  3000               	movlw	0
  8752  085F  00F4               	movwf	___flge@ff2
  8753  0860  3196  26AD  3188   	fcall	___flge
  8754  0863  1803               	btfsc	3,0
  8755  0864  2874               	goto	l3135
  8756  0865  3021               	movlw	33
  8757  0866  0022               	movlb	2	; select bank2
  8758  0867  00C5               	movwf	_errno^(0+256)
  8759  0868  3000               	movlw	0
  8760  0869  00C6               	movwf	(_errno^(0+256)+1)
  8761  086A  3000               	movlw	0
  8762  086B  0021               	movlb	1	; select bank1
  8763  086C  00B1               	movwf	(?_log+3)^(0+128)
  8764  086D  3000               	movlw	0
  8765  086E  00B0               	movwf	(?_log+2)^(0+128)
  8766  086F  3000               	movlw	0
  8767  0870  00AF               	movwf	(?_log+1)^(0+128)
  8768  0871  3000               	movlw	0
  8769  0872  00AE               	movwf	?_log^(0+128)
  8770  0873  0008               	return
  8771  0874                     l3135:	
  8772  0874  0021               	movlb	1	; select bank1
  8773  0875  0831               	movf	(log@x+3)^(0+128),w
  8774  0876  0430               	iorwf	(log@x+2)^(0+128),w
  8775  0877  042F               	iorwf	(log@x+1)^(0+128),w
  8776  0878  042E               	iorwf	log@x^(0+128),w
  8777  0879  1D03               	skipz
  8778  087A  288A               	goto	l3141
  8779  087B  3022               	movlw	34
  8780  087C  0022               	movlb	2	; select bank2
  8781  087D  00C5               	movwf	_errno^(0+256)
  8782  087E  3000               	movlw	0
  8783  087F  00C6               	movwf	(_errno^(0+256)+1)
  8784  0880  3000               	movlw	0
  8785  0881  0021               	movlb	1	; select bank1
  8786  0882  00B1               	movwf	(?_log+3)^(0+128)
  8787  0883  3000               	movlw	0
  8788  0884  00B0               	movwf	(?_log+2)^(0+128)
  8789  0885  3000               	movlw	0
  8790  0886  00AF               	movwf	(?_log+1)^(0+128)
  8791  0887  3000               	movlw	0
  8792  0888  00AE               	movwf	?_log^(0+128)
  8793  0889  0008               	return
  8794  088A                     l3141:	
  8795  088A  30BF               	movlw	191
  8796  088B  0020               	movlb	0	; select bank0
  8797  088C  00D7               	movwf	___fladd@b+3
  8798  088D  3080               	movlw	128
  8799  088E  00D6               	movwf	___fladd@b+2
  8800  088F  3000               	movlw	0
  8801  0890  00D5               	movwf	___fladd@b+1
  8802  0891  3000               	movlw	0
  8803  0892  00D4               	movwf	___fladd@b
  8804  0893  3040               	movlw	64
  8805  0894  00BD               	movwf	___flmul@b+3
  8806  0895  3000               	movlw	0
  8807  0896  00BC               	movwf	___flmul@b+2
  8808  0897  3000               	movlw	0
  8809  0898  00BB               	movwf	___flmul@b+1
  8810  0899  3000               	movlw	0
  8811  089A  00BA               	movwf	___flmul@b
  8812  089B  30B3               	movlw	(low (log@exponent| 0))& (0+255)
  8813  089C  0021               	movlb	1	; select bank1
  8814  089D  00B2               	movwf	??_log^(0+128)
  8815  089E  0832               	movf	??_log^(0+128),w
  8816  089F  00F4               	movwf	frexp@eptr
  8817  08A0  0831               	movf	(log@x+3)^(0+128),w
  8818  08A1  00F3               	movwf	frexp@value+3
  8819  08A2  0830               	movf	(log@x+2)^(0+128),w
  8820  08A3  00F2               	movwf	frexp@value+2
  8821  08A4  082F               	movf	(log@x+1)^(0+128),w
  8822  08A5  00F1               	movwf	frexp@value+1
  8823  08A6  082E               	movf	log@x^(0+128),w
  8824  08A7  00F0               	movwf	frexp@value
  8825  08A8  3192  220A  3188   	fcall	_frexp
  8826  08AB  0873               	movf	?_frexp+3,w
  8827  08AC  0020               	movlb	0	; select bank0
  8828  08AD  00C1               	movwf	___flmul@a+3
  8829  08AE  0872               	movf	?_frexp+2,w
  8830  08AF  00C0               	movwf	___flmul@a+2
  8831  08B0  0871               	movf	?_frexp+1,w
  8832  08B1  00BF               	movwf	___flmul@a+1
  8833  08B2  0870               	movf	?_frexp,w
  8834  08B3  00BE               	movwf	___flmul@a
  8835  08B4  3180  200A  3188   	fcall	___flmul
  8836  08B7  0020               	movlb	0	; select bank0
  8837  08B8  083D               	movf	?___flmul+3,w
  8838  08B9  00DB               	movwf	___fladd@a+3
  8839  08BA  083C               	movf	?___flmul+2,w
  8840  08BB  00DA               	movwf	___fladd@a+2
  8841  08BC  083B               	movf	?___flmul+1,w
  8842  08BD  00D9               	movwf	___fladd@a+1
  8843  08BE  083A               	movf	?___flmul,w
  8844  08BF  00D8               	movwf	___fladd@a
  8845  08C0  318E  2604  3188   	fcall	___fladd
  8846  08C3  0020               	movlb	0	; select bank0
  8847  08C4  0857               	movf	?___fladd+3,w
  8848  08C5  0021               	movlb	1	; select bank1
  8849  08C6  00B1               	movwf	(log@x+3)^(0+128)
  8850  08C7  0020               	movlb	0	; select bank0
  8851  08C8  0856               	movf	?___fladd+2,w
  8852  08C9  0021               	movlb	1	; select bank1
  8853  08CA  00B0               	movwf	(log@x+2)^(0+128)
  8854  08CB  0020               	movlb	0	; select bank0
  8855  08CC  0855               	movf	?___fladd+1,w
  8856  08CD  0021               	movlb	1	; select bank1
  8857  08CE  00AF               	movwf	(log@x+1)^(0+128)
  8858  08CF  0020               	movlb	0	; select bank0
  8859  08D0  0854               	movf	?___fladd,w
  8860  08D1  0021               	movlb	1	; select bank1
  8861  08D2  00AE               	movwf	log@x^(0+128)
  8862  08D3  30FF               	movlw	255
  8863  08D4  07B3               	addwf	log@exponent^(0+128),f
  8864  08D5  30FF               	movlw	255
  8865  08D6  3DB4               	addwfc	(log@exponent+1)^(0+128),f
  8866  08D7  0831               	movf	(log@x+3)^(0+128),w
  8867  08D8  00A3               	movwf	(eval_poly@x+3)^(0+128)
  8868  08D9  0830               	movf	(log@x+2)^(0+128),w
  8869  08DA  00A2               	movwf	(eval_poly@x+2)^(0+128)
  8870  08DB  082F               	movf	(log@x+1)^(0+128),w
  8871  08DC  00A1               	movwf	(eval_poly@x+1)^(0+128)
  8872  08DD  082E               	movf	log@x^(0+128),w
  8873  08DE  00A0               	movwf	eval_poly@x^(0+128)
  8874  08DF  3000               	movlw	low (log@coeff| (0+32768))
  8875  08E0  00A4               	movwf	eval_poly@d^(0+128)
  8876  08E1  3098               	movlw	high (log@coeff| (0+32768))
  8877  08E2  00A5               	movwf	(eval_poly@d^(0+128)+1)
  8878  08E3  3008               	movlw	8
  8879  08E4  00A6               	movwf	eval_poly@n^(0+128)
  8880  08E5  3000               	movlw	0
  8881  08E6  00A7               	movwf	(eval_poly@n^(0+128)+1)
  8882  08E7  3196  2617  3188   	fcall	_eval_poly
  8883  08EA  0021               	movlb	1	; select bank1
  8884  08EB  0823               	movf	(?_eval_poly+3)^(0+128),w
  8885  08EC  00B1               	movwf	(log@x+3)^(0+128)
  8886  08ED  0822               	movf	(?_eval_poly+2)^(0+128),w
  8887  08EE  00B0               	movwf	(log@x+2)^(0+128)
  8888  08EF  0821               	movf	(?_eval_poly+1)^(0+128),w
  8889  08F0  00AF               	movwf	(log@x+1)^(0+128)
  8890  08F1  0820               	movf	?_eval_poly^(0+128),w
  8891  08F2  00AE               	movwf	log@x^(0+128)
  8892  08F3  0831               	movf	(log@x+3)^(0+128),w
  8893  08F4  0020               	movlb	0	; select bank0
  8894  08F5  00D7               	movwf	___fladd@b+3
  8895  08F6  0021               	movlb	1	; select bank1
  8896  08F7  0830               	movf	(log@x+2)^(0+128),w
  8897  08F8  0020               	movlb	0	; select bank0
  8898  08F9  00D6               	movwf	___fladd@b+2
  8899  08FA  0021               	movlb	1	; select bank1
  8900  08FB  082F               	movf	(log@x+1)^(0+128),w
  8901  08FC  0020               	movlb	0	; select bank0
  8902  08FD  00D5               	movwf	___fladd@b+1
  8903  08FE  0021               	movlb	1	; select bank1
  8904  08FF  082E               	movf	log@x^(0+128),w
  8905  0900  0020               	movlb	0	; select bank0
  8906  0901  00D4               	movwf	___fladd@b
  8907  0902  303F               	movlw	63
  8908  0903  00BD               	movwf	___flmul@b+3
  8909  0904  3031               	movlw	49
  8910  0905  00BC               	movwf	___flmul@b+2
  8911  0906  3072               	movlw	114
  8912  0907  00BB               	movwf	___flmul@b+1
  8913  0908  3018               	movlw	24
  8914  0909  00BA               	movwf	___flmul@b
  8915  090A  0021               	movlb	1	; select bank1
  8916  090B  0833               	movf	log@exponent^(0+128),w
  8917  090C  00F0               	movwf	___xxtofl@val
  8918  090D  0834               	movf	(log@exponent+1)^(0+128),w
  8919  090E  00F1               	movwf	___xxtofl@val+1
  8920  090F  0D89               	rlf	9,f
  8921  0910  3B89               	subwfb	9,f
  8922  0911  0989               	comf	9,f
  8923  0912  00F2               	movwf	___xxtofl@val+2
  8924  0913  00F3               	movwf	___xxtofl@val+3
  8925  0914  3001               	movlw	1
  8926  0915  3195  2582  3188   	fcall	___xxtofl
  8927  0918  0873               	movf	?___xxtofl+3,w
  8928  0919  0020               	movlb	0	; select bank0
  8929  091A  00C1               	movwf	___flmul@a+3
  8930  091B  0872               	movf	?___xxtofl+2,w
  8931  091C  00C0               	movwf	___flmul@a+2
  8932  091D  0871               	movf	?___xxtofl+1,w
  8933  091E  00BF               	movwf	___flmul@a+1
  8934  091F  0870               	movf	?___xxtofl,w
  8935  0920  00BE               	movwf	___flmul@a
  8936  0921  3180  200A  3188   	fcall	___flmul
  8937  0924  0020               	movlb	0	; select bank0
  8938  0925  083D               	movf	?___flmul+3,w
  8939  0926  00DB               	movwf	___fladd@a+3
  8940  0927  083C               	movf	?___flmul+2,w
  8941  0928  00DA               	movwf	___fladd@a+2
  8942  0929  083B               	movf	?___flmul+1,w
  8943  092A  00D9               	movwf	___fladd@a+1
  8944  092B  083A               	movf	?___flmul,w
  8945  092C  00D8               	movwf	___fladd@a
  8946  092D  318E  2604         	fcall	___fladd
  8947  092F  0020               	movlb	0	; select bank0
  8948  0930  0857               	movf	?___fladd+3,w
  8949  0931  0021               	movlb	1	; select bank1
  8950  0932  00B1               	movwf	(?_log+3)^(0+128)
  8951  0933  0020               	movlb	0	; select bank0
  8952  0934  0856               	movf	?___fladd+2,w
  8953  0935  0021               	movlb	1	; select bank1
  8954  0936  00B0               	movwf	(?_log+2)^(0+128)
  8955  0937  0020               	movlb	0	; select bank0
  8956  0938  0855               	movf	?___fladd+1,w
  8957  0939  0021               	movlb	1	; select bank1
  8958  093A  00AF               	movwf	(?_log+1)^(0+128)
  8959  093B  0020               	movlb	0	; select bank0
  8960  093C  0854               	movf	?___fladd,w
  8961  093D  0021               	movlb	1	; select bank1
  8962  093E  00AE               	movwf	?_log^(0+128)
  8963  093F  0008               	return
  8964  0940                     __end_of_log:	
  8965                           
  8966                           	psect	text3
  8967  120A                     __ptext3:	
  8968 ;; *************** function _frexp *****************
  8969 ;; Defined at:
  8970 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;  value           4    0[COMMON] int 
  8973 ;;  eptr            1    4[COMMON] PTR int 
  8974 ;;		 -> log@exponent(2), 
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;		None
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  4    0[COMMON] PTR int 
  8979 ;; Registers used:
  8980 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8986 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8989 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8990 ;;Total ram usage:        7 bytes
  8991 ;; Hardware stack levels used:    1
  8992 ;; This function calls:
  8993 ;;		Nothing
  8994 ;; This function is called by:
  8995 ;;		_log
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           
  9000                           ;psect for function _frexp
  9001  120A                     _frexp:	
  9002                           
  9003                           ;incstack = 0
  9004                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  9005  120A  0873               	movf	frexp@value+3,w
  9006  120B  0472               	iorwf	frexp@value+2,w
  9007  120C  0471               	iorwf	frexp@value+1,w
  9008  120D  0470               	iorwf	frexp@value,w
  9009  120E  1D03               	skipz
  9010  120F  2A1F               	goto	l2893
  9011  1210  0874               	movf	frexp@eptr,w
  9012  1211  0086               	movwf	6
  9013  1212  0187               	clrf	7
  9014  1213  3000               	movlw	0
  9015  1214  3FC0               	movwi [0]fsr1
  9016  1215  3FC1               	movwi [1]fsr1
  9017  1216  3000               	movlw	0
  9018  1217  00F3               	movwf	?_frexp+3
  9019  1218  3000               	movlw	0
  9020  1219  00F2               	movwf	?_frexp+2
  9021  121A  3000               	movlw	0
  9022  121B  00F1               	movwf	?_frexp+1
  9023  121C  3000               	movlw	0
  9024  121D  00F0               	movwf	?_frexp
  9025  121E  0008               	return
  9026  121F                     l2893:	
  9027  121F  0873               	movf	frexp@value+3,w
  9028  1220  397F               	andlw	127
  9029  1221  00F5               	movwf	??_frexp
  9030  1222  01F6               	clrf	??_frexp+1
  9031  1223  35F5               	lslf	??_frexp,f
  9032  1224  0DF6               	rlf	??_frexp+1,f
  9033  1225  0874               	movf	frexp@eptr,w
  9034  1226  0086               	movwf	6
  9035  1227  0187               	clrf	7
  9036  1228  0875               	movf	??_frexp,w
  9037  1229  3FC0               	movwi [0]fsr1
  9038  122A  0876               	movf	??_frexp+1,w
  9039  122B  3FC1               	movwi [1]fsr1
  9040  122C  0D72               	rlf	frexp@value+2,w
  9041  122D  0D72               	rlf	frexp@value+2,w
  9042  122E  3901               	andlw	1
  9043  122F  00F5               	movwf	??_frexp
  9044  1230  01F6               	clrf	??_frexp+1
  9045  1231  0874               	movf	frexp@eptr,w
  9046  1232  0086               	movwf	6
  9047  1233  0187               	clrf	7
  9048  1234  0875               	movf	??_frexp,w
  9049  1235  0481               	iorwf	1,f
  9050  1236  3141               	addfsr 1,1
  9051  1237  0876               	movf	??_frexp+1,w
  9052  1238  0481               	iorwf	1,f
  9053  1239  0874               	movf	frexp@eptr,w
  9054  123A  0086               	movwf	6
  9055  123B  0187               	clrf	7
  9056  123C  3082               	movlw	130
  9057  123D  0781               	addwf	1,f
  9058  123E  3141               	addfsr 1,1
  9059  123F  30FF               	movlw	255
  9060  1240  3D81               	addwfc	1,f
  9061  1241  317F               	addfsr 1,-1
  9062  1242  0873               	movf	frexp@value+3,w
  9063  1243  3980               	andlw	-128
  9064  1244  383F               	iorlw	63
  9065  1245  00F3               	movwf	frexp@value+3
  9066  1246  13F2               	bcf	frexp@value+2,7
  9067  1247  0008               	return
  9068  1248                     __end_of_frexp:	
  9069                           
  9070                           	psect	text4
  9071  1617                     __ptext4:	
  9072 ;; *************** function _eval_poly *****************
  9073 ;; Defined at:
  9074 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  x               4    0[BANK1 ] PTR int 
  9077 ;;  d               2    4[BANK1 ] PTR const 
  9078 ;;		 -> log@coeff(36), 
  9079 ;;  n               2    6[BANK1 ] int 
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;  res             4   76[BANK0 ] int 
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  4    0[BANK1 ] int 
  9084 ;; Registers used:
  9085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9091 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Totals:         0       4      14       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;Total ram usage:       18 bytes
  9096 ;; Hardware stack levels used:    1
  9097 ;; Hardware stack levels required when called:    2
  9098 ;; This function calls:
  9099 ;;		___fladd
  9100 ;;		___flmul
  9101 ;; This function is called by:
  9102 ;;		_log
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           
  9107                           ;psect for function _eval_poly
  9108  1617                     _eval_poly:	
  9109                           
  9110                           ;incstack = 0
  9111                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9112  1617  0021               	movlb	1	; select bank1
  9113  1618  0827               	movf	(eval_poly@n+1)^(0+128),w
  9114  1619  00A9               	movwf	(??_eval_poly^(0+128)+1)
  9115  161A  0826               	movf	eval_poly@n^(0+128),w
  9116  161B  00A8               	movwf	??_eval_poly^(0+128)
  9117  161C  35A8               	lslf	??_eval_poly^(0+128),f
  9118  161D  0DA9               	rlf	(??_eval_poly^(0+128)+1),f
  9119  161E  35A8               	lslf	??_eval_poly^(0+128),f
  9120  161F  0DA9               	rlf	(??_eval_poly^(0+128)+1),f
  9121  1620  0824               	movf	eval_poly@d^(0+128),w
  9122  1621  0728               	addwf	??_eval_poly^(0+128),w
  9123  1622  0084               	movwf	4
  9124  1623  0825               	movf	(eval_poly@d+1)^(0+128),w
  9125  1624  3D29               	addwfc	(??_eval_poly+1)^(0+128),w
  9126  1625  0085               	movwf	5
  9127  1626  3F00               	moviw [0]fsr0
  9128  1627  00AA               	movwf	(??_eval_poly+2)^(0+128)
  9129  1628  3F01               	moviw [1]fsr0
  9130  1629  00AB               	movwf	((??_eval_poly+2)^(0+128)+1)
  9131  162A  3F02               	moviw [2]fsr0
  9132  162B  00AC               	movwf	((??_eval_poly+2)^(0+128)+2)
  9133  162C  3F03               	moviw [3]fsr0
  9134  162D  00AD               	movwf	((??_eval_poly+2)^(0+128)+3)
  9135  162E  082D               	movf	(??_eval_poly+5)^(0+128),w
  9136  162F  0020               	movlb	0	; select bank0
  9137  1630  00EF               	movwf	eval_poly@res+3
  9138  1631  0021               	movlb	1	; select bank1
  9139  1632  082C               	movf	(??_eval_poly+4)^(0+128),w
  9140  1633  0020               	movlb	0	; select bank0
  9141  1634  00EE               	movwf	eval_poly@res+2
  9142  1635  0021               	movlb	1	; select bank1
  9143  1636  082B               	movf	(??_eval_poly+3)^(0+128),w
  9144  1637  0020               	movlb	0	; select bank0
  9145  1638  00ED               	movwf	eval_poly@res+1
  9146  1639  0021               	movlb	1	; select bank1
  9147  163A  082A               	movf	(??_eval_poly+2)^(0+128),w
  9148  163B  0020               	movlb	0	; select bank0
  9149  163C                     L2:	
  9150  163C  00EC               	movwf	eval_poly@res
  9151  163D  0021               	movlb	1	; select bank1
  9152  163E  0826               	movf	eval_poly@n^(0+128),w
  9153  163F  0427               	iorwf	(eval_poly@n+1)^(0+128),w
  9154  1640  1903               	btfsc	3,2
  9155  1641  2E9C               	goto	l2911
  9156  1642  30FF               	movlw	255
  9157  1643  0021               	movlb	1	; select bank1
  9158  1644  07A6               	addwf	eval_poly@n^(0+128),f
  9159  1645  30FF               	movlw	255
  9160  1646  3DA7               	addwfc	(eval_poly@n+1)^(0+128),f
  9161  1647  0827               	movf	(eval_poly@n+1)^(0+128),w
  9162  1648  00A9               	movwf	(??_eval_poly^(0+128)+1)
  9163  1649  0826               	movf	eval_poly@n^(0+128),w
  9164  164A  00A8               	movwf	??_eval_poly^(0+128)
  9165  164B  35A8               	lslf	??_eval_poly^(0+128),f
  9166  164C  0DA9               	rlf	(??_eval_poly^(0+128)+1),f
  9167  164D  35A8               	lslf	??_eval_poly^(0+128),f
  9168  164E  0DA9               	rlf	(??_eval_poly^(0+128)+1),f
  9169  164F  0824               	movf	eval_poly@d^(0+128),w
  9170  1650  0728               	addwf	??_eval_poly^(0+128),w
  9171  1651  0084               	movwf	4
  9172  1652  0825               	movf	(eval_poly@d+1)^(0+128),w
  9173  1653  3D29               	addwfc	(??_eval_poly+1)^(0+128),w
  9174  1654  0085               	movwf	5
  9175  1655  3F00               	moviw [0]fsr0
  9176  1656  00AA               	movwf	(??_eval_poly+2)^(0+128)
  9177  1657  3F01               	moviw [1]fsr0
  9178  1658  00AB               	movwf	((??_eval_poly+2)^(0+128)+1)
  9179  1659  3F02               	moviw [2]fsr0
  9180  165A  00AC               	movwf	((??_eval_poly+2)^(0+128)+2)
  9181  165B  3F03               	moviw [3]fsr0
  9182  165C  00AD               	movwf	((??_eval_poly+2)^(0+128)+3)
  9183  165D  082D               	movf	(??_eval_poly+5)^(0+128),w
  9184  165E  0020               	movlb	0	; select bank0
  9185  165F  00D7               	movwf	___fladd@b+3
  9186  1660  0021               	movlb	1	; select bank1
  9187  1661  082C               	movf	(??_eval_poly+4)^(0+128),w
  9188  1662  0020               	movlb	0	; select bank0
  9189  1663  00D6               	movwf	___fladd@b+2
  9190  1664  0021               	movlb	1	; select bank1
  9191  1665  082B               	movf	(??_eval_poly+3)^(0+128),w
  9192  1666  0020               	movlb	0	; select bank0
  9193  1667  00D5               	movwf	___fladd@b+1
  9194  1668  0021               	movlb	1	; select bank1
  9195  1669  082A               	movf	(??_eval_poly+2)^(0+128),w
  9196  166A  0020               	movlb	0	; select bank0
  9197  166B  00D4               	movwf	___fladd@b
  9198  166C  086F               	movf	eval_poly@res+3,w
  9199  166D  00BD               	movwf	___flmul@b+3
  9200  166E  086E               	movf	eval_poly@res+2,w
  9201  166F  00BC               	movwf	___flmul@b+2
  9202  1670  086D               	movf	eval_poly@res+1,w
  9203  1671  00BB               	movwf	___flmul@b+1
  9204  1672  086C               	movf	eval_poly@res,w
  9205  1673  00BA               	movwf	___flmul@b
  9206  1674  0021               	movlb	1	; select bank1
  9207  1675  0823               	movf	(eval_poly@x+3)^(0+128),w
  9208  1676  0020               	movlb	0	; select bank0
  9209  1677  00C1               	movwf	___flmul@a+3
  9210  1678  0021               	movlb	1	; select bank1
  9211  1679  0822               	movf	(eval_poly@x+2)^(0+128),w
  9212  167A  0020               	movlb	0	; select bank0
  9213  167B  00C0               	movwf	___flmul@a+2
  9214  167C  0021               	movlb	1	; select bank1
  9215  167D  0821               	movf	(eval_poly@x+1)^(0+128),w
  9216  167E  0020               	movlb	0	; select bank0
  9217  167F  00BF               	movwf	___flmul@a+1
  9218  1680  0021               	movlb	1	; select bank1
  9219  1681  0820               	movf	eval_poly@x^(0+128),w
  9220  1682  0020               	movlb	0	; select bank0
  9221  1683  00BE               	movwf	___flmul@a
  9222  1684  3180  200A  3196   	fcall	___flmul
  9223  1687  0020               	movlb	0	; select bank0
  9224  1688  083D               	movf	?___flmul+3,w
  9225  1689  00DB               	movwf	___fladd@a+3
  9226  168A  083C               	movf	?___flmul+2,w
  9227  168B  00DA               	movwf	___fladd@a+2
  9228  168C  083B               	movf	?___flmul+1,w
  9229  168D  00D9               	movwf	___fladd@a+1
  9230  168E  083A               	movf	?___flmul,w
  9231  168F  00D8               	movwf	___fladd@a
  9232  1690  318E  2604  3196   	fcall	___fladd
  9233  1693  0020               	movlb	0	; select bank0
  9234  1694  0857               	movf	?___fladd+3,w
  9235  1695  00EF               	movwf	eval_poly@res+3
  9236  1696  0856               	movf	?___fladd+2,w
  9237  1697  00EE               	movwf	eval_poly@res+2
  9238  1698  0855               	movf	?___fladd+1,w
  9239  1699  00ED               	movwf	eval_poly@res+1
  9240  169A  0854               	movf	?___fladd,w
  9241  169B  2E3C               	goto	L2
  9242  169C                     l2911:	
  9243  169C  0020               	movlb	0	; select bank0
  9244  169D  086F               	movf	eval_poly@res+3,w
  9245  169E  0021               	movlb	1	; select bank1
  9246  169F  00A3               	movwf	(?_eval_poly+3)^(0+128)
  9247  16A0  0020               	movlb	0	; select bank0
  9248  16A1  086E               	movf	eval_poly@res+2,w
  9249  16A2  0021               	movlb	1	; select bank1
  9250  16A3  00A2               	movwf	(?_eval_poly+2)^(0+128)
  9251  16A4  0020               	movlb	0	; select bank0
  9252  16A5  086D               	movf	eval_poly@res+1,w
  9253  16A6  0021               	movlb	1	; select bank1
  9254  16A7  00A1               	movwf	(?_eval_poly+1)^(0+128)
  9255  16A8  0020               	movlb	0	; select bank0
  9256  16A9  086C               	movf	eval_poly@res,w
  9257  16AA  0021               	movlb	1	; select bank1
  9258  16AB  00A0               	movwf	?_eval_poly^(0+128)
  9259  16AC  0008               	return
  9260  16AD                     __end_of_eval_poly:	
  9261                           
  9262                           	psect	text5
  9263  000A                     __ptext5:	
  9264 ;; *************** function ___flmul *****************
  9265 ;; Defined at:
  9266 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  b               4   26[BANK0 ] int 
  9269 ;;  a               4   30[BANK0 ] int 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  prod            4   46[BANK0 ] struct .
  9272 ;;  grs             4   40[BANK0 ] unsigned long 
  9273 ;;  temp            2   50[BANK0 ] struct .
  9274 ;;  bexp            1   45[BANK0 ] unsigned char 
  9275 ;;  aexp            1   44[BANK0 ] unsigned char 
  9276 ;;  sign            1   39[BANK0 ] unsigned char 
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  4   26[BANK0 ] unsigned char 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2, status,0, pclath, cstack
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9286 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;Total ram usage:       26 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:    1
  9293 ;; This function calls:
  9294 ;;		__Umul8_16
  9295 ;; This function is called by:
  9296 ;;		_tempCalc
  9297 ;;		_main
  9298 ;;		_log
  9299 ;;		_eval_poly
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           
  9304                           ;psect for function ___flmul
  9305  000A                     ___flmul:	
  9306                           
  9307                           ;incstack = 0
  9308                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9309  000A  0020               	movlb	0	; select bank0
  9310  000B  083D               	movf	___flmul@b+3,w
  9311  000C  3980               	andlw	128
  9312  000D  00C2               	movwf	??___flmul
  9313  000E  0842               	movf	??___flmul,w
  9314  000F  00C7               	movwf	___flmul@sign
  9315  0010  353D               	lslf	___flmul@b+3,w
  9316  0011  00C2               	movwf	??___flmul
  9317  0012  0842               	movf	??___flmul,w
  9318  0013  00CD               	movwf	___flmul@bexp
  9319  0014  1BBC               	btfsc	___flmul@b+2,7
  9320  0015  144D               	bsf	___flmul@bexp,0
  9321  0016  084D               	movf	___flmul@bexp,w
  9322  0017  1903               	btfsc	3,2
  9323  0018  2826               	goto	l2719
  9324  0019  0A4D               	incf	___flmul@bexp,w
  9325  001A  1D03               	btfss	3,2
  9326  001B  2824               	goto	l2717
  9327  001C  3000               	movlw	0
  9328  001D  00BD               	movwf	___flmul@b+3
  9329  001E  3000               	movlw	0
  9330  001F  00BC               	movwf	___flmul@b+2
  9331  0020  3000               	movlw	0
  9332  0021  00BB               	movwf	___flmul@b+1
  9333  0022  3000               	movlw	0
  9334  0023  00BA               	movwf	___flmul@b
  9335  0024                     l2717:	
  9336  0024  17BC               	bsf	___flmul@b+2,7
  9337  0025  282E               	goto	l2721
  9338  0026                     l2719:	
  9339  0026  3000               	movlw	0
  9340  0027  00BD               	movwf	___flmul@b+3
  9341  0028  3000               	movlw	0
  9342  0029  00BC               	movwf	___flmul@b+2
  9343  002A  3000               	movlw	0
  9344  002B  00BB               	movwf	___flmul@b+1
  9345  002C  3000               	movlw	0
  9346  002D  00BA               	movwf	___flmul@b
  9347  002E                     l2721:	
  9348  002E  0841               	movf	___flmul@a+3,w
  9349  002F  3980               	andlw	128
  9350  0030  00C2               	movwf	??___flmul
  9351  0031  0842               	movf	??___flmul,w
  9352  0032  06C7               	xorwf	___flmul@sign,f
  9353  0033  3541               	lslf	___flmul@a+3,w
  9354  0034  00C2               	movwf	??___flmul
  9355  0035  0842               	movf	??___flmul,w
  9356  0036  00CC               	movwf	___flmul@aexp
  9357  0037  1BC0               	btfsc	___flmul@a+2,7
  9358  0038  144C               	bsf	___flmul@aexp,0
  9359  0039  084C               	movf	___flmul@aexp,w
  9360  003A  1903               	btfsc	3,2
  9361  003B  2849               	goto	l2737
  9362  003C  0A4C               	incf	___flmul@aexp,w
  9363  003D  1D03               	btfss	3,2
  9364  003E  2847               	goto	l2735
  9365  003F  3000               	movlw	0
  9366  0040  00C1               	movwf	___flmul@a+3
  9367  0041  3000               	movlw	0
  9368  0042  00C0               	movwf	___flmul@a+2
  9369  0043  3000               	movlw	0
  9370  0044  00BF               	movwf	___flmul@a+1
  9371  0045  3000               	movlw	0
  9372  0046  00BE               	movwf	___flmul@a
  9373  0047                     l2735:	
  9374  0047  17C0               	bsf	___flmul@a+2,7
  9375  0048  2851               	goto	l2739
  9376  0049                     l2737:	
  9377  0049  3000               	movlw	0
  9378  004A  00C1               	movwf	___flmul@a+3
  9379  004B  3000               	movlw	0
  9380  004C  00C0               	movwf	___flmul@a+2
  9381  004D  3000               	movlw	0
  9382  004E  00BF               	movwf	___flmul@a+1
  9383  004F  3000               	movlw	0
  9384  0050  00BE               	movwf	___flmul@a
  9385  0051                     l2739:	
  9386  0051  084C               	movf	___flmul@aexp,w
  9387  0052  1D03               	btfss	3,2
  9388  0053  084D               	movf	___flmul@bexp,w
  9389  0054  1D03               	btfss	3,2
  9390  0055  285F               	goto	l2747
  9391  0056  3000               	movlw	0
  9392  0057  00BD               	movwf	?___flmul+3
  9393  0058  3000               	movlw	0
  9394  0059  00BC               	movwf	?___flmul+2
  9395  005A  3000               	movlw	0
  9396  005B  00BB               	movwf	?___flmul+1
  9397  005C  3000               	movlw	0
  9398  005D  00BA               	movwf	?___flmul
  9399  005E  0008               	return
  9400  005F                     l2747:	
  9401  005F  083A               	movf	___flmul@b,w
  9402  0060  00C2               	movwf	??___flmul
  9403  0061  0842               	movf	??___flmul,w
  9404  0062  00F0               	movwf	__Umul8_16@multiplicand
  9405  0063  0840               	movf	___flmul@a+2,w
  9406  0064  319F  276A  3180   	fcall	__Umul8_16
  9407  0067  0871               	movf	?__Umul8_16+1,w
  9408  0068  0020               	movlb	0	; select bank0
  9409  0069  00D3               	movwf	___flmul@temp+1
  9410  006A  0870               	movf	?__Umul8_16,w
  9411  006B  00D2               	movwf	___flmul@temp
  9412  006C  0852               	movf	___flmul@temp,w
  9413  006D  00C2               	movwf	??___flmul
  9414  006E  01C3               	clrf	??___flmul+1
  9415  006F  01C4               	clrf	??___flmul+2
  9416  0070  01C5               	clrf	??___flmul+3
  9417  0071  0845               	movf	??___flmul+3,w
  9418  0072  00CB               	movwf	___flmul@grs+3
  9419  0073  0844               	movf	??___flmul+2,w
  9420  0074  00CA               	movwf	___flmul@grs+2
  9421  0075  0843               	movf	??___flmul+1,w
  9422  0076  00C9               	movwf	___flmul@grs+1
  9423  0077  0842               	movf	??___flmul,w
  9424  0078  00C8               	movwf	___flmul@grs
  9425  0079  0853               	movf	___flmul@temp+1,w
  9426  007A  00C2               	movwf	??___flmul
  9427  007B  01C3               	clrf	??___flmul+1
  9428  007C  01C4               	clrf	??___flmul+2
  9429  007D  01C5               	clrf	??___flmul+3
  9430  007E  0845               	movf	??___flmul+3,w
  9431  007F  00D1               	movwf	___flmul@prod+3
  9432  0080  0844               	movf	??___flmul+2,w
  9433  0081  00D0               	movwf	___flmul@prod+2
  9434  0082  0843               	movf	??___flmul+1,w
  9435  0083  00CF               	movwf	___flmul@prod+1
  9436  0084  0842               	movf	??___flmul,w
  9437  0085  00CE               	movwf	___flmul@prod
  9438  0086  083B               	movf	___flmul@b+1,w
  9439  0087  00C2               	movwf	??___flmul
  9440  0088  0842               	movf	??___flmul,w
  9441  0089  00F0               	movwf	__Umul8_16@multiplicand
  9442  008A  083F               	movf	___flmul@a+1,w
  9443  008B  319F  276A  3180   	fcall	__Umul8_16
  9444  008E  0871               	movf	?__Umul8_16+1,w
  9445  008F  0020               	movlb	0	; select bank0
  9446  0090  00D3               	movwf	___flmul@temp+1
  9447  0091  0870               	movf	?__Umul8_16,w
  9448  0092  00D2               	movwf	___flmul@temp
  9449  0093  0852               	movf	___flmul@temp,w
  9450  0094  00C2               	movwf	??___flmul
  9451  0095  01C3               	clrf	??___flmul+1
  9452  0096  01C4               	clrf	??___flmul+2
  9453  0097  01C5               	clrf	??___flmul+3
  9454  0098  0842               	movf	??___flmul,w
  9455  0099  07C8               	addwf	___flmul@grs,f
  9456  009A  0843               	movf	??___flmul+1,w
  9457  009B  3DC9               	addwfc	___flmul@grs+1,f
  9458  009C  0844               	movf	??___flmul+2,w
  9459  009D  3DCA               	addwfc	___flmul@grs+2,f
  9460  009E  0845               	movf	??___flmul+3,w
  9461  009F  3DCB               	addwfc	___flmul@grs+3,f
  9462  00A0  0853               	movf	___flmul@temp+1,w
  9463  00A1  00C2               	movwf	??___flmul
  9464  00A2  01C3               	clrf	??___flmul+1
  9465  00A3  01C4               	clrf	??___flmul+2
  9466  00A4  01C5               	clrf	??___flmul+3
  9467  00A5  0842               	movf	??___flmul,w
  9468  00A6  07CE               	addwf	___flmul@prod,f
  9469  00A7  0843               	movf	??___flmul+1,w
  9470  00A8  3DCF               	addwfc	___flmul@prod+1,f
  9471  00A9  0844               	movf	??___flmul+2,w
  9472  00AA  3DD0               	addwfc	___flmul@prod+2,f
  9473  00AB  0845               	movf	??___flmul+3,w
  9474  00AC  3DD1               	addwfc	___flmul@prod+3,f
  9475  00AD  083C               	movf	___flmul@b+2,w
  9476  00AE  00C2               	movwf	??___flmul
  9477  00AF  0842               	movf	??___flmul,w
  9478  00B0  00F0               	movwf	__Umul8_16@multiplicand
  9479  00B1  083E               	movf	___flmul@a,w
  9480  00B2  319F  276A  3180   	fcall	__Umul8_16
  9481  00B5  0871               	movf	?__Umul8_16+1,w
  9482  00B6  0020               	movlb	0	; select bank0
  9483  00B7  00D3               	movwf	___flmul@temp+1
  9484  00B8  0870               	movf	?__Umul8_16,w
  9485  00B9  00D2               	movwf	___flmul@temp
  9486  00BA  0852               	movf	___flmul@temp,w
  9487  00BB  00C2               	movwf	??___flmul
  9488  00BC  01C3               	clrf	??___flmul+1
  9489  00BD  01C4               	clrf	??___flmul+2
  9490  00BE  01C5               	clrf	??___flmul+3
  9491  00BF  0842               	movf	??___flmul,w
  9492  00C0  07C8               	addwf	___flmul@grs,f
  9493  00C1  0843               	movf	??___flmul+1,w
  9494  00C2  3DC9               	addwfc	___flmul@grs+1,f
  9495  00C3  0844               	movf	??___flmul+2,w
  9496  00C4  3DCA               	addwfc	___flmul@grs+2,f
  9497  00C5  0845               	movf	??___flmul+3,w
  9498  00C6  3DCB               	addwfc	___flmul@grs+3,f
  9499  00C7  0853               	movf	___flmul@temp+1,w
  9500  00C8  00C2               	movwf	??___flmul
  9501  00C9  01C3               	clrf	??___flmul+1
  9502  00CA  01C4               	clrf	??___flmul+2
  9503  00CB  01C5               	clrf	??___flmul+3
  9504  00CC  0842               	movf	??___flmul,w
  9505  00CD  07CE               	addwf	___flmul@prod,f
  9506  00CE  0843               	movf	??___flmul+1,w
  9507  00CF  3DCF               	addwfc	___flmul@prod+1,f
  9508  00D0  0844               	movf	??___flmul+2,w
  9509  00D1  3DD0               	addwfc	___flmul@prod+2,f
  9510  00D2  0845               	movf	??___flmul+3,w
  9511  00D3  3DD1               	addwfc	___flmul@prod+3,f
  9512  00D4  3008               	movlw	8
  9513  00D5                     u3035:	
  9514  00D5  35C8               	lslf	___flmul@grs,f
  9515  00D6  0DC9               	rlf	___flmul@grs+1,f
  9516  00D7  0DCA               	rlf	___flmul@grs+2,f
  9517  00D8  0DCB               	rlf	___flmul@grs+3,f
  9518  00D9  0B89               	decfsz	9,f
  9519  00DA  28D5               	goto	u3035
  9520  00DB  083B               	movf	___flmul@b+1,w
  9521  00DC  00C2               	movwf	??___flmul
  9522  00DD  0842               	movf	??___flmul,w
  9523  00DE  00F0               	movwf	__Umul8_16@multiplicand
  9524  00DF  083E               	movf	___flmul@a,w
  9525  00E0  319F  276A  3180   	fcall	__Umul8_16
  9526  00E3  0871               	movf	?__Umul8_16+1,w
  9527  00E4  0020               	movlb	0	; select bank0
  9528  00E5  00D3               	movwf	___flmul@temp+1
  9529  00E6  0870               	movf	?__Umul8_16,w
  9530  00E7  00D2               	movwf	___flmul@temp
  9531  00E8  0852               	movf	___flmul@temp,w
  9532  00E9  07C8               	addwf	___flmul@grs,f
  9533  00EA  0853               	movf	___flmul@temp+1,w
  9534  00EB  3DC9               	addwfc	___flmul@grs+1,f
  9535  00EC  3000               	movlw	0
  9536  00ED  3DCA               	addwfc	___flmul@grs+2,f
  9537  00EE  3DCB               	addwfc	___flmul@grs+3,f
  9538  00EF  083A               	movf	___flmul@b,w
  9539  00F0  00C2               	movwf	??___flmul
  9540  00F1  0842               	movf	??___flmul,w
  9541  00F2  00F0               	movwf	__Umul8_16@multiplicand
  9542  00F3  083F               	movf	___flmul@a+1,w
  9543  00F4  319F  276A  3180   	fcall	__Umul8_16
  9544  00F7  0871               	movf	?__Umul8_16+1,w
  9545  00F8  0020               	movlb	0	; select bank0
  9546  00F9  00D3               	movwf	___flmul@temp+1
  9547  00FA  0870               	movf	?__Umul8_16,w
  9548  00FB  00D2               	movwf	___flmul@temp
  9549  00FC  0852               	movf	___flmul@temp,w
  9550  00FD  07C8               	addwf	___flmul@grs,f
  9551  00FE  0853               	movf	___flmul@temp+1,w
  9552  00FF  3DC9               	addwfc	___flmul@grs+1,f
  9553  0100  3000               	movlw	0
  9554  0101  3DCA               	addwfc	___flmul@grs+2,f
  9555  0102  3DCB               	addwfc	___flmul@grs+3,f
  9556  0103  3008               	movlw	8
  9557  0104                     u3045:	
  9558  0104  35C8               	lslf	___flmul@grs,f
  9559  0105  0DC9               	rlf	___flmul@grs+1,f
  9560  0106  0DCA               	rlf	___flmul@grs+2,f
  9561  0107  0DCB               	rlf	___flmul@grs+3,f
  9562  0108  0B89               	decfsz	9,f
  9563  0109  2904               	goto	u3045
  9564  010A  083A               	movf	___flmul@b,w
  9565  010B  00C2               	movwf	??___flmul
  9566  010C  0842               	movf	??___flmul,w
  9567  010D  00F0               	movwf	__Umul8_16@multiplicand
  9568  010E  083E               	movf	___flmul@a,w
  9569  010F  319F  276A  3180   	fcall	__Umul8_16
  9570  0112  0871               	movf	?__Umul8_16+1,w
  9571  0113  0020               	movlb	0	; select bank0
  9572  0114  00D3               	movwf	___flmul@temp+1
  9573  0115  0870               	movf	?__Umul8_16,w
  9574  0116  00D2               	movwf	___flmul@temp
  9575  0117  0852               	movf	___flmul@temp,w
  9576  0118  07C8               	addwf	___flmul@grs,f
  9577  0119  0853               	movf	___flmul@temp+1,w
  9578  011A  3DC9               	addwfc	___flmul@grs+1,f
  9579  011B  3000               	movlw	0
  9580  011C  3DCA               	addwfc	___flmul@grs+2,f
  9581  011D  3DCB               	addwfc	___flmul@grs+3,f
  9582  011E  083B               	movf	___flmul@b+1,w
  9583  011F  00C2               	movwf	??___flmul
  9584  0120  0842               	movf	??___flmul,w
  9585  0121  00F0               	movwf	__Umul8_16@multiplicand
  9586  0122  0840               	movf	___flmul@a+2,w
  9587  0123  319F  276A  3180   	fcall	__Umul8_16
  9588  0126  0871               	movf	?__Umul8_16+1,w
  9589  0127  0020               	movlb	0	; select bank0
  9590  0128  00D3               	movwf	___flmul@temp+1
  9591  0129  0870               	movf	?__Umul8_16,w
  9592  012A  00D2               	movwf	___flmul@temp
  9593  012B  0852               	movf	___flmul@temp,w
  9594  012C  07CE               	addwf	___flmul@prod,f
  9595  012D  0853               	movf	___flmul@temp+1,w
  9596  012E  3DCF               	addwfc	___flmul@prod+1,f
  9597  012F  3000               	movlw	0
  9598  0130  3DD0               	addwfc	___flmul@prod+2,f
  9599  0131  3DD1               	addwfc	___flmul@prod+3,f
  9600  0132  083C               	movf	___flmul@b+2,w
  9601  0133  00C2               	movwf	??___flmul
  9602  0134  0842               	movf	??___flmul,w
  9603  0135  00F0               	movwf	__Umul8_16@multiplicand
  9604  0136  083F               	movf	___flmul@a+1,w
  9605  0137  319F  276A  3180   	fcall	__Umul8_16
  9606  013A  0871               	movf	?__Umul8_16+1,w
  9607  013B  0020               	movlb	0	; select bank0
  9608  013C  00D3               	movwf	___flmul@temp+1
  9609  013D  0870               	movf	?__Umul8_16,w
  9610  013E  00D2               	movwf	___flmul@temp
  9611  013F  0852               	movf	___flmul@temp,w
  9612  0140  07CE               	addwf	___flmul@prod,f
  9613  0141  0853               	movf	___flmul@temp+1,w
  9614  0142  3DCF               	addwfc	___flmul@prod+1,f
  9615  0143  3000               	movlw	0
  9616  0144  3DD0               	addwfc	___flmul@prod+2,f
  9617  0145  3DD1               	addwfc	___flmul@prod+3,f
  9618  0146  083C               	movf	___flmul@b+2,w
  9619  0147  00C2               	movwf	??___flmul
  9620  0148  0842               	movf	??___flmul,w
  9621  0149  00F0               	movwf	__Umul8_16@multiplicand
  9622  014A  0840               	movf	___flmul@a+2,w
  9623  014B  319F  276A  3180   	fcall	__Umul8_16
  9624  014E  0871               	movf	?__Umul8_16+1,w
  9625  014F  0020               	movlb	0	; select bank0
  9626  0150  00D3               	movwf	___flmul@temp+1
  9627  0151  0870               	movf	?__Umul8_16,w
  9628  0152  00D2               	movwf	___flmul@temp
  9629  0153  0852               	movf	___flmul@temp,w
  9630  0154  00C2               	movwf	??___flmul
  9631  0155  0853               	movf	___flmul@temp+1,w
  9632  0156  00C3               	movwf	??___flmul+1
  9633  0157  01C4               	clrf	??___flmul+2
  9634  0158  01C5               	clrf	??___flmul+3
  9635  0159  3008               	movlw	8
  9636  015A                     u3055:	
  9637  015A  35C2               	lslf	??___flmul,f
  9638  015B  0DC3               	rlf	??___flmul+1,f
  9639  015C  0DC4               	rlf	??___flmul+2,f
  9640  015D  0DC5               	rlf	??___flmul+3,f
  9641  015E  0B89               	decfsz	9,f
  9642  015F  295A               	goto	u3055
  9643  0160  0842               	movf	??___flmul,w
  9644  0161  07CE               	addwf	___flmul@prod,f
  9645  0162  0843               	movf	??___flmul+1,w
  9646  0163  3DCF               	addwfc	___flmul@prod+1,f
  9647  0164  0844               	movf	??___flmul+2,w
  9648  0165  3DD0               	addwfc	___flmul@prod+2,f
  9649  0166  0845               	movf	??___flmul+3,w
  9650  0167  3DD1               	addwfc	___flmul@prod+3,f
  9651  0168  0848               	movf	___flmul@grs,w
  9652  0169  00C2               	movwf	??___flmul
  9653  016A  0849               	movf	___flmul@grs+1,w
  9654  016B  00C3               	movwf	??___flmul+1
  9655  016C  084A               	movf	___flmul@grs+2,w
  9656  016D  00C4               	movwf	??___flmul+2
  9657  016E  084B               	movf	___flmul@grs+3,w
  9658  016F  00C5               	movwf	??___flmul+3
  9659  0170  3018               	movlw	24
  9660  0171                     u3065:	
  9661  0171  36C5               	lsrf	??___flmul+3,f
  9662  0172  0CC4               	rrf	??___flmul+2,f
  9663  0173  0CC3               	rrf	??___flmul+1,f
  9664  0174  0CC2               	rrf	??___flmul,f
  9665  0175  0B89               	decfsz	9,f
  9666  0176  2971               	goto	u3065
  9667  0177  0842               	movf	??___flmul,w
  9668  0178  07CE               	addwf	___flmul@prod,f
  9669  0179  0843               	movf	??___flmul+1,w
  9670  017A  3DCF               	addwfc	___flmul@prod+1,f
  9671  017B  0844               	movf	??___flmul+2,w
  9672  017C  3DD0               	addwfc	___flmul@prod+2,f
  9673  017D  0845               	movf	??___flmul+3,w
  9674  017E  3DD1               	addwfc	___flmul@prod+3,f
  9675  017F  3008               	movlw	8
  9676  0180                     u3075:	
  9677  0180  35C8               	lslf	___flmul@grs,f
  9678  0181  0DC9               	rlf	___flmul@grs+1,f
  9679  0182  0DCA               	rlf	___flmul@grs+2,f
  9680  0183  0DCB               	rlf	___flmul@grs+3,f
  9681  0184  0B89               	decfsz	9,f
  9682  0185  2980               	goto	u3075
  9683  0186  084D               	movf	___flmul@bexp,w
  9684  0187  074C               	addwf	___flmul@aexp,w
  9685  0188  00C2               	movwf	??___flmul
  9686  0189  01C3               	clrf	??___flmul+1
  9687  018A  0DC3               	rlf	??___flmul+1,f
  9688  018B  0842               	movf	??___flmul,w
  9689  018C  3E82               	addlw	130
  9690  018D  00D2               	movwf	___flmul@temp
  9691  018E  30FF               	movlw	255
  9692  018F  3D43               	addwfc	??___flmul+1,w
  9693  0190  00D3               	movwf	___flmul@temp+1
  9694  0191                     l2799:	
  9695  0191  1BD0               	btfsc	___flmul@prod+2,7
  9696  0192  29A8               	goto	l2801
  9697  0193  3001               	movlw	1
  9698  0194                     u3085:	
  9699  0194  35CE               	lslf	___flmul@prod,f
  9700  0195  0DCF               	rlf	___flmul@prod+1,f
  9701  0196  0DD0               	rlf	___flmul@prod+2,f
  9702  0197  0DD1               	rlf	___flmul@prod+3,f
  9703  0198  0B89               	decfsz	9,f
  9704  0199  2994               	goto	u3085
  9705  019A  1BCB               	btfsc	___flmul@grs+3,7
  9706  019B  144E               	bsf	___flmul@prod,0
  9707  019C  3001               	movlw	1
  9708  019D                     u3105:	
  9709  019D  35C8               	lslf	___flmul@grs,f
  9710  019E  0DC9               	rlf	___flmul@grs+1,f
  9711  019F  0DCA               	rlf	___flmul@grs+2,f
  9712  01A0  0DCB               	rlf	___flmul@grs+3,f
  9713  01A1  0B89               	decfsz	9,f
  9714  01A2  299D               	goto	u3105
  9715  01A3  30FF               	movlw	255
  9716  01A4  07D2               	addwf	___flmul@temp,f
  9717  01A5  30FF               	movlw	255
  9718  01A6  3DD3               	addwfc	___flmul@temp+1,f
  9719  01A7  2991               	goto	l2799
  9720  01A8                     l2801:	
  9721  01A8  01CC               	clrf	___flmul@aexp
  9722  01A9  1FCB               	btfss	___flmul@grs+3,7
  9723  01AA  29C1               	goto	l2811
  9724  01AB  30FF               	movlw	255
  9725  01AC  0548               	andwf	___flmul@grs,w
  9726  01AD  00C2               	movwf	??___flmul
  9727  01AE  30FF               	movlw	255
  9728  01AF  0549               	andwf	___flmul@grs+1,w
  9729  01B0  00C3               	movwf	??___flmul+1
  9730  01B1  30FF               	movlw	255
  9731  01B2  054A               	andwf	___flmul@grs+2,w
  9732  01B3  00C4               	movwf	??___flmul+2
  9733  01B4  307F               	movlw	127
  9734  01B5  054B               	andwf	___flmul@grs+3,w
  9735  01B6  00C5               	movwf	??___flmul+3
  9736  01B7  0845               	movf	??___flmul+3,w
  9737  01B8  0444               	iorwf	??___flmul+2,w
  9738  01B9  0443               	iorwf	??___flmul+1,w
  9739  01BA  0442               	iorwf	??___flmul,w
  9740  01BB  1D03               	btfss	3,2
  9741  01BC  29BF               	goto	l2809
  9742  01BD  1C4E               	btfss	___flmul@prod,0
  9743  01BE  29C1               	goto	l2811
  9744  01BF                     l2809:	
  9745  01BF  01CC               	clrf	___flmul@aexp
  9746  01C0  0ACC               	incf	___flmul@aexp,f
  9747  01C1                     l2811:	
  9748  01C1  084C               	movf	___flmul@aexp,w
  9749  01C2  1903               	btfsc	3,2
  9750  01C3  29EA               	goto	l2821
  9751  01C4  3001               	movlw	1
  9752  01C5  07CE               	addwf	___flmul@prod,f
  9753  01C6  3000               	movlw	0
  9754  01C7  3DCF               	addwfc	___flmul@prod+1,f
  9755  01C8  3000               	movlw	0
  9756  01C9  3DD0               	addwfc	___flmul@prod+2,f
  9757  01CA  3000               	movlw	0
  9758  01CB  3DD1               	addwfc	___flmul@prod+3,f
  9759  01CC  1C51               	btfss	___flmul@prod+3,0
  9760  01CD  29EA               	goto	l2821
  9761  01CE  084E               	movf	___flmul@prod,w
  9762  01CF  00C2               	movwf	??___flmul
  9763  01D0  084F               	movf	___flmul@prod+1,w
  9764  01D1  00C3               	movwf	??___flmul+1
  9765  01D2  0850               	movf	___flmul@prod+2,w
  9766  01D3  00C4               	movwf	??___flmul+2
  9767  01D4  0851               	movf	___flmul@prod+3,w
  9768  01D5  00C5               	movwf	??___flmul+3
  9769  01D6  3001               	movlw	1
  9770  01D7  00C6               	movwf	??___flmul+4
  9771  01D8                     u3175:	
  9772  01D8  37C5               	asrf	??___flmul+3,f
  9773  01D9  0CC4               	rrf	??___flmul+2,f
  9774  01DA  0CC3               	rrf	??___flmul+1,f
  9775  01DB  0CC2               	rrf	??___flmul,f
  9776  01DC  0BC6               	decfsz	??___flmul+4,f
  9777  01DD  29D8               	goto	u3175
  9778  01DE  0845               	movf	??___flmul+3,w
  9779  01DF  00D1               	movwf	___flmul@prod+3
  9780  01E0  0844               	movf	??___flmul+2,w
  9781  01E1  00D0               	movwf	___flmul@prod+2
  9782  01E2  0843               	movf	??___flmul+1,w
  9783  01E3  00CF               	movwf	___flmul@prod+1
  9784  01E4  0842               	movf	??___flmul,w
  9785  01E5  00CE               	movwf	___flmul@prod
  9786  01E6  3001               	movlw	1
  9787  01E7  07D2               	addwf	___flmul@temp,f
  9788  01E8  3000               	movlw	0
  9789  01E9  3DD3               	addwfc	___flmul@temp+1,f
  9790  01EA                     l2821:	
  9791  01EA  0853               	movf	___flmul@temp+1,w
  9792  01EB  3A80               	xorlw	128
  9793  01EC  00C2               	movwf	??___flmul
  9794  01ED  3080               	movlw	128
  9795  01EE  0242               	subwf	??___flmul,w
  9796  01EF  1D03               	skipz
  9797  01F0  29F3               	goto	u3185
  9798  01F1  30FF               	movlw	255
  9799  01F2  0252               	subwf	___flmul@temp,w
  9800  01F3                     u3185:	
  9801  01F3  1C03               	skipc
  9802  01F4  29FF               	goto	l2825
  9803  01F5  307F               	movlw	127
  9804  01F6  0020               	movlb	0	; select bank0
  9805  01F7  00D1               	movwf	___flmul@prod+3
  9806  01F8  3080               	movlw	128
  9807  01F9  00D0               	movwf	___flmul@prod+2
  9808  01FA  3000               	movlw	0
  9809  01FB  00CF               	movwf	___flmul@prod+1
  9810  01FC  3000               	movlw	0
  9811  01FD  00CE               	movwf	___flmul@prod
  9812  01FE  2A29               	goto	l935
  9813  01FF                     l2825:	
  9814  01FF  0020               	movlb	0	; select bank0
  9815  0200  0853               	movf	___flmul@temp+1,w
  9816  0201  3A80               	xorlw	128
  9817  0202  00C2               	movwf	??___flmul
  9818  0203  3080               	movlw	128
  9819  0204  0242               	subwf	??___flmul,w
  9820  0205  1D03               	skipz
  9821  0206  2A09               	goto	u3195
  9822  0207  3001               	movlw	1
  9823  0208  0252               	subwf	___flmul@temp,w
  9824  0209                     u3195:	
  9825  0209  1803               	skipnc
  9826  020A  2A16               	goto	l2831
  9827  020B  3000               	movlw	0
  9828  020C  0020               	movlb	0	; select bank0
  9829  020D  00D1               	movwf	___flmul@prod+3
  9830  020E  3000               	movlw	0
  9831  020F  00D0               	movwf	___flmul@prod+2
  9832  0210  3000               	movlw	0
  9833  0211  00CF               	movwf	___flmul@prod+1
  9834  0212  3000               	movlw	0
  9835  0213  00CE               	movwf	___flmul@prod
  9836  0214  01C7               	clrf	___flmul@sign
  9837  0215  2A29               	goto	l935
  9838  0216                     l2831:	
  9839  0216  0020               	movlb	0	; select bank0
  9840  0217  0852               	movf	___flmul@temp,w
  9841  0218  00C2               	movwf	??___flmul
  9842  0219  0842               	movf	??___flmul,w
  9843  021A  00CD               	movwf	___flmul@bexp
  9844  021B  30FF               	movlw	255
  9845  021C  05CE               	andwf	___flmul@prod,f
  9846  021D  30FF               	movlw	255
  9847  021E  05CF               	andwf	___flmul@prod+1,f
  9848  021F  307F               	movlw	127
  9849  0220  05D0               	andwf	___flmul@prod+2,f
  9850  0221  3000               	movlw	0
  9851  0222  05D1               	andwf	___flmul@prod+3,f
  9852  0223  184D               	btfsc	___flmul@bexp,0
  9853  0224  17D0               	bsf	___flmul@prod+2,7
  9854  0225  364D               	lsrf	___flmul@bexp,w
  9855  0226  00C2               	movwf	??___flmul
  9856  0227  0842               	movf	??___flmul,w
  9857  0228  00D1               	movwf	___flmul@prod+3
  9858  0229                     l935:	
  9859  0229  0847               	movf	___flmul@sign,w
  9860  022A  00C2               	movwf	??___flmul
  9861  022B  0842               	movf	??___flmul,w
  9862  022C  04D1               	iorwf	___flmul@prod+3,f
  9863  022D  0851               	movf	___flmul@prod+3,w
  9864  022E  00BD               	movwf	?___flmul+3
  9865  022F  0850               	movf	___flmul@prod+2,w
  9866  0230  00BC               	movwf	?___flmul+2
  9867  0231  084F               	movf	___flmul@prod+1,w
  9868  0232  00BB               	movwf	?___flmul+1
  9869  0233  084E               	movf	___flmul@prod,w
  9870  0234  00BA               	movwf	?___flmul
  9871  0235  0008               	return
  9872  0236                     __end_of___flmul:	
  9873                           
  9874                           	psect	text6
  9875  1F6A                     __ptext6:	
  9876 ;; *************** function __Umul8_16 *****************
  9877 ;; Defined at:
  9878 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8_16.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;  multiplier      1    wreg     unsigned char 
  9881 ;;  multiplicand    1    0[COMMON] unsigned char 
  9882 ;; Auto vars:     Size  Location     Type
  9883 ;;  multiplier      1    8[COMMON] unsigned char 
  9884 ;;  word_mpld       2    6[COMMON] unsigned int 
  9885 ;;  product         2    4[COMMON] unsigned int 
  9886 ;; Return value:  Size  Location     Type
  9887 ;;                  2    0[COMMON] unsigned int 
  9888 ;; Registers used:
  9889 ;;		wreg, status,2, status,0
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9896 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;Total ram usage:        9 bytes
  9900 ;; Hardware stack levels used:    1
  9901 ;; This function calls:
  9902 ;;		Nothing
  9903 ;; This function is called by:
  9904 ;;		___flmul
  9905 ;; This function uses a non-reentrant model
  9906 ;;
  9907                           
  9908                           
  9909                           ;psect for function __Umul8_16
  9910  1F6A                     __Umul8_16:	
  9911                           
  9912                           ;incstack = 0
  9913                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9914                           ;__Umul8_16@multiplier stored from wreg
  9915  1F6A  00F8               	movwf	__Umul8_16@multiplier
  9916  1F6B  01F4               	clrf	__Umul8_16@product
  9917  1F6C  01F5               	clrf	__Umul8_16@product+1
  9918  1F6D  0870               	movf	__Umul8_16@multiplicand,w
  9919  1F6E  00F2               	movwf	??__Umul8_16
  9920  1F6F  01F3               	clrf	??__Umul8_16+1
  9921  1F70  0872               	movf	??__Umul8_16,w
  9922  1F71  00F6               	movwf	__Umul8_16@word_mpld
  9923  1F72  0873               	movf	??__Umul8_16+1,w
  9924  1F73  00F7               	movwf	__Umul8_16@word_mpld+1
  9925  1F74                     l2477:	
  9926  1F74  1C78               	btfss	__Umul8_16@multiplier,0
  9927  1F75  2F7A               	goto	l961
  9928  1F76  0876               	movf	__Umul8_16@word_mpld,w
  9929  1F77  07F4               	addwf	__Umul8_16@product,f
  9930  1F78  0877               	movf	__Umul8_16@word_mpld+1,w
  9931  1F79  3DF5               	addwfc	__Umul8_16@product+1,f
  9932  1F7A                     l961:	
  9933  1F7A  3001               	movlw	1
  9934  1F7B                     u2465:	
  9935  1F7B  35F6               	lslf	__Umul8_16@word_mpld,f
  9936  1F7C  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9937  1F7D  0B89               	decfsz	9,f
  9938  1F7E  2F7B               	goto	u2465
  9939  1F7F  1003               	clrc
  9940  1F80  0CF8               	rrf	__Umul8_16@multiplier,f
  9941  1F81  0878               	movf	__Umul8_16@multiplier,w
  9942  1F82  1D03               	btfss	3,2
  9943  1F83  2F74               	goto	l2477
  9944  1F84  0875               	movf	__Umul8_16@product+1,w
  9945  1F85  00F1               	movwf	?__Umul8_16+1
  9946  1F86  0874               	movf	__Umul8_16@product,w
  9947  1F87  00F0               	movwf	?__Umul8_16
  9948  1F88  0008               	return
  9949  1F89                     __end_of__Umul8_16:	
  9950                           
  9951                           	psect	text7
  9952  16AD                     __ptext7:	
  9953 ;; *************** function ___flge *****************
  9954 ;; Defined at:
  9955 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  ff1             4    0[COMMON] unsigned int 
  9958 ;;  ff2             4    4[COMMON] unsigned int 
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;		None
  9961 ;; Return value:  Size  Location     Type
  9962 ;;		None               void
  9963 ;; Registers used:
  9964 ;;		wreg, status,2, status,0
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9970 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;Total ram usage:       16 bytes
  9975 ;; Hardware stack levels used:    1
  9976 ;; This function calls:
  9977 ;;		Nothing
  9978 ;; This function is called by:
  9979 ;;		_log
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           
  9984                           ;psect for function ___flge
  9985  16AD                     ___flge:	
  9986                           
  9987                           ;incstack = 0
  9988                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9989  16AD  3000               	movlw	0
  9990  16AE  0570               	andwf	___flge@ff1,w
  9991  16AF  0020               	movlb	0	; select bank0
  9992  16B0  00A0               	movwf	??___flge
  9993  16B1  3000               	movlw	0
  9994  16B2  0571               	andwf	___flge@ff1+1,w
  9995  16B3  00A1               	movwf	??___flge+1
  9996  16B4  3080               	movlw	128
  9997  16B5  0572               	andwf	___flge@ff1+2,w
  9998  16B6  00A2               	movwf	??___flge+2
  9999  16B7  307F               	movlw	127
 10000  16B8  0573               	andwf	___flge@ff1+3,w
 10001  16B9  00A3               	movwf	??___flge+3
 10002  16BA  0823               	movf	??___flge+3,w
 10003  16BB  0422               	iorwf	??___flge+2,w
 10004  16BC  0421               	iorwf	??___flge+1,w
 10005  16BD  0420               	iorwf	??___flge,w
 10006  16BE  1D03               	skipz
 10007  16BF  2EC8               	goto	l702
 10008  16C0  3000               	movlw	0
 10009  16C1  00F3               	movwf	___flge@ff1+3
 10010  16C2  3000               	movlw	0
 10011  16C3  00F2               	movwf	___flge@ff1+2
 10012  16C4  3000               	movlw	0
 10013  16C5  00F1               	movwf	___flge@ff1+1
 10014  16C6  3000               	movlw	0
 10015  16C7  00F0               	movwf	___flge@ff1
 10016  16C8                     l702:	
 10017  16C8  3000               	movlw	0
 10018  16C9  0574               	andwf	___flge@ff2,w
 10019  16CA  00A0               	movwf	??___flge
 10020  16CB  3000               	movlw	0
 10021  16CC  0575               	andwf	___flge@ff2+1,w
 10022  16CD  00A1               	movwf	??___flge+1
 10023  16CE  3080               	movlw	128
 10024  16CF  0576               	andwf	___flge@ff2+2,w
 10025  16D0  00A2               	movwf	??___flge+2
 10026  16D1  307F               	movlw	127
 10027  16D2  0577               	andwf	___flge@ff2+3,w
 10028  16D3  00A3               	movwf	??___flge+3
 10029  16D4  0823               	movf	??___flge+3,w
 10030  16D5  0422               	iorwf	??___flge+2,w
 10031  16D6  0421               	iorwf	??___flge+1,w
 10032  16D7  0420               	iorwf	??___flge,w
 10033  16D8  1D03               	skipz
 10034  16D9  2EE2               	goto	l2865
 10035  16DA  3000               	movlw	0
 10036  16DB  00F7               	movwf	___flge@ff2+3
 10037  16DC  3000               	movlw	0
 10038  16DD  00F6               	movwf	___flge@ff2+2
 10039  16DE  3000               	movlw	0
 10040  16DF  00F5               	movwf	___flge@ff2+1
 10041  16E0  3000               	movlw	0
 10042  16E1  00F4               	movwf	___flge@ff2
 10043  16E2                     l2865:	
 10044  16E2  1FF3               	btfss	___flge@ff1+3,7
 10045  16E3  2F0B               	goto	l2869
 10046  16E4  3000               	movlw	0
 10047  16E5  00A0               	movwf	??___flge
 10048  16E6  3000               	movlw	0
 10049  16E7  00A1               	movwf	??___flge+1
 10050  16E8  3000               	movlw	0
 10051  16E9  00A2               	movwf	??___flge+2
 10052  16EA  3080               	movlw	128
 10053  16EB  00A3               	movwf	??___flge+3
 10054  16EC  0970               	comf	___flge@ff1,w
 10055  16ED  00A4               	movwf	??___flge+4
 10056  16EE  0971               	comf	___flge@ff1+1,w
 10057  16EF  00A5               	movwf	??___flge+5
 10058  16F0  0972               	comf	___flge@ff1+2,w
 10059  16F1  00A6               	movwf	??___flge+6
 10060  16F2  0973               	comf	___flge@ff1+3,w
 10061  16F3  00A7               	movwf	??___flge+7
 10062  16F4  0AA4               	incf	??___flge+4,f
 10063  16F5  1903               	skipnz
 10064  16F6  0AA5               	incf	??___flge+5,f
 10065  16F7  1903               	skipnz
 10066  16F8  0AA6               	incf	??___flge+6,f
 10067  16F9  1903               	skipnz
 10068  16FA  0AA7               	incf	??___flge+7,f
 10069  16FB  0824               	movf	??___flge+4,w
 10070  16FC  07A0               	addwf	??___flge,f
 10071  16FD  0825               	movf	??___flge+5,w
 10072  16FE  3DA1               	addwfc	??___flge+1,f
 10073  16FF  0826               	movf	??___flge+6,w
 10074  1700  3DA2               	addwfc	??___flge+2,f
 10075  1701  0827               	movf	??___flge+7,w
 10076  1702  3DA3               	addwfc	??___flge+3,f
 10077  1703  0823               	movf	??___flge+3,w
 10078  1704  00F3               	movwf	___flge@ff1+3
 10079  1705  0822               	movf	??___flge+2,w
 10080  1706  00F2               	movwf	___flge@ff1+2
 10081  1707  0821               	movf	??___flge+1,w
 10082  1708  00F1               	movwf	___flge@ff1+1
 10083  1709  0820               	movf	??___flge,w
 10084  170A  00F0               	movwf	___flge@ff1
 10085  170B                     l2869:	
 10086  170B  1FF7               	btfss	___flge@ff2+3,7
 10087  170C  2F34               	goto	l2873
 10088  170D  3000               	movlw	0
 10089  170E  00A0               	movwf	??___flge
 10090  170F  3000               	movlw	0
 10091  1710  00A1               	movwf	??___flge+1
 10092  1711  3000               	movlw	0
 10093  1712  00A2               	movwf	??___flge+2
 10094  1713  3080               	movlw	128
 10095  1714  00A3               	movwf	??___flge+3
 10096  1715  0974               	comf	___flge@ff2,w
 10097  1716  00A4               	movwf	??___flge+4
 10098  1717  0975               	comf	___flge@ff2+1,w
 10099  1718  00A5               	movwf	??___flge+5
 10100  1719  0976               	comf	___flge@ff2+2,w
 10101  171A  00A6               	movwf	??___flge+6
 10102  171B  0977               	comf	___flge@ff2+3,w
 10103  171C  00A7               	movwf	??___flge+7
 10104  171D  0AA4               	incf	??___flge+4,f
 10105  171E  1903               	skipnz
 10106  171F  0AA5               	incf	??___flge+5,f
 10107  1720  1903               	skipnz
 10108  1721  0AA6               	incf	??___flge+6,f
 10109  1722  1903               	skipnz
 10110  1723  0AA7               	incf	??___flge+7,f
 10111  1724  0824               	movf	??___flge+4,w
 10112  1725  07A0               	addwf	??___flge,f
 10113  1726  0825               	movf	??___flge+5,w
 10114  1727  3DA1               	addwfc	??___flge+1,f
 10115  1728  0826               	movf	??___flge+6,w
 10116  1729  3DA2               	addwfc	??___flge+2,f
 10117  172A  0827               	movf	??___flge+7,w
 10118  172B  3DA3               	addwfc	??___flge+3,f
 10119  172C  0823               	movf	??___flge+3,w
 10120  172D  00F7               	movwf	___flge@ff2+3
 10121  172E  0822               	movf	??___flge+2,w
 10122  172F  00F6               	movwf	___flge@ff2+2
 10123  1730  0821               	movf	??___flge+1,w
 10124  1731  00F5               	movwf	___flge@ff2+1
 10125  1732  0820               	movf	??___flge,w
 10126  1733  00F4               	movwf	___flge@ff2
 10127  1734                     l2873:	
 10128  1734  3080               	movlw	128
 10129  1735  06F3               	xorwf	___flge@ff1+3,f
 10130  1736  3080               	movlw	128
 10131  1737  06F7               	xorwf	___flge@ff2+3,f
 10132  1738  0877               	movf	___flge@ff2+3,w
 10133  1739  0273               	subwf	___flge@ff1+3,w
 10134  173A  1D03               	skipz
 10135  173B  0008               	return
 10136  173C  0876               	movf	___flge@ff2+2,w
 10137  173D  0272               	subwf	___flge@ff1+2,w
 10138  173E  1D03               	skipz
 10139  173F  0008               	return
 10140  1740  0875               	movf	___flge@ff2+1,w
 10141  1741  0271               	subwf	___flge@ff1+1,w
 10142  1742  1D03               	skipz
 10143  1743  0008               	return
 10144  1744  0874               	movf	___flge@ff2,w
 10145  1745  0270               	subwf	___flge@ff1,w
 10146  1746  0008               	return
 10147  1747                     __end_of___flge:	
 10148                           
 10149                           	psect	text8
 10150  1163                     __ptext8:	
 10151 ;; *************** function ___flsub *****************
 10152 ;; Defined at:
 10153 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10154 ;; Parameters:    Size  Location     Type
 10155 ;;  a               4    0[BANK1 ] unsigned int 
 10156 ;;  b               4    4[BANK1 ] unsigned int 
 10157 ;; Auto vars:     Size  Location     Type
 10158 ;;		None
 10159 ;; Return value:  Size  Location     Type
 10160 ;;                  4    0[BANK1 ] unsigned int 
 10161 ;; Registers used:
 10162 ;;		wreg, status,2, status,0, pclath, cstack
 10163 ;; Tracked objects:
 10164 ;;		On entry : 0/0
 10165 ;;		On exit  : 0/0
 10166 ;;		Unchanged: 0/0
 10167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10168 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10171 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10172 ;;Total ram usage:        8 bytes
 10173 ;; Hardware stack levels used:    1
 10174 ;; Hardware stack levels required when called:    1
 10175 ;; This function calls:
 10176 ;;		___fladd
 10177 ;; This function is called by:
 10178 ;;		_tempCalc
 10179 ;; This function uses a non-reentrant model
 10180 ;;
 10181                           
 10182                           
 10183                           ;psect for function ___flsub
 10184  1163                     ___flsub:	
 10185                           
 10186                           ;incstack = 0
 10187                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10188  1163  3080               	movlw	128
 10189  1164  0021               	movlb	1	; select bank1
 10190  1165  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 10191  1166  0827               	movf	(___flsub@b+3)^(0+128),w
 10192  1167  0020               	movlb	0	; select bank0
 10193  1168  00D7               	movwf	___fladd@b+3
 10194  1169  0021               	movlb	1	; select bank1
 10195  116A  0826               	movf	(___flsub@b+2)^(0+128),w
 10196  116B  0020               	movlb	0	; select bank0
 10197  116C  00D6               	movwf	___fladd@b+2
 10198  116D  0021               	movlb	1	; select bank1
 10199  116E  0825               	movf	(___flsub@b+1)^(0+128),w
 10200  116F  0020               	movlb	0	; select bank0
 10201  1170  00D5               	movwf	___fladd@b+1
 10202  1171  0021               	movlb	1	; select bank1
 10203  1172  0824               	movf	___flsub@b^(0+128),w
 10204  1173  0020               	movlb	0	; select bank0
 10205  1174  00D4               	movwf	___fladd@b
 10206  1175  0021               	movlb	1	; select bank1
 10207  1176  0823               	movf	(___flsub@a+3)^(0+128),w
 10208  1177  0020               	movlb	0	; select bank0
 10209  1178  00DB               	movwf	___fladd@a+3
 10210  1179  0021               	movlb	1	; select bank1
 10211  117A  0822               	movf	(___flsub@a+2)^(0+128),w
 10212  117B  0020               	movlb	0	; select bank0
 10213  117C  00DA               	movwf	___fladd@a+2
 10214  117D  0021               	movlb	1	; select bank1
 10215  117E  0821               	movf	(___flsub@a+1)^(0+128),w
 10216  117F  0020               	movlb	0	; select bank0
 10217  1180  00D9               	movwf	___fladd@a+1
 10218  1181  0021               	movlb	1	; select bank1
 10219  1182  0820               	movf	___flsub@a^(0+128),w
 10220  1183  0020               	movlb	0	; select bank0
 10221  1184  00D8               	movwf	___fladd@a
 10222  1185  318E  2604         	fcall	___fladd
 10223  1187  0020               	movlb	0	; select bank0
 10224  1188  0857               	movf	?___fladd+3,w
 10225  1189  0021               	movlb	1	; select bank1
 10226  118A  00A3               	movwf	(?___flsub+3)^(0+128)
 10227  118B  0020               	movlb	0	; select bank0
 10228  118C  0856               	movf	?___fladd+2,w
 10229  118D  0021               	movlb	1	; select bank1
 10230  118E  00A2               	movwf	(?___flsub+2)^(0+128)
 10231  118F  0020               	movlb	0	; select bank0
 10232  1190  0855               	movf	?___fladd+1,w
 10233  1191  0021               	movlb	1	; select bank1
 10234  1192  00A1               	movwf	(?___flsub+1)^(0+128)
 10235  1193  0020               	movlb	0	; select bank0
 10236  1194  0854               	movf	?___fladd,w
 10237  1195  0021               	movlb	1	; select bank1
 10238  1196  00A0               	movwf	?___flsub^(0+128)
 10239  1197  0008               	return
 10240  1198                     __end_of___flsub:	
 10241                           
 10242                           	psect	text9
 10243  0E04                     __ptext9:	
 10244 ;; *************** function ___fladd *****************
 10245 ;; Defined at:
 10246 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;  b               4   52[BANK0 ] unsigned int 
 10249 ;;  a               4   56[BANK0 ] unsigned int 
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;  grs             1   75[BANK0 ] unsigned char 
 10252 ;;  bexp            1   74[BANK0 ] unsigned char 
 10253 ;;  aexp            1   73[BANK0 ] unsigned char 
 10254 ;;  signs           1   72[BANK0 ] unsigned char 
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  4   52[BANK0 ] unsigned char 
 10257 ;; Registers used:
 10258 ;;		wreg, status,2, status,0
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10264 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10267 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;Total ram usage:       24 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; This function calls:
 10271 ;;		Nothing
 10272 ;; This function is called by:
 10273 ;;		_tempCalc
 10274 ;;		_log
 10275 ;;		___flsub
 10276 ;;		_eval_poly
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           
 10281                           ;psect for function ___fladd
 10282  0E04                     ___fladd:	
 10283                           
 10284                           ;incstack = 0
 10285                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10286  0E04  0020               	movlb	0	; select bank0
 10287  0E05  0857               	movf	___fladd@b+3,w
 10288  0E06  3980               	andlw	128
 10289  0E07  00DC               	movwf	??___fladd
 10290  0E08  085C               	movf	??___fladd,w
 10291  0E09  00E8               	movwf	___fladd@signs
 10292  0E0A  3557               	lslf	___fladd@b+3,w
 10293  0E0B  00DC               	movwf	??___fladd
 10294  0E0C  085C               	movf	??___fladd,w
 10295  0E0D  00EA               	movwf	___fladd@bexp
 10296  0E0E  1BD6               	btfsc	___fladd@b+2,7
 10297  0E0F  146A               	bsf	___fladd@bexp,0
 10298  0E10  086A               	movf	___fladd@bexp,w
 10299  0E11  1903               	btfsc	3,2
 10300  0E12  2E21               	goto	l2527
 10301  0E13  0A6A               	incf	___fladd@bexp,w
 10302  0E14  1D03               	btfss	3,2
 10303  0E15  2E1E               	goto	l2523
 10304  0E16  3000               	movlw	0
 10305  0E17  00D7               	movwf	___fladd@b+3
 10306  0E18  3000               	movlw	0
 10307  0E19  00D6               	movwf	___fladd@b+2
 10308  0E1A  3000               	movlw	0
 10309  0E1B  00D5               	movwf	___fladd@b+1
 10310  0E1C  3000               	movlw	0
 10311  0E1D  00D4               	movwf	___fladd@b
 10312  0E1E                     l2523:	
 10313  0E1E  17D6               	bsf	___fladd@b+2,7
 10314  0E1F  01D7               	clrf	___fladd@b+3
 10315  0E20  2E29               	goto	l2529
 10316  0E21                     l2527:	
 10317  0E21  3000               	movlw	0
 10318  0E22  00D7               	movwf	___fladd@b+3
 10319  0E23  3000               	movlw	0
 10320  0E24  00D6               	movwf	___fladd@b+2
 10321  0E25  3000               	movlw	0
 10322  0E26  00D5               	movwf	___fladd@b+1
 10323  0E27  3000               	movlw	0
 10324  0E28  00D4               	movwf	___fladd@b
 10325  0E29                     l2529:	
 10326  0E29  085B               	movf	___fladd@a+3,w
 10327  0E2A  3980               	andlw	128
 10328  0E2B  00DC               	movwf	??___fladd
 10329  0E2C  085C               	movf	??___fladd,w
 10330  0E2D  00E9               	movwf	___fladd@aexp
 10331  0E2E  0869               	movf	___fladd@aexp,w
 10332  0E2F  0668               	xorwf	___fladd@signs,w
 10333  0E30  1D03               	btfss	3,2
 10334  0E31  1768               	bsf	___fladd@signs,6
 10335  0E32  355B               	lslf	___fladd@a+3,w
 10336  0E33  00DC               	movwf	??___fladd
 10337  0E34  085C               	movf	??___fladd,w
 10338  0E35  00E9               	movwf	___fladd@aexp
 10339  0E36  1BDA               	btfsc	___fladd@a+2,7
 10340  0E37  1469               	bsf	___fladd@aexp,0
 10341  0E38  0869               	movf	___fladd@aexp,w
 10342  0E39  1903               	btfsc	3,2
 10343  0E3A  2E49               	goto	l2551
 10344  0E3B  0A69               	incf	___fladd@aexp,w
 10345  0E3C  1D03               	btfss	3,2
 10346  0E3D  2E46               	goto	l2547
 10347  0E3E  3000               	movlw	0
 10348  0E3F  00DB               	movwf	___fladd@a+3
 10349  0E40  3000               	movlw	0
 10350  0E41  00DA               	movwf	___fladd@a+2
 10351  0E42  3000               	movlw	0
 10352  0E43  00D9               	movwf	___fladd@a+1
 10353  0E44  3000               	movlw	0
 10354  0E45  00D8               	movwf	___fladd@a
 10355  0E46                     l2547:	
 10356  0E46  17DA               	bsf	___fladd@a+2,7
 10357  0E47  01DB               	clrf	___fladd@a+3
 10358  0E48  2E51               	goto	l827
 10359  0E49                     l2551:	
 10360  0E49  3000               	movlw	0
 10361  0E4A  00DB               	movwf	___fladd@a+3
 10362  0E4B  3000               	movlw	0
 10363  0E4C  00DA               	movwf	___fladd@a+2
 10364  0E4D  3000               	movlw	0
 10365  0E4E  00D9               	movwf	___fladd@a+1
 10366  0E4F  3000               	movlw	0
 10367  0E50  00D8               	movwf	___fladd@a
 10368  0E51                     l827:	
 10369  0E51  086A               	movf	___fladd@bexp,w
 10370  0E52  0269               	subwf	___fladd@aexp,w
 10371  0E53  1803               	skipnc
 10372  0E54  2E97               	goto	l2587
 10373  0E55  1F68               	btfss	___fladd@signs,6
 10374  0E56  2E5B               	goto	l2557
 10375  0E57  3080               	movlw	128
 10376  0E58  00DC               	movwf	??___fladd
 10377  0E59  085C               	movf	??___fladd,w
 10378  0E5A  06E8               	xorwf	___fladd@signs,f
 10379  0E5B                     l2557:	
 10380  0E5B  086A               	movf	___fladd@bexp,w
 10381  0E5C  00DC               	movwf	??___fladd
 10382  0E5D  085C               	movf	??___fladd,w
 10383  0E5E  00EB               	movwf	___fladd@grs
 10384  0E5F  0869               	movf	___fladd@aexp,w
 10385  0E60  00DC               	movwf	??___fladd
 10386  0E61  085C               	movf	??___fladd,w
 10387  0E62  00EA               	movwf	___fladd@bexp
 10388  0E63  086B               	movf	___fladd@grs,w
 10389  0E64  00DC               	movwf	??___fladd
 10390  0E65  085C               	movf	??___fladd,w
 10391  0E66  00E9               	movwf	___fladd@aexp
 10392  0E67  0854               	movf	___fladd@b,w
 10393  0E68  00DC               	movwf	??___fladd
 10394  0E69  085C               	movf	??___fladd,w
 10395  0E6A  00EB               	movwf	___fladd@grs
 10396  0E6B  0858               	movf	___fladd@a,w
 10397  0E6C  00DC               	movwf	??___fladd
 10398  0E6D  085C               	movf	??___fladd,w
 10399  0E6E  00D4               	movwf	___fladd@b
 10400  0E6F  086B               	movf	___fladd@grs,w
 10401  0E70  00DC               	movwf	??___fladd
 10402  0E71  085C               	movf	??___fladd,w
 10403  0E72  00D8               	movwf	___fladd@a
 10404  0E73  0855               	movf	___fladd@b+1,w
 10405  0E74  00DC               	movwf	??___fladd
 10406  0E75  085C               	movf	??___fladd,w
 10407  0E76  00EB               	movwf	___fladd@grs
 10408  0E77  0859               	movf	___fladd@a+1,w
 10409  0E78  00DC               	movwf	??___fladd
 10410  0E79  085C               	movf	??___fladd,w
 10411  0E7A  00D5               	movwf	___fladd@b+1
 10412  0E7B  086B               	movf	___fladd@grs,w
 10413  0E7C  00DC               	movwf	??___fladd
 10414  0E7D  085C               	movf	??___fladd,w
 10415  0E7E  00D9               	movwf	___fladd@a+1
 10416  0E7F  0856               	movf	___fladd@b+2,w
 10417  0E80  00DC               	movwf	??___fladd
 10418  0E81  085C               	movf	??___fladd,w
 10419  0E82  00EB               	movwf	___fladd@grs
 10420  0E83  085A               	movf	___fladd@a+2,w
 10421  0E84  00DC               	movwf	??___fladd
 10422  0E85  085C               	movf	??___fladd,w
 10423  0E86  00D6               	movwf	___fladd@b+2
 10424  0E87  086B               	movf	___fladd@grs,w
 10425  0E88  00DC               	movwf	??___fladd
 10426  0E89  085C               	movf	??___fladd,w
 10427  0E8A  00DA               	movwf	___fladd@a+2
 10428  0E8B  0857               	movf	___fladd@b+3,w
 10429  0E8C  00DC               	movwf	??___fladd
 10430  0E8D  085C               	movf	??___fladd,w
 10431  0E8E  00EB               	movwf	___fladd@grs
 10432  0E8F  085B               	movf	___fladd@a+3,w
 10433  0E90  00DC               	movwf	??___fladd
 10434  0E91  085C               	movf	??___fladd,w
 10435  0E92  00D7               	movwf	___fladd@b+3
 10436  0E93  086B               	movf	___fladd@grs,w
 10437  0E94  00DC               	movwf	??___fladd
 10438  0E95  085C               	movf	??___fladd,w
 10439  0E96  00DB               	movwf	___fladd@a+3
 10440  0E97                     l2587:	
 10441  0E97  01EB               	clrf	___fladd@grs
 10442  0E98  086A               	movf	___fladd@bexp,w
 10443  0E99  00DC               	movwf	??___fladd
 10444  0E9A  01DD               	clrf	??___fladd+1
 10445  0E9B  09DC               	comf	??___fladd,f
 10446  0E9C  09DD               	comf	??___fladd+1,f
 10447  0E9D  0ADC               	incf	??___fladd,f
 10448  0E9E  1903               	skipnz
 10449  0E9F  0ADD               	incf	??___fladd+1,f
 10450  0EA0  0869               	movf	___fladd@aexp,w
 10451  0EA1  075C               	addwf	??___fladd,w
 10452  0EA2  00DE               	movwf	??___fladd+2
 10453  0EA3  085D               	movf	??___fladd+1,w
 10454  0EA4  1803               	skipnc
 10455  0EA5  0A5D               	incf	??___fladd+1,w
 10456  0EA6  00DF               	movwf	??___fladd+3
 10457  0EA7  085F               	movf	??___fladd+3,w
 10458  0EA8  3A80               	xorlw	128
 10459  0EA9  00E0               	movwf	??___fladd+4
 10460  0EAA  3080               	movlw	128
 10461  0EAB  0260               	subwf	??___fladd+4,w
 10462  0EAC  1D03               	skipz
 10463  0EAD  2EB0               	goto	u2615
 10464  0EAE  301A               	movlw	26
 10465  0EAF  025E               	subwf	??___fladd+2,w
 10466  0EB0                     u2615:	
 10467  0EB0  1C03               	skipc
 10468  0EB1  2EE4               	goto	l2605
 10469  0EB2  0020               	movlb	0	; select bank0
 10470  0EB3  0857               	movf	___fladd@b+3,w
 10471  0EB4  0456               	iorwf	___fladd@b+2,w
 10472  0EB5  0455               	iorwf	___fladd@b+1,w
 10473  0EB6  0454               	iorwf	___fladd@b,w
 10474  0EB7  1903               	btfsc	3,2
 10475  0EB8  2EBB               	goto	u2620
 10476  0EB9  3001               	movlw	1
 10477  0EBA  2EBC               	goto	u2630
 10478  0EBB                     u2620:	
 10479  0EBB  3000               	movlw	0
 10480  0EBC                     u2630:	
 10481  0EBC  00DC               	movwf	??___fladd
 10482  0EBD  085C               	movf	??___fladd,w
 10483  0EBE  00EB               	movwf	___fladd@grs
 10484  0EBF  3000               	movlw	0
 10485  0EC0  00D7               	movwf	___fladd@b+3
 10486  0EC1  3000               	movlw	0
 10487  0EC2  00D6               	movwf	___fladd@b+2
 10488  0EC3  3000               	movlw	0
 10489  0EC4  00D5               	movwf	___fladd@b+1
 10490  0EC5  3000               	movlw	0
 10491  0EC6  00D4               	movwf	___fladd@b
 10492  0EC7  0869               	movf	___fladd@aexp,w
 10493  0EC8  00DC               	movwf	??___fladd
 10494  0EC9  085C               	movf	??___fladd,w
 10495  0ECA  00EA               	movwf	___fladd@bexp
 10496  0ECB  2EE9               	goto	l831
 10497  0ECC                     l833:	
 10498  0ECC  1C6B               	btfss	___fladd@grs,0
 10499  0ECD  2ED4               	goto	l2595
 10500  0ECE  366B               	lsrf	___fladd@grs,w
 10501  0ECF  3801               	iorlw	1
 10502  0ED0  00DC               	movwf	??___fladd
 10503  0ED1  085C               	movf	??___fladd,w
 10504  0ED2  00EB               	movwf	___fladd@grs
 10505  0ED3  2ED6               	goto	l2597
 10506  0ED4                     l2595:	
 10507  0ED4  1003               	clrc
 10508  0ED5  0CEB               	rrf	___fladd@grs,f
 10509  0ED6                     l2597:	
 10510  0ED6  1854               	btfsc	___fladd@b,0
 10511  0ED7  17EB               	bsf	___fladd@grs,7
 10512  0ED8  3001               	movlw	1
 10513  0ED9  00DC               	movwf	??___fladd
 10514  0EDA                     u2665:	
 10515  0EDA  37D7               	asrf	___fladd@b+3,f
 10516  0EDB  0CD6               	rrf	___fladd@b+2,f
 10517  0EDC  0CD5               	rrf	___fladd@b+1,f
 10518  0EDD  0CD4               	rrf	___fladd@b,f
 10519  0EDE  0BDC               	decfsz	??___fladd& (0+127),f
 10520  0EDF  2EDA               	goto	u2665
 10521  0EE0  3001               	movlw	1
 10522  0EE1  00DC               	movwf	??___fladd
 10523  0EE2  085C               	movf	??___fladd,w
 10524  0EE3  07EA               	addwf	___fladd@bexp,f
 10525  0EE4                     l2605:	
 10526  0EE4  0020               	movlb	0	; select bank0
 10527  0EE5  0869               	movf	___fladd@aexp,w
 10528  0EE6  026A               	subwf	___fladd@bexp,w
 10529  0EE7  1C03               	skipc
 10530  0EE8  2ECC               	goto	l833
 10531  0EE9                     l831:	
 10532  0EE9  1B68               	btfsc	___fladd@signs,6
 10533  0EEA  2F1C               	goto	l2631
 10534  0EEB  086A               	movf	___fladd@bexp,w
 10535  0EEC  1D03               	btfss	3,2
 10536  0EED  2EF7               	goto	l2613
 10537  0EEE  3000               	movlw	0
 10538  0EEF  00D7               	movwf	?___fladd+3
 10539  0EF0  3000               	movlw	0
 10540  0EF1  00D6               	movwf	?___fladd+2
 10541  0EF2  3000               	movlw	0
 10542  0EF3  00D5               	movwf	?___fladd+1
 10543  0EF4  3000               	movlw	0
 10544  0EF5  00D4               	movwf	?___fladd
 10545  0EF6  0008               	return
 10546  0EF7                     l2613:	
 10547  0EF7  0858               	movf	___fladd@a,w
 10548  0EF8  07D4               	addwf	___fladd@b,f
 10549  0EF9  0859               	movf	___fladd@a+1,w
 10550  0EFA  3DD5               	addwfc	___fladd@b+1,f
 10551  0EFB  085A               	movf	___fladd@a+2,w
 10552  0EFC  3DD6               	addwfc	___fladd@b+2,f
 10553  0EFD  085B               	movf	___fladd@a+3,w
 10554  0EFE  3DD7               	addwfc	___fladd@b+3,f
 10555  0EFF  1C57               	btfss	___fladd@b+3,0
 10556  0F00  2FA9               	goto	l2665
 10557  0F01  1C6B               	btfss	___fladd@grs,0
 10558  0F02  2F0B               	goto	l2621
 10559  0F03  1003               	clrc
 10560  0F04  0CEB               	rrf	___fladd@grs,f
 10561  0F05  086B               	movf	___fladd@grs,w
 10562  0F06  3801               	iorlw	1
 10563  0F07  00DC               	movwf	??___fladd
 10564  0F08  085C               	movf	??___fladd,w
 10565  0F09  00EB               	movwf	___fladd@grs
 10566  0F0A  2F0D               	goto	l2623
 10567  0F0B                     l2621:	
 10568  0F0B  1003               	clrc
 10569  0F0C  0CEB               	rrf	___fladd@grs,f
 10570  0F0D                     l2623:	
 10571  0F0D  1854               	btfsc	___fladd@b,0
 10572  0F0E  17EB               	bsf	___fladd@grs,7
 10573  0F0F  3001               	movlw	1
 10574  0F10  00DC               	movwf	??___fladd
 10575  0F11                     u2735:	
 10576  0F11  37D7               	asrf	___fladd@b+3,f
 10577  0F12  0CD6               	rrf	___fladd@b+2,f
 10578  0F13  0CD5               	rrf	___fladd@b+1,f
 10579  0F14  0CD4               	rrf	___fladd@b,f
 10580  0F15  0BDC               	decfsz	??___fladd& (0+127),f
 10581  0F16  2F11               	goto	u2735
 10582  0F17  3001               	movlw	1
 10583  0F18  00DC               	movwf	??___fladd
 10584  0F19  085C               	movf	??___fladd,w
 10585  0F1A  07EA               	addwf	___fladd@bexp,f
 10586  0F1B  2FA9               	goto	l2665
 10587  0F1C                     l2631:	
 10588  0F1C  0857               	movf	___fladd@b+3,w
 10589  0F1D  3A80               	xorlw	128
 10590  0F1E  00DC               	movwf	??___fladd
 10591  0F1F  085B               	movf	___fladd@a+3,w
 10592  0F20  3A80               	xorlw	128
 10593  0F21  025C               	subwf	??___fladd,w
 10594  0F22  1D03               	skipz
 10595  0F23  2F2E               	goto	u2743
 10596  0F24  085A               	movf	___fladd@a+2,w
 10597  0F25  0256               	subwf	___fladd@b+2,w
 10598  0F26  1D03               	skipz
 10599  0F27  2F2E               	goto	u2743
 10600  0F28  0859               	movf	___fladd@a+1,w
 10601  0F29  0255               	subwf	___fladd@b+1,w
 10602  0F2A  1D03               	skipz
 10603  0F2B  2F2E               	goto	u2743
 10604  0F2C  0858               	movf	___fladd@a,w
 10605  0F2D  0254               	subwf	___fladd@b,w
 10606  0F2E                     u2743:	
 10607  0F2E  1803               	skipnc
 10608  0F2F  2F79               	goto	l2641
 10609  0F30  30FF               	movlw	255
 10610  0F31  00DC               	movwf	??___fladd
 10611  0F32  30FF               	movlw	255
 10612  0F33  00DD               	movwf	??___fladd+1
 10613  0F34  30FF               	movlw	255
 10614  0F35  00DE               	movwf	??___fladd+2
 10615  0F36  30FF               	movlw	255
 10616  0F37  00DF               	movwf	??___fladd+3
 10617  0F38  0858               	movf	___fladd@a,w
 10618  0F39  00E0               	movwf	??___fladd+4
 10619  0F3A  0859               	movf	___fladd@a+1,w
 10620  0F3B  00E1               	movwf	??___fladd+5
 10621  0F3C  085A               	movf	___fladd@a+2,w
 10622  0F3D  00E2               	movwf	??___fladd+6
 10623  0F3E  085B               	movf	___fladd@a+3,w
 10624  0F3F  00E3               	movwf	??___fladd+7
 10625  0F40  0954               	comf	___fladd@b,w
 10626  0F41  00E4               	movwf	??___fladd+8
 10627  0F42  0955               	comf	___fladd@b+1,w
 10628  0F43  00E5               	movwf	??___fladd+9
 10629  0F44  0956               	comf	___fladd@b+2,w
 10630  0F45  00E6               	movwf	??___fladd+10
 10631  0F46  0957               	comf	___fladd@b+3,w
 10632  0F47  00E7               	movwf	??___fladd+11
 10633  0F48  0AE4               	incf	??___fladd+8,f
 10634  0F49  1903               	skipnz
 10635  0F4A  0AE5               	incf	??___fladd+9,f
 10636  0F4B  1903               	skipnz
 10637  0F4C  0AE6               	incf	??___fladd+10,f
 10638  0F4D  1903               	skipnz
 10639  0F4E  0AE7               	incf	??___fladd+11,f
 10640  0F4F  0864               	movf	??___fladd+8,w
 10641  0F50  07E0               	addwf	??___fladd+4,f
 10642  0F51  0865               	movf	??___fladd+9,w
 10643  0F52  3DE1               	addwfc	??___fladd+5,f
 10644  0F53  0866               	movf	??___fladd+10,w
 10645  0F54  3DE2               	addwfc	??___fladd+6,f
 10646  0F55  0867               	movf	??___fladd+11,w
 10647  0F56  3DE3               	addwfc	??___fladd+7,f
 10648  0F57  0860               	movf	??___fladd+4,w
 10649  0F58  07DC               	addwf	??___fladd,f
 10650  0F59  0861               	movf	??___fladd+5,w
 10651  0F5A  3DDD               	addwfc	??___fladd+1,f
 10652  0F5B  0862               	movf	??___fladd+6,w
 10653  0F5C  3DDE               	addwfc	??___fladd+2,f
 10654  0F5D  0863               	movf	??___fladd+7,w
 10655  0F5E  3DDF               	addwfc	??___fladd+3,f
 10656  0F5F  085F               	movf	??___fladd+3,w
 10657  0F60  00D7               	movwf	___fladd@b+3
 10658  0F61  085E               	movf	??___fladd+2,w
 10659  0F62  00D6               	movwf	___fladd@b+2
 10660  0F63  085D               	movf	??___fladd+1,w
 10661  0F64  00D5               	movwf	___fladd@b+1
 10662  0F65  085C               	movf	??___fladd,w
 10663  0F66  00D4               	movwf	___fladd@b
 10664  0F67  3080               	movlw	128
 10665  0F68  00DC               	movwf	??___fladd
 10666  0F69  085C               	movf	??___fladd,w
 10667  0F6A  06E8               	xorwf	___fladd@signs,f
 10668  0F6B  09EB               	comf	___fladd@grs,f
 10669  0F6C  0AEB               	incf	___fladd@grs,f
 10670  0F6D  086B               	movf	___fladd@grs,w
 10671  0F6E  1D03               	btfss	3,2
 10672  0F6F  2F81               	goto	l848
 10673  0F70  3001               	movlw	1
 10674  0F71  07D4               	addwf	___fladd@b,f
 10675  0F72  3000               	movlw	0
 10676  0F73  3DD5               	addwfc	___fladd@b+1,f
 10677  0F74  3000               	movlw	0
 10678  0F75  3DD6               	addwfc	___fladd@b+2,f
 10679  0F76  3000               	movlw	0
 10680  0F77  3DD7               	addwfc	___fladd@b+3,f
 10681  0F78  2F81               	goto	l848
 10682  0F79                     l2641:	
 10683  0F79  0858               	movf	___fladd@a,w
 10684  0F7A  02D4               	subwf	___fladd@b,f
 10685  0F7B  0859               	movf	___fladd@a+1,w
 10686  0F7C  3BD5               	subwfb	___fladd@b+1,f
 10687  0F7D  085A               	movf	___fladd@a+2,w
 10688  0F7E  3BD6               	subwfb	___fladd@b+2,f
 10689  0F7F  085B               	movf	___fladd@a+3,w
 10690  0F80  3BD7               	subwfb	___fladd@b+3,f
 10691  0F81                     l848:	
 10692  0F81  0857               	movf	___fladd@b+3,w
 10693  0F82  0456               	iorwf	___fladd@b+2,w
 10694  0F83  0455               	iorwf	___fladd@b+1,w
 10695  0F84  0454               	iorwf	___fladd@b,w
 10696  0F85  1D03               	skipz
 10697  0F86  2FA7               	goto	l2663
 10698  0F87  086B               	movf	___fladd@grs,w
 10699  0F88  1D03               	btfss	3,2
 10700  0F89  2FA7               	goto	l2663
 10701  0F8A  3000               	movlw	0
 10702  0F8B  00D7               	movwf	?___fladd+3
 10703  0F8C  3000               	movlw	0
 10704  0F8D  00D6               	movwf	?___fladd+2
 10705  0F8E  3000               	movlw	0
 10706  0F8F  00D5               	movwf	?___fladd+1
 10707  0F90  3000               	movlw	0
 10708  0F91  00D4               	movwf	?___fladd
 10709  0F92  0008               	return
 10710  0F93                     l2649:	
 10711  0F93  3001               	movlw	1
 10712  0F94                     u2785:	
 10713  0F94  35D4               	lslf	___fladd@b,f
 10714  0F95  0DD5               	rlf	___fladd@b+1,f
 10715  0F96  0DD6               	rlf	___fladd@b+2,f
 10716  0F97  0DD7               	rlf	___fladd@b+3,f
 10717  0F98  0B89               	decfsz	9,f
 10718  0F99  2F94               	goto	u2785
 10719  0F9A  1BEB               	btfsc	___fladd@grs,7
 10720  0F9B  1454               	bsf	___fladd@b,0
 10721  0F9C  1C6B               	btfss	___fladd@grs,0
 10722  0F9D  2FA0               	goto	l2657
 10723  0F9E  1403               	setc
 10724  0F9F  2FA1               	goto	L4
 10725  0FA0                     l2657:	
 10726  0FA0  1003               	clrc
 10727  0FA1                     L4:	
 10728  0FA1  0DEB               	rlf	___fladd@grs,f
 10729  0FA2  086A               	movf	___fladd@bexp,w
 10730  0FA3  1903               	btfsc	3,2
 10731  0FA4  2FA7               	goto	l2663
 10732  0FA5  3001               	movlw	1
 10733  0FA6  02EA               	subwf	___fladd@bexp,f
 10734  0FA7                     l2663:	
 10735  0FA7  1FD6               	btfss	___fladd@b+2,7
 10736  0FA8  2F93               	goto	l2649
 10737  0FA9                     l2665:	
 10738  0FA9  01E9               	clrf	___fladd@aexp
 10739  0FAA  1FEB               	btfss	___fladd@grs,7
 10740  0FAB  2FB4               	goto	l2675
 10741  0FAC  086B               	movf	___fladd@grs,w
 10742  0FAD  397F               	andlw	127
 10743  0FAE  1D03               	btfss	3,2
 10744  0FAF  2FB2               	goto	l2673
 10745  0FB0  1C54               	btfss	___fladd@b,0
 10746  0FB1  2FB4               	goto	l2675
 10747  0FB2                     l2673:	
 10748  0FB2  01E9               	clrf	___fladd@aexp
 10749  0FB3  0AE9               	incf	___fladd@aexp,f
 10750  0FB4                     l2675:	
 10751  0FB4  0869               	movf	___fladd@aexp,w
 10752  0FB5  1903               	btfsc	3,2
 10753  0FB6  2FE0               	goto	l861
 10754  0FB7  3001               	movlw	1
 10755  0FB8  07D4               	addwf	___fladd@b,f
 10756  0FB9  3000               	movlw	0
 10757  0FBA  3DD5               	addwfc	___fladd@b+1,f
 10758  0FBB  3000               	movlw	0
 10759  0FBC  3DD6               	addwfc	___fladd@b+2,f
 10760  0FBD  3000               	movlw	0
 10761  0FBE  3DD7               	addwfc	___fladd@b+3,f
 10762  0FBF  1C57               	btfss	___fladd@b+3,0
 10763  0FC0  2FE0               	goto	l861
 10764  0FC1  0854               	movf	___fladd@b,w
 10765  0FC2  00DC               	movwf	??___fladd
 10766  0FC3  0855               	movf	___fladd@b+1,w
 10767  0FC4  00DD               	movwf	??___fladd+1
 10768  0FC5  0856               	movf	___fladd@b+2,w
 10769  0FC6  00DE               	movwf	??___fladd+2
 10770  0FC7  0857               	movf	___fladd@b+3,w
 10771  0FC8  00DF               	movwf	??___fladd+3
 10772  0FC9  3001               	movlw	1
 10773  0FCA  00E0               	movwf	??___fladd+4
 10774  0FCB                     u2885:	
 10775  0FCB  37DF               	asrf	??___fladd+3,f
 10776  0FCC  0CDE               	rrf	??___fladd+2,f
 10777  0FCD  0CDD               	rrf	??___fladd+1,f
 10778  0FCE  0CDC               	rrf	??___fladd,f
 10779  0FCF  0BE0               	decfsz	??___fladd+4,f
 10780  0FD0  2FCB               	goto	u2885
 10781  0FD1  085F               	movf	??___fladd+3,w
 10782  0FD2  00D7               	movwf	___fladd@b+3
 10783  0FD3  085E               	movf	??___fladd+2,w
 10784  0FD4  00D6               	movwf	___fladd@b+2
 10785  0FD5  085D               	movf	??___fladd+1,w
 10786  0FD6  00D5               	movwf	___fladd@b+1
 10787  0FD7  085C               	movf	??___fladd,w
 10788  0FD8  00D4               	movwf	___fladd@b
 10789  0FD9  0A6A               	incf	___fladd@bexp,w
 10790  0FDA  1903               	btfsc	3,2
 10791  0FDB  2FE0               	goto	l861
 10792  0FDC  3001               	movlw	1
 10793  0FDD  00DC               	movwf	??___fladd
 10794  0FDE  085C               	movf	??___fladd,w
 10795  0FDF  07EA               	addwf	___fladd@bexp,f
 10796  0FE0                     l861:	
 10797  0FE0  0A6A               	incf	___fladd@bexp,w
 10798  0FE1  1D03               	btfss	3,2
 10799  0FE2  086A               	movf	___fladd@bexp,w
 10800  0FE3  1D03               	btfss	3,2
 10801  0FE4  2FF0               	goto	l2693
 10802  0FE5  3000               	movlw	0
 10803  0FE6  00D7               	movwf	___fladd@b+3
 10804  0FE7  3000               	movlw	0
 10805  0FE8  00D6               	movwf	___fladd@b+2
 10806  0FE9  3000               	movlw	0
 10807  0FEA  00D5               	movwf	___fladd@b+1
 10808  0FEB  3000               	movlw	0
 10809  0FEC  00D4               	movwf	___fladd@b
 10810  0FED  086A               	movf	___fladd@bexp,w
 10811  0FEE  1903               	btfsc	3,2
 10812  0FEF  01E8               	clrf	___fladd@signs
 10813  0FF0                     l2693:	
 10814  0FF0  1C6A               	btfss	___fladd@bexp,0
 10815  0FF1  2FF4               	goto	l2697
 10816  0FF2  17D6               	bsf	___fladd@b+2,7
 10817  0FF3  2FF8               	goto	l869
 10818  0FF4                     l2697:	
 10819  0FF4  307F               	movlw	127
 10820  0FF5  00DC               	movwf	??___fladd
 10821  0FF6  085C               	movf	??___fladd,w
 10822  0FF7  05D6               	andwf	___fladd@b+2,f
 10823  0FF8                     l869:	
 10824  0FF8  366A               	lsrf	___fladd@bexp,w
 10825  0FF9  00DC               	movwf	??___fladd
 10826  0FFA  085C               	movf	??___fladd,w
 10827  0FFB  00D7               	movwf	___fladd@b+3
 10828  0FFC  1FE8               	btfss	___fladd@signs,7
 10829  0FFD  0008               	return
 10830  0FFE  17D7               	bsf	___fladd@b+3,7
 10831  0FFF  0008               	return
 10832  1000                     __end_of___fladd:	
 10833                           
 10834                           	psect	text10
 10835  14FB                     __ptext10:	
 10836 ;; *************** function _readButton *****************
 10837 ;; Defined at:
 10838 ;;		line 9 in file "buttons.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;		None
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;		None
 10843 ;; Return value:  Size  Location     Type
 10844 ;;                  1    wreg      unsigned char 
 10845 ;; Registers used:
 10846 ;;		wreg, status,2, status,0, pclath, cstack
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/0
 10849 ;;		On exit  : 0/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10856 ;;Total ram usage:        2 bytes
 10857 ;; Hardware stack levels used:    1
 10858 ;; Hardware stack levels required when called:    1
 10859 ;; This function calls:
 10860 ;;		_ADCRead
 10861 ;; This function is called by:
 10862 ;;		_main
 10863 ;; This function uses a non-reentrant model
 10864 ;;
 10865                           
 10866                           
 10867                           ;psect for function _readButton
 10868  14FB                     _readButton:	
 10869                           
 10870                           ;buttons.c: 11: readButtons = ADCRead(11);
 10871                           
 10872                           ;incstack = 0
 10873                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
 10874  14FB  300B               	movlw	11
 10875  14FC  319E  269D  3194   	fcall	_ADCRead
 10876  14FF  0871               	movf	?_ADCRead+1,w
 10877  1500  0022               	movlb	2	; select bank2
 10878  1501  00C8               	movwf	(_readButtons+1)^(0+256)
 10879  1502  0870               	movf	?_ADCRead,w
 10880  1503  00C7               	movwf	_readButtons^(0+256)
 10881                           
 10882                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
 10883  1504  0848               	movf	(_readButtons+1)^(0+256),w
 10884  1505  3A80               	xorlw	128
 10885  1506  00F4               	movwf	??_readButton
 10886  1507  3081               	movlw	129
 10887  1508  0274               	subwf	??_readButton,w
 10888  1509  1D03               	skipz
 10889  150A  2D0D               	goto	u4415
 10890  150B  306D               	movlw	109
 10891  150C  0247               	subwf	_readButtons^(0+256),w
 10892  150D                     u4415:	
 10893  150D  1C03               	skipc
 10894  150E  2D1F               	goto	l3513
 10895  150F  0022               	movlb	2	; select bank2
 10896  1510  0848               	movf	(_readButtons+1)^(0+256),w
 10897  1511  3A80               	xorlw	128
 10898  1512  00F4               	movwf	??_readButton
 10899  1513  3081               	movlw	129
 10900  1514  0274               	subwf	??_readButton,w
 10901  1515  1D03               	skipz
 10902  1516  2D19               	goto	u4425
 10903  1517  3095               	movlw	149
 10904  1518  0247               	subwf	_readButtons^(0+256),w
 10905  1519                     u4425:	
 10906  1519  1803               	skipnc
 10907  151A  2D1F               	goto	l3513
 10908                           
 10909                           ;buttons.c: 14: {
 10910                           ;buttons.c: 15: button = 1;
 10911  151B  0021               	movlb	1	; select bank1
 10912  151C  01ED               	clrf	_button^(0+128)
 10913  151D  0AED               	incf	_button^(0+128),f
 10914                           
 10915                           ;buttons.c: 16: }
 10916  151E  2D4D               	goto	l3525
 10917  151F                     l3513:	
 10918                           
 10919                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
 10920  151F  0022               	movlb	2	; select bank2
 10921  1520  0848               	movf	(_readButtons+1)^(0+256),w
 10922  1521  3A80               	xorlw	128
 10923  1522  00F4               	movwf	??_readButton
 10924  1523  3082               	movlw	130
 10925  1524  0274               	subwf	??_readButton,w
 10926  1525  1D03               	skipz
 10927  1526  2D29               	goto	u4435
 10928  1527  3017               	movlw	23
 10929  1528  0247               	subwf	_readButtons^(0+256),w
 10930  1529                     u4435:	
 10931  1529  1C03               	skipc
 10932  152A  2D39               	goto	l3519
 10933  152B  0022               	movlb	2	; select bank2
 10934  152C  0848               	movf	(_readButtons+1)^(0+256),w
 10935  152D  3A80               	xorlw	128
 10936  152E  00F4               	movwf	??_readButton
 10937  152F  3082               	movlw	130
 10938  1530  0274               	subwf	??_readButton,w
 10939  1531  1D03               	skipz
 10940  1532  2D35               	goto	u4445
 10941  1533  304E               	movlw	78
 10942  1534  0247               	subwf	_readButtons^(0+256),w
 10943  1535                     u4445:	
 10944  1535  1803               	skipnc
 10945  1536  2D39               	goto	l3519
 10946                           
 10947                           ;buttons.c: 19: {
 10948                           ;buttons.c: 20: button = 2;
 10949  1537  3002               	movlw	2
 10950  1538  2D46               	goto	L5
 10951  1539                     l3519:	
 10952                           ;buttons.c: 21: }
 10953                           
 10954                           
 10955                           ;buttons.c: 23: else if(readButtons > 745)
 10956  1539  0022               	movlb	2	; select bank2
 10957  153A  0848               	movf	(_readButtons+1)^(0+256),w
 10958  153B  3A80               	xorlw	128
 10959  153C  00F4               	movwf	??_readButton
 10960  153D  3082               	movlw	130
 10961  153E  0274               	subwf	??_readButton,w
 10962  153F  1D03               	skipz
 10963  1540  2D43               	goto	u4455
 10964  1541  30EA               	movlw	234
 10965  1542  0247               	subwf	_readButtons^(0+256),w
 10966  1543                     u4455:	
 10967  1543  1C03               	skipc
 10968  1544  2D4B               	goto	l3523
 10969                           
 10970                           ;buttons.c: 24: {
 10971                           ;buttons.c: 25: button = 3;
 10972  1545  3003               	movlw	3
 10973  1546                     L5:	
 10974  1546  00F4               	movwf	??_readButton
 10975  1547  0874               	movf	??_readButton,w
 10976  1548  0021               	movlb	1	; select bank1
 10977  1549  00ED               	movwf	_button^(0+128)
 10978                           
 10979                           ;buttons.c: 26: }
 10980  154A  2D4D               	goto	l3525
 10981  154B                     l3523:	
 10982                           
 10983                           ;buttons.c: 28: else
 10984                           ;buttons.c: 29: {
 10985                           ;buttons.c: 30: button = 0;
 10986  154B  0021               	movlb	1	; select bank1
 10987  154C  01ED               	clrf	_button^(0+128)
 10988  154D                     l3525:	
 10989                           
 10990                           ;buttons.c: 31: }
 10991                           ;buttons.c: 33: if (button != 0)
 10992  154D  086D               	movf	_button^(0+128),w
 10993  154E  1903               	btfsc	3,2
 10994  154F  2D7E               	goto	l3545
 10995                           
 10996                           ;buttons.c: 34: {
 10997                           ;buttons.c: 35: if (button != lastButton)
 10998  1550  086D               	movf	_button^(0+128),w
 10999  1551  066C               	xorwf	_lastButton^(0+128),w
 11000  1552  1903               	skipnz
 11001  1553  2D59               	goto	l3533
 11002                           
 11003                           ;buttons.c: 36: {
 11004                           ;buttons.c: 37: lastButton = button;
 11005  1554  086D               	movf	_button^(0+128),w
 11006  1555  00F4               	movwf	??_readButton
 11007  1556  0874               	movf	??_readButton,w
 11008  1557  00EC               	movwf	_lastButton^(0+128)
 11009  1558  2D7E               	goto	l3545
 11010  1559                     l3533:	
 11011                           ;buttons.c: 39: }
 11012                           
 11013                           ;buttons.c: 38: j = 0;
 11014                           
 11015                           
 11016                           ;buttons.c: 40: else
 11017                           ;buttons.c: 41: {
 11018                           ;buttons.c: 42: j += 1;
 11019  1559  3001               	movlw	1
 11020  155A  00F4               	movwf	??_readButton
 11021  155B  0874               	movf	??_readButton,w
 11022  155C  0022               	movlb	2	; select bank2
 11023  155D  07D1               	addwf	_j^(0+256),f
 11024                           
 11025                           ;buttons.c: 44: if(j == 1)
 11026  155E  0351               	decf	_j^(0+256),w
 11027  155F  1D03               	btfss	3,2
 11028  1560  2D64               	goto	l3539
 11029                           
 11030                           ;buttons.c: 45: {
 11031                           ;buttons.c: 46: return (lastButton);
 11032  1561  0021               	movlb	1	; select bank1
 11033  1562  086C               	movf	_lastButton^(0+128),w
 11034  1563  0008               	return
 11035  1564                     l3539:	
 11036                           
 11037                           ;buttons.c: 47: }
 11038                           ;buttons.c: 49: if (j >10)
 11039  1564  0022               	movlb	2	; select bank2
 11040  1565  0851               	movf	_j^(0+256),w
 11041  1566  3A80               	xorlw	128
 11042  1567  3E75               	addlw	-139
 11043  1568  1C03               	skipc
 11044  1569  2D80               	goto	l3547
 11045                           
 11046                           ;buttons.c: 50: {
 11047                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
 11048  156A  3002               	movlw	2
 11049  156B  00F5               	movwf	??_readButton+1
 11050  156C  3004               	movlw	4
 11051  156D  00F4               	movwf	??_readButton
 11052  156E  30BA               	movlw	186
 11053  156F                     u4907:	
 11054  156F  0B89               	decfsz	9,f
 11055  1570  2D6F               	goto	u4907
 11056  1571  0BF4               	decfsz	??_readButton,f
 11057  1572  2D6F               	goto	u4907
 11058  1573  0BF5               	decfsz	??_readButton+1,f
 11059  1574  2D6F               	goto	u4907
 11060  1575  3200               	nop2
 11061                           
 11062                           ;buttons.c: 52: j = 10;
 11063  1576  300A               	movlw	10
 11064  1577  00F4               	movwf	??_readButton
 11065  1578  0874               	movf	??_readButton,w
 11066  1579  0022               	movlb	2	; select bank2
 11067  157A  00D1               	movwf	_j^(0+256)
 11068                           
 11069                           ;buttons.c: 53: return (lastButton);
 11070  157B  0021               	movlb	1	; select bank1
 11071  157C  086C               	movf	_lastButton^(0+128),w
 11072  157D  0008               	return
 11073  157E                     l3545:	
 11074                           ;buttons.c: 54: }
 11075                           ;buttons.c: 55: }
 11076                           ;buttons.c: 56: goto end;
 11077                           
 11078                           
 11079                           ;buttons.c: 57: }
 11080                           ;buttons.c: 59: j = 0;
 11081  157E  0022               	movlb	2	; select bank2
 11082  157F  01D1               	clrf	_j^(0+256)
 11083  1580                     l3547:	
 11084                           ;buttons.c: 61: end:
 11085                           
 11086                           
 11087                           ;buttons.c: 63: return (0);
 11088  1580  3000               	movlw	0
 11089  1581  0008               	return
 11090  1582                     __end_of_readButton:	
 11091                           
 11092                           	psect	text11
 11093  0940                     __ptext11:	
 11094 ;; *************** function _readAnalog *****************
 11095 ;; Defined at:
 11096 ;;		line 49 in file "adc.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;  channel         2    6[BANK0 ] unsigned int 
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;  value           2   28[BANK0 ] int 
 11101 ;;  analog_chann    2   26[BANK0 ] unsigned int 
 11102 ;; Return value:  Size  Location     Type
 11103 ;;                  2    6[BANK0 ] int 
 11104 ;; Registers used:
 11105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11111 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11114 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11115 ;;Total ram usage:       24 bytes
 11116 ;; Hardware stack levels used:    1
 11117 ;; Hardware stack levels required when called:    1
 11118 ;; This function calls:
 11119 ;;		_ADCRead
 11120 ;;		___aldiv
 11121 ;;		___wmul
 11122 ;; This function is called by:
 11123 ;;		_main
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127                           
 11128                           ;psect for function _readAnalog
 11129  0940                     _readAnalog:	
 11130                           
 11131                           ;adc.c: 51: int16_t value;
 11132                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
 11133                           
 11134                           ;incstack = 0
 11135                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11136  0940  0020               	movlb	0	; select bank0
 11137  0941  3526               	lslf	readAnalog@channel,w
 11138  0942  3E53               	addlw	(low (_channels| (0+256)))& (0+255)
 11139  0943  0086               	movwf	6
 11140  0944  3001               	movlw	1	; select bank2/3
 11141  0945  0087               	movwf	7
 11142  0946  3F40               	moviw [0]fsr1
 11143  0947  00BA               	movwf	readAnalog@analog_channel
 11144  0948  3F41               	moviw [1]fsr1
 11145  0949  00BB               	movwf	readAnalog@analog_channel+1
 11146                           
 11147                           ;adc.c: 55: value = ADCRead(analog_channel);
 11148  094A  083A               	movf	readAnalog@analog_channel,w
 11149  094B  319E  269D  3189   	fcall	_ADCRead
 11150  094E  0871               	movf	?_ADCRead+1,w
 11151  094F  0020               	movlb	0	; select bank0
 11152  0950  00BD               	movwf	readAnalog@value+1
 11153  0951  0870               	movf	?_ADCRead,w
 11154  0952  00BC               	movwf	readAnalog@value
 11155                           
 11156                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
 11157  0953  0826               	movf	readAnalog@channel,w
 11158  0954  00A8               	movwf	??_readAnalog
 11159  0955  3001               	movlw	1
 11160  0956                     u4195:	
 11161  0956  35A8               	lslf	??_readAnalog,f
 11162  0957  3EFF               	addlw	-1
 11163  0958  1D03               	skipz
 11164  0959  2956               	goto	u4195
 11165  095A  3528               	lslf	??_readAnalog,w
 11166  095B  3EA0               	addlw	(low (_totals| (0+256)))& (0+255)
 11167  095C  0086               	movwf	6
 11168  095D  3001               	movlw	1	; select bank3/4
 11169  095E  0087               	movwf	7
 11170  095F  3F40               	moviw [0]fsr1
 11171  0960  00A9               	movwf	??_readAnalog+1
 11172  0961  3F41               	moviw [1]fsr1
 11173  0962  00AA               	movwf	??_readAnalog+2
 11174  0963  3F42               	moviw [2]fsr1
 11175  0964  00AB               	movwf	??_readAnalog+3
 11176  0965  3F43               	moviw [3]fsr1
 11177  0966  00AC               	movwf	??_readAnalog+4
 11178  0967  0022               	movlb	2	; select bank2
 11179  0968  0850               	movf	(_sampleIndex+1)^(0+256),w
 11180  0969  0020               	movlb	0	; select bank0
 11181  096A  00AE               	movwf	??_readAnalog+6
 11182  096B  0022               	movlb	2	; select bank2
 11183  096C  084F               	movf	_sampleIndex^(0+256),w
 11184  096D  0020               	movlb	0	; select bank0
 11185  096E  00AD               	movwf	??_readAnalog+5
 11186  096F  35AD               	lslf	??_readAnalog+5,f
 11187  0970  0DAE               	rlf	??_readAnalog+6,f
 11188  0971  0827               	movf	readAnalog@channel+1,w
 11189  0972  00FA               	movwf	___wmul@multiplier+1
 11190  0973  0826               	movf	readAnalog@channel,w
 11191  0974  00F9               	movwf	___wmul@multiplier
 11192  0975  305A               	movlw	90
 11193  0976  00FB               	movwf	___wmul@multiplicand
 11194  0977  3000               	movlw	0
 11195  0978  00FC               	movwf	___wmul@multiplicand+1
 11196  0979  319F  270E  3189   	fcall	___wmul
 11197  097C  3020               	movlw	32
 11198  097D  0020               	movlb	0	; select bank0
 11199  097E  00AF               	movwf	??_readAnalog+7
 11200  097F  3021               	movlw	33
 11201  0980  00B0               	movwf	??_readAnalog+8
 11202  0981  0879               	movf	?___wmul,w
 11203  0982  072F               	addwf	??_readAnalog+7,w
 11204  0983  00B1               	movwf	??_readAnalog+9
 11205  0984  087A               	movf	?___wmul+1,w
 11206  0985  3D30               	addwfc	??_readAnalog+8,w
 11207  0986  00B2               	movwf	??_readAnalog+10
 11208  0987  082D               	movf	??_readAnalog+5,w
 11209  0988  0731               	addwf	??_readAnalog+9,w
 11210  0989  0086               	movwf	6
 11211  098A  082E               	movf	??_readAnalog+6,w
 11212  098B  3D32               	addwfc	??_readAnalog+10,w
 11213  098C  0087               	movwf	7
 11214  098D  3F40               	moviw [0]fsr1
 11215  098E  00B3               	movwf	??_readAnalog+11
 11216  098F  3F41               	moviw [1]fsr1
 11217  0990  00B4               	movwf	??_readAnalog+12
 11218  0991  0833               	movf	??_readAnalog+11,w
 11219  0992  00B5               	movwf	??_readAnalog+13
 11220  0993  0834               	movf	??_readAnalog+12,w
 11221  0994  00B6               	movwf	??_readAnalog+14
 11222  0995  3000               	movlw	0
 11223  0996  1BB6               	btfsc	??_readAnalog+14,7
 11224  0997  30FF               	movlw	255
 11225  0998  00B7               	movwf	??_readAnalog+15
 11226  0999  00B8               	movwf	??_readAnalog+16
 11227  099A  09B5               	comf	??_readAnalog+13,f
 11228  099B  09B6               	comf	??_readAnalog+14,f
 11229  099C  09B7               	comf	??_readAnalog+15,f
 11230  099D  09B8               	comf	??_readAnalog+16,f
 11231  099E  0AB5               	incf	??_readAnalog+13,f
 11232  099F  1903               	skipnz
 11233  09A0  0AB6               	incf	??_readAnalog+14,f
 11234  09A1  1903               	skipnz
 11235  09A2  0AB7               	incf	??_readAnalog+15,f
 11236  09A3  1903               	skipnz
 11237  09A4  0AB8               	incf	??_readAnalog+16,f
 11238  09A5  0835               	movf	??_readAnalog+13,w
 11239  09A6  07A9               	addwf	??_readAnalog+1,f
 11240  09A7  0836               	movf	??_readAnalog+14,w
 11241  09A8  3DAA               	addwfc	??_readAnalog+2,f
 11242  09A9  0837               	movf	??_readAnalog+15,w
 11243  09AA  3DAB               	addwfc	??_readAnalog+3,f
 11244  09AB  0838               	movf	??_readAnalog+16,w
 11245  09AC  3DAC               	addwfc	??_readAnalog+4,f
 11246  09AD  0826               	movf	readAnalog@channel,w
 11247  09AE  00B9               	movwf	??_readAnalog+17
 11248  09AF  3001               	movlw	1
 11249  09B0                     u4205:	
 11250  09B0  35B9               	lslf	??_readAnalog+17,f
 11251  09B1  3EFF               	addlw	-1
 11252  09B2  1D03               	skipz
 11253  09B3  29B0               	goto	u4205
 11254  09B4  3539               	lslf	??_readAnalog+17,w
 11255  09B5  3EA0               	addlw	(low (_totals| (0+256)))& (0+255)
 11256  09B6  0086               	movwf	6
 11257  09B7  3001               	movlw	1	; select bank3/4
 11258  09B8  0087               	movwf	7
 11259  09B9  0829               	movf	??_readAnalog+1,w
 11260  09BA  3FC0               	movwi [0]fsr1
 11261  09BB  082A               	movf	??_readAnalog+2,w
 11262  09BC  3FC1               	movwi [1]fsr1
 11263  09BD  082B               	movf	??_readAnalog+3,w
 11264  09BE  3FC2               	movwi [2]fsr1
 11265  09BF  082C               	movf	??_readAnalog+4,w
 11266  09C0  3FC3               	movwi [3]fsr1
 11267                           
 11268                           ;adc.c: 59: samples[channel][sampleIndex] = value;
 11269  09C1  0022               	movlb	2	; select bank2
 11270  09C2  0850               	movf	(_sampleIndex+1)^(0+256),w
 11271  09C3  0020               	movlb	0	; select bank0
 11272  09C4  00A9               	movwf	??_readAnalog+1
 11273  09C5  0022               	movlb	2	; select bank2
 11274  09C6  084F               	movf	_sampleIndex^(0+256),w
 11275  09C7  0020               	movlb	0	; select bank0
 11276  09C8  00A8               	movwf	??_readAnalog
 11277  09C9  35A8               	lslf	??_readAnalog,f
 11278  09CA  0DA9               	rlf	??_readAnalog+1,f
 11279  09CB  0827               	movf	readAnalog@channel+1,w
 11280  09CC  00FA               	movwf	___wmul@multiplier+1
 11281  09CD  0826               	movf	readAnalog@channel,w
 11282  09CE  00F9               	movwf	___wmul@multiplier
 11283  09CF  305A               	movlw	90
 11284  09D0  00FB               	movwf	___wmul@multiplicand
 11285  09D1  3000               	movlw	0
 11286  09D2  00FC               	movwf	___wmul@multiplicand+1
 11287  09D3  319F  270E  3189   	fcall	___wmul
 11288  09D6  3020               	movlw	32
 11289  09D7  0020               	movlb	0	; select bank0
 11290  09D8  00AA               	movwf	??_readAnalog+2
 11291  09D9  3021               	movlw	33
 11292  09DA  00AB               	movwf	??_readAnalog+3
 11293  09DB  0879               	movf	?___wmul,w
 11294  09DC  072A               	addwf	??_readAnalog+2,w
 11295  09DD  00AC               	movwf	??_readAnalog+4
 11296  09DE  087A               	movf	?___wmul+1,w
 11297  09DF  3D2B               	addwfc	??_readAnalog+3,w
 11298  09E0  00AD               	movwf	??_readAnalog+5
 11299  09E1  0828               	movf	??_readAnalog,w
 11300  09E2  072C               	addwf	??_readAnalog+4,w
 11301  09E3  0086               	movwf	6
 11302  09E4  0829               	movf	??_readAnalog+1,w
 11303  09E5  3D2D               	addwfc	??_readAnalog+5,w
 11304  09E6  0087               	movwf	7
 11305  09E7  083C               	movf	readAnalog@value,w
 11306  09E8  3FC0               	movwi [0]fsr1
 11307  09E9  083D               	movf	readAnalog@value+1,w
 11308  09EA  3FC1               	movwi [1]fsr1
 11309                           
 11310                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
 11311  09EB  0826               	movf	readAnalog@channel,w
 11312  09EC  00A8               	movwf	??_readAnalog
 11313  09ED  3001               	movlw	1
 11314  09EE                     u4215:	
 11315  09EE  35A8               	lslf	??_readAnalog,f
 11316  09EF  3EFF               	addlw	-1
 11317  09F0  1D03               	skipz
 11318  09F1  29EE               	goto	u4215
 11319  09F2  3528               	lslf	??_readAnalog,w
 11320  09F3  3EA0               	addlw	(low (_totals| (0+256)))& (0+255)
 11321  09F4  0086               	movwf	6
 11322  09F5  3001               	movlw	1	; select bank3/4
 11323  09F6  0087               	movwf	7
 11324  09F7  3F40               	moviw [0]fsr1
 11325  09F8  00A9               	movwf	??_readAnalog+1
 11326  09F9  3F41               	moviw [1]fsr1
 11327  09FA  00AA               	movwf	??_readAnalog+2
 11328  09FB  3F42               	moviw [2]fsr1
 11329  09FC  00AB               	movwf	??_readAnalog+3
 11330  09FD  3F43               	moviw [3]fsr1
 11331  09FE  00AC               	movwf	??_readAnalog+4
 11332  09FF  0022               	movlb	2	; select bank2
 11333  0A00  0850               	movf	(_sampleIndex+1)^(0+256),w
 11334  0A01  0020               	movlb	0	; select bank0
 11335  0A02  00AE               	movwf	??_readAnalog+6
 11336  0A03  0022               	movlb	2	; select bank2
 11337  0A04  084F               	movf	_sampleIndex^(0+256),w
 11338  0A05  0020               	movlb	0	; select bank0
 11339  0A06  00AD               	movwf	??_readAnalog+5
 11340  0A07  35AD               	lslf	??_readAnalog+5,f
 11341  0A08  0DAE               	rlf	??_readAnalog+6,f
 11342  0A09  0827               	movf	readAnalog@channel+1,w
 11343  0A0A  00FA               	movwf	___wmul@multiplier+1
 11344  0A0B  0826               	movf	readAnalog@channel,w
 11345  0A0C  00F9               	movwf	___wmul@multiplier
 11346  0A0D  305A               	movlw	90
 11347  0A0E  00FB               	movwf	___wmul@multiplicand
 11348  0A0F  3000               	movlw	0
 11349  0A10  00FC               	movwf	___wmul@multiplicand+1
 11350  0A11  319F  270E  3189   	fcall	___wmul
 11351  0A14  3020               	movlw	32
 11352  0A15  0020               	movlb	0	; select bank0
 11353  0A16  00AF               	movwf	??_readAnalog+7
 11354  0A17  3021               	movlw	33
 11355  0A18  00B0               	movwf	??_readAnalog+8
 11356  0A19  0879               	movf	?___wmul,w
 11357  0A1A  072F               	addwf	??_readAnalog+7,w
 11358  0A1B  00B1               	movwf	??_readAnalog+9
 11359  0A1C  087A               	movf	?___wmul+1,w
 11360  0A1D  3D30               	addwfc	??_readAnalog+8,w
 11361  0A1E  00B2               	movwf	??_readAnalog+10
 11362  0A1F  082D               	movf	??_readAnalog+5,w
 11363  0A20  0731               	addwf	??_readAnalog+9,w
 11364  0A21  0086               	movwf	6
 11365  0A22  082E               	movf	??_readAnalog+6,w
 11366  0A23  3D32               	addwfc	??_readAnalog+10,w
 11367  0A24  0087               	movwf	7
 11368  0A25  3F40               	moviw [0]fsr1
 11369  0A26  00B3               	movwf	??_readAnalog+11
 11370  0A27  3F41               	moviw [1]fsr1
 11371  0A28  00B4               	movwf	??_readAnalog+12
 11372  0A29  0833               	movf	??_readAnalog+11,w
 11373  0A2A  00B5               	movwf	??_readAnalog+13
 11374  0A2B  0834               	movf	??_readAnalog+12,w
 11375  0A2C  00B6               	movwf	??_readAnalog+14
 11376  0A2D  3000               	movlw	0
 11377  0A2E  1BB6               	btfsc	??_readAnalog+14,7
 11378  0A2F  30FF               	movlw	255
 11379  0A30  00B7               	movwf	??_readAnalog+15
 11380  0A31  00B8               	movwf	??_readAnalog+16
 11381  0A32  0835               	movf	??_readAnalog+13,w
 11382  0A33  07A9               	addwf	??_readAnalog+1,f
 11383  0A34  0836               	movf	??_readAnalog+14,w
 11384  0A35  3DAA               	addwfc	??_readAnalog+2,f
 11385  0A36  0837               	movf	??_readAnalog+15,w
 11386  0A37  3DAB               	addwfc	??_readAnalog+3,f
 11387  0A38  0838               	movf	??_readAnalog+16,w
 11388  0A39  3DAC               	addwfc	??_readAnalog+4,f
 11389  0A3A  0826               	movf	readAnalog@channel,w
 11390  0A3B  00B9               	movwf	??_readAnalog+17
 11391  0A3C  3001               	movlw	1
 11392  0A3D                     u4225:	
 11393  0A3D  35B9               	lslf	??_readAnalog+17,f
 11394  0A3E  3EFF               	addlw	-1
 11395  0A3F  1D03               	skipz
 11396  0A40  2A3D               	goto	u4225
 11397  0A41  3539               	lslf	??_readAnalog+17,w
 11398  0A42  3EA0               	addlw	(low (_totals| (0+256)))& (0+255)
 11399  0A43  0086               	movwf	6
 11400  0A44  3001               	movlw	1	; select bank3/4
 11401  0A45  0087               	movwf	7
 11402  0A46  0829               	movf	??_readAnalog+1,w
 11403  0A47  3FC0               	movwi [0]fsr1
 11404  0A48  082A               	movf	??_readAnalog+2,w
 11405  0A49  3FC1               	movwi [1]fsr1
 11406  0A4A  082B               	movf	??_readAnalog+3,w
 11407  0A4B  3FC2               	movwi [2]fsr1
 11408  0A4C  082C               	movf	??_readAnalog+4,w
 11409  0A4D  3FC3               	movwi [3]fsr1
 11410                           
 11411                           ;adc.c: 63: if(channel>=(8-1))
 11412  0A4E  3000               	movlw	0
 11413  0A4F  0227               	subwf	readAnalog@channel+1,w
 11414  0A50  3007               	movlw	7
 11415  0A51  1903               	skipnz
 11416  0A52  0226               	subwf	readAnalog@channel,w
 11417  0A53  1C03               	skipc
 11418  0A54  2A63               	goto	l3449
 11419                           
 11420                           ;adc.c: 64: {
 11421                           ;adc.c: 65: sampleIndex+=1;
 11422  0A55  3001               	movlw	1
 11423  0A56  0022               	movlb	2	; select bank2
 11424  0A57  07CF               	addwf	_sampleIndex^(0+256),f
 11425  0A58  3000               	movlw	0
 11426  0A59  3DD0               	addwfc	(_sampleIndex+1)^(0+256),f
 11427                           
 11428                           ;adc.c: 66: if(sampleIndex >= 45)sampleIndex = 0;
 11429  0A5A  3000               	movlw	0
 11430  0A5B  0250               	subwf	(_sampleIndex+1)^(0+256),w
 11431  0A5C  302D               	movlw	45
 11432  0A5D  1903               	skipnz
 11433  0A5E  024F               	subwf	_sampleIndex^(0+256),w
 11434  0A5F  1C03               	skipc
 11435  0A60  2A63               	goto	l3449
 11436  0A61  01CF               	clrf	_sampleIndex^(0+256)
 11437  0A62  01D0               	clrf	(_sampleIndex+1)^(0+256)
 11438  0A63                     l3449:	
 11439                           
 11440                           ;adc.c: 67: }
 11441                           ;adc.c: 69: value = totals[channel]/45;
 11442  0A63  3000               	movlw	0
 11443  0A64  00F3               	movwf	___aldiv@divisor+3
 11444  0A65  3000               	movlw	0
 11445  0A66  00F2               	movwf	___aldiv@divisor+2
 11446  0A67  3000               	movlw	0
 11447  0A68  00F1               	movwf	___aldiv@divisor+1
 11448  0A69  302D               	movlw	45
 11449  0A6A  00F0               	movwf	___aldiv@divisor
 11450  0A6B  0020               	movlb	0	; select bank0
 11451  0A6C  0826               	movf	readAnalog@channel,w
 11452  0A6D  00A8               	movwf	??_readAnalog
 11453  0A6E  3001               	movlw	1
 11454  0A6F                     u4255:	
 11455  0A6F  35A8               	lslf	??_readAnalog,f
 11456  0A70  3EFF               	addlw	-1
 11457  0A71  1D03               	skipz
 11458  0A72  2A6F               	goto	u4255
 11459  0A73  3528               	lslf	??_readAnalog,w
 11460  0A74  3EA0               	addlw	(low (_totals| (0+256)))& (0+255)
 11461  0A75  0086               	movwf	6
 11462  0A76  3001               	movlw	1	; select bank3/4
 11463  0A77  0087               	movwf	7
 11464  0A78  3F40               	moviw [0]fsr1
 11465  0A79  00F4               	movwf	___aldiv@dividend
 11466  0A7A  3F41               	moviw [1]fsr1
 11467  0A7B  00F5               	movwf	___aldiv@dividend+1
 11468  0A7C  3F42               	moviw [2]fsr1
 11469  0A7D  00F6               	movwf	___aldiv@dividend+2
 11470  0A7E  3F43               	moviw [3]fsr1
 11471  0A7F  00F7               	movwf	___aldiv@dividend+3
 11472  0A80  3194  2479         	fcall	___aldiv
 11473  0A82  0871               	movf	?___aldiv+1,w
 11474  0A83  0020               	movlb	0	; select bank0
 11475  0A84  00BD               	movwf	readAnalog@value+1
 11476  0A85  0870               	movf	?___aldiv,w
 11477  0A86  00BC               	movwf	readAnalog@value
 11478                           
 11479                           ;adc.c: 71: return value;
 11480  0A87  083D               	movf	readAnalog@value+1,w
 11481  0A88  00A7               	movwf	?_readAnalog+1
 11482  0A89  083C               	movf	readAnalog@value,w
 11483  0A8A  00A6               	movwf	?_readAnalog
 11484  0A8B  0008               	return
 11485  0A8C                     __end_of_readAnalog:	
 11486                           
 11487                           	psect	text12
 11488  1479                     __ptext12:	
 11489 ;; *************** function ___aldiv *****************
 11490 ;; Defined at:
 11491 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;  divisor         4    0[COMMON] long 
 11494 ;;  dividend        4    4[COMMON] long 
 11495 ;; Auto vars:     Size  Location     Type
 11496 ;;  quotient        4    2[BANK0 ] long 
 11497 ;;  sign            1    1[BANK0 ] unsigned char 
 11498 ;;  counter         1    0[BANK0 ] unsigned char 
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  4    0[COMMON] long 
 11501 ;; Registers used:
 11502 ;;		wreg, status,2, status,0
 11503 ;; Tracked objects:
 11504 ;;		On entry : 0/0
 11505 ;;		On exit  : 0/0
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11508 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11511 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11512 ;;Total ram usage:       15 bytes
 11513 ;; Hardware stack levels used:    1
 11514 ;; This function calls:
 11515 ;;		Nothing
 11516 ;; This function is called by:
 11517 ;;		_readAnalog
 11518 ;; This function uses a non-reentrant model
 11519 ;;
 11520                           
 11521                           
 11522                           ;psect for function ___aldiv
 11523  1479                     ___aldiv:	
 11524                           
 11525                           ;incstack = 0
 11526                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 11527  1479  0020               	movlb	0	; select bank0
 11528  147A  01A1               	clrf	___aldiv@sign
 11529  147B  1FF3               	btfss	___aldiv@divisor+3,7
 11530  147C  2C8A               	goto	l624
 11531  147D  09F0               	comf	___aldiv@divisor,f
 11532  147E  09F1               	comf	___aldiv@divisor+1,f
 11533  147F  09F2               	comf	___aldiv@divisor+2,f
 11534  1480  09F3               	comf	___aldiv@divisor+3,f
 11535  1481  0AF0               	incf	___aldiv@divisor,f
 11536  1482  1903               	skipnz
 11537  1483  0AF1               	incf	___aldiv@divisor+1,f
 11538  1484  1903               	skipnz
 11539  1485  0AF2               	incf	___aldiv@divisor+2,f
 11540  1486  1903               	skipnz
 11541  1487  0AF3               	incf	___aldiv@divisor+3,f
 11542  1488  01A1               	clrf	___aldiv@sign
 11543  1489  0AA1               	incf	___aldiv@sign,f
 11544  148A                     l624:	
 11545  148A  1FF7               	btfss	___aldiv@dividend+3,7
 11546  148B  2C9B               	goto	l3161
 11547  148C  09F4               	comf	___aldiv@dividend,f
 11548  148D  09F5               	comf	___aldiv@dividend+1,f
 11549  148E  09F6               	comf	___aldiv@dividend+2,f
 11550  148F  09F7               	comf	___aldiv@dividend+3,f
 11551  1490  0AF4               	incf	___aldiv@dividend,f
 11552  1491  1903               	skipnz
 11553  1492  0AF5               	incf	___aldiv@dividend+1,f
 11554  1493  1903               	skipnz
 11555  1494  0AF6               	incf	___aldiv@dividend+2,f
 11556  1495  1903               	skipnz
 11557  1496  0AF7               	incf	___aldiv@dividend+3,f
 11558  1497  3001               	movlw	1
 11559  1498  00F8               	movwf	??___aldiv
 11560  1499  0878               	movf	??___aldiv,w
 11561  149A  06A1               	xorwf	___aldiv@sign,f
 11562  149B                     l3161:	
 11563  149B  3000               	movlw	0
 11564  149C  00A5               	movwf	___aldiv@quotient+3
 11565  149D  3000               	movlw	0
 11566  149E  00A4               	movwf	___aldiv@quotient+2
 11567  149F  3000               	movlw	0
 11568  14A0  00A3               	movwf	___aldiv@quotient+1
 11569  14A1  3000               	movlw	0
 11570  14A2  00A2               	movwf	___aldiv@quotient
 11571  14A3  0873               	movf	___aldiv@divisor+3,w
 11572  14A4  0472               	iorwf	___aldiv@divisor+2,w
 11573  14A5  0471               	iorwf	___aldiv@divisor+1,w
 11574  14A6  0470               	iorwf	___aldiv@divisor,w
 11575  14A7  1903               	skipnz
 11576  14A8  2CE4               	goto	l3183
 11577  14A9  01A0               	clrf	___aldiv@counter
 11578  14AA  0AA0               	incf	___aldiv@counter,f
 11579  14AB                     l3169:	
 11580  14AB  1BF3               	btfsc	___aldiv@divisor+3,7
 11581  14AC  2CB9               	goto	l3171
 11582  14AD  3001               	movlw	1
 11583  14AE                     u3575:	
 11584  14AE  35F0               	lslf	___aldiv@divisor,f
 11585  14AF  0DF1               	rlf	___aldiv@divisor+1,f
 11586  14B0  0DF2               	rlf	___aldiv@divisor+2,f
 11587  14B1  0DF3               	rlf	___aldiv@divisor+3,f
 11588  14B2  0B89               	decfsz	9,f
 11589  14B3  2CAE               	goto	u3575
 11590  14B4  3001               	movlw	1
 11591  14B5  00F8               	movwf	??___aldiv
 11592  14B6  0878               	movf	??___aldiv,w
 11593  14B7  07A0               	addwf	___aldiv@counter,f
 11594  14B8  2CAB               	goto	l3169
 11595  14B9                     l3171:	
 11596  14B9  3001               	movlw	1
 11597  14BA                     u3595:	
 11598  14BA  35A2               	lslf	___aldiv@quotient,f
 11599  14BB  0DA3               	rlf	___aldiv@quotient+1,f
 11600  14BC  0DA4               	rlf	___aldiv@quotient+2,f
 11601  14BD  0DA5               	rlf	___aldiv@quotient+3,f
 11602  14BE  0B89               	decfsz	9,f
 11603  14BF  2CBA               	goto	u3595
 11604  14C0  0873               	movf	___aldiv@divisor+3,w
 11605  14C1  0277               	subwf	___aldiv@dividend+3,w
 11606  14C2  1D03               	skipz
 11607  14C3  2CCE               	goto	u3605
 11608  14C4  0872               	movf	___aldiv@divisor+2,w
 11609  14C5  0276               	subwf	___aldiv@dividend+2,w
 11610  14C6  1D03               	skipz
 11611  14C7  2CCE               	goto	u3605
 11612  14C8  0871               	movf	___aldiv@divisor+1,w
 11613  14C9  0275               	subwf	___aldiv@dividend+1,w
 11614  14CA  1D03               	skipz
 11615  14CB  2CCE               	goto	u3605
 11616  14CC  0870               	movf	___aldiv@divisor,w
 11617  14CD  0274               	subwf	___aldiv@dividend,w
 11618  14CE                     u3605:	
 11619  14CE  1C03               	skipc
 11620  14CF  2CD9               	goto	l3179
 11621  14D0  0870               	movf	___aldiv@divisor,w
 11622  14D1  02F4               	subwf	___aldiv@dividend,f
 11623  14D2  0871               	movf	___aldiv@divisor+1,w
 11624  14D3  3BF5               	subwfb	___aldiv@dividend+1,f
 11625  14D4  0872               	movf	___aldiv@divisor+2,w
 11626  14D5  3BF6               	subwfb	___aldiv@dividend+2,f
 11627  14D6  0873               	movf	___aldiv@divisor+3,w
 11628  14D7  3BF7               	subwfb	___aldiv@dividend+3,f
 11629  14D8  1422               	bsf	___aldiv@quotient,0
 11630  14D9                     l3179:	
 11631  14D9  3001               	movlw	1
 11632  14DA                     u3615:	
 11633  14DA  36F3               	lsrf	___aldiv@divisor+3,f
 11634  14DB  0CF2               	rrf	___aldiv@divisor+2,f
 11635  14DC  0CF1               	rrf	___aldiv@divisor+1,f
 11636  14DD  0CF0               	rrf	___aldiv@divisor,f
 11637  14DE  0B89               	decfsz	9,f
 11638  14DF  2CDA               	goto	u3615
 11639  14E0  3001               	movlw	1
 11640  14E1  02A0               	subwf	___aldiv@counter,f
 11641  14E2  1D03               	btfss	3,2
 11642  14E3  2CB9               	goto	l3171
 11643  14E4                     l3183:	
 11644  14E4  0821               	movf	___aldiv@sign,w
 11645  14E5  1903               	btfsc	3,2
 11646  14E6  2CF2               	goto	l3187
 11647  14E7  09A2               	comf	___aldiv@quotient,f
 11648  14E8  09A3               	comf	___aldiv@quotient+1,f
 11649  14E9  09A4               	comf	___aldiv@quotient+2,f
 11650  14EA  09A5               	comf	___aldiv@quotient+3,f
 11651  14EB  0AA2               	incf	___aldiv@quotient,f
 11652  14EC  1903               	skipnz
 11653  14ED  0AA3               	incf	___aldiv@quotient+1,f
 11654  14EE  1903               	skipnz
 11655  14EF  0AA4               	incf	___aldiv@quotient+2,f
 11656  14F0  1903               	skipnz
 11657  14F1  0AA5               	incf	___aldiv@quotient+3,f
 11658  14F2                     l3187:	
 11659  14F2  0825               	movf	___aldiv@quotient+3,w
 11660  14F3  00F3               	movwf	?___aldiv+3
 11661  14F4  0824               	movf	___aldiv@quotient+2,w
 11662  14F5  00F2               	movwf	?___aldiv+2
 11663  14F6  0823               	movf	___aldiv@quotient+1,w
 11664  14F7  00F1               	movwf	?___aldiv+1
 11665  14F8  0822               	movf	___aldiv@quotient,w
 11666  14F9  00F0               	movwf	?___aldiv
 11667  14FA  0008               	return
 11668  14FB                     __end_of___aldiv:	
 11669                           
 11670                           	psect	text13
 11671  1E9D                     __ptext13:	
 11672 ;; *************** function _ADCRead *****************
 11673 ;; Defined at:
 11674 ;;		line 19 in file "adc.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;  channel         1    wreg     enum E14259
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;  channel         1    3[COMMON] enum E14259
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  2    0[COMMON] int 
 11681 ;; Registers used:
 11682 ;;		wreg
 11683 ;; Tracked objects:
 11684 ;;		On entry : 0/0
 11685 ;;		On exit  : 0/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11688 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;Total ram usage:        4 bytes
 11693 ;; Hardware stack levels used:    1
 11694 ;; This function calls:
 11695 ;;		Nothing
 11696 ;; This function is called by:
 11697 ;;		_readAnalog
 11698 ;;		_readButton
 11699 ;;		_main
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           
 11704                           ;psect for function _ADCRead
 11705  1E9D                     _ADCRead:	
 11706                           
 11707                           ;incstack = 0
 11708                           ; Regs used in _ADCRead: [wreg]
 11709                           ;ADCRead@channel stored from wreg
 11710  1E9D  00F3               	movwf	ADCRead@channel
 11711                           
 11712                           ;adc.c: 21: ADPCH = channel_VSS;
 11713  1E9E  303C               	movlw	60
 11714  1E9F  0021               	movlb	1	; select bank1
 11715  1EA0  009E               	movwf	30	;volatile
 11716                           
 11717                           ;adc.c: 23: ADCON0bits.ADON = 1;
 11718  1EA1  1793               	bsf	19,7	;volatile
 11719                           
 11720                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
 11721  1EA2  1313               	bcf	19,6	;volatile
 11722                           
 11723                           ;adc.c: 27: ADCON0bits.ADGO = 1;
 11724  1EA3  1413               	bsf	19,0	;volatile
 11725  1EA4                     l57:	
 11726                           ;adc.c: 30: {
 11727                           
 11728                           ;adc.c: 29: while(ADCON0bits.ADGO)
 11729                           
 11730  1EA4  1813               	btfsc	19,0	;volatile
 11731  1EA5  2EA4               	goto	l57
 11732                           
 11733                           ;adc.c: 31: }
 11734                           ;adc.c: 33: ADPCH = channel;
 11735  1EA6  0873               	movf	ADCRead@channel,w
 11736  1EA7  009E               	movwf	30	;volatile
 11737                           
 11738                           ;adc.c: 35: ADCON0bits.ADON = 1;
 11739  1EA8  1793               	bsf	19,7	;volatile
 11740                           
 11741                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
 11742  1EA9  1313               	bcf	19,6	;volatile
 11743                           
 11744                           ;adc.c: 39: ADCON0bits.ADGO = 1;
 11745  1EAA  1413               	bsf	19,0	;volatile
 11746  1EAB                     l60:	
 11747                           ;adc.c: 42: {
 11748                           
 11749                           ;adc.c: 41: while(ADCON0bits.ADGO)
 11750                           
 11751  1EAB  1813               	btfsc	19,0	;volatile
 11752  1EAC  2EAB               	goto	l60
 11753                           
 11754                           ;adc.c: 43: }
 11755                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
 11756  1EAD  080D               	movf	13,w	;volatile
 11757  1EAE  00F1               	movwf	?_ADCRead+1
 11758  1EAF  080C               	movf	12,w	;volatile
 11759  1EB0  00F0               	movwf	?_ADCRead
 11760  1EB1  0008               	return
 11761  1EB2                     __end_of_ADCRead:	
 11762                           
 11763                           	psect	text14
 11764  080A                     __ptext14:	
 11765 ;; *************** function _cc_cv_mode *****************
 11766 ;; Defined at:
 11767 ;;		line 88 in file "battery_charger.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;		None
 11770 ;; Auto vars:     Size  Location     Type
 11771 ;;		None
 11772 ;; Return value:  Size  Location     Type
 11773 ;;                  1    wreg      void 
 11774 ;; Registers used:
 11775 ;;		wreg, status,2, status,0
 11776 ;; Tracked objects:
 11777 ;;		On entry : 0/0
 11778 ;;		On exit  : 0/0
 11779 ;;		Unchanged: 0/0
 11780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;Total ram usage:        1 bytes
 11786 ;; Hardware stack levels used:    1
 11787 ;; This function calls:
 11788 ;;		Nothing
 11789 ;; This function is called by:
 11790 ;;		_main
 11791 ;; This function uses a non-reentrant model
 11792 ;;
 11793                           
 11794                           
 11795                           ;psect for function _cc_cv_mode
 11796  080A                     _cc_cv_mode:	
 11797                           
 11798                           ;battery_charger.c: 90: if(voltage[1] > Vref)
 11799                           
 11800                           ;incstack = 0
 11801                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 11802  080A  0022               	movlb	2	; select bank2
 11803  080B  0865               	movf	(_Vref+1)^(0+256),w
 11804  080C  3A80               	xorlw	128
 11805  080D  00F0               	movwf	??_cc_cv_mode
 11806  080E  083B               	movf	((_voltage+1)^(0+256)+2),w
 11807  080F  3A80               	xorlw	128
 11808  0810  0270               	subwf	??_cc_cv_mode,w
 11809  0811  1D03               	skipz
 11810  0812  2815               	goto	u4355
 11811  0813  083A               	movf	(_voltage^(0+256)+2),w
 11812  0814  0264               	subwf	_Vref^(0+256),w
 11813  0815                     u4355:	
 11814  0815  1803               	skipnc
 11815  0816  2824               	goto	l3495
 11816                           
 11817                           ;battery_charger.c: 91: {
 11818                           ;battery_charger.c: 92: if(cc_cv)
 11819  0817  0022               	movlb	2	; select bank2
 11820  0818  0852               	movf	_cc_cv^(0+256),w
 11821  0819  1903               	btfsc	3,2
 11822  081A  281E               	goto	l3491
 11823                           
 11824                           ;battery_charger.c: 93: {
 11825                           ;battery_charger.c: 94: cc_cv-=1;
 11826  081B  3001               	movlw	1
 11827  081C  02D2               	subwf	_cc_cv^(0+256),f
 11828                           
 11829                           ;battery_charger.c: 95: }
 11830  081D  0008               	return
 11831  081E                     l3491:	
 11832                           
 11833                           ;battery_charger.c: 96: else
 11834                           ;battery_charger.c: 97: {
 11835                           ;battery_charger.c: 98: if(Imode0)
 11836  081E  0021               	movlb	1	; select bank1
 11837  081F  086E               	movf	_Imode0^(0+128),w
 11838  0820  1903               	btfsc	3,2
 11839  0821  0008               	return
 11840                           
 11841                           ;battery_charger.c: 99: {
 11842                           ;battery_charger.c: 100: Imode0 = 0;
 11843  0822  01EE               	clrf	_Imode0^(0+128)
 11844                           
 11845                           ;battery_charger.c: 101: }
 11846                           ;battery_charger.c: 102: }
 11847                           ;battery_charger.c: 103: }
 11848  0823  0008               	return
 11849  0824                     l3495:	
 11850                           
 11851                           ;battery_charger.c: 104: else if(current[1] > Iref)
 11852  0824  0022               	movlb	2	; select bank2
 11853  0825  0867               	movf	(_Iref+1)^(0+256),w
 11854  0826  3A80               	xorlw	128
 11855  0827  00F0               	movwf	??_cc_cv_mode
 11856  0828  0833               	movf	((_current+1)^(0+256)+2),w
 11857  0829  3A80               	xorlw	128
 11858  082A  0270               	subwf	??_cc_cv_mode,w
 11859  082B  1D03               	skipz
 11860  082C  282F               	goto	u4385
 11861  082D  0832               	movf	(_current^(0+256)+2),w
 11862  082E  0266               	subwf	_Iref^(0+256),w
 11863  082F                     u4385:	
 11864  082F  1803               	skipnc
 11865  0830  0008               	return
 11866                           
 11867                           ;battery_charger.c: 105: {
 11868                           ;battery_charger.c: 106: if(!Imode0)
 11869  0831  0021               	movlb	1	; select bank1
 11870  0832  086E               	movf	_Imode0^(0+128),w
 11871  0833  1D03               	btfss	3,2
 11872  0834  0008               	return
 11873                           
 11874                           ;battery_charger.c: 107: {
 11875                           ;battery_charger.c: 108: if(battery_state == FLOAT)
 11876  0835  3005               	movlw	5
 11877  0836  0022               	movlb	2	; select bank2
 11878  0837  066E               	xorwf	_battery_state^(0+256),w
 11879  0838  1D03               	btfss	3,2
 11880  0839  2846               	goto	l3503
 11881                           
 11882                           ;battery_charger.c: 109: {
 11883                           ;battery_charger.c: 110: battery_state=CHARGE;
 11884  083A  3004               	movlw	4
 11885  083B  00F0               	movwf	??_cc_cv_mode
 11886  083C  0870               	movf	??_cc_cv_mode,w
 11887  083D  00EE               	movwf	_battery_state^(0+256)
 11888                           
 11889                           ;battery_charger.c: 111: { Vref = 1425; };
 11890  083E  3091               	movlw	145
 11891  083F  00E4               	movwf	_Vref^(0+256)
 11892  0840  3005               	movlw	5
 11893  0841  00E5               	movwf	(_Vref^(0+256)+1)
 11894                           
 11895                           ;battery_charger.c: 112: { Iref = 40; };
 11896  0842  3028               	movlw	40
 11897  0843  00E6               	movwf	_Iref^(0+256)
 11898  0844  3000               	movlw	0
 11899  0845  00E7               	movwf	(_Iref^(0+256)+1)
 11900  0846                     l3503:	
 11901                           
 11902                           ;battery_charger.c: 113: }
 11903                           ;battery_charger.c: 114: Imode0 = 1;
 11904  0846  0021               	movlb	1	; select bank1
 11905  0847  01EE               	clrf	_Imode0^(0+128)
 11906  0848  0AEE               	incf	_Imode0^(0+128),f
 11907                           
 11908                           ;battery_charger.c: 115: cc_cv = 10;
 11909  0849  300A               	movlw	10
 11910  084A  00F0               	movwf	??_cc_cv_mode
 11911  084B  0870               	movf	??_cc_cv_mode,w
 11912  084C  0022               	movlb	2	; select bank2
 11913  084D  00D2               	movwf	_cc_cv^(0+256)
 11914  084E  0008               	return
 11915  084F                     __end_of_cc_cv_mode:	
 11916                           
 11917                           	psect	text15
 11918  12EA                     __ptext15:	
 11919 ;; *************** function _calculateCurrent1 *****************
 11920 ;; Defined at:
 11921 ;;		line 289 in file "main.c"
 11922 ;; Parameters:    Size  Location     Type
 11923 ;;		None
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;		None
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  1    wreg      void 
 11928 ;; Registers used:
 11929 ;;		wreg, status,2, status,0, pclath, cstack
 11930 ;; Tracked objects:
 11931 ;;		On entry : 0/0
 11932 ;;		On exit  : 0/0
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;Total ram usage:        3 bytes
 11940 ;; Hardware stack levels used:    1
 11941 ;; Hardware stack levels required when called:    1
 11942 ;; This function calls:
 11943 ;;		___fldiv
 11944 ;;		___fltol
 11945 ;;		___xxtofl
 11946 ;; This function is called by:
 11947 ;;		_main
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951                           
 11952                           ;psect for function _calculateCurrent1
 11953  12EA                     _calculateCurrent1:	
 11954                           
 11955                           ;main.c: 291: if(analogs[5]-578<=0)
 11956                           
 11957                           ;incstack = 0
 11958                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 11959  12EA  0022               	movlb	2	; select bank2
 11960  12EB  082A               	movf	(_analogs^(0+256)+10),w
 11961  12EC  3EBE               	addlw	190
 11962  12ED  0020               	movlb	0	; select bank0
 11963  12EE  00C5               	movwf	??_calculateCurrent1
 11964  12EF  30FD               	movlw	253
 11965  12F0  0022               	movlb	2	; select bank2
 11966  12F1  3D2B               	addwfc	((_analogs+1)^(0+256)+10),w
 11967  12F2  0020               	movlb	0	; select bank0
 11968  12F3  00C6               	movwf	??_calculateCurrent1+1
 11969  12F4  0846               	movf	??_calculateCurrent1+1,w
 11970  12F5  3A80               	xorlw	128
 11971  12F6  00C7               	movwf	??_calculateCurrent1+2
 11972  12F7  3080               	movlw	128
 11973  12F8  0247               	subwf	??_calculateCurrent1+2,w
 11974  12F9  1D03               	skipz
 11975  12FA  2AFD               	goto	u4635
 11976  12FB  3001               	movlw	1
 11977  12FC  0245               	subwf	??_calculateCurrent1,w
 11978  12FD                     u4635:	
 11979  12FD  1803               	skipnc
 11980  12FE  2B03               	goto	l3643
 11981                           
 11982                           ;main.c: 292: {
 11983                           ;main.c: 293: current[1]=0;
 11984  12FF  0022               	movlb	2	; select bank2
 11985  1300  01B2               	clrf	(_current^(0+256)+2)
 11986  1301  01B3               	clrf	((_current+1)^(0+256)+2)
 11987                           
 11988                           ;main.c: 294: }
 11989  1302  0008               	return
 11990  1303                     l3643:	
 11991                           
 11992                           ;main.c: 295: else
 11993                           ;main.c: 296: {
 11994                           ;main.c: 297: current[1]=(int16_t)((analogs[5]-578)/3.2323);
 11995  1303  0022               	movlb	2	; select bank2
 11996  1304  082A               	movf	(_analogs^(0+256)+10),w
 11997  1305  3EBE               	addlw	190
 11998  1306  00F0               	movwf	___xxtofl@val
 11999  1307  30FD               	movlw	253
 12000  1308  3D2B               	addwfc	((_analogs+1)^(0+256)+10),w
 12001  1309  00F1               	movwf	___xxtofl@val+1
 12002  130A  01F2               	clrf	___xxtofl@val+2
 12003  130B  1BF1               	btfsc	___xxtofl@val+1,7
 12004  130C  03F2               	decf	___xxtofl@val+2,f
 12005  130D  0872               	movf	___xxtofl@val+2,w
 12006  130E  00F3               	movwf	___xxtofl@val+3
 12007  130F  3001               	movlw	1
 12008  1310  3195  2582  3192   	fcall	___xxtofl
 12009  1313  0873               	movf	?___xxtofl+3,w
 12010  1314  0020               	movlb	0	; select bank0
 12011  1315  00A7               	movwf	___fldiv@b+3
 12012  1316  0872               	movf	?___xxtofl+2,w
 12013  1317  00A6               	movwf	___fldiv@b+2
 12014  1318  0871               	movf	?___xxtofl+1,w
 12015  1319  00A5               	movwf	___fldiv@b+1
 12016  131A  0870               	movf	?___xxtofl,w
 12017  131B  00A4               	movwf	___fldiv@b
 12018  131C  3040               	movlw	64
 12019  131D  00A3               	movwf	___fldiv@a+3
 12020  131E  304E               	movlw	78
 12021  131F  00A2               	movwf	___fldiv@a+2
 12022  1320  30DE               	movlw	222
 12023  1321  00A1               	movwf	___fldiv@a+1
 12024  1322  3001               	movlw	1
 12025  1323  00A0               	movwf	___fldiv@a
 12026  1324  318A  228C  3192   	fcall	___fldiv
 12027  1327  0020               	movlb	0	; select bank0
 12028  1328  0823               	movf	?___fldiv+3,w
 12029  1329  00BD               	movwf	___fltol@f1+3
 12030  132A  0822               	movf	?___fldiv+2,w
 12031  132B  00BC               	movwf	___fltol@f1+2
 12032  132C  0821               	movf	?___fldiv+1,w
 12033  132D  00BB               	movwf	___fltol@f1+1
 12034  132E  0820               	movf	?___fldiv,w
 12035  132F  00BA               	movwf	___fltol@f1
 12036  1330  3193  23FA         	fcall	___fltol
 12037  1332  0020               	movlb	0	; select bank0
 12038  1333  083B               	movf	?___fltol+1,w
 12039  1334  0022               	movlb	2	; select bank2
 12040  1335  00B3               	movwf	((_current+1)^(0+256)+2)
 12041  1336  0020               	movlb	0	; select bank0
 12042  1337  083A               	movf	?___fltol,w
 12043  1338  0022               	movlb	2	; select bank2
 12044  1339  00B2               	movwf	(_current^(0+256)+2)
 12045  133A  0008               	return
 12046  133B                     __end_of_calculateCurrent1:	
 12047                           
 12048                           	psect	text16
 12049  1299                     __ptext16:	
 12050 ;; *************** function _calculateCurrent0 *****************
 12051 ;; Defined at:
 12052 ;;		line 277 in file "main.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;		None
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;		None
 12057 ;; Return value:  Size  Location     Type
 12058 ;;                  1    wreg      void 
 12059 ;; Registers used:
 12060 ;;		wreg, status,2, status,0, pclath, cstack
 12061 ;; Tracked objects:
 12062 ;;		On entry : 0/0
 12063 ;;		On exit  : 0/0
 12064 ;;		Unchanged: 0/0
 12065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12068 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12069 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12070 ;;Total ram usage:        3 bytes
 12071 ;; Hardware stack levels used:    1
 12072 ;; Hardware stack levels required when called:    1
 12073 ;; This function calls:
 12074 ;;		___fldiv
 12075 ;;		___fltol
 12076 ;;		___xxtofl
 12077 ;; This function is called by:
 12078 ;;		_main
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           
 12083                           ;psect for function _calculateCurrent0
 12084  1299                     _calculateCurrent0:	
 12085                           
 12086                           ;main.c: 279: if(analogs[4]-589<=0)
 12087                           
 12088                           ;incstack = 0
 12089                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 12090  1299  0022               	movlb	2	; select bank2
 12091  129A  0828               	movf	(_analogs^(0+256)+8),w
 12092  129B  3EB3               	addlw	179
 12093  129C  0020               	movlb	0	; select bank0
 12094  129D  00C5               	movwf	??_calculateCurrent0
 12095  129E  30FD               	movlw	253
 12096  129F  0022               	movlb	2	; select bank2
 12097  12A0  3D29               	addwfc	((_analogs+1)^(0+256)+8),w
 12098  12A1  0020               	movlb	0	; select bank0
 12099  12A2  00C6               	movwf	??_calculateCurrent0+1
 12100  12A3  0846               	movf	??_calculateCurrent0+1,w
 12101  12A4  3A80               	xorlw	128
 12102  12A5  00C7               	movwf	??_calculateCurrent0+2
 12103  12A6  3080               	movlw	128
 12104  12A7  0247               	subwf	??_calculateCurrent0+2,w
 12105  12A8  1D03               	skipz
 12106  12A9  2AAC               	goto	u4625
 12107  12AA  3001               	movlw	1
 12108  12AB  0245               	subwf	??_calculateCurrent0,w
 12109  12AC                     u4625:	
 12110  12AC  1803               	skipnc
 12111  12AD  2AB2               	goto	l3637
 12112                           
 12113                           ;main.c: 280: {
 12114                           ;main.c: 281: current[0]=0;
 12115  12AE  0022               	movlb	2	; select bank2
 12116  12AF  01B0               	clrf	_current^(0+256)
 12117  12B0  01B1               	clrf	(_current+1)^(0+256)
 12118                           
 12119                           ;main.c: 282: }
 12120  12B1  0008               	return
 12121  12B2                     l3637:	
 12122                           
 12123                           ;main.c: 283: else
 12124                           ;main.c: 284: {
 12125                           ;main.c: 285: current[0]=(int16_t)((analogs[4]-589)/1.3165);
 12126  12B2  0022               	movlb	2	; select bank2
 12127  12B3  0828               	movf	(_analogs^(0+256)+8),w
 12128  12B4  3EB3               	addlw	179
 12129  12B5  00F0               	movwf	___xxtofl@val
 12130  12B6  30FD               	movlw	253
 12131  12B7  3D29               	addwfc	((_analogs+1)^(0+256)+8),w
 12132  12B8  00F1               	movwf	___xxtofl@val+1
 12133  12B9  01F2               	clrf	___xxtofl@val+2
 12134  12BA  1BF1               	btfsc	___xxtofl@val+1,7
 12135  12BB  03F2               	decf	___xxtofl@val+2,f
 12136  12BC  0872               	movf	___xxtofl@val+2,w
 12137  12BD  00F3               	movwf	___xxtofl@val+3
 12138  12BE  3001               	movlw	1
 12139  12BF  3195  2582  3192   	fcall	___xxtofl
 12140  12C2  0873               	movf	?___xxtofl+3,w
 12141  12C3  0020               	movlb	0	; select bank0
 12142  12C4  00A7               	movwf	___fldiv@b+3
 12143  12C5  0872               	movf	?___xxtofl+2,w
 12144  12C6  00A6               	movwf	___fldiv@b+2
 12145  12C7  0871               	movf	?___xxtofl+1,w
 12146  12C8  00A5               	movwf	___fldiv@b+1
 12147  12C9  0870               	movf	?___xxtofl,w
 12148  12CA  00A4               	movwf	___fldiv@b
 12149  12CB  303F               	movlw	63
 12150  12CC  00A3               	movwf	___fldiv@a+3
 12151  12CD  30A8               	movlw	168
 12152  12CE  00A2               	movwf	___fldiv@a+2
 12153  12CF  3083               	movlw	131
 12154  12D0  00A1               	movwf	___fldiv@a+1
 12155  12D1  3012               	movlw	18
 12156  12D2  00A0               	movwf	___fldiv@a
 12157  12D3  318A  228C  3192   	fcall	___fldiv
 12158  12D6  0020               	movlb	0	; select bank0
 12159  12D7  0823               	movf	?___fldiv+3,w
 12160  12D8  00BD               	movwf	___fltol@f1+3
 12161  12D9  0822               	movf	?___fldiv+2,w
 12162  12DA  00BC               	movwf	___fltol@f1+2
 12163  12DB  0821               	movf	?___fldiv+1,w
 12164  12DC  00BB               	movwf	___fltol@f1+1
 12165  12DD  0820               	movf	?___fldiv,w
 12166  12DE  00BA               	movwf	___fltol@f1
 12167  12DF  3193  23FA         	fcall	___fltol
 12168  12E1  0020               	movlb	0	; select bank0
 12169  12E2  083B               	movf	?___fltol+1,w
 12170  12E3  0022               	movlb	2	; select bank2
 12171  12E4  00B1               	movwf	(_current+1)^(0+256)
 12172  12E5  0020               	movlb	0	; select bank0
 12173  12E6  083A               	movf	?___fltol,w
 12174  12E7  0022               	movlb	2	; select bank2
 12175  12E8  00B0               	movwf	_current^(0+256)
 12176  12E9  0008               	return
 12177  12EA                     __end_of_calculateCurrent0:	
 12178                           
 12179                           	psect	text17
 12180  1582                     __ptext17:	
 12181 ;; *************** function ___xxtofl *****************
 12182 ;; Defined at:
 12183 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 12184 ;; Parameters:    Size  Location     Type
 12185 ;;  sign            1    wreg     unsigned char 
 12186 ;;  val             4    0[COMMON] long 
 12187 ;; Auto vars:     Size  Location     Type
 12188 ;;  sign            1    8[COMMON] unsigned char 
 12189 ;;  arg             4   10[COMMON] unsigned long 
 12190 ;;  exp             1    9[COMMON] unsigned char 
 12191 ;; Return value:  Size  Location     Type
 12192 ;;                  4    0[COMMON] unsigned char 
 12193 ;; Registers used:
 12194 ;;		wreg, status,2, status,0
 12195 ;; Tracked objects:
 12196 ;;		On entry : 0/0
 12197 ;;		On exit  : 0/0
 12198 ;;		Unchanged: 0/0
 12199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12201 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12202 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12203 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12204 ;;Total ram usage:       14 bytes
 12205 ;; Hardware stack levels used:    1
 12206 ;; This function calls:
 12207 ;;		Nothing
 12208 ;; This function is called by:
 12209 ;;		_tempCalc
 12210 ;;		_main
 12211 ;;		_calculateCurrent0
 12212 ;;		_calculateCurrent1
 12213 ;;		_log
 12214 ;;		_calculateCurrent2
 12215 ;;		_calculateCurrent3
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           
 12220                           ;psect for function ___xxtofl
 12221  1582                     ___xxtofl:	
 12222                           
 12223                           ;incstack = 0
 12224                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12225                           ;___xxtofl@sign stored from wreg
 12226  1582  00F8               	movwf	___xxtofl@sign
 12227  1583  0878               	movf	___xxtofl@sign,w
 12228  1584  1D03               	btfss	3,2
 12229  1585  1FF3               	btfss	___xxtofl@val+3,7
 12230  1586  2D97               	goto	l2921
 12231  1587  0970               	comf	___xxtofl@val,w
 12232  1588  00FA               	movwf	___xxtofl@arg
 12233  1589  0971               	comf	___xxtofl@val+1,w
 12234  158A  00FB               	movwf	___xxtofl@arg+1
 12235  158B  0972               	comf	___xxtofl@val+2,w
 12236  158C  00FC               	movwf	___xxtofl@arg+2
 12237  158D  0973               	comf	___xxtofl@val+3,w
 12238  158E  00FD               	movwf	___xxtofl@arg+3
 12239  158F  0AFA               	incf	___xxtofl@arg,f
 12240  1590  1903               	skipnz
 12241  1591  0AFB               	incf	___xxtofl@arg+1,f
 12242  1592  1903               	skipnz
 12243  1593  0AFC               	incf	___xxtofl@arg+2,f
 12244  1594  1903               	skipnz
 12245  1595  0AFD               	incf	___xxtofl@arg+3,f
 12246  1596  2D9F               	goto	l942
 12247  1597                     l2921:	
 12248  1597  0873               	movf	___xxtofl@val+3,w
 12249  1598  00FD               	movwf	___xxtofl@arg+3
 12250  1599  0872               	movf	___xxtofl@val+2,w
 12251  159A  00FC               	movwf	___xxtofl@arg+2
 12252  159B  0871               	movf	___xxtofl@val+1,w
 12253  159C  00FB               	movwf	___xxtofl@arg+1
 12254  159D  0870               	movf	___xxtofl@val,w
 12255  159E  00FA               	movwf	___xxtofl@arg
 12256  159F                     l942:	
 12257  159F  0873               	movf	___xxtofl@val+3,w
 12258  15A0  0472               	iorwf	___xxtofl@val+2,w
 12259  15A1  0471               	iorwf	___xxtofl@val+1,w
 12260  15A2  0470               	iorwf	___xxtofl@val,w
 12261  15A3  1D03               	skipz
 12262  15A4  2DAE               	goto	l2927
 12263  15A5  3000               	movlw	0
 12264  15A6  00F3               	movwf	?___xxtofl+3
 12265  15A7  3000               	movlw	0
 12266  15A8  00F2               	movwf	?___xxtofl+2
 12267  15A9  3000               	movlw	0
 12268  15AA  00F1               	movwf	?___xxtofl+1
 12269  15AB  3000               	movlw	0
 12270  15AC  00F0               	movwf	?___xxtofl
 12271  15AD  0008               	return
 12272  15AE                     l2927:	
 12273  15AE  3096               	movlw	150
 12274  15AF  00F4               	movwf	??___xxtofl
 12275  15B0  0874               	movf	??___xxtofl,w
 12276  15B1  00F9               	movwf	___xxtofl@exp
 12277  15B2                     l2931:	
 12278  15B2  30FE               	movlw	254
 12279  15B3  057D               	andwf	___xxtofl@arg+3,w
 12280  15B4  1903               	btfsc	3,2
 12281  15B5  2DD5               	goto	l948
 12282  15B6  3001               	movlw	1
 12283  15B7  00F4               	movwf	??___xxtofl
 12284  15B8  0874               	movf	??___xxtofl,w
 12285  15B9  07F9               	addwf	___xxtofl@exp,f
 12286  15BA  3001               	movlw	1
 12287  15BB                     u3355:	
 12288  15BB  36FD               	lsrf	___xxtofl@arg+3,f
 12289  15BC  0CFC               	rrf	___xxtofl@arg+2,f
 12290  15BD  0CFB               	rrf	___xxtofl@arg+1,f
 12291  15BE  0CFA               	rrf	___xxtofl@arg,f
 12292  15BF  0B89               	decfsz	9,f
 12293  15C0  2DBB               	goto	u3355
 12294  15C1  2DB2               	goto	l2931
 12295  15C2                     l2933:	
 12296  15C2  3001               	movlw	1
 12297  15C3  00F4               	movwf	??___xxtofl
 12298  15C4  0874               	movf	??___xxtofl,w
 12299  15C5  07F9               	addwf	___xxtofl@exp,f
 12300  15C6  3001               	movlw	1
 12301  15C7  07FA               	addwf	___xxtofl@arg,f
 12302  15C8  3000               	movlw	0
 12303  15C9  3DFB               	addwfc	___xxtofl@arg+1,f
 12304  15CA  3000               	movlw	0
 12305  15CB  3DFC               	addwfc	___xxtofl@arg+2,f
 12306  15CC  3000               	movlw	0
 12307  15CD  3DFD               	addwfc	___xxtofl@arg+3,f
 12308  15CE  3001               	movlw	1
 12309  15CF                     u3375:	
 12310  15CF  36FD               	lsrf	___xxtofl@arg+3,f
 12311  15D0  0CFC               	rrf	___xxtofl@arg+2,f
 12312  15D1  0CFB               	rrf	___xxtofl@arg+1,f
 12313  15D2  0CFA               	rrf	___xxtofl@arg,f
 12314  15D3  0B89               	decfsz	9,f
 12315  15D4  2DCF               	goto	u3375
 12316  15D5                     l948:	
 12317  15D5  30FF               	movlw	255
 12318  15D6  057D               	andwf	___xxtofl@arg+3,w
 12319  15D7  1903               	btfsc	3,2
 12320  15D8  2DE3               	goto	l2941
 12321  15D9  2DC2               	goto	l2933
 12322  15DA                     l2939:	
 12323  15DA  3001               	movlw	1
 12324  15DB  02F9               	subwf	___xxtofl@exp,f
 12325  15DC  3001               	movlw	1
 12326  15DD                     u3395:	
 12327  15DD  35FA               	lslf	___xxtofl@arg,f
 12328  15DE  0DFB               	rlf	___xxtofl@arg+1,f
 12329  15DF  0DFC               	rlf	___xxtofl@arg+2,f
 12330  15E0  0DFD               	rlf	___xxtofl@arg+3,f
 12331  15E1  0B89               	decfsz	9,f
 12332  15E2  2DDD               	goto	u3395
 12333  15E3                     l2941:	
 12334  15E3  1BFC               	btfsc	___xxtofl@arg+2,7
 12335  15E4  2DE9               	goto	l955
 12336  15E5  3002               	movlw	2
 12337  15E6  0279               	subwf	___xxtofl@exp,w
 12338  15E7  1803               	skipnc
 12339  15E8  2DDA               	goto	l2939
 12340  15E9                     l955:	
 12341  15E9  1879               	btfsc	___xxtofl@exp,0
 12342  15EA  2DF3               	goto	l956
 12343  15EB  30FF               	movlw	255
 12344  15EC  05FA               	andwf	___xxtofl@arg,f
 12345  15ED  30FF               	movlw	255
 12346  15EE  05FB               	andwf	___xxtofl@arg+1,f
 12347  15EF  307F               	movlw	127
 12348  15F0  05FC               	andwf	___xxtofl@arg+2,f
 12349  15F1  30FF               	movlw	255
 12350  15F2  05FD               	andwf	___xxtofl@arg+3,f
 12351  15F3                     l956:	
 12352  15F3  1003               	clrc
 12353  15F4  0CF9               	rrf	___xxtofl@exp,f
 12354  15F5  0879               	movf	___xxtofl@exp,w
 12355  15F6  00F4               	movwf	??___xxtofl
 12356  15F7  01F5               	clrf	??___xxtofl+1
 12357  15F8  01F6               	clrf	??___xxtofl+2
 12358  15F9  01F7               	clrf	??___xxtofl+3
 12359  15FA  3018               	movlw	24
 12360  15FB                     u3435:	
 12361  15FB  35F4               	lslf	??___xxtofl,f
 12362  15FC  0DF5               	rlf	??___xxtofl+1,f
 12363  15FD  0DF6               	rlf	??___xxtofl+2,f
 12364  15FE  0DF7               	rlf	??___xxtofl+3,f
 12365  15FF  0B89               	decfsz	9,f
 12366  1600  2DFB               	goto	u3435
 12367  1601  0874               	movf	??___xxtofl,w
 12368  1602  04FA               	iorwf	___xxtofl@arg,f
 12369  1603  0875               	movf	??___xxtofl+1,w
 12370  1604  04FB               	iorwf	___xxtofl@arg+1,f
 12371  1605  0876               	movf	??___xxtofl+2,w
 12372  1606  04FC               	iorwf	___xxtofl@arg+2,f
 12373  1607  0877               	movf	??___xxtofl+3,w
 12374  1608  04FD               	iorwf	___xxtofl@arg+3,f
 12375  1609  0878               	movf	___xxtofl@sign,w
 12376  160A  1D03               	btfss	3,2
 12377  160B  1FF3               	btfss	___xxtofl@val+3,7
 12378  160C  2E0E               	goto	l2955
 12379  160D  17FD               	bsf	___xxtofl@arg+3,7
 12380  160E                     l2955:	
 12381  160E  087D               	movf	___xxtofl@arg+3,w
 12382  160F  00F3               	movwf	?___xxtofl+3
 12383  1610  087C               	movf	___xxtofl@arg+2,w
 12384  1611  00F2               	movwf	?___xxtofl+2
 12385  1612  087B               	movf	___xxtofl@arg+1,w
 12386  1613  00F1               	movwf	?___xxtofl+1
 12387  1614  087A               	movf	___xxtofl@arg,w
 12388  1615  00F0               	movwf	?___xxtofl
 12389  1616  0008               	return
 12390  1617                     __end_of___xxtofl:	
 12391                           
 12392                           	psect	text18
 12393  13FA                     __ptext18:	
 12394 ;; *************** function ___fltol *****************
 12395 ;; Defined at:
 12396 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;  f1              4   26[BANK0 ] unsigned char 
 12399 ;; Auto vars:     Size  Location     Type
 12400 ;;  exp1            1   36[BANK0 ] unsigned char 
 12401 ;;  sign1           1   35[BANK0 ] unsigned char 
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  4   26[BANK0 ] long 
 12404 ;; Registers used:
 12405 ;;		wreg, status,2, status,0
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12411 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;Total ram usage:       11 bytes
 12416 ;; Hardware stack levels used:    1
 12417 ;; This function calls:
 12418 ;;		Nothing
 12419 ;; This function is called by:
 12420 ;;		_tempCalc
 12421 ;;		_main
 12422 ;;		_calculateCurrent0
 12423 ;;		_calculateCurrent1
 12424 ;;		_calculateCurrent2
 12425 ;;		_calculateCurrent3
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           
 12430                           ;psect for function ___fltol
 12431  13FA                     ___fltol:	
 12432                           
 12433                           ;incstack = 0
 12434                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12435  13FA  0020               	movlb	0	; select bank0
 12436  13FB  083A               	movf	___fltol@f1,w
 12437  13FC  00BE               	movwf	??___fltol
 12438  13FD  083B               	movf	___fltol@f1+1,w
 12439  13FE  00BF               	movwf	??___fltol+1
 12440  13FF  083C               	movf	___fltol@f1+2,w
 12441  1400  00C0               	movwf	??___fltol+2
 12442  1401  083D               	movf	___fltol@f1+3,w
 12443  1402  00C1               	movwf	??___fltol+3
 12444  1403  1003               	clrc
 12445  1404  0D40               	rlf	??___fltol+2,w
 12446  1405  0D41               	rlf	??___fltol+3,w
 12447  1406  00C2               	movwf	??___fltol+4
 12448  1407  0842               	movf	??___fltol+4,w
 12449  1408  00C4               	movwf	___fltol@exp1
 12450  1409  0844               	movf	___fltol@exp1,w
 12451  140A  1D03               	btfss	3,2
 12452  140B  2C15               	goto	l3241
 12453  140C  3000               	movlw	0
 12454  140D  00BD               	movwf	?___fltol+3
 12455  140E  3000               	movlw	0
 12456  140F  00BC               	movwf	?___fltol+2
 12457  1410  3000               	movlw	0
 12458  1411  00BB               	movwf	?___fltol+1
 12459  1412  3000               	movlw	0
 12460  1413  00BA               	movwf	?___fltol
 12461  1414  0008               	return
 12462  1415                     l3241:	
 12463  1415  083A               	movf	___fltol@f1,w
 12464  1416  00BE               	movwf	??___fltol
 12465  1417  083B               	movf	___fltol@f1+1,w
 12466  1418  00BF               	movwf	??___fltol+1
 12467  1419  083C               	movf	___fltol@f1+2,w
 12468  141A  00C0               	movwf	??___fltol+2
 12469  141B  083D               	movf	___fltol@f1+3,w
 12470  141C  00C1               	movwf	??___fltol+3
 12471  141D  301F               	movlw	31
 12472  141E                     u3755:	
 12473  141E  36C1               	lsrf	??___fltol+3,f
 12474  141F  0CC0               	rrf	??___fltol+2,f
 12475  1420  0CBF               	rrf	??___fltol+1,f
 12476  1421  0CBE               	rrf	??___fltol,f
 12477  1422  0B89               	decfsz	9,f
 12478  1423  2C1E               	goto	u3755
 12479  1424  083E               	movf	??___fltol,w
 12480  1425  00C2               	movwf	??___fltol+4
 12481  1426  0842               	movf	??___fltol+4,w
 12482  1427  00C3               	movwf	___fltol@sign1
 12483  1428  17BC               	bsf	___fltol@f1+2,7
 12484  1429  30FF               	movlw	255
 12485  142A  05BA               	andwf	___fltol@f1,f
 12486  142B  30FF               	movlw	255
 12487  142C  05BB               	andwf	___fltol@f1+1,f
 12488  142D  30FF               	movlw	255
 12489  142E  05BC               	andwf	___fltol@f1+2,f
 12490  142F  3000               	movlw	0
 12491  1430  05BD               	andwf	___fltol@f1+3,f
 12492  1431  3096               	movlw	150
 12493  1432  02C4               	subwf	___fltol@exp1,f
 12494  1433  1FC4               	btfss	___fltol@exp1,7
 12495  1434  2C51               	goto	l3259
 12496  1435  0844               	movf	___fltol@exp1,w
 12497  1436  3A80               	xorlw	128
 12498  1437  3E97               	addlw	151
 12499  1438  1803               	skipnc
 12500  1439  2C43               	goto	l3257
 12501  143A  3000               	movlw	0
 12502  143B  00BD               	movwf	?___fltol+3
 12503  143C  3000               	movlw	0
 12504  143D  00BC               	movwf	?___fltol+2
 12505  143E  3000               	movlw	0
 12506  143F  00BB               	movwf	?___fltol+1
 12507  1440  3000               	movlw	0
 12508  1441  00BA               	movwf	?___fltol
 12509  1442  0008               	return
 12510  1443                     l3257:	
 12511  1443  3001               	movlw	1
 12512  1444                     u3785:	
 12513  1444  36BD               	lsrf	___fltol@f1+3,f
 12514  1445  0CBC               	rrf	___fltol@f1+2,f
 12515  1446  0CBB               	rrf	___fltol@f1+1,f
 12516  1447  0CBA               	rrf	___fltol@f1,f
 12517  1448  0B89               	decfsz	9,f
 12518  1449  2C44               	goto	u3785
 12519  144A  3001               	movlw	1
 12520  144B  00BE               	movwf	??___fltol
 12521  144C  083E               	movf	??___fltol,w
 12522  144D  07C4               	addwf	___fltol@exp1,f
 12523  144E  1903               	btfsc	3,2
 12524  144F  2C6A               	goto	l3267
 12525  1450  2C43               	goto	l3257
 12526  1451                     l3259:	
 12527  1451  3020               	movlw	32
 12528  1452  0244               	subwf	___fltol@exp1,w
 12529  1453  1C03               	skipc
 12530  1454  2C67               	goto	l721
 12531  1455  3000               	movlw	0
 12532  1456  00BD               	movwf	?___fltol+3
 12533  1457  3000               	movlw	0
 12534  1458  00BC               	movwf	?___fltol+2
 12535  1459  3000               	movlw	0
 12536  145A  00BB               	movwf	?___fltol+1
 12537  145B  3000               	movlw	0
 12538  145C  00BA               	movwf	?___fltol
 12539  145D  0008               	return
 12540  145E                     l3265:	
 12541  145E  3001               	movlw	1
 12542  145F                     u3815:	
 12543  145F  35BA               	lslf	___fltol@f1,f
 12544  1460  0DBB               	rlf	___fltol@f1+1,f
 12545  1461  0DBC               	rlf	___fltol@f1+2,f
 12546  1462  0DBD               	rlf	___fltol@f1+3,f
 12547  1463  0B89               	decfsz	9,f
 12548  1464  2C5F               	goto	u3815
 12549  1465  3001               	movlw	1
 12550  1466  02C4               	subwf	___fltol@exp1,f
 12551  1467                     l721:	
 12552  1467  0844               	movf	___fltol@exp1,w
 12553  1468  1D03               	btfss	3,2
 12554  1469  2C5E               	goto	l3265
 12555  146A                     l3267:	
 12556  146A  0843               	movf	___fltol@sign1,w
 12557  146B  1903               	btfsc	3,2
 12558  146C  0008               	return
 12559  146D  09BA               	comf	___fltol@f1,f
 12560  146E  09BB               	comf	___fltol@f1+1,f
 12561  146F  09BC               	comf	___fltol@f1+2,f
 12562  1470  09BD               	comf	___fltol@f1+3,f
 12563  1471  0ABA               	incf	___fltol@f1,f
 12564  1472  1903               	skipnz
 12565  1473  0ABB               	incf	___fltol@f1+1,f
 12566  1474  1903               	skipnz
 12567  1475  0ABC               	incf	___fltol@f1+2,f
 12568  1476  1903               	skipnz
 12569  1477  0ABD               	incf	___fltol@f1+3,f
 12570  1478  0008               	return
 12571  1479                     __end_of___fltol:	
 12572                           
 12573                           	psect	text19
 12574  0A8C                     __ptext19:	
 12575 ;; *************** function ___fldiv *****************
 12576 ;; Defined at:
 12577 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 12578 ;; Parameters:    Size  Location     Type
 12579 ;;  a               4    0[BANK0 ] long 
 12580 ;;  b               4    4[BANK0 ] long 
 12581 ;; Auto vars:     Size  Location     Type
 12582 ;;  grs             4   20[BANK0 ] unsigned long 
 12583 ;;  rem             4   14[BANK0 ] unsigned long 
 12584 ;;  new_exp         2   18[BANK0 ] int 
 12585 ;;  aexp            1   25[BANK0 ] unsigned char 
 12586 ;;  bexp            1   24[BANK0 ] unsigned char 
 12587 ;;  sign            1   13[BANK0 ] unsigned char 
 12588 ;; Return value:  Size  Location     Type
 12589 ;;                  4    0[BANK0 ] unsigned char 
 12590 ;; Registers used:
 12591 ;;		wreg, status,2, status,0
 12592 ;; Tracked objects:
 12593 ;;		On entry : 0/0
 12594 ;;		On exit  : 0/0
 12595 ;;		Unchanged: 0/0
 12596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12597 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12598 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12599 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12601 ;;Total ram usage:       26 bytes
 12602 ;; Hardware stack levels used:    1
 12603 ;; This function calls:
 12604 ;;		Nothing
 12605 ;; This function is called by:
 12606 ;;		_tempCalc
 12607 ;;		_main
 12608 ;;		_calculateCurrent0
 12609 ;;		_calculateCurrent1
 12610 ;;		_calculateCurrent2
 12611 ;;		_calculateCurrent3
 12612 ;; This function uses a non-reentrant model
 12613 ;;
 12614                           
 12615                           
 12616                           ;psect for function ___fldiv
 12617  0A8C                     ___fldiv:	
 12618                           
 12619                           ;incstack = 0
 12620                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 12621  0A8C  0020               	movlb	0	; select bank0
 12622  0A8D  0827               	movf	___fldiv@b+3,w
 12623  0A8E  3980               	andlw	128
 12624  0A8F  00A8               	movwf	??___fldiv
 12625  0A90  0828               	movf	??___fldiv,w
 12626  0A91  00AD               	movwf	___fldiv@sign
 12627  0A92  3527               	lslf	___fldiv@b+3,w
 12628  0A93  00A8               	movwf	??___fldiv
 12629  0A94  0828               	movf	??___fldiv,w
 12630  0A95  00B8               	movwf	___fldiv@bexp
 12631  0A96  1BA6               	btfsc	___fldiv@b+2,7
 12632  0A97  1438               	bsf	___fldiv@bexp,0
 12633  0A98  0838               	movf	___fldiv@bexp,w
 12634  0A99  1903               	btfsc	3,2
 12635  0A9A  2AA9               	goto	l3317
 12636  0A9B  0A38               	incf	___fldiv@bexp,w
 12637  0A9C  1D03               	btfss	3,2
 12638  0A9D  2AA6               	goto	l3313
 12639  0A9E  3000               	movlw	0
 12640  0A9F  00A7               	movwf	___fldiv@b+3
 12641  0AA0  3000               	movlw	0
 12642  0AA1  00A6               	movwf	___fldiv@b+2
 12643  0AA2  3000               	movlw	0
 12644  0AA3  00A5               	movwf	___fldiv@b+1
 12645  0AA4  3000               	movlw	0
 12646  0AA5  00A4               	movwf	___fldiv@b
 12647  0AA6                     l3313:	
 12648  0AA6  17A6               	bsf	___fldiv@b+2,7
 12649  0AA7  01A7               	clrf	___fldiv@b+3
 12650  0AA8  2AB1               	goto	l3319
 12651  0AA9                     l3317:	
 12652  0AA9  3000               	movlw	0
 12653  0AAA  00A7               	movwf	___fldiv@b+3
 12654  0AAB  3000               	movlw	0
 12655  0AAC  00A6               	movwf	___fldiv@b+2
 12656  0AAD  3000               	movlw	0
 12657  0AAE  00A5               	movwf	___fldiv@b+1
 12658  0AAF  3000               	movlw	0
 12659  0AB0  00A4               	movwf	___fldiv@b
 12660  0AB1                     l3319:	
 12661  0AB1  0823               	movf	___fldiv@a+3,w
 12662  0AB2  3980               	andlw	128
 12663  0AB3  00A8               	movwf	??___fldiv
 12664  0AB4  0828               	movf	??___fldiv,w
 12665  0AB5  06AD               	xorwf	___fldiv@sign,f
 12666  0AB6  3523               	lslf	___fldiv@a+3,w
 12667  0AB7  00A8               	movwf	??___fldiv
 12668  0AB8  0828               	movf	??___fldiv,w
 12669  0AB9  00B9               	movwf	___fldiv@aexp
 12670  0ABA  1BA2               	btfsc	___fldiv@a+2,7
 12671  0ABB  1439               	bsf	___fldiv@aexp,0
 12672  0ABC  0839               	movf	___fldiv@aexp,w
 12673  0ABD  1903               	btfsc	3,2
 12674  0ABE  2ACD               	goto	l3337
 12675  0ABF  0A39               	incf	___fldiv@aexp,w
 12676  0AC0  1D03               	btfss	3,2
 12677  0AC1  2ACA               	goto	l3333
 12678  0AC2  3000               	movlw	0
 12679  0AC3  00A3               	movwf	___fldiv@a+3
 12680  0AC4  3000               	movlw	0
 12681  0AC5  00A2               	movwf	___fldiv@a+2
 12682  0AC6  3000               	movlw	0
 12683  0AC7  00A1               	movwf	___fldiv@a+1
 12684  0AC8  3000               	movlw	0
 12685  0AC9  00A0               	movwf	___fldiv@a
 12686  0ACA                     l3333:	
 12687  0ACA  17A2               	bsf	___fldiv@a+2,7
 12688  0ACB  01A3               	clrf	___fldiv@a+3
 12689  0ACC  2AD5               	goto	l883
 12690  0ACD                     l3337:	
 12691  0ACD  3000               	movlw	0
 12692  0ACE  00A3               	movwf	___fldiv@a+3
 12693  0ACF  3000               	movlw	0
 12694  0AD0  00A2               	movwf	___fldiv@a+2
 12695  0AD1  3000               	movlw	0
 12696  0AD2  00A1               	movwf	___fldiv@a+1
 12697  0AD3  3000               	movlw	0
 12698  0AD4  00A0               	movwf	___fldiv@a
 12699  0AD5                     l883:	
 12700  0AD5  0823               	movf	___fldiv@a+3,w
 12701  0AD6  0422               	iorwf	___fldiv@a+2,w
 12702  0AD7  0421               	iorwf	___fldiv@a+1,w
 12703  0AD8  0420               	iorwf	___fldiv@a,w
 12704  0AD9  1D03               	skipz
 12705  0ADA  2AF0               	goto	l3343
 12706  0ADB  3000               	movlw	0
 12707  0ADC  00A7               	movwf	___fldiv@b+3
 12708  0ADD  3000               	movlw	0
 12709  0ADE  00A6               	movwf	___fldiv@b+2
 12710  0ADF  3000               	movlw	0
 12711  0AE0  00A5               	movwf	___fldiv@b+1
 12712  0AE1  3000               	movlw	0
 12713  0AE2  00A4               	movwf	___fldiv@b
 12714  0AE3  3080               	movlw	128
 12715  0AE4  04A6               	iorwf	___fldiv@b+2,f
 12716  0AE5  307F               	movlw	127
 12717  0AE6  04A7               	iorwf	___fldiv@b+3,f
 12718  0AE7  0827               	movf	___fldiv@b+3,w
 12719  0AE8  00A3               	movwf	?___fldiv+3
 12720  0AE9  0826               	movf	___fldiv@b+2,w
 12721  0AEA  00A2               	movwf	?___fldiv+2
 12722  0AEB  0825               	movf	___fldiv@b+1,w
 12723  0AEC  00A1               	movwf	?___fldiv+1
 12724  0AED  0824               	movf	___fldiv@b,w
 12725  0AEE  00A0               	movwf	?___fldiv
 12726  0AEF  0008               	return
 12727  0AF0                     l3343:	
 12728  0AF0  0838               	movf	___fldiv@bexp,w
 12729  0AF1  1D03               	btfss	3,2
 12730  0AF2  2B04               	goto	l3349
 12731  0AF3  3000               	movlw	0
 12732  0AF4  00A7               	movwf	___fldiv@b+3
 12733  0AF5  3000               	movlw	0
 12734  0AF6  00A6               	movwf	___fldiv@b+2
 12735  0AF7  3000               	movlw	0
 12736  0AF8  00A5               	movwf	___fldiv@b+1
 12737  0AF9  3000               	movlw	0
 12738  0AFA  00A4               	movwf	___fldiv@b
 12739  0AFB  0827               	movf	___fldiv@b+3,w
 12740  0AFC  00A3               	movwf	?___fldiv+3
 12741  0AFD  0826               	movf	___fldiv@b+2,w
 12742  0AFE  00A2               	movwf	?___fldiv+2
 12743  0AFF  0825               	movf	___fldiv@b+1,w
 12744  0B00  00A1               	movwf	?___fldiv+1
 12745  0B01  0824               	movf	___fldiv@b,w
 12746  0B02  00A0               	movwf	?___fldiv
 12747  0B03  0008               	return
 12748  0B04                     l3349:	
 12749  0B04  0839               	movf	___fldiv@aexp,w
 12750  0B05  00A8               	movwf	??___fldiv
 12751  0B06  01A9               	clrf	??___fldiv+1
 12752  0B07  09A8               	comf	??___fldiv,f
 12753  0B08  09A9               	comf	??___fldiv+1,f
 12754  0B09  0AA8               	incf	??___fldiv,f
 12755  0B0A  1903               	skipnz
 12756  0B0B  0AA9               	incf	??___fldiv+1,f
 12757  0B0C  0838               	movf	___fldiv@bexp,w
 12758  0B0D  0728               	addwf	??___fldiv,w
 12759  0B0E  00AA               	movwf	??___fldiv+2
 12760  0B0F  0829               	movf	??___fldiv+1,w
 12761  0B10  1803               	skipnc
 12762  0B11  0A29               	incf	??___fldiv+1,w
 12763  0B12  00AB               	movwf	??___fldiv+3
 12764  0B13  082A               	movf	??___fldiv+2,w
 12765  0B14  3E7F               	addlw	127
 12766  0B15  00B2               	movwf	___fldiv@new_exp
 12767  0B16  3000               	movlw	0
 12768  0B17  3D2B               	addwfc	??___fldiv+3,w
 12769  0B18  00B3               	movwf	___fldiv@new_exp+1
 12770  0B19  0827               	movf	___fldiv@b+3,w
 12771  0B1A  00B1               	movwf	___fldiv@rem+3
 12772  0B1B  0826               	movf	___fldiv@b+2,w
 12773  0B1C  00B0               	movwf	___fldiv@rem+2
 12774  0B1D  0825               	movf	___fldiv@b+1,w
 12775  0B1E  00AF               	movwf	___fldiv@rem+1
 12776  0B1F  0824               	movf	___fldiv@b,w
 12777  0B20  00AE               	movwf	___fldiv@rem
 12778  0B21  3000               	movlw	0
 12779  0B22  00A7               	movwf	___fldiv@b+3
 12780  0B23  3000               	movlw	0
 12781  0B24  00A6               	movwf	___fldiv@b+2
 12782  0B25  3000               	movlw	0
 12783  0B26  00A5               	movwf	___fldiv@b+1
 12784  0B27  3000               	movlw	0
 12785  0B28  00A4               	movwf	___fldiv@b
 12786  0B29  3000               	movlw	0
 12787  0B2A  00B7               	movwf	___fldiv@grs+3
 12788  0B2B  3000               	movlw	0
 12789  0B2C  00B6               	movwf	___fldiv@grs+2
 12790  0B2D  3000               	movlw	0
 12791  0B2E  00B5               	movwf	___fldiv@grs+1
 12792  0B2F  3000               	movlw	0
 12793  0B30  00B4               	movwf	___fldiv@grs
 12794  0B31  01B9               	clrf	___fldiv@aexp
 12795  0B32                     l3377:	
 12796  0B32  301A               	movlw	26
 12797  0B33  0239               	subwf	___fldiv@aexp,w
 12798  0B34  1803               	btfsc	3,0
 12799  0B35  2B6E               	goto	l3379
 12800  0B36  0839               	movf	___fldiv@aexp,w
 12801  0B37  1903               	btfsc	3,2
 12802  0B38  2B50               	goto	l3369
 12803  0B39  3001               	movlw	1
 12804  0B3A                     u3995:	
 12805  0B3A  35AE               	lslf	___fldiv@rem,f
 12806  0B3B  0DAF               	rlf	___fldiv@rem+1,f
 12807  0B3C  0DB0               	rlf	___fldiv@rem+2,f
 12808  0B3D  0DB1               	rlf	___fldiv@rem+3,f
 12809  0B3E  0B89               	decfsz	9,f
 12810  0B3F  2B3A               	goto	u3995
 12811  0B40  3001               	movlw	1
 12812  0B41                     u4005:	
 12813  0B41  35A4               	lslf	___fldiv@b,f
 12814  0B42  0DA5               	rlf	___fldiv@b+1,f
 12815  0B43  0DA6               	rlf	___fldiv@b+2,f
 12816  0B44  0DA7               	rlf	___fldiv@b+3,f
 12817  0B45  0B89               	decfsz	9,f
 12818  0B46  2B41               	goto	u4005
 12819  0B47  1BB7               	btfsc	___fldiv@grs+3,7
 12820  0B48  1424               	bsf	___fldiv@b,0
 12821  0B49  3001               	movlw	1
 12822  0B4A                     u4025:	
 12823  0B4A  35B4               	lslf	___fldiv@grs,f
 12824  0B4B  0DB5               	rlf	___fldiv@grs+1,f
 12825  0B4C  0DB6               	rlf	___fldiv@grs+2,f
 12826  0B4D  0DB7               	rlf	___fldiv@grs+3,f
 12827  0B4E  0B89               	decfsz	9,f
 12828  0B4F  2B4A               	goto	u4025
 12829  0B50                     l3369:	
 12830  0B50  0823               	movf	___fldiv@a+3,w
 12831  0B51  0231               	subwf	___fldiv@rem+3,w
 12832  0B52  1D03               	skipz
 12833  0B53  2B5E               	goto	u4035
 12834  0B54  0822               	movf	___fldiv@a+2,w
 12835  0B55  0230               	subwf	___fldiv@rem+2,w
 12836  0B56  1D03               	skipz
 12837  0B57  2B5E               	goto	u4035
 12838  0B58  0821               	movf	___fldiv@a+1,w
 12839  0B59  022F               	subwf	___fldiv@rem+1,w
 12840  0B5A  1D03               	skipz
 12841  0B5B  2B5E               	goto	u4035
 12842  0B5C  0820               	movf	___fldiv@a,w
 12843  0B5D  022E               	subwf	___fldiv@rem,w
 12844  0B5E                     u4035:	
 12845  0B5E  1C03               	skipc
 12846  0B5F  2B69               	goto	l3375
 12847  0B60  1737               	bsf	___fldiv@grs+3,6
 12848  0B61  0820               	movf	___fldiv@a,w
 12849  0B62  02AE               	subwf	___fldiv@rem,f
 12850  0B63  0821               	movf	___fldiv@a+1,w
 12851  0B64  3BAF               	subwfb	___fldiv@rem+1,f
 12852  0B65  0822               	movf	___fldiv@a+2,w
 12853  0B66  3BB0               	subwfb	___fldiv@rem+2,f
 12854  0B67  0823               	movf	___fldiv@a+3,w
 12855  0B68  3BB1               	subwfb	___fldiv@rem+3,f
 12856  0B69                     l3375:	
 12857  0B69  3001               	movlw	1
 12858  0B6A  00A8               	movwf	??___fldiv
 12859  0B6B  0828               	movf	??___fldiv,w
 12860  0B6C  07B9               	addwf	___fldiv@aexp,f
 12861  0B6D  2B32               	goto	l3377
 12862  0B6E                     l3379:	
 12863  0B6E  0831               	movf	___fldiv@rem+3,w
 12864  0B6F  0430               	iorwf	___fldiv@rem+2,w
 12865  0B70  042F               	iorwf	___fldiv@rem+1,w
 12866  0B71  042E               	iorwf	___fldiv@rem,w
 12867  0B72  1D03               	btfss	3,2
 12868  0B73  1434               	bsf	___fldiv@grs,0
 12869  0B74                     l3393:	
 12870  0B74  1BA6               	btfsc	___fldiv@b+2,7
 12871  0B75  2B8B               	goto	l3395
 12872  0B76  3001               	movlw	1
 12873  0B77                     u4065:	
 12874  0B77  35A4               	lslf	___fldiv@b,f
 12875  0B78  0DA5               	rlf	___fldiv@b+1,f
 12876  0B79  0DA6               	rlf	___fldiv@b+2,f
 12877  0B7A  0DA7               	rlf	___fldiv@b+3,f
 12878  0B7B  0B89               	decfsz	9,f
 12879  0B7C  2B77               	goto	u4065
 12880  0B7D  1BB7               	btfsc	___fldiv@grs+3,7
 12881  0B7E  1424               	bsf	___fldiv@b,0
 12882  0B7F  3001               	movlw	1
 12883  0B80                     u4085:	
 12884  0B80  35B4               	lslf	___fldiv@grs,f
 12885  0B81  0DB5               	rlf	___fldiv@grs+1,f
 12886  0B82  0DB6               	rlf	___fldiv@grs+2,f
 12887  0B83  0DB7               	rlf	___fldiv@grs+3,f
 12888  0B84  0B89               	decfsz	9,f
 12889  0B85  2B80               	goto	u4085
 12890  0B86  30FF               	movlw	255
 12891  0B87  07B2               	addwf	___fldiv@new_exp,f
 12892  0B88  30FF               	movlw	255
 12893  0B89  3DB3               	addwfc	___fldiv@new_exp+1,f
 12894  0B8A  2B74               	goto	l3393
 12895  0B8B                     l3395:	
 12896  0B8B  01B9               	clrf	___fldiv@aexp
 12897  0B8C  1FB7               	btfss	___fldiv@grs+3,7
 12898  0B8D  2BA4               	goto	l3405
 12899  0B8E  30FF               	movlw	255
 12900  0B8F  0534               	andwf	___fldiv@grs,w
 12901  0B90  00A8               	movwf	??___fldiv
 12902  0B91  30FF               	movlw	255
 12903  0B92  0535               	andwf	___fldiv@grs+1,w
 12904  0B93  00A9               	movwf	??___fldiv+1
 12905  0B94  30FF               	movlw	255
 12906  0B95  0536               	andwf	___fldiv@grs+2,w
 12907  0B96  00AA               	movwf	??___fldiv+2
 12908  0B97  307F               	movlw	127
 12909  0B98  0537               	andwf	___fldiv@grs+3,w
 12910  0B99  00AB               	movwf	??___fldiv+3
 12911  0B9A  082B               	movf	??___fldiv+3,w
 12912  0B9B  042A               	iorwf	??___fldiv+2,w
 12913  0B9C  0429               	iorwf	??___fldiv+1,w
 12914  0B9D  0428               	iorwf	??___fldiv,w
 12915  0B9E  1D03               	btfss	3,2
 12916  0B9F  2BA2               	goto	l3403
 12917  0BA0  1C24               	btfss	___fldiv@b,0
 12918  0BA1  2BA4               	goto	l3405
 12919  0BA2                     l3403:	
 12920  0BA2  01B9               	clrf	___fldiv@aexp
 12921  0BA3  0AB9               	incf	___fldiv@aexp,f
 12922  0BA4                     l3405:	
 12923  0BA4  0839               	movf	___fldiv@aexp,w
 12924  0BA5  1903               	btfsc	3,2
 12925  0BA6  2BCD               	goto	l3415
 12926  0BA7  3001               	movlw	1
 12927  0BA8  07A4               	addwf	___fldiv@b,f
 12928  0BA9  3000               	movlw	0
 12929  0BAA  3DA5               	addwfc	___fldiv@b+1,f
 12930  0BAB  3000               	movlw	0
 12931  0BAC  3DA6               	addwfc	___fldiv@b+2,f
 12932  0BAD  3000               	movlw	0
 12933  0BAE  3DA7               	addwfc	___fldiv@b+3,f
 12934  0BAF  1C27               	btfss	___fldiv@b+3,0
 12935  0BB0  2BCD               	goto	l3415
 12936  0BB1  0824               	movf	___fldiv@b,w
 12937  0BB2  00A8               	movwf	??___fldiv
 12938  0BB3  0825               	movf	___fldiv@b+1,w
 12939  0BB4  00A9               	movwf	??___fldiv+1
 12940  0BB5  0826               	movf	___fldiv@b+2,w
 12941  0BB6  00AA               	movwf	??___fldiv+2
 12942  0BB7  0827               	movf	___fldiv@b+3,w
 12943  0BB8  00AB               	movwf	??___fldiv+3
 12944  0BB9  3001               	movlw	1
 12945  0BBA  00AC               	movwf	??___fldiv+4
 12946  0BBB                     u4155:	
 12947  0BBB  37AB               	asrf	??___fldiv+3,f
 12948  0BBC  0CAA               	rrf	??___fldiv+2,f
 12949  0BBD  0CA9               	rrf	??___fldiv+1,f
 12950  0BBE  0CA8               	rrf	??___fldiv,f
 12951  0BBF  0BAC               	decfsz	??___fldiv+4,f
 12952  0BC0  2BBB               	goto	u4155
 12953  0BC1  082B               	movf	??___fldiv+3,w
 12954  0BC2  00A7               	movwf	___fldiv@b+3
 12955  0BC3  082A               	movf	??___fldiv+2,w
 12956  0BC4  00A6               	movwf	___fldiv@b+2
 12957  0BC5  0829               	movf	??___fldiv+1,w
 12958  0BC6  00A5               	movwf	___fldiv@b+1
 12959  0BC7  0828               	movf	??___fldiv,w
 12960  0BC8  00A4               	movwf	___fldiv@b
 12961  0BC9  3001               	movlw	1
 12962  0BCA  07B2               	addwf	___fldiv@new_exp,f
 12963  0BCB  3000               	movlw	0
 12964  0BCC  3DB3               	addwfc	___fldiv@new_exp+1,f
 12965  0BCD                     l3415:	
 12966  0BCD  0833               	movf	___fldiv@new_exp+1,w
 12967  0BCE  3A80               	xorlw	128
 12968  0BCF  00A8               	movwf	??___fldiv
 12969  0BD0  3080               	movlw	128
 12970  0BD1  0228               	subwf	??___fldiv,w
 12971  0BD2  1D03               	skipz
 12972  0BD3  2BD6               	goto	u4165
 12973  0BD4  30FF               	movlw	255
 12974  0BD5  0232               	subwf	___fldiv@new_exp,w
 12975  0BD6                     u4165:	
 12976  0BD6  1C03               	skipc
 12977  0BD7  2BE5               	goto	l904
 12978  0BD8  30FF               	movlw	255
 12979  0BD9  0020               	movlb	0	; select bank0
 12980  0BDA  00B2               	movwf	___fldiv@new_exp
 12981  0BDB  3000               	movlw	0
 12982  0BDC  00B3               	movwf	___fldiv@new_exp+1
 12983  0BDD  3000               	movlw	0
 12984  0BDE  00A7               	movwf	___fldiv@b+3
 12985  0BDF  3000               	movlw	0
 12986  0BE0  00A6               	movwf	___fldiv@b+2
 12987  0BE1  3000               	movlw	0
 12988  0BE2  00A5               	movwf	___fldiv@b+1
 12989  0BE3  3000               	movlw	0
 12990  0BE4  00A4               	movwf	___fldiv@b
 12991  0BE5                     l904:	
 12992  0BE5  0020               	movlb	0	; select bank0
 12993  0BE6  0833               	movf	___fldiv@new_exp+1,w
 12994  0BE7  3A80               	xorlw	128
 12995  0BE8  00A8               	movwf	??___fldiv
 12996  0BE9  3080               	movlw	128
 12997  0BEA  0228               	subwf	??___fldiv,w
 12998  0BEB  1D03               	skipz
 12999  0BEC  2BEF               	goto	u4175
 13000  0BED  3001               	movlw	1
 13001  0BEE  0232               	subwf	___fldiv@new_exp,w
 13002  0BEF                     u4175:	
 13003  0BEF  1803               	skipnc
 13004  0BF0  2BFD               	goto	l905
 13005  0BF1  0020               	movlb	0	; select bank0
 13006  0BF2  01B2               	clrf	___fldiv@new_exp
 13007  0BF3  01B3               	clrf	___fldiv@new_exp+1
 13008  0BF4  3000               	movlw	0
 13009  0BF5  00A7               	movwf	___fldiv@b+3
 13010  0BF6  3000               	movlw	0
 13011  0BF7  00A6               	movwf	___fldiv@b+2
 13012  0BF8  3000               	movlw	0
 13013  0BF9  00A5               	movwf	___fldiv@b+1
 13014  0BFA  3000               	movlw	0
 13015  0BFB  00A4               	movwf	___fldiv@b
 13016  0BFC  01AD               	clrf	___fldiv@sign
 13017  0BFD                     l905:	
 13018  0BFD  0020               	movlb	0	; select bank0
 13019  0BFE  0832               	movf	___fldiv@new_exp,w
 13020  0BFF  00A8               	movwf	??___fldiv
 13021  0C00  0828               	movf	??___fldiv,w
 13022  0C01  00B8               	movwf	___fldiv@bexp
 13023  0C02  1C38               	btfss	___fldiv@bexp,0
 13024  0C03  2C06               	goto	l3429
 13025  0C04  17A6               	bsf	___fldiv@b+2,7
 13026  0C05  2C0A               	goto	l907
 13027  0C06                     l3429:	
 13028  0C06  307F               	movlw	127
 13029  0C07  00A8               	movwf	??___fldiv
 13030  0C08  0828               	movf	??___fldiv,w
 13031  0C09  05A6               	andwf	___fldiv@b+2,f
 13032  0C0A                     l907:	
 13033  0C0A  3638               	lsrf	___fldiv@bexp,w
 13034  0C0B  00A8               	movwf	??___fldiv
 13035  0C0C  0828               	movf	??___fldiv,w
 13036  0C0D  00A7               	movwf	___fldiv@b+3
 13037  0C0E  082D               	movf	___fldiv@sign,w
 13038  0C0F  00A8               	movwf	??___fldiv
 13039  0C10  0828               	movf	??___fldiv,w
 13040  0C11  04A7               	iorwf	___fldiv@b+3,f
 13041  0C12  0827               	movf	___fldiv@b+3,w
 13042  0C13  00A3               	movwf	?___fldiv+3
 13043  0C14  0826               	movf	___fldiv@b+2,w
 13044  0C15  00A2               	movwf	?___fldiv+2
 13045  0C16  0825               	movf	___fldiv@b+1,w
 13046  0C17  00A1               	movwf	?___fldiv+1
 13047  0C18  0824               	movf	___fldiv@b,w
 13048  0C19  00A0               	movwf	?___fldiv
 13049  0C1A  0008               	return
 13050  0C1B                     __end_of___fldiv:	
 13051                           
 13052                           	psect	text20
 13053  112F                     __ptext20:	
 13054 ;; *************** function _SYSTEM_Initialize *****************
 13055 ;; Defined at:
 13056 ;;		line 71 in file "system.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;		None
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;		None
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  1    wreg      void 
 13063 ;; Registers used:
 13064 ;;		wreg, status,2, status,0, pclath, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 0/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;Total ram usage:        2 bytes
 13075 ;; Hardware stack levels used:    1
 13076 ;; Hardware stack levels required when called:    3
 13077 ;; This function calls:
 13078 ;;		_ADC_Initialize
 13079 ;;		_Init_Battery_State_Machine
 13080 ;;		_LCDClear
 13081 ;;		_LCDInit
 13082 ;;		_OSCILLATOR_Initialize
 13083 ;;		_PIN_MANAGER_Initialize
 13084 ;;		_PWM_Initialize
 13085 ;;		_TMR2_Initialize
 13086 ;;		_TMR4_Initialize
 13087 ;; This function is called by:
 13088 ;;		_main
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092                           
 13093                           ;psect for function _SYSTEM_Initialize
 13094  112F                     _SYSTEM_Initialize:	
 13095                           
 13096                           ;system.c: 73: PIN_MANAGER_Initialize();
 13097                           
 13098                           ;incstack = 0
 13099                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13100  112F  3191  2198  3191   	fcall	_PIN_MANAGER_Initialize
 13101                           
 13102                           ;system.c: 74: OSCILLATOR_Initialize();
 13103  1132  3188  2001  3191   	fcall	_OSCILLATOR_Initialize
 13104                           
 13105                           ;system.c: 76: ADC_Initialize();
 13106  1135  319F  272C  3191   	fcall	_ADC_Initialize
 13107                           
 13108                           ;system.c: 77: PWM_Initialize();
 13109  1138  319F  274B  3191   	fcall	_PWM_Initialize
 13110                           
 13111                           ;system.c: 79: TMR2_Initialize();
 13112  113B  319E  265D  3191   	fcall	_TMR2_Initialize
 13113                           
 13114                           ;system.c: 80: TMR4_Initialize();
 13115  113E  319E  266B  3191   	fcall	_TMR4_Initialize
 13116                           
 13117                           ;system.c: 81: Init_Battery_State_Machine();
 13118  1141  319E  26F4  3191   	fcall	_Init_Battery_State_Machine
 13119                           
 13120                           ;system.c: 82: LCDInit();
 13121  1144  3191  21CF  3191   	fcall	_LCDInit
 13122                           
 13123                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 13124  1147  3009               	movlw	9
 13125  1148  00FC               	movwf	??_SYSTEM_Initialize+1
 13126  1149  301E               	movlw	30
 13127  114A  00FB               	movwf	??_SYSTEM_Initialize
 13128  114B  30E4               	movlw	228
 13129  114C                     u4917:	
 13130  114C  0B89               	decfsz	9,f
 13131  114D  294C               	goto	u4917
 13132  114E  0BFB               	decfsz	??_SYSTEM_Initialize,f
 13133  114F  294C               	goto	u4917
 13134  1150  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 13135  1151  294C               	goto	u4917
 13136  1152  3200               	nop2
 13137                           
 13138                           ;system.c: 84: LCDClear();
 13139  1153  319F  27AE  3191   	fcall	_LCDClear
 13140                           
 13141                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 13142  1156  3009               	movlw	9
 13143  1157  00FC               	movwf	??_SYSTEM_Initialize+1
 13144  1158  301E               	movlw	30
 13145  1159  00FB               	movwf	??_SYSTEM_Initialize
 13146  115A  30E4               	movlw	228
 13147  115B                     u4927:	
 13148  115B  0B89               	decfsz	9,f
 13149  115C  295B               	goto	u4927
 13150  115D  0BFB               	decfsz	??_SYSTEM_Initialize,f
 13151  115E  295B               	goto	u4927
 13152  115F  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 13153  1160  295B               	goto	u4927
 13154  1161  3200               	nop2
 13155  1162  0008               	return
 13156  1163                     __end_of_SYSTEM_Initialize:	
 13157                           
 13158                           	psect	text21
 13159  1E6B                     __ptext21:	
 13160 ;; *************** function _TMR4_Initialize *****************
 13161 ;; Defined at:
 13162 ;;		line 25 in file "tmr.c"
 13163 ;; Parameters:    Size  Location     Type
 13164 ;;		None
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;		None
 13167 ;; Return value:  Size  Location     Type
 13168 ;;                  1    wreg      void 
 13169 ;; Registers used:
 13170 ;;		wreg, status,2
 13171 ;; Tracked objects:
 13172 ;;		On entry : 0/0
 13173 ;;		On exit  : 0/0
 13174 ;;		Unchanged: 0/0
 13175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13180 ;;Total ram usage:        0 bytes
 13181 ;; Hardware stack levels used:    1
 13182 ;; This function calls:
 13183 ;;		Nothing
 13184 ;; This function is called by:
 13185 ;;		_SYSTEM_Initialize
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           
 13190                           ;psect for function _TMR4_Initialize
 13191  1E6B                     _TMR4_Initialize:	
 13192                           
 13193                           ;tmr.c: 27: T4CON = 0x00;
 13194                           
 13195                           ;incstack = 0
 13196                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 13197  1E6B  0025               	movlb	5	; select bank5
 13198  1E6C  0194               	clrf	20	;volatile
 13199                           
 13200                           ;tmr.c: 29: T4CLKCON = 0x01;
 13201  1E6D  3001               	movlw	1
 13202  1E6E  0096               	movwf	22	;volatile
 13203                           
 13204                           ;tmr.c: 31: T4HLT = 0x00;
 13205  1E6F  0195               	clrf	21	;volatile
 13206                           
 13207                           ;tmr.c: 33: T4RST = 0x00;
 13208  1E70  0197               	clrf	23	;volatile
 13209                           
 13210                           ;tmr.c: 35: T4PR = 0xFE;
 13211  1E71  30FE               	movlw	254
 13212  1E72  0093               	movwf	19	;volatile
 13213                           
 13214                           ;tmr.c: 39: T4TMR = 0x00;
 13215  1E73  0192               	clrf	18	;volatile
 13216                           
 13217                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 13218  1E74  002E               	movlb	14	; select bank14
 13219  1E75  1190               	bcf	16,3	;volatile
 13220                           
 13221                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 13222  1E76  0025               	movlb	5	; select bank5
 13223  1E77  1794               	bsf	20,7	;volatile
 13224  1E78  0008               	return
 13225  1E79                     __end_of_TMR4_Initialize:	
 13226                           
 13227                           	psect	text22
 13228  1E5D                     __ptext22:	
 13229 ;; *************** function _TMR2_Initialize *****************
 13230 ;; Defined at:
 13231 ;;		line 3 in file "tmr.c"
 13232 ;; Parameters:    Size  Location     Type
 13233 ;;		None
 13234 ;; Auto vars:     Size  Location     Type
 13235 ;;		None
 13236 ;; Return value:  Size  Location     Type
 13237 ;;                  1    wreg      void 
 13238 ;; Registers used:
 13239 ;;		wreg, status,2
 13240 ;; Tracked objects:
 13241 ;;		On entry : 0/0
 13242 ;;		On exit  : 0/0
 13243 ;;		Unchanged: 0/0
 13244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13249 ;;Total ram usage:        0 bytes
 13250 ;; Hardware stack levels used:    1
 13251 ;; This function calls:
 13252 ;;		Nothing
 13253 ;; This function is called by:
 13254 ;;		_SYSTEM_Initialize
 13255 ;; This function uses a non-reentrant model
 13256 ;;
 13257                           
 13258                           
 13259                           ;psect for function _TMR2_Initialize
 13260  1E5D                     _TMR2_Initialize:	
 13261                           
 13262                           ;tmr.c: 5: T2CON = 0x00;
 13263                           
 13264                           ;incstack = 0
 13265                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 13266  1E5D  0025               	movlb	5	; select bank5
 13267  1E5E  018E               	clrf	14	;volatile
 13268                           
 13269                           ;tmr.c: 7: T2CLKCON = 0x01;
 13270  1E5F  3001               	movlw	1
 13271  1E60  0090               	movwf	16	;volatile
 13272                           
 13273                           ;tmr.c: 9: T2HLT = 0x00;
 13274  1E61  018F               	clrf	15	;volatile
 13275                           
 13276                           ;tmr.c: 11: T2RST = 0x00;
 13277  1E62  0191               	clrf	17	;volatile
 13278                           
 13279                           ;tmr.c: 13: T2PR = 0xFE;
 13280  1E63  30FE               	movlw	254
 13281  1E64  008D               	movwf	13	;volatile
 13282                           
 13283                           ;tmr.c: 18: T2TMR = 0x00;
 13284  1E65  018C               	clrf	12	;volatile
 13285                           
 13286                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 13287  1E66  002E               	movlb	14	; select bank14
 13288  1E67  1090               	bcf	16,1	;volatile
 13289                           
 13290                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 13291  1E68  0025               	movlb	5	; select bank5
 13292  1E69  178E               	bsf	14,7	;volatile
 13293  1E6A  0008               	return
 13294  1E6B                     __end_of_TMR2_Initialize:	
 13295                           
 13296                           	psect	text23
 13297  1F4B                     __ptext23:	
 13298 ;; *************** function _PWM_Initialize *****************
 13299 ;; Defined at:
 13300 ;;		line 3 in file "pwm.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;		None
 13303 ;; Auto vars:     Size  Location     Type
 13304 ;;		None
 13305 ;; Return value:  Size  Location     Type
 13306 ;;                  1    wreg      void 
 13307 ;; Registers used:
 13308 ;;		wreg, status,2, status,0
 13309 ;; Tracked objects:
 13310 ;;		On entry : 0/0
 13311 ;;		On exit  : 0/0
 13312 ;;		Unchanged: 0/0
 13313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13318 ;;Total ram usage:        0 bytes
 13319 ;; Hardware stack levels used:    1
 13320 ;; This function calls:
 13321 ;;		Nothing
 13322 ;; This function is called by:
 13323 ;;		_SYSTEM_Initialize
 13324 ;; This function uses a non-reentrant model
 13325 ;;
 13326                           
 13327                           
 13328                           ;psect for function _PWM_Initialize
 13329  1F4B                     _PWM_Initialize:	
 13330                           
 13331                           ;pwm.c: 5: PWM6CON = 0x80;
 13332                           
 13333                           ;incstack = 0
 13334                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 13335  1F4B  3080               	movlw	128
 13336  1F4C  0027               	movlb	7	; select bank7
 13337  1F4D  008E               	movwf	14	;volatile
 13338                           
 13339                           ;pwm.c: 7: PWM6DCH = 0x00;
 13340  1F4E  018D               	clrf	13	;volatile
 13341                           
 13342                           ;pwm.c: 9: PWM6DCL = 0x00;
 13343  1F4F  018C               	clrf	12	;volatile
 13344                           
 13345                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 13346  1F50  0024               	movlb	4	; select bank4
 13347  1F51  081F               	movf	31,w	;volatile
 13348  1F52  39F3               	andlw	-13
 13349  1F53  3804               	iorlw	4
 13350  1F54  009F               	movwf	31	;volatile
 13351                           
 13352                           ;pwm.c: 14: PWM7CON = 0x80;
 13353  1F55  3080               	movlw	128
 13354  1F56  0027               	movlb	7	; select bank7
 13355  1F57  0092               	movwf	18	;volatile
 13356                           
 13357                           ;pwm.c: 16: PWM7DCH = 0x00;
 13358  1F58  0191               	clrf	17	;volatile
 13359                           
 13360                           ;pwm.c: 18: PWM7DCL = 0x00;
 13361  1F59  0190               	clrf	16	;volatile
 13362                           
 13363                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 13364  1F5A  0024               	movlb	4	; select bank4
 13365  1F5B  081F               	movf	31,w	;volatile
 13366  1F5C  39CF               	andlw	-49
 13367  1F5D  3820               	iorlw	32
 13368  1F5E  009F               	movwf	31	;volatile
 13369                           
 13370                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 13371  1F5F  0026               	movlb	6	; select bank6
 13372  1F60  178E               	bsf	14,7	;volatile
 13373                           
 13374                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 13375  1F61  160E               	bsf	14,4	;volatile
 13376                           
 13377                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 13378  1F62  300F               	movlw	15
 13379  1F63  048E               	iorwf	14,f	;volatile
 13380                           
 13381                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 13382  1F64  0024               	movlb	4	; select bank4
 13383  1F65  081E               	movf	30,w	;volatile
 13384  1F66  39FC               	andlw	-4
 13385  1F67  3801               	iorlw	1
 13386  1F68  009E               	movwf	30	;volatile
 13387  1F69  0008               	return
 13388  1F6A                     __end_of_PWM_Initialize:	
 13389                           
 13390                           	psect	text24
 13391  1198                     __ptext24:	
 13392 ;; *************** function _PIN_MANAGER_Initialize *****************
 13393 ;; Defined at:
 13394 ;;		line 5 in file "pin_manager.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;		None
 13397 ;; Auto vars:     Size  Location     Type
 13398 ;;  state           1    0[COMMON] char 
 13399 ;; Return value:  Size  Location     Type
 13400 ;;                  1    wreg      void 
 13401 ;; Registers used:
 13402 ;;		wreg, status,2
 13403 ;; Tracked objects:
 13404 ;;		On entry : 0/0
 13405 ;;		On exit  : 0/0
 13406 ;;		Unchanged: 0/0
 13407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;Total ram usage:        1 bytes
 13413 ;; Hardware stack levels used:    1
 13414 ;; This function calls:
 13415 ;;		Nothing
 13416 ;; This function is called by:
 13417 ;;		_SYSTEM_Initialize
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           
 13422                           ;psect for function _PIN_MANAGER_Initialize
 13423  1198                     _PIN_MANAGER_Initialize:	
 13424                           
 13425                           ;pin_manager.c: 7: LATA = 0x20;
 13426                           
 13427                           ;incstack = 0
 13428                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13429  1198  3020               	movlw	32
 13430  1199  0020               	movlb	0	; select bank0
 13431  119A  0096               	movwf	22	;volatile
 13432                           
 13433                           ;pin_manager.c: 8: LATB = 0x00;
 13434  119B  0197               	clrf	23	;volatile
 13435                           
 13436                           ;pin_manager.c: 9: LATC = 0x00;
 13437  119C  0198               	clrf	24	;volatile
 13438                           
 13439                           ;pin_manager.c: 11: WPUA = 0x00;
 13440  119D  003E               	movlb	30	; select bank30
 13441  119E  01B9               	clrf	57	;volatile
 13442                           
 13443                           ;pin_manager.c: 12: WPUB = 0x00;
 13444  119F  01C4               	clrf	68	;volatile
 13445                           
 13446                           ;pin_manager.c: 13: WPUC = 0x00;
 13447  11A0  01CF               	clrf	79	;volatile
 13448                           
 13449                           ;pin_manager.c: 14: WPUE = 0x8;
 13450  11A1  3008               	movlw	8
 13451  11A2  00E5               	movwf	101	;volatile
 13452                           
 13453                           ;pin_manager.c: 16: TRISA = 0x00;
 13454  11A3  0020               	movlb	0	; select bank0
 13455  11A4  0191               	clrf	17	;volatile
 13456                           
 13457                           ;pin_manager.c: 17: TRISB = 0x0E;
 13458  11A5  300E               	movlw	14
 13459  11A6  0092               	movwf	18	;volatile
 13460                           
 13461                           ;pin_manager.c: 18: TRISC = 0xFF;
 13462  11A7  30FF               	movlw	255
 13463  11A8  0093               	movwf	19	;volatile
 13464                           
 13465                           ;pin_manager.c: 20: ANSELA = 0x00;
 13466  11A9  003E               	movlb	30	; select bank30
 13467  11AA  01B8               	clrf	56	;volatile
 13468                           
 13469                           ;pin_manager.c: 21: ANSELB = 0x0A;
 13470  11AB  300A               	movlw	10
 13471  11AC  00C3               	movwf	67	;volatile
 13472                           
 13473                           ;pin_manager.c: 22: ANSELC = 0xFF;
 13474  11AD  30FF               	movlw	255
 13475  11AE  00CE               	movwf	78	;volatile
 13476                           
 13477                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 13478  11AF  002E               	movlb	14	; select bank14
 13479  11B0  1216               	bcf	22,4	;volatile
 13480                           
 13481                           ;pin_manager.c: 26: int8_t state = GIE;
 13482  11B1  3000               	movlw	0
 13483  11B2  1B8B               	btfsc	11,7	;volatile
 13484  11B3  3001               	movlw	1
 13485  11B4  00F0               	movwf	PIN_MANAGER_Initialize@state
 13486                           
 13487                           ;pin_manager.c: 27: GIE = 0;
 13488  11B5  138B               	bcf	11,7	;volatile
 13489                           
 13490                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 13491  11B6  3055               	movlw	85
 13492  11B7  003D               	movlb	29	; select bank29
 13493  11B8  008F               	movwf	15	;volsfr
 13494                           
 13495                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 13496  11B9  30AA               	movlw	170
 13497  11BA  008F               	movwf	15	;volsfr
 13498                           
 13499                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 13500  11BB  100F               	bcf	15,0	;volsfr
 13501                           
 13502                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 13503  11BC  300E               	movlw	14
 13504  11BD  003E               	movlb	30	; select bank30
 13505  11BE  0096               	movwf	22	;volatile
 13506                           
 13507                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 13508  11BF  300F               	movlw	15
 13509  11C0  0097               	movwf	23	;volatile
 13510                           
 13511                           ;pin_manager.c: 34: RB0PPS = 0x09;
 13512  11C1  3009               	movlw	9
 13513  11C2  0098               	movwf	24	;volatile
 13514                           
 13515                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 13516  11C3  3055               	movlw	85
 13517  11C4  003D               	movlb	29	; select bank29
 13518  11C5  008F               	movwf	15	;volsfr
 13519                           
 13520                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 13521  11C6  30AA               	movlw	170
 13522  11C7  008F               	movwf	15	;volsfr
 13523                           
 13524                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 13525  11C8  140F               	bsf	15,0	;volsfr
 13526                           
 13527                           ;pin_manager.c: 38: GIE = state;
 13528  11C9  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 13529  11CA  29CD               	goto	u3500
 13530  11CB  178B               	bsf	11,7	;volatile
 13531  11CC  0008               	return
 13532  11CD                     u3500:	
 13533  11CD  138B               	bcf	11,7	;volatile
 13534  11CE  0008               	return
 13535  11CF                     __end_of_PIN_MANAGER_Initialize:	
 13536                           
 13537                           	psect	text25
 13538  0801                     __ptext25:	
 13539 ;; *************** function _OSCILLATOR_Initialize *****************
 13540 ;; Defined at:
 13541 ;;		line 88 in file "system.c"
 13542 ;; Parameters:    Size  Location     Type
 13543 ;;		None
 13544 ;; Auto vars:     Size  Location     Type
 13545 ;;		None
 13546 ;; Return value:  Size  Location     Type
 13547 ;;                  1    wreg      void 
 13548 ;; Registers used:
 13549 ;;		wreg, status,2
 13550 ;; Tracked objects:
 13551 ;;		On entry : 0/0
 13552 ;;		On exit  : 0/0
 13553 ;;		Unchanged: 0/0
 13554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13559 ;;Total ram usage:        0 bytes
 13560 ;; Hardware stack levels used:    1
 13561 ;; This function calls:
 13562 ;;		Nothing
 13563 ;; This function is called by:
 13564 ;;		_SYSTEM_Initialize
 13565 ;; This function uses a non-reentrant model
 13566 ;;
 13567                           
 13568                           
 13569                           ;psect for function _OSCILLATOR_Initialize
 13570  0801                     _OSCILLATOR_Initialize:	
 13571                           
 13572                           ;system.c: 90: OSCCON1 = 0x60;
 13573                           
 13574                           ;incstack = 0
 13575                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13576  0801  3060               	movlw	96
 13577  0802  0031               	movlb	17	; select bank17
 13578  0803  008D               	movwf	13	;volatile
 13579                           
 13580                           ;system.c: 91: OSCCON3 = 0x00;
 13581  0804  018F               	clrf	15	;volatile
 13582                           
 13583                           ;system.c: 92: OSCEN = 0x00;
 13584  0805  0191               	clrf	17	;volatile
 13585                           
 13586                           ;system.c: 93: OSCFRQ = 0x06;
 13587  0806  3006               	movlw	6
 13588  0807  0093               	movwf	19	;volatile
 13589                           
 13590                           ;system.c: 94: OSCTUNE = 0x00;
 13591  0808  0192               	clrf	18	;volatile
 13592  0809  0008               	return
 13593  080A                     __end_of_OSCILLATOR_Initialize:	
 13594                           
 13595                           	psect	text26
 13596  11CF                     __ptext26:	
 13597 ;; *************** function _LCDInit *****************
 13598 ;; Defined at:
 13599 ;;		line 247 in file "lcd.c"
 13600 ;; Parameters:    Size  Location     Type
 13601 ;;		None
 13602 ;; Auto vars:     Size  Location     Type
 13603 ;;		None
 13604 ;; Return value:  Size  Location     Type
 13605 ;;                  1    wreg      void 
 13606 ;; Registers used:
 13607 ;;		wreg, status,2, status,0, pclath, cstack
 13608 ;; Tracked objects:
 13609 ;;		On entry : 0/0
 13610 ;;		On exit  : 0/0
 13611 ;;		Unchanged: 0/0
 13612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13617 ;;Total ram usage:        1 bytes
 13618 ;; Hardware stack levels used:    1
 13619 ;; Hardware stack levels required when called:    1
 13620 ;; This function calls:
 13621 ;;		_LCDWrite
 13622 ;; This function is called by:
 13623 ;;		_SYSTEM_Initialize
 13624 ;;		_main
 13625 ;; This function uses a non-reentrant model
 13626 ;;
 13627                           
 13628                           
 13629                           ;psect for function _LCDInit
 13630  11CF                     _LCDInit:	
 13631                           
 13632                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 13633                           
 13634                           ;incstack = 0
 13635                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 13636  11CF  0020               	movlb	0	; select bank0
 13637  11D0  1011               	bcf	17,0	;volatile
 13638                           
 13639                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 13640  11D1  1091               	bcf	17,1	;volatile
 13641                           
 13642                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 13643  11D2  1111               	bcf	17,2	;volatile
 13644                           
 13645                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 13646  11D3  1191               	bcf	17,3	;volatile
 13647                           
 13648                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 13649  11D4  1211               	bcf	17,4	;volatile
 13650                           
 13651                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 13652  11D5  1196               	bcf	22,3	;volatile
 13653                           
 13654                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 13655  11D6  1216               	bcf	22,4	;volatile
 13656                           
 13657                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 13658  11D7  1116               	bcf	22,2	;volatile
 13659                           
 13660                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 13661  11D8  1016               	bcf	22,0	;volatile
 13662                           
 13663                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 13664  11D9  1416               	bsf	22,0	;volatile
 13665                           
 13666                           ;lcd.c: 261: LCDWrite(0, 0x21);
 13667  11DA  3021               	movlw	33
 13668  11DB  00F5               	movwf	??_LCDInit
 13669  11DC  0875               	movf	??_LCDInit,w
 13670  11DD  00F0               	movwf	LCDWrite@data
 13671  11DE  3000               	movlw	0
 13672  11DF  319F  2789  3191   	fcall	_LCDWrite
 13673                           
 13674                           ;lcd.c: 268: LCDWrite(0, 0XB7);
 13675  11E2  30B7               	movlw	183
 13676  11E3  00F5               	movwf	??_LCDInit
 13677  11E4  0875               	movf	??_LCDInit,w
 13678  11E5  00F0               	movwf	LCDWrite@data
 13679  11E6  3000               	movlw	0
 13680  11E7  319F  2789  3191   	fcall	_LCDWrite
 13681                           
 13682                           ;lcd.c: 270: LCDWrite(0, 0x04);
 13683  11EA  3004               	movlw	4
 13684  11EB  00F5               	movwf	??_LCDInit
 13685  11EC  0875               	movf	??_LCDInit,w
 13686  11ED  00F0               	movwf	LCDWrite@data
 13687  11EE  3000               	movlw	0
 13688  11EF  319F  2789  3191   	fcall	_LCDWrite
 13689                           
 13690                           ;lcd.c: 272: LCDWrite(0, 0x14);
 13691  11F2  3014               	movlw	20
 13692  11F3  00F5               	movwf	??_LCDInit
 13693  11F4  0875               	movf	??_LCDInit,w
 13694  11F5  00F0               	movwf	LCDWrite@data
 13695  11F6  3000               	movlw	0
 13696  11F7  319F  2789  3191   	fcall	_LCDWrite
 13697                           
 13698                           ;lcd.c: 274: LCDWrite(0, 0x20);
 13699  11FA  3020               	movlw	32
 13700  11FB  00F5               	movwf	??_LCDInit
 13701  11FC  0875               	movf	??_LCDInit,w
 13702  11FD  00F0               	movwf	LCDWrite@data
 13703  11FE  3000               	movlw	0
 13704  11FF  319F  2789  3191   	fcall	_LCDWrite
 13705                           
 13706                           ;lcd.c: 276: LCDWrite(0, 0x0C);
 13707  1202  300C               	movlw	12
 13708  1203  00F5               	movwf	??_LCDInit
 13709  1204  0875               	movf	??_LCDInit,w
 13710  1205  00F0               	movwf	LCDWrite@data
 13711  1206  3000               	movlw	0
 13712  1207  319F  2789         	fcall	_LCDWrite
 13713  1209  0008               	return
 13714  120A                     __end_of_LCDInit:	
 13715                           
 13716                           	psect	text27
 13717  1FAE                     __ptext27:	
 13718 ;; *************** function _LCDClear *****************
 13719 ;; Defined at:
 13720 ;;		line 182 in file "lcd.c"
 13721 ;; Parameters:    Size  Location     Type
 13722 ;;		None
 13723 ;; Auto vars:     Size  Location     Type
 13724 ;;  index           2    9[COMMON] int 
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  1    wreg      void 
 13727 ;; Registers used:
 13728 ;;		wreg, status,2, status,0, pclath, cstack
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13737 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13738 ;;Total ram usage:        3 bytes
 13739 ;; Hardware stack levels used:    1
 13740 ;; Hardware stack levels required when called:    2
 13741 ;; This function calls:
 13742 ;;		_LCDWrite
 13743 ;;		_gotoXY
 13744 ;; This function is called by:
 13745 ;;		_SYSTEM_Initialize
 13746 ;;		_main
 13747 ;; This function uses a non-reentrant model
 13748 ;;
 13749                           
 13750                           
 13751                           ;psect for function _LCDClear
 13752  1FAE                     _LCDClear:	
 13753                           
 13754                           ;lcd.c: 184: int index;
 13755                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 13756                           
 13757                           ;incstack = 0
 13758                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 13759  1FAE  01F9               	clrf	LCDClear@index
 13760  1FAF  01FA               	clrf	LCDClear@index+1
 13761  1FB0  087A               	movf	LCDClear@index+1,w
 13762  1FB1  3A80               	xorlw	128
 13763  1FB2  00F8               	movwf	??_LCDClear
 13764  1FB3  3081               	movlw	129
 13765  1FB4  0278               	subwf	??_LCDClear,w
 13766  1FB5  1D03               	skipz
 13767  1FB6  2FB9               	goto	u3485
 13768  1FB7  30F8               	movlw	248
 13769  1FB8  0279               	subwf	LCDClear@index,w
 13770  1FB9                     u3485:	
 13771  1FB9  1803               	btfsc	3,0
 13772  1FBA  2FCF               	goto	l3035
 13773  1FBB                     l3029:	
 13774                           
 13775                           ;lcd.c: 186: LCDWrite(1, 0x00);
 13776  1FBB  01F0               	clrf	LCDWrite@data
 13777  1FBC  3001               	movlw	1
 13778  1FBD  319F  2789  319F   	fcall	_LCDWrite
 13779  1FC0  3001               	movlw	1
 13780  1FC1  07F9               	addwf	LCDClear@index,f
 13781  1FC2  3000               	movlw	0
 13782  1FC3  3DFA               	addwfc	LCDClear@index+1,f
 13783  1FC4  087A               	movf	LCDClear@index+1,w
 13784  1FC5  3A80               	xorlw	128
 13785  1FC6  00F8               	movwf	??_LCDClear
 13786  1FC7  3081               	movlw	129
 13787  1FC8  0278               	subwf	??_LCDClear,w
 13788  1FC9  1D03               	skipz
 13789  1FCA  2FCD               	goto	u3495
 13790  1FCB  30F8               	movlw	248
 13791  1FCC  0279               	subwf	LCDClear@index,w
 13792  1FCD                     u3495:	
 13793  1FCD  1C03               	skipc
 13794  1FCE  2FBB               	goto	l3029
 13795  1FCF                     l3035:	
 13796                           
 13797                           ;lcd.c: 187: gotoXY(0, 0);
 13798  1FCF  01F5               	clrf	gotoXY@y
 13799  1FD0  3000               	movlw	0
 13800  1FD1  319E  268A         	fcall	_gotoXY
 13801  1FD3  0008               	return
 13802  1FD4                     __end_of_LCDClear:	
 13803                           
 13804                           	psect	text28
 13805  1E8A                     __ptext28:	
 13806 ;; *************** function _gotoXY *****************
 13807 ;; Defined at:
 13808 ;;		line 124 in file "lcd.c"
 13809 ;; Parameters:    Size  Location     Type
 13810 ;;  x               1    wreg     unsigned char 
 13811 ;;  y               1    5[COMMON] unsigned char 
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;  x               1    7[COMMON] unsigned char 
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  1    wreg      void 
 13816 ;; Registers used:
 13817 ;;		wreg, status,2, status,0, pclath, cstack
 13818 ;; Tracked objects:
 13819 ;;		On entry : 0/0
 13820 ;;		On exit  : 0/0
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13826 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13827 ;;Total ram usage:        3 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:    1
 13830 ;; This function calls:
 13831 ;;		_LCDWrite
 13832 ;; This function is called by:
 13833 ;;		_LCDClear
 13834 ;;		_main
 13835 ;;		_LCDBitmap
 13836 ;; This function uses a non-reentrant model
 13837 ;;
 13838                           
 13839                           
 13840                           ;psect for function _gotoXY
 13841  1E8A                     _gotoXY:	
 13842                           
 13843                           ;incstack = 0
 13844                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 13845                           ;gotoXY@x stored from wreg
 13846  1E8A  00F7               	movwf	gotoXY@x
 13847                           
 13848                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 13849  1E8B  0877               	movf	gotoXY@x,w
 13850  1E8C  3880               	iorlw	128
 13851  1E8D  00F6               	movwf	??_gotoXY
 13852  1E8E  0876               	movf	??_gotoXY,w
 13853  1E8F  00F0               	movwf	LCDWrite@data
 13854  1E90  3000               	movlw	0
 13855  1E91  319F  2789  319E   	fcall	_LCDWrite
 13856                           
 13857                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 13858  1E94  0875               	movf	gotoXY@y,w
 13859  1E95  3840               	iorlw	64
 13860  1E96  00F6               	movwf	??_gotoXY
 13861  1E97  0876               	movf	??_gotoXY,w
 13862  1E98  00F0               	movwf	LCDWrite@data
 13863  1E99  3000               	movlw	0
 13864  1E9A  319F  2789         	fcall	_LCDWrite
 13865  1E9C  0008               	return
 13866  1E9D                     __end_of_gotoXY:	
 13867                           
 13868                           	psect	text29
 13869  1EF4                     __ptext29:	
 13870 ;; *************** function _Init_Battery_State_Machine *****************
 13871 ;; Defined at:
 13872 ;;		line 23 in file "battery_charger.c"
 13873 ;; Parameters:    Size  Location     Type
 13874 ;;		None
 13875 ;; Auto vars:     Size  Location     Type
 13876 ;;		None
 13877 ;; Return value:  Size  Location     Type
 13878 ;;                  1    wreg      void 
 13879 ;; Registers used:
 13880 ;;		wreg
 13881 ;; Tracked objects:
 13882 ;;		On entry : 0/0
 13883 ;;		On exit  : 0/0
 13884 ;;		Unchanged: 0/0
 13885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13890 ;;Total ram usage:        1 bytes
 13891 ;; Hardware stack levels used:    1
 13892 ;; This function calls:
 13893 ;;		Nothing
 13894 ;; This function is called by:
 13895 ;;		_SYSTEM_Initialize
 13896 ;; This function uses a non-reentrant model
 13897 ;;
 13898                           
 13899                           
 13900                           ;psect for function _Init_Battery_State_Machine
 13901  1EF4                     _Init_Battery_State_Machine:	
 13902                           
 13903                           ;battery_charger.c: 25: battery_state = PRECHARGE;
 13904                           
 13905                           ;incstack = 0
 13906                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 13907  1EF4  3003               	movlw	3
 13908  1EF5  00F0               	movwf	??_Init_Battery_State_Machine
 13909  1EF6  0870               	movf	??_Init_Battery_State_Machine,w
 13910  1EF7  0022               	movlb	2	; select bank2
 13911  1EF8  00EE               	movwf	_battery_state^(0+256)
 13912                           
 13913                           ;battery_charger.c: 26: state_counter = 600;
 13914  1EF9  3058               	movlw	88
 13915  1EFA  00EA               	movwf	_state_counter^(0+256)
 13916  1EFB  3002               	movlw	2
 13917  1EFC  00EB               	movwf	(_state_counter^(0+256)+1)
 13918                           
 13919                           ;battery_charger.c: 28: { Iref = 10; };
 13920  1EFD  300A               	movlw	10
 13921  1EFE  00E6               	movwf	_Iref^(0+256)
 13922  1EFF  3000               	movlw	0
 13923  1F00  00E7               	movwf	(_Iref^(0+256)+1)
 13924                           
 13925                           ;battery_charger.c: 29: { Vref = 1425; };
 13926  1F01  3091               	movlw	145
 13927  1F02  00E4               	movwf	_Vref^(0+256)
 13928  1F03  3005               	movlw	5
 13929  1F04  00E5               	movwf	(_Vref^(0+256)+1)
 13930                           
 13931                           ;battery_charger.c: 31: Imin = 20;
 13932  1F05  3014               	movlw	20
 13933  1F06  00E8               	movwf	_Imin^(0+256)
 13934  1F07  3000               	movlw	0
 13935  1F08  00E9               	movwf	(_Imin^(0+256)+1)
 13936                           
 13937                           ;battery_charger.c: 32: IminCount = 10;
 13938  1F09  300A               	movlw	10
 13939  1F0A  00EC               	movwf	_IminCount^(0+256)
 13940  1F0B  3000               	movlw	0
 13941  1F0C  00ED               	movwf	(_IminCount^(0+256)+1)
 13942  1F0D  0008               	return
 13943  1F0E                     __end_of_Init_Battery_State_Machine:	
 13944                           
 13945                           	psect	text30
 13946  1F2C                     __ptext30:	
 13947 ;; *************** function _ADC_Initialize *****************
 13948 ;; Defined at:
 13949 ;;		line 83 in file "adc.c"
 13950 ;; Parameters:    Size  Location     Type
 13951 ;;		None
 13952 ;; Auto vars:     Size  Location     Type
 13953 ;;		None
 13954 ;; Return value:  Size  Location     Type
 13955 ;;                  1    wreg      void 
 13956 ;; Registers used:
 13957 ;;		wreg, status,2
 13958 ;; Tracked objects:
 13959 ;;		On entry : 0/0
 13960 ;;		On exit  : 0/0
 13961 ;;		Unchanged: 0/0
 13962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13967 ;;Total ram usage:        0 bytes
 13968 ;; Hardware stack levels used:    1
 13969 ;; This function calls:
 13970 ;;		Nothing
 13971 ;; This function is called by:
 13972 ;;		_SYSTEM_Initialize
 13973 ;; This function uses a non-reentrant model
 13974 ;;
 13975                           
 13976                           
 13977                           ;psect for function _ADC_Initialize
 13978  1F2C                     _ADC_Initialize:	
 13979                           
 13980                           ;adc.c: 85: ADCON1 = 0x00;
 13981                           
 13982                           ;incstack = 0
 13983                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 13984  1F2C  0021               	movlb	1	; select bank1
 13985  1F2D  0194               	clrf	20	;volatile
 13986                           
 13987                           ;adc.c: 87: ADCON2 = 0x00;
 13988  1F2E  0195               	clrf	21	;volatile
 13989                           
 13990                           ;adc.c: 89: ADCON3 = 0x00;
 13991  1F2F  0196               	clrf	22	;volatile
 13992                           
 13993                           ;adc.c: 91: ADACT = 0x00;
 13994  1F30  0199               	clrf	25	;volatile
 13995                           
 13996                           ;adc.c: 93: ADSTAT = 0x00;
 13997  1F31  0197               	clrf	23	;volatile
 13998                           
 13999                           ;adc.c: 95: FVRCON = 0b11000011;
 14000  1F32  30C3               	movlw	195
 14001  1F33  0032               	movlb	18	; select bank18
 14002  1F34  008C               	movwf	12	;volatile
 14003                           
 14004                           ;adc.c: 96: ADCLK = 0x3F;
 14005  1F35  303F               	movlw	63
 14006  1F36  0021               	movlb	1	; select bank1
 14007  1F37  0098               	movwf	24	;volatile
 14008                           
 14009                           ;adc.c: 103: ADREF = 0x03;
 14010  1F38  3003               	movlw	3
 14011  1F39  009A               	movwf	26	;volatile
 14012                           
 14013                           ;adc.c: 106: ADCAP = 0x00;
 14014  1F3A  019B               	clrf	27	;volatile
 14015                           
 14016                           ;adc.c: 109: ADPRE = 0x07;
 14017  1F3B  3007               	movlw	7
 14018  1F3C  009C               	movwf	28	;volatile
 14019                           
 14020                           ;adc.c: 111: ADACQ = 0x00;
 14021  1F3D  019D               	clrf	29	;volatile
 14022                           
 14023                           ;adc.c: 113: ADPCH = 0x00;
 14024  1F3E  019E               	clrf	30	;volatile
 14025                           
 14026                           ;adc.c: 115: ADRPT = 0x00;
 14027  1F3F  0022               	movlb	2	; select bank2
 14028  1F40  018D               	clrf	13	;volatile
 14029                           
 14030                           ;adc.c: 117: ADLTHL = 0x00;
 14031  1F41  018E               	clrf	14	;volatile
 14032                           
 14033                           ;adc.c: 119: ADLTHH = 0x00;
 14034  1F42  018F               	clrf	15	;volatile
 14035                           
 14036                           ;adc.c: 121: ADUTHL = 0x00;
 14037  1F43  0190               	clrf	16	;volatile
 14038                           
 14039                           ;adc.c: 123: ADUTHH = 0x00;
 14040  1F44  0191               	clrf	17	;volatile
 14041                           
 14042                           ;adc.c: 125: ADSTPTL = 0x00;
 14043  1F45  0192               	clrf	18	;volatile
 14044                           
 14045                           ;adc.c: 127: ADSTPTH = 0x00;
 14046  1F46  0193               	clrf	19	;volatile
 14047                           
 14048                           ;adc.c: 129: ADCON0 = 0x84;
 14049  1F47  3084               	movlw	132
 14050  1F48  0021               	movlb	1	; select bank1
 14051  1F49  0093               	movwf	19	;volatile
 14052  1F4A  0008               	return
 14053  1F4B                     __end_of_ADC_Initialize:	
 14054                           
 14055                           	psect	text31
 14056  1EDE                     __ptext31:	
 14057 ;; *************** function _PWM7_LoadDutyValue *****************
 14058 ;; Defined at:
 14059 ;;		line 37 in file "pwm.c"
 14060 ;; Parameters:    Size  Location     Type
 14061 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 14062 ;; Auto vars:     Size  Location     Type
 14063 ;;		None
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  1    wreg      void 
 14066 ;; Registers used:
 14067 ;;		wreg, status,2, status,0
 14068 ;; Tracked objects:
 14069 ;;		On entry : 0/0
 14070 ;;		On exit  : 0/0
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;Total ram usage:        4 bytes
 14078 ;; Hardware stack levels used:    1
 14079 ;; This function calls:
 14080 ;;		Nothing
 14081 ;; This function is called by:
 14082 ;;		_main
 14083 ;; This function uses a non-reentrant model
 14084 ;;
 14085                           
 14086                           
 14087                           ;psect for function _PWM7_LoadDutyValue
 14088  1EDE                     _PWM7_LoadDutyValue:	
 14089                           
 14090                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 14091                           
 14092                           ;incstack = 0
 14093                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 14094  1EDE  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 14095  1EDF  00F3               	movwf	??_PWM7_LoadDutyValue+1
 14096  1EE0  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 14097  1EE1  00F2               	movwf	??_PWM7_LoadDutyValue
 14098  1EE2  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 14099  1EE3  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 14100  1EE4  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 14101  1EE5  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 14102  1EE6  0872               	movf	??_PWM7_LoadDutyValue,w
 14103  1EE7  0027               	movlb	7	; select bank7
 14104  1EE8  0091               	movwf	17	;volatile
 14105                           
 14106                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 14107  1EE9  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 14108  1EEA  3903               	andlw	3
 14109  1EEB  00F2               	movwf	??_PWM7_LoadDutyValue
 14110  1EEC  3005               	movlw	5
 14111  1EED                     u4605:	
 14112  1EED  35F2               	lslf	??_PWM7_LoadDutyValue,f
 14113  1EEE  3EFF               	addlw	-1
 14114  1EEF  1D03               	skipz
 14115  1EF0  2EED               	goto	u4605
 14116  1EF1  3572               	lslf	??_PWM7_LoadDutyValue,w
 14117  1EF2  0090               	movwf	16	;volatile
 14118  1EF3  0008               	return
 14119  1EF4                     __end_of_PWM7_LoadDutyValue:	
 14120                           
 14121                           	psect	text32
 14122  1EC8                     __ptext32:	
 14123 ;; *************** function _PWM6_LoadDutyValue *****************
 14124 ;; Defined at:
 14125 ;;		line 30 in file "pwm.c"
 14126 ;; Parameters:    Size  Location     Type
 14127 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 14128 ;; Auto vars:     Size  Location     Type
 14129 ;;		None
 14130 ;; Return value:  Size  Location     Type
 14131 ;;                  1    wreg      void 
 14132 ;; Registers used:
 14133 ;;		wreg, status,2, status,0
 14134 ;; Tracked objects:
 14135 ;;		On entry : 0/0
 14136 ;;		On exit  : 0/0
 14137 ;;		Unchanged: 0/0
 14138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14143 ;;Total ram usage:        4 bytes
 14144 ;; Hardware stack levels used:    1
 14145 ;; This function calls:
 14146 ;;		Nothing
 14147 ;; This function is called by:
 14148 ;;		_main
 14149 ;; This function uses a non-reentrant model
 14150 ;;
 14151                           
 14152                           
 14153                           ;psect for function _PWM6_LoadDutyValue
 14154  1EC8                     _PWM6_LoadDutyValue:	
 14155                           
 14156                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 14157                           
 14158                           ;incstack = 0
 14159                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14160  1EC8  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 14161  1EC9  00F3               	movwf	??_PWM6_LoadDutyValue+1
 14162  1ECA  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 14163  1ECB  00F2               	movwf	??_PWM6_LoadDutyValue
 14164  1ECC  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14165  1ECD  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 14166  1ECE  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14167  1ECF  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 14168  1ED0  0872               	movf	??_PWM6_LoadDutyValue,w
 14169  1ED1  0027               	movlb	7	; select bank7
 14170  1ED2  008D               	movwf	13	;volatile
 14171                           
 14172                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 14173  1ED3  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 14174  1ED4  3903               	andlw	3
 14175  1ED5  00F2               	movwf	??_PWM6_LoadDutyValue
 14176  1ED6  3005               	movlw	5
 14177  1ED7                     u4595:	
 14178  1ED7  35F2               	lslf	??_PWM6_LoadDutyValue,f
 14179  1ED8  3EFF               	addlw	-1
 14180  1ED9  1D03               	skipz
 14181  1EDA  2ED7               	goto	u4595
 14182  1EDB  3572               	lslf	??_PWM6_LoadDutyValue,w
 14183  1EDC  008C               	movwf	12	;volatile
 14184  1EDD  0008               	return
 14185  1EDE                     __end_of_PWM6_LoadDutyValue:	
 14186                           
 14187                           	psect	text33
 14188  1EB2                     __ptext33:	
 14189 ;; *************** function _PWM1_LoadDutyValue *****************
 14190 ;; Defined at:
 14191 ;;		line 44 in file "pwm.c"
 14192 ;; Parameters:    Size  Location     Type
 14193 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 14194 ;; Auto vars:     Size  Location     Type
 14195 ;;		None
 14196 ;; Return value:  Size  Location     Type
 14197 ;;                  1    wreg      void 
 14198 ;; Registers used:
 14199 ;;		wreg, status,2, status,0
 14200 ;; Tracked objects:
 14201 ;;		On entry : 0/0
 14202 ;;		On exit  : 0/0
 14203 ;;		Unchanged: 0/0
 14204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14208 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14209 ;;Total ram usage:        4 bytes
 14210 ;; Hardware stack levels used:    1
 14211 ;; This function calls:
 14212 ;;		Nothing
 14213 ;; This function is called by:
 14214 ;;		_main
 14215 ;; This function uses a non-reentrant model
 14216 ;;
 14217                           
 14218                           
 14219                           ;psect for function _PWM1_LoadDutyValue
 14220  1EB2                     _PWM1_LoadDutyValue:	
 14221                           
 14222                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 14223                           
 14224                           ;incstack = 0
 14225                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 14226  1EB2  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 14227  1EB3  00F3               	movwf	??_PWM1_LoadDutyValue+1
 14228  1EB4  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 14229  1EB5  00F2               	movwf	??_PWM1_LoadDutyValue
 14230  1EB6  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 14231  1EB7  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 14232  1EB8  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 14233  1EB9  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 14234  1EBA  0872               	movf	??_PWM1_LoadDutyValue,w
 14235  1EBB  0026               	movlb	6	; select bank6
 14236  1EBC  008D               	movwf	13	;volatile
 14237                           
 14238                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 14239  1EBD  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 14240  1EBE  3903               	andlw	3
 14241  1EBF  00F2               	movwf	??_PWM1_LoadDutyValue
 14242  1EC0  3005               	movlw	5
 14243  1EC1                     u4615:	
 14244  1EC1  35F2               	lslf	??_PWM1_LoadDutyValue,f
 14245  1EC2  3EFF               	addlw	-1
 14246  1EC3  1D03               	skipz
 14247  1EC4  2EC1               	goto	u4615
 14248  1EC5  3572               	lslf	??_PWM1_LoadDutyValue,w
 14249  1EC6  008C               	movwf	12	;volatile
 14250  1EC7  0008               	return
 14251  1EC8                     __end_of_PWM1_LoadDutyValue:	
 14252                           
 14253                           	psect	text34
 14254  1747                     __ptext34:	
 14255 ;; *************** function _LCDWriteInt *****************
 14256 ;; Defined at:
 14257 ;;		line 190 in file "lcd.c"
 14258 ;; Parameters:    Size  Location     Type
 14259 ;;  value           2    8[BANK0 ] int 
 14260 ;;  fieldLength     1   10[BANK0 ] char 
 14261 ;;  numPlaces       1   11[BANK0 ] unsigned char 
 14262 ;;  sign            1   12[BANK0 ] unsigned char 
 14263 ;; Auto vars:     Size  Location     Type
 14264 ;;  str             5   17[BANK0 ] unsigned char [5]
 14265 ;;  i               1   23[BANK0 ] unsigned char 
 14266 ;;  j               1   22[BANK0 ] unsigned char 
 14267 ;; Return value:  Size  Location     Type
 14268 ;;                  1    wreg      void 
 14269 ;; Registers used:
 14270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14271 ;; Tracked objects:
 14272 ;;		On entry : 0/0
 14273 ;;		On exit  : 0/0
 14274 ;;		Unchanged: 0/0
 14275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14276 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14277 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14278 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14279 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14280 ;;Total ram usage:       16 bytes
 14281 ;; Hardware stack levels used:    1
 14282 ;; Hardware stack levels required when called:    2
 14283 ;; This function calls:
 14284 ;;		_LCDWriteCharacter
 14285 ;;		___awdiv
 14286 ;;		___lwmod
 14287 ;; This function is called by:
 14288 ;;		_main
 14289 ;; This function uses a non-reentrant model
 14290 ;;
 14291                           
 14292                           
 14293                           ;psect for function _LCDWriteInt
 14294  1747                     _LCDWriteInt:	
 14295                           
 14296                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 14297                           
 14298                           ;incstack = 0
 14299                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14300  1747  3040               	movlw	low LCDWriteInt@F14396
 14301  1748  0086               	movwf	6
 14302  1749  3001               	movlw	high LCDWriteInt@F14396
 14303  174A  0087               	movwf	7
 14304  174B  3031               	movlw	low LCDWriteInt@str
 14305  174C  0084               	movwf	4
 14306  174D  3000               	movlw	high LCDWriteInt@str
 14307  174E  0085               	movwf	5
 14308  174F  3005               	movlw	5
 14309  1750  0020               	movlb	0	; select bank0
 14310  1751  00AD               	movwf	??_LCDWriteInt
 14311  1752                     u4500:	
 14312  1752  0016               	moviw fsr1++
 14313  1753  001A               	movwi fsr0++
 14314  1754  0BAD               	decfsz	??_LCDWriteInt,f
 14315  1755  2F52               	goto	u4500
 14316                           
 14317                           ;lcd.c: 193: uint8_t i=4,j=0;
 14318  1756  3004               	movlw	4
 14319  1757  00AD               	movwf	??_LCDWriteInt
 14320  1758  082D               	movf	??_LCDWriteInt,w
 14321  1759  00B7               	movwf	LCDWriteInt@i
 14322  175A  01B6               	clrf	LCDWriteInt@j
 14323                           
 14324                           ;lcd.c: 195: if(value<0)
 14325  175B  1FA9               	btfss	LCDWriteInt@value+1,7
 14326  175C  2F68               	goto	l3563
 14327                           
 14328                           ;lcd.c: 196: {
 14329                           ;lcd.c: 197: LCDWriteCharacter('-');
 14330  175D  302D               	movlw	45
 14331  175E  3193  233B  3197   	fcall	_LCDWriteCharacter
 14332                           
 14333                           ;lcd.c: 198: value=value*-1;
 14334  1761  0020               	movlb	0	; select bank0
 14335  1762  09A8               	comf	LCDWriteInt@value,f
 14336  1763  09A9               	comf	LCDWriteInt@value+1,f
 14337  1764  0AA8               	incf	LCDWriteInt@value,f
 14338  1765  1903               	skipnz
 14339  1766  0AA9               	incf	LCDWriteInt@value+1,f
 14340                           
 14341                           ;lcd.c: 199: }
 14342  1767  2F6F               	goto	l3573
 14343  1768                     l3563:	
 14344                           
 14345                           ;lcd.c: 201: else
 14346                           ;lcd.c: 202: {
 14347                           ;lcd.c: 203: if(sign == 1)
 14348  1768  032C               	decf	LCDWriteInt@sign,w
 14349  1769  1D03               	btfss	3,2
 14350  176A  2F6F               	goto	l3573
 14351                           
 14352                           ;lcd.c: 204: {
 14353                           ;lcd.c: 205: LCDWriteCharacter('+');
 14354  176B  302B               	movlw	43
 14355  176C  3193  233B  3197   	fcall	_LCDWriteCharacter
 14356  176F                     l3573:	
 14357                           ;lcd.c: 206: }
 14358                           ;lcd.c: 207: }
 14359                           ;lcd.c: 209: while(value)
 14360                           
 14361  176F  0020               	movlb	0	; select bank0
 14362  1770  0828               	movf	LCDWriteInt@value,w
 14363  1771  0429               	iorwf	LCDWriteInt@value+1,w
 14364  1772  1903               	btfsc	3,2
 14365  1773  2F9C               	goto	l3575
 14366                           
 14367                           ;lcd.c: 210: {
 14368                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 14369  1774  300A               	movlw	10
 14370  1775  00F0               	movwf	___lwmod@divisor
 14371  1776  3000               	movlw	0
 14372  1777  00F1               	movwf	___lwmod@divisor+1
 14373  1778  0020               	movlb	0	; select bank0
 14374  1779  0829               	movf	LCDWriteInt@value+1,w
 14375  177A  00F3               	movwf	___lwmod@dividend+1
 14376  177B  0828               	movf	LCDWriteInt@value,w
 14377  177C  00F2               	movwf	___lwmod@dividend
 14378  177D  319F  27D4  3197   	fcall	___lwmod
 14379  1780  0870               	movf	?___lwmod,w
 14380  1781  0020               	movlb	0	; select bank0
 14381  1782  00AD               	movwf	??_LCDWriteInt
 14382  1783  0837               	movf	LCDWriteInt@i,w
 14383  1784  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 14384  1785  0086               	movwf	6
 14385  1786  0187               	clrf	7
 14386  1787  082D               	movf	??_LCDWriteInt,w
 14387  1788  0081               	movwf	1
 14388                           
 14389                           ;lcd.c: 212: value=value/10;
 14390  1789  300A               	movlw	10
 14391  178A  00F0               	movwf	___awdiv@divisor
 14392  178B  3000               	movlw	0
 14393  178C  00F1               	movwf	___awdiv@divisor+1
 14394  178D  0829               	movf	LCDWriteInt@value+1,w
 14395  178E  00F3               	movwf	___awdiv@dividend+1
 14396  178F  0828               	movf	LCDWriteInt@value,w
 14397  1790  00F2               	movwf	___awdiv@dividend
 14398  1791  3192  2248  3197   	fcall	___awdiv
 14399  1794  0871               	movf	?___awdiv+1,w
 14400  1795  0020               	movlb	0	; select bank0
 14401  1796  00A9               	movwf	LCDWriteInt@value+1
 14402  1797  0870               	movf	?___awdiv,w
 14403  1798  00A8               	movwf	LCDWriteInt@value
 14404                           
 14405                           ;lcd.c: 213: i--;
 14406  1799  3001               	movlw	1
 14407  179A  02B7               	subwf	LCDWriteInt@i,f
 14408  179B  2F6F               	goto	l3573
 14409  179C                     l3575:	
 14410                           
 14411                           ;lcd.c: 214: }
 14412                           ;lcd.c: 215: if(fieldLength==-1)
 14413  179C  0A2A               	incf	LCDWriteInt@fieldLength,w
 14414  179D  1903               	btfsc	3,2
 14415  179E  2FA4               	goto	l3581
 14416  179F  2FAC               	goto	l3583
 14417  17A0                     l3579:	
 14418                           ;lcd.c: 216: {
 14419                           ;lcd.c: 217: while(str[j]==0)
 14420                           
 14421                           
 14422                           ;lcd.c: 218: {
 14423                           ;lcd.c: 219: j++;
 14424  17A0  3001               	movlw	1
 14425  17A1  00AD               	movwf	??_LCDWriteInt
 14426  17A2  082D               	movf	??_LCDWriteInt,w
 14427  17A3  07B6               	addwf	LCDWriteInt@j,f
 14428  17A4                     l3581:	
 14429  17A4  0836               	movf	LCDWriteInt@j,w
 14430  17A5  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 14431  17A6  0086               	movwf	6
 14432  17A7  0187               	clrf	7
 14433  17A8  0801               	movf	1,w
 14434  17A9  1D03               	btfss	3,2
 14435  17AA  2FB2               	goto	l3585
 14436  17AB  2FA0               	goto	l3579
 14437  17AC                     l3583:	
 14438                           ;lcd.c: 220: }
 14439                           ;lcd.c: 221: }
 14440                           
 14441                           
 14442                           ;lcd.c: 222: else
 14443                           ;lcd.c: 223: {
 14444                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 14445  17AC  032A               	decf	LCDWriteInt@fieldLength,w
 14446  17AD  3AFF               	xorlw	255
 14447  17AE  3E05               	addlw	5
 14448  17AF  00AD               	movwf	??_LCDWriteInt
 14449  17B0  082D               	movf	??_LCDWriteInt,w
 14450  17B1  00B6               	movwf	LCDWriteInt@j
 14451  17B2                     l3585:	
 14452                           
 14453                           ;lcd.c: 225: }
 14454                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 14455  17B2  0836               	movf	LCDWriteInt@j,w
 14456  17B3  00AD               	movwf	??_LCDWriteInt
 14457  17B4  082D               	movf	??_LCDWriteInt,w
 14458  17B5  00B7               	movwf	LCDWriteInt@i
 14459  17B6                     l3591:	
 14460  17B6  082B               	movf	LCDWriteInt@numPlaces,w
 14461  17B7  00AD               	movwf	??_LCDWriteInt
 14462  17B8  01AE               	clrf	??_LCDWriteInt+1
 14463  17B9  09AD               	comf	??_LCDWriteInt,f
 14464  17BA  09AE               	comf	??_LCDWriteInt+1,f
 14465  17BB  0AAD               	incf	??_LCDWriteInt,f
 14466  17BC  1903               	skipnz
 14467  17BD  0AAE               	incf	??_LCDWriteInt+1,f
 14468  17BE  082D               	movf	??_LCDWriteInt,w
 14469  17BF  3E05               	addlw	5
 14470  17C0  00AF               	movwf	??_LCDWriteInt+2
 14471  17C1  3000               	movlw	0
 14472  17C2  3D2E               	addwfc	??_LCDWriteInt+1,w
 14473  17C3  00B0               	movwf	??_LCDWriteInt+3
 14474  17C4  0830               	movf	??_LCDWriteInt+3,w
 14475  17C5  3A80               	xorlw	128
 14476  17C6  3C80               	sublw	128
 14477  17C7  1D03               	skipz
 14478  17C8  2FCB               	goto	u4565
 14479  17C9  082F               	movf	??_LCDWriteInt+2,w
 14480  17CA  0237               	subwf	LCDWriteInt@i,w
 14481  17CB                     u4565:	
 14482  17CB  1803               	btfsc	3,0
 14483  17CC  2FDD               	goto	l3593
 14484                           
 14485                           ;lcd.c: 228: {
 14486                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 14487  17CD  0020               	movlb	0	; select bank0
 14488  17CE  0837               	movf	LCDWriteInt@i,w
 14489  17CF  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 14490  17D0  0086               	movwf	6
 14491  17D1  0187               	clrf	7
 14492  17D2  0801               	movf	1,w
 14493  17D3  3E30               	addlw	48
 14494  17D4  3193  233B  3197   	fcall	_LCDWriteCharacter
 14495  17D7  3001               	movlw	1
 14496  17D8  0020               	movlb	0	; select bank0
 14497  17D9  00AD               	movwf	??_LCDWriteInt
 14498  17DA  082D               	movf	??_LCDWriteInt,w
 14499  17DB  07B7               	addwf	LCDWriteInt@i,f
 14500  17DC  2FB6               	goto	l3591
 14501  17DD                     l3593:	
 14502                           
 14503                           ;lcd.c: 230: }
 14504                           ;lcd.c: 232: if(numPlaces == 1)
 14505  17DD  0020               	movlb	0	; select bank0
 14506  17DE  032B               	decf	LCDWriteInt@numPlaces,w
 14507  17DF  1D03               	btfss	3,2
 14508  17E0  2FEB               	goto	l3597
 14509                           
 14510                           ;lcd.c: 233: {
 14511                           ;lcd.c: 234: LCDWriteCharacter(46);
 14512  17E1  302E               	movlw	46
 14513  17E2  3193  233B  3197   	fcall	_LCDWriteCharacter
 14514                           
 14515                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 14516  17E5  0020               	movlb	0	; select bank0
 14517  17E6  0835               	movf	LCDWriteInt@str+4,w
 14518  17E7  3E30               	addlw	48
 14519  17E8  3193  233B  3197   	fcall	_LCDWriteCharacter
 14520  17EB                     l3597:	
 14521                           
 14522                           ;lcd.c: 236: }
 14523                           ;lcd.c: 238: if(numPlaces == 2)
 14524  17EB  3002               	movlw	2
 14525  17EC  0020               	movlb	0	; select bank0
 14526  17ED  062B               	xorwf	LCDWriteInt@numPlaces,w
 14527  17EE  1D03               	btfss	3,2
 14528  17EF  0008               	return
 14529                           
 14530                           ;lcd.c: 239: {
 14531                           ;lcd.c: 240: LCDWriteCharacter(46);
 14532  17F0  302E               	movlw	46
 14533  17F1  3193  233B  3197   	fcall	_LCDWriteCharacter
 14534                           
 14535                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 14536  17F4  0020               	movlb	0	; select bank0
 14537  17F5  0834               	movf	LCDWriteInt@str+3,w
 14538  17F6  3E30               	addlw	48
 14539  17F7  3193  233B  3197   	fcall	_LCDWriteCharacter
 14540                           
 14541                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 14542  17FA  0020               	movlb	0	; select bank0
 14543  17FB  0835               	movf	LCDWriteInt@str+4,w
 14544  17FC  3E30               	addlw	48
 14545  17FD  3193  233B         	fcall	_LCDWriteCharacter
 14546  17FF  0008               	return
 14547  1800                     __end_of_LCDWriteInt:	
 14548                           
 14549                           	psect	text35
 14550  1FD4                     __ptext35:	
 14551 ;; *************** function ___lwmod *****************
 14552 ;; Defined at:
 14553 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 14554 ;; Parameters:    Size  Location     Type
 14555 ;;  divisor         2    0[COMMON] unsigned int 
 14556 ;;  dividend        2    2[COMMON] unsigned int 
 14557 ;; Auto vars:     Size  Location     Type
 14558 ;;  counter         1    5[COMMON] unsigned char 
 14559 ;; Return value:  Size  Location     Type
 14560 ;;                  2    0[COMMON] unsigned int 
 14561 ;; Registers used:
 14562 ;;		wreg, status,2, status,0
 14563 ;; Tracked objects:
 14564 ;;		On entry : 0/0
 14565 ;;		On exit  : 0/0
 14566 ;;		Unchanged: 0/0
 14567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14571 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14572 ;;Total ram usage:        6 bytes
 14573 ;; Hardware stack levels used:    1
 14574 ;; This function calls:
 14575 ;;		Nothing
 14576 ;; This function is called by:
 14577 ;;		_LCDWriteInt
 14578 ;; This function uses a non-reentrant model
 14579 ;;
 14580                           
 14581                           
 14582                           ;psect for function ___lwmod
 14583  1FD4                     ___lwmod:	
 14584                           
 14585                           ;incstack = 0
 14586                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 14587  1FD4  0870               	movf	___lwmod@divisor,w
 14588  1FD5  0471               	iorwf	___lwmod@divisor+1,w
 14589  1FD6  1903               	btfsc	3,2
 14590  1FD7  2FFB               	goto	l3289
 14591  1FD8  01F5               	clrf	___lwmod@counter
 14592  1FD9  0AF5               	incf	___lwmod@counter,f
 14593  1FDA                     l3279:	
 14594  1FDA  1BF1               	btfsc	___lwmod@divisor+1,7
 14595  1FDB  2FE6               	goto	l3281
 14596  1FDC  3001               	movlw	1
 14597  1FDD                     u3855:	
 14598  1FDD  35F0               	lslf	___lwmod@divisor,f
 14599  1FDE  0DF1               	rlf	___lwmod@divisor+1,f
 14600  1FDF  0B89               	decfsz	9,f
 14601  1FE0  2FDD               	goto	u3855
 14602  1FE1  3001               	movlw	1
 14603  1FE2  00F4               	movwf	??___lwmod
 14604  1FE3  0874               	movf	??___lwmod,w
 14605  1FE4  07F5               	addwf	___lwmod@counter,f
 14606  1FE5  2FDA               	goto	l3279
 14607  1FE6                     l3281:	
 14608  1FE6  0871               	movf	___lwmod@divisor+1,w
 14609  1FE7  0273               	subwf	___lwmod@dividend+1,w
 14610  1FE8  1D03               	skipz
 14611  1FE9  2FEC               	goto	u3875
 14612  1FEA  0870               	movf	___lwmod@divisor,w
 14613  1FEB  0272               	subwf	___lwmod@dividend,w
 14614  1FEC                     u3875:	
 14615  1FEC  1C03               	skipc
 14616  1FED  2FF2               	goto	l3285
 14617  1FEE  0870               	movf	___lwmod@divisor,w
 14618  1FEF  02F2               	subwf	___lwmod@dividend,f
 14619  1FF0  0871               	movf	___lwmod@divisor+1,w
 14620  1FF1  3BF3               	subwfb	___lwmod@dividend+1,f
 14621  1FF2                     l3285:	
 14622  1FF2  3001               	movlw	1
 14623  1FF3                     u3885:	
 14624  1FF3  36F1               	lsrf	___lwmod@divisor+1,f
 14625  1FF4  0CF0               	rrf	___lwmod@divisor,f
 14626  1FF5  0B89               	decfsz	9,f
 14627  1FF6  2FF3               	goto	u3885
 14628  1FF7  3001               	movlw	1
 14629  1FF8  02F5               	subwf	___lwmod@counter,f
 14630  1FF9  1D03               	btfss	3,2
 14631  1FFA  2FE6               	goto	l3281
 14632  1FFB                     l3289:	
 14633  1FFB  0873               	movf	___lwmod@dividend+1,w
 14634  1FFC  00F1               	movwf	?___lwmod+1
 14635  1FFD  0872               	movf	___lwmod@dividend,w
 14636  1FFE  00F0               	movwf	?___lwmod
 14637  1FFF  0008               	return
 14638  2000                     __end_of___lwmod:	
 14639                           
 14640                           	psect	text36
 14641  1248                     __ptext36:	
 14642 ;; *************** function ___awdiv *****************
 14643 ;; Defined at:
 14644 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 14645 ;; Parameters:    Size  Location     Type
 14646 ;;  divisor         2    0[COMMON] int 
 14647 ;;  dividend        2    2[COMMON] int 
 14648 ;; Auto vars:     Size  Location     Type
 14649 ;;  quotient        2    7[COMMON] int 
 14650 ;;  sign            1    6[COMMON] unsigned char 
 14651 ;;  counter         1    5[COMMON] unsigned char 
 14652 ;; Return value:  Size  Location     Type
 14653 ;;                  2    0[COMMON] int 
 14654 ;; Registers used:
 14655 ;;		wreg, status,2, status,0
 14656 ;; Tracked objects:
 14657 ;;		On entry : 0/0
 14658 ;;		On exit  : 0/0
 14659 ;;		Unchanged: 0/0
 14660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14662 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;Total ram usage:        9 bytes
 14666 ;; Hardware stack levels used:    1
 14667 ;; This function calls:
 14668 ;;		Nothing
 14669 ;; This function is called by:
 14670 ;;		_LCDWriteInt
 14671 ;;		_main
 14672 ;; This function uses a non-reentrant model
 14673 ;;
 14674                           
 14675                           
 14676                           ;psect for function ___awdiv
 14677  1248                     ___awdiv:	
 14678                           
 14679                           ;incstack = 0
 14680                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14681  1248  01F6               	clrf	___awdiv@sign
 14682  1249  1FF1               	btfss	___awdiv@divisor+1,7
 14683  124A  2A52               	goto	l3199
 14684  124B  09F0               	comf	___awdiv@divisor,f
 14685  124C  09F1               	comf	___awdiv@divisor+1,f
 14686  124D  0AF0               	incf	___awdiv@divisor,f
 14687  124E  1903               	skipnz
 14688  124F  0AF1               	incf	___awdiv@divisor+1,f
 14689  1250  01F6               	clrf	___awdiv@sign
 14690  1251  0AF6               	incf	___awdiv@sign,f
 14691  1252                     l3199:	
 14692  1252  1FF3               	btfss	___awdiv@dividend+1,7
 14693  1253  2A5D               	goto	l3205
 14694  1254  09F2               	comf	___awdiv@dividend,f
 14695  1255  09F3               	comf	___awdiv@dividend+1,f
 14696  1256  0AF2               	incf	___awdiv@dividend,f
 14697  1257  1903               	skipnz
 14698  1258  0AF3               	incf	___awdiv@dividend+1,f
 14699  1259  3001               	movlw	1
 14700  125A  00F4               	movwf	??___awdiv
 14701  125B  0874               	movf	??___awdiv,w
 14702  125C  06F6               	xorwf	___awdiv@sign,f
 14703  125D                     l3205:	
 14704  125D  01F7               	clrf	___awdiv@quotient
 14705  125E  01F8               	clrf	___awdiv@quotient+1
 14706  125F  0870               	movf	___awdiv@divisor,w
 14707  1260  0471               	iorwf	___awdiv@divisor+1,w
 14708  1261  1903               	btfsc	3,2
 14709  1262  2A8C               	goto	l3227
 14710  1263  01F5               	clrf	___awdiv@counter
 14711  1264  0AF5               	incf	___awdiv@counter,f
 14712  1265                     l3215:	
 14713  1265  1BF1               	btfsc	___awdiv@divisor+1,7
 14714  1266  2A71               	goto	l3217
 14715  1267  3001               	movlw	1
 14716  1268                     u3675:	
 14717  1268  35F0               	lslf	___awdiv@divisor,f
 14718  1269  0DF1               	rlf	___awdiv@divisor+1,f
 14719  126A  0B89               	decfsz	9,f
 14720  126B  2A68               	goto	u3675
 14721  126C  3001               	movlw	1
 14722  126D  00F4               	movwf	??___awdiv
 14723  126E  0874               	movf	??___awdiv,w
 14724  126F  07F5               	addwf	___awdiv@counter,f
 14725  1270  2A65               	goto	l3215
 14726  1271                     l3217:	
 14727  1271  3001               	movlw	1
 14728  1272                     u3695:	
 14729  1272  35F7               	lslf	___awdiv@quotient,f
 14730  1273  0DF8               	rlf	___awdiv@quotient+1,f
 14731  1274  0B89               	decfsz	9,f
 14732  1275  2A72               	goto	u3695
 14733  1276  0871               	movf	___awdiv@divisor+1,w
 14734  1277  0273               	subwf	___awdiv@dividend+1,w
 14735  1278  1D03               	skipz
 14736  1279  2A7C               	goto	u3705
 14737  127A  0870               	movf	___awdiv@divisor,w
 14738  127B  0272               	subwf	___awdiv@dividend,w
 14739  127C                     u3705:	
 14740  127C  1C03               	skipc
 14741  127D  2A83               	goto	l3223
 14742  127E  0870               	movf	___awdiv@divisor,w
 14743  127F  02F2               	subwf	___awdiv@dividend,f
 14744  1280  0871               	movf	___awdiv@divisor+1,w
 14745  1281  3BF3               	subwfb	___awdiv@dividend+1,f
 14746  1282  1477               	bsf	___awdiv@quotient,0
 14747  1283                     l3223:	
 14748  1283  3001               	movlw	1
 14749  1284                     u3715:	
 14750  1284  36F1               	lsrf	___awdiv@divisor+1,f
 14751  1285  0CF0               	rrf	___awdiv@divisor,f
 14752  1286  0B89               	decfsz	9,f
 14753  1287  2A84               	goto	u3715
 14754  1288  3001               	movlw	1
 14755  1289  02F5               	subwf	___awdiv@counter,f
 14756  128A  1D03               	btfss	3,2
 14757  128B  2A71               	goto	l3217
 14758  128C                     l3227:	
 14759  128C  0876               	movf	___awdiv@sign,w
 14760  128D  1903               	btfsc	3,2
 14761  128E  2A94               	goto	l3231
 14762  128F  09F7               	comf	___awdiv@quotient,f
 14763  1290  09F8               	comf	___awdiv@quotient+1,f
 14764  1291  0AF7               	incf	___awdiv@quotient,f
 14765  1292  1903               	skipnz
 14766  1293  0AF8               	incf	___awdiv@quotient+1,f
 14767  1294                     l3231:	
 14768  1294  0878               	movf	___awdiv@quotient+1,w
 14769  1295  00F1               	movwf	?___awdiv+1
 14770  1296  0877               	movf	___awdiv@quotient,w
 14771  1297  00F0               	movwf	?___awdiv
 14772  1298  0008               	return
 14773  1299                     __end_of___awdiv:	
 14774                           
 14775                           	psect	text37
 14776  133B                     __ptext37:	
 14777 ;; *************** function _LCDWriteCharacter *****************
 14778 ;; Defined at:
 14779 ;;		line 140 in file "lcd.c"
 14780 ;; Parameters:    Size  Location     Type
 14781 ;;  character       1    wreg     const unsigned char 
 14782 ;; Auto vars:     Size  Location     Type
 14783 ;;  character       1    5[BANK0 ] const unsigned char 
 14784 ;;  base            2    6[BANK0 ] unsigned int 
 14785 ;; Return value:  Size  Location     Type
 14786 ;;                  1    wreg      void 
 14787 ;; Registers used:
 14788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14789 ;; Tracked objects:
 14790 ;;		On entry : 0/0
 14791 ;;		On exit  : 0/0
 14792 ;;		Unchanged: 0/0
 14793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14795 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14796 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14797 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14798 ;;Total ram usage:        6 bytes
 14799 ;; Hardware stack levels used:    1
 14800 ;; Hardware stack levels required when called:    1
 14801 ;; This function calls:
 14802 ;;		_LCDWrite
 14803 ;;		___wmul
 14804 ;; This function is called by:
 14805 ;;		_LCDWriteInt
 14806 ;;		_main
 14807 ;;		_LCDWriteString
 14808 ;; This function uses a non-reentrant model
 14809 ;;
 14810                           
 14811                           
 14812                           ;psect for function _LCDWriteCharacter
 14813  133B                     _LCDWriteCharacter:	
 14814                           
 14815                           ;incstack = 0
 14816                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14817                           ;LCDWriteCharacter@character stored from wreg
 14818  133B  0020               	movlb	0	; select bank0
 14819  133C  00A5               	movwf	LCDWriteCharacter@character
 14820                           
 14821                           ;lcd.c: 142: uint16_t base;
 14822                           ;lcd.c: 143: base = character - 0x20;
 14823  133D  0825               	movf	LCDWriteCharacter@character,w
 14824  133E  3EE0               	addlw	224
 14825  133F  00A6               	movwf	LCDWriteCharacter@base
 14826  1340  30FF               	movlw	255
 14827  1341  1803               	skipnc
 14828  1342  3000               	movlw	0
 14829  1343  00A7               	movwf	LCDWriteCharacter@base+1
 14830                           
 14831                           ;lcd.c: 144: base *= 3;
 14832  1344  3003               	movlw	3
 14833  1345  00F9               	movwf	___wmul@multiplier
 14834  1346  3000               	movlw	0
 14835  1347  00FA               	movwf	___wmul@multiplier+1
 14836  1348  0827               	movf	LCDWriteCharacter@base+1,w
 14837  1349  00FC               	movwf	___wmul@multiplicand+1
 14838  134A  0826               	movf	LCDWriteCharacter@base,w
 14839  134B  00FB               	movwf	___wmul@multiplicand
 14840  134C  319F  270E  3193   	fcall	___wmul
 14841  134F  087A               	movf	?___wmul+1,w
 14842  1350  0020               	movlb	0	; select bank0
 14843  1351  00A7               	movwf	LCDWriteCharacter@base+1
 14844  1352  0879               	movf	?___wmul,w
 14845  1353  00A6               	movwf	LCDWriteCharacter@base
 14846                           
 14847                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 14848  1354  0827               	movf	LCDWriteCharacter@base+1,w
 14849  1355  0085               	movwf	5
 14850  1356  0826               	movf	LCDWriteCharacter@base,w
 14851  1357  0084               	movwf	4
 14852  1358  3000               	movlw	low (_fonts| (0+32768))
 14853  1359  0784               	addwf	4,f
 14854  135A  3090               	movlw	high (_fonts| (0+32768))
 14855  135B  3D85               	addwfc	5,f
 14856  135C  0800               	movf	0,w	;code access
 14857  135D  00A2               	movwf	??_LCDWriteCharacter
 14858  135E  0822               	movf	??_LCDWriteCharacter,w
 14859  135F  00F0               	movwf	LCDWrite@data
 14860  1360  3001               	movlw	1
 14861  1361  319F  2789  3193   	fcall	_LCDWrite
 14862                           
 14863                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 14864  1364  0020               	movlb	0	; select bank0
 14865  1365  0826               	movf	LCDWriteCharacter@base,w
 14866  1366  3E01               	addlw	1
 14867  1367  00A2               	movwf	??_LCDWriteCharacter
 14868  1368  3000               	movlw	0
 14869  1369  3D27               	addwfc	LCDWriteCharacter@base+1,w
 14870  136A  00A3               	movwf	??_LCDWriteCharacter+1
 14871  136B  3000               	movlw	low (_fonts| (0+32768))
 14872  136C  0722               	addwf	??_LCDWriteCharacter,w
 14873  136D  0084               	movwf	4
 14874  136E  3090               	movlw	high (_fonts| (0+32768))
 14875  136F  3D23               	addwfc	??_LCDWriteCharacter+1,w
 14876  1370  0085               	movwf	5
 14877  1371  0800               	movf	0,w	;code access
 14878  1372  00A4               	movwf	??_LCDWriteCharacter+2
 14879  1373  0824               	movf	??_LCDWriteCharacter+2,w
 14880  1374  00F0               	movwf	LCDWrite@data
 14881  1375  3001               	movlw	1
 14882  1376  319F  2789  3193   	fcall	_LCDWrite
 14883                           
 14884                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 14885  1379  0020               	movlb	0	; select bank0
 14886  137A  0826               	movf	LCDWriteCharacter@base,w
 14887  137B  3E02               	addlw	2
 14888  137C  00A2               	movwf	??_LCDWriteCharacter
 14889  137D  3000               	movlw	0
 14890  137E  3D27               	addwfc	LCDWriteCharacter@base+1,w
 14891  137F  00A3               	movwf	??_LCDWriteCharacter+1
 14892  1380  3000               	movlw	low (_fonts| (0+32768))
 14893  1381  0722               	addwf	??_LCDWriteCharacter,w
 14894  1382  0084               	movwf	4
 14895  1383  3090               	movlw	high (_fonts| (0+32768))
 14896  1384  3D23               	addwfc	??_LCDWriteCharacter+1,w
 14897  1385  0085               	movwf	5
 14898  1386  0800               	movf	0,w	;code access
 14899  1387  00A4               	movwf	??_LCDWriteCharacter+2
 14900  1388  0824               	movf	??_LCDWriteCharacter+2,w
 14901  1389  00F0               	movwf	LCDWrite@data
 14902  138A  3001               	movlw	1
 14903  138B  319F  2789  3193   	fcall	_LCDWrite
 14904                           
 14905                           ;lcd.c: 148: LCDWrite(1, 0x00);
 14906  138E  01F0               	clrf	LCDWrite@data
 14907  138F  3001               	movlw	1
 14908  1390  319F  2789         	fcall	_LCDWrite
 14909  1392  0008               	return
 14910  1393                     __end_of_LCDWriteCharacter:	
 14911                           
 14912                           	psect	text38
 14913  1F0E                     __ptext38:	
 14914 ;; *************** function ___wmul *****************
 14915 ;; Defined at:
 14916 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14917 ;; Parameters:    Size  Location     Type
 14918 ;;  multiplier      2    9[COMMON] unsigned int 
 14919 ;;  multiplicand    2   11[COMMON] unsigned int 
 14920 ;; Auto vars:     Size  Location     Type
 14921 ;;  product         2    0[BANK0 ] unsigned int 
 14922 ;; Return value:  Size  Location     Type
 14923 ;;                  2    9[COMMON] unsigned int 
 14924 ;; Registers used:
 14925 ;;		wreg, status,2, status,0
 14926 ;; Tracked objects:
 14927 ;;		On entry : 0/0
 14928 ;;		On exit  : 0/0
 14929 ;;		Unchanged: 0/0
 14930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14934 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14935 ;;Total ram usage:        6 bytes
 14936 ;; Hardware stack levels used:    1
 14937 ;; This function calls:
 14938 ;;		Nothing
 14939 ;; This function is called by:
 14940 ;;		_readAnalog
 14941 ;;		_LCDWriteCharacter
 14942 ;;		_main
 14943 ;; This function uses a non-reentrant model
 14944 ;;
 14945                           
 14946                           
 14947                           ;psect for function ___wmul
 14948  1F0E                     ___wmul:	
 14949                           
 14950                           ;incstack = 0
 14951                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14952  1F0E  0020               	movlb	0	; select bank0
 14953  1F0F  01A0               	clrf	___wmul@product
 14954  1F10  01A1               	clrf	___wmul@product+1
 14955  1F11                     l2847:	
 14956  1F11  1C79               	btfss	___wmul@multiplier,0
 14957  1F12  2F18               	goto	l575
 14958  1F13  087B               	movf	___wmul@multiplicand,w
 14959  1F14  0020               	movlb	0	; select bank0
 14960  1F15  07A0               	addwf	___wmul@product,f
 14961  1F16  087C               	movf	___wmul@multiplicand+1,w
 14962  1F17  3DA1               	addwfc	___wmul@product+1,f
 14963  1F18                     l575:	
 14964  1F18  3001               	movlw	1
 14965  1F19                     u3225:	
 14966  1F19  35FB               	lslf	___wmul@multiplicand,f
 14967  1F1A  0DFC               	rlf	___wmul@multiplicand+1,f
 14968  1F1B  0B89               	decfsz	9,f
 14969  1F1C  2F19               	goto	u3225
 14970  1F1D  3001               	movlw	1
 14971  1F1E                     u3235:	
 14972  1F1E  36FA               	lsrf	___wmul@multiplier+1,f
 14973  1F1F  0CF9               	rrf	___wmul@multiplier,f
 14974  1F20  0B89               	decfsz	9,f
 14975  1F21  2F1E               	goto	u3235
 14976  1F22  0879               	movf	___wmul@multiplier,w
 14977  1F23  047A               	iorwf	___wmul@multiplier+1,w
 14978  1F24  1D03               	btfss	3,2
 14979  1F25  2F11               	goto	l2847
 14980  1F26  0020               	movlb	0	; select bank0
 14981  1F27  0821               	movf	___wmul@product+1,w
 14982  1F28  00FA               	movwf	?___wmul+1
 14983  1F29  0820               	movf	___wmul@product,w
 14984  1F2A  00F9               	movwf	?___wmul
 14985  1F2B  0008               	return
 14986  1F2C                     __end_of___wmul:	
 14987                           
 14988                           	psect	text39
 14989  1F89                     __ptext39:	
 14990 ;; *************** function _LCDWrite *****************
 14991 ;; Defined at:
 14992 ;;		line 280 in file "lcd.c"
 14993 ;; Parameters:    Size  Location     Type
 14994 ;;  data_or_comm    1    wreg     unsigned char 
 14995 ;;  data            1    0[COMMON] unsigned char 
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;  data_or_comm    1    2[COMMON] unsigned char 
 14998 ;;  i               1    4[COMMON] unsigned char 
 14999 ;;  d               1    3[COMMON] unsigned char 
 15000 ;; Return value:  Size  Location     Type
 15001 ;;                  1    wreg      void 
 15002 ;; Registers used:
 15003 ;;		wreg, status,2, status,0
 15004 ;; Tracked objects:
 15005 ;;		On entry : 0/0
 15006 ;;		On exit  : 0/0
 15007 ;;		Unchanged: 0/0
 15008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15009 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15010 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15011 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15012 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;Total ram usage:        5 bytes
 15014 ;; Hardware stack levels used:    1
 15015 ;; This function calls:
 15016 ;;		Nothing
 15017 ;; This function is called by:
 15018 ;;		_gotoXY
 15019 ;;		_LCDWriteCharacter
 15020 ;;		_LCDClear
 15021 ;;		_LCDInit
 15022 ;;		_LCDBitmap
 15023 ;; This function uses a non-reentrant model
 15024 ;;
 15025                           
 15026                           
 15027                           ;psect for function _LCDWrite
 15028  1F89                     _LCDWrite:	
 15029                           
 15030                           ;incstack = 0
 15031                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 15032                           ;LCDWrite@data_or_command stored from wreg
 15033  1F89  00F2               	movwf	LCDWrite@data_or_command
 15034                           
 15035                           ;lcd.c: 282: uint8_t i,d;
 15036                           ;lcd.c: 284: d=data;
 15037  1F8A  0870               	movf	LCDWrite@data,w
 15038  1F8B  00F1               	movwf	??_LCDWrite
 15039  1F8C  0871               	movf	??_LCDWrite,w
 15040  1F8D  00F3               	movwf	LCDWrite@d
 15041                           
 15042                           ;lcd.c: 286: if(data_or_command == 0)
 15043  1F8E  0872               	movf	LCDWrite@data_or_command,w
 15044  1F8F  1D03               	btfss	3,2
 15045  1F90  2F94               	goto	l217
 15046                           
 15047                           ;lcd.c: 287: {
 15048                           ;lcd.c: 288: LATAbits.LATA2 = 0;
 15049  1F91  0020               	movlb	0	; select bank0
 15050  1F92  1116               	bcf	22,2	;volatile
 15051                           
 15052                           ;lcd.c: 289: }
 15053  1F93  2F96               	goto	l218
 15054  1F94                     l217:	
 15055                           
 15056                           ;lcd.c: 290: else
 15057                           ;lcd.c: 291: {
 15058                           ;lcd.c: 292: LATAbits.LATA2 = 1;
 15059  1F94  0020               	movlb	0	; select bank0
 15060  1F95  1516               	bsf	22,2	;volatile
 15061  1F96                     l218:	
 15062                           
 15063                           ;lcd.c: 293: }
 15064                           ;lcd.c: 295: LATAbits.LATA1 = 0;
 15065  1F96  1096               	bcf	22,1	;volatile
 15066                           
 15067                           ;lcd.c: 297: for(i=0;i<8;i++)
 15068  1F97  01F4               	clrf	LCDWrite@i
 15069  1F98  3008               	movlw	8
 15070  1F99  0274               	subwf	LCDWrite@i,w
 15071  1F9A  1803               	btfsc	3,0
 15072  1F9B  2FAC               	goto	l220
 15073  1F9C                     l219:	
 15074                           
 15075                           ;lcd.c: 298: {
 15076                           ;lcd.c: 299: LATAbits.LATA3 = 0;
 15077  1F9C  1196               	bcf	22,3	;volatile
 15078                           
 15079                           ;lcd.c: 301: if(d&0x80)
 15080  1F9D  1FF3               	btfss	LCDWrite@d,7
 15081  1F9E  2FA0               	goto	l221
 15082                           
 15083                           ;lcd.c: 302: {
 15084                           ;lcd.c: 303: LATAbits.LATA3 = 1;
 15085  1F9F  1596               	bsf	22,3	;volatile
 15086  1FA0                     l221:	
 15087                           
 15088                           ;lcd.c: 304: }
 15089                           ;lcd.c: 306: LATAbits.LATA4 = 1;
 15090  1FA0  1616               	bsf	22,4	;volatile
 15091                           
 15092                           ;lcd.c: 308: d<<=1;
 15093  1FA1  1003               	clrc
 15094  1FA2  0DF3               	rlf	LCDWrite@d,f
 15095                           
 15096                           ;lcd.c: 310: LATAbits.LATA4=0;
 15097  1FA3  1216               	bcf	22,4	;volatile
 15098  1FA4  3001               	movlw	1
 15099  1FA5  00F1               	movwf	??_LCDWrite
 15100  1FA6  0871               	movf	??_LCDWrite,w
 15101  1FA7  07F4               	addwf	LCDWrite@i,f
 15102  1FA8  3008               	movlw	8
 15103  1FA9  0274               	subwf	LCDWrite@i,w
 15104  1FAA  1C03               	skipc
 15105  1FAB  2F9C               	goto	l219
 15106  1FAC                     l220:	
 15107                           
 15108                           ;lcd.c: 311: }
 15109                           ;lcd.c: 313: LATAbits.LATA1 = 1;
 15110  1FAC  1496               	bsf	22,1	;volatile
 15111  1FAD  0008               	return
 15112  1FAE                     __end_of_LCDWrite:	
 15113                           
 15114                           	psect	text40
 15115  1393                     __ptext40:	
 15116 ;; *************** function _Battery_State_Machine *****************
 15117 ;; Defined at:
 15118 ;;		line 35 in file "battery_charger.c"
 15119 ;; Parameters:    Size  Location     Type
 15120 ;;		None
 15121 ;; Auto vars:     Size  Location     Type
 15122 ;;		None
 15123 ;; Return value:  Size  Location     Type
 15124 ;;                  1    wreg      void 
 15125 ;; Registers used:
 15126 ;;		wreg, status,2, status,0
 15127 ;; Tracked objects:
 15128 ;;		On entry : 0/0
 15129 ;;		On exit  : 0/0
 15130 ;;		Unchanged: 0/0
 15131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15136 ;;Total ram usage:        1 bytes
 15137 ;; Hardware stack levels used:    1
 15138 ;; This function calls:
 15139 ;;		Nothing
 15140 ;; This function is called by:
 15141 ;;		_main
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           
 15146                           ;psect for function _Battery_State_Machine
 15147  1393                     _Battery_State_Machine:	
 15148                           
 15149                           ;battery_charger.c: 37: if(battery_state == PRECHARGE)
 15150                           
 15151                           ;incstack = 0
 15152                           ; Regs used in _Battery_State_Machine: [wreg+status,2+status,0]
 15153  1393  3003               	movlw	3
 15154  1394  0022               	movlb	2	; select bank2
 15155  1395  066E               	xorwf	_battery_state^(0+256),w
 15156  1396  1D03               	btfss	3,2
 15157  1397  2BBA               	goto	l3465
 15158                           
 15159                           ;battery_charger.c: 38: {
 15160                           ;battery_charger.c: 39: if(voltage[1] < 1075)
 15161  1398  083B               	movf	((_voltage+1)^(0+256)+2),w
 15162  1399  3A80               	xorlw	128
 15163  139A  00F0               	movwf	??_Battery_State_Machine
 15164  139B  3084               	movlw	132
 15165  139C  0270               	subwf	??_Battery_State_Machine,w
 15166  139D  1D03               	skipz
 15167  139E  2BA1               	goto	u4275
 15168  139F  3033               	movlw	51
 15169  13A0  023A               	subwf	(_voltage^(0+256)+2),w
 15170  13A1                     u4275:	
 15171  13A1  1803               	skipnc
 15172  13A2  2BB0               	goto	l3463
 15173                           
 15174                           ;battery_charger.c: 40: {
 15175                           ;battery_charger.c: 41: if(state_counter)
 15176  13A3  0022               	movlb	2	; select bank2
 15177  13A4  086A               	movf	_state_counter^(0+256),w
 15178  13A5  046B               	iorwf	(_state_counter+1)^(0+256),w
 15179  13A6  1903               	btfsc	3,2
 15180  13A7  2BAD               	goto	l107
 15181                           
 15182                           ;battery_charger.c: 42: {
 15183                           ;battery_charger.c: 43: state_counter-=1;
 15184  13A8  3001               	movlw	1
 15185  13A9  02EA               	subwf	_state_counter^(0+256),f
 15186  13AA  3000               	movlw	0
 15187  13AB  3BEB               	subwfb	(_state_counter+1)^(0+256),f
 15188                           
 15189                           ;battery_charger.c: 44: }
 15190  13AC  0008               	return
 15191  13AD                     l107:	
 15192                           
 15193                           ;battery_charger.c: 45: else
 15194                           ;battery_charger.c: 46: {
 15195                           ;battery_charger.c: 47: battery_state = FAULT;
 15196  13AD  01EE               	clrf	_battery_state^(0+256)
 15197  13AE  0AEE               	incf	_battery_state^(0+256),f
 15198                           
 15199                           ;battery_charger.c: 48: }
 15200                           ;battery_charger.c: 49: }
 15201  13AF  0008               	return
 15202  13B0                     l3463:	
 15203                           
 15204                           ;battery_charger.c: 50: else
 15205                           ;battery_charger.c: 51: {
 15206                           ;battery_charger.c: 52: battery_state = CHARGE;
 15207  13B0  3004               	movlw	4
 15208  13B1  00F0               	movwf	??_Battery_State_Machine
 15209  13B2  0870               	movf	??_Battery_State_Machine,w
 15210  13B3  0022               	movlb	2	; select bank2
 15211  13B4  00EE               	movwf	_battery_state^(0+256)
 15212                           
 15213                           ;battery_charger.c: 53: { Iref = 40; };
 15214  13B5  3028               	movlw	40
 15215  13B6  00E6               	movwf	_Iref^(0+256)
 15216  13B7  3000               	movlw	0
 15217  13B8  00E7               	movwf	(_Iref^(0+256)+1)
 15218                           
 15219                           ;battery_charger.c: 54: }
 15220                           ;battery_charger.c: 55: }
 15221  13B9  0008               	return
 15222  13BA                     l3465:	
 15223                           
 15224                           ;battery_charger.c: 56: else if(battery_state == CHARGE)
 15225  13BA  3004               	movlw	4
 15226  13BB  066E               	xorwf	_battery_state^(0+256),w
 15227  13BC  1D03               	btfss	3,2
 15228  13BD  2BED               	goto	l3479
 15229                           
 15230                           ;battery_charger.c: 57: {
 15231                           ;battery_charger.c: 58: if((!Imode0))
 15232  13BE  0021               	movlb	1	; select bank1
 15233  13BF  086E               	movf	_Imode0^(0+128),w
 15234  13C0  1D03               	btfss	3,2
 15235  13C1  0008               	return
 15236                           
 15237                           ;battery_charger.c: 59: {
 15238                           ;battery_charger.c: 60: if(current[1] < Imin)
 15239  13C2  0022               	movlb	2	; select bank2
 15240  13C3  0833               	movf	((_current+1)^(0+256)+2),w
 15241  13C4  3A80               	xorlw	128
 15242  13C5  00F0               	movwf	??_Battery_State_Machine
 15243  13C6  0869               	movf	(_Imin+1)^(0+256),w
 15244  13C7  3A80               	xorlw	128
 15245  13C8  0270               	subwf	??_Battery_State_Machine,w
 15246  13C9  1D03               	skipz
 15247  13CA  2BCD               	goto	u4315
 15248  13CB  0868               	movf	_Imin^(0+256),w
 15249  13CC  0232               	subwf	(_current^(0+256)+2),w
 15250  13CD                     u4315:	
 15251  13CD  1803               	skipnc
 15252  13CE  2BE0               	goto	l3475
 15253                           
 15254                           ;battery_charger.c: 61: {
 15255                           ;battery_charger.c: 62: IminCount-=2;
 15256  13CF  3002               	movlw	2
 15257  13D0  0022               	movlb	2	; select bank2
 15258  13D1  02EC               	subwf	_IminCount^(0+256),f
 15259  13D2  3000               	movlw	0
 15260  13D3  3BED               	subwfb	(_IminCount+1)^(0+256),f
 15261                           
 15262                           ;battery_charger.c: 63: if(IminCount<2)
 15263  13D4  3000               	movlw	0
 15264  13D5  026D               	subwf	(_IminCount+1)^(0+256),w
 15265  13D6  3002               	movlw	2
 15266  13D7  1903               	skipnz
 15267  13D8  026C               	subwf	_IminCount^(0+256),w
 15268  13D9  1803               	skipnc
 15269  13DA  0008               	return
 15270                           
 15271                           ;battery_charger.c: 64: {
 15272                           ;battery_charger.c: 65: battery_state = FLOAT;
 15273  13DB  3005               	movlw	5
 15274  13DC  00F0               	movwf	??_Battery_State_Machine
 15275  13DD  0870               	movf	??_Battery_State_Machine,w
 15276  13DE  00EE               	movwf	_battery_state^(0+256)
 15277                           
 15278                           ;battery_charger.c: 66: }
 15279                           ;battery_charger.c: 67: }
 15280  13DF  0008               	return
 15281  13E0                     l3475:	
 15282                           
 15283                           ;battery_charger.c: 68: else
 15284                           ;battery_charger.c: 69: {
 15285                           ;battery_charger.c: 70: if(IminCount<10)IminCount+=1;
 15286  13E0  3000               	movlw	0
 15287  13E1  0022               	movlb	2	; select bank2
 15288  13E2  026D               	subwf	(_IminCount+1)^(0+256),w
 15289  13E3  300A               	movlw	10
 15290  13E4  1903               	skipnz
 15291  13E5  026C               	subwf	_IminCount^(0+256),w
 15292  13E6  1803               	skipnc
 15293  13E7  0008               	return
 15294  13E8  3001               	movlw	1
 15295  13E9  07EC               	addwf	_IminCount^(0+256),f
 15296  13EA  3000               	movlw	0
 15297  13EB  3DED               	addwfc	(_IminCount+1)^(0+256),f
 15298                           
 15299                           ;battery_charger.c: 71: }
 15300                           ;battery_charger.c: 72: }
 15301                           ;battery_charger.c: 73: }
 15302  13EC  0008               	return
 15303  13ED                     l3479:	
 15304                           
 15305                           ;battery_charger.c: 74: else if(battery_state == FLOAT)
 15306  13ED  3005               	movlw	5
 15307  13EE  066E               	xorwf	_battery_state^(0+256),w
 15308  13EF  1D03               	btfss	3,2
 15309  13F0  0008               	return
 15310                           
 15311                           ;battery_charger.c: 75: {
 15312                           ;battery_charger.c: 76: { Vref = 1380; };
 15313  13F1  3064               	movlw	100
 15314  13F2  00E4               	movwf	_Vref^(0+256)
 15315  13F3  3005               	movlw	5
 15316  13F4  00E5               	movwf	(_Vref^(0+256)+1)
 15317                           
 15318                           ;battery_charger.c: 77: { Iref = 20; };
 15319  13F5  3014               	movlw	20
 15320  13F6  00E6               	movwf	_Iref^(0+256)
 15321  13F7  3000               	movlw	0
 15322  13F8  00E7               	movwf	(_Iref^(0+256)+1)
 15323                           
 15324                           ;battery_charger.c: 81: {
 15325                           
 15326                           ;battery_charger.c: 78: }
 15327  13F9  0008               	return
 15328  13FA                     __end_of_Battery_State_Machine:	
 15329  007E                     btemp	set	126	;btemp
 15330  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    339
    Data        18
    BSS         85
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     76      79
    BANK2            80      0      79
    BANK3            48      0      32
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 36
		 -> log@coeff(CODE[36]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _tempCalc->___xxtofl
    _log->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___xxtofl
    _calculateCurrent0->___xxtofl
    ___fltol->___xxtofl
    ___fldiv->___xxtofl
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _log->_eval_poly
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    _readAnalog->___aldiv
    _calculateCurrent1->___fltol
    _calculateCurrent0->___fltol
    ___fltol->___fldiv
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   82208
                                             35 BANK1     41    41      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            14    12      2   31972
                                             21 BANK1     14    12      2
                            _ADCRead (ARG)
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  7     3      4   16090
                                             14 BANK1      7     3      4
                            ___fladd
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     376
                                              0 COMMON     7     2      5
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           18    10      8    7061
                                             76 BANK0      4     4      0
                                              0 BANK1     14     6      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    3607
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              16     8      8     460
                                              0 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3245
                                              0 BANK1      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             24    16      8    3048
                                             52 BANK0     24    16      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    1843
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    5654
                                             37 BANK0      3     3      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    5654
                                             37 BANK0      3     3      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1234
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     761
                                             26 BANK0     11     7      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    3659
                                              0 BANK0     26    18      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    5091
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1178
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    3890
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    2666
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    9334
                                              8 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1060
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    2294
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1    1178
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv
     ___lwmod
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___fldiv
     __Umul8_16 (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _frexp (ARG)
   ___fltol
     ___fldiv (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___wmul
     ___awdiv (ARG)
   ___xxtofl
   _calculateCurrent0
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _calculateCurrent1
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead
   _tempCalc
     _ADCRead (ARG)
     ___fladd (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___fldiv (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___flsub (ARG)
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
     ___fltol (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _log (ARG)
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___xxtofl
       _eval_poly
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4C      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               30      0      20      11       66.7%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jun 30 01:04:51 2018

                       ___fldiv@aexp 0039                         ___fldiv@bexp 0038  
                                  _j 0151               LCDWriteInt@fieldLength 002A  
                       ___fldiv@sign 002D              __size_of_PWM_Initialize 001F  
                        __CFG_CP$OFF 0000                                   l60 1EAB  
                                 l57 1EA4                         ___awdiv@sign 0076  
                ___wmul@multiplicand 007B          __size_of_PWM6_LoadDutyValue 0016  
                __Umul8_16@word_mpld 0076                          __CFG_LVP$ON 0000  
                                l107 13AD                                  l220 1FAC  
                                l221 1FA0                                  l217 1F94  
                                l218 1F96                                  l219 1F9C  
                                l702 16C8                        LCDClear@index 0079  
                                l624 148A                                  l721 1467  
                                l575 1F18                                  l831 0EE9  
                                l904 0BE5                                  l905 0BFD  
                                l833 0ECC                                  l907 0C0A  
                                l827 0E51                                  l861 0FE0  
                                l942 159F                                  l935 0229  
                                l848 0F81                                  l961 1F7A  
                                l883 0AD5                                  l955 15E9  
                                l956 15F3                                  l948 15D5  
                                l869 0FF8                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                                _log 084F                      __end_of_ADCRead 1EB2  
                    _TMR2_Initialize 1E5D                         __CFG_BORV$LO 0000  
                                wreg 0009                         ___flmul@aexp 004C  
                       ___flmul@bexp 004D                         ___flmul@sign 0047  
                       ___flmul@temp 0052                         ___flmul@prod 004E  
                    __end_of_LCDInit 120A                         ?_LCDWriteInt 0028  
                       __CFG_ZCD$OFF 0000                         ___fltol@exp1 0044  
                               l3035 1FCF                                 l3205 125D  
                               l3029 1FBB                                 l3141 088A  
                               l3231 1294                                 l3223 1283  
                               l3215 1265                                 l3135 0874  
                               l3217 1271                                 l3313 0AA6  
                               l3241 1415                                 l3161 149B  
                               l3227 128C                                 l3403 0BA2  
                               l3171 14B9                                 l2523 0E1E  
                               l3405 0BA4                                 l3333 0ACA  
                               l3317 0AA9                                 l2621 0F0B  
                               l2613 0EF7                                 l2605 0EE4  
                               l3415 0BCD                                 l3343 0AF0  
                               l3319 0AB1                                 l3503 0846  
                               l3183 14E4                                 l2623 0F0D  
                               l2631 0F1C                                 l2551 0E49  
                               l2527 0E21                                 l3281 1FE6  
                               l3337 0ACD                                 l3265 145E  
                               l3257 1443                                 l3169 14AB  
                               l3513 151F                                 l2641 0F79  
                               l2529 0E29                                 l2801 01A8  
                               l2721 002E                                 l3267 146A  
                               l3259 1451                                 l3187 14F2  
                               l3179 14D9                                 l3523 154B  
                               l2547 0E46                                 l2811 01C1  
                               l3285 1FF2                                 l3429 0C06  
                               l3349 0B04                                 l3533 1559  
                               l3525 154D                                 l2557 0E5B  
                               l2477 1F74                                 l2821 01EA  
                               l2717 0024                                 l3463 13B0  
                               l3199 1252                                 l3279 1FDA  
                               l3375 0B69                                 l3519 1539  
                               l2663 0FA7                                 l2831 0216  
                               l2735 0047                                 l2719 0026  
                               l2911 169C                                 l3465 13BA  
                               l3289 1FFB                                 l3393 0B74  
                               l3369 0B50                                 l3377 0B32  
                               l2921 1597                                 l3449 0A63  
                               l3545 157E                                 l2673 0FB2  
                               l2657 0FA0                                 l2649 0F93  
                               l2665 0FA9                                 l2825 01FF  
                               l2809 01BF                                 l2737 0049  
                               l3705 02AC                                 l3475 13E0  
                               l3563 1768                                 l3395 0B8B  
                               l3379 0B6E                                 l2931 15B2  
                               l3643 1303                                 l3491 081E  
                               l3539 1564                                 l3547 1580  
                               l2675 0FB4                                 l2595 0ED4  
                               l2587 0E97                                 l2747 005F  
                               l2739 0051                                 l3723 032F  
                               l3581 17A4                                 l3573 176F  
                               l2941 15E3                                 l2933 15C2  
                               l3637 12B2                                 l2693 0FF0  
                               l2597 0ED6                                 l3479 13ED  
                               l2847 1F11                                 l3591 17B6  
                               l3583 17AC                                 l3575 179C  
                               l2927 15AE                                 l3495 0824  
                               l3735 0356                                 l3593 17DD  
                               l3585 17B2                                 l2697 0FF4  
                               l2873 1734                                 l2865 16E2  
                               l3729 034D                                 l3681 026B  
                               l3579 17A0                                 l2955 160E  
                               l2939 15DA                                 l3755 03A1  
                               l3691 0283                                 l3597 17EB  
                               l2869 170B                                 l2893 121F  
                               l3773 03E2                                 l3749 038C  
                               l3693 0285                                 l2799 0191  
                               l3783 0401                                 l3767 03D7  
                               l3759 03A8                                 l3769 03DA  
                               l3699 028B                                 ?_log 00AE  
                               l3895 07C5                                 _LATA 0016  
                               _LATB 0017                                 _LATC 0018  
                               u3105 019D                                 u3035 00D5  
                               u4005 0B41                                 u3045 0104  
                               u3055 015A                                 u3225 1F19  
                               u4025 0B4A                                 u3065 0171  
                               _T2PR 028D                                 u3235 1F1E  
                               u4035 0B5E                                 u3075 0180  
                               u3500 11CD                                 u2620 0EBB  
                               u4205 09B0                                 u3085 0194  
                               u2630 0EBC                                 u4215 09EE  
                               u2615 0EB0                                 u3175 01D8  
                               u4065 0B77                                 u4225 0A3D  
                               u2465 1F7B                                 u3185 01F3  
                               _T4PR 0293                                 u4315 13CD  
                               u4155 0BBB                                 u3435 15FB  
                               u3355 15BB                                 u3195 0209  
                               u4500 1752                                 u4165 0BD6  
                               u4085 0B80                                 u3605 14CE  
                               u4175 0BEF                                 u3375 15CF  
                               u3615 14DA                                 u4255 0A6F  
                               u4415 150D                                 u2743 0F2E  
                               u2735 0F11                                 u3705 127C  
                               u4425 1519                                 u2665 0EDA  
                               u4275 13A1                                 u3715 1284  
                               u3395 15DD                                 u4355 0815  
                               u4195 0956                                 u4435 1529  
                               u4605 1EED                                 u3485 1FB9  
                               u4445 1535                                 u4615 1EC1  
                               u3495 1FCD                                 u3815 145F  
                               u3575 14AE                                 u4455 1543  
                               u4625 12AC                                 u4385 082F  
                               u2785 0F94                                 u3675 1268  
                               u3755 141E                                 u4635 12FD  
                               u3595 14BA                                 u4565 17CB  
                               u2885 0FCB                                 u4805 039A  
                               u3695 1272                                 u3855 1FDD  
                               u3785 1444                                 u4745 033E  
                               u3875 1FEC                                 u4595 1ED7  
                               u4907 156F                                 u4835 03C7  
                               u3885 1FF3                                 u4917 114C  
                               u4927 115B                                 u4785 0385  
                               u3995 0B3A                                 u4897 0270  
                tempCalc@analogValue 00B5                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 0168  
                               _Iref 0166                                 _Iout 0149  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Vref 0164                                 _main 0236  
                      _state_counter 016A                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               log@x 00AE                        __CFG_BOREN$ON 0000  
                               start 0002                      ___fldiv@new_exp 0032  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                   __end_of_LCDClear 1FD4                                ??_log 00B2  
                       main@fastLoop 00C7  __size_of_Init_Battery_State_Machine 001A  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 1FAE  
      __end_of_OSCILLATOR_Initialize 080A                        ___fltol@sign1 0043  
                    __end_of___aldiv 14FB                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                    __end_of___fladd 1000                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                    __end_of___fldiv 0C1B                                _ADREF 009A  
                    __end_of___awdiv 1299                                _ADPRE 009C  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___flmul 0236                      __end_of___flsub 1198  
                    __end_of___fltol 1479                      ___awdiv@divisor 0070  
                              _T2CON 028E                                _LATA5 00B5  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 2000  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 1E6B  
             ?_Battery_State_Machine 0070                                _cc_cv 0152  
                              _frexp 120A                                _fonts 1000  
                              _errno 0145                                main@j 00E9  
                       main@slowLoop 00D2                                status 0003  
                              wtemp0 007E                      __initialization 07C8  
                        log@exponent 00B3                         __end_of_main 07C8  
                  readAnalog@channel 0026              __end_of_TMR2_Initialize 1E6B  
                          ??_ADCRead 0073                               ??_main 00C3  
                          ??_LCDInit 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             ?_frexp 0070                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _CCPR1H 030D  
                             _CCPR1L 030C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                             _RB0PPS 0F18                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                   __end_of___xxtofl 1617                       __CFG_PWRTE$OFF 0000  
                             _Imode0 00EE                               _Imode1 0163  
                       _CCPTMRS0bits 021E                         _CCPTMRS1bits 021F  
                             ___flge 16AD                            ??___aldiv 0078  
                          ??___fladd 005C                               ___wmul 1F0E  
                          ??___fldiv 0028                            ??___awdiv 0074  
                     __CFG_STVREN$ON 0000                            ??___flmul 0042  
                     _PWM_Initialize 1F4B                            ??___flsub 007E  
                          ??___fltol 003E                            ??___lwmod 0074  
                             _gotoXY 1E8A                               _button 00ED  
            __end_of_TMR4_Initialize 1E79                     ___awdiv@quotient 0077  
                             _warmup 014B                               _totals 01A0  
                   __end_of_tempCalc 0E04                         LCDWrite@data 0070  
                 __size_of__Umul8_16 001F                         LCDWriteInt@i 0037  
                       LCDWriteInt@j 0036             readAnalog@analog_channel 003A  
                         ___flge@ff1 0070                           ___flge@ff2 0074  
                       ___xxtofl@arg 007A                         ___xxtofl@exp 0079  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 112F  
                       ___xxtofl@val 0070                 __size_of_LCDWriteInt 00B9  
                   __end_oflog@coeff 1824              __end_of__initialization 07FD  
                          ?_LCDWrite 0070                   ?_SYSTEM_Initialize 0070  
                       eval_poly@res 006C                           ___fltol@f1 003A  
             __end_of_PWM_Initialize 1F6A                       __pcstackCOMMON 0070  
                       __pidataBANK1 0009                         __pidataBANK2 1E79  
                ??_SYSTEM_Initialize 007B                        __end_of_frexp 1248  
                      __end_of_fonts 112F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                   _PWM1_LoadDutyValue 1EB2  
                   ?_TMR2_Initialize 0070                           _cc_cv_mode 080A  
        __size_of_PWM7_LoadDutyValue 0016                       main@efficiency 00DE  
                ?_PWM1_LoadDutyValue 0070                    LCDWriteInt@F14396 0140  
                  _calculateCurrent0 1299                    _calculateCurrent1 12EA  
                            ??_frexp 0075            __end_of_SYSTEM_Initialize 1163  
                         __pbssBANK1 00EC                           __pbssBANK2 0120  
                         __pbssBANK3 01A0                   ?_calculateCurrent0 0070  
                 ?_calculateCurrent1 0070                   __size_of_eval_poly 0096  
                         ??_LCDClear 0078                       main@faultCount 00CE  
                         ??_LCDWrite 0071                 ??_PWM1_LoadDutyValue 0072  
                ??_calculateCurrent0 0045                  ??_calculateCurrent1 0045  
                  __end_of__Umul8_16 1F89                      ?_PWM_Initialize 0070  
                         __pmaintext 0236                              ?___flge 0070  
                            ?___wmul 0079                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 1EDE                              ?_gotoXY 0075  
                            _ADCRead 1E9D                     ?_TMR4_Initialize 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 0070  
                            _LCDInit 11CF                            ?___xxtofl 0070  
          __end_of_calculateCurrent0 12EA            __end_of_calculateCurrent1 133B  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _PWM6DCH 038D  
                            _PWM6DCL 038C                              _PWM7DCH 0391  
                            _PWM7DCL 0390                              _PWM6CON 038E  
                            _PWM7CON 0392                              _PPSLOCK 0E8F  
                     main@menuButton 00E4                       main@dutyCycle1 00E2  
                     main@dutyCycle6 00EA                       main@dutyCycle7 00E5  
                         _lastButton 00EC                            ?_tempCalc 00B5  
                         _readAnalog 0940                              ___aldiv 1479  
                    __size_of___flge 009A                              ___fladd 0E04  
                            ___fldiv 0A8C                              ___awdiv 1248  
                         _readButton 14FB                              ___flmul 000A  
                            ___flsub 1163                              ___fltol 13FA  
                    __size_of___wmul 001E                   main@displayRefresh 00D3  
                            ___lwmod 1FD4                      __size_of_gotoXY 0013  
                  __end_of_eval_poly 16AD                              _analogs 0120  
                            __ptext1 0C1B                              __ptext2 084F  
                            __ptext3 120A                              __ptext4 1617  
                            __ptext5 000A                              __ptext6 1F6A  
                            __ptext7 16AD                              __ptext8 1163  
                            __ptext9 0E04                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 0801                            _T2CONbits 028E  
                            _current 0130                         __size_of_log 00F1  
                         ??___xxtofl 0074                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074                            _T4CONbits 0294  
           ??_PIN_MANAGER_Initialize 0070                              _samples 2120  
         __size_of_SYSTEM_Initialize 0034                              clrloop0 1E46  
                            _voltage 0138         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 0026  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 1E51                              initloop 1E52  
                         ??_tempCalc 007E                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 133B                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070                          ___fladd@grs 006B  
         __size_of_calculateCurrent0 0051           __size_of_calculateCurrent1 0051  
                      ___xxtofl@sign 0078                            _TRISAbits 0011  
                ??_LCDWriteCharacter 0022                          ___fldiv@grs 0034  
                        ___fldiv@rem 002E                     __CFG_FEXTOSC$OFF 0000  
                        ___flmul@grs 0048         PWM1_LoadDutyValue@dutyCycle1 0070  
                        _CCP1CONbits 030E                  __size_of_cc_cv_mode 0045  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0025  
                  __size_of_LCDWrite 0025                          ?_readAnalog 0026  
          __end_of_LCDWriteCharacter 1393                          ?_readButton 0070  
                     __end_of___flge 1747                       __end_of___wmul 1F2C  
                     _ADC_Initialize 1F2C                       __end_of_gotoXY 1E9D  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 016C  
                start_initialization 07C8                           eval_poly@d 00A4  
                         eval_poly@n 00A6                           eval_poly@x 00A0  
                  main@faultNotReset 00D0      __size_of_PIN_MANAGER_Initialize 0037  
                        __end_of_log 0940                        ??_LCDWriteInt 002D  
                         frexp@value 0070                     ??_PWM_Initialize 0070  
                    main@batteryTemp 00C5                     __CFG_LPBOREN$OFF 0000  
                           ??___flge 0020                    tempCalc@steinhart 00BF  
                           ??___wmul 007D               __end_of_ADC_Initialize 1F4B  
                          __Umul8_16 1F6A                        _tempCalc$1351 00BB  
                        __pdataBANK1 00EE                          __pdataBANK2 0153  
         __end_of_PWM7_LoadDutyValue 1EF4                             ??_gotoXY 0076  
                           ?_ADCRead 0070         PWM7_LoadDutyValue@dutyCycle7 0070  
                          ___fladd@a 0058                            ___fladd@b 0054  
                           ?_LCDInit 0070                            ___fldiv@a 0020  
                          ___fldiv@b 0024                          __pbssBIGRAM 2120  
     __size_of_Battery_State_Machine 0067        __end_of_Battery_State_Machine 13FA  
                          ___flmul@a 003E                            ___flmul@b 003A  
                          ___flsub@a 00A0                            ___flsub@b 00A4  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00A0                   _PWM6_LoadDutyValue 1EC8  
           __size_of_TMR2_Initialize 000E                        _battery_state 016E  
 __end_of_Init_Battery_State_Machine 1F0E           _Init_Battery_State_Machine 1EF4  
                  __size_of___xxtofl 0095                  __size_of_readAnalog 014C  
                __size_of_readButton 0087                  ?_PWM6_LoadDutyValue 0070  
                __end_of_LCDWriteInt 1800                            __pnvBANK2 0164  
        __size_of_PWM1_LoadDutyValue 0016                            _main$1352 00D4  
                          _main$1353 00C8                            _main$1354 00DA  
                          _main$1355 00DC               _PIN_MANAGER_Initialize 1198  
         __size_of_LCDWriteCharacter 0058                             ?___aldiv 0070  
                           ?___fladd 0054                    __size_of_tempCalc 01E9  
                           ?___fldiv 0020                             ?___awdiv 0070  
                           ?___flmul 003A                             ?___flsub 00A0  
                           ?___fltol 003A                           ?__Umul8_16 0070  
                   LCDWriteInt@value 0028                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                            _eval_poly 1617  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003E  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                           _LCDClear 1FAE                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 1F89  
                          clear_ram0 1E45                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 084F                             _PIR4bits 0710  
                          main@MPPT0 00E7                            main@MPPT1 00CC  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0079                           ?_eval_poly 00A0  
                   __size_of_LCDInit 003B                          _LCDWriteInt 1747  
                           _Iflat_db 014D                    ??_TMR2_Initialize 0070  
                    readAnalog@value 003C                            frexp@eptr 0074  
                       ??_readAnalog 0028                         ??_readButton 0074  
            ??_OSCILLATOR_Initialize 0070                          ??__Umul8_16 0072  
               LCDWriteInt@numPlaces 002B                     __size_of___aldiv 0082  
                   __size_of___fladd 01FC                     __size_of___fldiv 018F  
                   __size_of___awdiv 0051                     __size_of___flmul 022C  
                   __size_of___flsub 0035                     __size_of___fltol 007F  
                   __size_of___lwmod 002C                          _readButtons 0147  
                           ___xxtofl 1582                             _channels 0153  
                           __ptext10 14FB                             __ptext11 0940  
                           __ptext20 112F                             __ptext12 1479  
                           __ptext21 1E6B                             __ptext13 1E9D  
                           __ptext30 1F2C                             __ptext22 1E5D  
                           __ptext14 080A                             __ptext31 1EDE  
                           __ptext23 1F4B                             __ptext15 12EA  
                           __ptext40 1393                             __ptext32 1EC8  
                           __ptext24 1198                             __ptext16 1299  
                           __ptext33 1EB2                             __ptext25 0801  
                           __ptext17 1582                             __ptext34 1747  
                           __ptext26 11CF                             __ptext18 13FA  
                           __ptext35 1FD4                             __ptext27 1FAE  
                           __ptext19 0A8C                             __ptext36 1248  
                           __ptext28 1E8A                             __ptext37 133B  
                           __ptext29 1EF4                             __ptext38 1F0E  
                           __ptext39 1F89                      LCDWriteInt@sign 002C  
                 __end_of_readAnalog 0A8C                            tempCalc@R 00B7  
                 __end_of_readButton 1582                    ??_TMR4_Initialize 0070  
                      __size_of_main 0592                 __CFG_WDTCWS$WDTCWS_7 0000  
                           _tempCalc 0C1B          PIN_MANAGER_Initialize@state 0070  
                           log@coeff 1800                          ??_eval_poly 00A8  
                        _sampleIndex 014F                   _PWM7_LoadDutyValue 1EDE  
        ?_Init_Battery_State_Machine 0070                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0031              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                     ??_ADC_Initialize 0070  
       PWM6_LoadDutyValue@dutyCycle6 0070                        __pstringtext1 1000  
                      __pstringtext2 1800                 ??_PWM7_LoadDutyValue 0072  
             __Umul8_16@multiplicand 0070                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075                         ___aldiv@sign 0021  
              _Battery_State_Machine 1393                        ___fladd@signs 0068  
     __end_of_PIN_MANAGER_Initialize 11CF                         ___fladd@aexp 0069  
                       ___fladd@bexp 006A           __end_of_PWM1_LoadDutyValue 1EC8  
               __Umul8_16@multiplier 0078                    __Umul8_16@product 0074  
                      main@IOutTotal 00D8  
